================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict
import sys

def input_line():
    return sys.stdin.readline().rstrip()

def extended_euclidean_algorithm(a_value, b_value):
    x_prev, y_prev, remainder_prev = 1, 0, a_value
    x_curr, y_curr, remainder_curr = 0, 1, b_value
    while remainder_prev != 1:
        quotient, remainder_new = divmod(remainder_curr, remainder_prev)
        x_prev, x_curr = x_curr - quotient * x_prev, x_prev
        y_prev, y_curr = y_curr - quotient * y_prev, y_prev
        remainder_prev, remainder_curr = remainder_new, remainder_prev
    return x_prev, y_prev

class ModularInteger(int):
    def __new__(cls, value=0, *args, **kwargs):
        return int.__new__(cls, value % MODULUS, *args, **kwargs)

    def __add__(self, other):
        return self.__class__(int.__add__(self, other))

    def __sub__(self, other):
        return self.__class__(int.__sub__(self, other))

    def __neg__(self):
        return self.__class__(int.__neg__(self))

    def __mul__(self, other):
        return self.__class__(int.__mul__(self, other))

    def __floordiv__(self, other):
        inv, _ = extended_euclidean_algorithm(other, MODULUS)
        return self * inv

    def __pow__(self, exponent):
        return self.__class__(int.__pow__(self, exponent, MODULUS))

def minimum_excludant(values_set):
    for candidate in range(GLOBAL_N + 1):
        if candidate not in values_set:
            return candidate

def grundy_calculation(edge_dict):
    grundy_dict = {}
    for index in range(GLOBAL_N, 0, -1):
        if index not in edge_dict:
            continue
        mex_set = {grundy_dict.get(neigh, 0) for neigh in edge_dict[index]}
        grundy_value = minimum_excludant(mex_set)
        if grundy_value:
            grundy_dict[index] = grundy_value
    grundy_sum = defaultdict(ModularInteger)
    grundy_sum[0] = (GLOBAL_BASIS**(GLOBAL_N + 1) - GLOBAL_BASIS) // (GLOBAL_BASIS - 1)
    previous_index = 0
    cumulative_weight = ModularInteger(1)
    for index in range(1, GLOBAL_N + 1):
        if index in grundy_dict:
            cumulative_weight *= GLOBAL_BASIS ** (index - previous_index)
            grundy_sum[grundy_dict[index]] += cumulative_weight
            grundy_sum[0] -= cumulative_weight
            previous_index, cumulative_weight = index, cumulative_weight
    return grundy_sum

def edge_reader():
    edge_count = int(input_line())
    edge_structure = defaultdict(list)
    for edge_index in range(edge_count):
        node_a, node_b = sorted(map(int, input_line().split()))
        edge_structure[node_a].append(node_b)
    return edge_structure

def problem_solver(node_count, edges_list):
    grundy_sums = list(map(grundy_calculation, edges_list))
    result_sum = ModularInteger(0)
    for grundy_x, sum_x in grundy_sums[0].items():
        for grundy_y, sum_y in grundy_sums[1].items():
            grundy_z = grundy_x ^ grundy_y
            sum_z = grundy_sums[2][grundy_z]
            if sum_z:
                result_sum += sum_x * sum_y * sum_z
    return result_sum

MODULUS = 998244353
GLOBAL_BASIS = ModularInteger(10) ** 18
GLOBAL_N = int(input_line())

EDGE_LIST = [edge_reader() for _ in range(3)]

print(problem_solver(GLOBAL_N, EDGE_LIST))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.005216360092163
    2. 'default' → logprob: -1.380216360092163
    3. 'abc' → logprob: -1.755216360092163
    4. 'Counter' → logprob: -2.130216360092163
    5. ' defaultdict' → logprob: -2.630216360092163
    6. ' Counter' → logprob: -5.005216598510742
    7. 'named' → logprob: -5.380216598510742
    8. ' abc' → logprob: -5.755216598510742
    9. ' deque' → logprob: -6.380216598510742
    10. '```' → logprob: -6.630216598510742

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033603431656956673
    2. '(
' → logprob: -7.003360271453857
    3. '\n' → logprob: -7.253360271453857
    4. '\(' → logprob: -7.503360271453857
    5. '\' → logprob: -7.628360271453857
    6. '```' → logprob: -7.878360271453857
    7. 'newline' → logprob: -9.503360748291016
    8. '()' → logprob: -10.003360748291016
    9. '
' → logprob: -11.003360748291016
    10. '`' → logprob: -11.128360748291016

Token 5: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010200119577348232
    2. '(
' → logprob: -5.010200023651123
    3. '()' → logprob: -6.135200023651123
    4. 'def' → logprob: -8.135200500488281
    5. '(

' → logprob: -8.510200500488281
    6. 'd' → logprob: -9.135200500488281
    7. '```' → logprob: -9.260200500488281
    8. '\' → logprob: -9.635200500488281
    9. ',' → logprob: -9.760200500488281
    10. '\(' → logprob: -10.135200500488281

Token 6: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.04284251481294632
    2. ' sys' → logprob: -3.4178426265716553
    3. ' re' → logprob: -5.167842388153076
    4. ' collections' → logprob: -6.292842388153076
    5. ' json' → logprob: -6.917842388153076
    6. ' itertools' → logprob: -8.667842864990234
    7. ' pandas' → logprob: -9.167842864990234
    8. ' random' → logprob: -9.292842864990234
    9. ' ' → logprob: -9.542842864990234
    10. ' requests' → logprob: -9.792842864990234

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5164355039596558
    2. '
' → logprob: -1.3914355039596558
    3. '.' → logprob: -2.6414356231689453
    4. '\' → logprob: -3.1414356231689453
    5. '```' → logprob: -4.141435623168945
    6. '

' → logprob: -4.391435623168945
    7. '[' → logprob: -6.016435623168945
    8. 'newline' → logprob: -6.141435623168945
    9. '.
' → logprob: -6.641435623168945
    10. 'import' → logprob: -6.641435623168945

Token 8: 'def' (ID: 1314)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.5180143117904663
    2. 'def' → logprob: -1.6430143117904663
    3. 'for' → logprob: -1.7680143117904663
    4. '
' → logprob: -2.393014430999756
    5. '`' → logprob: -2.768014430999756
    6. '```' → logprob: -3.268014430999756
    7. 'default' → logprob: -3.268014430999756
    8. '\' → logprob: -3.518014430999756
    9. 'input' → logprob: -4.018014430999756
    10. '=' → logprob: -4.018014430999756

Token 9: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005589463748037815
    2. ' defaultdict' → logprob: -5.505589485168457
    3. ' process' → logprob: -7.505589485168457
    4. ' space' → logprob: -8.630589485168457
    5. ' read' → logprob: -8.630589485168457
    6. ' main' → logprob: -9.630589485168457
    7. ' calculate' → logprob: -9.880589485168457
    8. ' ' → logprob: -10.005589485168457
    9. ' def' → logprob: -10.130589485168457
    10. ' find' → logprob: -10.255589485168457

Token 10: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011097323149442673
    2. '_' → logprob: -7.501109600067139
    3. '()' → logprob: -8.751110076904297
    4. '("("' → logprob: -9.501110076904297
    5. '('' → logprob: -9.626110076904297
    6. '(
' → logprob: -10.501110076904297
    7. ')' → logprob: -10.501110076904297
    8. ' (' → logprob: -10.626110076904297
    9. '("")' → logprob: -10.751110076904297
    10. '_parent' → logprob: -11.126110076904297

Token 11: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008690637187100947
    2. '()' → logprob: -7.375869274139404
    3. '(' → logprob: -8.750868797302246
    4. ' ():' → logprob: -9.625868797302246
    5. '():
' → logprob: -11.875868797302246
    6. '):' → logprob: -12.000868797302246
    7. ':' → logprob: -13.625868797302246
    8. '(prompt' → logprob: -14.500868797302246
    9. ' ()' → logprob: -14.625868797302246
    10. 's' → logprob: -14.750868797302246

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014586523175239563
    2. ' return' → logprob: -4.264586448669434
    3. 'return' → logprob: -8.264586448669434
    4. '    ' → logprob: -9.139586448669434
    5. '()' → logprob: -11.014586448669434
    6. '    
' → logprob: -11.639586448669434
    7. '	return' → logprob: -11.889586448669434
    8. ' ' → logprob: -12.514586448669434
    9. ' input' → logprob: -12.764586448669434
    10. '<|end|>' → logprob: -12.764586448669434

Token 13: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4049489200115204
    2. 'return' (adapté à ' return') → logprob: -1.1549489498138428
    3. '   ' → logprob: -4.029948711395264
    4. 'try' → logprob: -10.279949188232422
    5. ' sys' → logprob: -10.529949188232422
    6. 'input' → logprob: -10.529949188232422
    7. ' input' → logprob: -10.779949188232422
    8. ' try' → logprob: -11.154949188232422
    9. 'sys' → logprob: -11.904949188232422
    10. ' ' → logprob: -12.529949188232422

Token 14: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.013440554030239582
    2. 'sys' → logprob: -4.3884406089782715
    3. ' input' → logprob: -7.2634406089782715
    4. 'input' → logprob: -8.388440132141113
    5. ' ' → logprob: -14.013440132141113
    6. '(sys' → logprob: -14.263440132141113
    7. '=sys' → logprob: -14.888440132141113
    8. '	sys' → logprob: -15.763440132141113
    9. ' system' → logprob: -16.51344108581543
    10. ' ' → logprob: -16.76344108581543

Token 15: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006159355980344117
    2. '.stdout' → logprob: -7.875616073608398
    3. '.' → logprob: -9.000616073608398
    4. '.readline' → logprob: -9.250616073608398
    5. '.std' → logprob: -11.875616073608398
    6. '.argv' → logprob: -12.000616073608398
    7. '.input' → logprob: -13.500616073608398
    8. '.stderr' → logprob: -14.000616073608398
    9. '.exit' → logprob: -14.750616073608398
    10. 'stdin' → logprob: -16.0006160736084

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00018661346985027194
    2. '.' → logprob: -8.625186920166016
    3. '.read' → logprob: -12.500186920166016
    4. '.readlines' → logprob: -13.000186920166016
    5. '().' → logprob: -14.750186920166016
    6. ' readline' → logprob: -14.875186920166016
    7. ' .' → logprob: -16.125186920166016
    8. '.Read' → logprob: -17.875186920166016
    9. '```' → logprob: -18.125186920166016
    10. '.stdin' → logprob: -18.250186920166016

Token 17: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0035052767489105463
    2. '().' → logprob: -6.003505229949951
    3. '()
' → logprob: -7.753505229949951
    4. '()\' → logprob: -8.25350570678711
    5. '(' → logprob: -8.75350570678711
    6. '()

' → logprob: -9.37850570678711
    7. ' ()' → logprob: -10.37850570678711
    8. '())' → logprob: -10.75350570678711
    9. '()(' → logprob: -11.12850570678711
    10. '```' → logprob: -12.00350570678711

Token 18: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0181526318192482
    2. 'rstrip' → logprob: -4.018152713775635
    3. ' strip' → logprob: -13.143152236938477
    4. '_strip' → logprob: -14.768152236938477
    5. 'str' → logprob: -15.893152236938477
    6. 'rst' → logprob: -16.643152236938477
    7. '```' → logprob: -17.018152236938477
    8. 'decode' → logprob: -17.518152236938477
    9. '-strip' → logprob: -17.768152236938477
    10. '(strip' → logprob: -18.518152236938477

Token 19: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15245090425014496
    2. '(' → logprob: -2.0274507999420166
    3. '\n' → logprob: -5.027451038360596
    4. '\' → logprob: -7.277451038360596
    5. '(\' → logprob: -7.652451038360596
    6. '(
' → logprob: -7.777451038360596
    7. '()
' → logprob: -7.777451038360596
    8. '()\' → logprob: -8.027450561523438
    9. ')' → logprob: -8.652450561523438
    10. '('\' → logprob: -8.902450561523438

Token 20: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23557941615581512
    2. 'd' → logprob: -1.7355793714523315
    3. 'data' → logprob: -4.235579490661621
    4. 'n' → logprob: -4.235579490661621
    5. 'class' → logprob: -6.360579490661621
    6. '\' → logprob: -7.610579490661621
    7. 'de' → logprob: -7.860579490661621
    8. '#' → logprob: -7.860579490661621
    9. '
' → logprob: -7.985579490661621
    10. 'a' → logprob: -7.985579490661621

Token 21: ' extended' (ID: 17290)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.21359668672084808
    2. ' input' → logprob: -1.8385967016220093
    3. '_' → logprob: -4.338596820831299
    4. ' solve' → logprob: -4.713596820831299
    5. '_input' → logprob: -4.963596820831299
    6. ' ' → logprob: -7.338596820831299
    7. 'input' → logprob: -7.338596820831299
    8. ' process' → logprob: -8.21359634399414
    9. ' read' → logprob: -8.21359634399414
    10. '_main' → logprob: -8.21359634399414

Token 22: '_e' (ID: 4618)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.019432852044701576
    2. '_' → logprob: -4.01943302154541
    3. '_e' → logprob: -7.26943302154541
    4. '_tuple' → logprob: -10.01943302154541
    5. '_factor' → logprob: -10.14443302154541
    6. '_function' → logprob: -10.14443302154541
    7. '_attr' → logprob: -10.51943302154541
    8. '_add' → logprob: -10.64443302154541
    9. '_append' → logprob: -10.76943302154541
    10. '_parse' → logprob: -10.76943302154541

Token 23: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0003607296966947615
    2. 'ucl' → logprob: -8.375360488891602
    3. 'uc' → logprob: -9.750360488891602
    4. 'uler' → logprob: -11.250360488891602
    5. 'xp' → logprob: -11.250360488891602
    6. 'ucle' → logprob: -11.375360488891602
    7. 'a' → logprob: -11.500360488891602
    8. 'xt' → logprob: -11.750360488891602
    9. 'v' → logprob: -12.000360488891602
    10. 'g' → logprob: -12.625360488891602

Token 24: 'clidean' (ID: 116188)
  Prédit: 'clid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clid' → logprob: -0.0010010129772126675
    2. 'cl' → logprob: -7.626000881195068
    3. 'clidean' → logprob: -7.626000881195068
    4. '_' → logprob: -11.751001358032227
    5. 'cline' → logprob: -12.251001358032227
    6. 'cls' → logprob: -12.876001358032227
    7. '_cl' → logprob: -13.001001358032227
    8. 'cli' → logprob: -13.126001358032227
    9. 'cled' → logprob: -13.501001358032227
    10. '   ' → logprob: -13.501001358032227

Token 25: '_algorithm' (ID: 154851)
  Prédit: '_algorithm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_algorithm' → logprob: -0.009273014031350613
    2. '(' → logprob: -5.384273052215576
    3. '_' → logprob: -5.759273052215576
    4. '(a' → logprob: -7.259273052215576
    5. '_formula' → logprob: -9.009272575378418
    6. '(_' → logprob: -9.009272575378418
    7. '_factor' → logprob: -9.134272575378418
    8. '_function' → logprob: -9.509272575378418
    9. ' (' → logprob: -10.134272575378418
    10. '_solver' → logprob: -10.134272575378418

Token 26: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07288771122694016
    2. ' (' → logprob: -2.697887659072876
    3. '<|end|>' → logprob: -6.697887897491455
    4. '_' → logprob: -7.197887897491455
    5. '(n' → logprob: -8.322887420654297
    6. '<|end|>' → logprob: -8.572887420654297
    7. ' ' → logprob: -8.822887420654297
    8. '(a' → logprob: -9.072887420654297
    9. '(x' → logprob: -9.572887420654297
    10. ')' → logprob: -10.822887420654297

Token 27: '_value' (ID: 6734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004161975812166929
    2. ' ,' → logprob: -5.504161834716797
    3. ',b' → logprob: -10.504161834716797
    4. ')' → logprob: -10.629161834716797
    5. ',a' → logprob: -11.504161834716797
    6. ' ' → logprob: -11.879161834716797
    7. '<|end|>' → logprob: -12.504161834716797
    8. '   ' → logprob: -13.254161834716797
    9. ',)' → logprob: -13.629161834716797
    10. ',n' → logprob: -14.004161834716797

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025987226981669664
    2. ' ,' → logprob: -6.377598762512207
    3. ')' → logprob: -7.502598762512207
    4. ',a' → logprob: -9.377598762512207
    5. '_,' → logprob: -9.502598762512207
    6. '):' → logprob: -10.252598762512207
    7. ',)' → logprob: -10.627598762512207
    8. 's' → logprob: -10.752598762512207
    9. ',b' → logprob: -10.752598762512207
    10. ',n' → logprob: -11.252598762512207

Token 29: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6327428221702576
    2. ' b' → logprob: -0.7577428221702576
    3. ' ' → logprob: -9.382742881774902
    4. ')' → logprob: -11.382742881774902
    5. 'a' → logprob: -11.507742881774902
    6. 'n' → logprob: -11.882742881774902
    7. '   ' → logprob: -12.132742881774902
    8. ' n' → logprob: -12.632742881774902
    9. 'm' → logprob: -12.882742881774902
    10. '```' → logprob: -12.882742881774902

Token 30: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.24453353881835938
    2. '_' → logprob: -1.7445335388183594
    3. ')' → logprob: -3.9945335388183594
    4. '_)' → logprob: -4.244533538818359
    5. ')_' → logprob: -4.744533538818359
    6. '_val' → logprob: -7.744533538818359
    7. '):' → logprob: -9.24453353881836
    8. ' _' → logprob: -9.86953353881836
    9. '_Value' → logprob: -10.36953353881836
    10. '_values' → logprob: -10.61953353881836

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007003428414463997
    2. ')' → logprob: -5.382003307342529
    3. ',' → logprob: -6.132003307342529
    4. '):
' → logprob: -9.007003784179688
    5. '   ' → logprob: -10.007003784179688
    6. ' ):' → logprob: -11.257003784179688
    7. ':' → logprob: -11.507003784179688
    8. '),' → logprob: -12.382003784179688
    9. ' ' → logprob: -13.257003784179688
    10. '<|end|>' → logprob: -13.257003784179688

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02732124924659729
    2. ':' → logprob: -3.9023213386535645
    3. '    
' → logprob: -6.4023213386535645
    4. '    ' → logprob: -7.1523213386535645
    5. ' :' → logprob: -7.1523213386535645
    6. '):' → logprob: -7.6523213386535645
    7. '<|end|>' → logprob: -7.6523213386535645
    8. '       ' → logprob: -7.7773213386535645
    9. '	return' → logprob: -8.152320861816406
    10. ' ' → logprob: -8.277320861816406

Token 33: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1643625646829605
    2. '    ' → logprob: -2.289362668991089
    3. ' if' → logprob: -4.16436243057251
    4. '     
' → logprob: -4.28936243057251
    5. ' 
' → logprob: -4.78936243057251
    6. '    
' → logprob: -4.78936243057251
    7. ' ' → logprob: -7.16436243057251
    8. ' a' → logprob: -7.78936243057251
    9. '```' → logprob: -7.91436243057251
    10. ' \' → logprob: -7.91436243057251

Token 34: '_prev' (ID: 60491)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26104557514190674
    2. '_' → logprob: -1.7610455751419067
    3. '_,' → logprob: -3.011045455932617
    4. '_prev' → logprob: -5.761045455932617
    5. ' =' → logprob: -6.636045455932617
    6. ' ,' → logprob: -7.136045455932617
    7. '0' → logprob: -7.136045455932617
    8. '_next' → logprob: -7.136045455932617
    9. '=' → logprob: -7.761045455932617
    10. 's' → logprob: -8.386045455932617

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004637434147298336
    2. ' =' → logprob: -6.004637241363525
    3. '=' → logprob: -6.504637241363525
    4. ' ,' → logprob: -7.379637241363525
    5. '_,' → logprob: -11.004637718200684
    6. ',x' → logprob: -11.379637718200684
    7. ' ' → logprob: -12.504637718200684
    8. '_prev' → logprob: -13.379637718200684
    9. '_' → logprob: -13.879637718200684
    10. 's' → logprob: -14.379637718200684

Token 36: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2031247913837433
    2. ' y' → logprob: -2.453124761581421
    3. '0' → logprob: -2.953124761581421
    4. 'x' → logprob: -3.453124761581421
    5. '1' → logprob: -4.703125
    6. ' ' → logprob: -5.953125
    7. ' x' → logprob: -6.078125
    8. '   ' → logprob: -11.328125
    9. '	y' → logprob: -13.328125
    10. '  ' → logprob: -13.453125

Token 37: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.010159047320485115
    2. '_' → logprob: -4.635159015655518
    3. 'prev' → logprob: -8.260159492492676
    4. '_next' → logprob: -9.760159492492676
    5. '_=' → logprob: -10.885159492492676
    6. '_previous' → logprob: -11.385159492492676
    7. '<|end|>' → logprob: -11.760159492492676
    8. '0' → logprob: -12.010159492492676
    9. '_curr' → logprob: -12.135159492492676
    10. ' =' → logprob: -12.385159492492676

Token 38: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1972612738609314
    2. ',' → logprob: -1.9472613334655762
    3. '=' → logprob: -3.322261333465576
    4. ' ,' → logprob: -8.197260856628418
    5. '<|end|>' → logprob: -12.447260856628418
    6. ' ' → logprob: -12.572260856628418
    7. '<|end|>' → logprob: -13.822260856628418
    8. '0' → logprob: -14.197260856628418
    9. ')' → logprob: -14.572260856628418
    10. ' =
' → logprob: -14.697260856628418

Token 39: ' remainder' (ID: 47056)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13328389823436737
    2. '0' → logprob: -3.258283853530884
    3. ' ' → logprob: -3.383283853530884
    4. '1' → logprob: -3.508283853530884
    5. ' x' → logprob: -3.883283853530884
    6. '=' → logprob: -6.758284091949463
    7. ' =' → logprob: -8.258283615112305
    8. 'u' → logprob: -8.633283615112305
    9. '    ' → logprob: -10.133283615112305
    10. '   ' → logprob: -10.258283615112305

Token 40: '_prev' (ID: 60491)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05262341350317001
    2. ',' → logprob: -3.0526235103607178
    3. '=' → logprob: -5.802623271942139
    4. 's' → logprob: -7.802623271942139
    5. '_' → logprob: -8.677623748779297
    6. '<|end|>' → logprob: -8.802623748779297
    7. '_prev' → logprob: -8.927623748779297
    8. '<|end|>' → logprob: -10.052623748779297
    9. ' ,' → logprob: -10.552623748779297
    10. ' ' → logprob: -11.177623748779297

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02188042551279068
    2. ',' → logprob: -4.146880626678467
    3. '=' → logprob: -5.146880626678467
    4. ' ,' → logprob: -11.771880149841309
    5. ' ' → logprob: -13.771880149841309
    6. '<|end|>' → logprob: -14.021880149841309
    7. 's' → logprob: -14.771880149841309
    8. '   ' → logprob: -15.271880149841309
    9. '  ' → logprob: -15.271880149841309
    10. ' =
' → logprob: -15.521880149841309

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002678920282050967
    2. ' ' → logprob: -8.37526798248291
    3. '(' → logprob: -10.37526798248291
    4. '0' → logprob: -12.75026798248291
    5. '   ' → logprob: -13.87526798248291
    6. ' (' → logprob: -14.12526798248291
    7. '[' → logprob: -14.50026798248291
    8. 'a' → logprob: -14.87526798248291
    9. '<|end|>' → logprob: -15.87526798248291
    10. ',' → logprob: -16.000267028808594

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020187153131701052
    2. 'a' → logprob: -8.625202178955078
    3. '0' → logprob: -11.125202178955078
    4. '(' → logprob: -12.125202178955078
    5. ' ' → logprob: -13.500202178955078
    6. '(a' → logprob: -15.500202178955078
    7. '   ' → logprob: -16.750202178955078
    8. 'b' → logprob: -16.750202178955078
    9. '[' → logprob: -16.875202178955078
    10. '```' → logprob: -17.375202178955078

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014858200447633862
    2. ' ,' → logprob: -6.751485824584961
    3. '<|end|>' → logprob: -8.501485824584961
    4. ' ' → logprob: -10.001485824584961
    5. '0' → logprob: -10.126485824584961
    6. '<|end|>' → logprob: -10.876485824584961
    7. ',None' → logprob: -13.501485824584961
    8. '  ' → logprob: -14.126485824584961
    9. '```' → logprob: -14.813985824584961
    10. '.' → logprob: -15.063985824584961

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '<|end|>' → logprob: -16.377185821533203
    4. '   ' → logprob: -16.752185821533203
    5. '  ' → logprob: -18.002185821533203
    6. '    ' → logprob: -18.627185821533203
    7. '1' → logprob: -18.752185821533203
    8. '۰' → logprob: -19.502185821533203
    9. ' ' → logprob: -20.377185821533203
    10. '<|end|>' → logprob: -21.502185821533203

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009117019944824278
    2. ' ' → logprob: -7.000911712646484
    3. '<|end|>' → logprob: -16.500911712646484
    4. '1' → logprob: -16.875911712646484
    5. '   ' → logprob: -17.625911712646484
    6. '  ' → logprob: -17.750911712646484
    7. ' ' → logprob: -18.875911712646484
    8. '۰' → logprob: -19.063411712646484
    9. '    ' → logprob: -19.188411712646484
    10. '2' → logprob: -19.750911712646484

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025022942572832108
    2. ' ,' → logprob: -6.25250244140625
    3. '<|end|>' → logprob: -7.62750244140625
    4. '<|end|>' → logprob: -10.25250244140625
    5. ',
' → logprob: -11.12750244140625
    6. ' ' → logprob: -11.12750244140625
    7. ',a' → logprob: -12.50250244140625
    8. ',line' → logprob: -12.75250244140625
    9. ',b' → logprob: -13.12750244140625
    10. ',n' → logprob: -13.37750244140625

Token 48: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20141489803791046
    2. ' a' → logprob: -1.701414942741394
    3. '	a' → logprob: -14.451415061950684
    4. ' ' → logprob: -14.576415061950684
    5. '<|end|>' → logprob: -15.826415061950684
    6. '   ' → logprob: -15.951415061950684
    7. 'b' → logprob: -16.201414108276367
    8. '    ' → logprob: -16.326414108276367
    9. '_a' → logprob: -17.076414108276367
    10. ',a' → logprob: -17.201414108276367

Token 49: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.726595241460018e-05
    2. '_' → logprob: -10.50003719329834
    3. 'value' → logprob: -13.25003719329834
    4. '-value' → logprob: -13.62503719329834
    5. '_values' → logprob: -13.62503719329834
    6. '_val' → logprob: -14.00003719329834
    7. ' _' → logprob: -14.00003719329834
    8. '<|end|>' → logprob: -14.00003719329834
    9. '_VALUE' → logprob: -14.37503719329834
    10. ')' → logprob: -14.75003719329834

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29502761363983154
    2. '   ' → logprob: -2.420027732849121
    3. ',' → logprob: -2.545027732849121
    4. ' ' → logprob: -3.920027732849121
    5. '    
' → logprob: -3.920027732849121
    6. '<|end|>' → logprob: -4.545027732849121
    7. 'x' → logprob: -4.920027732849121
    8. ',
' → logprob: -5.295027732849121
    9. '  
' → logprob: -5.545027732849121
    10. ' 
' → logprob: -5.670027732849121

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030409356113523245
    2. 'x' → logprob: -5.878040790557861
    3. ',' → logprob: -9.00304126739502
    4. '    
' → logprob: -9.62804126739502
    5. '
' → logprob: -10.62804126739502
    6. ' x' → logprob: -12.25304126739502
    7. '```' → logprob: -12.37804126739502
    8. '  ' → logprob: -12.87804126739502
    9. '    ' → logprob: -13.37804126739502
    10. ' ' → logprob: -13.50304126739502

Token 52: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.32822415232658386
    2. ' x' → logprob: -1.5782241821289062
    3. '   ' → logprob: -2.7032241821289062
    4. ' ' → logprob: -5.328224182128906
    5. '	x' → logprob: -7.703224182128906
    6. '    ' → logprob: -7.828224182128906
    7. '<|end|>' → logprob: -8.078224182128906
    8. '  ' → logprob: -8.953224182128906
    9. ',' → logprob: -8.953224182128906
    10. ',x' → logprob: -9.578224182128906

Token 53: '_curr' (ID: 92432)
  Prédit: '_current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -1.2695050239562988
    2. '_next' → logprob: -1.2695050239562988
    3. '_curr' → logprob: -1.8945050239562988
    4. ',' → logprob: -2.019505023956299
    5. '_' → logprob: -2.644505023956299
    6. '_,' → logprob: -2.769505023956299
    7. '_cur' → logprob: -4.894505023956299
    8. '_s' → logprob: -5.394505023956299
    9. '_prev' → logprob: -5.519505023956299
    10. '_tmp' → logprob: -7.019505023956299

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005102122202515602
    2. ' ,' → logprob: -5.380102157592773
    3. ' =' → logprob: -8.130102157592773
    4. '=' → logprob: -8.630102157592773
    5. '<|end|>' → logprob: -12.880102157592773
    6. ' ' → logprob: -13.380102157592773
    7. ' x' → logprob: -14.130102157592773
    8. 's' → logprob: -14.255102157592773
    9. ',x' → logprob: -14.380102157592773
    10. ',y' → logprob: -14.630102157592773

Token 55: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6375852227210999
    2. ' y' → logprob: -1.012585163116455
    3. '1' → logprob: -2.512585163116455
    4. ' ' → logprob: -3.637585163116455
    5. '<|end|>' → logprob: -7.512585163116455
    6. '0' → logprob: -8.762585639953613
    7. '  ' → logprob: -10.387585639953613
    8. '    ' → logprob: -11.887585639953613
    9. '	y' → logprob: -12.262585639953613
    10. '   ' → logprob: -12.262585639953613

Token 56: '_curr' (ID: 92432)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.718040406703949
    2. '<|end|>' → logprob: -1.9680404663085938
    3. '_,' → logprob: -2.0930404663085938
    4. ' =' → logprob: -2.3430404663085938
    5. '=' → logprob: -3.0930404663085938
    6. '_' → logprob: -3.3430404663085938
    7. '_prev' → logprob: -3.3430404663085938
    8. '_curr' → logprob: -3.5930404663085938
    9. ' ' → logprob: -6.093040466308594
    10. '<|end|>' → logprob: -6.343040466308594

Token 57: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.680772602558136
    2. ' =' → logprob: -1.0557725429534912
    3. ',' → logprob: -1.9307725429534912
    4. ' ,' → logprob: -7.18077278137207
    5. '<|end|>' → logprob: -10.30577278137207
    6. ' ' → logprob: -11.68077278137207
    7. '   ' → logprob: -13.55577278137207
    8. '```' → logprob: -13.80577278137207
    9. ':' → logprob: -13.93077278137207
    10. '<|end|>' → logprob: -13.93077278137207

Token 58: ' remainder' (ID: 47056)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20631976425647736
    2. 're' → logprob: -1.956319808959961
    3. ' ' → logprob: -3.206319808959961
    4. '0' → logprob: -6.706319808959961
    5. 'b' → logprob: -6.956319808959961
    6. ' =' → logprob: -7.581319808959961
    7. ' remainder' → logprob: -7.706319808959961
    8. '=' → logprob: -7.956319808959961
    9. ',' → logprob: -8.206319808959961
    10. '   ' → logprob: -8.831319808959961

Token 59: '_curr' (ID: 92432)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5233705043792725
    2. '_prev' → logprob: -1.2733705043792725
    3. '=' → logprob: -2.6483705043792725
    4. '_' → logprob: -3.6483705043792725
    5. '<|end|>' → logprob: -4.273370742797852
    6. ' ' → logprob: -5.273370742797852
    7. ',' → logprob: -5.398370742797852
    8. '   ' → logprob: -6.273370742797852
    9. '<|end|>' → logprob: -7.023370742797852
    10. '_,' → logprob: -7.273370742797852

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016156483441591263
    2. '=' → logprob: -4.1411566734313965
    3. ',' → logprob: -9.266156196594238
    4. ' ,' → logprob: -11.016156196594238
    5. ' ' → logprob: -11.516156196594238
    6. ' =",' → logprob: -15.391156196594238
    7. '<|end|>' → logprob: -15.391156196594238
    8. '   ' → logprob: -16.266157150268555
    9. ' =
' → logprob: -16.516157150268555
    10. '```' → logprob: -16.641157150268555

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22541490197181702
    2. ' ' → logprob: -1.6004148721694946
    3. '    ' → logprob: -14.350415229797363
    4. ' (' → logprob: -15.350415229797363
    5. '   ' → logprob: -15.350415229797363
    6. '```' → logprob: -15.412915229797363
    7. '  ' → logprob: -15.475415229797363
    8. ' ' → logprob: -15.662915229797363
    9. '(' → logprob: -15.850415229797363
    10. ',' → logprob: -16.100414276123047

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011490292381495237
    2. 'b' → logprob: -7.0011491775512695
    3. ' ' → logprob: -8.37614917755127
    4. ' b' → logprob: -11.87614917755127
    5. '-' → logprob: -16.251148223876953
    6. '```' → logprob: -16.251148223876953
    7. ',' → logprob: -17.313648223876953
    8. '    ' → logprob: -17.376148223876953
    9. ',b' → logprob: -17.376148223876953
    10. '   ' → logprob: -17.438648223876953

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0420963317155838
    2. '<|end|>' → logprob: -3.4170963764190674
    3. ' ,' → logprob: -4.792096138000488
    4. '<|end|>' → logprob: -9.292096138000488
    5. ' ' → logprob: -10.917096138000488
    6. '‌,' → logprob: -12.917096138000488
    7. '0' → logprob: -13.917096138000488
    8. ')' → logprob: -14.542096138000488
    9. '   ' → logprob: -14.604596138000488
    10. '_,' → logprob: -15.104596138000488

Token 64: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42956963181495667
    2. '1' → logprob: -1.0545696020126343
    3. '<|end|>' → logprob: -7.054569721221924
    4. '0' → logprob: -13.179569244384766
    5. ' ' → logprob: -13.304569244384766
    6. '```' → logprob: -14.304569244384766
    7. '<|end|>' → logprob: -14.429569244384766
    8. '  ' → logprob: -15.679569244384766
    9. 'space' → logprob: -17.054569244384766
    10. 's' → logprob: -17.617069244384766

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -19.8750057220459
    4. '  ' → logprob: -21.2500057220459
    5. '   ' → logprob: -21.6250057220459
    6. '0' → logprob: -21.7500057220459
    7. '１' → logprob: -22.2500057220459
    8. '    ' → logprob: -22.7500057220459
    9. '-' → logprob: -22.8750057220459
    10. 'b' → logprob: -23.1250057220459

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009371895575895905
    2. ' ,' → logprob: -7.000936985015869
    3. '<|end|>' → logprob: -10.625937461853027
    4. '<|end|>' → logprob: -14.500937461853027
    5. ' ' → logprob: -15.500937461853027
    6. '‌,' → logprob: -16.00093650817871
    7. ',
' → logprob: -16.12593650817871
    8. 'a' → logprob: -16.25093650817871
    9. ',b' → logprob: -16.25093650817871
    10. '```' → logprob: -16.62593650817871

Token 67: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.016212550923228264
    2. 'b' → logprob: -4.141212463378906
    3. ' ' → logprob: -8.641212463378906
    4. ' ' → logprob: -13.766212463378906
    5. '```' → logprob: -15.766212463378906
    6. '	b' → logprob: -16.516212463378906
    7. ' `' → logprob: -16.641212463378906
    8. '<|end|>' → logprob: -17.516212463378906
    9. '  ' → logprob: -17.578712463378906
    10. ' \(' → logprob: -17.891212463378906

Token 68: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0005616117268800735
    2. '_' → logprob: -7.500561714172363
    3. '_val' → logprob: -12.750561714172363
    4. '_Value' → logprob: -13.125561714172363
    5. '_VALUE' → logprob: -13.750561714172363
    6. 'alue' → logprob: -13.875561714172363
    7. ' _' → logprob: -14.750561714172363
    8. 'value' → logprob: -15.125561714172363
    9. '<|end|>' → logprob: -15.375561714172363
    10. '_values' → logprob: -15.500561714172363

Token 69: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6669004559516907
    2. ' while' → logprob: -1.291900396347046
    3. ' ' → logprob: -2.916900396347046
    4. '
' → logprob: -3.041900396347046
    5. '\n' → logprob: -3.791900396347046
    6. ' 
' → logprob: -3.791900396347046
    7. 'while' → logprob: -4.291900634765625
    8. '<|end|>' → logprob: -4.291900634765625
    9. '    
' → logprob: -5.166900634765625
    10. '	while' → logprob: -5.166900634765625

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0933462455868721
    2. '
' → logprob: -2.968346357345581
    3. '    
' → logprob: -4.093346118927002
    4. ' while' → logprob: -4.343346118927002
    5. ' 
' → logprob: -6.343346118927002
    6. 'while' → logprob: -6.343346118927002
    7. '<|end|>' → logprob: -6.343346118927002
    8. '```' → logprob: -7.093346118927002
    9. '	while' → logprob: -7.843346118927002
    10. '  
' → logprob: -7.968346118927002

Token 71: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.18091131746768951
    2. '   ' → logprob: -2.3059113025665283
    3. ' 
' → logprob: -3.8059113025665283
    4. '    
' → logprob: -4.055911540985107
    5. 'while' (adapté à ' while') → logprob: -4.680911540985107
    6. '
' → logprob: -5.180911540985107
    7. '```' → logprob: -6.180911540985107
    8. '   
' → logprob: -6.305911540985107
    9. '	while' → logprob: -6.555911540985107
    10. ' ' → logprob: -6.555911540985107

Token 72: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.0010334034450352192
    2. 're' → logprob: -6.876033306121826
    3. ' ' → logprob: -15.376033782958984
    4. ' re' → logprob: -15.626033782958984
    5. '(re' → logprob: -16.126033782958984
    6. 'rema' → logprob: -16.376033782958984
    7. '	re' → logprob: -16.626033782958984
    8. 'r' → logprob: -16.751033782958984
    9. 'rem' → logprob: -17.001033782958984
    10. ' not' → logprob: -17.501033782958984

Token 73: '_prev' (ID: 60491)
  Prédit: '_curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.0004998935619369149
    2. '_' → logprob: -7.625499725341797
    3. '_prev' → logprob: -11.875499725341797
    4. '>' → logprob: -13.625499725341797
    5. '_cur' → logprob: -14.125499725341797
    6. '__' → logprob: -14.375499725341797
    7. '_current' → logprob: -14.625499725341797
    8. ' _' → logprob: -14.625499725341797
    9. '```' → logprob: -14.625499725341797
    10. '_c' → logprob: -15.625499725341797

Token 74: ' !=' (ID: 1666)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.9351609945297241
    2. ' !=' → logprob: -1.3101609945297241
    3. '%' → logprob: -2.0601611137390137
    4. ' >' → logprob: -2.0601611137390137
    5. '>' → logprob: -2.8101611137390137
    6. '!=' → logprob: -4.185161113739014
    7. ' ' → logprob: -5.435161113739014
    8. ' >=' → logprob: -6.685161113739014
    9. ' and' → logprob: -6.810161113739014
    10. 'and' → logprob: -8.810160636901855

Token 75: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28115278482437134
    2. ' ' → logprob: -1.4061527252197266
    3. ' ' → logprob: -13.156152725219727
    4. '   ' → logprob: -15.531152725219727
    5. '```' → logprob: -16.593652725219727
    6. '  ' → logprob: -16.843652725219727
    7. '۰' → logprob: -17.156152725219727
    8. '=' → logprob: -17.406152725219727
    9. '1' → logprob: -17.656152725219727
    10. '_' → logprob: -17.718652725219727

Token 76: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.018150329589844
    4. '  ' → logprob: -18.268150329589844
    5. '   ' → logprob: -18.643150329589844
    6. '۰' → logprob: -19.018150329589844
    7. '```' → logprob: -19.268150329589844
    8. '​' → logprob: -20.018150329589844
    9. ' ' → logprob: -20.268150329589844
    10. '０' → logprob: -20.768150329589844

Token 77: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.043157096952199936
    2. ':' → logprob: -3.2931571006774902
    3. 'and' → logprob: -5.29315710067749
    4. ' :' → logprob: -10.043156623840332
    5. ' ' → logprob: -11.168156623840332
    6. ' or' → logprob: -11.293156623840332
    7. ':
' → logprob: -13.543156623840332
    8. '    ' → logprob: -13.918156623840332
    9. '   ' → logprob: -14.043156623840332
    10. '=' → logprob: -14.168156623840332

Token 78: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6952753663063049
    2. '       ' → logprob: -0.8202753663063049
    3. '   ' → logprob: -4.07027530670166
    4. '    ' → logprob: -4.07027530670166
    5. ' :' → logprob: -4.32027530670166
    6. ' ' → logprob: -5.19527530670166
    7. ' and' → logprob: -6.07027530670166
    8. '        ' → logprob: -6.94527530670166
    9. '<|end|>' → logprob: -6.94527530670166
    10. ':
' → logprob: -7.32027530670166

Token 79: ' quotient' (ID: 169302)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.1370667219161987
    2. ' ' → logprob: -1.2620667219161987
    3. '     
' → logprob: -1.3870667219161987
    4. ' 
' → logprob: -2.7620668411254883
    5. ' quotient' → logprob: -3.6370668411254883
    6. '       ' → logprob: -4.887066841125488
    7. '   ' → logprob: -5.137066841125488
    8. '```' → logprob: -5.262066841125488
    9. ' division' → logprob: -5.512066841125488
    10. ' ```' → logprob: -5.637066841125488

Token 80: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -7.755678961984813e-05
    2. ',' → logprob: -10.000077247619629
    3. '=' → logprob: -10.750077247619629
    4. ' ,' → logprob: -11.625077247619629
    5. ' ' → logprob: -13.500077247619629
    6. ' =
' → logprob: -16.000078201293945
    7. 's' → logprob: -16.250078201293945
    8. ')' → logprob: -17.000078201293945
    9. ' =
' → logprob: -17.000078201293945
    10. '  ' → logprob: -17.125078201293945

Token 81: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -4.179569077678025e-05
    2. 're' → logprob: -11.000041961669922
    3. ' ' → logprob: -11.250041961669922
    4. ' space' → logprob: -11.875041961669922
    5. ' rest' → logprob: -12.625041961669922
    6. ' _' → logprob: -14.625041961669922
    7. 'space' → logprob: -14.625041961669922
    8. 'rest' → logprob: -16.125041961669922
    9. '`' → logprob: -16.125041961669922
    10. '    ' → logprob: -16.500041961669922

Token 82: '_new' (ID: 13000)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2172385454177856
    2. '_curr' → logprob: -1.2172385454177856
    3. '_' → logprob: -1.5922385454177856
    4. '_prev' → logprob: -1.9672385454177856
    5. '=' → logprob: -2.967238426208496
    6. '_new' → logprob: -5.217238426208496
    7. '_=' → logprob: -6.217238426208496
    8. '_next' → logprob: -6.342238426208496
    9. '_current' → logprob: -6.717238426208496
    10. '_cur' → logprob: -7.342238426208496

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004663780331611633
    2. '=' → logprob: -5.379663944244385
    3. ',' → logprob: -10.379663467407227
    4. ' ' → logprob: -11.379663467407227
    5. ' ,' → logprob: -14.754663467407227
    6. '  ' → logprob: -15.129663467407227
    7. '   ' → logprob: -16.254663467407227
    8. '```' → logprob: -16.379663467407227
    9. ' =
' → logprob: -16.754663467407227
    10. ' ' → logprob: -17.004663467407227

Token 84: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.012654677033424377
    2. 'div' → logprob: -4.387654781341553
    3. ' remainder' → logprob: -9.012654304504395
    4. ' ' → logprob: -11.262654304504395
    5. '	div' → logprob: -12.137654304504395
    6. '(div' → logprob: -13.137654304504395
    7. 're' → logprob: -14.137654304504395
    8. ' rest' → logprob: -14.887654304504395
    9. '.div' → logprob: -14.887654304504395
    10. ' dividend' → logprob: -15.012654304504395

Token 85: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3249044418334961
    2. 're' → logprob: -2.449904441833496
    3. '(re' → logprob: -2.449904441833496
    4. 'rem' → logprob: -2.699904441833496
    5. 'ide' → logprob: -4.199904441833496
    6. ' remainder' → logprob: -4.199904441833496
    7. '(' → logprob: -5.949904441833496
    8. 'idend' → logprob: -6.949904441833496
    9. '(rem' → logprob: -7.074904441833496
    10. 'de' → logprob: -7.574904441833496

Token 86: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.20192916691303253
    2. 're' → logprob: -1.7019292116165161
    3. ' remainder' → logprob: -7.701929092407227
    4. '(' → logprob: -10.451929092407227
    5. 'rema' → logprob: -11.826929092407227
    6. '(rem' → logprob: -11.826929092407227
    7. '   ' → logprob: -12.201929092407227
    8. '	re' → logprob: -12.201929092407227
    9. ' (' → logprob: -12.201929092407227
    10. 'rem' → logprob: -13.701929092407227

Token 87: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.0001884015218820423
    2. 'ma' → logprob: -8.750188827514648
    3. 'm' → logprob: -10.500188827514648
    4. 'a' → logprob: -13.500188827514648
    5. 'inder' → logprob: -14.875188827514648
    6. 'main' → logprob: -15.375188827514648
    7. '_ma' → logprob: -16.50018882751465
    8. 'mand' → logprob: -16.62518882751465
    9. 'mai' → logprob: -17.00018882751465
    10. '```' → logprob: -17.00018882751465

Token 88: '_curr' (ID: 92432)
  Prédit: '_prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.038531627506017685
    2. '_curr' → logprob: -3.288531541824341
    3. '_new' → logprob: -7.78853178024292
    4. '_' → logprob: -9.913531303405762
    5. '_cur' → logprob: -11.038531303405762
    6. 'prev' → logprob: -12.538531303405762
    7. '_current' → logprob: -13.413531303405762
    8. 'curr' → logprob: -14.288531303405762
    9. '```' → logprob: -14.288531303405762
    10. ' _' → logprob: -14.538531303405762

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20156927406787872
    2. ' ,' → logprob: -1.7015693187713623
    3. ')' → logprob: -9.201569557189941
    4. ' )' → logprob: -11.076569557189941
    5. ' ' → logprob: -11.326569557189941
    6. ',)' → logprob: -11.826569557189941
    7. '),' → logprob: -12.076569557189941
    8. ' ),' → logprob: -12.951569557189941
    9. '<|end|>' → logprob: -13.201569557189941
    10. '1' → logprob: -13.701569557189941

Token 90: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.1798112541437149
    2. ' remainder' → logprob: -1.8048112392425537
    3. 'r' → logprob: -10.679811477661133
    4. '   ' → logprob: -11.554811477661133
    5. 'rem' → logprob: -11.554811477661133
    6. ' ' → logprob: -11.679811477661133
    7. '	re' → logprob: -12.304811477661133
    8. ' re' → logprob: -12.804811477661133
    9. 'rema' → logprob: -13.054811477661133
    10. ')' → logprob: -13.429811477661133

Token 91: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.00011081460979767144
    2. 'prev' → logprob: -9.375110626220703
    3. '_' → logprob: -10.750110626220703
    4. '_new' → logprob: -13.125110626220703
    5. '_pre' → logprob: -13.625110626220703
    6. 'Prev' → logprob: -14.750110626220703
    7. '	prev' → logprob: -15.875110626220703
    8. '_previous' → logprob: -16.375110626220703
    9. '_pred' → logprob: -16.750110626220703
    10. ')' → logprob: -16.750110626220703

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006859870045445859
    2. ')
' → logprob: -7.375686168670654
    3. ',' → logprob: -11.000685691833496
    4. ' )' → logprob: -11.125685691833496
    5. '),' → logprob: -12.500685691833496
    6. '))' → logprob: -12.625685691833496
    7. '       ' → logprob: -12.625685691833496
    8. '   ' → logprob: -12.875685691833496
    9. ')`' → logprob: -13.250685691833496
    10. ');' → logprob: -13.375685691833496

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26218146085739136
    2. '<|end|>' → logprob: -1.8871815204620361
    3. ')' → logprob: -3.512181520462036
    4. ' ' → logprob: -4.012181282043457
    5. '   ' → logprob: -4.512181282043457
    6. '        ' → logprob: -5.637181282043457
    7. '    ' → logprob: -5.762181282043457
    8. '\n' → logprob: -6.012181282043457
    9. ':' → logprob: -6.137181282043457
    10. '
' → logprob: -6.262181282043457

Token 94: ' x' (ID: 1215)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.817916750907898
    2. ' ' → logprob: -0.942916750907898
    3. 'x' (adapté à ' x') → logprob: -3.1929168701171875
    4. ' x' → logprob: -3.1929168701171875
    5. '        ' → logprob: -3.5679168701171875
    6. '\n' → logprob: -4.3179168701171875
    7. '<|end|>' → logprob: -4.5679168701171875
    8. '         
' → logprob: -4.6929168701171875
    9. '       ' → logprob: -5.3179168701171875
    10. '        
' → logprob: -5.6929168701171875

Token 95: '_prev' (ID: 60491)
  Prédit: '_curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.6268918514251709
    2. '_prev' → logprob: -1.251891851425171
    3. '_' → logprob: -1.751891851425171
    4. '_,' → logprob: -5.50189208984375
    5. ',' → logprob: -6.75189208984375
    6. '_cur' → logprob: -7.75189208984375
    7. '_new' → logprob: -7.87689208984375
    8. '_current' → logprob: -10.12689208984375
    9. '_next' → logprob: -10.12689208984375
    10. '_tmp' → logprob: -10.62689208984375

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003849133790936321
    2. ' ,' → logprob: -8.125385284423828
    3. ',x' → logprob: -9.625385284423828
    4. ' x' → logprob: -11.875385284423828
    5. ',y' → logprob: -13.250385284423828
    6. 'x' → logprob: -13.250385284423828
    7. '<|end|>' → logprob: -13.250385284423828
    8. '-' → logprob: -13.375385284423828
    9. ' -' → logprob: -14.125385284423828
    10. ' ' → logprob: -14.250385284423828

Token 97: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05917942523956299
    2. ' x' → logprob: -3.0591793060302734
    3. '<|end|>' → logprob: -4.559179306030273
    4. '<|end|>' → logprob: -10.559179306030273
    5. ' ' → logprob: -10.684179306030273
    6. '	x' → logprob: -12.559179306030273
    7. '_x' → logprob: -13.059179306030273
    8. '(x' → logprob: -13.309179306030273
    9. '%x' → logprob: -13.809179306030273
    10. ')x' → logprob: -14.184179306030273

Token 98: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.0007737740525044501
    2. '_' → logprob: -7.500773906707764
    3. 'curr' → logprob: -9.375773429870605
    4. '_cur' → logprob: -9.500773429870605
    5. '_,' → logprob: -10.500773429870605
    6. '_prev' → logprob: -11.125773429870605
    7. ',' → logprob: -11.625773429870605
    8. '_new' → logprob: -12.875773429870605
    9. '	curr' → logprob: -12.875773429870605
    10. '_current' → logprob: -13.875773429870605

Token 99: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2168220728635788
    2. '=' → logprob: -2.2168221473693848
    3. ' =' → logprob: -2.4668221473693848
    4. ' ,' → logprob: -7.216822147369385
    5. '<|end|>' → logprob: -8.341821670532227
    6. ' x' → logprob: -10.341821670532227
    7. '<|end|>' → logprob: -10.341821670532227
    8. 'x' → logprob: -10.716821670532227
    9. ' ' → logprob: -11.091821670532227
    10. ',x' → logprob: -11.466821670532227

Token 100: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25193214416503906
    2. ' x' → logprob: -1.501932144165039
    3. '(x' → logprob: -13.126932144165039
    4. '	x' → logprob: -14.501932144165039
    5. '   ' → logprob: -15.501932144165039
    6. ' ' → logprob: -16.12693214416504
    7. '  ' → logprob: -16.62693214416504
    8. ',x' → logprob: -16.75193214416504
    9. ' (' → logprob: -16.87693214416504
    10. ')x' → logprob: -17.37693214416504

Token 101: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -9.198043699143454e-05
    2. 'curr' → logprob: -9.625091552734375
    3. '_cur' → logprob: -11.625091552734375
    4. 'Curr' → logprob: -11.750091552734375
    5. '_prev' → logprob: -12.250091552734375
    6. '	curr' → logprob: -13.125091552734375
    7. '[curr' → logprob: -14.125091552734375
    8. '_' → logprob: -14.875091552734375
    9. ' curr' → logprob: -15.375091552734375
    10. '(curr' → logprob: -15.500091552734375

Token 102: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043219443410634995
    2. '-' → logprob: -3.7932193279266357
    3. ' -' → logprob: -4.418219566345215
    4. ' ,' → logprob: -4.918219566345215
    5. '<|end|>' → logprob: -8.918219566345215
    6. '-,' → logprob: -9.293219566345215
    7. ',x' → logprob: -10.168219566345215
    8. 'x' → logprob: -10.543219566345215
    9. ' ' → logprob: -10.668219566345215
    10. '+' → logprob: -10.793219566345215

Token 103: ' quotient' (ID: 169302)
  Prédit: 'quot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quot' → logprob: -0.5760895013809204
    2. ' quotient' → logprob: -0.8260895013809204
    3. ' quot' → logprob: -9.076089859008789
    4. ' ' → logprob: -11.701089859008789
    5. '   ' → logprob: -12.576089859008789
    6. 'quo' → logprob: -12.701089859008789
    7. 'x' → logprob: -12.701089859008789
    8. '```' → logprob: -12.701089859008789
    9. 'quote' → logprob: -13.201089859008789
    10. '  ' → logprob: -13.326089859008789

Token 104: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.011226310394704342
    2. '*' → logprob: -4.511226177215576
    3. '*x' → logprob: -8.886226654052734
    4. '<|end|>' → logprob: -10.636226654052734
    5. '*object' → logprob: -11.761226654052734
    6. ' ' → logprob: -12.511226654052734
    7. ',' → logprob: -13.511226654052734
    8. '**' → logprob: -14.761226654052734
    9. '*y' → logprob: -14.886226654052734
    10. ' **' → logprob: -14.886226654052734

Token 105: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07890355587005615
    2. 'x' → logprob: -2.5789036750793457
    3. '<|end|>' → logprob: -11.703903198242188
    4. '	x' → logprob: -12.328903198242188
    5. ' ' → logprob: -13.828903198242188
    6. ')x' → logprob: -16.828903198242188
    7. '*x' → logprob: -17.328903198242188
    8. '<|end|>' → logprob: -17.453903198242188
    9. '%x' → logprob: -17.828903198242188
    10. '>x' → logprob: -18.203903198242188

Token 106: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -4.4894986785948277e-05
    2. 'prev' → logprob: -10.125044822692871
    3. '_' → logprob: -12.750044822692871
    4. '_curr' → logprob: -13.500044822692871
    5. '_pre' → logprob: -16.375045776367188
    6. '_cur' → logprob: -17.000045776367188
    7. 'Prev' → logprob: -17.000045776367188
    8. '_previous' → logprob: -17.125045776367188
    9. '	prev' → logprob: -17.375045776367188
    10. '_pred' → logprob: -17.375045776367188

Token 107: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.026306452229619026
    2. ' x' → logprob: -3.651306390762329
    3. ' ' → logprob: -12.77630615234375
    4. '	x' → logprob: -13.52630615234375
    5. '   ' → logprob: -13.77630615234375
    6. '<|end|>' → logprob: -14.40130615234375
    7. '  ' → logprob: -15.40130615234375
    8. '<|end|>' → logprob: -17.27630615234375
    9. '0' → logprob: -17.65130615234375
    10. ',x' → logprob: -18.02630615234375

Token 109: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -5.228561349213123e-05
    2. 'prev' → logprob: -10.250052452087402
    3. '_' → logprob: -11.125052452087402
    4. '_curr' → logprob: -13.375052452087402
    5. '_next' → logprob: -15.500052452087402
    6. '	prev' → logprob: -16.000051498413086
    7. '_previous' → logprob: -16.500051498413086
    8. '_cur' → logprob: -16.625051498413086
    9. 'Prev' → logprob: -16.875051498413086
    10. '_new' → logprob: -17.625051498413086

Token 110: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2932330369949341
    2. '<|end|>' → logprob: -1.793233036994934
    3. ',
' → logprob: -3.1682329177856445
    4. ',y' → logprob: -4.0432329177856445
    5. '       ' → logprob: -4.5432329177856445
    6. ')' → logprob: -5.7932329177856445
    7. '
' → logprob: -6.0432329177856445
    8. ' ,' → logprob: -6.2932329177856445
    9. '   ' → logprob: -6.2932329177856445
    10. '<|end|>' → logprob: -6.6682329177856445

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35299327969551086
    2. ' y' → logprob: -1.7279932498931885
    3. '<|end|>' → logprob: -3.2279932498931885
    4. ',' → logprob: -3.4779932498931885
    5. 'y' → logprob: -3.8529932498931885
    6. '   ' → logprob: -4.102993488311768
    7. ',y' → logprob: -5.227993488311768
    8. ')' → logprob: -6.352993488311768
    9. ' ' → logprob: -6.852993488311768
    10. '    ' → logprob: -6.977993488311768

Token 112: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.2836930453777313
    2. ' y' → logprob: -1.4086930751800537
    3. ')' → logprob: -7.283692836761475
    4. '       ' → logprob: -7.408692836761475
    5. '<|end|>' → logprob: -7.658692836761475
    6. ',' → logprob: -7.908692836761475
    7. ',y' → logprob: -9.033693313598633
    8. '   ' → logprob: -9.408693313598633
    9. '	y' → logprob: -9.783693313598633
    10. '    ' → logprob: -10.283693313598633

Token 113: '_prev' (ID: 60491)
  Prédit: '_curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.004130403511226177
    2. '_prev' → logprob: -5.5041303634643555
    3. 'curr' → logprob: -10.004130363464355
    4. '_cur' → logprob: -12.754130363464355
    5. 'Curr' → logprob: -13.754130363464355
    6. '_' → logprob: -14.254130363464355
    7. 'prev' → logprob: -14.379130363464355
    8. '	curr' → logprob: -14.629130363464355
    9. '[curr' → logprob: -14.879130363464355
    10. '_current' → logprob: -15.004130363464355

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035083942930214107
    2. '<|end|>' → logprob: -8.375350952148438
    3. ' ,' → logprob: -9.625350952148438
    4. '=' → logprob: -10.625350952148438
    5. '<|end|>' → logprob: -11.250350952148438
    6. ',
' → logprob: -12.125350952148438
    7. ' =' → logprob: -12.500350952148438
    8. ')' → logprob: -12.750350952148438
    9. ',user' → logprob: -13.875350952148438
    10. ',y' → logprob: -13.875350952148438

Token 115: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02324780821800232
    2. ' y' → logprob: -3.773247718811035
    3. '<|end|>' → logprob: -13.273247718811035
    4. '	y' → logprob: -14.773247718811035
    5. ' ' → logprob: -16.02324867248535
    6. '  ' → logprob: -17.89824867248535
    7. ''y' → logprob: -18.14824867248535
    8. '<|end|>' → logprob: -18.27324867248535
    9. '`' → logprob: -18.39824867248535
    10. '   ' → logprob: -18.89824867248535

Token 116: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.0009157438762485981
    2. 'curr' → logprob: -7.00091552734375
    3. '	curr' → logprob: -13.62591552734375
    4. 'Curr' → logprob: -13.75091552734375
    5. '_cur' → logprob: -14.12591552734375
    6. '_prev' → logprob: -14.37591552734375
    7. '[curr' → logprob: -14.75091552734375
    8. '(curr' → logprob: -16.25091552734375
    9. 'urr' → logprob: -16.50091552734375
    10. ' curr' → logprob: -16.62591552734375

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014367517083883286
    2. '=' → logprob: -4.264367580413818
    3. ',' → logprob: -8.63936710357666
    4. '<|end|>' → logprob: -10.63936710357666
    5. ')' → logprob: -13.88936710357666
    6. ' ' → logprob: -14.26436710357666
    7. '<|end|>' → logprob: -14.38936710357666
    8. ' ,' → logprob: -14.51436710357666
    9. 's' → logprob: -16.139368057250977
    10. ' =
' → logprob: -17.389368057250977

Token 118: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0036014977376908064
    2. ' y' → logprob: -5.628601551055908
    3. '	y' → logprob: -14.37860107421875
    4. ' ' → logprob: -14.87860107421875
    5. '   ' → logprob: -15.37860107421875
    6. '  ' → logprob: -16.37860107421875
    7. '(y' → logprob: -16.50360107421875
    8. 'x' → logprob: -17.12860107421875
    9. '    ' → logprob: -17.50360107421875
    10. '<|end|>' → logprob: -17.50360107421875

Token 119: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.0032092039473354816
    2. 'curr' → logprob: -5.753209114074707
    3. '_prev' → logprob: -11.003209114074707
    4. '_cur' → logprob: -11.878209114074707
    5. 'Curr' → logprob: -12.753209114074707
    6. '	curr' → logprob: -13.503209114074707
    7. '[curr' → logprob: -13.628209114074707
    8. '_c' → logprob: -14.503209114074707
    9. '(curr' → logprob: -15.003209114074707
    10. '_' → logprob: -15.003209114074707

Token 120: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004080658778548241
    2. '-' → logprob: -5.504080772399902
    3. ' ' → logprob: -13.254080772399902
    4. ',' → logprob: -15.379080772399902
    5. ' -
' → logprob: -17.379079818725586
    6. 'y' → logprob: -17.504079818725586
    7. ' ' → logprob: -17.629079818725586
    8. '   ' → logprob: -17.879079818725586
    9. '_' → logprob: -18.379079818725586
    10. '=' → logprob: -18.629079818725586

Token 121: ' quotient' (ID: 169302)
  Prédit: ' quotient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quotient' → logprob: -0.002191779436543584
    2. 'quot' → logprob: -6.127191543579102
    3. ' quot' → logprob: -12.127191543579102
    4. ' quota' → logprob: -14.252191543579102
    5. '```' → logprob: -15.002191543579102
    6. ' ' → logprob: -16.3771915435791
    7. 'quota' → logprob: -16.8771915435791
    8. 'quote' → logprob: -17.0021915435791
    9. ' quotation' → logprob: -17.5021915435791
    10. ' quo' → logprob: -17.7521915435791

Token 122: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0006266565760597587
    2. '*' → logprob: -7.375626564025879
    3. '*y' → logprob: -17.000627517700195
    4. ' ' → logprob: -17.250627517700195
    5. '<|end|>' → logprob: -18.750627517700195
    6. ' ' → logprob: -19.000627517700195
    7. '**' → logprob: -19.125627517700195
    8. '*object' → logprob: -19.750627517700195
    9. ' **' → logprob: -21.250627517700195
    10. '*x' → logprob: -21.875627517700195

Token 123: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20143067836761475
    2. ' y' → logprob: -1.7014306783676147
    3. '<|end|>' → logprob: -11.201430320739746
    4. '	y' → logprob: -13.326430320739746
    5. ' ' → logprob: -14.076430320739746
    6. '_y' → logprob: -15.076430320739746
    7. 'x' → logprob: -15.576430320739746
    8. '*y' → logprob: -15.951430320739746
    9. 'user' → logprob: -16.201431274414062
    10. 'yb' → logprob: -16.326431274414062

Token 124: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.005240872036665678
    2. 'prev' → logprob: -5.2552409172058105
    3. '_curr' → logprob: -12.880240440368652
    4. '_' → logprob: -13.255240440368652
    5. '	prev' → logprob: -14.130240440368652
    6. '-prev' → logprob: -14.255240440368652
    7. 'Prev' → logprob: -14.880240440368652
    8. '_pre' → logprob: -15.380240440368652
    9. ' prev' → logprob: -15.630240440368652
    10. '_prior' → logprob: -16.00524139404297

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.372916686814278e-05
    2. ',y' → logprob: -10.7500638961792
    3. ',
' → logprob: -11.1250638961792
    4. 'y' → logprob: -11.5000638961792
    5. ' y' → logprob: -11.6250638961792
    6. ' ,' → logprob: -12.3750638961792
    7. '=' → logprob: -13.6250638961792
    8. ')' → logprob: -13.6250638961792
    9. '<|end|>' → logprob: -14.0000638961792
    10. ',

' → logprob: -15.1250638961792

Token 126: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804194927215576
    2. ' y' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.038042068481445
    4. '	y' → logprob: -15.788042068481445
    5. 'x' → logprob: -17.163042068481445
    6. '    ' → logprob: -17.788042068481445
    7. '   ' → logprob: -18.163042068481445
    8. '  ' → logprob: -18.288042068481445
    9. '_y' → logprob: -18.288042068481445
    10. '<|end|>' → logprob: -18.538042068481445

Token 127: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.0004026673559565097
    2. 'prev' → logprob: -7.875402450561523
    3. '_curr' → logprob: -11.625402450561523
    4. '_' → logprob: -12.000402450561523
    5. '	prev' → logprob: -13.250402450561523
    6. '_y' → logprob: -13.500402450561523
    7. 'Prev' → logprob: -13.625402450561523
    8. '_pre' → logprob: -14.750402450561523
    9. '_cur' → logprob: -14.750402450561523
    10. '_previous' → logprob: -15.000402450561523

Token 128: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016657324507832527
    2. '<|end|>' → logprob: -4.26665735244751
    3. ',' → logprob: -7.01665735244751
    4. ')' → logprob: -7.01665735244751
    5. '   ' → logprob: -8.141656875610352
    6. '
' → logprob: -8.891656875610352
    7. '<|end|>' → logprob: -10.141656875610352
    8. ',
' → logprob: -10.391656875610352
    9. ')
' → logprob: -10.641656875610352
    10. 'rest' → logprob: -10.766656875610352

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011155696120113134
    2. '<|end|>' → logprob: -7.376115798950195
    3. ' remainder' → logprob: -8.501115798950195
    4. '   ' → logprob: -9.001115798950195
    5. ',' → logprob: -9.751115798950195
    6. 're' → logprob: -11.001115798950195
    7. ')' → logprob: -11.126115798950195
    8. 'rest' → logprob: -11.751115798950195
    9. '[' → logprob: -12.001115798950195
    10. '	' → logprob: -12.001115798950195

Token 130: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0028628890868276358
    2. ' remainder' → logprob: -5.877862930297852
    3. '   ' → logprob: -10.877862930297852
    4. 'x' → logprob: -11.252862930297852
    5. 'if' → logprob: -12.252862930297852
    6. 'r' → logprob: -12.252862930297852
    7. '       ' → logprob: -12.877862930297852
    8. 'rem' → logprob: -12.877862930297852
    9. '```' → logprob: -12.877862930297852
    10. 'return' → logprob: -13.502862930297852

Token 131: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.09522237628698349
    2. '_curr' → logprob: -2.4702224731445312
    3. '_new' → logprob: -5.095222473144531
    4. 'prev' → logprob: -9.845222473144531
    5. '_' → logprob: -9.970222473144531
    6. 'curr' → logprob: -11.220222473144531
    7. '_cur' → logprob: -12.345222473144531
    8. '_tmp' → logprob: -12.470222473144531
    9. 'new' → logprob: -13.220222473144531
    10. '_next' → logprob: -13.595222473144531

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001184276770800352
    2. '=' → logprob: -6.751184463500977
    3. ' =' → logprob: -12.001184463500977
    4. ' ,' → logprob: -12.251184463500977
    5. '<|end|>' → logprob: -13.626184463500977
    6. ',new' → logprob: -14.876184463500977
    7. ',
' → logprob: -15.126184463500977
    8. ',re' → logprob: -15.251184463500977
    9. ',y' → logprob: -15.751184463500977
    10. '<|end|>' → logprob: -16.001184463500977

Token 133: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.048613931983709335
    2. ' remainder' → logprob: -3.048614025115967
    3. 'r' → logprob: -11.548613548278809
    4. 'rem' → logprob: -12.298613548278809
    5. 'rest' → logprob: -13.048613548278809
    6. 'rema' → logprob: -13.548613548278809
    7. ' re' → logprob: -13.673613548278809
    8. ' ' → logprob: -13.673613548278809
    9. '	re' → logprob: -13.798613548278809
    10. '   ' → logprob: -13.923613548278809

Token 134: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.0005103797884657979
    2. 'curr' → logprob: -8.125510215759277
    3. '_' → logprob: -8.625510215759277
    4. '_new' → logprob: -10.625510215759277
    5. '_cur' → logprob: -12.000510215759277
    6. 'Curr' → logprob: -13.625510215759277
    7. '	curr' → logprob: -14.000510215759277
    8. '(curr' → logprob: -15.000510215759277
    9. '_
' → logprob: -15.250510215759277
    10. '_prev' → logprob: -15.500510215759277

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5353575944900513
    2. ' =' → logprob: -0.9103575944900513
    3. ',' → logprob: -4.410357475280762
    4. '<|end|>' → logprob: -12.160357475280762
    5. ' ,' → logprob: -13.285357475280762
    6. '<|end|>' → logprob: -14.410357475280762
    7. '=

' → logprob: -15.660357475280762
    8. '=user' → logprob: -16.222858428955078
    9. '=re' → logprob: -16.222858428955078
    10. '=os' → logprob: -16.347858428955078

Token 136: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.5231873989105225
    2. 're' → logprob: -0.8981873989105225
    3. ' re' → logprob: -11.398187637329102
    4. '   ' → logprob: -11.648187637329102
    5. 'rema' → logprob: -11.773187637329102
    6. '	re' → logprob: -11.898187637329102
    7. 'r' → logprob: -12.023187637329102
    8. 'rem' → logprob: -12.023187637329102
    9. ' ' → logprob: -12.398187637329102
    10. '  ' → logprob: -13.023187637329102

Token 137: '_new' (ID: 13000)
  Prédit: '_curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.0003688245196826756
    2. 'curr' → logprob: -8.50036907196045
    3. '_cur' → logprob: -9.37536907196045
    4. '_new' → logprob: -9.62536907196045
    5. '_prev' → logprob: -11.87536907196045
    6. '_' → logprob: -12.50036907196045
    7. 'Curr' → logprob: -13.50036907196045
    8. '_current' → logprob: -14.12536907196045
    9. '	curr' → logprob: -14.62536907196045
    10. 'new' → logprob: -15.12536907196045

Token 138: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.007653592154383659
    2. ' remainder' → logprob: -4.882653713226318
    3. 'rem' → logprob: -10.50765323638916
    4. 'rema' → logprob: -11.63265323638916
    5. 'rest' → logprob: -13.00765323638916
    6. ' ' → logprob: -13.00765323638916
    7. '	re' → logprob: -13.13265323638916
    8. ' re' → logprob: -13.38265323638916
    9. 'r' → logprob: -13.88265323638916
    10. 'reme' → logprob: -14.75765323638916

Token 140: '_prev' (ID: 60491)
  Prédit: '_curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.04855557158589363
    2. 'curr' → logprob: -3.173555612564087
    3. '_prev' → logprob: -5.298555374145508
    4. '_' → logprob: -7.923555374145508
    5. '_new' → logprob: -9.173555374145508
    6. '_cur' → logprob: -10.548555374145508
    7. 'prev' → logprob: -10.673555374145508
    8. 'Curr' → logprob: -11.798555374145508
    9. '```' → logprob: -12.298555374145508
    10. ' curr' → logprob: -12.423555374145508

Token 141: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16907870769500732
    2. '<|end|>' → logprob: -2.294078826904297
    3. ')' → logprob: -3.044078826904297
    4. ' ' → logprob: -5.669078826904297
    5. ':' → logprob: -6.919078826904297
    6. '    ' → logprob: -7.169078826904297
    7. ',' → logprob: -7.544078826904297
    8. '
' → logprob: -8.669078826904297
    9. '       ' → logprob: -9.044078826904297
    10. '    
' → logprob: -9.044078826904297

Token 143: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4315571188926697
    2. '<|end|>' → logprob: -1.9315571784973145
    3. ' ' → logprob: -2.5565571784973145
    4. '    ' → logprob: -2.8065571784973145
    5. ')' → logprob: -2.9315571784973145
    6. ':' → logprob: -5.4315571784973145
    7. ' )' → logprob: -5.6815571784973145
    8. '       ' → logprob: -6.0565571784973145
    9. ' return' → logprob: -7.0565571784973145
    10. '  ' → logprob: -7.3065571784973145

Token 144: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07730600237846375
    2. 'y' → logprob: -3.702306032180786
    3. ' x' → logprob: -3.702306032180786
    4. '(x' → logprob: -4.077305793762207
    5. ' y' → logprob: -5.327305793762207
    6. '(y' → logprob: -6.702305793762207
    7. ' (' → logprob: -6.952305793762207
    8. 'None' → logprob: -7.327305793762207
    9. '(' → logprob: -8.952305793762207
    10. 'abs' → logprob: -9.827305793762207

Token 145: '_prev' (ID: 60491)
  Prédit: '_curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.1472969353199005
    2. '_prev' → logprob: -2.022296905517578
    3. '_' → logprob: -5.647296905517578
    4. '_cur' → logprob: -7.897296905517578
    5. '<|end|>' → logprob: -8.522296905517578
    6. 'curr' → logprob: -8.647296905517578
    7. '_current' → logprob: -9.272296905517578
    8. ')' → logprob: -10.522296905517578
    9. 'Curr' → logprob: -10.647296905517578
    10. 'prev' → logprob: -10.647296905517578

Token 146: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10021799057722092
    2. ' y' → logprob: -2.3502180576324463
    3. '<|end|>' → logprob: -11.725217819213867
    4. ' ' → logprob: -13.600217819213867
    5. '	y' → logprob: -15.100217819213867
    6. 'x' → logprob: -15.100217819213867
    7. '0' → logprob: -15.100217819213867
    8. ''y' → logprob: -15.350217819213867
    9. '...' → logprob: -15.975217819213867
    10. '(y' → logprob: -15.975217819213867

Token 148: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.10174943506717682
    2. '_curr' → logprob: -2.3517494201660156
    3. '_' → logprob: -6.726749420166016
    4. '_cur' → logprob: -8.101749420166016
    5. 'prev' → logprob: -11.101749420166016
    6. '_current' → logprob: -11.226749420166016
    7. 'curr' → logprob: -13.101749420166016
    8. '_
' → logprob: -13.601749420166016
    9. '_p' → logprob: -13.851749420166016
    10. '_previous' → logprob: -13.851749420166016

Token 149: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: 'class' (ID: 1444)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12037298083305359
    2. ')' → logprob: -2.870373010635376
    3. '<|end|>' → logprob: -3.620373010635376
    4. '#' → logprob: -3.870373010635376
    5. ':' → logprob: -5.745372772216797
    6. '   ' → logprob: -6.120372772216797
    7. ',' → logprob: -6.995372772216797
    8. '=' → logprob: -7.495372772216797
    9. ' )' → logprob: -7.495372772216797
    10. '[' → logprob: -7.745372772216797

Token 151: ' Modular' (ID: 137262)
  Prédit: ' Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Graph' → logprob: -1.229672908782959
    2. ' defaultdict' → logprob: -1.604672908782959
    3. ' Modular' → logprob: -2.229672908782959
    4. ' Hash' → logprob: -2.729672908782959
    5. ' Counter' → logprob: -2.729672908782959
    6. 'Mod' → logprob: -2.854672908782959
    7. ' Mod' → logprob: -2.854672908782959
    8. ' Solution' → logprob: -3.229672908782959
    9. 'Graph' → logprob: -3.604672908782959
    10. ' Union' → logprob: -4.354672908782959

Token 152: 'Integer' (ID: 5437)
  Prédit: 'Inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Inverse' → logprob: -0.18385954201221466
    2. 'Arithmetic' → logprob: -1.8088595867156982
    3. 'Integer' → logprob: -6.558859348297119
    4. 'Calculator' → logprob: -7.058859348297119
    5. 'Equation' → logprob: -7.183859348297119
    6. 'Solver' → logprob: -8.308859825134277
    7. ' inverse' → logprob: -8.933859825134277
    8. 'Linear' → logprob: -9.058859825134277
    9. '_inverse' → logprob: -9.308859825134277
    10. 'Exponent' → logprob: -9.433859825134277

Token 153: '(int' (ID: 2742)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.03521392197581e-05
    2. ':
' → logprob: -11.125030517578125
    3. '(' → logprob: -12.250030517578125
    4. '(object' → logprob: -12.750030517578125
    5. '():' → logprob: -13.000030517578125
    6. ' :' → logprob: -13.000030517578125
    7. '(int' → logprob: -14.125030517578125
    8. '):' → logprob: -14.250030517578125
    9. '<|end|>' → logprob: -14.625030517578125
    10. ':**' → logprob: -14.750030517578125

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005213391850702465
    2. '):
' → logprob: -7.750521183013916
    3. ')' → logprob: -9.750521659851074
    4. ' ):' → logprob: -10.500521659851074
    5. ',' → logprob: -13.125521659851074
    6. '):

' → logprob: -13.375521659851074
    7. '):
' → logprob: -14.125521659851074
    8. ':' → logprob: -15.375521659851074
    9. '(' → logprob: -16.125520706176758
    10. ' ' → logprob: -17.750520706176758

Token 155: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06245720759034157
    2. '):' → logprob: -2.812457323074341
    3. ':
' → logprob: -8.312457084655762
    4. '):
' → logprob: -9.062457084655762
    5. '   ' → logprob: -9.312457084655762
    6. ':def' → logprob: -10.937457084655762
    7. ')' → logprob: -11.437457084655762
    8. '():' → logprob: -13.187457084655762
    9. 'def' → logprob: -13.187457084655762
    10. ',' → logprob: -13.437457084655762

Token 156: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.019853075966238976
    2. '   ' → logprob: -4.394853115081787
    3. ' def' → logprob: -5.019853115081787
    4. '__' → logprob: -8.394852638244629
    5. '_mod' → logprob: -9.144852638244629
    6. ')' → logprob: -9.394852638244629
    7. 'MOD' → logprob: -9.519852638244629
    8. ':' → logprob: -10.269852638244629
    9. 'mod' → logprob: -10.269852638244629
    10. '	def' → logprob: -10.519852638244629

Token 157: ' __' (ID: 2516)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.08047130703926086
    2. ' new' → logprob: -2.7054712772369385
    3. ' __' → logprob: -5.330471515655518
    4. 'init' → logprob: -6.455471515655518
    5. '_new' → logprob: -6.705471515655518
    6. 'pow' → logprob: -7.330471515655518
    7. 'mul' → logprob: -7.455471515655518
    8. 'add' → logprob: -7.580471515655518
    9. '__' → logprob: -7.705471515655518
    10. 'mod' → logprob: -7.830471515655518

Token 158: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04872169345617294
    2. 'init' → logprob: -3.0487217903137207
    3. ' new' → logprob: -10.173721313476562
    4. 'add' → logprob: -10.548721313476562
    5. 'int' → logprob: -10.673721313476562
    6. 'mod' → logprob: -10.798721313476562
    7. 'neg' → logprob: -11.173721313476562
    8. 'mul' → logprob: -12.173721313476562
    9. 'call' → logprob: -12.673721313476562
    10. 'eq' → logprob: -13.673721313476562

Token 159: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002166913589462638
    2. '__' → logprob: -6.252166748046875
    3. '(' → logprob: -9.127166748046875
    4. '_(' → logprob: -10.002166748046875
    5. '__('' → logprob: -10.377166748046875
    6. '__(
' → logprob: -10.377166748046875
    7. '__((' → logprob: -11.252166748046875
    8. '_' → logprob: -12.627166748046875
    9. '__("' → logprob: -13.127166748046875
    10. '___' → logprob: -13.502166748046875

Token 160: 'cls' (ID: 36071)
  Prédit: 'cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -1.6240566083070007e-06
    2. ' cls' → logprob: -13.500001907348633
    3. 'self' → logprob: -16.625001907348633
    4. '(cls' → logprob: -17.750001907348633
    5. 'cl' → logprob: -18.375001907348633
    6. '_cls' → logprob: -19.500001907348633
    7. '.cls' → logprob: -20.750001907348633
    8. 'Cls' → logprob: -21.625001907348633
    9. 'CLS' → logprob: -21.750001907348633
    10. 'clazz' → logprob: -21.875001907348633

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. '(cls' → logprob: -14.625001907348633
    3. ' ,' → logprob: -14.750001907348633
    4. 'cls' → logprob: -14.875001907348633
    5. ',class' → logprob: -15.750001907348633
    6. '‌,' → logprob: -17.000001907348633
    7. '_,' → logprob: -17.375001907348633
    8. ',int' → logprob: -17.625001907348633
    9. ',
' → logprob: -17.750001907348633
    10. '   ' → logprob: -18.375001907348633

Token 162: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.004128149710595608
    2. ' value' → logprob: -5.5041279792785645
    3. 'val' → logprob: -11.004128456115723
    4. 'x' → logprob: -11.754128456115723
    5. 'n' → logprob: -12.129128456115723
    6. '```' → logprob: -12.879128456115723
    7. 'number' → logprob: -13.129128456115723
    8. '
' → logprob: -13.254128456115723
    9. ' ' → logprob: -13.504128456115723
    10. 'base' → logprob: -13.629128456115723

Token 163: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.751746746478602e-05
    2. '):' → logprob: -10.12504768371582
    3. ' ,' → logprob: -12.50004768371582
    4. ')' → logprob: -12.75004768371582
    5. ',
' → logprob: -15.75004768371582
    6. '=' → logprob: -16.00004768371582
    7. ' ' → logprob: -16.00004768371582
    8. '‌,' → logprob: -16.37504768371582
    9. ',value' → logprob: -17.12504768371582
    10. '   ' → logprob: -17.12504768371582

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022725824965164065
    2. ' ' → logprob: -8.500226974487305
    3. '1' → logprob: -11.125226974487305
    4. 'None' → logprob: -12.500226974487305
    5. ')' → logprob: -13.000226974487305
    6. ',' → logprob: -14.625226974487305
    7. 'int' → logprob: -14.687726974487305
    8. '...' → logprob: -14.812726974487305
    9. '```' → logprob: -15.062726974487305
    10. 'self' → logprob: -15.500226974487305

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.955703818472102e-05
    2. '):' → logprob: -9.875059127807617
    3. ' ,' → logprob: -12.500059127807617
    4. ')' → logprob: -12.625059127807617
    5. ',
' → logprob: -15.250059127807617
    6. ' ' → logprob: -15.875059127807617
    7. ',module' → logprob: -16.125059127807617
    8. ',

' → logprob: -16.875059127807617
    9. '   ' → logprob: -17.125059127807617
    10. '),' → logprob: -17.250059127807617

Token 166: ' *' (ID: 425)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.34758996963500977
    2. ' modulus' → logprob: -1.3475899696350098
    3. ' mod' → logprob: -3.5975899696350098
    4. ' modulo' → logprob: -5.09758996963501
    5. ',' → logprob: -8.972589492797852
    6. 'module' → logprob: -10.097589492797852
    7. ' modular' → logprob: -10.722589492797852
    8. ' modu' → logprob: -11.347589492797852
    9. '	mod' → logprob: -11.972589492797852
    10. 'm' → logprob: -11.972589492797852

Token 167: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.002177977468818426
    2. 'mod' → logprob: -6.877178192138672
    3. ',' → logprob: -7.377178192138672
    4. 'argv' → logprob: -9.002178192138672
    5. ' args' → logprob: -9.252178192138672
    6. ',args' → logprob: -9.252178192138672
    7. 'mods' → logprob: -9.877178192138672
    8. 'arguments' → logprob: -10.127178192138672
    9. 'kwargs' → logprob: -10.627178192138672
    10. 'value' → logprob: -10.877178192138672

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7014437364414334e-05
    2. '):' → logprob: -11.50002670288086
    3. ')' → logprob: -11.62502670288086
    4. ' ,' → logprob: -12.00002670288086
    5. ',module' → logprob: -14.75002670288086
    6. ',args' → logprob: -15.37502670288086
    7. '‌,' → logprob: -15.62502670288086
    8. ',
' → logprob: -15.75002670288086
    9. '<|end|>' → logprob: -16.12502670288086
    10. ',arg' → logprob: -16.25002670288086

Token 169: ' **' (ID: 6240)
  Prédit: ' modulus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulus' → logprob: -0.5195446014404297
    2. 'mod' → logprob: -1.2695446014404297
    3. ' mod' → logprob: -2.1445446014404297
    4. ' modulo' → logprob: -5.76954460144043
    5. '**' → logprob: -6.64454460144043
    6. 'm' → logprob: -7.14454460144043
    7. ' m' → logprob: -7.26954460144043
    8. ' modular' → logprob: -8.26954460144043
    9. ')' → logprob: -8.39454460144043
    10. ' **' → logprob: -8.64454460144043

Token 170: 'kwargs' (ID: 19200)
  Prédit: 'kwargs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kwargs' → logprob: -0.037983302026987076
    2. 'args' → logprob: -3.5379834175109863
    3. ')' → logprob: -5.037983417510986
    4. 'argv' → logprob: -7.787983417510986
    5. '_kwargs' → logprob: -8.162982940673828
    6. ' kwargs' → logprob: -8.287982940673828
    7. 'k' → logprob: -8.662982940673828
    8. 'value' → logprob: -8.912982940673828
    9. 'mod' → logprob: -9.662982940673828
    10. 'kw' → logprob: -9.662982940673828

Token 171: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42938727140426636
    2. '):' → logprob: -1.0543873310089111
    3. ')' → logprob: -7.929387092590332
    4. '):
' → logprob: -8.554387092590332
    5. ' ,' → logprob: -10.179387092590332
    6. ',m' → logprob: -10.554387092590332
    7. ' ):' → logprob: -10.554387092590332
    8. ',module' → logprob: -11.179387092590332
    9. '   ' → logprob: -12.054387092590332
    10. ',
' → logprob: -12.429387092590332

Token 172: '       ' (ID: 309)
  Prédit: ' modulus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulus' → logprob: -1.0815354585647583
    2. '       ' → logprob: -1.7065354585647583
    3. '):' → logprob: -1.9565354585647583
    4. 'mod' → logprob: -2.9565353393554688
    5. ' mod' → logprob: -2.9565353393554688
    6. ',' → logprob: -2.9565353393554688
    7. '    ' → logprob: -3.2065353393554688
    8. '   ' → logprob: -3.2065353393554688
    9. '        ' → logprob: -4.206535339355469
    10. ')' → logprob: -4.206535339355469

Token 173: ' return' (ID: 622)
  Prédit: 'obj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obj' → logprob: -0.3027229309082031
    2. 'instance' → logprob: -1.5527229309082031
    3. 'mod' → logprob: -3.427722930908203
    4. 'self' → logprob: -5.052722930908203
    5. '       ' → logprob: -5.177722930908203
    6. 'return' (adapté à ' return') → logprob: -5.427722930908203
    7. 'cls' → logprob: -8.177722930908203
    8. 'result' → logprob: -8.802722930908203
    9. ' instance' → logprob: -9.552722930908203
    10. ' obj' → logprob: -9.677722930908203

Token 174: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02329089865088463
    2. 'super' → logprob: -3.7732908725738525
    3. ' super' → logprob: -10.648290634155273
    4. ' int' → logprob: -10.773290634155273
    5. '   ' → logprob: -15.023290634155273
    6. ' ' → logprob: -15.648290634155273
    7. '```' → logprob: -16.898290634155273
    8. '	super' → logprob: -17.398290634155273
    9. '	int' → logprob: -17.398290634155273
    10. '0' → logprob: -17.648290634155273

Token 175: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -3.292907877039397e-06
    2. ').__' → logprob: -13.75000286102295
    3. 'value' → logprob: -14.00000286102295
    4. '(value' → logprob: -14.37500286102295
    5. 'super' → logprob: -14.87500286102295
    6. '().__' → logprob: -15.62500286102295
    7. '__.__' → logprob: -16.000003814697266
    8. '._' → logprob: -16.875003814697266
    9. '.' → logprob: -17.750003814697266
    10. '.value' → logprob: -17.875003814697266

Token 176: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: 0.0
    2. ' new' → logprob: -18.625
    3. '_new' → logprob: -18.75
    4. '	new' → logprob: -22.375
    5. 'New' → logprob: -22.625
    6. '.new' → logprob: -23.0
    7. '
' → logprob: -23.5
    8. 'int' → logprob: -24.25
    9. '```' → logprob: -24.25
    10. 'ne' → logprob: -24.5

Token 177: '__(' (ID: 8241)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0738101378083229
    2. '__(' → logprob: -2.69881010055542
    3. '(' → logprob: -5.82381010055542
    4. 'cls' → logprob: -7.94881010055542
    5. '(cl' → logprob: -8.073810577392578
    6. '__(
' → logprob: -8.948810577392578
    7. '(clazz' → logprob: -10.073810577392578
    8. '__' → logprob: -10.323810577392578
    9. '(
' → logprob: -11.698810577392578
    10. '(class' → logprob: -11.823810577392578

Token 178: 'cls' (ID: 36071)
  Prédit: 'cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: 0.0
    2. '(cls' → logprob: -17.25
    3. ' cls' → logprob: -18.375
    4. 'cl' → logprob: -18.75
    5. 'class' → logprob: -20.5
    6. 'clazz' → logprob: -20.625
    7. '
' → logprob: -20.75
    8. 'classmethod' → logprob: -21.75
    9. 'Mod' → logprob: -22.375
    10. 'int' → logprob: -22.5

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ',value' → logprob: -13.25000286102295
    3. 'cls' → logprob: -14.50000286102295
    4. ',int' → logprob: -16.125001907348633
    5. ')' → logprob: -16.375001907348633
    6. ' ,' → logprob: -16.500001907348633
    7. 'value' → logprob: -17.125001907348633
    8. '(cls' → logprob: -19.250001907348633
    9. ',(' → logprob: -19.625001907348633
    10. ',class' → logprob: -20.250001907348633

Token 180: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0005623269826173782
    2. 'cls' → logprob: -8.00056266784668
    3. 'int' → logprob: -9.00056266784668
    4. ' value' → logprob: -9.37556266784668
    5. '0' → logprob: -11.62556266784668
    6. '(value' → logprob: -12.12556266784668
    7. 'self' → logprob: -14.25056266784668
    8. '(' → logprob: -14.37556266784668
    9. ')value' → logprob: -14.37556266784668
    10. 'val' → logprob: -14.87556266784668

Token 181: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018029935017693788
    2. ',' → logprob: -9.3751802444458
    3. '%' → logprob: -10.2501802444458
    4. ')
' → logprob: -10.3751802444458
    5. ')%' → logprob: -11.3751802444458
    6. ' )' → logprob: -11.8751802444458
    7. ' %' → logprob: -13.0001802444458
    8. ')

' → logprob: -13.1251802444458
    9. '   ' → logprob: -13.8751802444458
    10. ')>>' → logprob: -13.8751802444458

Token 182: ' MOD' (ID: 32868)
  Prédit: 'kwargs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kwargs' → logprob: -0.39661556482315063
    2. ' kwargs' → logprob: -2.271615505218506
    3. 'args' → logprob: -2.521615505218506
    4. '100' → logprob: -2.646615505218506
    5. 'cls' → logprob: -3.521615505218506
    6. ' ' → logprob: -3.646615505218506
    7. '(' → logprob: -5.146615505218506
    8. ' (' → logprob: -6.021615505218506
    9. '10' → logprob: -6.146615505218506
    10. '(args' → logprob: -6.396615505218506

Token 183: 'UL' (ID: 1949)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.857719275401905e-05
    2. ',' → logprob: -10.375038146972656
    3. ' )' → logprob: -13.125038146972656
    4. '))' → logprob: -13.375038146972656
    5. '[' → logprob: -13.750038146972656
    6. '),' → logprob: -14.375038146972656
    7. ')
' → logprob: -15.250038146972656
    8. ',)' → logprob: -15.250038146972656
    9. ' ' → logprob: -15.750038146972656
    10. '_)' → logprob: -16.000038146972656

Token 184: 'US' (ID: 3042)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.004698307253420353
    2. 'US' → logprob: -5.379698276519775
    3. 'OS' → logprob: -10.129698753356934
    4. '
' → logprob: -11.004698753356934
    5. 'О' → logprob: -12.629698753356934
    6. '```' → logprob: -12.879698753356934
    7. '   ' → logprob: -13.004698753356934
    8. '

' → logprob: -13.379698753356934
    9. ')' → logprob: -13.504698753356934
    10. 'U' → logprob: -13.879698753356934

Token 185: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016301481809932739
    2. ',' → logprob: -8.875163078308105
    3. ' )' → logprob: -11.000163078308105
    4. '   ' → logprob: -13.375163078308105
    5. '       ' → logprob: -13.750163078308105
    6. '<|end|>' → logprob: -13.875163078308105
    7. ')
' → logprob: -14.000163078308105
    8. '),' → logprob: -14.375163078308105
    9. ',)' → logprob: -15.125163078308105
    10. ' ' → logprob: -15.375163078308105

Token 186: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14286655187606812
    2. '*' → logprob: -2.142866611480713
    3. 'cls' → logprob: -4.392866611480713
    4. 'args' → logprob: -6.892866611480713
    5. ' cls' → logprob: -7.017866611480713
    6. ' *' → logprob: -7.267866611480713
    7. ')
' → logprob: -8.767866134643555
    8. '   ' → logprob: -8.892866134643555
    9. '*)' → logprob: -9.017866134643555
    10. 'kwargs' → logprob: -9.017866134643555

Token 187: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -6.8497312895488e-05
    2. ' args' → logprob: -9.625068664550781
    3. 'kwargs' → logprob: -14.000068664550781
    4. '(args' → logprob: -14.500068664550781
    5. '	args' → logprob: -14.625068664550781
    6. '$args' → logprob: -15.250068664550781
    7. ',args' → logprob: -15.750068664550781
    8. '_args' → logprob: -16.50006866455078
    9. 'argv' → logprob: -17.62506866455078
    10. '.args' → logprob: -17.75006866455078

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003469994058832526
    2. ',args' → logprob: -6.128469944000244
    3. 'args' → logprob: -6.753469944000244
    4. ' ,' → logprob: -10.253470420837402
    5. 'kwargs' → logprob: -11.003470420837402
    6. ')' → logprob: -11.003470420837402
    7. '<|end|>' → logprob: -11.003470420837402
    8. ',
' → logprob: -11.128470420837402
    9. '$args' → logprob: -11.878470420837402
    10. '	args' → logprob: -12.753470420837402

Token 189: ' **' (ID: 6240)
  Prédit: 'kwargs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kwargs' → logprob: -0.11456649750471115
    2. '**' → logprob: -2.7395665645599365
    3. 'args' → logprob: -3.4895665645599365
    4. ' kwargs' → logprob: -4.364566326141357
    5. ' args' → logprob: -8.739566802978516
    6. '*' → logprob: -9.239566802978516
    7. ' **' → logprob: -9.614566802978516
    8. ')' → logprob: -10.489566802978516
    9. '**)' → logprob: -10.614566802978516
    10. '_kwargs' → logprob: -10.864566802978516

Token 190: 'kwargs' (ID: 19200)
  Prédit: 'kwargs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kwargs' → logprob: -0.001389400800690055
    2. 'args' → logprob: -6.751389503479004
    3. ')' → logprob: -8.501389503479004
    4. ' kwargs' → logprob: -11.876389503479004
    5. '(kwargs' → logprob: -12.376389503479004
    6. '_kwargs' → logprob: -12.501389503479004
    7. 'kw' → logprob: -14.751389503479004
    8. '[])' → logprob: -16.126388549804688
    9. 'keywords' → logprob: -16.251388549804688
    10. 'argv' → logprob: -16.251388549804688

Token 191: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. '   ' → logprob: -12.750005722045898
    3. ')
' → logprob: -13.625005722045898
    4. ' )' → logprob: -14.125005722045898
    5. '       ' → logprob: -15.625005722045898
    6. ')return' → logprob: -16.5000057220459
    7. ')

' → logprob: -16.7500057220459
    8. ' ' → logprob: -17.2500057220459
    9. ')\
' → logprob: -18.3750057220459
    10. ')`' → logprob: -18.5000057220459

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1211933121085167
    2. '
' → logprob: -2.3711934089660645
    3. '<|end|>' → logprob: -4.8711934089660645
    4. 'def' → logprob: -5.1211934089660645
    5. ')' → logprob: -5.4961934089660645
    6. '    
' → logprob: -6.6211934089660645
    7. ':' → logprob: -7.9961934089660645
    8. '<|end|>' → logprob: -8.121192932128906
    9. ' ' → logprob: -8.746192932128906
    10. ',' → logprob: -8.871192932128906

Token 193: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0017370629357174039
    2. '   ' → logprob: -6.751737117767334
    3. ' def' → logprob: -8.126736640930176
    4. '@' → logprob: -8.876736640930176
    5. '__' → logprob: -9.626736640930176
    6. '@property' → logprob: -10.626736640930176
    7. ')' → logprob: -11.126736640930176
    8. '_' → logprob: -12.001736640930176
    9. '    
' → logprob: -12.376736640930176
    10. ' ' → logprob: -12.501736640930176

Token 194: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16776607930660248
    2. '__' → logprob: -1.9177660942077637
    3. '_add' → logprob: -5.167766094207764
    4. 'add' → logprob: -7.042766094207764
    5. ' add' → logprob: -7.292766094207764
    6. '__(' → logprob: -9.167765617370605
    7. '_mod' → logprob: -10.042765617370605
    8. '```' → logprob: -10.792765617370605
    9. ' ' → logprob: -10.917765617370605
    10. '_init' → logprob: -10.917765617370605

Token 195: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0012230859138071537
    2. 'mod' → logprob: -7.251223087310791
    3. 'init' → logprob: -8.001222610473633
    4. 'eq' → logprob: -9.501222610473633
    5. 'mul' → logprob: -9.626222610473633
    6. 'pow' → logprob: -10.626222610473633
    7. 'int' → logprob: -12.376222610473633
    8. 'repr' → logprob: -13.001222610473633
    9. 'neg' → logprob: -13.501222610473633
    10. 'abs' → logprob: -14.001222610473633

Token 196: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.16028393805027008
    2. '__' → logprob: -1.9102839231491089
    3. '__(
' → logprob: -10.660284042358398
    4. '__('' → logprob: -10.910284042358398
    5. '__((' → logprob: -11.910284042358398
    6. '__(*' → logprob: -12.410284042358398
    7. '_' → logprob: -12.785284042358398
    8. '___' → logprob: -13.535284042358398
    9. '__("' → logprob: -13.785284042358398
    10. '_(' → logprob: -14.035284042358398

Token 197: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.512236498361744e-07
    2. ' self' → logprob: -14.625000953674316
    3. '(self' → logprob: -18.5
    4. '   ' → logprob: -21.625
    5. '	self' → logprob: -21.625
    6. 'other' → logprob: -22.0
    7. 's' → logprob: -22.625
    8. ' ' → logprob: -23.0
    9. 'def' → logprob: -23.25
    10. ')' → logprob: -23.375

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008537746965885162
    2. 'self' → logprob: -5.508537769317627
    3. ' ,' → logprob: -5.883537769317627
    4. '__,' → logprob: -7.133537769317627
    5. '_,' → logprob: -8.383537292480469
    6. '<|end|>' → logprob: -8.508537292480469
    7. '__' → logprob: -8.758537292480469
    8. ',self' → logprob: -9.383537292480469
    9. '__(' → logprob: -9.633537292480469
    10. ')' → logprob: -9.758537292480469

Token 199: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0003377270477358252
    2. ' other' → logprob: -8.000337600708008
    3. 'self' → logprob: -13.000337600708008
    4. 'Other' → logprob: -16.750337600708008
    5. '(other' → logprob: -19.125337600708008
    6. '_other' → logprob: -20.250337600708008
    7. ' self' → logprob: -20.625337600708008
    8. 'o' → logprob: -20.625337600708008
    9. 'oth' → logprob: -20.875337600708008
    10. '.other' → logprob: -22.000337600708008

Token 200: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00046451209345832467
    2. '):
' → logprob: -7.75046443939209
    3. ' ):' → logprob: -10.87546443939209
    4. ')' → logprob: -12.00046443939209
    5. ':' → logprob: -12.12546443939209
    6. '):
' → logprob: -13.12546443939209
    7. ',' → logprob: -14.75046443939209
    8. 'self' → logprob: -15.00046443939209
    9. '):

' → logprob: -15.12546443939209
    10. '   ' → logprob: -16.250465393066406

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7071812152862549
    2. '<|end|>' → logprob: -0.8321812152862549
    3. '    ' → logprob: -4.207180976867676
    4. '(' → logprob: -4.582180976867676
    5. ':' → logprob: -4.707180976867676
    6. '        ' → logprob: -5.207180976867676
    7. 'return' → logprob: -5.332180976867676
    8. 'self' → logprob: -5.582180976867676
    9. ' (' → logprob: -5.582180976867676
    10. '(self' → logprob: -5.707180976867676

Token 202: ' return' (ID: 622)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.18102581799030304
    2. 'return' (adapté à ' return') → logprob: -2.306025743484497
    3. ' Modular' → logprob: -2.806025743484497
    4. '(Mod' → logprob: -6.181025981903076
    5. 'cls' → logprob: -6.306025981903076
    6. 'self' → logprob: -6.931025981903076
    7. '       ' → logprob: -9.056025505065918
    8. 'result' → logprob: -9.181025505065918
    9. 'Modulo' → logprob: -9.181025505065918
    10. ' return' → logprob: -9.806025505065918

Token 203: ' self' (ID: 1051)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0011392654851078987
    2. ' Modular' → logprob: -7.001139163970947
    3. 'type' → logprob: -9.376139640808105
    4. '(Mod' → logprob: -9.501139640808105
    5. 'self' → logprob: -9.876139640808105
    6. '_Mod' → logprob: -12.251139640808105
    7. 'cls' → logprob: -12.751139640808105
    8. '   ' → logprob: -13.001139640808105
    9. 'Modulo' → logprob: -13.501139640808105
    10. '_mod' → logprob: -13.501139640808105

Token 204: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.5772389769554138
    2. '+' → logprob: -1.8272390365600586
    3. 'Mod' → logprob: -2.2022390365600586
    4. ' +' → logprob: -2.7022390365600586
    5. ' Modular' → logprob: -2.9522390365600586
    6. '(Mod' → logprob: -3.5772390365600586
    7. '__' → logprob: -5.202239036560059
    8. '_Mod' → logprob: -5.327239036560059
    9. '_mod' → logprob: -6.202239036560059
    10. 'if' → logprob: -6.577239036560059

Token 205: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0004940562648698688
    2. 'add' → logprob: -8.000494003295898
    3. 'new' → logprob: -8.750494003295898
    4. '_class' → logprob: -16.6254940032959
    5. '_add' → logprob: -16.6254940032959
    6. '+' → logprob: -17.5004940032959
    7. 'cls' → logprob: -17.6254940032959
    8. 'int' → logprob: -18.0004940032959
    9. '_new' → logprob: -18.2504940032959
    10. 'mod' → logprob: -18.2504940032959

Token 206: '__(' (ID: 8241)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0006070063100196421
    2. '__((' → logprob: -8.000606536865234
    3. '(self' → logprob: -9.000606536865234
    4. '(super' → logprob: -9.250606536865234
    5. '(' → logprob: -10.875606536865234
    6. '(((' → logprob: -11.375606536865234
    7. '(int' → logprob: -11.500606536865234
    8. ')((' → logprob: -12.125606536865234
    9. '>((' → logprob: -12.750606536865234
    10. 'super' → logprob: -13.125606536865234

Token 207: 'int' (ID: 491)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5066421031951904
    2. 'int' → logprob: -1.7566421031951904
    3. '(int' → logprob: -2.2566421031951904
    4. '(super' → logprob: -2.5066421031951904
    5. 'super' → logprob: -3.5066421031951904
    6. 'self' → logprob: -4.7566423416137695
    7. ' (' → logprob: -11.50664234161377
    8. ' super' → logprob: -11.63164234161377
    9. ' int' → logprob: -12.88164234161377
    10. '((' → logprob: -13.50664234161377

Token 208: '.__' (ID: 10210)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00039588010986335576
    2. 'self' → logprob: -8.000395774841309
    3. '.__' → logprob: -9.750395774841309
    4. '__(' → logprob: -14.375395774841309
    5. ')' → logprob: -14.625395774841309
    6. ').__' → logprob: -15.000395774841309
    7. ')(' → logprob: -15.375395774841309
    8. '__' → logprob: -15.875395774841309
    9. '(' → logprob: -16.125396728515625
    10. '[self' → logprob: -16.125396728515625

Token 209: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -6.2729995988775045e-06
    2. '(add' → logprob: -12.500006675720215
    3. '_add' → logprob: -13.125006675720215
    4. 'new' → logprob: -16.0000057220459
    5. ' add' → logprob: -16.1250057220459
    6. 'Add' → logprob: -16.5000057220459
    7. '.add' → logprob: -16.6250057220459
    8. '+' → logprob: -17.2500057220459
    9. '(self' → logprob: -17.5000057220459
    10. '(' → logprob: -17.7500057220459

Token 210: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -3.762356209335849e-05
    2. '(self' → logprob: -10.25003719329834
    3. '__(
' → logprob: -13.62503719329834
    4. '__((' → logprob: -14.50003719329834
    5. '__' → logprob: -14.87503719329834
    6. '(' → logprob: -17.250038146972656
    7. '_(' → logprob: -17.375038146972656
    8. 'self' → logprob: -18.000038146972656
    9. '__(*' → logprob: -18.125038146972656
    10. '__('' → logprob: -18.250038146972656

Token 211: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1472419600977446e-06
    2. '(self' → logprob: -13.875000953674316
    3. ' self' → logprob: -15.750000953674316
    4. 'cls' → logprob: -18.125001907348633
    5. 'int' → logprob: -19.250001907348633
    6. ')' → logprob: -19.625001907348633
    7. '__(' → logprob: -19.875001907348633
    8. ',' → logprob: -20.000001907348633
    9. '(' → logprob: -20.000001907348633
    10. ',self' → logprob: -20.125001907348633

Token 212: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.31806889176368713
    2. ',' → logprob: -1.3180688619613647
    3. '(self' → logprob: -5.693068981170654
    4. 'other' → logprob: -6.693068981170654
    5. '(' → logprob: -9.068068504333496
    6. 'self' → logprob: -10.068068504333496
    7. ',self' → logprob: -11.318068504333496
    8. ',(' → logprob: -12.193068504333496
    9. ' ,' → logprob: -12.568068504333496
    10. ' other' → logprob: -12.693068504333496

Token 213: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -8.180258191714529e-06
    2. ' other' → logprob: -11.875008583068848
    3. '(other' → logprob: -13.875008583068848
    4. 'self' → logprob: -15.500008583068848
    5. 'int' → logprob: -18.75000762939453
    6. 'Other' → logprob: -19.62500762939453
    7. '
' → logprob: -20.37500762939453
    8. ')' → logprob: -20.75000762939453
    9. '.other' → logprob: -21.50000762939453
    10. '1' → logprob: -21.75000762939453

Token 214: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5796552896499634
    2. '))' → logprob: -0.8296552896499634
    3. '%' → logprob: -6.454655170440674
    4. ')%' → logprob: -6.829655170440674
    5. ' ))' → logprob: -7.454655170440674
    6. ' )' → logprob: -8.454655647277832
    7. ' %' → logprob: -8.704655647277832
    8. '),' → logprob: -9.954655647277832
    9. '))
' → logprob: -10.579655647277832
    10. ')))' → logprob: -11.204655647277832

Token 215: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03805170953273773
    2. '__' → logprob: -3.2880516052246094
    3. ' ' → logprob: -12.41305160522461
    4. ' ' → logprob: -13.53805160522461
    5. '__(' → logprob: -14.41305160522461
    6. 'def' → logprob: -14.53805160522461
    7. ' (' → logprob: -14.53805160522461
    8. ' def' → logprob: -14.53805160522461
    9. ' (__' → logprob: -14.53805160522461
    10. ' _' → logprob: -14.66305160522461

Token 218: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.01061373483389616
    2. 'r' → logprob: -4.760613918304443
    3. 'mod' → logprob: -6.385613918304443
    4. 'mul' → logprob: -8.260613441467285
    5. 'add' → logprob: -10.385613441467285
    6. 'and' → logprob: -11.385613441467285
    7. 'eq' → logprob: -12.760613441467285
    8. 'pow' → logprob: -13.135613441467285
    9. 'class' → logprob: -13.385613441467285
    10. 'neg' → logprob: -13.760613441467285

Token 219: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0005541055579669774
    2. '__' → logprob: -7.625554084777832
    3. '__(
' → logprob: -10.250554084777832
    4. '(' → logprob: -11.000554084777832
    5. '__((' → logprob: -11.500554084777832
    6. '__('' → logprob: -12.875554084777832
    7. '(self' → logprob: -14.250554084777832
    8. '__(*' → logprob: -14.750554084777832
    9. '__("' → logprob: -15.500554084777832
    10. '_(' → logprob: -16.12555503845215

Token 220: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.842555426876061e-06
    2. ')' → logprob: -13.125004768371582
    3. ' self' → logprob: -13.125004768371582
    4. '(self' → logprob: -14.250004768371582
    5. '<|end|>' → logprob: -17.2500057220459
    6. '	self' → logprob: -19.0000057220459
    7. 's' → logprob: -19.2500057220459
    8. 'other' → logprob: -19.3750057220459
    9. '
' → logprob: -19.3750057220459
    10. '),' → logprob: -19.6250057220459

Token 221: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6008907556533813
    2. '__(' → logprob: -1.1008907556533813
    3. '(self' → logprob: -2.725890636444092
    4. ',' → logprob: -3.100890636444092
    5. '__' → logprob: -5.725890636444092
    6. 'self' → logprob: -6.475890636444092
    7. ' (' → logprob: -6.725890636444092
    8. ')' → logprob: -6.850890636444092
    9. ')(' → logprob: -7.225890636444092
    10. '+' → logprob: -8.22589111328125

Token 222: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.001982640940696001
    2. ' other' → logprob: -6.251982688903809
    3. 'self' → logprob: -9.876982688903809
    4. 'Other' → logprob: -13.001982688903809
    5. '(other' → logprob: -15.251982688903809
    6. '_other' → logprob: -16.001981735229492
    7. '.other' → logprob: -17.501981735229492
    8. ' self' → logprob: -17.751981735229492
    9. '1' → logprob: -19.126981735229492
    10. 'OTHER' → logprob: -19.501981735229492

Token 223: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5467358827590942
    2. '):' → logprob: -1.0467358827590942
    3. ',' → logprob: -2.6717357635498047
    4. ')' → logprob: -7.921735763549805
    5. '):

' → logprob: -8.671735763549805
    6. '       ' → logprob: -8.796735763549805
    7. 'self' → logprob: -9.296735763549805
    8. '):
' → logprob: -9.796735763549805
    9. '),' → logprob: -10.671735763549805
    10. '   ' → logprob: -10.796735763549805

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003025840735062957
    2. 'return' → logprob: -6.628026008605957
    3. ' return' → logprob: -6.628026008605957
    4. '(self' → logprob: -8.378026008605957
    5. 'self' → logprob: -9.628026008605957
    6. '(' → logprob: -10.503026008605957
    7. ' self' → logprob: -10.878026008605957
    8. '):
' → logprob: -11.753026008605957
    9. '   ' → logprob: -12.503026008605957
    10. ':
' → logprob: -12.628026008605957

Token 225: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02334773540496826
    2. 'return' (adapté à ' return') → logprob: -3.773347854614258
    3. ' self' → logprob: -9.273347854614258
    4. ' return' → logprob: -12.273347854614258
    5. '       ' → logprob: -12.648347854614258
    6. '   ' → logprob: -15.023347854614258
    7. '(self' → logprob: -15.398347854614258
    8. ' ' → logprob: -17.773347854614258
    9. '           ' → logprob: -18.273347854614258
    10. '     ' → logprob: -18.523347854614258

Token 226: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003357006062287837
    2. ' self' → logprob: -8.000335693359375
    3. '(self' → logprob: -16.000335693359375
    4. ' ' → logprob: -16.250335693359375
    5. '0' → logprob: -17.750335693359375
    6. '	self' → logprob: -18.750335693359375
    7. '__' → logprob: -18.750335693359375
    8. '
' → logprob: -18.750335693359375
    9. '  ' → logprob: -18.875335693359375
    10. 'Mod' → logprob: -19.000335693359375

Token 227: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -6.790129555156454e-05
    2. '__' → logprob: -9.625067710876465
    3. ' .' → logprob: -14.750067710876465
    4. '.' → logprob: -14.875067710876465
    5. '._' → logprob: -14.875067710876465
    6. '__.__' → logprob: -15.250067710876465
    7. ' __' → logprob: -15.625067710876465
    8. 'class' → logprob: -15.625067710876465
    9. '().__' → logprob: -16.25006866455078
    10. 'cls' → logprob: -18.50006866455078

Token 228: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.003602798329666257
    2. 'sub' → logprob: -6.253602981567383
    3. '.sub' → logprob: -7.503602981567383
    4. '.class' → logprob: -7.503602981567383
    5. '_class' → logprob: -8.128602981567383
    6. 'add' → logprob: -8.878602981567383
    7. '.__' → logprob: -9.753602981567383
    8. '__' → logprob: -10.003602981567383
    9. '.add' → logprob: -11.628602981567383
    10. '_sub' → logprob: -11.878602981567383

Token 229: '__(' (ID: 8241)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04465310275554657
    2. '(' → logprob: -3.2946531772613525
    3. '__(' → logprob: -5.044652938842773
    4. ')(' → logprob: -9.419652938842773
    5. '()(' → logprob: -10.544652938842773
    6. '>(' → logprob: -11.169652938842773
    7. '}(' → logprob: -12.044652938842773
    8. ' (' → logprob: -12.419652938842773
    9. '(uint' → logprob: -12.794652938842773
    10. '|(
' → logprob: -13.294652938842773

Token 230: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.088346359931165e-07
    2. '(int' → logprob: -14.125000953674316
    3. ' int' → logprob: -16.0
    4. '[int' → logprob: -20.0
    5. '(' → logprob: -20.625
    6. 'self' → logprob: -21.5
    7. '-int' → logprob: -21.5
    8. ')' → logprob: -21.875
    9. '
' → logprob: -21.875
    10. '   ' → logprob: -22.125

Token 231: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -9.13388703338569e-06
    2. '__' → logprob: -12.125009536743164
    3. '.' → logprob: -12.625009536743164
    4. ' .' → logprob: -15.750009536743164
    5. '.sub' → logprob: -16.375009536743164
    6. '__.__' → logprob: -17.250009536743164
    7. '().__' → logprob: -17.625009536743164
    8. '._' → logprob: -18.250009536743164
    9. ').__' → logprob: -18.750009536743164
    10. '_sub' → logprob: -19.125009536743164

Token 232: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0009166974923573434
    2. 'add' → logprob: -7.000916481018066
    3. '_sub' → logprob: -12.625916481018066
    4. '(sub' → logprob: -14.250916481018066
    5. 'neg' → logprob: -15.000916481018066
    6. '.sub' → logprob: -15.250916481018066
    7. 'mul' → logprob: -16.000917434692383
    8. ' sub' → logprob: -16.125917434692383
    9. '__' → logprob: -16.125917434692383
    10. 'abs' → logprob: -16.375917434692383

Token 233: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0004911953583359718
    2. '(' → logprob: -8.00049114227295
    3. '(self' → logprob: -9.12549114227295
    4. '__(
' → logprob: -10.25049114227295
    5. '__' → logprob: -11.87549114227295
    6. ')(' → logprob: -12.75049114227295
    7. '__((' → logprob: -14.75049114227295
    8. '__('' → logprob: -14.75049114227295
    9. '_(' → logprob: -15.12549114227295
    10. 'self' → logprob: -15.62549114227295

Token 234: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.1782583391759545e-05
    2. ' self' → logprob: -10.750031471252441
    3. '(self' → logprob: -11.500031471252441
    4. '<|end|>' → logprob: -16.750032424926758
    5. '	self' → logprob: -17.500032424926758
    6. ')' → logprob: -18.250032424926758
    7. '[self' → logprob: -18.625032424926758
    8. '_self' → logprob: -18.625032424926758
    9. '
' → logprob: -19.125032424926758
    10. ',self' → logprob: -19.375032424926758

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000890259922016412
    2. 'self' → logprob: -7.125890254974365
    3. ',self' → logprob: -9.750890731811523
    4. '(self' → logprob: -10.625890731811523
    5. ' self' → logprob: -13.625890731811523
    6. ')' → logprob: -14.000890731811523
    7. ' ,' → logprob: -14.625890731811523
    8. '(' → logprob: -15.125890731811523
    9. ',
' → logprob: -15.375890731811523
    10. 'other' → logprob: -16.500890731811523

Token 236: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4743916392326355
    2. 'other' → logprob: -0.9743916392326355
    3. ' other' → logprob: -8.34939193725586
    4. ' self' → logprob: -9.47439193725586
    5. 'Other' → logprob: -14.22439193725586
    6. '(other' → logprob: -14.84939193725586
    7. '(self' → logprob: -15.84939193725586
    8. ')' → logprob: -17.09939193725586
    9. '_other' → logprob: -17.22439193725586
    10. 'others' → logprob: -18.34939193725586

Token 237: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6395132541656494
    2. ',' → logprob: -1.1395132541656494
    3. '))' → logprob: -1.8895132541656494
    4. '),' → logprob: -6.76451301574707
    5. ')+' → logprob: -10.01451301574707
    6. ')))' → logprob: -10.38951301574707
    7. ')
' → logprob: -11.13951301574707
    8. ')}' → logprob: -11.26451301574707
    9. ' ,' → logprob: -11.26451301574707
    10. ' ))' → logprob: -11.76451301574707

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3955617845058441
    2. '<|end|>' → logprob: -1.6455618143081665
    3. ')' → logprob: -2.145561695098877
    4. '*' → logprob: -5.145561695098877
    5. 'def' → logprob: -6.145561695098877
    6. ' ' → logprob: -6.270561695098877
    7. '_' → logprob: -6.395561695098877
    8. '  ' → logprob: -7.020561695098877
    9. '<|end|>' → logprob: -7.270561695098877
    10. '**' → logprob: -7.270561695098877

Token 239: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04926382005214691
    2. '   ' → logprob: -3.2992637157440186
    3. ' def' → logprob: -4.924263954162598
    4. '_' → logprob: -5.924263954162598
    5. ')' → logprob: -6.924263954162598
    6. ' ' → logprob: -9.299263954162598
    7. '*' → logprob: -9.424263954162598
    8. '    
' → logprob: -11.049263954162598
    9. '_def' → logprob: -11.549263954162598
    10. '__' → logprob: -11.799263954162598

Token 240: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.030028043314814568
    2. ' __' → logprob: -3.5300281047821045
    3. 'mul' → logprob: -8.780028343200684
    4. '_mul' → logprob: -9.030028343200684
    5. ' mul' → logprob: -12.905028343200684
    6. '.__' → logprob: -14.280028343200684
    7. '__(' → logprob: -15.030028343200684
    8. '___' → logprob: -15.530028343200684
    9. ' ' → logprob: -17.030027389526367
    10. '_m' → logprob: -17.155027389526367

Token 241: 'neg' (ID: 18775)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -3.4121114822482923e-06
    2. 'neg' → logprob: -13.375003814697266
    3. 'r' → logprob: -13.875003814697266
    4. 'pow' → logprob: -14.500003814697266
    5. 'mult' → logprob: -15.750003814697266
    6. ' mul' → logprob: -16.250003814697266
    7. 'mod' → logprob: -17.000003814697266
    8. 'xor' → logprob: -17.250003814697266
    9. 'flo' → logprob: -17.375003814697266
    10. '_mul' → logprob: -18.000003814697266

Token 242: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006733249872922897
    2. '__' → logprob: -5.006733417510986
    3. '__(
' → logprob: -11.256732940673828
    4. '__('' → logprob: -13.006732940673828
    5. '__((' → logprob: -13.256732940673828
    6. '__(*' → logprob: -14.631732940673828
    7. '__("' → logprob: -15.756732940673828
    8. '(' → logprob: -15.881732940673828
    9. '_(' → logprob: -17.006732940673828
    10. '__[' → logprob: -17.256732940673828

Token 243: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012642296496778727
    2. '(self' → logprob: -9.125126838684082
    3. ')' → logprob: -11.125126838684082
    4. ' self' → logprob: -13.500126838684082
    5. ')(' → logprob: -14.125126838684082
    6. '(' → logprob: -15.250126838684082
    7. '
' → logprob: -16.375125885009766
    8. '	self' → logprob: -16.750125885009766
    9. '<|end|>' → logprob: -16.875125885009766
    10. 's' → logprob: -17.750125885009766

Token 244: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11891870200634003
    2. ',' → logprob: -2.4939186573028564
    3. ')(' → logprob: -4.2439188957214355
    4. ')' → logprob: -5.3689188957214355
    5. '):
' → logprob: -5.3689188957214355
    6. '(self' → logprob: -5.3689188957214355
    7. '):' → logprob: -6.8689188957214355
    8. ',self' → logprob: -9.368918418884277
    9. ' self' → logprob: -10.868918418884277
    10. ')(
' → logprob: -11.118918418884277

Token 245: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16168612241744995
    2. 'self' → logprob: -1.9116861820220947
    3. '       ' → logprob: -7.161685943603516
    4. 'return' → logprob: -8.036685943603516
    5. '(' → logprob: -8.661685943603516
    6. ' self' → logprob: -9.036685943603516
    7. '   ' → logprob: -10.036685943603516
    8. '(
' → logprob: -11.411685943603516
    9. 'def' → logprob: -12.161685943603516
    10. '	self' → logprob: -13.036685943603516

Token 246: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003550297114998102
    2. 'self' → logprob: -6.0035505294799805
    3. ' return' → logprob: -6.8785505294799805
    4. '       ' → logprob: -10.25355052947998
    5. '   ' → logprob: -12.25355052947998
    6. ' self' → logprob: -12.62855052947998
    7. '0' → logprob: -15.25355052947998
    8. '	return' → logprob: -15.37855052947998
    9. 'cls' → logprob: -15.50355052947998
    10. '
' → logprob: -16.253549575805664

Token 247: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015860427811276168
    2. ' self' → logprob: -8.750158309936523
    3. 'Mod' → logprob: -16.750158309936523
    4. '0' → logprob: -17.375158309936523
    5. '(self' → logprob: -17.375158309936523
    6. '	self' → logprob: -18.125158309936523
    7. '__' → logprob: -18.250158309936523
    8. '-self' → logprob: -19.250158309936523
    9. '-' → logprob: -19.375158309936523
    10. ' ' → logprob: -19.750158309936523

Token 248: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -2.1008713702030946e-06
    2. ' .' → logprob: -14.375001907348633
    3. '().__' → logprob: -14.625001907348633
    4. '.cls' → logprob: -15.000001907348633
    5. '__' → logprob: -15.250001907348633
    6. '__.__' → logprob: -15.875001907348633
    7. '.' → logprob: -15.875001907348633
    8. '.class' → logprob: -16.500001907348633
    9. 'class' → logprob: -18.750001907348633
    10. '::__' → logprob: -19.500001907348633

Token 249: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.0280383548888494e-06
    2. 'sub' → logprob: -15.000000953674316
    3. '.class' → logprob: -15.250000953674316
    4. '.__' → logprob: -15.500000953674316
    5. '<class' → logprob: -16.375001907348633
    6. '__' → logprob: -17.000001907348633
    7. '_class' → logprob: -17.250001907348633
    8. 'classmethod' → logprob: -17.625001907348633
    9. '"class' → logprob: -18.000001907348633
    10. 'cls' → logprob: -18.375001907348633

Token 250: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08115445822477341
    2. '__(' → logprob: -2.5811543464660645
    3. '__((' → logprob: -6.9561543464660645
    4. '(-' → logprob: -7.0811543464660645
    5. '(' → logprob: -8.581154823303223
    6. '__(
' → logprob: -8.581154823303223
    7. '__('' → logprob: -10.081154823303223
    8. '__("' → logprob: -10.956154823303223
    9. ')(__' → logprob: -12.206154823303223
    10. '(__' → logprob: -12.456154823303223

Token 251: 'int' (ID: 491)
  Prédit: '-M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-M' → logprob: -0.09003470093011856
    2. ' -' → logprob: -2.8400347232818604
    3. '0' → logprob: -4.340034484863281
    4. '-mod' → logprob: -4.715034484863281
    5. '-' → logprob: -6.090034484863281
    6. '(-' → logprob: -6.090034484863281
    7. '-Mod' → logprob: -7.590034484863281
    8. '-self' → logprob: -8.590034484863281
    9. '-super' → logprob: -9.215034484863281
    10. '-int' → logprob: -9.590034484863281

Token 252: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -5.9795445849886164e-05
    2. '__' → logprob: -10.375060081481934
    3. '().__' → logprob: -11.750060081481934
    4. '.-' → logprob: -11.750060081481934
    5. '.' → logprob: -12.500060081481934
    6. '__.__' → logprob: -12.625060081481934
    7. '-' → logprob: -13.250060081481934
    8. ').__' → logprob: -13.625060081481934
    9. '.neg' → logprob: -13.750060081481934
    10. '(' → logprob: -14.375060081481934

Token 253: 'neg' (ID: 18775)
  Prédit: 'neg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -7.52919222577475e-05
    2. 'sub' → logprob: -9.500075340270996
    3. '-neg' → logprob: -16.00007438659668
    4. '_neg' → logprob: -16.50007438659668
    5. ' neg' → logprob: -16.62507438659668
    6. 'add' → logprob: -17.12507438659668
    7. 'abs' → logprob: -17.37507438659668
    8. 'new' → logprob: -17.62507438659668
    9. '.neg' → logprob: -18.87507438659668
    10. 'Neg' → logprob: -19.50007438659668

Token 254: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -4.227250610711053e-05
    2. '(self' → logprob: -10.250041961669922
    3. '(' → logprob: -12.625041961669922
    4. '__' → logprob: -13.375041961669922
    5. '__(
' → logprob: -13.625041961669922
    6. '_(' → logprob: -14.625041961669922
    7. 'self' → logprob: -15.625041961669922
    8. '__((' → logprob: -16.250041961669922
    9. '__('' → logprob: -17.250041961669922
    10. '__("' → logprob: -17.750041961669922

Token 255: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.0219828002154827e-05
    2. '(self' → logprob: -11.125020027160645
    3. ' self' → logprob: -12.125020027160645
    4. '
' → logprob: -16.75002098083496
    5. '	self' → logprob: -18.75002098083496
    6. ')' → logprob: -19.62502098083496
    7. '[self' → logprob: -20.37502098083496
    8. '0' → logprob: -20.75002098083496
    9. '```' → logprob: -21.50002098083496
    10. 's' → logprob: -21.62502098083496

Token 256: '))

' (ID: 9746)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0824756771326065
    2. ',' → logprob: -2.7074756622314453
    3. 'self' → logprob: -4.707475662231445
    4. ')' → logprob: -6.582475662231445
    5. ',self' → logprob: -7.207475662231445
    6. '(' → logprob: -7.332475662231445
    7. '))' → logprob: -7.457475662231445
    8. '),' → logprob: -10.457475662231445
    9. ')(' → logprob: -10.832475662231445
    10. ' (' → logprob: -11.707475662231445

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46448299288749695
    2. ')' → logprob: -1.0894830226898193
    3. '<|end|>' → logprob: -4.21448278427124
    4. 'def' → logprob: -4.33948278427124
    5. '()' → logprob: -6.08948278427124
    6. ' def' → logprob: -6.21448278427124
    7. '(' → logprob: -7.33948278427124
    8. ' ' → logprob: -7.33948278427124
    9. '*' → logprob: -7.71448278427124
    10. '<|end|>' → logprob: -8.339483261108398

Token 258: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006523760501295328
    2. '   ' → logprob: -5.256523609161377
    3. ' def' → logprob: -6.756523609161377
    4. ')' → logprob: -9.381524085998535
    5. '__' → logprob: -10.631524085998535
    6. ' ' → logprob: -11.631524085998535
    7. '	def' → logprob: -12.131524085998535
    8. '  ' → logprob: -13.506524085998535
    9. '
' → logprob: -15.381524085998535
    10. '    
' → logprob: -15.631524085998535

Token 259: ' __' (ID: 2516)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.13402479887008667
    2. '__' → logprob: -2.8840248584747314
    3. ' __' → logprob: -3.6340248584747314
    4. ' mul' → logprob: -3.8840248584747314
    5. 'mod' → logprob: -5.009024620056152
    6. '_mul' → logprob: -5.009024620056152
    7. 'abs' → logprob: -5.384024620056152
    8. 'pow' → logprob: -6.259024620056152
    9. 'invert' → logprob: -6.759024620056152
    10. '_mod' → logprob: -7.009024620056152

Token 260: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -1.1994775377388578e-05
    2. 'r' → logprob: -12.125012397766113
    3. 'pow' → logprob: -12.250012397766113
    4. 'mod' → logprob: -14.250012397766113
    5. 'rm' → logprob: -15.500012397766113
    6. 'pos' → logprob: -15.625012397766113
    7. 'flo' → logprob: -15.625012397766113
    8. 'abs' → logprob: -15.875012397766113
    9. 'eq' → logprob: -16.500011444091797
    10. ' mul' → logprob: -16.875011444091797

Token 261: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.038173455744981766
    2. '__' → logprob: -3.2881734371185303
    3. '__('' → logprob: -9.78817367553711
    4. '__((' → logprob: -10.41317367553711
    5. '__(*' → logprob: -10.78817367553711
    6. '__(
' → logprob: -11.03817367553711
    7. '(' → logprob: -12.41317367553711
    8. '__("' → logprob: -12.41317367553711
    9. '___' → logprob: -14.78817367553711
    10. '__.__' → logprob: -15.16317367553711

Token 262: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0445127372804563e-05
    2. ' self' → logprob: -12.25001049041748
    3. '(self' → logprob: -12.37501049041748
    4. ')' → logprob: -14.62501049041748
    5. '<|end|>' → logprob: -14.62501049041748
    6. 'other' → logprob: -14.75001049041748
    7. '	self' → logprob: -17.750009536743164
    8. '__' → logprob: -17.750009536743164
    9. '(' → logprob: -18.125009536743164
    10. '*self' → logprob: -18.250009536743164

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5961531400680542
    2. '__(' → logprob: -1.0961531400680542
    3. '(self' → logprob: -2.3461532592773438
    4. 'self' → logprob: -4.221153259277344
    5. '(' → logprob: -6.471153259277344
    6. ')(' → logprob: -6.596153259277344
    7. '__,' → logprob: -7.221153259277344
    8. '__' → logprob: -8.221153259277344
    9. ',self' → logprob: -8.221153259277344
    10. ' (' → logprob: -8.846153259277344

Token 264: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.03492731600999832
    2. 'self' → logprob: -3.5349273681640625
    3. ' other' → logprob: -5.2849273681640625
    4. ' self' → logprob: -9.284927368164062
    5. 'Other' → logprob: -13.034927368164062
    6. '_other' → logprob: -14.784927368164062
    7. '<|end|>' → logprob: -15.159927368164062
    8. ' ' → logprob: -15.909927368164062
    9. '(other' → logprob: -16.159927368164062
    10. '(self' → logprob: -16.534927368164062

Token 265: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002651871182024479
    2. '):' → logprob: -6.002651691436768
    3. '):
' → logprob: -9.877652168273926
    4. ' ,' → logprob: -10.002652168273926
    5. '(self' → logprob: -10.377652168273926
    6. 'self' → logprob: -10.627652168273926
    7. '<|end|>' → logprob: -11.627652168273926
    8. ')' → logprob: -12.502652168273926
    9. '(' → logprob: -12.502652168273926
    10. ',self' → logprob: -13.377652168273926

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014037039130926132
    2. 'return' → logprob: -4.764037132263184
    3. 'self' → logprob: -5.889037132263184
    4. '(self' → logprob: -6.389037132263184
    5. ' return' → logprob: -7.139037132263184
    6. ' self' → logprob: -8.889037132263184
    7. '   ' → logprob: -11.139037132263184
    8. ' ' → logprob: -12.389037132263184
    9. '      ' → logprob: -13.389037132263184
    10. '[self' → logprob: -14.014037132263184

Token 267: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.417976379045285e-05
    2. 'return' (adapté à ' return') → logprob: -10.250043869018555
    3. ' self' → logprob: -11.750043869018555
    4. '       ' → logprob: -14.625043869018555
    5. '(self' → logprob: -15.125043869018555
    6. '   ' → logprob: -15.750043869018555
    7. '	self' → logprob: -19.125043869018555
    8. ' ' → logprob: -19.750043869018555
    9. 'cls' → logprob: -19.750043869018555
    10. '[self' → logprob: -20.125043869018555

Token 268: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0788937583565712
    2. ' self' → logprob: -2.5788936614990234
    3. ' ' → logprob: -13.078893661499023
    4. '(self' → logprob: -13.828893661499023
    5. '  ' → logprob: -15.453893661499023
    6. '	self' → logprob: -15.703893661499023
    7. '   ' → logprob: -15.703893661499023
    8. '    ' → logprob: -16.453893661499023
    9. ' Modular' → logprob: -16.578893661499023
    10. 'Mod' → logprob: -16.828893661499023

Token 269: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.0001246348983841017
    2. '__' → logprob: -9.00012493133545
    3. '().__' → logprob: -14.25012493133545
    4. '__.__' → logprob: -15.12512493133545
    5. 'class' → logprob: -15.75012493133545
    6. ' __' → logprob: -15.87512493133545
    7. '.' → logprob: -16.375123977661133
    8. ' .' → logprob: -18.500123977661133
    9. '*' → logprob: -18.750123977661133
    10. '.*' → logprob: -18.875123977661133

Token 270: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00011129142512800172
    2. 'mul' → logprob: -9.12511157989502
    3. 'add' → logprob: -14.12511157989502
    4. '<class' → logprob: -14.50011157989502
    5. 'cls' → logprob: -14.62511157989502
    6. '_class' → logprob: -15.62511157989502
    7. 'sub' → logprob: -15.75011157989502
    8. 'new' → logprob: -16.000110626220703
    9. '
' → logprob: -16.375110626220703
    10. '```' → logprob: -16.625110626220703

Token 271: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07926923781633377
    2. '(int' → logprob: -2.5792691707611084
    3. '(' → logprob: -7.9542694091796875
    4. '()(' → logprob: -11.579269409179688
    5. ')(' → logprob: -12.454269409179688
    6. '__(
' → logprob: -12.829269409179688
    7. ''(' → logprob: -13.329269409179688
    8. '__' → logprob: -13.579269409179688
    9. '__((' → logprob: -13.829269409179688
    10. '_(' → logprob: -13.829269409179688

Token 272: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.2729995988775045e-06
    2. ' int' → logprob: -12.000006675720215
    3. '(int' → logprob: -16.6250057220459
    4. '   ' → logprob: -19.2500057220459
    5. ' ' → logprob: -19.5000057220459
    6. 'self' → logprob: -20.1250057220459
    7. '  ' → logprob: -20.5000057220459
    8. ')' → logprob: -21.2500057220459
    9. '
' → logprob: -21.8750057220459
    10. '[int' → logprob: -22.0000057220459

Token 273: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -1.9981420336989686e-05
    2. '__' → logprob: -11.000020027160645
    3. '().__' → logprob: -13.250020027160645
    4. '__.__' → logprob: -14.000020027160645
    5. '.' → logprob: -15.000020027160645
    6. ').__' → logprob: -16.375019073486328
    7. '.*' → logprob: -16.375019073486328
    8. '(__' → logprob: -16.625019073486328
    9. ' .' → logprob: -18.250019073486328
    10. ' __' → logprob: -18.500019073486328

Token 274: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -7.896309739408025e-07
    2. '_mul' → logprob: -14.500000953674316
    3. ' mul' → logprob: -16.375
    4. 'add' → logprob: -16.75
    5. '__' → logprob: -17.25
    6. 'mult' → logprob: -17.75
    7. 'imul' → logprob: -18.25
    8. 'multip' → logprob: -18.75
    9. '.mul' → logprob: -18.875
    10. 'Mul' → logprob: -19.5

Token 275: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -9.610702363715973e-06
    2. '__(
' → logprob: -11.750009536743164
    3. '(self' → logprob: -13.750009536743164
    4. '__' → logprob: -15.000009536743164
    5. '(' → logprob: -16.250009536743164
    6. '__('' → logprob: -17.125009536743164
    7. '_(' → logprob: -17.500009536743164
    8. '__(*' → logprob: -17.500009536743164
    9. '__((' → logprob: -17.750009536743164
    10. 'self' → logprob: -18.625009536743164

Token 276: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.684157026233152e-05
    2. ' self' → logprob: -10.000077247619629
    3. '(self' → logprob: -10.375077247619629
    4. ',self' → logprob: -17.000076293945312
    5. '	self' → logprob: -17.625076293945312
    6. '<|end|>' → logprob: -17.625076293945312
    7. '
' → logprob: -19.000076293945312
    8. '[self' → logprob: -19.625076293945312
    9. '*self' → logprob: -19.750076293945312
    10. '=self' → logprob: -20.000076293945312

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.135819760151207e-05
    2. '(self' → logprob: -10.00007152557373
    3. ',self' → logprob: -11.12507152557373
    4. 'self' → logprob: -11.75007152557373
    5. ' ,' → logprob: -13.12507152557373
    6. '(' → logprob: -14.37507152557373
    7. '   ' → logprob: -15.25007152557373
    8. '       ' → logprob: -16.125070571899414
    9. '__,' → logprob: -16.250070571899414
    10. ',
' → logprob: -16.625070571899414

Token 278: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.003178306156769395
    2. ' other' → logprob: -5.753178119659424
    3. '(other' → logprob: -15.128178596496582
    4. 'self' → logprob: -15.378178596496582
    5. 'Other' → logprob: -15.753178596496582
    6. '_other' → logprob: -19.128177642822266
    7. '.other' → logprob: -19.503177642822266
    8. '   ' → logprob: -19.628177642822266
    9. 'OTHER' → logprob: -20.003177642822266
    10. 'int' → logprob: -20.128177642822266

Token 279: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.447090208530426
    2. '))' → logprob: -1.0720901489257812
    3. ',' → logprob: -4.072090148925781
    4. '%' → logprob: -7.197090148925781
    5. '),' → logprob: -8.822090148925781
    6. ' ))' → logprob: -9.322090148925781
    7. ')))' → logprob: -9.822090148925781
    8. ' %' → logprob: -10.572090148925781
    9. ')%' → logprob: -10.572090148925781
    10. ' )' → logprob: -10.822090148925781

Token 280: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49795135855674744
    2. '<|end|>' → logprob: -1.1229513883590698
    3. '   ' → logprob: -2.9979512691497803
    4. ' ' → logprob: -4.747951507568359
    5. '*' → logprob: -6.372951507568359
    6. '<|end|>' → logprob: -6.622951507568359
    7. ',' → logprob: -6.872951507568359
    8. '  ' → logprob: -7.497951507568359
    9. 'def' → logprob: -7.622951507568359
    10. '()' → logprob: -7.622951507568359

Token 281: ' def' (ID: 1056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08175454288721085
    2. '<|end|>' → logprob: -2.831754446029663
    3. 'def' (adapté à ' def') → logprob: -4.706754684448242
    4. '*' → logprob: -5.081754684448242
    5. '   ' → logprob: -6.706754684448242
    6. '%' → logprob: -6.831754684448242
    7. '(' → logprob: -7.456754684448242
    8. ' ' → logprob: -8.456754684448242
    9. '_' → logprob: -8.581754684448242
    10. '<|end|>' → logprob: -8.831754684448242

Token 282: ' __' (ID: 2516)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.7929699420928955
    2. '__' → logprob: -1.1679699420928955
    3. ' __' → logprob: -1.5429699420928955
    4. ' pow' → logprob: -3.9179699420928955
    5. '_pow' → logprob: -5.917969703674316
    6. 'mod' → logprob: -9.417969703674316
    7. '**' → logprob: -10.167969703674316
    8. '```' → logprob: -11.292969703674316
    9. '
' → logprob: -12.042969703674316
    10. '_mod' → logprob: -12.292969703674316

Token 283: 'flo' (ID: 174761)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.01964772306382656
    2. 'flo' → logprob: -4.019647598266602
    3. 'tr' → logprob: -6.519647598266602
    4. 'rm' → logprob: -11.519647598266602
    5. 'mod' → logprob: -11.894647598266602
    6. 'eq' → logprob: -13.894647598266602
    7. 'r' → logprob: -14.019647598266602
    8. 'int' → logprob: -14.019647598266602
    9. 'power' → logprob: -14.519647598266602
    10. 'floor' → logprob: -14.519647598266602

Token 284: 'ord' (ID: 604)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0053969188593328
    2. 'ord' → logprob: -5.380396842956543
    3. '__' → logprob: -7.255396842956543
    4. 'o' → logprob: -10.505396842956543
    5. '(or' → logprob: -11.755396842956543
    6. '```' → logprob: -11.880396842956543
    7. 'r' → logprob: -12.005396842956543
    8. 'orld' → logprob: -12.630396842956543
    9. '__
' → logprob: -12.880396842956543
    10. '_or' → logprob: -13.130396842956543

Token 285: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.001873189932666719
    2. 'div' → logprob: -6.876873016357422
    3. '__' → logprob: -7.626873016357422
    4. '_div' → logprob: -8.251873016357422
    5. 'Div' → logprob: -9.876873016357422
    6. 'or' → logprob: -11.376873016357422
    7. ' division' → logprob: -12.126873016357422
    8. ' div' → logprob: -12.251873016357422
    9. '```' → logprob: -12.751873016357422
    10. 'loor' → logprob: -12.876873016357422

Token 286: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007137430948205292
    2. '__' → logprob: -7.25071382522583
    3. '(' → logprob: -13.750713348388672
    4. '__(
' → logprob: -13.750713348388672
    5. '__('' → logprob: -14.125713348388672
    6. '__((' → logprob: -14.625713348388672
    7. '__(*' → logprob: -15.250713348388672
    8. '(self' → logprob: -16.625713348388672
    9. '__("' → logprob: -16.750713348388672
    10. '_(' → logprob: -17.500713348388672

Token 287: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0018403483554720879
    2. '(self' → logprob: -6.376840114593506
    3. '__(' → logprob: -9.501840591430664
    4. ' self' → logprob: -9.876840591430664
    5. '<|end|>' → logprob: -11.751840591430664
    6. '(' → logprob: -13.501840591430664
    7. ')' → logprob: -14.001840591430664
    8. ')(' → logprob: -14.126840591430664
    9. '__' → logprob: -14.501840591430664
    10. 'def' → logprob: -16.001840591430664

Token 288: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0807499885559082
    2. '__,' → logprob: -2.830749988555908
    3. ',' → logprob: -4.705749988555908
    4. '__' → logprob: -4.830749988555908
    5. '(' → logprob: -7.455749988555908
    6. 'self' → logprob: -8.58074951171875
    7. '_,' → logprob: -8.83074951171875
    8. '(self' → logprob: -9.08074951171875
    9. ')(' → logprob: -9.08074951171875
    10. '__(*' → logprob: -9.08074951171875

Token 289: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.009314118884503841
    2. ' other' → logprob: -5.259314060211182
    3. 'self' → logprob: -5.509314060211182
    4. 'Other' → logprob: -10.75931453704834
    5. ' self' → logprob: -13.38431453704834
    6. '_other' → logprob: -16.134313583374023
    7. '(other' → logprob: -16.259313583374023
    8. 'cls' → logprob: -18.259313583374023
    9. '.other' → logprob: -18.259313583374023
    10. '__' → logprob: -18.384313583374023

Token 290: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012532840482890606
    2. '):
' → logprob: -4.387532711029053
    3. '):
' → logprob: -11.762533187866211
    4. ')' → logprob: -11.762533187866211
    5. '):

' → logprob: -12.387533187866211
    6. ' ):' → logprob: -13.512533187866211
    7. ',' → logprob: -13.637533187866211
    8. ':' → logprob: -15.512533187866211
    9. '   ' → logprob: -15.887533187866211
    10. 'self' → logprob: -16.01253318786621

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02686353586614132
    2. '(self' → logprob: -4.0268635749816895
    3. 'self' → logprob: -5.2768635749816895
    4. '(' → logprob: -6.7768635749816895
    5. ' self' → logprob: -7.1518635749816895
    6. '):
' → logprob: -7.5268635749816895
    7. ')' → logprob: -7.7768635749816895
    8. 'return' → logprob: -8.526863098144531
    9. 'def' → logprob: -8.901863098144531
    10. ',' → logprob: -9.276863098144531

Token 292: ' inv' (ID: 1827)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09795917570590973
    2. 'other' → logprob: -2.722959280014038
    3. 'self' → logprob: -4.222959041595459
    4. '       ' → logprob: -4.597959041595459
    5. 'inv' (adapté à ' inv') → logprob: -6.472959041595459
    6. 'inverse' → logprob: -7.472959041595459
    7. 'mod' → logprob: -8.097959518432617
    8. ' return' → logprob: -8.972959518432617
    9. 'rhs' → logprob: -9.472959518432617
    10. 'x' → logprob: -9.722959518432617

Token 293: ',' (ID: 11)
  Prédit: '_other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.0797957181930542
    2. ' =' → logprob: -2.5797958374023438
    3. '=' → logprob: -7.579795837402344
    4. '_self' → logprob: -8.829795837402344
    5. '_inv' → logprob: -9.204795837402344
    6. 'other' → logprob: -10.329795837402344
    7. 'er' → logprob: -10.454795837402344
    8. '_' → logprob: -10.579795837402344
    9. '_value' → logprob: -11.329795837402344
    10. '_val' → logprob: -12.079795837402344

Token 294: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001226062304340303
    2. ' _' → logprob: -7.50122594833374
    3. '_=' → logprob: -7.50122594833374
    4. '_m' → logprob: -10.626226425170898
    5. '_mod' → logprob: -10.626226425170898
    6. '_inv' → logprob: -10.876226425170898
    7. '_sign' → logprob: -11.251226425170898
    8. '_exp' → logprob: -11.876226425170898
    9. ' =' → logprob: -12.001226425170898
    10. '_rem' → logprob: -12.626226425170898

Token 295: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009761401452124119
    2. ' =' → logprob: -4.634761333465576
    3. '<|end|>' → logprob: -13.134761810302734
    4. ',' → logprob: -13.509761810302734
    5. ')' → logprob: -13.884761810302734
    6. ')=' → logprob: -14.759761810302734
    7. ' ' → logprob: -15.759761810302734
    8. '```' → logprob: -16.509761810302734
    9. '<|end|>' → logprob: -16.759761810302734
    10. '=_' → logprob: -17.259761810302734

Token 296: ' extended' (ID: 17290)
  Prédit: 'extended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extended' → logprob: -0.004078878089785576
    2. ' extended' → logprob: -5.5040788650512695
    3. '
' → logprob: -15.37907886505127
    4. 'Extended' → logprob: -15.87907886505127
    5. 'expanded' → logprob: -16.504079818725586
    6. '   ' → logprob: -17.004079818725586
    7. 'ext' → logprob: -17.504079818725586
    8. 'extend' → logprob: -17.879079818725586
    9. '_extended' → logprob: -18.629079818725586
    10. ' ' → logprob: -18.879079818725586

Token 297: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.0070938654243946075
    2. 'e' → logprob: -5.382093906402588
    3. 'eu' → logprob: -6.007093906402588
    4. 'Eu' → logprob: -12.50709342956543
    5. '_' → logprob: -12.88209342956543
    6. 'eur' → logprob: -13.25709342956543
    7. 'def' → logprob: -15.50709342956543
    8. 'ed' → logprob: -16.25709342956543
    9. 'ee' → logprob: -16.38209342956543
    10. '__' → logprob: -16.50709342956543

Token 298: 'u' (ID: 84)
  Prédit: 'clidean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clidean' → logprob: -0.06414493918418884
    2. 'u' → logprob: -2.8141448497772217
    3. 'ucl' → logprob: -6.939145088195801
    4. 'uc' → logprob: -7.189145088195801
    5. 'clid' → logprob: -8.6891450881958
    6. 'c' → logprob: -9.8141450881958
    7. 'ucle' → logprob: -10.0641450881958
    8. 'cul' → logprob: -10.3141450881958
    9. 'eu' → logprob: -10.4391450881958
    10. 'cl' → logprob: -10.8141450881958

Token 299: 'clidean' (ID: 116188)
  Prédit: 'clidean'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clidean' → logprob: -0.0009109867387451231
    2. 'c' → logprob: -7.375910758972168
    3. 'cl' → logprob: -8.875910758972168
    4. 'idean' → logprob: -9.250910758972168
    5. 'clid' → logprob: -10.250910758972168
    6. 'cle' → logprob: -12.875910758972168
    7. 'algorithm' → logprob: -12.875910758972168
    8. 'cd' → logprob: -13.500910758972168
    9. 'idian' → logprob: -14.125910758972168
    10. 'de' → logprob: -14.250910758972168

Token 300: '_algorithm' (ID: 154851)
  Prédit: '_algorithm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_algorithm' → logprob: -7.3458322731312364e-06
    2. 'algorithm' → logprob: -11.875007629394531
    3. '_alg' → logprob: -15.000007629394531
    4. 'Algorithm' → logprob: -18.12500762939453
    5. '_algo' → logprob: -19.50000762939453
    6. '_method' → logprob: -19.62500762939453
    7. ' algorithm' → logprob: -19.62500762939453
    8. '算法' → logprob: -19.75000762939453
    9. '_function' → logprob: -20.00000762939453
    10. '_' → logprob: -20.12500762939453

Token 301: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.07482428103685379
    2. '(M' → logprob: -3.449824333190918
    3. '(self' → logprob: -3.699824333190918
    4. 'other' → logprob: -4.449824333190918
    5. '(int' → logprob: -5.824824333190918
    6. '(' → logprob: -7.324824333190918
    7. 'self' → logprob: -9.074824333190918
    8. 'MOD' → logprob: -9.074824333190918
    9. '(Mod' → logprob: -10.574824333190918
    10. '(mod' → logprob: -10.574824333190918

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027479345444589853
    2. '.value' → logprob: -6.502748012542725
    3. '%' → logprob: -7.252748012542725
    4. ' ,' → logprob: -8.502747535705566
    5. 'value' → logprob: -8.877747535705566
    6. ' %' → logprob: -9.502747535705566
    7. ')' → logprob: -9.627747535705566
    8. ',value' → logprob: -10.752747535705566
    9. '.mod' → logprob: -12.877747535705566
    10. ' ' → logprob: -12.877747535705566

Token 303: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -8.2994620242971e-06
    2. ' MOD' → logprob: -11.750008583068848
    3. '_MOD' → logprob: -15.500008583068848
    4. 'int' → logprob: -16.00000762939453
    5. 'MO' → logprob: -17.00000762939453
    6. '   ' → logprob: -17.12500762939453
    7. 'Mod' → logprob: -18.00000762939453
    8. '.MOD' → logprob: -18.12500762939453
    9. ')' → logprob: -18.75000762939453
    10. 'MODULE' → logprob: -19.12500762939453

Token 304: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -6.2729995988775045e-06
    2. 'US' → logprob: -12.875006675720215
    3. 'ULO' → logprob: -14.000006675720215
    4. '```' → logprob: -14.250006675720215
    5. 'OL' → logprob: -14.375006675720215
    6. '
' → logprob: -14.625006675720215
    7. 'L' → logprob: -15.250006675720215
    8. 'ULAR' → logprob: -16.0000057220459
    9. 'ULE' → logprob: -16.3750057220459
    10. 'MOD' → logprob: -16.5000057220459

Token 305: 'US' (ID: 3042)
  Prédit: 'US'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'US' → logprob: -0.005248225759714842
    2. 'S' → logprob: -5.255248069763184
    3. 'OS' → logprob: -12.505248069763184
    4. '   ' → logprob: -13.005248069763184
    5. 'us' → logprob: -13.505248069763184
    6. '\' → logprob: -13.630248069763184
    7. 'УС' → logprob: -13.755248069763184
    8. 'AS' → logprob: -14.130248069763184
    9. '
' → logprob: -14.755248069763184
    10. '```' → logprob: -15.005248069763184

Token 306: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018158255144953728
    2. ')
' → logprob: -4.018158435821533
    3. ')

' → logprob: -12.518157958984375
    4. ')
' → logprob: -13.143157958984375
    5. '   ' → logprob: -13.768157958984375
    6. ' )' → logprob: -14.268157958984375
    7. ')[' → logprob: -14.518157958984375
    8. ' )
' → logprob: -15.768157958984375
    9. ')`' → logprob: -16.643157958984375
    10. '       ' → logprob: -16.893157958984375

Token 307: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4840845465660095
    2. '       ' → logprob: -0.9840845465660095
    3. '<|end|>' → logprob: -5.609084606170654
    4. ' )' → logprob: -5.734084606170654
    5. '(' → logprob: -6.984084606170654
    6. '()' → logprob: -7.484084606170654
    7. '*' → logprob: -7.859084606170654
    8. ')
' → logprob: -8.359084129333496
    9. ' *' → logprob: -8.859084129333496
    10. ',' → logprob: -8.984084129333496

Token 308: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.047134305234067e-05
    2. '       ' → logprob: -10.875030517578125
    3. 'result' → logprob: -12.375030517578125
    4. ' return' → logprob: -12.375030517578125
    5. 'inv' → logprob: -12.875030517578125
    6. '
' → logprob: -15.375030517578125
    7. '   ' → logprob: -16.375030517578125
    8. 'if' → logprob: -16.500030517578125
    9. '	return' → logprob: -16.625030517578125
    10. '        
' → logprob: -16.875030517578125

Token 309: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015229015843942761
    2. ' self' → logprob: -8.875152587890625
    3. 'Mod' → logprob: -11.625152587890625
    4. ' Modular' → logprob: -13.375152587890625
    5. '(self' → logprob: -13.875152587890625
    6. 'super' → logprob: -14.750152587890625
    7. 'cls' → logprob: -15.250152587890625
    8. '   ' → logprob: -15.500152587890625
    9. '```' → logprob: -17.375152587890625
    10. '	self' → logprob: -17.625152587890625

Token 310: ' *' (ID: 425)
  Prédit: '.__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.021323589608073235
    2. '*' → logprob: -4.7713236808776855
    3. ' *' → logprob: -4.7713236808776855
    4. '__' → logprob: -5.5213236808776855
    5. ' __' → logprob: -9.521323204040527
    6. '.*' → logprob: -10.896323204040527
    7. '__.__' → logprob: -11.146323204040527
    8. '```' → logprob: -11.271323204040527
    9. '().__' → logprob: -11.646323204040527
    10. 'class' → logprob: -11.771323204040527

Token 311: ' inv' (ID: 1827)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3661405146121979
    2. 'inv' → logprob: -1.2411404848098755
    3. 'Mod' → logprob: -4.116140365600586
    4. ' inv' → logprob: -7.616140365600586
    5. ' self' → logprob: -8.241140365600586
    6. 'cls' → logprob: -9.366140365600586
    7. '(inv' → logprob: -9.491140365600586
    8. 'mod' → logprob: -10.116140365600586
    9. ' Modular' → logprob: -10.116140365600586
    10. '(self' → logprob: -10.366140365600586

Token 312: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 315: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.21587571501731873
    2. ' __' → logprob: -1.8408757448196411
    3. 'pow' → logprob: -3.4658756256103516
    4. '_pow' → logprob: -5.840875625610352
    5. ' pow' → logprob: -6.965875625610352
    6. '**' → logprob: -8.840875625610352
    7. 'mod' → logprob: -9.590875625610352
    8. '```' → logprob: -9.715875625610352
    9. 'r' → logprob: -10.465875625610352
    10. '_mod' → logprob: -11.340875625610352

Token 316: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.17203521728515625
    2. 'eq' → logprob: -2.4220352172851562
    3. 'tr' → logprob: -2.9220352172851562
    4. 'mod' → logprob: -4.547035217285156
    5. 'rf' → logprob: -5.547035217285156
    6. 'flo' → logprob: -7.672035217285156
    7. 'r' → logprob: -8.172035217285156
    8. 'repr' → logprob: -9.172035217285156
    9. 'rm' → logprob: -9.547035217285156
    10. 'xor' → logprob: -11.172035217285156

Token 317: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04334455728530884
    2. '(' → logprob: -3.668344497680664
    3. '__' → logprob: -4.418344497680664
    4. '__(*' → logprob: -6.293344497680664
    5. '__('' → logprob: -6.668344497680664
    6. '__((' → logprob: -7.043344497680664
    7. '__(
' → logprob: -7.418344497680664
    8. '(self' → logprob: -9.418344497680664
    9. '_(' → logprob: -10.168344497680664
    10. '__("' → logprob: -10.293344497680664

Token 318: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.696889623621246e-06
    2. ' self' → logprob: -13.87500286102295
    3. 'other' → logprob: -14.12500286102295
    4. ')' → logprob: -14.75000286102295
    5. '   ' → logprob: -15.00000286102295
    6. '(self' → logprob: -16.125001907348633
    7. '       ' → logprob: -17.250001907348633
    8. '  ' → logprob: -18.125001907348633
    9. '
' → logprob: -18.625001907348633
    10. ' ' → logprob: -18.750001907348633

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035805054008960724
    2. '(' → logprob: -4.2858052253723145
    3. '__(' → logprob: -4.5358052253723145
    4. '__,' → logprob: -4.6608052253723145
    5. '__' → logprob: -8.285804748535156
    6. 'self' → logprob: -8.285804748535156
    7. '(self' → logprob: -8.410804748535156
    8. ',(' → logprob: -8.660804748535156
    9. ' ,' → logprob: -9.535804748535156
    10. '__(*' → logprob: -9.660804748535156

Token 320: ' exponent' (ID: 51159)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.005266007501631975
    2. ' other' → logprob: -5.380266189575195
    3. 'MOD' → logprob: -8.005266189575195
    4. '<|end|>' → logprob: -9.630266189575195
    5. 'Other' → logprob: -9.755266189575195
    6. ' ' → logprob: -9.880266189575195
    7. 'self' → logprob: -10.255266189575195
    8. ')' → logprob: -10.255266189575195
    9. ' MOD' → logprob: -10.755266189575195
    10. 'int' → logprob: -11.380266189575195

Token 321: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5786957740783691
    2. ',' → logprob: -0.8286957740783691
    3. '):
' → logprob: -5.953695774078369
    4. 'self' → logprob: -9.953695297241211
    5. ' ,' → logprob: -10.328695297241211
    6. ' ):' → logprob: -10.453695297241211
    7. '):
' → logprob: -11.203695297241211
    8. '   ' → logprob: -11.328695297241211
    9. ')' → logprob: -12.328695297241211
    10. ':' → logprob: -12.328695297241211

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00559041416272521
    2. 'result' → logprob: -5.380590438842773
    3. 'self' → logprob: -7.505590438842773
    4. ' result' → logprob: -8.130590438842773
    5. 'def' → logprob: -10.505590438842773
    6. 'pow' → logprob: -10.755590438842773
    7. ' self' → logprob: -11.130590438842773
    8. ',' → logprob: -11.505590438842773
    9. '(self' → logprob: -11.505590438842773
    10. '0' → logprob: -11.755590438842773

Token 323: ' return' (ID: 622)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.025998232886195183
    2. 'return' (adapté à ' return') → logprob: -3.775998115539551
    3. 'result' → logprob: -6.025998115539551
    4. '   ' → logprob: -9.02599811553955
    5. '       ' → logprob: -9.77599811553955
    6. 'super' → logprob: -10.27599811553955
    7. 'power' → logprob: -10.40099811553955
    8. 'mod' → logprob: -10.52599811553955
    9. 'self' → logprob: -10.90099811553955
    10. '
' → logprob: -11.27599811553955

Token 324: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002734858775511384
    2. 'pow' → logprob: -6.252734661102295
    3. 'Mod' → logprob: -7.252734661102295
    4. ' Modular' → logprob: -10.002735137939453
    5. ' self' → logprob: -10.502735137939453
    6. 'super' → logprob: -10.877735137939453
    7. 'mod' → logprob: -13.127735137939453
    8. 'type' → logprob: -13.752735137939453
    9. ' pow' → logprob: -14.252735137939453
    10. ' Mod' → logprob: -14.877735137939453

Token 325: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.020010601729154587
    2. '**' → logprob: -4.270010471343994
    3. '__' → logprob: -5.770010471343994
    4. ' if' → logprob: -6.520010471343994
    5. 'class' → logprob: -8.145010948181152
    6. ' __' → logprob: -8.895010948181152
    7. '().__' → logprob: -8.895010948181152
    8. ' **' → logprob: -9.020010948181152
    9. 'if' → logprob: -9.270010948181152
    10. '
' → logprob: -9.770010948181152

Token 326: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -6.134509021649137e-05
    2. 'pow' → logprob: -9.75006103515625
    3. '_class' → logprob: -13.12506103515625
    4. 'new' → logprob: -14.25006103515625
    5. 'mul' → logprob: -16.12506103515625
    6. 'clas' → logprob: -16.37506103515625
    7. '
' → logprob: -17.50006103515625
    8. 'cls' → logprob: -17.50006103515625
    9. '<class' → logprob: -17.62506103515625
    10. 'cl' → logprob: -17.62506103515625

Token 327: '__(' (ID: 8241)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.6530653238296509
    2. '__(' → logprob: -0.9030653238296509
    3. '(int' → logprob: -2.6530652046203613
    4. '(super' → logprob: -5.903065204620361
    5. '>(' → logprob: -7.528065204620361
    6. '(' → logprob: -8.52806568145752
    7. '"(' → logprob: -9.15306568145752
    8. ')(' → logprob: -10.02806568145752
    9. 'pow' → logprob: -10.27806568145752
    10. '}(' → logprob: -10.27806568145752

Token 328: 'int' (ID: 491)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -4.35837464465294e-05
    2. 'int' → logprob: -10.125043869018555
    3. ' pow' → logprob: -12.875043869018555
    4. 'super' → logprob: -15.000043869018555
    5. '   ' → logprob: -15.375043869018555
    6. '(pow' → logprob: -15.500043869018555
    7. 'power' → logprob: -16.750043869018555
    8. '
' → logprob: -17.375043869018555
    9. '1' → logprob: -17.500043869018555
    10. '

' → logprob: -19.125043869018555

Token 329: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.02870551124215126
    2. '.pow' → logprob: -3.653705596923828
    3. 'pow' → logprob: -6.778705596923828
    4. '(pow' → logprob: -7.028705596923828
    5. '__' → logprob: -8.528705596923828
    6. '().__' → logprob: -9.903705596923828
    7. '__.__' → logprob: -10.153705596923828
    8. '.' → logprob: -10.153705596923828
    9. ').__' → logprob: -10.403705596923828
    10. ' .' → logprob: -11.903705596923828

Token 330: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.1160349458805285e-05
    2. '_pow' → logprob: -11.500011444091797
    3. 'power' → logprob: -15.375011444091797
    4. '.pow' → logprob: -15.625011444091797
    5. ' pow' → logprob: -16.000011444091797
    6. '__' → logprob: -16.000011444091797
    7. 'xor' → logprob: -16.500011444091797
    8. 'int' → logprob: -16.625011444091797
    9. '(pow' → logprob: -16.625011444091797
    10. 'Pow' → logprob: -16.875011444091797

Token 331: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00022678142704535276
    2. '(self' → logprob: -8.500226974487305
    3. '__(
' → logprob: -10.875226974487305
    4. '(' → logprob: -12.500226974487305
    5. '__' → logprob: -15.000226974487305
    6. '__((' → logprob: -15.750226974487305
    7. '_(' → logprob: -15.875226974487305
    8. '__('' → logprob: -16.875226974487305
    9. 'self' → logprob: -17.625226974487305
    10. '__(*' → logprob: -17.875226974487305

Token 332: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.511406809295295e-06
    2. ' self' → logprob: -12.375006675720215
    3. '(self' → logprob: -13.000006675720215
    4. 'int' → logprob: -18.0000057220459
    5. 's' → logprob: -19.2500057220459
    6. '
' → logprob: -19.6250057220459
    7. '	self' → logprob: -19.7500057220459
    8. '   ' → logprob: -19.8750057220459
    9. ')' → logprob: -19.8750057220459
    10. '0' → logprob: -20.5000057220459

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8325677703833207e-05
    2. ' ,' → logprob: -10.750028610229492
    3. '__,' → logprob: -13.000028610229492
    4. 'self' → logprob: -13.250028610229492
    5. ',self' → logprob: -14.000028610229492
    6. '(),' → logprob: -14.250028610229492
    7. ',
' → logprob: -15.375028610229492
    8. ',int' → logprob: -15.875028610229492
    9. '‌,' → logprob: -15.875028610229492
    10. '(self' → logprob: -16.000028610229492

Token 334: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.11091822385787964
    2. 'other' → logprob: -2.7359182834625244
    3. ' exponent' → logprob: -4.110918045043945
    4. 'int' → logprob: -4.610918045043945
    5. 'self' → logprob: -4.735918045043945
    6. ' other' → logprob: -6.235918045043945
    7. 'MOD' → logprob: -6.735918045043945
    8. ' int' → logprob: -7.110918045043945
    9. ' self' → logprob: -7.735918045043945
    10. ' ex' → logprob: -8.735918045043945

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2591801583766937
    2. '))' → logprob: -1.5091801881790161
    3. '%' → logprob: -5.634180068969727
    4. ' %' → logprob: -6.509180068969727
    5. ')' → logprob: -6.759180068969727
    6. ' ,' → logprob: -7.384180068969727
    7. ' ))' → logprob: -8.634180068969727
    8. ')))' → logprob: -9.009180068969727
    9. '   ' → logprob: -11.009180068969727
    10. '<|end|>' → logprob: -11.634180068969727

Token 336: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.03804149478673935
    2. ' MOD' → logprob: -3.288041591644287
    3. ' ' → logprob: -18.038042068481445
    4. '   ' → logprob: -18.413042068481445
    5. '.MOD' → logprob: -18.788042068481445
    6. 'MO' → logprob: -18.913042068481445
    7. '_MOD' → logprob: -19.288042068481445
    8. ')' → logprob: -20.288042068481445
    9. 'MODULE' → logprob: -21.038042068481445
    10. 'mod' → logprob: -21.163042068481445

Token 337: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -7.553032628493384e-05
    2. 'L' → logprob: -10.000075340270996
    3. 'OL' → logprob: -11.250075340270996
    4. 'MOD' → logprob: -12.375075340270996
    5. 'ULO' → logprob: -12.875075340270996
    6. '   ' → logprob: -13.250075340270996
    7. 'US' → logprob: -13.500075340270996
    8. '```' → logprob: -13.500075340270996
    9. 'ulus' → logprob: -14.375075340270996
    10. ' ' → logprob: -14.375075340270996

Token 338: 'US' (ID: 3042)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2519819140434265
    2. 'US' → logprob: -1.5019819736480713
    3. '   ' → logprob: -10.001981735229492
    4. 'AS' → logprob: -13.751981735229492
    5. 'OS' → logprob: -14.001981735229492
    6. '
' → logprob: -14.501981735229492
    7. '5' → logprob: -14.751981735229492
    8. 'MOD' → logprob: -14.751981735229492
    9. '\' → logprob: -15.126981735229492
    10. ' ' → logprob: -15.126981735229492

Token 339: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20142056047916412
    2. '))' → logprob: -1.701420545578003
    3. '       ' → logprob: -12.951420783996582
    4. ')
' → logprob: -13.826420783996582
    5. ')))' → logprob: -13.826420783996582
    6. '))
' → logprob: -13.951420783996582
    7. '   ' → logprob: -14.326420783996582
    8. ')}' → logprob: -14.826420783996582
    9. ' )' → logprob: -15.076420783996582
    10. '),' → logprob: -15.076420783996582

Token 340: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15555785596370697
    2. '<|end|>' → logprob: -2.280557870864868
    3. '   ' → logprob: -3.405557870864868
    4. ':' → logprob: -5.780557632446289
    5. '#' → logprob: -6.280557632446289
    6. ' ' → logprob: -6.655557632446289
    7. '```' → logprob: -7.530557632446289
    8. '
' → logprob: -8.030557632446289
    9. '  ' → logprob: -8.155557632446289
    10. '    
' → logprob: -8.405557632446289

Token 341: ' minimum' (ID: 11085)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4723716080188751
    2. ' input' → logprob: -1.5973715782165527
    3. ' solve' → logprob: -3.2223715782165527
    4. ' Modular' → logprob: -3.4723715782165527
    5. ' modular' → logprob: -3.5973715782165527
    6. 'input' → logprob: -4.097371578216553
    7. ' read' → logprob: -4.722371578216553
    8. ' factorial' → logprob: -4.972371578216553
    9. 'main' → logprob: -5.347371578216553
    10. ' parse' → logprob: -5.472371578216553

Token 342: '_ex' (ID: 5724)
  Prédit: '_cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cover' → logprob: -2.163477897644043
    2. '_path' → logprob: -2.538477897644043
    3. '_cost' → logprob: -2.538477897644043
    4. '_value' → logprob: -2.538477897644043
    5. '_edit' → logprob: -2.663477897644043
    6. '_' → logprob: -2.663477897644043
    7. '_cycle' → logprob: -2.913477897644043
    8. '_distance' → logprob: -3.038477897644043
    9. '_sum' → logprob: -3.288477897644043
    10. '_mod' → logprob: -3.413477897644043

Token 343: 'clud' (ID: 990)
  Prédit: 'ponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.24622787535190582
    2. 'pected' → logprob: -2.746227979660034
    3. 'pression' → logprob: -2.746227979660034
    4. 'tract' → logprob: -3.621227979660034
    5. 'cluded' → logprob: -4.746227741241455
    6. 'cess' → logprob: -5.121227741241455
    7. 'p' → logprob: -5.246227741241455
    8. 'clud' → logprob: -5.371227741241455
    9. 'traction' → logprob: -5.496227741241455
    10. 'ponents' → logprob: -5.621227741241455

Token 344: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0011676029535010457
    2. 'uant' → logprob: -7.2511677742004395
    3. 'ent' → logprob: -8.126167297363281
    4. '{' → logprob: -10.251167297363281
    5. 'p' → logprob: -10.501167297363281
    6. '```' → logprob: -11.501167297363281
    7. 'ed' → logprob: -11.751167297363281
    8. '[' → logprob: -11.876167297363281
    9. '_' → logprob: -11.876167297363281
    10. 'u' → logprob: -12.126167297363281

Token 345: '(values' (ID: 40883)
  Prédit: '(nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -1.2564170360565186
    2. '(lst' → logprob: -1.2564170360565186
    3. '(numbers' → logprob: -1.7564170360565186
    4. '(sequence' → logprob: -2.5064170360565186
    5. '(array' → logprob: -3.1314170360565186
    6. '(arr' → logprob: -3.2564170360565186
    7. '(' → logprob: -3.5064170360565186
    8. '(elements' → logprob: -4.381417274475098
    9. '(values' → logprob: -4.881417274475098
    10. '(iter' → logprob: -5.006417274475098

Token 346: '_set' (ID: 5451)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005396892665885389
    2. '):
' → logprob: -7.875539779663086
    3. ':' → logprob: -9.000539779663086
    4. ')' → logprob: -10.750539779663086
    5. '():' → logprob: -12.250539779663086
    6. ' ):' → logprob: -12.375539779663086
    7. '_list' → logprob: -13.750539779663086
    8. ',' → logprob: -14.125539779663086
    9. '   ' → logprob: -14.125539779663086
    10. '[]):' → logprob: -14.125539779663086

Token 347: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017073206836357713
    2. ')' → logprob: -6.751707553863525
    3. '):
' → logprob: -7.626707553863525
    4. ':' → logprob: -10.251707077026367
    5. '():' → logprob: -12.376707077026367
    6. ',' → logprob: -12.876707077026367
    7. ' ):' → logprob: -13.001707077026367
    8. '   ' → logprob: -13.376707077026367
    9. ')):' → logprob: -14.001707077026367
    10. 's' → logprob: -14.376707077026367

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026264708139933646
    2. 'i' → logprob: -9.375262260437012
    3. 'm' → logprob: -9.375262260437012
    4. 'n' → logprob: -10.375262260437012
    5. ' i' → logprob: -11.125262260437012
    6. 'for' → logprob: -11.750262260437012
    7. 'mex' → logprob: -11.875262260437012
    8. '0' → logprob: -12.000262260437012
    9. 'def' → logprob: -12.250262260437012
    10. 'v' → logprob: -12.250262260437012

Token 349: ' for' (ID: 395)
  Prédit: 'mex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mex' → logprob: -0.15538254380226135
    2. 'm' → logprob: -2.0303826332092285
    3. 'i' → logprob: -4.5303826332092285
    4. 'missing' → logprob: -6.9053826332092285
    5. '   ' → logprob: -7.7803826332092285
    6. 'value' → logprob: -8.78038215637207
    7. 'x' → logprob: -9.65538215637207
    8. 'candidate' → logprob: -10.15538215637207
    9. 'mask' → logprob: -10.78038215637207
    10. 'minimum' → logprob: -10.90538215637207

Token 350: ' candidate' (ID: 17098)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2172139436006546
    2. 'mex' → logprob: -1.7172139883041382
    3. 'x' → logprob: -4.967214107513428
    4. 'm' → logprob: -5.342214107513428
    5. 'v' → logprob: -6.592214107513428
    6. 'n' → logprob: -7.467214107513428
    7. 'num' → logprob: -7.592214107513428
    8. ' mex' → logprob: -7.842214107513428
    9. 'value' → logprob: -8.09221363067627
    10. ' i' → logprob: -8.09221363067627

Token 351: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001229634741321206
    2. 'in' → logprob: -6.751229763031006
    3. ' ' → logprob: -10.001229286193848
    4. '_in' → logprob: -12.626229286193848
    5. '_value' → logprob: -13.501229286193848
    6. 'int' → logprob: -13.751229286193848
    7. ' i' → logprob: -13.751229286193848
    8. '=' → logprob: -14.126229286193848
    9. '	in' → logprob: -14.126229286193848
    10. '  ' → logprob: -14.376229286193848

Token 352: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10021346807479858
    2. 'range' → logprob: -2.3502135276794434
    3. ' itertools' → logprob: -12.975213050842285
    4. '(range' → logprob: -13.350213050842285
    5. 'it' → logprob: -13.600213050842285
    6. '	range' → logprob: -14.100213050842285
    7. 'count' → logprob: -14.850213050842285
    8. ' xrange' → logprob: -15.725213050842285
    9. ' count' → logprob: -16.1002140045166
    10. ' ' → logprob: -16.4752140045166

Token 353: '(G' (ID: 12449)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.4763140082359314
    2. '(' → logprob: -0.9763140082359314
    3. '(max' → logprob: -6.226314067840576
    4. 'len' → logprob: -9.351313591003418
    5. '(sys' → logprob: -9.351313591003418
    6. '10' → logprob: -10.476313591003418
    7. '(int' → logprob: -10.851313591003418
    8. '100' → logprob: -10.976313591003418
    9. '(MAX' → logprob: -11.726313591003418
    10. '((' → logprob: -13.351313591003418

Token 354: 'LOBAL' (ID: 26366)
  Prédit: 'LOBAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LOBAL' → logprob: -0.12401000410318375
    2. '100' → logprob: -3.7490100860595703
    3. 'O' → logprob: -3.9990100860595703
    4. 'MAX' → logprob: -3.9990100860595703
    5. '10' → logprob: -4.37401008605957
    6. '0' → logprob: -4.74901008605957
    7. 'lobal' → logprob: -4.87401008605957
    8. 'L' → logprob: -4.99901008605957
    9. 'MOD' → logprob: -5.37401008605957
    10. 'A' → logprob: -5.87401008605957

Token 355: '_N' (ID: 3080)
  Prédit: '_MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_MAX' → logprob: -0.4700332283973694
    2. 'MAX' → logprob: -1.4700331687927246
    3. ' ' → logprob: -3.3450331687927246
    4. '_SIZE' → logprob: -3.7200331687927246
    5. '_LIMIT' → logprob: -4.095033168792725
    6. '_LEN' → logprob: -4.595033168792725
    7. '_VALUE' → logprob: -4.720033168792725
    8. '   ' → logprob: -5.595033168792725
    9. '_VALUES' → logprob: -5.845033168792725
    10. '_RANGE' → logprob: -5.845033168792725

Token 356: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0068169585429131985
    2. ' +' → logprob: -5.006816864013672
    3. '):' → logprob: -10.131816864013672
    4. '):
' → logprob: -10.256816864013672
    5. '+
' → logprob: -11.381816864013672
    6. ')' → logprob: -13.131816864013672
    7. ')+' → logprob: -13.256816864013672
    8. ' ' → logprob: -13.756816864013672
    9. '()+' → logprob: -13.756816864013672
    10. '   ' → logprob: -13.881816864013672

Token 357: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06455438584089279
    2. '2' → logprob: -2.814554452896118
    3. ' ' → logprob: -6.939554214477539
    4. '10' → logprob: -6.939554214477539
    5. 'len' → logprob: -8.064554214477539
    6. '5' → logprob: -8.689554214477539
    7. '100' → logprob: -9.064554214477539
    8. '3' → logprob: -10.689554214477539
    9. '   ' → logprob: -11.689554214477539
    10. 'GLOBAL' → logprob: -12.814554214477539

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6991366147994995
    2. '2' → logprob: -0.6991366147994995
    3. '10' → logprob: -5.699136734008789
    4. '5' → logprob: -6.574136734008789
    5. 'len' → logprob: -7.199136734008789
    6. '3' → logprob: -8.449136734008789
    7. '100' → logprob: -8.699136734008789
    8. 'MAX' → logprob: -10.574136734008789
    9. ' ' → logprob: -11.449136734008789
    10. 'max' → logprob: -11.574136734008789

Token 359: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02637879177927971
    2. '):' → logprob: -3.651378870010376
    3. '):
' → logprob: -9.651378631591797
    4. '   ' → logprob: -11.526378631591797
    5. '():
' → logprob: -13.526378631591797
    6. ':' → logprob: -13.901378631591797
    7. ')' → logprob: -14.276378631591797
    8. ':
' → logprob: -14.276378631591797
    9. '):

' → logprob: -15.151378631591797
    10. '       ' → logprob: -15.401378631591797

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03118341788649559
    2. ' if' → logprob: -3.5311834812164307
    3. 'if' → logprob: -6.781183242797852
    4. '   ' → logprob: -8.156183242797852
    5. '<|end|>' → logprob: -12.156183242797852
    6. ',' → logprob: -13.531183242797852
    7. '	if' → logprob: -14.656183242797852
    8. '	   ' → logprob: -14.656183242797852
    9. '     ' → logprob: -15.031183242797852
    10. ':' → logprob: -15.031183242797852

Token 361: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07237467169761658
    2. ' if' → logprob: -2.8223745822906494
    3. '       ' → logprob: -4.5723748207092285
    4. '   ' → logprob: -10.94737434387207
    5. '	if' → logprob: -13.44737434387207
    6. ' ' → logprob: -15.82237434387207
    7. 'If' → logprob: -16.07237434387207
    8. 'not' → logprob: -16.57237434387207
    9. '           ' → logprob: -16.69737434387207
    10. ';if' → logprob: -17.57237434387207

Token 362: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.20142552256584167
    2. ' candidate' → logprob: -1.701425552368164
    3. '(candidate' → logprob: -11.451425552368164
    4. 'not' → logprob: -14.451425552368164
    5. '   ' → logprob: -15.201425552368164
    6. ' not' → logprob: -15.326425552368164
    7. ' candidat' → logprob: -15.576425552368164
    8. 'cand' → logprob: -15.701425552368164
    9. 'c' → logprob: -16.076425552368164
    10. '_candidate' → logprob: -16.201425552368164

Token 363: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.014164566993713379
    2. 'not' → logprob: -4.264164447784424
    3. ')' → logprob: -14.014164924621582
    4. '	not' → logprob: -16.639163970947266
    5. ' no' → logprob: -17.139163970947266
    6. ' in' → logprob: -17.139163970947266
    7. ':not' → logprob: -17.139163970947266
    8. '<|end|>' → logprob: -18.264163970947266
    9. 'n' → logprob: -18.389163970947266
    10. '(not' → logprob: -18.514163970947266

Token 364: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.391720712184906
    2. 'in' → logprob: -1.1417207717895508
    3. '(values' → logprob: -6.016720771789551
    4. 'values' → logprob: -6.391720771789551
    5. ' values' → logprob: -7.391720771789551
    6. '<|end|>' → logprob: -10.39172077178955
    7. '.values' → logprob: -10.76672077178955
    8. '_values' → logprob: -11.01672077178955
    9. '	values' → logprob: -11.39172077178955
    10. '=' → logprob: -12.01672077178955

Token 365: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.004078878089785576
    2. ' values' → logprob: -5.5040788650512695
    3. '	values' → logprob: -15.00407886505127
    4. '(values' → logprob: -16.379079818725586
    5. '.values' → logprob: -18.129079818725586
    6. '_values' → logprob: -19.629079818725586
    7. '   ' → logprob: -19.629079818725586
    8. 'value' → logprob: -19.754079818725586
    9. '
' → logprob: -20.004079818725586
    10. ' ' → logprob: -21.879079818725586

Token 366: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -5.676981345459353e-06
    2. '_' → logprob: -12.375005722045898
    3. '_values' → logprob: -14.125005722045898
    4. '_SET' → logprob: -15.750005722045898
    5. '_Set' → logprob: -15.875005722045898
    6. '_sets' → logprob: -16.2500057220459
    7. 's' → logprob: -16.5000057220459
    8. ')' → logprob: -16.6250057220459
    9. 'set' → logprob: -16.8750057220459
    10. ')set' → logprob: -17.5000057220459

Token 367: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.57819002866745
    2. ':
' → logprob: -0.82819002866745
    3. ':return' → logprob: -6.203189849853516
    4. '           ' → logprob: -8.828189849853516
    5. '):
' → logprob: -10.453189849853516
    6. '       ' → logprob: -10.703189849853516
    7. '():
' → logprob: -11.703189849853516
    8. ' :
' → logprob: -12.328189849853516
    9. ':
' → logprob: -12.453189849853516
    10. '):' → logprob: -12.953189849853516

Token 368: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001147006405517459
    2. ' return' → logprob: -7.0011467933654785
    3. ':return' → logprob: -9.501147270202637
    4. 'return' → logprob: -9.626147270202637
    5. ':
' → logprob: -10.126147270202637
    6. ':' → logprob: -10.251147270202637
    7. '       ' → logprob: -11.251147270202637
    8. '               ' → logprob: -13.626147270202637
    9. '          ' → logprob: -13.626147270202637
    10. '	       ' → logprob: -13.751147270202637

Token 369: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5646962523460388
    2. '           ' → logprob: -1.3146963119506836
    3. 'return' (adapté à ' return') → logprob: -1.8146963119506836
    4. '               ' → logprob: -11.689696311950684
    5. ':return' → logprob: -12.064696311950684
    6. '       ' → logprob: -12.689696311950684
    7. '	return' → logprob: -12.939696311950684
    8. '{return' → logprob: -13.564696311950684
    9. '
' → logprob: -13.689696311950684
    10. '	       ' → logprob: -14.689696311950684

Token 370: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -9.615255839889869e-05
    2. ' candidate' → logprob: -9.250096321105957
    3. '(candidate' → logprob: -19.50009536743164
    4. 'c' → logprob: -21.25009536743164
    5. '_candidate' → logprob: -22.12509536743164
    6. 'cand' → logprob: -22.25009536743164
    7. ' candidat' → logprob: -22.62509536743164
    8. '   ' → logprob: -23.25009536743164
    9. '候' → logprob: -24.12509536743164
    10. 'Candidate' → logprob: -24.50009536743164

Token 371: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: ' grund' (ID: 34475)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.011824834160506725
    2. 'main' → logprob: -4.636824607849121
    3. ' solve' → logprob: -6.761824607849121
    4. ' process' → logprob: -7.636824607849121
    5. ' compute' → logprob: -9.136824607849121
    6. ' calculate' → logprob: -9.886824607849121
    7. ' dfs' → logprob: -10.011824607849121
    8. 'solve' → logprob: -10.011824607849121
    9. ' find' → logprob: -10.261824607849121
    10. 'process' → logprob: -10.761824607849121

Token 374: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06118575483560562
    2. 'ier' → logprob: -3.561185836791992
    3. 'iel' → logprob: -4.686185836791992
    4. 'el' → logprob: -4.686185836791992
    5. 'er' → logprob: -5.436185836791992
    6. 'ey' → logprob: -5.561185836791992
    7. 'yel' → logprob: -6.561185836791992
    8. 'uel' → logprob: -7.311185836791992
    9. 'auer' → logprob: -8.311185836791992
    10. 'yer' → logprob: -8.561185836791992

Token 375: '_cal' (ID: 50948)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.6891093850135803
    2. '(number' → logprob: -1.0641093254089355
    3. '(' → logprob: -2.6891093254089355
    4. '_numbers' → logprob: -4.4391093254089355
    5. '_function' → logprob: -4.4391093254089355
    6. '_cal' → logprob: -4.4391093254089355
    7. '(n' → logprob: -4.5641093254089355
    8. '_value' → logprob: -4.8141093254089355
    9. '(numbers' → logprob: -5.5641093254089355
    10. '(node' → logprob: -5.6891093254089355

Token 376: 'culation' (ID: 41845)
  Prédit: 'culation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culation' → logprob: -0.21740780770778656
    2. 'culate' → logprob: -2.217407703399658
    3. 'culator' → logprob: -2.467407703399658
    4. 'c' → logprob: -7.717407703399658
    5. 'cul' → logprob: -7.842407703399658
    6. 'cular' → logprob: -8.092408180236816
    7. 'cula' → logprob: -8.467408180236816
    8. 'culated' → logprob: -9.092408180236816
    9. 'culus' → logprob: -9.092408180236816
    10. 'l' → logprob: -9.842408180236816

Token 377: '(edge' (ID: 84023)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.15860560536384583
    2. '(graph' → logprob: -2.9086055755615234
    3. '(' → logprob: -3.1586055755615234
    4. '(state' → logprob: -3.7836055755615234
    5. '(n' → logprob: -5.033605575561523
    6. '(tree' → logprob: -5.533605575561523
    7. '(nodes' → logprob: -5.658605575561523
    8. '(root' → logprob: -6.283605575561523
    9. '():' → logprob: -6.533605575561523
    10. '(depth' → logprob: -6.533605575561523

Token 378: '_dict' (ID: 11295)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09613388031721115
    2. '_list' → logprob: -2.4711339473724365
    3. ',' → logprob: -5.346133708953857
    4. '_count' → logprob: -7.471133708953857
    5. '):' → logprob: -7.846133708953857
    6. '_index' → logprob: -8.221134185791016
    7. '_map' → logprob: -8.471134185791016
    8. '_counts' → logprob: -8.971134185791016
    9. '_lists' → logprob: -9.221134185791016
    10. ')' → logprob: -9.471134185791016

Token 379: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003752615302801132
    2. '):' → logprob: -8.000374794006348
    3. ' ,' → logprob: -10.750374794006348
    4. ',n' → logprob: -12.625374794006348
    5. ',node' → logprob: -12.625374794006348
    6. '):
' → logprob: -12.750374794006348
    7. '   ' → logprob: -13.500374794006348
    8. ')' → logprob: -13.625374794006348
    9. ',
' → logprob: -13.625374794006348
    10. '_,' → logprob: -13.875374794006348

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029654575046151876
    2. 'grund' → logprob: -6.502965450286865
    3. 'def' → logprob: -7.127965450286865
    4. ' grund' → logprob: -8.377965927124023
    5. 'visited' → logprob: -8.877965927124023
    6. 'memo' → logprob: -9.877965927124023
    7. 'dp' → logprob: -10.127965927124023
    8. ' memo' → logprob: -10.502965927124023
    9. '   ' → logprob: -10.752965927124023
    10. ' def' → logprob: -10.877965927124023

Token 381: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' (adapté à ' grund') → logprob: -0.12250741571187973
    2. 'memo' → logprob: -2.747507333755493
    3. '   ' → logprob: -4.122507572174072
    4. 'def' → logprob: -4.247507572174072
    5. 'dp' → logprob: -4.872507572174072
    6. 'visited' → logprob: -5.497507572174072
    7. 'cache' → logprob: -5.872507572174072
    8. 'result' → logprob: -6.997507572174072
    9. 'n' → logprob: -6.997507572174072
    10. 'mex' → logprob: -7.872507572174072

Token 382: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0036145627964287996
    2. 'ies' → logprob: -5.62861442565918
    3. '   ' → logprob: -11.37861442565918
    4. 'ys' → logprob: -13.00361442565918
    5. 'cy' → logprob: -16.12861442565918
    6. 'ie' → logprob: -16.25361442565918
    7. 'values' → logprob: -16.37861442565918
    8. '       ' → logprob: -16.37861442565918
    9. 'y's' → logprob: -16.75361442565918
    10. 'yd' → logprob: -16.75361442565918

Token 383: '_dict' (ID: 11295)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35752788186073303
    2. '_values' → logprob: -1.2325278520584106
    3. '=' → logprob: -4.982527732849121
    4. '_dict' → logprob: -6.982527732849121
    5. '_numbers' → logprob: -7.732527732849121
    6. '_cache' → logprob: -8.482527732849121
    7. 's' → logprob: -8.607527732849121
    8. '_map' → logprob: -9.607527732849121
    9. '_value' → logprob: -9.607527732849121
    10. '_scores' → logprob: -9.857527732849121

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474087119102478
    2. ' =' → logprob: -0.974087119102478
    3. '={}' → logprob: -11.59908676147461
    4. ' ' → logprob: -15.34908676147461
    5. ',' → logprob: -15.47408676147461
    6. '={' → logprob: -16.22408676147461
    7. '={}
' → logprob: -16.72408676147461
    8. ' ={' → logprob: -16.72408676147461
    9. '   ' → logprob: -16.84908676147461
    10. ':' → logprob: -17.09908676147461

Token 385: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.38718554377555847
    2. 'default' → logprob: -1.1371855735778809
    3. '{' → logprob: -8.762185096740723
    4. 'dict' → logprob: -8.887185096740723
    5. ' defaultdict' → logprob: -11.637185096740723
    6. '{}
' → logprob: -11.762185096740723
    7. ' default' → logprob: -13.887185096740723
    8. ' {}' → logprob: -14.012185096740723
    9. 'def' → logprob: -15.262185096740723
    10. '{}

' → logprob: -15.762185096740723

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009308690205216408
    2. ' def' → logprob: -5.384308815002441
    3. 'def' → logprob: -5.759308815002441
    4. ' for' → logprob: -6.759308815002441
    5. ' stack' → logprob: -8.134308815002441
    6. 'for' → logprob: -10.009308815002441
    7. ' queue' → logprob: -11.634308815002441
    8. 'stack' → logprob: -12.134308815002441
    9. ' to' → logprob: -12.634308815002441
    10. '
' → logprob: -13.259308815002441

Token 387: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18271318078041077
    2. 'stack' → logprob: -1.9327131509780884
    3. 'for' (adapté à ' for') → logprob: -3.932713270187378
    4. '   ' → logprob: -6.432713031768799
    5. 'nodes' → logprob: -7.307713031768799
    6. 'from' → logprob: -9.182713508605957
    7. 'visited' → logprob: -9.307713508605957
    8. 'node' → logprob: -9.682713508605957
    9. 'queue' → logprob: -10.182713508605957
    10. 'to' → logprob: -10.182713508605957

Token 388: ' index' (ID: 3472)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.23195599019527435
    2. ' node' → logprob: -1.6069560050964355
    3. 'vertex' → logprob: -5.4819560050964355
    4. 'key' → logprob: -6.9819560050964355
    5. ' vertex' → logprob: -7.6069560050964355
    6. 'current' → logprob: -8.106955528259277
    7. ' key' → logprob: -8.481955528259277
    8. 'start' → logprob: -8.856955528259277
    9. 'u' → logprob: -9.356955528259277
    10. ' current' → logprob: -9.856955528259277

Token 389: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11043862253427505
    2. ',' → logprob: -2.360438585281372
    3. 'in' → logprob: -4.610438823699951
    4. ' ,' → logprob: -9.235438346862793
    5. '   ' → logprob: -10.485438346862793
    6. ',node' → logprob: -10.860438346862793
    7. 's' → logprob: -11.422938346862793
    8. '	in' → logprob: -11.797938346862793
    9. '_in' → logprob: -11.860438346862793
    10. '```' → logprob: -11.922938346862793

Token 390: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5816934108734131
    2. 'edge' → logprob: -0.8316934108734131
    3. ' range' → logprob: -5.456693649291992
    4. 'sorted' → logprob: -7.331693649291992
    5. ' edge' → logprob: -7.706693649291992
    6. 'list' → logprob: -8.581693649291992
    7. 're' → logprob: -9.331693649291992
    8. 'reverse' → logprob: -11.019193649291992
    9. '   ' → logprob: -11.956693649291992
    10. 'edges' → logprob: -12.394193649291992

Token 391: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.4765603244304657
    2. '(' → logprob: -0.9765603542327881
    3. '(len' → logprob: -6.476560115814209
    4. '1' → logprob: -7.726560115814209
    5. 'GLOBAL' → logprob: -8.351560592651367
    6. '(global' → logprob: -8.851560592651367
    7. 'len' → logprob: -9.726560592651367
    8. '(Global' → logprob: -10.851560592651367
    9. ' GLOBAL' → logprob: -11.351560592651367
    10. '   ' → logprob: -11.601560592651367

Token 392: 'LOBAL' (ID: 26366)
  Prédit: 'LOBAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LOBAL' → logprob: -0.0009471880039200187
    2. 'lobal' → logprob: -7.250946998596191
    3. 'GLOBAL' → logprob: -8.375946998596191
    4. 'L' → logprob: -13.000946998596191
    5. '_GLOBAL' → logprob: -13.375946998596191
    6. 'obal' → logprob: -13.375946998596191
    7. 'LOCAL' → logprob: -15.125946998596191
    8. '(global' → logprob: -15.625946998596191
    9. '1' → logprob: -15.750946998596191
    10. 'LO' → logprob: -15.875946998596191

Token 393: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -0.004263708367943764
    2. '_n' → logprob: -6.129263877868652
    3. 'N' → logprob: -6.379263877868652
    4. '1' → logprob: -9.629263877868652
    5. '```' → logprob: -9.754263877868652
    6. '
' → logprob: -9.879263877868652
    7. ')' → logprob: -10.254263877868652
    8. '   ' → logprob: -10.629263877868652
    9. '_' → logprob: -11.004263877868652
    10. 'n' → logprob: -11.004263877868652

Token 394: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.040307506918907166
    2. '):
' → logprob: -3.4153075218200684
    3. '+' → logprob: -5.165307521820068
    4. ' +' → logprob: -7.040307521820068
    5. '   ' → logprob: -10.41530704498291
    6. ',' → logprob: -12.04030704498291
    7. ' ):' → logprob: -12.04030704498291
    8. '):
' → logprob: -12.79030704498291
    9. ':' → logprob: -13.04030704498291
    10. ')' → logprob: -13.04030704498291

Token 395: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07060503959655762
    2. '0' → logprob: -2.8206050395965576
    3. ' -' → logprob: -4.945605278015137
    4. ' ' → logprob: -6.570605278015137
    5. '   ' → logprob: -9.695605278015137
    6. '  ' → logprob: -12.195605278015137
    7. '1' → logprob: -12.445605278015137
    8. '
' → logprob: -12.570605278015137
    9. '-G' → logprob: -13.195605278015137
    10. '    ' → logprob: -13.320605278015137

Token 396: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007992824539542198
    2. '0' → logprob: -4.882992744445801
    3. ' -' → logprob: -8.0079927444458
    4. ' ' → logprob: -10.8829927444458
    5. '
' → logprob: -11.5079927444458
    6. '   ' → logprob: -11.8829927444458
    7. '1' → logprob: -12.3829927444458
    8. '-
' → logprob: -13.1954927444458
    9. '```' → logprob: -13.9454927444458
    10. '-G' → logprob: -14.1954927444458

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5325870513916016
    2. '-' → logprob: -0.9075870513916016
    3. ' -' → logprob: -5.032587051391602
    4. ' ,' → logprob: -6.282587051391602
    5. '   ' → logprob: -7.907587051391602
    6. ',-' → logprob: -8.032587051391602
    7. '-,' → logprob: -8.532587051391602
    8. '0' → logprob: -9.407587051391602
    9. '+' → logprob: -11.032587051391602
    10. ' ' → logprob: -11.157587051391602

Token 398: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.020551813766360283
    2. ' -' → logprob: -3.895551919937134
    3. ' ' → logprob: -12.395551681518555
    4. '   ' → logprob: -12.645551681518555
    5. '0' → logprob: -14.520551681518555
    6. '  ' → logprob: -14.520551681518555
    7. ',' → logprob: -14.770551681518555
    8. ')' → logprob: -14.895551681518555
    9. '```' → logprob: -15.270551681518555
    10. '-step' → logprob: -15.770551681518555

Token 399: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0017397936899214983
    2. ' -' → logprob: -6.376739978790283
    3. '1' → logprob: -10.501739501953125
    4. '):
' → logprob: -12.876739501953125
    5. '   ' → logprob: -12.876739501953125
    6. '0' → logprob: -13.376739501953125
    7. ')' → logprob: -13.501739501953125
    8. '```' → logprob: -14.251739501953125
    9. ' ' → logprob: -14.626739501953125
    10. '  ' → logprob: -14.876739501953125

Token 400: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2024168074131012
    2. '):
' → logprob: -1.7024167776107788
    3. '-' → logprob: -7.077416896820068
    4. '   ' → logprob: -9.70241641998291
    5. ':' → logprob: -10.57741641998291
    6. '):
' → logprob: -10.57741641998291
    7. ',' → logprob: -11.07741641998291
    8. ' -' → logprob: -11.45241641998291
    9. ' ):' → logprob: -11.45241641998291
    10. ')' → logprob: -12.45241641998291

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013467011973261833
    2. '):
' → logprob: -5.263466835021973
    3. '   ' → logprob: -5.388466835021973
    4. ':' → logprob: -6.388466835021973
    5. ':
' → logprob: -7.013466835021973
    6. 'moves' → logprob: -8.388466835021973
    7. ')' → logprob: -8.638466835021973
    8. ',' → logprob: -8.763466835021973
    9. ' moves' → logprob: -9.013466835021973
    10. '):' → logprob: -9.263466835021973

Token 402: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9362430572509766
    2. 'reachable' → logprob: -1.9362430572509766
    3. 'child' → logprob: -2.0612430572509766
    4. 'next' → logprob: -2.0612430572509766
    5. 'moves' → logprob: -2.8112430572509766
    6. 'mex' → logprob: -3.1862430572509766
    7. 'children' → logprob: -3.5612430572509766
    8. 'values' → logprob: -4.311243057250977
    9. 'grund' → logprob: -4.436243057250977
    10. 'move' → logprob: -4.561243057250977

Token 403: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.006587947718799114
    2. ' index' → logprob: -5.256587982177734
    3. 'not' → logprob: -7.006587982177734
    4. 'edge' → logprob: -8.631587982177734
    5. 'len' → logprob: -8.881587982177734
    6. ' not' → logprob: -9.131587982177734
    7. '	index' → logprob: -12.131587982177734
    8. '   ' → logprob: -12.506587982177734
    9. ' len' → logprob: -12.631587982177734
    10. ' edge' → logprob: -12.631587982177734

Token 404: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.026492107659578323
    2. 'not' → logprob: -3.901492118835449
    3. ' in' → logprob: -5.151492118835449
    4. 'in' → logprob: -9.02649211883545
    5. ')' → logprob: -11.90149211883545
    6. '	not' → logprob: -12.02649211883545
    7. ' ' → logprob: -12.90149211883545
    8. ']' → logprob: -13.52649211883545
    9. 'n' → logprob: -14.40149211883545
    10. ',' → logprob: -14.40149211883545

Token 405: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011155464686453342
    2. 'in' → logprob: -4.511155605316162
    3. '(edge' → logprob: -9.886155128479004
    4. 'edge' → logprob: -11.136155128479004
    5. '=edge' → logprob: -11.511155128479004
    6. '<|end|>' → logprob: -11.636155128479004
    7. '<|end|>' → logprob: -12.261155128479004
    8. '(edges' → logprob: -12.511155128479004
    9. ' edge' → logprob: -13.011155128479004
    10. ',' → logprob: -13.136155128479004

Token 406: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -9.686778503237292e-05
    2. ' edge' → logprob: -9.250097274780273
    3. 'egde' → logprob: -15.000097274780273
    4. '=edge' → logprob: -16.250097274780273
    5. '(edge' → logprob: -16.375097274780273
    6. 'grund' → logprob: -16.750097274780273
    7. 'edges' → logprob: -17.000097274780273
    8. 'ed' → logprob: -17.000097274780273
    9. '.edge' → logprob: -18.250097274780273
    10. '   ' → logprob: -18.250097274780273

Token 407: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0003428528143558651
    2. 'dict' → logprob: -8.000343322753906
    3. 's' → logprob: -12.500343322753906
    4. 'd' → logprob: -14.125343322753906
    5. '_' → logprob: -14.250343322753906
    6. 'Dict' → logprob: -14.375343322753906
    7. '_DICT' → logprob: -14.750343322753906
    8. '_dic' → logprob: -15.125343322753906
    9. '   ' → logprob: -15.750343322753906
    10. '       ' → logprob: -15.875343322753906

Token 408: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38974857330322266
    2. ' or' → logprob: -1.7647485733032227
    3. ':
' → logprob: -1.8897485733032227
    4. '   ' → logprob: -8.764748573303223
    5. 'or' → logprob: -9.014748573303223
    6. ':return' → logprob: -9.764748573303223
    7. '       ' → logprob: -10.014748573303223
    8. '           ' → logprob: -10.639748573303223
    9. '):
' → logprob: -11.764748573303223
    10. ' :' → logprob: -12.389748573303223

Token 409: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17324510216712952
    2. '           ' → logprob: -2.2982451915740967
    3. ':
' → logprob: -3.5482451915740967
    4. ':' → logprob: -3.9232451915740967
    5. '):
' → logprob: -5.673244953155518
    6. '   ' → logprob: -6.423244953155518
    7. ',' → logprob: -6.423244953155518
    8. ' or' → logprob: -6.673244953155518
    9. ')' → logprob: -7.673244953155518
    10. '=' → logprob: -8.298245429992676

Token 410: ' continue' (ID: 4901)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.04844143986701965
    2. ' grund' → logprob: -3.2984414100646973
    3. '           ' → logprob: -4.798441410064697
    4. '       ' → logprob: -6.548441410064697
    5. 'grond' → logprob: -8.048441886901855
    6. '   ' → logprob: -9.548441886901855
    7. 'grunn' → logprob: -10.048441886901855
    8. ' grond' → logprob: -10.298441886901855
    9. '0' → logprob: -10.423441886901855
    10. '               ' → logprob: -11.173441886901855

Token 411: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032808599062263966
    2. '
' → logprob: -6.3782806396484375
    3. '   ' → logprob: -6.7532806396484375
    4. '        
' → logprob: -8.878280639648438
    5. '<|end|>' → logprob: -9.628280639648438
    6. ',' → logprob: -10.128280639648438
    7. ')' → logprob: -10.628280639648438
    8. '0' → logprob: -10.628280639648438
    9. '    
' → logprob: -10.753280639648438
    10. ':' → logprob: -11.878280639648438

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000926826149225235
    2. '   ' → logprob: -7.500926971435547
    3. 'grund' → logprob: -9.125926971435547
    4. 'value' → logprob: -10.500926971435547
    5. 'next' → logprob: -11.000926971435547
    6. '           ' → logprob: -11.000926971435547
    7. 'state' → logprob: -11.125926971435547
    8. 'current' → logprob: -11.250926971435547
    9. 'max' → logprob: -11.250926971435547
    10. 's' → logprob: -11.625926971435547

Token 413: ' mex' (ID: 32410)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3927260637283325
    2. 'next' → logprob: -2.017725944519043
    3. 'mex' (adapté à ' mex') → logprob: -2.142725944519043
    4. 'child' → logprob: -2.267725944519043
    5. 'values' → logprob: -2.392725944519043
    6. 'reachable' → logprob: -2.767725944519043
    7. 'moves' → logprob: -2.892725944519043
    8. 'grund' → logprob: -3.142725944519043
    9. '   ' → logprob: -3.392725944519043
    10. 'move' → logprob: -3.517725944519043

Token 414: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.4465433955192566
    2. ' =' → logprob: -1.1965434551239014
    3. '=' → logprob: -3.6965434551239014
    4. '_value' → logprob: -4.446543216705322
    5. '=set' → logprob: -4.446543216705322
    6. '_values' → logprob: -4.821543216705322
    7. 'set' → logprob: -6.696543216705322
    8. '_val' → logprob: -8.07154369354248
    9. 'Set' → logprob: -11.07154369354248
    10. '   ' → logprob: -11.32154369354248

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869571089744568
    2. '=' → logprob: -1.1369571685791016
    3. '=set' → logprob: -9.386957168579102
    4. '={' → logprob: -14.386957168579102
    5. '.add' → logprob: -14.761957168579102
    6. '<|end|>' → logprob: -15.011957168579102
    7. '{' → logprob: -15.136957168579102
    8. ')' → logprob: -15.636957168579102
    9. '.setdefault' → logprob: -16.1369571685791
    10. '={}' → logprob: -16.2619571685791

Token 416: ' {' (ID: 354)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -8.184812031686306e-05
    2. '{' → logprob: -9.500082015991211
    3. ' set' → logprob: -12.125082015991211
    4. 'default' → logprob: -13.375082015991211
    5. '{}' → logprob: -17.87508201599121
    6. '{
' → logprob: -18.12508201599121
    7. '	set' → logprob: -18.50008201599121
    8. '=set' → logprob: -18.62508201599121
    9. '(set' → logprob: -20.00008201599121
    10. ')set' → logprob: -20.00008201599121

Token 417: 'grund' (ID: 27797)
  Prédit: 'grund'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.0004342453321442008
    2. '}' → logprob: -9.125433921813965
    3. ' grund' → logprob: -9.875433921813965
    4. 'ground' → logprob: -9.875433921813965
    5. '0' → logprob: -10.375433921813965
    6. '    
' → logprob: -10.500433921813965
    7. '   ' → logprob: -10.500433921813965
    8. '
' → logprob: -11.000433921813965
    9. 'minimum' → logprob: -11.000433921813965
    10. 'grunn' → logprob: -11.125433921813965

Token 418: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.372294698550832e-06
    2. 'ies' → logprob: -12.750009536743164
    3. 'gy' → logprob: -13.625009536743164
    4. '{' → logprob: -14.250009536743164
    5. '[y' → logprob: -14.250009536743164
    6. 'xy' → logprob: -14.375009536743164
    7. '```' → logprob: -14.500009536743164
    8. 'value' → logprob: -15.000009536743164
    9. '[' → logprob: -15.250009536743164
    10. 'yg' → logprob: -15.375009536743164

Token 419: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0037844041362404823
    2. '_cal' → logprob: -5.6287841796875
    3. '_calc' → logprob: -9.5037841796875
    4. 'dict' → logprob: -10.0037841796875
    5. 'cal' → logprob: -10.2537841796875
    6. '
' → logprob: -12.0037841796875
    7. '[' → logprob: -12.0037841796875
    8. '=' → logprob: -13.1287841796875
    9. '

' → logprob: -13.3787841796875
    10. 'value' → logprob: -13.3787841796875

Token 420: '.get' (ID: 775)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1558827906847
    2. '[next' → logprob: -2.1558828353881836
    3. '.get' → logprob: -3.9058828353881836
    4. '[node' → logprob: -5.655882835388184
    5. '[j' → logprob: -6.280882835388184
    6. '[v' → logprob: -6.905882835388184
    7. '[to' → logprob: -7.030882835388184
    8. '[n' → logprob: -8.405882835388184
    9. '[x' → logprob: -9.155882835388184
    10. '[m' → logprob: -9.280882835388184

Token 421: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.5418471097946167
    2. '(child' → logprob: -1.1668471097946167
    3. '(next' → logprob: -3.4168472290039062
    4. 'neighbor' → logprob: -3.5418472290039062
    5. '(adj' → logprob: -3.9168472290039062
    6. '(success' → logprob: -4.541847229003906
    7. 'child' → logprob: -4.666847229003906
    8. '(n' → logprob: -7.041847229003906
    9. '(s' → logprob: -7.416847229003906
    10. 'ne' → logprob: -7.541847229003906

Token 422: 'igh' (ID: 1251)
  Prédit: 'ighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.024480601772665977
    2. 'igh' → logprob: -3.8994805812835693
    3. 'ighbour' → logprob: -5.649480819702148
    4. 'xt' → logprob: -8.149480819702148
    5. 'ighbors' → logprob: -10.399480819702148
    6. 'x' → logprob: -10.399480819702148
    7. 'gh' → logprob: -10.774480819702148
    8. 'i' → logprob: -11.399480819702148
    9. 'ight' → logprob: -11.649480819702148
    10. 'neighbor' → logprob: -12.024480819702148

Token 423: ',' (ID: 11)
  Prédit: 'bor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bor' → logprob: -0.00691724568605423
    2. 'bour' → logprob: -5.631917476654053
    3. ')' → logprob: -6.506917476654053
    4. ',' → logprob: -7.381917476654053
    5. 'for' → logprob: -8.256916999816895
    6. '}' → logprob: -8.506916999816895
    7. 'b' → logprob: -8.631916999816895
    8. ']' → logprob: -9.006916999816895
    9. 'bors' → logprob: -9.506916999816895
    10. '```' → logprob: -9.631916999816895

Token 424: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25292155146598816
    2. '-' → logprob: -1.5029215812683105
    3. ' -' → logprob: -7.1279215812683105
    4. ' ' → logprob: -8.877921104431152
    5. 'None' → logprob: -11.002921104431152
    6. '   ' → logprob: -12.002921104431152
    7. ')' → logprob: -12.127921104431152
    8. '
' → logprob: -12.502921104431152
    9. '−' → logprob: -12.877921104431152
    10. '  ' → logprob: -13.315421104431152

Token 425: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014182780869305134
    2. '-' → logprob: -4.2641825675964355
    3. ' -' → logprob: -11.889183044433594
    4. ' ' → logprob: -12.264183044433594
    5. 'None' → logprob: -12.764183044433594
    6. ')' → logprob: -13.389183044433594
    7. 'minimum' → logprob: -13.639183044433594
    8. '
' → logprob: -14.389183044433594
    9. '۰' → logprob: -15.701683044433594
    10. '(-' → logprob: -15.889183044433594

Token 426: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008298786706291139
    2. 'for' → logprob: -7.625829696655273
    3. '   ' → logprob: -8.625829696655273
    4. ' for' → logprob: -9.875829696655273
    5. ' )' → logprob: -10.000829696655273
    6. '    ' → logprob: -11.000829696655273
    7. '       ' → logprob: -11.750829696655273
    8. '  ' → logprob: -11.750829696655273
    9. '         ' → logprob: -12.875829696655273
    10. '        ' → logprob: -12.875829696655273

Token 427: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3084757626056671
    2. ' for' → logprob: -1.4334757328033447
    3. '       ' → logprob: -3.6834757328033447
    4. '           ' → logprob: -7.433475971221924
    5. '        ' → logprob: -7.933475971221924
    6. '   ' → logprob: -8.433475494384766
    7. '          ' → logprob: -8.433475494384766
    8. '         ' → logprob: -8.933475494384766
    9. '               ' → logprob: -9.558475494384766
    10. '	for' → logprob: -10.058475494384766

Token 428: ' neigh' (ID: 9109)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.25200700759887695
    2. ' neigh' → logprob: -1.502007007598877
    3. 'n' → logprob: -11.127006530761719
    4. '(ne' → logprob: -11.502006530761719
    5. ' ' → logprob: -12.002006530761719
    6. 'neighbor' → logprob: -12.002006530761719
    7. 'nei' → logprob: -12.127006530761719
    8. ' ne' → logprob: -12.127006530761719
    9. '   ' → logprob: -12.252006530761719
    10. ' ' → logprob: -12.377006530761719

Token 429: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029752805829048157
    2. 'in' → logprob: -3.529752731323242
    3. ' ' → logprob: -13.779752731323242
    4. ')' → logprob: -15.529752731323242
    5. '
' → logprob: -15.654752731323242
    6. '<|end|>' → logprob: -15.779752731323242
    7. '	in' → logprob: -15.904752731323242
    8. '}' → logprob: -15.904752731323242
    9. 'edge' → logprob: -16.029752731323242
    10. 'n' → logprob: -16.779752731323242

Token 430: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.008619774132966995
    2. ' edge' → logprob: -4.758619785308838
    3. '   ' → logprob: -13.25861930847168
    4. ' ' → logprob: -14.25861930847168
    5. '=edge' → logprob: -14.25861930847168
    6. '(edge' → logprob: -14.38361930847168
    7. 'edges' → logprob: -15.07111930847168
    8. '
' → logprob: -15.69611930847168
    9. '  ' → logprob: -15.82111930847168
    10. 'ed' → logprob: -15.88361930847168

Token 431: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.016045277938246727
    2. 'dict' → logprob: -4.141045093536377
    3. 'd' → logprob: -12.266045570373535
    4. 'Dict' → logprob: -13.391045570373535
    5. '_DICT' → logprob: -13.641045570373535
    6. '[' → logprob: -14.141045570373535
    7. '   ' → logprob: -15.141045570373535
    8. ' dict' → logprob: -15.141045570373535
    9. '       ' → logprob: -15.266045570373535
    10. 's' → logprob: -15.266045570373535

Token 432: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.250000953674316
    3. '[ind' → logprob: -15.750000953674316
    4. 'index' → logprob: -16.125001907348633
    5. '[Index' → logprob: -16.250001907348633
    6. '.get' → logprob: -16.375001907348633
    7. '```' → logprob: -16.625001907348633
    8. '[in' → logprob: -17.000001907348633
    9. '[i' → logprob: -17.125001907348633
    10. '[idx' → logprob: -17.125001907348633

Token 433: ']}
' (ID: 55354)
  Prédit: ']}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']}' → logprob: -0.390468955039978
    2. '}' → logprob: -1.140468955039978
    3. ']' → logprob: -5.765469074249268
    4. ')}' → logprob: -8.39046859741211
    5. '}]' → logprob: -9.39046859741211
    6. ' }' → logprob: -9.51546859741211
    7. '}}' → logprob: -10.26546859741211
    8. '[]}' → logprob: -12.14046859741211
    9. ' ]' → logprob: -12.26546859741211
    10. '`}' → logprob: -12.39046859741211

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.493430894101039e-05
    2. '<|end|>' → logprob: -10.500075340270996
    3. ')' → logprob: -11.000075340270996
    4. '
' → logprob: -11.750075340270996
    5. ',' → logprob: -11.875075340270996
    6. '        
' → logprob: -13.000075340270996
    7. '           ' → logprob: -13.500075340270996
    8. '   ' → logprob: -13.625075340270996
    9. '+' → logprob: -13.750075340270996
    10. ' next' → logprob: -14.000075340270996

Token 435: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' (adapté à ' grund') → logprob: -0.01407523825764656
    2. ' grund' → logprob: -4.63907527923584
    3. '       ' → logprob: -5.51407527923584
    4. 'ground' → logprob: -9.51407527923584
    5. 'grond' → logprob: -9.51407527923584
    6. '   ' → logprob: -9.63907527923584
    7. ' grond' → logprob: -11.88907527923584
    8. '           ' → logprob: -12.32657527923584
    9. '        
' → logprob: -12.38907527923584
    10. ' ' → logprob: -12.45157527923584

Token 436: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.088346359931165e-07
    2. 'gy' → logprob: -14.125000953674316
    3. '   ' → logprob: -16.875
    4. 'py' → logprob: -17.125
    5. '       ' → logprob: -17.625
    6. 'ry' → logprob: -17.875
    7. ' ' → logprob: -18.625
    8. ' y' → logprob: -18.75
    9. 'yu' → logprob: -19.25
    10. '	y' → logprob: -19.25

Token 437: '_value' (ID: 6734)
  Prédit: '_dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -2.558399319241289e-05
    2. 'dict' → logprob: -11.500025749206543
    3. '_value' → logprob: -11.500025749206543
    4. 'value' → logprob: -13.250025749206543
    5. '_val' → logprob: -13.500025749206543
    6. ' =' → logprob: -14.250025749206543
    7. '=' → logprob: -14.875025749206543
    8. '
' → logprob: -15.500025749206543
    9. 'Dict' → logprob: -15.625025749206543
    10. '[' → logprob: -15.750025749206543

Token 438: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995844095945358
    2. '=' → logprob: -2.694958448410034
    3. '[' → logprob: -11.694958686828613
    4. '   ' → logprob: -11.819958686828613
    5. '[index' → logprob: -12.944958686828613
    6. ' ' → logprob: -13.444958686828613
    7. '_dict' → logprob: -14.069958686828613
    8. '=index' → logprob: -14.694958686828613
    9. 's' → logprob: -15.194958686828613
    10. 'dict' → logprob: -15.819958686828613

Token 439: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.005234356038272381
    2. ' minimum' → logprob: -5.255234241485596
    3. 'min' → logprob: -15.255234718322754
    4. 'minimal' → logprob: -16.380233764648438
    5. ' ' → logprob: -16.630233764648438
    6. 'maximum' → logprob: -16.755233764648438
    7. '   ' → logprob: -16.755233764648438
    8. '0' → logprob: -16.755233764648438
    9. '.minimum' → logprob: -17.880233764648438
    10. 'Minimum' → logprob: -18.380233764648438

Token 440: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -5.6934557505883276e-05
    2. 'ex' → logprob: -10.000057220458984
    3. '_' → logprob: -11.625057220458984
    4. 'excluded' → logprob: -13.875057220458984
    5. '	ex' → logprob: -14.750057220458984
    6. '(ex' → logprob: -15.250057220458984
    7. '-ex' → logprob: -16.125057220458984
    8. '
' → logprob: -16.250057220458984
    9. '_EX' → logprob: -16.750057220458984
    10. '_mex' → logprob: -16.875057220458984

Token 441: 'clud' (ID: 990)
  Prédit: 'clud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clud' → logprob: -0.000830355507787317
    2. 'ex' → logprob: -8.12583065032959
    3. 'cluded' → logprob: -8.12583065032959
    4. 'excluded' → logprob: -9.00083065032959
    5. 'cul' → logprob: -10.00083065032959
    6. 'ced' → logprob: -10.75083065032959
    7. 'cel' → logprob: -11.75083065032959
    8. 'except' → logprob: -11.87583065032959
    9. 'educ' → logprob: -12.25083065032959
    10. 'qual' → logprob: -12.37583065032959

Token 442: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -3.8889261304575484e-06
    2. 'ent' → logprob: -13.750003814697266
    3. '
' → logprob: -14.750003814697266
    4. '   ' → logprob: -14.750003814697266
    5. 'ант' → logprob: -15.125003814697266
    6. 'antt' → logprob: -15.375003814697266
    7. '_' → logprob: -15.500003814697266
    8. '{' → logprob: -15.500003814697266
    9. 'a' → logprob: -15.500003814697266
    10. '_ant' → logprob: -16.125003814697266

Token 443: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.000006675720215
    3. '(mx' → logprob: -15.875006675720215
    4. ' (' → logprob: -17.7500057220459
    5. '(s' → logprob: -17.8750057220459
    6. '(
' → logprob: -18.3750057220459
    7. '((' → logprob: -19.3750057220459
    8. '(set' → logprob: -19.7500057220459
    9. '```' → logprob: -19.8750057220459
    10. '(mi' → logprob: -20.7500057220459

Token 444: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.4378848391061183e-05
    2. '(ex' → logprob: -11.500014305114746
    3. 'e' → logprob: -13.625014305114746
    4. 'exc' → logprob: -13.875014305114746
    5. 'ec' → logprob: -14.125014305114746
    6. '	ex' → logprob: -15.375014305114746
    7. 'EX' → logprob: -15.500014305114746
    8. 'ez' → logprob: -15.500014305114746
    9. '_mex' → logprob: -15.500014305114746
    10. '{' → logprob: -16.000015258789062

Token 445: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -3.128163257315464e-07
    2. 'set' → logprob: -16.375
    3. '_' → logprob: -17.25
    4. '_SET' → logprob: -17.625
    5. ')' → logprob: -18.875
    6. '_s' → logprob: -19.25
    7. 'Set' → logprob: -19.625
    8. '_Set' → logprob: -19.75
    9. 's' → logprob: -20.375
    10. ')set' → logprob: -20.375

Token 446: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38725733757019043
    2. ')' → logprob: -1.1372573375701904
    3. ')
' → logprob: -8.01225757598877
    4. '   ' → logprob: -10.13725757598877
    5. ')

' → logprob: -11.38725757598877
    6. ' )
' → logprob: -13.63725757598877
    7. '       ' → logprob: -14.01225757598877
    8. ' ' → logprob: -14.38725757598877
    9. ')`
' → logprob: -15.38725757598877
    10. ' )' → logprob: -15.51225757598877

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.491498531133402e-06
    2. '   ' → logprob: -11.750009536743164
    3. '<|end|>' → logprob: -14.375009536743164
    4. 'grund' → logprob: -14.875009536743164
    5. '```' → logprob: -15.875009536743164
    6. ' grund' → logprob: -15.875009536743164
    7. '        
' → logprob: -16.000009536743164
    8. ',' → logprob: -16.875009536743164
    9. '
' → logprob: -17.125009536743164
    10. '	' → logprob: -17.125009536743164

Token 448: ' if' (ID: 538)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.06498768925666809
    2. '       ' → logprob: -2.9399876594543457
    3. ' grund' → logprob: -5.064987659454346
    4. '   ' → logprob: -5.689987659454346
    5. 'grond' → logprob: -8.439988136291504
    6. 'ground' → logprob: -9.939988136291504
    7. ' ' → logprob: -11.314988136291504
    8. '```' → logprob: -11.689988136291504
    9. 'grunt' → logprob: -11.814988136291504
    10. 'grunn' → logprob: -11.814988136291504

Token 449: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.1616893708705902
    2. 'index' → logprob: -2.286689281463623
    3. ' grund' → logprob: -3.286689281463623
    4. ' index' → logprob: -5.161689281463623
    5. 'not' → logprob: -6.536689281463623
    6. 'len' → logprob: -7.036689281463623
    7. 'edge' → logprob: -7.786689281463623
    8. ' not' → logprob: -8.161689758300781
    9. ' ' → logprob: -8.411689758300781
    10. ' len' → logprob: -8.661689758300781

Token 450: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: 0.0
    2. 'ay' → logprob: -17.5
    3. 'iy' → logprob: -18.5
    4. 'gy' → logprob: -18.5
    5. 'ary' → logprob: -19.625
    6. 'py' → logprob: -19.75
    7. 'ry' → logprob: -19.75
    8. 'ny' → logprob: -20.25
    9. 'by' → logprob: -21.0
    10. 'ies' → logprob: -21.25

Token 451: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.003195535857230425
    2. '_dict' → logprob: -5.878195762634277
    3. 'value' → logprob: -7.878195762634277
    4. 'dict' → logprob: -12.503195762634277
    5. 'Value' → logprob: -13.753195762634277
    6. '_cal' → logprob: -13.878195762634277
    7. '_' → logprob: -14.378195762634277
    8. '   ' → logprob: -14.378195762634277
    9. '_key' → logprob: -14.753195762634277
    10. '_values' → logprob: -14.878195762634277

Token 452: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.04766397178173065
    2. ' ==' → logprob: -4.047664165496826
    3. ' !=' → logprob: -5.047664165496826
    4. '==' → logprob: -5.172664165496826
    5. '<|end|>' → logprob: -5.172664165496826
    6. ':' → logprob: -6.047664165496826
    7. ' >=' → logprob: -6.297664165496826
    8. '>' → logprob: -6.547664165496826
    9. '!=' → logprob: -6.547664165496826
    10. '>=' → logprob: -6.797664165496826

Token 453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005482641514390707
    2. '       ' → logprob: -5.8804826736450195
    3. ':' → logprob: -6.8804826736450195
    4. ':
' → logprob: -7.0054826736450195
    5. ' grund' → logprob: -7.6304826736450195
    6. 'grund' → logprob: -9.13048267364502
    7. '   ' → logprob: -10.63048267364502
    8. '          ' → logprob: -11.00548267364502
    9. '	       ' → logprob: -11.25548267364502
    10. '               ' → logprob: -11.38048267364502

Token 454: ' grund' (ID: 34475)
  Prédit: ' grund'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grund' → logprob: -0.25499066710472107
    2. 'grund' (adapté à ' grund') → logprob: -1.5049906969070435
    3. '       ' → logprob: -6.504990577697754
    4. '   ' → logprob: -7.004990577697754
    5. '           ' → logprob: -7.879990577697754
    6. ' grond' → logprob: -9.379990577697754
    7. '    ' → logprob: -9.879990577697754
    8. '        ' → logprob: -11.129990577697754
    9. ' ' → logprob: -11.379990577697754
    10. '
' → logprob: -11.379990577697754

Token 455: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.128163257315464e-07
    2. '       ' → logprob: -16.5
    3. '   ' → logprob: -16.75
    4. '           ' → logprob: -16.75
    5. 'gy' → logprob: -16.875
    6. '```' → logprob: -17.125
    7. '               ' → logprob: -18.25
    8. 'ies' → logprob: -19.5
    9. '             ' → logprob: -19.625
    10. ' ' → logprob: -19.75

Token 456: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -6.704273118884885e-07
    2. 'dict' → logprob: -14.625000953674316
    3. '_value' → logprob: -17.125
    4. '
' → logprob: -17.25
    5. '_dic' → logprob: -17.25
    6. 'd' → logprob: -17.5
    7. '_d' → logprob: -18.625
    8. 's' → logprob: -18.75
    9. '_DICT' → logprob: -18.875
    10. '[' → logprob: -18.875

Token 457: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.000000953674316
    3. '[ind' → logprob: -15.375000953674316
    4. '[Index' → logprob: -16.25
    5. '[in' → logprob: -16.75
    6. '.setdefault' → logprob: -17.375
    7. 'index' → logprob: -19.375
    8. '[idx' → logprob: -19.375
    9. '.update' → logprob: -19.625
    10. '[i' → logprob: -19.875

Token 458: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004335764329880476
    2. '=' → logprob: -6.254335880279541
    3. ' =' → logprob: -6.629335880279541
    4. ']=' → logprob: -6.879335880279541
    5. ' ]' → logprob: -9.879335403442383
    6. ')' → logprob: -13.129335403442383
    7. ' ' → logprob: -14.629335403442383
    8. '[' → logprob: -15.004335403442383
    9. ',' → logprob: -15.629335403442383
    10. '   ' → logprob: -16.504335403442383

Token 459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759410262107849
    2. ' =' → logprob: -0.8259410262107849
    3. ' ' → logprob: -13.82594108581543
    4. ',' → logprob: -16.32594108581543
    5. '+=' → logprob: -16.32594108581543
    6. ']' → logprob: -16.57594108581543
    7. ']=' → logprob: -16.57594108581543
    8. ')' → logprob: -16.82594108581543
    9. ' +=' → logprob: -17.20094108581543
    10. ')=' → logprob: -17.32594108581543

Token 460: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.00020497082732617855
    2. ' grund' → logprob: -8.500205039978027
    3. 'grond' → logprob: -14.500205039978027
    4. 'ground' → logprob: -15.500205039978027
    5. 'Grund' → logprob: -15.750205039978027
    6. 'gr' → logprob: -15.875205039978027
    7. '0' → logprob: -16.25020408630371
    8. 'grunt' → logprob: -16.75020408630371
    9. 'grunn' → logprob: -16.75020408630371
    10. 'gru' → logprob: -17.00020408630371

Token 461: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.625000953674316
    4. ' ' → logprob: -16.250001907348633
    5. 'value' → logprob: -16.625001907348633
    6. '1' → logprob: -16.625001907348633
    7. '0' → logprob: -17.250001907348633
    8. '#' → logprob: -17.875001907348633
    9. 'у' → logprob: -18.000001907348633
    10. 'ay' → logprob: -18.000001907348633

Token 462: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.001709805685095489
    2. 'value' → logprob: -6.376709938049316
    3. 'alue' → logprob: -11.876709938049316
    4. ' value' → logprob: -16.251708984375
    5. 'valu' → logprob: -16.501708984375
    6. 'Value' → logprob: -16.751708984375
    7. '_VALUE' → logprob: -16.751708984375
    8. 'valuer' → logprob: -17.126708984375
    9. '<|end|>' → logprob: -17.501708984375
    10. '$value' → logprob: -17.626708984375

Token 463: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029794802889227867
    2. '<|end|>' → logprob: -3.779794692993164
    3. '       ' → logprob: -5.654794692993164
    4. 'return' → logprob: -6.404794692993164
    5. ' return' → logprob: -6.904794692993164
    6. '.' → logprob: -9.154794692993164
    7. '	return' → logprob: -9.654794692993164
    8. ')' → logprob: -9.779794692993164
    9. '}' → logprob: -10.279794692993164
    10. '<|end|>' → logprob: -10.529794692993164

Token 465: ' grund' (ID: 34475)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18469014763832092
    2. '   ' → logprob: -1.8096901178359985
    3. ' return' → logprob: -5.434689998626709
    4. '<|end|>' → logprob: -7.559689998626709
    5. '	return' → logprob: -11.434690475463867
    6. ' ' → logprob: -11.559690475463867
    7. ':return' → logprob: -11.809690475463867
    8. '{return' → logprob: -12.434690475463867
    9. '```' → logprob: -12.809690475463867
    10. '       ' → logprob: -12.934690475463867

Token 466: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.75
    3. 'gy' → logprob: -17.75
    4. ' ' → logprob: -18.875
    5. ' y' → logprob: -18.875
    6. '	y' → logprob: -19.0
    7. 'iy' → logprob: -19.5
    8. '{' → logprob: -19.875
    9. 'yg' → logprob: -20.0
    10. 'у' → logprob: -20.0

Token 467: '_sum' (ID: 29859)
  Prédit: '_dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0001793457195162773
    2. 'dict' → logprob: -9.250179290771484
    3. '_value' → logprob: -10.625179290771484
    4. 'return' → logprob: -11.000179290771484
    5. '<|end|>' → logprob: -11.500179290771484
    6. '_values' → logprob: -11.750179290771484
    7. 'Dict' → logprob: -11.875179290771484
    8. '_list' → logprob: -12.500179290771484
    9. '_map' → logprob: -12.875179290771484
    10. '_dic' → logprob: -13.375179290771484

Token 468: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11828897148370743
    2. '=' → logprob: -2.493288993835449
    3. ' +=' → logprob: -3.868288993835449
    4. ' ^=' → logprob: -5.243288993835449
    5. ',' → logprob: -6.493288993835449
    6. ' ' → logprob: -7.743288993835449
    7. '+=' → logprob: -7.868288993835449
    8. ' |=' → logprob: -8.61828899383545
    9. '<|end|>' → logprob: -9.86828899383545
    10. ' ,' → logprob: -10.61828899383545

Token 469: ' defaultdict' (ID: 107098)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3988809287548065
    2. 'Mod' → logprob: -1.148880958557129
    3. ' Modular' → logprob: -4.523880958557129
    4. ' ' → logprob: -7.898880958557129
    5. 'Modulo' → logprob: -8.648880958557129
    6. '(Mod' → logprob: -9.023880958557129
    7. 'MOD' → logprob: -9.898880958557129
    8. 'sum' → logprob: -10.148880958557129
    9. '   ' → logprob: -10.273880958557129
    10. 'Minimal' → logprob: -10.586380958557129

Token 470: '(Mod' (ID: 147705)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.37160712480545044
    2. '(Mod' → logprob: -1.3716070652008057
    3. 'int' → logprob: -2.9966070652008057
    4. '(lambda' → logprob: -5.371607303619385
    5. 'lambda' → logprob: -6.996607303619385
    6. 'Mod' → logprob: -7.496607303619385
    7. '(' → logprob: -7.621607303619385
    8. ' Modular' → logprob: -9.871606826782227
    9. '<int' → logprob: -11.496606826782227
    10. '(Module' → logprob: -11.746606826782227

Token 471: 'ular' (ID: 1492)
  Prédit: 'ular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ular' → logprob: 0.0
    2. 'ULAR' → logprob: -18.125
    3. '```' → logprob: -18.875
    4. ' modular' → logprob: -19.375
    5. 'int' → logprob: -19.625
    6. '[' → logprob: -19.75
    7. 'olar' → logprob: -20.75
    8. 'uler' → logprob: -20.875
    9. 'ual' → logprob: -20.875
    10. 'Integer' → logprob: -20.875

Token 472: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -15.75
    3. '[' → logprob: -16.25
    4. 'integer' → logprob: -17.375
    5. ' Integer' → logprob: -18.125
    6. 'Int' → logprob: -18.375
    7. '_integer' → logprob: -18.625
    8. ')' → logprob: -19.125
    9. '...' → logprob: -19.125
    10. '```' → logprob: -19.125

Token 473: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02516845427453518
    2. '(int' → logprob: -4.025168418884277
    3. ')
' → logprob: -5.025168418884277
    4. '(' → logprob: -8.525168418884277
    5. 'int' → logprob: -9.900168418884277
    6. '(lambda' → logprob: -9.900168418884277
    7. '[int' → logprob: -10.025168418884277
    8. ',int' → logprob: -10.650168418884277
    9. '())' → logprob: -10.775168418884277
    10. '()' → logprob: -11.400168418884277

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026263384148478508
    2. '<|end|>' → logprob: -4.526263236999512
    3. 'for' → logprob: -4.776263236999512
    4. ' for' → logprob: -5.026263236999512
    5. '
' → logprob: -9.776263236999512
    6. ')' → logprob: -10.901263236999512
    7. '    
' → logprob: -11.526263236999512
    8. '<|end|>' → logprob: -12.026263236999512
    9. ',' → logprob: -12.276263236999512
    10. 'def' → logprob: -12.526263236999512

Token 475: ' grund' (ID: 34475)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013472429476678371
    2. '   ' → logprob: -4.888472557067871
    3. 'grund' (adapté à ' grund') → logprob: -5.263472557067871
    4. ' for' → logprob: -8.013472557067871
    5. 'total' → logprob: -9.388472557067871
    6. 'current' → logprob: -10.013472557067871
    7. 'count' → logprob: -10.138472557067871
    8. 'stack' → logprob: -10.388472557067871
    9. 'xor' → logprob: -10.888472557067871
    10. 'result' → logprob: -11.388472557067871

Token 476: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.3458322731312364e-06
    2. '<|end|>' → logprob: -12.500007629394531
    3. 'gy' → logprob: -14.125007629394531
    4. ' ' → logprob: -14.750007629394531
    5. 'by' → logprob: -15.000007629394531
    6. '_sum' → logprob: -15.125007629394531
    7. '   ' → logprob: -15.625007629394531
    8. 'ý' → logprob: -16.12500762939453
    9. 'sum' → logprob: -16.25000762939453
    10. 'hy' → logprob: -16.62500762939453

Token 477: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.5994579792022705
    2. '_dict' → logprob: -1.3494579792022705
    3. '_value' → logprob: -2.2244579792022705
    4. 'for' → logprob: -3.7244579792022705
    5. '_values' → logprob: -4.474457740783691
    6. '_list' → logprob: -4.849457740783691
    7. 'def' → logprob: -4.849457740783691
    8. 'dict' → logprob: -4.974457740783691
    9. '_count' → logprob: -5.849457740783691
    10. 'value' → logprob: -6.099457740783691

Token 478: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.052136629819869995
    2. '=' → logprob: -3.1771366596221924
    3. ' =' → logprob: -4.927136421203613
    4. 'default' → logprob: -6.677136421203613
    5. '=[' → logprob: -8.052136421203613
    6. '.setdefault' → logprob: -9.927136421203613
    7. '={' → logprob: -10.677136421203613
    8. '0' → logprob: -10.802136421203613
    9. '_default' → logprob: -10.802136421203613
    10. '.default' → logprob: -10.927136421203613

Token 479: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006234417669475079
    2. 'grund' → logprob: -8.00062370300293
    3. ' ' → logprob: -9.25062370300293
    4. '}' → logprob: -10.56312370300293
    5. ']' → logprob: -10.75062370300293
    6. '(' → logprob: -10.93812370300293
    7. '1' → logprob: -11.31312370300293
    8. '
' → logprob: -11.50062370300293
    9. '[' → logprob: -11.56312370300293
    10. '   ' → logprob: -11.75062370300293

Token 480: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020425561524461955
    2. ']=' → logprob: -8.625204086303711
    3. ' ]' → logprob: -11.500204086303711
    4. ']+=' → logprob: -11.500204086303711
    5. '=' → logprob: -13.500204086303711
    6. '0' → logprob: -14.125204086303711
    7. '()]' → logprob: -14.875204086303711
    8. ']
' → logprob: -15.125204086303711
    9. ' =' → logprob: -15.125204086303711
    10. ')' → logprob: -15.500204086303711

Token 481: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13013432919979095
    2. ' =' → logprob: -2.130134344100952
    3. '+=' → logprob: -6.380134105682373
    4. ' +=' → logprob: -6.505134105682373
    5. '+' → logprob: -12.880134582519531
    6. ' ' → logprob: -13.255134582519531
    7. ']+=' → logprob: -13.505134582519531
    8. '0' → logprob: -13.755134582519531
    9. ']' → logprob: -14.255134582519531
    10. ',' → logprob: -14.255134582519531

Token 482: ' (' (ID: 350)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.018756389617919922
    2. '0' → logprob: -4.01875638961792
    3. '1' → logprob: -8.143756866455078
    4. ' Modular' → logprob: -8.143756866455078
    5. '(Mod' → logprob: -11.768756866455078
    6. 'Modulo' → logprob: -11.893756866455078
    7. ' ' → logprob: -13.018756866455078
    8. 'mod' → logprob: -13.518756866455078
    9. '_Mod' → logprob: -13.643756866455078
    10. ' Mod' → logprob: -13.643756866455078

Token 483: 'GLOBAL' (ID: 39665)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.12105728685855865
    2. '0' → logprob: -2.4960572719573975
    3. '1' → logprob: -3.4960572719573975
    4. ' Modular' → logprob: -8.496057510375977
    5. 'MOD' → logprob: -8.496057510375977
    6. 'len' → logprob: -8.621057510375977
    7. 'Gr' → logprob: -8.746057510375977
    8. ')' → logprob: -9.246057510375977
    9. '(Mod' → logprob: -9.496057510375977
    10. 'Modulo' → logprob: -9.933557510375977

Token 484: '_B' (ID: 3201)
  Prédit: '_N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_N' → logprob: -0.004910904448479414
    2. 'N' → logprob: -5.504910945892334
    3. '_n' → logprob: -7.754910945892334
    4. '_' → logprob: -9.504910469055176
    5. '_M' → logprob: -9.879910469055176
    6. 'MOD' → logprob: -10.004910469055176
    7. '_MOD' → logprob: -10.504910469055176
    8. ' ' → logprob: -10.504910469055176
    9. '[' → logprob: -11.004910469055176
    10. 'def' → logprob: -11.004910469055176

Token 485: 'AS' (ID: 2158)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4555470943450928
    2. '-' → logprob: -1.5805470943450928
    3. '**' → logprob: -1.5805470943450928
    4. ' -' → logprob: -1.9555470943450928
    5. ')' → logprob: -2.5805470943450928
    6. '+' → logprob: -2.8305470943450928
    7. ' +' → logprob: -3.7055470943450928
    8. ',' → logprob: -4.580547332763672
    9. '<|end|>' → logprob: -4.705547332763672
    10. ' **' → logprob: -4.830547332763672

Token 486: 'IS' (ID: 2291)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.03741768002510071
    2. 'IS' → logprob: -3.9124176502227783
    3. 'IC' → logprob: -4.287417888641357
    4. 'ES' → logprob: -6.287417888641357
    5. 'ED' → logprob: -7.912417888641357
    6. 'EC' → logprob: -8.9124174118042
    7. 'ENAME' → logprob: -9.0374174118042
    8. 'ICS' → logprob: -9.6624174118042
    9. 'ENUM' → logprob: -9.9124174118042
    10. 'EG' → logprob: -10.2874174118042

Token 487: '**' (ID: 410)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04037356749176979
    2. '[' → logprob: -4.290373802185059
    3. ',' → logprob: -4.415373802185059
    4. ' +' → logprob: -5.665373802185059
    5. ',)' → logprob: -6.290373802185059
    6. ').__' → logprob: -6.415373802185059
    7. '+' → logprob: -6.415373802185059
    8. '<|end|>' → logprob: -6.540373802185059
    9. ' )' → logprob: -7.415373802185059
    10. '+)' → logprob: -7.790373802185059

Token 488: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028077255934476852
    2. 'grund' → logprob: -3.7780773639678955
    3. ' ' → logprob: -6.403077125549316
    4. '(' → logprob: -6.903077125549316
    5. ' grund' → logprob: -7.278077125549316
    6. '2' → logprob: -7.653077125549316
    7. 'GLOBAL' → logprob: -9.153077125549316
    8. '1' → logprob: -9.528077125549316
    9. '3' → logprob: -9.653077125549316
    10. '-' → logprob: -9.778077125549316

Token 489: 'GLOBAL' (ID: 39665)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02743005007505417
    2. 'grund' → logprob: -4.027430057525635
    3. ' ' → logprob: -5.652430057525635
    4. 'minimum' → logprob: -7.027430057525635
    5. '(' → logprob: -7.402430057525635
    6. '1' → logprob: -7.402430057525635
    7. 'maximum' → logprob: -7.527430057525635
    8. 'GLOBAL' → logprob: -7.652430057525635
    9. ' grund' → logprob: -8.027429580688477
    10. '-' → logprob: -8.089929580688477

Token 490: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -0.047640327364206314
    2. 'N' → logprob: -3.797640323638916
    3. '0' → logprob: -4.922640323638916
    4. '_' → logprob: -5.172640323638916
    5. '_n' → logprob: -5.172640323638916
    6. '[' → logprob: -7.047640323638916
    7. 'max' → logprob: -7.422640323638916
    8. '_MAX' → logprob: -7.922640323638916
    9. 'dict' → logprob: -8.172640800476074
    10. '1' → logprob: -8.297640800476074

Token 491: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13443505764007568
    2. ')' → logprob: -2.5094351768493652
    3. '+' → logprob: -3.8844351768493652
    4. '))-' → logprob: -5.259435176849365
    5. ' ))' → logprob: -5.634435176849365
    6. '-' → logprob: -5.884435176849365
    7. '*' → logprob: -6.259435176849365
    8. '))*' → logprob: -6.509435176849365
    9. ' +' → logprob: -6.634435176849365
    10. ' -' → logprob: -6.759435176849365

Token 492: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030982159078121185
    2. ' ' → logprob: -6.128098011016846
    3. '2' → logprob: -8.003098487854004
    4. '0' → logprob: -8.503098487854004
    5. '))' → logprob: -8.753098487854004
    6. '10' → logprob: -9.753098487854004
    7. '7' → logprob: -9.878098487854004
    8. '  ' → logprob: -10.753098487854004
    9. ')' → logprob: -11.378098487854004
    10. '100' → logprob: -11.378098487854004

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037186036352068186
    2. '10' → logprob: -6.503718376159668
    3. '2' → logprob: -6.753718376159668
    4. '5' → logprob: -8.003718376159668
    5. ' ' → logprob: -8.128718376159668
    6. '7' → logprob: -8.628718376159668
    7. '3' → logprob: -9.503718376159668
    8. '0' → logprob: -9.628718376159668
    9. '100' → logprob: -9.753718376159668
    10. '4' → logprob: -11.503718376159668

Token 494: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3498140275478363
    2. '))' → logprob: -1.2248140573501587
    3. ')-' → logprob: -7.724813938140869
    4. ' )' → logprob: -7.849813938140869
    5. '-' → logprob: -8.724814414978027
    6. ' ))' → logprob: -9.224814414978027
    7. '))-' → logprob: -9.474814414978027
    8. ')))' → logprob: -9.849814414978027
    9. ')}' → logprob: -10.724814414978027
    10. ' -' → logprob: -10.974814414978027

Token 495: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006534627173095942
    2. ' )' → logprob: -7.875653266906738
    3. ')
' → logprob: -9.125653266906738
    4. ')*' → logprob: -10.500653266906738
    5. '<|end|>' → logprob: -10.500653266906738
    6. '   ' → logprob: -10.875653266906738
    7. 'def' → logprob: -11.125653266906738
    8. '-' → logprob: -11.375653266906738
    9. '*)' → logprob: -11.875653266906738
    10. ' -' → logprob: -12.000653266906738

Token 496: ' GLOBAL' (ID: 89839)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07569564133882523
    2. 'Mod' → logprob: -2.950695753097534
    3. 'Global' → logprob: -4.325695514678955
    4. 'GLOBAL' → logprob: -5.325695514678955
    5. '(' → logprob: -7.450695514678955
    6. ' Modular' → logprob: -7.575695514678955
    7. '(Mod' → logprob: -7.700695514678955
    8. '(Global' → logprob: -8.200695991516113
    9. ' ' → logprob: -8.700695991516113
    10. '   ' → logprob: -9.075695991516113

Token 497: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.0013935691677033901
    2. 'B' → logprob: -6.751393795013428
    3. '_BASE' → logprob: -9.12639331817627
    4. '_basis' → logprob: -10.37639331817627
    5. '1' → logprob: -10.62639331817627
    6. '_b' → logprob: -12.00139331817627
    7. 'basis' → logprob: -12.12639331817627
    8. '	B' → logprob: -12.62639331817627
    9. ' ' → logprob: -12.62639331817627
    10. '_SUM' → logprob: -12.62639331817627

Token 498: 'AS' (ID: 2158)
  Prédit: 'AS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AS' → logprob: -0.0002481078845448792
    2. 'ASE' → logprob: -9.125247955322266
    3. 'asis' → logprob: -9.875247955322266
    4. 'IS' → logprob: -10.750247955322266
    5. 'ASIC' → logprob: -11.250247955322266
    6. 'B' → logprob: -12.000247955322266
    7. 'ASI' → logprob: -12.125247955322266
    8. 'A' → logprob: -12.250247955322266
    9. '1' → logprob: -12.250247955322266
    10. 'IAS' → logprob: -12.875247955322266

Token 499: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -9.729906196298543e-06
    2. 'S' → logprob: -11.750009536743164
    3. 'IC' → logprob: -14.375009536743164
    4. 'I' → logprob: -14.375009536743164
    5. 'E' → logprob: -15.250009536743164
    6. 'ES' → logprob: -16.250009536743164
    7. 'is' → logprob: -16.625009536743164
    8. '_IS' → logprob: -16.750009536743164
    9. 'ИС' → logprob: -16.750009536743164
    10. 'Is' → logprob: -17.000009536743164

Token 500: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027445713058114052
    2. '))' → logprob: -5.0274457931518555
    3. ')**' → logprob: -5.0274457931518555
    4. '**' → logprob: -5.2774457931518555
    5. '[' → logprob: -5.5274457931518555
    6. '*' → logprob: -6.6524457931518555
    7. '+' → logprob: -6.7774457931518555
    8. ')*' → logprob: -7.0274457931518555
    9. ' )' → logprob: -8.027445793151855
    10. ')
' → logprob: -8.402445793151855

Token 501: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4501841962337494
    2. '   ' → logprob: -1.5751842260360718
    3. ' +' → logprob: -2.5751841068267822
    4. '
' → logprob: -3.7001841068267822
    5. '-' → logprob: -3.9501841068267822
    6. '<|end|>' → logprob: -4.575184345245361
    7. ')' → logprob: -4.825184345245361
    8. ' -' → logprob: -5.200184345245361
    9. 'def' → logprob: -5.450184345245361
    10. ' ' → logprob: -6.825184345245361

Token 502: ' (' (ID: 350)
  Prédit: '(G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.0692097544670105
    2. '(Global' → logprob: -2.8192098140716553
    3. '(Mod' → logprob: -6.069209575653076
    4. '(' → logprob: -6.444209575653076
    5. '(global' → logprob: -7.194209575653076
    6. 'GLOBAL' → logprob: -7.444209575653076
    7. '(GL' → logprob: -7.444209575653076
    8. ' (' → logprob: -7.444209575653076
    9. '((' → logprob: -8.319210052490234
    10. '(BASE' → logprob: -9.444210052490234

Token 503: 'GLOBAL' (ID: 39665)
  Prédit: 'GLOBAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GLOBAL' → logprob: -0.005376760382205248
    2. '(G' → logprob: -5.380376815795898
    3. 'Global' → logprob: -8.380376815795898
    4. ' GLOBAL' → logprob: -8.380376815795898
    5. '(Global' → logprob: -9.005376815795898
    6. '(' → logprob: -10.005376815795898
    7. 'GLOBALS' → logprob: -10.255376815795898
    8. '   ' → logprob: -10.755376815795898
    9. 'MOD' → logprob: -10.755376815795898
    10. 'GL' → logprob: -11.755376815795898

Token 504: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.08969876915216446
    2. 'B' → logprob: -2.4646987915039062
    3. '-' → logprob: -8.089698791503906
    4. '_BASE' → logprob: -8.589698791503906
    5. '(' → logprob: -9.839698791503906
    6. '(B' → logprob: -9.964698791503906
    7. '_MOD' → logprob: -9.964698791503906
    8. '_GLOBAL' → logprob: -10.464698791503906
    9. 'BASE' → logprob: -11.214698791503906
    10. '__' → logprob: -11.464698791503906

Token 505: 'AS' (ID: 2158)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.17629437148571014
    2. 'AS' → logprob: -1.9262943267822266
    3. 'IS' → logprob: -4.176294326782227
    4. 'B' → logprob: -8.551294326782227
    5. 'ASE' → logprob: -10.551294326782227
    6. 'ISIS' → logprob: -10.551294326782227
    7. '1' → logprob: -10.676294326782227
    8. 'asis' → logprob: -10.676294326782227
    9. '```' → logprob: -10.676294326782227
    10. '' → logprob: -10.676294326782227

Token 506: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -0.001940653775818646
    2. 'S' → logprob: -6.251940727233887
    3. 'is' → logprob: -11.626940727233887
    4. 'I' → logprob: -13.751940727233887
    5. 'IC' → logprob: -15.001940727233887
    6. 'ES' → logprob: -15.001940727233887
    7. 'sis' → logprob: -15.001940727233887
    8. 'US' → logprob: -15.501940727233887
    9. 'Is' → logprob: -15.626940727233887
    10. 'Sis' → logprob: -15.751940727233887

Token 507: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12696129083633423
    2. ' -' → logprob: -2.1269612312316895
    3. ' ' → logprob: -11.751961708068848
    4. '-
' → logprob: -12.126961708068848
    5. '   ' → logprob: -12.376961708068848
    6. ')' → logprob: -12.626961708068848
    7. '
' → logprob: -12.751961708068848
    8. '1' → logprob: -13.001961708068848
    9. '  ' → logprob: -13.251961708068848
    10. '[' → logprob: -13.876961708068848

Token 508: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05536547303199768
    2. 'Mod' → logprob: -2.930365562438965
    3. 'Global' → logprob: -8.180365562438965
    4. ' ' → logprob: -9.680365562438965
    5. '(Mod' → logprob: -9.930365562438965
    6. ' Modular' → logprob: -10.430365562438965
    7. 'GLOBAL' → logprob: -11.180365562438965
    8. '   ' → logprob: -11.930365562438965
    9. ' Mod' → logprob: -11.930365562438965
    10. 'MOD' → logprob: -11.930365562438965

Token 509: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07010060548782349
    2. 'Mod' → logprob: -2.6951005458831787
    3. 'Global' → logprob: -9.570100784301758
    4. ' ' → logprob: -10.570100784301758
    5. ' Modular' → logprob: -10.695100784301758
    6. '(Mod' → logprob: -10.695100784301758
    7. 'Module' → logprob: -12.320100784301758
    8. 'MOD' → logprob: -12.695100784301758
    9. '   ' → logprob: -12.820100784301758
    10. ' Mod' → logprob: -12.945100784301758

Token 510: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.954393079970032e-05
    2. '   ' → logprob: -10.750049591064453
    3. ' )' → logprob: -11.125049591064453
    4. '))' → logprob: -12.625049591064453
    5. ')
' → logprob: -12.750049591064453
    6. '<|end|>' → logprob: -13.500049591064453
    7. ')}' → logprob: -14.250049591064453
    8. ')*' → logprob: -14.625049591064453
    9. '[' → logprob: -14.750049591064453
    10. '*)' → logprob: -15.125049591064453

Token 511: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021502235904335976
    2. '<|end|>' → logprob: -4.0215020179748535
    3. '
' → logprob: -6.1465020179748535
    4. ')' → logprob: -7.1465020179748535
    5. '    
' → logprob: -8.146502494812012
    6. '<|end|>' → logprob: -10.396502494812012
    7. ' for' → logprob: -11.021502494812012
    8. '	for' → logprob: -11.271502494812012
    9. ' ' → logprob: -11.396502494812012
    10. 'for' → logprob: -11.771502494812012

Token 512: ' previous' (ID: 5880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4349612593650818
    2. ' for' → logprob: -1.4349613189697266
    3. 'for' → logprob: -2.1849613189697266
    4. '
' → logprob: -7.559961318969727
    5. '    
' → logprob: -7.934961318969727
    6. '<|end|>' → logprob: -7.934961318969727
    7. ' ' → logprob: -8.809961318969727
    8. '	for' → logprob: -9.059961318969727
    9. ')' → logprob: -9.684961318969727
    10. ' 
' → logprob: -9.809961318969727

Token 513: '_index' (ID: 7748)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -1.3049602508544922
    2. '_index' → logprob: -1.5549602508544922
    3. '_' → logprob: -1.9299602508544922
    4. '_value' → logprob: -1.9299602508544922
    5. '_key' → logprob: -2.429960250854492
    6. '_sum' → logprob: -2.429960250854492
    7. '_node' → logprob: -4.429960250854492
    8. ' =' → logprob: -4.554960250854492
    9. '_basis' → logprob: -4.929960250854492
    10. '_val' → logprob: -5.554960250854492

Token 514: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6965514421463013
    2. ' =' → logprob: -0.6965514421463013
    3. ',' → logprob: -5.696551322937012
    4. ' ' → logprob: -11.196551322937012
    5. ')' → logprob: -11.571551322937012
    6. ' +=' → logprob: -12.571551322937012
    7. ' ,' → logprob: -12.821551322937012
    8. '+=' → logprob: -13.571551322937012
    9. ' ' → logprob: -13.821551322937012
    10. '<|end|>' → logprob: -13.946551322937012

Token 515: ' ' (ID: 220)
  Prédit: 'GLOBAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GLOBAL' → logprob: -0.3758971393108368
    2. ' GLOBAL' → logprob: -1.2508971691131592
    3. '0' → logprob: -3.750897169113159
    4. ' ' → logprob: -6.37589693069458
    5. 'None' → logprob: -7.25089693069458
    6. ' None' → logprob: -7.50089693069458
    7. '_GLOBAL' → logprob: -8.750897407531738
    8. 'Global' → logprob: -9.000897407531738
    9. 'global' → logprob: -9.125897407531738
    10. ' global' → logprob: -9.500897407531738

Token 516: '0' (ID: 15)
  Prédit: 'GLOBAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GLOBAL' → logprob: -0.046078652143478394
    2. '0' → logprob: -3.171078681945801
    3. ' GLOBAL' → logprob: -6.296078681945801
    4. 'None' → logprob: -7.421078681945801
    5. ' ' → logprob: -9.0460786819458
    6. 'global' → logprob: -9.0460786819458
    7. '-' → logprob: -9.0460786819458
    8. 'GLOBALS' → logprob: -9.4210786819458
    9. 'Global' → logprob: -9.5460786819458
    10. '1' → logprob: -10.0460786819458

Token 517: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39877697825431824
    2. '
' → logprob: -1.3987770080566406
    3. '<|end|>' → logprob: -2.6487770080566406
    4. ' for' → logprob: -5.398777008056641
    5. '    
' → logprob: -6.023777008056641
    6. ' 
' → logprob: -6.898777008056641
    7. '  
' → logprob: -7.148777008056641
    8. '<|end|>' → logprob: -7.648777008056641
    9. 'for' → logprob: -7.898777008056641
    10. ',' → logprob: -8.39877700805664

Token 518: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09055487811565399
    2. '
' → logprob: -2.96555495262146
    3. ' for' → logprob: -3.59055495262146
    4. 'for' → logprob: -5.465554714202881
    5. '<|end|>' → logprob: -5.965554714202881
    6. '    
' → logprob: -7.965554714202881
    7. '	for' → logprob: -9.465555191040039
    8. ' 
' → logprob: -9.965555191040039
    9. '```' → logprob: -10.590555191040039
    10. ',' → logprob: -10.590555191040039

Token 519: ' cumulative' (ID: 75628)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31408005952835083
    2. ' for' → logprob: -1.439079999923706
    3. '   ' → logprob: -3.439079999923706
    4. 'current' → logprob: -9.314080238342285
    5. 'prev' → logprob: -10.064080238342285
    6. '
' → logprob: -10.439080238342285
    7. '	for' → logprob: -10.564080238342285
    8. 'previous' → logprob: -10.689080238342285
    9. '```' → logprob: -11.439080238342285
    10. 'grund' → logprob: -11.564080238342285

Token 520: '_weight' (ID: 34711)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.19422581791877747
    2. '_value' → logprob: -2.944225788116455
    3. ' =' → logprob: -3.194225788116455
    4. '_index' → logprob: -3.444225788116455
    5. '=' → logprob: -4.194225788116455
    6. '_' → logprob: -4.694225788116455
    7. '_power' → logprob: -5.069225788116455
    8. '_x' → logprob: -5.319225788116455
    9. '_ex' → logprob: -5.569225788116455
    10. 'sum' → logprob: -5.569225788116455

Token 521: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326844096183777
    2. '=' → logprob: -0.7576844096183777
    3. ',' → logprob: -9.757684707641602
    4. ' ' → logprob: -11.382684707641602
    5. '   ' → logprob: -12.132684707641602
    6. 's' → logprob: -12.132684707641602
    7. '  ' → logprob: -13.507684707641602
    8. '<|end|>' → logprob: -13.882684707641602
    9. 'import' → logprob: -15.007684707641602
    10. '=int' → logprob: -15.195184707641602

Token 522: ' Modular' (ID: 137262)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.10181467235088348
    2. '0' → logprob: -2.6018147468566895
    3. ' Modular' → logprob: -3.8518147468566895
    4. 'Global' → logprob: -7.3518147468566895
    5. ' Mod' → logprob: -8.476814270019531
    6. '   ' → logprob: -8.601814270019531
    7. ' ' → logprob: -8.976814270019531
    8. '(Mod' → logprob: -9.101814270019531
    9. 'MOD' → logprob: -10.226814270019531
    10. 'Modulo' → logprob: -10.726814270019531

Token 523: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.87500286102295
    3. 'integer' → logprob: -15.37500286102295
    4. '_integer' → logprob: -16.375003814697266
    5. ' Integer' → logprob: -17.000003814697266
    6. 'Inte' → logprob: -17.375003814697266
    7. '_Integer' → logprob: -17.750003814697266
    8. '1' → logprob: -17.875003814697266
    9. '0' → logprob: -18.000003814697266
    10. 'Integral' → logprob: -18.125003814697266

Token 524: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02332269214093685
    2. '()' → logprob: -4.023322582244873
    3. '0' → logprob: -5.523322582244873
    4. '()
' → logprob: -6.773322582244873
    5. ' (' → logprob: -12.398323059082031
    6. '(G' → logprob: -12.398323059082031
    7. '()

' → logprob: -12.523323059082031
    8. '()
' → logprob: -12.773323059082031
    9. '=' → logprob: -13.023323059082031
    10. '[' → logprob: -13.773323059082031

Token 525: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006777655798941851
    2. '1' → logprob: -7.375677585601807
    3. ')' → logprob: -10.750678062438965
    4. ' ' → logprob: -11.000678062438965
    5. '   ' → logprob: -12.750678062438965
    6. '
' → logprob: -13.813178062438965
    7. '(' → logprob: -13.875678062438965
    8. '"' → logprob: -14.000678062438965
    9. '
' → logprob: -14.313178062438965
    10. '  ' → logprob: -14.750678062438965

Token 526: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05499003827571869
    2. ')
' → logprob: -2.92999005317688
    3. ')
' → logprob: -10.3049898147583
    4. '   ' → logprob: -10.6799898147583
    5. ' )' → logprob: -10.8049898147583
    6. ')

' → logprob: -11.1799898147583
    7. '
' → logprob: -11.9299898147583
    8. '<|end|>' → logprob: -12.9299898147583
    9. ' )
' → logprob: -13.3049898147583
    10. ',' → logprob: -13.4299898147583

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004388813395053148
    2. '<|end|>' → logprob: -5.754388809204102
    3. ' for' → logprob: -7.504388809204102
    4. 'for' → logprob: -7.754388809204102
    5. '
' → logprob: -8.754388809204102
    6. '    
' → logprob: -10.629388809204102
    7. '<|end|>' → logprob: -11.129388809204102
    8. '	for' → logprob: -11.629388809204102
    9. ')' → logprob: -12.129388809204102
    10. ',' → logprob: -12.379388809204102

Token 528: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2593705356121063
    2. '   ' → logprob: -1.7593705654144287
    3. ' for' → logprob: -2.8843705654144287
    4. '
' → logprob: -8.759370803833008
    5. '	for' → logprob: -8.884370803833008
    6. '```' → logprob: -10.009370803833008
    7. ' ' → logprob: -11.134370803833008
    8. '    
' → logprob: -11.634370803833008
    9. '  ' → logprob: -11.634370803833008
    10. 'current' → logprob: -11.759370803833008

Token 529: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.7853509187698364
    2. 'index' → logprob: -0.9103509187698364
    3. ' current' → logprob: -3.660350799560547
    4. 'current' → logprob: -3.785350799560547
    5. ' node' → logprob: -4.035350799560547
    6. ' i' → logprob: -4.035350799560547
    7. 'node' → logprob: -4.410350799560547
    8. 'i' → logprob: -4.660350799560547
    9. ' idx' → logprob: -5.160350799560547
    10. 'idx' → logprob: -5.410350799560547

Token 530: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06695753335952759
    2. 'in' → logprob: -2.941957473754883
    3. ',' → logprob: -4.441957473754883
    4. ' ,' → logprob: -8.816957473754883
    5. '	in' → logprob: -10.566957473754883
    6. ',in' → logprob: -10.941957473754883
    7. ' ' → logprob: -11.191957473754883
    8. '   ' → logprob: -12.441957473754883
    9. '_in' → logprob: -12.816957473754883
    10. 'In' → logprob: -13.441957473754883

Token 531: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03079579770565033
    2. 'range' → logprob: -3.5307958126068115
    3. ' edge' → logprob: -7.530795574188232
    4. ' sorted' → logprob: -9.15579605102539
    5. 'edge' → logprob: -9.53079605102539
    6. ' ' → logprob: -9.65579605102539
    7. ' GLOBAL' → logprob: -9.65579605102539
    8. 'sorted' → logprob: -10.03079605102539
    9. '(range' → logprob: -10.40579605102539
    10. ' in' → logprob: -10.40579605102539

Token 532: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0353117361664772
    2. '1' → logprob: -3.535311698913574
    3. 'previous' → logprob: -5.910311698913574
    4. '(G' → logprob: -6.410311698913574
    5. '(previous' → logprob: -7.285311698913574
    6. ' ' → logprob: -8.660311698913574
    7. '   ' → logprob: -8.660311698913574
    8. 'GLOBAL' → logprob: -9.910311698913574
    9. ' previous' → logprob: -10.785311698913574
    10. 'G' → logprob: -10.785311698913574

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005126903764903545
    2. ' ' → logprob: -5.880126953125
    3. 'GLOBAL' → logprob: -6.755126953125
    4. '   ' → logprob: -7.130126953125
    5. 'previous' → logprob: -8.630126953125
    6. '0' → logprob: -10.130126953125
    7. 'global' → logprob: -10.567626953125
    8. ' GLOBAL' → logprob: -10.817626953125
    9. '2' → logprob: -11.442626953125
    10. 'len' → logprob: -11.567626953125

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.735893965815194e-05
    2. ' ,' → logprob: -11.375017166137695
    3. ',G' → logprob: -12.250017166137695
    4. ',
' → logprob: -14.625017166137695
    5. '   ' → logprob: -15.375017166137695
    6. '<|end|>' → logprob: -15.750017166137695
    7. ' ' → logprob: -17.000017166137695
    8. ')' → logprob: -17.500017166137695
    9. '<|end|>' → logprob: -17.875017166137695
    10. '‌,' → logprob: -18.250017166137695

Token 535: ' GLOBAL' (ID: 89839)
  Prédit: 'GLOBAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GLOBAL' → logprob: -0.0024861192796379328
    2. ' GLOBAL' → logprob: -6.002486228942871
    3. 'GLOBALS' → logprob: -12.002486228942871
    4. '   ' → logprob: -12.877486228942871
    5. '_GLOBAL' → logprob: -14.252486228942871
    6. 'Global' → logprob: -15.002486228942871
    7. 'GL' → logprob: -15.502486228942871
    8. ' ' → logprob: -15.752486228942871
    9. 'G' → logprob: -15.752486228942871
    10. 'len' → logprob: -16.377485275268555

Token 536: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -0.005257833749055862
    2. 'N' → logprob: -5.255257606506348
    3. '+' → logprob: -11.505257606506348
    4. '```' → logprob: -12.505257606506348
    5. '_n' → logprob: -13.130257606506348
    6. '_B' → logprob: -13.130257606506348
    7. '_' → logprob: -13.255257606506348
    8. '
' → logprob: -13.505257606506348
    9. '   ' → logprob: -14.255257606506348
    10. '\' → logprob: -15.255257606506348

Token 537: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868885934352875
    2. ' +' → logprob: -1.1368886232376099
    3. '+
' → logprob: -12.13688850402832
    4. ' +
' → logprob: -12.76188850402832
    5. ',' → logprob: -13.13688850402832
    6. '):
' → logprob: -13.26188850402832
    7. '   ' → logprob: -13.63688850402832
    8. '
' → logprob: -14.13688850402832
    9. ' ' → logprob: -14.13688850402832
    10. '):' → logprob: -14.51188850402832

Token 538: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005541055579669774
    2. ' ' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.500554084777832
    4. '2' → logprob: -15.625554084777832
    5. '
' → logprob: -16.50055503845215
    6. ')' → logprob: -16.62555503845215
    7. '```' → logprob: -16.75055503845215
    8. '  ' → logprob: -17.06305503845215
    9. '+' → logprob: -18.25055503845215
    10. '    ' → logprob: -18.37555503845215

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.837811088189483e-05
    2. ' ' → logprob: -9.625068664550781
    3. '2' → logprob: -13.625068664550781
    4. '   ' → logprob: -14.125068664550781
    5. '```' → logprob: -16.37506866455078
    6. '
' → logprob: -16.75006866455078
    7. ')' → logprob: -17.06256866455078
    8. '  ' → logprob: -17.31256866455078
    9. '+' → logprob: -17.31256866455078
    10. '-' → logprob: -17.87506866455078

Token 540: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3735121488571167
    2. '):' → logprob: -1.2485121488571167
    3. ':' → logprob: -3.7485122680664062
    4. '   ' → logprob: -7.748512268066406
    5. '):
' → logprob: -7.998512268066406
    6. ',' → logprob: -8.123512268066406
    7. ':
' → logprob: -8.998512268066406
    8. ')' → logprob: -11.873512268066406
    9. '       ' → logprob: -12.498512268066406
    10. '):

' → logprob: -13.373512268066406

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02158227562904358
    2. '<|end|>' → logprob: -4.021582126617432
    3. '   ' → logprob: -6.146582126617432
    4. ',' → logprob: -8.14658260345459
    5. '
' → logprob: -8.52158260345459
    6. '```' → logprob: -8.64658260345459
    7. '<|end|>' → logprob: -8.77158260345459
    8. '        
' → logprob: -9.27158260345459
    9. ')' → logprob: -9.77158260345459
    10. '#' → logprob: -9.89658260345459

Token 542: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04130887985229492
    2. 'if' (adapté à ' if') → logprob: -4.041308879852295
    3. '   ' → logprob: -4.291308879852295
    4. 'weight' → logprob: -5.291308879852295
    5. ' cumulative' → logprob: -6.541308879852295
    6. '       ' → logprob: -7.166308879852295
    7. 'current' → logprob: -7.291308879852295
    8. ' if' → logprob: -7.416308879852295
    9. 'grund' → logprob: -8.666309356689453
    10. 'previous' → logprob: -9.041309356689453

Token 543: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.008334656246006489
    2. 'grund' → logprob: -5.133334636688232
    3. ' index' → logprob: -6.133334636688232
    4. 'not' → logprob: -9.38333511352539
    5. ' grund' → logprob: -9.75833511352539
    6. '   ' → logprob: -10.88333511352539
    7. '  ' → logprob: -11.50833511352539
    8. '	index' → logprob: -11.50833511352539
    9. ' ' → logprob: -11.69583511352539
    10. '(index' → logprob: -11.82083511352539

Token 544: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8775058388710022
    2. ' not' → logprob: -1.1275057792663574
    3. 'in' → logprob: -2.1275057792663574
    4. '-' → logprob: -2.2525057792663574
    5. 'not' → logprob: -3.6275057792663574
    6. ' -' → logprob: -4.752505779266357
    7. '==' → logprob: -8.877506256103516
    8. '>' → logprob: -9.002506256103516
    9. '!=' → logprob: -9.127506256103516
    10. ' ' → logprob: -9.127506256103516

Token 545: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.003142070025205612
    2. ' grund' → logprob: -5.8781418800354
    3. 'edge' → logprob: -8.128142356872559
    4. 'ground' → logprob: -11.253142356872559
    5. ' edge' → logprob: -11.378142356872559
    6. 'grond' → logprob: -12.378142356872559
    7. ' ' → logprob: -12.878142356872559
    8. 'grunn' → logprob: -13.003142356872559
    9. '   ' → logprob: -13.253142356872559
    10. 'grad' → logprob: -13.753142356872559

Token 546: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.869017852295656e-06
    2. 'gy' → logprob: -12.000006675720215
    3. 'ky' → logprob: -15.625006675720215
    4. 'py' → logprob: -15.750006675720215
    5. 'sy' → logprob: -16.87500762939453
    6. 'dy' → logprob: -17.12500762939453
    7. 'by' → logprob: -17.37500762939453
    8. 'g' → logprob: -17.37500762939453
    9. 'ly' → logprob: -17.50000762939453
    10. 'ny' → logprob: -17.75000762939453

Token 547: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -9.805981972021982e-05
    2. 'dict' → logprob: -9.37509822845459
    3. '_sum' → logprob: -11.37509822845459
    4. '_dic' → logprob: -14.87509822845459
    5. 'Dict' → logprob: -15.37509822845459
    6. '
' → logprob: -15.50009822845459
    7. '   ' → logprob: -15.75009822845459
    8. '_dictionary' → logprob: -15.87509822845459
    9. '_DICT' → logprob: -15.87509822845459
    10. 'd' → logprob: -16.500097274780273

Token 548: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8032709360122681
    2. ':
' → logprob: -1.303270936012268
    3. ':' → logprob: -1.803270936012268
    4. 'and' → logprob: -2.1782708168029785
    5. '       ' → logprob: -6.9282708168029785
    6. '   ' → logprob: -7.0532708168029785
    7. '):
' → logprob: -8.053271293640137
    8. ' ' → logprob: -9.928271293640137
    9. '           ' → logprob: -10.178271293640137
    10. '<|end|>' → logprob: -10.303271293640137

Token 549: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5539070963859558
    2. '           ' → logprob: -1.0539071559906006
    3. ':' → logprob: -3.5539071559906006
    4. ' and' → logprob: -3.6789071559906006
    5. ',' → logprob: -4.8039069175720215
    6. ':
' → logprob: -5.0539069175720215
    7. '<|end|>' → logprob: -5.1789069175720215
    8. ' cumulative' → logprob: -7.4289069175720215
    9. '<|end|>' → logprob: -7.4289069175720215
    10. '):
' → logprob: -7.8039069175720215

Token 550: ' cumulative' (ID: 75628)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11497355997562408
    2. '           ' → logprob: -3.239973545074463
    3. '       ' → logprob: -3.489973545074463
    4. 'grund' → logprob: -3.614973545074463
    5. 'previous' → logprob: -4.989973545074463
    6. ' cumulative' → logprob: -6.114973545074463
    7. '   ' → logprob: -6.614973545074463
    8. 'if' → logprob: -7.614973545074463
    9. 'difference' → logprob: -8.364974021911621
    10. 'prev' → logprob: -8.739974021911621

Token 551: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -1.9623810658231378e-05
    2. 'weight' → logprob: -11.000020027160645
    3. '*=' → logprob: -14.250020027160645
    4. '_multiplier' → logprob: -14.750020027160645
    5. '=' → logprob: -15.000020027160645
    6. '_weights' → logprob: -15.500020027160645
    7. '   ' → logprob: -15.875020027160645
    8. '_sum' → logprob: -16.000019073486328
    9. '_factor' → logprob: -16.125019073486328
    10. ' *=' → logprob: -16.125019073486328

Token 552: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.04214296489953995
    2. ' *=' → logprob: -3.292142868041992
    3. '=' → logprob: -5.792142868041992
    4. '*' → logprob: -7.417142868041992
    5. '+=' → logprob: -8.042142868041992
    6. '-=' → logprob: -10.292142868041992
    7. ' =' → logprob: -10.417142868041992
    8. '   ' → logprob: -10.667142868041992
    9. '/=' → logprob: -11.292142868041992
    10. '//=' → logprob: -12.417142868041992

Token 553: ' GLOBAL' (ID: 89839)
  Prédit: 'GLOBAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GLOBAL' → logprob: -0.0018312999745830894
    2. '(G' → logprob: -7.001831531524658
    3. 'global' → logprob: -8.3768310546875
    4. ' GLOBAL' → logprob: -8.5018310546875
    5. 'grund' → logprob: -9.2518310546875
    6. '   ' → logprob: -9.5018310546875
    7. '(' → logprob: -9.5018310546875
    8. 'GR' → logprob: -9.6268310546875
    9. '(Global' → logprob: -10.3768310546875
    10. 'MOD' → logprob: -10.7518310546875

Token 554: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.0061020320281386375
    2. 'B' → logprob: -5.256102085113525
    3. '_BASE' → logprob: -7.506102085113525
    4. '_MOD' → logprob: -9.131101608276367
    5. '_BASIC' → logprob: -9.381101608276367
    6. '_basis' → logprob: -10.631101608276367
    7. '
' → logprob: -11.381101608276367
    8. '   ' → logprob: -11.381101608276367
    9. '_SUM' → logprob: -11.631101608276367
    10. '_WEIGHT' → logprob: -11.756101608276367

Token 555: 'AS' (ID: 2158)
  Prédit: 'AS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AS' → logprob: -0.000492268183734268
    2. 'B' → logprob: -8.000492095947266
    3. 'asis' → logprob: -10.000492095947266
    4. 'S' → logprob: -10.250492095947266
    5. 'IS' → logprob: -10.625492095947266
    6. 'ASE' → logprob: -10.750492095947266
    7. 'basis' → logprob: -12.500492095947266
    8. 'ASIC' → logprob: -12.625492095947266
    9. '_basis' → logprob: -12.750492095947266
    10. 'ASI' → logprob: -13.125492095947266

Token 556: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -2.5822400857578032e-05
    2. 'S' → logprob: -11.125025749206543
    3. 'IC' → logprob: -11.875025749206543
    4. 'is' → logprob: -13.375025749206543
    5. 'E' → logprob: -13.875025749206543
    6. 'ИС' → logprob: -14.750025749206543
    7. 'Is' → logprob: -15.375025749206543
    8. 'I' → logprob: -15.375025749206543
    9. 'ICS' → logprob: -15.750025749206543
    10. 'ES' → logprob: -15.750025749206543

Token 557: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04717068374156952
    2. '
' → logprob: -3.547170639038086
    3. ' **' → logprob: -4.922170639038086
    4. '   ' → logprob: -5.672170639038086
    5. '__' → logprob: -6.422170639038086
    6. '+' → logprob: -6.547170639038086
    7. '
' → logprob: -6.922170639038086
    8. '*' → logprob: -7.672170639038086
    9. 'grund' → logprob: -8.172170639038086
    10. '-' → logprob: -8.297170639038086

Token 558: ' (' (ID: 350)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.04343176633119583
    2. '(' → logprob: -3.1684317588806152
    3. '   ' → logprob: -9.168432235717773
    4. ' grund' → logprob: -9.668432235717773
    5. 'grond' → logprob: -9.668432235717773
    6. ' (' → logprob: -10.418432235717773
    7. '((' → logprob: -10.543432235717773
    8. 'ground' → logprob: -10.668432235717773
    9. '(-' → logprob: -10.918432235717773
    10. 'grunn' → logprob: -11.543432235717773

Token 559: 'index' (ID: 2257)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.1384343057870865
    2. 'index' → logprob: -2.638434410095215
    3. '(' → logprob: -3.013434410095215
    4. '(index' → logprob: -5.263434410095215
    5. ' grund' → logprob: -6.263434410095215
    6. ' index' → logprob: -7.263434410095215
    7. ' (' → logprob: -8.138434410095215
    8. '   ' → logprob: -8.888434410095215
    9. 'grond' → logprob: -9.950934410095215
    10. ' ' → logprob: -10.575934410095215

Token 560: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06197440251708031
    2. ' -' → logprob: -2.811974287033081
    3. '   ' → logprob: -12.31197452545166
    4. ' ' → logprob: -14.18697452545166
    5. '  ' → logprob: -14.31197452545166
    6. '-prev' → logprob: -14.93697452545166
    7. '```' → logprob: -15.93697452545166
    8. ' ' → logprob: -16.436973571777344
    9. ')' → logprob: -16.686973571777344
    10. '-min' → logprob: -16.811973571777344

Token 561: ' previous' (ID: 5880)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' → logprob: -0.005234832875430584
    2. ' previous' → logprob: -5.255234718322754
    3. '           ' → logprob: -14.255234718322754
    4. 'prev' → logprob: -15.630234718322754
    5. '(previous' → logprob: -16.13023567199707
    6. '   ' → logprob: -17.38023567199707
    7. '       ' → logprob: -17.38023567199707
    8. '_previous' → logprob: -17.38023567199707
    9. '.previous' → logprob: -17.75523567199707
    10. 'Previous' → logprob: -18.88023567199707

Token 562: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0010375719284638762
    2. 'index' → logprob: -6.87603759765625
    3. '_' → logprob: -12.50103759765625
    4. 'Index' → logprob: -14.87603759765625
    5. '<|end|>' → logprob: -15.50103759765625
    6. ' index' → logprob: -15.62603759765625
    7. ')' → logprob: -16.25103759765625
    8. '_INDEX' → logprob: -16.37603759765625
    9. '```' → logprob: -16.87603759765625
    10. '[' → logprob: -17.00103759765625

Token 563: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008691980503499508
    2. ')
' → logprob: -4.758691787719727
    3. '       ' → logprob: -10.133691787719727
    4. ' )' → logprob: -11.508691787719727
    5. ')

' → logprob: -11.633691787719727
    6. '<|end|>' → logprob: -11.758691787719727
    7. ')
' → logprob: -12.008691787719727
    8. '           ' → logprob: -13.508691787719727
    9. '   ' → logprob: -14.008691787719727
    10. ')#' → logprob: -14.883691787719727

Token 564: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012623949907720089
    2. '       ' → logprob: -4.5126237869262695
    3. 'previous' → logprob: -7.1376237869262695
    4. ' previous' → logprob: -7.2626237869262695
    5. 'prev' → logprob: -10.76262378692627
    6. '   ' → logprob: -11.13762378692627
    7. '               ' → logprob: -11.51262378692627
    8. '(previous' → logprob: -11.88762378692627
    9. ',' → logprob: -12.01262378692627
    10. '<|end|>' → logprob: -12.13762378692627

Token 565: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' (adapté à ' grund') → logprob: -0.005983543116599321
    2. '           ' → logprob: -6.255983352661133
    3. 'previous' → logprob: -6.380983352661133
    4. 'c' → logprob: -6.630983352661133
    5. '       ' → logprob: -8.130983352661133
    6. 'difference' → logprob: -9.005983352661133
    7. 'prev' → logprob: -9.130983352661133
    8. 'current' → logprob: -9.880983352661133
    9. 'ground' → logprob: -10.255983352661133
    10. 'old' → logprob: -10.255983352661133

Token 566: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.704273118884885e-07
    2. 'gy' → logprob: -14.875000953674316
    3. 'ly' → logprob: -16.0
    4. '           ' → logprob: -16.875
    5. 'py' → logprob: -17.25
    6. 'ry' → logprob: -17.625
    7. '       ' → logprob: -18.25
    8. 'ky' → logprob: -19.125
    9. '   ' → logprob: -19.25
    10. 'ny' → logprob: -19.375

Token 567: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0001394161517964676
    2. 'sum' → logprob: -9.500139236450195
    3. '_value' → logprob: -9.750139236450195
    4. '_' → logprob: -13.000139236450195
    5. '_dict' → logprob: -13.625139236450195
    6. '_val' → logprob: -14.125139236450195
    7. '_s' → logprob: -14.250139236450195
    8. '_key' → logprob: -15.000139236450195
    9. 'value' → logprob: -15.375139236450195
    10. '=' → logprob: -15.750139236450195

Token 568: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00043043080950155854
    2. '[c' → logprob: -8.7504301071167
    3. '.setdefault' → logprob: -10.1254301071167
    4. ' =' → logprob: -10.6254301071167
    5. '[int' → logprob: -10.7504301071167
    6. '[(' → logprob: -10.7504301071167
    7. '[
' → logprob: -10.7504301071167
    8. '[G' → logprob: -10.7504301071167
    9. '=' → logprob: -10.8754301071167
    10. '[g' → logprob: -11.3754301071167

Token 569: 'grund' (ID: 27797)
  Prédit: 'grund'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.0004259084234945476
    2. '[' → logprob: -9.000426292419434
    3. ' grund' → logprob: -9.375426292419434
    4. '   ' → logprob: -10.000426292419434
    5. '0' → logprob: -10.250426292419434
    6. 'index' → logprob: -10.375426292419434
    7. ' ' → logprob: -10.750426292419434
    8. 'grond' → logprob: -10.875426292419434
    9. '(' → logprob: -11.875426292419434
    10. 'ground' → logprob: -12.250426292419434

Token 570: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.3080716346157715e-05
    2. '   ' → logprob: -12.625022888183594
    3. 'y's' → logprob: -13.000022888183594
    4. '```' → logprob: -13.250022888183594
    5. '       ' → logprob: -13.375022888183594
    6. '1' → logprob: -13.500022888183594
    7. '           ' → logprob: -13.750022888183594
    8. 'py' → logprob: -13.750022888183594
    9. 'gy' → logprob: -13.875022888183594
    10. 'yg' → logprob: -13.875022888183594

Token 571: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.017305903136730194
    2. 'dict' → logprob: -4.392305850982666
    3. '_sum' → logprob: -5.642305850982666
    4. 'index' → logprob: -7.892305850982666
    5. 'sum' → logprob: -8.392306327819824
    6. '_index' → logprob: -8.392306327819824
    7. '_value' → logprob: -9.392306327819824
    8. 'Dict' → logprob: -10.017306327819824
    9. '   ' → logprob: -10.142306327819824
    10. 'd' → logprob: -10.267306327819824

Token 572: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.07594095915555954
    2. '_dict' → logprob: -2.7009408473968506
    3. '[' → logprob: -5.20094108581543
    4. 'dict' → logprob: -8.32594108581543
    5. 'Dict' → logprob: -9.82594108581543
    6. 'index' → logprob: -10.07594108581543
    7. '```' → logprob: -10.07594108581543
    8. ']' → logprob: -10.82594108581543
    9. '][' → logprob: -11.20094108581543
    10. '(index' → logprob: -11.70094108581543

Token 573: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007958084461279213
    2. ']+=' → logprob: -7.375795841217041
    3. ' ]' → logprob: -9.625795364379883
    4. '-' → logprob: -9.625795364379883
    5. '+' → logprob: -11.375795364379883
    6. '   ' → logprob: -11.875795364379883
    7. '[' → logprob: -12.750795364379883
    8. '       ' → logprob: -12.875795364379883
    9. ']+' → logprob: -12.875795364379883
    10. ' -' → logprob: -13.250795364379883

Token 574: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002890109783038497
    2. ' +=' → logprob: -5.877890110015869
    3. '=' → logprob: -9.877889633178711
    4. '-=' → logprob: -11.002889633178711
    5. '+' → logprob: -11.627889633178711
    6. '+=(' → logprob: -12.627889633178711
    7. '   ' → logprob: -13.127889633178711
    8. ']+=' → logprob: -13.627889633178711
    9. '```' → logprob: -14.252889633178711
    10. '*=' → logprob: -15.252889633178711

Token 575: ' cumulative' (ID: 75628)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006444069440476596
    2. ' cumulative' → logprob: -7.375644207000732
    3. '   ' → logprob: -11.87564468383789
    4. '(c' → logprob: -12.75064468383789
    5. '	c' → logprob: -13.37564468383789
    6. '           ' → logprob: -13.50064468383789
    7. ' c' → logprob: -14.12564468383789
    8. 'cum' → logprob: -14.56314468383789
    9. 'previous' → logprob: -14.75064468383789
    10. '       ' → logprob: -14.87564468383789

Token 576: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0010542457457631826
    2. 'weight' → logprob: -6.876054286956787
    3. 'c' → logprob: -11.251053810119629
    4. '_c' → logprob: -12.626053810119629
    5. 'Weight' → logprob: -14.126053810119629
    6. '_weights' → logprob: -14.751053810119629
    7. 'cum' → logprob: -14.876053810119629
    8. 'weighted' → logprob: -14.876053810119629
    9. 'weig' → logprob: -15.126053810119629
    10. '_' → logprob: -15.126053810119629

Token 577: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013138465583324432
    2. '
' → logprob: -4.388138294219971
    3. '       ' → logprob: -8.263138771057129
    4. 'previous' → logprob: -8.888138771057129
    5. '<|end|>' → logprob: -9.638138771057129
    6. ',' → logprob: -9.763138771057129
    7. ' previous' → logprob: -10.638138771057129
    8. '               ' → logprob: -10.888138771057129
    9. '            
' → logprob: -11.513138771057129
    10. '   ' → logprob: -11.763138771057129

Token 578: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004217770881950855
    2. '       ' → logprob: -5.504217624664307
    3. 'previous' → logprob: -9.379218101501465
    4. '<|end|>' → logprob: -10.629218101501465
    5. '               ' → logprob: -11.504218101501465
    6. ' previous' → logprob: -12.129218101501465
    7. '   ' → logprob: -12.129218101501465
    8. '```' → logprob: -12.379218101501465
    9. 'prev' → logprob: -13.504218101501465
    10. '                   ' → logprob: -14.004218101501465

Token 579: ' grund' (ID: 34475)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'previous' → logprob: -0.004039456602185965
    2. ' previous' → logprob: -5.754039287567139
    3. '           ' → logprob: -7.129039287567139
    4. '       ' → logprob: -9.879039764404297
    5. '   ' → logprob: -12.004039764404297
    6. '.previous' → logprob: -14.004039764404297
    7. '(previous' → logprob: -14.504039764404297
    8. '               ' → logprob: -14.879039764404297
    9. '_previous' → logprob: -15.629039764404297
    10. 'Previous' → logprob: -15.879039764404297

Token 580: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.9361264946837764e-07
    2. '           ' → logprob: -17.25
    3. 'ay' → logprob: -18.125
    4. '```' → logprob: -18.875
    5. 'iy' → logprob: -19.0
    6. 'gy' → logprob: -19.0
    7. 'yac' → logprob: -19.0
    8. 'ý' → logprob: -19.25
    9. '       ' → logprob: -19.75
    10. '   ' → logprob: -20.0

Token 581: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.012426065281033516
    2. 'sum' → logprob: -4.637425899505615
    3. '_dict' → logprob: -6.887425899505615
    4. '_value' → logprob: -7.887425899505615
    5. 'Sum' → logprob: -8.012426376342773
    6. '=' → logprob: -8.137426376342773
    7. '_prev' → logprob: -9.762426376342773
    8. ' =' → logprob: -10.012426376342773
    9. '_weight' → logprob: -10.012426376342773
    10. 'dict' → logprob: -10.012426376342773

Token 582: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02075512520968914
    2. '<|end|>' → logprob: -4.020755290985107
    3. '=' → logprob: -7.645755290985107
    4. '[(' → logprob: -7.770755290985107
    5. '.setdefault' → logprob: -8.27075481414795
    6. '0' → logprob: -8.27075481414795
    7. '[
' → logprob: -8.64575481414795
    8. '[-' → logprob: -8.64575481414795
    9. ' ' → logprob: -8.77075481414795
    10. ' =' → logprob: -9.02075481414795

Token 583: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005458935629576445
    2. 'grund' → logprob: -5.630458831787109
    3. 'GLOBAL' → logprob: -7.505458831787109
    4. 'previous' → logprob: -7.505458831787109
    5. 'index' → logprob: -8.94295883178711
    6. '(' → logprob: -9.13045883178711
    7. ' ' → logprob: -9.63045883178711
    8. 'global' → logprob: -10.00545883178711
    9. '1' → logprob: -10.25545883178711
    10. 'Mod' → logprob: -10.25545883178711

Token 584: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7534809708595276
    2. ' +=' → logprob: -1.8784809112548828
    3. ' -=' → logprob: -2.253480911254883
    4. '+=' → logprob: -2.378480911254883
    5. ']+=' → logprob: -3.003480911254883
    6. '-' → logprob: -3.128480911254883
    7. ')' → logprob: -3.128480911254883
    8. '<|end|>' → logprob: -4.378480911254883
    9. ' -' → logprob: -4.628480911254883
    10. '+' → logprob: -5.003480911254883

Token 585: ' -=' (ID: 12583)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6206893920898438
    2. '-=' → logprob: -0.9956893920898438
    3. ' -=' → logprob: -2.9956893920898438
    4. '*=' → logprob: -4.245689392089844
    5. ' +=' → logprob: -4.245689392089844
    6. '-' → logprob: -4.495689392089844
    7. '=' → logprob: -6.120689392089844
    8. ' *=' → logprob: -7.120689392089844
    9. '+=(' → logprob: -10.745689392089844
    10. '*' → logprob: -10.870689392089844

Token 586: ' cumulative' (ID: 75628)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.387458365177736e-05
    2. 'grund' → logprob: -9.750083923339844
    3. 'GLOBAL' → logprob: -11.875083923339844
    4. ' cumulative' → logprob: -11.875083923339844
    5. '   ' → logprob: -12.375083923339844
    6. 'cum' → logprob: -13.125083923339844
    7. '```' → logprob: -14.125083923339844
    8. 'MOD' → logprob: -14.500083923339844
    9. '           ' → logprob: -14.625083923339844
    10. '	c' → logprob: -14.625083923339844

Token 587: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.005934131797403097
    2. 'weight' → logprob: -5.130934238433838
    3. 'weighted' → logprob: -13.88093376159668
    4. 'Weight' → logprob: -14.00593376159668
    5. 'c' → logprob: -14.00593376159668
    6. '_weights' → logprob: -14.63093376159668
    7. '_WEIGHT' → logprob: -14.75593376159668
    8. '   ' → logprob: -14.88093376159668
    9. '-weight' → logprob: -15.13093376159668
    10. ' weight' → logprob: -15.50593376159668

Token 588: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09784892946481705
    2. '
' → logprob: -3.472848892211914
    3. '       ' → logprob: -3.597848892211914
    4. 'previous' → logprob: -3.847848892211914
    5. '<|end|>' → logprob: -4.722848892211914
    6. ' previous' → logprob: -6.222848892211914
    7. '   ' → logprob: -7.347848892211914
    8. '(previous' → logprob: -7.472848892211914
    9. '_previous' → logprob: -8.222848892211914
    10. 'Previous' → logprob: -8.597848892211914

Token 589: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24955293536186218
    2. '           ' → logprob: -1.6245529651641846
    3. 'previous' → logprob: -4.1245527267456055
    4. '<|end|>' → logprob: -5.2495527267456055
    5. ' previous' → logprob: -7.2495527267456055
    6. '```' → logprob: -7.7495527267456055
    7. '   ' → logprob: -7.8745527267456055
    8. '
' → logprob: -8.124552726745605
    9. '_previous' → logprob: -8.374552726745605
    10. 'prev' → logprob: -8.999552726745605

Token 590: ' previous' (ID: 5880)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' (adapté à ' previous') → logprob: -0.03358795866370201
    2. ' previous' → logprob: -3.78358793258667
    3. '           ' → logprob: -4.78358793258667
    4. '       ' → logprob: -6.28358793258667
    5. '   ' → logprob: -9.908588409423828
    6. '.previous' → logprob: -13.283588409423828
    7. '_previous' → logprob: -13.783588409423828
    8. '
' → logprob: -13.783588409423828
    9. '(previous' → logprob: -14.033588409423828
    10. '```' → logprob: -14.658588409423828

Token 591: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6935968399047852
    2. '_index' → logprob: -0.6935968399047852
    3. '_previous' → logprob: -9.068596839904785
    4. '=' → logprob: -9.318596839904785
    5. ' _' → logprob: -9.693596839904785
    6. '_idx' → logprob: -11.068596839904785
    7. '_indices' → logprob: -11.068596839904785
    8. '=_' → logprob: -11.193596839904785
    9. '<|end|>' → logprob: -11.318596839904785
    10. ')' → logprob: -11.568596839904785

Token 592: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '=index' → logprob: -15.889163970947266
    4. '<|end|>' → logprob: -16.764163970947266
    5. ',' → logprob: -17.639163970947266
    6. '=
' → logprob: -18.014163970947266
    7. '＝' → logprob: -18.014163970947266
    8. '.=' → logprob: -18.014163970947266
    9. '+=' → logprob: -18.389163970947266
    10. ')' → logprob: -18.639163970947266

Token 593: ' cumulative' (ID: 75628)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7218034267425537
    2. 'c' → logprob: -1.3468034267425537
    3. 'previous' → logprob: -2.3468034267425537
    4. 'continue' → logprob: -3.0968034267425537
    5. ' =' → logprob: -3.4718034267425537
    6. '<|end|>' → logprob: -3.5968034267425537
    7. 'index' → logprob: -3.7218034267425537
    8. ' cumulative' → logprob: -4.846803665161133
    9. '_=' → logprob: -4.971803665161133
    10. '_' → logprob: -5.471803665161133

Token 594: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.012527543120086193
    2. 'weight' → logprob: -4.3875274658203125
    3. 'Weight' → logprob: -11.387527465820312
    4. '_index' → logprob: -13.512527465820312
    5. '_weights' → logprob: -13.762527465820312
    6. ' weight' → logprob: -14.137527465820312
    7. 'weighted' → logprob: -14.387527465820312
    8. '_' → logprob: -14.512527465820312
    9. '   ' → logprob: -14.887527465820312
    10. '```' → logprob: -15.137527465820312

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193047523498535
    2. ' =' → logprob: -1.5019304752349854
    3. ',' → logprob: -14.501930236816406
    4. '<|end|>' → logprob: -14.626930236816406
    5. '＝' → logprob: -16.376930236816406
    6. '.=' → logprob: -16.876930236816406
    7. ' ' → logprob: -17.251930236816406
    8. '=}' → logprob: -17.376930236816406
    9. '=end' → logprob: -17.501930236816406
    10. '=int' → logprob: -17.626930236816406

Token 596: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.00014323067443910986
    2. ' index' → logprob: -8.875143051147461
    3. '   ' → logprob: -13.000143051147461
    4. '=index' → logprob: -15.125143051147461
    5. '(index' → logprob: -15.250143051147461
    6. '	index' → logprob: -15.250143051147461
    7. '
' → logprob: -16.25014305114746
    8. '#index' → logprob: -16.75014305114746
    9. '@index' → logprob: -17.12514305114746
    10. ',index' → logprob: -17.25014305114746

Token 597: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31032463908195496
    2. '+' → logprob: -1.9353246688842773
    3. ' +' → logprob: -2.1853246688842773
    4. '<|end|>' → logprob: -4.810324668884277
    5. ' ,' → logprob: -6.560324668884277
    6. '<|end|>' → logprob: -8.935324668884277
    7. ' ' → logprob: -9.185324668884277
    8. ',
' → logprob: -9.810324668884277
    9. '+,' → logprob: -9.935324668884277
    10. '
' → logprob: -10.935324668884277

Token 598: ' cumulative' (ID: 75628)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00982869602739811
    2. '1' → logprob: -5.259828567504883
    3. 'c' → logprob: -5.884828567504883
    4. ' Modular' → logprob: -6.759828567504883
    5. '0' → logprob: -8.634828567504883
    6. '(Mod' → logprob: -9.009828567504883
    7. '   ' → logprob: -9.134828567504883
    8. 'Gr' → logprob: -10.259828567504883
    9. 'Global' → logprob: -10.259828567504883
    10. ' Mod' → logprob: -10.384828567504883

Token 599: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.02989361621439457
    2. 'weight' → logprob: -3.529893636703491
    3. 'Weight' → logprob: -8.90489387512207
    4. ' weight' → logprob: -13.27989387512207
    5. 'Integer' → logprob: -13.65489387512207
    6. 'Weighted' → logprob: -13.77989387512207
    7. 'weig' → logprob: -14.02989387512207
    8. '\' → logprob: -15.27989387512207
    9. 'weighted' → logprob: -15.40489387512207
    10. 'wei' → logprob: -15.52989387512207

Token 600: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 601: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 602: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28488996624946594
    2. 'return' (adapté à ' return') → logprob: -1.4098899364471436
    3. '<|end|>' → logprob: -6.034890174865723
    4. ' return' → logprob: -7.659890174865723
    5. 'for' → logprob: -8.284890174865723
    6. '#' → logprob: -8.784890174865723
    7. ')' → logprob: -8.784890174865723
    8. '```' → logprob: -9.784890174865723
    9. '	return' → logprob: -10.159890174865723
    10. '[' → logprob: -10.659890174865723

Token 603: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.02984224446117878
    2. ' grund' → logprob: -3.5298421382904053
    3. 'grond' → logprob: -10.529842376708984
    4. '   ' → logprob: -11.529842376708984
    5. 'ground' → logprob: -11.529842376708984
    6. 'grad' → logprob: -12.029842376708984
    7. '(' → logprob: -12.154842376708984
    8. ' ' → logprob: -12.279842376708984
    9. ' grond' → logprob: -12.279842376708984
    10. 'grunn' → logprob: -12.279842376708984

Token 604: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: 0.0
    2. 'yg' → logprob: -20.0
    3. '[y' → logprob: -20.625
    4. '```' → logprob: -20.625
    5. '[' → logprob: -21.75
    6. '_' → logprob: -21.875
    7. '\' → logprob: -22.0
    8. 'gy' → logprob: -22.125
    9. 'yj' → logprob: -22.375
    10. '{' → logprob: -22.5

Token 605: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0031838975846767426
    2. '_dict' → logprob: -5.753183841705322
    3. '_' → logprob: -12.37818431854248
    4. 'sum' → logprob: -13.87818431854248
    5. '_s' → logprob: -14.50318431854248
    6. '_dic' → logprob: -16.128183364868164
    7. '__' → logprob: -16.378183364868164
    8. '_hash' → logprob: -17.253183364868164
    9. '```' → logprob: -17.378183364868164
    10. 'dict' → logprob: -17.628183364868164

Token 606: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 607: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19265025854110718
    2. '<|end|>' → logprob: -2.442650318145752
    3. ':' → logprob: -2.692650318145752
    4. '#' → logprob: -4.567650318145752
    5. '
' → logprob: -6.067650318145752
    6. '=' → logprob: -6.192650318145752
    7. '[' → logprob: -7.067650318145752
    8. ',' → logprob: -7.192650318145752
    9. '```' → logprob: -7.317650318145752
    10. ']' → logprob: -7.317650318145752

Token 608: ' edge' (ID: 11165)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3585858643054962
    2. 'main' → logprob: -1.3585858345031738
    3. ' solve' → logprob: -4.108585834503174
    4. 'solve' → logprob: -4.733585834503174
    5. 'calculate' → logprob: -5.733585834503174
    6. ' process' → logprob: -6.233585834503174
    7. ' calculate' → logprob: -6.483585834503174
    8. 'mod' → logprob: -6.733585834503174
    9. 'process' → logprob: -6.858585834503174
    10. ' compute' → logprob: -7.233585834503174

Token 609: '_reader' (ID: 55777)
  Prédit: '_dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.5361118316650391
    2. 's' → logprob: -1.036111831665039
    3. '_' → logprob: -2.911111831665039
    4. '_list' → logprob: -6.036111831665039
    5. 'dict' → logprob: -6.411111831665039
    6. '_dictionary' → logprob: -7.536111831665039
    7. '_add' → logprob: -8.286111831665039
    8. '_map' → logprob: -8.786111831665039
    9. '_data' → logprob: -9.286111831665039
    10. 'def' → logprob: -9.286111831665039

Token 610: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.047141339629888535
    2. '():
' → logprob: -3.4221413135528564
    3. '(edge' → logprob: -4.6721415519714355
    4. '(edges' → logprob: -6.6721415519714355
    5. '(n' → logprob: -7.0471415519714355
    6. '(size' → logprob: -7.6721415519714355
    7. '(num' → logprob: -8.172141075134277
    8. '(N' → logprob: -8.672141075134277
    9. '()' → logprob: -9.172141075134277
    10. '(line' → logprob: -9.297141075134277

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009127496741712093
    2. 'n' → logprob: -5.009127616882324
    3. ' n' → logprob: -7.509127616882324
    4. 'edges' → logprob: -7.509127616882324
    5. 'edge' → logprob: -8.134127616882324
    6. ' edges' → logprob: -8.384127616882324
    7. 'num' → logprob: -8.509127616882324
    8. ' edge' → logprob: -9.134127616882324
    9. 'm' → logprob: -9.259127616882324
    10. 'e' → logprob: -9.884127616882324

Token 612: ' edge' (ID: 11165)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.5526270866394043
    2. '   ' → logprob: -1.8026270866394043
    3. 'edge' (adapté à ' edge') → logprob: -1.8026270866394043
    4. 'm' → logprob: -1.9276270866394043
    5. 'num' → logprob: -2.6776270866394043
    6. 'input' → logprob: -2.9276270866394043
    7. 'n' → logprob: -3.4276270866394043
    8. 'number' → logprob: -3.4276270866394043
    9. 'M' → logprob: -3.8026270866394043
    10. 'E' → logprob: -3.8026270866394043

Token 613: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10700662434101105
    2. '_dict' → logprob: -3.482006549835205
    3. '_count' → logprob: -3.607006549835205
    4. '=' → logprob: -4.232006549835205
    5. '_list' → logprob: -4.482006549835205
    6. ' =' → logprob: -4.982006549835205
    7. 'count' → logprob: -6.232006549835205
    8. '   ' → logprob: -6.482006549835205
    9. '_data' → logprob: -6.482006549835205
    10. 'dict' → logprob: -6.607006549835205

Token 614: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04877062886953354
    2. '=' → logprob: -3.0487706661224365
    3. '=int' → logprob: -9.923770904541016
    4. '   ' → logprob: -10.048770904541016
    5. ' ' → logprob: -10.173770904541016
    6. ',' → logprob: -10.298770904541016
    7. '  ' → logprob: -11.798770904541016
    8. '=sys' → logprob: -12.173770904541016
    9. '    ' → logprob: -12.923770904541016
    10. ' =
' → logprob: -13.798770904541016

Token 615: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02981390617787838
    2. ' int' → logprob: -3.5298140048980713
    3. 'input' → logprob: -10.654813766479492
    4. '   ' → logprob: -11.029813766479492
    5. ' ' → logprob: -11.404813766479492
    6. '  ' → logprob: -12.029813766479492
    7. ' input' → logprob: -12.904813766479492
    8. '    ' → logprob: -13.404813766479492
    9. '	int' → logprob: -14.279813766479492
    10. '(int' → logprob: -15.029813766479492

Token 616: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012559332884848118
    2. 'input' → logprob: -4.387559413909912
    3. '(' → logprob: -10.387558937072754
    4. ' input' → logprob: -11.637558937072754
    5. '(sys' → logprob: -12.637558937072754
    6. ' (' → logprob: -13.387558937072754
    7. '=input' → logprob: -13.512558937072754
    8. '(
' → logprob: -14.012558937072754
    9. 'sys' → logprob: -14.012558937072754
    10. '	input' → logprob: -14.512558937072754

Token 617: '_line' (ID: 14418)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7877746820449829
    2. '_line' → logprob: -1.037774682044983
    3. '()' → logprob: -1.662774682044983
    4. '().' → logprob: -7.537774562835693
    5. '_' → logprob: -7.537774562835693
    6. ')' → logprob: -9.662775039672852
    7. '())
' → logprob: -10.412775039672852
    8. '()
' → logprob: -10.537775039672852
    9. '()>' → logprob: -10.912775039672852
    10. '();)' → logprob: -10.912775039672852

Token 618: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0005767432739958167
    2. '())
' → logprob: -8.000576972961426
    3. '()' → logprob: -8.375576972961426
    4. '().' → logprob: -12.375576972961426
    5. ')' → logprob: -12.625576972961426
    6. ' ())' → logprob: -13.500576972961426
    7. '())

' → logprob: -13.875576972961426
    8. '()
' → logprob: -15.250576972961426
    9. '())
' → logprob: -15.750576972961426
    10. '();)' → logprob: -15.875576972961426

Token 619: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045810408890247345
    2. '
' → logprob: -3.7958104610443115
    3. 'edges' → logprob: -4.545810222625732
    4. 'for' → logprob: -4.920810222625732
    5. ' for' → logprob: -6.295810222625732
    6. '    
' → logprob: -7.170810222625732
    7. ' edges' → logprob: -7.545810222625732
    8. '<|end|>' → logprob: -7.545810222625732
    9. '	for' → logprob: -8.17081069946289
    10. '_edges' → logprob: -9.17081069946289

Token 620: ' edge' (ID: 11165)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.18615810573101044
    2. 'edge' (adapté à ' edge') → logprob: -1.8111580610275269
    3. '   ' → logprob: -5.811158180236816
    4. 'graph' → logprob: -6.436158180236816
    5. ' edges' → logprob: -7.061158180236816
    6. 'for' → logprob: -7.436158180236816
    7. '
' → logprob: -9.311158180236816
    8. ' edge' → logprob: -10.061158180236816
    9. 'adj' → logprob: -10.186158180236816
    10. 'result' → logprob: -10.436158180236816

Token 621: '_structure' (ID: 96431)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006282952148467302
    2. '_list' → logprob: -5.256282806396484
    3. '_' → logprob: -7.756282806396484
    4. '_dict' → logprob: -8.006282806396484
    5. '=' → logprob: -9.131282806396484
    6. ' =' → logprob: -9.131282806396484
    7. '_s' → logprob: -10.631282806396484
    8. 'dict' → logprob: -11.756282806396484
    9. '_lines' → logprob: -11.881282806396484
    10. '_edges' → logprob: -12.506282806396484

Token 622: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34880146384239197
    2. ' =' → logprob: -1.2238014936447144
    3. '={}' → logprob: -7.973801612854004
    4. '={' → logprob: -12.223801612854004
    5. '={}
' → logprob: -13.348801612854004
    6. '=[]' → logprob: -13.598801612854004
    7. ' ' → logprob: -13.848801612854004
    8. ' ={' → logprob: -14.098801612854004
    9. 's' → logprob: -14.598801612854004
    10. '{}' → logprob: -14.973801612854004

Token 623: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -8.184812031686306e-05
    2. ' defaultdict' → logprob: -9.500082015991211
    3. ' default' → logprob: -13.250082015991211
    4. '(default' → logprob: -13.750082015991211
    5. '   ' → logprob: -14.000082015991211
    6. '{' → logprob: -14.000082015991211
    7. '"default' → logprob: -14.375082015991211
    8. 'def' → logprob: -14.625082015991211
    9. '.default' → logprob: -14.875082015991211
    10. ''default' → logprob: -15.375082015991211

Token 624: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.008770680986344814
    2. '(set' → logprob: -4.75877046585083
    3. 'list' → logprob: -9.008770942687988
    4. '(lambda' → logprob: -11.133770942687988
    5. 'set' → logprob: -11.383770942687988
    6. '(' → logprob: -12.133770942687988
    7. '(int' → logprob: -14.133770942687988
    8. '(<' → logprob: -14.133770942687988
    9. '(dict' → logprob: -14.508770942687988
    10. '(
' → logprob: -15.133770942687988

Token 625: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05535442382097244
    2. ')
' → logprob: -2.930354356765747
    3. '   ' → logprob: -7.680354595184326
    4. ')
' → logprob: -12.555354118347168
    5. '())' → logprob: -13.680354118347168
    6. ')

' → logprob: -13.930354118347168
    7. '())
' → logprob: -14.305354118347168
    8. ' ' → logprob: -14.430354118347168
    9. '()' → logprob: -14.805354118347168
    10. ' )' → logprob: -14.805354118347168

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009426692849956453
    2. ' for' → logprob: -7.625942707061768
    3. 'for' → logprob: -8.25094223022461
    4. '	for' → logprob: -8.75094223022461
    5. '    
' → logprob: -10.37594223022461
    6. '<|end|>' → logprob: -13.87594223022461
    7. '	
' → logprob: -14.25094223022461
    8. '    ' → logprob: -14.75094223022461
    9. '
' → logprob: -14.87594223022461
    10. '   ' → logprob: -15.62594223022461

Token 627: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009346862207166851
    2. '   ' → logprob: -7.000934600830078
    3. ' for' → logprob: -10.750934600830078
    4. '	for' → logprob: -13.375934600830078
    5. '
' → logprob: -16.500934600830078
    6. '```' → logprob: -16.875934600830078
    7. '    
' → logprob: -17.625934600830078
    8. 'while' → logprob: -19.625934600830078
    9. ' ' → logprob: -20.750934600830078
    10. 'fo' → logprob: -20.750934600830078

Token 628: ' edge' (ID: 11165)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.723973582556937e-05
    2. ' _' → logprob: -11.125017166137695
    3. '_range' → logprob: -14.000017166137695
    4. '_edge' → logprob: -14.875017166137695
    5. '_i' → logprob: -15.000017166137695
    6. '_
' → logprob: -15.125017166137695
    7. '_=' → logprob: -15.875017166137695
    8. '_index' → logprob: -16.000017166137695
    9. '_edges' → logprob: -16.000017166137695
    10. 'range' → logprob: -16.875017166137695

Token 629: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06790920346975327
    2. ' in' → logprob: -2.9429092407226562
    3. '_index' → logprob: -5.067909240722656
    4. ' _' → logprob: -5.692909240722656
    5. '_idx' → logprob: -6.567909240722656
    6. '_count' → logprob: -7.317909240722656
    7. '_i' → logprob: -7.817909240722656
    8. 'in' → logprob: -8.192909240722656
    9. '_id' → logprob: -8.692909240722656
    10. '_in' → logprob: -9.317909240722656

Token 630: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013339038006961346
    2. 'in' → logprob: -4.388339042663574
    3. '_' → logprob: -7.138339042663574
    4. ' ' → logprob: -11.513339042663574
    5. ' _' → logprob: -11.763339042663574
    6. ',' → logprob: -12.138339042663574
    7. '	in' → logprob: -12.138339042663574
    8. '_in' → logprob: -13.013339042663574
    9. '	' → logprob: -14.763339042663574
    10. '1' → logprob: -14.763339042663574

Token 631: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05300053209066391
    2. ' range' → logprob: -3.0530004501342773
    3. '_' → logprob: -5.428000450134277
    4. ' ' → logprob: -12.303000450134277
    5. '_range' → logprob: -12.553000450134277
    6. '	range' → logprob: -14.053000450134277
    7. '
' → logprob: -14.428000450134277
    8. ' _' → logprob: -14.928000450134277
    9. '  ' → logprob: -15.053000450134277
    10. ' in' → logprob: -15.178000450134277

Token 632: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.4036981165409088
    2. 'edge' → logprob: -1.1536980867385864
    3. ' edge' → logprob: -4.153697967529297
    4. '(' → logprob: -7.278697967529297
    5. 'range' → logprob: -9.528697967529297
    6. '1' → logprob: -9.653697967529297
    7. '=edge' → logprob: -9.653697967529297
    8. '   ' → logprob: -10.153697967529297
    9. '_edge' → logprob: -10.903697967529297
    10. ' ' → logprob: -12.028697967529297

Token 633: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.452426608419046e-05
    2. '_' → logprob: -10.87503433227539
    3. 'count' → logprob: -12.00003433227539
    4. ')' → logprob: -13.25003433227539
    5. '   ' → logprob: -13.37503433227539
    6. '
' → logprob: -13.87503433227539
    7. ' _' → logprob: -14.12503433227539
    8. 's' → logprob: -14.62503433227539
    9. '_c' → logprob: -14.75003433227539
    10. '_index' → logprob: -14.87503433227539

Token 634: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.34953922033309937
    2. '):' → logprob: -1.2245392799377441
    3. '   ' → logprob: -7.849539279937744
    4. ',' → logprob: -8.099538803100586
    5. ':' → logprob: -8.474538803100586
    6. ' ):
' → logprob: -9.849538803100586
    7. '):
' → logprob: -10.349538803100586
    8. ')' → logprob: -10.474538803100586
    9. ' ):' → logprob: -10.474538803100586
    10. ':
' → logprob: -10.974538803100586

Token 635: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1530861258506775
    2. '   ' → logprob: -2.1530861854553223
    3. ' line' → logprob: -3.7780861854553223
    4. ' node' → logprob: -7.528086185455322
    5. ' source' → logprob: -8.403085708618164
    6. ' input' → logprob: -8.403085708618164
    7. 'n' → logprob: -8.403085708618164
    8. '```' → logprob: -8.528085708618164
    9. '	line' → logprob: -8.528085708618164
    10. ' from' → logprob: -8.653085708618164

Token 636: ' node' (ID: 4596)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.33576637506484985
    2. ' u' → logprob: -2.585766315460205
    3. 'node' (adapté à ' node') → logprob: -2.835766315460205
    4. 'a' → logprob: -3.085766315460205
    5. 'start' → logprob: -3.335766315460205
    6. 'from' → logprob: -3.585766315460205
    7. ' node' → logprob: -3.710766315460205
    8. ' start' → logprob: -5.460766315460205
    9. '   ' → logprob: -5.710766315460205
    10. 'source' → logprob: -5.960766315460205

Token 637: '_a' (ID: 10852)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41165637969970703
    2. 'A' → logprob: -2.661656379699707
    3. ',' → logprob: -2.786656379699707
    4. ' =' → logprob: -3.036656379699707
    5. '_from' → logprob: -3.411656379699707
    6. 'a' → logprob: -3.411656379699707
    7. '_u' → logprob: -4.036656379699707
    8. '_' → logprob: -4.161656379699707
    9. 'from' → logprob: -4.161656379699707
    10. 'u' → logprob: -4.661656379699707

Token 638: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000939450750593096
    2. ',node' → logprob: -7.12593936920166
    3. ' ,' → logprob: -9.00093936920166
    4. '=' → logprob: -12.12593936920166
    5. '_,' → logprob: -12.75093936920166
    6. ',b' → logprob: -14.50093936920166
    7. ' =' → logprob: -14.62593936920166
    8. ',user' → logprob: -14.75093936920166
    9. ',input' → logprob: -15.00093936920166
    10. ',n' → logprob: -15.00093936920166

Token 639: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.3132673501968384
    2. 'node' → logprob: -1.3132673501968384
    3. '	node' → logprob: -13.188267707824707
    4. ' ' → logprob: -13.563267707824707
    5. ',node' → logprob: -14.563267707824707
    6. '_node' → logprob: -14.563267707824707
    7. '=node' → logprob: -14.938267707824707
    8. '(node' → logprob: -15.813267707824707
    9. '[node' → logprob: -15.813267707824707
    10. '   ' → logprob: -16.18826675415039

Token 640: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -7.941850526549388e-06
    2. 'b' → logprob: -12.125007629394531
    3. '_a' → logprob: -14.000007629394531
    4. 'B' → logprob: -14.625007629394531
    5. '_' → logprob: -14.750007629394531
    6. '_c' → logprob: -15.250007629394531
    7. 's' → logprob: -15.250007629394531
    8. '<|end|>' → logprob: -16.62500762939453
    9. '```' → logprob: -17.00000762939453
    10. '<|end|>' → logprob: -17.37500762939453

Token 641: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.69316166639328
    2. ' =' → logprob: -0.69316166639328
    3. ',' → logprob: -11.818161964416504
    4. '=line' → logprob: -13.443161964416504
    5. '   ' → logprob: -13.568161964416504
    6. '=input' → logprob: -13.818161964416504
    7. '    ' → logprob: -14.193161964416504
    8. ' ' → logprob: -14.318161964416504
    9. ')' → logprob: -14.818161964416504
    10. '<|end|>' → logprob: -15.193161964416504

Token 642: ' sorted' (ID: 20099)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12693189084529877
    2. ' map' → logprob: -2.12693190574646
    3. 'input' → logprob: -13.376932144165039
    4. '(map' → logprob: -14.126932144165039
    5. '	map' → logprob: -14.376932144165039
    6. 'list' → logprob: -15.126932144165039
    7. '   ' → logprob: -15.251932144165039
    8. '[' → logprob: -16.00193214416504
    9. ' ' → logprob: -16.12693214416504
    10. ' input' → logprob: -16.25193214416504

Token 643: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0007475639577023685
    2. '(list' → logprob: -7.2507476806640625
    3. '(tuple' → logprob: -10.500747680664062
    4. '([' → logprob: -12.000747680664062
    5. 'map' → logprob: -13.250747680664062
    6. '(' → logprob: -13.375747680664062
    7. ' map' → logprob: -15.250747680664062
    8. '((' → logprob: -15.500747680664062
    9. '	map' → logprob: -17.000747680664062
    10. '(int' → logprob: -18.125747680664062

Token 644: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011761783389374614
    2. 'int' → logprob: -6.751176357269287
    3. '(' → logprob: -12.251175880432129
    4. '[int' → logprob: -14.876175880432129
    5. '(
' → logprob: -15.251175880432129
    6. '   ' → logprob: -15.376175880432129
    7. ',int' → logprob: -15.751175880432129
    8. '<int' → logprob: -16.251176834106445
    9. '=int' → logprob: -16.876176834106445
    10. '(input' → logprob: -17.001176834106445

Token 645: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.38792821764945984
    2. ',input' → logprob: -1.1379282474517822
    3. ',' → logprob: -6.887928009033203
    4. 'input' → logprob: -11.012928009033203
    5. '(' → logprob: -11.637928009033203
    6. ' (' → logprob: -12.262928009033203
    7. '=input' → logprob: -13.512928009033203
    8. '(int' → logprob: -13.637928009033203
    9. ',int' → logprob: -14.137928009033203
    10. '   ' → logprob: -14.387928009033203

Token 646: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00043102685594931245
    2. ' input' → logprob: -7.750431060791016
    3. 'map' → logprob: -16.000431060791016
    4. ')' → logprob: -16.875431060791016
    5. '(input' → logprob: -17.250431060791016
    6. ',input' → logprob: -17.375431060791016
    7. 'int' → logprob: -18.000431060791016
    8. 'sys' → logprob: -19.000431060791016
    9. '<input' → logprob: -19.125431060791016
    10. '   ' → logprob: -19.125431060791016

Token 647: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.07554256916046143
    2. '().' → logprob: -2.700542449951172
    3. '.readline' → logprob: -5.450542449951172
    4. ')' → logprob: -6.825542449951172
    5. '._' → logprob: -9.825542449951172
    6. '()' → logprob: -10.075542449951172
    7. '_.' → logprob: -10.825542449951172
    8. '))' → logprob: -10.950542449951172
    9. '_LINE' → logprob: -11.450542449951172
    10. '())' → logprob: -11.950542449951172

Token 648: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.676292231422849e-05
    2. '()' → logprob: -11.250017166137695
    3. '()))' → logprob: -12.875017166137695
    4. ' ().' → logprob: -15.125017166137695
    5. '(' → logprob: -15.250017166137695
    6. '())' → logprob: -15.875017166137695
    7. '))' → logprob: -16.125017166137695
    8. '()
' → logprob: -16.500017166137695
    9. '   ' → logprob: -16.625017166137695
    10. ')' → logprob: -16.625017166137695

Token 649: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.371605948312208e-05
    2. 'strip' → logprob: -10.000053405761719
    3. ' split' → logprob: -12.250053405761719
    4. 'rstrip' → logprob: -13.000053405761719
    5. '(split' → logprob: -13.750053405761719
    6. 'spl' → logprob: -16.87505340576172
    7. ')' → logprob: -17.87505340576172
    8. '_split' → logprob: -18.25005340576172
    9. '.split' → logprob: -18.87505340576172
    10. 's' → logprob: -19.25005340576172

Token 650: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.006726499181240797
    2. '()))
' → logprob: -5.881726264953613
    3. '()' → logprob: -6.381726264953613
    4. '))' → logprob: -6.631726264953613
    5. '())' → logprob: -7.256726264953613
    6. '()),' → logprob: -9.506726264953613
    7. '()));' → logprob: -9.631726264953613
    8. '(' → logprob: -10.506726264953613
    9. '(),' → logprob: -11.881726264953613
    10. '()))

' → logprob: -12.256726264953613

Token 651: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012136969715356827
    2. '
' → logprob: -5.512136936187744
    3. '<|end|>' → logprob: -5.762136936187744
    4. ',' → logprob: -6.387136936187744
    5. ')' → logprob: -6.637136936187744
    6. '        
' → logprob: -7.012136936187744
    7. '   ' → logprob: -7.887136936187744
    8. ':' → logprob: -8.887137413024902
    9. ')
' → logprob: -10.012137413024902
    10. '    
' → logprob: -10.012137413024902

Token 652: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.004476643167436123
    2. '       ' → logprob: -6.129476547241211
    3. ' edge' → logprob: -6.129476547241211
    4. '   ' → logprob: -9.754476547241211
    5. '```' → logprob: -11.254476547241211
    6. '(edge' → logprob: -11.629476547241211
    7. '=edge' → logprob: -12.129476547241211
    8. '[' → logprob: -12.254476547241211
    9. ')' → logprob: -12.629476547241211
    10. '_edge' → logprob: -12.754476547241211

Token 653: '_structure' (ID: 96431)
  Prédit: '_structure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_structure' → logprob: -2.5776860184123507e-06
    2. 'structure' → logprob: -13.12500286102295
    3. '_struct' → logprob: -15.12500286102295
    4. 'Structure' → logprob: -15.37500286102295
    5. '_STRUCTURE' → logprob: -17.375001907348633
    6. '_' → logprob: -18.375001907348633
    7. '   ' → logprob: -18.375001907348633
    8. ' structure' → logprob: -18.875001907348633
    9. 'a' → logprob: -19.125001907348633
    10. 'tructure' → logprob: -19.750001907348633

Token 654: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.1472419600977446e-06
    2. 'node' → logprob: -14.375000953674316
    3. '[' → logprob: -14.625000953674316
    4. '
' → logprob: -18.125001907348633
    5. '   ' → logprob: -19.375001907348633
    6. '(node' → logprob: -19.625001907348633
    7. '```' → logprob: -19.625001907348633
    8. ' [' → logprob: -19.625001907348633
    9. '[
' → logprob: -19.750001907348633
    10. '=node' → logprob: -19.875001907348633

Token 655: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.004370544105768204
    2. '_b' → logprob: -5.50437068939209
    3. 'a' → logprob: -8.25437068939209
    4. ']' → logprob: -11.75437068939209
    5. '[' → logprob: -12.00437068939209
    6. '])' → logprob: -12.25437068939209
    7. 'b' → logprob: -13.25437068939209
    8. 'A' → logprob: -13.62937068939209
    9. '	a' → logprob: -13.75437068939209
    10. '[a' → logprob: -13.75437068939209

Token 656: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.007678553462028503
    2. '.append' → logprob: -4.882678508758545
    3. ').' → logprob: -10.007678985595703
    4. ']' → logprob: -11.132678985595703
    5. '.' → logprob: -12.507678985595703
    6. ' ].' → logprob: -12.632678985595703
    7. '   ' → logprob: -13.507678985595703
    8. 'append' → logprob: -13.632678985595703
    9. '.app' → logprob: -14.132678985595703
    10. '       ' → logprob: -14.257678985595703

Token 657: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.4121114822482923e-06
    2. '.append' → logprob: -12.750003814697266
    3. ' append' → logprob: -15.375003814697266
    4. 'app' → logprob: -16.125003814697266
    5. 'appen' → logprob: -17.000003814697266
    6. '_append' → logprob: -18.375003814697266
    7. '	append' → logprob: -19.250003814697266
    8. 'Append' → logprob: -20.000003814697266
    9. 'add' → logprob: -22.250003814697266
    10. '   ' → logprob: -22.750003814697266

Token 658: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.014166564680635929
    2. 'node' → logprob: -4.264166355133057
    3. ' node' → logprob: -12.764166831970215
    4. '(
' → logprob: -16.0141658782959
    5. '	node' → logprob: -16.8891658782959
    6. '(' → logprob: -17.2641658782959
    7. 'Node' → logprob: -18.2641658782959
    8. '[node' → logprob: -18.2641658782959
    9. ',node' → logprob: -18.3891658782959
    10. '=node' → logprob: -18.8891658782959

Token 659: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0001294030516874045
    2. 'b' → logprob: -9.000129699707031
    3. '_a' → logprob: -12.750129699707031
    4. 'a' → logprob: -13.625129699707031
    5. 'B' → logprob: -14.000129699707031
    6. '[' → logprob: -15.000129699707031
    7. '```' → logprob: -15.500129699707031
    8. ')' → logprob: -15.875129699707031
    9. '_index' → logprob: -16.25012969970703
    10. '(node' → logprob: -16.37512969970703

Token 660: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. ')
' → logprob: -11.750015258789062
    3. '       ' → logprob: -12.750015258789062
    4. '<|end|>' → logprob: -12.750015258789062
    5. ')return' → logprob: -14.125015258789062
    6. '   ' → logprob: -14.875015258789062
    7. ' )' → logprob: -15.375015258789062
    8. ')}' → logprob: -17.125015258789062
    9. '))' → logprob: -17.375015258789062
    10. '),' → logprob: -17.500015258789062

Token 661: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2876540422439575
    2. '<|end|>' → logprob: -1.4126540422439575
    3. '
' → logprob: -6.287653923034668
    4. 'return' → logprob: -6.412653923034668
    5. ' return' → logprob: -6.412653923034668
    6. ')' → logprob: -7.787653923034668
    7. '<|end|>' → logprob: -7.912653923034668
    8. '	return' → logprob: -8.162653923034668
    9. ' ' → logprob: -9.037653923034668
    10. '```' → logprob: -10.037653923034668

Token 662: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1017676293849945
    2. 'return' (adapté à ' return') → logprob: -2.3517675399780273
    3. ' return' → logprob: -6.476767539978027
    4. '	return' → logprob: -11.476767539978027
    5. ' ' → logprob: -12.601767539978027
    6. '<|end|>' → logprob: -12.726767539978027
    7. '
' → logprob: -13.476767539978027
    8. '       ' → logprob: -13.851767539978027
    9. '  ' → logprob: -14.476767539978027
    10. '```' → logprob: -14.851767539978027

Token 663: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.3132627606391907
    2. ' edge' → logprob: -1.313262701034546
    3. '(edge' → logprob: -14.313262939453125
    4. 'Edge' → logprob: -15.563262939453125
    5. ' ' → logprob: -16.938262939453125
    6. '=edge' → logprob: -17.063262939453125
    7. '   ' → logprob: -17.563262939453125
    8. '_edge' → logprob: -18.188262939453125
    9. '{' → logprob: -18.438262939453125
    10. 'edges' → logprob: -18.563262939453125

Token 664: '_structure' (ID: 96431)
  Prédit: '_structure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_structure' → logprob: -7.896309739408025e-07
    2. '_struct' → logprob: -14.375000953674316
    3. 'structure' → logprob: -16.5
    4. '_count' → logprob: -18.125
    5. '_' → logprob: -18.375
    6. '_STRUCTURE' → logprob: -18.5
    7. 'd' → logprob: -20.0
    8. 's' → logprob: -20.25
    9. '_str' → logprob: -21.125
    10. ' _' → logprob: -21.375

Token 665: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 666: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.671390175819397
    2. '<|end|>' → logprob: -1.796390175819397
    3. ')' → logprob: -2.4213900566101074
    4. '```' → logprob: -2.6713900566101074
    5. 'MOD' → logprob: -3.6713900566101074
    6. 'def' → logprob: -3.7963900566101074
    7. '[' → logprob: -4.171390056610107
    8. 'edge' → logprob: -4.421390056610107
    9. 'G' → logprob: -4.921390056610107
    10. 'GLOBAL' → logprob: -4.921390056610107

Token 667: ' problem' (ID: 4792)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07096222043037415
    2. 'main' → logprob: -2.6959621906280518
    3. ' solve' → logprob: -7.195962429046631
    4. 'solve' → logprob: -9.195961952209473
    5. ' process' → logprob: -10.320961952209473
    6. '_main' → logprob: -10.445961952209473
    7. 'process' → logprob: -10.570961952209473
    8. ' run' → logprob: -11.445961952209473
    9. ' modular' → logprob: -11.445961952209473
    10. 'mod' → logprob: -11.570961952209473

Token 668: '_solver' (ID: 139123)
  Prédit: '_solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solver' → logprob: -0.0691278800368309
    2. '_solution' → logprob: -3.6941277980804443
    3. '_' → logprob: -3.9441277980804443
    4. '_input' → logprob: -5.194128036499023
    5. '_main' → logprob: -5.319128036499023
    6. '_setup' → logprob: -5.569128036499023
    7. '_statement' → logprob: -6.319128036499023
    8. '_s' → logprob: -6.444128036499023
    9. '_name' → logprob: -6.694128036499023
    10. '_parameters' → logprob: -6.819128036499023

Token 669: '(node' (ID: 13356)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -4.739826181321405e-05
    2. ' ():' → logprob: -10.25004768371582
    3. '()' → logprob: -12.37504768371582
    4. '():
' → logprob: -12.50004768371582
    5. '(' → logprob: -12.87504768371582
    6. '(G' → logprob: -15.00004768371582
    7. '(input' → logprob: -15.62504768371582
    8. '(*' → logprob: -15.62504768371582
    9. '(edge' → logprob: -15.75004768371582
    10. '(params' → logprob: -16.25004768371582

Token 670: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.038387198001146317
    2. '):' → logprob: -3.7883872985839844
    3. 's' → logprob: -4.788387298583984
    4. '):
' → logprob: -6.038387298583984
    5. ',' → logprob: -6.413387298583984
    6. '_' → logprob: -7.038387298583984
    7. 'count' → logprob: -7.413387298583984
    8. '_,' → logprob: -8.288387298583984
    9. '_s' → logprob: -8.413387298583984
    10. '_COUNT' → logprob: -8.413387298583984

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009278989746235311
    2. '):' → logprob: -7.000927925109863
    3. ' ,' → logprob: -11.625927925109863
    4. '   ' → logprob: -13.500927925109863
    5. ',node' → logprob: -14.438427925109863
    6. '_,' → logprob: -14.563427925109863
    7. ',input' → logprob: -14.688427925109863
    8. ')' → logprob: -14.750927925109863
    9. ':' → logprob: -14.813427925109863
    10. ',n' → logprob: -14.813427925109863

Token 672: ' edges' (ID: 22569)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.17618972063064575
    2. ' edge' → logprob: -2.676189661026001
    3. 'basis' → logprob: -3.301189661026001
    4. 'edges' → logprob: -3.676189661026001
    5. ' edges' → logprob: -5.17618989944458
    6. 'global' → logprob: -5.30118989944458
    7. 'node' → logprob: -5.42618989944458
    8. ' basis' → logprob: -6.05118989944458
    9. 'initial' → logprob: -6.67618989944458
    10. ' node' → logprob: -6.80118989944458

Token 673: '_list' (ID: 4162)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4575009047985077
    2. '):' → logprob: -1.08250093460083
    3. '_count' → logprob: -4.20750093460083
    4. '_dict' → logprob: -4.83250093460083
    5. ')' → logprob: -6.45750093460083
    6. '_structure' → logprob: -6.58250093460083
    7. '):
' → logprob: -7.33250093460083
    8. '_,' → logprob: -7.33250093460083
    9. '_list' → logprob: -8.332500457763672
    10. '_counts' → logprob: -8.582500457763672

Token 674: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.576092541217804
    2. '):' → logprob: -0.826092541217804
    3. '):
' → logprob: -9.201092720031738
    4. '   ' → logprob: -11.076092720031738
    5. ')' → logprob: -11.201092720031738
    6. '=None' → logprob: -12.076092720031738
    7. ':' → logprob: -12.451092720031738
    8. ' ,' → logprob: -12.951092720031738
    9. '=' → logprob: -13.076092720031738
    10. ' ):' → logprob: -13.326092720031738

Token 675: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02414528839290142
    2. ':' → logprob: -3.7741453647613525
    3. '<|end|>' → logprob: -7.774145126342773
    4. ':
' → logprob: -8.149145126342773
    5. '```' → logprob: -9.899145126342773
    6. '    
' → logprob: -10.524145126342773
    7. '<|end|>' → logprob: -10.524145126342773
    8. '       ' → logprob: -11.524145126342773
    9. ',' → logprob: -12.211645126342773
    10. 'def' → logprob: -12.524145126342773

Token 676: ' grund' (ID: 34475)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.3762110769748688
    2. 'MOD' → logprob: -1.2512110471725464
    3. 'edge' → logprob: -4.126211166381836
    4. 'GLOBAL' → logprob: -4.751211166381836
    5. '   ' → logprob: -6.126211166381836
    6. 'mod' → logprob: -9.501211166381836
    7. 'def' → logprob: -9.626211166381836
    8. 'edges' → logprob: -9.626211166381836
    9. ' global' → logprob: -10.001211166381836
    10. '#' → logprob: -10.501211166381836

Token 677: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.743758760625497e-05
    2. '   ' → logprob: -9.625077247619629
    3. 'ies' → logprob: -12.250077247619629
    4. 'def' → logprob: -13.125077247619629
    5. 'gy' → logprob: -14.250077247619629
    6. '```' → logprob: -14.250077247619629
    7. '       ' → logprob: -14.875077247619629
    8. 'ie' → logprob: -15.250077247619629
    9. 'graph' → logprob: -15.375077247619629
    10. 'py' → logprob: -15.625077247619629

Token 678: '_s' (ID: 1278)
  Prédit: '_dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.08130756765604019
    2. '_sum' → logprob: -2.7063076496124268
    3. '_values' → logprob: -5.081307411193848
    4. '=' → logprob: -5.581307411193848
    5. ' =' → logprob: -7.081307411193848
    6. 'sum' → logprob: -9.081307411193848
    7. '_s' → logprob: -9.206307411193848
    8. 's' → logprob: -9.581307411193848
    9. '_map' → logprob: -10.456307411193848
    10. 'dict' → logprob: -10.581307411193848

Token 679: 'ums' (ID: 6162)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.04367268830537796
    2. '_dict' → logprob: -3.918672800064087
    3. 'ums' → logprob: -3.918672800064087
    4. 'et' → logprob: -7.168672561645508
    5. ' =' → logprob: -7.668672561645508
    6. 'truct' → logprob: -8.043672561645508
    7. 't' → logprob: -8.043672561645508
    8. 'dict' → logprob: -8.043672561645508
    9. '=' → logprob: -8.543672561645508
    10. 'cores' → logprob: -8.668672561645508

Token 680: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994899362325668
    2. '=' → logprob: -2.69494891166687
    3. ',' → logprob: -11.69494915008545
    4. '={}' → logprob: -13.44494915008545
    5. '<|end|>' → logprob: -14.19494915008545
    6. '   ' → logprob: -14.69494915008545
    7. '  ' → logprob: -15.31994915008545
    8. ' ' → logprob: -15.44494915008545
    9. '[' → logprob: -15.94494915008545
    10. '```' → logprob: -16.069948196411133

Token 681: ' list' (ID: 1562)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.011854171752929688
    2. ' grund' → logprob: -5.13685417175293
    3. 'default' → logprob: -5.26185417175293
    4. ' defaultdict' → logprob: -8.13685417175293
    5. '{' → logprob: -8.51185417175293
    6. 'ground' → logprob: -9.26185417175293
    7. 'Mod' → logprob: -10.38685417175293
    8. 'grond' → logprob: -11.13685417175293
    9. 'Grund' → logprob: -11.51185417175293
    10. ' default' → logprob: -11.51185417175293

Token 682: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010263829492032528
    2. '(problem' → logprob: -5.010263919830322
    3. '(edge' → logprob: -6.010263919830322
    4. '(min' → logprob: -8.635263442993164
    5. '=' → logprob: -8.635263442993164
    6. '()' → logprob: -9.010263442993164
    7. '((' → logprob: -9.135263442993164
    8. '(range' → logprob: -9.135263442993164
    9. '(map' → logprob: -9.385263442993164
    10. '(mod' → logprob: -9.385263442993164

Token 683: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4472317397594452
    2. '(Mod' → logprob: -1.3222317695617676
    3. '(lambda' → logprob: -2.9472317695617676
    4. '(int' → logprob: -3.5722317695617676
    5. '(str' → logprob: -4.697231769561768
    6. '(problem' → logprob: -5.947231769561768
    7. '(sum' → logprob: -7.322231769561768
    8. '(mod' → logprob: -8.69723129272461
    9. '(operator' → logprob: -9.07223129272461
    10. '(edge' → logprob: -9.07223129272461

Token 684: 'grund' (ID: 27797)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.30032163858413696
    2. '(int' → logprob: -1.8003215789794922
    3. '(lambda' → logprob: -3.425321578979492
    4. '(' → logprob: -3.425321578979492
    5. 'Mod' → logprob: -4.425321578979492
    6. 'int' → logprob: -4.925321578979492
    7. '(str' → logprob: -5.050321578979492
    8. 'lambda' → logprob: -6.800321578979492
    9. 'str' → logprob: -7.675321578979492
    10. '(sum' → logprob: -8.300321578979492

Token 685: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.9504606825648807e-05
    2. 'gy' → logprob: -11.000019073486328
    3. '(' → logprob: -14.625019073486328
    4. '```' → logprob: -14.625019073486328
    5. 'yu' → logprob: -15.875019073486328
    6. '{' → logprob: -16.000019073486328
    7. 'ny' → logprob: -16.125019073486328
    8. 'by' → logprob: -16.250019073486328
    9. 'grund' → logprob: -16.250019073486328
    10. '[' → logprob: -16.375019073486328

Token 686: '_cal' (ID: 50948)
  Prédit: '_cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -3.166338137816638e-05
    2. 'cal' → logprob: -10.375031471252441
    3. '_sum' → logprob: -15.875031471252441
    4. '_calc' → logprob: -16.000032424926758
    5. 'Calculation' → logprob: -16.250032424926758
    6. '_' → logprob: -17.125032424926758
    7. '_gr' → logprob: -17.750032424926758
    8. '_c' → logprob: -18.625032424926758
    9. '_dictionary' → logprob: -18.625032424926758
    10. '	cal' → logprob: -19.000032424926758

Token 687: 'culation' (ID: 41845)
  Prédit: 'culation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culation' → logprob: -0.00015252856246661395
    2. 'ulation' → logprob: -9.000152587890625
    3. 'cation' → logprob: -10.750152587890625
    4. 'uation' → logprob: -13.125152587890625
    5. 'c' → logprob: -13.750152587890625
    6. 'cul' → logprob: -13.875152587890625
    7. 'cal' → logprob: -13.875152587890625
    8. 'culate' → logprob: -14.250152587890625
    9. '```' → logprob: -14.875152587890625
    10. 'ation' → logprob: -14.875152587890625

Token 688: ',' (ID: 11)
  Prédit: '(edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.021627653390169144
    2. ',' → logprob: -3.89662766456604
    3. 'edges' → logprob: -7.271627426147461
    4. '(edge' → logprob: -8.271627426147461
    5. '))' → logprob: -9.896627426147461
    6. '(ed' → logprob: -11.021627426147461
    7. '(' → logprob: -11.271627426147461
    8. ')' → logprob: -11.396627426147461
    9. 'edge' → logprob: -11.896627426147461
    10. ' edges' → logprob: -12.146627426147461

Token 689: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.021113988012075424
    2. '[' → logprob: -4.396113872528076
    3. '(edges' → logprob: -4.896113872528076
    4. ' edges' → logprob: -7.896113872528076
    5. 'edge' → logprob: -8.271114349365234
    6. '([' → logprob: -8.646114349365234
    7. '   ' → logprob: -8.896114349365234
    8. '[{' → logprob: -10.396114349365234
    9. 'ed' → logprob: -10.771114349365234
    10. '[
' → logprob: -11.146114349365234

Token 690: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00025108797126449645
    2. 's' → logprob: -8.750250816345215
    3. 'list' → logprob: -9.500250816345215
    4. 'ist' → logprob: -12.000250816345215
    5. ')' → logprob: -13.375250816345215
    6. 'List' → logprob: -13.500250816345215
    7. 'l' → logprob: -13.750250816345215
    8. '[' → logprob: -14.125250816345215
    9. '_dict' → logprob: -14.125250816345215
    10. '_' → logprob: -14.625250816345215

Token 691: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08010154962539673
    2. '))
' → logprob: -2.580101490020752
    3. '()))' → logprob: -7.205101490020752
    4. '()))
' → logprob: -8.45510196685791
    5. '(edge' → logprob: -9.45510196685791
    6. '(' → logprob: -10.08010196685791
    7. '(edges' → logprob: -10.08010196685791
    8. '))

' → logprob: -10.33010196685791
    9. ' ))' → logprob: -10.83010196685791
    10. ')))' → logprob: -11.70510196685791

Token 692: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22897616028785706
    2. '
' → logprob: -2.103976249694824
    3. '<|end|>' → logprob: -2.603976249694824
    4. ',' → logprob: -6.228976249694824
    5. '    
' → logprob: -6.603976249694824
    6. ')' → logprob: -6.603976249694824
    7. '```' → logprob: -7.103976249694824
    8. '[' → logprob: -7.103976249694824
    9. 'def' → logprob: -7.853976249694824
    10. '<|end|>' → logprob: -8.353976249694824

Token 693: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -1.0474134683609009
    2. ' result' → logprob: -1.2974134683609009
    3. '   ' → logprob: -2.6724133491516113
    4. 'dp' → logprob: -2.6724133491516113
    5. 'return' → logprob: -3.0474133491516113
    6. ' dp' → logprob: -3.2974133491516113
    7. ' return' → logprob: -3.7974133491516113
    8. ' grund' → logprob: -3.7974133491516113
    9. 'combined' → logprob: -4.047413349151611
    10. 'total' → logprob: -4.297413349151611

Token 694: '_sum' (ID: 29859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04385536164045334
    2. '=' → logprob: -3.1688554286956787
    3. '_' → logprob: -7.4188551902771
    4. 's' → logprob: -9.043855667114258
    5. '_value' → logprob: -10.168855667114258
    6. '_sum' → logprob: -10.918855667114258
    7. '_mod' → logprob: -11.043855667114258
    8. ' ' → logprob: -11.168855667114258
    9. ',' → logprob: -11.668855667114258
    10. '_=' → logprob: -11.918855667114258

Token 695: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019351851660758257
    2. '=' → logprob: -6.251935005187988
    3. ' +=' → logprob: -12.876935005187988
    4. ',' → logprob: -13.376935005187988
    5. '_' → logprob: -14.626935005187988
    6. 's' → logprob: -14.751935005187988
    7. ' ' → logprob: -14.876935005187988
    8. ' =
' → logprob: -15.126935005187988
    9. '   ' → logprob: -15.751935005187988
    10. ':' → logprob: -16.001935958862305

Token 696: ' Modular' (ID: 137262)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.009543103165924549
    2. ' Modular' → logprob: -5.384542942047119
    3. 'grund' → logprob: -6.009542942047119
    4. 'sum' → logprob: -7.134542942047119
    5. 'Grund' → logprob: -7.134542942047119
    6. '0' → logprob: -7.884542942047119
    7. '(Mod' → logprob: -8.884543418884277
    8. 'default' → logprob: -9.634543418884277
    9. 'Gr' → logprob: -10.009543418884277
    10. 'Modulo' → logprob: -10.259543418884277

Token 697: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: 0.0
    2. ' Integer' → logprob: -20.625
    3. 'Inte' → logprob: -20.75
    4. 'integer' → logprob: -21.5
    5. '[' → logprob: -21.875
    6. '_integer' → logprob: -22.0
    7. 'Int' → logprob: -22.25
    8. '_Integer' → logprob: -22.375
    9. '```' → logprob: -22.875
    10. '(' → logprob: -23.375

Token 698: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004709226079285145
    2. '()' → logprob: -5.379709243774414
    3. '()
' → logprob: -9.379709243774414
    4. '0' → logprob: -13.254709243774414
    5. '()

' → logprob: -13.629709243774414
    6. '()
' → logprob: -14.129709243774414
    7. '((' → logprob: -15.504709243774414
    8. '(sum' → logprob: -16.504709243774414
    9. '[' → logprob: -16.629709243774414
    10. ' (' → logprob: -16.754709243774414

Token 699: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4021237802808173e-05
    2. '1' → logprob: -11.625014305114746
    3. ' ' → logprob: -12.875014305114746
    4. ')' → logprob: -13.750014305114746
    5. 'sum' → logprob: -14.250014305114746
    6. '(' → logprob: -15.437514305114746
    7. '"' → logprob: -16.62501335144043
    8. '```' → logprob: -16.62501335144043
    9. '۰' → logprob: -16.75001335144043
    10. 'zero' → logprob: -17.06251335144043

Token 700: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005339893512427807
    2. ')
' → logprob: -5.255340099334717
    3. ' )' → logprob: -10.005339622497559
    4. '   ' → logprob: -10.005339622497559
    5. '
' → logprob: -12.005339622497559
    6. ')
' → logprob: -13.005339622497559
    7. ',' → logprob: -13.130339622497559
    8. '<|end|>' → logprob: -13.380339622497559
    9. ' )
' → logprob: -13.630339622497559
    10. ' ' → logprob: -14.130339622497559

Token 701: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03719694912433624
    2. '
' → logprob: -4.162197113037109
    3. '<|end|>' → logprob: -4.412197113037109
    4. ' for' → logprob: -5.162197113037109
    5. '    
' → logprob: -7.037197113037109
    6. '	for' → logprob: -7.162197113037109
    7. 'for' → logprob: -8.03719711303711
    8. ' ' → logprob: -8.41219711303711
    9. ' 
' → logprob: -8.78719711303711
    10. '    ' → logprob: -8.78719711303711

Token 702: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4477842152118683
    2. ' for' → logprob: -1.447784185409546
    3. '   ' → logprob: -2.072784185409546
    4. 'result' → logprob: -11.322784423828125
    5. ' result' → logprob: -12.322784423828125
    6. '
' → logprob: -12.572784423828125
    7. '	for' → logprob: -12.947784423828125
    8. '```' → logprob: -13.197784423828125
    9. '       ' → logprob: -13.447784423828125
    10. ' ' → logprob: -13.822784423828125

Token 703: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.18695077300071716
    2. ' grund' → logprob: -2.68695068359375
    3. 'gs' → logprob: -3.06195068359375
    4. 'i' → logprob: -4.31195068359375
    5. 'g' → logprob: -4.68695068359375
    6. ' gs' → logprob: -4.93695068359375
    7. 'mask' → logprob: -5.56195068359375
    8. 'subset' → logprob: -5.81195068359375
    9. ' i' → logprob: -5.93695068359375
    10. ' g' → logprob: -6.31195068359375

Token 704: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.833878508885391e-05
    2. 'gy' → logprob: -10.250038146972656
    3. 'g' → logprob: -13.375038146972656
    4. 'yg' → logprob: -15.500038146972656
    5. 'sy' → logprob: -15.625038146972656
    6. '   ' → logprob: -15.875038146972656
    7. 'y's' → logprob: -16.250038146972656
    8. '_' → logprob: -16.375038146972656
    9. '```' → logprob: -16.375038146972656
    10. '_sum' → logprob: -16.500038146972656

Token 705: '_x' (ID: 7054)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.02375829592347145
    2. '_s' → logprob: -3.7737584114074707
    3. '_value' → logprob: -9.273757934570312
    4. '_set' → logprob: -9.398757934570312
    5. '_dict' → logprob: -9.523757934570312
    6. ' in' → logprob: -9.773757934570312
    7. '_' → logprob: -9.773757934570312
    8. 'sum' → logprob: -10.148757934570312
    9. '_values' → logprob: -10.398757934570312
    10. 's' → logprob: -10.398757934570312

Token 706: ',' (ID: 11)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.6449182033538818
    2. '_sum' → logprob: -1.1449182033538818
    3. ' in' → logprob: -2.019918203353882
    4. ',' → logprob: -4.644918441772461
    5. '_set' → logprob: -5.394918441772461
    6. 's' → logprob: -5.894918441772461
    7. 'or' → logprob: -5.894918441772461
    8. 'sum' → logprob: -6.019918441772461
    9. '_index' → logprob: -7.019918441772461
    10. '_idx' → logprob: -7.644918441772461

Token 707: ' sum' (ID: 4215)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.014227320440113544
    2. ' grund' → logprob: -4.264227390289307
    3. 'count' → logprob: -11.389226913452148
    4. 'grond' → logprob: -11.889226913452148
    5. 'grunn' → logprob: -12.139226913452148
    6. 'ground' → logprob: -12.389226913452148
    7. '```' → logprob: -12.764226913452148
    8. 'Grund' → logprob: -12.764226913452148
    9. ' ' → logprob: -12.889226913452148
    10. 'gr' → logprob: -13.076726913452148

Token 708: '_x' (ID: 7054)
  Prédit: '_y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.41442281007766724
    2. '_sum' → logprob: -1.9144227504730225
    3. '_x' → logprob: -2.5394227504730225
    4. '_' → logprob: -3.5394227504730225
    5. '_s' → logprob: -3.6644227504730225
    6. '_value' → logprob: -3.9144227504730225
    7. 's' → logprob: -4.789422988891602
    8. ' in' → logprob: -4.914422988891602
    9. '_val' → logprob: -5.289422988891602
    10. '_set' → logprob: -5.539422988891602

Token 709: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.033685121685266495
    2. ' in' → logprob: -3.4086852073669434
    3. ',' → logprob: -10.533684730529785
    4. ')' → logprob: -12.658684730529785
    5. '
' → logprob: -13.033684730529785
    6. '```' → logprob: -13.408684730529785
    7. ' ' → logprob: -13.658684730529785
    8. '_in' → logprob: -14.408684730529785
    9. '=' → logprob: -14.533684730529785
    10. 'x' → logprob: -14.908684730529785

Token 710: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.1436149626970291
    2. 'zip' → logprob: -2.0186150074005127
    3. 'enumer' → logprob: -7.643614768981934
    4. ' zip' → logprob: -8.768614768981934
    5. ' grund' → logprob: -9.018614768981934
    6. '   ' → logprob: -10.143614768981934
    7. 'grunn' → logprob: -10.393614768981934
    8. 'grond' → logprob: -11.018614768981934
    9. 'grad' → logprob: -11.518614768981934
    10. ' enumerate' → logprob: -11.893614768981934

Token 711: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.7954958821064793e-05
    2. 'ay' → logprob: -12.500018119812012
    3. 'ry' → logprob: -12.875018119812012
    4. 'ar' → logprob: -13.000018119812012
    5. 'ary' → logprob: -13.000018119812012
    6. 's' → logprob: -14.250018119812012
    7. 'gy' → logprob: -14.625018119812012
    8. 'y's' → logprob: -14.625018119812012
    9. 'er' → logprob: -14.750018119812012
    10. 'g' → logprob: -15.000018119812012

Token 712: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.4820636212825775
    2. '_sum' → logprob: -1.2320636510849
    3. 's' → logprob: -2.4820635318756104
    4. ',' → logprob: -5.8570637702941895
    5. 'sum' → logprob: -6.3570637702941895
    6. 'in' → logprob: -7.2320637702941895
    7. ',_' → logprob: -7.3570637702941895
    8. ':' → logprob: -7.4820637702941895
    9. '_items' → logprob: -8.607063293457031
    10. '```' → logprob: -9.357063293457031

Token 713: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.0062443264760077
    2. 's' → logprob: -5.38124418258667
    3. 'um' → logprob: -6.50624418258667
    4. '```' → logprob: -11.381244659423828
    5. 'sum' → logprob: -11.381244659423828
    6. '=' → logprob: -11.756244659423828
    7. '[' → logprob: -11.881244659423828
    8. '_sum' → logprob: -11.881244659423828
    9. '   ' → logprob: -12.006244659423828
    10. '           ' → logprob: -12.318744659423828

Token 714: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39909523725509644
    2. ':' → logprob: -1.1490952968597412
    3. ':
' → logprob: -5.399095058441162
    4. '   ' → logprob: -5.649095058441162
    5. ' in' → logprob: -6.149095058441162
    6. '[' → logprob: -7.149095058441162
    7. ' ,' → logprob: -7.899095058441162
    8. '       ' → logprob: -8.27409553527832
    9. ',
' → logprob: -8.52409553527832
    10. '+' → logprob: -9.64909553527832

Token 715: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1214599609375
    2. '):' → logprob: -1.1214599609375
    3. '0' → logprob: -1.2464599609375
    4. '1' → logprob: -3.9964599609375
    5. '):
' → logprob: -4.3714599609375
    6. ']:' → logprob: -4.9964599609375
    7. ']):' → logprob: -5.1214599609375
    8. ')' → logprob: -5.2464599609375
    9. 'items' → logprob: -6.1214599609375
    10. '),' → logprob: -6.4964599609375

Token 716: '].' (ID: 1651)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.4915319085121155
    2. '],' → logprob: -1.7415318489074707
    3. ']' → logprob: -1.9915318489074707
    4. ':' → logprob: -3.3665318489074707
    5. ',' → logprob: -4.366531848907471
    6. ']:
' → logprob: -4.491531848907471
    7. '   ' → logprob: -5.366531848907471
    8. '].' → logprob: -5.991531848907471
    9. '+' → logprob: -6.116531848907471
    10. ']+' → logprob: -6.241531848907471

Token 717: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.0001612267515156418
    2. 'keys' → logprob: -8.750161170959473
    3. 'values' → logprob: -13.750161170959473
    4. '.items' → logprob: -13.875161170959473
    5. '_items' → logprob: -15.000161170959473
    6. ' items' → logprob: -15.500161170959473
    7. 'copy' → logprob: -17.25016212463379
    8. '```' → logprob: -17.37516212463379
    9. '__' → logprob: -17.75016212463379
    10. '	items' → logprob: -19.50016212463379

Token 718: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007991285994648933
    2. '():
' → logprob: -4.882991313934326
    3. ':' → logprob: -8.507990837097168
    4. '()' → logprob: -8.882990837097168
    5. '(),' → logprob: -10.382990837097168
    6. '():
' → logprob: -11.882990837097168
    7. ' ():' → logprob: -12.882990837097168
    8. '(' → logprob: -13.257990837097168
    9. '():

' → logprob: -14.382990837097168
    10. '):' → logprob: -14.757990837097168

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016014890745282173
    2. '+' → logprob: -5.26601505279541
    3. '        ' → logprob: -5.51601505279541
    4. ':' → logprob: -6.39101505279541
    5. ' ' → logprob: -6.51601505279541
    6. ' :' → logprob: -7.26601505279541
    7. '<|end|>' → logprob: -8.01601505279541
    8. ' +' → logprob: -8.26601505279541
    9. '    ' → logprob: -8.26601505279541
    10. ':
' → logprob: -8.51601505279541

Token 720: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3842759132385254
    2. 'for' (adapté à ' for') → logprob: -1.2592759132385254
    3. '       ' → logprob: -3.8842759132385254
    4. 'result' → logprob: -4.759275913238525
    5. ' result' → logprob: -5.509275913238525
    6. '   ' → logprob: -6.384275913238525
    7. '           ' → logprob: -9.009275436401367
    8. '```' → logprob: -10.134275436401367
    9. 'if' → logprob: -10.259275436401367
    10. ' if' → logprob: -10.759275436401367

Token 721: ' grund' (ID: 34475)
  Prédit: ' grund'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grund' → logprob: -0.6331750154495239
    2. 'grund' → logprob: -0.7581750154495239
    3. '   ' → logprob: -8.008174896240234
    4. ' grond' → logprob: -9.883174896240234
    5. ' ' → logprob: -10.383174896240234
    6. 'grond' → logprob: -10.508174896240234
    7. '    ' → logprob: -10.633174896240234
    8. '       ' → logprob: -10.883174896240234
    9. ' grunn' → logprob: -11.008174896240234
    10. '  ' → logprob: -11.258174896240234

Token 722: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.5776860184123507e-06
    2. 'gy' → logprob: -14.00000286102295
    3. 'xy' → logprob: -15.37500286102295
    4. '```' → logprob: -15.50000286102295
    5. 'yg' → logprob: -15.75000286102295
    6. '_' → logprob: -16.000001907348633
    7. ',' → logprob: -16.750001907348633
    8. '[y' → logprob: -16.875001907348633
    9. 'sy' → logprob: -16.875001907348633
    10. 'yj' → logprob: -16.875001907348633

Token 723: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00024751186720095575
    2. '_x' → logprob: -8.625247955322266
    3. 'y' → logprob: -9.875247955322266
    4. '_,' → logprob: -12.000247955322266
    5. '_j' → logprob: -12.625247955322266
    6. ',' → logprob: -12.750247955322266
    7. '   ' → logprob: -14.000247955322266
    8. 'Y' → logprob: -14.250247955322266
    9. '```' → logprob: -14.250247955322266
    10. '_' → logprob: -15.500247955322266

Token 724: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002337235491722822
    2. ' in' → logprob: -6.252337455749512
    3. ' ,' → logprob: -8.002337455749512
    4. '<|end|>' → logprob: -10.377337455749512
    5. 'in' → logprob: -10.627337455749512
    6. '        ' → logprob: -12.752337455749512
    7. '<|end|>' → logprob: -13.002337455749512
    8. ' ' → logprob: -13.252337455749512
    9. ',
' → logprob: -13.377337455749512
    10. ')' → logprob: -14.002337455749512

Token 725: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.1269473135471344
    2. 'sum' → logprob: -2.1269474029541016
    3. ' grund' → logprob: -12.376947402954102
    4. ' value' → logprob: -12.876947402954102
    5. 'value' → logprob: -13.126947402954102
    6. '   ' → logprob: -13.251947402954102
    7. '       ' → logprob: -13.251947402954102
    8. ' ' → logprob: -13.501947402954102
    9. 'grund' → logprob: -13.501947402954102
    10. '	sum' → logprob: -13.501947402954102

Token 726: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0011603388702496886
    2. 'y' → logprob: -6.876160144805908
    3. '_x' → logprob: -9.876160621643066
    4. 'in' → logprob: -10.626160621643066
    5. '_' → logprob: -11.126160621643066
    6. ',' → logprob: -11.251160621643066
    7. ' in' → logprob: -11.376160621643066
    8. ' ' → logprob: -12.876160621643066
    9. '```' → logprob: -12.876160621643066
    10. '   ' → logprob: -13.251160621643066

Token 727: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04881717637181282
    2. 'in' → logprob: -3.0488171577453613
    3. ',' → logprob: -9.67381763458252
    4. '        ' → logprob: -10.04881763458252
    5. '<|end|>' → logprob: -10.04881763458252
    6. ' ' → logprob: -10.67381763458252
    7. '	in' → logprob: -11.17381763458252
    8. '       ' → logprob: -11.54881763458252
    9. '_in' → logprob: -12.17381763458252
    10. '    ' → logprob: -12.67381763458252

Token 728: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.007613017223775387
    2. ' grund' → logprob: -4.882613182067871
    3. 'grond' → logprob: -12.382613182067871
    4. ' grond' → logprob: -14.257613182067871
    5. 'grunn' → logprob: -14.257613182067871
    6. 'gr' → logprob: -15.507613182067871
    7. 'Grund' → logprob: -15.632613182067871
    8. '
' → logprob: -15.632613182067871
    9. 'ground' → logprob: -15.757613182067871
    10. ' grunn' → logprob: -15.882613182067871

Token 729: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0006647797417826951
    2. 'gy' → logprob: -7.625664710998535
    3. 'g' → logprob: -9.750664710998535
    4. 'ry' → logprob: -10.375664710998535
    5. 'x' → logprob: -10.500664710998535
    6. 'zy' → logprob: -11.125664710998535
    7. '_' → logprob: -11.875664710998535
    8. 'y's' → logprob: -12.125664710998535
    9. '_y' → logprob: -12.625664710998535
    10. '[' → logprob: -12.875664710998535

Token 730: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.009854071773588657
    2. 's' → logprob: -4.759853839874268
    3. '[' → logprob: -6.884853839874268
    4. '_lists' → logprob: -9.509854316711426
    5. '_list' → logprob: -9.884854316711426
    6. '_sum' → logprob: -10.134854316711426
    7. 'S' → logprob: -10.759854316711426
    8. '_items' → logprob: -10.884854316711426
    9. 'list' → logprob: -13.384854316711426
    10. 'sum' → logprob: -13.634854316711426

Token 731: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.00526636466383934
    2. 's' → logprob: -6.505266189575195
    3. 'items' → logprob: -6.505266189575195
    4. '.items' → logprob: -7.255266189575195
    5. '_items' → logprob: -7.755266189575195
    6. 'um' → logprob: -7.880266189575195
    7. '[' → logprob: -8.130266189575195
    8. 'ems' → logprob: -8.755266189575195
    9. 'tems' → logprob: -8.880266189575195
    10. 'ims' → logprob: -10.255266189575195

Token 732: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023643692838959396
    2. '1' → logprob: -9.125236511230469
    3. 's' → logprob: -9.875236511230469
    4. '
' → logprob: -11.125236511230469
    5. '[-' → logprob: -11.875236511230469
    6. '=' → logprob: -12.062736511230469
    7. '0' → logprob: -12.187736511230469
    8. 'for' → logprob: -12.437736511230469
    9. 'from' → logprob: -12.562736511230469
    10. ' [' → logprob: -12.562736511230469

Token 733: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005202664178796113
    2. '0' → logprob: -7.6255202293396
    3. '[' → logprob: -11.125520706176758
    4. '
' → logprob: -11.875520706176758
    5. ' ' → logprob: -12.000520706176758
    6. '-' → logprob: -13.500520706176758
    7. '```' → logprob: -14.063020706176758
    8. '   ' → logprob: -14.500520706176758
    9. '(' → logprob: -14.688020706176758
    10. '2' → logprob: -15.313020706176758

Token 734: '].' (ID: 1651)
  Prédit: '.items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0184568390250206
    2. '.' → logprob: -4.393456935882568
    3. '].' → logprob: -5.393456935882568
    4. 'items' → logprob: -8.01845645904541
    5. ').' → logprob: -8.14345645904541
    6. '}.' → logprob: -8.39345645904541
    7. '().' → logprob: -8.51845645904541
    8. '   ' → logprob: -8.64345645904541
    9. ' .' → logprob: -9.26845645904541
    10. '.iteritems' → logprob: -10.76845645904541

Token 735: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -1.5094070477061905e-05
    2. '.items' → logprob: -11.125015258789062
    3. 'values' → logprob: -15.375015258789062
    4. ' items' → logprob: -16.625015258789062
    5. '
' → logprob: -17.750015258789062
    6. '```' → logprob: -18.125015258789062
    7. '	items' → logprob: -18.875015258789062
    8. '   ' → logprob: -19.500015258789062
    9. '_items' → logprob: -19.500015258789062
    10. '.' → logprob: -20.250015258789062

Token 736: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.35292887687683105
    2. '():
' → logprob: -1.227928876876831
    3. '()' → logprob: -5.47792911529541
    4. '():
' → logprob: -9.60292911529541
    5. ':' → logprob: -9.72792911529541
    6. '       ' → logprob: -9.85292911529541
    7. '           ' → logprob: -10.22792911529541
    8. '(' → logprob: -10.22792911529541
    9. '(),' → logprob: -11.10292911529541
    10. '():

' → logprob: -11.47792911529541

Token 737: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010688089241739362
    2. '               ' → logprob: -9.375106811523438
    3. '            ' → logprob: -11.500106811523438
    4. '                   ' → logprob: -13.250106811523438
    5. '<|end|>' → logprob: -13.250106811523438
    6. '          ' → logprob: -13.375106811523438
    7. '                           ' → logprob: -13.500106811523438
    8. '            
' → logprob: -13.750106811523438
    9. '```' → logprob: -14.000106811523438
    10. '[' → logprob: -14.375106811523438

Token 738: ' grund' (ID: 34475)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6569967269897461
    2. '               ' → logprob: -0.9069967269897461
    3. '            ' → logprob: -3.031996726989746
    4. ' if' → logprob: -4.781996726989746
    5. 'result' → logprob: -5.406996726989746
    6. ' ' → logprob: -5.406996726989746
    7. '<|end|>' → logprob: -5.531996726989746
    8. '                ' → logprob: -6.156996726989746
    9. '             ' → logprob: -6.906996726989746
    10. ' result' → logprob: -7.031996726989746

Token 739: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.721228368813172e-05
    2. 'x' → logprob: -9.625086784362793
    3. '           ' → logprob: -12.000086784362793
    4. 'result' → logprob: -12.250086784362793
    5. '_result' → logprob: -13.000086784362793
    6. '       ' → logprob: -13.000086784362793
    7. '               ' → logprob: -13.250086784362793
    8. 'sy' → logprob: -13.250086784362793
    9. 'ry' → logprob: -15.375086784362793
    10. 'xy' → logprob: -15.625086784362793

Token 740: '_z' (ID: 18252)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.1003003716468811
    2. '_code' → logprob: -3.8503003120422363
    3. '_z' → logprob: -4.100300312042236
    4. '_sum' → logprob: -4.225300312042236
    5. '_result' → logprob: -4.475300312042236
    6. ' =' → logprob: -4.475300312042236
    7. '_comb' → logprob: -5.225300312042236
    8. '=' → logprob: -5.475300312042236
    9. '_value' → logprob: -5.850300312042236
    10. '_' → logprob: -6.100300312042236

Token 741: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25740334391593933
    2. '=' → logprob: -2.0074033737182617
    3. ',' → logprob: -2.3824033737182617
    4. ' ,' → logprob: -10.132403373718262
    5. ' ' → logprob: -10.132403373718262
    6. '<|end|>' → logprob: -10.382403373718262
    7. '   ' → logprob: -11.257403373718262
    8. ' ^=' → logprob: -11.507403373718262
    9. '_' → logprob: -11.694903373718262
    10. ')' → logprob: -11.757403373718262

Token 742: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.000133098365040496
    2. ' grund' → logprob: -9.375133514404297
    3. 'ground' → logprob: -10.875133514404297
    4. 'grond' → logprob: -11.375133514404297
    5. 'Grund' → logprob: -12.375133514404297
    6. '(' → logprob: -12.500133514404297
    7. 'grunt' → logprob: -13.125133514404297
    8. 'grunn' → logprob: -13.625133514404297
    9. '   ' → logprob: -13.875133514404297
    10. 'int' → logprob: -14.125133514404297

Token 743: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.0683535037969705e-05
    2. 'x' → logprob: -11.75001049041748
    3. '```' → logprob: -13.87501049041748
    4. '[y' → logprob: -14.87501049041748
    5. 'yx' → logprob: -16.062511444091797
    6. '[' → logprob: -16.187511444091797
    7. 'y's' → logprob: -16.250011444091797
    8. '_y' → logprob: -16.375011444091797
    9. '{' → logprob: -16.437511444091797
    10. '``' → logprob: -16.500011444091797

Token 744: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.5048530030981055e-06
    2. 'x' → logprob: -13.500001907348633
    3. '_y' → logprob: -17.000001907348633
    4. 'calculator' → logprob: -17.500001907348633
    5. '__' → logprob: -18.375001907348633
    6. 'from' → logprob: -19.750001907348633
    7. '_
' → logprob: -19.750001907348633
    8. '
' → logprob: -19.875001907348633
    9. 'class' → logprob: -19.875001907348633
    10. 'def' → logprob: -20.000001907348633

Token 745: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.004633638076484203
    2. ' ^' → logprob: -5.37963342666626
    3. '^{' → logprob: -12.129633903503418
    4. '^(' → logprob: -12.754633903503418
    5. ',' → logprob: -13.879633903503418
    6. ' ^=' → logprob: -14.379633903503418
    7. ' ' → logprob: -14.629633903503418
    8. '^^' → logprob: -14.629633903503418
    9. ')^' → logprob: -14.754633903503418
    10. '_^' → logprob: -15.254633903503418

Token 746: ' grund' (ID: 34475)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -7.32654589228332e-05
    2. ' grund' → logprob: -9.875073432922363
    3. 'grond' → logprob: -11.500073432922363
    4. 'ground' → logprob: -12.125073432922363
    5. 'grunt' → logprob: -13.375073432922363
    6. 'grad' → logprob: -13.625073432922363
    7. '   ' → logprob: -14.375073432922363
    8. 'grunn' → logprob: -14.750073432922363
    9. 'gru' → logprob: -15.000073432922363
    10. ' ' → logprob: -15.000073432922363

Token 747: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001507405104348436
    2. 'z' → logprob: -10.375150680541992
    3. '```' → logprob: -10.375150680541992
    4. 'zy' → logprob: -10.875150680541992
    5. 'gy' → logprob: -11.250150680541992
    6. ' ' → logprob: -11.250150680541992
    7. '_y' → logprob: -11.500150680541992
    8. 'grund' → logprob: -12.875150680541992
    9. 'yu' → logprob: -13.000150680541992
    10. ' y' → logprob: -13.000150680541992

Token 748: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.000432695698691532
    2. 'y' → logprob: -7.75043249130249
    3. '_z' → logprob: -14.000432968139648
    4. '_' → logprob: -14.500432968139648
    5. '_x' → logprob: -15.500432968139648
    6. 'Y' → logprob: -16.12543296813965
    7. '<|end|>' → logprob: -16.62543296813965
    8. '```' → logprob: -16.87543296813965
    9. ' y' → logprob: -17.25043296813965
    10. '[' → logprob: -17.75043296813965

Token 749: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021940404549241066
    2. ',' → logprob: -6.502193927764893
    3. '               ' → logprob: -8.37719440460205
    4. '<|end|>' → logprob: -9.12719440460205
    5. '          ' → logprob: -9.50219440460205
    6. '		' → logprob: -9.50219440460205
    7. ',
' → logprob: -10.25219440460205
    8. '            ' → logprob: -10.50219440460205
    9. '                   ' → logprob: -10.87719440460205
    10. ';' → logprob: -10.87719440460205

Token 750: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007431607809849083
    2. '<|end|>' → logprob: -7.750743389129639
    3. '               ' → logprob: -9.25074291229248
    4. '                   ' → logprob: -10.37574291229248
    5. '		' → logprob: -10.50074291229248
    6. ',' → logprob: -10.62574291229248
    7. '            ' → logprob: -10.62574291229248
    8. '                           ' → logprob: -10.62574291229248
    9. '(' → logprob: -11.00074291229248
    10. '[' → logprob: -11.37574291229248

Token 751: ' sum' (ID: 4215)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.002595872851088643
    2. ' result' → logprob: -6.502595901489258
    3. '           ' → logprob: -6.877595901489258
    4. 'if' → logprob: -10.127595901489258
    5. '               ' → logprob: -11.752595901489258
    6. 'sum' (adapté à ' sum') → logprob: -12.252595901489258
    7. ' if' → logprob: -13.127595901489258
    8. 'for' → logprob: -13.502595901489258
    9. '```' → logprob: -13.752595901489258
    10. '            ' → logprob: -14.002595901489258

Token 752: '_z' (ID: 18252)
  Prédit: '_z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_z' → logprob: -0.14982935786247253
    2. '=result' → logprob: -2.524829387664795
    3. '=' → logprob: -3.524829387664795
    4. 'result' → logprob: -3.774829387664795
    5. '_result' → logprob: -5.649829387664795
    6. '[result' → logprob: -7.149829387664795
    7. 'z' → logprob: -7.774829387664795
    8. ' =' → logprob: -7.899829387664795
    9. '_x' → logprob: -8.149828910827637
    10. '_y' → logprob: -8.399828910827637

Token 753: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47340691089630127
    2. ' =' → logprob: -1.7234069108963013
    3. '+=' → logprob: -2.0984067916870117
    4. ' +=' → logprob: -2.5984067916870117
    5. '+' → logprob: -6.473406791687012
    6. ' +' → logprob: -10.848406791687012
    7. '   ' → logprob: -11.473406791687012
    8. ' ' → logprob: -11.848406791687012
    9. ']+=' → logprob: -11.848406791687012
    10. '+=(' → logprob: -12.473406791687012

Token 754: ' grund' (ID: 34475)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.006040424108505249
    2. 'grund' → logprob: -5.131040573120117
    3. ' sum' → logprob: -9.756040573120117
    4. 'result' → logprob: -10.506040573120117
    5. 'Mod' → logprob: -11.881040573120117
    6. '(sum' → logprob: -12.381040573120117
    7. ' grund' → logprob: -12.381040573120117
    8. 'mod' → logprob: -13.506040573120117
    9. 'Grund' → logprob: -13.756040573120117
    10. 'ground' → logprob: -13.881040573120117

Token 755: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.2127087504486553e-05
    2. 'result' → logprob: -11.500021934509277
    3. '_result' → logprob: -12.625021934509277
    4. 'zy' → logprob: -12.875021934509277
    5. '(result' → logprob: -13.625021934509277
    6. '(' → logprob: -14.250021934509277
    7. '```' → logprob: -15.000021934509277
    8. 'z' → logprob: -15.000021934509277
    9. 'и' → logprob: -15.125021934509277
    10. '           ' → logprob: -15.250021934509277

Token 756: '_s' (ID: 1278)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.007512333802878857
    2. 'sum' → logprob: -6.00751256942749
    3. '_z' → logprob: -6.13251256942749
    4. '_y' → logprob: -6.13251256942749
    5. '_s' → logprob: -7.88251256942749
    6. '_x' → logprob: -8.382512092590332
    7. 'Sum' → logprob: -9.632512092590332
    8. '_' → logprob: -13.507512092590332
    9. 's' → logprob: -13.757512092590332
    10. 'z' → logprob: -13.882512092590332

Token 757: 'ums' (ID: 6162)
  Prédit: '_y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.18211889266967773
    2. 'um' → logprob: -2.6821188926696777
    3. '_sum' → logprob: -2.9321188926696777
    4. 'sum' → logprob: -3.3071188926696777
    5. '_x' → logprob: -5.557118892669678
    6. 'y' → logprob: -6.057118892669678
    7. 'ums' → logprob: -6.932118892669678
    8. '_z' → logprob: -7.807118892669678
    9. '[' → logprob: -8.307119369506836
    10. 'x' → logprob: -9.432119369506836

Token 758: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002128382766386494
    2. '2' → logprob: -8.875212669372559
    3. '1' → logprob: -9.750212669372559
    4. '[
' → logprob: -12.375212669372559
    5. '```' → logprob: -13.375212669372559
    6. '[-' → logprob: -13.500212669372559
    7. ' [' → logprob: -13.625212669372559
    8. 's' → logprob: -13.625212669372559
    9. '0' → logprob: -14.250212669372559
    10. '=' → logprob: -14.250212669372559

Token 759: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006729934364557266
    2. '1' → logprob: -5.256730079650879
    3. '0' → logprob: -6.631730079650879
    4. ' ' → logprob: -9.381730079650879
    5. '-' → logprob: -9.506730079650879
    6. '   ' → logprob: -11.756730079650879
    7. '[' → logprob: -12.506730079650879
    8. ' -' → logprob: -13.381730079650879
    9. '  ' → logprob: -13.756730079650879
    10. '```' → logprob: -13.881730079650879

Token 760: '][' (ID: 2696)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.37812843918800354
    2. '[' → logprob: -1.7531284093856812
    3. '].' → logprob: -2.0031285285949707
    4. '][' → logprob: -5.503128528594971
    5. 'get' → logprob: -7.878128528594971
    6. '.' → logprob: -8.003128051757812
    7. ').' → logprob: -8.128128051757812
    8. '}.' → logprob: -8.378128051757812
    9. '
' → logprob: -8.628128051757812
    10. '>.' → logprob: -8.753128051757812

Token 761: 'grund' (ID: 27797)
  Prédit: 'grund'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -2.8802491215174086e-05
    2. 'z' → logprob: -12.250028610229492
    3. 'grond' → logprob: -12.500028610229492
    4. '(' → logprob: -12.625028610229492
    5. 'grunt' → logprob: -13.125028610229492
    6. 'ground' → logprob: -13.250028610229492
    7. 'get' → logprob: -13.500028610229492
    8. '
' → logprob: -13.750028610229492
    9. 'sum' → logprob: -13.875028610229492
    10. '0' → logprob: -13.875028610229492

Token 762: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16485005617141724
    2. 'z' → logprob: -1.9148499965667725
    3. 'zy' → logprob: -5.414850234985352
    4. 'grund' → logprob: -9.789850234985352
    5. 'gy' → logprob: -10.539850234985352
    6. 'ny' → logprob: -11.289850234985352
    7. '```' → logprob: -11.289850234985352
    8. 'ay' → logprob: -11.789850234985352
    9. '
' → logprob: -12.164850234985352
    10. 'a' → logprob: -12.289850234985352

Token 763: '_z' (ID: 18252)
  Prédit: '_z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_z' → logprob: -0.0017367053078487515
    2. 'z' → logprob: -6.376736640930176
    3. '_x' → logprob: -11.501736640930176
    4. '
' → logprob: -11.501736640930176
    5. '```' → logprob: -12.126736640930176
    6. '_y' → logprob: -12.501736640930176
    7. ']' → logprob: -14.126736640930176
    8. 'з' → logprob: -14.251736640930176
    9. '
' → logprob: -14.751736640930176
    10. '_' → logprob: -15.001736640930176

Token 764: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00279263430275023
    2. ']*' → logprob: -6.752792835235596
    3. '*' → logprob: -7.252792835235596
    4. ' ]' → logprob: -8.002792358398438
    5. ' *' → logprob: -8.377792358398438
    6. '+' → logprob: -8.752792358398438
    7. ']+=' → logprob: -9.252792358398438
    8. ']+' → logprob: -10.127792358398438
    9. '+]' → logprob: -11.127792358398438
    10. '<|end|>' → logprob: -11.752792358398438

Token 765: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017791526624932885
    2. 'result' → logprob: -9.125178337097168
    3. '<|end|>' → logprob: -10.625178337097168
    4. ' result' → logprob: -11.500178337097168
    5. '               ' → logprob: -11.750178337097168
    6. '		' → logprob: -12.250178337097168
    7. '                   ' → logprob: -12.375178337097168
    8. ',result' → logprob: -12.625178337097168
    9. '       ' → logprob: -12.875178337097168
    10. '	       ' → logprob: -13.000178337097168

Token 766: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0005028736195527017
    2. ' result' → logprob: -8.125502586364746
    3. '           ' → logprob: -8.500502586364746
    4. '
' → logprob: -12.875502586364746
    5. '            
' → logprob: -15.625502586364746
    6. '	result' → logprob: -16.125503540039062
    7. '                   ' → logprob: -16.125503540039062
    8. '               ' → logprob: -16.250503540039062
    9. '   ' → logprob: -16.375503540039062
    10. '```' → logprob: -16.500503540039062

Token 767: ' sum' (ID: 4215)
  Prédit: 'grund'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grund' → logprob: -0.638332724571228
    2. 'sum' → logprob: -0.763332724571228
    3. ' sum' → logprob: -6.013332843780518
    4. 'not' → logprob: -6.763332843780518
    5. ' grund' → logprob: -7.263332843780518
    6. 'grond' → logprob: -8.13833236694336
    7. '(sum' → logprob: -8.26333236694336
    8. '(' → logprob: -8.38833236694336
    9. '   ' → logprob: -9.01333236694336
    10. 'bool' → logprob: -9.26333236694336

Token 768: '_z' (ID: 18252)
  Prédit: '_z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_z' → logprob: -0.1290661096572876
    2. '_x' → logprob: -2.129065990447998
    3. '_' → logprob: -7.879065990447998
    4. 'z' → logprob: -8.254066467285156
    5. ':' → logprob: -8.379066467285156
    6. '[' → logprob: -8.629066467285156
    7. '   ' → logprob: -9.004066467285156
    8. 'x' → logprob: -9.129066467285156
    9. ' ' → logprob: -9.129066467285156
    10. '_y' → logprob: -9.879066467285156

Token 769: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.624668538570404
    2. ' !=' → logprob: -0.874668538570404
    3. '!=' → logprob: -3.749668598175049
    4. ' ==' → logprob: -4.624668598175049
    5. '>' → logprob: -5.499668598175049
    6. '==' → logprob: -5.749668598175049
    7. '<|end|>' → logprob: -6.499668598175049
    8. ' >' → logprob: -6.499668598175049
    9. ' *' → logprob: -6.874668598175049
    10. ' is' → logprob: -7.874668598175049

Token 770: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011783202644437551
    2. '           ' → logprob: -8.376178741455078
    3. '<|end|>' → logprob: -8.501178741455078
    4. '                               ' → logprob: -8.751178741455078
    5. '              ' → logprob: -9.001178741455078
    6. '                   ' → logprob: -9.001178741455078
    7. '                       ' → logprob: -9.376178741455078
    8. '                ' → logprob: -9.751178741455078
    9. '                
' → logprob: -10.001178741455078
    10. '                           ' → logprob: -10.126178741455078

Token 771: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.5389920473098755
    2. ' result' → logprob: -1.0389920473098755
    3. '                   ' → logprob: -2.788991928100586
    4. '               ' → logprob: -7.413991928100586
    5. '                       ' → logprob: -8.913991928100586
    6. '   ' → logprob: -9.038991928100586
    7. '                               ' → logprob: -9.038991928100586
    8. '                    
' → logprob: -9.788991928100586
    9. '                                   ' → logprob: -10.163991928100586
    10. '
' → logprob: -10.163991928100586

Token 772: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.004505250137299299
    2. '+=' → logprob: -6.254505157470703
    3. '_' → logprob: -6.504505157470703
    4. ' +=' → logprob: -7.004505157470703
    5. '_s' → logprob: -9.754505157470703
    6. '+' → logprob: -10.504505157470703
    7. 'Sum' → logprob: -10.629505157470703
    8. '=' → logprob: -11.504505157470703
    9. '   ' → logprob: -11.504505157470703
    10. '_S' → logprob: -11.754505157470703

Token 773: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.693272590637207
    2. '+=' → logprob: -0.693272590637207
    3. '=' → logprob: -9.943272590637207
    4. '+' → logprob: -10.318272590637207
    5. '+=(' → logprob: -10.818272590637207
    6. ']+=' → logprob: -11.818272590637207
    7. '   ' → logprob: -12.318272590637207
    8. ' =' → logprob: -12.818272590637207
    9. ' ' → logprob: -12.943272590637207
    10. ' +' → logprob: -13.318272590637207

Token 774: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0012097570579499006
    2. ' sum' → logprob: -7.001209735870361
    3. '(sum' → logprob: -8.62621021270752
    4. 'Mod' → logprob: -10.00121021270752
    5. '   ' → logprob: -10.37621021270752
    6. ' Modular' → logprob: -11.62621021270752
    7. '(Mod' → logprob: -12.00121021270752
    8. '(' → logprob: -12.25121021270752
    9. 'MOD' → logprob: -13.00121021270752
    10. '	sum' → logprob: -13.12621021270752

Token 775: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0005410005105659366
    2. '_y' → logprob: -7.6255412101745605
    3. '_' → logprob: -10.500540733337402
    4. 'x' → logprob: -11.625540733337402
    5. '_z' → logprob: -11.875540733337402
    6. 'sum' → logprob: -12.375540733337402
    7. '(sum' → logprob: -13.250540733337402
    8. '_{' → logprob: -14.375540733337402
    9. '```' → logprob: -14.750540733337402
    10. '_
' → logprob: -15.000540733337402

Token 776: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16033653914928436
    2. ' *' → logprob: -1.9103364944458008
    3. '               ' → logprob: -9.5353364944458
    4. '                   ' → logprob: -11.2853364944458
    5. '   ' → logprob: -12.0353364944458
    6. '           ' → logprob: -12.5353364944458
    7. '```' → logprob: -12.6603364944458
    8. ' ' → logprob: -13.1603364944458
    9. '*object' → logprob: -13.2853364944458
    10. '                ' → logprob: -13.5353364944458

Token 777: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -4.644463479053229e-05
    2. ' sum' → logprob: -10.000046730041504
    3. '(sum' → logprob: -14.750046730041504
    4. '           ' → logprob: -16.000045776367188
    5. '               ' → logprob: -16.000045776367188
    6. '
' → logprob: -16.375045776367188
    7. '   ' → logprob: -16.750045776367188
    8. 'result' → logprob: -16.750045776367188
    9. '  ' → logprob: -17.125045776367188
    10. ' ' → logprob: -17.500045776367188

Token 778: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -2.463036435074173e-05
    2. 'y' → logprob: -10.875024795532227
    3. '_z' → logprob: -12.250024795532227
    4. 'sum' → logprob: -14.875024795532227
    5. '```' → logprob: -15.375024795532227
    6. 'yield' → logprob: -16.750024795532227
    7. '_x' → logprob: -16.875024795532227
    8. '_' → logprob: -17.250024795532227
    9. 'sy' → logprob: -18.000024795532227
    10. '   ' → logprob: -18.375024795532227

Token 779: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4944758713245392
    2. '*' → logprob: -1.6194758415222168
    3. '<|end|>' → logprob: -2.244475841522217
    4. '               ' → logprob: -3.119475841522217
    5. '    
' → logprob: -4.994475841522217
    6. '           ' → logprob: -5.119475841522217
    7. ' 
' → logprob: -5.619475841522217
    8. '       ' → logprob: -5.869475841522217
    9. '
' → logprob: -5.869475841522217
    10. '  
' → logprob: -6.119475841522217

Token 780: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0001234428636962548
    2. ' sum' → logprob: -9.000123023986816
    3. 'int' → logprob: -17.875123977661133
    4. '(sum' → logprob: -18.000123977661133
    5. '               ' → logprob: -19.125123977661133
    6. '
' → logprob: -19.750123977661133
    7. '	sum' → logprob: -20.000123977661133
    8. '=sum' → logprob: -20.250123977661133
    9. '           ' → logprob: -20.625123977661133
    10. ' ' → logprob: -20.750123977661133

Token 781: '_z' (ID: 18252)
  Prédit: '_z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_z' → logprob: -5.512236498361744e-07
    2. 'z' → logprob: -14.500000953674316
    3. '```' → logprob: -18.25
    4. '_x' → logprob: -18.75
    5. '_y' → logprob: -19.375
    6. '_sum' → logprob: -20.0
    7. '_' → logprob: -20.25
    8. '_s' → logprob: -20.5
    9. 'sum' → logprob: -21.25
    10. '[z' → logprob: -21.625

Token 782: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 783: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022552814334630966
    2. '
' → logprob: -3.897552728652954
    3. '    
' → logprob: -6.522552967071533
    4. 'return' → logprob: -8.147552490234375
    5. '	return' → logprob: -9.772552490234375
    6. '       ' → logprob: -10.022552490234375
    7. ' return' → logprob: -10.022552490234375
    8. '<|end|>' → logprob: -10.272552490234375
    9. '  
' → logprob: -11.022552490234375
    10. '```' → logprob: -11.647552490234375

Token 784: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06798236817121506
    2. 'return' (adapté à ' return') → logprob: -2.8179824352264404
    3. '	return' → logprob: -5.442982196807861
    4. '
' → logprob: -7.442982196807861
    5. ' return' → logprob: -7.942982196807861
    6. '    
' → logprob: -8.19298267364502
    7. '<|end|>' → logprob: -9.31798267364502
    8. ':return' → logprob: -9.56798267364502
    9. '```' → logprob: -9.69298267364502
    10. '       ' → logprob: -10.06798267364502

Token 785: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0015028368216007948
    2. ' result' → logprob: -6.501502990722656
    3. 'int' → logprob: -14.501502990722656
    4. '(result' → logprob: -16.751502990722656
    5. 'str' → logprob: -18.001502990722656
    6. '	result' → logprob: -18.376502990722656
    7. '   ' → logprob: -18.501502990722656
    8. 'return' → logprob: -19.501502990722656
    9. '```' → logprob: -19.751502990722656
    10. 'res' → logprob: -20.001502990722656

Token 786: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0005806732806377113
    2. '_' → logprob: -7.500580787658691
    3. '_s' → logprob: -11.125580787658691
    4. ' _' → logprob: -12.375580787658691
    5. '```' → logprob: -13.000580787658691
    6. '_result' → logprob: -13.250580787658691
    7. '__' → logprob: -13.500580787658691
    8. '_
' → logprob: -14.000580787658691
    9. '_S' → logprob: -14.000580787658691
    10. '\' → logprob: -14.625580787658691

Token 787: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 788: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.084532618522644
    2. '#' → logprob: -1.584532618522644
    3. 'MOD' → logprob: -1.709532618522644
    4. 'GLOBAL' → logprob: -2.0845327377319336
    5. ':' → logprob: -3.3345327377319336
    6. '<|end|>' → logprob: -4.084532737731934
    7. 'def' → logprob: -4.334532737731934
    8. '```' → logprob: -4.459532737731934
    9. '=' → logprob: -4.709532737731934
    10. '\' → logprob: -4.959532737731934

Token 789: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.00011331788846291602
    2. '_UL' → logprob: -9.625113487243652
    3. '=' → logprob: -10.625113487243652
    4. '_' → logprob: -11.750113487243652
    5. 'US' → logprob: -12.375113487243652
    6. 'ULO' → logprob: -12.875113487243652
    7. ' =' → logprob: -13.125113487243652
    8. 'ULE' → logprob: -13.250113487243652
    9. '```' → logprob: -13.750113487243652
    10. '_=' → logprob: -14.500113487243652

Token 790: 'US' (ID: 3042)
  Prédit: 'US'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'US' → logprob: -0.00865109171718359
    2. 'S' → logprob: -5.633651256561279
    3. '=' → logprob: -5.758651256561279
    4. '_' → logprob: -7.008651256561279
    5. ' =' → logprob: -8.133650779724121
    6. '_US' → logprob: -8.258650779724121
    7. 'UL' → logprob: -9.383650779724121
    8. '_MOD' → logprob: -9.508650779724121
    9. '=_' → logprob: -10.008650779724121
    10. '_=' → logprob: -10.258650779724121

Token 791: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014196764677762985
    2. '=' → logprob: -4.264196872711182
    3. ' =
' → logprob: -11.014196395874023
    4. ' ' → logprob: -12.139196395874023
    5. '<|end|>' → logprob: -12.389196395874023
    6. ',' → logprob: -12.639196395874023
    7. ' =)' → logprob: -13.889196395874023
    8. ':' → logprob: -14.139196395874023
    9. ')' → logprob: -14.889196395874023
    10. '=
' → logprob: -15.264196395874023

Token 792: ' ' (ID: 220)
  Prédit: '998'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '998' → logprob: -0.6021130681037903
    2. '100' → logprob: -1.2271130084991455
    3. '10' → logprob: -1.8521130084991455
    4. '316' → logprob: -8.352112770080566
    5. '123' → logprob: -8.477112770080566
    6. '999' → logprob: -8.602112770080566
    7. '1' → logprob: -8.602112770080566
    8. '3' → logprob: -8.727112770080566
    9. '786' → logprob: -9.102112770080566
    10. '101' → logprob: -9.227112770080566

Token 793: '998' (ID: 34589)
  Prédit: '998'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -0.9446186423301697
    2. '10' → logprob: -1.0696187019348145
    3. '100' → logprob: -1.3196187019348145
    4. '1' → logprob: -7.8196187019348145
    5. '2' → logprob: -9.944618225097656
    6. '316' → logprob: -10.069618225097656
    7. '123' → logprob: -10.319618225097656
    8. '999' → logprob: -10.319618225097656
    9. '(' → logprob: -10.444618225097656
    10. '104' → logprob: -10.694618225097656

Token 794: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -0.002985309576615691
    2. '353' → logprob: -6.00298547744751
    3. '953' → logprob: -8.752985000610352
    4. '457' → logprob: -9.377985000610352
    5. '7' → logprob: -9.502985000610352
    6. '243' → logprob: -9.877985000610352
    7. '351' → logprob: -11.002985000610352
    8. '247' → logprob: -11.127985000610352
    9. '357' → logprob: -11.377985000610352
    10. '53' → logprob: -11.377985000610352

Token 795: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.06994455307722092
    2. '853' → logprob: -2.8199446201324463
    3. '857' → logprob: -5.819944381713867
    4. '257' → logprob: -6.069944381713867
    5. '433' → logprob: -7.194944381713867
    6. '427' → logprob: -7.944944381713867
    7. '357' → logprob: -8.069944381713867
    8. '263' → logprob: -8.694944381713867
    9. '053' → logprob: -8.694944381713867
    10. '```' → logprob: -8.819944381713867

Token 796: '
' (ID: 198)
  Prédit: 'GLOBAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GLOBAL' → logprob: -0.00044949972652830184
    2. '<|end|>' → logprob: -9.000449180603027
    3. '
' → logprob: -9.125449180603027
    4. '_GLOBAL' → logprob: -9.500449180603027
    5. 'global' → logprob: -10.500449180603027
    6. 'def' → logprob: -10.625449180603027
    7. '#' → logprob: -10.750449180603027
    8. ' GLOBAL' → logprob: -10.750449180603027
    9. '```' → logprob: -11.250449180603027
    10. 'GLOBALS' → logprob: -11.875449180603027

Token 797: 'GLOBAL' (ID: 39665)
  Prédit: 'GLOBAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GLOBAL' → logprob: -0.0003455944824963808
    2. '#' → logprob: -9.625345230102539
    3. 'def' → logprob: -9.625345230102539
    4. 'global' → logprob: -9.875345230102539
    5. 'GLOBALS' → logprob: -10.500345230102539
    6. '_GLOBAL' → logprob: -10.500345230102539
    7. '```' → logprob: -10.750345230102539
    8. 'import' → logprob: -11.625345230102539
    9. ' GLOBAL' → logprob: -11.875345230102539
    10. 'MOD' → logprob: -12.000345230102539

Token 798: '_B' (ID: 3201)
  Prédit: '_N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -0.004050502087920904
    2. '_B' → logprob: -5.6290507316589355
    3. '_GLOBAL' → logprob: -7.7540507316589355
    4. '_A' → logprob: -12.754050254821777
    5. '_BASE' → logprob: -12.879050254821777
    6. '_' → logprob: -13.129050254821777
    7. '\' → logprob: -13.504050254821777
    8. 'N' → logprob: -13.504050254821777
    9. '_MAX' → logprob: -13.504050254821777
    10. '_EOL' → logprob: -14.004050254821777

Token 799: 'AS' (ID: 2158)
  Prédit: 'AS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AS' → logprob: -2.2603901015827432e-05
    2. 'ASE' → logprob: -11.375022888183594
    3. 'asis' → logprob: -12.000022888183594
    4. 'ASIC' → logprob: -13.250022888183594
    5. 'ASI' → logprob: -13.875022888183594
    6. 'IAS' → logprob: -14.500022888183594
    7. 'IS' → logprob: -15.125022888183594
    8. 'B' → logprob: -15.250022888183594
    9. '```' → logprob: -15.625022888183594
    10. 'ASIL' → logprob: -16.000022888183594

Token 800: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -4.320199877838604e-07
    2. 'S' → logprob: -15.375
    3. 'I' → logprob: -16.125
    4. 'IC' → logprob: -17.5
    5. '_IS' → logprob: -17.75
    6. 'is' → logprob: -18.5
    7. 'ES' → logprob: -18.75
    8. 'E' → logprob: -19.125
    9. 'ИС' → logprob: -19.25
    10. 'ICS' → logprob: -19.625

Token 801: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0297548845410347
    2. '=' → logprob: -3.529754877090454
    3. ',' → logprob: -12.529754638671875
    4. ' ' → logprob: -14.154754638671875
    5. ' ,' → logprob: -17.654754638671875
    6. '  ' → logprob: -18.654754638671875
    7. '   ' → logprob: -19.279754638671875
    8. ' =
' → logprob: -19.404754638671875
    9. '<|end|>' → logprob: -19.404754638671875
    10. ' =)' → logprob: -19.779754638671875

Token 802: ' Modular' (ID: 137262)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.25974175333976746
    2. '2' → logprob: -2.50974178314209
    3. '10' → logprob: -2.88474178314209
    4. '100' → logprob: -3.75974178314209
    5. '233' → logprob: -4.63474178314209
    6. '998' → logprob: -4.75974178314209
    7. '5' → logprob: -5.00974178314209
    8. '31' → logprob: -5.25974178314209
    9. '4' → logprob: -5.50974178314209
    10. '7' → logprob: -5.75974178314209

Token 803: 'Integer' (ID: 5437)
  Prédit: 'Integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Integer' → logprob: 0.0
    2. 'Inte' → logprob: -16.75
    3. 'integer' → logprob: -18.0
    4. 'In' → logprob: -19.875
    5. '_integer' → logprob: -19.875
    6. 'I' → logprob: -20.375
    7. 'Int' → logprob: -20.375
    8. ' Integer' → logprob: -20.5
    9. '\' → logprob: -20.75
    10. '_Integer' → logprob: -20.875

Token 804: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031761713325977325
    2. '2' → logprob: -5.878176212310791
    3. '3' → logprob: -8.503175735473633
    4. '10' → logprob: -9.753175735473633
    5. '(G' → logprob: -10.253175735473633
    6. '31' → logprob: -10.753175735473633
    7. '7' → logprob: -11.878175735473633
    8. '(
' → logprob: -12.003175735473633
    9. '4' → logprob: -12.253175735473633
    10. '5' → logprob: -12.378175735473633

Token 805: '10' (ID: 702)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.09988459944725037
    2. '2' → logprob: -2.724884510040283
    3. '31' → logprob: -4.474884510040283
    4. '100' → logprob: -5.474884510040283
    5. '10' → logprob: -5.849884510040283
    6. '131' → logprob: -5.849884510040283
    7. '233' → logprob: -6.974884510040283
    8. '7' → logprob: -7.099884510040283
    9. '4' → logprob: -7.349884510040283
    10. '5' → logprob: -7.349884510040283

Token 806: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023082992061972618
    2. '**' → logprob: -4.023083209991455
    3. '00' → logprob: -6.523083209991455
    4. '7' → logprob: -6.898083209991455
    5. '000' → logprob: -6.898083209991455
    6. '0' → logprob: -7.523083209991455
    7. '9' → logprob: -8.273082733154297
    8. '3' → logprob: -8.898082733154297
    9. '007' → logprob: -9.523082733154297
    10. ')**' → logprob: -9.898082733154297

Token 807: ' **' (ID: 6240)
  Prédit: 'GLOBAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'GLOBAL' → logprob: -0.0008771585416980088
    2. '
' → logprob: -7.125877380371094
    3. '_GLOBAL' → logprob: -10.375877380371094
    4. 'def' → logprob: -10.500877380371094
    5. '#' → logprob: -12.625877380371094
    6. ' GLOBAL' → logprob: -12.875877380371094
    7. '
' → logprob: -13.750877380371094
    8. 'GLOBALS' → logprob: -13.750877380371094
    9. '```' → logprob: -13.875877380371094
    10. 'global' → logprob: -13.875877380371094

Token 808: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.40420740842819214
    2. '6' → logprob: -1.654207468032837
    3. '7' → logprob: -2.404207468032837
    4. '8' → logprob: -4.154207229614258
    5. '10' → logprob: -4.529207229614258
    6. '18' → logprob: -4.654207229614258
    7. '15' → logprob: -5.404207229614258
    8. '12' → logprob: -5.654207229614258
    9. '11' → logprob: -6.154207229614258
    10. '5' → logprob: -6.279207229614258

Token 809: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.14399127662181854
    2. '6' → logprob: -3.018991231918335
    3. '7' → logprob: -4.018991470336914
    4. '10' → logprob: -4.143991470336914
    5. '8' → logprob: -4.268991470336914
    6. '18' → logprob: -4.393991470336914
    7. '12' → logprob: -5.018991470336914
    8. '15' → logprob: -5.018991470336914
    9. '11' → logprob: -5.768991470336914
    10. '100' → logprob: -5.768991470336914

Token 810: '
' (ID: 198)
  Prédit: 'GLOBAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'GLOBAL' → logprob: -0.001117234816774726
    2. 'input' → logprob: -6.87611722946167
    3. 'if' → logprob: -10.876117706298828
    4. '_GLOBAL' → logprob: -10.876117706298828
    5. 'def' → logprob: -11.251117706298828
    6. 'for' → logprob: -12.126117706298828
    7. 'global' → logprob: -12.251117706298828
    8. '#' → logprob: -12.501117706298828
    9. ' GLOBAL' → logprob: -12.751117706298828
    10. 'read' → logprob: -12.751117706298828

Token 811: 'GLOBAL' (ID: 39665)
  Prédit: 'GLOBAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GLOBAL' → logprob: -0.019887318834662437
    2. 'input' → logprob: -4.019887447357178
    3. 'global' → logprob: -8.01988697052002
    4. '#' → logprob: -8.51988697052002
    5. 'n' → logprob: -8.51988697052002
    6. '_GLOBAL' → logprob: -8.51988697052002
    7. 'line' → logprob: -8.64488697052002
    8. 'def' → logprob: -8.76988697052002
    9. 'read' → logprob: -9.01988697052002
    10. ' GLOBAL' → logprob: -9.64488697052002

Token 812: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -1.1472419600977446e-06
    2. 'N' → logprob: -14.750000953674316
    3. '_B' → logprob: -15.375000953674316
    4. '_GLOBAL' → logprob: -15.750000953674316
    5. '_MAX' → logprob: -16.500001907348633
    6. '\' → logprob: -16.750001907348633
    7. '
' → logprob: -17.250001907348633
    8. '_n' → logprob: -17.250001907348633
    9. '```' → logprob: -17.375001907348633
    10. '_NODE' → logprob: -17.875001907348633

Token 813: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10033681243658066
    2. '=' → logprob: -2.350336790084839
    3. ',' → logprob: -9.100337028503418
    4. '_' → logprob: -11.350337028503418
    5. ' ' → logprob: -12.975337028503418
    6. '<|end|>' → logprob: -13.475337028503418
    7. ' =
' → logprob: -13.850337028503418
    8. '_=' → logprob: -14.475337028503418
    9. ' ,' → logprob: -15.100337028503418
    10. ' _' → logprob: -15.100337028503418

Token 814: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7502847909927368
    2. ' int' → logprob: -1.5002847909927368
    3. '0' → logprob: -2.2502846717834473
    4. ' ' → logprob: -2.2502846717834473
    5. '10' → logprob: -3.0002846717834473
    6. '100' → logprob: -3.3752846717834473
    7. '1' → logprob: -6.375284671783447
    8. '200' → logprob: -6.750284671783447
    9. '20' → logprob: -7.000284671783447
    10. '50' → logprob: -7.500284671783447

Token 815: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004259208217263222
    2. '()' → logprob: -5.50425910949707
    3. 'input' → logprob: -9.00425910949707
    4. '(' → logprob: -10.37925910949707
    5. '(sys' → logprob: -10.75425910949707
    6. '('' → logprob: -13.62925910949707
    7. '=input' → logprob: -14.00425910949707
    8. '().' → logprob: -14.25425910949707
    9. '();' → logprob: -15.00425910949707
    10. '((' → logprob: -15.25425910949707

Token 816: '_line' (ID: 14418)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03987596929073334
    2. '_line' → logprob: -3.9148759841918945
    3. '()' → logprob: -4.1648759841918945
    4. '().' → logprob: -5.6648759841918945
    5. ' ())' → logprob: -10.039875984191895
    6. ')' → logprob: -10.539875984191895
    7. '()>' → logprob: -10.914875984191895
    8. 'line' → logprob: -11.039875984191895
    9. '();)' → logprob: -11.664875984191895
    10. '())
' → logprob: -11.664875984191895

Token 817: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005286765284836292
    2. '()' → logprob: -5.505286693572998
    3. ')' → logprob: -6.755286693572998
    4. '())
' → logprob: -10.255287170410156
    5. ' ())' → logprob: -13.005287170410156
    6. '().' → logprob: -13.755287170410156
    7. '()
' → logprob: -13.755287170410156
    8. '(' → logprob: -13.755287170410156
    9. '();)' → logprob: -14.255287170410156
    10. '())

' → logprob: -14.880287170410156

Token 818: 'EDGE' (ID: 185822)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0698586255311966
    2. 'edge' → logprob: -3.0698585510253906
    3. 'graphs' → logprob: -4.444858551025391
    4. 'graph' → logprob: -5.319858551025391
    5. 'trip' → logprob: -7.069858551025391
    6. 'global' → logprob: -7.194858551025391
    7. 'input' → logprob: -7.319858551025391
    8. 'adj' → logprob: -8.06985855102539
    9. 'def' → logprob: -8.31985855102539
    10. 'GLOBAL' → logprob: -8.44485855102539

Token 819: '_LIST' (ID: 25218)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.43865451216697693
    2. '_lists' → logprob: -2.3136544227600098
    3. '_list' → logprob: -2.4386544227600098
    4. 's' → logprob: -2.5636544227600098
    5. '_LIST' → logprob: -3.5636544227600098
    6. '_count' → logprob: -3.6886544227600098
    7. '_counts' → logprob: -4.18865442276001
    8. '_COUNT' → logprob: -5.06365442276001
    9. '_struct' → logprob: -5.56365442276001
    10. '_COUN' → logprob: -5.93865442276001

Token 820: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12698543071746826
    2. ' =' → logprob: -2.126985549926758
    3. '=[]' → logprob: -10.126985549926758
    4. 's' → logprob: -11.251985549926758
    5. '=[]
' → logprob: -13.126985549926758
    6. '_' → logprob: -14.126985549926758
    7. '=[' → logprob: -14.626985549926758
    8. '=
' → logprob: -15.626985549926758
    9. '＝' → logprob: -15.751985549926758
    10. '[]' → logprob: -16.001985549926758

Token 821: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016862474149093032
    2. '[]' → logprob: -6.501686096191406
    3. '[]
' → logprob: -9.626686096191406
    4. '[array' → logprob: -9.876686096191406
    5. '[list' → logprob: -10.626686096191406
    6. '[
' → logprob: -11.501686096191406
    7. ' [' → logprob: -11.501686096191406
    8. '[element' → logprob: -11.751686096191406
    9. '[event' → logprob: -12.876686096191406
    10. '[List' → logprob: -13.001686096191406

Token 822: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.000294586323434487
    2. ' edge' → logprob: -8.87529468536377
    3. 'default' → logprob: -9.00029468536377
    4. '{}' → logprob: -11.62529468536377
    5. '{' → logprob: -11.87529468536377
    6. '
' → logprob: -12.50029468536377
    7. '   ' → logprob: -12.62529468536377
    8. '(edge' → logprob: -12.87529468536377
    9. '[' → logprob: -13.62529468536377
    10. '{
' → logprob: -13.75029468536377

Token 823: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -4.723352049040841e-06
    2. '_read' → logprob: -13.125004768371582
    3. '_structure' → logprob: -13.250004768371582
    4. 'reader' → logprob: -14.125004768371582
    5. '_edge' → logprob: -16.125003814697266
    6. 'Reader' → logprob: -17.625003814697266
    7. '_list' → logprob: -18.125003814697266
    8. '_count' → logprob: -18.500003814697266
    9. '(reader' → logprob: -18.625003814697266
    10. '_counter' → logprob: -18.875003814697266

Token 824: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005252729752101004
    2. '(),' → logprob: -7.87552547454834
    3. '()]' → logprob: -9.75052547454834
    4. '())' → logprob: -10.25052547454834
    5. '()),' → logprob: -10.62552547454834
    6. '(),
' → logprob: -10.87552547454834
    7. '()
' → logprob: -12.37552547454834
    8. '()],' → logprob: -13.37552547454834
    9. '()),
' → logprob: -14.25052547454834
    10. '()],
' → logprob: -14.62552547454834

Token 825: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0073761348612606525
    2. '(),' → logprob: -5.257376194000244
    3. 'for' → logprob: -6.757376194000244
    4. ',' → logprob: -7.632376194000244
    5. ' for' → logprob: -8.132375717163086
    6. '()]' → logprob: -9.007375717163086
    7. '   ' → logprob: -10.132375717163086
    8. '(),
' → logprob: -10.757375717163086
    9. '()
' → logprob: -12.257375717163086
    10. ')' → logprob: -12.632375717163086

Token 826: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001933873863890767
    2. ' _' → logprob: -6.626934051513672
    3. ' range' → logprob: -7.626934051513672
    4. '_range' → logprob: -9.501934051513672
    5. 'range' → logprob: -10.001934051513672
    6. '_
' → logprob: -15.876934051513672
    7. '_=' → logprob: -16.126934051513672
    8. '_in' → logprob: -16.376934051513672
    9. '_i' → logprob: -16.751934051513672
    10. '	range' → logprob: -17.126934051513672

Token 827: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05068867281079292
    2. ' range' → logprob: -3.0506887435913086
    3. '_' → logprob: -6.175688743591309
    4. '_range' → logprob: -11.175688743591309
    5. ' in' → logprob: -13.425688743591309
    6. '	range' → logprob: -13.425688743591309
    7. ' _' → logprob: -13.800688743591309
    8. '  ' → logprob: -14.300688743591309
    9. ' ' → logprob: -14.800688743591309
    10. '
' → logprob: -15.300688743591309

Token 828: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004079589620232582
    2. ' range' → logprob: -5.504079818725586
    3. '_' → logprob: -14.379079818725586
    4. '_range' → logprob: -15.379079818725586
    5. '[' → logprob: -15.629079818725586
    6. '	range' → logprob: -16.129079818725586
    7. '
' → logprob: -16.879079818725586
    8. '(range' → logprob: -17.629079818725586
    9. '3' → logprob: -18.379079818725586
    10. ' ' → logprob: -18.629079818725586

Token 829: '(' (ID: 7)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.101369894575328e-05
    2. '(' → logprob: -10.000081062316895
    3. ' ' → logprob: -10.250081062316895
    4. '   ' → logprob: -16.375080108642578
    5. '
' → logprob: -17.500080108642578
    6. 'range' → logprob: -18.125080108642578
    7. '  ' → logprob: -18.375080108642578
    8. ' (' → logprob: -19.000080108642578
    9. ' three' → logprob: -19.812580108642578
    10. '    ' → logprob: -20.312580108642578

Token 830: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.500004768371582
    4. ')' → logprob: -16.7500057220459
    5. '
' → logprob: -18.0000057220459
    6. '2' → logprob: -18.1250057220459
    7. '  ' → logprob: -18.2500057220459
    8. '```' → logprob: -18.8750057220459
    9. 'three' → logprob: -18.9375057220459
    10. ' three' → logprob: -19.0625057220459

Token 831: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001427538663847372
    2. ']' → logprob: -9.000143051147461
    3. ')' → logprob: -10.875143051147461
    4. '])' → logprob: -15.875143051147461
    5. '])]' → logprob: -15.875143051147461
    6. ')]
' → logprob: -16.75014305114746
    7. ')])' → logprob: -17.00014305114746
    8. ')],' → logprob: -17.37514305114746
    9. '}]' → logprob: -17.37514305114746
    10. '')]' → logprob: -18.37514305114746

Token 832: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2007883671903983e-05
    2. 'result' → logprob: -10.750021934509277
    3. 'output' → logprob: -15.500021934509277
    4. 'def' → logprob: -15.625021934509277
    5. 'answer' → logprob: -16.125022888183594
    6. '```' → logprob: -17.625022888183594
    7. '
' → logprob: -17.750022888183594
    8. ' print' → logprob: -18.875022888183594
    9. '#print' → logprob: -20.000022888183594
    10. 'if' → logprob: -20.250022888183594

Token 833: '(problem' (ID: 190865)
  Prédit: '(problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(problem' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.750003814697266
    3. '(prob' → logprob: -14.250003814697266
    4. 'problem' → logprob: -16.500003814697266
    5. '(pro' → logprob: -18.000003814697266
    6. '((' → logprob: -19.250003814697266
    7. '(program' → logprob: -19.625003814697266
    8. '(
' → logprob: -20.500003814697266
    9. '(solution' → logprob: -20.625003814697266
    10. '(product' → logprob: -20.750003814697266

Token 834: '_solver' (ID: 139123)
  Prédit: '_solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solver' → logprob: 0.0
    2. 'solver' → logprob: -18.875
    3. '_s' → logprob: -19.0
    4. '_sol' → logprob: -19.5
    5. 'Solver' → logprob: -20.625
    6. '_' → logprob: -21.0
    7. '_sampler' → logprob: -21.5
    8. '_parser' → logprob: -22.0
    9. '_solution' → logprob: -22.375
    10. '_writer' → logprob: -22.625

Token 835: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.20167040824890137
    2. '(' → logprob: -1.7016704082489014
    3. 'EDGE' → logprob: -9.32667064666748
    4. '(edge' → logprob: -10.07667064666748
    5. '(GL' → logprob: -10.32667064666748
    6. ')' → logprob: -10.95167064666748
    7. '((' → logprob: -11.70167064666748
    8. '(EXIT' → logprob: -11.70167064666748
    9. '(EVENT' → logprob: -11.70167064666748
    10. '(E' → logprob: -11.95167064666748

Token 836: 'LOBAL' (ID: 26366)
  Prédit: 'LOBAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LOBAL' → logprob: -0.00011772842844948173
    2. 'L' → logprob: -9.750117301940918
    3. 'OB' → logprob: -10.375117301940918
    4. 'GLOBAL' → logprob: -10.750117301940918
    5. 'lobal' → logprob: -12.250117301940918
    6. 'LOB' → logprob: -13.625117301940918
    7. 'LO' → logprob: -14.500117301940918
    8. '_GLOBAL' → logprob: -15.875117301940918
    9. 'LOCAL' → logprob: -16.125118255615234
    10. 'AL' → logprob: -18.375118255615234

Token 837: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -0.00043102685594931245
    2. 'N' → logprob: -7.750431060791016
    3. '_' → logprob: -16.375431060791016
    4. '_n' → logprob: -16.625431060791016
    5. '```' → logprob: -17.125431060791016
    6. '_GLOBAL' → logprob: -17.875431060791016
    7. '_B' → logprob: -18.250431060791016
    8. ' N' → logprob: -18.375431060791016
    9. '
' → logprob: -18.625431060791016
    10. '_NODE' → logprob: -18.875431060791016

Token 838: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.706686690449715e-05
    2. ' ,' → logprob: -9.625066757202148
    3. ',
' → logprob: -14.125066757202148
    4. ')' → logprob: -16.37506675720215
    5. '),' → logprob: -18.00006675720215
    6. '   ' → logprob: -18.37506675720215
    7. '```' → logprob: -18.37506675720215
    8. '[' → logprob: -18.50006675720215
    9. '‌,' → logprob: -18.75006675720215
    10. ',[' → logprob: -19.25006675720215

Token 839: ' EDGE' (ID: 165368)
  Prédit: 'EDGE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EDGE' → logprob: -2.935296834039036e-06
    2. ' EDGE' → logprob: -12.75000286102295
    3. 'ED' → logprob: -18.625003814697266
    4. '_EDGE' → logprob: -19.250003814697266
    5. 'Edge' → logprob: -20.250003814697266
    6. 'edge' → logprob: -21.000003814697266
    7. '[' → logprob: -21.875003814697266
    8. '<Edge' → logprob: -23.625003814697266
    9. 'EAR' → logprob: -25.000003814697266
    10. 'ANGLE' → logprob: -25.375003814697266

Token 840: '_LIST' (ID: 25218)
  Prédit: '_LIST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LIST' → logprob: -3.650518920039758e-06
    2. 'LIST' → logprob: -12.625003814697266
    3. '_list' → logprob: -15.750003814697266
    4. '_L' → logprob: -16.875003814697266
    5. '_List' → logprob: -17.250003814697266
    6. 'List' → logprob: -18.750003814697266
    7. '_' → logprob: -19.625003814697266
    8. ' LIST' → logprob: -19.750003814697266
    9. '\' → logprob: -20.250003814697266
    10. ')_' → logprob: -20.375003814697266

Token 841: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00011510594777064398
    2. ')' → logprob: -9.125115394592285
    3. '()))' → logprob: -12.500115394592285
    4. '))
' → logprob: -13.500115394592285
    5. ')))' → logprob: -14.125115394592285
    6. ' ))' → logprob: -16.62511444091797
    7. '[]' → logprob: -17.25011444091797
    8. '])' → logprob: -17.62511444091797
    9. ',' → logprob: -18.25011444091797
    10. '()' → logprob: -18.37511444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 839
Tokens correctement prédits (1ère position, stricte): 407
Tokens correctement prédits (1ère position, avec adaptation): 426
Tokens correctement prédits (top 10): 735
Précision stricte (1ère position): 48.51%
Précision adaptée (1ère position): 50.77%
Précision (top 10): 87.60%
================================================================================
