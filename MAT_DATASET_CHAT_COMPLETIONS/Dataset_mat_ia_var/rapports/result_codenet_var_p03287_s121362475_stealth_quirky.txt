================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
getdef = lambda: [int(x) for x in input().split()]

sz, mod = getdef()
seq = getdef()

carrysum = [0]
for idx in range(sz):
    carrysum.append((carrysum[-1] + seq[idx]) % mod)

bingo = {}
for j in range(1, sz+1):
    val = carrysum[j]
    if val in bingo:
        bingo[val] += 1
    else:
        bingo[val] = 1

score = 0
for key in bingo:
    v = bingo[key]
    if key == 0:
        score += (v * (v + 1)) // 2
    else:
        score += max(0, ((v - 1) * v) // 2)

print(score)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'get' (ID: 522)
  → Token d'amorce (pas de prédiction)

Token 1: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.545462727546692
    2. 'get' → logprob: -1.670462727546692
    3. ' ' → logprob: -1.920462727546692
    4. ' get' → logprob: -2.1704626083374023
    5. ''' → logprob: -2.7954626083374023
    6. '"' → logprob: -3.1704626083374023
    7. ' getattr' → logprob: -3.1704626083374023
    8. ' function' → logprob: -3.6704626083374023
    9. 'lambda' → logprob: -3.6704626083374023
    10. 'def' → logprob: -3.9204626083374023

Token 4: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.051035597920417786
    2. ' ' → logprob: -3.8010356426239014
    3. ' s' → logprob: -4.551035404205322
    4. 'x' → logprob: -5.551035404205322
    5. ' get' → logprob: -6.051035404205322
    6. ' space' → logprob: -6.051035404205322
    7. ' a' → logprob: -6.926035404205322
    8. ' ,' → logprob: -6.926035404205322
    9. '  ' → logprob: -6.926035404205322
    10. ' name' → logprob: -7.426035404205322

Token 5: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6250735521316528
    2. '"' → logprob: -1.7500735521316528
    3. ' __' → logprob: -2.1250734329223633
    4. ' "' → logprob: -2.3750734329223633
    5. ''' → logprob: -2.5000734329223633
    6. ' '' → logprob: -2.7500734329223633
    7. ' []' → logprob: -3.1250734329223633
    8. '__' → logprob: -3.1250734329223633
    9. ' ()' → logprob: -3.7500734329223633
    10. ' None' → logprob: -3.8750734329223633

Token 6: 'int' (ID: 491)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029576157685369253
    2. '1' → logprob: -7.127957820892334
    3. '0' → logprob: -7.252957820892334
    4. '']' → logprob: -7.627957820892334
    5. ']int' → logprob: -9.002957344055176
    6. ' ]' → logprob: -9.252957344055176
    7. ']()' → logprob: -9.252957344055176
    8. ' ' → logprob: -9.377957344055176
    9. '   ' → logprob: -9.627957344055176
    10. '<|end|>' → logprob: -9.627957344055176

Token 7: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01016884483397007
    2. '('' → logprob: -5.01016902923584
    3. '(x' → logprob: -7.13516902923584
    4. ' (' → logprob: -7.26016902923584
    5. ']' → logprob: -7.88516902923584
    6. 's' → logprob: -8.01016902923584
    7. ' ' → logprob: -8.63516902923584
    8. '(s' → logprob: -8.63516902923584
    9. '("' → logprob: -9.38516902923584
    10. '(token' → logprob: -9.63516902923584

Token 8: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04925099015235901
    2. ')]' → logprob: -3.174251079559326
    3. '(' → logprob: -5.799251079559326
    4. '(x' → logprob: -6.674251079559326
    5. ')])' → logprob: -7.424251079559326
    6. '())' → logprob: -8.174250602722168
    7. ' for' → logprob: -8.674250602722168
    8. 'for' → logprob: -8.674250602722168
    9. '),' → logprob: -9.049250602722168
    10. ']' → logprob: -9.674250602722168

Token 9: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6813641786575317
    2. ' for' → logprob: -1.1813641786575317
    3. '(x' → logprob: -1.8063641786575317
    4. ')' → logprob: -4.681364059448242
    5. '(' → logprob: -4.931364059448242
    6. 'x' → logprob: -5.556364059448242
    7. ']' → logprob: -6.681364059448242
    8. ' x' → logprob: -8.431364059448242
    9. '(code' → logprob: -8.806364059448242
    10. '(token' → logprob: -9.056364059448242

Token 10: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.223260298371315
    2. '<|end|>' → logprob: -1.7232602834701538
    3. 'x' → logprob: -4.973260402679443
    4. ' ' → logprob: -6.098260402679443
    5. '<|end|>' → logprob: -6.098260402679443
    6. ' range' → logprob: -6.223260402679443
    7. ' input' → logprob: -6.223260402679443
    8. ' in' → logprob: -6.223260402679443
    9. ' (' → logprob: -6.723260402679443
    10. 'range' → logprob: -6.848260402679443

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01973351277410984
    2. 'in' → logprob: -5.144733428955078
    3. '<|end|>' → logprob: -5.269733428955078
    4. 'input' → logprob: -5.769733428955078
    5. '(input' → logprob: -5.769733428955078
    6. '(' → logprob: -7.519733428955078
    7. ' input' → logprob: -7.519733428955078
    8. '=input' → logprob: -7.894733428955078
    9. 'import' → logprob: -8.394733428955078
    10. 'range' → logprob: -8.894733428955078

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4741489887237549
    2. ' input' → logprob: -0.9741489887237549
    3. 'range' → logprob: -10.849148750305176
    4. '(input' → logprob: -10.974148750305176
    5. 'raw' → logprob: -11.349148750305176
    6. ' raw' → logprob: -12.349148750305176
    7. 'open' → logprob: -12.349148750305176
    8. ' range' → logprob: -12.474148750305176
    9. ' open' → logprob: -13.224148750305176
    10. 'list' → logprob: -13.474148750305176

Token 13: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.15718145668506622
    2. '(' → logprob: -2.65718150138855
    3. '()' → logprob: -2.65718150138855
    4. ']()' → logprob: -6.657181262969971
    5. '().' → logprob: -6.782181262969971
    6. ']' → logprob: -7.032181262969971
    7. '())' → logprob: -7.907181262969971
    8. '()][' → logprob: -8.032181739807129
    9. ')]' → logprob: -8.157181739807129
    10. '()].' → logprob: -9.157181739807129

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003225606167688966
    2. 'strip' → logprob: -5.753225803375244
    3. 'rstrip' → logprob: -10.003225326538086
    4. ' split' → logprob: -13.253225326538086
    5. 'spl' → logprob: -14.003225326538086
    6. '(split' → logprob: -17.378225326538086
    7. 'replace' → logprob: -18.128225326538086
    8. 'read' → logprob: -18.253225326538086
    9. 's' → logprob: -19.003225326538086
    10. ' strip' → logprob: -19.253225326538086

Token 15: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.04579494148492813
    2. '(' → logprob: -3.67079496383667
    3. '()' → logprob: -4.29579496383667
    4. '())' → logprob: -5.29579496383667
    5. '('' → logprob: -7.79579496383667
    6. ')]' → logprob: -9.795794486999512
    7. ']' → logprob: -10.045794486999512
    8. ']()' → logprob: -10.045794486999512
    9. '()],' → logprob: -10.795794486999512
    10. '()][' → logprob: -11.170794486999512

Token 16: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004691306967288256
    2. ')]' → logprob: -5.379691123962402
    3. '])' → logprob: -10.629691123962402
    4. ')' → logprob: -11.254691123962402
    5. '`]' → logprob: -11.254691123962402
    6. '()]' → logprob: -11.754691123962402
    7. '']' → logprob: -12.129691123962402
    8. ' ]' → logprob: -12.379691123962402
    9. ']
' → logprob: -13.754691123962402
    10. '"]' → logprob: -15.004691123962402

Token 17: 'sz' (ID: 13849)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8447824716567993
    2. '#' → logprob: -1.2197824716567993
    3. '[' → logprob: -2.3447823524475098
    4. ',' → logprob: -3.5947823524475098
    5. 'a' → logprob: -3.8447823524475098
    6. 'x' → logprob: -3.9697823524475098
    7. '\' → logprob: -4.09478235244751
    8. ':' → logprob: -4.09478235244751
    9. '\n' → logprob: -4.34478235244751
    10. 'print' → logprob: -4.84478235244751

Token 18: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7317577600479126
    2. ' =' → logprob: -0.8567577600479126
    3. '[' → logprob: -2.981757640838623
    4. '_' → logprob: -3.481757640838623
    5. '(' → logprob: -4.856757640838623
    6. 's' → logprob: -6.731757640838623
    7. '[:]' → logprob: -6.731757640838623
    8. 'z' → logprob: -7.606757640838623
    9. 'e' → logprob: -7.606757640838623
    10. '[]' → logprob: -8.231758117675781

Token 19: ' mod' (ID: 1812)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4280679225921631
    2. 'k' → logprob: -2.803067922592163
    3. ' n' → logprob: -3.178067922592163
    4. 'd' → logprob: -3.428067922592163
    5. 't' → logprob: -3.803067922592163
    6. 'q' → logprob: -4.053068161010742
    7. 'a' → logprob: -4.428068161010742
    8. 'arr' → logprob: -4.553068161010742
    9. ' k' → logprob: -4.803068161010742
    10. 'w' → logprob: -4.803068161010742

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43803420662879944
    2. ' =' → logprob: -1.063034176826477
    3. ',' → logprob: -4.6880340576171875
    4. ' ,' → logprob: -10.563034057617188
    5. ' ' → logprob: -10.813034057617188
    6. '<|end|>' → logprob: -10.938034057617188
    7. ')' → logprob: -12.188034057617188
    8. ' =
' → logprob: -12.688034057617188
    9. '=

' → logprob: -12.813034057617188
    10. '_' → logprob: -13.688034057617188

Token 21: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.5759984850883484
    2. 'get' → logprob: -0.8259984850883484
    3. ' map' → logprob: -10.700998306274414
    4. ' ' → logprob: -11.075998306274414
    5. 'map' → logprob: -11.200998306274414
    6. '0' → logprob: -13.325998306274414
    7. '	get' → logprob: -13.825998306274414
    8. '[get' → logprob: -13.950998306274414
    9. '(get' → logprob: -14.075998306274414
    10. '10' → logprob: -14.575998306274414

Token 22: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -17.25
    3. '(def' → logprob: -18.875
    4. '_def' → logprob: -19.0
    5. '()' → logprob: -19.25
    6. '```' → logprob: -19.25
    7. 'ref' → logprob: -19.5
    8. 'get' → logprob: -19.5
    9. 'Def' → logprob: -19.875
    10. 'de' → logprob: -19.875

Token 23: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.05499910004437e-05
    2. ' ()' → logprob: -9.375090599060059
    3. '(' → logprob: -12.375090599060059
    4. '()
' → logprob: -14.875090599060059
    5. '(),' → logprob: -15.125090599060059
    6. '()]' → logprob: -15.250090599060059
    7. '()

' → logprob: -15.875090599060059
    8. '()[' → logprob: -16.000089645385742
    9. '())' → logprob: -16.500089645385742
    10. '();' → logprob: -16.750089645385742

Token 24: 'seq' (ID: 27794)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34607577323913574
    2. '
' → logprob: -2.3460757732391357
    3. 'n' → logprob: -3.3460757732391357
    4. '<|end|>' → logprob: -3.3460757732391357
    5. ',
' → logprob: -3.7210757732391357
    6. ' ' → logprob: -4.221076011657715
    7. 'a' → logprob: -4.596076011657715
    8. '`' → logprob: -4.846076011657715
    9. 'sz' → logprob: -4.846076011657715
    10. '\n' → logprob: -4.846076011657715

Token 25: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9529515504837036
    2. ' =' → logprob: -1.5779515504837036
    3. '=' → logprob: -1.7029515504837036
    4. '_' → logprob: -2.077951431274414
    5. 'u' → logprob: -2.827951431274414
    6. '.' → logprob: -3.827951431274414
    7. '_len' → logprob: -5.702951431274414
    8. '[u' → logprob: -5.702951431274414
    9. '[:]' → logprob: -6.077951431274414
    10. 'ence' → logprob: -6.202951431274414

Token 26: ' get' (ID: 717)
  Prédit: '[get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[get' → logprob: -0.8337421417236328
    2. ' [' → logprob: -1.5837421417236328
    3. ' []' → logprob: -1.7087421417236328
    4. '[' → logprob: -2.458742141723633
    5. '[]' → logprob: -2.708742141723633
    6. 'get' → logprob: -3.958742141723633
    7. ' get' → logprob: -5.958742141723633
    8. '[int' → logprob: -6.083742141723633
    9. '[list' → logprob: -6.958742141723633
    10. 'list' → logprob: -7.208742141723633

Token 27: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.875
    3. 'ef' → logprob: -18.875
    4. '	def' → logprob: -19.125
    5. 'seq' → logprob: -19.25
    6. 'ref' → logprob: -19.5
    7. 'f' → logprob: -19.75
    8. '```' → logprob: -20.0
    9. '(def' → logprob: -20.0
    10. '  ' → logprob: -20.625

Token 28: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.292907877039397e-06
    2. '()
' → logprob: -14.00000286102295
    3. '()]' → logprob: -14.00000286102295
    4. '()`' → logprob: -15.12500286102295
    5. '(' → logprob: -15.37500286102295
    6. ' ()' → logprob: -15.37500286102295
    7. '();' → logprob: -15.62500286102295
    8. '()

' → logprob: -15.75000286102295
    9. '()<' → logprob: -15.87500286102295
    10. '()\' → logprob: -16.250003814697266

Token 29: 'carry' (ID: 170817)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21002605557441711
    2. '[' → logprob: -2.2100260257720947
    3. ' for' → logprob: -3.8350260257720947
    4. '<|end|>' → logprob: -4.085026264190674
    5. 'n' → logprob: -4.835026264190674
    6. 's' → logprob: -5.085026264190674
    7. 'result' → logprob: -5.085026264190674
    8. '#' → logprob: -5.210026264190674
    9. '
' → logprob: -6.210026264190674
    10. 'a' → logprob: -6.335026264190674

Token 30: 'sum' (ID: 12298)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14780761301517487
    2. '=' → logprob: -2.0228075981140137
    3. '_' → logprob: -5.522807598114014
    4. ',' → logprob: -7.647807598114014
    5. ' ' → logprob: -8.272808074951172
    6. 's' → logprob: -8.772808074951172
    7. ' +=' → logprob: -9.272808074951172
    8. ' ,' → logprob: -10.397808074951172
    9. '  ' → logprob: -10.897808074951172
    10. '.' → logprob: -11.022808074951172

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05103186145424843
    2. '=' → logprob: -3.1760318279266357
    3. '_' → logprob: -5.051032066345215
    4. 's' → logprob: -6.676032066345215
    5. ' ' → logprob: -8.551032066345215
    6. '[' → logprob: -10.051032066345215
    7. ',' → logprob: -10.426032066345215
    8. '(' → logprob: -10.676032066345215
    9. '_=' → logprob: -11.551032066345215
    10. '  ' → logprob: -11.676032066345215

Token 32: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.051745712757110596
    2. ' ' → logprob: -3.301745653152466
    3. '[' → logprob: -4.801745891571045
    4. 'seq' → logprob: -6.051745891571045
    5. ' [' → logprob: -6.176745891571045
    6. ' seq' → logprob: -7.176745891571045
    7. 'sum' → logprob: -9.676745414733887
    8. '[]' → logprob: -10.426745414733887
    9. '[s' → logprob: -10.676745414733887
    10. '(seq' → logprob: -10.926745414733887

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021569548698607832
    2. 'seq' → logprob: -8.875215530395508
    3. ' ' → logprob: -9.625215530395508
    4. 'sz' → logprob: -12.875215530395508
    5. '-' → logprob: -13.750215530395508
    6. ' seq' → logprob: -14.062715530395508
    7. '(' → logprob: -14.187715530395508
    8. '1' → logprob: -14.312715530395508
    9. '[' → logprob: -14.375215530395508
    10. '(seq' → logprob: -14.437715530395508

Token 34: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006425217725336552
    2. ']*(' → logprob: -5.131425380706787
    3. ']*' → logprob: -8.381424903869629
    4. ',' → logprob: -8.506424903869629
    5. ']+' → logprob: -10.756424903869629
    6. ' ]' → logprob: -11.006424903869629
    7. ' for' → logprob: -12.131424903869629
    8. ']
' → logprob: -12.756424903869629
    9. ')' → logprob: -12.756424903869629
    10. '](' → logprob: -13.006424903869629

Token 35: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0686851218342781
    2. ' for' → logprob: -2.9436850547790527
    3. '0' → logprob: -5.568685054779053
    4. 'total' → logprob: -6.068685054779053
    5. 'current' → logprob: -6.193685054779053
    6. 'curr' → logprob: -6.568685054779053
    7. 'cur' → logprob: -6.568685054779053
    8. 'c' → logprob: -6.943685054779053
    9. 's' → logprob: -7.818685054779053
    10. 'carry' → logprob: -8.193685531616211

Token 36: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3761383295059204
    2. 'i' → logprob: -1.3761383295059204
    3. 'x' → logprob: -3.751138210296631
    4. ' x' → logprob: -3.876138210296631
    5. ' num' → logprob: -4.626138210296631
    6. 'num' → logprob: -5.626138210296631
    7. 'v' → logprob: -7.376138210296631
    8. ' val' → logprob: -7.376138210296631
    9. ' v' → logprob: -7.501138210296631
    10. 'n' → logprob: -7.876138210296631

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09342257678508759
    2. 'in' → logprob: -2.4684226512908936
    3. ',' → logprob: -5.4684224128723145
    4. ' ' → logprob: -8.718422889709473
    5. ' ,' → logprob: -9.968422889709473
    6. '	in' → logprob: -10.718422889709473
    7. ',in' → logprob: -11.718422889709473
    8. '_in' → logprob: -13.343422889709473
    9. '  ' → logprob: -13.343422889709473
    10. '1' → logprob: -13.718422889709473

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38690900802612305
    2. ' range' → logprob: -1.136909008026123
    3. ' ' → logprob: -11.511909484863281
    4. '	range' → logprob: -11.636909484863281
    5. 'seq' → logprob: -12.011909484863281
    6. '   ' → logprob: -12.261909484863281
    7. '  ' → logprob: -13.386909484863281
    8. ' seq' → logprob: -13.386909484863281
    9. 'sequence' → logprob: -13.761909484863281
    10. '(range' → logprob: -13.886909484863281

Token 39: '(sz' (ID: 80788)
  Prédit: '(sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sz' → logprob: -0.06203232705593109
    2. '(' → logprob: -2.8120322227478027
    3. '(len' → logprob: -9.812032699584961
    4. ' sz' → logprob: -12.687032699584961
    5. '(seq' → logprob: -12.937032699584961
    6. ' (' → logprob: -13.062032699584961
    7. '(s' → logprob: -14.187032699584961
    8. 'sz' → logprob: -15.312032699584961
    9. '(size' → logprob: -15.437032699584961
    10. ' ' → logprob: -15.562032699584961

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.031082194298505783
    2. '+' → logprob: -3.7810821533203125
    3. '):
' → logprob: -5.1560821533203125
    4. ' +' → logprob: -6.7810821533203125
    5. ' ):' → logprob: -7.6560821533203125
    6. '-' → logprob: -8.531082153320312
    7. ')' → logprob: -9.281082153320312
    8. ' -' → logprob: -9.781082153320312
    9. ',' → logprob: -10.531082153320312
    10. '):
' → logprob: -11.031082153320312

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12044325470924377
    2. ' carry' → logprob: -2.245443344116211
    3. '	c' → logprob: -5.245443344116211
    4. 'carry' → logprob: -7.245443344116211
    5. '```' → logprob: -7.870443344116211
    6. ' c' → logprob: -8.370443344116211
    7. ' new' → logprob: -8.620443344116211
    8. ' s' → logprob: -8.870443344116211
    9. ',' → logprob: -9.120443344116211
    10. ' carr' → logprob: -9.870443344116211

Token 42: ' carry' (ID: 9852)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' (adapté à ' carry') → logprob: -0.5309927463531494
    2. ' carry' → logprob: -1.0309927463531494
    3. '   ' → logprob: -2.9059927463531494
    4. 'c' → logprob: -9.15599250793457
    5. ' carr' → logprob: -9.53099250793457
    6. ' (' → logprob: -9.65599250793457
    7. 'seq' → logprob: -9.65599250793457
    8. '+' → logprob: -10.46849250793457
    9. 'car' → logprob: -10.65599250793457
    10. '```' → logprob: -10.65599250793457

Token 43: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -5.741137283621356e-05
    2. '   ' → logprob: -9.875057220458984
    3. '  ' → logprob: -13.375057220458984
    4. 's' → logprob: -13.375057220458984
    5. '_sum' → logprob: -14.375057220458984
    6. ' =' → logprob: -14.375057220458984
    7. ' ' → logprob: -14.625057220458984
    8. '=' → logprob: -15.375057220458984
    9. ' sum' → logprob: -15.500057220458984
    10. ',' → logprob: -15.750057220458984

Token 44: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008155063726007938
    2. '[-' → logprob: -5.13315486907959
    3. '.' → logprob: -7.00815486907959
    4. '+' → logprob: -7.50815486907959
    5. '[' → logprob: -8.13315486907959
    6. '.extend' → logprob: -8.63315486907959
    7. ' .' → logprob: -9.38315486907959
    8. '=' → logprob: -9.50815486907959
    9. 'append' → logprob: -9.88315486907959
    10. ' +=' → logprob: -10.63315486907959

Token 45: '((' (ID: 2054)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.002939309924840927
    2. '(' → logprob: -6.002939224243164
    3. ' (' → logprob: -8.127939224243164
    4. 'carry' → logprob: -9.627939224243164
    5. ' carry' → logprob: -10.252939224243164
    6. '((' → logprob: -10.752939224243164
    7. '   ' → logprob: -10.877939224243164
    8. ' ' → logprob: -12.127939224243164
    9. '(seq' → logprob: -12.627939224243164
    10. '(nums' → logprob: -12.752939224243164

Token 46: 'carry' (ID: 170817)
  Prédit: 'carry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.06299259513616562
    2. 'car' → logprob: -3.187992572784424
    3. ' carry' → logprob: -4.062992572784424
    4. 'seq' → logprob: -6.937992572784424
    5. '   ' → logprob: -7.562992572784424
    6. 'sequence' → logprob: -7.937992572784424
    7. ' ' → logprob: -8.437993049621582
    8. 'c' → logprob: -9.062993049621582
    9. ' car' → logprob: -9.312993049621582
    10. '  ' → logprob: -9.687993049621582

Token 47: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -7.433829159708694e-05
    2. '[' → logprob: -11.50007438659668
    3. ' ' → logprob: -11.62507438659668
    4. 'um' → logprob: -11.75007438659668
    5. '   ' → logprob: -11.87507438659668
    6. '  ' → logprob: -12.25007438659668
    7. ' sum' → logprob: -12.25007438659668
    8. 'sm' → logprob: -12.37507438659668
    9. 'carry' → logprob: -12.37507438659668
    10. '[i' → logprob: -13.12507438659668

Token 48: '[-' (ID: 17503)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.5759482979774475
    2. '[-' → logprob: -0.8259482979774475
    3. '[' → logprob: -12.075948715209961
    4. '   ' → logprob: -13.950948715209961
    5. 'idx' → logprob: -14.700948715209961
    6. '```' → logprob: -14.700948715209961
    7. ' ' → logprob: -14.825948715209961
    8. ' idx' → logprob: -14.825948715209961
    9. '[end' → logprob: -15.200948715209961
    10. ' [-' → logprob: -15.950948715209961

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.551721889991313e-05
    2. 'idx' → logprob: -10.250065803527832
    3. '-' → logprob: -10.625065803527832
    4. ' ' → logprob: -13.250065803527832
    5. ' idx' → logprob: -13.250065803527832
    6. '(idx' → logprob: -13.875065803527832
    7. ' -' → logprob: -14.000065803527832
    8. ']' → logprob: -15.875065803527832
    9. '   ' → logprob: -16.375064849853516
    10. '```' → logprob: -17.250064849853516

Token 50: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34872952103614807
    2. ' +' → logprob: -1.2237294912338257
    3. ']+' → logprob: -8.973729133605957
    4. ')+' → logprob: -9.723729133605957
    5. ' ' → logprob: -10.473729133605957
    6. ' plus' → logprob: -10.723729133605957
    7. '   ' → logprob: -11.473729133605957
    8. ']' → logprob: -12.098729133605957
    9. ')' → logprob: -12.098729133605957
    10. '>' → logprob: -12.536229133605957

Token 51: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6326489448547363
    2. '+' → logprob: -0.7576489448547363
    3. ' plus' → logprob: -10.632648468017578
    4. ' ' → logprob: -11.882648468017578
    5. ' ' → logprob: -12.257648468017578
    6. ' +
' → logprob: -12.757648468017578
    7. 'plus' → logprob: -13.570148468017578
    8. '+
' → logprob: -14.007648468017578
    9. '   ' → logprob: -14.070148468017578
    10. ' +

' → logprob: -14.132648468017578

Token 52: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.3487335741519928
    2. 'seq' → logprob: -1.2237335443496704
    3. ' mod' → logprob: -9.473733901977539
    4. '(seq' → logprob: -9.473733901977539
    5. ' (' → logprob: -9.973733901977539
    6. '   ' → logprob: -10.098733901977539
    7. ' ' → logprob: -11.223733901977539
    8. 'mod' → logprob: -11.473733901977539
    9. ' sequence' → logprob: -11.723733901977539
    10. '(' → logprob: -13.348733901977539

Token 53: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.644463479053229e-05
    2. '[' → logprob: -10.125046730041504
    3. ' [' → logprob: -12.750046730041504
    4. 'idx' → logprob: -13.250046730041504
    5. '   ' → logprob: -14.625046730041504
    6. ' idx' → logprob: -15.125046730041504
    7. '[
' → logprob: -15.625046730041504
    8. '[id' → logprob: -15.625046730041504
    9. '```' → logprob: -16.000045776367188
    10. ')' → logprob: -16.375045776367188

Token 54: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002103275153785944
    2. '])' → logprob: -6.752103328704834
    3. ')%' → logprob: -7.252103328704834
    4. ' )' → logprob: -9.502102851867676
    5. '))' → logprob: -9.502102851867676
    6. ']' → logprob: -10.502102851867676
    7. '%' → logprob: -11.127102851867676
    8. '   ' → logprob: -11.377102851867676
    9. '）' → logprob: -11.752102851867676
    10. '`)' → logprob: -13.002102851867676

Token 55: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.49865883588790894
    2. ' %' → logprob: -0.9986588358879089
    3. ')' → logprob: -3.7486588954925537
    4. ')%' → logprob: -7.248658657073975
    5. ' )' → logprob: -11.373659133911133
    6. ' ' → logprob: -12.123659133911133
    7. '%c' → logprob: -13.748659133911133
    8. '%)' → logprob: -14.248659133911133
    9. '%s' → logprob: -14.623659133911133
    10. '%n' → logprob: -14.748659133911133

Token 56: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.3869294226169586
    2. 'mod' → logprob: -1.1369293928146362
    3. '(mod' → logprob: -10.386929512023926
    4. ' ' → logprob: -10.886929512023926
    5. '	mod' → logprob: -12.761929512023926
    6. ' ' → logprob: -13.511929512023926
    7. '32' → logprob: -14.761929512023926
    8. ' modul' → logprob: -14.886929512023926
    9. '_mod' → logprob: -14.886929512023926
    10. 'space' → logprob: -15.011929512023926

Token 57: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -16.125
    4. ')`' → logprob: -17.625
    5. '))' → logprob: -18.375
    6. '),' → logprob: -18.875
    7. ')return' → logprob: -19.625
    8. ')

' → logprob: -19.75
    9. '```' → logprob: -20.0
    10. ')#' → logprob: -20.25

Token 58: 'b' (ID: 65)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5755719542503357
    2. 'max' → logprob: -1.8255720138549805
    3. 'result' → logprob: -2.5755720138549805
    4. 'res' → logprob: -3.2005720138549805
    5. 'n' → logprob: -3.3255720138549805
    6. 'ans' → logprob: -4.3255720138549805
    7. 'i' → logprob: -4.3255720138549805
    8. 'dp' → logprob: -4.5755720138549805
    9. 'k' → logprob: -4.7005720138549805
    10. 'answer' → logprob: -4.8255720138549805

Token 59: 'ingo' (ID: 14878)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8278146386146545
    2. 'reak' → logprob: -1.8278145790100098
    3. 'est' → logprob: -1.9528145790100098
    4. 'i' → logprob: -2.9528145790100098
    5. 'in' → logprob: -3.2028145790100098
    6. 'search' → logprob: -3.4528145790100098
    7. 'inary' → logprob: -3.8278145790100098
    8. 'l' → logprob: -4.57781457901001
    9. 'u' → logprob: -4.57781457901001
    10. 'e' → logprob: -4.57781457901001

Token 60: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22377917170524597
    2. '=' → logprob: -2.3487792015075684
    3. '(' → logprob: -3.3487792015075684
    4. ' =' → logprob: -3.8487792015075684
    5. '_' → logprob: -4.098779201507568
    6. ':' → logprob: -4.348779201507568
    7. '.' → logprob: -5.598779201507568
    8. '[:]' → logprob: -5.723779201507568
    9. '!' → logprob: -6.098779201507568
    10. '#' → logprob: -6.473779201507568

Token 61: ' {}
' (ID: 11421)
  Prédit: 'carry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'carry' → logprob: -0.9965858459472656
    2. '0' → logprob: -1.2465858459472656
    3. ' [' → logprob: -2.3715858459472656
    4. '[' → logprob: -2.6215858459472656
    5. ' carry' → logprob: -2.6215858459472656
    6. ' ' → logprob: -2.8715858459472656
    7. ' sz' → logprob: -4.871585845947266
    8. ' []' → logprob: -5.121585845947266
    9. ' (' → logprob: -5.246585845947266
    10. 'sz' → logprob: -5.621585845947266

Token 62: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.052238237112760544
    2. 'result' → logprob: -4.177238464355469
    3. 'res' → logprob: -4.802238464355469
    4. 'ans' → logprob: -5.302238464355469
    5. 'answer' → logprob: -5.552238464355469
    6. 'cur' → logprob: -5.802238464355469
    7. 'count' → logprob: -5.927238464355469
    8. 'total' → logprob: -6.302238464355469
    9. 'dp' → logprob: -6.677238464355469
    10. 'max' → logprob: -6.927238464355469

Token 63: ' j' (ID: 441)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.146929144859314
    2. ' i' → logprob: -1.396929144859314
    3. 'i' → logprob: -1.771929144859314
    4. 'idx' → logprob: -2.0219292640686035
    5. ' val' → logprob: -3.5219292640686035
    6. ' length' → logprob: -3.7719292640686035
    7. 'x' → logprob: -4.2719292640686035
    8. ' x' → logprob: -4.3969292640686035
    9. 'val' → logprob: -5.0219292640686035
    10. ' value' → logprob: -5.5219292640686035

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1281639039516449
    2. 'in' → logprob: -2.1281638145446777
    3. 'x' → logprob: -7.753163814544678
    4. 'n' → logprob: -8.128164291381836
    5. ' ' → logprob: -8.628164291381836
    6. 'dx' → logprob: -9.003164291381836
    7. 'range' → logprob: -10.003164291381836
    8. ',' → logprob: -10.628164291381836
    9. 'ex' → logprob: -10.753164291381836
    10. '   ' → logprob: -11.128164291381836

Token 65: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12717072665691376
    2. ' range' → logprob: -2.1271708011627197
    3. 'carry' → logprob: -9.00217056274414
    4. 'in' → logprob: -11.12717056274414
    5. ' ' → logprob: -11.37717056274414
    6. '(range' → logprob: -11.50217056274414
    7. 'b' → logprob: -11.50217056274414
    8. ' in' → logprob: -11.50217056274414
    9. ' carry' → logprob: -12.00217056274414
    10. 'idx' → logprob: -12.00217056274414

Token 66: '(' (ID: 7)
  Prédit: '(sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sz' → logprob: -0.025118112564086914
    2. '(' → logprob: -3.775118112564087
    3. '(s' → logprob: -6.775117874145508
    4. ' sz' → logprob: -8.275117874145508
    5. '(j' → logprob: -8.650117874145508
    6. '(idx' → logprob: -8.775117874145508
    7. 'sz' → logprob: -9.775117874145508
    8. '1' → logprob: -10.525117874145508
    9. ' (' → logprob: -11.525117874145508
    10. '(z' → logprob: -11.900117874145508

Token 67: '1' (ID: 16)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.012326451018452644
    2. '1' → logprob: -4.762326240539551
    3. ' sz' → logprob: -6.512326240539551
    4. 'j' → logprob: -7.387326240539551
    5. '(sz' → logprob: -7.512326240539551
    6. '2' → logprob: -7.762326240539551
    7. '0' → logprob: -8.38732624053955
    8. 'idx' → logprob: -9.26232624053955
    9. '   ' → logprob: -9.63732624053955
    10. 'b' → logprob: -10.01232624053955

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004090274218469858
    2. ' ,' → logprob: -5.504090309143066
    3. ' sz' → logprob: -12.879090309143066
    4. ' ' → logprob: -12.879090309143066
    5. '   ' → logprob: -13.254090309143066
    6. 'sz' → logprob: -13.379090309143066
    7. ',len' → logprob: -13.504090309143066
    8. ',s' → logprob: -14.129090309143066
    9. '(sz' → logprob: -14.379090309143066
    10. '  ' → logprob: -15.504090309143066

Token 69: ' sz' (ID: 8515)
  Prédit: ' sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sz' → logprob: -0.04310470074415207
    2. 'sz' → logprob: -3.168104648590088
    3. '(sz' → logprob: -9.793105125427246
    4. ' ' → logprob: -10.418105125427246
    5. '   ' → logprob: -12.168105125427246
    6. ' len' → logprob: -12.793105125427246
    7. '  ' → logprob: -13.293105125427246
    8. 'len' → logprob: -13.418105125427246
    9. '.sz' → logprob: -13.543105125427246
    10. '_sz' → logprob: -14.043105125427246

Token 70: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08903183788061142
    2. ' +' → logprob: -2.464031934738159
    3. '):' → logprob: -9.339032173156738
    4. '   ' → logprob: -13.714032173156738
    5. '-' → logprob: -13.839032173156738
    6. '):
' → logprob: -14.339032173156738
    7. ' ' → logprob: -14.589032173156738
    8. ')' → logprob: -14.964032173156738
    9. ' -' → logprob: -15.464032173156738
    10. ' ):' → logprob: -15.714032173156738

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3319124011322856e-05
    2. ' ' → logprob: -10.750022888183594
    3. '2' → logprob: -13.625022888183594
    4. ')' → logprob: -15.375022888183594
    5. '):' → logprob: -15.875022888183594
    6. '):
' → logprob: -16.000022888183594
    7. '   ' → logprob: -17.000022888183594
    8. '```' → logprob: -17.250022888183594
    9. '
' → logprob: -17.500022888183594
    10. '):

' → logprob: -18.750022888183594

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002199740381911397
    2. ':' → logprob: -6.252199649810791
    3. ')' → logprob: -9.37720012664795
    4. '+' → logprob: -9.87720012664795
    5. ' ):' → logprob: -9.87720012664795
    6. '):
' → logprob: -10.25220012664795
    7. ',' → logprob: -10.37720012664795
    8. ']:' → logprob: -12.00220012664795
    9. '}:' → logprob: -12.50220012664795
    10. '   ' → logprob: -12.75220012664795

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012315966188907623
    2. ' for' → logprob: -4.76231575012207
    3. '<|end|>' → logprob: -5.76231575012207
    4. ' ' → logprob: -9.01231575012207
    5. ',' → logprob: -9.13731575012207
    6. 'for' → logprob: -9.51231575012207
    7. '```' → logprob: -9.76231575012207
    8. '<|end|>' → logprob: -10.38731575012207
    9. '	for' → logprob: -10.51231575012207
    10. '...' → logprob: -10.63731575012207

Token 74: ' val' (ID: 1459)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07861103117465973
    2. 'for' → logprob: -3.453611135482788
    3. '   ' → logprob: -3.703611135482788
    4. ' k' → logprob: -5.203610897064209
    5. ' key' → logprob: -5.703610897064209
    6. ' val' → logprob: -5.953610897064209
    7. 'k' → logprob: -6.328610897064209
    8. ' prefix' → logprob: -6.828610897064209
    9. ' i' → logprob: -7.328610897064209
    10. ' sum' → logprob: -7.828610897064209

Token 75: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760824084281921
    2. ' =' → logprob: -0.8260824084281921
    3. ')' → logprob: -9.701082229614258
    4. ',' → logprob: -10.451082229614258
    5. ']' → logprob: -10.576082229614258
    6. 's' → logprob: -12.201082229614258
    7. '=int' → logprob: -12.201082229614258
    8. ' ' → logprob: -12.951082229614258
    9. '   ' → logprob: -13.451082229614258
    10. '=j' → logprob: -13.826082229614258

Token 76: ' carry' (ID: 9852)
  Prédit: ' carry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carry' → logprob: -0.39786091446876526
    2. 'carry' → logprob: -1.1478608846664429
    3. 'c' → logprob: -5.897861003875732
    4. '(c' → logprob: -6.022861003875732
    5. ' (' → logprob: -6.397861003875732
    6. '   ' → logprob: -6.897861003875732
    7. ' carries' → logprob: -7.022861003875732
    8. ' carr' → logprob: -7.272861003875732
    9. 'car' → logprob: -7.522861003875732
    10. ' ' → logprob: -8.397860527038574

Token 77: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -6.034592388459714e-06
    2. 'val' → logprob: -13.375005722045898
    3. '   ' → logprob: -14.000005722045898
    4. 's' → logprob: -14.375005722045898
    5. ' sum' → logprob: -14.625005722045898
    6. ' ' → logprob: -14.750005722045898
    7. 'j' → logprob: -14.875005722045898
    8. '[j' → logprob: -15.125005722045898
    9. '  ' → logprob: -15.375005722045898
    10. '<|end|>' → logprob: -15.375005722045898

Token 78: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00028946425300091505
    2. '[-' → logprob: -8.250289916992188
    3. '[' → logprob: -11.000289916992188
    4. '[val' → logprob: -12.250289916992188
    5. 'j' → logprob: -13.500289916992188
    6. '   ' → logprob: -13.625289916992188
    7. '[i' → logprob: -13.875289916992188
    8. '```' → logprob: -14.625289916992188
    9. ' [' → logprob: -14.875289916992188
    10. ' ' → logprob: -15.375289916992188

Token 79: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006439668592065573
    2. '-' → logprob: -6.006439685821533
    3. ' -' → logprob: -6.131439685821533
    4. ' ]' → logprob: -6.756439685821533
    5. ']%' → logprob: -7.756439685821533
    6. '])' → logprob: -10.131439208984375
    7. ']-' → logprob: -10.506439208984375
    8. ')' → logprob: -11.256439208984375
    9. ')]' → logprob: -11.256439208984375
    10. '%' → logprob: -11.256439208984375

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005130457691848278
    2. '%' → logprob: -6.130130290985107
    3. '-' → logprob: -6.755130290985107
    4. ' %' → logprob: -7.880130290985107
    5. '    
' → logprob: -8.505130767822266
    6. ' if' → logprob: -8.630130767822266
    7. ' =' → logprob: -9.005130767822266
    8. '=' → logprob: -9.130130767822266
    9. '
' → logprob: -9.130130767822266
    10. '+' → logprob: -9.255130767822266

Token 81: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10685472935438156
    2. 'b' → logprob: -3.1068546772003174
    3. ' if' → logprob: -3.3568546772003174
    4. '   ' → logprob: -4.3568549156188965
    5. 'for' → logprob: -4.9818549156188965
    6. 'count' → logprob: -7.2318549156188965
    7. ' for' → logprob: -8.106854438781738
    8. ' b' → logprob: -8.981854438781738
    9. ' ' → logprob: -9.356854438781738
    10. '
' → logprob: -9.356854438781738

Token 82: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.00029852005536668
    2. 'val' → logprob: -8.125298500061035
    3. ' not' → logprob: -13.375298500061035
    4. '(val' → logprob: -14.875298500061035
    5. '	val' → logprob: -14.875298500061035
    6. ' b' → logprob: -16.37529945373535
    7. ' bingo' → logprob: -17.00029945373535
    8. '[val' → logprob: -17.25029945373535
    9. '_val' → logprob: -17.37529945373535
    10. ' v' → logprob: -17.62529945373535

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3583691716194153
    2. ' not' → logprob: -1.2333691120147705
    3. 'in' → logprob: -4.73336935043335
    4. 'not' → logprob: -6.98336935043335
    5. ' ' → logprob: -9.108368873596191
    6. ' ==' → logprob: -10.858368873596191
    7. ')' → logprob: -11.858368873596191
    8. '==' → logprob: -12.733368873596191
    9. '<|end|>' → logprob: -12.983368873596191
    10. ' no' → logprob: -13.608368873596191

Token 84: ' bingo' (ID: 65141)
  Prédit: ' bingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bingo' → logprob: -0.2814893126487732
    2. 'b' → logprob: -1.406489372253418
    3. ' ' → logprob: -8.656489372253418
    4. ' b' → logprob: -8.906489372253418
    5. '	b' → logprob: -11.906489372253418
    6. ' Bingo' → logprob: -12.531489372253418
    7. 'bing' → logprob: -12.906489372253418
    8. ' bing' → logprob: -13.031489372253418
    9. ' ' → logprob: -13.968989372253418
    10. ')b' → logprob: -14.093989372253418

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017481597024016082
    2. ' :' → logprob: -8.875174522399902
    3. '):' → logprob: -11.375174522399902
    4. ' and' → logprob: -11.625174522399902
    5. ':
' → logprob: -12.250174522399902
    6. 'and' → logprob: -13.375174522399902
    7. '=' → logprob: -13.500174522399902
    8. '==' → logprob: -13.625174522399902
    9. '.keys' → logprob: -13.625174522399902
    10. ':return' → logprob: -13.625174522399902

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011907526291906834
    2. 'b' → logprob: -4.886907577514648
    3. ' bingo' → logprob: -5.761907577514648
    4. ' b' → logprob: -7.011907577514648
    5. ',' → logprob: -9.886907577514648
    6. '   ' → logprob: -10.261907577514648
    7. ' continue' → logprob: -11.011907577514648
    8. '        
' → logprob: -11.136907577514648
    9. ' Bingo' → logprob: -11.136907577514648
    10. ':' → logprob: -11.636907577514648

Token 87: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6730718612670898
    2. '       ' → logprob: -1.4230718612670898
    3. ' bingo' → logprob: -2.42307186126709
    4. ' print' → logprob: -2.79807186126709
    5. '           ' → logprob: -3.54807186126709
    6. 'print' → logprob: -3.79807186126709
    7. ' b' → logprob: -4.29807186126709
    8. ' break' → logprob: -4.29807186126709
    9. ' True' → logprob: -5.67307186126709
    10. 'break' → logprob: -6.04807186126709

Token 88: '[val' (ID: 162482)
  Prédit: '[val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -0.00047952806926332414
    2. '[j' → logprob: -7.750479698181152
    3. '[' → logprob: -10.250479698181152
    4. 'val' → logprob: -12.000479698181152
    5. '.setdefault' → logprob: -13.125479698181152
    6. '][' → logprob: -14.125479698181152
    7. ',val' → logprob: -14.500479698181152
    8. '[value' → logprob: -14.875479698181152
    9. '```' → logprob: -14.875479698181152
    10. '[v' → logprob: -15.125479698181152

Token 89: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15218187868595123
    2. '].' → logprob: -2.02718186378479
    3. ']+=' → logprob: -4.902182102203369
    4. ']=' → logprob: -6.777182102203369
    5. ' ].' → logprob: -8.277181625366211
    6. ' ]' → logprob: -8.652181625366211
    7. '.append' → logprob: -8.902181625366211
    8. '+' → logprob: -9.902181625366211
    9. '][' → logprob: -10.027181625366211
    10. ' +=' → logprob: -10.277181625366211

Token 90: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.9439712762832642
    2. ' +=' → logprob: -1.3189712762832642
    3. '.append' → logprob: -1.5689712762832642
    4. '=' → logprob: -2.3189711570739746
    5. ' =' → logprob: -3.9439711570739746
    6. '+' → logprob: -4.193971157073975
    7. '<|end|>' → logprob: -7.318971157073975
    8. ' +' → logprob: -7.818971157073975
    9. '[' → logprob: -8.193971633911133
    10. '.' → logprob: -8.443971633911133

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.376928329467773
    4. '<|end|>' → logprob: -16.751928329467773
    5. '```' → logprob: -18.251928329467773
    6. '0' → logprob: -18.376928329467773
    7. '  ' → logprob: -18.626928329467773
    8. ' ' → logprob: -18.626928329467773
    9. '+' → logprob: -19.251928329467773
    10. 's' → logprob: -19.876928329467773

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.375335693359375
    4. '```' → logprob: -18.375335693359375
    5. ' ' → logprob: -19.500335693359375
    6. '  ' → logprob: -19.562835693359375
    7. 'b' → logprob: -19.687835693359375
    8. '<|end|>' → logprob: -19.687835693359375
    9. '-' → logprob: -20.375335693359375
    10. '+' → logprob: -20.375335693359375

Token 93: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.653628945350647
    2. '   ' → logprob: -1.153628945350647
    3. ' else' → logprob: -1.903628945350647
    4. '<|end|>' → logprob: -4.278628826141357
    5. '	else' → logprob: -7.653628826141357
    6. '       ' → logprob: -7.778628826141357
    7. ')' → logprob: -8.653629302978516
    8. '```' → logprob: -9.778629302978516
    9. '    
' → logprob: -9.903629302978516
    10. '<|end|>' → logprob: -9.903629302978516

Token 94: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0632900670170784
    2. '   ' → logprob: -3.1882901191711426
    3. ' else' → logprob: -3.9382901191711426
    4. '<|end|>' → logprob: -8.188289642333984
    5. '	else' → logprob: -9.063289642333984
    6. '       ' → logprob: -9.313289642333984
    7. '```' → logprob: -9.563289642333984
    8. ')' → logprob: -10.813289642333984
    9. '=' → logprob: -12.063289642333984
    10. 'elif' → logprob: -12.188289642333984

Token 95: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04077570140361786
    2. ' else' → logprob: -3.290775775909424
    3. '   ' → logprob: -5.915775775909424
    4. '	else' → logprob: -10.415775299072266
    5. 'e' → logprob: -14.040775299072266
    6. '<|end|>' → logprob: -14.415775299072266
    7. '```' → logprob: -14.540775299072266
    8. '    
' → logprob: -14.790775299072266
    9. 'elif' → logprob: -15.165775299072266
    10. ' ' → logprob: -15.290775299072266

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011735594598576427
    2. '       ' → logprob: -7.126173496246338
    3. ':
' → logprob: -8.376173973083496
    4. '=' → logprob: -9.251173973083496
    5. '   ' → logprob: -10.751173973083496
    6. ' =' → logprob: -11.751173973083496
    7. ' :' → logprob: -12.376173973083496
    8. '<|end|>' → logprob: -13.376173973083496
    9. '):' → logprob: -13.751173973083496
    10. '{' → logprob: -13.876173973083496

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06281886249780655
    2. 'b' → logprob: -2.937818765640259
    3. ' bingo' → logprob: -5.062819004058838
    4. '   ' → logprob: -6.687819004058838
    5. ' b' → logprob: -8.31281852722168
    6. ' ' → logprob: -10.93781852722168
    7. '```' → logprob: -11.06281852722168
    8. '      ' → logprob: -11.56281852722168
    9. '{' → logprob: -11.68781852722168
    10. '	b' → logprob: -11.81281852722168

Token 98: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03810609132051468
    2. ' bingo' → logprob: -3.2881062030792236
    3. '   ' → logprob: -10.288105964660645
    4. '       ' → logprob: -10.663105964660645
    5. ' b' → logprob: -12.538105964660645
    6. '	b' → logprob: -13.413105964660645
    7. ' ' → logprob: -13.413105964660645
    8. '```' → logprob: -15.663105964660645
    9. '  ' → logprob: -16.41310691833496
    10. ' Bingo' → logprob: -16.53810691833496

Token 99: '[val' (ID: 162482)
  Prédit: '[val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -0.000627610192168504
    2. '[' → logprob: -7.375627517700195
    3. 'val' → logprob: -15.000627517700195
    4. '=' → logprob: -15.000627517700195
    5. '[
' → logprob: -15.750627517700195
    6. '[...]' → logprob: -15.875627517700195
    7. '\[' → logprob: -16.625627517700195
    8. '```' → logprob: -17.250627517700195
    9. '[v' → logprob: -18.125627517700195
    10. '[value' → logprob: -18.125627517700195

Token 100: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001224870327860117
    2. ']=' → logprob: -7.376224994659424
    3. '=' → logprob: -7.751224994659424
    4. ' =' → logprob: -8.751224517822266
    5. ' ]' → logprob: -11.876224517822266
    6. ')' → logprob: -13.376224517822266
    7. '']' → logprob: -15.376224517822266
    8. '"]' → logprob: -15.876224517822266
    9. '[' → logprob: -16.126224517822266
    10. '<|end|>' → logprob: -16.376224517822266

Token 101: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007100477814674377
    2. ' =' → logprob: -7.2507100105285645
    3. '=
' → logprob: -18.125709533691406
    4. ' ' → logprob: -19.625709533691406
    5. ')' → logprob: -19.625709533691406
    6. '=

' → logprob: -20.125709533691406
    7. '＝' → logprob: -20.125709533691406
    8. ']=' → logprob: -20.375709533691406
    9. ']' → logprob: -20.625709533691406
    10. ')=' → logprob: -20.625709533691406

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021874953527003527
    2. ' ' → logprob: -6.127187728881836
    3. '0' → logprob: -13.377187728881836
    4. '   ' → logprob: -14.002187728881836
    5. '  ' → logprob: -18.627187728881836
    6. '```' → logprob: -19.002187728881836
    7. '    ' → logprob: -19.252187728881836
    8. '<|end|>' → logprob: -19.877187728881836
    9. '2' → logprob: -20.252187728881836
    10. ' ' → logprob: -20.377187728881836

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -11.375012397766113
    3. '0' → logprob: -13.875012397766113
    4. '   ' → logprob: -16.50001335144043
    5. '```' → logprob: -20.12501335144043
    6. '  ' → logprob: -20.75001335144043
    7. '<|end|>' → logprob: -21.75001335144043
    8. '`' → logprob: -22.12501335144043
    9. '       ' → logprob: -22.50001335144043
    10. '۱' → logprob: -22.50001335144043

Token 104: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6063362956047058
    2. 'print' → logprob: -2.2313363552093506
    3. 'result' → logprob: -2.2313363552093506
    4. '#' → logprob: -2.4813363552093506
    5. '<|end|>' → logprob: -3.1063363552093506
    6. ')' → logprob: -3.6063363552093506
    7. ' for' → logprob: -4.7313361167907715
    8. 'n' → logprob: -4.7313361167907715
    9. 'answer' → logprob: -4.7313361167907715
    10. 'ans' → logprob: -4.8563361167907715

Token 105: 'score' (ID: 21200)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.863743245601654
    2. 'res' → logprob: -0.988743245601654
    3. 'result' → logprob: -2.113743305206299
    4. 'answer' → logprob: -3.238743305206299
    5. 'count' → logprob: -3.863743305206299
    6. 'total' → logprob: -4.613743305206299
    7. 'cnt' → logprob: -4.863743305206299
    8. 'out' → logprob: -6.488743305206299
    9. 'pairs' → logprob: -6.613743305206299
    10. 'ret' → logprob: -6.863743305206299

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16061453521251678
    2. '=' → logprob: -2.035614490509033
    3. 's' → logprob: -4.035614490509033
    4. 'sum' → logprob: -10.035614967346191
    5. ' ' → logprob: -11.035614967346191
    6. 'max' → logprob: -11.285614967346191
    7. '_' → logprob: -11.785614967346191
    8. 'count' → logprob: -12.160614967346191
    9. ',' → logprob: -12.660614967346191
    10. '_sum' → logprob: -13.410614967346191

Token 107: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02390507608652115
    2. ' ' → logprob: -3.773905038833618
    3. '1' → logprob: -8.023904800415039
    4. 'sum' → logprob: -9.023904800415039
    5. 'sz' → logprob: -9.523904800415039
    6. ' sum' → logprob: -10.273904800415039
    7. 'max' → logprob: -10.523904800415039
    8. 'b' → logprob: -10.773904800415039
    9. ' sz' → logprob: -11.023904800415039
    10. ' max' → logprob: -11.898904800415039

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017944201827049255
    2. ' ' → logprob: -6.876794338226318
    3. 'sum' → logprob: -8.001794815063477
    4. 'b' → logprob: -8.376794815063477
    5. 'max' → logprob: -9.001794815063477
    6. '1' → logprob: -10.501794815063477
    7. 'sz' → logprob: -11.251794815063477
    8. 'carry' → logprob: -11.626794815063477
    9. ' sum' → logprob: -12.001794815063477
    10. '(' → logprob: -12.376794815063477

Token 109: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03692975640296936
    2. '
' → logprob: -3.4119298458099365
    3. ' for' → logprob: -5.786929607391357
    4. '<|end|>' → logprob: -9.536930084228516
    5. '\n' → logprob: -10.161930084228516
    6. '```' → logprob: -10.411930084228516
    7. ' 
' → logprob: -10.786930084228516
    8. '\' → logprob: -11.411930084228516
    9. '  
' → logprob: -11.411930084228516
    10. ',' → logprob: -11.911930084228516

Token 110: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.676981345459353e-06
    2. '
' → logprob: -12.875005722045898
    3. ' for' → logprob: -13.000005722045898
    4. 'score' → logprob: -15.750005722045898
    5. 'from' → logprob: -15.875005722045898
    6. '   ' → logprob: -15.875005722045898
    7. '```' → logprob: -16.0000057220459
    8. '    
' → logprob: -16.7500057220459
    9. '0' → logprob: -16.7500057220459
    10. 'count' → logprob: -17.5000057220459

Token 111: ' key' (ID: 2140)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.6005904078483582
    2. ' key' → logprob: -1.725590467453003
    3. ' count' → logprob: -2.475590467453003
    4. ' k' → logprob: -3.475590467453003
    5. 'count' → logprob: -3.475590467453003
    6. ' v' → logprob: -3.850590467453003
    7. 'key' → logprob: -3.975590467453003
    8. 'val' → logprob: -3.975590467453003
    9. ' j' → logprob: -4.475590229034424
    10. 'k' → logprob: -4.600590229034424

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1433228850364685
    2. 'in' → logprob: -2.2683229446411133
    3. ',' → logprob: -3.5183229446411133
    4. ' ,' → logprob: -8.268322944641113
    5. ',in' → logprob: -10.018322944641113
    6. ',value' → logprob: -10.143322944641113
    7. ' ' → logprob: -10.518322944641113
    8. ',val' → logprob: -11.518322944641113
    9. '	in' → logprob: -12.143322944641113
    10. '  ' → logprob: -13.393322944641113

Token 113: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11284774541854858
    2. ' bingo' → logprob: -2.2378478050231934
    3. ' b' → logprob: -11.862847328186035
    4. '```' → logprob: -12.237847328186035
    5. ' ' → logprob: -12.487847328186035
    6. ' Bingo' → logprob: -13.237847328186035
    7. '	b' → logprob: -13.362847328186035
    8. 'bing' → logprob: -13.362847328186035
    9. '(b' → logprob: -14.112847328186035
    10. ' bing' → logprob: -14.487847328186035

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12462754547595978
    2. '.values' → logprob: -2.2496275901794434
    3. 'values' → logprob: -4.499627590179443
    4. '):' → logprob: -8.749627113342285
    5. ',' → logprob: -9.249627113342285
    6. '.keys' → logprob: -9.499627113342285
    7. '_values' → logprob: -9.624627113342285
    8. ':
' → logprob: -9.874627113342285
    9. 'value' → logprob: -10.624627113342285
    10. ' values' → logprob: -10.874627113342285

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012368128227535635
    2. '	score' → logprob: -9.750123977661133
    3. 'score' → logprob: -10.250123977661133
    4. ' score' → logprob: -11.125123977661133
    5. '    
' → logprob: -12.125123977661133
    6. '<|end|>' → logprob: -12.250123977661133
    7. '(score' → logprob: -13.500123977661133
    8. ',' → logprob: -13.875123977661133
    9. '       ' → logprob: -14.250123977661133
    10. '```' → logprob: -14.625123977661133

Token 116: ' v' (ID: 323)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' score' → logprob: -1.473066806793213
    2. ' n' → logprob: -1.598066806793213
    3. ' count' → logprob: -1.973066806793213
    4. 'score' → logprob: -2.098066806793213
    5. '   ' → logprob: -2.223066806793213
    6. 'count' → logprob: -2.348066806793213
    7. '       ' → logprob: -2.973066806793213
    8. 'n' → logprob: -3.223066806793213
    9. ' cnt' → logprob: -5.723066806793213
    10. 'cnt' → logprob: -6.348066806793213

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20911312103271484
    2. 'al' → logprob: -1.7091131210327148
    3. '=' → logprob: -4.959113121032715
    4. '   ' → logprob: -7.709113121032715
    5. 'ale' → logprob: -9.834113121032715
    6. ' ' → logprob: -9.834113121032715
    7. 'a' → logprob: -10.084113121032715
    8. 'alue' → logprob: -11.084113121032715
    9. '  ' → logprob: -11.584113121032715
    10. '       ' → logprob: -11.709113121032715

Token 118: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6932262778282166
    2. ' bingo' → logprob: -0.6932262778282166
    3. ' b' → logprob: -10.818225860595703
    4. ' ' → logprob: -10.818225860595703
    5. ' bing' → logprob: -11.693225860595703
    6. '   ' → logprob: -11.943225860595703
    7. '	b' → logprob: -12.318225860595703
    8. ' Bingo' → logprob: -12.755725860595703
    9. '(b' → logprob: -12.755725860595703
    10. '```' → logprob: -13.443225860595703

Token 119: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: 0.0
    2. 'key' → logprob: -17.0
    3. '[val' → logprob: -18.625
    4. '[' → logprob: -19.375
    5. '[k' → logprob: -20.625
    6. ',key' → logprob: -21.125
    7. '$key' → logprob: -21.25
    8. '(key' → logprob: -21.375
    9. ' key' → logprob: -21.5
    10. ' [' → logprob: -21.5

Token 120: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00502976356074214
    2. '*(' → logprob: -6.255029678344727
    3. ')
' → logprob: -6.380029678344727
    4. '   ' → logprob: -7.130029678344727
    5. ')' → logprob: -8.255029678344727
    6. '
' → logprob: -9.255029678344727
    7. '-' → logprob: -10.380029678344727
    8. ']
' → logprob: -10.380029678344727
    9. '```' → logprob: -10.380029678344727
    10. '(v' → logprob: -10.505029678344727

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018399098189547658
    2. ' score' → logprob: -10.000184059143066
    3. 'score' → logprob: -10.125184059143066
    4. '
' → logprob: -10.125184059143066
    5. '	score' → logprob: -10.250184059143066
    6. '    
' → logprob: -12.125184059143066
    7. '(score' → logprob: -12.250184059143066
    8. '  ' → logprob: -12.500184059143066
    9. ',' → logprob: -12.750184059143066
    10. '<|end|>' → logprob: -13.125184059143066

Token 122: ' if' (ID: 538)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.016720978543162346
    2. ' score' → logprob: -4.391720771789551
    3. '   ' → logprob: -5.516720771789551
    4. '
' → logprob: -9.51672077178955
    5. '	score' → logprob: -9.89172077178955
    6. 'if' (adapté à ' if') → logprob: -10.01672077178955
    7. ' if' → logprob: -12.26672077178955
    8. '(score' → logprob: -12.89172077178955
    9. '    
' → logprob: -13.14172077178955
    10. ' ' → logprob: -13.26672077178955

Token 123: ' key' (ID: 2140)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.20146752893924713
    2. 'v' → logprob: -1.701467514038086
    3. ' ' → logprob: -10.076467514038086
    4. '   ' → logprob: -12.576467514038086
    5. '	v' → logprob: -12.826467514038086
    6. ' ' → logprob: -13.451467514038086
    7. '(v' → logprob: -13.826467514038086
    8. '(' → logprob: -14.326467514038086
    9. '  ' → logprob: -14.451467514038086
    10. '>' → logprob: -14.701467514038086

Token 124: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5795130729675293
    2. ' ==' → logprob: -0.8295130729675293
    3. ' !=' → logprob: -6.704513072967529
    4. '!=' → logprob: -6.954513072967529
    5. '=' → logprob: -7.704513072967529
    6. ' ' → logprob: -7.704513072967529
    7. '>' → logprob: -8.454513549804688
    8. '%' → logprob: -9.079513549804688
    9. '0' → logprob: -9.454513549804688
    10. ' >' → logprob: -10.829513549804688

Token 125: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013263145228847861
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.251326560974121
    4. 'carry' → logprob: -16.126325607299805
    5. '1' → logprob: -16.626325607299805
    6. '  ' → logprob: -17.751325607299805
    7. '```' → logprob: -17.751325607299805
    8. ' ' → logprob: -18.251325607299805
    9. '
' → logprob: -18.251325607299805
    10. 'zero' → logprob: -18.813825607299805

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001805377542041242
    2. ' ' → logprob: -8.6251802444458
    3. 'carry' → logprob: -14.5001802444458
    4. '1' → logprob: -15.5001802444458
    5. '   ' → logprob: -15.8751802444458
    6. '  ' → logprob: -17.062681198120117
    7. '
' → logprob: -17.625181198120117
    8. 'b' → logprob: -17.750181198120117
    9. 'mod' → logprob: -18.250181198120117
    10. '(' → logprob: -18.437681198120117

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10070186108350754
    2. ':
' → logprob: -2.3507018089294434
    3. ' or' → logprob: -7.725701808929443
    4. ' and' → logprob: -10.600702285766602
    5. '       ' → logprob: -11.850702285766602
    6. '):
' → logprob: -12.100702285766602
    7. '   ' → logprob: -12.100702285766602
    8. 'and' → logprob: -12.725702285766602
    9. 'or' → logprob: -13.475702285766602
    10. ':

' → logprob: -13.725702285766602

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029142802581191063
    2. '
' → logprob: -4.1541428565979
    3. ':
' → logprob: -4.7791428565979
    4. ':' → logprob: -6.0291428565979
    5. '   ' → logprob: -6.9041428565979
    6. 'score' → logprob: -7.5291428565979
    7. '	score' → logprob: -8.404142379760742
    8. '        
' → logprob: -8.779142379760742
    9. ' score' → logprob: -9.529142379760742
    10. ' and' → logprob: -10.154142379760742

Token 129: ' score' (ID: 8429)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2380254566669464
    2. 'score' (adapté à ' score') → logprob: -1.613025426864624
    3. ' score' → logprob: -5.113025665283203
    4. '       ' → logprob: -5.488025665283203
    5. '   ' → logprob: -6.488025665283203
    6. '	score' → logprob: -7.738025665283203
    7. '           ' → logprob: -8.613025665283203
    8. ':
' → logprob: -8.738025665283203
    9. ' ' → logprob: -10.988025665283203
    10. '(score' → logprob: -11.363025665283203

Token 130: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20142397284507751
    2. '+=' → logprob: -1.7014240026474
    3. '+=(' → logprob: -11.576423645019531
    4. ']+=' → logprob: -14.576423645019531
    5. '=' → logprob: -14.701423645019531
    6. '+' → logprob: -15.451423645019531
    7. ' =' → logprob: -16.45142364501953
    8. '
' → logprob: -16.82642364501953
    9. ' +' → logprob: -17.82642364501953
    10. ' ' → logprob: -18.07642364501953

Token 131: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006082614883780479
    2. '(v' → logprob: -5.381082534790039
    3. ' v' → logprob: -6.631082534790039
    4. '(' → logprob: -9.131082534790039
    5. ' (' → logprob: -10.631082534790039
    6. '
' → logprob: -12.881082534790039
    7. '   ' → logprob: -12.881082534790039
    8. '((' → logprob: -13.256082534790039
    9. ' ' → logprob: -13.381082534790039
    10. '	v' → logprob: -13.881082534790039

Token 132: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001764074433594942
    2. ' v' → logprob: -6.501764297485352
    3. '(v' → logprob: -8.251764297485352
    4. ')v' → logprob: -15.126764297485352
    5. ' (' → logprob: -15.251764297485352
    6. '(' → logprob: -16.00176429748535
    7. '	v' → logprob: -16.37676429748535
    8. '   ' → logprob: -16.87676429748535
    9. '
' → logprob: -17.12676429748535
    10. '[v' → logprob: -17.50176429748535

Token 133: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6040970087051392
    2. ' *' → logprob: -0.8540970087051392
    3. '*(' → logprob: -3.6040968894958496
    4. ')*(' → logprob: -8.354097366333008
    5. ')' → logprob: -8.479097366333008
    6. ' ' → logprob: -9.604097366333008
    7. ')*' → logprob: -11.104097366333008
    8. ' *(' → logprob: -12.104097366333008
    9. '*v' → logprob: -12.354097366333008
    10. '   ' → logprob: -12.479097366333008

Token 134: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.008679220452904701
    2. ' (' → logprob: -4.758679389953613
    3. '(' → logprob: -10.133679389953613
    4. '
' → logprob: -11.258679389953613
    5. '   ' → logprob: -12.008679389953613
    6. ' ' → logprob: -12.883679389953613
    7. '  ' → logprob: -13.008679389953613
    8. '    ' → logprob: -16.133678436279297
    9. '       ' → logprob: -16.133678436279297
    10. '(n' → logprob: -16.133678436279297

Token 135: 'v' (ID: 85)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.030008265748620033
    2. 'v' → logprob: -3.530008316040039
    3. ' (' → logprob: -8.530008316040039
    4. ' v' → logprob: -10.155008316040039
    5. '(' → logprob: -11.905008316040039
    6. '   ' → logprob: -12.405008316040039
    7. '	v' → logprob: -12.905008316040039
    8. ' ' → logprob: -13.280008316040039
    9. '[v' → logprob: -13.530008316040039
    10. ')v' → logprob: -13.905008316040039

Token 136: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22542813420295715
    2. ' -' → logprob: -1.6004281044006348
    3. ' ' → logprob: -11.725428581237793
    4. '   ' → logprob: -13.350428581237793
    5. '1' → logprob: -13.725428581237793
    6. ')' → logprob: -13.725428581237793
    7. '
' → logprob: -13.850428581237793
    8. '+' → logprob: -14.225428581237793
    9. '  ' → logprob: -14.475428581237793
    10. '−' → logprob: -15.475428581237793

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.150362166110426e-05
    2. ' ' → logprob: -9.375091552734375
    3. '-' → logprob: -12.125091552734375
    4. '
' → logprob: -14.125091552734375
    5. '   ' → logprob: -15.750091552734375
    6. ')' → logprob: -15.875091552734375
    7. ' -' → logprob: -16.125091552734375
    8. '  ' → logprob: -16.875091552734375
    9. '```' → logprob: -17.250091552734375
    10. '

' → logprob: -18.875091552734375

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.375004768371582
    3. '
' → logprob: -14.750004768371582
    4. ')' → logprob: -15.250004768371582
    5. '-' → logprob: -15.500004768371582
    6. '   ' → logprob: -17.2500057220459
    7. ' -' → logprob: -17.3750057220459
    8. '```' → logprob: -17.3750057220459
    9. '  ' → logprob: -18.2500057220459
    10. '

' → logprob: -18.5000057220459

Token 139: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3961971700191498
    2. '))' → logprob: -1.1461971998214722
    3. ')//' → logprob: -4.771197319030762
    4. ' )' → logprob: -7.396197319030762
    5. ' ))' → logprob: -9.021197319030762
    6. '//' → logprob: -9.646197319030762
    7. ' //' → logprob: -11.396197319030762
    8. '   ' → logprob: -14.771197319030762
    9. ')
' → logprob: -15.146197319030762
    10. ')>>' → logprob: -15.396197319030762

Token 140: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.14272889494895935
    2. ' //' → logprob: -2.017728805541992
    3. ' ' → logprob: -10.767728805541992
    4. '#' → logprob: -11.892728805541992
    5. ')' → logprob: -11.892728805541992
    6. '   ' → logprob: -12.642728805541992
    7. '<|end|>' → logprob: -12.892728805541992
    8. '>>' → logprob: -13.017728805541992
    9. ')//' → logprob: -13.142728805541992
    10. '```' → logprob: -13.267728805541992

Token 141: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.0484450437361374e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.750040054321289
    4. '
' → logprob: -16.62504005432129
    5. '```' → logprob: -18.00004005432129
    6. '۲' → logprob: -18.87504005432129
    7. '202' → logprob: -19.00004005432129
    8. '  ' → logprob: -19.12504005432129
    9. '    ' → logprob: -19.37504005432129
    10. '1' → logprob: -19.68754005432129

Token 142: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.625
    4. '1' → logprob: -20.75
    5. '
' → logprob: -20.875
    6. '```' → logprob: -20.875
    7. '۲' → logprob: -21.625
    8. '  ' → logprob: -22.125
    9. '202' → logprob: -22.375
    10. '２' → logprob: -22.875

Token 143: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003058165078982711
    2. 'else' → logprob: -5.878057956695557
    3. ' else' → logprob: -8.878058433532715
    4. '<|end|>' → logprob: -9.878058433532715
    5. ')' → logprob: -10.753058433532715
    6. ' ' → logprob: -12.003058433532715
    7. '  ' → logprob: -12.003058433532715
    8. '
' → logprob: -12.003058433532715
    9. '	else' → logprob: -12.253058433532715
    10. '}' → logprob: -12.503058433532715

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022229375317692757
    2. 'else' → logprob: -6.127223014831543
    3. ' else' → logprob: -10.252223014831543
    4. '
' → logprob: -13.877223014831543
    5. '```' → logprob: -14.377223014831543
    6. '    
' → logprob: -15.377223014831543
    7. '       ' → logprob: -15.502223014831543
    8. '	else' → logprob: -16.002222061157227
    9. '  ' → logprob: -16.127222061157227
    10. ' ' → logprob: -16.252222061157227

Token 145: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.23964475095272064
    2. '   ' → logprob: -2.239644765853882
    3. ' else' → logprob: -2.239644765853882
    4. ' ' → logprob: -9.364645004272461
    5. '	else' → logprob: -11.614645004272461
    6. '  ' → logprob: -12.489645004272461
    7. '       ' → logprob: -14.364645004272461
    8. 'elif' → logprob: -14.989645004272461
    9. '```' → logprob: -15.364645004272461
    10. '
' → logprob: -16.23964500427246

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7754881978034973
    2. ':
' → logprob: -0.9004881978034973
    3. '       ' → logprob: -2.0254881381988525
    4. '   ' → logprob: -7.025488376617432
    5. '
' → logprob: -9.275487899780273
    6. '    ' → logprob: -10.400487899780273
    7. ',' → logprob: -10.400487899780273
    8. '):
' → logprob: -10.525487899780273
    9. 'score' → logprob: -10.650487899780273
    10. '     ' → logprob: -10.775487899780273

Token 147: '       ' (ID: 309)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.004903312306851149
    2. '   ' → logprob: -5.754903316497803
    3. ' score' → logprob: -6.379903316497803
    4. '	score' → logprob: -10.879902839660645
    5. '       ' → logprob: -12.629902839660645
    6. ' ' → logprob: -12.754902839660645
    7. '
' → logprob: -13.129902839660645
    8. '  ' → logprob: -13.504902839660645
    9. '    ' → logprob: -15.504902839660645
    10. '(score' → logprob: -15.754902839660645

Token 148: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' (adapté à ' score') → logprob: -0.001936485292389989
    2. ' score' → logprob: -6.251936435699463
    3. '   ' → logprob: -12.626936912536621
    4. '	score' → logprob: -13.001936912536621
    5. ' ' → logprob: -13.751936912536621
    6. '       ' → logprob: -14.876936912536621
    7. '  ' → logprob: -14.876936912536621
    8. '
' → logprob: -15.126936912536621
    9. '(score' → logprob: -16.501935958862305
    10. '    ' → logprob: -17.126935958862305

Token 149: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20147649943828583
    2. '+=' → logprob: -1.7014764547348022
    3. '+=(' → logprob: -9.826476097106934
    4. '   ' → logprob: -12.076476097106934
    5. '+' → logprob: -13.076476097106934
    6. ']+=' → logprob: -14.451476097106934
    7. '    ' → logprob: -14.576476097106934
    8. '  ' → logprob: -15.701476097106934
    9. ' ' → logprob: -16.20147705078125
    10. '	' → logprob: -17.45147705078125

Token 150: ' max' (ID: 2999)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.14515206217765808
    2. ' (' → logprob: -2.0201520919799805
    3. 'v' → logprob: -6.7701520919799805
    4. '(' → logprob: -7.0201520919799805
    5. ' v' → logprob: -7.7701520919799805
    6. '   ' → logprob: -12.52015209197998
    7. ' ' → logprob: -12.64515209197998
    8. '
' → logprob: -13.64515209197998
    9. '[v' → logprob: -14.64515209197998
    10. '  ' → logprob: -15.33265209197998

Token 151: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.035861872136592865
    2. '(v' → logprob: -4.035861968994141
    3. '((' → logprob: -4.160861968994141
    4. '0' → logprob: -6.285861968994141
    5. '(score' → logprob: -10.16086196899414
    6. '(((' → logprob: -10.41086196899414
    7. 'v' → logprob: -11.78586196899414
    8. ' (' → logprob: -11.91086196899414
    9. 'score' → logprob: -12.28586196899414
    10. ' ' → logprob: -12.53586196899414

Token 152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2938382625579834
    2. 'v' → logprob: -2.0438382625579834
    3. '(v' → logprob: -2.6688382625579834
    4. '(' → logprob: -3.1688382625579834
    5. '((' → logprob: -4.9188385009765625
    6. ' v' → logprob: -5.9188385009765625
    7. ' ' → logprob: -6.1688385009765625
    8. ' (' → logprob: -6.7938385009765625
    9. '1' → logprob: -9.293838500976562
    10. ' ((' → logprob: -9.793838500976562

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02341015636920929
    2. ' ,' → logprob: -3.8984100818634033
    3. ',v' → logprob: -6.023410320281982
    4. ',(' → logprob: -7.773410320281982
    5. ',
' → logprob: -11.398409843444824
    6. '   ' → logprob: -12.898409843444824
    7. ')' → logprob: -13.148409843444824
    8. ' v' → logprob: -13.773409843444824
    9. ' (' → logprob: -13.773409843444824
    10. ' ' → logprob: -13.773409843444824

Token 154: ' ((' (ID: 3536)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.15343283116817474
    2. 'v' → logprob: -2.653432846069336
    3. ' (' → logprob: -2.778432846069336
    4. ' v' → logprob: -4.653432846069336
    5. ' ' → logprob: -9.903432846069336
    6. '(' → logprob: -10.028432846069336
    7. '((' → logprob: -10.403432846069336
    8. '   ' → logprob: -11.278432846069336
    9. ')' → logprob: -12.153432846069336
    10. '  ' → logprob: -12.590932846069336

Token 155: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0006818148540332913
    2. ' v' → logprob: -7.8756818771362305
    3. '(v' → logprob: -8.12568187713623
    4. ')v' → logprob: -13.12568187713623
    5. '   ' → logprob: -13.62568187713623
    6. '
' → logprob: -14.00068187713623
    7. '[v' → logprob: -14.62568187713623
    8. '	v' → logprob: -14.87568187713623
    9. ' (' → logprob: -15.25068187713623
    10. '_v' → logprob: -16.000680923461914

Token 156: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14089444279670715
    2. ' -' → logprob: -2.8908944129943848
    3. '*' → logprob: -3.3908944129943848
    4. '-' → logprob: -3.3908944129943848
    5. ')' → logprob: -5.265894412994385
    6. '*(' → logprob: -6.015894412994385
    7. ' ' → logprob: -7.640894412994385
    8. ' )' → logprob: -7.890894412994385
    9. ')*(' → logprob: -10.515894889831543
    10. ' *(' → logprob: -11.265894889831543

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023619852436240762
    2. ' ' → logprob: -8.625236511230469
    3. '   ' → logprob: -10.000236511230469
    4. '
' → logprob: -12.875236511230469
    5. '  ' → logprob: -13.375236511230469
    6. ')' → logprob: -13.750236511230469
    7. '...' → logprob: -13.875236511230469
    8. '    ' → logprob: -13.937736511230469
    9. '2' → logprob: -13.937736511230469
    10. '       ' → logprob: -14.312736511230469

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6537622034084052e-05
    2. ' ' → logprob: -10.75002670288086
    3. '2' → logprob: -13.75002670288086
    4. '
' → logprob: -13.81252670288086
    5. ')' → logprob: -14.43752670288086
    6. '   ' → logprob: -14.50002670288086
    7. '```' → logprob: -15.37502670288086
    8. '  ' → logprob: -15.87502670288086
    9. '

' → logprob: -16.12502670288086
    10. '...' → logprob: -16.43752670288086

Token 159: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004206852056086063
    2. ' )' → logprob: -6.629206657409668
    3. ')*' → logprob: -6.879206657409668
    4. '*' → logprob: -6.879206657409668
    5. ' *' → logprob: -7.129206657409668
    6. ')*(' → logprob: -11.504206657409668
    7. ' ' → logprob: -13.254206657409668
    8. '*)' → logprob: -13.504206657409668
    9. '*v' → logprob: -13.879206657409668
    10. '+' → logprob: -14.254206657409668

Token 160: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.23702874779701233
    2. '*' → logprob: -1.61202871799469
    3. ')' → logprob: -4.4870285987854
    4. ')*' → logprob: -8.862029075622559
    5. ' )' → logprob: -9.237029075622559
    6. '*v' → logprob: -10.487029075622559
    7. ' ' → logprob: -10.987029075622559
    8. '*(' → logprob: -11.862029075622559
    9. ')*(' → logprob: -13.737029075622559
    10. '*)' → logprob: -14.112029075622559

Token 161: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01435765065252781
    2. ' v' → logprob: -4.264357566833496
    3. '(v' → logprob: -8.639357566833496
    4. '   ' → logprob: -12.139357566833496
    5. ' (' → logprob: -12.264357566833496
    6. ' ' → logprob: -13.264357566833496
    7. '(' → logprob: -13.514357566833496
    8. '
' → logprob: -13.639357566833496
    9. ')v' → logprob: -14.014357566833496
    10. '	v' → logprob: -14.264357566833496

Token 162: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04637834429740906
    2. ')//' → logprob: -3.2963783740997314
    3. ' )' → logprob: -4.796378135681152
    4. '//' → logprob: -10.421378135681152
    5. ' //' → logprob: -11.546378135681152
    6. '   ' → logprob: -13.546378135681152
    7. ' ' → logprob: -14.546378135681152
    8. ')>>' → logprob: -14.671378135681152
    9. '))' → logprob: -14.796378135681152
    10. ')#' → logprob: -15.546378135681152

Token 163: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05210267752408981
    2. ')//' → logprob: -3.427102565765381
    3. ' )' → logprob: -4.302102565765381
    4. '//' → logprob: -5.927102565765381
    5. ' //' → logprob: -6.177102565765381
    6. '   ' → logprob: -13.177103042602539
    7. ' ' → logprob: -13.802103042602539
    8. ')>>' → logprob: -14.302103042602539
    9. ')#' → logprob: -15.427103042602539
    10. '")' → logprob: -15.552103042602539

Token 164: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038074489566497505
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.250380516052246
    4. '
' → logprob: -15.750380516052246
    5. '1' → logprob: -16.500381469726562
    6. ')' → logprob: -16.750381469726562
    7. '```' → logprob: -17.500381469726562
    8. '.' → logprob: -18.000381469726562
    9. '۲' → logprob: -18.125381469726562
    10. '  ' → logprob: -18.312881469726562

Token 165: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -16.125017166137695
    4. '   ' → logprob: -16.875017166137695
    5. '
' → logprob: -17.500017166137695
    6. 'mod' → logprob: -17.625017166137695
    7. ')' → logprob: -17.812517166137695
    8. '```' → logprob: -17.875017166137695
    9. '
' → logprob: -18.500017166137695
    10. '.' → logprob: -18.937517166137695

Token 166: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.458980300929397e-05
    2. ')
' → logprob: -9.75008487701416
    3. ')return' → logprob: -11.62508487701416
    4. ' )' → logprob: -11.87508487701416
    5. '<|end|>' → logprob: -12.25008487701416
    6. '`)' → logprob: -14.25008487701416
    7. '```' → logprob: -14.50008487701416
    8. '+' → logprob: -14.50008487701416
    9. ')+' → logprob: -14.75008487701416
    10. ')#' → logprob: -14.75008487701416

Token 167: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009230116847902536
    2. '
' → logprob: -7.000923156738281
    3. ' print' → logprob: -11.625923156738281
    4. '
' → logprob: -14.250923156738281
    5. ')' → logprob: -14.375923156738281
    6. '<|end|>' → logprob: -15.250923156738281
    7. ')
' → logprob: -15.500923156738281
    8. ' 
' → logprob: -15.500923156738281
    9. '```' → logprob: -15.750923156738281
    10. '#print' → logprob: -16.00092315673828

Token 168: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.1002088338136673
    2. '(' → logprob: -2.3502087593078613
    3. '(scores' → logprob: -14.72520923614502
    4. '(
' → logprob: -14.97520923614502
    5. ' (' → logprob: -14.97520923614502
    6. '('' → logprob: -15.22520923614502
    7. 'score' → logprob: -15.97520923614502
    8. '()' → logprob: -16.100208282470703
    9. '(space' → logprob: -16.225208282470703
    10. '("("' → logprob: -16.225208282470703

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -18.0
    4. ')`' → logprob: -18.75
    5. '))' → logprob: -19.625
    6. '')' → logprob: -21.0
    7. '),' → logprob: -21.125
    8. ').' → logprob: -21.625
    9. ')#' → logprob: -21.75
    10. ')**' → logprob: -21.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 167
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 142
Précision stricte (1ère position): 43.71%
Précision adaptée (1ère position): 46.71%
Précision (top 10): 85.03%
================================================================================
