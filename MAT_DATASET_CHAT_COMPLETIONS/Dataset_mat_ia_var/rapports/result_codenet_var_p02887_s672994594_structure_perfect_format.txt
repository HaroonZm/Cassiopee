================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect
import collections
import copy
import heapq
import itertools
import math
import string
import numpy as np
import sys

sys.setrecursionlimit(10**7)

def _S():
    return sys.stdin.readline().rstrip()

def I():
    return int(sys.stdin.readline().rstrip())

def LI():
    return list(map(int, sys.stdin.readline().rstrip().split()))

def LS():
    return list(sys.stdin.readline().rstrip().split())

N = I()
S = _S()

last = ''
count = 0
for i in range(N):
    a = S[i]
    if last != a:
        count += 1
        last = a
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00226170988753438
    2. '(' → logprob: -6.127261638641357
    3. '\n' → logprob: -11.252262115478516
    4. '[' → logprob: -11.752262115478516
    5. '\' → logprob: -11.752262115478516
    6. '.
' → logprob: -11.752262115478516
    7. '.\' → logprob: -11.877262115478516
    8. '
' → logprob: -12.127262115478516
    9. '.b' → logprob: -12.627262115478516
    10. '\(' → logprob: -12.877262115478516

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01686328835785389
    2. '(' → logprob: -4.1418633460998535
    3. '\n' → logprob: -8.516862869262695
    4. '\' → logprob: -8.641862869262695
    5. '```' → logprob: -10.016862869262695
    6. '

' → logprob: -10.141862869262695
    7. ',' → logprob: -10.266862869262695
    8. '' → logprob: -10.266862869262695
    9. '.
' → logprob: -10.516862869262695
    10. '
' → logprob: -10.516862869262695

Token 5: ' collections' (ID: 22690)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.13281376659870148
    2. ' math' → logprob: -2.3828136920928955
    3. 'sys' → logprob: -4.382813930511475
    4. ' heap' → logprob: -4.632813930511475
    5. ' collections' → logprob: -5.132813930511475
    6. 'heap' → logprob: -6.882813930511475
    7. ' os' → logprob: -7.132813930511475
    8. ' itertools' → logprob: -7.257813930511475
    9. 'collections' → logprob: -7.257813930511475
    10. 'math' → logprob: -7.382813930511475

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03800820931792259
    2. '
' → logprob: -4.663008213043213
    3. 'import' → logprob: -4.663008213043213
    4. '\n' → logprob: -5.413008213043213
    5. '\' → logprob: -5.788008213043213
    6. '.
' → logprob: -6.413008213043213
    7. '

' → logprob: -6.413008213043213
    8. 'newline' → logprob: -6.538008213043213
    9. ',' → logprob: -6.663008213043213
    10. '.

' → logprob: -6.788008213043213

Token 7: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7872365713119507
    2. '
' → logprob: -1.1622365713119507
    3. '

' → logprob: -1.9122365713119507
    4. '.' → logprob: -4.03723669052124
    5. '\n' → logprob: -4.16223669052124
    6. 'def' → logprob: -4.78723669052124
    7. 'from' → logprob: -5.03723669052124
    8. ' 

' → logprob: -5.03723669052124
    9. ',' → logprob: -5.66223669052124
    10. '.

' → logprob: -5.91223669052124

Token 8: ' copy' (ID: 5150)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.19745931029319763
    2. ' itertools' → logprob: -2.5724592208862305
    3. ' math' → logprob: -3.0724592208862305
    4. ' sys' → logprob: -3.8224592208862305
    5. 'heap' → logprob: -3.9474592208862305
    6. ' threading' → logprob: -5.1974592208862305
    7. ' functools' → logprob: -5.4474592208862305
    8. ' os' → logprob: -6.4474592208862305
    9. 'math' → logprob: -6.5724592208862305
    10. ' copy' → logprob: -7.8224592208862305

Token 9: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8148079514503479
    2. '
' → logprob: -1.0648078918457031
    3. '.' → logprob: -2.439807891845703
    4. ' ' → logprob: -3.439807891845703
    5. ',' → logprob: -4.564807891845703
    6. '<|end|>' → logprob: -4.564807891845703
    7. '\n' → logprob: -4.564807891845703
    8. '

' → logprob: -4.689807891845703
    9. ' 
' → logprob: -4.939807891845703
    10. 'from' → logprob: -5.064807891845703

Token 10: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.34345024824142456
    2. '.' → logprob: -1.8434503078460693
    3. 'from' → logprob: -2.9684503078460693
    4. ',' → logprob: -3.7184503078460693
    5. 'def' → logprob: -3.9684503078460693
    6. '```' → logprob: -4.46845006942749
    7. '_' → logprob: -5.46845006942749
    8. '\' → logprob: -5.96845006942749
    9. ',
' → logprob: -6.09345006942749
    10. '.
' → logprob: -6.09345006942749

Token 11: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.6737327575683594
    2. ' datetime' → logprob: -1.7987327575683594
    3. ' itertools' → logprob: -2.0487327575683594
    4. ' math' → logprob: -2.6737327575683594
    5. ' functools' → logprob: -3.0487327575683594
    6. ' dat' → logprob: -4.048732757568359
    7. ' csv' → logprob: -4.298732757568359
    8. 'heap' → logprob: -4.423732757568359
    9. ' threading' → logprob: -4.548732757568359
    10. ' enum' → logprob: -5.423732757568359

Token 12: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.190178904333152e-05
    2. 't' → logprob: -10.875031471252441
    3. 'queue' → logprob: -12.000031471252441
    4. '.' → logprob: -13.125031471252441
    5. 'e' → logprob: -13.875031471252441
    6. 's' → logprob: -14.125031471252441
    7. ' queue' → logprob: -14.250031471252441
    8. 'u' → logprob: -14.625031471252441
    9. 'p' → logprob: -14.625031471252441
    10. '_' → logprob: -14.875031471252441

Token 13: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2924405038356781
    2. '.' → logprob: -1.7924405336380005
    3. '
' → logprob: -3.667440414428711
    4. '\n' → logprob: -3.792440414428711
    5. '\' → logprob: -4.167440414428711
    6. ',' → logprob: -4.917440414428711
    7. '```' → logprob: -5.417440414428711
    8. '' → logprob: -6.167440414428711
    9. '

' → logprob: -6.292440414428711
    10. '.
' → logprob: -6.542440414428711

Token 14: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.04896362125873566
    2. '.' → logprob: -4.17396354675293
    3. 'from' → logprob: -4.42396354675293
    4. '
' → logprob: -5.29896354675293
    5. 'def' → logprob: -5.79896354675293
    6. ',' → logprob: -5.92396354675293
    7. '```' → logprob: -6.29896354675293
    8. '\n' → logprob: -6.79896354675293
    9. '#' → logprob: -7.17396354675293
    10. '_' → logprob: -7.42396354675293

Token 15: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.003032374894246459
    2. ' math' → logprob: -6.503032207489014
    3. ' io' → logprob: -7.253032207489014
    4. 'it' → logprob: -7.503032207489014
    5. 'math' → logprob: -8.878032684326172
    6. 'io' → logprob: -9.753032684326172
    7. ' threading' → logprob: -10.878032684326172
    8. ' json' → logprob: -11.253032684326172
    9. ' functools' → logprob: -11.253032684326172
    10. ' random' → logprob: -12.128032684326172

Token 16: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2975526452064514
    2. '.' → logprob: -2.1725525856018066
    3. '
' → logprob: -2.4225525856018066
    4. '\n' → logprob: -4.422552585601807
    5. '```' → logprob: -4.547552585601807
    6. ',' → logprob: -5.047552585601807
    7. '

' → logprob: -5.672552585601807
    8. 'from' → logprob: -5.922552585601807
    9. '.
' → logprob: -5.922552585601807
    10. '<|end|>' → logprob: -6.047552585601807

Token 17: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.017084680497646332
    2. '
' → logprob: -4.76708459854126
    3. 'from' → logprob: -6.26708459854126
    4. 'def' → logprob: -6.64208459854126
    5. '```' → logprob: -6.89208459854126
    6. 'class' → logprob: -7.01708459854126
    7. '\n' → logprob: -7.26708459854126
    8. ',
' → logprob: -7.51708459854126
    9. '

' → logprob: -7.64208459854126
    10. ',' → logprob: -7.89208459854126

Token 18: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4571473300457001
    2. 'math' → logprob: -1.3321473598480225
    3. ' json' → logprob: -2.7071473598480225
    4. 'json' → logprob: -3.4571473598480225
    5. ' operator' → logprob: -5.957147121429443
    6. 'operator' → logprob: -6.457147121429443
    7. ' keyword' → logprob: -8.457147598266602
    8. 'keyword' → logprob: -9.207147598266602
    9. ' threading' → logprob: -9.707147598266602
    10. ' functools' → logprob: -10.082147598266602

Token 19: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.055958349257707596
    2. '
' → logprob: -3.8059582710266113
    3. '```' → logprob: -3.9309582710266113
    4. '.' → logprob: -6.180958271026611
    5. ',' → logprob: -6.305958271026611
    6. 'from' → logprob: -6.305958271026611
    7. '\n' → logprob: -6.305958271026611
    8. ',
' → logprob: -6.680958271026611
    9. '\' → logprob: -7.555958271026611
    10. 'def' → logprob: -7.555958271026611

Token 20: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4218910038471222
    2. 'import' → logprob: -1.2968909740447998
    3. ',' → logprob: -3.5468909740448
    4. '```' → logprob: -4.671891212463379
    5. '
' → logprob: -5.171891212463379
    6. '\' → logprob: -5.171891212463379
    7. '#' → logprob: -5.421891212463379
    8. '.
' → logprob: -5.546891212463379
    9. '\n' → logprob: -6.046891212463379
    10. ',
' → logprob: -6.046891212463379

Token 21: ' string' (ID: 1621)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.4406471252441406
    2. 'operator' → logprob: -1.9406471252441406
    3. 'random' → logprob: -2.0656471252441406
    4. ' random' → logprob: -2.5656471252441406
    5. ' os' → logprob: -6.190647125244141
    6. ' numbers' → logprob: -6.315647125244141
    7. 'os' → logprob: -6.815647125244141
    8. 'numbers' → logprob: -6.815647125244141
    9. ' numpy' → logprob: -7.565647125244141
    10. ' re' → logprob: -7.815647125244141

Token 22: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8783428072929382
    2. '
' → logprob: -1.503342866897583
    3. '<|end|>' → logprob: -1.503342866897583
    4. '\n' → logprob: -2.503342866897583
    5. ',' → logprob: -4.128342628479004
    6. '.' → logprob: -4.503342628479004
    7. '#' → logprob: -4.878342628479004
    8. '```' → logprob: -5.378342628479004
    9. '

' → logprob: -5.628342628479004
    10. '_' → logprob: -6.003342628479004

Token 23: 'import' (ID: 561)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.29021155834198
    2. '\n' → logprob: -1.29021155834198
    3. '
' → logprob: -2.0402116775512695
    4. 'import' → logprob: -2.0402116775512695
    5. ',' → logprob: -2.6652116775512695
    6. '```' → logprob: -3.6652116775512695
    7. '\' → logprob: -4.0402116775512695
    8. '

' → logprob: -4.1652116775512695
    9. '_' → logprob: -4.2902116775512695
    10. 'from' → logprob: -4.2902116775512695

Token 24: ' numpy' (ID: 19529)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.22263120114803314
    2. 'sys' → logprob: -2.3476312160491943
    3. ' random' → logprob: -2.7226312160491943
    4. 'random' → logprob: -3.7226312160491943
    5. ' re' → logprob: -4.847630977630615
    6. 're' → logprob: -5.722630977630615
    7. 'time' → logprob: -6.972630977630615
    8. ' time' → logprob: -6.972630977630615
    9. ' threading' → logprob: -8.347631454467773
    10. ' typing' → logprob: -8.597631454467773

Token 25: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005864324979484081
    2. ' as' → logprob: -5.630864143371582
    3. 'as' → logprob: -7.255864143371582
    4. '.random' → logprob: -7.630864143371582
    5. '<|end|>' → logprob: -7.755864143371582
    6. '.ndarray' → logprob: -8.505864143371582
    7. '.as' → logprob: -8.880864143371582
    8. '.asarray' → logprob: -9.505864143371582
    9. '.numpy' → logprob: -9.755864143371582
    10. '.linalg' → logprob: -10.380864143371582

Token 26: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0891266018152237
    2. ' ' → logprob: -3.0891265869140625
    3. ' array' → logprob: -3.9641265869140625
    4. ' ndarray' → logprob: -4.0891265869140625
    5. ' numpy' → logprob: -6.3391265869140625
    6. 'array' → logprob: -7.0891265869140625
    7. '.ndarray' → logprob: -7.2141265869140625
    8. 'np' → logprob: -8.339126586914062
    9. ' None' → logprob: -9.214126586914062
    10. ' python' → logprob: -9.714126586914062

Token 27: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004574192222207785
    2. '\' → logprob: -7.004574298858643
    3. '
' → logprob: -7.254574298858643
    4. '\n' → logprob: -7.379574298858643
    5. '#' → logprob: -7.504574298858643
    6. '[' → logprob: -7.754574298858643
    7. '.
' → logprob: -8.129573822021484
    8. '<|end|>' → logprob: -8.629573822021484
    9. ',' → logprob: -8.754573822021484
    10. 'import' → logprob: -9.129573822021484

Token 28: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13478806614875793
    2. '#' → logprob: -3.3847880363464355
    3. '[' → logprob: -3.8847880363464355
    4. '
' → logprob: -4.0097880363464355
    5. '\' → logprob: -4.6347880363464355
    6. 'def' → logprob: -4.7597880363464355
    7. '<|end|>' → logprob: -4.7597880363464355
    8. '```' → logprob: -5.0097880363464355
    9. '\n' → logprob: -5.2597880363464355
    10. ',' → logprob: -6.2597880363464355

Token 29: ' sys' (ID: 12228)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.3623583912849426
    2. 'p' → logprob: -2.112358331680298
    3. ' scipy' → logprob: -2.487358331680298
    4. 'random' → logprob: -3.362358331680298
    5. 'sc' → logprob: -4.112358570098877
    6. 'torch' → logprob: -4.487358570098877
    7. ' random' → logprob: -4.612358570098877
    8. ' torch' → logprob: -4.737358570098877
    9. 'sys' → logprob: -5.112358570098877
    10. ' sys' → logprob: -5.362358570098877

Token 30: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5027529001235962
    2. '
' → logprob: -1.3777529001235962
    3. '\n' → logprob: -2.3777527809143066
    4. '

' → logprob: -3.5027527809143066
    5. '\' → logprob: -5.252752780914307
    6. '```' → logprob: -5.502752780914307
    7. '.
' → logprob: -6.127752780914307
    8. '<|end|>' → logprob: -6.252752780914307
    9. '' → logprob: -6.627752780914307
    10. '.

' → logprob: -6.752752780914307

Token 31: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6827734112739563
    2. '
' → logprob: -1.1827733516693115
    3. 'class' → logprob: -2.6827733516693115
    4. '```' → logprob: -3.3077733516693115
    5. '

' → logprob: -4.057773590087891
    6. '\' → logprob: -4.307773590087891
    7. 'd' → logprob: -4.557773590087891
    8. '.' → logprob: -4.557773590087891
    9. '#' → logprob: -4.807773590087891
    10. '\n' → logprob: -4.932773590087891

Token 32: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4498052223643754e-05
    2. '.exit' → logprob: -13.125014305114746
    3. ' .' → logprob: -13.250014305114746
    4. '.setdefault' → logprob: -13.625014305114746
    5. '.readline' → logprob: -13.750014305114746
    6. '.stdout' → logprob: -13.875014305114746
    7. '.argv' → logprob: -14.000014305114746
    8. '.`' → logprob: -14.250014305114746
    9. '.import' → logprob: -14.500014305114746
    10. '.stdin' → logprob: -14.625014305114746

Token 33: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7015049457550049
    2. '_trace' → logprob: -1.7015049457550049
    3. ' _' → logprob: -2.326504945755005
    4. '_version' → logprob: -2.576504945755005
    5. '_rec' → logprob: -2.701504945755005
    6. '_exc' → logprob: -3.326504945755005
    7. '_attr' → logprob: -3.576504945755005
    8. '_val' → logprob: -3.701504945755005
    9. 'attr' → logprob: -3.826504945755005
    10. '_depth' → logprob: -3.951504945755005

Token 34: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0011624845210462809
    2. 'urs' → logprob: -7.251162528991699
    3. 'ursive' → logprob: -8.2511625289917
    4. 'ur' → logprob: -9.3761625289917
    5. 'set' → logprob: -10.6261625289917
    6. '_limit' → logprob: -11.3761625289917
    7. '_set' → logprob: -11.3761625289917
    8. 'ursor' → logprob: -11.3761625289917
    9. 'limit' → logprob: -11.5011625289917
    10. '_' → logprob: -11.7511625289917

Token 35: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.2520003318786621
    2. '_limit' → logprob: -1.502000331878662
    3. '_depth' → logprob: -10.12700080871582
    4. ' limit' → logprob: -11.75200080871582
    5. 'lim' → logprob: -11.87700080871582
    6. 'depth' → logprob: -12.25200080871582
    7. '_lim' → logprob: -12.37700080871582
    8. '_LIMIT' → logprob: -13.00200080871582
    9. '-limit' → logprob: -13.00200080871582
    10. '_limits' → logprob: -14.12700080871582

Token 36: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.842555426876061e-06
    2. '(
' → logprob: -13.250004768371582
    3. ' (' → logprob: -14.125004768371582
    4. '(

' → logprob: -14.125004768371582
    5. '((' → logprob: -14.625004768371582
    6. '```' → logprob: -15.250004768371582
    7. '("("' → logprob: -15.750004768371582
    8. '()' → logprob: -15.750004768371582
    9. '40' → logprob: -16.5000057220459
    10. '(None' → logprob: -16.6250057220459

Token 37: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005242414306849241
    2. '100' → logprob: -5.255242347717285
    3. '300' → logprob: -12.505242347717285
    4. '200' → logprob: -13.255242347717285
    5. '500' → logprob: -13.505242347717285
    6. '250' → logprob: -13.880242347717285
    7. '1' → logprob: -14.755242347717285
    8. ' ' → logprob: -15.755242347717285
    9. '150' → logprob: -16.2552433013916
    10. '400' → logprob: -16.5052433013916

Token 38: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.1642531156539917
    2. '**' → logprob: -1.1642531156539917
    3. '6' → logprob: -1.6642531156539917
    4. '000' → logprob: -1.7892531156539917
    5. '00' → logprob: -4.039253234863281
    6. '8' → logprob: -6.914253234863281
    7. '0' → logprob: -7.914253234863281
    8. '5' → logprob: -8.664253234863281
    9. '07' → logprob: -9.539253234863281
    10. '06' → logprob: -10.539253234863281

Token 39: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0034084629733115435
    2. '9' → logprob: -5.753408432006836
    3. '8' → logprob: -8.378408432006836
    4. '6' → logprob: -13.878408432006836
    5. '```' → logprob: -18.378408432006836
    6. '**' → logprob: -19.878408432006836
    7. ')' → logprob: -20.753408432006836
    8. ' ' → logprob: -21.378408432006836
    9. '+' → logprob: -21.628408432006836
    10. '۷' → logprob: -22.128408432006836

Token 40: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -15.750000953674316
    4. ')

' → logprob: -18.375
    5. '))' → logprob: -18.5
    6. ')
' → logprob: -18.625
    7. '),' → logprob: -19.125
    8. ')`' → logprob: -19.625
    9. '
' → logprob: -19.875
    10. '}' → logprob: -20.0

Token 41: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1031924486160278
    2. 'class' → logprob: -1.2281924486160278
    3. '

' → logprob: -1.4781924486160278
    4. 'def' → logprob: -1.9781924486160278
    5. '
' → logprob: -5.978192329406738
    6. 'n' → logprob: -6.103192329406738
    7. 'd' → logprob: -6.603192329406738
    8. '\' → logprob: -7.353192329406738
    9. '\n' → logprob: -7.603192329406738
    10. '#' → logprob: -7.853192329406738

Token 42: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05953541398048401
    2. '_' → logprob: -3.309535503387451
    3. ' main' → logprob: -4.559535503387451
    4. ' _' → logprob: -5.434535503387451
    5. ' dfs' → logprob: -5.934535503387451
    6. ' solve' → logprob: -6.184535503387451
    7. ' binary' → logprob: -8.434535026550293
    8. '  ' → logprob: -8.559535026550293
    9. ' ' → logprob: -8.934535026550293
    10. ' s' → logprob: -9.059535026550293

Token 43: 'S' (ID: 50)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.8428803086280823
    2. 'main' → logprob: -1.2178802490234375
    3. 'solve' → logprob: -1.8428802490234375
    4. 'binary' → logprob: -3.5928802490234375
    5. '_' → logprob: -4.2178802490234375
    6. 'bis' → logprob: -4.9678802490234375
    7. 'lower' → logprob: -5.0928802490234375
    8. '_main' → logprob: -5.3428802490234375
    9. 'build' → logprob: -5.5928802490234375
    10. 'calc' → logprob: -5.5928802490234375

Token 44: '():
' (ID: 8595)
  Prédit: 'olve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.32197368144989014
    2. 't' → logprob: -2.9469738006591797
    3. 'ieve' → logprob: -3.3219738006591797
    4. 'earch' → logprob: -3.5719738006591797
    5. 'CC' → logprob: -3.8219738006591797
    6. 'egment' → logprob: -4.07197380065918
    7. 'qrt' → logprob: -4.57197380065918
    8. 'ort' → logprob: -4.69697380065918
    9. 'et' → logprob: -4.94697380065918
    10. 'uffix' → logprob: -5.07197380065918

Token 45: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5589597225189209
    2. 'return' → logprob: -0.9339597225189209
    3. '   ' → logprob: -3.683959722518921
    4. ' ' → logprob: -5.3089599609375
    5. ' sys' → logprob: -6.0589599609375
    6. '    ' → logprob: -7.4339599609375
    7. 'sys' → logprob: -7.5589599609375
    8. 'int' → logprob: -7.8089599609375
    9. 'input' → logprob: -8.1839599609375
    10. ' input' → logprob: -8.6839599609375

Token 46: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15382693707942963
    2. ' return' → logprob: -2.028826951980591
    3. 'input' → logprob: -5.528826713562012
    4. 'sys' → logprob: -5.778826713562012
    5. ' sys' → logprob: -6.403826713562012
    6. 'int' → logprob: -7.028826713562012
    7. ' input' → logprob: -7.653826713562012
    8. 'list' → logprob: -8.778826713562012
    9. 'np' → logprob: -9.028826713562012
    10. 'pass' → logprob: -9.028826713562012

Token 47: ' sys' (ID: 12228)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.2552273273468018
    2. ' sys' → logprob: -1.6302273273468018
    3. 'int' → logprob: -1.8802273273468018
    4. ' list' → logprob: -2.0052273273468018
    5. 'sys' → logprob: -2.3802273273468018
    6. '[]' → logprob: -3.1302273273468018
    7. 'input' → logprob: -3.5052273273468018
    8. ' int' → logprob: -4.130227088928223
    9. ' []' → logprob: -4.255227088928223
    10. ' map' → logprob: -4.630227088928223

Token 48: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.3544423381972592e-05
    2. '.stdout' → logprob: -11.75001335144043
    3. '.' → logprob: -12.25001335144043
    4. '.argv' → logprob: -15.00001335144043
    5. '.std' → logprob: -15.25001335144043
    6. 'stdin' → logprob: -16.50001335144043
    7. '.readline' → logprob: -16.75001335144043
    8. '.stderr' → logprob: -17.12501335144043
    9. '.version' → logprob: -17.25001335144043
    10. '._' → logprob: -18.00001335144043

Token 49: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -9.209963900502771e-05
    2. 'read' → logprob: -9.875092506408691
    3. '.read' → logprob: -10.250092506408691
    4. '.' → logprob: -12.750092506408691
    5. 'buffer' → logprob: -13.875092506408691
    6. ' readline' → logprob: -14.250092506408691
    7. '.buffer' → logprob: -14.875092506408691
    8. '.readlines' → logprob: -15.250092506408691
    9. '_read' → logprob: -16.375091552734375
    10. 'rea' → logprob: -18.625091552734375

Token 50: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3133186101913452
    2. '().' → logprob: -1.3133186101913452
    3. '()
' → logprob: -10.938318252563477
    4. '(' → logprob: -11.188318252563477
    5. '()

' → logprob: -11.688318252563477
    6. '()\' → logprob: -12.188318252563477
    7. '())' → logprob: -13.563318252563477
    8. '.' → logprob: -13.688318252563477
    9. ' ()' → logprob: -13.688318252563477
    10. '().__' → logprob: -13.813318252563477

Token 51: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5759400725364685
    2. 'rstrip' → logprob: -0.8259400725364685
    3. ' strip' → logprob: -15.200940132141113
    4. '.rstrip' → logprob: -16.325939178466797
    5. 'rst' → logprob: -16.450939178466797
    6. 'read' → logprob: -17.200939178466797
    7. '_strip' → logprob: -17.700939178466797
    8. 'r' → logprob: -17.825939178466797
    9. '(strip' → logprob: -17.950939178466797
    10. 'decode' → logprob: -18.200939178466797

Token 52: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00040576665196567774
    2. '(' → logprob: -8.750405311584473
    3. '()
' → logprob: -9.250405311584473
    4. '()

' → logprob: -9.250405311584473
    5. '()\' → logprob: -10.125405311584473
    6. '().' → logprob: -11.625405311584473
    7. ' ()' → logprob: -13.125405311584473
    8. 'def' → logprob: -14.125405311584473
    9. '()]' → logprob: -14.250405311584473
    10. '#' → logprob: -14.375405311584473

Token 53: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00023810577113181353
    2. 'class' → logprob: -8.875238418579102
    3. 'd' → logprob: -10.625238418579102
    4. '\' → logprob: -10.875238418579102
    5. '
' → logprob: -11.125238418579102
    6. 'de' → logprob: -11.250238418579102
    7. '```' → logprob: -11.750238418579102
    8. '#' → logprob: -11.875238418579102
    9. '    
' → logprob: -13.125238418579102
    10. ' def' → logprob: -13.500238418579102

Token 54: ' I' (ID: 357)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.255063772201538
    2. ' main' → logprob: -1.505063772201538
    3. '_main' → logprob: -1.630063772201538
    4. '_S' → logprob: -1.880063772201538
    5. 'main' → logprob: -3.630063772201538
    6. '_s' → logprob: -3.755063772201538
    7. '_T' → logprob: -4.255064010620117
    8. '()' → logprob: -4.755064010620117
    9. ' ' → logprob: -4.755064010620117
    10. '_A' → logprob: -4.880064010620117

Token 55: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8908888101577759
    2. 'n' → logprob: -1.0158888101577759
    3. 'nt' → logprob: -1.6408888101577759
    4. 'N' → logprob: -3.6408886909484863
    5. '():' → logprob: -5.640888690948486
    6. 'nit' → logprob: -6.390888690948486
    7. 'NT' → logprob: -7.515888690948486
    8. '_' → logprob: -7.890888690948486
    9. '_n' → logprob: -7.890888690948486
    10. '():
' → logprob: -9.015889167785645

Token 56: '   ' (ID: 271)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.39448437094688416
    2. 'eturn' → logprob: -1.6444844007492065
    3. ' return' → logprob: -3.269484281539917
    4. 'return' → logprob: -3.644484281539917
    5. 'n' → logprob: -3.769484281539917
    6. ' =' → logprob: -4.019484519958496
    7. 'int' → logprob: -4.394484519958496
    8. ' ' → logprob: -5.144484519958496
    9. ' nt' → logprob: -5.644484519958496
    10. '=int' → logprob: -5.894484519958496

Token 57: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5194308757781982
    2. 'int' → logprob: -1.5194308757781982
    3. ' return' → logprob: -1.7694308757781982
    4. ' int' → logprob: -4.144431114196777
    5. 'eturn' → logprob: -11.894431114196777
    6. '(int' → logprob: -12.269431114196777
    7. '=int' → logprob: -12.519431114196777
    8. '   ' → logprob: -13.644431114196777
    9. 'ret' → logprob: -13.769431114196777
    10. ' ' → logprob: -13.894431114196777

Token 58: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759577751159668
    2. ' int' → logprob: -0.8259577751159668
    3. '	int' → logprob: -11.450958251953125
    4. ' ' → logprob: -12.950958251953125
    5. '  ' → logprob: -13.825958251953125
    6. '(int' → logprob: -13.825958251953125
    7. '<int' → logprob: -14.075958251953125
    8. '=int' → logprob: -14.575958251953125
    9. '[int' → logprob: -14.950958251953125
    10. ' in' → logprob: -15.075958251953125

Token 59: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09799863398075104
    2. '(_' → logprob: -2.72299861907959
    3. '(sys' → logprob: -3.59799861907959
    4. '(_)' → logprob: -9.09799861907959
    5. '(
' → logprob: -9.47299861907959
    6. '(I' → logprob: -10.34799861907959
    7. '((' → logprob: -11.22299861907959
    8. 'sys' → logprob: -11.34799861907959
    9. '(

' → logprob: -11.59799861907959
    10. '(S' → logprob: -11.72299861907959

Token 60: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.013590607792139053
    2. '._' → logprob: -4.7635908126831055
    3. '.readline' → logprob: -5.5135908126831055
    4. '.' → logprob: -7.3885908126831055
    5. '.stdout' → logprob: -9.138590812683105
    6. 'stdin' → logprob: -9.638590812683105
    7. '().' → logprob: -10.263590812683105
    8. '(stdin' → logprob: -10.263590812683105
    9. '.argv' → logprob: -10.388590812683105
    10. '.setdefault' → logprob: -12.263590812683105

Token 61: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.630610641877865e-06
    2. '.' → logprob: -12.125006675720215
    3. '.read' → logprob: -14.625006675720215
    4. ' readline' → logprob: -14.625006675720215
    5. 'read' → logprob: -15.375006675720215
    6. ' .' → logprob: -17.0000057220459
    7. '.stdin' → logprob: -17.1250057220459
    8. '().' → logprob: -18.3750057220459
    9. '_read' → logprob: -19.7500057220459
    10. '._' → logprob: -20.3750057220459

Token 62: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16188041865825653
    2. '().' → logprob: -1.911880373954773
    3. '()' → logprob: -6.4118804931640625
    4. '.readline' → logprob: -12.411880493164062
    5. ' ())' → logprob: -12.661880493164062
    6. '()]' → logprob: -13.786880493164062
    7. '();)' → logprob: -13.911880493164062
    8. '()))' → logprob: -14.036880493164062
    9. '())
' → logprob: -14.411880493164062
    10. '（）' → logprob: -14.911880493164062

Token 63: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.127649188041687
    2. 'read' → logprob: -2.1276493072509766
    3. 'strip' → logprob: -7.252649307250977
    4. 'r' → logprob: -12.377649307250977
    5. ')' → logprob: -12.877649307250977
    6. ' readline' → logprob: -13.127649307250977
    7. '.readline' → logprob: -13.252649307250977
    8. 'rl' → logprob: -14.002649307250977
    9. 'rd' → logprob: -15.127649307250977
    10. 'rcode' → logprob: -15.127649307250977

Token 64: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009507640497758985
    2. '()' → logprob: -7.000950813293457
    3. ')' → logprob: -10.250950813293457
    4. '())
' → logprob: -13.250950813293457
    5. ' ())' → logprob: -14.000950813293457
    6. '()))' → logprob: -14.375950813293457
    7. '(' → logprob: -14.875950813293457
    8. '().' → logprob: -16.00094985961914
    9. '())

' → logprob: -16.12594985961914
    10. '()]' → logprob: -16.12594985961914

Token 65: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.786196975852363e-05
    2. 'd' → logprob: -10.875038146972656
    3. '\' → logprob: -11.375038146972656
    4. '```' → logprob: -12.500038146972656
    5. ' def' → logprob: -14.250038146972656
    6. '#' → logprob: -14.750038146972656
    7. 'de' → logprob: -14.750038146972656
    8. '\n' → logprob: -15.000038146972656
    9. '
' → logprob: -15.125038146972656
    10. '

' → logprob: -15.625038146972656

Token 66: ' LI' (ID: 14875)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5199517607688904
    2. 'S' → logprob: -1.7699518203735352
    3. 'A' → logprob: -2.644951820373535
    4. ' L' → logprob: -3.019951820373535
    5. 'LS' → logprob: -3.394951820373535
    6. 'LI' → logprob: -3.769951820373535
    7. ' S' → logprob: -5.019951820373535
    8. 'Ls' → logprob: -5.269951820373535
    9. ' LS' → logprob: -5.394951820373535
    10. 'list' → logprob: -5.394951820373535

Token 67: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06550431996583939
    2. '():' → logprob: -2.815504312515259
    3. 'st' → logprob: -6.065504550933838
    4. '[]' → logprob: -8.06550407409668
    5. ' ()' → logprob: -8.06550407409668
    6. 's' → logprob: -9.06550407409668
    7. '():
' → logprob: -9.19050407409668
    8. 'ist' → logprob: -9.19050407409668
    9. 'n' → logprob: -10.19050407409668
    10. '()[' → logprob: -10.19050407409668

Token 68: '   ' (ID: 271)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5326343178749084
    2. 'return' → logprob: -1.2826342582702637
    3. ' list' → logprob: -2.5326342582702637
    4. ' return' → logprob: -2.9076342582702637
    5. 'map' → logprob: -7.532634258270264
    6. '   ' → logprob: -7.782634258270264
    7. '=list' → logprob: -8.782634735107422
    8. ' map' → logprob: -9.157634735107422
    9. ':list' → logprob: -9.407634735107422
    10. '[' → logprob: -9.532634735107422

Token 69: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011217580176889896
    2. 'return' (adapté à ' return') → logprob: -4.5112175941467285
    3. ' list' → logprob: -9.13621711730957
    4. 'def' → logprob: -10.76121711730957
    5. 'map' → logprob: -10.76121711730957
    6. 'lambda' → logprob: -11.38621711730957
    7. ' return' → logprob: -12.01121711730957
    8. '[' → logprob: -14.51121711730957
    9. '[list' → logprob: -14.51121711730957
    10. 'sys' → logprob: -14.76121711730957

Token 70: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.006744616664946079
    2. ' list' → logprob: -5.006744384765625
    3. '[list' → logprob: -10.506744384765625
    4. '	list' → logprob: -14.256744384765625
    5. '[' → logprob: -14.256744384765625
    6. '(list' → logprob: -15.631744384765625
    7. 'map' → logprob: -15.631744384765625
    8. 'ist' → logprob: -16.756744384765625
    9. ' ' → logprob: -16.756744384765625
    10. '   ' → logprob: -17.006744384765625

Token 71: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00671940203756094
    2. '(' → logprob: -5.006719589233398
    3. '(sys' → logprob: -13.381719589233398
    4. '(
' → logprob: -13.881719589233398
    5. '()' → logprob: -14.506719589233398
    6. 'map' → logprob: -15.131719589233398
    7. '(int' → logprob: -15.256719589233398
    8. '(

' → logprob: -15.506719589233398
    9. ' map' → logprob: -16.6317195892334
    10. '(np' → logprob: -16.6317195892334

Token 72: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001887591351987794
    2. '(' → logprob: -8.750188827514648
    3. 'int' → logprob: -10.875188827514648
    4. ',int' → logprob: -12.500188827514648
    5. '   ' → logprob: -13.000188827514648
    6. '```' → logprob: -13.625188827514648
    7. '(
' → logprob: -13.875188827514648
    8. '=int' → logprob: -14.125188827514648
    9. ')' → logprob: -14.375188827514648
    10. ' int' → logprob: -14.625188827514648

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01678897626698017
    2. '(sys' → logprob: -4.141788959503174
    3. ' ,' → logprob: -8.016789436340332
    4. 'sys' → logprob: -8.641789436340332
    5. '=sys' → logprob: -9.391789436340332
    6. ' sys' → logprob: -10.016789436340332
    7. ',(' → logprob: -10.016789436340332
    8. '(' → logprob: -10.891789436340332
    9. '	sys' → logprob: -10.891789436340332
    10. ',System' → logprob: -11.766789436340332

Token 74: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20366357266902924
    2. '_S' → logprob: -2.3286635875701904
    3. ' sys' → logprob: -2.4536635875701904
    4. '_sys' → logprob: -8.57866382598877
    5. '_SYS' → logprob: -8.95366382598877
    6. '(sys' → logprob: -9.20366382598877
    7. '	sys' → logprob: -9.45366382598877
    8. '_s' → logprob: -9.45366382598877
    9. '   ' → logprob: -9.70366382598877
    10. ' _' → logprob: -9.82866382598877

Token 75: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.8087270038668066e-05
    2. '.readline' → logprob: -11.750027656555176
    3. 'stdin' → logprob: -11.875027656555176
    4. '.' → logprob: -12.000027656555176
    5. '.stdout' → logprob: -13.125027656555176
    6. '(stdin' → logprob: -13.250027656555176
    7. '```' → logprob: -13.500027656555176
    8. '._' → logprob: -14.000027656555176
    9. '=sys' → logprob: -15.875027656555176
    10. '.argv' → logprob: -16.125028610229492

Token 76: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.16032791137695312
    2. '().' → logprob: -1.9103279113769531
    3. '()' → logprob: -10.035327911376953
    4. '.' → logprob: -10.035327911376953
    5. '().__' → logprob: -11.910327911376953
    6. ')' → logprob: -12.910327911376953
    7. '   ' → logprob: -13.410327911376953
    8. ' readline' → logprob: -14.035327911376953
    9. '._' → logprob: -14.410327911376953
    10. '.read' → logprob: -14.410327911376953

Token 77: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020628207130357623
    2. '.readline' → logprob: -8.500205993652344
    3. ' ().' → logprob: -13.625205993652344
    4. '()' → logprob: -14.000205993652344
    5. '.' → logprob: -15.125205993652344
    6. ').' → logprob: -16.250205993652344
    7. '.rstrip' → logprob: -16.375205993652344
    8. ' .' → logprob: -16.625205993652344
    9. '().__' → logprob: -16.750205993652344
    10. ' readline' → logprob: -16.875205993652344

Token 78: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.014178436249494553
    2. 'read' → logprob: -4.264178276062012
    3. 'strip' → logprob: -11.514178276062012
    4. 'split' → logprob: -12.514178276062012
    5. '.readline' → logprob: -14.389178276062012
    6. 'r' → logprob: -15.889178276062012
    7. '.rstrip' → logprob: -16.264179229736328
    8. ')' → logprob: -16.389179229736328
    9. 'rl' → logprob: -16.389179229736328
    10. 'rcode' → logprob: -16.389179229736328

Token 79: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.180258191714529e-06
    2. '()' → logprob: -11.875008583068848
    3. ' ().' → logprob: -14.250008583068848
    4. '(' → logprob: -14.625008583068848
    5. ')' → logprob: -16.62500762939453
    6. '.' → logprob: -17.25000762939453
    7. '.split' → logprob: -17.62500762939453
    8. '()
' → logprob: -18.62500762939453
    9. ' .' → logprob: -18.75000762939453
    10. ' ' → logprob: -19.37500762939453

Token 80: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4140441635390744e-05
    2. ' split' → logprob: -11.625014305114746
    3. 'strip' → logprob: -12.500014305114746
    4. 'rstrip' → logprob: -14.500014305114746
    5. '(split' → logprob: -14.750014305114746
    6. 's' → logprob: -15.250014305114746
    7. ')' → logprob: -15.375014305114746
    8. '().' → logprob: -16.75001335144043
    9. 'spl' → logprob: -17.37501335144043
    10. 'decode' → logprob: -17.50001335144043

Token 81: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03810448944568634
    2. '()' → logprob: -3.78810453414917
    3. '())' → logprob: -4.53810453414917
    4. '))' → logprob: -5.66310453414917
    5. '()))
' → logprob: -8.163104057312012
    6. '(' → logprob: -8.413104057312012
    7. ')' → logprob: -10.038104057312012
    8. '())))' → logprob: -10.788104057312012
    9. '()))

' → logprob: -13.163104057312012
    10. '()));' → logprob: -13.288104057312012

Token 82: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02283880114555359
    2. '
' → logprob: -4.272838592529297
    3. 'd' → logprob: -5.397838592529297
    4. 'class' → logprob: -5.772838592529297
    5. '

' → logprob: -7.772838592529297
    6. '\' → logprob: -8.522838592529297
    7. '
' → logprob: -8.772838592529297
    8. '```' → logprob: -9.147838592529297
    9. '\n' → logprob: -10.897838592529297
    10. '' → logprob: -11.022838592529297

Token 83: ' LS' (ID: 60790)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.7675294280052185
    2. 'S' → logprob: -1.0175294876098633
    3. 'L' → logprob: -2.0175294876098633
    4. ' LS' → logprob: -4.392529487609863
    5. ' L' → logprob: -4.517529487609863
    6. 'LI' → logprob: -4.892529487609863
    7. ' S' → logprob: -5.142529487609863
    8. 'I' → logprob: -7.017529487609863
    9. 'SI' → logprob: -7.142529487609863
    10. 'A' → logprob: -7.517529487609863

Token 84: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005657148081809282
    2. '()' → logprob: -5.755657196044922
    3. '():
' → logprob: -6.005657196044922
    4. '()>' → logprob: -12.005657196044922
    5. '():

' → logprob: -13.380657196044922
    6. ' ():' → logprob: -13.380657196044922
    7. '():
' → logprob: -13.880657196044922
    8. ' ()' → logprob: -14.255657196044922
    9. '()">' → logprob: -15.255657196044922
    10. '()<' → logprob: -16.005657196044922

Token 85: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4521779716014862
    2. 'sys' → logprob: -1.4521780014038086
    3. 'return' → logprob: -3.0771780014038086
    4. 'lambda' → logprob: -3.8271780014038086
    5. '():
' → logprob: -3.9521780014038086
    6. '():' → logprob: -4.077178001403809
    7. '   ' → logprob: -4.827178001403809
    8. 'def' → logprob: -4.952178001403809
    9. '()
' → logprob: -5.952178001403809
    10. ' sys' → logprob: -6.827178001403809

Token 86: ' return' (ID: 622)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.9500773549079895
    2. 'lambda' → logprob: -1.0750772953033447
    3. 'return' (adapté à ' return') → logprob: -1.4500772953033447
    4. 'list' → logprob: -3.5750772953033447
    5. ' lambda' → logprob: -5.325077533721924
    6. ' return' → logprob: -6.200077533721924
    7. ' sys' → logprob: -6.825077533721924
    8. '   ' → logprob: -7.200077533721924
    9. 'def' → logprob: -7.950077533721924
    10. '(lambda' → logprob: -8.950077056884766

Token 87: ' list' (ID: 1562)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1260070502758026
    2. 'sys' → logprob: -2.251007080078125
    3. ' list' → logprob: -4.501007080078125
    4. 'list' → logprob: -6.251007080078125
    5. '(sys' → logprob: -10.126007080078125
    6. ' ' → logprob: -11.876007080078125
    7. '	sys' → logprob: -12.126007080078125
    8. ' [' → logprob: -12.501007080078125
    9. '_sys' → logprob: -13.001007080078125
    10. '[' → logprob: -13.126007080078125

Token 88: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.20845098793506622
    2. '(' → logprob: -1.9584510326385498
    3. '(map' → logprob: -3.70845103263855
    4. '(str' → logprob: -4.208450794219971
    5. '(lambda' → logprob: -5.458450794219971
    6. '(string' → logprob: -6.583450794219971
    7. '(system' → logprob: -6.833450794219971
    8. '(strings' → logprob: -8.458451271057129
    9. '()' → logprob: -8.708451271057129
    10. '(split' → logprob: -8.833451271057129

Token 89: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.200166469876422e-06
    2. '.stdout' → logprob: -12.875004768371582
    3. '.std' → logprob: -13.625004768371582
    4. 'stdin' → logprob: -13.875004768371582
    5. '.' → logprob: -14.625004768371582
    6. '.argv' → logprob: -17.6250057220459
    7. '.readline' → logprob: -18.0000057220459
    8. '```' → logprob: -18.1250057220459
    9. ' stdin' → logprob: -18.5000057220459
    10. '.stderr' → logprob: -18.5000057220459

Token 90: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005169323412701488
    2. '.stdin' → logprob: -7.625516891479492
    3. '().' → logprob: -11.500516891479492
    4. 'stdin' → logprob: -11.750516891479492
    5. '```' → logprob: -12.375516891479492
    6. '.readlines' → logprob: -12.750516891479492
    7. '(stdin' → logprob: -14.250516891479492
    8. '.' → logprob: -14.500516891479492
    9. 'line' → logprob: -14.625516891479492
    10. '.stdout' → logprob: -15.125516891479492

Token 91: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001593195047462359
    2. '()' → logprob: -8.75015926361084
    3. ' ().' → logprob: -14.37515926361084
    4. '()).' → logprob: -16.750160217285156
    5. '().'' → logprob: -17.250160217285156
    6. '().__' → logprob: -17.375160217285156
    7. '(' → logprob: -17.500160217285156
    8. ' ()' → logprob: -18.125160217285156
    9. '()-' → logprob: -18.625160217285156
    10. '.' → logprob: -19.125160217285156

Token 92: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -1.4855663721391466e-05
    2. 'strip' → logprob: -11.750015258789062
    3. 'read' → logprob: -12.750015258789062
    4. 'split' → logprob: -13.125015258789062
    5. '().' → logprob: -13.875015258789062
    6. '.rstrip' → logprob: -14.750015258789062
    7. 'r' → logprob: -15.000015258789062
    8. 'rl' → logprob: -16.000015258789062
    9. 'readonly' → logprob: -16.750015258789062
    10. 'rt' → logprob: -16.750015258789062

Token 93: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.3458322731312364e-06
    2. '()' → logprob: -12.000007629394531
    3. ' ().' → logprob: -13.750007629394531
    4. '(' → logprob: -17.50000762939453
    5. ')' → logprob: -19.50000762939453
    6. '.' → logprob: -19.50000762939453
    7. ' ()' → logprob: -20.00000762939453
    8. '())' → logprob: -20.62500762939453
    9. ' .' → logprob: -20.75000762939453
    10. '.split' → logprob: -21.37500762939453

Token 94: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. ' split' → logprob: -13.500001907348633
    3. 'strip' → logprob: -16.625001907348633
    4. 'spl' → logprob: -17.000001907348633
    5. 'rstrip' → logprob: -18.500001907348633
    6. '.split' → logprob: -19.125001907348633
    7. 's' → logprob: -20.000001907348633
    8. '(split' → logprob: -20.625001907348633
    9. 'sp' → logprob: -20.875001907348633
    10. 'plit' → logprob: -21.500001907348633

Token 95: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007440392859280109
    2. '()' → logprob: -5.007440567016602
    3. ')' → logprob: -7.257440567016602
    4. '()))' → logprob: -11.507440567016602
    5. ' ())' → logprob: -12.507440567016602
    6. '())
' → logprob: -12.882440567016602
    7. '(' → logprob: -13.757440567016602
    8. '()]' → logprob: -14.257440567016602
    9. '();)' → logprob: -14.507440567016602
    10. '()[' → logprob: -15.257440567016602

Token 96: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.042271532118320465
    2. 'class' → logprob: -3.292271614074707
    3. 'd' → logprob: -6.042271614074707
    4. 'n' → logprob: -6.917271614074707
    5. 'N' → logprob: -7.917271614074707
    6. 'D' → logprob: -8.667271614074707
    7. 'H' → logprob: -9.667271614074707
    8. 'from' → logprob: -10.292271614074707
    9. '
' → logprob: -10.292271614074707
    10. 'dp' → logprob: -10.417271614074707

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05868055671453476
    2. ',' → logprob: -3.558680534362793
    3. '=' → logprob: -3.683680534362793
    4. ' ' → logprob: -5.808680534362793
    5. ' ,' → logprob: -8.558680534362793
    6. '(' → logprob: -9.683680534362793
    7. ')' → logprob: -10.308680534362793
    8. '<|end|>' → logprob: -10.808680534362793
    9. '.' → logprob: -10.933680534362793
    10. '=int' → logprob: -11.808680534362793

Token 98: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.22377365827560425
    2. ' I' → logprob: -1.973773717880249
    3. 'LI' → logprob: -2.848773717880249
    4. ' LI' → logprob: -5.72377347946167
    5. 'int' → logprob: -8.348773956298828
    6. '10' → logprob: -9.598773956298828
    7. ' int' → logprob: -10.348773956298828
    8. ' ' → logprob: -10.973773956298828
    9. 'LS' → logprob: -10.973773956298828
    10. '0' → logprob: -12.348773956298828

Token 99: '()
' (ID: 1234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8823599815368652
    2. ' ' → logprob: -1.1323599815368652
    3. '<|end|>' → logprob: -2.0073599815368652
    4. ')' → logprob: -3.3823599815368652
    5. '(' → logprob: -3.8823599815368652
    6. '
' → logprob: -4.132359981536865
    7. '#' → logprob: -4.257359981536865
    8. '[' → logprob: -5.007359981536865
    9. 'a' → logprob: -5.257359981536865
    10. ' 
' → logprob: -5.257359981536865

Token 100: 'S' (ID: 50)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08981700241565704
    2. 'a' → logprob: -2.7148170471191406
    3. 'H' → logprob: -5.214817047119141
    4. 'h' → logprob: -6.089817047119141
    5. 'S' → logprob: -6.214817047119141
    6. 'arr' → logprob: -6.339817047119141
    7. 'L' → logprob: -6.464817047119141
    8. 'lst' → logprob: -6.714817047119141
    9. 'P' → logprob: -7.589817047119141
    10. 'X' → logprob: -7.714817047119141

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5762125253677368
    2. '=' → logprob: -0.8262125253677368
    3. 's' → logprob: -8.326212882995605
    4. ',' → logprob: -11.201212882995605
    5. ' ' → logprob: -12.076212882995605
    6. '=[]' → logprob: -12.826212882995605
    7. '=s' → logprob: -13.326212882995605
    8. '=S' → logprob: -14.076212882995605
    9. '＝' → logprob: -14.201212882995605
    10. '[' → logprob: -14.451212882995605

Token 102: ' _' (ID: 1175)
  Prédit: '_S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.0002644351334311068
    2. 'S' → logprob: -8.625264167785645
    3. 'I' → logprob: -11.000264167785645
    4. '_ST' → logprob: -11.375264167785645
    5. 'sys' → logprob: -11.500264167785645
    6. '_I' → logprob: -12.000264167785645
    7. '_s' → logprob: -12.000264167785645
    8. ' _' → logprob: -12.125264167785645
    9. '_STR' → logprob: -12.750264167785645
    10. 'str' → logprob: -12.875264167785645

Token 103: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.723973582556937e-05
    2. '_S' → logprob: -11.375017166137695
    3. '()' → logprob: -12.125017166137695
    4. ' S' → logprob: -15.750017166137695
    5. '(S' → logprob: -16.875017166137695
    6. 'Ｓ' → logprob: -17.125017166137695
    7. '(' → logprob: -17.500017166137695
    8. '.S' → logprob: -17.500017166137695
    9. ''S' → logprob: -17.750017166137695
    10. '('' → logprob: -17.875017166137695

Token 104: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3619247674942017
    2. '()' → logprob: -2.236924648284912
    3. '_' → logprob: -2.361924648284912
    4. '.' → logprob: -2.486924648284912
    5. 'count' → logprob: -2.486924648284912
    6. '=' → logprob: -2.736924648284912
    7. '[' → logprob: -2.986924648284912
    8. ')' → logprob: -3.861924648284912
    9. 'for' → logprob: -3.861924648284912
    10. 'd' → logprob: -3.986924648284912

Token 105: 'last' (ID: 6684)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.312557190656662
    2. 'counts' → logprob: -2.9375572204589844
    3. 'count' → logprob: -3.0625572204589844
    4. 'cnt' → logprob: -3.3125572204589844
    5. 'freq' → logprob: -3.4375572204589844
    6. 'd' → logprob: -3.6875572204589844
    7. 'counter' → logprob: -4.062557220458984
    8. 'c' → logprob: -4.187557220458984
    9. 'ans' → logprob: -4.437557220458984
    10. 'from' → logprob: -5.187557220458984

Token 106: ' =' (ID: 314)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.8726032972335815
    2. '_idx' → logprob: -1.6226032972335815
    3. '_' → logprob: -1.7476032972335815
    4. '_index' → logprob: -2.872603416442871
    5. ' =' → logprob: -3.497603416442871
    6. '_seen' → logprob: -3.497603416442871
    7. '_occ' → logprob: -3.747603416442871
    8. 'pos' → logprob: -3.997603416442871
    9. '_oc' → logprob: -4.122603416442871
    10. '_i' → logprob: -4.747603416442871

Token 107: ' ''
' (ID: 25366)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4429319202899933
    2. '{}' → logprob: -1.067931890487671
    3. '[-' → logprob: -4.56793212890625
    4. '{-' → logprob: -6.94293212890625
    5. '{' → logprob: -7.56793212890625
    6. '0' → logprob: -7.94293212890625
    7. '""' → logprob: -8.19293212890625
    8. 'dict' → logprob: -8.31793212890625
    9. 'None' → logprob: -8.44293212890625
    10. '[' → logprob: -8.44293212890625

Token 108: 'count' (ID: 5420)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8650554418563843
    2. 'count' → logprob: -1.2400554418563843
    3. 'cnt' → logprob: -2.365055561065674
    4. 'res' → logprob: -2.490055561065674
    5. 'dp' → logprob: -3.490055561065674
    6. 'answer' → logprob: -3.865055561065674
    7. 'result' → logprob: -4.115055561065674
    8. 'for' → logprob: -4.990055561065674
    9. 'idx' → logprob: -5.115055561065674
    10. 'counter' → logprob: -5.740055561065674

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4773389995098114
    2. '=' → logprob: -0.9773390293121338
    3. '_' → logprob: -5.852338790893555
    4. ' ' → logprob: -8.602338790893555
    5. 's' → logprob: -8.602338790893555
    6. ',' → logprob: -12.352338790893555
    7. '_=' → logprob: -12.602338790893555
    8. '  ' → logprob: -12.852338790893555
    9. ' =
' → logprob: -12.977338790893555
    10. '[' → logprob: -14.227338790893555

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00760887423530221
    2. ' ' → logprob: -4.882608890533447
    3. '1' → logprob: -12.882608413696289
    4. '<|end|>' → logprob: -16.25760841369629
    5. '[]' → logprob: -16.88260841369629
    6. '```' → logprob: -17.13260841369629
    7. '{}' → logprob: -17.75760841369629
    8. '[' → logprob: -18.19510841369629
    9. '  ' → logprob: -18.44510841369629
    10. ' ' → logprob: -18.50760841369629

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011391390580683947
    2. '1' → logprob: -9.750113487243652
    3. ' ' → logprob: -10.000113487243652
    4. '[]' → logprob: -12.250113487243652
    5. '{}' → logprob: -12.500113487243652
    6. '[' → logprob: -14.500113487243652
    7. 'collections' → logprob: -14.625113487243652
    8. '[]
' → logprob: -15.375113487243652
    9. '{' → logprob: -16.37511444091797
    10. 'deque' → logprob: -16.93761444091797

Token 112: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3266544342041016
    2. 'max' → logprob: -1.4516544342041016
    3. 'result' → logprob: -1.5766544342041016
    4. 'res' → logprob: -2.0766544342041016
    5. 'ans' → logprob: -2.2016544342041016
    6. 'answer' → logprob: -3.2016544342041016
    7. 'pairs' → logprob: -4.701654434204102
    8. 'total' → logprob: -5.451654434204102
    9. 'groups' → logprob: -6.826654434204102
    10. 'results' → logprob: -7.576654434204102

Token 113: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9483156800270081
    2. 'res' → logprob: -1.6983156204223633
    3. 'ans' → logprob: -1.8233156204223633
    4. 'result' → logprob: -1.8233156204223633
    5. 'max' → logprob: -2.5733156204223633
    6. 'answer' → logprob: -4.698315620422363
    7. 'pairs' → logprob: -4.698315620422363
    8. 'total' → logprob: -5.198315620422363
    9. 'groups' → logprob: -6.073315620422363
    10. 'output' → logprob: -7.448315620422363

Token 114: ' i' (ID: 575)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.01295409258455038
    2. 'c' → logprob: -4.887954235076904
    3. ' i' → logprob: -5.387954235076904
    4. ' s' → logprob: -8.137953758239746
    5. ' ch' → logprob: -8.512953758239746
    6. 'i' → logprob: -9.637953758239746
    7. 'ch' → logprob: -9.887953758239746
    8. '_' → logprob: -10.137953758239746
    9. ' ' → logprob: -10.137953758239746
    10. ' char' → logprob: -10.637953758239746

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055992159992456436
    2. 'in' → logprob: -2.9309921264648438
    3. ' ' → logprob: -7.055992126464844
    4. 'range' → logprob: -9.555992126464844
    5. ' range' → logprob: -10.055992126464844
    6. 'n' → logprob: -10.180992126464844
    7. ',' → logprob: -10.305992126464844
    8. ' i' → logprob: -11.055992126464844
    9. 's' → logprob: -11.305992126464844
    10. '  ' → logprob: -11.930992126464844

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10357249528169632
    2. ' range' → logprob: -2.6035726070404053
    3. 'S' → logprob: -3.7285726070404053
    4. ' S' → logprob: -7.978572368621826
    5. '(range' → logprob: -12.478572845458984
    6. 's' → logprob: -13.603572845458984
    7. ' ' → logprob: -13.603572845458984
    8. '	range' → logprob: -14.103572845458984
    9. 'rang' → logprob: -14.103572845458984
    10. 'r' → logprob: -14.478572845458984

Token 117: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03166685998439789
    2. '(len' → logprob: -3.7816667556762695
    3. '(' → logprob: -4.7816667556762695
    4. '(n' → logprob: -13.03166675567627
    5. 'len' → logprob: -14.03166675567627
    6. '(
' → logprob: -14.65666675567627
    7. 'N' → logprob: -15.53166675567627
    8. '(L' → logprob: -15.65666675567627
    9. '(length' → logprob: -16.406667709350586
    10. '((' → logprob: -17.406667709350586

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2528431713581085
    2. '):
' → logprob: -1.5028431415557861
    3. ' ):' → logprob: -7.252843379974365
    4. ' ):
' → logprob: -9.127842903137207
    5. ')' → logprob: -9.877842903137207
    6. ':' → logprob: -10.502842903137207
    7. '):
' → logprob: -11.502842903137207
    8. '-' → logprob: -12.252842903137207
    9. '+' → logprob: -13.502842903137207
    10. ' :' → logprob: -15.127842903137207

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07088260352611542
    2. ' if' → logprob: -2.695882558822632
    3. ' ' → logprob: -7.945882797241211
    4. 'if' → logprob: -8.695882797241211
    5. '    
' → logprob: -9.445882797241211
    6. ' 
' → logprob: -9.695882797241211
    7. ' s' → logprob: -9.695882797241211
    8. ' c' → logprob: -9.945882797241211
    9. '    ' → logprob: -9.945882797241211
    10. 's' → logprob: -10.445882797241211

Token 120: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4618944823741913
    2. ' if' → logprob: -1.2118945121765137
    3. '   ' → logprob: -2.9618945121765137
    4. 'c' → logprob: -3.9618945121765137
    5. ' c' → logprob: -6.586894512176514
    6. 'ch' → logprob: -9.086894035339355
    7. ' ' → logprob: -10.836894035339355
    8. 'char' → logprob: -12.586894035339355
    9. 's' → logprob: -12.836894035339355
    10. ' ch' → logprob: -12.836894035339355

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0347910039126873
    2. '=' → logprob: -3.4097909927368164
    3. ' ' → logprob: -7.159790992736816
    4. '   ' → logprob: -8.659790992736816
    5. 't' → logprob: -9.284790992736816
    6. 'f' → logprob: -10.909790992736816
    7. 'if' → logprob: -11.284790992736816
    8. '=S' → logprob: -11.534790992736816
    9. 's' → logprob: -11.659790992736816
    10. '  ' → logprob: -11.909790992736816

Token 122: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00033546582562848926
    2. ' S' → logprob: -8.000335693359375
    3. ' ' → logprob: -17.000335693359375
    4. '   ' → logprob: -17.375335693359375
    5. '_S' → logprob: -18.500335693359375
    6. '>S' → logprob: -18.625335693359375
    7. '	S' → logprob: -19.000335693359375
    8. '`' → logprob: -20.125335693359375
    9. 's' → logprob: -20.375335693359375
    10. '  ' → logprob: -20.375335693359375

Token 123: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.576873758807778e-05
    2. '[' → logprob: -9.500075340270996
    3. '[I' → logprob: -14.750075340270996
    4. '[a' → logprob: -15.000075340270996
    5. ' [' → logprob: -16.000076293945312
    6. '[N' → logprob: -16.750076293945312
    7. 'i' → logprob: -18.125076293945312
    8. '[
' → logprob: -18.125076293945312
    9. '\[' → logprob: -18.750076293945312
    10. '[j' → logprob: -19.000076293945312

Token 124: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.20145057141780853
    2. ']' → logprob: -1.7014505863189697
    3. ']

' → logprob: -11.20145034790039
    4. ']
' → logprob: -11.57645034790039
    5. '   ' → logprob: -11.82645034790039
    6. ' ]
' → logprob: -13.20145034790039
    7. 'if' → logprob: -13.95145034790039
    8. ']==' → logprob: -14.07645034790039
    9. ']'
' → logprob: -14.45145034790039
    10. ' ]' → logprob: -14.82645034790039

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16938216984272003
    2. ' if' → logprob: -1.9193822145462036
    3. '
' → logprob: -5.794382095336914
    4. ' ' → logprob: -5.919382095336914
    5. 'if' → logprob: -6.294382095336914
    6. '    
' → logprob: -8.044382095336914
    7. '    ' → logprob: -8.294382095336914
    8. '<|end|>' → logprob: -8.294382095336914
    9. ' 
' → logprob: -8.544382095336914
    10. '  ' → logprob: -9.044382095336914

Token 126: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0011921331752091646
    2. ' if' → logprob: -6.751192092895508
    3. '   ' → logprob: -10.751192092895508
    4. '
' → logprob: -14.876192092895508
    5. ' ' → logprob: -16.751192092895508
    6. '```' → logprob: -16.876192092895508
    7. 'i' → logprob: -17.876192092895508
    8. '	if' → logprob: -18.126192092895508
    9. 'If' → logprob: -18.376192092895508
    10. '  ' → logprob: -19.376192092895508

Token 127: ' last' (ID: 2174)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1269630640745163
    2. 'a' → logprob: -2.1269631385803223
    3. ' ' → logprob: -10.501962661743164
    4. '	a' → logprob: -12.751962661743164
    5. ' i' → logprob: -13.251962661743164
    6. ' ' → logprob: -13.876962661743164
    7. ' not' → logprob: -14.251962661743164
    8. ' last' → logprob: -14.626962661743164
    9. 'i' → logprob: -14.751962661743164
    10. '  ' → logprob: -15.251962661743164

Token 128: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16493850946426392
    2. ' ==' → logprob: -2.164938449859619
    3. '!=' → logprob: -3.539938449859619
    4. ' !=' → logprob: -4.914938449859619
    5. ' ' → logprob: -7.164938449859619
    6. '=' → logprob: -8.789938926696777
    7. ' ' → logprob: -12.289938926696777
    8. '==
' → logprob: -12.664938926696777
    9. ' =' → logprob: -13.164938926696777
    10. ':' → logprob: -13.414938926696777

Token 129: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038047004491090775
    2. ' a' → logprob: -3.2880470752716064
    3. ' ' → logprob: -12.663046836853027
    4. ' ''' → logprob: -14.163046836853027
    5. '''' → logprob: -14.163046836853027
    6. ''a' → logprob: -15.038046836853027
    7. '	a' → logprob: -15.663046836853027
    8. ' '' → logprob: -15.913046836853027
    9. '  ' → logprob: -16.163047790527344
    10. '   ' → logprob: -16.663047790527344

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.474297434091568
    2. ':
' → logprob: -0.9742974042892456
    3. ' :
' → logprob: -9.349297523498535
    4. ' and' → logprob: -9.849297523498535
    5. ' :' → logprob: -10.474297523498535
    6. 'and' → logprob: -10.599297523498535
    7. '   ' → logprob: -11.349297523498535
    8. ':
' → logprob: -12.349297523498535
    9. '):
' → logprob: -12.474297523498535
    10. ':

' → logprob: -12.849297523498535

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5495729446411133
    2. '   ' → logprob: -1.2995729446411133
    3. ':
' → logprob: -2.6745729446411133
    4. ':' → logprob: -2.7995729446411133
    5. ' and' → logprob: -4.049572944641113
    6. '        
' → logprob: -7.549572944641113
    7. '
' → logprob: -7.674572944641113
    8. ' if' → logprob: -7.799572944641113
    9. 'and' → logprob: -7.924572944641113
    10. '    
' → logprob: -8.299572944641113

Token 132: ' count' (ID: 3605)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25438374280929565
    2. 'count' (adapté à ' count') → logprob: -1.6293838024139404
    3. '       ' → logprob: -4.254383563995361
    4. 'last' → logprob: -5.129383563995361
    5. ' if' → logprob: -5.504383563995361
    6. 'print' → logprob: -5.754383563995361
    7. '   ' → logprob: -7.629383563995361
    8. ' count' → logprob: -8.00438404083252
    9. '           ' → logprob: -9.12938404083252
    10. '
' → logprob: -9.37938404083252

Token 133: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6498148441314697
    2. ' =' → logprob: -1.2748148441314697
    3. ' +=' → logprob: -1.8998148441314697
    4. '+=' → logprob: -3.0248148441314697
    5. ' ' → logprob: -9.39981460571289
    6. '>' → logprob: -9.77481460571289
    7. '+' → logprob: -10.64981460571289
    8. ' >' → logprob: -10.89981460571289
    9. '1' → logprob: -12.64981460571289
    10. ')' → logprob: -12.89981460571289

Token 134: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. 'count' → logprob: -17.375261306762695
    4. 'max' → logprob: -17.750261306762695
    5. '2' → logprob: -18.125261306762695
    6. '   ' → logprob: -18.375261306762695
    7. '
' → logprob: -18.625261306762695
    8. '0' → logprob: -19.125261306762695
    9. 'a' → logprob: -19.125261306762695
    10. '  ' → logprob: -19.750261306762695

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. 'max' → logprob: -16.375009536743164
    4. '2' → logprob: -16.875009536743164
    5. 'a' → logprob: -17.000009536743164
    6. '0' → logprob: -17.125009536743164
    7. 'count' → logprob: -17.125009536743164
    8. '(' → logprob: -17.375009536743164
    9. 'int' → logprob: -18.000009536743164
    10. '!' → logprob: -18.812509536743164

Token 136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04962245747447014
    2. 'last' → logprob: -3.1746225357055664
    3. '       ' → logprob: -5.799622535705566
    4. ' last' → logprob: -6.299622535705566
    5. '
' → logprob: -6.549622535705566
    6. '    
' → logprob: -8.424622535705566
    7. '        
' → logprob: -10.049622535705566
    8. ',last' → logprob: -10.799622535705566
    9. '	last' → logprob: -11.799622535705566
    10. '  
' → logprob: -12.924622535705566

Token 137: '       ' (ID: 309)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.5906554460525513
    2. '   ' → logprob: -0.8406554460525513
    3. ' last' → logprob: -4.715655326843262
    4. '       ' → logprob: -5.715655326843262
    5. '
' → logprob: -6.090655326843262
    6. ' ' → logprob: -10.840655326843262
    7. '    
' → logprob: -10.965655326843262
    8. '        
' → logprob: -11.340655326843262
    9. '	last' → logprob: -11.340655326843262
    10. ',last' → logprob: -11.465655326843262

Token 138: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.00025204161647707224
    2. '   ' → logprob: -8.625251770019531
    3. ' last' → logprob: -10.250251770019531
    4. '
' → logprob: -10.625251770019531
    5. '       ' → logprob: -11.375251770019531
    6. '	last' → logprob: -14.750251770019531
    7. '```' → logprob: -15.375251770019531
    8. '  ' → logprob: -15.500251770019531
    9. '    
' → logprob: -15.875251770019531
    10. ' ' → logprob: -16.37525177001953

Token 139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20144705474376678
    2. ' =' → logprob: -1.7014470100402832
    3. '=a' → logprob: -10.326447486877441
    4. '=
' → logprob: -15.201447486877441
    5. ' ' → logprob: -15.451447486877441
    6. 'a' → logprob: -16.201446533203125
    7. '＝' → logprob: -16.326446533203125
    8. '=

' → logprob: -16.826446533203125
    9. ',' → logprob: -17.201446533203125
    10. '=b' → logprob: -17.326446533203125

Token 140: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01814994215965271
    2. ' a' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.393150329589844
    4. ''a' → logprob: -18.268150329589844
    5. '	a' → logprob: -18.393150329589844
    6. '_a' → logprob: -18.768150329589844
    7. ' ' → logprob: -19.518150329589844
    8. '```' → logprob: -20.768150329589844
    9. '`' → logprob: -21.143150329589844
    10. '  ' → logprob: -21.143150329589844

Token 141: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7137426137924194
    2. 'print' → logprob: -1.0887426137924194
    3. ' else' → logprob: -2.588742733001709
    4. '<|end|>' → logprob: -2.838742733001709
    5. '
' → logprob: -3.463742733001709
    6. 'elif' → logprob: -5.588742733001709
    7. '```' → logprob: -6.463742733001709
    8. '#' → logprob: -7.088742733001709
    9. ' print' → logprob: -7.963742733001709
    10. 'if' → logprob: -7.963742733001709

Token 142: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004009422846138477
    2. 'if' → logprob: -6.254009246826172
    3. 'else' → logprob: -6.379009246826172
    4. ')' → logprob: -9.379009246826172
    5. 'elif' → logprob: -9.754009246826172
    6. 'pr' → logprob: -10.129009246826172
    7. '
' → logprob: -10.254009246826172
    8. 'for' → logprob: -10.379009246826172
    9. ' print' → logprob: -10.754009246826172
    10. '#' → logprob: -11.129009246826172

Token 143: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0011759399203583598
    2. '(' → logprob: -6.751175880432129
    3. 'count' → logprob: -13.251175880432129
    4. '((' → logprob: -13.501175880432129
    5. '(c' → logprob: -13.751175880432129
    6. '(max' → logprob: -14.251175880432129
    7. '(
' → logprob: -15.501175880432129
    8. '()' → logprob: -15.626175880432129
    9. '(cnt' → logprob: -15.876175880432129
    10. '(co' → logprob: -16.501176834106445

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.15441757265944e-05
    2. ' )' → logprob: -10.375031471252441
    3. '+' → logprob: -15.750031471252441
    4. ')
' → logprob: -16.375032424926758
    5. '*' → logprob: -17.375032424926758
    6. '')' → logprob: -18.125032424926758
    7. '```' → logprob: -18.125032424926758
    8. '**' → logprob: -18.250032424926758
    9. '`)' → logprob: -18.375032424926758
    10. '}' → logprob: -18.625032424926758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 142
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 123
Précision stricte (1ère position): 39.44%
Précision adaptée (1ère position): 42.25%
Précision (top 10): 86.62%
================================================================================
