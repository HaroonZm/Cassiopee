================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
i=list(input())
if i[0]==i[1] or i[1]==i[2] or i[2]==i[3]:
    print("Bad")
else:
    print("Good")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'i' (ID: 72)
  → Token d'amorce (pas de prédiction)

Token 1: '=list' (ID: 93413)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06791800260543823
    2. '())' → logprob: -2.817918062210083
    3. '()' → logprob: -6.317917823791504
    4. '(' → logprob: -6.317917823791504
    5. '`)' → logprob: -6.317917823791504
    6. '))' → logprob: -8.192917823791504
    7. '')' → logprob: -9.942917823791504
    8. '```' → logprob: -9.942917823791504
    9. ')`' → logprob: -10.317917823791504
    10. '")' → logprob: -10.942917823791504

Token 4: 'if' (ID: 366)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0055044605396687984
    2. '.append' → logprob: -6.130504608154297
    3. '.sort' → logprob: -6.755504608154297
    4. '.count' → logprob: -7.505504608154297
    5. '[' → logprob: -7.630504608154297
    6. '.reverse' → logprob: -8.255504608154297
    7. ')' → logprob: -8.880504608154297
    8. '.pop' → logprob: -9.130504608154297
    9. '[::-' → logprob: -9.255504608154297
    10. '=' → logprob: -9.380504608154297

Token 5: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6453991532325745
    2. ' i' → logprob: -1.6453990936279297
    3. ' not' → logprob: -1.8953990936279297
    4. 'i' → logprob: -2.8953990936279297
    5. ' len' → logprob: -3.1453990936279297
    6. ''' → logprob: -3.6453990936279297
    7. 'len' → logprob: -5.52039909362793
    8. 'not' → logprob: -7.02039909362793
    9. ' '' → logprob: -7.27039909362793
    10. ' a' → logprob: -7.39539909362793

Token 6: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.032387033104896545
    2. ':' → logprob: -3.7823870182037354
    3. '.' → logprob: -5.4073872566223145
    4. '==' → logprob: -6.4073872566223145
    5. '[:]' → logprob: -6.9073872566223145
    6. ' ==' → logprob: -7.0323872566223145
    7. '[]' → logprob: -8.532386779785156
    8. '[i' → logprob: -9.407386779785156
    9. ''' → logprob: -9.657386779785156
    10. '=' → logprob: -9.782386779785156

Token 7: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015135504072532058
    2. ' ' → logprob: -6.501513481140137
    3. '1' → logprob: -11.626513481140137
    4. ' ==' → logprob: -13.876513481140137
    5. '==' → logprob: -14.126513481140137
    6. '=' → logprob: -15.501513481140137
    7. '2' → logprob: -16.001514434814453
    8. ']' → logprob: -16.501514434814453
    9. ')' → logprob: -16.689014434814453
    10. '   ' → logprob: -17.001514434814453

Token 8: ']==' (ID: 34128)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0457218885421753
    2. '==' → logprob: -1.1707218885421753
    3. ' ==' → logprob: -1.6707218885421753
    4. '!=' → logprob: -3.045722007751465
    5. '[' → logprob: -3.420722007751465
    6. ']' → logprob: -3.670722007751465
    7. ' !=' → logprob: -4.170722007751465
    8. ')' → logprob: -4.295722007751465
    9. '>' → logprob: -5.670722007751465
    10. ' ' → logprob: -5.920722007751465

Token 9: 'i' (ID: 72)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9255298376083374
    2. '"' → logprob: -1.0505298376083374
    3. ''"' → logprob: -1.4255298376083374
    4. ''a' → logprob: -5.425529956817627
    5. ''i' → logprob: -5.550529956817627
    6. '"'' → logprob: -6.925529956817627
    7. ''A' → logprob: -7.175529956817627
    8. ''-' → logprob: -7.425529956817627
    9. ''\' → logprob: -8.550529479980469
    10. ''q' → logprob: -8.800529479980469

Token 10: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014656837447546422
    2. '[-' → logprob: -9.000146865844727
    3. '.' → logprob: -11.750146865844727
    4. '1' → logprob: -12.125146865844727
    5. ' [' → logprob: -12.625146865844727
    6. ']' → logprob: -13.500146865844727
    7. '[]' → logprob: -14.125146865844727
    8. '[i' → logprob: -14.250146865844727
    9. '[len' → logprob: -14.250146865844727
    10. '```' → logprob: -14.500146865844727

Token 11: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15242132544517517
    2. '-' → logprob: -2.027421236038208
    3. '0' → logprob: -4.652421474456787
    4. ' ' → logprob: -9.277420997619629
    5. ' -' → logprob: -10.402420997619629
    6. '2' → logprob: -11.277420997619629
    7. '])' → logprob: -11.902420997619629
    8. 'len' → logprob: -12.027420997619629
    9. '```' → logprob: -12.652420997619629
    10. ']' → logprob: -13.527420997619629

Token 12: ']' (ID: 60)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3418150842189789
    2. ']' → logprob: -1.7168151140213013
    3. '):' → logprob: -2.4668149948120117
    4. ')' → logprob: -4.341814994812012
    5. ':' → logprob: -4.716814994812012
    6. '[' → logprob: -6.841814994812012
    7. '']' → logprob: -7.466814994812012
    8. ']):' → logprob: -7.466814994812012
    9. '']:' → logprob: -8.091814994812012
    10. ']==' → logprob: -8.716814994812012

Token 13: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -7.982165698194876e-05
    2. ' :' → logprob: -10.125080108642578
    3. ':**' → logprob: -11.500080108642578
    4. ' and' → logprob: -11.750080108642578
    5. ':
' → logprob: -12.625080108642578
    6. '':' → logprob: -12.750080108642578
    7. '=' → logprob: -12.750080108642578
    8. '':'' → logprob: -12.750080108642578
    9. '[:]' → logprob: -13.500080108642578
    10. '==' → logprob: -14.000080108642578

Token 14: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2014252245426178
    2. 'i' → logprob: -1.7014251947402954
    3. ' ' → logprob: -11.701425552368164
    4. ' ' → logprob: -14.076425552368164
    5. '...' → logprob: -14.201425552368164
    6. 'len' → logprob: -14.451425552368164
    7. '	i' → logprob: -14.701425552368164
    8. ' not' → logprob: -15.576425552368164
    9. '  ' → logprob: -15.701425552368164
    10. ',i' → logprob: -15.701425552368164

Token 15: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. ' [' → logprob: -13.375001907348633
    3. '[-' → logprob: -15.250001907348633
    4. ' ' → logprob: -16.375001907348633
    5. '```' → logprob: -16.500001907348633
    6. '\[' → logprob: -16.625001907348633
    7. '[
' → logprob: -17.250001907348633
    8. '.' → logprob: -17.500001907348633
    9. '[]' → logprob: -17.500001907348633
    10. '2' → logprob: -18.062501907348633

Token 16: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4315240681171417
    2. '0' → logprob: -1.0565240383148193
    3. '1' → logprob: -6.306524276733398
    4. '-' → logprob: -7.556524276733398
    5. ' ' → logprob: -7.806524276733398
    6. '3' → logprob: -10.931524276733398
    7. '```' → logprob: -11.306524276733398
    8. ']' → logprob: -11.556524276733398
    9. '[' → logprob: -11.806524276733398
    10. '   ' → logprob: -12.306524276733398

Token 17: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.08207976073026657
    2. ']' → logprob: -2.8320796489715576
    3. '[' → logprob: -3.9570796489715576
    4. '==' → logprob: -8.207079887390137
    5. ']!=' → logprob: -8.457079887390137
    6. ' ]' → logprob: -9.332079887390137
    7. '```' → logprob: -9.707079887390137
    8. '']==' → logprob: -10.207079887390137
    9. ']>' → logprob: -10.207079887390137
    10. '][' → logprob: -10.707079887390137

Token 18: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0206720617134124e-05
    2. ' i' → logprob: -11.62501049041748
    3. ' ' → logprob: -14.00001049041748
    4. ''i' → logprob: -15.75001049041748
    5. '_i' → logprob: -17.125009536743164
    6. '	i' → logprob: -17.750009536743164
    7. '  ' → logprob: -17.875009536743164
    8. '[i' → logprob: -17.875009536743164
    9. '   ' → logprob: -18.125009536743164
    10. '_' → logprob: -18.500009536743164

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.4121114822482923e-06
    2. '2' → logprob: -12.750003814697266
    3. ' [' → logprob: -15.000003814697266
    4. ' ' → logprob: -16.500003814697266
    5. ']' → logprob: -17.125003814697266
    6. '][' → logprob: -17.375003814697266
    7. '{' → logprob: -18.375003814697266
    8. ''[' → logprob: -18.375003814697266
    9. '[
' → logprob: -18.500003814697266
    10. '```' → logprob: -18.750003814697266

Token 20: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -13.12500286102295
    3. ' ' → logprob: -15.37500286102295
    4. '```' → logprob: -16.375001907348633
    5. ']' → logprob: -16.875001907348633
    6. '-' → logprob: -17.250001907348633
    7. '۲' → logprob: -17.250001907348633
    8. '２' → logprob: -17.375001907348633
    9. '1' → logprob: -17.562501907348633
    10. '3' → logprob: -17.875001907348633

Token 21: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39849355816841125
    2. '):' → logprob: -1.1484935283660889
    3. ']' → logprob: -5.023493766784668
    4. ']:' → logprob: -6.023493766784668
    5. ':' → logprob: -6.648493766784668
    6. ' or' → logprob: -6.898493766784668
    7. 'or' → logprob: -9.773493766784668
    8. '[' → logprob: -10.648493766784668
    9. '）' → logprob: -10.773493766784668
    10. '}' → logprob: -10.898493766784668

Token 22: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0564331205387134e-05
    2. ' :' → logprob: -12.62501049041748
    3. ':**' → logprob: -13.00001049041748
    4. '):' → logprob: -13.12501049041748
    5. ':
' → logprob: -13.62501049041748
    6. ' and' → logprob: -14.50001049041748
    7. '>:' → logprob: -15.12501049041748
    8. ',:' → logprob: -15.87501049041748
    9. '':' → logprob: -16.000011444091797
    10. '':'' → logprob: -16.250011444091797

Token 23: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.693157434463501
    2. ' i' → logprob: -0.693157434463501
    3. '(i' → logprob: -12.818157196044922
    4. '`' → logprob: -13.193157196044922
    5. ' ' → logprob: -13.193157196044922
    6. ' ' → logprob: -13.318157196044922
    7. '	i' → logprob: -14.943157196044922
    8. ',i' → logprob: -15.068157196044922
    9. '```' → logprob: -15.318157196044922
    10. '[i' → logprob: -15.568157196044922

Token 24: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '[
' → logprob: -14.000001907348633
    3. '2' → logprob: -15.000001907348633
    4. '```' → logprob: -15.250001907348633
    5. '[i' → logprob: -17.000001907348633
    6. '==' → logprob: -17.375001907348633
    7. ' [' → logprob: -17.500001907348633
    8. 's' → logprob: -18.000001907348633
    9. ' ' → logprob: -18.000001907348633
    10. '0' → logprob: -18.000001907348633

Token 25: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02325141802430153
    2. '2' → logprob: -3.773251533508301
    3. '[' → logprob: -13.1482515335083
    4. ' ' → logprob: -13.3982515335083
    5. '```' → logprob: -13.3982515335083
    6. '3' → logprob: -14.8982515335083
    7. '۰' → logprob: -15.7732515335083
    8. '02' → logprob: -16.460750579833984
    9. '``' → logprob: -16.523250579833984
    10. '   ' → logprob: -16.585750579833984

Token 26: ']==' (ID: 34128)
  Prédit: ']=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.020565012469887733
    2. '==' → logprob: -4.020565032958984
    3. ']' → logprob: -6.145565032958984
    4. '[' → logprob: -8.770565032958984
    5. '']==' → logprob: -9.520565032958984
    6. '```' → logprob: -10.770565032958984
    7. ')==' → logprob: -11.770565032958984
    8. ']=='' → logprob: -12.770565032958984
    9. ' ==' → logprob: -13.520565032958984
    10. '}' → logprob: -14.020565032958984

Token 27: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.282920129597187e-05
    2. ' i' → logprob: -11.375012397766113
    3. ' ' → logprob: -14.500012397766113
    4. ''i' → logprob: -14.750012397766113
    5. '_i' → logprob: -16.50001335144043
    6. '	i' → logprob: -16.50001335144043
    7. '[i' → logprob: -17.00001335144043
    8. '[' → logprob: -17.06251335144043
    9. '   ' → logprob: -17.37501335144043
    10. 'a' → logprob: -17.56251335144043

Token 28: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007627330720424652
    2. '3' → logprob: -4.882627487182617
    3. ']' → logprob: -12.007627487182617
    4. ' ' → logprob: -12.132627487182617
    5. '0' → logprob: -12.882627487182617
    6. '```' → logprob: -12.882627487182617
    7. '[
' → logprob: -13.507627487182617
    8. ' [' → logprob: -13.757627487182617
    9. '][' → logprob: -14.132627487182617
    10. '1' → logprob: -14.882627487182617

Token 29: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2525562047958374
    2. '3' → logprob: -1.5025562047958374
    3. '1' → logprob: -7.377556324005127
    4. ']' → logprob: -14.752555847167969
    5. ' ' → logprob: -14.877555847167969
    6. '```' → logprob: -15.002555847167969
    7. '2' → logprob: -15.877555847167969
    8. '-' → logprob: -16.12755584716797
    9. '``' → logprob: -16.56505584716797
    10. '[' → logprob: -16.94005584716797

Token 30: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6410450339317322
    2. ')' → logprob: -0.7660450339317322
    3. '):' → logprob: -5.391045093536377
    4. ' or' → logprob: -6.391045093536377
    5. ']:' → logprob: -6.641045093536377
    6. '])' → logprob: -8.391044616699219
    7. '']' → logprob: -8.766044616699219
    8. 'or' → logprob: -9.391044616699219
    9. ')]' → logprob: -9.516044616699219
    10. ':' → logprob: -9.516044616699219

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2656340003013611
    2. ' print' → logprob: -1.6406340599060059
    3. 'print' → logprob: -3.390634059906006
    4. ':' → logprob: -6.015634059906006
    5. '	print' → logprob: -6.640634059906006
    6. ' ' → logprob: -7.390634059906006
    7. ':
' → logprob: -7.765634059906006
    8. ' or' → logprob: -8.765633583068848
    9. '   ' → logprob: -8.765633583068848
    10. '\n' → logprob: -8.890633583068848

Token 32: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2757652997970581
    2. ' print' → logprob: -1.525765299797058
    3. '   ' → logprob: -3.7757654190063477
    4. '\n' → logprob: -9.150765419006348
    5. ' ' → logprob: -9.525765419006348
    6. '```' → logprob: -9.650765419006348
    7. '`' → logprob: -10.025765419006348
    8. '    ' → logprob: -10.400765419006348
    9. ''' → logprob: -10.400765419006348
    10. ' i' → logprob: -10.650765419006348

Token 33: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6364699602127075
    2. '("' → logprob: -1.1364699602127075
    3. '("("' → logprob: -2.261469841003418
    4. '('' → logprob: -3.136469841003418
    5. '(True' → logprob: -6.636469841003418
    6. '(":' → logprob: -8.136469841003418
    7. '(i' → logprob: -9.136469841003418
    8. '()' → logprob: -9.136469841003418
    9. '("="' → logprob: -9.636469841003418
    10. '(-' → logprob: -9.761469841003418

Token 34: 'Bad' (ID: 22048)
  Prédit: 'Bad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bad' → logprob: -0.12772493064403534
    2. 'Yes' → logprob: -2.3777248859405518
    3. 'No' → logprob: -4.877725124359131
    4. 'Lost' → logprob: -5.252725124359131
    5. 'Three' → logprob: -5.877725124359131
    6. 'Not' → logprob: -6.627725124359131
    7. '"' → logprob: -6.877725124359131
    8. 'YES' → logprob: -7.002725124359131
    9. 'Sorry' → logprob: -7.127725124359131
    10. 'Weak' → logprob: -7.252725124359131

Token 35: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.008880456909537315
    2. ' ")' → logprob: -4.883880615234375
    3. ' )' → logprob: -7.633880615234375
    4. ')' → logprob: -7.633880615234375
    5. ')")' → logprob: -8.758880615234375
    6. '")
' → logprob: -10.383880615234375
    7. ' ' → logprob: -10.758880615234375
    8. ' String' → logprob: -11.383880615234375
    9. ' word' → logprob: -11.883880615234375
    10. ' ' → logprob: -12.008880615234375

Token 36: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.006459089927375317
    2. ' else' → logprob: -5.1314592361450195
    3. 'elif' → logprob: -7.7564592361450195
    4. '<|end|>' → logprob: -10.00645923614502
    5. '
' → logprob: -10.50645923614502
    6. '```' → logprob: -11.00645923614502
    7. ')' → logprob: -12.50645923614502
    8. 'Else' → logprob: -13.50645923614502
    9. 's' → logprob: -13.75645923614502
    10. '_else' → logprob: -13.88145923614502

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.11996734328568e-05
    2. ':
' → logprob: -10.125041007995605
    3. ' :' → logprob: -14.375041007995605
    4. '   ' → logprob: -15.250041007995605
    5. ':

' → logprob: -17.250041961669922
    6. '):' → logprob: -17.250041961669922
    7. '():' → logprob: -17.375041961669922
    8. '<|end|>' → logprob: -18.000041961669922
    9. ':def' → logprob: -18.625041961669922
    10. ':return' → logprob: -18.625041961669922

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002262186724692583
    2. ' print' → logprob: -6.377262115478516
    3. '```' → logprob: -8.252262115478516
    4. 'print' → logprob: -8.377262115478516
    5. '   ' → logprob: -10.377262115478516
    6. '       ' → logprob: -11.502262115478516
    7. '	print' → logprob: -11.877262115478516
    8. ' ' → logprob: -12.627262115478516
    9. '`' → logprob: -12.877262115478516
    10. '<|end|>' → logprob: -13.002262115478516

Token 39: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.038647815585136414
    2. ' print' → logprob: -3.2886478900909424
    3. '   ' → logprob: -7.413647651672363
    4. '```' → logprob: -13.413647651672363
    5. '	print' → logprob: -13.663647651672363
    6. ' ' → logprob: -15.163647651672363
    7. 'Print' → logprob: -15.913647651672363
    8. '.print' → logprob: -17.16364860534668
    9. '    ' → logprob: -17.16364860534668
    10. '       ' → logprob: -17.28864860534668

Token 40: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027831735089421272
    2. '("' → logprob: -3.777831792831421
    3. '("("' → logprob: -5.402831554412842
    4. '("")' → logprob: -10.15283203125
    5. '()' → logprob: -10.90283203125
    6. '('' → logprob: -12.02783203125
    7. '(">' → logprob: -12.90283203125
    8. '("(' → logprob: -12.90283203125
    9. '("""' → logprob: -14.15283203125
    10. '(""' → logprob: -14.15283203125

Token 41: 'Good' (ID: 17212)
  Prédit: 'Good'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Good' → logprob: -0.0001302374730585143
    2. '"' → logprob: -9.000130653381348
    3. 'Bad' → logprob: -13.250130653381348
    4. ' Good' → logprob: -13.750130653381348
    5. 'Yes' → logprob: -13.875130653381348
    6. 'Nice' → logprob: -14.250130653381348
    7. 'Ok' → logprob: -14.375130653381348
    8. '")' → logprob: -14.875130653381348
    9. 'Best' → logprob: -15.125130653381348
    10. ')' → logprob: -15.250130653381348

Token 42: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.1756367712223437e-05
    2. ')' → logprob: -11.500011444091797
    3. ')")' → logprob: -13.625011444091797
    4. '")
' → logprob: -15.625011444091797
    5. '"' → logprob: -16.375011444091797
    6. '')' → logprob: -18.000011444091797
    7. '!")' → logprob: -18.000011444091797
    8. '}")' → logprob: -19.125011444091797
    9. '”)' → logprob: -19.625011444091797
    10. '\")' → logprob: -20.125011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 40
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 33
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 55.00%
Précision (top 10): 82.50%
================================================================================
