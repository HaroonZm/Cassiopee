================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_odd_product(a: int, b: int) -> bool:
    """
    Détermine si le produit de deux entiers est impair.

    Arguments:
        a (int): Premier entier.
        b (int): Deuxième entier.

    Retourne:
        bool: True si le produit a * b est impair, False sinon.
    """
    # Calculer le produit de a et b, puis vérifier si le résultat est impair
    return (a * b) % 2 != 0

def main():
    """
    Point d'entrée principal du programme.
    Lit deux entiers depuis l'entrée standard, vérifie si leur produit est impair,
    et affiche "Yes" si c'est le cas, "No" sinon.
    """
    # Lire une ligne de l'entrée utilisateur et extraire deux entiers
    a, b = map(int, input("Entrez deux entiers séparés par un espace : ").split())

    # Vérifier si le produit est impair et afficher le résultat approprié
    if is_odd_product(a, b):
        print("Yes")
    else:
        print("No")

# Exécuter la fonction principale si ce script est lancé directement
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_' (ID: 62)
  → Token d'amorce (pas de prédiction)

Token 3: 'odd' (ID: 18303)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.8699497580528259
    2. 'prime' → logprob: -1.1199498176574707
    3. 'alpha' → logprob: -2.3699498176574707
    4. 'valid' → logprob: -2.4949498176574707
    5. 'keyword' → logprob: -2.8699498176574707
    6. 'python' → logprob: -5.119949817657471
    7. 'digit' → logprob: -5.994949817657471
    8. 'print' → logprob: -6.244949817657471
    9. 'lower' → logprob: -6.244949817657471
    10. '```' → logprob: -6.744949817657471

Token 4: '_product' (ID: 21247)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03987311199307442
    2. '_' → logprob: -3.2898731231689453
    3. '(_' → logprob: -7.289873123168945
    4. '(_:' → logprob: -8.164873123168945
    5. '(:' → logprob: -8.289873123168945
    6. '():' → logprob: -8.914873123168945
    7. '```' → logprob: -9.039873123168945
    8. '_:' → logprob: -9.039873123168945
    9. '(a' → logprob: -9.539873123168945
    10. ':' → logprob: -9.789873123168945

Token 5: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020271388348191977
    2. '(_:' → logprob: -7.0020270347595215
    3. '(:' → logprob: -7.5020270347595215
    4. '(_' → logprob: -8.37702751159668
    5. '_' → logprob: -8.75202751159668
    6. '```' → logprob: -9.37702751159668
    7. '(a' → logprob: -11.00202751159668
    8. '():' → logprob: -11.25202751159668
    9. ' (' → logprob: -11.87702751159668
    10. '_:' → logprob: -12.12702751159668

Token 6: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13203176856040955
    2. ')' → logprob: -3.3820316791534424
    3. '_,' → logprob: -3.6320316791534424
    4. ',b' → logprob: -3.6320316791534424
    5. 's' → logprob: -4.1320319175720215
    6. '):' → logprob: -4.5070319175720215
    7. '_' → logprob: -6.0070319175720215
    8. '[' → logprob: -6.7570319175720215
    9. ',s' → logprob: -6.8820319175720215
    10. '*,' → logprob: -7.0070319175720215

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.28192460536956787
    2. 'int' → logprob: -1.4069246053695679
    3. ')' → logprob: -7.781924724578857
    4. ':int' → logprob: -9.1569242477417
    5. ' ' → logprob: -9.9069242477417
    6. '[int' → logprob: -9.9069242477417
    7. '```' → logprob: -10.5319242477417
    8. ',' → logprob: -10.7819242477417
    9. ',int' → logprob: -10.7819242477417
    10. ' )' → logprob: -11.0319242477417

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031828247010707855
    2. ')' → logprob: -6.253182888031006
    3. ',b' → logprob: -7.128182888031006
    4. ' ,' → logprob: -9.128182411193848
    5. '*,' → logprob: -9.128182411193848
    6. '```' → logprob: -9.753182411193848
    7. ',
' → logprob: -10.253182411193848
    8. ',a' → logprob: -10.378182411193848
    9. '`,' → logprob: -10.503182411193848
    10. '):' → logprob: -11.003182411193848

Token 9: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4290342330932617
    2. ' b' → logprob: -1.0540342330932617
    3. ',b' → logprob: -8.929034233093262
    4. '```' → logprob: -9.429034233093262
    5. ')' → logprob: -9.804034233093262
    6. ' ' → logprob: -11.054034233093262
    7. '`' → logprob: -11.804034233093262
    8. ')b' → logprob: -11.929034233093262
    9. '*b' → logprob: -12.054034233093262
    10. ' ' → logprob: -12.304034233093262

Token 10: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2896554470062256
    2. '):' → logprob: -1.9146554470062256
    3. ':' → logprob: -2.2896554470062256
    4. '```' → logprob: -6.539655685424805
    5. ')>' → logprob: -8.289655685424805
    6. '`)' → logprob: -8.664655685424805
    7. '=' → logprob: -8.789655685424805
    8. '):
' → logprob: -9.039655685424805
    9. '**' → logprob: -9.539655685424805
    10. '*' → logprob: -9.539655685424805

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47412005066871643
    2. 'int' → logprob: -0.974120020866394
    3. ')' → logprob: -10.724120140075684
    4. ':int' → logprob: -11.474120140075684
    5. '[int' → logprob: -12.724120140075684
    6. '<int' → logprob: -12.849120140075684
    7. '=int' → logprob: -13.474120140075684
    8. '(int' → logprob: -13.724120140075684
    9. '```' → logprob: -14.474120140075684
    10. ' ' → logprob: -14.599120140075684

Token 12: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00300777330994606
    2. '):' → logprob: -5.878007888793945
    3. '```' → logprob: -9.753007888793945
    4. '):
' → logprob: -10.503007888793945
    5. '`)' → logprob: -10.503007888793945
    6. ':' → logprob: -10.628007888793945
    7. '   ' → logprob: -10.628007888793945
    8. '')' → logprob: -11.378007888793945
    9. ')->' → logprob: -11.628007888793945
    10. ')>' → logprob: -12.503007888793945

Token 13: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014291671104729176
    2. '():' → logprob: -7.126429080963135
    3. ':return' → logprob: -8.626429557800293
    4. '':' → logprob: -9.126429557800293
    5. '(:' → logprob: -9.501429557800293
    6. '```' → logprob: -9.751429557800293
    7. '):' → logprob: -9.876429557800293
    8. '":' → logprob: -10.376429557800293
    9. '`:' → logprob: -10.876429557800293
    10. '[:]' → logprob: -11.251429557800293

Token 14: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.009609460830688477
    2. 'bool' → logprob: -5.134609222412109
    3. ' int' → logprob: -5.634609222412109
    4. 'int' → logprob: -10.13460922241211
    5. ' ' → logprob: -10.38460922241211
    6. ' ' → logprob: -10.50960922241211
    7. ''' → logprob: -13.88460922241211
    8. '<bool' → logprob: -14.13460922241211
    9. ' str' → logprob: -14.88460922241211
    10. ' boolean' → logprob: -15.13460922241211

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08352608978748322
    2. '(' → logprob: -2.958526134490967
    3. '(:' → logprob: -3.708526134490967
    4. '():' → logprob: -6.208526134490967
    5. '(a' → logprob: -7.458526134490967
    6. ':return' → logprob: -7.708526134490967
    7. '```' → logprob: -8.833525657653809
    8. '(':' → logprob: -8.833525657653809
    9. '   ' → logprob: -9.708525657653809
    10. '(":' → logprob: -9.708525657653809

Token 16: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1447790563106537
    2. '   ' → logprob: -2.0197789669036865
    3. ' :' → logprob: -7.269779205322266
    4. '```' → logprob: -7.769779205322266
    5. ':return' → logprob: -8.144779205322266
    6. ':
' → logprob: -8.644779205322266
    7. '    ' → logprob: -8.769779205322266
    8. ' ' → logprob: -9.769779205322266
    9. '(' → logprob: -10.144779205322266
    10. ''' → logprob: -10.144779205322266

Token 17: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10807342827320099
    2. 'return' → logprob: -2.4830734729766846
    3. ' return' → logprob: -4.2330732345581055
    4. 'r' → logprob: -6.4830732345581055
    5. '```' → logprob: -6.7330732345581055
    6. '    ' → logprob: -7.9830732345581055
    7. '       ' → logprob: -7.9830732345581055
    8. 'if' → logprob: -8.483073234558105
    9. ' ' → logprob: -8.483073234558105
    10. '    
' → logprob: -8.858073234558105

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33782923221588135
    2. '"""' → logprob: -1.9628292322158813
    3. 'Returns' → logprob: -2.462829113006592
    4. 'Return' → logprob: -3.712829113006592
    5. 'r' → logprob: -4.212829113006592
    6. 'Check' → logprob: -4.712829113006592
    7. 'R' → logprob: -6.212829113006592
    8. 'Checks' → logprob: -6.212829113006592
    9. ''''' → logprob: -6.462829113006592
    10. '*' → logprob: -7.212829113006592

Token 19: ' Dé' (ID: 27247)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Returns' → logprob: -0.1771424114704132
    2. 'Return' → logprob: -1.9271423816680908
    3. 'Check' → logprob: -5.05214262008667
    4. 'Checks' → logprob: -5.55214262008667
    5. '   ' → logprob: -5.80214262008667
    6. '"""' → logprob: -6.30214262008667
    7. 'Determine' → logprob: -7.80214262008667
    8. 'return' → logprob: -8.177142143249512
    9. 'Calculate' → logprob: -8.427142143249512
    10. 'R' → logprob: -9.177142143249512

Token 20: 'term' (ID: 8044)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.28154507279396057
    2. 'tect' → logprob: -2.5315451622009277
    3. 'te' → logprob: -2.7815451622009277
    4. 'term' → logprob: -3.1565451622009277
    5. 't' → logprob: -3.5315451622009277
    6. 'ter' → logprob: -4.531545162200928
    7. '\t' → logprob: -5.656545162200928
    8. '\f' → logprob: -5.781545162200928
    9. '\' → logprob: -5.906545162200928
    10. 'tection' → logprob: -6.406545162200928

Token 21: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.002390398643910885
    2. 'i' → logprob: -7.002390384674072
    3. '   ' → logprob: -7.377390384674072
    4. 'iner' → logprob: -8.37739086151123
    5. 'e' → logprob: -8.87739086151123
    6. 'iné' → logprob: -9.62739086151123
    7. '\' → logprob: -9.75239086151123
    8. 'in' → logprob: -9.87739086151123
    9. 'inez' → logprob: -9.87739086151123
    10. '```' → logprob: -10.25239086151123

Token 22: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.2473735362291336
    2. ' if' → logprob: -1.8723735809326172
    3. 'si' → logprob: -3.747373580932617
    4. 's' → logprob: -3.872373580932617
    5. ' ' → logprob: -3.997373580932617
    6. ' s' → logprob: -7.122373580932617
    7. ' whether' → logprob: -7.372373580932617
    8. '   ' → logprob: -7.497373580932617
    9. '  ' → logprob: -7.872373580932617
    10. 'if' → logprob: -9.747373580932617

Token 23: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.43382778763771057
    2. ' ' → logprob: -1.5588277578353882
    3. ' la' → logprob: -2.8088278770446777
    4. ' l' → logprob: -3.1838278770446777
    5. ' les' → logprob: -4.433827877044678
    6. 'le' → logprob: -4.933827877044678
    7. ' a' → logprob: -5.308827877044678
    8. ' the' → logprob: -5.433827877044678
    9. '   ' → logprob: -6.183827877044678
    10. 'l' → logprob: -6.183827877044678

Token 24: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.05004175007343292
    2. 'produ' → logprob: -3.175041675567627
    3. '   ' → logprob: -5.175041675567627
    4. ' ' → logprob: -7.300041675567627
    5. ' product' → logprob: -8.675042152404785
    6. 'product' → logprob: -9.175042152404785
    7. ' produ' → logprob: -9.800042152404785
    8. 'a' → logprob: -10.050042152404785
    9. '  ' → logprob: -10.175042152404785
    10. 'Produit' → logprob: -10.175042152404785

Token 25: ' de' (ID: 334)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5032106637954712
    2. ' des' → logprob: -1.3782106637954712
    3. ' ' → logprob: -3.1282105445861816
    4. ' du' → logprob: -3.1282105445861816
    5. ' de' → logprob: -3.3782105445861816
    6. ' entre' → logprob: -4.378210544586182
    7. '   ' → logprob: -6.253210544586182
    8. 'est' → logprob: -6.503210544586182
    9. ' is' → logprob: -7.003210544586182
    10. '    ' → logprob: -7.003210544586182

Token 26: ' deux' (ID: 10301)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1821211576461792
    2. 'a' → logprob: -1.8071211576461792
    3. 'de' → logprob: -6.807121276855469
    4. ' les' → logprob: -7.307121276855469
    5. ' deux' → logprob: -7.932121276855469
    6. 'les' → logprob: -9.682121276855469
    7. ' ' → logprob: -9.807121276855469
    8. ' `' → logprob: -10.307121276855469
    9. '(a' → logprob: -10.557121276855469
    10. ' la' → logprob: -11.307121276855469

Token 27: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.025658320635557175
    2. ' ent' → logprob: -3.900658369064331
    3. ' nombre' → logprob: -6.525658130645752
    4. 'nombre' → logprob: -6.525658130645752
    5. 'n' → logprob: -6.900658130645752
    6. 'ent' → logprob: -7.150658130645752
    7. ' ' → logprob: -8.15065860748291
    8. '   ' → logprob: -10.52565860748291
    9. ' entier' → logprob: -10.65065860748291
    10. ' n' → logprob: -11.27565860748291

Token 28: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.038621433079242706
    2. 'i' → logprob: -3.288621425628662
    3. 'ières' → logprob: -7.663621425628662
    4. 'ier' → logprob: -9.91362190246582
    5. 'ié' → logprob: -11.03862190246582
    6. '```' → logprob: -11.28862190246582
    7. ' i' → logprob: -11.66362190246582
    8. 'ière' → logprob: -11.91362190246582
    9. '   ' → logprob: -12.41362190246582
    10. 'riers' → logprob: -13.03862190246582

Token 29: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.00934660341590643
    2. ' ' → logprob: -5.0093464851379395
    3. 's' → logprob: -6.8843464851379395
    4. 'est' → logprob: -7.2593464851379395
    5. ' is' → logprob: -7.6343464851379395
    6. '   ' → logprob: -8.759346961975098
    7. ' s' → logprob: -10.009346961975098
    8. '  ' → logprob: -10.509346961975098
    9. '```' → logprob: -10.509346961975098
    10. ' es' → logprob: -10.634346961975098

Token 30: ' impair' (ID: 64113)
  Prédit: ' impair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impair' → logprob: -0.007530674804002047
    2. ' un' → logprob: -6.382530689239502
    3. ' imp' → logprob: -6.382530689239502
    4. ' pair' → logprob: -6.632530689239502
    5. '   ' → logprob: -7.257530689239502
    6. ' odd' → logprob: -7.507530689239502
    7. 'imp' → logprob: -7.632530689239502
    8. '```' → logprob: -7.757530689239502
    9. ' ' → logprob: -8.257530212402344
    10. '  ' → logprob: -9.882530212402344

Token 31: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6492788791656494
    2. '\n' → logprob: -1.2742788791656494
    3. '.' → logprob: -2.2742788791656494
    4. '\' → logprob: -3.0242788791656494
    5. ' ' → logprob: -4.64927864074707
    6. '    
' → logprob: -5.27427864074707
    7. '  ' → logprob: -5.52427864074707
    8. '
' → logprob: -5.64927864074707
    9. '"""
' → logprob: -5.64927864074707
    10. '    ' → logprob: -5.89927864074707

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00048286578385159373
    2. '    ' → logprob: -8.750482559204102
    3. '    
' → logprob: -9.125482559204102
    4. '"""' → logprob: -9.125482559204102
    5. '```' → logprob: -10.625482559204102
    6. '
' → logprob: -10.625482559204102
    7. ' 
' → logprob: -11.500482559204102
    8. '"""
' → logprob: -11.875482559204102
    9. ' ' → logprob: -12.250482559204102
    10. '     
' → logprob: -12.375482559204102

Token 33: ' Arguments' (ID: 63373)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017625248292461038
    2. '"""' → logprob: -7.376762390136719
    3. 'return' → logprob: -7.626762390136719
    4. '```' → logprob: -7.876762390136719
    5. '    
' → logprob: -9.626762390136719
    6. '    ' → logprob: -9.876762390136719
    7. ' return' → logprob: -10.126762390136719
    8. '"""
' → logprob: -11.126762390136719
    9. '\n' → logprob: -11.126762390136719
    10. '       ' → logprob: -11.376762390136719

Token 34: ':
' (ID: 734)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3705057203769684
    2. 'a' → logprob: -2.2455058097839355
    3. '```' → logprob: -2.8705058097839355
    4. 's' → logprob: -2.9955058097839355
    5. '   ' → logprob: -3.6205058097839355
    6. ' ' → logprob: -4.3705058097839355
    7. ''' → logprob: -4.4955058097839355
    8. ':' → logprob: -4.7455058097839355
    9. ' )' → logprob: -5.1205058097839355
    10. ',' → logprob: -5.4955058097839355

Token 35: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016083287075161934
    2. ' a' → logprob: -4.141083240509033
    3. ')' → logprob: -10.516083717346191
    4. '   ' → logprob: -11.891083717346191
    5. ' )' → logprob: -12.516083717346191
    6. ' ' → logprob: -12.641083717346191
    7. '```' → logprob: -13.391083717346191
    8. ' `' → logprob: -13.766083717346191
    9. ''a' → logprob: -14.266083717346191
    10. '    ' → logprob: -14.391083717346191

Token 36: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00026169343618676066
    2. ' a' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.125261306762695
    4. '`' → logprob: -16.625261306762695
    5. ''a' → logprob: -17.500261306762695
    6. ')' → logprob: -17.875261306762695
    7. '```' → logprob: -17.875261306762695
    8. ' `' → logprob: -18.375261306762695
    9. ' ' → logprob: -18.875261306762695
    10. '_a' → logprob: -19.000261306762695

Token 37: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4487894773483276
    2. ')' → logprob: -1.5737894773483276
    3. ':' → logprob: -1.9487894773483276
    4. '   ' → logprob: -2.448789596557617
    5. ':int' → logprob: -2.573789596557617
    6. ' ' → logprob: -2.698789596557617
    7. ' :' → logprob: -2.823789596557617
    8. ' ,' → logprob: -3.198789596557617
    9. '    ' → logprob: -3.698789596557617
    10. ' )' → logprob: -3.948789596557617

Token 38: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00023250321100931615
    2. ' int' → logprob: -8.375232696533203
    3. '[int' → logprob: -14.500232696533203
    4. ':int' → logprob: -14.875232696533203
    5. ')' → logprob: -15.000232696533203
    6. '   ' → logprob: -15.375232696533203
    7. '```' → logprob: -15.625232696533203
    8. ']int' → logprob: -16.250232696533203
    9. '<int' → logprob: -16.625232696533203
    10. '	int' → logprob: -17.625232696533203

Token 39: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006833421532064676
    2. '):' → logprob: -5.256833553314209
    3. ' )' → logprob: -7.006833553314209
    4. ',' → logprob: -8.00683307647705
    5. '<|end|>' → logprob: -9.00683307647705
    6. '   ' → logprob: -9.50683307647705
    7. '):
' → logprob: -9.50683307647705
    8. ' ):' → logprob: -10.88183307647705
    9. '),' → logprob: -11.63183307647705
    10. ' ' → logprob: -11.63183307647705

Token 40: ' Premier' (ID: 27686)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.619284451007843
    2. ')' → logprob: -2.1192843914031982
    3. ' ' → logprob: -2.2442843914031982
    4. 'a' → logprob: -2.8692843914031982
    5. ' Le' → logprob: -3.1192843914031982
    6. '<|end|>' → logprob: -3.3692843914031982
    7. '    ' → logprob: -3.6192843914031982
    8. ' )' → logprob: -4.244284629821777
    9. ' un' → logprob: -4.869284629821777
    10. ' int' → logprob: -5.119284629821777

Token 41: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -1.232692837715149
    2. 'ent' → logprob: -1.982692837715149
    3. ' )' → logprob: -2.2326927185058594
    4. ' a' → logprob: -2.3576927185058594
    5. ' ' → logprob: -2.3576927185058594
    6. ' ent' → logprob: -2.7326927185058594
    7. ')' → logprob: -2.7326927185058594
    8. 'a' → logprob: -3.4826927185058594
    9. '   ' → logprob: -3.7326927185058594
    10. '<|end|>' → logprob: -4.232692718505859

Token 42: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04479285702109337
    2. ' )' → logprob: -4.044792652130127
    3. ' ' → logprob: -4.794792652130127
    4. '<|end|>' → logprob: -4.794792652130127
    5. '   ' → logprob: -5.044792652130127
    6. ',' → logprob: -6.794792652130127
    7. '<|end|>' → logprob: -8.044793128967285
    8. '  ' → logprob: -8.169793128967285
    9. ' ,' → logprob: -8.294793128967285
    10. '```' → logprob: -8.294793128967285

Token 43: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7928568720817566
    2. ')' → logprob: -1.2928569316864014
    3. '    ' → logprob: -2.5428569316864014
    4. 'b' → logprob: -3.2928569316864014
    5. ' )' → logprob: -3.2928569316864014
    6. ',' → logprob: -3.6678569316864014
    7. ' ,' → logprob: -3.6678569316864014
    8. '<|end|>' → logprob: -3.9178569316864014
    9. '   ' → logprob: -4.292856693267822
    10. ' 
' → logprob: -5.042856693267822

Token 44: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.01828327216207981
    2. ' b' → logprob: -4.018283367156982
    3. '   ' → logprob: -9.768282890319824
    4. ' ' → logprob: -10.393282890319824
    5. '    ' → logprob: -11.143282890319824
    6. '```' → logprob: -11.393282890319824
    7. '       ' → logprob: -11.643282890319824
    8. ' ' → logprob: -12.768282890319824
    9. 'a' → logprob: -13.018282890319824
    10. '  ' → logprob: -13.893282890319824

Token 45: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0169842429459095
    2. ')' → logprob: -4.391984462738037
    3. '(int' → logprob: -5.891984462738037
    4. ':int' → logprob: -7.141984462738037
    5. ':' → logprob: -7.766984462738037
    6. ' )' → logprob: -8.391983985900879
    7. '[int' → logprob: -9.891983985900879
    8. ' :' → logprob: -10.016983985900879
    9. ' int' → logprob: -10.016983985900879
    10. '   ' → logprob: -10.516983985900879

Token 46: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003372502396814525
    2. ' int' → logprob: -8.000337600708008
    3. ')' → logprob: -14.875337600708008
    4. '[int' → logprob: -14.875337600708008
    5. '   ' → logprob: -15.375337600708008
    6. ':int' → logprob: -15.500337600708008
    7. '=int' → logprob: -16.000337600708008
    8. '(int' → logprob: -16.000337600708008
    9. '<int' → logprob: -16.375337600708008
    10. '```' → logprob: -16.375337600708008

Token 47: '):' (ID: 3127)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4122660160064697
    2. ')' → logprob: -1.5372660160064697
    3. '):' → logprob: -2.4122660160064697
    4. 'int' → logprob: -3.6622660160064697
    5. ':int' → logprob: -5.287265777587891
    6. '(int' → logprob: -6.287265777587891
    7. '[int' → logprob: -7.912265777587891
    8. ' int' → logprob: -9.03726577758789
    9. '   ' → logprob: -9.53726577758789
    10. '<int' → logprob: -10.53726577758789

Token 48: ' Deux' (ID: 92086)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.28139176964759827
    2. 'int' → logprob: -1.4063917398452759
    3. 'Second' → logprob: -9.781392097473145
    4. '   ' → logprob: -10.031392097473145
    5. '(int' → logprob: -10.156392097473145
    6. 'Premier' → logprob: -10.281392097473145
    7. ' Premier' → logprob: -11.031392097473145
    8. ' Second' → logprob: -11.406392097473145
    9. '[int' → logprob: -11.781392097473145
    10. 'Deux' → logprob: -12.156392097473145

Token 49: 'ième' (ID: 41126)
  Prédit: 'ième'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ième' → logprob: -0.4171103239059448
    2. 'ier' → logprob: -1.2921103239059448
    3. '   ' → logprob: -4.042110443115234
    4. 'ti' → logprob: -4.042110443115234
    5. ' entier' → logprob: -4.792110443115234
    6. 'int' → logprob: -5.292110443115234
    7. 'ié' → logprob: -5.292110443115234
    8. 'i' → logprob: -5.292110443115234
    9. 't' → logprob: -5.917110443115234
    10. 'ieme' → logprob: -6.292110443115234

Token 50: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7856971025466919
    2. ' entier' → logprob: -0.7856971025466919
    3. 'int' → logprob: -2.6606969833374023
    4. ' ent' → logprob: -4.660696983337402
    5. ' int' → logprob: -4.910696983337402
    6. '   ' → logprob: -7.035696983337402
    7. '_ent' → logprob: -8.160696983337402
    8. '```' → logprob: -9.535696983337402
    9. '(ent' → logprob: -9.660696983337402
    10. ''ent' → logprob: -9.785696983337402

Token 51: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1077544093132019
    2. ')' → logprob: -2.4827544689178467
    3. '):' → logprob: -4.232754230499268
    4. '):
' → logprob: -5.982754230499268
    5. '```' → logprob: -6.607754230499268
    6. ')
' → logprob: -9.482754707336426
    7. '"""' → logprob: -9.732754707336426
    8. '"""
' → logprob: -10.857754707336426
    9. '``' → logprob: -10.982754707336426
    10. '
' → logprob: -11.232754707336426

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03524326905608177
    2. ')' → logprob: -3.410243272781372
    3. '
' → logprob: -7.410243034362793
    4. ')
' → logprob: -7.785243034362793
    5. '    
' → logprob: -8.785243034362793
    6. '"""
' → logprob: -9.035243034362793
    7. '"""' → logprob: -9.160243034362793
    8. '```' → logprob: -9.410243034362793
    9. 'Returns' → logprob: -9.535243034362793
    10. ' )' → logprob: -11.660243034362793

Token 53: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2199445366859436
    2. 'Returns' → logprob: -2.094944477081299
    3. ')' → logprob: -2.844944477081299
    4. '"""
' → logprob: -5.094944477081299
    5. '"""' → logprob: -5.094944477081299
    6. ')
' → logprob: -7.094944477081299
    7. ' Returns' → logprob: -7.219944477081299
    8. '```' → logprob: -7.344944477081299
    9. '       ' → logprob: -7.719944477081299
    10. 'Retour' (adapté à ' Retour') → logprob: -7.719944477081299

Token 54: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.0033211270347237587
    2. '   ' → logprob: -6.253321170806885
    3. 'urne' → logprob: -7.378321170806885
    4. 'n' → logprob: -8.628320693969727
    5. 'nne' → logprob: -8.628320693969727
    6. 'urn' → logprob: -9.253320693969727
    7. 'ns' → logprob: -9.253320693969727
    8. 'rne' → logprob: -9.378320693969727
    9. '       ' → logprob: -10.503320693969727
    10. 'nes' → logprob: -10.628320693969727

Token 55: ':
' (ID: 734)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.38380131125450134
    2. ':' → logprob: -1.3838013410568237
    3. ' :' → logprob: -3.383801221847534
    4. 'True' → logprob: -3.883801221847534
    5. '   ' → logprob: -4.633801460266113
    6. ' ' → logprob: -6.383801460266113
    7. '  ' → logprob: -7.383801460266113
    8. ' ' → logprob: -7.508801460266113
    9. ' bool' → logprob: -7.758801460266113
    10. 'e' → logprob: -8.883801460266113

Token 56: '       ' (ID: 309)
  Prédit: ' bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.4058043360710144
    2. ' True' → logprob: -1.7808043956756592
    3. '   ' → logprob: -1.9058043956756592
    4. '    ' → logprob: -4.90580415725708
    5. '       ' → logprob: -5.03080415725708
    6. 'True' → logprob: -6.90580415725708
    7. 'bool' → logprob: -7.40580415725708
    8. ' true' → logprob: -7.65580415725708
    9. '```' → logprob: -9.155804634094238
    10. ' boolean' → logprob: -9.780804634094238

Token 57: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.3041907548904419
    2. 'bool' (adapté à ' bool') → logprob: -1.429190754890442
    3. '   ' → logprob: -4.179190635681152
    4. 'True' → logprob: -5.679190635681152
    5. ' True' → logprob: -5.679190635681152
    6. '       ' → logprob: -7.554190635681152
    7. '```' → logprob: -9.929190635681152
    8. '    ' → logprob: -10.679190635681152
    9. '(bool' → logprob: -11.554190635681152
    10. 'Bool' → logprob: -12.054190635681152

Token 58: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007614674977958202
    2. ' :' → logprob: -5.257614612579346
    3. '   ' → logprob: -6.632614612579346
    4. ':
' → logprob: -7.257614612579346
    5. 'True' → logprob: -8.632615089416504
    6. '       ' → logprob: -9.507615089416504
    7. ' True' → logprob: -10.382615089416504
    8. '           ' → logprob: -11.507615089416504
    9. '```' → logprob: -11.507615089416504
    10. ' :
' → logprob: -12.132615089416504

Token 59: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.019545791670680046
    2. '   ' → logprob: -4.894545555114746
    3. 'True' → logprob: -4.894545555114746
    4. ' Le' → logprob: -6.269545555114746
    5. '       ' → logprob: -6.644545555114746
    6. '    ' → logprob: -7.144545555114746
    7. ' La' → logprob: -8.894545555114746
    8. ' V' → logprob: -9.894545555114746
    9. ' return' → logprob: -10.269545555114746
    10. ' (' → logprob: -10.769545555114746

Token 60: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.5417312979698181
    2. ' if' → logprob: -0.9167312979698181
    3. ' True' → logprob: -5.416731357574463
    4. 'si' → logprob: -5.541731357574463
    5. '   ' → logprob: -5.791731357574463
    6. ' uniquement' → logprob: -6.291731357574463
    7. 'if' → logprob: -6.541731357574463
    8. ' seulement' → logprob: -7.041731357574463
    9. ' ' → logprob: -7.541731357574463
    10. 'True' → logprob: -7.791731357574463

Token 61: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.003086924320086837
    2. ' ' → logprob: -6.753087043762207
    3. 'le' → logprob: -7.253087043762207
    4. '   ' → logprob: -8.128087043762207
    5. ' l' → logprob: -8.628087043762207
    6. '    ' → logprob: -8.878087043762207
    7. ' la' → logprob: -9.253087043762207
    8. ' ' → logprob: -9.503087043762207
    9. 'Le' → logprob: -9.628087043762207
    10. ' the' → logprob: -9.628087043762207

Token 62: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.005662837065756321
    2. 'produ' → logprob: -5.38066291809082
    3. ' product' → logprob: -7.63066291809082
    4. ' produ' → logprob: -8.13066291809082
    5. ' ' → logprob: -9.75566291809082
    6. ' prod' → logprob: -10.13066291809082
    7. ' produits' → logprob: -10.25566291809082
    8. 's' → logprob: -11.25566291809082
    9. 'pro' → logprob: -11.25566291809082
    10. 'product' → logprob: -11.38066291809082

Token 63: ' a' (ID: 261)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.03973781317472458
    2. 'est' → logprob: -3.5397377014160156
    3. '   ' → logprob: -5.664737701416016
    4. ' de' → logprob: -5.789737701416016
    5. ' des' → logprob: -5.789737701416016
    6. 'de' → logprob: -8.789737701416016
    7. ' is' → logprob: -9.164737701416016
    8. 'des' → logprob: -10.039737701416016
    9. ' ' → logprob: -10.539737701416016
    10. '    ' → logprob: -11.914737701416016

Token 64: ' *' (ID: 425)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.10057434439659119
    2. 'est' → logprob: -2.975574254989624
    3. ' ' → logprob: -3.225574254989624
    4. ')' → logprob: -6.850574493408203
    5. ' is' → logprob: -7.100574493408203
    6. '<|end|>' → logprob: -7.475574493408203
    7. ' )' → logprob: -7.725574493408203
    8. ' a' → logprob: -7.850574493408203
    9. '*' → logprob: -8.850574493408203
    10. 's' → logprob: -8.975574493408203

Token 65: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931522488594055
    2. ' b' → logprob: -0.6931522488594055
    3. ' ' → logprob: -12.69315242767334
    4. 'a' → logprob: -14.44315242767334
    5. '_b' → logprob: -15.06815242767334
    6. ' a' → logprob: -15.56815242767334
    7. '<|end|>' → logprob: -15.56815242767334
    8. '	b' → logprob: -16.068151473999023
    9. 's' → logprob: -16.193151473999023
    10. ' ' → logprob: -16.318151473999023

Token 66: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.17992189526557922
    2. 'est' → logprob: -1.8049218654632568
    3. ' ' → logprob: -9.429922103881836
    4. '   ' → logprob: -10.054922103881836
    5. ' is' → logprob: -10.804922103881836
    6. ''est' → logprob: -11.179922103881836
    7. ')' → logprob: -12.554922103881836
    8. ' n' → logprob: -12.804922103881836
    9. '```' → logprob: -13.179922103881836
    10. '_est' → logprob: -13.429922103881836

Token 67: ' impair' (ID: 64113)
  Prédit: ' impair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impair' → logprob: -0.0927235409617424
    2. 'imp' → logprob: -2.7177236080169678
    3. ' imp' → logprob: -3.8427236080169678
    4. 'im' → logprob: -7.217723369598389
    5. ' impar' → logprob: -8.842723846435547
    6. '_imp' → logprob: -9.842723846435547
    7. '```' → logprob: -10.092723846435547
    8. ' un' → logprob: -10.842723846435547
    9. ' impairment' → logprob: -10.842723846435547
    10. ' odd' → logprob: -11.467723846435547

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0060629406943917274
    2. '   ' → logprob: -5.256062984466553
    3. 'True' → logprob: -8.631062507629395
    4. '```' → logprob: -8.631062507629395
    5. '.' → logprob: -9.006062507629395
    6. '"""' → logprob: -9.131062507629395
    7. ' ,' → logprob: -9.506062507629395
    8. ' True' → logprob: -10.131062507629395
    9. 'False' → logprob: -10.256062507629395
    10. '"""
' → logprob: -10.756062507629395

Token 69: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.11709374934434891
    2. 'False' → logprob: -2.242093801498413
    3. '       ' → logprob: -6.242093563079834
    4. '   ' → logprob: -6.742093563079834
    5. ' sinon' → logprob: -7.117093563079834
    6. ' True' → logprob: -8.617094039916992
    7. '    ' → logprob: -9.617094039916992
    8. 'True' → logprob: -10.867094039916992
    9. ' else' → logprob: -11.492094039916992
    10. 'else' → logprob: -11.742094039916992

Token 70: ' sinon' (ID: 52915)
  Prédit: ' sinon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sinon' → logprob: -0.016422590240836143
    2. ' autrement' → logprob: -4.266422748565674
    3. '   ' → logprob: -6.641422748565674
    4. ' otherwise' → logprob: -7.641422748565674
    5. '```' → logprob: -8.016422271728516
    6. ' dans' → logprob: -9.891422271728516
    7. 'sin' → logprob: -10.641422271728516
    8. ' si' → logprob: -11.016422271728516
    9. ' else' → logprob: -11.641422271728516
    10. 'Sinon' → logprob: -11.766422271728516

Token 71: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021824557334184647
    2. ')' → logprob: -4.646824359893799
    3. '"""' → logprob: -5.021824359893799
    4. '
' → logprob: -6.021824359893799
    5. '```' → logprob: -6.521824359893799
    6. '):' → logprob: -7.771824359893799
    7. '"""
' → logprob: -8.271824836730957
    8. '.' → logprob: -8.521824836730957
    9. ':' → logprob: -8.646824836730957
    10. '"' → logprob: -9.646824836730957

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026631697546690702
    2. '"""' → logprob: -6.5026631355285645
    3. '
' → logprob: -7.0026631355285645
    4. '"""
' → logprob: -8.877663612365723
    5. '```' → logprob: -10.252663612365723
    6. '    
' → logprob: -10.627663612365723
    7. '"' → logprob: -10.877663612365723
    8. ')' → logprob: -11.627663612365723
    9. '    ' → logprob: -11.752663612365723
    10. '       ' → logprob: -12.627663612365723

Token 73: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003162987530231476
    2. '"""' → logprob: -6.003162860870361
    3. '
' → logprob: -7.878162860870361
    4. '"""
' (adapté à ' """
') → logprob: -8.87816333770752
    5. ')' → logprob: -9.87816333770752
    6. '    
' → logprob: -10.37816333770752
    7. '```' → logprob: -10.37816333770752
    8. '\n' → logprob: -10.50316333770752
    9. '"' → logprob: -11.37816333770752
    10. '""' → logprob: -12.37816333770752

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005751936114393175
    2. '
' → logprob: -7.625575065612793
    3. '    
' → logprob: -10.125575065612793
    4. 'return' → logprob: -10.750575065612793
    5. ' return' → logprob: -11.125575065612793
    6. '    ' → logprob: -12.125575065612793
    7. '\n' → logprob: -13.375575065612793
    8. ' 
' → logprob: -13.750575065612793
    9. '  ' → logprob: -14.500575065612793
    10. '```' → logprob: -14.750575065612793

Token 75: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2661711275577545
    2. 'return' → logprob: -1.5161710977554321
    3. ' return' → logprob: -4.266170978546143
    4. 'r' → logprob: -10.0161714553833
    5. '    
' → logprob: -11.3911714553833
    6. '    ' → logprob: -11.5161714553833
    7. '#' (adapté à ' #') → logprob: -12.0161714553833
    8. 'ret' → logprob: -12.1411714553833
    9. 'if' → logprob: -12.1411714553833
    10. '```' → logprob: -12.3911714553833

Token 76: ' Calcul' (ID: 57243)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.33878251910209656
    2. ' return' → logprob: -1.338782548904419
    3. '   ' → logprob: -3.713782548904419
    4. 'if' → logprob: -7.83878231048584
    5. ' if' → logprob: -8.46378231048584
    6. ' retour' → logprob: -10.46378231048584
    7. 'result' → logprob: -10.71378231048584
    8. 'ret' → logprob: -10.71378231048584
    9. 'product' → logprob: -10.96378231048584
    10. ' product' → logprob: -10.96378231048584

Token 77: 'er' (ID: 259)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019681276753544807
    2. '    ' → logprob: -6.376967906951904
    3. ' de' → logprob: -9.751968383789062
    4. ' du' → logprob: -10.126968383789062
    5. ' return' → logprob: -10.251968383789062
    6. '  ' → logprob: -10.376968383789062
    7. '_' → logprob: -11.126968383789062
    8. ')' → logprob: -11.251968383789062
    9. ' )' → logprob: -11.626968383789062
    10. ' product' → logprob: -11.751968383789062

Token 78: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5633049011230469
    2. ' a' → logprob: -1.0633049011230469
    3. '   ' → logprob: -3.063304901123047
    4. 'a' → logprob: -4.188304901123047
    5. '    ' → logprob: -5.063304901123047
    6. ' if' → logprob: -5.188304901123047
    7. ' le' → logprob: -5.313304901123047
    8. ' ' → logprob: -6.188304901123047
    9. '(a' → logprob: -6.188304901123047
    10. ' return' → logprob: -7.563304901123047

Token 79: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.253278523683548
    2. 'produ' → logprob: -1.5032784938812256
    3. '   ' → logprob: -7.378278732299805
    4. 'product' → logprob: -9.003278732299805
    5. 'prod' → logprob: -9.003278732299805
    6. ' produ' → logprob: -9.253278732299805
    7. ' product' → logprob: -9.628278732299805
    8. ' ' → logprob: -9.628278732299805
    9. ' retour' → logprob: -10.128278732299805
    10. ' return' → logprob: -10.378278732299805

Token 80: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012969622388482094
    2. '    
' → logprob: -4.512969493865967
    3. '    ' → logprob: -6.512969493865967
    4. 'product' → logprob: -8.887969970703125
    5. '     
' → logprob: -9.512969970703125
    6. ' )' → logprob: -10.887969970703125
    7. '   
' → logprob: -10.887969970703125
    8. ' product' → logprob: -10.887969970703125
    9. '  ' → logprob: -11.137969970703125
    10. '    
    
' → logprob: -11.137969970703125

Token 81: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4740847051143646
    2. 'a' → logprob: -0.974084734916687
    3. ' ' → logprob: -12.099084854125977
    4. '	a' → logprob: -14.099084854125977
    5. ' ' → logprob: -14.599084854125977
    6. '(a' → logprob: -15.349084854125977
    7. ' `' → logprob: -15.599084854125977
    8. '   ' → logprob: -15.724084854125977
    9. '```' → logprob: -16.724084854125977
    10. ' (' → logprob: -17.224084854125977

Token 82: ' et' (ID: 859)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.15818530321121216
    2. '*' → logprob: -2.0331852436065674
    3. '   ' → logprob: -4.7831854820251465
    4. ' ' → logprob: -5.6581854820251465
    5. ' et' → logprob: -6.6581854820251465
    6. '_' → logprob: -7.0331854820251465
    7. ')' → logprob: -7.7831854820251465
    8. ',' → logprob: -8.283185005187988
    9. '    ' → logprob: -8.908185005187988
    10. 'a' → logprob: -9.533185005187988

Token 83: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.003181994194164872
    2. 'b' → logprob: -5.7531819343566895
    3. ' ' → logprob: -12.503182411193848
    4. '  ' → logprob: -15.628182411193848
    5. ' ' → logprob: -16.25318145751953
    6. ' б' → logprob: -16.50318145751953
    7. '	b' → logprob: -16.75318145751953
    8. '   ' → logprob: -17.50318145751953
    9. '    ' → logprob: -17.75318145751953
    10. 's' → logprob: -18.19068145751953

Token 84: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0285717211663723
    2. '    
' → logprob: -3.653571605682373
    3. '   
' → logprob: -7.278571605682373
    4. '
' → logprob: -8.278572082519531
    5. 'product' → logprob: -8.403572082519531
    6. '  
' → logprob: -8.403572082519531
    7. '    ' → logprob: -8.403572082519531
    8. '     
' → logprob: -8.653572082519531
    9. 'return' → logprob: -9.278572082519531
    10. ' return' → logprob: -9.278572082519531

Token 85: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04721945524215698
    2. ' puis' → logprob: -3.5472195148468018
    3. ' et' → logprob: -4.797219276428223
    4. '    
' → logprob: -5.547219276428223
    5. '    ' → logprob: -6.547219276428223
    6. ' return' → logprob: -6.922219276428223
    7. ' 
' → logprob: -7.297219276428223
    8. 'et' → logprob: -8.297219276428223
    9. 'return' → logprob: -8.547219276428223
    10. '  ' → logprob: -8.547219276428223

Token 86: ' vérifier' (ID: 93671)
  Prédit: ' vérifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.051142074167728424
    2. 'v' → logprob: -4.30114221572876
    3. ' retourner' → logprob: -4.30114221572876
    4. ' return' → logprob: -4.55114221572876
    5. ' vér' → logprob: -5.67614221572876
    6. '   ' → logprob: -5.92614221572876
    7. 'return' → logprob: -6.17614221572876
    8. ' v' → logprob: -6.67614221572876
    9. ' tester' → logprob: -7.05114221572876
    10. ' verifier' → logprob: -7.30114221572876

Token 87: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12441093474626541
    2. ' if' → logprob: -2.49941086769104
    3. ' si' → logprob: -4.124411106109619
    4. ' s' → logprob: -4.624411106109619
    5. ' ' → logprob: -5.624411106109619
    6. '    ' → logprob: -6.624411106109619
    7. ' a' → logprob: -6.999411106109619
    8. ' return' → logprob: -7.124411106109619
    9. '  ' → logprob: -7.249411106109619
    10. 's' → logprob: -8.124410629272461

Token 88: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.016542190685868263
    2. ' le' → logprob: -5.016541957855225
    3. ' ' → logprob: -5.266541957855225
    4. ' product' → logprob: -6.516541957855225
    5. '(product' → logprob: -6.516541957855225
    6. ' produit' → logprob: -7.766541957855225
    7. '(' → logprob: -7.891541957855225
    8. ' celui' → logprob: -8.516542434692383
    9. '   ' → logprob: -8.641542434692383
    10. 'le' → logprob: -9.516542434692383

Token 89: ' résultat' (ID: 62556)
  Prédit: ' produit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.0668804943561554
    2. ' ' → logprob: -3.066880464553833
    3. 'produ' → logprob: -5.441880702972412
    4. ' product' → logprob: -5.441880702972412
    5. ' est' → logprob: -5.816880702972412
    6. '```' → logprob: -6.816880702972412
    7. 'est' → logprob: -7.441880702972412
    8. 'ur' → logprob: -7.691880702972412
    9. '`' → logprob: -7.691880702972412
    10. ' produ' → logprob: -8.066880226135254

Token 90: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.36581161618232727
    2. '%' → logprob: -1.8658115863800049
    3. ' ' → logprob: -2.365811586380005
    4. ' est' → logprob: -3.115811586380005
    5. '   ' → logprob: -5.240811824798584
    6. 'est' → logprob: -5.615811824798584
    7. '  ' → logprob: -7.740811824798584
    8. 's' → logprob: -7.740811824798584
    9. ' )' → logprob: -8.115811347961426
    10. 'e' → logprob: -8.240811347961426

Token 91: ' impair' (ID: 64113)
  Prédit: ' impair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impair' → logprob: -0.5383071303367615
    2. ' ' → logprob: -1.5383071899414062
    3. ' imp' → logprob: -2.2883071899414062
    4. 'imp' → logprob: -3.0383071899414062
    5. ' )' → logprob: -4.288307189941406
    6. ' odd' → logprob: -4.913307189941406
    7. ' pair' → logprob: -5.038307189941406
    8. 'im' → logprob: -5.038307189941406
    9. 'odd' → logprob: -6.038307189941406
    10. ')' → logprob: -6.038307189941406

Token 92: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22343602776527405
    2. '
' → logprob: -1.9734359979629517
    3. '    
' → logprob: -2.973436117172241
    4. ' 
' → logprob: -5.848435878753662
    5. '   
' → logprob: -6.098435878753662
    6. '  
' → logprob: -6.348435878753662
    7. '\n' → logprob: -6.973435878753662
    8. 'return' → logprob: -6.973435878753662
    9. ' return' → logprob: -7.723435878753662
    10. '\' → logprob: -8.09843635559082

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12367359548807144
    2. '
' → logprob: -2.498673677444458
    3. '    
' → logprob: -3.498673677444458
    4. ' 
' → logprob: -6.623673439025879
    5. '   
' → logprob: -7.123673439025879
    6. 'return' → logprob: -7.373673439025879
    7. '  
' → logprob: -7.498673439025879
    8. ' return' → logprob: -8.623673439025879
    9. '\n' → logprob: -9.123673439025879
    10. '     
' → logprob: -9.498673439025879

Token 94: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02315044216811657
    2. ' return' → logprob: -4.273150444030762
    3. 'return' (adapté à ' return') → logprob: -4.773150444030762
    4. 'r' → logprob: -9.023150444030762
    5. '    
' → logprob: -9.148150444030762
    6. ' 
' → logprob: -9.273150444030762
    7. '    ' → logprob: -10.023150444030762
    8. ' ' → logprob: -10.148150444030762
    9. '
' → logprob: -10.398150444030762
    10. '  ' → logprob: -11.023150444030762

Token 95: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.008889320306479931
    2. ' ' → logprob: -5.133889198303223
    3. ' a' → logprob: -5.883889198303223
    4. 'a' → logprob: -9.883889198303223
    5. ' ' → logprob: -10.133889198303223
    6. '(' → logprob: -10.383889198303223
    7. '(a' → logprob: -10.383889198303223
    8. ' ((' → logprob: -11.633889198303223
    9. ' (
' → logprob: -12.008889198303223
    10. ' bool' → logprob: -13.758889198303223

Token 96: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0564331205387134e-05
    2. '(a' → logprob: -11.75001049041748
    3. ' a' → logprob: -12.87501049041748
    4. ' (' → logprob: -17.500011444091797
    5. ')a' → logprob: -17.500011444091797
    6. ')' → logprob: -18.250011444091797
    7. '(' → logprob: -18.625011444091797
    8. '	a' → logprob: -18.750011444091797
    9. '   ' → logprob: -20.625011444091797
    10. 'а' → logprob: -20.750011444091797

Token 97: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07407473027706146
    2. ' %' → logprob: -2.8240747451782227
    3. '%' → logprob: -5.324074745178223
    4. '*' → logprob: -5.574074745178223
    5. ' ' → logprob: -5.699074745178223
    6. ')' → logprob: -12.324074745178223
    7. ' ' → logprob: -12.324074745178223
    8. '```' → logprob: -12.574074745178223
    9. '1' → logprob: -14.074074745178223
    10. '*b' → logprob: -14.199074745178223

Token 98: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.47408145666122437
    2. 'b' → logprob: -0.9740814566612244
    3. ' ' → logprob: -12.849081039428711
    4. ')' → logprob: -14.099081039428711
    5. ')b' → logprob: -14.599081039428711
    6. '<|end|>' → logprob: -14.849081039428711
    7. '	b' → logprob: -16.34908103942871
    8. '```' → logprob: -16.59908103942871
    9. ' )' → logprob: -17.09908103942871
    10. ' 
' → logprob: -17.34908103942871

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002518230816349387
    2. ' )' → logprob: -6.127518177032471
    3. ')%' → logprob: -8.502518653869629
    4. '%' → logprob: -9.127518653869629
    5. ' %' → logprob: -11.127518653869629
    6. '1' → logprob: -13.502518653869629
    7. ' ' → logprob: -13.752518653869629
    8. ')
' → logprob: -14.127518653869629
    9. '%)' → logprob: -14.377518653869629
    10. '`)' → logprob: -14.627518653869629

Token 100: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04317205771803856
    2. '%' → logprob: -3.1681721210479736
    3. ' ' → logprob: -8.793171882629395
    4. ' ' → logprob: -11.418171882629395
    5. ' %
' → logprob: -12.293171882629395
    6. '1' → logprob: -12.543171882629395
    7. ')' → logprob: -14.543171882629395
    8. 'space' → logprob: -15.168171882629395
    9. '  ' → logprob: -15.918171882629395
    10. '2' → logprob: -16.16817283630371

Token 101: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. '```' → logprob: -17.393150329589844
    4. ' ' → logprob: -17.893150329589844
    5. '۲' → logprob: -18.018150329589844
    6. '<|end|>' → logprob: -18.143150329589844
    7. '   ' → logprob: -18.643150329589844
    8. '1' → logprob: -18.768150329589844
    9. '  ' → logprob: -19.518150329589844
    10. '２' → logprob: -19.893150329589844

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -18.0
    4. '۲' → logprob: -18.875
    5. '   ' → logprob: -19.25
    6. '٢' → logprob: -19.75
    7. '２' → logprob: -20.25
    8. '  ' → logprob: -20.875
    9. '२' → logprob: -21.0
    10. '২' → logprob: -21.75

Token 103: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8351685404777527
    2. '!=' → logprob: -1.2101686000823975
    3. ' !=' → logprob: -1.9601686000823975
    4. ' ==' → logprob: -2.4601686000823975
    5. ' ' → logprob: -4.210168361663818
    6. '=' → logprob: -4.210168361663818
    7. '1' → logprob: -4.460168361663818
    8. '!' → logprob: -7.710168361663818
    9. ' ' → logprob: -10.085168838500977
    10. ' !' → logprob: -11.835168838500977

Token 104: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740777611732483
    2. ' ' → logprob: -0.9740777611732483
    3. '1' → logprob: -14.599078178405762
    4. ' ' → logprob: -15.474078178405762
    5. '   ' → logprob: -17.099077224731445
    6. '  ' → logprob: -17.974077224731445
    7. '2' → logprob: -19.036577224731445
    8. '	' → logprob: -19.036577224731445
    9. '```' → logprob: -19.161577224731445
    10. '=' → logprob: -19.786577224731445

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '1' → logprob: -16.37501335144043
    4. '۰' → logprob: -17.50001335144043
    5. '０' → logprob: -18.75001335144043
    6. '   ' → logprob: -19.00001335144043
    7. '٠' → logprob: -19.00001335144043
    8. '```' → logprob: -19.00001335144043
    9. '00' → logprob: -19.75001335144043
    10. '2' → logprob: -20.06251335144043

Token 106: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23342563211917877
    2. ' is' → logprob: -1.8584256172180176
    3. ' space' → logprob: -3.6084256172180176
    4. '_' → logprob: -4.608425617218018
    5. ' ' → logprob: -4.858425617218018
    6. ' add' → logprob: -5.483425617218018
    7. ' a' → logprob: -7.108425617218018
    8. ' def' → logprob: -8.233426094055176
    9. ' f' → logprob: -8.483426094055176
    10. ' sum' → logprob: -8.483426094055176

Token 109: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006615192163735628
    2. '_' → logprob: -5.506615161895752
    3. '():' → logprob: -6.131615161895752
    4. ':' → logprob: -9.38161563873291
    5. '(
' → logprob: -9.88161563873291
    6. '()' → logprob: -10.25661563873291
    7. ' (' → logprob: -10.50661563873291
    8. '(_' → logprob: -10.88161563873291
    9. '("("' → logprob: -11.00661563873291
    10. '(_:' → logprob: -11.00661563873291

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017007682472467422
    2. ':' → logprob: -6.6267008781433105
    3. '    
' → logprob: -8.501700401306152
    4. '
' → logprob: -10.001700401306152
    5. ' 
' → logprob: -10.376700401306152
    6. ')' → logprob: -11.126700401306152
    7. ':
' → logprob: -11.376700401306152
    8. ' ' → logprob: -11.501700401306152
    9. 'a' → logprob: -11.751700401306152
    10. '  ' → logprob: -12.126700401306152

Token 111: ' """
' (ID: 7037)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29817745089530945
    2. ' a' → logprob: -1.4231774806976318
    3. '   ' → logprob: -4.423177242279053
    4. ' n' → logprob: -6.423177242279053
    5. 'n' → logprob: -6.673177242279053
    6. ' for' → logprob: -7.048177242279053
    7. ' x' → logprob: -8.048177719116211
    8. 'x' → logprob: -8.548177719116211
    9. 'for' → logprob: -8.548177719116211
    10. ' print' → logprob: -8.923177719116211

Token 112: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1369139403104782
    2. '   ' → logprob: -2.386914014816284
    3. ' a' → logprob: -4.011913776397705
    4. '10' → logprob: -5.136913776397705
    5. 'n' → logprob: -6.386913776397705
    6. ' ' → logprob: -6.761913776397705
    7. '    
' → logprob: -6.761913776397705
    8. '5' → logprob: -7.011913776397705
    9. 'int' → logprob: -7.136913776397705
    10. '  ' → logprob: -7.136913776397705

Token 113: ' Point' (ID: 9971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03525777533650398
    2. '#' → logprob: -3.7852578163146973
    3. ' #' → logprob: -6.410257816314697
    4. 'print' → logprob: -6.535257816314697
    5. '    
' → logprob: -6.535257816314697
    6. ' print' → logprob: -7.160257816314697
    7. 'C' → logprob: -7.535257816314697
    8. 'Calcul' → logprob: -7.910257816314697
    9. ' """' → logprob: -8.160257339477539
    10. 'if' → logprob: -8.285257339477539

Token 114: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0004123192047700286
    2. 'd' → logprob: -8.375411987304688
    3. '   ' → logprob: -9.000411987304688
    4. ' de' → logprob: -10.625411987304688
    5. ' ' → logprob: -11.250411987304688
    6. '_' → logprob: -11.875411987304688
    7. '_d' → logprob: -12.250411987304688
    8. '  ' → logprob: -12.625411987304688
    9. '    ' → logprob: -12.875411987304688
    10. ' ' → logprob: -13.875411987304688

Token 115: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.07929830998182297
    2. ''entrée' → logprob: -2.579298257827759
    3. 'entr' → logprob: -7.954298496246338
    4. ''' → logprob: -10.70429801940918
    5. '’entrée' → logprob: -11.57929801940918
    6. '_' → logprob: -11.95429801940918
    7. 'entry' → logprob: -12.20429801940918
    8. 'entra' → logprob: -12.57929801940918
    9. 'ent' → logprob: -13.07929801940918
    10. 'entrant' → logprob: -13.20429801940918

Token 116: ' principal' (ID: 10589)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.002135992050171
    2. ' de' → logprob: -1.127135992050171
    3. ' du' → logprob: -1.377135992050171
    4. ' d' → logprob: -3.877135992050171
    5. ' :' → logprob: -4.25213623046875
    6. ':' → logprob: -5.12713623046875
    7. ' ' → logprob: -5.62713623046875
    8. '    ' → logprob: -5.75213623046875
    9. 'def' → logprob: -6.00213623046875
    10. 'de' → logprob: -6.25213623046875

Token 117: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015543660148978233
    2. ':' → logprob: -5.015543460845947
    3. 'def' → logprob: -5.390543460845947
    4. '    
' → logprob: -6.640543460845947
    5. ' de' → logprob: -7.140543460845947
    6. ' :' → logprob: -7.515543460845947
    7. '
' → logprob: -8.140543937683105
    8. ' du' → logprob: -8.265543937683105
    9. ' pour' → logprob: -8.515543937683105
    10. '():' → logprob: -9.015543937683105

Token 118: ' programme' (ID: 18190)
  Prédit: ' programme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programme' → logprob: -0.01299104280769825
    2. 'programme' → logprob: -4.887990951538086
    3. ' script' → logprob: -5.762990951538086
    4. ' program' → logprob: -6.262990951538086
    5. ' code' → logprob: -8.762990951538086
    6. 'program' → logprob: -9.262990951538086
    7. ' progr' → logprob: -10.387990951538086
    8. ' programma' → logprob: -11.387990951538086
    9. ' programa' → logprob: -11.762990951538086
    10. 'script' → logprob: -12.012990951538086

Token 119: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13593439757823944
    2. ':' → logprob: -2.260934352874756
    3. ')' → logprob: -5.010934352874756
    4. '
' → logprob: -5.260934352874756
    5. '    
' → logprob: -5.885934352874756
    6. '):' → logprob: -5.885934352874756
    7. ' :' → logprob: -6.010934352874756
    8. ':
' → logprob: -6.885934352874756
    9. '):
' → logprob: -7.010934352874756
    10. ',' → logprob: -8.510934829711914

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015973414992913604
    2. '    
' → logprob: -7.0015974044799805
    3. '
' → logprob: -8.12659740447998
    4. '    ' → logprob: -8.62659740447998
    5. ' 
' → logprob: -9.37659740447998
    6. ')' → logprob: -10.25159740447998
    7. ' ' → logprob: -10.75159740447998
    8. '```' → logprob: -11.12659740447998
    9. '  ' → logprob: -11.25159740447998
    10. '  
' → logprob: -11.87659740447998

Token 121: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009146158583462238
    2. '    
' → logprob: -4.884146213531494
    3. '
' → logprob: -6.884146213531494
    4. ' 
' → logprob: -8.759145736694336
    5. '   
' → logprob: -9.759145736694336
    6. '    ' → logprob: -9.759145736694336
    7. 'a' → logprob: -10.134145736694336
    8. 'n' → logprob: -10.259145736694336
    9. '```' → logprob: -10.509145736694336
    10. 'def' → logprob: -10.759145736694336

Token 122: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1262797117233276
    2. '()' → logprob: -1.2512797117233276
    3. ' les' → logprob: -1.3762797117233276
    4. ' des' → logprob: -2.876279830932617
    5. ' deux' → logprob: -3.751279830932617
    6. '   ' → logprob: -4.001279830932617
    7. ' une' → logprob: -4.126279830932617
    8. ' a' → logprob: -5.251279830932617
    9. ' l' → logprob: -5.626279830932617
    10. ' un' → logprob: -6.001279830932617

Token 123: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.08623084425926208
    2. ' nombres' → logprob: -3.211230754852295
    3. 'ent' → logprob: -4.086230754852295
    4. ' ' → logprob: -4.461230754852295
    5. ' integers' → logprob: -4.711230754852295
    6. ' ' → logprob: -5.836230754852295
    7. ' entier' → logprob: -7.211230754852295
    8. ' valeurs' → logprob: -8.461231231689453
    9. 'nombre' → logprob: -8.711231231689453
    10. ' nombre' → logprob: -8.711231231689453

Token 124: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -8.947715832618997e-05
    2. 'ers' → logprob: -10.000089645385742
    3. 'ier' → logprob: -11.500089645385742
    4. 'ières' → logprob: -11.500089645385742
    5. 'i' → logprob: -11.750089645385742
    6. 'riers' → logprob: -12.000089645385742
    7. 'ri' → logprob: -12.875089645385742
    8. 't' → logprob: -13.125089645385742
    9. '   ' → logprob: -13.750089645385742
    10. 'ires' → logprob: -14.000089645385742

Token 125: ' depuis' (ID: 16277)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9869480729103088
    2. ' depuis' → logprob: -0.9869480729103088
    3. ' à' → logprob: -2.236948013305664
    4. ' de' → logprob: -2.986948013305664
    5. ',' → logprob: -3.736948013305664
    6. ' ,' → logprob: -3.986948013305664
    7. ' au' → logprob: -3.986948013305664
    8. ' )' → logprob: -4.361948013305664
    9. ' a' → logprob: -5.486948013305664
    10. 's' → logprob: -5.611948013305664

Token 126: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.08331278711557388
    2. 'l' → logprob: -2.833312749862671
    3. ' input' → logprob: -4.20831298828125
    4. ' ' → logprob: -6.20831298828125
    5. 'input' → logprob: -6.45831298828125
    6. '	l' → logprob: -6.83331298828125
    7. ' ' → logprob: -7.08331298828125
    8. ' la' → logprob: -8.08331298828125
    9. ' les' → logprob: -9.70831298828125
    10. '_' → logprob: -10.20831298828125

Token 127: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.20195946097373962
    2. ''' → logprob: -2.3269593715667725
    3. 'a' → logprob: -2.7019593715667725
    4. ''utilisateur' → logprob: -4.576959609985352
    5. 'input' → logprob: -5.826959609985352
    6. 'e' → logprob: -5.951959609985352
    7. 'es' → logprob: -7.076959609985352
    8. ' input' → logprob: -8.076959609985352
    9. 'entrée' → logprob: -8.451959609985352
    10. ''a' → logprob: -8.701959609985352

Token 128: ' standard' (ID: 7024)
  Prédit: ' standard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.024422787129878998
    2. ' utilisateur' → logprob: -4.274422645568848
    3. 'standard' → logprob: -4.649422645568848
    4. ',' → logprob: -8.024422645568848
    5. '()' → logprob: -9.024422645568848
    6. 'Standard' → logprob: -10.399422645568848
    7. ' user' → logprob: -10.774422645568848
    8. '_standard' → logprob: -11.149422645568848
    9. ' utilisateurs' → logprob: -11.274422645568848
    10. 'util' → logprob: -11.274422645568848

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01984477788209915
    2. ' ,' → logprob: -4.144845008850098
    3. ' et' → logprob: -5.769845008850098
    4. '   ' → logprob: -8.019845008850098
    5. ' ' → logprob: -9.019845008850098
    6. '.' → logprob: -9.644845008850098
    7. '()' → logprob: -10.144845008850098
    8. ' )' → logprob: -10.269845008850098
    9. ')' → logprob: -11.019845008850098
    10. ' and' → logprob: -11.644845008850098

Token 130: ' vér' (ID: 42524)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.09193657338619232
    2. ' vér' → logprob: -3.0919365882873535
    3. ' appelle' → logprob: -3.3419365882873535
    4. ' puis' → logprob: -6.3419365882873535
    5. ' calc' → logprob: -6.5919365882873535
    6. 'v' → logprob: -7.7169365882873535
    7. '   ' → logprob: -7.8419365882873535
    8. ' effect' → logprob: -8.091936111450195
    9. ' calculates' → logprob: -8.091936111450195
    10. ' appels' → logprob: -8.341936111450195

Token 131: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0003132976416964084
    2. 'if' → logprob: -8.500313758850098
    3. 'ifi' → logprob: -10.375313758850098
    4. 'ifiez' → logprob: -10.625313758850098
    5. 'i' → logprob: -10.875313758850098
    6. '   ' → logprob: -11.000313758850098
    7. 'ifiant' → logprob: -12.250313758850098
    8. 'ifié' → logprob: -12.500313758850098
    9. 'ifies' → logprob: -13.000313758850098
    10. 'ifier' → logprob: -13.500313758850098

Token 132: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.4097854793071747
    2. ' if' → logprob: -1.284785509109497
    3. ' s' → logprob: -3.034785509109497
    4. ' ' → logprob: -4.909785270690918
    5. ' leur' → logprob: -6.034785270690918
    6. 's' → logprob: -7.659785270690918
    7. 'si' → logprob: -8.284785270690918
    8. ' whether' → logprob: -8.909785270690918
    9. 'if' → logprob: -9.034785270690918
    10. ' leurs' → logprob: -9.159785270690918

Token 133: ' leur' (ID: 9853)
  Prédit: ' leur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leur' → logprob: -0.4709616005420685
    2. ' le' → logprob: -1.345961570739746
    3. ' their' → logprob: -2.470961570739746
    4. 'leur' → logprob: -4.595961570739746
    5. ' ' → logprob: -4.970961570739746
    6. ' leurs' → logprob: -5.220961570739746
    7. 'their' → logprob: -5.595961570739746
    8. ' ils' → logprob: -7.095961570739746
    9. 'le' → logprob: -7.220961570739746
    10. ' is' → logprob: -7.220961570739746

Token 134: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.0036540029104799032
    2. 'produ' → logprob: -5.7536540031433105
    3. ' product' → logprob: -8.003653526306152
    4. ' ' → logprob: -10.003653526306152
    5. 'product' → logprob: -10.128653526306152
    6. ' ' → logprob: -11.003653526306152
    7. ' produits' → logprob: -11.503653526306152
    8. ' produire' → logprob: -12.378653526306152
    9. 's' → logprob: -12.628653526306152
    10. 'prod' → logprob: -12.753653526306152

Token 135: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.013484661467373371
    2. '<|end|>' → logprob: -5.138484477996826
    3. 'est' → logprob: -5.388484477996826
    4. ' ' → logprob: -6.513484477996826
    5. ' is' → logprob: -6.638484477996826
    6. 's' → logprob: -9.388484954833984
    7. ' ' → logprob: -10.888484954833984
    8. ''est' → logprob: -11.638484954833984
    9. 'is' → logprob: -11.763484954833984
    10. 'es' → logprob: -12.263484954833984

Token 136: ' impair' (ID: 64113)
  Prédit: ' impair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impair' → logprob: -0.012080441229045391
    2. 'imp' → logprob: -4.637080669403076
    3. ' imp' → logprob: -6.387080669403076
    4. ' pair' → logprob: -8.387080192565918
    5. 'im' → logprob: -8.637080192565918
    6. ' impar' → logprob: -9.512080192565918
    7. 'pair' → logprob: -10.512080192565918
    8. ' ' → logprob: -10.637080192565918
    9. ' impaired' → logprob: -10.887080192565918
    10. ' ' → logprob: -11.012080192565918

Token 137: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006420124787837267
    2. '   ' → logprob: -5.256420135498047
    3. ' et' → logprob: -7.256420135498047
    4. ' ' → logprob: -8.631420135498047
    5. '.' → logprob: -8.881420135498047
    6. ' ,' → logprob: -9.256420135498047
    7. 'et' → logprob: -10.131420135498047
    8. 'e' → logprob: -12.006420135498047
    9. ',
' → logprob: -12.256420135498047
    10. ')' → logprob: -12.631420135498047

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1365235149860382
    2. ' et' → logprob: -2.136523485183716
    3. ' puis' → logprob: -5.261523723602295
    4. 'et' → logprob: -5.636523723602295
    5. ' and' → logprob: -7.886523723602295
    6. '    ' → logprob: -8.011523246765137
    7. 'p' → logprob: -10.761523246765137
    8. ',' → logprob: -10.761523246765137
    9. '  ' → logprob: -11.511523246765137
    10. 'and' → logprob: -11.636523246765137

Token 139: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2024998515844345
    2. ' et' → logprob: -2.2024998664855957
    3. ' puis' → logprob: -3.3274998664855957
    4. 'et' (adapté à ' et') → logprob: -3.4524998664855957
    5. 'p' → logprob: -5.577499866485596
    6. '    ' → logprob: -6.827499866485596
    7. ' and' → logprob: -8.827499389648438
    8. '    
' → logprob: -9.952499389648438
    9. '  ' → logprob: -10.202499389648438
    10. 'and' → logprob: -10.452499389648438

Token 140: ' affiche' (ID: 127479)
  Prédit: ' affiche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.0169695932418108
    2. ' imprime' → logprob: -4.391969680786133
    3. 'aff' → logprob: -5.766969680786133
    4. ' ' → logprob: -8.141969680786133
    5. '   ' → logprob: -8.266969680786133
    6. ' affich' → logprob: -8.766969680786133
    7. ' print' → logprob: -8.766969680786133
    8. ' ' → logprob: -9.391969680786133
    9. ' afficher' → logprob: -9.516969680786133
    10. ' impr' → logprob: -10.016969680786133

Token 141: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.8731012940406799
    2. ' le' → logprob: -1.3731012344360352
    3. '(' → logprob: -1.9981012344360352
    4. ' "' → logprob: -2.123101234436035
    5. ' un' → logprob: -3.123101234436035
    6. ' ' → logprob: -4.248101234436035
    7. '(
' → logprob: -4.998101234436035
    8. '"' → logprob: -5.748101234436035
    9. 'le' → logprob: -6.623101234436035
    10. ' ' → logprob: -6.873101234436035

Token 142: 'Yes' (ID: 13022)
  Prédit: ' Imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Imp' → logprob: -1.0194019079208374
    2. 'Produit' → logprob: -1.3944019079208374
    3. 'Im' → logprob: -2.019402027130127
    4. 'Le' → logprob: -2.144402027130127
    5. 'Imp' → logprob: -2.894402027130127
    6. 'imp' → logprob: -3.644402027130127
    7. ' Le' → logprob: -3.894402027130127
    8. ' Produit' → logprob: -4.769402027130127
    9. ' impair' → logprob: -5.019402027130127
    10. 'Oui' → logprob: -5.019402027130127

Token 143: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -7.3458322731312364e-06
    2. '!"' → logprob: -12.125007629394531
    3. '."' → logprob: -14.375007629394531
    4. '".' → logprob: -14.875007629394531
    5. '"""' → logprob: -15.250007629394531
    6. ' "' → logprob: -16.37500762939453
    7. '",' → logprob: -16.37500762939453
    8. '""' → logprob: -16.50000762939453
    9. ' !"' → logprob: -16.87500762939453
    10. '"`' → logprob: -17.00000762939453

Token 144: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22114287316799164
    2. ' si' → logprob: -1.9711428880691528
    3. ' ou' → logprob: -3.0961427688598633
    4. ' if' → logprob: -4.721142768859863
    5. '"' → logprob: -5.971142768859863
    6. ' or' → logprob: -7.471142768859863
    7. '```' → logprob: -7.846142768859863
    8. ' ' → logprob: -8.221142768859863
    9. ',' → logprob: -8.596142768859863
    10. 'si' → logprob: -8.846142768859863

Token 145: ' c' (ID: 274)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.8821472525596619
    2. ' le' → logprob: -1.1321473121643066
    3. ' oui' → logprob: -2.8821473121643066
    4. 'True' → logprob: -3.0071473121643066
    5. ' "' → logprob: -3.2571473121643066
    6. ' l' → logprob: -3.8821473121643066
    7. ' celui' → logprob: -4.132147312164307
    8. ' c' → logprob: -4.632147312164307
    9. ' the' → logprob: -4.882147312164307
    10. ' ' → logprob: -4.882147312164307

Token 146: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.026850655674934387
    2. 'e' → logprob: -4.901850700378418
    3. ' est' → logprob: -5.276850700378418
    4. 'est' → logprob: -6.026850700378418
    5. ''' → logprob: -6.026850700378418
    6. 'el' → logprob: -6.276850700378418
    7. 'es' → logprob: -6.651850700378418
    8. '’est' → logprob: -7.026850700378418
    9. '   ' → logprob: -7.151850700378418
    10. ''il' → logprob: -7.401850700378418

Token 147: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.022401750087738037
    2. ' ' → logprob: -4.897401809692383
    3. ' vrai' → logprob: -4.897401809692383
    4. ' True' → logprob: -5.397401809692383
    5. ' ' → logprob: -6.147401809692383
    6. 'True' → logprob: -8.522401809692383
    7. ' true' → logprob: -9.272401809692383
    8. 'le' → logprob: -9.647401809692383
    9. ' oui' → logprob: -10.272401809692383
    10. ' 
' → logprob: -10.522401809692383

Token 148: ' cas' (ID: 2108)
  Prédit: ' cas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.013842828571796417
    2. 'cas' → logprob: -4.763843059539795
    3. ' vrai' → logprob: -5.513843059539795
    4. ' le' → logprob: -8.013842582702637
    5. ' case' → logprob: -8.013842582702637
    6. 'le' → logprob: -8.638842582702637
    7. ' True' → logprob: -9.388842582702637
    8. '   ' → logprob: -9.888842582702637
    9. ' true' → logprob: -10.013842582702637
    10. ' oui' → logprob: -10.388842582702637

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014933188213035464
    2. '   ' → logprob: -6.751493453979492
    3. '",' → logprob: -8.751493453979492
    4. '"' → logprob: -9.001493453979492
    5. '.' → logprob: -10.501493453979492
    6. ';' → logprob: -11.876493453979492
    7. '```' → logprob: -13.501493453979492
    8. ' ' → logprob: -13.626493453979492
    9. ',"' → logprob: -14.001493453979492
    10. ' ,' → logprob: -14.126493453979492

Token 150: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6089842915534973
    2. '"' → logprob: -1.2339842319488525
    3. ' sinon' → logprob: -1.9839842319488525
    4. ' "' → logprob: -3.7339842319488525
    5. ' ou' → logprob: -7.108984470367432
    6. ' et' → logprob: -7.358984470367432
    7. ' autrement' → logprob: -7.733984470367432
    8. 'sin' → logprob: -7.858984470367432
    9. ',' → logprob: -8.108983993530273
    10. '"\' → logprob: -9.108983993530273

Token 151: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.007365133613348007
    2. ' No' → logprob: -5.2573652267456055
    3. '"No' → logprob: -6.8823652267456055
    4. 'Non' → logprob: -7.0073652267456055
    5. '"' → logprob: -8.757365226745605
    6. ' "' → logprob: -10.757365226745605
    7. 'False' → logprob: -11.757365226745605
    8. ' ' → logprob: -13.132365226745605
    9. ' Non' → logprob: -13.132365226745605
    10. '"N' → logprob: -13.132365226745605

Token 152: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -5.080963092041202e-06
    2. '```' → logprob: -13.125004768371582
    3. '".' → logprob: -13.250004768371582
    4. 's' → logprob: -14.625004768371582
    5. 'e' → logprob: -15.125004768371582
    6. '"""' → logprob: -16.0000057220459
    7. 'otherwise' → logprob: -16.2500057220459
    8. 'es' → logprob: -16.5000057220459
    9. 'else' → logprob: -16.8750057220459
    10. 'sin' → logprob: -17.3750057220459

Token 153: ' sinon' (ID: 52915)
  Prédit: ' sinon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sinon' → logprob: -0.1176242008805275
    2. ' autrement' → logprob: -2.492624282836914
    3. '   ' → logprob: -4.117624282836914
    4. ' otherwise' → logprob: -4.992624282836914
    5. '"' → logprob: -6.242624282836914
    6. '```' → logprob: -6.367624282836914
    7. 'sin' → logprob: -7.992624282836914
    8. 'otherwise' → logprob: -8.117624282836914
    9. ' ' → logprob: -8.242624282836914
    10. ' dans' → logprob: -8.617624282836914

Token 154: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2690861225128174
    2. '
' → logprob: -1.5190861225128174
    3. ')' → logprob: -5.144085884094238
    4. '.' → logprob: -5.144085884094238
    5. '    
' → logprob: -6.144085884094238
    6. '```' → logprob: -6.894085884094238
    7. ')
' → logprob: -7.519085884094238
    8. 'def' → logprob: -7.644085884094238
    9. '.
' → logprob: -7.644085884094238
    10. ':' → logprob: -9.394085884094238

Token 155: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06309758126735687
    2. '   ' → logprob: -2.8130974769592285
    3. '    
' → logprob: -6.8130974769592285
    4. '  
' → logprob: -11.938097953796387
    5. '
' → logprob: -12.313097953796387
    6. '\n' → logprob: -12.563097953796387
    7. '

' → logprob: -12.563097953796387
    8. '```' → logprob: -12.688097953796387
    9. '   
' → logprob: -12.813097953796387
    10. 'def' → logprob: -13.063097953796387

Token 156: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11760544776916504
    2. '
' → logprob: -2.242605447769165
    3. '    
' → logprob: -5.367605209350586
    4. '```' → logprob: -9.867605209350586
    5. '

' → logprob: -11.242605209350586
    6. '  
' → logprob: -11.992605209350586
    7. 'def' → logprob: -12.117605209350586
    8. '   
' → logprob: -12.242605209350586
    9. '
' → logprob: -12.367605209350586
    10. 'import' → logprob: -12.492605209350586

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003792946692556143
    2. 'a' → logprob: -5.628792762756348
    3. '    
' → logprob: -9.503792762756348
    4. 'try' → logprob: -9.753792762756348
    5. '
' → logprob: -10.378792762756348
    6. ' a' → logprob: -11.253792762756348
    7. 'import' → logprob: -11.503792762756348
    8. '```' → logprob: -13.628792762756348
    9. ' try' → logprob: -13.753792762756348
    10. 'n' → logprob: -13.878792762756348

Token 158: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012270045466721058
    2. 'try' → logprob: -4.637269973754883
    3. '   ' → logprob: -6.637269973754883
    4. 'import' → logprob: -6.887269973754883
    5. ' a' → logprob: -8.887269973754883
    6. ' try' → logprob: -10.387269973754883
    7. 'x' → logprob: -13.137269973754883
    8. '#' (adapté à ' #') → logprob: -13.137269973754883
    9. 'n' → logprob: -13.262269973754883
    10. ' import' → logprob: -13.762269973754883

Token 159: ' Lire' (ID: 57624)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08745993673801422
    2. 'try' → logprob: -2.7124600410461426
    3. ' a' → logprob: -4.962460041046143
    4. ' try' → logprob: -5.087460041046143
    5. 'import' → logprob: -5.587460041046143
    6. '   ' → logprob: -8.962459564208984
    7. ' import' → logprob: -9.462459564208984
    8. 'values' → logprob: -9.712459564208984
    9. '#' → logprob: -10.462459564208984
    10. '```' → logprob: -10.587459564208984

Token 160: ' une' (ID: 2463)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.05934637784957886
    2. 'a' → logprob: -3.8093464374542236
    3. ' deux' → logprob: -4.5593461990356445
    4. ' ' → logprob: -4.9343461990356445
    5. ' two' → logprob: -5.0593461990356445
    6. ' l' → logprob: -5.8093461990356445
    7. ' la' → logprob: -6.3093461990356445
    8. ' int' → logprob: -6.6843461990356445
    9. ' une' → logprob: -7.3093461990356445
    10. ' le' → logprob: -7.3093461990356445

Token 161: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.5916522145271301
    2. ' ' → logprob: -0.8416522145271301
    3. 'ligne' → logprob: -4.8416523933410645
    4. ',' → logprob: -6.0916523933410645
    5. 'l' → logprob: -6.8416523933410645
    6. ' line' → logprob: -6.8416523933410645
    7. ' paire' → logprob: -7.3416523933410645
    8. '()' → logprob: -7.5916523933410645
    9. ' input' → logprob: -7.7166523933410645
    10. ' lign' → logprob: -8.716651916503906

Token 162: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5063339471817017
    2. '   ' → logprob: -1.1313339471817017
    3. '()' → logprob: -3.381333827972412
    4. ',' → logprob: -3.881333827972412
    5. 'input' → logprob: -5.756333827972412
    6. ' ' → logprob: -5.756333827972412
    7. 's' → logprob: -5.881333827972412
    8. '=input' → logprob: -6.256333827972412
    9. '=' → logprob: -6.506333827972412
    10. '    ' → logprob: -6.756333827972412

Token 163: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10471159219741821
    2. 'input' → logprob: -2.3547115325927734
    3. ' l' → logprob: -6.229711532592773
    4. 'entrée' → logprob: -6.729711532592773
    5. 'l' → logprob: -7.229711532592773
    6. ' ' → logprob: -8.979711532592773
    7. ' entrée' → logprob: -9.229711532592773
    8. 's' → logprob: -9.604711532592773
    9. 'stdin' → logprob: -9.604711532592773
    10. ' code' → logprob: -9.604711532592773

Token 164: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.013278219848871231
    2. 'entrée' → logprob: -4.763278007507324
    3. 'input' → logprob: -6.263278007507324
    4. ''' → logprob: -7.013278007507324
    5. 'e' → logprob: -7.388278007507324
    6. 'a' → logprob: -7.763278007507324
    7. ''utilisateur' → logprob: -7.888278007507324
    8. 'es' → logprob: -8.763278007507324
    9. ''ent' → logprob: -9.388278007507324
    10. '’entrée' → logprob: -10.013278007507324

Token 165: ' utilisateur' (ID: 115595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.047580309212207794
    2. ' =' → logprob: -3.7975802421569824
    3. '   ' → logprob: -4.422580242156982
    4. '().' → logprob: -4.922580242156982
    5. ',' → logprob: -7.547580242156982
    6. '()
' → logprob: -7.547580242156982
    7. ' ()' → logprob: -7.672580242156982
    8. '=' → logprob: -7.922580242156982
    9. 'input' → logprob: -7.922580242156982
    10. 'import' → logprob: -7.922580242156982

Token 166: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36386582255363464
    2. ' =' → logprob: -1.363865852355957
    3. ',' → logprob: -3.363865852355957
    4. '=' → logprob: -5.613865852355957
    5. '    
' → logprob: -5.863865852355957
    6. 'a' → logprob: -6.113865852355957
    7. '
' → logprob: -6.113865852355957
    8. 'input' → logprob: -6.488865852355957
    9. 's' → logprob: -7.488865852355957
    10. '=input' → logprob: -7.988865852355957

Token 167: ' extra' (ID: 5018)
  Prédit: ' split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.3327144980430603
    2. 'split' → logprob: -1.832714557647705
    3. ' la' → logprob: -2.457714557647705
    4. 'la' → logprob: -4.457714557647705
    5. ' l' → logprob: -4.832714557647705
    6. 'spl' → logprob: -5.832714557647705
    7. ' convertir' → logprob: -5.832714557647705
    8. ' splitter' → logprob: -5.832714557647705
    9. '_split' → logprob: -6.582714557647705
    10. ' ' → logprob: -6.832714557647705

Token 168: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.0015950803644955158
    2. 'ct' → logprob: -7.3765950202941895
    3. '   ' → logprob: -8.876595497131348
    4. ' ire' → logprob: -8.876595497131348
    5. '```' → logprob: -9.126595497131348
    6. '
' → logprob: -9.626595497131348
    7. 'is' → logprob: -9.876595497131348
    8. 'it' → logprob: -10.001595497131348
    9. 'uire' → logprob: -10.251595497131348
    10. 'i' → logprob: -10.251595497131348

Token 169: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.43905872106552124
    2. ' les' → logprob: -1.314058780670166
    3. ' two' → logprob: -3.064058780670166
    4. 'a' → logprob: -3.564058780670166
    5. ' a' → logprob: -5.314058780670166
    6. 'de' → logprob: -5.939058780670166
    7. 'les' → logprob: -6.439058780670166
    8. 'two' → logprob: -6.939058780670166
    9. 's' → logprob: -7.939058780670166
    10. ' des' → logprob: -7.939058780670166

Token 170: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.018857356160879135
    2. 'ent' → logprob: -4.268857479095459
    3. ' integers' → logprob: -5.893857479095459
    4. ' nombres' → logprob: -6.893857479095459
    5. ' entier' → logprob: -7.518857479095459
    6. ' ' → logprob: -8.8938570022583
    7. ' int' → logprob: -9.5188570022583
    8. '_ent' → logprob: -9.8938570022583
    9. 'int' → logprob: -10.0188570022583
    10. ' enti' → logprob: -10.6438570022583

Token 171: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0013341709272935987
    2. 't' → logprob: -7.001334190368652
    3. 'ers' → logprob: -8.126334190368652
    4. 'ti' → logprob: -9.501334190368652
    5. 'i' → logprob: -11.001334190368652
    6. 'tiers' → logprob: -11.126334190368652
    7. 'gers' → logprob: -12.251334190368652
    8. 'ières' → logprob: -12.501334190368652
    9. 'ts' → logprob: -12.626334190368652
    10. 'eurs' → logprob: -13.626334190368652

Token 172: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42104679346084595
    2. '   ' → logprob: -1.4210467338562012
    3. ',' → logprob: -2.421046733856201
    4. 's' → logprob: -5.671046733856201
    5. 'a' → logprob: -5.796046733856201
    6. '=' → logprob: -6.421046733856201
    7. ' a' → logprob: -6.671046733856201
    8. ' ,' → logprob: -7.296046733856201
    9. ':' → logprob: -7.546046733856201
    10. '    
' → logprob: -7.546046733856201

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005300639197230339
    2. 'a' → logprob: -6.630300521850586
    3. ',' → logprob: -6.880300521850586
    4. 'input' → logprob: -7.630300521850586
    5. '    
' → logprob: -7.755300521850586
    6. ':' → logprob: -7.755300521850586
    7. ' line' → logprob: -7.880300521850586
    8. 'line' → logprob: -8.880300521850586
    9. ' =' → logprob: -9.130300521850586
    10. ' ' → logprob: -9.255300521850586

Token 174: ' a' (ID: 261)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.524349570274353
    2. '   ' → logprob: -1.774349570274353
    3. 'a' (adapté à ' a') → logprob: -2.2743496894836426
    4. ' a' → logprob: -2.5243496894836426
    5. 'line' → logprob: -3.6493496894836426
    6. ' input' → logprob: -4.149349689483643
    7. 'input' → logprob: -5.399349689483643
    8. ' ligne' → logprob: -5.524349689483643
    9. 'ligne' → logprob: -6.524349689483643
    10. ' user' → logprob: -7.524349689483643

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ' ,' → logprob: -13.500001907348633
    3. ',b' → logprob: -14.375001907348633
    4. ',a' → logprob: -17.500001907348633
    5. ',
' → logprob: -17.625001907348633
    6. '‌,' → logprob: -18.125001907348633
    7. 's' → logprob: -18.750001907348633
    8. ',int' → logprob: -18.875001907348633
    9. 'a' → logprob: -19.000001907348633
    10. ',\
' → logprob: -19.500001907348633

Token 176: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0015379542019218206
    2. 'b' → logprob: -6.501537799835205
    3. ' ' → logprob: -10.251538276672363
    4. ' ' → logprob: -15.251538276672363
    5. '	b' → logprob: -16.751537322998047
    6. ' ' → logprob: -18.126537322998047
    7. '<|end|>' → logprob: -18.876537322998047
    8. '_b' → logprob: -19.251537322998047
    9. ' ‌' → logprob: -19.251537322998047
    10. '  ' → logprob: -19.501537322998047

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00033677343162707984
    2. '=' → logprob: -8.000336647033691
    3. ' ' → logprob: -14.750336647033691
    4. ')' → logprob: -15.125336647033691
    5. '<|end|>' → logprob: -15.125336647033691
    6. ' =
' → logprob: -15.875336647033691
    7. ',' → logprob: -16.000337600708008
    8. '=int' → logprob: -17.250337600708008
    9. '=input' → logprob: -17.375337600708008
    10. ' =)' → logprob: -17.875337600708008

Token 178: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.005241225939244032
    2. 'map' → logprob: -5.255241394042969
    3. ' ' → logprob: -12.755241394042969
    4. ' ' → logprob: -13.005241394042969
    5. '	map' → logprob: -13.630241394042969
    6. ' input' → logprob: -15.255241394042969
    7. ' list' → logprob: -15.505241394042969
    8. '(map' → logprob: -15.505241394042969
    9. ' [' → logprob: -15.880241394042969
    10. '[' → logprob: -15.880241394042969

Token 179: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.048630282282829285
    2. '(' → logprob: -3.0486302375793457
    3. 'int' → logprob: -10.423630714416504
    4. '(
' → logprob: -12.548630714416504
    5. '<int' → logprob: -12.923630714416504
    6. '(input' → logprob: -12.923630714416504
    7. ' int' → logprob: -13.798630714416504
    8. ' (' → logprob: -14.048630714416504
    9. '[int' → logprob: -14.048630714416504
    10. '(in' → logprob: -14.048630714416504

Token 180: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08201815187931061
    2. 'input' → logprob: -2.8320181369781494
    3. ',input' → logprob: -4.9570183753967285
    4. ')' → logprob: -5.0820183753967285
    5. ',' → logprob: -5.5820183753967285
    6. '(' → logprob: -6.2070183753967285
    7. ' input' → logprob: -7.2070183753967285
    8. '=input' → logprob: -10.33201789855957
    9. ')(' → logprob: -11.20701789855957
    10. '   ' → logprob: -11.33201789855957

Token 181: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.313263863325119
    2. ' input' → logprob: -1.3132638931274414
    3. '	input' → logprob: -14.313263893127441
    4. '(input' → logprob: -14.563263893127441
    5. ' ' → logprob: -15.188263893127441
    6. ')' → logprob: -15.313263893127441
    7. '   ' → logprob: -15.313263893127441
    8. '=input' → logprob: -16.438262939453125
    9. ',input' → logprob: -16.438262939453125
    10. '<input' → logprob: -16.688262939453125

Token 182: '("' (ID: 568)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018263261765241623
    2. '()' → logprob: -4.018263339996338
    3. ')' → logprob: -9.76826286315918
    4. '())' → logprob: -10.76826286315918
    5. ' ().' → logprob: -10.89326286315918
    6. '()
' → logprob: -12.01826286315918
    7. ' ()' → logprob: -12.39326286315918
    8. '(' → logprob: -13.39326286315918
    9. '|()
' → logprob: -14.26826286315918
    10. '>().' → logprob: -14.39326286315918

Token 183: 'Ent' (ID: 3263)
  Prédit: '").'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '").' → logprob: -0.3653008043766022
    2. '()' → logprob: -2.1153008937835693
    3. '().' → logprob: -2.3653008937835693
    4. '("' → logprob: -3.1153008937835693
    5. 'Enter' → logprob: -4.49030065536499
    6. '"' → logprob: -4.61530065536499
    7. 'Veuillez' → logprob: -4.86530065536499
    8. '")' → logprob: -5.11530065536499
    9. 'Please' → logprob: -5.49030065536499
    10. ':' → logprob: -6.11530065536499

Token 184: 'rez' (ID: 13676)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rée' → logprob: -0.12386288493871689
    2. 'er' → logprob: -3.7488629817962646
    3. 're' → logprob: -3.7488629817962646
    4. 'ré' → logprob: -3.8738629817962646
    5. 'rez' → logprob: -3.9988629817962646
    6. 'r' → logprob: -4.1238627433776855
    7. 'ree' → logprob: -4.9988627433776855
    8. 'ée' → logprob: -6.4988627433776855
    9. 'ier' → logprob: -6.6238627433776855
    10. 'reur' → logprob: -6.8738627433776855

Token 185: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.12174715101718903
    2. '()' → logprob: -2.6217472553253174
    3. '("' → logprob: -3.8717472553253174
    4. ' two' → logprob: -4.996747016906738
    5. ' ' → logprob: -5.621747016906738
    6. ' des' → logprob: -5.871747016906738
    7. '(' → logprob: -6.246747016906738
    8. ' ")' → logprob: -6.621747016906738
    9. ' les' → logprob: -7.121747016906738
    10. '())' → logprob: -7.246747016906738

Token 186: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.2899959981441498
    2. ' integers' → logprob: -1.9149960279464722
    3. ' nombres' → logprob: -2.5399959087371826
    4. ' ' → logprob: -4.164996147155762
    5. 'ent' → logprob: -5.664996147155762
    6. ' numbers' → logprob: -5.914996147155762
    7. ' entier' → logprob: -6.164996147155762
    8. ' chiffres' → logprob: -7.039996147155762
    9. ' nombre' → logprob: -8.039996147155762
    10. ' valeurs' → logprob: -8.914996147155762

Token 187: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.001597579917870462
    2. 'i' → logprob: -7.2515974044799805
    3. 't' → logprob: -7.5015974044799805
    4. 'ers' → logprob: -8.87659740447998
    5. 'ti' → logprob: -9.50159740447998
    6. 'ières' → logprob: -10.50159740447998
    7. ' ers' → logprob: -10.87659740447998
    8. ' ti' → logprob: -11.00159740447998
    9. ' i' → logprob: -11.12659740447998
    10. 'ié' → logprob: -11.50159740447998

Token 188: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.28368091583251953
    2. ':' → logprob: -2.4086809158325195
    3. ' separated' → logprob: -2.5336809158325195
    4. ' :' → logprob: -2.9086809158325195
    5. ' separados' → logprob: -4.2836809158325195
    6. ' ").' → logprob: -6.5336809158325195
    7. '()' → logprob: -6.9086809158325195
    8. ' ' → logprob: -6.9086809158325195
    9. '")' → logprob: -7.0336809158325195
    10. ' ")' → logprob: -7.4086809158325195

Token 189: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.03376879543066025
    2. 'é' → logprob: -3.408768892288208
    3. 'es' → logprob: -9.533768653869629
    4. ' par' → logprob: -10.283768653869629
    5. ' ' → logprob: -12.158768653869629
    6. 'ès' → logprob: -12.658768653869629
    7. 'ées' → logprob: -13.533768653869629
    8. 'ÉS' → logprob: -13.658768653869629
    9. 'par' → logprob: -13.783768653869629
    10. 'e' → logprob: -13.783768653869629

Token 190: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.00794326700270176
    2. 'par' → logprob: -4.882943153381348
    3. ' ' → logprob: -8.882943153381348
    4. 'es' → logprob: -10.507943153381348
    5. 'e' → logprob: -10.507943153381348
    6. 'space' → logprob: -10.882943153381348
    7. ' espaces' → logprob: -11.007943153381348
    8. ' espace' → logprob: -11.257943153381348
    9. '<|end|>' → logprob: -11.257943153381348
    10. '_par' → logprob: -11.257943153381348

Token 191: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1470913589000702
    2. ' ' → logprob: -2.7720913887023926
    3. ' espace' → logprob: -3.2720913887023926
    4. 'un' → logprob: -4.397091388702393
    5. ' espaces' → logprob: -4.397091388702393
    6. ' des' → logprob: -5.772091388702393
    7. ''espace' → logprob: -5.772091388702393
    8. 'space' → logprob: -6.397091388702393
    9. ' )' → logprob: -7.397091388702393
    10. ' space' → logprob: -7.772091388702393

Token 192: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.04132340848445892
    2. 'es' → logprob: -3.41632342338562
    3. ' ' → logprob: -5.666323184967041
    4. ''espace' → logprob: -5.791323184967041
    5. 'e' → logprob: -7.666323184967041
    6. ' espaces' → logprob: -8.0413236618042
    7. '’espace' → logprob: -9.2913236618042
    8. 'esp' → logprob: -9.6663236618042
    9. ' space' → logprob: -9.7913236618042
    10. '  ' → logprob: -9.9163236618042

Token 193: ' :' (ID: 712)
  Prédit: '").'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '").' → logprob: -0.6557348370552063
    2. '")' → logprob: -1.0307347774505615
    3. ':' → logprob: -2.4057347774505615
    4. ')' → logprob: -3.7807347774505615
    5. '):' → logprob: -5.030735015869141
    6. '"):' → logprob: -6.405735015869141
    7. '"))' → logprob: -6.905735015869141
    8. ').' → logprob: -7.280735015869141
    9. ' :' → logprob: -7.655735015869141
    10. '')' → logprob: -8.53073501586914

Token 194: ' ").' (ID: 49234)
  Prédit: '").'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '").' → logprob: -0.14540906250476837
    2. '"))' → logprob: -2.645409107208252
    3. '")' → logprob: -2.770409107208252
    4. ').' → logprob: -7.395409107208252
    5. ')' → logprob: -7.645409107208252
    6. '"' → logprob: -8.270408630371094
    7. ' ").' → logprob: -9.145408630371094
    8. '))' → logprob: -9.395408630371094
    9. ' "))' → logprob: -9.770408630371094
    10. ')")' → logprob: -10.270408630371094

Token 195: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.662937372922897e-05
    2. 'strip' → logprob: -9.250096321105957
    3. ' split' → logprob: -14.875096321105957
    4. 'rstrip' → logprob: -16.250097274780273
    5. 'spl' → logprob: -17.375097274780273
    6. '(split' → logprob: -19.125097274780273
    7. '.split' → logprob: -19.750097274780273
    8. 's' → logprob: -21.000097274780273
    9. '_split' → logprob: -22.375097274780273
    10. ' strip' → logprob: -23.500097274780273

Token 196: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006778492126613855
    2. '()' → logprob: -5.131778717041016
    3. ')' → logprob: -7.256778717041016
    4. '()))' → logprob: -9.506778717041016
    5. '())
' → logprob: -9.756778717041016
    6. ' ())' → logprob: -12.256778717041016
    7. '(' → logprob: -13.006778717041016
    8. '('' → logprob: -13.631778717041016
    9. '()
' → logprob: -14.006778717041016
    10. '())

' → logprob: -14.381778717041016

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001719923340715468
    2. '
' → logprob: -6.876719951629639
    3. '    
' → logprob: -7.876719951629639
    4. 'if' → logprob: -8.12671947479248
    5. ' if' → logprob: -11.62671947479248
    6. '  
' → logprob: -13.75171947479248
    7. '   
' → logprob: -14.75171947479248
    8. '```' → logprob: -14.75171947479248
    9. '<|end|>' → logprob: -15.12671947479248
    10. '       ' → logprob: -15.37671947479248

Token 198: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003987336531281471
    2. '   ' → logprob: -8.125398635864258
    3. ' if' → logprob: -9.250398635864258
    4. 'result' → logprob: -12.250398635864258
    5. 'print' → logprob: -14.000398635864258
    6. '    
' → logprob: -14.125398635864258
    7. '
' → logprob: -15.750398635864258
    8. '```' → logprob: -16.250398635864258
    9. 'If' → logprob: -18.125398635864258
    10. '  ' → logprob: -18.125398635864258

Token 199: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002326648449525237
    2. ' if' → logprob: -6.502326488494873
    3. 'result' → logprob: -7.127326488494873
    4. 'print' → logprob: -11.127326965332031
    5. 'is' → logprob: -13.127326965332031
    6. ' result' → logprob: -13.502326965332031
    7. '   ' → logprob: -13.877326965332031
    8. 'si' → logprob: -14.502326965332031
    9. '
' → logprob: -14.752326965332031
    10. 'product' → logprob: -15.127326965332031

Token 200: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.07897240668535233
    2. 'ifie' → logprob: -3.453972339630127
    3. 'if' → logprob: -3.703972339630127
    4. '   ' → logprob: -4.328972339630127
    5. 'ifer' → logprob: -6.078972339630127
    6. 'ifiez' → logprob: -6.453972339630127
    7. 'i' → logprob: -6.578972339630127
    8. ' if' → logprob: -7.953972339630127
    9. 'ifi' → logprob: -8.453972816467285
    10. 'IFIER' → logprob: -8.953972816467285

Token 201: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16953331232070923
    2. ' si' → logprob: -2.2945332527160645
    3. 'if' → logprob: -3.1695332527160645
    4. 'si' → logprob: -5.1695332527160645
    5. ' ' → logprob: -5.5445332527160645
    6. '   ' → logprob: -6.5445332527160645
    7. '<|end|>' → logprob: -7.4195332527160645
    8. '  ' → logprob: -7.6695332527160645
    9. '(' → logprob: -7.9195332527160645
    10. 'If' → logprob: -8.794533729553223

Token 202: ' le' (ID: 505)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4740775227546692
    2. 'is' → logprob: -0.9740775227546692
    3. ' ' → logprob: -15.474077224731445
    4. '	is' → logprob: -15.599077224731445
    5. ' ' → logprob: -16.474077224731445
    6. '(is' → logprob: -16.849077224731445
    7. ')is' → logprob: -18.724077224731445
    8. '_is' → logprob: -19.099077224731445
    9. '   ' → logprob: -19.474077224731445
    10. '  ' → logprob: -19.724077224731445

Token 203: ' produit' (ID: 29429)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3781844973564148
    2. 'is' → logprob: -1.2531845569610596
    3. ' produit' → logprob: -3.6281845569610596
    4. ' product' → logprob: -6.3781843185424805
    5. 'product' → logprob: -7.0031843185424805
    6. 'produ' → logprob: -9.50318431854248
    7. ' est' → logprob: -11.12818431854248
    8. 'prod' → logprob: -11.37818431854248
    9. 'est' → logprob: -11.87818431854248
    10. 'a' → logprob: -12.12818431854248

Token 204: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.009173452854156494
    2. 'est' → logprob: -5.009173393249512
    3. ' is' → logprob: -6.259173393249512
    4. 'is' → logprob: -8.509173393249512
    5. '   ' → logprob: -8.634173393249512
    6. ' ' → logprob: -9.634173393249512
    7. ' de' → logprob: -9.884173393249512
    8. 'de' → logprob: -11.259173393249512
    9. ' des' → logprob: -11.509173393249512
    10. 'a' → logprob: -12.509173393249512

Token 205: ' impair' (ID: 64113)
  Prédit: ' impair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impair' → logprob: -0.35224416851997375
    2. 'imp' → logprob: -1.3522441387176514
    3. ' is' → logprob: -4.4772443771362305
    4. ' imp' → logprob: -4.6022443771362305
    5. ' odd' → logprob: -5.4772443771362305
    6. ' impar' → logprob: -5.7272443771362305
    7. 'odd' → logprob: -5.9772443771362305
    8. 'im' → logprob: -6.3522443771362305
    9. ' est' → logprob: -6.4772443771362305
    10. 'is' → logprob: -6.4772443771362305

Token 206: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023870645090937614
    2. '
' → logprob: -6.377387046813965
    3. '    
' → logprob: -7.377387046813965
    4. ' if' → logprob: -11.127387046813965
    5. 'if' → logprob: -11.252387046813965
    6. '  
' → logprob: -11.752387046813965
    7. '    ' → logprob: -12.252387046813965
    8. '   
' → logprob: -12.252387046813965
    9. ',' → logprob: -12.752387046813965
    10. '  ' → logprob: -13.002387046813965

Token 207: ' afficher' (ID: 146524)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006998331751674414
    2. ' print' → logprob: -5.381998538970947
    3. ' afficher' → logprob: -6.881998538970947
    4. ' if' → logprob: -7.756998538970947
    5. 'print' → logprob: -8.006998062133789
    6. '    ' → logprob: -8.256998062133789
    7. '    
' → logprob: -9.131998062133789
    8. '
' → logprob: -9.881998062133789
    9. ' ' → logprob: -10.131998062133789
    10. 'if' → logprob: -10.506998062133789

Token 208: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3140914738178253
    2. '("' → logprob: -1.314091444015503
    3. '(
' → logprob: -7.314091682434082
    4. ' "' → logprob: -9.314091682434082
    5. '"' → logprob: -10.689091682434082
    6. '('' → logprob: -11.064091682434082
    7. '(

' → logprob: -11.189091682434082
    8. ' ' → logprob: -11.814091682434082
    9. ' (' → logprob: -12.689091682434082
    10. '   ' → logprob: -13.064091682434082

Token 209: ' résultat' (ID: 62556)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7678942084312439
    2. ' résultat' → logprob: -0.7678942084312439
    3. 'result' → logprob: -4.017894268035889
    4. 'rés' → logprob: -4.142894268035889
    5. ' resultat' → logprob: -4.892894268035889
    6. ' message' → logprob: -5.017894268035889
    7. '   ' → logprob: -5.017894268035889
    8. ' "' → logprob: -5.017894268035889
    9. ' result' → logprob: -5.392894268035889
    10. ' ' → logprob: -6.767894268035889

Token 210: ' appropri' (ID: 71769)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.088138227118179e-05
    2. '
' → logprob: -9.750070571899414
    3. '    
' → logprob: -11.500070571899414
    4. 'if' → logprob: -13.625070571899414
    5. ' if' → logprob: -13.875070571899414
    6. '   ' → logprob: -16.250070571899414
    7. '   
' → logprob: -17.250070571899414
    8. '  
' → logprob: -17.500070571899414
    9. '       ' → logprob: -17.875070571899414
    10. '  ' → logprob: -18.125070571899414

Token 211: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.676292231422849e-05
    2. '   ' → logprob: -11.250017166137695
    3. 'né' → logprob: -13.000017166137695
    4. 'e' → logprob: -14.250017166137695
    5. 'ée' → logprob: -15.375017166137695
    6. 'É' → logprob: -16.125017166137695
    7. 'ié' → logprob: -16.250017166137695
    8. 'è' → logprob: -16.375017166137695
    9. ')' → logprob: -16.375017166137695
    10. '"' → logprob: -16.750017166137695

Token 212: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029341988265514374
    2. '
' → logprob: -5.877933979034424
    3. '    
' → logprob: -9.002934455871582
    4. 'if' → logprob: -12.627934455871582
    5. ' if' → logprob: -13.127934455871582
    6. '   
' → logprob: -14.877934455871582
    7. '  
' → logprob: -15.252934455871582
    8. '   ' → logprob: -16.002933502197266
    9. '```' → logprob: -16.752933502197266
    10. '       ' → logprob: -16.752933502197266

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.03521392197581e-05
    2. '    
' → logprob: -11.375030517578125
    3. '
' → logprob: -11.750030517578125
    4. ' if' → logprob: -11.875030517578125
    5. 'if' → logprob: -12.500030517578125
    6. '   ' → logprob: -15.625030517578125
    7. '```' → logprob: -16.875030517578125
    8. '   
' → logprob: -17.500030517578125
    9. '       ' → logprob: -17.625030517578125
    10. '  ' → logprob: -18.000030517578125

Token 214: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.051682207733392715
    2. ' if' → logprob: -3.301682233810425
    3. '   ' → logprob: -4.301681995391846
    4. 'print' → logprob: -13.051682472229004
    5. '```' → logprob: -16.426681518554688
    6. ' print' → logprob: -16.676681518554688
    7. '
' → logprob: -16.676681518554688
    8. '    
' → logprob: -17.176681518554688
    9. '	if' → logprob: -18.051681518554688
    10. 'If' → logprob: -18.926681518554688

Token 215: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.005234002135694027
    2. 'is' → logprob: -5.2552337646484375
    3. ' ' → logprob: -15.255233764648438
    4. '	is' → logprob: -17.255233764648438
    5. ' ' → logprob: -18.130233764648438
    6. '   ' → logprob: -18.755233764648438
    7. '  ' → logprob: -20.505233764648438
    8. ')is' → logprob: -21.005233764648438
    9. ' ' → logprob: -21.130233764648438
    10. '(is' → logprob: -21.630233764648438

Token 216: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_is' → logprob: -17.125
    3. '_od' → logprob: -18.25
    4. 'odd' → logprob: -20.125
    5. '_even' → logprob: -20.125
    6. '_product' → logprob: -20.625
    7. '_o' → logprob: -21.0
    8. '_a' → logprob: -21.375
    9. '_not' → logprob: -21.625
    10. ' _' → logprob: -21.875

Token 217: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -5.1093578804284334e-05
    2. '_' → logprob: -10.500051498413086
    3. 'od' → logprob: -11.375051498413086
    4. ' odd' → logprob: -11.500051498413086
    5. 'ood' → logprob: -13.750051498413086
    6. 'Odd' → logprob: -15.375051498413086
    7. 'a' → logprob: -15.375051498413086
    8. '_od' → logprob: -16.125051498413086
    9. 'o' → logprob: -16.375051498413086
    10. 'is' → logprob: -16.875051498413086

Token 218: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -4.320199877838604e-07
    2. '_pro' → logprob: -15.625
    3. '_' → logprob: -16.0
    4. '_prod' → logprob: -16.25
    5. ' _' → logprob: -17.625
    6. 'product' → logprob: -18.375
    7. '_products' → logprob: -19.0
    8. ' product' → logprob: -19.25
    9. '_Product' → logprob: -19.5
    10. 'Product' → logprob: -19.625

Token 219: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -13.000003814697266
    3. ' (' → logprob: -13.375003814697266
    4. '(
' → logprob: -18.375003814697266
    5. ')' → logprob: -19.000003814697266
    6. 'a' → logprob: -19.375003814697266
    7. '(b' → logprob: -20.000003814697266
    8. '((' → logprob: -20.250003814697266
    9. '```' → logprob: -20.250003814697266
    10. '   ' → logprob: -20.500003814697266

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00724548427388072
    2. ',b' → logprob: -5.5072455406188965
    3. ' ,' → logprob: -5.7572455406188965
    4. ',
' → logprob: -13.632245063781738
    5. ' b' → logprob: -16.007246017456055
    6. '<|end|>' → logprob: -16.007246017456055
    7. 'b' → logprob: -16.257246017456055
    8. ',B' → logprob: -16.257246017456055
    9. ' ' → logprob: -16.382246017456055
    10. ')' → logprob: -16.507246017456055

Token 221: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022492945194244
    2. ' b' → logprob: -1.9102249145507812
    3. '   ' → logprob: -15.035224914550781
    4. ' ' → logprob: -15.410224914550781
    5. ')b' → logprob: -15.910224914550781
    6. ')' → logprob: -16.78522491455078
    7. '    ' → logprob: -17.03522491455078
    8. '	b' → logprob: -17.28522491455078
    9. '<|end|>' → logprob: -18.28522491455078
    10. '  ' → logprob: -18.41022491455078

Token 222: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002880337997339666
    2. '):
' → logprob: -8.250288009643555
    3. ')' → logprob: -10.625288009643555
    4. ' ):' → logprob: -13.750288009643555
    5. ':' → logprob: -14.125288009643555
    6. '   ' → logprob: -14.625288009643555
    7. '):
' → logprob: -16.625288009643555
    8. '():' → logprob: -17.000288009643555
    9. '):

' → logprob: -18.000288009643555
    10. ')):' → logprob: -18.625288009643555

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.463036435074173e-05
    2. ':' → logprob: -10.875024795532227
    3. 'print' → logprob: -13.125024795532227
    4. '
' → logprob: -13.500024795532227
    5. '      ' → logprob: -14.750024795532227
    6. '   ' → logprob: -14.875024795532227
    7. ':
' → logprob: -15.000024795532227
    8. ' print' → logprob: -15.250024795532227
    9. '```' → logprob: -15.375024795532227
    10. '    ' → logprob: -15.625024795532227

Token 224: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3206528127193451
    2. 'print' (adapté à ' print') → logprob: -1.3206528425216675
    3. ' print' → logprob: -5.070652961730957
    4. '
' → logprob: -6.945652961730957
    5. '   ' → logprob: -9.070652961730957
    6. '\n' → logprob: -13.570652961730957
    7. '	print' → logprob: -13.695652961730957
    8. '```' → logprob: -13.695652961730957
    9. '           ' → logprob: -13.820652961730957
    10. '\' → logprob: -14.320652961730957

Token 225: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0019288709154352546
    2. '(' → logprob: -6.251928806304932
    3. '('' → logprob: -16.251928329467773
    4. '("("' → logprob: -16.876928329467773
    5. '(
' → logprob: -17.001928329467773
    6. '("")' → logprob: -17.126928329467773
    7. '("""' → logprob: -18.376928329467773
    8. '(

' → logprob: -18.751928329467773
    9. '(""' → logprob: -19.126928329467773
    10. '()' → logprob: -19.876928329467773

Token 226: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.9361264946837764e-07
    2. 'Oui' → logprob: -16.625
    3. ' Yes' → logprob: -17.25
    4. 'Y' → logprob: -18.375
    5. 'Ye' → logprob: -18.375
    6. 'YES' → logprob: -21.0
    7. '   ' → logprob: -21.125
    8. '
' → logprob: -21.625
    9. 'Yep' → logprob: -21.75
    10. 'Yeah' → logprob: -22.0

Token 227: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.07889904081821442
    2. '")
' → logprob: -2.5788991451263428
    3. '")
' → logprob: -11.703899383544922
    4. ')' → logprob: -14.703899383544922
    5. '"' → logprob: -15.203899383544922
    6. '")

' → logprob: -16.078899383544922
    7. ')")' → logprob: -16.828899383544922
    8. ')
' → logprob: -17.328899383544922
    9. '   ' → logprob: -17.453899383544922
    10. ' ")' → logprob: -18.078899383544922

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.11996734328568e-05
    2. ' else' → logprob: -10.625041007995605
    3. 'else' → logprob: -11.000041007995605
    4. '    
' → logprob: -16.375041961669922
    5. '       ' → logprob: -17.125041961669922
    6. '   ' → logprob: -17.250041961669922
    7. '	else' → logprob: -17.625041961669922
    8. '
' → logprob: -18.500041961669922
    9. '  ' → logprob: -18.625041961669922
    10. ':' → logprob: -19.125041961669922

Token 229: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03371013328433037
    2. 'else' (adapté à ' else') → logprob: -3.533710241317749
    3. ' else' → logprob: -5.53371000289917
    4. '	else' → logprob: -15.283710479736328
    5. '    
' → logprob: -15.908710479736328
    6. 'e' → logprob: -16.783710479736328
    7. '   ' → logprob: -16.908710479736328
    8. ' ' → logprob: -17.158710479736328
    9. '       ' → logprob: -17.408710479736328
    10. '  ' → logprob: -17.783710479736328

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04601069167256355
    2. '       ' → logprob: -3.796010732650757
    3. ':
' → logprob: -3.796010732650757
    4. ' :' → logprob: -10.421010971069336
    5. ' :
' → logprob: -11.171010971069336
    6. '   ' → logprob: -13.046010971069336
    7. '():' → logprob: -14.921010971069336
    8. '):' → logprob: -14.921010971069336
    9. '):
' → logprob: -15.171010971069336
    10. ':
' → logprob: -15.796010971069336

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.5954712075181305e-05
    2. ' print' → logprob: -10.375036239624023
    3. '"' → logprob: -13.000036239624023
    4. 'print' → logprob: -13.375036239624023
    5. '           ' → logprob: -15.750036239624023
    6. '      ' → logprob: -15.750036239624023
    7. '   ' → logprob: -15.750036239624023
    8. '("' → logprob: -16.125036239624023
    9. '        ' → logprob: -16.750036239624023
    10. '    ' → logprob: -16.750036239624023

Token 232: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4746514558792114
    2. 'print' (adapté à ' print') → logprob: -0.9746514558792114
    3. '       ' → logprob: -7.474651336669922
    4. '"' → logprob: -12.599651336669922
    5. '   ' → logprob: -13.724651336669922
    6. '(print' → logprob: -14.099651336669922
    7. '.print' → logprob: -14.349651336669922
    8. '	print' → logprob: -14.599651336669922
    9. 'Print' → logprob: -14.974651336669922
    10. ' ' → logprob: -16.099651336669922

Token 233: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -9.627176768844947e-05
    2. '(' → logprob: -9.250096321105957
    3. '(
' → logprob: -16.50009536743164
    4. '("")' → logprob: -18.00009536743164
    5. ' ("' → logprob: -18.62509536743164
    6. '('' → logprob: -18.75009536743164
    7. '("""' → logprob: -19.00009536743164
    8. '()' → logprob: -20.25009536743164
    9. '(

' → logprob: -20.25009536743164
    10. '(""' → logprob: -20.50009536743164

Token 234: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.9361264946837764e-07
    2. '"No' → logprob: -16.0
    3. ' No' → logprob: -18.5
    4. 'N' → logprob: -24.5
    5. '_No' → logprob: -25.25
    6. '“No' → logprob: -25.875
    7. '"' → logprob: -26.375
    8. '.No' → logprob: -26.5
    9. '(No' → logprob: -26.625
    10. 'Yes' → logprob: -26.875

Token 235: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -5.438573680294212e-06
    2. ')' → logprob: -12.750005722045898
    3. '")
' → logprob: -13.250005722045898
    4. ')")' → logprob: -14.250005722045898
    5. '}")' → logprob: -19.5000057220459
    6. '")

' → logprob: -20.0000057220459
    7. '')' → logprob: -20.2500057220459
    8. '"' → logprob: -20.5000057220459
    9. '”)' → logprob: -21.0000057220459
    10. ' ")' → logprob: -21.2500057220459

Token 236: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008626393973827362
    2. '
' → logprob: -4.758626461029053
    3. '

' → logprob: -12.008625984191895
    4. ' if' → logprob: -13.008625984191895
    5. '\n' → logprob: -13.633625984191895
    6. '```' → logprob: -13.633625984191895
    7. '#' → logprob: -15.008625984191895
    8. '    
' → logprob: -15.008625984191895
    9. '<|end|>' → logprob: -15.383625984191895
    10. '  
' → logprob: -15.883625984191895

Token 237: ' Ex' (ID: 1771)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.320199877838604e-07
    2. ' if' → logprob: -15.0
    3. 'If' → logprob: -24.25
    4. '
' → logprob: -25.125
    5. '```' → logprob: -25.125
    6. '#' → logprob: -26.375
    7. '    
' → logprob: -27.125
    8. 'main' → logprob: -27.5
    9. '#if' → logprob: -27.625
    10. '

' → logprob: -27.875

Token 238: 'éc' (ID: 5675)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.723973582556937e-05
    2. 'ecute' → logprob: -11.750017166137695
    3. 'ecut' → logprob: -12.000017166137695
    4. ' if' → logprob: -13.375017166137695
    5. 'ec' → logprob: -14.125017166137695
    6. 'ecution' → logprob: -15.500017166137695
    7. '__' → logprob: -15.875017166137695
    8. 'e' → logprob: -16.250017166137695
    9. '```' → logprob: -16.375017166137695
    10. 'éc' → logprob: -16.500017166137695

Token 239: 'uter' (ID: 23469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009823975153267384
    2. 'ecute' → logprob: -4.884823799133301
    3. 'ec' → logprob: -7.009823799133301
    4. 'éc' → logprob: -7.384823799133301
    5. 'ecut' → logprob: -7.759823799133301
    6. ' if' → logprob: -9.2598237991333
    7. 'uter' → logprob: -10.6348237991333
    8. 'é' → logprob: -10.7598237991333
    9. 'ecution' → logprob: -10.7598237991333
    10. 'ecu' → logprob: -10.8848237991333

Token 240: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00026383911608718336
    2. ' if' → logprob: -8.250264167785645
    3. 'main' → logprob: -13.125264167785645
    4. '__' → logprob: -15.000264167785645
    5. ' main' → logprob: -15.875264167785645
    6. '```' → logprob: -16.875263214111328
    7. '_if' → logprob: -18.375263214111328
    8. '_main' → logprob: -19.125263214111328
    9. 'i' → logprob: -19.250263214111328
    10. 'If' → logprob: -20.500263214111328

Token 241: ' fonction' (ID: 17610)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09289095550775528
    2. 'main' → logprob: -2.592890977859497
    3. 'if' → logprob: -4.342890739440918
    4. ' if' → logprob: -8.217890739440918
    5. '_main' → logprob: -8.717890739440918
    6. '__' → logprob: -8.967890739440918
    7. ' programme' → logprob: -9.092890739440918
    8. ' program' → logprob: -9.717890739440918
    9. ' principale' → logprob: -10.467890739440918
    10. 'programme' → logprob: -10.467890739440918

Token 242: ' principale' (ID: 68926)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018299423158168793
    2. 'main' → logprob: -4.018299579620361
    3. ' if' → logprob: -9.268299102783203
    4. ' main' → logprob: -10.018299102783203
    5. '__' → logprob: -11.518299102783203
    6. '```' → logprob: -14.893299102783203
    7. '_main' → logprob: -16.018299102783203
    8. '	main' → logprob: -17.143299102783203
    9. '(main' → logprob: -17.643299102783203
    10. ' __' → logprob: -17.893299102783203

Token 243: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.313591331243515
    2. '
' → logprob: -1.3135913610458374
    3. '

' → logprob: -8.063591003417969
    4. ' if' → logprob: -11.188591003417969
    5. '
' → logprob: -14.938591003417969
    6. '```' → logprob: -15.188591003417969
    7. 'main' → logprob: -16.43859100341797
    8. '    
' → logprob: -16.56359100341797
    9. '\n' → logprob: -16.68859100341797
    10. ' 
' → logprob: -16.68859100341797

Token 244: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3132626414299011
    2. ' __' → logprob: -1.313262701034546
    3. ' ' → logprob: -14.563262939453125
    4. 'name' → logprob: -15.688262939453125
    5. '_' → logprob: -16.313262939453125
    6. '/__' → logprob: -16.313262939453125
    7. '_name' → logprob: -16.813262939453125
    8. '___' → logprob: -17.563262939453125
    9. ' "__' → logprob: -18.813262939453125
    10. ' name' → logprob: -19.313262939453125

Token 245: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5764360427856445
    2. ' __' → logprob: -0.8264360427856445
    3. ' ' → logprob: -8.826436042785645
    4. ' nom' → logprob: -9.701436042785645
    5. ' script' → logprob: -9.701436042785645
    6. '_' → logprob: -10.076436042785645
    7. 'name' → logprob: -10.201436042785645
    8. ' ' → logprob: -10.201436042785645
    9. '_name' → logprob: -10.326436042785645
    10. ' (__' → logprob: -11.576436042785645

Token 246: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08290084451436996
    2. ' __' → logprob: -2.8329007625579834
    3. ' ==' → logprob: -4.2079010009765625
    4. ' is' → logprob: -5.7079010009765625
    5. '==' → logprob: -6.5829010009765625
    6. 'name' → logprob: -8.082901000976562
    7. 'est' → logprob: -8.582901000976562
    8. 'is' → logprob: -8.707901000976562
    9. '_name' → logprob: -9.082901000976562
    10. ' est' → logprob: -9.082901000976562

Token 247: ' lancé' (ID: 104614)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16031867265701294
    2. ' __' → logprob: -1.9103186130523682
    3. 'name' → logprob: -9.910318374633789
    4. '_name' → logprob: -10.285318374633789
    5. '_' → logprob: -12.035318374633789
    6. '___' → logprob: -14.160318374633789
    7. 'nom' → logprob: -14.660318374633789
    8. 'n' → logprob: -14.785318374633789
    9. '/__' → logprob: -14.910318374633789
    10. ' "__' → logprob: -15.160318374633789

Token 248: ' directement' (ID: 52317)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20460212230682373
    2. '__' → logprob: -1.7046021223068237
    3. ' if' → logprob: -6.079602241516113
    4. ' __' → logprob: -7.829602241516113
    5. ' en' → logprob: -8.579602241516113
    6. '```' → logprob: -8.704602241516113
    7. 'en' → logprob: -10.954602241516113
    8. '
' → logprob: -11.079602241516113
    9. '_name' → logprob: -11.329602241516113
    10. 'name' → logprob: -11.579602241516113

Token 249: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1626061201095581
    2. 'if' → logprob: -1.912606120109558
    3. '

' → logprob: -6.287606239318848
    4. ' if' → logprob: -8.662606239318848
    5. '```' → logprob: -8.662606239318848
    6. '\n' → logprob: -9.287606239318848
    7. '
' → logprob: -10.412606239318848
    8. ':
' → logprob: -10.912606239318848
    9. '  
' → logprob: -11.287606239318848
    10. '    
' → logprob: -12.037606239318848

Token 250: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1472419600977446e-06
    2. '
' → logprob: -14.000000953674316
    3. ' if' → logprob: -15.500000953674316
    4. '```' → logprob: -17.250001907348633
    5. '

' → logprob: -20.750001907348633
    6. 'i' → logprob: -22.000001907348633
    7. '\n' → logprob: -22.500001907348633
    8. '\
' → logprob: -22.625001907348633
    9. '    
' → logprob: -22.875001907348633
    10. '``' → logprob: -22.875001907348633

Token 251: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00019853383128065616
    2. '__' → logprob: -8.875198364257812
    3. ' ' → logprob: -9.750198364257812
    4. ' ' → logprob: -15.375198364257812
    5. ' _' → logprob: -16.375198364257812
    6. ' ' → logprob: -16.750198364257812
    7. ' ‌' → logprob: -17.250198364257812
    8. ' name' → logprob: -18.875198364257812
    9. '_' → logprob: -18.875198364257812
    10. ' ​' → logprob: -18.875198364257812

Token 252: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6674773693084717
    2. ' ==' → logprob: -0.7924773693084717
    3. ' __' → logprob: -3.5424773693084717
    4. '==' → logprob: -5.542477607727051
    5. '_' → logprob: -6.667477607727051
    6. ' ' → logprob: -9.91747760772705
    7. ' _' → logprob: -10.29247760772705
    8. '___' → logprob: -11.29247760772705
    9. ' =' → logprob: -11.79247760772705
    10. ' ' → logprob: -12.16747760772705

Token 253: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.5048530030981055e-06
    2. '==' → logprob: -14.250001907348633
    3. '_' → logprob: -14.500001907348633
    4. '__
' → logprob: -16.000001907348633
    5. '___' → logprob: -16.375001907348633
    6. '__.__' → logprob: -17.000001907348633
    7. '____' → logprob: -17.250001907348633
    8. ' ==' → logprob: -17.500001907348633
    9. ' __' → logprob: -18.125001907348633
    10. '__

' → logprob: -18.375001907348633

Token 254: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005993809318169951
    2. '==' → logprob: -7.500599384307861
    3. ' ==' → logprob: -10.375598907470703
    4. '_' → logprob: -11.375598907470703
    5. '=="' → logprob: -13.625598907470703
    6. '=' → logprob: -13.750598907470703
    7. '___' → logprob: -14.500598907470703
    8. '```' → logprob: -15.500598907470703
    9. '____' → logprob: -15.750598907470703
    10. ' ' → logprob: -16.500598907470703

Token 255: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00122070184443146
    2. ''' → logprob: -7.001220703125
    3. ' "__' → logprob: -8.126220703125
    4. '__' → logprob: -11.251220703125
    5. ' '__' → logprob: -14.876220703125
    6. '"_' → logprob: -17.251220703125
    7. '"user' → logprob: -17.251220703125
    8. '"name' → logprob: -17.501220703125
    9. '("__' → logprob: -18.126220703125
    10. '"is' → logprob: -19.376220703125

Token 256: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. ' main' → logprob: -17.625
    3. 'name' → logprob: -17.875
    4. '_main' → logprob: -19.0
    5. '"' → logprob: -20.25
    6. '__' → logprob: -20.875
    7. 'ma' → logprob: -20.875
    8. '	main' → logprob: -22.0
    9. 'mai' → logprob: -22.25
    10. 'm' → logprob: -22.625

Token 257: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16022828221321106
    2. '__":
' → logprob: -1.9102282524108887
    3. '_"' → logprob: -13.035228729248047
    4. '__':
' → logprob: -13.910228729248047
    5. '_' → logprob: -14.160228729248047
    6. '__["' → logprob: -16.035228729248047
    7. '"' → logprob: -16.660228729248047
    8. '__
' → logprob: -16.785228729248047
    9. '___' → logprob: -16.785228729248047
    10. '__("' → logprob: -16.910228729248047

Token 258: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004386440385133028
    2. '__' → logprob: -5.6293864250183105
    3. ' "__' → logprob: -7.6293864250183105
    4. ''' → logprob: -8.254386901855469
    5. 'main' → logprob: -10.254386901855469
    6. '   ' → logprob: -13.254386901855469
    7. ' __' → logprob: -14.129386901855469
    8. ' '__' → logprob: -14.129386901855469
    9. ' main' → logprob: -14.379386901855469
    10. '"_' → logprob: -14.879386901855469

Token 259: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0007100477814674377
    2. ' main' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.625709533691406
    4. '	main' → logprob: -17.500709533691406
    5. '_main' → logprob: -20.375709533691406
    6. '(main' → logprob: -21.875709533691406
    7. '.main' → logprob: -22.750709533691406
    8. '  ' → logprob: -23.500709533691406
    9. ' ' → logprob: -23.625709533691406
    10. '    
' → logprob: -23.750709533691406

Token 260: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.85104202805087e-05
    2. '()
' → logprob: -10.000078201293945
    3. '(' → logprob: -10.375078201293945
    4. '()\' → logprob: -14.750078201293945
    5. ')' → logprob: -15.125078201293945
    6. '<|end|>' → logprob: -15.250078201293945
    7. '```' → logprob: -15.375078201293945
    8. ' ()' → logprob: -16.125078201293945
    9. '()`' → logprob: -16.250078201293945
    10. '(
' → logprob: -16.250078201293945


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 258
Tokens correctement prédits (1ère position, stricte): 122
Tokens correctement prédits (1ère position, avec adaptation): 126
Tokens correctement prédits (top 10): 198
Précision stricte (1ère position): 47.29%
Précision adaptée (1ère position): 48.84%
Précision (top 10): 76.74%
================================================================================
