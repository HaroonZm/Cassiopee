================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from collections import deque, defaultdict, Counter
from itertools import accumulate, combinations, permutations, product
from heapq import heappush, heappop
from functools import reduce, lru_cache
from decimal import Decimal
from operator import itemgetter

sys.setrecursionlimit(10**7)

input = lambda: sys.stdin.readline().rstrip('\n')

def printe(*args): print("##", *args, file=sys.stderr)
def printl(li): print(*li, sep="\n") if li else None

def argsort(seq, return_sorted=False):
    inds = sorted(range(len(seq)), key=seq.__getitem__)
    if return_sorted:
        return inds, [seq[i] for i in inds]
    return inds

alp2num = lambda c, cap=False: ord(c) - (65 if cap else 97)
num2alp = lambda i, cap=False: chr(i + (65 if cap else 97))

def matmat(A, B):
    return [[sum(a*b for a, b in zip(A_row, B_col)) for B_col in zip(*B)] for A_row in A]

def matvec(M, v):
    return [sum(m * v_i for m, v_i in zip(M_row, v)) for M_row in M]

def T(M):
    return [list(col) for col in zip(*M)]

binr = lambda x: format(x, 'b')

def bitcount(x):
    x -= (x >> 1) & 0x5555555555555555
    x = (x & 0x3333333333333333) + ((x >> 2) & 0x3333333333333333)
    x = (x + (x >> 4)) & 0x0f0f0f0f0f0f0f0f
    x += x >> 8
    x += x >> 16
    x += x >> 32
    return x & 0x7f

def solve_intervals(S, N, base):
    import heapq
    # Use negative for max-heap effect with heapq
    ls = [-l * base + i for i, (l, r) in enumerate(S)]
    rs = [r * base + i for i, (l, r) in enumerate(S)]
    heapq.heapify(ls)
    heapq.heapify(rs)

    dset = set()
    cur = 0
    tot = 0
    f = False
    # use fast local variable aliasing
    heappop = heapq.heappop
    while ls and rs:
        while ls:
            l, i = divmod(heappop(ls), base)
            l = -l
            if i in dset:
                dset.remove(i)
            elif cur < l:
                tot += l - cur
                dset.add(i)
                cur = l
                break
            else:
                f = True
                break
        if f:
            break
        while rs:
            r, i = divmod(heappop(rs), base)
            if i in dset:
                dset.remove(i)
            elif cur > r:
                tot += cur - r
                cur = r
                dset.add(i)
                break
            else:
                f = True
                break
        if f:
            break
    tot += abs(cur)
    return tot

def main():
    MOD = 10**9 + 7
    N = int(input())
    S = [tuple(map(int, input().split())) for _ in range(N)]
    base = N

    # Prebuild heaps (copy avoided by fresh recomputation)
    tot1 = solve_intervals(S, N, base)
    # For reversed initial order, swap l/r in the logic:
    S_rev = [(l, r) for l, r in S]
    # Simply swap the while loop order
    def solve_reverse(S, N, base):
        import heapq
        ls = [-l * base + i for i, (l, r) in enumerate(S)]
        rs = [r * base + i for i, (l, r) in enumerate(S)]
        heapq.heapify(ls)
        heapq.heapify(rs)

        dset = set()
        cur = 0
        tot = 0
        f = False
        heappop = heapq.heappop
        while ls and rs:
            while rs:
                r, i = divmod(heappop(rs), base)
                if i in dset:
                    dset.remove(i)
                elif cur > r:
                    tot += cur - r
                    cur = r
                    dset.add(i)
                    break
                else:
                    f = True
                    break
            if f:
                break
            while ls:
                l, i = divmod(heappop(ls), base)
                l = -l
                if i in dset:
                    dset.remove(i)
                elif cur < l:
                    tot += l - cur
                    dset.add(i)
                    cur = l
                    break
                else:
                    f = True
                    break
            if f:
                break
        tot += abs(cur)
        return tot

    tot2 = solve_reverse(S, N, base)

    print(max(tot1, tot2))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27518370747566223
    2. '\n' → logprob: -2.77518367767334
    3. 'import' → logprob: -3.02518367767334
    4. '<|end|>' → logprob: -3.27518367767334
    5. '\' → logprob: -3.40018367767334
    6. '
' → logprob: -3.65018367767334
    7. '```' → logprob: -4.40018367767334
    8. '

' → logprob: -5.27518367767334
    9. '<|end|>' → logprob: -5.27518367767334
    10. ',' → logprob: -5.90018367767334

Token 6: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8152873516082764
    2. '\n' → logprob: -1.5652873516082764
    3. 'import' → logprob: -2.3152873516082764
    4. '
' → logprob: -2.4402873516082764
    5. '```' → logprob: -2.9402873516082764
    6. '\' → logprob: -3.3152873516082764
    7. '

' → logprob: -3.3152873516082764
    8. '<|end|>' → logprob: -4.0652875900268555
    9. ',' → logprob: -5.0652875900268555
    10. '' → logprob: -5.9402875900268555

Token 7: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.2801079750061035
    2. ' os' → logprob: -1.5301079750061035
    3. 'collections' → logprob: -4.7801079750061035
    4. ' datetime' → logprob: -4.9051079750061035
    5. ' itertools' → logprob: -5.7801079750061035
    6. ' random' → logprob: -6.1551079750061035
    7. 'os' → logprob: -6.5301079750061035
    8. ' typing' → logprob: -6.6551079750061035
    9. ' math' → logprob: -6.9051079750061035
    10. ' numpy' → logprob: -7.2801079750061035

Token 8: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.31906193494796753
    2. 'import' → logprob: -1.3190619945526123
    3. '.' → logprob: -5.319061756134033
    4. '<|end|>' → logprob: -7.819061756134033
    5. ' ' → logprob: -8.444062232971191
    6. '```' → logprob: -9.319062232971191
    7. ' defaultdict' → logprob: -10.069062232971191
    8. '_' → logprob: -10.819062232971191
    9. '.Counter' → logprob: -10.944062232971191
    10. ' ```' → logprob: -11.069062232971191

Token 9: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.29243141412734985
    2. ' deque' → logprob: -1.667431354522705
    3. 'deque' → logprob: -3.167431354522705
    4. ' abc' → logprob: -3.917431354522705
    5. 'abc' → logprob: -6.292431354522705
    6. ' Counter' → logprob: -8.292431831359863
    7. ' named' → logprob: -8.417431831359863
    8. 'default' → logprob: -8.667431831359863
    9. 'import' → logprob: -9.292431831359863
    10. 'named' → logprob: -9.542431831359863

Token 10: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9177452921867371
    2. '
' → logprob: -1.6677453517913818
    3. 'import' → logprob: -1.7927453517913818
    4. '\' → logprob: -2.167745351791382
    5. '

' → logprob: -2.292745351791382
    6. '```' → logprob: -4.792745113372803
    7. '.' → logprob: -5.292745113372803
    8. '<|end|>' → logprob: -5.542745113372803
    9. '' → logprob: -5.667745113372803
    10. ',' → logprob: -6.167745113372803

Token 11: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.37233424186706543
    2. 'default' → logprob: -1.2473342418670654
    3. 'named' → logprob: -4.2473344802856445
    4. 'Counter' → logprob: -5.4973344802856445
    5. 'Ordered' → logprob: -5.9973344802856445
    6. ' named' → logprob: -6.1223344802856445
    7. ' Counter' → logprob: -7.9973344802856445
    8. ' Ordered' → logprob: -9.247334480285645
    9. 'deque' → logprob: -10.247334480285645
    10. ' default' → logprob: -11.497334480285645

Token 12: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1043927669525146
    2. ',' → logprob: -1.7293927669525146
    3. '

' → logprob: -1.7293927669525146
    4. '<|end|>' → logprob: -2.2293927669525146
    5. 'import' → logprob: -2.3543927669525146
    6. '```' → logprob: -2.9793927669525146
    7. '\n' → logprob: -3.4793927669525146
    8. '.' → logprob: -5.354393005371094
    9. '\' → logprob: -5.479393005371094
    10. '<|end|>' → logprob: -5.729393005371094

Token 13: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.519328773021698
    2. ' Counter' → logprob: -1.3943288326263428
    3. 'Ordered' → logprob: -2.6443288326263428
    4. 'named' → logprob: -3.2693288326263428
    5. ' Ordered' → logprob: -4.019328594207764
    6. ' named' → logprob: -4.269328594207764
    7. 'heap' → logprob: -4.894328594207764
    8. ' defaultdict' → logprob: -5.644328594207764
    9. ' itertools' → logprob: -6.394328594207764
    10. ' heap' → logprob: -6.769328594207764

Token 14: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1461924314498901
    2. '
' → logprob: -1.1461924314498901
    3. 'import' → logprob: -2.1461925506591797
    4. '<|end|>' → logprob: -2.7711925506591797
    5. '\n' → logprob: -2.8961925506591797
    6. '

' → logprob: -3.0211925506591797
    7. '```' → logprob: -3.0211925506591797
    8. ',
' → logprob: -5.02119255065918
    9. '\' → logprob: -5.14619255065918
    10. '' → logprob: -5.77119255065918

Token 15: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9719152450561523
    2. '

' → logprob: -1.3469152450561523
    3. '
' → logprob: -1.9719152450561523
    4. ',' → logprob: -1.9719152450561523
    5. '\n' → logprob: -3.5969152450561523
    6. '```' → logprob: -4.221915245056152
    7. 'def' → logprob: -4.846915245056152
    8. ' 

' → logprob: -5.096915245056152
    9. ',

' → logprob: -5.221915245056152
    10. '#' → logprob: -5.596915245056152

Token 16: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.4816437363624573
    2. ' heap' → logprob: -1.1066436767578125
    3. ' typing' → logprob: -3.4816436767578125
    4. 'heap' → logprob: -4.1066436767578125
    5. ' functools' → logprob: -6.6066436767578125
    6. 'typing' → logprob: -6.7316436767578125
    7. ' os' → logprob: -7.7316436767578125
    8. ' threading' → logprob: -8.231643676757812
    9. ' operator' → logprob: -8.481643676757812
    10. 'it' → logprob: -8.481643676757812

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.023593556135892868
    2. 'import' → logprob: -3.7735936641693115
    3. '.' → logprob: -9.02359390258789
    4. '	import' → logprob: -9.89859390258789
    5. ' ' → logprob: -10.14859390258789
    6. '<|end|>' → logprob: -10.27359390258789
    7. ' .' → logprob: -10.64859390258789
    8. ' itertools' → logprob: -10.89859390258789
    9. 'ertools' → logprob: -11.02359390258789
    10. '.import' → logprob: -11.39859390258789

Token 18: ' accumulate' (ID: 74226)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.8965175151824951
    2. ' permutations' → logprob: -0.8965175151824951
    3. ' combinations' → logprob: -2.521517515182495
    4. 'com' → logprob: -3.271517515182495
    5. 'chain' → logprob: -4.146517753601074
    6. ' product' → logprob: -4.271517753601074
    7. ' group' → logprob: -4.646517753601074
    8. 'per' → logprob: -4.896517753601074
    9. ' cycle' → logprob: -5.146517753601074
    10. ' accumulate' → logprob: -5.646517753601074

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7000765800476074
    2. 'import' → logprob: -1.7000765800476074
    3. '
' → logprob: -1.8250765800476074
    4. '<|end|>' → logprob: -3.0750765800476074
    5. '\n' → logprob: -3.3250765800476074
    6. '

' → logprob: -3.8250765800476074
    7. '\' → logprob: -4.200076580047607
    8. '.' → logprob: -4.200076580047607
    9. ',
' → logprob: -4.825076580047607
    10. '' → logprob: -5.700076580047607

Token 20: ' combinations' (ID: 43835)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.6641784906387329
    2. ' group' → logprob: -1.789178490638733
    3. 'chain' → logprob: -2.5391783714294434
    4. 'com' → logprob: -2.6641783714294434
    5. 'product' → logprob: -2.6641783714294434
    6. ' chain' → logprob: -2.9141783714294434
    7. ' product' → logprob: -3.9141783714294434
    8. ' permutations' → logprob: -4.164178371429443
    9. 'per' → logprob: -4.914178371429443
    10. 'cycle' → logprob: -7.289178371429443

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03599987179040909
    2. '<|end|>' → logprob: -3.9109997749328613
    3. ',
' → logprob: -5.035999774932861
    4. '\' → logprob: -5.785999774932861
    5. 'import' → logprob: -6.160999774932861
    6. '(' → logprob: -6.785999774932861
    7. '\n' → logprob: -7.160999774932861
    8. '
' → logprob: -8.03600025177002
    9. '(
' → logprob: -8.28600025177002
    10. '.' → logprob: -8.41100025177002

Token 22: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.15813949704170227
    2. 'product' → logprob: -2.90813946723938
    3. ' product' → logprob: -3.03313946723938
    4. 'per' → logprob: -3.40813946723938
    5. 'com' → logprob: -5.283139705657959
    6. ' chain' → logprob: -6.158139705657959
    7. 'group' → logprob: -6.908139705657959
    8. 'chain' → logprob: -7.158139705657959
    9. ' group' → logprob: -7.283139705657959
    10. 'compress' → logprob: -8.5331392288208

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7169201374053955
    2. '<|end|>' → logprob: -1.3419201374053955
    3. 'import' → logprob: -2.3419201374053955
    4. '
' → logprob: -2.3419201374053955
    5. '

' → logprob: -3.9669201374053955
    6. '\n' → logprob: -4.466919898986816
    7. ',
' → logprob: -5.091919898986816
    8. '.' → logprob: -5.591919898986816
    9. '<|end|>' → logprob: -5.591919898986816
    10. '\' → logprob: -5.841919898986816

Token 24: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.5997898578643799
    2. 'product' → logprob: -0.8497898578643799
    3. ' group' → logprob: -4.349789619445801
    4. ' chain' → logprob: -5.349789619445801
    5. 'group' → logprob: -5.599789619445801
    6. 'chain' → logprob: -6.599789619445801
    7. '```' → logprob: -8.0997896194458
    8. ' ' → logprob: -8.8497896194458
    9. 'com' → logprob: -8.8497896194458
    10. 'cycle' → logprob: -9.7247896194458

Token 25: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10046210885047913
    2. '<|end|>' → logprob: -2.4754621982574463
    3. '\' → logprob: -6.100461959838867
    4. 'import' → logprob: -6.225461959838867
    5. ' ,' → logprob: -6.600461959838867
    6. ',
' → logprob: -6.850461959838867
    7. '.' → logprob: -6.975461959838867
    8. '\n' → logprob: -6.975461959838867
    9. ' ' → logprob: -7.225461959838867
    10. '
' → logprob: -7.350461959838867

Token 26: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4446449875831604
    2. '

' → logprob: -1.6946449279785156
    3. '
' → logprob: -2.1946449279785156
    4. 'import' → logprob: -3.0696449279785156
    5. ',
' → logprob: -5.069644927978516
    6. ',

' → logprob: -5.694644927978516
    7. '<|end|>' → logprob: -6.069644927978516
    8. ' 

' → logprob: -6.694644927978516
    9. '\n' → logprob: -6.819644927978516
    10. ' ,' → logprob: -7.694644927978516

Token 27: ' heap' (ID: 37237)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -1.170263648033142
    2. ' heap' → logprob: -1.420263648033142
    3. ' operator' → logprob: -1.920263648033142
    4. 'heap' → logprob: -2.1702637672424316
    5. 'operator' → logprob: -2.7952637672424316
    6. 'fun' → logprob: -3.4202637672424316
    7. 'fra' → logprob: -3.9202637672424316
    8. ' bis' → logprob: -4.045263767242432
    9. ' typing' → logprob: -4.170263767242432
    10. 'bis' → logprob: -4.795263767242432

Token 28: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'queue' → logprob: -16.875
    3. ' queue' → logprob: -18.375
    4. 'n' → logprob: -20.5
    5. 'u' → logprob: -20.625
    6. 'v' → logprob: -21.0
    7. 's' → logprob: -21.0
    8. 'i' → logprob: -21.125
    9. 'e' → logprob: -21.375
    10. 'o' → logprob: -21.5

Token 29: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.013289288617670536
    2. 'import' → logprob: -4.388289451599121
    3. ' ' → logprob: -7.263289451599121
    4. '<|end|>' → logprob: -9.638289451599121
    5. '	import' → logprob: -12.013289451599121
    6. ' ```' → logprob: -13.388289451599121
    7. '_import' → logprob: -14.013289451599121
    8. ' ​' → logprob: -14.513289451599121
    9. ' ' → logprob: -14.638289451599121
    10. ' imports' → logprob: -14.888289451599121

Token 30: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.25518280267715454
    2. 'he' → logprob: -1.5051827430725098
    3. 'heap' → logprob: -6.38018274307251
    4. ' heap' → logprob: -7.38018274307251
    5. ' n' → logprob: -8.505183219909668
    6. 'nl' → logprob: -8.630183219909668
    7. 'n' → logprob: -8.755183219909668
    8. '```' → logprob: -8.880183219909668
    9. '.he' → logprob: -9.505183219909668
    10. 'merge' → logprob: -9.505183219909668

Token 31: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.023385006934404373
    2. 'ap' → logprob: -3.7733850479125977
    3. 'a' → logprob: -8.898385047912598
    4. 'aq' → logprob: -13.398385047912598
    5. 'ап' → logprob: -15.023385047912598
    6. 'q' → logprob: -15.523385047912598
    7. 'apl' → logprob: -15.648385047912598
    8. '```' → logprob: -15.898385047912598
    9. 'appen' → logprob: -16.14838409423828
    10. 'appa' → logprob: -16.64838409423828

Token 32: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.014166799373924732
    2. 'op' → logprob: -4.264166831970215
    3. 'u' → logprob: -13.639166831970215
    4. 'o' → logprob: -14.014166831970215
    5. 'us' → logprob: -14.139166831970215
    6. '```' → logprob: -15.764166831970215
    7. '   ' → logprob: -16.2641658782959
    8. '[' → logprob: -16.3891658782959
    9. 'ut' → logprob: -17.1391658782959
    10. '

' → logprob: -17.1391658782959

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.037997420877218246
    2. '<|end|>' → logprob: -4.287997245788574
    3. ' ' → logprob: -4.662997245788574
    4. 'he' → logprob: -5.037997245788574
    5. ' ,' → logprob: -5.287997245788574
    6. ' he' → logprob: -6.162997245788574
    7. ' and' → logprob: -9.287997245788574
    8. 'import' → logprob: -9.412997245788574
    9. '  ' → logprob: -9.662997245788574
    10. '(' → logprob: -10.162997245788574

Token 34: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.2519785761833191
    2. 'he' → logprob: -1.5019786357879639
    3. 'heap' → logprob: -10.501978874206543
    4. ' ' → logprob: -11.626978874206543
    5. ' heap' → logprob: -12.126978874206543
    6. '```' → logprob: -12.751978874206543
    7. '.he' → logprob: -13.376978874206543
    8. '_he' → logprob: -14.376978874206543
    9. '  ' → logprob: -15.564478874206543
    10. 'h' → logprob: -15.814478874206543

Token 35: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.008615988306701183
    2. 'ap' → logprob: -4.758615970611572
    3. 'a' → logprob: -14.38361644744873
    4. 'q' → logprob: -15.63361644744873
    5. 'pp' → logprob: -15.75861644744873
    6. 'ап' → logprob: -15.75861644744873
    7. 'appen' → logprob: -16.008615493774414
    8. 'aps' → logprob: -16.133615493774414
    9. '```' → logprob: -16.758615493774414
    10. 'APP' → logprob: -16.883615493774414

Token 36: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.07029196619987488
    2. 'op' → logprob: -2.6952919960021973
    3. 'us' → logprob: -8.570291519165039
    4. 'o' → logprob: -8.820291519165039
    5. 'u' → logprob: -11.195291519165039
    6. '   ' → logprob: -13.570291519165039
    7. '```' → logprob: -14.570291519165039
    8. 'opleft' → logprob: -14.570291519165039
    9. 'ull' → logprob: -14.695291519165039
    10. '

' → logprob: -15.445291519165039

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3020370602607727
    2. '

' → logprob: -1.427037000656128
    3. '\n' → logprob: -5.177037239074707
    4. '<|end|>' → logprob: -5.802037239074707
    5. '' → logprob: -6.052037239074707
    6. 'import' → logprob: -6.177037239074707
    7. ' 

' → logprob: -6.302037239074707
    8. ',' → logprob: -7.052037239074707
    9. '```' → logprob: -7.427037239074707
    10. '
' → logprob: -7.427037239074707

Token 38: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29272565245628357
    2. '

' → logprob: -2.0427255630493164
    3. '```' → logprob: -3.2927255630493164
    4. 'import' → logprob: -3.9177255630493164
    5. '\n' → logprob: -4.417725563049316
    6. 'def' → logprob: -4.542725563049316
    7. '#' → logprob: -4.792725563049316
    8. '' → logprob: -5.042725563049316
    9. '\' → logprob: -5.042725563049316
    10. 'd' → logprob: -5.292725563049316

Token 39: ' functools' (ID: 142636)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.7176865935325623
    2. ' functools' → logprob: -1.842686653137207
    3. ' random' → logprob: -2.092686653137207
    4. ' typing' → logprob: -2.217686653137207
    5. ' bis' → logprob: -3.092686653137207
    6. ' collections' → logprob: -3.467686653137207
    7. ' os' → logprob: -4.467686653137207
    8. ' copy' → logprob: -4.592686653137207
    9. ' datetime' → logprob: -5.092686653137207
    10. ' itertools' → logprob: -5.467686653137207

Token 40: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.09646431356668472
    2. 'import' → logprob: -2.9714643955230713
    3. ' ' → logprob: -3.3464643955230713
    4. '_' → logprob: -5.721464157104492
    5. '_import' → logprob: -6.971464157104492
    6. '<|end|>' → logprob: -7.221464157104492
    7. '.' → logprob: -8.346464157104492
    8. '	import' → logprob: -9.346464157104492
    9. ' _' → logprob: -9.846464157104492
    10. ' ▁' → logprob: -10.346464157104492

Token 41: ' reduce' (ID: 10389)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.09323591738939285
    2. 'l' → logprob: -2.468235969543457
    3. ' reduce' → logprob: -5.593235969543457
    4. 'reduce' → logprob: -8.593235969543457
    5. ' wraps' → logprob: -8.718235969543457
    6. ' partial' → logprob: -9.593235969543457
    7. ' cache' → logprob: -9.718235969543457
    8. ' ' → logprob: -10.468235969543457
    9. ' cached' → logprob: -10.968235969543457
    10. '	l' → logprob: -11.343235969543457

Token 42: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5194125175476074
    2. '

' → logprob: -1.0194125175476074
    3. 'import' → logprob: -3.8944125175476074
    4. ' 

' → logprob: -4.769412517547607
    5. ' 
' → logprob: -5.519412517547607
    6. '<|end|>' → logprob: -5.519412517547607
    7. ',' → logprob: -5.644412517547607
    8. '


' → logprob: -7.269412517547607
    9. 'def' → logprob: -7.394412517547607
    10. '' → logprob: -8.019412994384766

Token 43: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6639440655708313
    2. ' l' → logprob: -0.9139440655708313
    3. 'partial' → logprob: -2.9139440059661865
    4. 'cmp' → logprob: -4.413944244384766
    5. ' partial' → logprob: -4.538944244384766
    6. ' cmp' → logprob: -6.038944244384766
    7. ' wraps' → logprob: -6.163944244384766
    8. 'wrap' → logprob: -6.163944244384766
    9. 'cache' → logprob: -8.038944244384766
    10. 'cached' → logprob: -9.288944244384766

Token 44: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.5983045101165771
    2. 'ambda' → logprob: -0.8483045101165771
    3. 'en' → logprob: -4.348304748535156
    4. 'amb' → logprob: -5.098304748535156
    5. 'z' → logprob: -6.723304748535156
    6. 'a' → logprob: -7.098304748535156
    7. 'operator' → logprob: -7.973304748535156
    8. 'azy' → logprob: -8.723304748535156
    9. 'e' → logprob: -9.723304748535156
    10. 'am' → logprob: -10.098304748535156

Token 45: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -6.861651490908116e-05
    2. '_c' → logprob: -10.125068664550781
    3. '_' → logprob: -10.625068664550781
    4. '_cached' → logprob: -13.125068664550781
    5. '_ca' → logprob: -13.625068664550781
    6. '_CACHE' → logprob: -15.375068664550781
    7. 'cache' → logprob: -15.375068664550781
    8. '_cash' → logprob: -15.500068664550781
    9. '_
' → logprob: -15.750068664550781
    10. 'c' → logprob: -16.75006866455078

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8891004323959351
    2. 'import' → logprob: -1.264100432395935
    3. '\n' → logprob: -2.3891005516052246
    4. '

' → logprob: -2.5141005516052246
    5. ',' → logprob: -2.7641005516052246
    6. '<|end|>' → logprob: -3.7641005516052246
    7. '' → logprob: -4.389100551605225
    8. '\' → logprob: -4.639100551605225
    9. 'def' → logprob: -5.139100551605225
    10. ',
' → logprob: -5.764100551605225

Token 47: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41129225492477417
    2. '

' → logprob: -1.286292314529419
    3. 'import' → logprob: -3.786292314529419
    4. '' → logprob: -4.66129207611084
    5. '#' → logprob: -4.78629207611084
    6. 'def' → logprob: -5.91129207611084
    7. '```' → logprob: -6.03629207611084
    8. '
' → logprob: -6.16129207611084
    9. '\n' → logprob: -6.16129207611084
    10. 'd' → logprob: -6.41129207611084

Token 48: ' decimal' (ID: 26964)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.20602168142795563
    2. ' typing' → logprob: -1.9560216665267944
    3. 'operator' → logprob: -3.206021785736084
    4. 'typing' → logprob: -6.831021785736084
    5. ' bis' → logprob: -7.456021785736084
    6. ' dat' → logprob: -7.581021785736084
    7. ' random' → logprob: -7.706021785736084
    8. ' os' → logprob: -8.081021308898926
    9. ' ' → logprob: -8.581021308898926
    10. ' datetime' → logprob: -8.831021308898926

Token 49: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01658123917877674
    2. ' ' → logprob: -4.391581058502197
    3. 'import' → logprob: -5.641581058502197
    4. '	import' → logprob: -8.266581535339355
    5. '<|end|>' → logprob: -8.891581535339355
    6. ' ' → logprob: -9.516581535339355
    7. '.' → logprob: -10.516581535339355
    8. ' im' → logprob: -12.391581535339355
    9. ' ```' → logprob: -13.141581535339355
    10. '_import' → logprob: -13.266581535339355

Token 50: ' Decimal' (ID: 56874)
  Prédit: ' Decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.020810576155781746
    2. 'Decimal' → logprob: -4.145810604095459
    3. '.Decimal' → logprob: -5.520810604095459
    4. ' ' → logprob: -7.520810604095459
    5. ' decimal' → logprob: -10.0208101272583
    6. ' Dec' → logprob: -10.1458101272583
    7. ' ' → logprob: -10.3958101272583
    8. '```' → logprob: -10.3958101272583
    9. 'decimal' → logprob: -11.0208101272583
    10. '	' → logprob: -11.7708101272583

Token 51: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.18493779003620148
    2. '
' → logprob: -1.934937834739685
    3. 'import' → logprob: -4.559937953948975
    4. ' 

' → logprob: -5.684937953948975
    5. '```' → logprob: -5.684937953948975
    6. ',' → logprob: -6.434937953948975
    7. '<|end|>' → logprob: -6.934937953948975
    8. '


' → logprob: -6.934937953948975
    9. '\n' → logprob: -7.184937953948975
    10. '' → logprob: -7.309937953948975

Token 52: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9340784549713135
    2. '

' → logprob: -0.9340784549713135
    3. 'import' → logprob: -2.0590784549713135
    4. '\n' → logprob: -3.9340784549713135
    5. '```' → logprob: -4.184078216552734
    6. ',' → logprob: -4.434078216552734
    7. ' 

' → logprob: -4.684078216552734
    8. '<|end|>' → logprob: -4.934078216552734
    9. 'def' → logprob: -5.184078216552734
    10. '#' → logprob: -5.934078216552734

Token 53: ' operator' (ID: 11019)
  Prédit: ' fractions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -0.13132506608963013
    2. ' math' → logprob: -2.6313250064849854
    3. 'fra' → logprob: -3.0063250064849854
    4. ' typing' → logprob: -8.006324768066406
    5. ' collections' → logprob: -8.381324768066406
    6. ' datetime' → logprob: -8.381324768066406
    7. 'math' → logprob: -8.506324768066406
    8. ' itertools' → logprob: -8.756324768066406
    9. ' decimal' → logprob: -9.381324768066406
    10. ' fraction' → logprob: -9.631324768066406

Token 54: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.015537204220890999
    2. 'import' → logprob: -4.265537261962891
    3. '<|end|>' → logprob: -7.015537261962891
    4. ' ' → logprob: -7.890537261962891
    5. '	import' → logprob: -10.64053726196289
    6. ',' → logprob: -10.64053726196289
    7. ' ,' → logprob: -11.01553726196289
    8. ' as' → logprob: -11.39053726196289
    9. '<|end|>' → logprob: -12.14053726196289
    10. '  ' → logprob: -12.14053726196289

Token 55: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.13937261700630188
    2. ' add' → logprob: -2.6393725872039795
    3. ' mul' → logprob: -3.7643725872039795
    4. 'item' → logprob: -4.264372825622559
    5. ' ' → logprob: -4.514372825622559
    6. ' attr' → logprob: -4.889372825622559
    7. ' import' → logprob: -7.389372825622559
    8. ' method' → logprob: -7.514372825622559
    9. 'add' → logprob: -7.639372825622559
    10. 'mul' → logprob: -7.764372825622559

Token 56: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0006310671451501548
    2. 'get' → logprob: -7.375630855560303
    3. 'gett' → logprob: -13.125631332397461
    4. 'g' → logprob: -13.375631332397461
    5. 'getitem' → logprob: -14.250631332397461
    6. 'Getter' → logprob: -16.75063133239746
    7. ' getter' → logprob: -17.25063133239746
    8. 'gte' → logprob: -17.37563133239746
    9. 'got' → logprob: -17.75063133239746
    10. 'ge' → logprob: -17.75063133239746

Token 57: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.942033588886261
    2. '

' → logprob: -1.0670335292816162
    3. '<|end|>' → logprob: -1.9420335292816162
    4. ',' → logprob: -2.567033529281616
    5. 'import' → logprob: -4.192033767700195
    6. '\n' → logprob: -4.567033767700195
    7. '#' → logprob: -5.067033767700195
    8. '' → logprob: -5.692033767700195
    9. '```' → logprob: -6.692033767700195
    10. ' 

' → logprob: -6.692033767700195

Token 58: 'sys' (ID: 17324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11601989716291428
    2. '#' → logprob: -3.2410199642181396
    3. '
' → logprob: -3.3660199642181396
    4. 'def' → logprob: -3.9910199642181396
    5. '\' → logprob: -5.6160197257995605
    6. 'a' → logprob: -5.7410197257995605
    7. 'n' → logprob: -6.1160197257995605
    8. '

' → logprob: -6.1160197257995605
    9. 'import' → logprob: -6.9910197257995605
    10. '' → logprob: -7.1160197257995605

Token 59: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.8802491215174086e-05
    2. '.​' → logprob: -12.000028610229492
    3. ' .' → logprob: -12.250028610229492
    4. '.`' → logprob: -12.625028610229492
    5. '."""' → logprob: -13.125028610229492
    6. '<|end|>' → logprob: -13.625028610229492
    7. '.readline' → logprob: -13.750028610229492
    8. '.<' → logprob: -14.000028610229492
    9. '.py' → logprob: -14.125028610229492
    10. '.import' → logprob: -14.250028610229492

Token 60: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.048687633126974106
    2. '_version' → logprob: -4.29868745803833
    3. '_trace' → logprob: -5.54868745803833
    4. '_attr' → logprob: -5.92368745803833
    5. '_opt' → logprob: -6.17368745803833
    6. '_limit' → logprob: -6.29868745803833
    7. ' _' → logprob: -6.29868745803833
    8. '_max' → logprob: -6.67368745803833
    9. '_suffix' → logprob: -6.67368745803833
    10. '_encoding' → logprob: -6.67368745803833

Token 61: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.007382647134363651
    2. 'ursive' → logprob: -5.257382869720459
    3. 'urs' → logprob: -7.882382869720459
    4. 'ur' → logprob: -8.1323823928833
    5. 'set' → logprob: -8.3823823928833
    6. 'ision' → logprob: -8.6323823928833
    7. '_limit' → logprob: -8.6323823928833
    8. '_set' → logprob: -8.6323823928833
    9. 'urf' → logprob: -8.7573823928833
    10. 't' → logprob: -8.7573823928833

Token 62: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.05052966997027397
    2. 'limit' → logprob: -3.050529718399048
    3. '_depth' → logprob: -6.300529479980469
    4. '_lim' → logprob: -10.550529479980469
    5. '_limits' → logprob: -10.675529479980469
    6. '_stack' → logprob: -11.175529479980469
    7. '_' → logprob: -11.925529479980469
    8. 'lim' → logprob: -12.050529479980469
    9. ' limit' → logprob: -12.425529479980469
    10. '_threshold' → logprob: -12.550529479980469

Token 63: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.127333340875339e-06
    2. ' (' → logprob: -13.375003814697266
    3. '(
' → logprob: -13.375003814697266
    4. '(

' → logprob: -15.000003814697266
    5. '()' → logprob: -15.250003814697266
    6. '("("' → logprob: -16.125003814697266
    7. '((' → logprob: -16.250003814697266
    8. '('' → logprob: -17.000003814697266
    9. '(()' → logprob: -17.125003814697266
    10. '(
' → logprob: -17.875003814697266

Token 64: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001941726659424603
    2. '100' → logprob: -6.251941680908203
    3. '1' → logprob: -11.501941680908203
    4. ' ' → logprob: -13.001941680908203
    5. '9' → logprob: -15.001941680908203
    6. '999' → logprob: -15.626941680908203
    7. '300' → logprob: -16.251941680908203
    8. '500' → logprob: -16.751941680908203
    9. '250' → logprob: -17.001941680908203
    10. '2' → logprob: -17.126941680908203

Token 65: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.672734260559082
    2. '00' → logprob: -1.297734260559082
    3. '0' → logprob: -1.547734260559082
    4. '**' → logprob: -5.672734260559082
    5. '6' → logprob: -8.922734260559082
    6. '7' → logprob: -9.172734260559082
    7. ' ' → logprob: -9.797734260559082
    8. '2' → logprob: -11.047734260559082
    9. '8' → logprob: -11.297734260559082
    10. '24' → logprob: -11.297734260559082

Token 66: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0025423704646527767
    2. '9' → logprob: -6.002542495727539
    3. '8' → logprob: -9.627542495727539
    4. '6' → logprob: -14.002542495727539
    5. '**' → logprob: -19.25254249572754
    6. '```' → logprob: -19.25254249572754
    7. ' ' → logprob: -19.50254249572754
    8. ')' → logprob: -21.50254249572754
    9. '

' → logprob: -21.50254249572754
    10. '۷' → logprob: -22.00254249572754

Token 67: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -14.500001907348633
    4. '))' → logprob: -17.250001907348633
    5. ')
' → logprob: -18.000001907348633
    6. '),' → logprob: -18.125001907348633
    7. ')

' → logprob: -18.875001907348633
    8. ')#' → logprob: -19.375001907348633
    9. ')`' → logprob: -19.500001907348633
    10. '
' → logprob: -19.625001907348633

Token 68: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7090829610824585
    2. '
' → logprob: -1.7090829610824585
    3. 'class' → logprob: -1.8340829610824585
    4. '

' → logprob: -1.9590829610824585
    5. 'n' → logprob: -3.834083080291748
    6. '
' → logprob: -6.709083080291748
    7. 'import' → logprob: -7.334083080291748
    8. 'input' → logprob: -7.709083080291748
    9. '#' → logprob: -7.959083080291748
    10. 'N' → logprob: -7.959083080291748

Token 69: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0434919111430645
    2. '()' → logprob: -3.168491840362549
    3. '.' → logprob: -8.418492317199707
    4. '().' → logprob: -9.543492317199707
    5. '("")' → logprob: -10.293492317199707
    6. '("("' → logprob: -10.418492317199707
    7. ')' → logprob: -10.668492317199707
    8. '(
' → logprob: -11.043492317199707
    9. '(.)' → logprob: -11.168492317199707
    10. '```' → logprob: -11.418492317199707

Token 70: ' lambda' (ID: 27871)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4815745949745178
    2. ' input' → logprob: -0.9815745949745178
    3. 'input' → logprob: -5.356574535369873
    4. 'sys' → logprob: -6.231574535369873
    5. ' lambda' → logprob: -7.606574535369873
    6. ' ' → logprob: -9.106575012207031
    7. ' open' → logprob: -9.356575012207031
    8. ' iter' → logprob: -10.106575012207031
    9. ' raw' → logprob: -11.106575012207031
    10. '=sys' → logprob: -11.981575012207031

Token 71: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.710660457611084
    2. ' :' → logprob: -0.960660457611084
    3. ' ' → logprob: -2.085660457611084
    4. '()' → logprob: -6.835660457611084
    5. ' ()' → logprob: -8.460660934448242
    6. '():' → logprob: -8.460660934448242
    7. '  ' → logprob: -9.835660934448242
    8. '_' → logprob: -10.085660934448242
    9. ' input' → logprob: -10.335660934448242
    10. 's' → logprob: -10.710660934448242

Token 72: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.26906725764274597
    2. 'sys' → logprob: -1.5190672874450684
    3. 'input' → logprob: -4.769067287445068
    4. ' input' → logprob: -4.769067287445068
    5. 'stdin' → logprob: -12.39406681060791
    6. ' ' → logprob: -12.76906681060791
    7. '=sys' → logprob: -13.01906681060791
    8. ' stdin' → logprob: -13.26906681060791
    9. '	sys' → logprob: -13.51906681060791
    10. 'str' → logprob: -14.51906681060791

Token 73: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0592513307929039
    2. '.' → logprob: -2.934251308441162
    3. '.stdout' → logprob: -5.684251308441162
    4. ' .' → logprob: -8.05925178527832
    5. '.readline' → logprob: -8.30925178527832
    6. '.std' → logprob: -8.55925178527832
    7. '.argv' → logprob: -8.80925178527832
    8. '.stderr' → logprob: -11.05925178527832
    9. '.input' → logprob: -11.43425178527832
    10. '.standard' → logprob: -11.80925178527832

Token 74: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0017897785874083638
    2. 'read' → logprob: -6.376789569854736
    3. '.read' → logprob: -9.751790046691895
    4. '.' → logprob: -10.751790046691895
    5. 'buffer' → logprob: -12.751790046691895
    6. ' readline' → logprob: -12.876790046691895
    7. 'rea' → logprob: -13.751790046691895
    8. '.readlines' → logprob: -14.876790046691895
    9. '_read' → logprob: -15.001790046691895
    10. 'readonly' → logprob: -15.251790046691895

Token 75: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008620720356702805
    2. '()' → logprob: -4.758620738983154
    3. '(' → logprob: -13.508620262145996
    4. '()\' → logprob: -13.508620262145996
    5. '.strip' → logprob: -14.008620262145996
    6. '()
' → logprob: -14.133620262145996
    7. '.' → logprob: -14.258620262145996
    8. '[:-' → logprob: -14.383620262145996
    9. ' ().' → logprob: -15.633620262145996
    10. '()

' → logprob: -15.633620262145996

Token 76: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10020861029624939
    2. 'rstrip' → logprob: -2.3502085208892822
    3. ' strip' → logprob: -13.225208282470703
    4. '_strip' → logprob: -17.100208282470703
    5. '-strip' → logprob: -17.225208282470703
    6. '(strip' → logprob: -17.975208282470703
    7. 'replace' → logprob: -18.725208282470703
    8. 'str' → logprob: -18.725208282470703
    9. '.rstrip' → logprob: -18.850208282470703
    10. 'rst' → logprob: -18.975208282470703

Token 77: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4474673271179199
    2. '()

' → logprob: -1.07246732711792
    3. 'def' → logprob: -4.69746732711792
    4. '()
' → logprob: -5.32246732711792
    5. '(' → logprob: -6.07246732711792
    6. '

' → logprob: -6.94746732711792
    7. '()


' → logprob: -8.197467803955078
    8. '
' → logprob: -8.197467803955078
    9. '(

' → logprob: -8.447467803955078
    10. '()\' → logprob: -8.572467803955078

Token 78: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.5776860184123507e-06
    2. 'newline' → logprob: -13.37500286102295
    3. ')' → logprob: -14.50000286102295
    4. 'nl' → logprob: -15.12500286102295
    5. '```' → logprob: -16.250001907348633
    6. '\n' → logprob: -16.250001907348633
    7. 'ndef' → logprob: -16.750001907348633
    8. 'r' → logprob: -17.625001907348633
    9. 'u' → logprob: -17.750001907348633
    10. 'ne' → logprob: -18.375001907348633

Token 79: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.03374585881829262
    2. ')' → logprob: -3.533745765686035
    3. '")' → logprob: -5.533745765686035
    4. ''' → logprob: -11.033745765686035
    5. '')"' → logprob: -11.783745765686035
    6. '')
' → logprob: -11.908745765686035
    7. '"' → logprob: -13.033745765686035
    8. ' )' → logprob: -13.658745765686035
    9. ''))' → logprob: -14.283745765686035
    10. '')

' → logprob: -15.158745765686035

Token 80: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6823686957359314
    2. 'n' → logprob: -0.9323686957359314
    3. 'N' → logprob: -2.807368755340576
    4. 'class' → logprob: -3.307368755340576
    5. '#' → logprob: -6.182368755340576
    6. 'd' → logprob: -7.432368755340576
    7. 'MOD' → logprob: -8.057368278503418
    8. 'T' → logprob: -8.307368278503418
    9. 'a' → logprob: -8.432368278503418
    10. 'for' → logprob: -8.682368278503418

Token 81: ' prin' (ID: 18095)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5265384912490845
    2. ' main' → logprob: -1.1515384912490845
    3. ' solve' → logprob: -3.276538372039795
    4. ' dfs' → logprob: -3.401538372039795
    5. ' bfs' → logprob: -4.651538372039795
    6. ' factorial' → logprob: -5.151538372039795
    7. ' factor' → logprob: -6.151538372039795
    8. '_' → logprob: -6.401538372039795
    9. ' _' → logprob: -6.901538372039795
    10. ' binary' → logprob: -8.276538848876953

Token 82: 'te' (ID: 411)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00020354038861114532
    2. 'tf' → logprob: -8.500203132629395
    3. 'tpl' → logprob: -17.87520408630371
    4. 'def' → logprob: -19.75020408630371
    5. '(t' → logprob: -19.75020408630371
    6. 'т' → logprob: -20.00020408630371
    7. 'nt' → logprob: -20.12520408630371
    8. 'tp' → logprob: -20.37520408630371
    9. 'tph' → logprob: -20.37520408630371
    10. 'tt' → logprob: -20.37520408630371

Token 83: '(*' (ID: 9000)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8170537352561951
    2. 'r' → logprob: -1.3170537948608398
    3. 'val' → logprob: -2.81705379486084
    4. 'rror' → logprob: -3.31705379486084
    5. 't' → logprob: -3.44205379486084
    6. '('' → logprob: -3.94205379486084
    7. '(*' → logprob: -4.19205379486084
    8. 'm' → logprob: -4.44205379486084
    9. 'x' → logprob: -4.56705379486084
    10. 'def' → logprob: -4.56705379486084

Token 84: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.009224360808730125
    2. 'a' → logprob: -4.7592244148254395
    3. 'x' → logprob: -8.134223937988281
    4. 'objs' → logprob: -9.134223937988281
    5. 'items' → logprob: -10.634223937988281
    6. 'arg' → logprob: -10.759223937988281
    7. 'r' → logprob: -10.759223937988281
    8. 's' → logprob: -10.884223937988281
    9. 'objects' → logprob: -11.259223937988281
    10. 'e' → logprob: -11.259223937988281

Token 85: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004441355704329908
    2. '):' → logprob: -7.750443935394287
    3. ' ,' → logprob: -11.375444412231445
    4. ',*' → logprob: -13.875444412231445
    5. ')' → logprob: -15.375444412231445
    6. ',end' → logprob: -15.750444412231445
    7. '):
' → logprob: -16.250444412231445
    8. ':' → logprob: -16.250444412231445
    9. '*,' → logprob: -16.375444412231445
    10. 'print' → logprob: -17.500444412231445

Token 86: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6251950263977051
    2. ' print' → logprob: -1.000195026397705
    3. 'print' → logprob: -2.375195026397705
    4. '    ' → logprob: -5.875195026397705
    5. ' ' → logprob: -7.750195026397705
    6. ' pass' → logprob: -8.625194549560547
    7. '  ' → logprob: -8.625194549560547
    8. '    
' → logprob: -9.000194549560547
    9. 'import' → logprob: -9.375194549560547
    10. ')' → logprob: -10.000194549560547

Token 87: '("' (ID: 568)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.07890543341636658
    2. '(' → logprob: -2.5789053440093994
    3. '(
' → logprob: -12.20390510559082
    4. '*' → logprob: -12.57890510559082
    5. '(*)' → logprob: -13.07890510559082
    6. '(*(' → logprob: -13.32890510559082
    7. '()' → logprob: -14.32890510559082
    8. ' (*' → logprob: -14.70390510559082
    9. '(args' → logprob: -15.07890510559082
    10. '((*' → logprob: -15.32890510559082

Token 88: '##' (ID: 877)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12319249659776688
    2. '(*' → logprob: -2.498192548751831
    3. 'DEBUG' → logprob: -4.623192310333252
    4. '*",' → logprob: -4.998192310333252
    5. '",' → logprob: -5.998192310333252
    6. '[' → logprob: -6.248192310333252
    7. 'ERROR' → logprob: -6.248192310333252
    8. '"*' → logprob: -6.373192310333252
    9. '"' → logprob: -6.748192310333252
    10. 'err' → logprob: -6.873192310333252

Token 89: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.033905357122421265
    2. ' ",' → logprob: -4.533905506134033
    3. '>",' → logprob: -5.033905506134033
    4. '"' → logprob: -5.533905506134033
    5. '**' → logprob: -5.783905506134033
    6. '*' → logprob: -5.908905506134033
    7. '",'' → logprob: -6.658905506134033
    8. '##' → logprob: -6.908905506134033
    9. '>' → logprob: -7.533905506134033
    10. 'error' → logprob: -7.658905506134033

Token 90: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.002331170719116926
    2. ' *' → logprob: -6.127331256866455
    3. '*out' → logprob: -10.252330780029297
    4. '*a' → logprob: -10.377330780029297
    5. '*,' → logprob: -10.752330780029297
    6. '*object' → logprob: -11.627330780029297
    7. '*d' → logprob: -11.752330780029297
    8. '*i' → logprob: -12.002330780029297
    9. '*f' → logprob: -12.377330780029297
    10. '*s' → logprob: -12.627330780029297

Token 91: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -8.923874702304602e-05
    2. ' args' → logprob: -9.375089645385742
    3. '(args' → logprob: -12.625089645385742
    4. '	args' → logprob: -15.250089645385742
    5. '$args' → logprob: -15.250089645385742
    6. 'arg' → logprob: -15.375089645385742
    7. ',args' → logprob: -16.125089645385742
    8. '_args' → logprob: -16.625089645385742
    9. '.args' → logprob: -16.625089645385742
    10. '=args' → logprob: -17.000089645385742

Token 92: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029894080013036728
    2. ',' → logprob: -3.5298941135406494
    3. ',)' → logprob: -9.52989387512207
    4. ' )' → logprob: -9.90489387512207
    5. ')**' → logprob: -12.02989387512207
    6. ' ,' → logprob: -12.90489387512207
    7. ',end' → logprob: -13.40489387512207
    8. ' ' → logprob: -13.52989387512207
    9. '))' → logprob: -13.90489387512207
    10. '),' → logprob: -14.02989387512207

Token 93: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.013355979695916176
    2. ' file' → logprob: -4.5133562088012695
    3. 'flush' → logprob: -6.1383562088012695
    4. ' flush' → logprob: -9.76335620880127
    5. ' ' → logprob: -10.26335620880127
    6. ')' → logprob: -10.63835620880127
    7. 'end' → logprob: -11.38835620880127
    8. ',file' → logprob: -12.13835620880127
    9. '```' → logprob: -13.26335620880127
    10. '  ' → logprob: -13.38835620880127

Token 94: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -0.0005535095697268844
    2. '=' → logprob: -7.500553607940674
    3. '=subprocess' → logprob: -15.500553131103516
    4. ' sys' → logprob: -16.000553131103516
    5. 'sys' → logprob: -16.375553131103516
    6. '=os' → logprob: -16.750553131103516
    7. '(sys' → logprob: -17.000553131103516
    8. '	sys' → logprob: -17.250553131103516
    9. ' =' → logprob: -17.625553131103516
    10. '=s' → logprob: -17.750553131103516

Token 95: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -3.166338137816638e-05
    2. '.stdout' → logprob: -10.625031471252441
    3. 'stderr' → logprob: -11.875031471252441
    4. '.stdin' → logprob: -16.125032424926758
    5. '.' → logprob: -16.250032424926758
    6. '(stderr' → logprob: -16.375032424926758
    7. ' stderr' → logprob: -16.625032424926758
    8. '.__' → logprob: -17.625032424926758
    9. '.st' → logprob: -17.625032424926758
    10. ' .' → logprob: -18.125032424926758

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ' )' → logprob: -12.875003814697266
    3. '))' → logprob: -14.750003814697266
    4. ',' → logprob: -15.375003814697266
    5. ')
' → logprob: -15.750003814697266
    6. ')**' → logprob: -16.125003814697266
    7. '),' → logprob: -16.625003814697266
    8. ')`' → logprob: -17.375003814697266
    9. ')#' → logprob: -17.750003814697266
    10. ')")' → logprob: -18.000003814697266

Token 97: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2680765688419342
    2. 'def' → logprob: -2.0180766582489014
    3. '

' → logprob: -2.3930766582489014
    4. '<|end|>' → logprob: -5.768076419830322
    5. '\n' → logprob: -5.893076419830322
    6. '\' → logprob: -6.018076419830322
    7. '
' → logprob: -7.268076419830322
    8. '' → logprob: -7.518076419830322
    9. '<|end|>' → logprob: -8.01807689666748
    10. '#' → logprob: -8.64307689666748

Token 98: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4745919406414032
    2. ' main' → logprob: -2.4745919704437256
    3. ' input' → logprob: -2.7245919704437256
    4. 'print' → logprob: -2.8495919704437256
    5. ' prin' → logprob: -2.9745919704437256
    6. ' debug' → logprob: -3.4745919704437256
    7. ' pr' → logprob: -4.2245917320251465
    8. 'pr' → logprob: -4.5995917320251465
    9. ' prints' → logprob: -4.5995917320251465
    10. ' prit' → logprob: -4.5995917320251465

Token 99: 'l' (ID: 75)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15762001276016235
    2. '()' → logprob: -2.4076199531555176
    3. 'f' → logprob: -3.4076199531555176
    4. 'ln' → logprob: -4.532619953155518
    5. '(*' → logprob: -5.407619953155518
    6. '("")' → logprob: -5.907619953155518
    7. 'def' → logprob: -7.282619953155518
    8. 's' → logprob: -7.407619953155518
    9. '*' → logprob: -7.907619953155518
    10. '("' → logprob: -8.032620429992676

Token 100: '(li' (ID: 111234)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011072326451539993
    2. 'ine' → logprob: -7.251107215881348
    3. '(*' → logprob: -8.751107215881348
    4. '(' → logprob: -9.001107215881348
    5. 'ne' → logprob: -9.376107215881348
    6. 'ist' → logprob: -11.501107215881348
    7. '*' → logprob: -12.251107215881348
    8. '()' → logprob: -12.751107215881348
    9. 'f' → logprob: -13.126107215881348
    10. '(n' → logprob: -13.501107215881348

Token 101: '):' (ID: 3127)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.06366921216249466
    2. '):' → logprob: -2.938669204711914
    3. '):
' → logprob: -5.438669204711914
    4. 'ne' → logprob: -6.188669204711914
    5. 't' → logprob: -6.688669204711914
    6. 's' → logprob: -8.188669204711914
    7. 'ist' → logprob: -8.563669204711914
    8. ':' → logprob: -8.813669204711914
    9. ')' → logprob: -8.938669204711914
    10. ',' → logprob: -9.188669204711914

Token 102: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.013785108923912048
    2. ' for' → logprob: -4.638784885406494
    3. '   ' → logprob: -5.888784885406494
    4. 'print' → logprob: -6.888784885406494
    5. '    
' → logprob: -9.638785362243652
    6. ' return' → logprob: -9.888785362243652
    7. ' 
' → logprob: -10.138785362243652
    8. '    ' → logprob: -11.013785362243652
    9. 'for' → logprob: -11.138785362243652
    10. ' pass' → logprob: -11.513785362243652

Token 103: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.3135814666748047
    2. '(' → logprob: -1.3135814666748047
    3. '(len' → logprob: -8.813581466674805
    4. '(*(' → logprob: -9.438581466674805
    5. '('' → logprob: -9.813581466674805
    6. '(
' → logprob: -10.813581466674805
    7. '(*)' → logprob: -12.313581466674805
    8. '*' → logprob: -12.813581466674805
    9. '("' → logprob: -13.188581466674805
    10. ' (*' → logprob: -13.563581466674805

Token 104: 'li' (ID: 1307)
  Prédit: 'li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.00013357517309486866
    2. '(li' → logprob: -9.250133514404297
    3. '[' → logprob: -10.375133514404297
    4. 'list' → logprob: -12.750133514404297
    5. '<li' → logprob: -14.125133514404297
    6. 'map' → logprob: -14.250133514404297
    7. ' li' → logprob: -14.250133514404297
    8. '(' → logprob: -14.375133514404297
    9. 'range' → logprob: -15.625133514404297
    10. 'l' → logprob: -16.625133514404297

Token 105: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00072851701406762
    2. ',' → logprob: -7.375728607177734
    3. ' )' → logprob: -10.250728607177734
    4. 'sep' → logprob: -10.875728607177734
    5. '())' → logprob: -11.875728607177734
    6. 'end' → logprob: -11.875728607177734
    7. '[::-' → logprob: -12.375728607177734
    8. '  ' → logprob: -12.375728607177734
    9. ',end' → logprob: -12.500728607177734
    10. ',)' → logprob: -13.000728607177734

Token 106: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.015219892375171185
    2. 'end' → logprob: -4.890219688415527
    3. ' sep' → logprob: -5.015219688415527
    4. ')' → logprob: -7.640219688415527
    5. 'se' → logprob: -7.765219688415527
    6. ' end' → logprob: -10.890219688415527
    7. '*' → logprob: -10.890219688415527
    8. ' ' → logprob: -13.390219688415527
    9. ' )' → logprob: -13.890219688415527
    10. 'separator' → logprob: -13.890219688415527

Token 107: '="\' (ID: 129534)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.011343825608491898
    2. '=' → logprob: -5.136343955993652
    3. '="' → logprob: -5.761343955993652
    4. '='\' → logprob: -6.136343955993652
    5. '="\' → logprob: -9.886343955993652
    6. '=\' → logprob: -11.136343955993652
    7. '=',' → logprob: -11.511343955993652
    8. '=
' → logprob: -12.261343955993652
    9. ''' → logprob: -12.511343955993652
    10. '=('' → logprob: -13.261343955993652

Token 108: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0014945034636184573
    2. ' ' → logprob: -6.751494407653809
    3. '\n' → logprob: -9.501494407653809
    4. ' \' → logprob: -9.501494407653809
    5. ' ")' → logprob: -9.626494407653809
    6. ' n' → logprob: -9.751494407653809
    7. ' "' → logprob: -11.126494407653809
    8. '"' → logprob: -11.876494407653809
    9. 's' → logprob: -12.376494407653809
    10. ',' → logprob: -12.626494407653809

Token 109: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007415898144245148
    2. ')' → logprob: -5.257415771484375
    3. ')")' → logprob: -6.132415771484375
    4. ')"' → logprob: -12.507415771484375
    5. '}")' → logprob: -14.132415771484375
    6. '")
' → logprob: -14.132415771484375
    7. ' )' → logprob: -14.257415771484375
    8. '",' → logprob: -14.382415771484375
    9. '')' → logprob: -14.632415771484375
    10. '"' → logprob: -14.757415771484375

Token 110: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16612644493579865
    2. '
' → logprob: -1.9161264896392822
    3. '<|end|>' → logprob: -5.666126251220703
    4. '

' → logprob: -6.291126251220703
    5. '\n' → logprob: -8.666126251220703
    6. '\' → logprob: -8.916126251220703
    7. '#' → logprob: -9.666126251220703
    8. '<|end|>' → logprob: -9.916126251220703
    9. '```' → logprob: -10.541126251220703
    10. 'class' → logprob: -10.791126251220703

Token 111: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.23119840025901794
    2. ' li' → logprob: -1.9811984300613403
    3. 'len' → logprob: -2.981198310852051
    4. ' len' → logprob: -4.106198310852051
    5. ' isinstance' → logprob: -6.981198310852051
    6. '(li' → logprob: -9.35619831085205
    7. ' hasattr' → logprob: -9.73119831085205
    8. 'type' → logprob: -9.85619831085205
    9. '   ' → logprob: -10.60619831085205
    10. ' ' → logprob: -10.60619831085205

Token 112: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.22740890085697174
    2. 'else' → logprob: -1.6024088859558105
    3. ' not' → logprob: -7.1024088859558105
    4. 'not' → logprob: -7.4774088859558105
    5. '!=' → logprob: -8.477409362792969
    6. ' and' → logprob: -9.352409362792969
    7. ' ' → logprob: -9.602409362792969
    8. '[' → logprob: -10.602409362792969
    9. 'len' → logprob: -10.602409362792969
    10. 'and' → logprob: -10.602409362792969

Token 113: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5937854051589966
    2. ' None' → logprob: -1.0937854051589966
    3. 'print' → logprob: -2.343785285949707
    4. ' print' → logprob: -4.968785285949707
    5. '...' → logprob: -5.093785285949707
    6. 'pr' → logprob: -6.718785285949707
    7. '(None' → logprob: -7.218785285949707
    8. 'pass' → logprob: -7.843785285949707
    9. '   ' → logprob: -8.343785285949707
    10. '()' → logprob: -8.343785285949707

Token 114: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01173011027276516
    2. '
' → logprob: -4.636730194091797
    3. '

' → logprob: -6.511730194091797
    4. '<|end|>' → logprob: -9.136730194091797
    5. 'class' → logprob: -9.761730194091797
    6. '\' → logprob: -10.011730194091797
    7. '#' → logprob: -10.136730194091797
    8. ' def' → logprob: -10.511730194091797
    9. '<|end|>' → logprob: -10.761730194091797
    10. '\n' → logprob: -10.761730194091797

Token 115: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031284019351005554
    2. 'class' → logprob: -5.878128528594971
    3. 'n' → logprob: -8.628128051757812
    4. 'N' → logprob: -9.753128051757812
    5. '#' → logprob: -10.128128051757812
    6. 'd' → logprob: -11.128128051757812
    7. '

' → logprob: -12.003128051757812
    8. '\' → logprob: -12.503128051757812
    9. 'ndef' → logprob: -12.503128051757812
    10. 'from' → logprob: -12.753128051757812

Token 116: ' args' (ID: 4966)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.5590406656265259
    2. ' main' → logprob: -1.4340406656265259
    3. ' factorial' → logprob: -2.8090405464172363
    4. ' dfs' → logprob: -3.1840405464172363
    5. ' bfs' → logprob: -3.4340405464172363
    6. ' ' → logprob: -4.059040546417236
    7. '_' → logprob: -4.434040546417236
    8. ' _' → logprob: -5.309040546417236
    9. ' factor' → logprob: -5.809040546417236
    10. ' is' → logprob: -6.309040546417236

Token 117: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -1.238590121269226
    2. '_parse' → logprob: -1.738590121269226
    3. '_parser' → logprob: -1.863590121269226
    4. '_' → logprob: -1.863590121269226
    5. '_to' → logprob: -2.9885902404785156
    6. '_split' → logprob: -3.7385902404785156
    7. '_count' → logprob: -4.238590240478516
    8. 'parse' → logprob: -4.738590240478516
    9. '_error' → logprob: -4.863590240478516
    10. 'plit' → logprob: -4.988590240478516

Token 118: '(seq' (ID: 78669)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6580421924591064
    2. '(a' → logprob: -1.4080421924591064
    3. '(lst' → logprob: -1.9080421924591064
    4. '(arr' → logprob: -2.6580421924591064
    5. '(seq' → logprob: -4.908041954040527
    6. '(ls' → logprob: -5.158041954040527
    7. '(l' → logprob: -6.658041954040527
    8. '(ll' → logprob: -6.783041954040527
    9. '(li' → logprob: -6.908041954040527
    10. '(array' → logprob: -7.033041954040527

Token 119: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13853144645690918
    2. '(seq' → logprob: -2.138531446456909
    3. ',' → logprob: -4.888531684875488
    4. '):
' → logprob: -6.388531684875488
    5. ')' → logprob: -7.013531684875488
    6. '(' → logprob: -7.013531684875488
    7. '(sequence' → logprob: -8.013531684875488
    8. ' ):' → logprob: -10.388531684875488
    9. '_seq' → logprob: -10.763531684875488
    10. '(lst' → logprob: -10.763531684875488

Token 120: ' return' (ID: 622)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.5292910933494568
    2. 'key' → logprob: -1.1542911529541016
    3. ' key' → logprob: -3.0292911529541016
    4. ' reverse' → logprob: -3.5292911529541016
    5. 'rev' → logprob: -4.029291152954102
    6. 're' → logprob: -9.779291152954102
    7. ' rev' → logprob: -9.904291152954102
    8. 'r' → logprob: -10.279291152954102
    9. 'return' → logprob: -10.779291152954102
    10. ' ' → logprob: -11.154291152954102

Token 121: '_sorted' (ID: 104993)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.032138414680957794
    2. '_inverse' → logprob: -4.032138347625732
    3. '_indices' → logprob: -4.532138347625732
    4. 's' → logprob: -6.532138347625732
    5. '_' → logprob: -7.407138347625732
    6. '_idx' → logprob: -7.532138347625732
    7. '_value' → logprob: -8.90713882446289
    8. '_sorted' → logprob: -9.40713882446289
    9. '_indexes' → logprob: -9.53213882446289
    10. '_array' → logprob: -9.53213882446289

Token 122: '=False' (ID: 12148)
  Prédit: '=False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=False' → logprob: -0.0644153505563736
    2. '=True' → logprob: -2.939415454864502
    3. '=' → logprob: -4.689415454864502
    4. '_indices' → logprob: -8.439414978027344
    5. ' =' → logprob: -10.564414978027344
    6. '_=' → logprob: -11.564414978027344
    7. '):' → logprob: -11.814414978027344
    8. '_by' → logprob: -12.064414978027344
    9. '_idx' → logprob: -12.189414978027344
    10. 'indices' → logprob: -12.314414978027344

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00029148702742531896
    2. ',' → logprob: -8.62529182434082
    3. ')' → logprob: -10.00029182434082
    4. ' ):' → logprob: -10.12529182434082
    5. '):
' → logprob: -11.00029182434082
    6. ':' → logprob: -11.62529182434082
    7. '   ' → logprob: -15.37529182434082
    8. '=' → logprob: -16.25029182434082
    9. '):
' → logprob: -16.75029182434082
    10. '=None' → logprob: -16.75029182434082

Token 124: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19433878362178802
    2. ',' → logprob: -1.8193387985229492
    3. '   ' → logprob: -4.944338798522949
    4. '):' → logprob: -5.194338798522949
    5. ':
' → logprob: -7.569338798522949
    6. '():' → logprob: -7.819338798522949
    7. ' :' → logprob: -7.819338798522949
    8. ':list' → logprob: -9.19433879852295
    9. '):
' → logprob: -9.56933879852295
    10. '(seq' → logprob: -10.31933879852295

Token 125: ' inds' (ID: 148410)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5816143751144409
    2. ' return' → logprob: -1.831614375114441
    3. 'idx' → logprob: -2.2066144943237305
    4. 'inds' (adapté à ' inds') → logprob: -2.4566144943237305
    5. 'indices' → logprob: -3.8316144943237305
    6. '   ' → logprob: -4.3316144943237305
    7. 'indexed' → logprob: -4.3316144943237305
    8. 'ind' → logprob: -4.9566144943237305
    9. 'n' → logprob: -5.0816144943237305
    10. ' indexed' → logprob: -5.3316144943237305

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232206583023071
    2. '=' → logprob: -0.8982206583023071
    3. ',' → logprob: -9.523221015930176
    4. 'orted' → logprob: -12.148221015930176
    5. '=[]' → logprob: -12.273221015930176
    6. '=np' → logprob: -13.398221015930176
    7. 'ex' → logprob: -13.398221015930176
    8. '=[' → logprob: -13.523221015930176
    9. ' ' → logprob: -13.773221015930176
    10. '   ' → logprob: -13.773221015930176

Token 127: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.004454685840755701
    2. 'list' → logprob: -6.004454612731934
    3. ' sorted' → logprob: -6.254454612731934
    4. 'range' → logprob: -10.004454612731934
    5. '[' → logprob: -12.129454612731934
    6. ' list' → logprob: -12.379454612731934
    7. ' range' → logprob: -16.25445556640625
    8. '.sorted' → logprob: -16.50445556640625
    9. '(sorted' → logprob: -16.50445556640625
    10. '   ' → logprob: -17.25445556640625

Token 128: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00043925188947468996
    2. 'range' → logprob: -7.750439167022705
    3. '(en' → logprob: -12.000439643859863
    4. '(' → logprob: -13.250439643859863
    5. '([(' → logprob: -15.500439643859863
    6. '(
' → logprob: -15.625439643859863
    7. ' range' → logprob: -15.875439643859863
    8. 'enumer' → logprob: -16.000438690185547
    9. '	range' → logprob: -16.625438690185547
    10. '((' → logprob: -18.375438690185547

Token 129: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -8.180258191714529e-06
    2. 'len' → logprob: -11.750008583068848
    3. '=len' → logprob: -16.12500762939453
    4. '(' → logprob: -16.37500762939453
    5. '[len' → logprob: -18.12500762939453
    6. ',len' → logprob: -18.75000762939453
    7. '<len' → logprob: -19.00000762939453
    8. '	len' → logprob: -19.37500762939453
    9. ' len' → logprob: -20.25000762939453
    10. '(length' → logprob: -21.25000762939453

Token 130: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -4.894790981779806e-05
    2. 'seq' → logprob: -10.000048637390137
    3. '(' → logprob: -12.625048637390137
    4. '(
' → logprob: -16.250049591064453
    5. '(sequence' → logprob: -16.875049591064453
    6. ')' → logprob: -17.500049591064453
    7. '_seq' → logprob: -18.500049591064453
    8. 's' → logprob: -18.750049591064453
    9. 'a' → logprob: -19.000049591064453
    10. 'Seq' → logprob: -19.250049591064453

Token 131: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.8624639324116288e-06
    2. ')' → logprob: -14.250001907348633
    3. ' ),' → logprob: -14.500001907348633
    4. '),
' → logprob: -15.000001907348633
    5. ',' → logprob: -15.750001907348633
    6. ',),' → logprob: -16.375001907348633
    7. 'key' → logprob: -16.875001907348633
    8. ')),' → logprob: -16.875001907348633
    9. '))' → logprob: -17.250001907348633
    10. '},' → logprob: -18.000001907348633

Token 132: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.00020354038861114532
    2. ' key' → logprob: -8.500203132629395
    3. '	key' → logprob: -18.25020408630371
    4. '   ' → logprob: -18.50020408630371
    5. 'reverse' → logprob: -19.25020408630371
    6. 'k' → logprob: -19.50020408630371
    7. '(key' → logprob: -19.50020408630371
    8. ',key' → logprob: -20.25020408630371
    9. ' ' → logprob: -20.87520408630371
    10. '  ' → logprob: -21.87520408630371

Token 133: '=' (ID: 28)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.1269301027059555
    2. '=' → logprob: -2.126929998397827
    3. '=
' → logprob: -14.251930236816406
    4. 'lambda' → logprob: -14.501930236816406
    5. '=item' → logprob: -15.126930236816406
    6. 'seq' → logprob: -15.501930236816406
    7. '=_' → logprob: -16.501930236816406
    8. '=sys' → logprob: -16.501930236816406
    9. '=

' → logprob: -16.501930236816406
    10. ' =' → logprob: -16.876930236816406

Token 134: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.001350710866972804
    2. 'lambda' → logprob: -6.6263508796691895
    3. '=lambda' → logprob: -10.876350402832031
    4. ' seq' → logprob: -12.876350402832031
    5. '(seq' → logprob: -13.751350402832031
    6. 'sequence' → logprob: -14.001350402832031
    7. '=' → logprob: -14.126350402832031
    8. '_seq' → logprob: -14.751350402832031
    9. ' lambda' → logprob: -15.626350402832031
    10. '   ' → logprob: -16.37635040283203

Token 135: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.005313089117407799
    2. '__' → logprob: -5.255312919616699
    3. ').__' → logprob: -10.7553129196167
    4. ')' → logprob: -10.7553129196167
    5. 'getitem' → logprob: -11.2553129196167
    6. ' __' → logprob: -11.7553129196167
    7. '__.__' → logprob: -12.3803129196167
    8. '__)' → logprob: -12.3803129196167
    9. '___' → logprob: -13.1303129196167
    10. '().__' → logprob: -13.2553129196167

Token 136: 'getitem' (ID: 147767)
  Prédit: 'getitem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getitem' → logprob: -2.2200749754119897e-06
    2. 'item' → logprob: -13.625001907348633
    3. 'get' → logprob: -14.125001907348633
    4. 'lt' → logprob: -15.500001907348633
    5. 'gets' → logprob: -17.875001907348633
    6. '
' → logprob: -19.000001907348633
    7. 'call' → logprob: -19.375001907348633
    8. 'gt' → logprob: -19.625001907348633
    9. 'iter' → logprob: -19.625001907348633
    10. 'len' → logprob: -20.250001907348633

Token 137: '__)
' (ID: 56868)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.248469718324486e-05
    2. ',' → logprob: -11.375022888183594
    3. ')
' → logprob: -12.000022888183594
    4. ' )' → logprob: -13.125022888183594
    5. '__)' → logprob: -14.625022888183594
    6. '<|end|>' → logprob: -14.875022888183594
    7. ')return' → logprob: -15.000022888183594
    8. ')

' → logprob: -15.000022888183594
    9. '))' → logprob: -15.125022888183594
    10. '),' → logprob: -15.250022888183594

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7287113070487976
    2. '
' → logprob: -1.2287113666534424
    3. ')
' → logprob: -2.4787113666534424
    4. ')' → logprob: -2.8537113666534424
    5. 'return' → logprob: -3.6037113666534424
    6. ' if' → logprob: -3.7287113666534424
    7. ',' → logprob: -4.478711128234863
    8. '    
' → logprob: -5.228711128234863
    9. ' return' → logprob: -5.728711128234863
    10. 'if' → logprob: -5.978711128234863

Token 139: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2894802987575531
    2. ' if' → logprob: -1.5394803285598755
    3. 'if' (adapté à ' if') → logprob: -3.414480209350586
    4. 'return' → logprob: -6.289480209350586
    5. ' return' → logprob: -7.289480209350586
    6. '    
' → logprob: -7.539480209350586
    7. '
' → logprob: -7.914480209350586
    8. '<|end|>' → logprob: -8.289480209350586
    9. '[' → logprob: -9.664480209350586
    10. '	if' → logprob: -9.789480209350586

Token 140: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03812790662050247
    2. 'return' → logprob: -3.288127899169922
    3. ' not' → logprob: -9.788127899169922
    4. ' ' → logprob: -10.788127899169922
    5. '(return' → logprob: -11.913127899169922
    6. 'not' → logprob: -13.288127899169922
    7. ' ' → logprob: -14.413127899169922
    8. '{return' → logprob: -15.413127899169922
    9. ':return' → logprob: -15.663127899169922
    10. '	return' → logprob: -16.663127899169922

Token 141: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.002539990236982703
    2. '_' → logprob: -6.002540111541748
    3. ' _' → logprob: -10.00253963470459
    4. '_s' → logprob: -11.25253963470459
    5. '_true' → logprob: -13.75253963470459
    6. '_selected' → logprob: -13.87753963470459
    7. ' ' → logprob: -14.00253963470459
    8. 'sorted' → logprob: -14.12753963470459
    9. '_scaled' → logprob: -14.50253963470459
    10. '_not' → logprob: -16.002540588378906

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017486036522313952
    2. ':
' → logprob: -6.876748561859131
    3. ' :' → logprob: -7.376748561859131
    4. ':return' → logprob: -9.376749038696289
    5. '):' → logprob: -13.626749038696289
    6. '=True' → logprob: -14.001749038696289
    7. '():' → logprob: -14.501749038696289
    8. '=' → logprob: -14.501749038696289
    9. ' :
' → logprob: -14.751749038696289
    10. 'else' → logprob: -15.251749038696289

Token 143: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006479933857917786
    2. ':
' → logprob: -5.631479740142822
    3. ':return' → logprob: -6.006479740142822
    4. ' :' → logprob: -8.75648021697998
    5. '       ' → logprob: -9.00648021697998
    6. '   ' → logprob: -9.50648021697998
    7. ' return' → logprob: -10.88148021697998
    8. ',' → logprob: -11.00648021697998
    9. 'return' → logprob: -11.63148021697998
    10. '):' → logprob: -12.13148021697998

Token 144: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1827554851770401
    2. '       ' → logprob: -2.057755470275879
    3. 'return' (adapté à ' return') → logprob: -3.432755470275879
    4. '   ' → logprob: -6.432755470275879
    5. ':' → logprob: -6.807755470275879
    6. ' 
' → logprob: -6.932755470275879
    7. ' ' → logprob: -7.557755470275879
    8. ':return' → logprob: -7.557755470275879
    9. ' :' → logprob: -7.932755470275879
    10. ' ' → logprob: -8.057755470275879

Token 145: ' inds' (ID: 148410)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2659340500831604
    2. '[item' → logprob: -2.2659339904785156
    3. ' [' → logprob: -2.7659339904785156
    4. '[ind' → logprob: -3.3909339904785156
    5. '[list' → logprob: -3.8909339904785156
    6. '([' → logprob: -4.890933990478516
    7. 'sorted' → logprob: -6.640933990478516
    8. 'list' → logprob: -6.765933990478516
    9. ' ([' → logprob: -7.265933990478516
    10. '(sorted' → logprob: -8.390933990478516

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2352385965641588e-05
    2. ' ,' → logprob: -11.875012397766113
    3. ',[' → logprob: -12.250012397766113
    4. '[' → logprob: -15.125012397766113
    5. ',
' → logprob: -15.875012397766113
    6. ',len' → logprob: -16.875011444091797
    7. ',list' → logprob: -17.125011444091797
    8. ',None' → logprob: -18.500011444091797
    9. ' ,[' → logprob: -18.500011444091797
    10. '‌,' → logprob: -18.625011444091797

Token 147: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2174077033996582
    2. ' [' → logprob: -2.592407703399658
    3. '[item' → logprob: -2.592407703399658
    4. 'sorted' → logprob: -3.842407703399658
    5. '[list' → logprob: -3.842407703399658
    6. ' sorted' → logprob: -6.342407703399658
    7. '[ind' → logprob: -7.967407703399658
    8. '[s' → logprob: -8.8424072265625
    9. '[get' → logprob: -8.8424072265625
    10. 'list' → logprob: -9.5924072265625

Token 148: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -3.128163257315464e-07
    2. '(seq' → logprob: -16.375
    3. ' seq' → logprob: -16.625
    4. 'sys' → logprob: -21.375
    5. '_seq' → logprob: -22.375
    6. 'sequence' → logprob: -22.875
    7. '.seq' → logprob: -23.125
    8. '   ' → logprob: -24.125
    9. 'aseq' → logprob: -24.625
    10. 'sequ' → logprob: -24.75

Token 149: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.966313281329349e-05
    2. '[ind' → logprob: -10.000049591064453
    3. '[' → logprob: -12.750049591064453
    4. '[_' → logprob: -14.125049591064453
    5. '[idx' → logprob: -15.375049591064453
    6. '[x' → logprob: -15.500049591064453
    7. '[ix' → logprob: -16.750049591064453
    8. 'i' → logprob: -17.500049591064453
    9. '[ii' → logprob: -17.625049591064453
    10. '[k' → logprob: -18.125049591064453

Token 150: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29023653268814087
    2. 'for' → logprob: -1.540236473083496
    3. ' for' → logprob: -3.290236473083496
    4. ')' → logprob: -9.165236473083496
    5. 'i' → logprob: -9.290236473083496
    6. ' ' → logprob: -10.040236473083496
    7. 'ind' → logprob: -10.915236473083496
    8. 'or' → logprob: -10.915236473083496
    9. '   ' → logprob: -10.915236473083496
    10. 's' → logprob: -11.915236473083496

Token 151: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10021281987428665
    2. ' for' → logprob: -2.350212812423706
    3. 'i' → logprob: -12.850213050842285
    4. '	for' → logprob: -13.725213050842285
    5. ']' → logprob: -13.850213050842285
    6. '   ' → logprob: -14.725213050842285
    7. '```' → logprob: -14.850213050842285
    8. ' ' → logprob: -14.975213050842285
    9. '[i' → logprob: -16.22521209716797
    10. 'or' → logprob: -17.10021209716797

Token 152: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004666388034820557
    2. ' i' → logprob: -5.379666328430176
    3. 'inds' → logprob: -10.129666328430176
    4. 'ind' → logprob: -12.129666328430176
    5. ' inds' → logprob: -15.504666328430176
    6. ' in' → logprob: -15.629666328430176
    7. '	i' → logprob: -15.629666328430176
    8. ' ' → logprob: -16.129667282104492
    9. 'in' → logprob: -16.504667282104492
    10. 'indt' → logprob: -17.254667282104492

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0576147623360157
    2. 'in' → logprob: -2.932614803314209
    3. 'i' → logprob: -6.807614803314209
    4. 'inds' → logprob: -6.932614803314209
    5. 'ind' → logprob: -8.18261432647705
    6. ' i' → logprob: -8.55761432647705
    7. 'ins' → logprob: -8.80761432647705
    8. ' inds' → logprob: -11.43261432647705
    9. ' ' → logprob: -11.93261432647705
    10. ' ins' → logprob: -12.55761432647705

Token 154: ' inds' (ID: 148410)
  Prédit: 'inds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inds' → logprob: -1.9385402993066236e-05
    2. ' inds' → logprob: -10.875019073486328
    3. 'ind' → logprob: -15.250019073486328
    4. '_inds' → logprob: -16.250019073486328
    5. 'ints' → logprob: -16.750019073486328
    6. 'ins' → logprob: -17.375019073486328
    7. ' ' → logprob: -18.750019073486328
    8. 'indt' → logprob: -19.000019073486328
    9. '   ' → logprob: -19.250019073486328
    10. 'ands' → logprob: -20.125019073486328

Token 155: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40092089772224426
    2. '<|end|>' → logprob: -1.1509208679199219
    3. ')' → logprob: -5.275920867919922
    4. '   ' → logprob: -5.525920867919922
    5. '<|end|>' → logprob: -6.025920867919922
    6. '
' → logprob: -6.900920867919922
    7. 'return' → logprob: -7.275920867919922
    8. ']
' → logprob: -8.400920867919922
    9. '[]' → logprob: -9.150920867919922
    10. 'else' → logprob: -9.650920867919922

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.64839569455944e-05
    2. '    
' → logprob: -10.375076293945312
    3. '
' → logprob: -10.500076293945312
    4. 'return' → logprob: -11.375076293945312
    5. 'else' → logprob: -13.125076293945312
    6. '<|end|>' → logprob: -14.375076293945312
    7. '       ' → logprob: -14.500076293945312
    8. ' return' → logprob: -15.250076293945312
    9. '```' → logprob: -15.500076293945312
    10. '\n' → logprob: -15.500076293945312

Token 157: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02374502643942833
    2. 'else' → logprob: -3.773745059967041
    3. ' return' → logprob: -8.273744583129883
    4. '   ' → logprob: -8.523744583129883
    5. ' else' → logprob: -10.023744583129883
    6. ' ' → logprob: -14.148744583129883
    7. 'ret' → logprob: -15.523744583129883
    8. '	return' → logprob: -16.273744583129883
    9. 'eturn' → logprob: -16.273744583129883
    10. '    
' → logprob: -16.773744583129883

Token 158: ' inds' (ID: 148410)
  Prédit: 'inds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inds' → logprob: -0.02975395694375038
    2. ' inds' → logprob: -3.5297539234161377
    3. '_inds' → logprob: -13.029753684997559
    4. 'ind' → logprob: -14.154753684997559
    5. 'ints' → logprob: -15.154753684997559
    6. ' ' → logprob: -17.029754638671875
    7. 'indices' → logprob: -17.029754638671875
    8. 'ids' → logprob: -17.279754638671875
    9. ' ind' → logprob: -17.279754638671875
    10. 'ins' → logprob: -17.404754638671875

Token 159: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: 'alp' (ID: 100669)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00014716439181938767
    2. 'from' → logprob: -9.875146865844727
    3. 'class' → logprob: -10.375146865844727
    4. '#' → logprob: -10.625146865844727
    5. '
' → logprob: -11.125146865844727
    6. '@' → logprob: -12.125146865844727
    7. '    
' → logprob: -12.500146865844727
    8. 'import' → logprob: -12.625146865844727
    9. '<|end|>' → logprob: -12.750146865844727
    10. 'de' → logprob: -13.125146865844727

Token 161: '2' (ID: 17)
  Prédit: 'hab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hab' → logprob: -0.501727283000946
    2. 'h' → logprob: -1.2517273426055908
    3. 'ha' → logprob: -2.251727342605591
    4. 'haba' → logprob: -7.001727104187012
    5. 'has' → logprob: -7.126727104187012
    6. 'hat' → logprob: -7.376727104187012
    7. 'habt' → logprob: -8.376727104187012
    8. 'abet' → logprob: -9.126727104187012
    9. 'hs' → logprob: -9.501727104187012
    10. 'habit' → logprob: -9.626727104187012

Token 162: 'num' (ID: 4571)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.32077956199645996
    2. 'h' → logprob: -1.32077956199646
    3. 'hat' → logprob: -6.445779800415039
    4. ' =' → logprob: -6.570779800415039
    5. 'hab' → logprob: -6.945779800415039
    6. '=' → logprob: -7.445779800415039
    7. '_idx' → logprob: -7.820779800415039
    8. 'hash' → logprob: -8.195779800415039
    9. '_' → logprob: -8.445779800415039
    10. '_index' → logprob: -8.695779800415039

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31630781292915344
    2. '=' → logprob: -1.441307783126831
    3. '(' → logprob: -3.441307783126831
    4. '_' → logprob: -7.31630802154541
    5. '[' → logprob: -7.56630802154541
    6. 's' → logprob: -8.06630802154541
    7. ' (' → logprob: -8.69130802154541
    8. ' ' → logprob: -8.94130802154541
    9. '(s' → logprob: -9.06630802154541
    10. '.' → logprob: -9.19130802154541

Token 164: ' lambda' (ID: 27871)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.05437661334872246
    2. 'lambda' → logprob: -3.3043766021728516
    3. ' lambda' → logprob: -5.054376602172852
    4. ' {' → logprob: -5.054376602172852
    5. 'dict' → logprob: -5.804376602172852
    6. '(lambda' → logprob: -8.429376602172852
    7. '{}' → logprob: -9.054376602172852
    8. ' dict' → logprob: -9.929376602172852
    9. ' defaultdict' → logprob: -11.179376602172852
    10. ' ' → logprob: -11.804376602172852

Token 165: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.35487306118011475
    2. ' c' → logprob: -1.8548730611801147
    3. 'lambda' → logprob: -2.4798731803894043
    4. ' lambda' → logprob: -3.3548731803894043
    5. 'ch' → logprob: -4.604873180389404
    6. 's' → logprob: -4.854873180389404
    7. ' s' → logprob: -6.479873180389404
    8. 'chr' → logprob: -6.854873180389404
    9. 'a' → logprob: -7.104873180389404
    10. ' ch' → logprob: -7.229873180389404

Token 166: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012856863031629473
    2. ' :' → logprob: -9.000128746032715
    3. ':c' → logprob: -12.375128746032715
    4. ':(' → logprob: -15.750128746032715
    5. ':
' → logprob: -16.1251277923584
    6. '=' → logprob: -16.3751277923584
    7. ':int' → logprob: -16.6251277923584
    8. ',' → logprob: -16.8751277923584
    9. ':return' → logprob: -16.8751277923584
    10. ':s' → logprob: -17.1251277923584

Token 167: ' cap' (ID: 2328)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.9284994602203369
    2. 'base' → logprob: -1.178499460220337
    3. 'a' → logprob: -2.178499460220337
    4. 'b' → logprob: -3.178499460220337
    5. ' base' → logprob: -3.178499460220337
    6. ' ord' → logprob: -3.553499460220337
    7. ':' → logprob: -3.553499460220337
    8. 'd' → logprob: -4.678499221801758
    9. '10' → logprob: -5.553499221801758
    10. '26' → logprob: -5.678499221801758

Token 168: '=False' (ID: 12148)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09178726375102997
    2. '=' → logprob: -2.466787338256836
    3. '=None' → logprob: -6.966787338256836
    4. ' :' → logprob: -7.341787338256836
    5. ',' → logprob: -8.216787338256836
    6. 'er' → logprob: -8.341787338256836
    7. '=c' → logprob: -8.591787338256836
    8. ':c' → logprob: -8.966787338256836
    9. 't' → logprob: -9.216787338256836
    10. ',c' → logprob: -9.716787338256836

Token 169: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007182692061178386
    2. ' :' → logprob: -7.250718116760254
    3. ':c' → logprob: -12.250718116760254
    4. ',' → logprob: -13.625718116760254
    5. ',:' → logprob: -14.000718116760254
    6. ':(' → logprob: -15.250718116760254
    7. ':
' → logprob: -15.875718116760254
    8. ':[' → logprob: -16.00071907043457
    9. ' ' → logprob: -16.12571907043457
    10. '   ' → logprob: -16.12571907043457

Token 170: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.413250595331192
    2. 'ord' → logprob: -1.1632505655288696
    3. '(ord' → logprob: -3.663250684738159
    4. ' (' → logprob: -8.038250923156738
    5. '(' → logprob: -10.538250923156738
    6. '0' → logprob: -11.288250923156738
    7. ' c' → logprob: -11.913250923156738
    8. '(c' → logprob: -12.163250923156738
    9. ' ' → logprob: -12.413250923156738
    10. 'c' → logprob: -12.413250923156738

Token 171: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0006024802569299936
    2. '(' → logprob: -8.250602722167969
    3. 'c' → logprob: -8.625602722167969
    4. '('' → logprob: -8.750602722167969
    5. '(
' → logprob: -13.750602722167969
    6. ')c' → logprob: -14.000602722167969
    7. ' c' → logprob: -14.750602722167969
    8. 'A' → logprob: -15.000602722167969
    9. '((' → logprob: -15.125602722167969
    10. '(C' → logprob: -16.50060272216797

Token 172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13059158623218536
    2. '.upper' → logprob: -2.130591630935669
    3. ')-' → logprob: -6.00559139251709
    4. '.lower' → logprob: -7.00559139251709
    5. '   ' → logprob: -9.75559139251709
    6. '.' → logprob: -10.13059139251709
    7. '(c' → logprob: -10.25559139251709
    8. ' ' → logprob: -10.38059139251709
    9. ' )' → logprob: -10.63059139251709
    10. '-' → logprob: -11.00559139251709

Token 173: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01605384051799774
    2. ' -' → logprob: -4.141053676605225
    3. '+' → logprob: -11.766054153442383
    4. '-(' → logprob: -12.766054153442383
    5. ' ' → logprob: -13.141054153442383
    6. '-A' → logprob: -13.141054153442383
    7. '   ' → logprob: -13.266054153442383
    8. '.lower' → logprob: -14.516054153442383
    9. 'A' → logprob: -14.891054153442383
    10. 'a' → logprob: -14.891054153442383

Token 174: ' (' (ID: 350)
  Prédit: '65'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -0.2022961676120758
    2. '(' → logprob: -1.8272961378097534
    3. '(ord' → logprob: -4.077296257019043
    4. ' (' → logprob: -6.077296257019043
    5. '64' → logprob: -6.202296257019043
    6. 'ord' → logprob: -7.827296257019043
    7. '(A' → logprob: -8.077296257019043
    8. '96' → logprob: -9.202296257019043
    9. '97' → logprob: -9.452296257019043
    10. '(C' → logprob: -10.202296257019043

Token 175: '65' (ID: 3898)
  Prédit: '65'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -0.0001884015218820423
    2. '64' → logprob: -9.125188827514648
    3. 'ord' → logprob: -9.875188827514648
    4. ' ' → logprob: -11.125188827514648
    5. '(' → logprob: -12.000188827514648
    6. 'A' → logprob: -13.000188827514648
    7. '6' → logprob: -13.125188827514648
    8. '(ord' → logprob: -13.750188827514648
    9. ' (' → logprob: -15.000188827514648
    10. '

' → logprob: -15.375188827514648

Token 176: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5759608745574951
    2. ' if' → logprob: -0.8259608745574951
    3. ')' → logprob: -12.325961112976074
    4. ' ' → logprob: -12.450961112976074
    5. '65' → logprob: -13.075961112976074
    6. '   ' → logprob: -13.200961112976074
    7. '0' → logprob: -13.450961112976074
    8. '+' → logprob: -13.575961112976074
    9. '

' → logprob: -13.950961112976074
    10. '```' → logprob: -14.075961112976074

Token 177: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.011337692849338055
    2. ' cap' → logprob: -4.511337757110596
    3. '(cap' → logprob: -8.386337280273438
    4. '65' → logprob: -10.386337280273438
    5. '0' → logprob: -11.636337280273438
    6. 'Cap' → logprob: -12.511337280273438
    7. 'c' → logprob: -12.636337280273438
    8. 'caps' → logprob: -12.761337280273438
    9. ' not' → logprob: -12.886337280273438
    10. 'A' → logprob: -13.386337280273438

Token 178: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2519303858280182
    2. 'else' → logprob: -1.5019303560256958
    3. '	else' → logprob: -14.001930236816406
    4. ' ' → logprob: -15.251930236816406
    5. '==' → logprob: -16.376930236816406
    6. '   ' → logprob: -17.376930236816406
    7. '```' → logprob: -17.376930236816406
    8. ' els' → logprob: -17.751930236816406
    9. '_else' → logprob: -17.876930236816406
    10. ')' → logprob: -17.876930236816406

Token 179: ' ' (ID: 220)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -6.630610641877865e-06
    2. '96' → logprob: -12.250006675720215
    3. ' ' → logprob: -13.375006675720215
    4. '(' → logprob: -16.3750057220459
    5. 'a' → logprob: -16.8750057220459
    6. 'ord' → logprob: -16.8750057220459
    7. '87' → logprob: -17.0000057220459
    8. '9' → logprob: -17.6250057220459
    9. '097' → logprob: -18.0000057220459
    10. '48' → logprob: -18.6250057220459

Token 180: '97' (ID: 5170)
  Prédit: '97'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -4.008129963040119e-06
    2. '96' → logprob: -12.625003814697266
    3. ' ' → logprob: -15.125003814697266
    4. 'ord' → logprob: -15.250003814697266
    5. 'a' → logprob: -16.500003814697266
    6. '(ord' → logprob: -17.625003814697266
    7. '(' → logprob: -18.125003814697266
    8. '48' → logprob: -18.875003814697266
    9. '```' → logprob: -19.625003814697266
    10. ''a' → logprob: -19.750003814697266

Token 181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ' )' → logprob: -12.375005722045898
    3. ')
' → logprob: -14.500005722045898
    4. ')return' → logprob: -15.250005722045898
    5. ')#' → logprob: -15.875005722045898
    6. '<|end|>' → logprob: -15.875005722045898
    7. ')

' → logprob: -16.8750057220459
    8. ')+' → logprob: -17.0000057220459
    9. '))' → logprob: -17.7500057220459
    10. ')c' → logprob: -17.8750057220459

Token 182: 'num' (ID: 4571)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06107160076498985
    2. ')' → logprob: -3.3110716342926025
    3. '<|end|>' → logprob: -4.061071395874023
    4. 'newline' → logprob: -6.186071395874023
    5. 'num' → logprob: -6.936071395874023
    6. '#' → logprob: -7.061071395874023
    7. ' ' → logprob: -8.686071395874023
    8. '_' → logprob: -8.936071395874023
    9. '\' → logprob: -9.311071395874023
    10. '```' → logprob: -9.436071395874023

Token 183: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04834466800093651
    2. 'to' → logprob: -3.673344612121582
    3. '_to' → logprob: -4.298344612121582
    4. '=' → logprob: -5.423344612121582
    5. ' =' → logprob: -5.798344612121582
    6. 's' → logprob: -7.423344612121582
    7. '_' → logprob: -10.173344612121582
    8. ' to' → logprob: -10.423344612121582
    9. 'To' → logprob: -10.548344612121582
    10. 'toa' → logprob: -10.673344612121582

Token 184: 'alp' (ID: 100669)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.12265452742576599
    2. 'alp' → logprob: -2.622654438018799
    3. 'al' → logprob: -3.747654438018799
    4. 'chr' → logprob: -4.372654438018799
    5. 'num' → logprob: -6.122654438018799
    6. 'alpha' → logprob: -6.247654438018799
    7. 'c' → logprob: -6.872654438018799
    8. ' =' → logprob: -7.497654438018799
    9. 'alf' → logprob: -8.747654914855957
    10. '_char' → logprob: -8.747654914855957

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869037330150604
    2. '=' → logprob: -1.1369037628173828
    3. '=lambda' → logprob: -10.386903762817383
    4. ' ' → logprob: -14.386903762817383
    5. '＝' → logprob: -14.761903762817383
    6. 's' → logprob: -14.761903762817383
    7. 'a' → logprob: -15.886903762817383
    8. ')' → logprob: -17.511903762817383
    9. 'b' → logprob: -17.574403762817383
    10. ' =)' → logprob: -17.574403762817383

Token 186: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1002405434846878
    2. ' lambda' → logprob: -2.350240468978882
    3. '(lambda' → logprob: -10.600240707397461
    4. 'chr' → logprob: -12.100240707397461
    5. '=lambda' → logprob: -12.850240707397461
    6. 'lam' → logprob: -15.600240707397461
    7. '   ' → logprob: -15.850240707397461
    8. ' chr' → logprob: -16.35024070739746
    9. 'def' → logprob: -16.47524070739746
    10. 'l' → logprob: -16.60024070739746

Token 187: ' i' (ID: 575)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.19027899205684662
    2. 'chr' → logprob: -2.440279006958008
    3. ' c' → logprob: -2.690279006958008
    4. ' lambda' → logprob: -4.565279006958008
    5. 'lambda' → logprob: -5.065279006958008
    6. ' chr' → logprob: -6.565279006958008
    7. '(chr' → logprob: -9.315279006958008
    8. '(lambda' → logprob: -10.815279006958008
    9. 'num' → logprob: -11.190279006958008
    10. '(c' → logprob: -11.565279006958008

Token 188: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010907160118222237
    2. ' :' → logprob: -4.635907173156738
    3. ' c' → logprob: -6.885907173156738
    4. ',' → logprob: -9.260907173156738
    5. ':c' → logprob: -11.135907173156738
    6. 'c' → logprob: -11.510907173156738
    7. ',c' → logprob: -13.135907173156738
    8. 'chr' → logprob: -13.510907173156738
    9. ' chr' → logprob: -14.010907173156738
    10. ' ' → logprob: -14.010907173156738

Token 189: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.17986901104450226
    2. ' cap' → logprob: -1.8048690557479858
    3. 'False' → logprob: -9.679868698120117
    4. 'caps' → logprob: -10.429868698120117
    5. 'c' → logprob: -11.429868698120117
    6. '(cap' → logprob: -12.179868698120117
    7. ' False' → logprob: -12.554868698120117
    8. ' ' → logprob: -12.804868698120117
    9. 'capital' → logprob: -12.804868698120117
    10. '=False' → logprob: -14.179868698120117

Token 190: '=False' (ID: 12148)
  Prédit: '=False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=False' → logprob: -0.00014239625306800008
    2. '=' → logprob: -9.375142097473145
    3. '=True' → logprob: -10.375142097473145
    4. ':' → logprob: -10.625142097473145
    5. '=i' → logprob: -13.625142097473145
    6. ' =' → logprob: -15.375142097473145
    7. '=None' → logprob: -15.500142097473145
    8. '(False' → logprob: -15.750142097473145
    9. '=:' → logprob: -16.00014305114746
    10. ',' → logprob: -17.00014305114746

Token 191: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.8074162653647363e-05
    2. ' :' → logprob: -11.000018119812012
    3. ':return' → logprob: -13.750018119812012
    4. ':c' → logprob: -15.125018119812012
    5. ':i' → logprob: -17.375017166137695
    6. ':
' → logprob: -18.250017166137695
    7. ':param' → logprob: -19.250017166137695
    8. ',' → logprob: -19.375017166137695
    9. ':n' → logprob: -19.625017166137695
    10. ':not' → logprob: -19.625017166137695

Token 192: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.048738498240709305
    2. ' chr' → logprob: -3.048738479614258
    3. '(chr' → logprob: -8.798738479614258
    4. '_chr' → logprob: -16.548738479614258
    5. ' ' → logprob: -18.423738479614258
    6. '   ' → logprob: -19.173738479614258
    7. 'Chr' → logprob: -19.423738479614258
    8. ' (' → logprob: -19.548738479614258
    9. '  ' → logprob: -20.798738479614258
    10. ' Chr' → logprob: -20.923738479614258

Token 193: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0186268649995327
    2. '(' → logprob: -4.018626689910889
    3. '((' → logprob: -8.143627166748047
    4. '(ord' → logprob: -8.643627166748047
    5. '(
' → logprob: -12.643627166748047
    6. '65' → logprob: -12.768627166748047
    7. 'i' → logprob: -13.893627166748047
    8. '(a' → logprob: -13.893627166748047
    9. ' (' → logprob: -14.518627166748047
    10. '(int' → logprob: -14.893627166748047

Token 194: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5760375261306763
    2. ' +' → logprob: -0.8260375261306763
    3. '+(' → logprob: -9.326037406921387
    4. ' ' → logprob: -12.576037406921387
    5. ' +(' → logprob: -12.951037406921387
    6. ')' → logprob: -13.576037406921387
    7. '65' → logprob: -13.951037406921387
    8. '(' → logprob: -15.951037406921387
    9. '   ' → logprob: -16.076038360595703
    10. '+A' → logprob: -16.326038360595703

Token 195: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007158142048865557
    2. '65' → logprob: -5.257158279418945
    3. ' (' → logprob: -6.257158279418945
    4. ' ' → logprob: -12.632158279418945
    5. '(A' → logprob: -13.507158279418945
    6. '(ord' → logprob: -14.507158279418945
    7. '97' → logprob: -15.382158279418945
    8. '(C' → logprob: -15.507158279418945
    9. '```' → logprob: -16.257158279418945
    10. '(cap' → logprob: -16.757158279418945

Token 196: '65' (ID: 3898)
  Prédit: '65'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -0.009808271192014217
    2. '(' → logprob: -4.63480806350708
    3. ' (' → logprob: -10.134808540344238
    4. ' ' → logprob: -11.509808540344238
    5. '97' → logprob: -13.884808540344238
    6. '(A' → logprob: -14.259808540344238
    7. '(ord' → logprob: -15.134808540344238
    8. '(C' → logprob: -15.759808540344238
    9. '
' → logprob: -16.259807586669922
    10. 'A' → logprob: -16.384807586669922

Token 197: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.048607006669044495
    2. 'if' → logprob: -3.048607110977173
    3. ')' → logprob: -11.048606872558594
    4. '0' → logprob: -13.673606872558594
    5. '))' → logprob: -13.673606872558594
    6. '<|end|>' → logprob: -14.548606872558594
    7. ' ' → logprob: -15.673606872558594
    8. '	if' → logprob: -16.173606872558594
    9. '{' → logprob: -16.548606872558594
    10. '6' → logprob: -16.798606872558594

Token 198: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.25201156735420227
    2. ' cap' → logprob: -1.5020115375518799
    3. '(cap' → logprob: -9.5020112991333
    4. ' not' → logprob: -12.2520112991333
    5. 'True' → logprob: -14.0020112991333
    6. 'not' → logprob: -14.5020112991333
    7. ' ' → logprob: -14.8770112991333
    8. ' True' → logprob: -15.2520112991333
    9. 'caps' → logprob: -15.2520112991333
    10. '0' → logprob: -15.2520112991333

Token 199: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.31326475739479065
    2. 'else' → logprob: -1.3132647275924683
    3. '	else' → logprob: -13.313264846801758
    4. ')' → logprob: -13.938264846801758
    5. ' ' → logprob: -15.313264846801758
    6. '<|end|>' → logprob: -16.313264846801758
    7. '_else' → logprob: -16.438264846801758
    8. ' ' → logprob: -17.063264846801758
    9. 'elses' → logprob: -17.563264846801758
    10. '0' → logprob: -17.563264846801758

Token 200: ' ' (ID: 220)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '96' → logprob: -15.3750581741333
    4. '9' → logprob: -17.750059127807617
    5. '```' → logprob: -17.750059127807617
    6. 'a' → logprob: -18.250059127807617
    7. '097' → logprob: -19.000059127807617
    8. '98' → logprob: -19.000059127807617
    9. '   ' → logprob: -19.312559127807617
    10. '`' → logprob: -20.500059127807617

Token 201: '97' (ID: 5170)
  Prédit: '97'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '96' → logprob: -15.625000953674316
    4. 'a' → logprob: -16.375001907348633
    5. '9' → logprob: -17.750001907348633
    6. '```' → logprob: -19.375001907348633
    7. '0' → logprob: -19.500001907348633
    8. '   ' → logprob: -19.500001907348633
    9. ''a' → logprob: -20.125001907348633
    10. '98' → logprob: -20.500001907348633

Token 202: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0802738870552275e-05
    2. '))' → logprob: -11.62501049041748
    3. ' )' → logprob: -13.37501049041748
    4. ')
' → logprob: -16.250011444091797
    5. ')return' → logprob: -16.500011444091797
    6. ')#' → logprob: -17.750011444091797
    7. ')

' → logprob: -17.875011444091797
    8. ')))' → logprob: -18.250011444091797
    9. ')`' → logprob: -18.375011444091797
    10. '())' → logprob: -18.500011444091797

Token 203: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007263366132974625
    2. 'class' → logprob: -5.25726318359375
    3. '#' → logprob: -7.38226318359375
    4. '@' → logprob: -8.00726318359375
    5. 'n' → logprob: -8.13226318359375
    6. 'N' → logprob: -8.50726318359375
    7. 'MOD' → logprob: -8.75726318359375
    8. 'from' → logprob: -8.88226318359375
    9. 'INF' → logprob: -9.63226318359375
    10. 'dp' → logprob: -10.25726318359375

Token 204: ' mat' (ID: 2450)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1469414234161377
    2. ' solve' → logprob: -2.8969414234161377
    3. ' is' → logprob: -3.2719414234161377
    4. ' gcd' → logprob: -4.521941184997559
    5. 'main' → logprob: -4.646941184997559
    6. ' factorial' → logprob: -5.896941184997559
    7. 's' → logprob: -6.146941184997559
    8. ' sieve' → logprob: -6.396941184997559
    9. ' bit' → logprob: -6.521941184997559
    10. ' dfs' → logprob: -6.521941184997559

Token 205: 'mat' (ID: 8872)
  Prédit: 'rix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rix' → logprob: -0.29042842984199524
    2. 'h' → logprob: -2.915428400039673
    3. 'r' → logprob: -2.915428400039673
    4. 'rices' → logprob: -3.290428400039673
    5. 'mul' → logprob: -3.290428400039673
    6. '_mul' → logprob: -3.665428400039673
    7. '(r' → logprob: -4.665428638458252
    8. 'ch' → logprob: -5.415428638458252
    9. '_mult' → logprob: -5.415428638458252
    10. 'rial' → logprob: -5.665428638458252

Token 206: '(A' (ID: 10706)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.3328831195831299
    2. '_mul' → logprob: -1.9578831195831299
    3. '(a' → logprob: -2.33288311958313
    4. '(A' → logprob: -3.33288311958313
    5. '(mat' → logprob: -5.707882881164551
    6. 'Mul' → logprob: -6.457882881164551
    7. '_mult' → logprob: -6.707882881164551
    8. '(m' → logprob: -6.707882881164551
    9. 'rix' → logprob: -7.582882881164551
    10. 'mult' → logprob: -8.08288288116455

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003732380224391818
    2. ',B' → logprob: -5.753732204437256
    3. ' ,' → logprob: -7.628732204437256
    4. '):' → logprob: -10.503732681274414
    5. ',A' → logprob: -11.253732681274414
    6. ',b' → logprob: -11.628732681274414
    7. '[' → logprob: -12.128732681274414
    8. ')' → logprob: -12.753732681274414
    9. ' B' → logprob: -12.878732681274414
    10. 'B' → logprob: -13.378732681274414

Token 208: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2519642114639282
    2. ' B' → logprob: -1.5019642114639282
    3. ' ' → logprob: -11.751964569091797
    4. 'b' → logprob: -11.876964569091797
    5. '	B' → logprob: -12.001964569091797
    6. ')' → logprob: -12.626964569091797
    7. '):' → logprob: -13.251964569091797
    8. '   ' → logprob: -13.501964569091797
    9. '):
' → logprob: -13.751964569091797
    10. '    ' → logprob: -13.876964569091797

Token 209: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00024168188974726945
    2. ',' → logprob: -8.75024127960205
    3. '):
' → logprob: -9.87524127960205
    4. ' ):' → logprob: -10.50024127960205
    5. ')' → logprob: -13.00024127960205
    6. ':' → logprob: -13.62524127960205
    7. '):
' → logprob: -15.37524127960205
    8. ']:' → logprob: -15.62524127960205
    9. '**' → logprob: -16.875242233276367
    10. '   ' → logprob: -16.875242233276367

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38809123635292053
    2. ':' → logprob: -1.1380912065505981
    3. ':
' → logprob: -7.263091087341309
    4. '[' → logprob: -8.888091087341309
    5. '):' → logprob: -9.513091087341309
    6. ',' → logprob: -10.013091087341309
    7. ':return' → logprob: -10.013091087341309
    8. '	return' → logprob: -10.138091087341309
    9. ' return' → logprob: -10.263091087341309
    10. ' :' → logprob: -11.013091087341309

Token 211: ' return' (ID: 622)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0271350145339966
    2. ' n' → logprob: -1.4021350145339966
    3. 'return' (adapté à ' return') → logprob: -2.027134895324707
    4. '   ' → logprob: -2.027134895324707
    5. ' return' → logprob: -2.152134895324707
    6. 'r' → logprob: -5.527134895324707
    7. '[' → logprob: -5.902134895324707
    8. ' m' → logprob: -6.027134895324707
    9. 'm' → logprob: -6.152134895324707
    10. ' r' → logprob: -6.652134895324707

Token 212: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00766790984198451
    2. ' [[' → logprob: -5.0076680183410645
    3. '[' → logprob: -7.0076680183410645
    4. '[
' → logprob: -10.257667541503906
    5. ' [' → logprob: -11.507667541503906
    6. '[A' → logprob: -13.882667541503906
    7. '[list' → logprob: -14.132667541503906
    8. ' [
' → logprob: -16.257667541503906
    9. '[a' → logprob: -16.757667541503906
    10. '[['' → logprob: -16.882667541503906

Token 213: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -2.248469718324486e-05
    2. ' sum' → logprob: -10.750022888183594
    3. '
' → logprob: -14.375022888183594
    4. '(sum' → logprob: -15.375022888183594
    5. '   ' → logprob: -16.875022888183594
    6. '  ' → logprob: -17.875022888183594
    7. '    
' → logprob: -18.250022888183594
    8. 'dot' → logprob: -18.375022888183594
    9. ' ' → logprob: -18.375022888183594
    10. '	sum' → logprob: -18.500022888183594

Token 214: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2768482565879822
    2. 'A' → logprob: -2.276848316192627
    3. 'x' → logprob: -2.276848316192627
    4. '(a' → logprob: -3.776848316192627
    5. '(x' → logprob: -5.276848316192627
    6. ' a' → logprob: -5.651848316192627
    7. '(A' → logprob: -5.776848316192627
    8. ' A' → logprob: -7.401848316192627
    9. ' x' → logprob: -8.026847839355469
    10. '[a' → logprob: -8.026847839355469

Token 215: '*b' (ID: 72162)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2673206925392151
    2. '*k' → logprob: -2.2673206329345703
    3. '[k' → logprob: -2.7673206329345703
    4. 'i' → logprob: -3.7673206329345703
    5. '*' → logprob: -4.76732063293457
    6. '*b' → logprob: -4.89232063293457
    7. '*x' → logprob: -5.14232063293457
    8. 'k' → logprob: -5.51732063293457
    9. ' *' → logprob: -5.51732063293457
    10. 'x' → logprob: -5.76732063293457

Token 216: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.020554495975375175
    2. 'for' → logprob: -3.895554542541504
    3. ' ' → logprob: -11.645554542541504
    4. '	for' → logprob: -12.770554542541504
    5. 'A' → logprob: -15.145554542541504
    6. '1' → logprob: -15.645554542541504
    7. '  ' → logprob: -16.395553588867188
    8. '   ' → logprob: -16.770553588867188
    9. 'a' → logprob: -16.770553588867188
    10. '[' → logprob: -17.020553588867188

Token 217: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12694500386714935
    2. ' a' → logprob: -2.1269450187683105
    3. '	a' → logprob: -11.626944541931152
    4. '(a' → logprob: -12.376944541931152
    5. ',a' → logprob: -13.001944541931152
    6. ',' → logprob: -14.251944541931152
    7. '_a' → logprob: -14.626944541931152
    8. ' ' → logprob: -16.12694549560547
    9. '.a' → logprob: -16.25194549560547
    10. ' (' → logprob: -16.87694549560547

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44179219007492065
    2. ',a' → logprob: -1.1917922496795654
    3. 'a' → logprob: -3.5667922496795654
    4. ',b' → logprob: -3.6917922496795654
    5. ' ,' → logprob: -9.191792488098145
    6. ',j' → logprob: -9.941792488098145
    7. ' a' → logprob: -9.941792488098145
    8. ',A' → logprob: -11.691792488098145
    9. ',v' → logprob: -11.691792488098145
    10. ',r' → logprob: -12.066792488098145

Token 219: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012703527696430683
    2. ' a' → logprob: -4.3877034187316895
    3. 'b' → logprob: -8.637703895568848
    4. ' b' → logprob: -11.262703895568848
    5. '_a' → logprob: -13.262703895568848
    6. '	a' → logprob: -14.137703895568848
    7. '(a' → logprob: -14.887703895568848
    8. ',a' → logprob: -15.012703895568848
    9. 'A' → logprob: -15.637703895568848
    10. ' in' → logprob: -16.13770294189453

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016111087054014206
    2. 'in' → logprob: -4.141110897064209
    3. ' zip' → logprob: -9.766111373901367
    4. 'zip' → logprob: -11.641111373901367
    5. ' ' → logprob: -12.516111373901367
    6. 's' → logprob: -12.891111373901367
    7. ',' → logprob: -13.766111373901367
    8. 'a' → logprob: -13.891111373901367
    9. 'A' → logprob: -14.516111373901367
    10. 'enumer' → logprob: -15.141111373901367

Token 221: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -7.493430894101039e-05
    2. 'zip' → logprob: -9.500075340270996
    3. ' z' → logprob: -17.37507438659668
    4. ' ' → logprob: -17.87507438659668
    5. '(zip' → logprob: -18.75007438659668
    6. '.zip' → logprob: -19.62507438659668
    7. '
' → logprob: -20.12507438659668
    8. ' zi' → logprob: -20.25007438659668
    9. '_zip' → logprob: -20.62507438659668
    10. ' pair' → logprob: -20.62507438659668

Token 222: '(A' (ID: 10706)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.15013009309768677
    2. '(A' → logprob: -2.400130033493042
    3. '(a' → logprob: -3.275130033493042
    4. 'row' → logprob: -4.775130271911621
    5. '(ar' → logprob: -6.900130271911621
    6. 'A' → logprob: -7.650130271911621
    7. ' row' → logprob: -8.025130271911621
    8. '(' → logprob: -8.150130271911621
    9. '(r' → logprob: -9.150130271911621
    10. 'AR' → logprob: -9.775130271911621

Token 223: '_row' (ID: 19157)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5928848385810852
    2. 'row' → logprob: -1.7178847789764404
    3. '_row' → logprob: -1.8428847789764404
    4. '[row' → logprob: -2.5928847789764404
    5. '[r' → logprob: -4.3428850173950195
    6. 'r' → logprob: -4.9678850173950195
    7. 'i' → logprob: -5.0928850173950195
    8. ' row' → logprob: -5.8428850173950195
    9. '[' → logprob: -6.9678850173950195
    10. '_i' → logprob: -6.9678850173950195

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07123012840747833
    2. ',A' → logprob: -3.071230173110962
    3. 'A' → logprob: -4.446229934692383
    4. ',B' → logprob: -5.071229934692383
    5. ',row' → logprob: -6.196229934692383
    6. 'row' → logprob: -6.321229934692383
    7. '_row' → logprob: -8.321229934692383
    8. ' ,' → logprob: -8.696229934692383
    9. ' row' → logprob: -10.321229934692383
    10. '[' → logprob: -10.446229934692383

Token 225: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002640579594299197
    2. ' B' → logprob: -6.627640724182129
    3. 'col' → logprob: -6.752640724182129
    4. 'b' → logprob: -9.377640724182129
    5. ' col' → logprob: -10.127640724182129
    6. '[B' → logprob: -11.752640724182129
    7. '[col' → logprob: -11.877640724182129
    8. 'row' → logprob: -13.127640724182129
    9. '[' → logprob: -13.752640724182129
    10. 'column' → logprob: -14.377640724182129

Token 226: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.0011865380220115185
    2. 'col' → logprob: -6.751186370849609
    3. '[col' → logprob: -11.75118637084961
    4. 'Col' → logprob: -12.00118637084961
    5. '_column' → logprob: -13.62618637084961
    6. '_COL' → logprob: -14.37618637084961
    7. ' col' → logprob: -15.12618637084961
    8. '	col' → logprob: -16.00118637084961
    9. 'column' → logprob: -16.25118637084961
    10. '[_' → logprob: -17.75118637084961

Token 227: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5766049027442932
    2. '))' → logprob: -0.8266049027442932
    3. ')]' → logprob: -8.201604843139648
    4. ')
' → logprob: -9.201604843139648
    5. '_row' → logprob: -9.326604843139648
    6. 'row' → logprob: -9.451604843139648
    7. '])' → logprob: -10.201604843139648
    8. ' )' → logprob: -10.701604843139648
    9. '))
' → logprob: -11.326604843139648
    10. 't' → logprob: -11.701604843139648

Token 228: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02955491840839386
    2. 'for' → logprob: -4.154554843902588
    3. ' in' → logprob: -4.404554843902588
    4. '    ' → logprob: -7.779554843902588
    5. '   ' → logprob: -8.654555320739746
    6. 'in' → logprob: -9.154555320739746
    7. ' ' → logprob: -9.404555320739746
    8. '	for' → logprob: -9.529555320739746
    9. '        ' → logprob: -9.779555320739746
    10. '          ' → logprob: -10.029555320739746

Token 229: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0036003058776259422
    2. ' B' → logprob: -5.628600120544434
    3. 'A' → logprob: -16.00360107421875
    4. '	B' → logprob: -16.37860107421875
    5. '_B' → logprob: -17.37860107421875
    6. ' ' → logprob: -18.25360107421875
    7. 'Ｂ' → logprob: -18.25360107421875
    8. '(B' → logprob: -18.37860107421875
    9. '>B' → logprob: -19.25360107421875
    10. '=B' → logprob: -19.56610107421875

Token 230: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.00014215784904081374
    2. 'col' → logprob: -9.625142097473145
    3. '_row' → logprob: -10.250142097473145
    4. '_COL' → logprob: -10.875142097473145
    5. '_column' → logprob: -11.750142097473145
    6. '_' → logprob: -12.125142097473145
    7. 'Col' → logprob: -12.500142097473145
    8. '[col' → logprob: -13.375142097473145
    9. '_c' → logprob: -13.750142097473145
    10. '[' → logprob: -14.500142097473145

Token 231: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.313265860080719
    2. 'in' → logprob: -1.3132658004760742
    3. 'B' → logprob: -12.688265800476074
    4. ' ' → logprob: -15.063265800476074
    5. 'n' → logprob: -15.563265800476074
    6. 'In' → logprob: -15.813265800476074
    7. '	in' → logprob: -16.31326675415039
    8. ',' → logprob: -16.68826675415039
    9. 'ins' → logprob: -17.06326675415039
    10. 'range' → logprob: -17.06326675415039

Token 232: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.011051355861127377
    2. ' zip' → logprob: -4.511051177978516
    3. '(zip' → logprob: -12.886051177978516
    4. 'map' → logprob: -14.386051177978516
    5. ' ' → logprob: -15.761051177978516
    6. 'col' → logprob: -16.011051177978516
    7. 'range' → logprob: -16.761051177978516
    8. '   ' → logprob: -16.886051177978516
    9. '  ' → logprob: -18.136051177978516
    10. 'column' → logprob: -18.386051177978516

Token 233: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -6.704273118884885e-07
    2. '(*)' → logprob: -14.500000953674316
    3. '*' → logprob: -16.75
    4. ' (*' → logprob: -18.625
    5. '(' → logprob: -19.75
    6. '(*(' → logprob: -19.875
    7. '((*' → logprob: -21.25
    8. '   ' → logprob: -21.875
    9. '(
' → logprob: -22.375
    10. '(B' → logprob: -23.125

Token 234: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00012701898231171072
    2. '(B' → logprob: -9.500126838684082
    3. ' B' → logprob: -9.875126838684082
    4. '   ' → logprob: -15.250126838684082
    5. ')' → logprob: -15.875126838684082
    6. '[B' → logprob: -16.1251277923584
    7. ' ' → logprob: -16.7501277923584
    8. 'b' → logprob: -16.7501277923584
    9. '(' → logprob: -16.8751277923584
    10. '	B' → logprob: -17.8751277923584

Token 235: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00040338258258998394
    2. ')' → logprob: -7.87540340423584
    3. ')]
' → logprob: -11.00040340423584
    4. '   ' → logprob: -13.12540340423584
    5. ')])' → logprob: -13.62540340423584
    6. ' )' → logprob: -14.00040340423584
    7. ']' → logprob: -14.12540340423584
    8. ']]' → logprob: -15.00040340423584
    9. '))' → logprob: -15.00040340423584
    10. 'A' → logprob: -15.12540340423584

Token 236: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020635435357689857
    2. '   ' → logprob: -4.145635604858398
    3. ' for' → logprob: -6.020635604858398
    4. ' ]' → logprob: -6.645635604858398
    5. '       ' → logprob: -7.645635604858398
    6. 'for' → logprob: -8.770635604858398
    7. ')' → logprob: -9.895635604858398
    8. '    ' → logprob: -10.020635604858398
    9. ' in' → logprob: -10.270635604858398
    10. '  ' → logprob: -10.895635604858398

Token 237: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.6087021473795176e-05
    2. ' A' → logprob: -10.000045776367188
    3. '(A' → logprob: -14.375045776367188
    4. 'range' → logprob: -17.375045776367188
    5. '	A' → logprob: -17.375045776367188
    6. 'B' → logprob: -17.625045776367188
    7. 'a' → logprob: -19.750045776367188
    8. '  ' → logprob: -20.125045776367188
    9. ' ' → logprob: -20.125045776367188
    10. 'row' → logprob: -20.125045776367188

Token 238: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -4.024604277219623e-05
    2. '_Row' → logprob: -11.625040054321289
    3. '_ROW' → logprob: -11.625040054321289
    4. 'Row' → logprob: -11.875040054321289
    5. 'row' → logprob: -12.125040054321289
    6. '[' → logprob: -12.750040054321289
    7. '_' → logprob: -12.750040054321289
    8. ')' → logprob: -14.125040054321289
    9. '[row' → logprob: -14.250040054321289
    10. '<Row' → logprob: -14.375040054321289

Token 239: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0620490238070488
    2. 'in' → logprob: -2.81204891204834
    3. 'A' → logprob: -9.56204891204834
    4. ' A' → logprob: -11.81204891204834
    5. 'import' → logprob: -13.68704891204834
    6. ')' → logprob: -14.56204891204834
    7. '(A' → logprob: -14.56204891204834
    8. 'In' → logprob: -14.93704891204834
    9. '<|end|>' → logprob: -15.31204891204834
    10. 's' → logprob: -15.56204891204834

Token 240: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0001234428636962548
    2. ' A' → logprob: -9.000123023986816
    3. ')' → logprob: -17.500123977661133
    4. '
' → logprob: -18.250123977661133
    5. '	A' → logprob: -18.375123977661133
    6. '(A' → logprob: -19.000123977661133
    7. '[A' → logprob: -19.500123977661133
    8. '*A' → logprob: -19.875123977661133
    9. ' ' → logprob: -20.125123977661133
    10. '[' → logprob: -20.250123977661133

Token 241: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014847563579678535
    2. ')]' → logprob: -9.25014877319336
    3. '()]' → logprob: -10.50014877319336
    4. ' ]' → logprob: -11.00014877319336
    5. ']]' → logprob: -13.12514877319336
    6. '`]' → logprob: -13.87514877319336
    7. ']
' → logprob: -14.37514877319336
    8. '}]' → logprob: -14.50014877319336
    9. '_]' → logprob: -14.75014877319336
    10. ':]' → logprob: -14.75014877319336

Token 242: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020012001041322947
    2. '<|end|>' → logprob: -6.7520012855529785
    3. '
' → logprob: -7.3770012855529785
    4. ')' → logprob: -9.00200080871582
    5. '#' → logprob: -10.00200080871582
    6. '<|end|>' → logprob: -11.75200080871582
    7. '```' → logprob: -12.12700080871582
    8. ']' → logprob: -12.25200080871582
    9. ' def' → logprob: -12.37700080871582
    10. '  
' → logprob: -12.87700080871582

Token 243: ' mat' (ID: 2450)
  Prédit: ' mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mat' → logprob: -0.28526923060417175
    2. 'mat' → logprob: -1.4102692604064941
    3. 'pow' → logprob: -6.910269260406494
    4. 'vec' → logprob: -7.160269260406494
    5. ' vec' → logprob: -7.285269260406494
    6. ' pow' → logprob: -8.285268783569336
    7. ' matrix' → logprob: -8.910268783569336
    8. ' factorial' → logprob: -8.910268783569336
    9. ' main' → logprob: -9.160268783569336
    10. ' vector' → logprob: -9.285268783569336

Token 244: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.04920809715986252
    2. 'mul' → logprob: -3.049208164215088
    3. 'mult' → logprob: -7.799208164215088
    4. 'vect' → logprob: -9.67420768737793
    5. '
' → logprob: -10.17420768737793
    6. '_vec' → logprob: -10.29920768737793
    7. 'transpose' → logprob: -10.54920768737793
    8. 'add' → logprob: -11.67420768737793
    9. 'pow' → logprob: -11.79920768737793
    10. 'trans' → logprob: -12.04920768737793

Token 245: '(M' (ID: 6103)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.001203327439725399
    2. '(M' → logprob: -6.751203536987305
    3. '(' → logprob: -11.126203536987305
    4. '(mat' → logprob: -11.251203536987305
    5. '(Mat' → logprob: -13.251203536987305
    6. '(Matrix' → logprob: -13.376203536987305
    7. '(matrix' → logprob: -13.501203536987305
    8. ' (' → logprob: -15.126203536987305
    9. '(m' → logprob: -16.126203536987305
    10. '(V' → logprob: -16.251203536987305

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005445729475468397
    2. ',M' → logprob: -7.875544548034668
    3. ' ,' → logprob: -8.875544548034668
    4. ',v' → logprob: -11.625544548034668
    5. ',m' → logprob: -11.750544548034668
    6. ',A' → logprob: -12.750544548034668
    7. ',row' → logprob: -13.375544548034668
    8. ',y' → logprob: -14.625544548034668
    9. ',V' → logprob: -15.125544548034668
    10. ',N' → logprob: -15.500544548034668

Token 247: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005654225824400783
    2. ' v' → logprob: -7.875565528869629
    3. 'vec' → logprob: -8.625565528869629
    4. 'V' → logprob: -12.250565528869629
    5. 'x' → logprob: -14.125565528869629
    6. ' vec' → logprob: -15.500565528869629
    7. '```' → logprob: -16.250564575195312
    8. 'vector' → logprob: -16.625564575195312
    9. 'b' → logprob: -16.750564575195312
    10. ' ' → logprob: -16.875564575195312

Token 248: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010348338400945067
    2. '):
' → logprob: -6.876034736633301
    3. '):
' → logprob: -13.6260347366333
    4. '):

' → logprob: -14.6260347366333
    5. ' ):' → logprob: -15.1260347366333
    6. ')' → logprob: -16.626035690307617
    7. ':' → logprob: -17.376035690307617
    8. ']:' → logprob: -17.626035690307617
    9. '}:' → logprob: -18.501035690307617
    10. ',' → logprob: -19.251035690307617

Token 249: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7108986377716064
    2. ':' → logprob: -1.5858986377716064
    3. 'return' → logprob: -1.8358986377716064
    4. '   ' → logprob: -2.3358986377716064
    5. ':
' → logprob: -3.3358986377716064
    6. '):' → logprob: -5.460898399353027
    7. ':return' → logprob: -5.460898399353027
    8. ' =' → logprob: -7.085898399353027
    9. '):
' → logprob: -7.335898399353027
    10. '=' → logprob: -7.335898399353027

Token 250: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42497316002845764
    2. 'return' (adapté à ' return') → logprob: -1.1749731302261353
    3. ' return' → logprob: -3.424973249435425
    4. ' [' → logprob: -6.549973011016846
    5. '[len' → logprob: -7.049973011016846
    6. '   ' → logprob: -7.549973011016846
    7. '[m' → logprob: -7.674973011016846
    8. '[row' → logprob: -8.299973487854004
    9. '[a' → logprob: -8.799973487854004
    10. '[r' → logprob: -8.799973487854004

Token 251: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.043530941009521484
    2. ' [' → logprob: -3.2935309410095215
    3. '[a' → logprob: -6.0435309410095215
    4. '[m' → logprob: -6.5435309410095215
    5. '[row' → logprob: -7.9185309410095215
    6. '[v' → logprob: -8.79353141784668
    7. '[len' → logprob: -8.91853141784668
    8. '[list' → logprob: -9.04353141784668
    9. '[next' → logprob: -9.29353141784668
    10. '[result' → logprob: -9.41853141784668

Token 252: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -3.583550642360933e-05
    2. ' sum' → logprob: -10.250036239624023
    3. '(sum' → logprob: -15.125036239624023
    4. ' ' → logprob: -18.125036239624023
    5. '  ' → logprob: -18.125036239624023
    6. '   ' → logprob: -18.250036239624023
    7. '
' → logprob: -18.625036239624023
    8. '	sum' → logprob: -19.250036239624023
    9. '=sum' → logprob: -20.250036239624023
    10. '.sum' → logprob: -20.500036239624023

Token 253: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.036923203617334366
    2. '(M' → logprob: -3.5369231700897217
    3. '(x' → logprob: -5.661923408508301
    4. '(a' → logprob: -6.161923408508301
    5. '(mi' → logprob: -7.036923408508301
    6. '(row' → logprob: -7.411923408508301
    7. '(r' → logprob: -9.9119234085083
    8. 'm' → logprob: -11.9119234085083
    9. '(mx' → logprob: -12.4119234085083
    10. '(' → logprob: -12.6619234085083

Token 254: ' *' (ID: 425)
  Prédit: '*v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*v' → logprob: -0.5217640995979309
    2. '*' → logprob: -1.0217640399932861
    3. '*x' → logprob: -3.396764039993286
    4. 'x' → logprob: -4.771764278411865
    5. '*m' → logprob: -6.021764278411865
    6. '*i' → logprob: -7.396764278411865
    7. '*a' → logprob: -7.896764278411865
    8. ' *' → logprob: -8.521763801574707
    9. 'i' → logprob: -8.521763801574707
    10. '*r' → logprob: -8.771763801574707

Token 255: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16130362451076508
    2. 'vi' → logprob: -1.9113036394119263
    3. 'vv' → logprob: -7.661303520202637
    4. 'v' → logprob: -7.786303520202637
    5. 'vec' → logprob: -9.411303520202637
    6. 'vx' → logprob: -10.286303520202637
    7. 'vc' → logprob: -10.911303520202637
    8. 'w' → logprob: -11.536303520202637
    9. 'val' → logprob: -11.661303520202637
    10. ' x' → logprob: -11.661303520202637

Token 256: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0861748456954956
    2. '_i' → logprob: -2.961174964904785
    3. 'i' → logprob: -3.711174964904785
    4. ' for' → logprob: -5.586174964904785
    5. 'for' → logprob: -6.711174964904785
    6. '[j' → logprob: -7.461174964904785
    7. 'j' → logprob: -8.211174964904785
    8. ')' → logprob: -8.461174964904785
    9. '[' → logprob: -9.086174964904785
    10. '[idx' → logprob: -9.336174964904785

Token 257: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18119917809963226
    2. 'for' → logprob: -1.8061991930007935
    3. 'or' → logprob: -6.681199073791504
    4. ' ' → logprob: -9.056199073791504
    5. '	for' → logprob: -10.681199073791504
    6. '  ' → logprob: -10.806199073791504
    7. 'n' → logprob: -11.931199073791504
    8. '   ' → logprob: -12.181199073791504
    9. ' or' → logprob: -12.556199073791504
    10. 'x' → logprob: -12.806199073791504

Token 258: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005935790482908487
    2. ' m' → logprob: -5.1309356689453125
    3. '(m' → logprob: -12.505935668945312
    4. 'v' → logprob: -12.630935668945312
    5. '_m' → logprob: -16.755935668945312
    6. '	m' → logprob: -17.005935668945312
    7. 'M' → logprob: -17.005935668945312
    8. ' (' → logprob: -17.130935668945312
    9. ',' → logprob: -17.755935668945312
    10. ' v' → logprob: -18.005935668945312

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009488568175584078
    2. ',v' → logprob: -7.000948905944824
    3. ',m' → logprob: -10.500948905944824
    4. ' ,' → logprob: -11.625948905944824
    5. 'v' → logprob: -14.375948905944824
    6. ' in' → logprob: -15.500948905944824
    7. '_,' → logprob: -16.875947952270508
    8. 'in' → logprob: -17.000947952270508
    9. 'm' → logprob: -17.500947952270508
    10. ',y' → logprob: -18.250947952270508

Token 260: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04308025911450386
    2. ' v' → logprob: -3.1680803298950195
    3. '(v' → logprob: -9.79308032989502
    4. '_v' → logprob: -11.16808032989502
    5. 'vi' → logprob: -12.04308032989502
    6. '	v' → logprob: -12.91808032989502
    7. ')v' → logprob: -14.04308032989502
    8. ',v' → logprob: -14.41808032989502
    9. 'zip' → logprob: -15.29308032989502
    10. ' zip' → logprob: -15.91808032989502

Token 261: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0003217574267182499
    2. ' in' → logprob: -8.250321388244629
    3. ',' → logprob: -10.250321388244629
    4. ',_' → logprob: -11.375321388244629
    5. 'in' → logprob: -11.750321388244629
    6. '_in' → logprob: -12.875321388244629
    7. 'i' → logprob: -13.375321388244629
    8. ',i' → logprob: -14.875321388244629
    9. ' _' → logprob: -15.125321388244629
    10. 'v' → logprob: -15.625321388244629

Token 262: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10022047162055969
    2. 'in' → logprob: -2.3502204418182373
    3. 'zip' → logprob: -12.350220680236816
    4. ' zip' → logprob: -12.975220680236816
    5. ',' → logprob: -13.350220680236816
    6. ')' → logprob: -13.725220680236816
    7. 's' → logprob: -13.850220680236816
    8. ' ' → logprob: -13.850220680236816
    9. 'v' → logprob: -14.850220680236816
    10. 'In' → logprob: -15.350220680236816

Token 263: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.3132827877998352
    2. ' zip' → logprob: -1.3132827281951904
    3. '(zip' → logprob: -10.81328296661377
    4. '.zip' → logprob: -14.18828296661377
    5. '_zip' → logprob: -15.68828296661377
    6. 'Zip' → logprob: -18.938282012939453
    7. '```' → logprob: -19.313282012939453
    8. 'pair' → logprob: -19.688282012939453
    9. 'enumer' → logprob: -19.938282012939453
    10. 's' → logprob: -20.063282012939453

Token 264: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.1603248566389084
    2. '(row' → logprob: -1.9103248119354248
    3. 'row' → logprob: -9.535325050354004
    4. '(m' → logprob: -10.660325050354004
    5. ' row' → logprob: -12.410325050354004
    6. '(r' → logprob: -14.910325050354004
    7. '(line' → logprob: -15.785325050354004
    8. '(Row' → logprob: -16.660324096679688
    9. '(matrix' → logprob: -16.785324096679688
    10. '(s' → logprob: -17.160324096679688

Token 265: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.5204035639762878
    2. ',' → logprob: -1.0204036235809326
    3. 'row' → logprob: -3.5204036235809326
    4. ' row' → logprob: -5.2704033851623535
    5. ',row' → logprob: -5.2704033851623535
    6. '[row' → logprob: -6.0204033851623535
    7. ' ,' → logprob: -6.8954033851623535
    8. '[' → logprob: -7.0204033851623535
    9. 'Row' → logprob: -7.7704033851623535
    10. '_,' → logprob: -8.270403861999512

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007853295537643135
    2. ',v' → logprob: -7.3757853507995605
    3. ' ,' → logprob: -9.125784873962402
    4. 'v' → logprob: -10.000784873962402
    5. ' v' → logprob: -12.375784873962402
    6. ',m' → logprob: -16.12578582763672
    7. ',
' → logprob: -16.12578582763672
    8. ')' → logprob: -17.12578582763672
    9. ',M' → logprob: -17.12578582763672
    10. '[' → logprob: -17.62578582763672

Token 267: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.023246990516781807
    2. ' v' → logprob: -3.773247003555298
    3. '	v' → logprob: -14.148246765136719
    4. ')v' → logprob: -14.648246765136719
    5. '[v' → logprob: -16.02324676513672
    6. '   ' → logprob: -16.14824676513672
    7. ')' → logprob: -17.52324676513672
    8. ',v' → logprob: -17.52324676513672
    9. '*v' → logprob: -17.77324676513672
    10. 've' → logprob: -17.77324676513672

Token 268: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.650518920039758e-06
    2. ')]' → logprob: -13.500003814697266
    3. ' ))' → logprob: -13.500003814697266
    4. '))
' → logprob: -15.250003814697266
    5. ' ' → logprob: -15.750003814697266
    6. ')' → logprob: -15.875003814697266
    7. '])' → logprob: -16.625003814697266
    8. ')))' → logprob: -16.750003814697266
    9. '   ' → logprob: -17.375003814697266
    10. ']))' → logprob: -18.125003814697266

Token 269: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024793600663542747
    2. ')' → logprob: -4.02479362487793
    3. ')]' → logprob: -5.02479362487793
    4. ' ]' → logprob: -10.64979362487793
    5. '(M' → logprob: -12.02479362487793
    6. '()]' → logprob: -12.27479362487793
    7. '   ' → logprob: -12.27479362487793
    8. ']
' → logprob: -12.89979362487793
    9. '])' → logprob: -13.27479362487793
    10. ' ' → logprob: -13.52479362487793

Token 270: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.061969365924596786
    2. ' M' → logprob: -2.81196928024292
    3. ' ' → logprob: -14.936969757080078
    4. '[M' → logprob: -15.186969757080078
    5. '(M' → logprob: -15.436969757080078
    6. '	M' → logprob: -15.811969757080078
    7. '<|end|>' → logprob: -15.936969757080078
    8. 'range' → logprob: -16.061969757080078
    9. '  ' → logprob: -16.061969757080078
    10. '[' → logprob: -16.686969757080078

Token 271: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.664371848164592e-05
    2. 'row' → logprob: -11.875016212463379
    3. '_Row' → logprob: -12.500016212463379
    4. '_' → logprob: -12.875016212463379
    5. '_ROW' → logprob: -13.125016212463379
    6. 'Row' → logprob: -14.625016212463379
    7. '<Row' → logprob: -15.625016212463379
    8. '-row' → logprob: -16.125017166137695
    9. '[row' → logprob: -16.250017166137695
    10. '[' → logprob: -16.375017166137695

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10025391727685928
    2. 'in' → logprob: -2.3502538204193115
    3. '(M' → logprob: -10.35025405883789
    4. ']' → logprob: -12.22525405883789
    5. ')' → logprob: -12.47525405883789
    6. ' ' → logprob: -13.10025405883789
    7. '<|end|>' → logprob: -13.60025405883789
    8. '(' → logprob: -14.10025405883789
    9. 'M' → logprob: -14.60025405883789
    10. 'import' → logprob: -14.97525405883789

Token 273: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0011783202644437551
    2. ' M' → logprob: -6.75117826461792
    3. '(M' → logprob: -11.876178741455078
    4. '[M' → logprob: -14.501178741455078
    5. '<M' → logprob: -15.501178741455078
    6. '=M' → logprob: -16.001178741455078
    7. '	M' → logprob: -16.876178741455078
    8. ',M' → logprob: -17.001178741455078
    9. '.M' → logprob: -17.751178741455078
    10. '[' → logprob: -17.751178741455078

Token 274: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.999452772201039e-05
    2. ' ]' → logprob: -11.125029563903809
    3. ')]' → logprob: -11.250029563903809
    4. '()]' → logprob: -13.750029563903809
    5. ']
' → logprob: -14.375029563903809
    6. ']

' → logprob: -16.000030517578125
    7. '<|end|>' → logprob: -16.500030517578125
    8. 'def' → logprob: -16.750030517578125
    9. '`]' → logprob: -16.875030517578125
    10. ']]' → logprob: -17.000030517578125

Token 275: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.7014437364414334e-05
    2. '@' → logprob: -11.87502670288086
    3. 'from' → logprob: -11.87502670288086
    4. '#' → logprob: -12.00002670288086
    5. 'class' → logprob: -13.12502670288086
    6. ')' → logprob: -13.37502670288086
    7. '
' → logprob: -14.00002670288086
    8. '```' → logprob: -14.62502670288086
    9. '<|end|>' → logprob: -14.75002670288086
    10. 'import' → logprob: -14.87502670288086

Token 276: ' T' (ID: 353)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.29917892813682556
    2. 'mat' → logprob: -2.6741788387298584
    3. 'main' → logprob: -3.0491788387298584
    4. 'pow' → logprob: -3.1741788387298584
    5. ' vec' → logprob: -4.5491790771484375
    6. 'vect' → logprob: -4.5491790771484375
    7. 'b' → logprob: -4.7991790771484375
    8. 'factor' → logprob: -4.9241790771484375
    9. 'solve' → logprob: -5.5491790771484375
    10. 'mod' → logprob: -5.5491790771484375

Token 277: '(M' (ID: 6103)
  Prédit: 'rans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rans' → logprob: -0.8720688223838806
    2. 'uple' → logprob: -2.1220688819885254
    3. 'ype' → logprob: -2.6220688819885254
    4. 'o' → logprob: -2.8720688819885254
    5. 'op' → logprob: -2.9970688819885254
    6. 'O' → logprob: -2.9970688819885254
    7. 'SP' → logprob: -3.3720688819885254
    8. 'r' → logprob: -4.122068881988525
    9. ' def' → logprob: -4.372068881988525
    10. 'h' → logprob: -4.497068881988525

Token 278: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08868063241243362
    2. '):
' → logprob: -2.7136807441711426
    3. ',' → logprob: -4.463680744171143
    4. ' ):' → logprob: -5.088680744171143
    5. ' ,' → logprob: -7.963680744171143
    6. ' ):
' → logprob: -8.213680267333984
    7. ')' → logprob: -8.713680267333984
    8. ' )' → logprob: -10.713680267333984
    9. '):
' → logprob: -11.088680267333984
    10. ',v' → logprob: -12.088680267333984

Token 279: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14487724006175995
    2. '   ' → logprob: -2.3948771953582764
    3. ' return' → logprob: -3.1448771953582764
    4. '[' → logprob: -8.019877433776855
    5. 'def' → logprob: -8.769877433776855
    6. '[
' → logprob: -10.644877433776855
    7. '	return' → logprob: -10.894877433776855
    8. ':return' → logprob: -10.894877433776855
    9. 'transpose' → logprob: -11.144877433776855
    10. '[[' → logprob: -11.144877433776855

Token 280: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007121934904716909
    2. ' return' → logprob: -7.2507123947143555
    3. '   ' → logprob: -13.625712394714355
    4. 'list' → logprob: -14.375712394714355
    5. 'zip' → logprob: -15.625712394714355
    6. '[' → logprob: -15.875712394714355
    7. ' ' → logprob: -15.875712394714355
    8. 'transpose' → logprob: -17.37571144104004
    9. '	return' → logprob: -17.50071144104004
    10. '  ' → logprob: -18.87571144104004

Token 281: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.580836296081543
    2. '[list' → logprob: -0.830836296081543
    3. '[' → logprob: -5.330836296081543
    4. ' list' → logprob: -10.830836296081543
    5. '[[' → logprob: -10.830836296081543
    6. '[len' → logprob: -13.330836296081543
    7. '[List' → logprob: -13.455836296081543
    8. '(list' → logprob: -13.705836296081543
    9. ' [' → logprob: -14.455836296081543
    10. '[m' → logprob: -15.580836296081543

Token 282: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00026538874953985214
    2. '[list' → logprob: -8.250265121459961
    3. ' list' → logprob: -12.750265121459961
    4. '[*' → logprob: -13.750265121459961
    5. '[' → logprob: -16.50026512145996
    6. '(list' → logprob: -16.87526512145996
    7. '=list' → logprob: -19.37526512145996
    8. '	list' → logprob: -19.37526512145996
    9. '*' → logprob: -20.12526512145996
    10. '.list' → logprob: -20.62526512145996

Token 283: '(col' (ID: 37070)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.4029243588447571
    2. '(x' → logprob: -1.1529242992401123
    3. '(i' → logprob: -4.402924537658691
    4. '(col' → logprob: -5.652924537658691
    5. '(r' → logprob: -8.902924537658691
    6. '(t' → logprob: -11.277924537658691
    7. 'row' → logprob: -11.402924537658691
    8. '(zip' → logprob: -11.902924537658691
    9. '(l' → logprob: -13.027924537658691
    10. '(z' → logprob: -13.527924537658691

Token 284: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27279531955718994
    2. '(M' → logprob: -1.64779531955719
    3. 'for' → logprob: -3.5227952003479004
    4. '(row' → logprob: -4.3977952003479
    5. ' for' → logprob: -6.0227952003479
    6. '(col' → logprob: -7.5227952003479
    7. '(zip' → logprob: -7.6477952003479
    8. 'row' → logprob: -7.8977952003479
    9. ']' → logprob: -9.647795677185059
    10. 'col' → logprob: -9.772795677185059

Token 285: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05537833273410797
    2. ' for' → logprob: -2.9303784370422363
    3. ')' → logprob: -7.805378437042236
    4. '(M' → logprob: -10.055377960205078
    5. '   ' → logprob: -11.555377960205078
    6. 'in' → logprob: -11.680377960205078
    7. ']' → logprob: -12.180377960205078
    8. ' ' → logprob: -12.305377960205078
    9. '(zip' → logprob: -12.555377960205078
    10. '	for' → logprob: -12.805377960205078

Token 286: ' col' (ID: 996)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.7182143330574036
    2. ' zip' → logprob: -0.7182143330574036
    3. 'col' → logprob: -3.843214273452759
    4. 'M' → logprob: -5.968214511871338
    5. ' M' → logprob: -7.718214511871338
    6. ' col' → logprob: -8.09321403503418
    7. '(zip' → logprob: -10.96821403503418
    8. ' ' → logprob: -13.59321403503418
    9. 'z' → logprob: -14.71821403503418
    10. '*' → logprob: -14.96821403503418

Token 287: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2519320547580719
    2. ' in' → logprob: -1.5019320249557495
    3. '	in' → logprob: -14.626932144165039
    4. 'n' → logprob: -14.626932144165039
    5. ' ' → logprob: -15.126932144165039
    6. ')' → logprob: -15.501932144165039
    7. 'inp' → logprob: -15.501932144165039
    8. 'ins' → logprob: -15.876932144165039
    9. 'In' → logprob: -16.12693214416504
    10. 's' → logprob: -16.25193214416504

Token 288: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.0009118211455643177
    2. ' zip' → logprob: -7.000911712646484
    3. '(zip' → logprob: -14.875911712646484
    4. '.zip' → logprob: -19.125911712646484
    5. '
' → logprob: -20.750911712646484
    6. '   ' → logprob: -21.000911712646484
    7. 'z' → logprob: -21.500911712646484
    8. '*' → logprob: -23.000911712646484
    9. '_zip' → logprob: -23.000911712646484
    10. ' ' → logprob: -23.250911712646484

Token 289: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -6.630610641877865e-06
    2. '*' → logprob: -12.000006675720215
    3. '(*)' → logprob: -14.875006675720215
    4. '(' → logprob: -17.1250057220459
    5. '*M' → logprob: -18.1250057220459
    6. '(*(' → logprob: -19.0000057220459
    7. '*T' → logprob: -20.2500057220459
    8. ' (*' → logprob: -20.6250057220459
    9. '```' → logprob: -21.6250057220459
    10. '__(*' → logprob: -21.6250057220459

Token 290: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00011594036914175376
    2. '(M' → logprob: -9.500116348266602
    3. ' M' → logprob: -10.125116348266602
    4. ')' → logprob: -14.500116348266602
    5. '[M' → logprob: -15.000116348266602
    6. '   ' → logprob: -16.6251163482666
    7. ')]' → logprob: -17.0001163482666
    8. '(' → logprob: -18.3751163482666
    9. '[' → logprob: -18.3751163482666
    10. '
' → logprob: -18.7501163482666

Token 291: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.610702363715973e-06
    2. ')' → logprob: -12.125009536743164
    3. '(M' → logprob: -12.625009536743164
    4. ')]
' → logprob: -14.750009536743164
    5. ']' → logprob: -14.750009536743164
    6. '))' → logprob: -17.625009536743164
    7. '()]' → logprob: -17.875009536743164
    8. ')}' → logprob: -18.125009536743164
    9. ')])' → logprob: -18.375009536743164
    10. ')],' → logprob: -18.750009536743164

Token 292: 'bin' (ID: 11893)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2056732475757599
    2. '<|end|>' → logprob: -1.7056732177734375
    3. '<|end|>' → logprob: -6.7056732177734375
    4. '#' → logprob: -6.9556732177734375
    5. '
' → logprob: -6.9556732177734375
    6. '```' → logprob: -7.3306732177734375
    7. 'class' → logprob: -8.705673217773438
    8. '[' → logprob: -9.955673217773438
    9. '\n' → logprob: -10.205673217773438
    10. 'newline' → logprob: -10.330673217773438

Token 293: 'r' (ID: 81)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0647039413452148
    2. 'omial' → logprob: -1.0647039413452148
    3. ')' → logprob: -1.6897039413452148
    4. 'ary' → logprob: -2.939703941345215
    5. '(int' → logprob: -3.564703941345215
    6. 'om' → logprob: -3.814703941345215
    7. 'ar' → logprob: -5.314703941345215
    8. '()' → logprob: -6.189703941345215
    9. '(
' → logprob: -6.189703941345215
    10. 'def' → logprob: -6.439703941345215

Token 294: ' =' (ID: 314)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03318095579743385
    2. 'ead' → logprob: -4.783181190490723
    3. 'ad' → logprob: -5.033181190490723
    4. 'ay' → logprob: -5.033181190490723
    5. 'ary' → logprob: -5.533181190490723
    6. 'ange' → logprob: -6.283181190490723
    7. 'ow' → logprob: -7.283181190490723
    8. 'ank' → logprob: -7.783181190490723
    9. 'ep' → logprob: -7.783181190490723
    10. 'ify' → logprob: -7.908181190490723

Token 295: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.005245141219347715
    2. ' lambda' → logprob: -5.380245208740234
    3. 'bin' → logprob: -7.630245208740234
    4. '(lambda' → logprob: -9.255245208740234
    5. 'int' → logprob: -10.880245208740234
    6. '=lambda' → logprob: -12.630245208740234
    7. 'lam' → logprob: -12.630245208740234
    8. '[' → logprob: -13.005245208740234
    9. 'ambda' → logprob: -13.255245208740234
    10. '0' → logprob: -13.255245208740234

Token 296: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10538610070943832
    2. ' x' → logprob: -2.3553860187530518
    3. 'n' → logprob: -5.605386257171631
    4. ' n' → logprob: -7.230386257171631
    5. 's' → logprob: -7.355386257171631
    6. ' s' → logprob: -9.230385780334473
    7. 'b' → logprob: -11.230385780334473
    8. 'int' → logprob: -12.480385780334473
    9. 'a' → logprob: -12.730385780334473
    10. ' b' → logprob: -13.480385780334473

Token 297: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011689694598317146
    2. ' x' → logprob: -4.88668966293335
    3. ' :' → logprob: -6.01168966293335
    4. 'x' → logprob: -6.63668966293335
    5. ':x' → logprob: -8.136690139770508
    6. ',' → logprob: -12.886690139770508
    7. ' bin' → logprob: -13.011690139770508
    8. 'f' → logprob: -13.136690139770508
    9. 'n' → logprob: -13.386690139770508
    10. ' ' → logprob: -13.511690139770508

Token 298: ' format' (ID: 6011)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.012311260215938091
    2. 'format' → logprob: -5.0123114585876465
    3. ' bin' → logprob: -5.2623114585876465
    4. ' format' → logprob: -7.8873114585876465
    5. 'f' → logprob: -11.887310981750488
    6. '   ' → logprob: -12.262310981750488
    7. '(bin' → logprob: -12.512310981750488
    8. 'str' → logprob: -13.262310981750488
    9. ' ' → logprob: -13.512310981750488
    10. '"' → logprob: -14.262310981750488

Token 299: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0014454723568633199
    2. '(' → logprob: -6.626445293426514
    3. '(bin' → logprob: -9.501445770263672
    4. 'x' → logprob: -10.626445770263672
    5. '<|end|>' → logprob: -11.126445770263672
    6. 'bin' → logprob: -13.501445770263672
    7. ' (' → logprob: -13.751445770263672
    8. '(int' → logprob: -13.876445770263672
    9. '(
' → logprob: -14.376445770263672
    10. '(abs' → logprob: -15.251445770263672

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047849188558757305
    2. '(x' → logprob: -5.629785060882568
    3. '(' → logprob: -7.629785060882568
    4. '[' → logprob: -8.12978458404541
    5. 'x' → logprob: -9.12978458404541
    6. ')' → logprob: -9.12978458404541
    7. ',x' → logprob: -9.37978458404541
    8. ' ,' → logprob: -10.50478458404541
    9. 'b' → logprob: -11.00478458404541
    10. '[x' → logprob: -11.75478458404541

Token 301: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.036075081676244736
    2. ''' → logprob: -3.4110751152038574
    3. '"' → logprob: -6.286075115203857
    4. ''x' → logprob: -8.5360746383667
    5. ''f' → logprob: -9.0360746383667
    6. ' '' → logprob: -9.1610746383667
    7. ''#' → logprob: -9.5360746383667
    8. ''r' → logprob: -10.7860746383667
    9. 'b' → logprob: -11.5360746383667
    10. ''a' → logprob: -11.6610746383667

Token 302: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007879876531660557
    2. '0' → logprob: -5.132879734039307
    3. ''b' → logprob: -6.507879734039307
    4. '032' → logprob: -8.257880210876465
    5. '016' → logprob: -9.757880210876465
    6. '08' → logprob: -10.382880210876465
    7. '036' → logprob: -10.882880210876465
    8. '030' → logprob: -11.257880210876465
    9. '020' → logprob: -11.507880210876465
    10. '026' → logprob: -11.632880210876465

Token 303: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.005968018900603056
    2. ')' → logprob: -5.13096809387207
    3. '').' → logprob: -11.50596809387207
    4. '')}' → logprob: -11.50596809387207
    5. ''),' → logprob: -12.13096809387207
    6. '}')' → logprob: -12.50596809387207
    7. '")' → logprob: -12.75596809387207
    8. '')]' → logprob: -12.88096809387207
    9. ''))' → logprob: -13.75596809387207
    10. '')
' → logprob: -14.38096809387207

Token 304: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004061421379446983
    2. '#' → logprob: -5.879061222076416
    3. ')' → logprob: -8.379061698913574
    4. 'class' → logprob: -9.129061698913574
    5. '<|end|>' → logprob: -9.254061698913574
    6. '\' → logprob: -9.379061698913574
    7. ' ' → logprob: -9.504061698913574
    8. '
' → logprob: -9.629061698913574
    9. ' def' → logprob: -9.754061698913574
    10. '\n' → logprob: -9.879061698913574

Token 305: ' bit' (ID: 3546)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7567095160484314
    2. ' ceil' → logprob: -1.6317095756530762
    3. 'main' → logprob: -2.381709575653076
    4. ' bit' → logprob: -2.631709575653076
    5. 'ceil' → logprob: -3.131709575653076
    6. 'bit' → logprob: -4.256709575653076
    7. ' factorial' → logprob: -4.256709575653076
    8. ' is' → logprob: -4.756709575653076
    9. ' solve' → logprob: -5.006709575653076
    10. ' pow' → logprob: -5.006709575653076

Token 306: 'count' (ID: 5420)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3611014783382416
    2. '_length' → logprob: -2.1111013889312744
    3. '_count' → logprob: -2.4861013889312744
    4. 'count' → logprob: -2.7361013889312744
    5. 'set' → logprob: -3.9861013889312744
    6. 'mask' → logprob: -5.4861016273498535
    7. '_mask' → logprob: -6.2361016273498535
    8. '_size' → logprob: -6.3611016273498535
    9. '_' → logprob: -6.4861016273498535
    10. 'cnt' → logprob: -7.2361016273498535

Token 307: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2293497771024704
    2. '(n' → logprob: -1.8543497323989868
    3. '(' → logprob: -3.3543498516082764
    4. ' (' → logprob: -4.354349613189697
    5. '(bin' → logprob: -8.604350090026855
    6. '(num' → logprob: -8.729350090026855
    7. '(number' → logprob: -8.854350090026855
    8. '(bit' → logprob: -9.854350090026855
    9. '(nb' → logprob: -11.604350090026855
    10. '(value' → logprob: -11.854350090026855

Token 308: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003281452227383852
    2. ' ):' → logprob: -5.753281593322754
    3. ')' → logprob: -10.128281593322754
    4. '):
' → logprob: -10.378281593322754
    5. ',' → logprob: -10.753281593322754
    6. '(x' → logprob: -12.753281593322754
    7. ':' → logprob: -12.878281593322754
    8. ' )' → logprob: -13.878281593322754
    9. 'x' → logprob: -14.128281593322754
    10. ' ' → logprob: -14.128281593322754

Token 309: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6812742352485657
    2. '   ' → logprob: -1.181274175643921
    3. 'return' → logprob: -1.681274175643921
    4. 'bin' → logprob: -7.1812744140625
    5. ' bin' → logprob: -8.6812744140625
    6. ' ' → logprob: -10.6812744140625
    7. '	return' → logprob: -10.6812744140625
    8. '    ' → logprob: -11.1812744140625
    9. 'b' → logprob: -12.5562744140625
    10. '  ' → logprob: -12.8062744140625

Token 310: ' x' (ID: 1215)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008618593215942383
    2. ' return' → logprob: -5.008618354797363
    3. 'bin' → logprob: -6.508618354797363
    4. '   ' → logprob: -7.883618354797363
    5. 'x' (adapté à ' x') → logprob: -10.883618354797363
    6. 'count' → logprob: -11.258618354797363
    7. ' bin' → logprob: -14.258618354797363
    8. 'cnt' → logprob: -14.758618354797363
    9. '	return' → logprob: -14.883618354797363
    10. ' ' → logprob: -14.883618354797363

Token 311: ' -=' (ID: 12583)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.041954249143600464
    2. '&' → logprob: -3.416954278945923
    3. ' &=' → logprob: -5.666954040527344
    4. ' =' → logprob: -6.041954040527344
    5. '-=' → logprob: -6.166954040527344
    6. '.bit' → logprob: -8.791954040527344
    7. ' -=' → logprob: -10.041954040527344
    8. '+=' → logprob: -10.666954040527344
    9. '-' → logprob: -10.916954040527344
    10. '.=' → logprob: -11.041954040527344

Token 312: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.028607985004782677
    2. 'x' → logprob: -4.2786078453063965
    3. ' (' → logprob: -4.2786078453063965
    4. '1' → logprob: -8.278608322143555
    5. '(' → logprob: -8.903608322143555
    6. ' x' → logprob: -9.778608322143555
    7. '((' → logprob: -10.653608322143555
    8. ' ' → logprob: -12.403608322143555
    9. '(bin' → logprob: -13.403608322143555
    10. '(i' → logprob: -14.153608322143555

Token 313: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4764004051685333
    2. '(x' → logprob: -0.9764003753662109
    3. ' (' → logprob: -6.601400375366211
    4. ' x' → logprob: -6.976400375366211
    5. '(' → logprob: -10.601400375366211
    6. '((' → logprob: -13.226400375366211
    7. ' ' → logprob: -13.726400375366211
    8. '   ' → logprob: -15.351400375366211
    9. '	x' → logprob: -15.351400375366211
    10. '_x' → logprob: -15.976400375366211

Token 314: ' >>' (ID: 6832)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.041124824434518814
    2. '>>' → logprob: -3.5411248207092285
    3. ' &' → logprob: -4.5411248207092285
    4. '&gt' → logprob: -7.5411248207092285
    5. ' >>' → logprob: -10.666125297546387
    6. '>' → logprob: -10.916125297546387
    7. '&(' → logprob: -10.916125297546387
    8. '&r' → logprob: -11.541125297546387
    9. '&t' → logprob: -11.666125297546387
    10. '>>>' → logprob: -11.791125297546387

Token 315: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '
' → logprob: -17.125009536743164
    4. '   ' → logprob: -18.250009536743164
    5. '۱' → logprob: -19.000009536743164
    6. '  ' → logprob: -19.500009536743164
    7. '１' → logprob: -19.500009536743164
    8. '' → logprob: -19.500009536743164
    9. '

' → logprob: -19.875009536743164
    10. ' ' → logprob: -20.000009536743164

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '１' → logprob: -18.500001907348633
    4. '۱' → logprob: -18.500001907348633
    5. '   ' → logprob: -19.250001907348633
    6. '१' → logprob: -19.750001907348633
    7. '' → logprob: -19.875001907348633
    8. '১' → logprob: -20.000001907348633
    9. '01' → logprob: -20.437501907348633
    10. '
' → logprob: -20.562501907348633

Token 317: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028576893964782357
    2. ' )' → logprob: -8.875286102294922
    3. ')&' → logprob: -8.875286102294922
    4. '&' → logprob: -12.125286102294922
    5. ')
' → logprob: -16.125286102294922
    6. '   ' → logprob: -16.375286102294922
    7. ' &' → logprob: -16.375286102294922
    8. '    ' → logprob: -16.750286102294922
    9. '0' → logprob: -16.750286102294922
    10. ']' → logprob: -17.000286102294922

Token 318: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.0033252881839871407
    2. ' &' → logprob: -5.753325462341309
    3. 'x' → logprob: -9.503325462341309
    4. '&(' → logprob: -11.003325462341309
    5. '&nbsp' → logprob: -11.503325462341309
    6. ')&' → logprob: -11.503325462341309
    7. ')' → logprob: -12.253325462341309
    8. '&i' → logprob: -12.503325462341309
    9. '&B' → logprob: -12.503325462341309
    10. '&amp' → logprob: -12.628325462341309

Token 319: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '０' → logprob: -18.375
    4. '143' → logprob: -18.375
    5. '۰' → logprob: -18.5
    6. 'x' → logprob: -19.5
    7. '373' → logprob: -19.75
    8. '573' → logprob: -20.625
    9. '372' → logprob: -20.625
    10. '077' → logprob: -20.875

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.875000953674316
    3. '143' → logprob: -16.75
    4. '613' → logprob: -16.75
    5. '573' → logprob: -17.625
    6. '373' → logprob: -17.625
    7. '366' → logprob: -18.0
    8. '614' → logprob: -18.0
    9. 'x' → logprob: -18.125
    10. '372' → logprob: -18.25

Token 321: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07168594747781754
    2. 'x' → logprob: -2.821686029434204
    3. '555' → logprob: -4.696685791015625
    4. '333' → logprob: -8.821685791015625
    5. '360' → logprob: -9.196685791015625
    6. '553' → logprob: -9.696685791015625
    7. '361' → logprob: -10.321685791015625
    8. '366' → logprob: -10.696685791015625
    9. '355' → logprob: -10.821685791015625
    10. '573' → logprob: -10.946685791015625

Token 322: '555' (ID: 22275)
  Prédit: '555'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -4.024604277219623e-05
    2. '333' → logprob: -10.250040054321289
    3. '777' → logprob: -12.375040054321289
    4. '5' → logprob: -14.375040054321289
    5. 'x' → logprob: -16.25004005432129
    6. '355' → logprob: -17.00004005432129
    7. '553' → logprob: -18.12504005432129
    8. '999' → logprob: -18.12504005432129
    9. '666' → logprob: -18.12504005432129
    10. '155' → logprob: -18.12504005432129

Token 323: '555' (ID: 22275)
  Prédit: '555'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -4.320199877838604e-07
    2. '55' → logprob: -15.0
    3. '5' → logprob: -16.25
    4. '559' → logprob: -19.75
    5. '551' → logprob: -20.625
    6. 'aaaa' → logprob: -21.0
    7. '055' → logprob: -21.5
    8. '595' → logprob: -21.875
    9. '455' → logprob: -22.125
    10. '557' → logprob: -22.25

Token 324: '555' (ID: 22275)
  Prédit: '55'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '55' → logprob: -0.014164687134325504
    2. '555' → logprob: -4.264164924621582
    3. '5' → logprob: -14.014164924621582
    4. '559' → logprob: -15.139164924621582
    5. '59' → logprob: -16.639163970947266
    6. '556' → logprob: -18.514163970947266
    7. '15' → logprob: -18.764163970947266
    8. '551' → logprob: -19.014163970947266
    9. '155' → logprob: -19.389163970947266
    10. '553' → logprob: -20.139163970947266

Token 325: '555' (ID: 22275)
  Prédit: '555'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.00023333763238042593
    2. '55' → logprob: -8.37523365020752
    3. '5' → logprob: -13.12523365020752
    4. '559' → logprob: -14.37523365020752
    5. '595' → logprob: -16.250232696533203
    6. '155' → logprob: -18.000232696533203
    7. '055' → logprob: -19.250232696533203
    8. '355' → logprob: -19.250232696533203
    9. '```' → logprob: -19.375232696533203
    10. '553' → logprob: -19.625232696533203

Token 326: '555' (ID: 22275)
  Prédit: '555'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -6.659005157416686e-05
    2. '55' → logprob: -9.625066757202148
    3. '559' → logprob: -15.125066757202148
    4. '5' → logprob: -15.500066757202148
    5. '551' → logprob: -18.00006675720215
    6. '155' → logprob: -18.50006675720215
    7. '553' → logprob: -18.62506675720215
    8. '455' → logprob: -18.87506675720215
    9. '595' → logprob: -19.00006675720215
    10. '556' → logprob: -19.25006675720215

Token 327: '5' (ID: 20)
  Prédit: '555'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.07626429945230484
    2. '55' → logprob: -2.7012643814086914
    3. '5' → logprob: -5.076264381408691
    4. '559' → logprob: -10.076264381408691
    5. '59' → logprob: -11.451264381408691
    6. '455' → logprob: -12.326264381408691
    7. '595' → logprob: -12.701264381408691
    8. '155' → logprob: -14.451264381408691
    9. '355' → logprob: -14.701264381408691
    10. '45' → logprob: -14.701264381408691

Token 328: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008630522526800632
    2. ' ' → logprob: -5.508630752563477
    3. 'x' → logprob: -6.633630752563477
    4. ')' → logprob: -7.383630752563477
    5. '
' → logprob: -7.758630752563477
    6. '  ' → logprob: -8.008630752563477
    7. ',' → logprob: -8.383630752563477
    8. 'def' → logprob: -8.633630752563477
    9. '|' → logprob: -8.883630752563477
    10. '(' → logprob: -9.008630752563477

Token 330: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00029065259150229394
    2. ' x' → logprob: -8.250290870666504
    3. '(x' → logprob: -10.750290870666504
    4. '   ' → logprob: -12.375290870666504
    5. '(' → logprob: -13.250290870666504
    6. '	x' → logprob: -14.125290870666504
    7. ' ' → logprob: -14.250290870666504
    8. 'return' → logprob: -15.125290870666504
    9. ' (' → logprob: -15.500290870666504
    10. '  ' → logprob: -17.375289916992188

Token 331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014199002645909786
    2. ' =' → logprob: -4.2641987800598145
    3. '-=' → logprob: -10.389199256896973
    4. '&' → logprob: -13.139199256896973
    5. ' ' → logprob: -13.639199256896973
    6. ' &=' → logprob: -14.514199256896973
    7. ' -=' → logprob: -14.764199256896973
    8. '=(' → logprob: -15.764199256896973
    9. '+=' → logprob: -15.889199256896973
    10. '-' → logprob: -16.139198303222656

Token 332: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008635488338768482
    2. ' (' → logprob: -4.758635520935059
    3. '(' → logprob: -11.383635520935059
    4. ' ' → logprob: -11.883635520935059
    5. '((' → logprob: -13.133635520935059
    6. 'x' → logprob: -15.133635520935059
    7. '  ' → logprob: -16.508634567260742
    8. '(
' → logprob: -16.508634567260742
    9. '(input' → logprob: -16.508634567260742
    10. '(int' → logprob: -16.508634567260742

Token 333: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3875594735145569
    2. 'x' → logprob: -1.137559413909912
    3. ' x' → logprob: -8.01255989074707
    4. ' (' → logprob: -8.01255989074707
    5. '(' → logprob: -11.26255989074707
    6. ' ' → logprob: -12.26255989074707
    7. '((' → logprob: -12.88755989074707
    8. '   ' → logprob: -13.13755989074707
    9. '	x' → logprob: -13.26255989074707
    10. '(
' → logprob: -14.38755989074707

Token 334: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.10024581849575043
    2. ' &' → logprob: -2.350245714187622
    3. '&(' → logprob: -10.600245475769043
    4. '>>' → logprob: -12.350245475769043
    5. '-' → logprob: -12.600245475769043
    6. ' ' → logprob: -13.975245475769043
    7. '&
' → logprob: -13.975245475769043
    8. '&r' → logprob: -14.225245475769043
    9. '|' → logprob: -14.225245475769043
    10. '&s' → logprob: -14.475245475769043

Token 335: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.0000057220459
    4. 'x' → logprob: -19.1250057220459
    5. '    ' → logprob: -19.6250057220459
    6. '```' → logprob: -19.6250057220459
    7. '  ' → logprob: -19.7500057220459
    8. '=' → logprob: -20.6250057220459
    9. '...' → logprob: -20.6875057220459
    10. '۰' → logprob: -20.8125057220459

Token 336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -19.75
    4. 'x' → logprob: -19.875
    5. '    ' → logprob: -20.75
    6. '```' → logprob: -20.75
    7. '０' → logprob: -21.25
    8. '۰' → logprob: -21.3125
    9. '...' → logprob: -21.375
    10. '  ' → logprob: -21.5625

Token 337: 'x' (ID: 87)
  Prédit: '333'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '333' → logprob: -0.0994655191898346
    2. 'x' → logprob: -2.4744656085968018
    3. '366' → logprob: -5.224465370178223
    4. '666' → logprob: -5.974465370178223
    5. '555' → logprob: -6.849465370178223
    6. '=' → logprob: -8.724465370178223
    7. '733' → logprob: -8.724465370178223
    8. '369' → logprob: -8.724465370178223
    9. '```' → logprob: -8.849465370178223
    10. '373' → logprob: -8.974465370178223

Token 338: '333' (ID: 15517)
  Prédit: '333'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '333' → logprob: -1.6286106983898208e-05
    2. '555' → logprob: -11.750016212463379
    3. '336' → logprob: -12.750016212463379
    4. '666' → logprob: -13.125016212463379
    5. '366' → logprob: -13.375016212463379
    6. '373' → logprob: -14.875016212463379
    7. 'AAAAAAAA' → logprob: -14.875016212463379
    8. 'aaaaaaaa' → logprob: -15.000016212463379
    9. '369' → logprob: -15.500016212463379
    10. '33' → logprob: -16.000017166137695

Token 339: '333' (ID: 15517)
  Prédit: '333'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '333' → logprob: -2.856408536899835e-05
    2. '3' → logprob: -10.500028610229492
    3. '555' → logprob: -14.625028610229492
    4. '33' → logprob: -15.250028610229492
    5. '533' → logprob: -16.375028610229492
    6. '```' → logprob: -16.875028610229492
    7. '335' → logprob: -17.125028610229492
    8. '355' → logprob: -17.125028610229492
    9. '033' → logprob: -18.750028610229492
    10. '343' → logprob: -18.875028610229492

Token 340: '333' (ID: 15517)
  Prédit: '333'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '333' → logprob: -3.380904672667384e-05
    2. '3' → logprob: -10.875033378601074
    3. '33' → logprob: -11.250033378601074
    4. '_' → logprob: -13.750033378601074
    5. '335' → logprob: -14.750033378601074
    6. '334' → logprob: -16.62503433227539
    7. '933' → logprob: -16.62503433227539
    8. '033' → logprob: -17.00003433227539
    9. '003' → logprob: -17.37503433227539
    10. '555' → logprob: -17.62503433227539

Token 341: '333' (ID: 15517)
  Prédit: '333'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '333' → logprob: -1.6286106983898208e-05
    2. '3' → logprob: -11.125016212463379
    3. '33' → logprob: -13.875016212463379
    4. '555' → logprob: -15.375016212463379
    5. '_' → logprob: -16.000017166137695
    6. '666' → logprob: -17.500017166137695
    7. '033' → logprob: -17.875017166137695
    8. 'cccc' → logprob: -18.000017166137695
    9. '933' → logprob: -18.375017166137695
    10. '335' → logprob: -18.750017166137695

Token 342: '333' (ID: 15517)
  Prédit: '333'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '333' → logprob: -1.3856492842023727e-06
    2. '3' → logprob: -13.625000953674316
    3. '555' → logprob: -16.625001907348633
    4. '33' → logprob: -16.625001907348633
    5. '_' → logprob: -18.000001907348633
    6. '335' → logprob: -18.750001907348633
    7. '...' → logprob: -20.000001907348633
    8. ')' → logprob: -20.500001907348633
    9. '033' → logprob: -20.625001907348633
    10. '353' → logprob: -20.750001907348633

Token 343: '3' (ID: 18)
  Prédit: '333'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '333' → logprob: -0.0008192769018933177
    2. '33' → logprob: -7.250819206237793
    3. '555' → logprob: -9.625819206237793
    4. '335' → logprob: -10.500819206237793
    5. '3' → logprob: -11.125819206237793
    6. '355' → logprob: -15.000819206237793
    7. ')' → logprob: -15.500819206237793
    8. '353' → logprob: -15.625819206237793
    9. '533' → logprob: -15.875819206237793
    10. '553' → logprob: -16.50082015991211

Token 344: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001532401074655354
    2. ' )' → logprob: -8.875153541564941
    3. '   ' → logprob: -12.125153541564941
    4. ')+' → logprob: -13.125153541564941
    5. ')>>' → logprob: -13.375153541564941
    6. ' ' → logprob: -13.875153541564941
    7. '```' → logprob: -13.875153541564941
    8. ')
' → logprob: -14.250153541564941
    9. ')<<' → logprob: -14.500153541564941
    10. ')+(' → logprob: -14.500153541564941

Token 345: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10558273643255234
    2. ' +' → logprob: -2.3555827140808105
    3. '   ' → logprob: -5.8555827140808105
    4. '|' → logprob: -6.8555827140808105
    5. ')' → logprob: -7.1055827140808105
    6. ' ' → logprob: -8.355583190917969
    7. '  ' → logprob: -9.230583190917969
    8. ' |' → logprob: -9.605583190917969
    9. ')+' → logprob: -9.730583190917969
    10. '+(' → logprob: -10.355583190917969

Token 346: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0016365008195862174
    2. ' ((' → logprob: -6.501636505126953
    3. '(x' → logprob: -9.001636505126953
    4. ' ' → logprob: -11.876636505126953
    5. ' (' → logprob: -12.876636505126953
    6. '(' → logprob: -13.626636505126953
    7. '  ' → logprob: -15.751636505126953
    8. '   ' → logprob: -16.376636505126953
    9. '[(' → logprob: -16.501636505126953
    10. '(
' → logprob: -17.501636505126953

Token 347: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007170771714299917
    2. '(x' → logprob: -7.2507171630859375
    3. ' x' → logprob: -11.875717163085938
    4. ' (' → logprob: -16.250717163085938
    5. ')x' → logprob: -17.250717163085938
    6. '	x' → logprob: -18.000717163085938
    7. '{x' → logprob: -18.625717163085938
    8. '(' → logprob: -18.750717163085938
    9. '((' → logprob: -19.000717163085938
    10. '"x' → logprob: -19.250717163085938

Token 348: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.0007114782347343862
    2. ' >>' → logprob: -7.250711441040039
    3. '>>>' → logprob: -13.750711441040039
    4. ' ' → logprob: -15.500711441040039
    5. '>' → logprob: -15.875711441040039
    6. '>>(' → logprob: -16.75071144104004
    7. '>>
' → logprob: -16.75071144104004
    8. ')>>' → logprob: -17.50071144104004
    9. '>>

' → logprob: -17.75071144104004
    10. '>>)' → logprob: -18.00071144104004

Token 349: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0059287971816957
    2. ' ' → logprob: -5.130928993225098
    3. '  ' → logprob: -17.25592803955078
    4. '   ' → logprob: -18.38092803955078
    5. '6' → logprob: -19.00592803955078
    6. '    ' → logprob: -19.13092803955078
    7. '
' → logprob: -19.38092803955078
    8. '```' → logprob: -19.56842803955078
    9. ' ' → logprob: -19.69342803955078
    10. '4' → logprob: -19.75592803955078

Token 350: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.375085830688477
    3. '22' → logprob: -15.750085830688477
    4. '222' → logprob: -16.812585830688477
    5. '  ' → logprob: -17.125085830688477
    6. '26' → logprob: -17.500085830688477
    7. '4' → logprob: -17.500085830688477
    8. '   ' → logprob: -17.562585830688477
    9. '```' → logprob: -17.875085830688477
    10. '24' → logprob: -18.250085830688477

Token 351: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4974866644479334e-05
    2. ' )' → logprob: -11.375015258789062
    3. ')&' → logprob: -12.625015258789062
    4. '```' → logprob: -17.500015258789062
    5. '0' → logprob: -17.875015258789062
    6. 'x' → logprob: -18.000015258789062
    7. ' ' → logprob: -18.375015258789062
    8. ')
' → logprob: -18.625015258789062
    9. '
' → logprob: -18.625015258789062
    10. '）' → logprob: -18.750015258789062

Token 352: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016272008419036865
    2. '&' → logprob: -4.766272068023682
    3. ')&' → logprob: -4.891272068023682
    4. ' &' → logprob: -9.766271591186523
    5. ' )' → logprob: -9.891271591186523
    6. '&)' → logprob: -12.516271591186523
    7. '0' → logprob: -14.141271591186523
    8. '```' → logprob: -14.266271591186523
    9. '>&' → logprob: -14.766271591186523
    10. '&amp' → logprob: -14.891271591186523

Token 353: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -19.625003814697266
    4. '  ' → logprob: -20.000003814697266
    5. '```' → logprob: -20.125003814697266
    6. '۰' → logprob: -20.500003814697266
    7. 'x' → logprob: -20.750003814697266
    8. '    ' → logprob: -21.812503814697266
    9. '
' → logprob: -21.875003814697266
    10. '  ' → logprob: -22.187503814697266

Token 354: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '  ' → logprob: -20.125001907348633
    4. '```' → logprob: -20.250001907348633
    5. '۰' → logprob: -20.750001907348633
    6. '   ' → logprob: -21.375001907348633
    7. 'x' → logprob: -22.000001907348633
    8. '...' → logprob: -22.125001907348633
    9. '[' → logprob: -22.437501907348633
    10. '#' → logprob: -22.500001907348633

Token 355: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.15310683415737e-05
    2. '333' → logprob: -10.750021934509277
    3. 'b' → logprob: -17.00002098083496
    4. 'xc' → logprob: -17.87502098083496
    5. 'xf' → logprob: -18.75002098083496
    6. 'xd' → logprob: -19.00002098083496
    7. '
' → logprob: -19.25002098083496
    8. ' ' → logprob: -19.50002098083496
    9. '0' → logprob: -19.87502098083496
    10. ''x' → logprob: -20.25002098083496

Token 356: '333' (ID: 15517)
  Prédit: '333'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '333' → logprob: -0.005283799953758717
    2. '0' → logprob: -5.255283832550049
    3. 'cccc' → logprob: -10.50528335571289
    4. '3' → logprob: -10.88028335571289
    5. ' ' → logprob: -13.00528335571289
    6. 'CCCC' → logprob: -14.50528335571289
    7. '``' → logprob: -15.38028335571289
    8. 'aaaaaaaa' → logprob: -15.75528335571289
    9. '111' → logprob: -16.38028335571289
    10. '```' → logprob: -16.50528335571289

Token 357: '333' (ID: 15517)
  Prédit: '333'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '333' → logprob: -5.5577775128767826e-06
    2. '3' → logprob: -12.125005722045898
    3. '33' → logprob: -18.7500057220459
    4. '033' → logprob: -18.8750057220459
    5. 'cccc' → logprob: -19.3750057220459
    6. '```' → logprob: -19.8750057220459
    7. ' ' → logprob: -20.0000057220459
    8. '330' → logprob: -20.1250057220459
    9. '343' → logprob: -21.1250057220459
    10. '433' → logprob: -21.3750057220459

Token 358: '333' (ID: 15517)
  Prédit: '333'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '333' → logprob: -2.935296834039036e-06
    2. '3' → logprob: -12.75000286102295
    3. '33' → logprob: -17.750003814697266
    4. ' ' → logprob: -18.125003814697266
    5. '033' → logprob: -19.750003814697266
    6. '```' → logprob: -20.000003814697266
    7. '_' → logprob: -20.500003814697266
    8. 'cccc' → logprob: -20.625003814697266
    9. '...' → logprob: -21.500003814697266
    10. '331' → logprob: -21.750003814697266

Token 359: '333' (ID: 15517)
  Prédit: '333'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '333' → logprob: -1.9266199160483666e-05
    2. '3' → logprob: -10.875019073486328
    3. '33' → logprob: -15.250019073486328
    4. 'cccc' → logprob: -18.375019073486328
    5. ' ' → logprob: -18.500019073486328
    6. '```' → logprob: -19.375019073486328
    7. '...' → logprob: -20.000019073486328
    8. '033' → logprob: -20.625019073486328
    9. '_' → logprob: -20.875019073486328
    10. '335' → logprob: -21.000019073486328

Token 360: '333' (ID: 15517)
  Prédit: '333'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '333' → logprob: -0.00318163656629622
    2. '3' → logprob: -5.753181457519531
    3. '33' → logprob: -12.503181457519531
    4. 'cccc' → logprob: -16.00318145751953
    5. ' ' → logprob: -17.25318145751953
    6. '335' → logprob: -17.37818145751953
    7. '331' → logprob: -17.50318145751953
    8. '111' → logprob: -18.25318145751953
    9. '330' → logprob: -18.37818145751953
    10. '```' → logprob: -18.75318145751953

Token 361: '3' (ID: 18)
  Prédit: '333'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '333' → logprob: -0.3875051736831665
    2. '3' → logprob: -1.3875051736831665
    3. '33' → logprob: -2.637505054473877
    4. '335' → logprob: -11.387505531311035
    5. '334' → logprob: -13.887505531311035
    6. '336' → logprob: -14.012505531311035
    7. '339' → logprob: -14.762505531311035
    8. '330' → logprob: -14.762505531311035
    9. '331' → logprob: -15.137505531311035
    10. ')' → logprob: -15.762505531311035

Token 362: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6937966346740723
    2. ')
' → logprob: -0.6937966346740723
    3. '   ' → logprob: -7.443796634674072
    4. ')
' → logprob: -10.318796157836914
    5. ' )
' → logprob: -11.318796157836914
    6. ')

' → logprob: -12.068796157836914
    7. ' )' → logprob: -12.943796157836914
    8. '  ' → logprob: -13.318796157836914
    9. '```' → logprob: -13.443796157836914
    10. ' ' → logprob: -13.568796157836914

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01822005957365036
    2. 'x' → logprob: -4.018219947814941
    3. '```' → logprob: -10.143219947814941
    4. ' x' → logprob: -10.518219947814941
    5. '    
' → logprob: -13.268219947814941
    6. '
' → logprob: -13.893219947814941
    7. '``' → logprob: -14.518219947814941
    8. 'return' → logprob: -15.268219947814941
    9. '	x' → logprob: -15.768219947814941
    10. ' ' → logprob: -16.393220901489258

Token 364: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.006925181020051241
    2. '   ' → logprob: -5.006925106048584
    3. ' x' → logprob: -8.506925582885742
    4. '```' → logprob: -12.131925582885742
    5. 'return' → logprob: -13.631925582885742
    6. '``' → logprob: -14.881925582885742
    7. '    
' → logprob: -15.381925582885742
    8. '
' → logprob: -15.506925582885742
    9. ' ' → logprob: -15.756925582885742
    10. '	x' → logprob: -16.006925582885742

Token 365: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06996133178472519
    2. ' =' → logprob: -2.6949613094329834
    3. ' &=' → logprob: -11.569961547851562
    4. '&' → logprob: -11.694961547851562
    5. ' ' → logprob: -12.944961547851562
    6. '=(' → logprob: -13.194961547851562
    7. '+=' → logprob: -13.944961547851562
    8. '-=' → logprob: -14.569961547851562
    9. '=
' → logprob: -14.819961547851562
    10. '   ' → logprob: -15.069961547851562

Token 366: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008618354797363281
    2. ' (' → logprob: -4.758618354797363
    3. ' ' → logprob: -12.633618354797363
    4. '   ' → logprob: -14.633618354797363
    5. '  ' → logprob: -16.633617401123047
    6. '(' → logprob: -17.383617401123047
    7. '((' → logprob: -17.758617401123047
    8. '(xx' → logprob: -18.258617401123047
    9. '(input' → logprob: -18.633617401123047
    10. '(a' → logprob: -19.883617401123047

Token 367: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5763478875160217
    2. 'x' → logprob: -0.8263478875160217
    3. ' (' → logprob: -7.951347827911377
    4. ' x' → logprob: -9.826348304748535
    5. '0' → logprob: -14.451348304748535
    6. '   ' → logprob: -14.701348304748535
    7. '(' → logprob: -14.826348304748535
    8. ' ' → logprob: -14.826348304748535
    9. '```' → logprob: -15.951348304748535
    10. '((' → logprob: -16.20134735107422

Token 368: ' +' (ID: 659)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.011048642918467522
    2. '&' → logprob: -4.511048793792725
    3. ' &
' → logprob: -14.886048316955566
    4. ' ' → logprob: -15.011048316955566
    5. '>>' → logprob: -16.386049270629883
    6. ' >>' → logprob: -16.886049270629883
    7. '&
' → logprob: -17.511049270629883
    8. ' +' → logprob: -18.011049270629883
    9. '＆' → logprob: -18.511049270629883
    10. '&nbsp' → logprob: -18.636049270629883

Token 369: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06205608323216438
    2. ' (' → logprob: -2.812056064605713
    3. '((' → logprob: -9.562056541442871
    4. ' ' → logprob: -11.312056541442871
    5. ' ((' → logprob: -12.437056541442871
    6. '   ' → logprob: -14.312056541442871
    7. '  ' → logprob: -14.812056541442871
    8. '(' → logprob: -15.062056541442871
    9. '1' → logprob: -15.312056541442871
    10. '0' → logprob: -16.437055587768555

Token 370: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00010437761375214905
    2. ' (' → logprob: -9.750103950500488
    3. 'x' → logprob: -10.000103950500488
    4. '(' → logprob: -15.125103950500488
    5. '((' → logprob: -15.125103950500488
    6. ' x' → logprob: -17.000104904174805
    7. ' ' → logprob: -17.000104904174805
    8. '   ' → logprob: -19.125104904174805
    9. '(
' → logprob: -19.500104904174805
    10. '```' → logprob: -19.625104904174805

Token 371: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -3.726595241460018e-05
    2. ' >>' → logprob: -10.25003719329834
    3. '>' → logprob: -13.25003719329834
    4. '>>>' → logprob: -16.125038146972656
    5. ' ' → logprob: -18.750038146972656
    6. '>>
' → logprob: -19.625038146972656
    7. '>>)' → logprob: -19.750038146972656
    8. '>>(' → logprob: -20.250038146972656
    9. '>>,' → logprob: -20.625038146972656
    10. '>>&' → logprob: -20.750038146972656

Token 372: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '8' → logprob: -18.125051498413086
    4. '  ' → logprob: -20.375051498413086
    5. '6' → logprob: -21.125051498413086
    6. '   ' → logprob: -21.500051498413086
    7. '```' → logprob: -21.500051498413086
    8. '44' → logprob: -21.875051498413086
    9. '40' → logprob: -22.000051498413086
    10. '４' → logprob: -22.125051498413086

Token 373: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '8' → logprob: -19.000003814697266
    4. '```' → logprob: -19.625003814697266
    5. '  ' → logprob: -20.750003814697266
    6. '   ' → logprob: -21.125003814697266
    7. '４' → logprob: -21.125003814697266
    8. '۴' → logprob: -21.250003814697266
    9. '४' → logprob: -21.250003814697266
    10. '' → logprob: -21.625003814697266

Token 374: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ' )' → logprob: -11.62501049041748
    3. ')&' → logprob: -13.75001049041748
    4. '()' → logprob: -16.000011444091797
    5. '0' → logprob: -16.375011444091797
    6. '&' → logprob: -16.500011444091797
    7. '   ' → logprob: -16.625011444091797
    8. ' ' → logprob: -16.750011444091797
    9. 'x' → logprob: -16.875011444091797
    10. '())' → logprob: -17.500011444091797

Token 375: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.1003701463341713
    2. '&' → logprob: -2.350370168685913
    3. '   ' → logprob: -8.850370407104492
    4. '0' → logprob: -11.975370407104492
    5. ' ' → logprob: -11.975370407104492
    6. ')' → logprob: -13.350370407104492
    7. ' ' → logprob: -13.475370407104492
    8. ' &
' → logprob: -13.850370407104492
    9. ')&' → logprob: -13.975370407104492
    10. '&amp' → logprob: -14.100370407104492

Token 376: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.000019073486328
    4. '  ' → logprob: -16.375019073486328
    5. '```' → logprob: -17.125019073486328
    6. '    ' → logprob: -18.250019073486328
    7. '
' → logprob: -18.625019073486328
    8. '۰' → logprob: -19.250019073486328
    9. '	' → logprob: -19.375019073486328
    10. '``' → logprob: -19.437519073486328

Token 377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '```' → logprob: -17.750001907348633
    5. '
' → logprob: -18.625001907348633
    6. '``' → logprob: -19.062501907348633
    7. '`' → logprob: -19.250001907348633
    8. '۰' → logprob: -19.312501907348633
    9. '  ' → logprob: -19.375001907348633
    10. '000' → logprob: -19.687501907348633

Token 378: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00045736716128885746
    2. 'x' → logprob: -7.750457286834717
    3. '_' → logprob: -11.375457763671875
    4. ' ' → logprob: -12.000457763671875
    5. '=' → logprob: -12.625457763671875
    6. '#' → logprob: -13.000457763671875
    7. '```' → logprob: -13.750457763671875
    8. '۰' → logprob: -14.375457763671875
    9. '``' → logprob: -14.500457763671875
    10. '   ' → logprob: -15.000457763671875

Token 379: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.632542913896032e-05
    2. 'f' → logprob: -10.125046730041504
    3. 'F' → logprob: -12.000046730041504
    4. '070' → logprob: -18.375045776367188
    5. '_F' → logprob: -18.500045776367188
    6. ''f' → logprob: -18.750045776367188
    7. '``' → logprob: -18.875045776367188
    8. ' ' → logprob: -19.000045776367188
    9. '_' → logprob: -19.250045776367188
    10. '```' → logprob: -19.375045776367188

Token 380: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.029750952497124672
    2. 'F' → logprob: -3.5297510623931885
    3. '_f' → logprob: -15.77975082397461
    4. '0' → logprob: -16.27975082397461
    5. ''f' → logprob: -16.90475082397461
    6. '``' → logprob: -18.40475082397461
    7. '```' → logprob: -18.40475082397461
    8. 'ffffffff' → logprob: -18.52975082397461
    9. ' f' → logprob: -18.90475082397461
    10. '[f' → logprob: -19.52975082397461

Token 381: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026882339268922806
    2. 'f' → logprob: -4.526882171630859
    3. 'ffffffff' → logprob: -5.026882171630859
    4. 'ff' → logprob: -5.276882171630859
    5. '_f' → logprob: -6.901882171630859
    6. '3' → logprob: -6.901882171630859
    7. '```' → logprob: -7.276882171630859
    8. 'ffff' → logprob: -7.901882171630859
    9. 'ffffff' → logprob: -8.02688217163086
    10. '_' → logprob: -8.52688217163086

Token 382: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001055676257237792
    2. '0' → logprob: -6.876055717468262
    3. 'F' → logprob: -11.001055717468262
    4. '_f' → logprob: -13.001055717468262
    5. 'ffff' → logprob: -13.501055717468262
    6. 'ffffffff' → logprob: -14.501055717468262
    7. 'ffffff' → logprob: -14.501055717468262
    8. '```' → logprob: -14.626055717468262
    9. ' f' → logprob: -14.876055717468262
    10. ''f' → logprob: -15.126055717468262

Token 383: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.584239938296378e-06
    2. 'f' → logprob: -12.625007629394531
    3. '_' → logprob: -13.375007629394531
    4. '3' → logprob: -13.375007629394531
    5. '```' → logprob: -14.625007629394531
    6. '...' → logprob: -15.625007629394531
    7. ' ' → logprob: -16.00000762939453
    8. '_f' → logprob: -16.12500762939453
    9. '
' → logprob: -16.25000762939453
    10. '   ' → logprob: -17.12500762939453

Token 384: 'f' (ID: 69)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008470293832942843
    2. 'f' → logprob: -7.375846862792969
    3. '333' → logprob: -9.125846862792969
    4. 'ffff' → logprob: -10.125846862792969
    5. 'ffffffff' → logprob: -11.125846862792969
    6. 'ffffff' → logprob: -11.375846862792969
    7. '```' → logprob: -11.750846862792969
    8. '3' → logprob: -12.000846862792969
    9. '000' → logprob: -12.000846862792969
    10. '   ' → logprob: -12.250846862792969

Token 385: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.750001907348633
    3. '```' → logprob: -14.750001907348633
    4. '3' → logprob: -15.875001907348633
    5. '
' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.250001907348633
    7. ' ' → logprob: -16.625001907348633
    8. '...' → logprob: -16.750001907348633
    9. 'f' → logprob: -17.500001907348633
    10. '

' → logprob: -17.750001907348633

Token 386: 'f' (ID: 69)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011703446507453918
    2. '3' → logprob: -6.8761701583862305
    3. 'f' → logprob: -9.62617015838623
    4. '_' → logprob: -10.25117015838623
    5. '```' → logprob: -11.75117015838623
    6. '   ' → logprob: -12.12617015838623
    7. '...' → logprob: -12.25117015838623
    8. '_mask' → logprob: -12.62617015838623
    9. ' ' → logprob: -13.00117015838623
    10. '  ' → logprob: -13.50117015838623

Token 387: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5027299822540954e-05
    2. '3' → logprob: -10.500055313110352
    3. '_' → logprob: -11.500055313110352
    4. '   ' → logprob: -12.250055313110352
    5. '```' → logprob: -12.500055313110352
    6. ' ' → logprob: -12.875055313110352
    7. '333' → logprob: -13.875055313110352
    8. '
' → logprob: -14.500055313110352
    9. '    ' → logprob: -14.500055313110352
    10. '  ' → logprob: -14.500055313110352

Token 388: 'f' (ID: 69)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00027182576013728976
    2. '3' → logprob: -8.250271797180176
    3. '```' → logprob: -12.500271797180176
    4. '_' → logprob: -13.500271797180176
    5. '333' → logprob: -13.500271797180176
    6. '   ' → logprob: -13.625271797180176
    7. ' ' → logprob: -14.750271797180176
    8. 'f' → logprob: -15.250271797180176
    9. '
' → logprob: -15.375271797180176
    10. '  ' → logprob: -15.625271797180176

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007600766839459538
    2. '3' → logprob: -7.250760078430176
    3. '```' → logprob: -10.875760078430176
    4. ' ' → logprob: -11.375760078430176
    5. 'f' → logprob: -12.250760078430176
    6. '   ' → logprob: -12.625760078430176
    7. '​' → logprob: -12.875760078430176
    8. '...' → logprob: -14.063260078430176
    9. ')' → logprob: -14.313260078430176
    10. '  ' → logprob: -14.500760078430176

Token 390: 'f' (ID: 69)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007775885751470923
    2. '3' → logprob: -7.250777721405029
    3. 'f' → logprob: -9.750777244567871
    4. 'ffffff' → logprob: -13.125777244567871
    5. '```' → logprob: -13.250777244567871
    6. ' ' → logprob: -13.625777244567871
    7. '   ' → logprob: -14.000777244567871
    8. '...' → logprob: -14.250777244567871
    9. '333' → logprob: -15.125777244567871
    10. '303' → logprob: -15.125777244567871

Token 391: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024808887392282486
    2. '3' → logprob: -6.002480983734131
    3. 'f' → logprob: -13.002480506896973
    4. '```' → logprob: -14.002480506896973
    5. ' ' → logprob: -14.252480506896973
    6. '   ' → logprob: -14.877480506896973
    7. '7' → logprob: -15.752480506896973
    8. ' f' → logprob: -15.752480506896973
    9. 'a' → logprob: -16.00248146057129
    10. '...' → logprob: -16.12748146057129

Token 392: 'f' (ID: 69)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022595678456127644
    2. '3' → logprob: -6.252259731292725
    3. 'f' → logprob: -8.127259254455566
    4. '```' → logprob: -11.127259254455566
    5. 'a' → logprob: -12.627259254455566
    6. ' ' → logprob: -12.752259254455566
    7. '   ' → logprob: -13.002259254455566
    8. '5' → logprob: -13.127259254455566
    9. '...' → logprob: -13.502259254455566
    10. '7' → logprob: -13.752259254455566

Token 393: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009182471549138427
    2. '3' → logprob: -7.000918388366699
    3. 'f' → logprob: -12.2509183883667
    4. ' ' → logprob: -14.3759183883667
    5. '```' → logprob: -14.8759183883667
    6. '7' → logprob: -16.000917434692383
    7. '   ' → logprob: -16.125917434692383
    8. '...' → logprob: -16.250917434692383
    9. 'ffffff' → logprob: -16.500917434692383
    10. '393' → logprob: -16.750917434692383

Token 394: 'f' (ID: 69)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004367697983980179
    2. 'f' → logprob: -5.504367828369141
    3. '3' → logprob: -8.25436782836914
    4. 'ffffff' → logprob: -11.75436782836914
    5. '```' → logprob: -11.75436782836914
    6. '   ' → logprob: -13.50436782836914
    7. ' ' → logprob: -13.87936782836914
    8. '7' → logprob: -14.00436782836914
    9. '...' → logprob: -14.19186782836914
    10. 'a' → logprob: -14.25436782836914

Token 395: '
' (ID: 198)
  Prédit: 'ffffffff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ffffffff' → logprob: -1.1478296518325806
    2. '   ' → logprob: -1.5228296518325806
    3. 'ffffff' → logprob: -2.397829532623291
    4. '0' → logprob: -2.647829532623291
    5. 'xffff' → logprob: -2.647829532623291
    6. 'f' → logprob: -2.897829532623291
    7. 'ffff' → logprob: -3.022829532623291
    8. '```' → logprob: -3.397829532623291
    9. 'x' → logprob: -3.772829532623291
    10. '<|end|>' → logprob: -4.022829532623291

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001238004770129919
    2. 'x' → logprob: -9.125123977661133
    3. 'return' → logprob: -11.500123977661133
    4. '```' → logprob: -13.125123977661133
    5. ' x' → logprob: -13.375123977661133
    6. ' return' → logprob: -14.625123977661133
    7. '    
' → logprob: -14.875123977661133
    8. ' ' → logprob: -16.500123977661133
    9. ',' → logprob: -16.750123977661133
    10. '       ' → logprob: -16.875123977661133

Token 397: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.14305523037910461
    2. '   ' → logprob: -2.0180552005767822
    3. ' x' → logprob: -8.268054962158203
    4. 'return' → logprob: -9.268054962158203
    5. ' ' → logprob: -11.893054962158203
    6. '    
' → logprob: -11.893054962158203
    7. '
' → logprob: -12.143054962158203
    8. '(x' → logprob: -12.643054962158203
    9. '```' → logprob: -12.893054962158203
    10. '	x' → logprob: -14.143054962158203

Token 398: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011071642860770226
    2. ' =' → logprob: -4.511071681976318
    3. '+=' → logprob: -10.76107120513916
    4. '-=' → logprob: -13.26107120513916
    5. ' ' → logprob: -15.51107120513916
    6. '=(' → logprob: -15.88607120513916
    7. ' +=' → logprob: -16.511072158813477
    8. '&' → logprob: -16.761072158813477
    9. '.=' → logprob: -16.761072158813477
    10. '＝' → logprob: -16.886072158813477

Token 399: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5475180745124817
    2. 'x' → logprob: -1.047518014907837
    3. ' (' → logprob: -3.172518014907837
    4. ' x' → logprob: -3.547518014907837
    5. '   ' → logprob: -9.672517776489258
    6. ' ' → logprob: -10.297517776489258
    7. '(' → logprob: -11.797517776489258
    8. '	x' → logprob: -12.047517776489258
    9. '  ' → logprob: -13.422517776489258
    10. ' ' → logprob: -14.172517776489258

Token 400: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -8.756989700486884e-05
    2. ' >>' → logprob: -9.37508773803711
    3. '>>(' → logprob: -13.62508773803711
    4. '>' → logprob: -14.00008773803711
    5. '>>>' → logprob: -14.50008773803711
    6. ' ' → logprob: -16.50008773803711
    7. ' ' → logprob: -17.75008773803711
    8. '=' → logprob: -18.37508773803711
    9. '&gt' → logprob: -18.37508773803711
    10. '```' → logprob: -18.50008773803711

Token 401: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '08' → logprob: -17.875001907348633
    4. '```' → logprob: -19.000001907348633
    5. '８' → logprob: -20.000001907348633
    6. '۸' → logprob: -20.625001907348633
    7. '56' → logprob: -20.625001907348633
    8. 'eight' → logprob: -21.000001907348633
    9. '' → logprob: -21.750001907348633
    10. '८' → logprob: -22.250001907348633

Token 402: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -18.0
    4. '08' → logprob: -18.5
    5. '８' → logprob: -19.5
    6. '۸' → logprob: -21.0
    7. '``' → logprob: -21.0
    8. '   ' → logprob: -21.125
    9. 'eight' → logprob: -21.375
    10. '८' → logprob: -21.5

Token 403: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006799798924475908
    2. '0' → logprob: -5.256799697875977
    3. 'x' → logprob: -6.506799697875977
    4. '  ' → logprob: -11.006799697875977
    5. '&' → logprob: -11.756799697875977
    6. ' ' → logprob: -12.131799697875977
    7. ' x' → logprob: -12.381799697875977
    8. '```' → logprob: -12.506799697875977
    9. '    
' → logprob: -12.506799697875977
    10. '	x' → logprob: -12.756799697875977

Token 404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008760401979088783
    2. 'x' → logprob: -4.758760452270508
    3. ' x' → logprob: -9.258760452270508
    4. ' ' → logprob: -10.758760452270508
    5. '  ' → logprob: -11.008760452270508
    6. '	x' → logprob: -12.133760452270508
    7. '```' → logprob: -12.383760452270508
    8. '    
' → logprob: -14.133760452270508
    9. '    ' → logprob: -14.258760452270508
    10. '0' → logprob: -14.508760452270508

Token 405: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.31425905227661133
    2. '   ' → logprob: -1.3142590522766113
    3. ' x' → logprob: -6.939259052276611
    4. ' ' → logprob: -10.939258575439453
    5. '  ' → logprob: -12.439258575439453
    6. '```' → logprob: -13.064258575439453
    7. '	x' → logprob: -13.439258575439453
    8. '0' → logprob: -14.314258575439453
    9. '``' → logprob: -14.814258575439453
    10. '&' → logprob: -14.939258575439453

Token 406: ' +=' (ID: 2757)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.01107140351086855
    2. ' &=' → logprob: -5.13607120513916
    3. '=' → logprob: -5.76107120513916
    4. ' &' → logprob: -6.38607120513916
    5. '   ' → logprob: -9.38607120513916
    6. 'x' → logprob: -9.51107120513916
    7. '&amp' → logprob: -9.88607120513916
    8. '&
' → logprob: -9.88607120513916
    9. ')' → logprob: -11.26107120513916
    10. '&i' → logprob: -12.13607120513916

Token 407: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03012925758957863
    2. '16' → logprob: -3.5301291942596436
    3. ' x' → logprob: -8.530129432678223
    4. '24' → logprob: -9.030129432678223
    5. ' ' → logprob: -10.530129432678223
    6. '20' → logprob: -10.780129432678223
    7. '   ' → logprob: -12.155129432678223
    8. '32' → logprob: -12.905129432678223
    9. '18' → logprob: -13.280129432678223
    10. '26' → logprob: -13.780129432678223

Token 408: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.0001242772996192798
    2. ' >>' → logprob: -9.000123977661133
    3. '>' → logprob: -14.000123977661133
    4. '>>
' → logprob: -18.250123977661133
    5. '>>>' → logprob: -18.875123977661133
    6. '>>(' → logprob: -19.250123977661133
    7. ' ' → logprob: -19.250123977661133
    8. '>>)' → logprob: -19.625123977661133
    9. ' ' → logprob: -19.875123977661133
    10. '```' → logprob: -20.250123977661133

Token 409: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '24' → logprob: -20.0
    4. '```' → logprob: -21.875
    5. '１６' → logprob: -22.375
    6. '32' → logprob: -22.875
    7. '   ' → logprob: -23.125
    8. '016' → logprob: -23.75
    9. '{' → logprob: -24.0
    10. ' sixteen' → logprob: -24.125

Token 410: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: 0.0
    2. '```' → logprob: -18.375
    3. ' ' → logprob: -18.875
    4. '1' → logprob: -19.625
    5. '24' → logprob: -20.25
    6. '１６' → logprob: -21.0
    7. '016' → logprob: -22.125
    8. '20' → logprob: -22.625
    9. '१६' → logprob: -22.75
    10. '``' → logprob: -22.75

Token 411: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001521049183793366
    2. 'x' → logprob: -6.501521110534668
    3. ' x' → logprob: -11.376521110534668
    4. 'return' → logprob: -12.501521110534668
    5. '```' → logprob: -12.876521110534668
    6. '	x' → logprob: -15.251521110534668
    7. '``' → logprob: -16.00152015686035
    8. ' return' → logprob: -16.00152015686035
    9. '    
' → logprob: -16.12652015686035
    10. ' ' → logprob: -16.25152015686035

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008768673054873943
    2. 'x' → logprob: -4.758768558502197
    3. ' x' → logprob: -9.258769035339355
    4. '```' → logprob: -10.133769035339355
    5. 'return' → logprob: -11.258769035339355
    6. ' return' → logprob: -12.508769035339355
    7. '``' → logprob: -13.133769035339355
    8. '
' → logprob: -15.383769035339355
    9. '    
' → logprob: -15.508769035339355
    10. ' ' → logprob: -17.13376808166504

Token 413: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0020404639653861523
    2. '   ' → logprob: -6.252040386199951
    3. ' x' → logprob: -9.12704086303711
    4. 'return' → logprob: -12.75204086303711
    5. '	x' → logprob: -16.00204086303711
    6. '```' → logprob: -16.37704086303711
    7. ' ' → logprob: -17.25204086303711
    8. ' return' → logprob: -17.62704086303711
    9. '  ' → logprob: -17.75204086303711
    10. '``' → logprob: -18.37704086303711

Token 414: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2524387836456299
    2. ' +=' → logprob: -1.5024387836456299
    3. '+' → logprob: -8.62743854522705
    4. '=' → logprob: -8.62743854522705
    5. '+
' → logprob: -9.50243854522705
    6. ' ' → logprob: -11.00243854522705
    7. '   ' → logprob: -11.12743854522705
    8. ' +' → logprob: -11.75243854522705
    9. '&' → logprob: -12.00243854522705
    10. ' =' → logprob: -12.00243854522705

Token 415: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4802775979042053
    2. '32' → logprob: -0.9802775979042053
    3. ' x' → logprob: -5.2302775382995605
    4. ' ' → logprob: -7.1052775382995605
    5. '   ' → logprob: -12.855278015136719
    6. '30' → logprob: -13.230278015136719
    7. '31' → logprob: -14.105278015136719
    8. '28' → logprob: -14.355278015136719
    9. '(x' → logprob: -14.730278015136719
    10. '33' → logprob: -14.855278015136719

Token 416: ' >>' (ID: 6832)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.0028244927525520325
    2. ' ' → logprob: -5.877824306488037
    3. '28' → logprob: -11.877824783325195
    4. '>>' → logprob: -12.877824783325195
    5. '  ' → logprob: -13.502824783325195
    6. '27' → logprob: -13.502824783325195
    7. '8' → logprob: -13.502824783325195
    8. '24' → logprob: -13.627824783325195
    9. '```' → logprob: -13.627824783325195
    10. '+' → logprob: -14.002824783325195

Token 417: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '3' → logprob: -18.375
    4. '```' → logprob: -20.25
    5. '31' → logprob: -21.375
    6. '30' → logprob: -23.625
    7. '33' → logprob: -23.625
    8. '
' → logprob: -23.625
    9. '320' → logprob: -23.75
    10. '  ' → logprob: -24.125

Token 418: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.625000953674316
    3. '321' → logprob: -16.25
    4. '324' → logprob: -16.25
    5. '322' → logprob: -16.625
    6. '323' → logprob: -16.75
    7. '3' → logprob: -17.125
    8. '327' → logprob: -17.75
    9. '320' → logprob: -17.875
    10. '328' → logprob: -19.5

Token 419: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018351396545767784
    2. 'return' → logprob: -4.0183515548706055
    3. 'x' → logprob: -8.518351554870605
    4. ' return' → logprob: -13.393351554870605
    5. '```' → logprob: -16.39335060119629
    6. '	return' → logprob: -16.89335060119629
    7. '  ' → logprob: -17.39335060119629
    8. '    
' → logprob: -18.01835060119629
    9. '       ' → logprob: -18.26835060119629
    10. ' ' → logprob: -18.39335060119629

Token 420: '   ' (ID: 271)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.48502230644226074
    2. '   ' → logprob: -0.9850223064422607
    3. 'return' → logprob: -4.86002254486084
    4. 'x' → logprob: -6.23502254486084
    5. '0' → logprob: -7.61002254486084
    6. ' &' → logprob: -7.86002254486084
    7. '&
' → logprob: -9.23502254486084
    8. '&amp' → logprob: -9.86002254486084
    9. 'and' → logprob: -10.36002254486084
    10. 'b' → logprob: -11.48502254486084

Token 421: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03824310749769211
    2. '   ' → logprob: -3.288243055343628
    3. ' return' → logprob: -8.538243293762207
    4. 'x' → logprob: -12.413243293762207
    5. ' ' → logprob: -13.788243293762207
    6. '&' → logprob: -14.913243293762207
    7. '	return' → logprob: -15.163243293762207
    8. '  ' → logprob: -16.78824234008789
    9. '```' → logprob: -17.03824234008789
    10. 'Return' → logprob: -17.66324234008789

Token 422: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.306760805164231e-05
    2. ' x' → logprob: -11.25001335144043
    3. '(x' → logprob: -18.37501335144043
    4. '   ' → logprob: -18.37501335144043
    5. 'int' → logprob: -19.87501335144043
    6. 'bin' → logprob: -20.12501335144043
    7. '	x' → logprob: -21.75001335144043
    8. ' ' → logprob: -22.37501335144043
    9. '  ' → logprob: -22.75001335144043
    10. '[x' → logprob: -23.37501335144043

Token 423: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.32223090529441833
    2. ' &' → logprob: -1.3222309350967407
    3. '<|end|>' → logprob: -4.947230815887451
    4. '&amp' → logprob: -6.572230815887451
    5. '&nbsp' → logprob: -8.82223129272461
    6. ')' → logprob: -10.19723129272461
    7. '&A' → logprob: -10.32223129272461
    8. ')&' → logprob: -10.44723129272461
    9. '&B' → logprob: -10.57223129272461
    10. ' &=' → logprob: -10.94723129272461

Token 424: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '127' → logprob: -14.500000953674316
    3. '63' → logprob: -15.750000953674316
    4. ' ' → logprob: -18.0
    5. '255' → logprob: -18.875
    6. '``' → logprob: -20.125
    7. '7' → logprob: -20.625
    8. '```' → logprob: -21.0
    9. '   ' → logprob: -21.625
    10. '
' → logprob: -21.625

Token 425: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '63' → logprob: -14.500000953674316
    3. '127' → logprob: -19.375
    4. '
' → logprob: -19.625
    5. '255' → logprob: -19.625
    6. ' ' → logprob: -20.125
    7. '```' → logprob: -20.125
    8. '``' → logprob: -20.5
    9. '7' → logprob: -22.75
    10. '０' → logprob: -22.875

Token 426: 'x' (ID: 87)
  Prédit: 'xffff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xffff' → logprob: -0.2258622795343399
    2. 'xffffffff' → logprob: -2.2258622646331787
    3. 'x' → logprob: -2.8508622646331787
    4. 'ffffffff' → logprob: -3.9758622646331787
    5. 'xff' → logprob: -4.350862503051758
    6. 'FFFFFFFF' → logprob: -5.975862503051758
    7. 'b' → logprob: -6.225862503051758
    8. 'xf' → logprob: -8.975862503051758
    9. 'xffffff' → logprob: -9.725862503051758
    10. 'ffff' → logprob: -10.850862503051758

Token 427: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0013429699465632439
    2. '3' → logprob: -6.7513427734375
    3. 'ff' → logprob: -9.5013427734375
    4. 'ffffffff' → logprob: -9.5013427734375
    5. 'FFFFFFFF' → logprob: -11.2513427734375
    6. 'ffff' → logprob: -12.3763427734375
    7. 'FF' → logprob: -12.6263427734375
    8. 'f' → logprob: -13.3763427734375
    9. '0' → logprob: -14.5013427734375
    10. 'fff' → logprob: -14.8763427734375

Token 428: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05663827806711197
    2. 'ffffffff' → logprob: -3.056638240814209
    3. 'ffff' → logprob: -5.056638240814209
    4. 'fff' → logprob: -7.056638240814209
    5. 'ffffff' → logprob: -8.056638717651367
    6. 'F' → logprob: -8.306638717651367
    7. 'FFFFFFFF' → logprob: -8.431638717651367
    8. 'FFFFFF' → logprob: -12.181638717651367
    9. 'ff' → logprob: -12.931638717651367
    10. '7' → logprob: -16.056638717651367

Token 429: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.038798846304416656
    2. '#' → logprob: -3.7887988090515137
    3. ')' → logprob: -5.163798809051514
    4. '<|end|>' → logprob: -5.913798809051514
    5. '+' → logprob: -6.288798809051514
    6. '=' → logprob: -7.288798809051514
    7. 'x' → logprob: -7.538798809051514
    8. ':' → logprob: -7.538798809051514
    9. '(' → logprob: -7.538798809051514
    10. '*' → logprob: -7.913798809051514

Token 431: ' solve' (ID: 17722)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.04769635200500488
    2. ' bit' → logprob: -4.422696113586426
    3. 'pop' → logprob: -4.422696113586426
    4. 'pow' → logprob: -5.047696113586426
    5. 'main' → logprob: -5.547696113586426
    6. 'bits' → logprob: -6.297696113586426
    7. 'is' → logprob: -6.672696113586426
    8. ' pop' → logprob: -6.797696113586426
    9. 'bis' → logprob: -6.797696113586426
    10. ' main' → logprob: -7.172696113586426

Token 432: '_inter' (ID: 16818)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -9.014684110297821e-06
    2. ' ():' → logprob: -11.875008583068848
    3. '(' → logprob: -14.125008583068848
    4. '():
' → logprob: -14.250008583068848
    5. '()' → logprob: -14.375008583068848
    6. '(:' → logprob: -17.000009536743164
    7. '(":' → logprob: -18.000009536743164
    8. '(x' → logprob: -18.250009536743164
    9. '(n' → logprob: -18.375009536743164
    10. '(a' → logprob: -18.625009536743164

Token 433: 'vals' (ID: 44567)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.40388303995132446
    2. 'ger' → logprob: -1.6538829803466797
    3. 'face' → logprob: -2.2788829803466797
    4. 'action' → logprob: -4.40388298034668
    5. 'pret' → logprob: -4.90388298034668
    6. 'act' → logprob: -5.40388298034668
    7. 'section' → logprob: -6.15388298034668
    8. 'nal' → logprob: -6.15388298034668
    9. 'preter' → logprob: -6.27888298034668
    10. 'view' → logprob: -6.27888298034668

Token 434: '(S' (ID: 6181)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00927856843918562
    2. '(' → logprob: -5.259278774261475
    3. '(n' → logprob: -6.384278774261475
    4. '(interval' → logprob: -6.759278774261475
    5. '(s' → logprob: -8.009278297424316
    6. '(nums' → logprob: -8.884278297424316
    7. '(lst' → logprob: -9.384278297424316
    8. '(a' → logprob: -9.384278297424316
    9. '(length' → logprob: -9.634278297424316
    10. '(size' → logprob: -10.009278297424316

Token 435: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014651489444077015
    2. ',' → logprob: -4.264651298522949
    3. '):
' → logprob: -8.01465129852295
    4. ' ):' → logprob: -9.76465129852295
    5. ')' → logprob: -9.88965129852295
    6. ':' → logprob: -10.38965129852295
    7. '):
' → logprob: -12.01465129852295
    8. ' ,' → logprob: -12.76465129852295
    9. ',S' → logprob: -13.13965129852295
    10. ']:' → logprob: -13.63965129852295

Token 436: ' N' (ID: 478)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7427958250045776
    2. 'queries' → logprob: -2.117795944213867
    3. ' intervals' → logprob: -2.492795944213867
    4. 'Q' → logprob: -2.492795944213867
    5. 'L' → logprob: -2.742795944213867
    6. 'K' → logprob: -2.867795944213867
    7. 'N' → logprob: -3.492795944213867
    8. ' queries' → logprob: -4.367795944213867
    9. 'E' → logprob: -4.492795944213867
    10. 'n' → logprob: -4.492795944213867

Token 437: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14401832222938538
    2. ',' → logprob: -2.0190184116363525
    3. '):
' → logprob: -6.769018173217773
    4. ' ):' → logprob: -9.519018173217773
    5. '):
' → logprob: -9.894018173217773
    6. ' ,' → logprob: -10.644018173217773
    7. ')' → logprob: -10.769018173217773
    8. ':' → logprob: -11.894018173217773
    9. '   ' → logprob: -13.019018173217773
    10. ']:' → logprob: -13.644018173217773

Token 438: ' base' (ID: 3611)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5073237419128418
    2. 'interval' → logprob: -1.8823237419128418
    3. 'M' → logprob: -2.507323741912842
    4. 'Q' → logprob: -2.632323741912842
    5. 'L' → logprob: -3.757323741912842
    6. 'queries' → logprob: -4.132323741912842
    7. 'k' → logprob: -4.882323741912842
    8. 'T' → logprob: -4.882323741912842
    9. ' intervals' → logprob: -5.257323741912842
    10. 'C' → logprob: -5.882323741912842

Token 439: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.056953515857458115
    2. '=' → logprob: -3.1819534301757812
    3. '):
' → logprob: -4.431953430175781
    4. ',' → logprob: -7.556953430175781
    5. '+' → logprob: -8.681953430175781
    6. ' ):' → logprob: -8.806953430175781
    7. ')):' → logprob: -9.181953430175781
    8. '_mask' → logprob: -9.306953430175781
    9. '_offset' → logprob: -9.556953430175781
    10. '_inter' → logprob: -10.056953430175781

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28139132261276245
    2. ':' → logprob: -1.5313913822174072
    3. 'dp' → logprob: -4.531391143798828
    4. '):' → logprob: -4.906391143798828
    5. ' dp' → logprob: -5.156391143798828
    6. ':
' → logprob: -6.531391143798828
    7. '():' → logprob: -7.031391143798828
    8. ' DP' → logprob: -7.656391143798828
    9. 'DP' → logprob: -7.906391143798828
    10. ' :' → logprob: -7.906391143798828

Token 441: ' import' (ID: 1588)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013297989033162594
    2. '   ' → logprob: -5.263298034667969
    3. 'DP' → logprob: -6.638298034667969
    4. 'cnt' → logprob: -7.138298034667969
    5. 'diff' → logprob: -7.388298034667969
    6. 'ans' → logprob: -7.513298034667969
    7. 'res' → logprob: -7.763298034667969
    8. 'events' → logprob: -7.888298034667969
    9. 'INF' → logprob: -8.013298034667969
    10. 'from' → logprob: -8.263298034667969

Token 442: ' heap' (ID: 37237)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.006561071611940861
    2. 'heap' → logprob: -5.131561279296875
    3. ' bis' → logprob: -8.256561279296875
    4. 'math' → logprob: -8.881561279296875
    5. 'sys' → logprob: -8.881561279296875
    6. 'collections' → logprob: -9.506561279296875
    7. '   ' → logprob: -12.006561279296875
    8. 'copy' → logprob: -12.381561279296875
    9. ' itertools' → logprob: -13.381561279296875
    10. ' heap' → logprob: -13.381561279296875

Token 443: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.5570885807392187e-05
    2. 'queue' → logprob: -11.375015258789062
    3. ' queue' → logprob: -14.375015258789062
    4. '=' → logprob: -14.375015258789062
    5. '_queue' → logprob: -14.375015258789062
    6. '<|end|>' → logprob: -14.875015258789062
    7. 'dict' → logprob: -15.000015258789062
    8. 'ify' → logprob: -15.500015258789062
    9. '=[]' → logprob: -15.500015258789062
    10. 'Q' → logprob: -15.625015258789062

Token 444: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12539298832416534
    2. '    
' → logprob: -2.3753929138183594
    3. '
' → logprob: -3.7503929138183594
    4. '   
' → logprob: -7.875392913818359
    5. 'heap' → logprob: -8.50039291381836
    6. '  
' → logprob: -8.75039291381836
    7. '    ' → logprob: -9.00039291381836
    8. '    
' → logprob: -9.62539291381836
    9. 'q' → logprob: -9.62539291381836
    10. '	
' → logprob: -10.00039291381836

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023114213719964027
    2. '    
' → logprob: -3.8981142044067383
    3. '
' → logprob: -6.148114204406738
    4. 'heap' → logprob: -9.398114204406738
    5. 'q' → logprob: -9.648114204406738
    6. '   
' → logprob: -10.148114204406738
    7. '    ' → logprob: -10.273114204406738
    8. ',' → logprob: -10.648114204406738
    9. '        
' → logprob: -10.648114204406738
    10. '(heap' → logprob: -10.773114204406738

Token 446: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03356190398335457
    2. 'heap' → logprob: -4.408561706542969
    3. '
' → logprob: -5.033561706542969
    4. 'q' → logprob: -5.533561706542969
    5. 'dp' → logprob: -6.033561706542969
    6. '    
' → logprob: -6.283561706542969
    7. 'pq' → logprob: -6.533561706542969
    8. 'h' → logprob: -6.658561706542969
    9. ' heap' → logprob: -7.158561706542969
    10. 'n' → logprob: -8.158561706542969

Token 447: ' Use' (ID: 7649)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9106082320213318
    2. 'heap' → logprob: -1.2856082916259766
    3. 'h' → logprob: -2.0356082916259766
    4. 'pq' → logprob: -3.4106082916259766
    5. 'q' → logprob: -3.7856082916259766
    6. 'hq' → logprob: -3.9106082916259766
    7. 'res' → logprob: -3.9106082916259766
    8. 'interval' → logprob: -4.535608291625977
    9. '   ' → logprob: -4.785608291625977
    10. 'events' → logprob: -5.160608291625977

Token 448: ' negative' (ID: 12626)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.521962583065033
    2. 'hq' → logprob: -1.8969626426696777
    3. 'h' → logprob: -2.0219626426696777
    4. 'q' → logprob: -2.8969626426696777
    5. ' heap' → logprob: -3.6469626426696777
    6. 'pq' → logprob: -3.7719626426696777
    7. '   ' → logprob: -5.896962642669678
    8. ' h' → logprob: -6.021962642669678
    9. 'hp' → logprob: -6.146962642669678
    10. 'interval' → logprob: -6.146962642669678

Token 449: ' for' (ID: 395)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8083204030990601
    2. 'he' → logprob: -1.18332040309906
    3. 'freq' → logprob: -2.9333205223083496
    4. 'values' → logprob: -3.5583205223083496
    5. 'pq' → logprob: -3.8083205223083496
    6. 'fre' → logprob: -4.05832052230835
    7. 'import' → logprob: -4.18332052230835
    8. ' heap' → logprob: -4.18332052230835
    9. 'q' → logprob: -4.18332052230835
    10. 'length' → logprob: -4.30832052230835

Token 450: ' max' (ID: 2999)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.574955403804779
    2. 'max' → logprob: -1.6999554634094238
    3. ' heap' → logprob: -2.949955463409424
    4. 'he' → logprob: -3.699955463409424
    5. 'h' → logprob: -3.824955463409424
    6. 'q' → logprob: -3.949955463409424
    7. '   ' → logprob: -4.074955463409424
    8. 'min' → logprob: -4.199955463409424
    9. 'base' → logprob: -4.449955463409424
    10. ' max' → logprob: -4.449955463409424

Token 451: '-' (ID: 12)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.28568652272224426
    2. '-' → logprob: -2.160686492919922
    3. ' heap' → logprob: -2.160686492919922
    4. '_heap' → logprob: -5.035686492919922
    5. '   ' → logprob: -5.160686492919922
    6. 'import' → logprob: -5.660686492919922
    7. 'h' → logprob: -6.660686492919922
    8. 'q' → logprob: -7.660686492919922
    9. 'def' → logprob: -9.410686492919922
    10. 'he' → logprob: -9.535686492919922

Token 452: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -4.251091377227567e-05
    2. ' heap' → logprob: -10.250042915344238
    3. 'priority' → logprob: -12.500042915344238
    4. '_heap' → logprob: -13.500042915344238
    5. 'h' → logprob: -13.875042915344238
    6. 'he' → logprob: -15.000042915344238
    7. 'queue' → logprob: -15.625042915344238
    8. 'pq' → logprob: -16.250041961669922
    9. 'hq' → logprob: -16.250041961669922
    10. 'q' → logprob: -16.375041961669922

Token 453: ' effect' (ID: 3159)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13938455283641815
    2. 'q' → logprob: -3.3893845081329346
    3. 'heap' → logprob: -3.7643845081329346
    4. 'h' → logprob: -3.8893845081329346
    5. 'hq' → logprob: -4.139384746551514
    6. 'pq' → logprob: -4.264384746551514
    7. ' heap' → logprob: -4.389384746551514
    8. ' h' → logprob: -5.139384746551514
    9. ' pq' → logprob: -5.889384746551514
    10. ' q' → logprob: -8.014384269714355

Token 454: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10458974540233612
    2. '
' → logprob: -2.9795897006988525
    3. 'heap' → logprob: -3.2295897006988525
    4. ' heap' → logprob: -5.854589939117432
    5. 'q' → logprob: -6.479589939117432
    6. 'hq' → logprob: -6.604589939117432
    7. 'pq' → logprob: -7.104589939117432
    8. 'h' → logprob: -7.229589939117432
    9. '    
' → logprob: -7.604589939117432
    10. 'max' → logprob: -8.104589462280273

Token 455: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0666920393705368
    2. 'base' → logprob: -3.9416921138763428
    3. ' heap' → logprob: -4.066691875457764
    4. 'S' → logprob: -4.691691875457764
    5. '   ' → logprob: -5.191691875457764
    6. 'he' → logprob: -5.191691875457764
    7. ' base' → logprob: -6.191691875457764
    8. '#' → logprob: -6.441691875457764
    9. 'h' → logprob: -6.566691875457764
    10. 'hq' → logprob: -7.441691875457764

Token 456: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0021905910689383745
    2. ' =' → logprob: -7.502190589904785
    3. '=[]' → logprob: -7.502190589904785
    4. '   ' → logprob: -7.877190589904785
    5. '=' → logprob: -8.877190589904785
    6. 'h' → logprob: -9.252190589904785
    7. ')' → logprob: -9.252190589904785
    8. 'queue' → logprob: -9.377190589904785
    9. 'heap' → logprob: -10.127190589904785
    10. 'Q' → logprob: -10.127190589904785

Token 457: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7341001629829407
    2. '   ' → logprob: -1.109100103378296
    3. 'heap' → logprob: -2.484100103378296
    4. 'h' → logprob: -3.109100103378296
    5. 'q' → logprob: -3.734100103378296
    6. ' heap' → logprob: -4.609100341796875
    7. 'hq' → logprob: -4.609100341796875
    8. 'pq' → logprob: -4.984100341796875
    9. ' h' → logprob: -5.859100341796875
    10. '    
' → logprob: -5.984100341796875

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004435697570443153
    2. 'heap' → logprob: -6.5044355392456055
    3. ' heap' → logprob: -6.5044355392456055
    4. 'q' → logprob: -7.3794355392456055
    5. '
' → logprob: -9.004435539245605
    6. 'pq' → logprob: -9.004435539245605
    7. 'h' → logprob: -9.129435539245605
    8. '    
' → logprob: -9.379435539245605
    9. ',' → logprob: -9.629435539245605
    10. ' h' → logprob: -9.879435539245605

Token 459: ' ls' (ID: 41498)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.83203125
    2. 'heap' → logprob: -1.20703125
    3. 'hq' → logprob: -1.58203125
    4. '   ' → logprob: -3.70703125
    5. 'q' → logprob: -3.83203125
    6. 'pq' → logprob: -4.45703125
    7. 'que' → logprob: -7.45703125
    8. 'queue' → logprob: -7.45703125
    9. 'hp' → logprob: -7.58203125
    10. 'max' → logprob: -8.58203125

Token 460: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3998975157737732
    2. ' =' → logprob: -1.149897575378418
    3. 'ts' → logprob: -4.899897575378418
    4. '=' → logprob: -5.649897575378418
    5. ',' → logprob: -7.524897575378418
    6. 'e' → logprob: -7.774897575378418
    7. '=[]' → logprob: -7.899897575378418
    8. '   ' → logprob: -8.274897575378418
    9. '=[]
' → logprob: -10.024897575378418
    10. 'ize' → logprob: -10.149897575378418

Token 461: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.48329779505729675
    2. '[' → logprob: -1.1082978248596191
    3. '[]' → logprob: -3.108297824859619
    4. ' [' → logprob: -5.608297824859619
    5. '[(' → logprob: -5.983297824859619
    6. '[]
' → logprob: -7.108297824859619
    7. ' [-' → logprob: -7.108297824859619
    8. ' []' → logprob: -7.858297824859619
    9. '   ' → logprob: -9.358297348022461
    10. '[[' → logprob: -10.608297348022461

Token 462: 'l' (ID: 75)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.2380981743335724
    2. '(' → logprob: -1.98809814453125
    3. 'x' → logprob: -3.61309814453125
    4. 'len' → logprob: -4.36309814453125
    5. '(base' → logprob: -4.61309814453125
    6. 'i' → logprob: -4.98809814453125
    7. '1' → logprob: -5.36309814453125
    8. '(i' → logprob: -6.36309814453125
    9. '(S' → logprob: -6.48809814453125
    10. '(N' → logprob: -6.73809814453125

Token 463: ' *' (ID: 425)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.10559570789337158
    2. ' for' → logprob: -3.105595588684082
    3. 'for' → logprob: -3.230595588684082
    4. 'e' → logprob: -5.105595588684082
    5. 'ength' → logprob: -5.230595588684082
    6. 'base' → logprob: -5.980595588684082
    7. 'eng' → logprob: -7.855595588684082
    8. ' base' → logprob: -7.980595588684082
    9. ']' → logprob: -8.918095588684082
    10. 'eb' → logprob: -9.355595588684082

Token 464: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.6966288685798645
    2. 'x' → logprob: -2.1966288089752197
    3. 'l' → logprob: -2.5716288089752197
    4. 'length' → logprob: -2.9466288089752197
    5. '(base' → logprob: -3.3216288089752197
    6. 'count' → logprob: -3.5716288089752197
    7. 'b' → logprob: -3.8216288089752197
    8. '(' → logprob: -3.9466288089752197
    9. 'n' → logprob: -3.9466288089752197
    10. '1' → logprob: -4.071629047393799

Token 465: ' +' (ID: 659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04305479675531387
    2. ' for' → logprob: -3.1680548191070557
    3. ',' → logprob: -10.168054580688477
    4. ' ' → logprob: -11.543054580688477
    5. ']' → logprob: -13.543054580688477
    6. '
' → logprob: -13.543054580688477
    7. '	for' → logprob: -14.168054580688477
    8. ')' → logprob: -14.168054580688477
    9. '  ' → logprob: -14.418054580688477
    10. '   ' → logprob: -14.543054580688477

Token 466: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2288673222064972
    2. 'idx' → logprob: -2.728867292404175
    3. 'r' → logprob: -2.853867292404175
    4. 's' → logprob: -3.853867292404175
    5. '-' → logprob: -4.353867530822754
    6. '(i' → logprob: -4.728867530822754
    7. 'start' → logprob: -4.728867530822754
    8. '(-' → logprob: -5.478867530822754
    9. 'l' → logprob: -5.603867530822754
    10. '-i' → logprob: -5.978867530822754

Token 467: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012534137815237045
    2. 'for' → logprob: -4.387534141540527
    3. '	for' → logprob: -11.512534141540527
    4. ' ' → logprob: -12.137534141540527
    5. '   ' → logprob: -12.387534141540527
    6. '
' → logprob: -13.512534141540527
    7. '    ' → logprob: -13.637534141540527
    8. ']' → logprob: -14.512534141540527
    9. '  ' → logprob: -14.762534141540527
    10. '       ' → logprob: -15.012534141540527

Token 468: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3168606460094452
    2. 'i' → logprob: -1.3168606758117676
    3. 'l' → logprob: -6.191860675811768
    4. ' l' → logprob: -6.691860675811768
    5. ',' → logprob: -8.56686019897461
    6. ',i' → logprob: -10.06686019897461
    7. '(i' → logprob: -10.44186019897461
    8. '(' → logprob: -11.31686019897461
    9. ' (' → logprob: -11.31686019897461
    10. ' in' → logprob: -13.06686019897461

Token 469: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2090992033481598
    2. ' in' → logprob: -1.8340991735458374
    3. 'in' → logprob: -3.709099292755127
    4. ',l' → logprob: -5.834099292755127
    5. ' ,' → logprob: -7.459099292755127
    6. 'n' → logprob: -8.334098815917969
    7. ',i' → logprob: -8.459098815917969
    8. ',n' → logprob: -8.709098815917969
    9. 's' → logprob: -9.209098815917969
    10. 'i' → logprob: -10.209098815917969

Token 470: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6258179545402527
    2. 'l' → logprob: -1.7508180141448975
    3. ' (' → logprob: -2.0008180141448975
    4. '(l' → logprob: -2.3758180141448975
    5. ' l' → logprob: -3.8758180141448975
    6. 's' → logprob: -4.750817775726318
    7. '(_,' → logprob: -4.750817775726318
    8. '(s' → logprob: -5.125817775726318
    9. '_' → logprob: -5.750817775726318
    10. '(S' → logprob: -6.000817775726318

Token 471: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05665889382362366
    2. 's' → logprob: -3.181658983230591
    3. '(l' → logprob: -5.681658744812012
    4. '_,' → logprob: -5.681658744812012
    5. 'length' → logprob: -6.431658744812012
    6. 'start' → logprob: -6.431658744812012
    7. 'c' → logprob: -7.181658744812012
    8. '(s' → logprob: -7.681658744812012
    9. ' l' → logprob: -8.056658744812012
    10. '(_,' → logprob: -8.306658744812012

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004686207044869661
    2. ')' → logprob: -5.50468635559082
    3. '<|end|>' → logprob: -7.87968635559082
    4. ' in' → logprob: -9.00468635559082
    5. 'in' → logprob: -10.37968635559082
    6. ',)' → logprob: -11.12968635559082
    7. ',l' → logprob: -11.37968635559082
    8. 'def' → logprob: -11.62968635559082
    9. ' ,' → logprob: -12.00468635559082
    10. '<|end|>' → logprob: -12.50468635559082

Token 473: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0453747995197773
    2. 's' → logprob: -3.670374870300293
    3. 'c' → logprob: -5.545374870300293
    4. ')' → logprob: -5.670374870300293
    5. 'v' → logprob: -6.170374870300293
    6. 'start' → logprob: -6.170374870300293
    7. 'p' → logprob: -6.670374870300293
    8. '_)' → logprob: -6.920374870300293
    9. 'pos' → logprob: -7.295374870300293
    10. 'idx' → logprob: -7.920374870300293

Token 474: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031496648443862796
    2. 'in' → logprob: -8.125314712524414
    3. ' in' → logprob: -11.125314712524414
    4. ' )' → logprob: -14.000314712524414
    5. ')
' → logprob: -14.500314712524414
    6. 's' → logprob: -14.750314712524414
    7. ',' → logprob: -15.125314712524414
    8. '<|end|>' → logprob: -15.625314712524414
    9. 'and' → logprob: -15.750314712524414
    10. ')s' → logprob: -16.250314712524414

Token 475: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.032845791429281235
    2. ' in' → logprob: -3.6578457355499268
    3. ')' → logprob: -5.032845973968506
    4. ',' → logprob: -14.407845497131348
    5. ' )' → logprob: -14.407845497131348
    6. '
' → logprob: -14.907845497131348
    7. '),' → logprob: -15.032845497131348
    8. ' ' → logprob: -15.157845497131348
    9. 'In' → logprob: -15.782845497131348
    10. 'def' → logprob: -15.907845497131348

Token 476: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.0067156096920371056
    2. 'enumer' → logprob: -5.006715774536133
    3. '<|end|>' → logprob: -16.631715774536133
    4. ' enumer' → logprob: -17.381715774536133
    5. '.enumer' → logprob: -17.506715774536133
    6. '```' → logprob: -17.631715774536133
    7. ' enumeration' → logprob: -17.756715774536133
    8. 'Enumer' → logprob: -17.881715774536133
    9. ' enum' → logprob: -17.881715774536133
    10. ' en' → logprob: -18.506715774536133

Token 477: '(S' (ID: 6181)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.012902072630822659
    2. ' S' → logprob: -4.38790225982666
    3. 'enumer' → logprob: -8.63790225982666
    4. ' enumerate' → logprob: -9.13790225982666
    5. '(S' → logprob: -9.38790225982666
    6. ')' → logprob: -11.88790225982666
    7. 'zip' → logprob: -12.01290225982666
    8. '[S' → logprob: -13.01290225982666
    9. '[(' → logprob: -13.26290225982666
    10. 'sorted' → logprob: -13.76290225982666

Token 478: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003645442193374038
    2. ')' → logprob: -8.250364303588867
    3. '   ' → logprob: -10.375364303588867
    4. ' )' → logprob: -10.750364303588867
    5. ')]
' → logprob: -11.125364303588867
    6. ')])' → logprob: -11.875364303588867
    7. ']' → logprob: -11.875364303588867
    8. ' if' → logprob: -12.250364303588867
    9. ')],' → logprob: -12.500364303588867
    10. '])]' → logprob: -12.625364303588867

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24909520149230957
    2. 'heap' → logprob: -2.3740952014923096
    3. ',' → logprob: -2.6240952014923096
    4. 'he' → logprob: -3.9990952014923096
    5. ')' → logprob: -4.2490949630737305
    6. '<|end|>' → logprob: -4.7490949630737305
    7. ' heap' → logprob: -5.9990949630737305
    8. '
' → logprob: -6.1240949630737305
    9. '    
' → logprob: -6.8740949630737305
    10. '[' → logprob: -6.9990949630737305

Token 480: ' rs' (ID: 15181)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.09766503423452377
    2. 'he' → logprob: -3.5976650714874268
    3. ' heap' → logprob: -3.9726650714874268
    4. '   ' → logprob: -4.472664833068848
    5. ')' → logprob: -4.722664833068848
    6. ',' → logprob: -5.222664833068848
    7. '
' → logprob: -5.472664833068848
    8. '<|end|>' → logprob: -5.722664833068848
    9. ' ' → logprob: -5.972664833068848
    10. '(heap' → logprob: -6.347664833068848

Token 481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759490728378296
    2. '=' → logprob: -0.8259490728378296
    3. '=[]' → logprob: -11.825948715209961
    4. 's' → logprob: -13.825948715209961
    5. ')' → logprob: -15.200948715209961
    6. '=[' → logprob: -15.575948715209961
    7. ',' → logprob: -15.700948715209961
    8. ' ' → logprob: -15.825948715209961
    9. ' =[' → logprob: -16.07594871520996
    10. '=[]
' → logprob: -17.20094871520996

Token 482: ' [' (ID: 723)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.43671783804893494
    2. '[l' → logprob: -1.4367178678512573
    3. ' [' → logprob: -2.6867177486419678
    4. ' [-' → logprob: -3.6867177486419678
    5. '[' → logprob: -4.311717987060547
    6. '[r' → logprob: -4.936717987060547
    7. '[i' → logprob: -6.561717987060547
    8. '[len' → logprob: -8.311717987060547
    9. '[(' → logprob: -9.061717987060547
    10. '[b' → logprob: -9.436717987060547

Token 483: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03558040037751198
    2. '-r' → logprob: -3.9105803966522217
    3. ' r' → logprob: -4.785580635070801
    4. '-' → logprob: -6.285580635070801
    5. '-l' → logprob: -6.535580635070801
    6. 'l' → logprob: -6.785580635070801
    7. ' -' → logprob: -7.535580635070801
    8. '[r' → logprob: -8.1605806350708
    9. '-(' → logprob: -8.1605806350708
    10. '(r' → logprob: -8.4105806350708

Token 484: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.356585294008255
    2. 'for' → logprob: -1.2315852642059326
    3. '-' → logprob: -5.981585502624512
    4. '*' → logprob: -6.356585502624512
    5. ' -' → logprob: -6.481585502624512
    6. ' *' → logprob: -7.106585502624512
    7. '*l' → logprob: -7.481585502624512
    8. '+' → logprob: -8.731585502624512
    9. '[' → logprob: -8.856585502624512
    10. ' ' → logprob: -8.981585502624512

Token 485: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0028429143130779266
    2. ' base' → logprob: -5.877842903137207
    3. '(base' → logprob: -11.127842903137207
    4. '-base' → logprob: -11.752842903137207
    5. ' ' → logprob: -12.627842903137207
    6. '1' → logprob: -12.877842903137207
    7. '   ' → logprob: -13.252842903137207
    8. '-' → logprob: -13.377842903137207
    9. '  ' → logprob: -13.752842903137207
    10. '0' → logprob: -14.252842903137207

Token 486: ' +' (ID: 659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.583890974521637
    2. ' for' → logprob: -0.833890974521637
    3. '+' → logprob: -5.333890914916992
    4. '-' → logprob: -6.708890914916992
    5. '   ' → logprob: -7.208890914916992
    6. ' -' → logprob: -7.833890914916992
    7. ' +' → logprob: -8.208890914916992
    8. ' ' → logprob: -8.708890914916992
    9. '	for' → logprob: -9.333890914916992
    10. '    ' → logprob: -9.958890914916992

Token 487: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0036216892767697573
    2. ' i' → logprob: -5.878621578216553
    3. '0' → logprob: -7.628621578216553
    4. '-' → logprob: -9.628622055053711
    5. '1' → logprob: -9.753622055053711
    6. '-i' → logprob: -9.753622055053711
    7. ' -' → logprob: -10.253622055053711
    8. ' ' → logprob: -11.128622055053711
    9. '_i' → logprob: -11.878622055053711
    10. '[i' → logprob: -11.878622055053711

Token 488: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.010212380439043045
    2. 'for' → logprob: -4.760212421417236
    3. '   ' → logprob: -6.510212421417236
    4. '    ' → logprob: -10.010211944580078
    5. '	for' → logprob: -10.010211944580078
    6. ' ' → logprob: -11.885211944580078
    7. '       ' → logprob: -12.510211944580078
    8. '  ' → logprob: -12.885211944580078
    9. '        ' → logprob: -14.010211944580078
    10. ')' → logprob: -14.135211944580078

Token 489: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0791691318154335
    2. ' i' → logprob: -2.5791690349578857
    3. 'r' → logprob: -9.329169273376465
    4. 'range' → logprob: -9.704169273376465
    5. 'enumer' → logprob: -9.954169273376465
    6. ' range' → logprob: -10.204169273376465
    7. ',' → logprob: -10.954169273376465
    8. ' ' → logprob: -11.829169273376465
    9. ' r' → logprob: -12.079169273376465
    10. ',i' → logprob: -12.204169273376465

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016158436483237892
    2. ' in' → logprob: -9.250161170959473
    3. ' ,' → logprob: -10.000161170959473
    4. ',i' → logprob: -12.000161170959473
    5. 'in' → logprob: -12.250161170959473
    6. 's' → logprob: -13.000161170959473
    7. ',r' → logprob: -13.000161170959473
    8. 'i' → logprob: -13.625161170959473
    9. ',s' → logprob: -14.125161170959473
    10. '1' → logprob: -15.125161170959473

Token 491: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.539634644985199
    2. '(r' → logprob: -1.2896347045898438
    3. ' in' → logprob: -2.5396347045898438
    4. ',' → logprob: -3.4146347045898438
    5. '(l' → logprob: -4.414634704589844
    6. '(S' → logprob: -4.914634704589844
    7. '(' → logprob: -5.664634704589844
    8. '(s' → logprob: -5.789634704589844
    9. 'in' → logprob: -6.789634704589844
    10. ',r' → logprob: -7.039634704589844

Token 492: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11696003377437592
    2. 'r' → logprob: -2.241960048675537
    3. ' l' → logprob: -6.366960048675537
    4. '(r' → logprob: -6.991960048675537
    5. '(l' → logprob: -7.866960048675537
    6. ',' → logprob: -7.991960048675537
    7. ' r' → logprob: -8.741959571838379
    8. ',l' → logprob: -8.866959571838379
    9. 'S' → logprob: -9.366959571838379
    10. ')' → logprob: -9.366959571838379

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045259902253746986
    2. ',r' → logprob: -7.750452518463135
    3. ' ,' → logprob: -11.000452995300293
    4. 'r' → logprob: -12.750452995300293
    5. '_,' → logprob: -14.250452995300293
    6. ',l' → logprob: -15.125452995300293
    7. ',s' → logprob: -16.000452041625977
    8. ',_' → logprob: -16.125452041625977
    9. ',m' → logprob: -16.250452041625977
    10. 'I' → logprob: -16.562952041625977

Token 494: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08392856270074844
    2. ' r' → logprob: -2.7089285850524902
    3. '(r' → logprob: -4.33392858505249
    4. ' (' → logprob: -7.70892858505249
    5. '_r' → logprob: -9.583928108215332
    6. '(_,' → logprob: -9.958928108215332
    7. 'S' → logprob: -10.083928108215332
    8. '(' → logprob: -10.583928108215332
    9. 's' → logprob: -10.708928108215332
    10. '(S' → logprob: -10.833928108215332

Token 495: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003862245939671993
    2. 'in' → logprob: -7.8753862380981445
    3. ' )' → logprob: -13.000386238098145
    4. ' in' → logprob: -13.500386238098145
    5. ')]' → logprob: -14.875386238098145
    6. ']' → logprob: -15.125386238098145
    7. ')
' → logprob: -15.375386238098145
    8. '   ' → logprob: -15.500386238098145
    9. '),' → logprob: -16.000385284423828
    10. ' ' → logprob: -16.000385284423828

Token 496: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42873358726501465
    2. 'in' → logprob: -1.0537335872650146
    3. ')' → logprob: -11.428733825683594
    4. ' ' → logprob: -11.803733825683594
    5. '   ' → logprob: -12.178733825683594
    6. 'n' → logprob: -13.053733825683594
    7. 's' → logprob: -13.553733825683594
    8. ']' → logprob: -13.928733825683594
    9. ',' → logprob: -14.178733825683594
    10. 'import' → logprob: -14.303733825683594

Token 497: ' enumerate' (ID: 29671)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.47607940435409546
    2. 'enumer' → logprob: -0.9760794043540955
    3. ' S' → logprob: -6.85107946395874
    4. ' enumerate' → logprob: -6.97607946395874
    5. '(S' → logprob: -12.726078987121582
    6. 'range' → logprob: -12.851078987121582
    7. 'enum' → logprob: -14.851078987121582
    8. 's' → logprob: -15.101078987121582
    9. '[S' → logprob: -15.226078987121582
    10. ')' → logprob: -15.476078987121582

Token 498: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.06996500492095947
    2. 'S' → logprob: -2.69496488571167
    3. ')' → logprob: -10.819965362548828
    4. ' S' → logprob: -13.194965362548828
    5. '[S' → logprob: -13.194965362548828
    6. ']' → logprob: -14.194965362548828
    7. 's' → logprob: -14.194965362548828
    8. ')]' → logprob: -14.569965362548828
    9. '<S' → logprob: -14.569965362548828
    10. '   ' → logprob: -14.819965362548828

Token 499: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.017273694276809692
    2. ']' → logprob: -4.142273902893066
    3. ')' → logprob: -6.892273902893066
    4. '])' → logprob: -9.517273902893066
    5. '])]' → logprob: -10.142273902893066
    6. '   ' → logprob: -10.392273902893066
    7. ')])' → logprob: -10.392273902893066
    8. ')]
' → logprob: -11.142273902893066
    9. ' ]' → logprob: -11.267273902893066
    10. '()]' → logprob: -12.142273902893066

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07557638734579086
    2. '<|end|>' → logprob: -2.8255763053894043
    3. 'heap' → logprob: -5.325576305389404
    4. ')' → logprob: -6.200576305389404
    5. '    
' → logprob: -6.325576305389404
    6. '<|end|>' → logprob: -6.575576305389404
    7. '
' → logprob: -6.825576305389404
    8. '[' → logprob: -7.950576305389404
    9. 'he' → logprob: -8.075576782226562
    10. '(heap' → logprob: -8.200576782226562

Token 501: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.04200180619955063
    2. 'h' → logprob: -4.292001724243164
    3. 'ls' → logprob: -4.667001724243164
    4. 'he' → logprob: -5.417001724243164
    5. 'hq' → logprob: -5.417001724243164
    6. '   ' → logprob: -5.792001724243164
    7. 'res' → logprob: -5.917001724243164
    8. 'hs' → logprob: -7.417001724243164
    9. 'hp' → logprob: -7.542001724243164
    10. 'pq' → logprob: -7.667001724243164

Token 502: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.572941179503687e-05
    2. ' =' → logprob: -11.125045776367188
    3. '=[]' → logprob: -11.375045776367188
    4. 'ify' → logprob: -11.750045776367188
    5. '=[]
' → logprob: -12.250045776367188
    6. 'heap' → logprob: -13.500045776367188
    7. '=' → logprob: -14.000045776367188
    8. 'Q' → logprob: -14.750045776367188
    9. '(heap' → logprob: -14.750045776367188
    10. 'import' → logprob: -14.750045776367188

Token 503: '.heap' (ID: 177287)
  Prédit: '.heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.heap' → logprob: -0.038161978125572205
    2. '.he' → logprob: -3.2881619930267334
    3. '.' → logprob: -9.538162231445312
    4. 'ify' → logprob: -10.788162231445312
    5. 'heap' → logprob: -11.038162231445312
    6. '.push' → logprob: -12.788162231445312
    7. ' heap' → logprob: -12.913162231445312
    8. '(heap' → logprob: -12.913162231445312
    9. ' .' → logprob: -13.788162231445312
    10. 'q' → logprob: -14.038162231445312

Token 504: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.0026827796828001738
    2. 'push' → logprob: -6.002682685852051
    3. '=[]' → logprob: -9.75268268585205
    4. 'replace' → logprob: -9.87768268585205
    5. 'ush' → logprob: -10.37768268585205
    6. 'q' → logprob: -11.00268268585205
    7. 'lify' → logprob: -11.00268268585205
    8. 'IFY' → logprob: -11.75268268585205
    9. 'heap' → logprob: -12.75268268585205
    10. '_push' → logprob: -13.00268268585205

Token 505: '(ls' (ID: 128476)
  Prédit: '(ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -2.3795937522663735e-05
    2. '(rs' → logprob: -10.75002384185791
    3. 'ls' → logprob: -13.12502384185791
    4. '(l' → logprob: -15.75002384185791
    5. '(' → logprob: -17.500022888183594
    6. 's' → logprob: -17.875022888183594
    7. '(s' → logprob: -18.125022888183594
    8. ' ls' → logprob: -18.500022888183594
    9. '(lst' → logprob: -18.625022888183594
    10. '_ls' → logprob: -19.000022888183594

Token 506: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018436823738738894
    2. ')
' → logprob: -6.626843452453613
    3. '   ' → logprob: -7.876843452453613
    4. 'heap' → logprob: -9.376843452453613
    5. ',' → logprob: -10.251843452453613
    6. '(heap' → logprob: -11.626843452453613
    7. '.heap' → logprob: -13.126843452453613
    8. '<|end|>' → logprob: -13.126843452453613
    9. ' heap' → logprob: -14.001843452453613
    10. '<|end|>' → logprob: -14.001843452453613

Token 507: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08150119334459305
    2. 'heap' → logprob: -2.7065012454986572
    3. '<|end|>' → logprob: -4.706501007080078
    4. 'rs' → logprob: -7.456501007080078
    5. '(heap' → logprob: -7.956501007080078
    6. ')' → logprob: -8.206501007080078
    7. 'he' → logprob: -8.206501007080078
    8. '```' → logprob: -8.331501007080078
    9. '<|end|>' → logprob: -8.456501007080078
    10. 'def' → logprob: -8.831501007080078

Token 508: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -8.77627644513268e-06
    2. '   ' → logprob: -11.875008583068848
    3. ' heap' → logprob: -13.750008583068848
    4. 'he' → logprob: -15.000008583068848
    5. 'import' → logprob: -16.000009536743164
    6. '(heap' → logprob: -16.375009536743164
    7. '.heap' → logprob: -16.750009536743164
    8. '    
' → logprob: -17.625009536743164
    9. ' ' → logprob: -17.750009536743164
    10. '_heap' → logprob: -18.000009536743164

Token 509: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.4849443838757e-06
    2. 'heap' → logprob: -14.000004768371582
    3. '<|end|>' → logprob: -14.375004768371582
    4. 'qh' → logprob: -14.750004768371582
    5. 'r' → logprob: -14.875004768371582
    6. '.heap' → logprob: -15.250004768371582
    7. '[' → logprob: -15.375004768371582
    8. 'queue' → logprob: -15.500004768371582
    9. '=[]' → logprob: -15.625004768371582
    10. 'hq' → logprob: -15.875004768371582

Token 510: '.heap' (ID: 177287)
  Prédit: '.heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.heap' → logprob: -0.03827432170510292
    2. '.he' → logprob: -3.2882742881774902
    3. 'heap' → logprob: -8.413274765014648
    4. 'q' → logprob: -12.288274765014648
    5. '(heap' → logprob: -12.413274765014648
    6. 'he' → logprob: -14.413274765014648
    7. ' heap' → logprob: -14.413274765014648
    8. '_heap' → logprob: -14.913274765014648
    9. '   ' → logprob: -15.663274765014648
    10. '.' → logprob: -15.663274765014648

Token 511: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.0028267467860132456
    2. 'q' → logprob: -6.377826690673828
    3. 'op' → logprob: -7.502826690673828
    4. 'app' → logprob: -8.627826690673828
    5. 'fy' → logprob: -9.502826690673828
    6. 'f' → logprob: -9.502826690673828
    7. 'lify' → logprob: -9.877826690673828
    8. 'if' → logprob: -10.377826690673828
    9. 'p' → logprob: -10.752826690673828
    10. 'replace' → logprob: -11.127826690673828

Token 512: '(rs' (ID: 25887)
  Prédit: '(rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rs' → logprob: -9.088346359931165e-07
    2. 'rs' → logprob: -14.125000953674316
    3. '(' → logprob: -16.75
    4. '$rs' → logprob: -16.875
    5. '	rs' → logprob: -17.25
    6. '(ls' → logprob: -17.375
    7. '(
' → logprob: -18.75
    8. '((' → logprob: -20.125
    9. '(r' → logprob: -20.25
    10. '()' → logprob: -20.75

Token 513: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015569974202662706
    2. '   ' → logprob: -6.501556873321533
    3. ')
' → logprob: -9.876557350158691
    4. '    
' → logprob: -13.501557350158691
    5. ' )' → logprob: -14.126557350158691
    6. '
' → logprob: -14.376557350158691
    7. ',' → logprob: -16.251556396484375
    8. ')

' → logprob: -16.501556396484375
    9. '<|end|>' → logprob: -17.001556396484375
    10. ' ' → logprob: -17.251556396484375

Token 514: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.696962296962738
    2. '   ' → logprob: -1.0719623565673828
    3. 'count' → logprob: -3.571962356567383
    4. 'def' → logprob: -3.696962356567383
    5. 'result' → logprob: -4.196962356567383
    6. 'n' → logprob: -4.446962356567383
    7. 'answer' → logprob: -4.571962356567383
    8. ' res' → logprob: -4.696962356567383
    9. 'ans' → logprob: -4.946962356567383
    10. 'while' → logprob: -5.196962356567383

Token 515: ' d' (ID: 272)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7697305679321289
    2. 'res' → logprob: -1.019730567932129
    3. 'used' → logprob: -3.019730567932129
    4. 'answer' → logprob: -3.394730567932129
    5. 'result' → logprob: -3.769730567932129
    6. 'ret' → logprob: -4.269730567932129
    7. 'cnt' → logprob: -5.019730567932129
    8. 'covered' → logprob: -5.019730567932129
    9. 'count' → logprob: -5.144730567932129
    10. 'rem' → logprob: -5.394730567932129

Token 516: 'set' (ID: 977)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6386827826499939
    2. 'e' → logprob: -2.1386828422546387
    3. 'ef' → logprob: -2.1386828422546387
    4. 'el' → logprob: -2.5136828422546387
    5. 'q' → logprob: -3.1386828422546387
    6. '=' → logprob: -3.1386828422546387
    7. 'ict' → logprob: -4.888682842254639
    8. 'ist' → logprob: -5.013682842254639
    9. 'eep' → logprob: -5.263682842254639
    10. 'iff' → logprob: -5.388682842254639

Token 517: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11376484483480453
    2. '=' → logprob: -2.238764762878418
    3. 'ef' → logprob: -7.613764762878418
    4. 'f' → logprob: -8.363764762878418
    5. '=set' → logprob: -8.988764762878418
    6. '=[]' → logprob: -9.863764762878418
    7. 'eft' → logprob: -12.113764762878418
    8. 'def' → logprob: -12.238764762878418
    9. ' ' → logprob: -12.363764762878418
    10. 's' → logprob: -12.613764762878418

Token 518: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.041895508766174316
    2. '{}' → logprob: -3.7918953895568848
    3. ' set' → logprob: -5.166895389556885
    4. 'default' → logprob: -5.291895389556885
    5. 'dict' → logprob: -5.791895389556885
    6. '{' → logprob: -6.416895389556885
    7. '[]' → logprob: -6.541895389556885
    8. ' []' → logprob: -7.916895389556885
    9. ' defaultdict' → logprob: -7.916895389556885
    10. '[' → logprob: -8.291895866394043

Token 519: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005220544408075511
    2. '()
' → logprob: -7.625522136688232
    3. '(ls' → logprob: -11.125521659851074
    4. '(range' → logprob: -11.875521659851074
    5. '()

' → logprob: -12.125521659851074
    6. '()\' → logprob: -13.500521659851074
    7. '([' → logprob: -13.875521659851074
    8. '([]' → logprob: -14.000521659851074
    9. '()]' → logprob: -14.250521659851074
    10. '();' → logprob: -14.500521659851074

Token 520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14228881895542145
    2. 'res' → logprob: -2.51728892326355
    3. 'while' → logprob: -4.142288684844971
    4. 'result' → logprob: -4.267288684844971
    5. 'count' → logprob: -4.892288684844971
    6. 'answer' → logprob: -5.517288684844971
    7. ' res' → logprob: -6.017288684844971
    8. 'ans' → logprob: -6.267288684844971
    9. 'd' → logprob: -6.767288684844971
    10. ' while' → logprob: -6.892288684844971

Token 521: ' cur' (ID: 4396)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1473824381828308
    2. 'ans' → logprob: -3.0223824977874756
    3. 'result' → logprob: -3.6473824977874756
    4. 'while' → logprob: -4.1473822593688965
    5. 'answer' → logprob: -4.5223822593688965
    6. 'count' → logprob: -4.5223822593688965
    7. 'for' → logprob: -5.2723822593688965
    8. 'cnt' → logprob: -5.2723822593688965
    9. 'ret' → logprob: -5.3973822593688965
    10. 'out' → logprob: -6.3973822593688965

Token 522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3738175928592682
    2. '=' → logprob: -2.4988176822662354
    3. '_count' → logprob: -2.6238176822662354
    4. 'count' → logprob: -3.3738176822662354
    5. '_' → logprob: -3.9988176822662354
    6. ',' → logprob: -4.123817443847656
    7. '<|end|>' → logprob: -4.248817443847656
    8. '_length' → logprob: -4.498817443847656
    9. '   ' → logprob: -4.873817443847656
    10. 'length' → logprob: -5.498817443847656

Token 523: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014033865183591843
    2. ' ' → logprob: -4.764033794403076
    3. '-' → logprob: -5.639033794403076
    4. '[]' → logprob: -7.389033794403076
    5. 'heap' → logprob: -8.014034271240234
    6. ' -' → logprob: -8.139034271240234
    7. 'base' → logprob: -9.139034271240234
    8. '1' → logprob: -9.389034271240234
    9. ' []' → logprob: -9.764034271240234
    10. 'None' → logprob: -9.889034271240234

Token 524: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023219620808959007
    2. '-' → logprob: -4.523219585418701
    3. 'heap' → logprob: -5.148219585418701
    4. '[]' → logprob: -6.023219585418701
    5. 'base' → logprob: -6.398219585418701
    6. 'he' → logprob: -7.523219585418701
    7. 'None' → logprob: -7.898219585418701
    8. 'len' → logprob: -8.02322006225586
    9. 'ls' → logprob: -8.77322006225586
    10. '1' → logprob: -9.02322006225586

Token 525: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4753699004650116
    2. '
' → logprob: -1.850369930267334
    3. '<|end|>' → logprob: -2.100369930267334
    4. ' while' → logprob: -3.350369930267334
    5. '	while' → logprob: -3.600369930267334
    6. 'while' → logprob: -3.975369930267334
    7. ',' → logprob: -5.475369930267334
    8. '    
' → logprob: -5.725369930267334
    9. '<|end|>' → logprob: -6.225369930267334
    10. ':' → logprob: -6.475369930267334

Token 526: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034290081821382046
    2. ' while' → logprob: -6.628428936004639
    3. 'while' → logprob: -7.378428936004639
    4. '    
' → logprob: -7.503428936004639
    5. '	while' → logprob: -8.128429412841797
    6. '
' → logprob: -8.378429412841797
    7. '<|end|>' → logprob: -8.378429412841797
    8. ',' → logprob: -9.378429412841797
    9. ')' → logprob: -10.878429412841797
    10. '	
' → logprob: -11.378429412841797

Token 527: ' tot' (ID: 2417)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3888106942176819
    2. 'while' → logprob: -1.638810634613037
    3. 'ans' → logprob: -2.513810634613037
    4. 'ret' → logprob: -4.013810634613037
    5. 'answer' → logprob: -4.513810634613037
    6. 'result' → logprob: -4.763810634613037
    7. 'out' → logprob: -5.763810634613037
    8. 'max' → logprob: -6.013810634613037
    9. '   ' → logprob: -7.138810634613037
    10. 'best' → logprob: -7.138810634613037

Token 528: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2672369182109833
    2. '=' → logprob: -1.8922369480133057
    3. 'al' → logprob: -2.8922369480133057
    4. ' +=' → logprob: -4.267236709594727
    5. ',' → logprob: -5.017236709594727
    6. '+=' → logprob: -5.142236709594727
    7. ' ' → logprob: -7.392236709594727
    8. 'a' → logprob: -7.892236709594727
    9. 'l' → logprob: -8.642236709594727
    10. 'als' → logprob: -9.267236709594727

Token 529: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004226085729897022
    2. ' ' → logprob: -5.504226207733154
    3. 'len' → logprob: -9.754225730895996
    4. '[' → logprob: -10.504225730895996
    5. '[]' → logprob: -11.379225730895996
    6. 'base' → logprob: -11.504225730895996
    7. 'N' → logprob: -12.004225730895996
    8. '1' → logprob: -12.129225730895996
    9. 'S' → logprob: -12.629225730895996
    10. ' [' → logprob: -13.004225730895996

Token 530: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.376848902320489e-05
    2. ' ' → logprob: -9.750093460083008
    3. 'len' → logprob: -10.875093460083008
    4. 'base' → logprob: -12.125093460083008
    5. 'N' → logprob: -12.750093460083008
    6. '[' → logprob: -13.125093460083008
    7. 'int' → logprob: -13.875093460083008
    8. 'sum' → logprob: -14.000093460083008
    9. 'cur' → logprob: -14.125093460083008
    10. '1' → logprob: -14.250093460083008

Token 531: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17210064828395844
    2. '
' → logprob: -2.17210054397583
    3. ' while' → logprob: -4.04710054397583
    4. '<|end|>' → logprob: -4.42210054397583
    5. 'while' → logprob: -5.29710054397583
    6. '    
' → logprob: -5.42210054397583
    7. '	while' → logprob: -6.42210054397583
    8. ',' → logprob: -6.79710054397583
    9. ')' → logprob: -7.17210054397583
    10. ' 
' → logprob: -8.297101020812988

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01545021403580904
    2. '
' → logprob: -5.2654500007629395
    3. ' while' → logprob: -5.5154500007629395
    4. '<|end|>' → logprob: -5.7654500007629395
    5. '    
' → logprob: -7.0154500007629395
    6. 'while' → logprob: -7.0154500007629395
    7. '	while' → logprob: -7.1404500007629395
    8. ')' → logprob: -8.890450477600098
    9. ',' → logprob: -9.265450477600098
    10. '<|end|>' → logprob: -10.515450477600098

Token 533: ' f' (ID: 285)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.006069221533834934
    2. ' while' → logprob: -6.256069183349609
    3. 'for' → logprob: -6.506069183349609
    4. 'res' → logprob: -6.631069183349609
    5. '   ' → logprob: -6.881069183349609
    6. 'n' → logprob: -9.25606918334961
    7. 'ans' → logprob: -9.75606918334961
    8. 'result' → logprob: -10.63106918334961
    9. 'wh' → logprob: -10.88106918334961
    10. 'answer' → logprob: -11.00606918334961

Token 534: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0033823191188275814
    2. 'req' → logprob: -6.003382205963135
    3. 'rom' → logprob: -8.503382682800293
    4. 'lag' → logprob: -8.753382682800293
    5. 'o' → logprob: -9.628382682800293
    6. 'e' → logprob: -10.003382682800293
    7. 'irst' → logprob: -10.128382682800293
    8. 'r' → logprob: -10.128382682800293
    9. 'def' → logprob: -10.253382682800293
    10. 'ur' → logprob: -10.878382682800293

Token 535: ' False' (ID: 7983)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.575035810470581
    2. 'alse' → logprob: -1.825035810470581
    3. '0' → logprob: -2.325035810470581
    4. ' lambda' → logprob: -2.575035810470581
    5. 'False' → logprob: -3.825035810470581
    6. '(lambda' → logprob: -3.825035810470581
    7. '[]' → logprob: -3.950035810470581
    8. ' ' → logprob: -4.57503604888916
    9. '1' → logprob: -5.20003604888916
    10. '=lambda' → logprob: -5.45003604888916

Token 536: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36585190892219543
    2. '
' → logprob: -1.615851879119873
    3. '<|end|>' → logprob: -2.490851879119873
    4. ':' → logprob: -5.115851879119873
    5. '    
' → logprob: -5.115851879119873
    6. ' while' → logprob: -6.240851879119873
    7. '	while' → logprob: -6.240851879119873
    8. ')' → logprob: -6.365851879119873
    9. '	
' → logprob: -6.865851879119873
    10. '<|end|>' → logprob: -7.240851879119873

Token 537: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05197005718946457
    2. '
' → logprob: -3.9269700050354004
    3. '<|end|>' → logprob: -4.1769700050354
    4. '    
' → logprob: -5.4269700050354
    5. ' while' → logprob: -5.5519700050354
    6. '	while' → logprob: -5.9269700050354
    7. 'while' → logprob: -6.6769700050354
    8. ':' → logprob: -7.4269700050354
    9. '	
' → logprob: -7.8019700050354
    10. ' for' → logprob: -8.051970481872559

Token 538: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05720606818795204
    2. ' while' → logprob: -3.182206153869629
    3. '   ' → logprob: -4.307206153869629
    4. 'for' → logprob: -7.432206153869629
    5. ' for' → logprob: -10.932206153869629
    6. 'n' → logprob: -11.557206153869629
    7. '	while' → logprob: -11.807206153869629
    8. 'def' → logprob: -13.182206153869629
    9. 'wh' → logprob: -13.307206153869629
    10. '
' → logprob: -14.182206153869629

Token 539: ' use' (ID: 1199)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1492040902376175
    2. 'while' → logprob: -2.0242040157318115
    3. '   ' → logprob: -5.649204254150391
    4. ' for' → logprob: -6.024204254150391
    5. 'for' → logprob: -7.524204254150391
    6. '	while' → logprob: -12.02420425415039
    7. '    ' → logprob: -12.77420425415039
    8. ' ' → logprob: -12.89920425415039
    9. 'While' → logprob: -12.89920425415039
    10. 'n' → logprob: -13.27420425415039

Token 540: ' fast' (ID: 5661)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5405849814414978
    2. 'while' → logprob: -1.0405850410461426
    3. '   ' → logprob: -4.665585041046143
    4. 'for' → logprob: -4.665585041046143
    5. ' for' → logprob: -5.040585041046143
    6. ' ' → logprob: -5.040585041046143
    7. 'ls' → logprob: -5.165585041046143
    8. 'hile' → logprob: -5.165585041046143
    9. '  ' → logprob: -5.915585041046143
    10. ' ls' → logprob: -6.040585041046143

Token 541: ' local' (ID: 2698)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.812528371810913
    2. 'while' → logprob: -1.937528371810913
    3. 'he' → logprob: -2.187528371810913
    4. 'lookup' → logprob: -2.812528371810913
    5. 'heap' → logprob: -2.812528371810913
    6. 'pop' → logprob: -3.062528371810913
    7. 'skip' → logprob: -3.312528371810913
    8. 'continue' → logprob: -3.562528371810913
    9. 'push' → logprob: -3.687528371810913
    10. 'peek' → logprob: -3.687528371810913

Token 542: ' variable' (ID: 11076)
  Prédit: ' variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.6528129577636719
    2. 'min' → logprob: -2.152812957763672
    3. 'variables' → logprob: -2.527812957763672
    4. 'max' → logprob: -2.527812957763672
    5. 'for' → logprob: -2.902812957763672
    6. ' variable' → logprob: -3.777812957763672
    7. 'variable' → logprob: -4.027812957763672
    8. 'd' → logprob: -4.027812957763672
    9. ' for' → logprob: -4.402812957763672
    10. 'def' → logprob: -4.402812957763672

Token 543: ' alias' (ID: 26026)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.31435248255729675
    2. ' ls' → logprob: -2.189352512359619
    3. '   ' → logprob: -2.689352512359619
    4. ' for' → logprob: -3.814352512359619
    5. ' while' → logprob: -3.939352512359619
    6. 'while' → logprob: -5.064352512359619
    7. 'for' → logprob: -5.314352512359619
    8. ' l' → logprob: -5.689352512359619
    9. 's' → logprob: -5.689352512359619
    10. '_' → logprob: -6.189352512359619

Token 544: 'ing' (ID: 289)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2701790928840637
    2. ' ls' → logprob: -2.520179033279419
    3. 'ls' → logprob: -2.645179033279419
    4. ' for' → logprob: -3.270179033279419
    5. ' =' → logprob: -4.395179271697998
    6. 's' → logprob: -4.895179271697998
    7. ' l' → logprob: -5.270179271697998
    8. 'for' → logprob: -5.770179271697998
    9. '=' → logprob: -5.770179271697998
    10. 'f' → logprob: -6.520179271697998

Token 545: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05948273837566376
    2. 'ls' → logprob: -3.9344828128814697
    3. 'he' → logprob: -4.684482574462891
    4. 'l' → logprob: -5.184482574462891
    5. ' ls' → logprob: -5.934482574462891
    6. ' he' → logprob: -6.059482574462891
    7. 'heap' → logprob: -6.184482574462891
    8. ' l' → logprob: -6.309482574462891
    9. 'pop' → logprob: -6.434482574462891
    10. 'push' → logprob: -6.809482574462891

Token 546: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44763779640197754
    2. ' for' → logprob: -1.9476377964019775
    3. ' while' → logprob: -2.0726377964019775
    4. 'while' → logprob: -3.4476377964019775
    5. 'for' → logprob: -3.9476377964019775
    6. 'ls' → logprob: -5.072637557983398
    7. '    
' → logprob: -5.322637557983398
    8. ' ls' → logprob: -5.322637557983398
    9. 'he' → logprob: -5.697637557983398
    10. ' l' → logprob: -5.697637557983398

Token 547: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.24337682127952576
    2. ' he' → logprob: -3.2433767318725586
    3. 'heap' → logprob: -3.2433767318725586
    4. 'l' → logprob: -3.4933767318725586
    5. 'ls' → logprob: -3.6183767318725586
    6. 'h' → logprob: -3.8683767318725586
    7. 'push' → logprob: -3.9933767318725586
    8. '   ' → logprob: -4.743376731872559
    9. 'pop' → logprob: -4.868376731872559
    10. 'while' → logprob: -4.868376731872559

Token 548: 'app' (ID: 903)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.026407703757286072
    2. 'app' → logprob: -3.6514077186584473
    3. '   ' → logprob: -9.651407241821289
    4. 'a' → logprob: -11.151407241821289
    5. 'ап' → logprob: -12.026407241821289
    6. '```' → logprob: -12.276407241821289
    7. '       ' → logprob: -12.401407241821289
    8. '  ' → logprob: -13.026407241821289
    9. '	ap' → logprob: -13.026407241821289
    10. 'apk' → logprob: -13.526407241821289

Token 549: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3869365453720093
    2. 'ush' → logprob: -1.1369365453720093
    3. 'o' → logprob: -10.26193618774414
    4. '   ' → logprob: -11.88693618774414
    5. '```' → logprob: -12.38693618774414
    6. 'opf' → logprob: -12.88693618774414
    7. 'push' → logprob: -13.26193618774414
    8. 'us' → logprob: -13.38693618774414
    9. ' op' → logprob: -13.51193618774414
    10. 'osh' → logprob: -13.63693618774414

Token 550: ' =' (ID: 314)
  Prédit: '(ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -0.002791088307276368
    2. 'ls' → logprob: -6.127790927886963
    3. '_ls' → logprob: -8.127791404724121
    4. ',' → logprob: -9.627791404724121
    5. '(rs' → logprob: -9.627791404724121
    6. ' =' → logprob: -9.877791404724121
    7. '=' → logprob: -10.752791404724121
    8. '<|end|>' → logprob: -11.002791404724121
    9. '(heap' → logprob: -11.127791404724121
    10. '(' → logprob: -11.252791404724121

Token 551: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -5.347765181795694e-05
    2. ' heap' → logprob: -9.875053405761719
    3. 'import' → logprob: -13.500053405761719
    4. '(heap' → logprob: -15.500053405761719
    5. 'he' → logprob: -15.875053405761719
    6. '   ' → logprob: -17.00005340576172
    7. ' ' → logprob: -17.12505340576172
    8. '.heap' → logprob: -17.62505340576172
    9. '_heap' → logprob: -18.62505340576172
    10. '
' → logprob: -19.12505340576172

Token 552: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.827200897736475e-05
    2. 'pop' → logprob: -10.000078201293945
    3. '.pop' → logprob: -11.000078201293945
    4. 'op' → logprob: -11.250078201293945
    5. 'app' → logprob: -14.500078201293945
    6. '[' → logprob: -14.750078201293945
    7. '.he' → logprob: -14.875078201293945
    8. 'ify' → logprob: -15.000078201293945
    9. 'u' → logprob: -15.125078201293945
    10. 'import' → logprob: -15.250078201293945

Token 553: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -8.41866585687967e-06
    2. '.' → logprob: -12.000008583068848
    3. 'he' → logprob: -14.000008583068848
    4. '.pop' → logprob: -14.125008583068848
    5. '.heap' → logprob: -15.375008583068848
    6. ' he' → logprob: -15.875008583068848
    7. '.h' → logprob: -16.00000762939453
    8. '.He' → logprob: -16.37500762939453
    9. '_he' → logprob: -16.75000762939453
    10. ' .' → logprob: -18.00000762939453

Token 554: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.9743012671824545e-05
    2. 'ap' → logprob: -10.875020027160645
    3. 'pp' → logprob: -14.500020027160645
    4. 'APP' → logprob: -16.625019073486328
    5. ' app' → logprob: -16.875019073486328
    6. 'App' → logprob: -18.500019073486328
    7. '(app' → logprob: -18.625019073486328
    8. 'ап' → logprob: -18.750019073486328
    9. '	app' → logprob: -18.750019073486328
    10. 'a' → logprob: -18.875019073486328

Token 555: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.3782830137643032e-05
    2. 'pop' → logprob: -11.62501335144043
    3. 'app' → logprob: -12.37501335144043
    4. 'p' → logprob: -15.37501335144043
    5. 'pp' → logprob: -16.00001335144043
    6. 'ush' → logprob: -16.37501335144043
    7. 'o' → logprob: -16.75001335144043
    8. 'opp' → logprob: -16.87501335144043
    9. 'ap' → logprob: -17.25001335144043
    10. ' op' → logprob: -17.62501335144043

Token 556: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 557: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20015548169612885
    2. '    
' → logprob: -2.95015549659729
    3. '<|end|>' → logprob: -3.20015549659729
    4. ',' → logprob: -3.82515549659729
    5. '
' → logprob: -3.95015549659729
    6. ' he' → logprob: -4.700155258178711
    7. 'he' → logprob: -5.450155258178711
    8. ' 
' → logprob: -5.575155258178711
    9. '    ' → logprob: -5.700155258178711
    10. ' ' → logprob: -5.700155258178711

Token 558: ' while' (ID: 2049)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.08357324451208115
    2. 'while' (adapté à ' while') → logprob: -2.708573341369629
    3. ' while' → logprob: -5.083573341369629
    4. 'heap' → logprob: -5.583573341369629
    5. 'for' → logprob: -6.458573341369629
    6. ' he' → logprob: -7.333573341369629
    7. '   ' → logprob: -7.708573341369629
    8. 'ls' → logprob: -7.958573341369629
    9. 'def' → logprob: -8.208573341369629
    10. ' for' → logprob: -9.208573341369629

Token 559: ' ls' (ID: 41498)
  Prédit: ' ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ls' → logprob: -0.06470279395580292
    2. 'ls' → logprob: -2.8147027492523193
    3. ' rs' → logprob: -6.689702987670898
    4. '(ls' → logprob: -6.814702987670898
    5. ' len' → logprob: -8.689702987670898
    6. 'rs' → logprob: -9.189702987670898
    7. ' True' → logprob: -10.439702987670898
    8. 'len' → logprob: -10.689702987670898
    9. ' not' → logprob: -10.814702987670898
    10. 'True' → logprob: -11.564702987670898

Token 560: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06992708891630173
    2. ':' → logprob: -3.0699269771575928
    3. 'and' → logprob: -4.694927215576172
    4. ' or' → logprob: -4.944927215576172
    5. '[' → logprob: -5.444927215576172
    6. ':
' → logprob: -7.819927215576172
    7. '   ' → logprob: -9.694927215576172
    8. '	and' → logprob: -10.819927215576172
    9. 'or' → logprob: -11.319927215576172
    10. ')' → logprob: -12.319927215576172

Token 561: ' rs' (ID: 15181)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.1456085443496704
    2. '-r' → logprob: -1.3956085443496704
    3. 'rs' → logprob: -1.7706085443496704
    4. '-l' → logprob: -2.645608425140381
    5. '(rs' → logprob: -2.645608425140381
    6. 'ls' → logprob: -3.895608425140381
    7. '-' → logprob: -4.020608425140381
    8. '-cur' → logprob: -4.395608425140381
    9. '(ls' → logprob: -4.395608425140381
    10. 'he' → logprob: -4.770608425140381

Token 562: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6129594445228577
    2. '[' → logprob: -0.8629594445228577
    3. ':' → logprob: -3.612959384918213
    4. ':
' → logprob: -5.112959384918213
    5. 'and' → logprob: -5.737959384918213
    6. '   ' → logprob: -10.112959861755371
    7. ',' → logprob: -11.112959861755371
    8. '[
' → logprob: -11.487959861755371
    9. '>' → logprob: -11.612959861755371
    10. ' ' → logprob: -11.862959861755371

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018030179664492607
    2. '   ' → logprob: -4.393030166625977
    3. ',' → logprob: -6.643030166625977
    4. '    ' → logprob: -7.018030166625977
    5. ':' → logprob: -7.393030166625977
    6. '```' → logprob: -7.518030166625977
    7. '[' → logprob: -7.643030166625977
    8. '<|end|>' → logprob: -8.268030166625977
    9. ' ' → logprob: -8.893030166625977
    10. ' :' → logprob: -9.018030166625977

Token 564: ' while' (ID: 2049)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5815628170967102
    2. 'if' → logprob: -0.9565628170967102
    3. 'x' → logprob: -4.7065629959106445
    4. '       ' → logprob: -4.8315629959106445
    5. 'vl' → logprob: -4.9565629959106445
    6. '   ' → logprob: -5.3315629959106445
    7. 'li' → logprob: -5.3315629959106445
    8. 'lv' → logprob: -5.3315629959106445
    9. 'ls' → logprob: -6.0815629959106445
    10. 'lc' → logprob: -6.3315629959106445

Token 565: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.5070578455924988
    2. ' ls' → logprob: -1.0070579051971436
    3. ' rs' → logprob: -4.6320576667785645
    4. ' True' → logprob: -4.7570576667785645
    5. 'True' → logprob: -5.3820576667785645
    6. 'rs' → logprob: -6.0070576667785645
    7. ' -' → logprob: -6.5070576667785645
    8. '-l' → logprob: -6.6320576667785645
    9. '-' → logprob: -6.7570576667785645
    10. '(ls' → logprob: -6.7570576667785645

Token 566: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16192765533924103
    2. '[' → logprob: -2.2869277000427246
    3. 'and' → logprob: -3.5369277000427246
    4. ':' → logprob: -4.036927700042725
    5. ':
' → logprob: -7.536927700042725
    6. '[-' → logprob: -8.036927223205566
    7. '   ' → logprob: -8.786927223205566
    8. '	and' → logprob: -9.911927223205566
    9. ' ' → logprob: -10.911927223205566
    10. '```' → logprob: -11.411927223205566

Token 567: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5418928861618042
    2. '[' → logprob: -0.9168928861618042
    3. 'and' → logprob: -4.291893005371094
    4. ',' → logprob: -6.791893005371094
    5. '       ' → logprob: -7.041893005371094
    6. '   ' → logprob: -7.541893005371094
    7. '           ' → logprob: -7.791893005371094
    8. ':' → logprob: -7.916893005371094
    9. ':
' → logprob: -7.916893005371094
    10. '[cur' → logprob: -9.041893005371094

Token 568: ' l' (ID: 305)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4457322657108307
    2. ' l' → logprob: -1.5707322359085083
    3. '   ' → logprob: -3.695732355117798
    4. ',' → logprob: -3.945732355117798
    5. ' x' → logprob: -4.445732116699219
    6. 'if' → logprob: -4.445732116699219
    7. ' cur' → logprob: -4.570732116699219
    8. ' top' → logprob: -4.695732116699219
    9. '           ' → logprob: -4.695732116699219
    10. '       ' → logprob: -4.945732116699219

Token 569: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9477105140686035
    2. '=' → logprob: -1.4477105140686035
    3. '_item' → logprob: -1.8227105140686035
    4. '_val' → logprob: -2.4477105140686035
    5. '_i' → logprob: -3.0727105140686035
    6. 'i' → logprob: -3.8227105140686035
    7. '_' → logprob: -4.6977105140686035
    8. 's' → logprob: -4.8227105140686035
    9. '_pos' → logprob: -4.9477105140686035
    10. 'ist' → logprob: -5.0727105140686035

Token 570: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008918029256165028
    2. 'idx' → logprob: -5.133917808532715
    3. ' i' → logprob: -6.133917808532715
    4. '_i' → logprob: -7.508917808532715
    5. ' idx' → logprob: -10.008917808532715
    6. 'ii' → logprob: -10.133917808532715
    7. '	i' → logprob: -10.508917808532715
    8. 'ind' → logprob: -10.633917808532715
    9. 'index' → logprob: -11.008917808532715
    10. '_' → logprob: -11.383917808532715

Token 571: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889165729284286
    2. ' =' → logprob: -2.5788917541503906
    3. '   ' → logprob: -14.70389175415039
    4. ' ' → logprob: -14.70389175415039
    5. 'he' → logprob: -15.32889175415039
    6. ',' → logprob: -15.82889175415039
    7. '    ' → logprob: -16.20389175415039
    8. '=

' → logprob: -16.20389175415039
    9. '       ' → logprob: -16.95389175415039
    10. '=l' → logprob: -17.07889175415039

Token 572: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.7078263163566589
    2. '-div' → logprob: -1.2078263759613037
    3. ' div' → logprob: -2.0828263759613037
    4. '-' → logprob: -3.7078263759613037
    5. 'heap' → logprob: -4.207826137542725
    6. '(-' → logprob: -4.332826137542725
    7. ' -' → logprob: -4.457826137542725
    8. '-he' → logprob: -5.082826137542725
    9. '-(' → logprob: -5.207826137542725
    10. '-l' → logprob: -5.832826137542725

Token 573: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00010509284038562328
    2. '(ls' → logprob: -9.875104904174805
    3. 'ls' → logprob: -10.125104904174805
    4. 'abs' → logprob: -12.625104904174805
    5. 'm' → logprob: -13.500104904174805
    6. '(-' → logprob: -13.750104904174805
    7. 'he' → logprob: -13.750104904174805
    8. '(' → logprob: -14.000104904174805
    9. 'ms' → logprob: -14.250104904174805
    10. '=' → logprob: -14.250104904174805

Token 574: '(' (ID: 7)
  Prédit: '-he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-he' → logprob: -0.5276668071746826
    2. '-' → logprob: -1.4026668071746826
    3. 'he' → logprob: -2.0276668071746826
    4. '(-' → logprob: -4.277667045593262
    5. ' -' → logprob: -4.527667045593262
    6. 'heap' → logprob: -5.152667045593262
    7. '   ' → logprob: -7.777667045593262
    8. '-(' → logprob: -7.902667045593262
    9. ' he' → logprob: -8.027667045593262
    10. 'abs' → logprob: -8.402667045593262

Token 575: 'he' (ID: 273)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5322573184967041
    2. '-he' → logprob: -1.282257318496704
    3. 'he' → logprob: -2.157257318496704
    4. ' -' → logprob: -4.407257080078125
    5. 'heap' → logprob: -5.407257080078125
    6. '-l' → logprob: -7.032257080078125
    7. '(-' → logprob: -7.157257080078125
    8. ' he' → logprob: -7.907257080078125
    9. '-(' → logprob: -8.157257080078125
    10. 'ls' → logprob: -8.657257080078125

Token 576: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.4121114822482923e-06
    2. 'pp' → logprob: -13.375003814697266
    3. 'ap' → logprob: -13.625003814697266
    4. 'a' → logprob: -14.875003814697266
    5. ' app' → logprob: -16.750003814697266
    6. '[' → logprob: -17.000003814697266
    7. 'he' → logprob: -17.125003814697266
    8. 'e' → logprob: -18.375003814697266
    9. 'q' → logprob: -18.375003814697266
    10. 'pop' → logprob: -19.000003814697266

Token 577: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.5213274309644476e-05
    2. 'pop' → logprob: -11.750015258789062
    3. 'p' → logprob: -12.250015258789062
    4. 'оп' → logprob: -13.875015258789062
    5. ' op' → logprob: -15.125015258789062
    6. 'ap' → logprob: -15.625015258789062
    7. 'o' → logprob: -15.750015258789062
    8. '   ' → logprob: -16.125015258789062
    9. '	op' → logprob: -16.125015258789062
    10. 'opleft' → logprob: -16.500015258789062

Token 578: '(ls' (ID: 128476)
  Prédit: '(ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -0.005242414306849241
    2. 'ls' → logprob: -5.255242347717285
    3. ' ls' → logprob: -12.255242347717285
    4. '(' → logprob: -13.630242347717285
    5. '(
' → logprob: -14.380242347717285
    6. '_ls' → logprob: -14.505242347717285
    7. 'Ls' → logprob: -14.630242347717285
    8. 'LS' → logprob: -15.505242347717285
    9. ')' → logprob: -15.505242347717285
    10. '```' → logprob: -15.630242347717285

Token 579: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07658202201128006
    2. '),' → logprob: -2.7015819549560547
    3. ')[' → logprob: -5.451581954956055
    4. ' ,' → logprob: -7.201581954956055
    5. '(),' → logprob: -7.701581954956055
    6. '(' → logprob: -8.076581954956055
    7. '(base' → logprob: -9.076581954956055
    8. ')' → logprob: -9.201581954956055
    9. '   ' → logprob: -9.326581954956055
    10. '[' → logprob: -9.576581954956055

Token 580: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.03800591081380844
    2. '-base' → logprob: -3.413005828857422
    3. ' base' → logprob: -5.538005828857422
    4. '-' → logprob: -8.663005828857422
    5. ' -' → logprob: -8.663005828857422
    6. '(base' → logprob: -10.788005828857422
    7. '-b' → logprob: -10.788005828857422
    8. '(-' → logprob: -12.413005828857422
    9. ' ' → logprob: -12.538005828857422
    10. 'b' → logprob: -13.038005828857422

Token 581: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5233322978019714
    2. ')' → logprob: -0.8983322978019714
    3. '       ' → logprob: -10.148332595825195
    4. ')

' → logprob: -10.273332595825195
    5. ');' → logprob: -10.648332595825195
    6. ')
' → logprob: -10.648332595825195
    7. '           ' → logprob: -10.648332595825195
    8. '),' → logprob: -10.898332595825195
    9. '   ' → logprob: -11.148332595825195
    10. ');
' → logprob: -12.023332595825195

Token 582: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5019221901893616
    2. '       ' → logprob: -1.1269221305847168
    3. ' if' → logprob: -2.876922130584717
    4. 'if' → logprob: -5.751922130584717
    5. '<|end|>' → logprob: -5.751922130584717
    6. '+' → logprob: -6.001922130584717
    7. '
' → logprob: -6.751922130584717
    8. ')' → logprob: -7.251922130584717
    9. ' +' → logprob: -7.501922130584717
    10. ',' → logprob: -7.626922130584717

Token 583: ' l' (ID: 305)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7134217023849487
    2. '           ' → logprob: -0.8384217023849487
    3. 'if' → logprob: -3.2134218215942383
    4. '       ' → logprob: -3.9634218215942383
    5. ' d' → logprob: -4.713421821594238
    6. 'd' → logprob: -4.963421821594238
    7. '+' → logprob: -6.838421821594238
    8. ' l' → logprob: -8.213421821594238
    9. '               ' → logprob: -8.463421821594238
    10. '   ' → logprob: -8.588421821594238

Token 584: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19627653062343597
    2. '*=' → logprob: -2.3212764263153076
    3. '+=' → logprob: -3.8212764263153076
    4. '           ' → logprob: -4.196276664733887
    5. ' =' → logprob: -4.321276664733887
    6. '=-' → logprob: -4.946276664733887
    7. '
' → logprob: -5.071276664733887
    8. '<' → logprob: -5.821276664733887
    9. ',' → logprob: -5.821276664733887
    10. ' *=' → logprob: -5.946276664733887

Token 585: ' -' (ID: 533)
  Prédit: '-l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.04314648360013962
    2. '-' → logprob: -3.4181463718414307
    3. ' -' → logprob: -4.79314661026001
    4. '-i' → logprob: -8.168146133422852
    5. '-int' → logprob: -8.543146133422852
    6. '-stop' → logprob: -8.918146133422852
    7. '-code' → logprob: -10.168146133422852
    8. '-ip' → logprob: -10.168146133422852
    9. '-num' → logprob: -10.668146133422852
    10. '-base' → logprob: -10.918146133422852

Token 586: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.842555426876061e-06
    2. ' l' → logprob: -12.250004768371582
    3. '1' → logprob: -17.6250057220459
    4. '	l' → logprob: -19.8750057220459
    5. 'int' → logprob: -20.6250057220459
    6. '   ' → logprob: -21.0000057220459
    7. ' ' → logprob: -21.5000057220459
    8. '
' → logprob: -21.5000057220459
    9. '```' → logprob: -21.5000057220459
    10. '           ' → logprob: -21.7500057220459

Token 587: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08360855281352997
    2. '       ' → logprob: -2.833608627319336
    3. '
' → logprob: -4.333608627319336
    4. '<|end|>' → logprob: -5.333608627319336
    5. '		' → logprob: -6.583608627319336
    6. ',' → logprob: -7.833608627319336
    7. ' if' → logprob: -7.958608627319336
    8. '<|end|>' → logprob: -8.208608627319336
    9. '	       ' → logprob: -8.333608627319336
    10. '   ' → logprob: -8.958608627319336

Token 588: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21871276199817657
    2. '       ' → logprob: -1.8437128067016602
    3. ' if' → logprob: -4.09371280670166
    4. '<|end|>' → logprob: -4.59371280670166
    5. '
' → logprob: -4.84371280670166
    6. 'if' → logprob: -6.34371280670166
    7. ',' → logprob: -7.59371280670166
    8. '<|end|>' → logprob: -8.21871280670166
    9. '            
' → logprob: -8.46871280670166
    10. '        
' → logprob: -8.84371280670166

Token 589: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15043699741363525
    2. ' if' → logprob: -3.0254368782043457
    3. 'd' → logprob: -3.1504368782043457
    4. 'if' (adapté à ' if') → logprob: -3.1504368782043457
    5. '       ' → logprob: -5.650436878204346
    6. ' d' → logprob: -6.400436878204346
    7. '   ' → logprob: -9.525437355041504
    8. 'f' → logprob: -10.150437355041504
    9. 's' → logprob: -10.525437355041504
    10. 'break' → logprob: -10.900437355041504

Token 590: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004605995491147041
    2. 'not' → logprob: -6.129605770111084
    3. 'l' → logprob: -6.754605770111084
    4. ' i' → logprob: -7.504605770111084
    5. 'f' → logprob: -7.879605770111084
    6. '   ' → logprob: -9.004606246948242
    7. '(i' → logprob: -9.379606246948242
    8. ' not' → logprob: -10.129606246948242
    9. '(not' → logprob: -10.504606246948242
    10. ' ' → logprob: -11.754606246948242

Token 591: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.44255122542381287
    2. ' not' → logprob: -1.0675512552261353
    3. 'in' → logprob: -4.817551136016846
    4. 'not' → logprob: -5.192551136016846
    5. ')' → logprob: -10.692551612854004
    6. ' ' → logprob: -10.692551612854004
    7. '>=' → logprob: -10.942551612854004
    8. '>' → logprob: -11.442551612854004
    9. '==' → logprob: -11.567551612854004
    10. '<|end|>' → logprob: -12.192551612854004

Token 592: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00014048899174667895
    2. ' d' → logprob: -8.875140190124512
    3. '
' → logprob: -15.750140190124512
    4. ')d' → logprob: -15.750140190124512
    5. ')' → logprob: -16.125141143798828
    6. '<|end|>' → logprob: -16.875141143798828
    7. '...' → logprob: -17.375141143798828
    8. '   ' → logprob: -17.625141143798828
    9. 'f' → logprob: -17.625141143798828
    10. ' ' → logprob: -18.000141143798828

Token 593: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.292907877039397e-06
    2. 'et' → logprob: -13.25000286102295
    3. ' set' → logprob: -14.37500286102295
    4. 'd' → logprob: -15.50000286102295
    5. 's' → logprob: -15.75000286102295
    6. ')set' → logprob: -15.87500286102295
    7. '```' → logprob: -16.375003814697266
    8. '
' → logprob: -16.375003814697266
    9. '   ' → logprob: -16.625003814697266
    10. ')' → logprob: -16.750003814697266

Token 594: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5384166240692139
    2. ':' → logprob: -0.9134166240692139
    3. '               ' → logprob: -4.288416862487793
    4. ' or' → logprob: -7.038416862487793
    5. '           ' → logprob: -8.288416862487793
    6. '):
' → logprob: -9.163416862487793
    7. ' and' → logprob: -9.663416862487793
    8. ' :
' → logprob: -10.538416862487793
    9. '():
' → logprob: -10.538416862487793
    10. ':return' → logprob: -10.788416862487793

Token 595: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007883060025051236
    2. ' break' → logprob: -7.87578821182251
    3. 'break' → logprob: -8.125788688659668
    4. '	           ' → logprob: -10.625788688659668
    5. '			' → logprob: -11.000788688659668
    6. '	break' → logprob: -11.000788688659668
    7. '           ' → logprob: -11.000788688659668
    8. '		       ' → logprob: -12.000788688659668
    9. ' continue' → logprob: -12.250788688659668
    10. 'continue' → logprob: -12.375788688659668

Token 596: ' d' (ID: 272)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6198961138725281
    2. '               ' → logprob: -0.8698961138725281
    3. 'continue' → logprob: -3.244896173477173
    4. ' break' → logprob: -5.994895935058594
    5. '           ' → logprob: -6.869895935058594
    6. 'break' → logprob: -8.744895935058594
    7. '                   ' → logprob: -9.244895935058594
    8. ' he' → logprob: -9.244895935058594
    9. '   ' → logprob: -10.119895935058594
    10. '	continue' → logprob: -11.244895935058594

Token 597: 'set' (ID: 977)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.14227692782878876
    2. '           ' → logprob: -2.3922770023345947
    3. '               ' → logprob: -3.6422770023345947
    4. ' continue' → logprob: -4.517276763916016
    5. 'set' → logprob: -6.392276763916016
    6. '       ' → logprob: -7.142276763916016
    7. 'contin' → logprob: -7.767276763916016
    8. '	continue' → logprob: -8.642276763916016
    9. '=set' → logprob: -8.642276763916016
    10. '=' → logprob: -8.767276763916016

Token 598: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.05393010750412941
    2. '.dis' → logprob: -3.0539300441741943
    3. '.' → logprob: -5.303930282592773
    4. '.add' → logprob: -8.553930282592773
    5. 'discard' → logprob: -9.928930282592773
    6. 'remove' → logprob: -10.428930282592773
    7. '                   ' → logprob: -10.428930282592773
    8. '               ' → logprob: -10.553930282592773
    9. ' .' → logprob: -11.303930282592773
    10. '           ' → logprob: -11.803930282592773

Token 599: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. 'i' → logprob: -16.5
    4. '(
' → logprob: -18.5
    5. ' (' → logprob: -20.0
    6. ' i' → logprob: -20.5
    7. '{i' → logprob: -20.875
    8. '(ii' → logprob: -21.125
    9. '(I' → logprob: -21.375
    10. '[i' → logprob: -21.375

Token 600: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2701750099658966
    2. ')' → logprob: -1.6451749801635742
    3. '           ' → logprob: -3.145174980163574
    4. '               ' → logprob: -7.395174980163574
    5. ')
' → logprob: -9.520174980163574
    6. '):
' → logprob: -12.020174980163574
    7. ' )
' → logprob: -12.145174980163574
    8. ')

' → logprob: -12.145174980163574
    9. '       ' → logprob: -13.270174980163574
    10. '                   ' → logprob: -13.395174980163574

Token 601: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5231888294219971
    2. '               ' → logprob: -0.8981888294219971
    3. ' else' → logprob: -11.273188591003418
    4. '       ' → logprob: -11.523188591003418
    5. '                   ' → logprob: -11.648188591003418
    6. 'else' → logprob: -12.148188591003418
    7. 'continue' → logprob: -12.398188591003418
    8. ' continue' → logprob: -12.523188591003418
    9. ',' → logprob: -12.523188591003418
    10. '<|end|>' → logprob: -12.773188591003418

Token 602: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06153465434908867
    2. ' else' → logprob: -2.9365346431732178
    3. 'else' → logprob: -5.061534881591797
    4. '               ' → logprob: -8.436534881591797
    5. ' elif' → logprob: -10.311534881591797
    6. '       ' → logprob: -10.936534881591797
    7. ',' → logprob: -12.311534881591797
    8. 'elif' (adapté à ' elif') → logprob: -12.436534881591797
    9. '            ' → logprob: -12.561534881591797
    10. '          ' → logprob: -13.061534881591797

Token 603: ' cur' (ID: 4396)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2150088548660278
    2. 'cur' → logprob: -1.5900088548660278
    3. 'not' → logprob: -1.8400088548660278
    4. ' not' → logprob: -1.8400088548660278
    5. 'i' → logprob: -2.5900087356567383
    6. ' l' → logprob: -2.7150087356567383
    7. ' cur' → logprob: -4.590008735656738
    8. ' i' → logprob: -4.715008735656738
    9. 'len' → logprob: -4.715008735656738
    10. 'True' → logprob: -5.965008735656738

Token 604: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5236436724662781
    2. ' ==' → logprob: -1.0236437320709229
    3. ' <' → logprob: -4.523643493652344
    4. '<=' → logprob: -4.773643493652344
    5. ' +=' → logprob: -5.023643493652344
    6. '+=' → logprob: -5.148643493652344
    7. ' <=' → logprob: -5.398643493652344
    8. '<' → logprob: -5.773643493652344
    9. '>' → logprob: -6.523643493652344
    10. '>=' → logprob: -6.523643493652344

Token 605: ' l' (ID: 305)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7343229651451111
    2. 'l' → logprob: -0.7343229651451111
    3. 'i' → logprob: -3.984323024749756
    4. 'base' → logprob: -4.984323024749756
    5. 'len' → logprob: -6.109323024749756
    6. '0' → logprob: -6.109323024749756
    7. ' N' → logprob: -6.234323024749756
    8. 'S' → logprob: -6.484323024749756
    9. 'tot' → logprob: -6.484323024749756
    10. ' l' → logprob: -6.734323024749756

Token 606: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22340676188468933
    2. ':' → logprob: -1.8484067916870117
    3. '               ' → logprob: -3.5984067916870117
    4. ' and' → logprob: -4.598406791687012
    5. '           ' → logprob: -5.723406791687012
    6. '):
' → logprob: -7.723406791687012
    7. '+' → logprob: -8.098406791687012
    8. ',' → logprob: -8.348406791687012
    9. ' :
' → logprob: -8.348406791687012
    10. ' :' → logprob: -8.723406791687012

Token 607: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013254800578579307
    2. ' cur' → logprob: -7.376325607299805
    3. '           ' → logprob: -8.376325607299805
    4. 'cur' → logprob: -8.501325607299805
    5. ',' → logprob: -9.376325607299805
    6. ':
' → logprob: -10.251325607299805
    7. 'break' → logprob: -10.626325607299805
    8. ' break' → logprob: -11.001325607299805
    9. '                   ' → logprob: -11.126325607299805
    10. '       ' → logprob: -11.376325607299805

Token 608: ' tot' (ID: 2417)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6590785980224609
    2. 'cur' → logprob: -1.034078598022461
    3. '       ' → logprob: -3.034078598022461
    4. ' break' → logprob: -3.284078598022461
    5. '           ' → logprob: -3.909078598022461
    6. ' cur' → logprob: -4.534078598022461
    7. '               ' → logprob: -4.909078598022461
    8. 'if' → logprob: -6.284078598022461
    9. ' if' → logprob: -7.409078598022461
    10. 'f' → logprob: -8.034078598022461

Token 609: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.49056634306907654
    2. ' +=' → logprob: -1.115566372871399
    3. '=' → logprob: -2.9905662536621094
    4. ' =' → logprob: -4.740566253662109
    5. '+' → logprob: -7.990566253662109
    6. ',' → logprob: -8.61556625366211
    7. '   ' → logprob: -9.36556625366211
    8. '       ' → logprob: -9.86556625366211
    9. '-=' → logprob: -9.99056625366211
    10. ' -=' → logprob: -10.24056625366211

Token 610: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.607725203037262
    2. 'cur' → logprob: -0.857725203037262
    3. '(cur' → logprob: -4.732725143432617
    4. '(l' → logprob: -4.857725143432617
    5. 'base' → logprob: -5.482725143432617
    6. '1' → logprob: -5.732725143432617
    7. 'max' → logprob: -6.357725143432617
    8. 'r' → logprob: -6.982725143432617
    9. '(base' → logprob: -7.232725143432617
    10. '(' → logprob: -7.232725143432617

Token 611: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2819622755050659
    2. '-' → logprob: -1.406962275505066
    3. '-cur' → logprob: -7.1569623947143555
    4. '<|end|>' → logprob: -11.781962394714355
    5. '   ' → logprob: -12.031962394714355
    6. ' ' → logprob: -13.281962394714355
    7. '               ' → logprob: -13.281962394714355
    8. '-c' → logprob: -13.406962394714355
    9. '...' → logprob: -13.531962394714355
    10. '<|end|>' → logprob: -13.781962394714355

Token 612: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00020354038861114532
    2. ' cur' → logprob: -8.500203132629395
    3. '	cur' → logprob: -17.50020408630371
    4. '(cur' → logprob: -18.12520408630371
    5. '[cur' → logprob: -18.12520408630371
    6. '_cur' → logprob: -20.00020408630371
    7. '
' → logprob: -20.25020408630371
    8. '   ' → logprob: -21.12520408630371
    9. ' ' → logprob: -21.12520408630371
    10. '.cur' → logprob: -21.25020408630371

Token 613: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.591392457485199
    2. '               ' → logprob: -0.841392457485199
    3. 'cur' → logprob: -5.091392517089844
    4. '                
' → logprob: -5.091392517089844
    5. '[cur' → logprob: -7.216392517089844
    6. '\n' → logprob: -7.466392517089844
    7. ' cur' → logprob: -7.716392517089844
    8. '
' → logprob: -8.466392517089844
    9. '                   ' → logprob: -8.716392517089844
    10. ':
' → logprob: -9.216392517089844

Token 614: '               ' (ID: 506)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.22883136570453644
    2. '               ' → logprob: -1.60383141040802
    3. ' cur' → logprob: -5.8538312911987305
    4. '[cur' → logprob: -8.47883129119873
    5. '
' → logprob: -9.22883129119873
    6. '           ' → logprob: -9.85383129119873
    7. '                
' → logprob: -10.22883129119873
    8. 'break' → logprob: -10.35383129119873
    9. '(cur' → logprob: -10.47883129119873
    10. '                   ' → logprob: -10.72883129119873

Token 615: ' d' (ID: 272)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.005946571473032236
    2. ' cur' → logprob: -5.255946636199951
    3. '               ' → logprob: -7.255946636199951
    4. '           ' → logprob: -12.255946159362793
    5. 'f' → logprob: -14.880946159362793
    6. '   ' → logprob: -15.130946159362793
    7. '	cur' → logprob: -15.255946159362793
    8. 'break' → logprob: -15.505946159362793
    9. '                   ' → logprob: -15.755946159362793
    10. '       ' → logprob: -15.755946159362793

Token 616: 'set' (ID: 977)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.009899629279971123
    2. ' cur' → logprob: -4.634899616241455
    3. '[cur' → logprob: -9.634900093078613
    4. '_cur' → logprob: -10.884900093078613
    5. '           ' → logprob: -11.634900093078613
    6. '(cur' → logprob: -11.759900093078613
    7. '               ' → logprob: -11.759900093078613
    8. '       ' → logprob: -11.884900093078613
    9. ' =' → logprob: -12.009900093078613
    10. '=' → logprob: -12.134900093078613

Token 617: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0065031517297029495
    2. '.' → logprob: -5.506503105163574
    3. '=' → logprob: -6.756503105163574
    4. '.clear' → logprob: -6.881503105163574
    5. ' .' → logprob: -8.881503105163574
    6. 'add' → logprob: -10.256503105163574
    7. '.=' → logprob: -10.381503105163574
    8. ' =' → logprob: -11.881503105163574
    9. '.
' → logprob: -12.506503105163574
    10. '.update' → logprob: -12.881503105163574

Token 618: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.25
    3. '(' → logprob: -17.5
    4. ' i' → logprob: -19.75
    5. ' (' → logprob: -20.75
    6. '   ' → logprob: -21.625
    7. '(
' → logprob: -22.25
    8. '	i' → logprob: -22.5
    9. '((' → logprob: -22.5
    10. '{i' → logprob: -22.5

Token 619: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01355828158557415
    2. ')' → logprob: -4.388558387756348
    3. '               ' → logprob: -7.013558387756348
    4. ')
' → logprob: -9.638558387756348
    5. '           ' → logprob: -9.888558387756348
    6. ')

' → logprob: -11.263558387756348
    7. '                   ' → logprob: -11.763558387756348
    8. ' )
' → logprob: -12.138558387756348
    9. ');' → logprob: -13.513558387756348
    10. ',' → logprob: -13.763558387756348

Token 620: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005498887505382299
    2. 'cur' → logprob: -5.630498886108398
    3. '           ' → logprob: -7.130498886108398
    4. '[cur' → logprob: -7.630498886108398
    5. '                   ' → logprob: -8.755498886108398
    6. ' cur' → logprob: -9.130498886108398
    7. '              ' → logprob: -9.255498886108398
    8. '                
' → logprob: -9.505498886108398
    9. '                ' → logprob: -10.380498886108398
    10. '(cur' → logprob: -10.505498886108398

Token 621: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.000784495088737458
    2. ' cur' → logprob: -7.625784397125244
    3. '               ' → logprob: -8.125784873962402
    4. '           ' → logprob: -14.750784873962402
    5. '[cur' → logprob: -16.250783920288086
    6. '(cur' → logprob: -17.000783920288086
    7. '                   ' → logprob: -17.125783920288086
    8. '	cur' → logprob: -17.250783920288086
    9. '       ' → logprob: -18.000783920288086
    10. '                
' → logprob: -18.125783920288086

Token 622: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08909574896097183
    2. ' =' → logprob: -2.4640958309173584
    3. '+=' → logprob: -8.839096069335938
    4. ' +=' → logprob: -11.714096069335938
    5. ',' → logprob: -14.214096069335938
    6. ' ' → logprob: -14.589096069335938
    7. '.=' → logprob: -14.589096069335938
    8. '=
' → logprob: -14.714096069335938
    9. '=l' → logprob: -14.839096069335938
    10. '*=' → logprob: -15.964096069335938

Token 623: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.010594283230602741
    2. ' l' → logprob: -4.635594367980957
    3. 'i' → logprob: -7.260594367980957
    4. 'r' → logprob: -9.260594367980957
    5. ' i' → logprob: -10.385594367980957
    6. 'base' → logprob: -13.260594367980957
    7. ' r' → logprob: -13.385594367980957
    8. 'cur' → logprob: -13.698094367980957
    9. '	l' → logprob: -13.823094367980957
    10. ' ' → logprob: -14.760594367980957

Token 624: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 625: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2294277548789978
    2. '           ' → logprob: -2.1044278144836426
    3. '               ' → logprob: -2.9794278144836426
    4. '<|end|>' → logprob: -4.479427814483643
    5. ')' → logprob: -4.979427814483643
    6. 'elif' → logprob: -5.979427814483643
    7. '   ' → logprob: -6.354427814483643
    8. ' else' → logprob: -6.479427814483643
    9. '.' → logprob: -6.729427814483643
    10. 'else' → logprob: -6.854427814483643

Token 626: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.38399800658226013
    2. '       ' → logprob: -2.383997917175293
    3. '               ' → logprob: -2.383997917175293
    4. '           ' → logprob: -2.883997917175293
    5. ' break' → logprob: -3.633997917175293
    6. 'else' → logprob: -3.883997917175293
    7. 'continue' → logprob: -4.633997917175293
    8. 'elif' → logprob: -4.633997917175293
    9. 'while' → logprob: -5.258997917175293
    10. 'return' → logprob: -5.758997917175293

Token 627: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7073426842689514
    2. '<|end|>' → logprob: -0.7073426842689514
    3. '
' → logprob: -5.582342624664307
    4. '<|end|>' → logprob: -5.832342624664307
    5. '   ' → logprob: -6.457342624664307
    6. '        ' → logprob: -6.957342624664307
    7. '\n' → logprob: -7.082342624664307
    8. '    ' → logprob: -7.207342624664307
    9. '	' → logprob: -7.707342624664307
    10. ')' → logprob: -7.707342624664307

Token 628: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4259532690048218
    2. '<|end|>' → logprob: -1.1759532690048218
    3. ')' → logprob: -4.550953388214111
    4. '   ' → logprob: -4.925953388214111
    5. '        ' → logprob: -5.050953388214111
    6. '    ' → logprob: -5.550953388214111
    7. ' ' → logprob: -5.925953388214111
    8. '+' → logprob: -6.675953388214111
    9. ' while' → logprob: -7.300953388214111
    10. '\n' → logprob: -7.675953388214111

Token 629: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08258664608001709
    2. ' while' → logprob: -4.082586765289307
    3. 'while' → logprob: -4.582586765289307
    4. ' else' → logprob: -4.707586765289307
    5. 'else' (adapté à ' else') → logprob: -4.832586765289307
    6. '        ' → logprob: -4.957586765289307
    7. '   ' → logprob: -4.957586765289307
    8. ' ' → logprob: -5.332586765289307
    9. ')' → logprob: -5.457586765289307
    10. '    ' → logprob: -5.707586765289307

Token 630: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012230133637785912
    2. ' d' → logprob: -5.262229919433594
    3. ':
' → logprob: -6.262229919433594
    4. ':' → logprob: -6.387229919433594
    5. 'd' → logprob: -7.012229919433594
    6. ' if' → logprob: -7.137229919433594
    7. '           ' → logprob: -7.512229919433594
    8. ' l' → logprob: -7.762229919433594
    9. '              ' → logprob: -8.887229919433594
    10. ' :' → logprob: -9.637229919433594

Token 631: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3743056058883667
    2. 'd' → logprob: -2.2493057250976562
    3. ' d' → logprob: -2.4993057250976562
    4. ' i' → logprob: -3.3743057250976562
    5. 'i' → logprob: -3.4993057250976562
    6. '           ' → logprob: -4.124305725097656
    7. ' l' → logprob: -4.499305725097656
    8. ' if' → logprob: -4.624305725097656
    9. 'l' → logprob: -4.749305725097656
    10. 'if' → logprob: -5.749305725097656

Token 632: ' f' (ID: 285)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03931852802634239
    2. 'i' → logprob: -4.164318561553955
    3. ' d' → logprob: -4.164318561553955
    4. '           ' → logprob: -6.164318561553955
    5. 'tot' → logprob: -7.039318561553955
    6. '   ' → logprob: -7.164318561553955
    7. 'if' → logprob: -7.164318561553955
    8. '       ' → logprob: -7.164318561553955
    9. ' i' → logprob: -7.539318561553955
    10. 'l' → logprob: -7.914318561553955

Token 633: ' =' (ID: 314)
  Prédit: 'alse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alse' → logprob: -0.005621585063636303
    2. ' =' → logprob: -5.880621433258057
    3. '=' → logprob: -7.130621433258057
    4. ' False' → logprob: -8.005621910095215
    5. '=False' → logprob: -8.005621910095215
    6. 'False' → logprob: -8.255621910095215
    7. 'break' → logprob: -8.630621910095215
    8. '=True' → logprob: -8.755621910095215
    9. 'or' → logprob: -9.130621910095215
    10. '       ' → logprob: -9.630621910095215

Token 634: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005500668194144964
    2. ' True' → logprob: -5.255500793457031
    3. 'False' → logprob: -8.255500793457031
    4. 'not' → logprob: -12.130500793457031
    5. '1' → logprob: -14.505500793457031
    6. ' False' → logprob: -14.880500793457031
    7. ' not' → logprob: -15.255500793457031
    8. '(True' → logprob: -15.505500793457031
    9. 'true' → logprob: -16.25550079345703
    10. '=True' → logprob: -17.25550079345703

Token 635: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 636: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 637: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7485648393630981
    2. 'break' (adapté à ' break') → logprob: -1.2485648393630981
    3. '               ' → logprob: -1.4985648393630981
    4. ' return' → logprob: -4.873564720153809
    5. 'return' → logprob: -5.248564720153809
    6. '           ' → logprob: -6.123564720153809
    7. '       ' → logprob: -7.748564720153809
    8. ' he' → logprob: -7.998564720153809
    9. '```' → logprob: -8.373564720153809
    10. '	break' → logprob: -9.373564720153809

Token 638: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6965722441673279
    2. '<|end|>' → logprob: -0.6965722441673279
    3. ')' → logprob: -7.196572303771973
    4. '<|end|>' → logprob: -7.446572303771973
    5. '   ' → logprob: -7.696572303771973
    6. 'return' → logprob: -8.196572303771973
    7. '
' → logprob: -8.446572303771973
    8. '...' → logprob: -8.446572303771973
    9. 'if' → logprob: -8.946572303771973
    10. 'while' → logprob: -9.071572303771973

Token 640: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 641: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.388815701007843
    2. ' not' → logprob: -2.1388156414031982
    3. 'not' → logprob: -2.2638156414031982
    4. ' f' → logprob: -2.7638156414031982
    5. 'rs' → logprob: -3.7638156414031982
    6. ' rs' → logprob: -4.888815879821777
    7. 'ls' → logprob: -5.388815879821777
    8. ' ls' → logprob: -6.763815879821777
    9. 'False' → logprob: -8.763815879821777
    10. '   ' → logprob: -8.888815879821777

Token 642: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20674757659435272
    2. ':
' → logprob: -1.7067475318908691
    3. '           ' → logprob: -6.206747531890869
    4. '       ' → logprob: -6.456747531890869
    5. ' and' → logprob: -7.331747531890869
    6. '==' → logprob: -7.956747531890869
    7. ' ==' → logprob: -8.206748008728027
    8. ' or' → logprob: -9.456748008728027
    9. ',' → logprob: -9.706748008728027
    10. '<|end|>' → logprob: -9.831748008728027

Token 643: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11338260769844055
    2. '       ' → logprob: -2.238382577896118
    3. '		' → logprob: -8.863382339477539
    4. '        
' → logprob: -9.488382339477539
    5. '	' → logprob: -9.863382339477539
    6. '               ' → logprob: -10.113382339477539
    7. '   ' → logprob: -10.238382339477539
    8. '        ' → logprob: -10.363382339477539
    9. ',' → logprob: -10.363382339477539
    10. '
' → logprob: -10.488382339477539

Token 644: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1249089166522026
    2. 'break' (adapté à ' break') → logprob: -2.374908924102783
    3. ' break' → logprob: -3.874908924102783
    4. '       ' → logprob: -6.374908924102783
    5. 'return' → logprob: -6.999908924102783
    6. 'l' → logprob: -8.249908447265625
    7. 'r' → logprob: -8.249908447265625
    8. ' l' → logprob: -8.999908447265625
    9. ' return' → logprob: -9.499908447265625
    10. '   ' → logprob: -9.999908447265625

Token 645: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14161619544029236
    2. '<|end|>' → logprob: -2.641616106033325
    3. '
' → logprob: -3.016616106033325
    4. '        
' → logprob: -4.641616344451904
    5. '<|end|>' → logprob: -7.391616344451904
    6. '   ' → logprob: -7.516616344451904
    7. '		
' → logprob: -8.266615867614746
    8. '	' → logprob: -8.766615867614746
    9. '    
' → logprob: -9.516615867614746
    10. '            
' → logprob: -9.516615867614746

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007815290242433548
    2. '        
' → logprob: -5.757815361022949
    3. '<|end|>' → logprob: -5.757815361022949
    4. '        ' → logprob: -8.00781536102295
    5. '
' → logprob: -8.13281536102295
    6. ' while' → logprob: -8.88281536102295
    7. ',' → logprob: -9.13281536102295
    8. '   ' → logprob: -9.25781536102295
    9. '	' → logprob: -9.63281536102295
    10. '    ' → logprob: -9.75781536102295

Token 647: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051834575831890106
    2. 'while' (adapté à ' while') → logprob: -3.0518345832824707
    3. 'r' → logprob: -6.176834583282471
    4. ' while' → logprob: -7.051834583282471
    5. '        
' → logprob: -9.426834106445312
    6. '   ' → logprob: -9.801834106445312
    7. 'l' → logprob: -9.926834106445312
    8. '           ' → logprob: -10.176834106445312
    9. 'if' → logprob: -10.426834106445312
    10. ' r' → logprob: -10.801834106445312

Token 648: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -4.310693111619912e-05
    2. ' rs' → logprob: -10.750042915344238
    3. 'True' → logprob: -11.125042915344238
    4. '   ' → logprob: -12.375042915344238
    5. ' ' → logprob: -14.375042915344238
    6. '(rs' → logprob: -14.500042915344238
    7. '	rs' → logprob: -15.500042915344238
    8. 'r' → logprob: -15.625042915344238
    9. ' True' → logprob: -15.625042915344238
    10. '1' → logprob: -15.750042915344238

Token 649: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.006121229380369186
    2. ':' → logprob: -5.1311211585998535
    3. ' and' → logprob: -8.631121635437012
    4. 'and' → logprob: -12.506121635437012
    5. '):
' → logprob: -12.631121635437012
    6. ':

' → logprob: -13.131121635437012
    7. ':
' → logprob: -13.631121635437012
    8. '   ' → logprob: -13.756121635437012
    9. '=' → logprob: -14.756121635437012
    10. ':=' → logprob: -15.006121635437012

Token 650: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7489936351776123
    2. 'r' → logprob: -0.9989936351776123
    3. '           ' → logprob: -1.9989936351776123
    4. ' r' → logprob: -3.8739936351776123
    5. '   ' → logprob: -6.123993873596191
    6. '```' → logprob: -8.748993873596191
    7. '	r' → logprob: -8.998993873596191
    8. ',' → logprob: -9.748993873596191
    9. '        ' → logprob: -10.998993873596191
    10. '               ' → logprob: -11.123993873596191

Token 651: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.001063655479811132
    2. '           ' → logprob: -7.126063823699951
    3. ' r' → logprob: -9.126063346862793
    4. '       ' → logprob: -9.251063346862793
    5. '   ' → logprob: -9.876063346862793
    6. '               ' → logprob: -13.501063346862793
    7. '```' → logprob: -14.751063346862793
    8. '	r' → logprob: -15.251063346862793
    9. '_r' → logprob: -15.626063346862793
    10. '(r' → logprob: -16.12606430053711

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015062130114529282
    2. ' ,' → logprob: -9.125150680541992
    3. ',i' → logprob: -10.500150680541992
    4. '=' → logprob: -11.500150680541992
    5. ' =' → logprob: -14.000150680541992
    6. ',r' → logprob: -14.375150680541992
    7. '           ' → logprob: -15.375150680541992
    8. ',
' → logprob: -15.375150680541992
    9. ',int' → logprob: -15.500150680541992
    10. ' ' → logprob: -15.500150680541992

Token 653: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47408294677734375
    2. 'i' → logprob: -0.9740829467773438
    3. ' ' → logprob: -12.849082946777344
    4. '	i' → logprob: -13.474082946777344
    5. '  ' → logprob: -14.349082946777344
    6. 'r' → logprob: -14.474082946777344
    7. '   ' → logprob: -15.599082946777344
    8. ' r' → logprob: -15.849082946777344
    9. '    ' → logprob: -16.349082946777344
    10. 'div' → logprob: -16.849082946777344

Token 654: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858771339058876
    2. ' =' → logprob: -3.0485877990722656
    3. ',' → logprob: -15.798587799072266
    4. '   ' → logprob: -16.548587799072266
    5. ' ' → logprob: -16.923587799072266
    6. ')' → logprob: -17.673587799072266
    7. 'div' → logprob: -17.923587799072266
    8. '       ' → logprob: -18.173587799072266
    9. '           ' → logprob: -18.298587799072266
    10. '        ' → logprob: -18.548587799072266

Token 655: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.5570885807392187e-05
    2. ' div' → logprob: -11.125015258789062
    3. '   ' → logprob: -14.625015258789062
    4. ' ' → logprob: -16.375015258789062
    5. '
' → logprob: -16.625015258789062
    6. '	div' → logprob: -16.625015258789062
    7. '<div' → logprob: -17.375015258789062
    8. 'he' → logprob: -18.500015258789062
    9. '  ' → logprob: -18.750015258789062
    10. '     ' → logprob: -19.000015258789062

Token 656: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0005280109471641481
    2. 'op' → logprob: -7.875527858734131
    3. 'pop' → logprob: -8.875528335571289
    4. 'mp' → logprob: -12.750528335571289
    5. 'div' → logprob: -13.500528335571289
    6. '(' → logprob: -13.875528335571289
    7. 'omod' → logprob: -13.875528335571289
    8. 'mods' → logprob: -14.375528335571289
    9. '(mod' → logprob: -14.875528335571289
    10. 'mo' → logprob: -15.250528335571289

Token 657: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04859168455004692
    2. 'he' → logprob: -3.0485916137695312
    3. ' he' → logprob: -13.423591613769531
    4. '   ' → logprob: -13.548591613769531
    5. '(heap' → logprob: -14.173591613769531
    6. ' (' → logprob: -15.048591613769531
    7. 'heap' → logprob: -15.048591613769531
    8. '(
' → logprob: -15.923591613769531
    9. '```' → logprob: -17.67359161376953
    10. '	' → logprob: -17.67359161376953

Token 658: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -1.1398757123970427e-05
    2. ' he' → logprob: -12.000011444091797
    3. '(' → logprob: -12.375011444091797
    4. 'heap' → logprob: -14.500011444091797
    5. '   ' → logprob: -15.500011444091797
    6. ')' → logprob: -17.250011444091797
    7. '```' → logprob: -17.500011444091797
    8. ' ' → logprob: -18.375011444091797
    9. 'hee' → logprob: -18.500011444091797
    10. '  ' → logprob: -18.625011444091797

Token 659: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.09982537478208542
    2. 'pp' → logprob: -2.724825382232666
    3. 'ap' → logprob: -4.099825382232666
    4. 'op' → logprob: -4.974825382232666
    5. 'pop' → logprob: -5.474825382232666
    6. 'p' → logprob: -7.099825382232666
    7. 'ep' → logprob: -7.599825382232666
    8. 'he' → logprob: -8.974824905395508
    9. 'sp' → logprob: -9.474824905395508
    10. 'rs' → logprob: -9.724824905395508

Token 660: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.00014323067443910986
    2. '(op' → logprob: -9.500143051147461
    3. 'pop' → logprob: -10.875143051147461
    4. 'p' → logprob: -10.875143051147461
    5. '(rs' → logprob: -11.875143051147461
    6. 'оп' → logprob: -12.375143051147461
    7. '(pop' → logprob: -12.750143051147461
    8. 'opup' → logprob: -13.000143051147461
    9. 'opleft' → logprob: -13.000143051147461
    10. 'rop' → logprob: -13.000143051147461

Token 661: '(rs' (ID: 25887)
  Prédit: '(rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rs' → logprob: -8.895480277715251e-06
    2. 'rs' → logprob: -12.125008583068848
    3. ' (' → logprob: -12.750008583068848
    4. '(' → logprob: -15.375008583068848
    5. ' rs' → logprob: -15.625008583068848
    6. '(r' → logprob: -16.375009536743164
    7. ')' → logprob: -17.375009536743164
    8. '$rs' → logprob: -17.500009536743164
    9. '   ' → logprob: -17.750009536743164
    10. '	rs' → logprob: -18.000009536743164

Token 662: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036144492332823575
    2. '),' → logprob: -8.250361442565918
    3. ' ,' → logprob: -9.250361442565918
    4. '   ' → logprob: -12.750361442565918
    5. ')' → logprob: -15.250361442565918
    6. '       ' → logprob: -15.375361442565918
    7. ',
' → logprob: -16.250362396240234
    8. ',b' → logprob: -16.375362396240234
    9. '           ' → logprob: -16.500362396240234
    10. '(),' → logprob: -16.500362396240234

Token 663: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.002476016292348504
    2. ' base' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.12747573852539
    4. ' ' → logprob: -16.75247573852539
    5. '(base' → logprob: -18.00247573852539
    6. '	base' → logprob: -19.00247573852539
    7. '```' → logprob: -19.12747573852539
    8. ')' → logprob: -19.50247573852539
    9. '    ' → logprob: -19.50247573852539
    10. '_base' → logprob: -19.75247573852539

Token 664: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.012756374664604664
    2. ')' → logprob: -4.51275634765625
    3. '           ' → logprob: -6.38775634765625
    4. ')
' → logprob: -11.51275634765625
    5. ')

' → logprob: -11.76275634765625
    6. '):
' → logprob: -13.63775634765625
    7. ');
' → logprob: -13.63775634765625
    8. '       ' → logprob: -14.13775634765625
    9. '),' → logprob: -14.13775634765625
    10. ',' → logprob: -14.26275634765625

Token 665: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009936298010870814
    2. 'if' → logprob: -7.875993728637695
    3. '       ' → logprob: -8.500993728637695
    4. '<|end|>' → logprob: -8.750993728637695
    5. ' if' → logprob: -8.875993728637695
    6. '
' → logprob: -10.000993728637695
    7. '            
' → logprob: -10.750993728637695
    8. '```' → logprob: -11.125993728637695
    9. '   ' → logprob: -11.625993728637695
    10. '               ' → logprob: -12.250993728637695

Token 666: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5154020190238953
    2. '           ' → logprob: -1.89040207862854
    3. ' if' → logprob: -2.01540207862854
    4. 'if' (adapté à ' if') → logprob: -2.39040207862854
    5. ' d' → logprob: -3.64040207862854
    6. '       ' → logprob: -8.640401840209961
    7. '   ' → logprob: -8.640401840209961
    8. 'r' → logprob: -9.265401840209961
    9. '               ' → logprob: -9.640401840209961
    10. 'cur' → logprob: -10.140401840209961

Token 667: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00786023959517479
    2. 'r' → logprob: -5.50786018371582
    3. ' i' → logprob: -6.00786018371582
    4. 'not' → logprob: -7.50786018371582
    5. 'cur' → logprob: -7.63286018371582
    6. 'f' → logprob: -8.63286018371582
    7. ' not' → logprob: -10.50786018371582
    8. ' r' → logprob: -10.63286018371582
    9. '(i' → logprob: -11.50786018371582
    10. 'd' → logprob: -11.57036018371582

Token 668: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025258304551243782
    2. ' not' → logprob: -4.275258541107178
    3. 'in' → logprob: -4.525258541107178
    4. 'not' → logprob: -8.52525806427002
    5. ' ' → logprob: -13.52525806427002
    6. '<|end|>' → logprob: -14.02525806427002
    7. '   ' → logprob: -14.90025806427002
    8. ')' → logprob: -15.77525806427002
    9. ' is' → logprob: -16.275259017944336
    10. '           ' → logprob: -16.775259017944336

Token 669: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002636006975080818
    2. ' d' → logprob: -8.250263214111328
    3. '   ' → logprob: -13.625263214111328
    4. '       ' → logprob: -15.250263214111328
    5. '           ' → logprob: -15.375263214111328
    6. ' ' → logprob: -15.625263214111328
    7. '
' → logprob: -15.875263214111328
    8. ')' → logprob: -16.375263214111328
    9. '#' → logprob: -16.875263214111328
    10. '  ' → logprob: -16.875263214111328

Token 670: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0008872798644006252
    2. 'd' → logprob: -7.125887393951416
    3. 's' → logprob: -9.500886917114258
    4. 'et' → logprob: -12.500886917114258
    5. ' d' → logprob: -13.750886917114258
    6. 'erset' → logprob: -14.250886917114258
    7. 'aset' → logprob: -14.875886917114258
    8. 'f' → logprob: -15.000886917114258
    9. 'r' → logprob: -15.125886917114258
    10. 'Set' → logprob: -15.250886917114258

Token 671: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16129814088344574
    2. ':' → logprob: -2.0362980365753174
    3. '               ' → logprob: -4.2862982749938965
    4. '):
' → logprob: -5.6612982749938965
    5. ' and' → logprob: -7.2862982749938965
    6. ',' → logprob: -8.786297798156738
    7. '<|end|>' → logprob: -8.911297798156738
    8. '):' → logprob: -9.661297798156738
    9. '           ' → logprob: -9.911297798156738
    10. '():
' → logprob: -10.161297798156738

Token 672: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0047926343977451324
    2. ':
' → logprob: -5.5047926902771
    3. ':' → logprob: -7.3797926902771
    4. '):
' → logprob: -9.879792213439941
    5. ',' → logprob: -10.629792213439941
    6. ' and' → logprob: -12.754792213439941
    7. '           ' → logprob: -13.004792213439941
    8. '                   ' → logprob: -13.879792213439941
    9. '<|end|>' → logprob: -14.004792213439941
    10. '```' → logprob: -14.129792213439941

Token 673: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.39094632863998413
    2. '               ' → logprob: -1.515946388244629
    3. ' d' → logprob: -2.265946388244629
    4. '                   ' → logprob: -8.765946388244629
    5. '   ' → logprob: -10.265946388244629
    6. '           ' → logprob: -10.515946388244629
    7. ' ' → logprob: -11.265946388244629
    8. '       ' → logprob: -12.015946388244629
    9. '	d' → logprob: -12.140946388244629
    10. 'cur' → logprob: -12.890946388244629

Token 674: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -4.723352049040841e-06
    2. 'et' → logprob: -13.000004768371582
    3. 's' → logprob: -13.375004768371582
    4. 'd' → logprob: -15.000004768371582
    5. '   ' → logprob: -15.500004768371582
    6. 'erset' → logprob: -16.125003814697266
    7. 'se' → logprob: -16.500003814697266
    8. ' set' → logprob: -16.750003814697266
    9. 'sett' → logprob: -17.125003814697266
    10. '       ' → logprob: -17.250003814697266

Token 675: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -1.3544423381972592e-05
    2. 'remove' → logprob: -11.62501335144043
    3. '.' → logprob: -12.62501335144043
    4. '               ' → logprob: -13.75001335144043
    5. '.dis' → logprob: -15.87501335144043
    6. '                   ' → logprob: -16.62501335144043
    7. '	remove' → logprob: -17.62501335144043
    8. '   ' → logprob: -18.12501335144043
    9. '.clear' → logprob: -18.25001335144043
    10. '.Remove' → logprob: -18.25001335144043

Token 676: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.875
    3. 'i' → logprob: -17.625
    4. ' (' → logprob: -18.5
    5. '<|end|>' → logprob: -19.5
    6. '(ii' → logprob: -19.625
    7. ' i' → logprob: -20.5
    8. '[i' → logprob: -20.875
    9. '(
' → logprob: -21.0
    10. '(I' → logprob: -22.5

Token 677: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11781555414199829
    2. ')' → logprob: -2.2428154945373535
    3. '               ' → logprob: -5.3678154945373535
    4. '           ' → logprob: -8.367815971374512
    5. ')
' → logprob: -9.992815971374512
    6. ')

' → logprob: -11.117815971374512
    7. ',' → logprob: -12.492815971374512
    8. ');' → logprob: -12.617815971374512
    9. '                   ' → logprob: -13.117815971374512
    10. ' )
' → logprob: -13.117815971374512

Token 678: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2826593518257141
    2. '               ' → logprob: -1.4076592922210693
    3. ')' → logprob: -6.782659530639648
    4. ',' → logprob: -8.782659530639648
    5. '
' → logprob: -9.532659530639648
    6. '),' → logprob: -10.532659530639648
    7. 'else' → logprob: -11.032659530639648
    8. ')
' → logprob: -11.157659530639648
    9. '       ' → logprob: -11.407659530639648
    10. ' else' → logprob: -11.407659530639648

Token 679: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06138555333018303
    2. '               ' → logprob: -2.9363856315612793
    3. 'else' → logprob: -5.186385631561279
    4. 'elif' (adapté à ' elif') → logprob: -7.686385631561279
    5. ' else' → logprob: -8.436385154724121
    6. '       ' → logprob: -9.561385154724121
    7. 'if' → logprob: -9.686385154724121
    8. '   ' → logprob: -11.061385154724121
    9. 'cur' → logprob: -11.186385154724121
    10. '                   ' → logprob: -12.061385154724121

Token 680: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.24078628420829773
    2. 'r' → logprob: -1.6157863140106201
    3. ' cur' → logprob: -4.490786075592041
    4. ' r' → logprob: -5.740786075592041
    5. '   ' → logprob: -7.240786075592041
    6. ' ' → logprob: -10.4907865524292
    7. '  ' → logprob: -10.8657865524292
    8. 'not' → logprob: -11.3657865524292
    9. '	cur' → logprob: -11.3657865524292
    10. '       ' → logprob: -12.1157865524292

Token 681: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06415890902280807
    2. '<' → logprob: -2.9391589164733887
    3. ' >' → logprob: -5.189158916473389
    4. ' <=' → logprob: -6.189158916473389
    5. '>' → logprob: -7.189158916473389
    6. ' >=' → logprob: -7.689158916473389
    7. '<=' → logprob: -8.93915843963623
    8. ' ' → logprob: -9.93915843963623
    9. ' ==' → logprob: -9.93915843963623
    10. '>=' → logprob: -10.43915843963623

Token 682: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004620591644197702
    2. ' r' → logprob: -5.379620552062988
    3. '	r' → logprob: -15.879620552062988
    4. '   ' → logprob: -16.879621505737305
    5. ' ' → logprob: -17.004621505737305
    6. '_r' → logprob: -17.254621505737305
    7. '(r' → logprob: -17.379621505737305
    8. '[r' → logprob: -17.629621505737305
    9. '0' → logprob: -17.754621505737305
    10. '=r' → logprob: -18.192121505737305

Token 683: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7266892790794373
    2. ':' → logprob: -1.101689338684082
    3. '               ' → logprob: -1.726689338684082
    4. '           ' → logprob: -6.476689338684082
    5. ' and' → logprob: -6.601689338684082
    6. '+' → logprob: -6.976689338684082
    7. ' :
' → logprob: -7.351689338684082
    8. ' +' → logprob: -7.476689338684082
    9. ' :' → logprob: -7.976689338684082
    10. ',' → logprob: -8.351689338684082

Token 684: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012220130302011967
    2. ':
' → logprob: -7.626222133636475
    3. '           ' → logprob: -7.751222133636475
    4. ':' → logprob: -9.626221656799316
    5. '              ' → logprob: -9.876221656799316
    6. '):
' → logprob: -10.126221656799316
    7. '                
' → logprob: -10.626221656799316
    8. '<|end|>' → logprob: -10.751221656799316
    9. '                ' → logprob: -11.001221656799316
    10. ' and' → logprob: -11.376221656799316

Token 685: ' tot' (ID: 2417)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6071642637252808
    2. '               ' → logprob: -1.6071642637252808
    3. 'break' → logprob: -1.7321642637252808
    4. ' cur' → logprob: -3.1071643829345703
    5. 'cur' → logprob: -4.60716438293457
    6. ' f' → logprob: -5.10716438293457
    7. ' return' → logprob: -5.48216438293457
    8. 'f' → logprob: -5.85716438293457
    9. 'return' → logprob: -5.98216438293457
    10. ' continue' → logprob: -6.48216438293457

Token 686: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.057884130626916885
    2. '+=' → logprob: -3.1828842163085938
    3. '               ' → logprob: -5.057884216308594
    4. ' =' → logprob: -6.057884216308594
    5. '                ' → logprob: -6.682884216308594
    6. '           ' → logprob: -6.682884216308594
    7. '                   ' → logprob: -6.807884216308594
    8. '=' → logprob: -7.432884216308594
    9. ' -=' → logprob: -7.432884216308594
    10. '            ' → logprob: -8.182884216308594

Token 687: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0620085746049881
    2. ' cur' → logprob: -3.4370086193084717
    3. 'r' → logprob: -3.6870086193084717
    4. ' r' → logprob: -6.312008380889893
    5. '0' → logprob: -7.187008380889893
    6. '(cur' → logprob: -9.31200885772705
    7. ' ' → logprob: -10.06200885772705
    8. '   ' → logprob: -10.31200885772705
    9. '[cur' → logprob: -10.31200885772705
    10. 'c' → logprob: -10.81200885772705

Token 688: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0015031944494694471
    2. '-' → logprob: -6.501502990722656
    3. ' ' → logprob: -14.501502990722656
    4. '-r' → logprob: -15.876502990722656
    5. ' -
' → logprob: -16.251502990722656
    6. ' ' → logprob: -17.126502990722656
    7. '<|end|>' → logprob: -17.376502990722656
    8. ' -=' → logprob: -18.251502990722656
    9. '```' → logprob: -18.376502990722656
    10. ' +' → logprob: -18.626502990722656

Token 689: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0015035520773380995
    2. ' r' → logprob: -6.5015034675598145
    3. '(r' → logprob: -13.751503944396973
    4. ' (' → logprob: -15.626503944396973
    5. '_r' → logprob: -18.001502990722656
    6. ' ' → logprob: -18.126502990722656
    7. '	r' → logprob: -18.876502990722656
    8. '[r' → logprob: -18.876502990722656
    9. '(' → logprob: -19.501502990722656
    10. 'cur' → logprob: -19.751502990722656

Token 690: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10708588361740112
    2. '<|end|>' → logprob: -2.357085943222046
    3. '           ' → logprob: -6.232085704803467
    4. '<|end|>' → logprob: -6.357085704803467
    5. ')' → logprob: -6.732085704803467
    6. '              ' → logprob: -7.857085704803467
    7. '                ' → logprob: -8.107086181640625
    8. ' ' → logprob: -8.232086181640625
    9. '
' → logprob: -8.607086181640625
    10. '                   ' → logprob: -8.982086181640625

Token 691: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001480697887018323
    2. '<|end|>' → logprob: -6.751480579376221
    3. '           ' → logprob: -9.501481056213379
    4. ')' → logprob: -10.001481056213379
    5. '              ' → logprob: -10.251481056213379
    6. ',' → logprob: -10.376481056213379
    7. '                
' → logprob: -10.626481056213379
    8. '                   ' → logprob: -11.001481056213379
    9. '<|end|>' → logprob: -11.001481056213379
    10. '
' → logprob: -11.251481056213379

Token 692: ' cur' (ID: 4396)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.958721399307251
    2. '               ' → logprob: -1.458721399307251
    3. 'd' → logprob: -1.833721399307251
    4. 'cur' (adapté à ' cur') → logprob: -2.208721399307251
    5. ' break' → logprob: -2.458721399307251
    6. ' d' → logprob: -4.208721160888672
    7. ' cur' → logprob: -4.333721160888672
    8. 'continue' → logprob: -8.083721160888672
    9. 'r' → logprob: -9.083721160888672
    10. '                ' → logprob: -9.208721160888672

Token 693: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231332778930664
    2. ' =' → logprob: -0.8981332778930664
    3. ',' → logprob: -12.273133277893066
    4. ' ' → logprob: -13.148133277893066
    5. ')' → logprob: -13.773133277893066
    6. '<|end|>' → logprob: -13.898133277893066
    7. '=r' → logprob: -14.898133277893066
    8. '.' → logprob: -15.648133277893066
    9. '=
' → logprob: -15.773133277893066
    10. 'r' → logprob: -15.898133277893066

Token 694: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0010332842357456684
    2. ' r' → logprob: -6.876033306121826
    3. 'cur' → logprob: -15.751032829284668
    4. '	r' → logprob: -16.251033782958984
    5. ' ' → logprob: -16.626033782958984
    6. '(r' → logprob: -17.813533782958984
    7. '[r' → logprob: -17.876033782958984
    8. '   ' → logprob: -17.876033782958984
    9. '_r' → logprob: -18.063533782958984
    10. 'max' → logprob: -18.376033782958984

Token 695: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22763468325138092
    2. '           ' → logprob: -1.7276346683502197
    3. '<|end|>' → logprob: -3.7276346683502197
    4. '<|end|>' → logprob: -7.602634906768799
    5. '
' → logprob: -7.977634906768799
    6. '                
' → logprob: -8.60263442993164
    7. '            
' → logprob: -9.22763442993164
    8. '       ' → logprob: -9.22763442993164
    9. '              ' → logprob: -9.35263442993164
    10. '   ' → logprob: -9.47763442993164

Token 696: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36081480979919434
    2. '           ' → logprob: -1.2358148097991943
    3. '<|end|>' → logprob: -4.485815048217773
    4. '       ' → logprob: -7.735815048217773
    5. '
' → logprob: -8.860815048217773
    6. '<|end|>' → logprob: -9.735815048217773
    7. '                   ' → logprob: -9.860815048217773
    8. '   ' → logprob: -10.110815048217773
    9. 'else' → logprob: -10.360815048217773
    10. '              ' → logprob: -10.485815048217773

Token 697: ' d' (ID: 272)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.07883185148239136
    2. '               ' → logprob: -2.953831911087036
    3. ' break' → logprob: -4.203831672668457
    4. 'd' (adapté à ' d') → logprob: -5.328831672668457
    5. '           ' → logprob: -6.328831672668457
    6. 'f' → logprob: -6.578831672668457
    7. 'continue' → logprob: -8.578831672668457
    8. '       ' → logprob: -9.078831672668457
    9. 'i' → logprob: -9.078831672668457
    10. 'else' → logprob: -9.203831672668457

Token 698: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5867952108383179
    2. 'break' → logprob: -0.8367952108383179
    3. 'else' → logprob: -5.836795330047607
    4. 'd' → logprob: -6.586795330047607
    5. 'continue' → logprob: -6.711795330047607
    6. '```' → logprob: -6.836795330047607
    7. ' break' → logprob: -7.086795330047607
    8. 'elif' → logprob: -7.336795330047607
    9. 'et' → logprob: -7.711795330047607
    10. '   ' → logprob: -8.08679485321045

Token 699: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00278776534833014
    2. '.remove' → logprob: -6.1277875900268555
    3. '               ' → logprob: -8.377787590026855
    4. 'add' → logprob: -8.627787590026855
    5. '.' → logprob: -9.377787590026855
    6. '.clear' → logprob: -9.627787590026855
    7. '           ' → logprob: -10.752787590026855
    8. '=' → logprob: -12.627787590026855
    9. '.append' → logprob: -12.752787590026855
    10. '_add' → logprob: -13.377787590026855

Token 700: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.2729995988775045e-06
    2. 'i' → logprob: -12.000006675720215
    3. '(' → logprob: -17.3750057220459
    4. ' i' → logprob: -17.6250057220459
    5. ' (' → logprob: -19.6250057220459
    6. '	i' → logprob: -19.7500057220459
    7. ',i' → logprob: -19.8750057220459
    8. 'r' → logprob: -20.6250057220459
    9. '{i' → logprob: -20.7500057220459
    10. '(
' → logprob: -20.7500057220459

Token 701: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44573524594306946
    2. ')
' → logprob: -1.070735216140747
    3. '               ' → logprob: -4.695735454559326
    4. '           ' → logprob: -4.945735454559326
    5. '<|end|>' → logprob: -8.320734977722168
    6. '       ' → logprob: -9.570734977722168
    7. '()' → logprob: -9.945734977722168
    8. ')
' → logprob: -10.195734977722168
    9. ')

' → logprob: -10.320734977722168
    10. '<|end|>' → logprob: -10.445734977722168

Token 702: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3310076594352722
    2. '<|end|>' → logprob: -1.456007719039917
    3. '               ' → logprob: -3.081007719039917
    4. '       ' → logprob: -7.206007480621338
    5. '
' → logprob: -7.581007480621338
    6. '<|end|>' → logprob: -7.956007480621338
    7. ')' → logprob: -8.456007957458496
    8. '   ' → logprob: -8.956007957458496
    9. '          ' → logprob: -8.956007957458496
    10. '            ' → logprob: -9.206007957458496

Token 703: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2521362602710724
    2. ' break' → logprob: -1.50213623046875
    3. 'i' → logprob: -9.62713623046875
    4. '	break' → logprob: -10.00213623046875
    5. '               ' → logprob: -10.12713623046875
    6. 'reak' → logprob: -10.87713623046875
    7. '           ' → logprob: -11.62713623046875
    8. '       ' → logprob: -12.12713623046875
    9. '```' → logprob: -12.50213623046875
    10. ' ' → logprob: -12.75213623046875

Token 704: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 705: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.938443660736084
    2. '           ' → logprob: -1.188443660736084
    3. '<|end|>' → logprob: -1.313443660736084
    4. '   ' → logprob: -3.938443660736084
    5. '        ' → logprob: -6.313443660736084
    6. '    ' → logprob: -6.313443660736084
    7. ' ' → logprob: -6.438443660736084
    8. '
' → logprob: -6.688443660736084
    9. '<|end|>' → logprob: -6.813443660736084
    10. '```' → logprob: -7.063443660736084

Token 706: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2501614987850189
    2. '       ' → logprob: -2.2501614093780518
    3. 'else' (adapté à ' else') → logprob: -2.2501614093780518
    4. ' else' → logprob: -4.875161647796631
    5. '          ' → logprob: -6.750161647796631
    6. '   ' → logprob: -7.250161647796631
    7. '         ' → logprob: -8.250161170959473
    8. '        ' → logprob: -8.375161170959473
    9. '               ' → logprob: -8.500161170959473
    10. '    ' → logprob: -10.000161170959473

Token 707: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.514175295829773
    2. '               ' → logprob: -1.139175295829773
    3. ':' → logprob: -2.5141754150390625
    4. '           ' → logprob: -8.014175415039062
    5. '       ' → logprob: -8.639175415039062
    6. '              ' → logprob: -9.014175415039062
    7. '):
' → logprob: -10.014175415039062
    8. '                ' → logprob: -10.014175415039062
    9. '                   ' → logprob: -10.014175415039062
    10. ' :
' → logprob: -10.139175415039062

Token 708: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03074905276298523
    2. 'f' → logprob: -4.6557488441467285
    3. '           ' → logprob: -4.9057488441467285
    4. ' f' → logprob: -5.0307488441467285
    5. 'break' → logprob: -5.6557488441467285
    6. ' break' → logprob: -6.2807488441467285
    7. '            ' → logprob: -8.405749320983887
    8. 't' → logprob: -8.530749320983887
    9. '              ' → logprob: -8.530749320983887
    10. '   ' → logprob: -8.905749320983887

Token 709: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.5345031023025513
    2. 'break' → logprob: -1.0345031023025513
    3. ' break' → logprob: -3.2845029830932617
    4. ' f' → logprob: -4.159502983093262
    5. 'True' → logprob: -5.659502983093262
    6. ' True' → logprob: -7.409502983093262
    7. 'False' → logprob: -7.534502983093262
    8. '   ' → logprob: -8.784502983093262
    9. 'r' → logprob: -8.784502983093262
    10. 'cur' → logprob: -8.909502983093262

Token 710: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759744048118591
    2. '=' → logprob: -0.8259744048118591
    3. '=True' → logprob: -10.575974464416504
    4. ' ' → logprob: -12.200974464416504
    5. '=False' → logprob: -13.200974464416504
    6. '           ' → logprob: -14.700974464416504
    7. '               ' → logprob: -15.575974464416504
    8. '            ' → logprob: -15.700974464416504
    9. '	' → logprob: -15.825974464416504
    10. ' +=' → logprob: -15.825974464416504

Token 711: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5759398937225342
    2. 'True' → logprob: -0.8259398937225342
    3. 'False' → logprob: -15.325940132141113
    4. '(True' → logprob: -15.450940132141113
    5. '=True' → logprob: -16.950939178466797
    6. ' False' → logprob: -18.575939178466797
    7. '1' → logprob: -20.075939178466797
    8. '.True' → logprob: -20.200939178466797
    9. ' Tru' → logprob: -21.825939178466797
    10. ' ' → logprob: -22.575939178466797

Token 712: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10314315557479858
    2. '<|end|>' → logprob: -2.3531432151794434
    3. '           ' → logprob: -6.103143215179443
    4. '<|end|>' → logprob: -8.853142738342285
    5. '
' → logprob: -8.978142738342285
    6. '       ' → logprob: -9.478142738342285
    7. '                   ' → logprob: -9.603142738342285
    8. '                
' → logprob: -9.853142738342285
    9. '                               ' → logprob: -10.103142738342285
    10. '			' → logprob: -10.728142738342285

Token 713: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2382260411977768
    2. '           ' → logprob: -1.613226056098938
    3. '<|end|>' → logprob: -4.488225936889648
    4. '       ' → logprob: -7.613225936889648
    5. '                   ' → logprob: -8.738225936889648
    6. '			' → logprob: -8.988225936889648
    7. '	       ' → logprob: -9.113225936889648
    8. '		' → logprob: -9.238225936889648
    9. '   ' → logprob: -9.738225936889648
    10. '              ' → logprob: -9.988225936889648

Token 714: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0019419649615883827
    2. ' break' → logprob: -6.251942157745361
    3. '               ' → logprob: -11.251941680908203
    4. '	break' → logprob: -15.626941680908203
    5. '```' → logprob: -16.251941680908203
    6. '           ' → logprob: -16.501941680908203
    7. '                   ' → logprob: -17.376941680908203
    8. '
' → logprob: -17.626941680908203
    9. '                       ' → logprob: -18.001941680908203
    10. 'b' → logprob: -18.626941680908203

Token 715: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 716: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 717: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 718: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1624787449836731
    2. ' f' → logprob: -1.9124786853790283
    3. 'not' → logprob: -6.412478923797607
    4. ' not' → logprob: -7.412478923797607
    5. '   ' → logprob: -12.91247844696045
    6. '	f' → logprob: -13.91247844696045
    7. ' ' → logprob: -14.03747844696045
    8. '    ' → logprob: -14.41247844696045
    9. '(f' → logprob: -14.41247844696045
    10. 'False' → logprob: -15.16247844696045

Token 719: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11257116496562958
    2. ':' → logprob: -2.6125712394714355
    3. ':
' → logprob: -3.6125712394714355
    4. '       ' → logprob: -5.8625712394714355
    5. '<|end|>' → logprob: -6.8625712394714355
    6. '=' → logprob: -7.1125712394714355
    7. ',' → logprob: -7.9875712394714355
    8. '<|end|>' → logprob: -8.362570762634277
    9. '==' → logprob: -8.612570762634277
    10. ' =' → logprob: -8.737570762634277

Token 720: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.165027217415627e-05
    2. '       ' → logprob: -11.875021934509277
    3. '	       ' → logprob: -12.375021934509277
    4. '               ' → logprob: -12.875021934509277
    5. '		' → logprob: -12.875021934509277
    6. '<|end|>' → logprob: -13.625021934509277
    7. '   ' → logprob: -14.000021934509277
    8. 'break' → logprob: -14.125021934509277
    9. '```' → logprob: -14.750021934509277
    10. ' break' → logprob: -14.750021934509277

Token 721: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7253447771072388
    2. 'break' (adapté à ' break') → logprob: -0.9753447771072388
    3. '           ' → logprob: -1.9753447771072388
    4. '	break' → logprob: -10.35034465789795
    5. '       ' → logprob: -10.97534465789795
    6. '   ' → logprob: -11.47534465789795
    7. '               ' → logprob: -13.10034465789795
    8. 'return' → logprob: -13.47534465789795
    9. '		' → logprob: -14.10034465789795
    10. ' return' → logprob: -14.72534465789795

Token 722: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 723: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04440707340836525
    2. '<|end|>' → logprob: -3.1694071292877197
    3. '       ' → logprob: -8.04440689086914
    4. '    ' → logprob: -8.16940689086914
    5. '
' → logprob: -8.29440689086914
    6. '    
' → logprob: -8.41940689086914
    7. '<|end|>' → logprob: -9.66940689086914
    8. '	return' → logprob: -9.66940689086914
    9. 'return' → logprob: -9.79440689086914
    10. ')' → logprob: -10.54440689086914

Token 724: ' tot' (ID: 2417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 725: ' +=' (ID: 2757)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 726: ' abs' (ID: 8443)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.3903293311595917
    2. 'max' → logprob: -1.890329360961914
    3. 'base' → logprob: -2.015329360961914
    4. 'N' → logprob: -4.515329360961914
    5. 'abs' → logprob: -5.390329360961914
    6. '(cur' → logprob: -5.640329360961914
    7. '(base' → logprob: -5.640329360961914
    8. 'S' → logprob: -5.765329360961914
    9. '0' → logprob: -5.765329360961914
    10. 'len' → logprob: -6.140329360961914

Token 727: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.004297895822674036
    2. '(t' → logprob: -6.629297733306885
    3. '(ls' → logprob: -6.754297733306885
    4. '(S' → logprob: -7.004297733306885
    5. '(base' → logprob: -7.879297733306885
    6. '(rs' → logprob: -8.004298210144043
    7. '(' → logprob: -9.629298210144043
    8. '(d' → logprob: -9.879298210144043
    9. '(N' → logprob: -10.629298210144043
    10. 'cur' → logprob: -11.129298210144043

Token 728: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17488469183444977
    2. ' -' → logprob: -1.9248846769332886
    3. '-' → logprob: -4.424884796142578
    4. '-s' → logprob: -6.549884796142578
    5. '-base' → logprob: -7.424884796142578
    6. '   ' → logprob: -9.299884796142578
    7. '-)' → logprob: -9.674884796142578
    8. ')
' → logprob: -9.674884796142578
    9. '<|end|>' → logprob: -9.799884796142578
    10. '-final' → logprob: -9.924884796142578

Token 729: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2691884934902191
    2. '<|end|>' → logprob: -1.6441885232925415
    3. '\n' → logprob: -3.269188404083252
    4. '   ' → logprob: -6.769188404083252
    5. ':return' → logprob: -7.644188404083252
    6. '```' → logprob: -7.644188404083252
    7. '\' → logprob: -7.644188404083252
    8. '<|end|>' → logprob: -7.894188404083252
    9. ' ' → logprob: -8.26918888092041
    10. ')' → logprob: -8.26918888092041

Token 730: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6326645016670227
    2. '   ' → logprob: -0.8826645016670227
    3. '<|end|>' → logprob: -3.382664442062378
    4. '	return' → logprob: -5.382664680480957
    5. ' return' → logprob: -5.507664680480957
    6. ')' → logprob: -5.632664680480957
    7. ' ' → logprob: -5.757664680480957
    8. 'return' (adapté à ' return') → logprob: -5.757664680480957
    9. '    
' → logprob: -7.507664680480957
    10. ':return' → logprob: -8.007664680480957

Token 731: ' tot' (ID: 2417)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.10020720958709717
    2. ' tot' → logprob: -2.3502073287963867
    3. 'total' → logprob: -15.225207328796387
    4. 't' → logprob: -15.225207328796387
    5. 'to' → logprob: -16.85020637512207
    6. '   ' → logprob: -18.85020637512207
    7. 'tod' → logprob: -18.97520637512207
    8. ' ' → logprob: -19.22520637512207
    9. '	t' → logprob: -19.22520637512207
    10. 'tol' → logprob: -19.35020637512207

Token 732: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 733: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 734: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8497772812843323
    2. ' solve' → logprob: -1.0997772216796875
    3. '_' → logprob: -2.7247772216796875
    4. ' _' → logprob: -2.9747772216796875
    5. ' max' → logprob: -3.3497772216796875
    6. ' ' → logprob: -4.0997772216796875
    7. ' longest' → logprob: -4.3497772216796875
    8. ' bit' → logprob: -5.2247772216796875
    9. ' count' → logprob: -5.3497772216796875
    10. ' dfs' → logprob: -5.9747772216796875

Token 735: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0010538881178945303
    2. '():
' → logprob: -6.876053810119629
    3. ' ():' → logprob: -11.376053810119629
    4. '()' → logprob: -11.876053810119629
    5. '(' → logprob: -13.751053810119629
    6. '_' → logprob: -14.126053810119629
    7. '():
' → logprob: -15.001053810119629
    8. '(argv' → logprob: -15.876053810119629
    9. '():

' → logprob: -16.251054763793945
    10. '(args' → logprob: -16.251054763793945

Token 736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017278142273426056
    2. ' n' → logprob: -4.26727819442749
    3. ' import' → logprob: -6.51727819442749
    4. ' input' → logprob: -7.39227819442749
    5. 'import' → logprob: -8.017277717590332
    6. 'n' → logprob: -8.267277717590332
    7. '    ' → logprob: -9.267277717590332
    8. ' N' → logprob: -9.392277717590332
    9. ' readline' → logprob: -9.642277717590332
    10. ' data' → logprob: -10.017277717590332

Token 737: ' MOD' (ID: 32868)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33704081177711487
    2. 'N' → logprob: -2.087040901184082
    3. ' n' → logprob: -2.587040901184082
    4. '   ' → logprob: -2.837040901184082
    5. ' N' → logprob: -4.087040901184082
    6. 'import' → logprob: -4.587040901184082
    7. ' import' → logprob: -6.837040901184082
    8. ' input' → logprob: -9.587040901184082
    9. 'input' → logprob: -10.212040901184082
    10. 't' → logprob: -10.462040901184082

Token 738: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869251310825348
    2. '=' → logprob: -1.1369251012802124
    3. ',' → logprob: -10.261924743652344
    4. ':' → logprob: -11.761924743652344
    5. ' ' → logprob: -12.136924743652344
    6. '_' → logprob: -12.511924743652344
    7. ' =
' → logprob: -14.761924743652344
    8. '.' → logprob: -15.011924743652344
    9. ')' → logprob: -15.011924743652344
    10. '=int' → logprob: -15.136924743652344

Token 739: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0021540687885135412
    2. ' ' → logprob: -6.2521538734436035
    3. '100' → logprob: -8.502154350280762
    4. '998' → logprob: -11.002154350280762
    5. 'int' → logprob: -12.502154350280762
    6. '1' → logprob: -13.252154350280762
    7. '(' → logprob: -16.877153396606445
    8. '109' → logprob: -17.002153396606445
    9. '   ' → logprob: -17.377153396606445
    10. '
' → logprob: -17.752153396606445

Token 740: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00018422940047457814
    2. '998' → logprob: -9.250184059143066
    3. '100' → logprob: -9.375184059143066
    4. 'int' → logprob: -12.750184059143066
    5. '1' → logprob: -15.000184059143066
    6. ' ' → logprob: -16.875185012817383
    7. '123' → logprob: -18.500185012817383
    8. '(' → logprob: -18.625185012817383
    9. '```' → logprob: -18.875185012817383
    10. '
' → logprob: -18.875185012817383

Token 741: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.20216284692287445
    2. '9' → logprob: -1.7021628618240356
    3. ' **' → logprob: -7.577162742614746
    4. '7' → logprob: -9.327162742614746
    5. ' ' → logprob: -9.577162742614746
    6. '=' → logprob: -10.827162742614746
    7. '```' → logprob: -10.827162742614746
    8. '^' → logprob: -11.827162742614746
    9. '_' → logprob: -11.952162742614746
    10. '09' → logprob: -11.952162742614746

Token 742: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.125
    3. '```' → logprob: -17.75
    4. '
' → logprob: -18.625
    5. '   ' → logprob: -19.25
    6. ' ' → logprob: -21.0
    7. '``' → logprob: -21.25
    8. '

' → logprob: -21.625
    9. '+' → logprob: -22.625
    10. '10' → logprob: -22.625

Token 743: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.371605948312208e-05
    2. '7' → logprob: -10.500053405761719
    3. ' +' → logprob: -10.750053405761719
    4. '+
' → logprob: -12.500053405761719
    5. '9' → logprob: -14.000053405761719
    6. '```' → logprob: -17.37505340576172
    7. '＋' → logprob: -17.62505340576172
    8. '
' → logprob: -18.87505340576172
    9. '+k' → logprob: -19.12505340576172
    10. ' ' → logprob: -19.25005340576172

Token 744: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '9' → logprob: -17.25
    3. '+' → logprob: -17.375
    4. ' ' → logprob: -18.375
    5. '

' → logprob: -18.875
    6. '   ' → logprob: -19.125
    7. '```' → logprob: -19.5
    8. '
' → logprob: -19.875
    9. '  ' → logprob: -21.125
    10. '07' → logprob: -21.125

Token 745: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '9' → logprob: -21.25
    3. '+' → logprob: -21.625
    4. '07' → logprob: -21.75
    5. '
' → logprob: -22.875
    6. '７' → logprob: -22.875
    7. ' ' → logprob: -23.0
    8. '

' → logprob: -23.125
    9. '```' → logprob: -23.5
    10. '   ' → logprob: -23.625

Token 746: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.531156063079834
    2. '
' → logprob: -1.406156063079834
    3. '    
' → logprob: -2.656156063079834
    4. '<|end|>' → logprob: -3.156156063079834
    5. '()' → logprob: -3.906156063079834
    6. '```' → logprob: -4.656156063079834
    7. ',
' → logprob: -5.781156063079834
    8. ':' → logprob: -5.906156063079834
    9. 'import' → logprob: -6.031156063079834
    10. ',' → logprob: -6.031156063079834

Token 747: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00470613781362772
    2. '    
' → logprob: -6.254705905914307
    3. '
' → logprob: -7.004705905914307
    4. '<|end|>' → logprob: -7.754705905914307
    5. 'n' → logprob: -8.004706382751465
    6. 'import' → logprob: -8.129706382751465
    7. '```' → logprob: -8.754706382751465
    8. 'input' → logprob: -9.254706382751465
    9. '    ' → logprob: -9.379706382751465
    10. ' readline' → logprob: -9.629706382751465

Token 748: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.00843171589076519
    2. '   ' → logprob: -5.258431911468506
    3. 'n' → logprob: -5.758431911468506
    4. 'Q' → logprob: -11.133431434631348
    5. 'input' → logprob: -11.508431434631348
    6. ' N' → logprob: -11.633431434631348
    7. 'import' → logprob: -13.883431434631348
    8. 'T' → logprob: -14.133431434631348
    9. 't' → logprob: -14.508431434631348
    10. 'S' → logprob: -15.383431434631348

Token 749: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46478065848350525
    2. ',' → logprob: -1.4647806882858276
    3. '=' → logprob: -1.9647806882858276
    4. ' ' → logprob: -8.339780807495117
    5. ' ,' → logprob: -9.464780807495117
    6. '=int' → logprob: -9.964780807495117
    7. '=input' → logprob: -11.464780807495117
    8. ' =
' → logprob: -12.214780807495117
    9. '<|end|>' → logprob: -12.214780807495117
    10. '   ' → logprob: -12.339780807495117

Token 750: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005530327325686812
    2. ' int' → logprob: -7.500553131103516
    3. '=int' → logprob: -18.625553131103516
    4. ' ' → logprob: -18.750553131103516
    5. '	int' → logprob: -19.125553131103516
    6. '[int' → logprob: -19.500553131103516
    7. '(int' → logprob: -19.750553131103516
    8. '10' → logprob: -19.875553131103516
    9. '<int' → logprob: -20.375553131103516
    10. '0' → logprob: -20.875553131103516

Token 751: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02383698709309101
    2. 'input' → logprob: -4.023837089538574
    3. '()' → logprob: -5.523837089538574
    4. '(' → logprob: -6.398837089538574
    5. ' input' → logprob: -11.648837089538574
    6. '(sys' → logprob: -12.523837089538574
    7. '=input' → logprob: -14.023837089538574
    8. '(
' → logprob: -14.273837089538574
    9. '('' → logprob: -14.398837089538574
    10. '()
' → logprob: -14.523837089538574

Token 752: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012672555167227983
    2. '())
' → logprob: -7.251267433166504
    3. '()' → logprob: -7.501267433166504
    4. ')' → logprob: -13.501267433166504
    5. '().' → logprob: -14.001267433166504
    6. '()
' → logprob: -14.126267433166504
    7. '(' → logprob: -14.126267433166504
    8. '())
' → logprob: -14.251267433166504
    9. '())

' → logprob: -15.626267433166504
    10. ' ())' → logprob: -15.751267433166504

Token 753: '   ' (ID: 271)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.28885403275489807
    2. ' S' → logprob: -1.5388540029525757
    3. '   ' → logprob: -3.5388541221618652
    4. 'A' → logprob: -5.288854122161865
    5. ' A' → logprob: -6.913854122161865
    6. '    
' → logprob: -7.913854122161865
    7. '    ' → logprob: -9.413853645324707
    8. '<|end|>' → logprob: -9.413853645324707
    9. '(S' → logprob: -9.538853645324707
    10. '	S' → logprob: -9.663853645324707

Token 754: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.017255881801247597
    2. 'A' → logprob: -4.267255783081055
    3. 'Q' → logprob: -6.267255783081055
    4. 'L' → logprob: -7.892255783081055
    5. 'D' → logprob: -9.142255783081055
    6. 'C' → logprob: -9.642255783081055
    7. 'M' → logprob: -9.642255783081055
    8. 'P' → logprob: -9.767255783081055
    9. 'points' → logprob: -9.767255783081055
    10. '   ' → logprob: -9.767255783081055

Token 755: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02640015445649624
    2. ' =' → logprob: -3.651400089263916
    3. '=[]' → logprob: -9.901400566101074
    4. ',' → logprob: -10.526400566101074
    5. '[' → logprob: -11.776400566101074
    6. '[]' → logprob: -12.026400566101074
    7. '   ' → logprob: -12.651400566101074
    8. '=[]
' → logprob: -13.776400566101074
    9. '=
' → logprob: -13.901400566101074
    10. '(' → logprob: -13.901400566101074

Token 756: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013479012995958328
    2. '[int' → logprob: -5.013479232788086
    3. '[N' → logprob: -5.763479232788086
    4. '[]' → logprob: -6.763479232788086
    5. '[array' → logprob: -6.888479232788086
    6. '[input' → logprob: -8.263479232788086
    7. '[num' → logprob: -8.638479232788086
    8. '[list' → logprob: -8.888479232788086
    9. '[line' → logprob: -9.388479232788086
    10. '[index' → logprob: -9.513479232788086

Token 757: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -4.227250610711053e-05
    2. 'map' → logprob: -11.000041961669922
    3. ' tuple' → logprob: -11.000041961669922
    4. 'list' → logprob: -12.000041961669922
    5. '(tuple' → logprob: -12.875041961669922
    6. '   ' → logprob: -17.250041961669922
    7. 'tu' → logprob: -18.625041961669922
    8. '
' → logprob: -19.125041961669922
    9. '0' → logprob: -19.375041961669922
    10. 'div' → logprob: -19.375041961669922

Token 758: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00015872348740231246
    2. 'map' → logprob: -8.750158309936523
    3. ' map' → logprob: -16.250158309936523
    4. '(int' → logprob: -17.250158309936523
    5. '	map' → logprob: -17.250158309936523
    6. '()' → logprob: -17.625158309936523
    7. ',map' → logprob: -17.875158309936523
    8. '(' → logprob: -18.250158309936523
    9. '.map' → logprob: -18.375158309936523
    10. '_map' → logprob: -18.500158309936523

Token 759: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3870941400527954
    2. 'int' → logprob: -1.1370941400527954
    3. ',int' → logprob: -9.887094497680664
    4. '   ' → logprob: -9.887094497680664
    5. 'input' → logprob: -10.012094497680664
    6. '[int' → logprob: -10.512094497680664
    7. ' int' → logprob: -10.762094497680664
    8. '=int' → logprob: -11.137094497680664
    9. ']int' → logprob: -12.262094497680664
    10. '<int' → logprob: -13.137094497680664

Token 760: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.962224543094635
    2. ',input' → logprob: -0.962224543094635
    3. '(input' → logprob: -1.4622244834899902
    4. ',' → logprob: -5.71222448348999
    5. ' input' → logprob: -7.71222448348999
    6. '=input' → logprob: -8.337224960327148
    7. '[input' → logprob: -9.212224960327148
    8. '   ' → logprob: -10.712224960327148
    9. ')' → logprob: -10.962224960327148
    10. '	input' → logprob: -11.337224960327148

Token 761: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0011709370883181691
    2. ' input' → logprob: -6.751171112060547
    3. ')' → logprob: -14.751171112060547
    4. '   ' → logprob: -15.501171112060547
    5. '(input' → logprob: -17.126171112060547
    6. ' ' → logprob: -17.876171112060547
    7. ',input' → logprob: -18.751171112060547
    8. '	input' → logprob: -19.001171112060547
    9. '[input' → logprob: -19.001171112060547
    10. '=input' → logprob: -19.126171112060547

Token 762: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -15.75
    3. '.split' → logprob: -17.0
    4. '(' → logprob: -18.625
    5. 'split' → logprob: -18.625
    6. ' ().' → logprob: -19.125
    7. '()
' → logprob: -19.875
    8. '()))' → logprob: -19.875
    9. '('').' → logprob: -20.75
    10. '   ' → logprob: -21.0

Token 763: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003334393841214478
    2. '().' → logprob: -8.750333786010742
    3. 'strip' → logprob: -9.125333786010742
    4. 'rstrip' → logprob: -9.750333786010742
    5. ' split' → logprob: -12.500333786010742
    6. '(split' → logprob: -12.875333786010742
    7. '.split' → logprob: -14.000333786010742
    8. 's' → logprob: -15.875333786010742
    9. 'spl' → logprob: -15.875333786010742
    10. ')' → logprob: -16.250333786010742

Token 764: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.012034270912408829
    2. '))' → logprob: -4.5120344161987305
    3. '().' → logprob: -7.6370344161987305
    4. '()' → logprob: -7.7620344161987305
    5. '()))
' → logprob: -9.63703441619873
    6. '(' → logprob: -12.38703441619873
    7. '()));' → logprob: -12.76203441619873
    8. '()
' → logprob: -13.38703441619873
    9. '())' → logprob: -13.51203441619873
    10. '())).' → logprob: -14.38703441619873

Token 765: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22064030170440674
    2. '()' → logprob: -1.7206403017044067
    3. 'for' → logprob: -4.345640182495117
    4. '   ' → logprob: -5.595640182495117
    5. ')' → logprob: -6.095640182495117
    6. ']' → logprob: -9.720640182495117
    7. '	for' → logprob: -10.845640182495117
    8. ')]' → logprob: -11.845640182495117
    9. '    ' → logprob: -11.970640182495117
    10. '()]' → logprob: -12.220640182495117

Token 766: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0032639806158840656
    2. '_range' → logprob: -6.2532639503479
    3. 'range' → logprob: -7.3782639503479
    4. ' range' → logprob: -7.6282639503479
    5. '_i' → logprob: -8.878264427185059
    6. 'i' → logprob: -10.378264427185059
    7. '_in' → logprob: -10.628264427185059
    8. 'in' → logprob: -11.753264427185059
    9. '_
' → logprob: -12.253264427185059
    10. ' in' → logprob: -12.378264427185059

Token 767: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29910531640052795
    2. 'range' → logprob: -1.4241052865982056
    3. 'in' → logprob: -4.549105167388916
    4. 'i' → logprob: -5.174105167388916
    5. ' range' → logprob: -7.299105167388916
    6. '_range' → logprob: -8.049105644226074
    7. '_i' → logprob: -8.299105644226074
    8. ' in' → logprob: -8.799105644226074
    9. '_N' → logprob: -9.799105644226074
    10. '0' → logprob: -10.174105644226074

Token 768: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.8624639324116288e-06
    2. ' range' → logprob: -13.250001907348633
    3. '(range' → logprob: -19.000001907348633
    4. '[' → logprob: -19.875001907348633
    5. '	range' → logprob: -20.750001907348633
    6. '   ' → logprob: -21.000001907348633
    7. 'ra' → logprob: -21.625001907348633
    8. '
' → logprob: -21.750001907348633
    9. '_' → logprob: -21.875001907348633
    10. 'r' → logprob: -21.875001907348633

Token 769: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.45848218582978e-06
    2. 'N' → logprob: -13.12500286102295
    3. '(' → logprob: -14.75000286102295
    4. '(n' → logprob: -17.375001907348633
    5. '(
' → logprob: -17.625001907348633
    6. '	N' → logprob: -19.500001907348633
    7. '   ' → logprob: -20.875001907348633
    8. '(M' → logprob: -21.250001907348633
    9. '[N' → logprob: -21.750001907348633
    10. ' (' → logprob: -21.875001907348633

Token 770: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.7385154428193346e-05
    2. ')' → logprob: -10.37503719329834
    3. ']' → logprob: -12.25003719329834
    4. ')]
' → logprob: -13.87503719329834
    5. '   ' → logprob: -15.62503719329834
    6. ')],' → logprob: -16.250038146972656
    7. ')])' → logprob: -16.625038146972656
    8. '])]' → logprob: -17.000038146972656
    9. ')]
' → logprob: -17.125038146972656
    10. ')][' → logprob: -17.625038146972656

Token 771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004968797322362661
    2. '
' → logprob: -5.629968643188477
    3. '    
' → logprob: -7.129968643188477
    4. '<|end|>' → logprob: -8.129968643188477
    5. '```' → logprob: -8.504968643188477
    6. '[' → logprob: -10.254968643188477
    7. ')' → logprob: -11.879968643188477
    8. '[
' → logprob: -12.629968643188477
    9. '<|end|>' → logprob: -12.879968643188477
    10. '#' → logprob: -13.004968643188477

Token 772: ' base' (ID: 3611)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.762091338634491
    2. 'print' → logprob: -1.3870913982391357
    3. 'res' → logprob: -1.5120913982391357
    4. 'result' → logprob: -3.6370913982391357
    5. 'base' (adapté à ' base') → logprob: -4.262091159820557
    6. 'answer' → logprob: -4.387091159820557
    7. '   ' → logprob: -5.762091159820557
    8. 'S' → logprob: -5.887091159820557
    9. 'tot' → logprob: -6.262091159820557
    10. 'ret' → logprob: -7.012091159820557

Token 773: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002068892121315
    2. '=' → logprob: -2.3502068519592285
    3. ' =
' → logprob: -15.975207328796387
    4. ' ' → logprob: -16.35020637512207
    5. '＝' → logprob: -16.85020637512207
    6. ',' → logprob: -17.22520637512207
    7. '   ' → logprob: -18.22520637512207
    8. '=int' → logprob: -18.47520637512207
    9. '=
' → logprob: -18.47520637512207
    10. ' =
' → logprob: -18.85020637512207

Token 774: ' N' (ID: 478)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.007740193046629429
    2. '100' → logprob: -4.882740020751953
    3. 'int' → logprob: -9.382740020751953
    4. '200' → logprob: -10.882740020751953
    5. '1' → logprob: -11.007740020751953
    6. '2' → logprob: -12.007740020751953
    7. 'N' → logprob: -13.257740020751953
    8. '20' → logprob: -13.257740020751953
    9. '300' → logprob: -13.632740020751953
    10. '500' → logprob: -14.382740020751953

Token 775: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43609216809272766
    2. ' +' → logprob: -1.8110921382904053
    3. '   ' → logprob: -2.1860921382904053
    4. '*' → logprob: -2.9360921382904053
    5. ' *' → logprob: -4.936092376708984
    6. '    
' → logprob: -5.061092376708984
    7. '
' → logprob: -5.311092376708984
    8. '**' → logprob: -5.311092376708984
    9. '*N' → logprob: -7.561092376708984
    10. '<<' → logprob: -8.936092376708984

Token 776: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07514400035142899
    2. 'print' → logprob: -3.075144052505493
    3. 'result' → logprob: -4.450143814086914
    4. 'ans' → logprob: -5.200143814086914
    5. 'res' → logprob: -5.325143814086914
    6. 'answer' → logprob: -6.575143814086914
    7. 'tot' → logprob: -6.575143814086914
    8. 'total' → logprob: -7.325143814086914
    9. 'pr' → logprob: -8.325143814086914
    10. 'ret' → logprob: -8.575143814086914

Token 777: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4193260371685028
    2. 'ans' → logprob: -1.1693260669708252
    3. 'print' → logprob: -4.294325828552246
    4. 'tot' → logprob: -4.919325828552246
    5. 'result' → logprob: -5.294325828552246
    6. 'answer' → logprob: -5.794325828552246
    7. 'ret' → logprob: -6.044325828552246
    8. 'dist' → logprob: -8.169325828552246
    9. 'total' → logprob: -9.669325828552246
    10. 'out' → logprob: -9.919325828552246

Token 778: ' Pre' (ID: 4659)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5819766521453857
    2. 'res' → logprob: -0.9569766521453857
    3. 'answer' → logprob: -3.7069766521453857
    4. 'result' → logprob: -4.206976890563965
    5. 'print' → logprob: -4.456976890563965
    6. 'tot' → logprob: -6.081976890563965
    7. 'dist' → logprob: -6.831976890563965
    8. 'ret' → logprob: -7.081976890563965
    9. 'total' → logprob: -7.956976890563965
    10. 'dp' → logprob: -8.206976890563965

Token 779: 'build' (ID: 9242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4746178686618805
    2. 'fix' → logprob: -1.349617838859558
    3. '#' → logprob: -3.5996179580688477
    4. 'sum' → logprob: -3.5996179580688477
    5. 'process' → logprob: -4.724617958068848
    6. 'processed' → logprob: -4.849617958068848
    7. 'tot' → logprob: -4.974617958068848
    8. 's' → logprob: -5.599617958068848
    9. 'd' → logprob: -5.724617958068848
    10. 'f' → logprob: -5.724617958068848

Token 780: ' heaps' (ID: 154901)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2784444987773895
    2. 'ls' → logprob: -2.278444528579712
    3. 'events' → logprob: -3.778444528579712
    4. 'interval' → logprob: -4.653444290161133
    5. 'inds' → logprob: -4.903444290161133
    6. 'ans' → logprob: -4.903444290161133
    7. 'diff' → logprob: -5.153444290161133
    8. 'cnt' → logprob: -5.278444290161133
    9. 'pos' → logprob: -5.278444290161133
    10. '   ' → logprob: -5.528444290161133

Token 781: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007463111542165279
    2. '<|end|>' → logprob: -5.382462978363037
    3. '    
' → logprob: -6.507462978363037
    4. '(ls' → logprob: -7.632462978363037
    5. '    ' → logprob: -7.632462978363037
    6. '<|end|>' → logprob: -9.257463455200195
    7. 'ls' → logprob: -9.882463455200195
    8. ',' → logprob: -10.257463455200195
    9. '...' → logprob: -10.507463455200195
    10. '
' → logprob: -10.632463455200195

Token 782: 'copy' (ID: 14730)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.875664472579956
    2. '   ' → logprob: -1.250664472579956
    3. 'ls' → logprob: -1.500664472579956
    4. '#' → logprob: -3.000664472579956
    5. ' #' → logprob: -5.750664710998535
    6. ' )' → logprob: -6.000664710998535
    7. ' ' → logprob: -6.250664710998535
    8. '    ' → logprob: -6.250664710998535
    9. ' ls' → logprob: -6.250664710998535
    10. '    
' → logprob: -6.250664710998535

Token 783: ' avoided' (ID: 55911)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.6807228922843933
    2. '   ' → logprob: -1.805722951889038
    3. ')' → logprob: -2.055722951889038
    4. 'of' → logprob: -2.680722951889038
    5. 'S' → logprob: -2.930722951889038
    6. '(ls' → logprob: -3.555722951889038
    7. 'import' → logprob: -4.430722713470459
    8. ' of' → logprob: -4.805722713470459
    9. 's' → logprob: -5.180722713470459
    10. '_ls' → logprob: -5.555722713470459

Token 784: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016967136412858963
    2. ')
' → logprob: -4.516967296600342
    3. '   ' → logprob: -5.391967296600342
    4. ' for' → logprob: -8.016966819763184
    5. ',' → logprob: -8.266966819763184
    6. ' to' → logprob: -8.641966819763184
    7. ' )' → logprob: -9.266966819763184
    8. 'for' → logprob: -9.516966819763184
    9. '...' → logprob: -10.016966819763184
    10. ')...' → logprob: -10.016966819763184

Token 785: ' fresh' (ID: 8982)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5229635834693909
    2. 'ls' → logprob: -1.522963523864746
    3. 'solve' → logprob: -2.022963523864746
    4. ')' → logprob: -4.522963523864746
    5. 'list' → logprob: -4.772963523864746
    6. 'using' → logprob: -5.147963523864746
    7. 'copy' → logprob: -5.272963523864746
    8. 'deep' → logprob: -5.397963523864746
    9. ' S' → logprob: -5.897963523864746
    10. '[]' → logprob: -6.147963523864746

Token 786: ' recom' (ID: 19119)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.1803213208913803
    2. 'S' → logprob: -3.055321216583252
    3. 'he' → logprob: -3.180321216583252
    4. 'heap' → logprob: -3.805321216583252
    5. 'lists' → logprob: -3.930321216583252
    6. 'copy' → logprob: -5.180321216583252
    7. 'copies' → logprob: -5.305321216583252
    8. '   ' → logprob: -5.555321216583252
    9. ' S' → logprob: -6.055321216583252
    10. ')' → logprob: -6.055321216583252

Token 787: 'putation' (ID: 47913)
  Prédit: 'putation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'putation' → logprob: -0.5838464498519897
    2. 'pile' → logprob: -1.4588464498519897
    3. 'pute' → logprob: -1.8338464498519897
    4. 'p' → logprob: -3.3338465690612793
    5. 'heap' → logprob: -4.708846569061279
    6. 'put' → logprob: -5.833846569061279
    7. '```' → logprob: -7.458846569061279
    8. '(heap' → logprob: -8.708846092224121
    9. ')' → logprob: -8.958846092224121
    10. '``' → logprob: -9.083846092224121

Token 788: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5647621750831604
    2. '   ' → logprob: -1.1897621154785156
    3. ')
' → logprob: -2.0647621154785156
    4. ' for' → logprob: -9.689762115478516
    5. ')

' → logprob: -9.939762115478516
    6. '    
' → logprob: -10.064762115478516
    7. '):
' → logprob: -10.314762115478516
    8. ',' → logprob: -10.439762115478516
    9. '#' → logprob: -10.564762115478516
    10. ' and' → logprob: -10.564762115478516

Token 789: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003709219628944993
    2. '
' → logprob: -6.628709316253662
    3. '    
' → logprob: -6.628709316253662
    4. 'ls' → logprob: -7.003709316253662
    5. '<|end|>' → logprob: -10.753708839416504
    6. '```' → logprob: -11.128708839416504
    7. '#' → logprob: -11.378708839416504
    8. ' ls' → logprob: -11.503708839416504
    9. '(ls' → logprob: -11.753708839416504
    10. '    
    
' → logprob: -11.878708839416504

Token 790: ' tot' (ID: 2417)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.3291366398334503
    2. '   ' → logprob: -1.454136610031128
    3. 'print' → logprob: -3.704136610031128
    4. 'ans' → logprob: -5.454136848449707
    5. ' ls' → logprob: -5.454136848449707
    6. 'tot' (adapté à ' tot') → logprob: -5.579136848449707
    7. 'res' → logprob: -5.829136848449707
    8. 'total' → logprob: -6.829136848449707
    9. 'result' → logprob: -6.954136848449707
    10. ' print' → logprob: -7.454136848449707

Token 791: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1800258606672287
    2. '=' → logprob: -1.8050258159637451
    3. '1' → logprob: -8.430026054382324
    4. ' +=' → logprob: -10.805026054382324
    5. '+=' → logprob: -10.930026054382324
    6. '_' → logprob: -12.180026054382324
    7. '=sum' → logprob: -12.930026054382324
    8. '0' → logprob: -13.055026054382324
    9. ' ' → logprob: -13.180026054382324
    10. '=s' → logprob: -13.305026054382324

Token 792: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283177882432938
    2. '=' → logprob: -2.2378318309783936
    3. ' +=' → logprob: -12.362832069396973
    4. ',' → logprob: -13.112832069396973
    5. ' ' → logprob: -13.612832069396973
    6. '+=' → logprob: -14.237832069396973
    7. '1' → logprob: -14.487832069396973
    8. '=sum' → logprob: -16.112831115722656
    9. '   ' → logprob: -16.362831115722656
    10. ' =
' → logprob: -16.362831115722656

Token 793: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0013271415373310447
    2. ' solve' → logprob: -6.626327037811279
    3. '   ' → logprob: -14.501327514648438
    4. '.solve' → logprob: -15.501327514648438
    5. '  ' → logprob: -16.001327514648438
    6. 'sum' → logprob: -16.376327514648438
    7. ' ' → logprob: -16.626327514648438
    8. 'resolve' → logprob: -17.001327514648438
    9. 'sol' → logprob: -17.126327514648438
    10. 'save' → logprob: -17.251327514648438

Token 794: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -3.128163257315464e-07
    2. 'interval' → logprob: -15.5
    3. 'inter' → logprob: -16.625
    4. '_interval' → logprob: -18.25
    5. '_' → logprob: -18.625
    6. '```' → logprob: -18.625
    7. '_in' → logprob: -20.5
    8. '
' → logprob: -20.625
    9. '_interrupt' → logprob: -21.0
    10. '_ranges' → logprob: -21.125

Token 795: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.00046844579628668725
    2. 'val' → logprob: -7.8754682540893555
    3. 'als' → logprob: -9.375468254089355
    4. 's' → logprob: -13.625468254089355
    5. '   ' → logprob: -14.625468254089355
    6. '```' → logprob: -15.000468254089355
    7. '#' → logprob: -15.500468254089355
    8. '_' → logprob: -15.500468254089355
    9. 't' → logprob: -15.500468254089355
    10. ' vals' → logprob: -15.625468254089355

Token 796: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -7.465036105713807e-06
    2. '((' → logprob: -12.125007629394531
    3. '([(' → logprob: -13.500007629394531
    4. '(
' → logprob: -15.125007629394531
    5. '[(' → logprob: -15.625007629394531
    6. '(' → logprob: -16.25000762939453
    7. '(s' → logprob: -17.50000762939453
    8. '([' → logprob: -17.50000762939453
    9. '   ' → logprob: -18.12500762939453
    10. ' (' → logprob: -18.12500762939453

Token 797: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033965865150094032
    2. ',S' → logprob: -5.753396511077881
    3. ' ,' → logprob: -9.128396987915039
    4. '(S' → logprob: -9.753396987915039
    5. '   ' → logprob: -10.253396987915039
    6. ',N' → logprob: -11.128396987915039
    7. ')' → logprob: -14.878396987915039
    8. 'S' → logprob: -15.128396987915039
    9. '  ' → logprob: -15.503396987915039
    10. '[S' → logprob: -15.503396987915039

Token 798: ' N' (ID: 478)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.06075182557106018
    2. ' base' → logprob: -3.3107519149780273
    3. 'N' → logprob: -3.8107519149780273
    4. ' N' → logprob: -8.185751914978027
    5. '   ' → logprob: -10.935751914978027
    6. '1' → logprob: -12.060751914978027
    7. '
' → logprob: -12.435751914978027
    8. '2' → logprob: -12.560751914978027
    9. ' ' → logprob: -13.060751914978027
    10. '10' → logprob: -13.060751914978027

Token 799: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. ' ,' → logprob: -13.000004768371582
    3. '   ' → logprob: -13.250004768371582
    4. '+' → logprob: -14.500004768371582
    5. ',
' → logprob: -16.3750057220459
    6. ',b' → logprob: -16.5000057220459
    7. ' +' → logprob: -17.0000057220459
    8. '(base' → logprob: -17.1250057220459
    9. '```' → logprob: -17.2500057220459
    10. ')' → logprob: -17.2500057220459

Token 800: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.001106755924411118
    2. 'N' → logprob: -7.6261067390441895
    3. ' base' → logprob: -7.8761067390441895
    4. '1' → logprob: -8.376107215881348
    5. '10' → logprob: -12.376107215881348
    6. '   ' → logprob: -13.376107215881348
    7. '100' → logprob: -14.126107215881348
    8. ' ' → logprob: -14.626107215881348
    9. ' N' → logprob: -14.751107215881348
    10. '(base' → logprob: -14.876107215881348

Token 801: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03810988366603851
    2. ')
' → logprob: -3.28810977935791
    3. '   ' → logprob: -10.16310977935791
    4. ')
' → logprob: -10.91310977935791
    5. '+' → logprob: -12.03810977935791
    6. ' )' → logprob: -12.91310977935791
    7. ')

' → logprob: -13.41310977935791
    8. ')+' → logprob: -15.03810977935791
    9. ' )
' → logprob: -15.03810977935791
    10. '*' → logprob: -15.78810977935791

Token 802: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022936077788472176
    2. '
' → logprob: -3.8979361057281494
    3. 'tot' → logprob: -6.64793586730957
    4. '    
' → logprob: -7.39793586730957
    5. '```' → logprob: -8.02293586730957
    6. 'print' → logprob: -9.89793586730957
    7. 'S' → logprob: -10.27293586730957
    8. 'total' → logprob: -10.77293586730957
    9. '#' → logprob: -11.89793586730957
    10. 't' → logprob: -12.02293586730957

Token 803: ' #' (ID: 1069)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.12985505163669586
    2. '   ' → logprob: -2.754855155944824
    3. 'print' → logprob: -3.504855155944824
    4. 'S' → logprob: -4.004855155944824
    5. 'rev' → logprob: -4.879855155944824
    6. 'ls' → logprob: -7.004855155944824
    7. 'total' → logprob: -8.129855155944824
    8. 'inv' → logprob: -8.129855155944824
    9. 'reverse' → logprob: -8.379855155944824
    10. 're' → logprob: -9.004855155944824

Token 804: ' For' (ID: 2214)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.09699631482362747
    2. 'print' → logprob: -2.471996307373047
    3. '   ' → logprob: -5.221996307373047
    4. 'rev' → logprob: -6.971996307373047
    5. 'S' → logprob: -7.096996307373047
    6. '#' → logprob: -8.596996307373047
    7. 'ls' → logprob: -8.971996307373047
    8. 'total' → logprob: -8.971996307373047
    9. 'inv' → logprob: -9.221996307373047
    10. 'reverse' → logprob: -9.596996307373047

Token 805: ' reversed' (ID: 57184)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0414376258850098
    2. ' S' → logprob: -1.1664376258850098
    3. 'tot' → logprob: -1.6664376258850098
    4. '   ' → logprob: -2.6664376258850098
    5. ' tot' → logprob: -2.7914376258850098
    6. 'rev' → logprob: -4.91643762588501
    7. ' rev' → logprob: -6.54143762588501
    8. 'reverse' → logprob: -7.29143762588501
    9. '    ' → logprob: -7.41643762588501
    10. 's' → logprob: -7.41643762588501

Token 806: ' initial' (ID: 4871)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.006313397083431482
    2. ' S' → logprob: -5.256313323974609
    3. 'tot' → logprob: -7.631313323974609
    4. '   ' → logprob: -7.756313323974609
    5. '_S' → logprob: -10.00631332397461
    6. '_s' → logprob: -10.25631332397461
    7. 'def' → logprob: -11.13131332397461
    8. '(S' → logprob: -11.38131332397461
    9. '#' → logprob: -11.50631332397461
    10. 's' → logprob: -12.00631332397461

Token 807: ' order' (ID: 2569)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.009727871045470238
    2. ' S' → logprob: -5.384727954864502
    3. '   ' → logprob: -6.384727954864502
    4. ' intervals' → logprob: -7.259727954864502
    5. 'ranges' → logprob: -7.509727954864502
    6. 'interval' → logprob: -7.634727954864502
    7. 'tot' → logprob: -7.759727954864502
    8. 'def' → logprob: -8.634727478027344
    9. ')' → logprob: -9.009727478027344
    10. 'range' → logprob: -9.384727478027344

Token 808: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008818189613521099
    2. ' S' → logprob: -5.38381814956665
    3. 'S' → logprob: -5.50881814956665
    4. ',' → logprob: -9.883818626403809
    5. '
' → logprob: -10.383818626403809
    6. 'tot' → logprob: -11.008818626403809
    7. '    
' → logprob: -11.508818626403809
    8. '[::-' → logprob: -12.633818626403809
    9. ' tot' → logprob: -12.758818626403809
    10. ')' → logprob: -12.883818626403809

Token 809: ' swap' (ID: 25489)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6625475287437439
    2. 'tot' → logprob: -0.9125475287437439
    3. '   ' → logprob: -2.7875475883483887
    4. ' S' → logprob: -4.537547588348389
    5. ' tot' → logprob: -5.662547588348389
    6. 'rev' → logprob: -5.912547588348389
    7. 'St' → logprob: -6.537547588348389
    8. 'for' → logprob: -7.162547588348389
    9. 'total' → logprob: -8.03754711151123
    10. '#' → logprob: -8.41254711151123

Token 810: ' l' (ID: 305)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.19317379593849182
    2. '(S' → logprob: -3.068173885345459
    3. 'ls' → logprob: -3.318173885345459
    4. 'tot' → logprob: -3.568173885345459
    5. '   ' → logprob: -4.193173885345459
    6. 'for' → logprob: -4.568173885345459
    7. 'l' → logprob: -4.818173885345459
    8. '=' → logprob: -5.568173885345459
    9. ' S' → logprob: -5.693173885345459
    10. 'interval' → logprob: -5.693173885345459

Token 811: '/r' (ID: 17447)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019414614886045456
    2. ',r' → logprob: -4.76941442489624
    3. 'and' → logprob: -5.51941442489624
    4. ' and' → logprob: -6.51941442489624
    5. ' =' → logprob: -7.26941442489624
    6. ' ,' → logprob: -7.39441442489624
    7. ',S' → logprob: -7.39441442489624
    8. 'S' → logprob: -7.39441442489624
    9. '=' → logprob: -7.51941442489624
    10. '   ' → logprob: -7.64441442489624

Token 812: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02812918834388256
    2. 'S' → logprob: -3.6531291007995605
    3. ' S' → logprob: -7.0281291007995605
    4. ',' → logprob: -8.403129577636719
    5. ')' → logprob: -8.903129577636719
    6. '[::-' → logprob: -9.028129577636719
    7. 'def' → logprob: -9.278129577636719
    8. '
' → logprob: -9.278129577636719
    9. '(S' → logprob: -9.403129577636719
    10. 's' → logprob: -10.403129577636719

Token 813: ' the' (ID: 290)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03418764844536781
    2. '[(' → logprob: -3.9091875553131104
    3. 'each' → logprob: -5.0341877937316895
    4. '[S' → logprob: -6.1591877937316895
    5. 'tot' → logprob: -6.2841877937316895
    6. ' S' → logprob: -6.9091877937316895
    7. '[' → logprob: -7.1591877937316895
    8. 'the' → logprob: -8.784187316894531
    9. '   ' → logprob: -8.909187316894531
    10. '[i' → logprob: -9.159187316894531

Token 814: ' logic' (ID: 18485)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.17731834948062897
    2. 'interval' → logprob: -2.6773183345794678
    3. 'tuple' → logprob: -4.427318572998047
    4. 'tu' → logprob: -4.427318572998047
    5. 'for' → logprob: -4.552318572998047
    6. 'pairs' → logprob: -4.677318572998047
    7. 'solve' → logprob: -4.927318572998047
    8. 'def' → logprob: -5.177318572998047
    9. '   ' → logprob: -5.177318572998047
    10. '#' → logprob: -5.427318572998047

Token 815: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019159071380272508
    2. '
' → logprob: -6.62691593170166
    3. '    
' → logprob: -8.25191593170166
    4. '<|end|>' → logprob: -8.25191593170166
    5. 'S' → logprob: -10.00191593170166
    6. '```' → logprob: -12.00191593170166
    7. '<|end|>' → logprob: -12.00191593170166
    8. ' S' → logprob: -13.12691593170166
    9. ')' → logprob: -13.25191593170166
    10. 'def' → logprob: -13.62691593170166

Token 816: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018924374133348465
    2. 'S' → logprob: -4.018924236297607
    3. ' S' → logprob: -7.893924236297607
    4. 'tot' → logprob: -8.143924713134766
    5. 'reverse' → logprob: -11.143924713134766
    6. '  ' → logprob: -11.143924713134766
    7. '```' → logprob: -11.268924713134766
    8. '	S' → logprob: -11.518924713134766
    9. '    
' → logprob: -11.768924713134766
    10. 't' → logprob: -11.893924713134766

Token 817: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.358329713344574
    2. 'S' (adapté à ' S') → logprob: -1.2333297729492188
    3. 'tot' → logprob: -5.108329772949219
    4. ' S' → logprob: -6.358329772949219
    5. 'rev' → logprob: -6.608329772949219
    6. 're' → logprob: -8.983329772949219
    7. 'R' → logprob: -8.983329772949219
    8. 'reverse' → logprob: -9.233329772949219
    9. 'for' → logprob: -9.733329772949219
    10. 't' → logprob: -10.358329772949219

Token 818: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.21514400839805603
    2. ' =' → logprob: -2.340143918991089
    3. '=' → logprob: -2.715143918991089
    4. 'rev' → logprob: -3.590143918991089
    5. 'r' → logprob: -6.215144157409668
    6. '_r' → logprob: -7.840144157409668
    7. '_re' → logprob: -7.840144157409668
    8. '2' → logprob: -8.090144157409668
    9. '_inv' → logprob: -9.090144157409668
    10. '[::-' → logprob: -9.840144157409668

Token 819: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519393861293793
    2. ' =' → logprob: -1.5019394159317017
    3. '=S' → logprob: -12.25193977355957
    4. '=[' → logprob: -13.50193977355957
    5. ' =[' → logprob: -13.50193977355957
    6. '[::-' → logprob: -14.75193977355957
    7. '＝' → logprob: -14.87693977355957
    8. 'S' → logprob: -15.12693977355957
    9. '=
' → logprob: -15.50193977355957
    10. 's' → logprob: -15.62693977355957

Token 820: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.274932143744081e-05
    2. '[((' → logprob: -10.250042915344238
    3. ' [(' → logprob: -12.250042915344238
    4. '[' → logprob: -13.000042915344238
    5. 'S' → logprob: -16.125041961669922
    6. '[S' → logprob: -17.500041961669922
    7. '([(' → logprob: -17.500041961669922
    8. 'sorted' → logprob: -18.500041961669922
    9. '[s' → logprob: -18.500041961669922
    10. '[[' → logprob: -18.625041961669922

Token 821: 'l' (ID: 75)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10990047454833984
    2. '(r' → logprob: -2.73490047454834
    3. '-r' → logprob: -3.98490047454834
    4. 's' → logprob: -4.35990047454834
    5. '-s' → logprob: -5.35990047454834
    6. '(s' → logprob: -7.10990047454834
    7. '(-' → logprob: -7.35990047454834
    8. '-' → logprob: -7.60990047454834
    9. 'l' → logprob: -8.35990047454834
    10. 'S' → logprob: -8.48490047454834

Token 822: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08954783529043198
    2. ',r' → logprob: -2.464547872543335
    3. ' ,' → logprob: -8.214548110961914
    4. 'r' → logprob: -8.464548110961914
    5. '[::-' → logprob: -9.839548110961914
    6. ',s' → logprob: -11.714548110961914
    7. ',R' → logprob: -11.964548110961914
    8. ',
' → logprob: -12.089548110961914
    9. ' r' → logprob: -12.464548110961914
    10. ',f' → logprob: -12.464548110961914

Token 823: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02710430510342121
    2. '-r' → logprob: -3.777104377746582
    3. '-' → logprob: -5.902104377746582
    4. ' -' → logprob: -8.527104377746582
    5. 'N' → logprob: -8.902104377746582
    6. ' r' → logprob: -8.902104377746582
    7. '-s' → logprob: -9.027104377746582
    8. 'S' → logprob: -9.402104377746582
    9. '-l' → logprob: -9.527104377746582
    10. 'l' → logprob: -9.777104377746582

Token 824: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08426205813884735
    2. ',' → logprob: -2.5842621326446533
    3. '[::-' → logprob: -5.584261894226074
    4. ' if' → logprob: -7.834261894226074
    5. ',r' → logprob: -7.959261894226074
    6. 'if' → logprob: -8.834261894226074
    7. '   ' → logprob: -8.959261894226074
    8. 'r' → logprob: -8.959261894226074
    9. '=' → logprob: -9.459261894226074
    10. 'for' → logprob: -9.584261894226074

Token 825: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5589438676834106
    2. 'for' → logprob: -0.9339438676834106
    3. '[::-' → logprob: -3.558943748474121
    4. ')' → logprob: -5.933943748474121
    5. '   ' → logprob: -5.933943748474121
    6. ',' → logprob: -7.183943748474121
    7. ' if' → logprob: -8.183943748474121
    8. 'if' → logprob: -9.183943748474121
    9. '[' → logprob: -9.808943748474121
    10. 'def' → logprob: -10.558943748474121

Token 826: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3522004187107086
    2. 'r' → logprob: -1.2272003889083862
    3. '(l' → logprob: -6.102200508117676
    4. '(r' → logprob: -7.102200508117676
    5. '_,' → logprob: -7.727200508117676
    6. ' l' → logprob: -9.352200508117676
    7. '(_,' → logprob: -9.727200508117676
    8. ' r' → logprob: -10.477200508117676
    9. '  ' → logprob: -10.727200508117676
    10. '   ' → logprob: -10.852200508117676

Token 827: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.051489174365997314
    2. 'r' → logprob: -3.4264891147613525
    3. ',r' → logprob: -4.051489353179932
    4. 'in' → logprob: -9.176488876342773
    5. ' in' → logprob: -10.051488876342773
    6. '_,' → logprob: -10.176488876342773
    7. ' r' → logprob: -10.426488876342773
    8. ' ,' → logprob: -11.051488876342773
    9. ',_' → logprob: -11.176488876342773
    10. ',l' → logprob: -12.051488876342773

Token 828: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00014025058771949261
    2. ' r' → logprob: -8.875140190124512
    3. '(r' → logprob: -16.000141143798828
    4. 'S' → logprob: -16.750141143798828
    5. '   ' → logprob: -17.375141143798828
    6. ' ' → logprob: -17.500141143798828
    7. '	r' → logprob: -17.625141143798828
    8. '  ' → logprob: -17.875141143798828
    9. 's' → logprob: -18.375141143798828
    10. '_r' → logprob: -19.000141143798828

Token 829: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08905801177024841
    2. ' in' → logprob: -2.4640579223632812
    3. ')' → logprob: -10.214057922363281
    4. 'S' → logprob: -10.214057922363281
    5. ',' → logprob: -11.589057922363281
    6. ' S' → logprob: -11.589057922363281
    7. ' ' → logprob: -12.214057922363281
    8. '
' → logprob: -13.089057922363281
    9. 'r' → logprob: -13.464057922363281
    10. ']' → logprob: -13.464057922363281

Token 830: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.04022185131907463
    2. ' S' → logprob: -4.040221691131592
    3. 're' → logprob: -4.165221691131592
    4. ' reversed' → logprob: -5.290221691131592
    5. '(re' → logprob: -7.165221691131592
    6. '(S' → logprob: -8.41522216796875
    7. 'r' → logprob: -9.41522216796875
    8. 's' → logprob: -10.16522216796875
    9. ' (' → logprob: -10.29022216796875
    10. 'reverse' → logprob: -10.54022216796875

Token 831: ']
' (ID: 1592)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.6343197822570801
    2. ']' → logprob: -0.7593197822570801
    3. '   ' → logprob: -7.75931978225708
    4. ']
' → logprob: -7.88431978225708
    5. '][' → logprob: -8.134319305419922
    6. ')]' → logprob: -8.259319305419922
    7. ')' → logprob: -8.759319305419922
    8. ' ]' → logprob: -10.384319305419922
    9. '<|end|>' → logprob: -10.384319305419922
    10. '[' → logprob: -10.759319305419922

Token 832: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027903730515390635
    2. '<|end|>' → logprob: -6.627790451049805
    3. 'S' → logprob: -7.377790451049805
    4. '
' → logprob: -8.252790451049805
    5. '```' → logprob: -8.752790451049805
    6. 'def' → logprob: -8.752790451049805
    7. '    
' → logprob: -9.877790451049805
    8. 'tot' → logprob: -9.877790451049805
    9. '#' → logprob: -10.502790451049805
    10. ')' → logprob: -10.627790451049805

Token 833: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008056677877902985
    2. 'tot' → logprob: -5.258056640625
    3. '
' → logprob: -6.383056640625
    4. '    
' → logprob: -7.633056640625
    5. '<|end|>' → logprob: -8.508056640625
    6. 'total' → logprob: -8.758056640625
    7. '```' → logprob: -9.633056640625
    8. 't' → logprob: -9.758056640625
    9. ' tot' → logprob: -10.133056640625
    10. '#' (adapté à ' #') → logprob: -10.383056640625

Token 834: ' Simply' (ID: 31470)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07216685265302658
    2. 'tot' → logprob: -2.697166919708252
    3. 'total' → logprob: -7.322166919708252
    4. 'print' → logprob: -7.572166919708252
    5. '    
' → logprob: -8.197166442871094
    6. ' tot' → logprob: -8.697166442871094
    7. 't' → logprob: -8.822166442871094
    8. '<|end|>' → logprob: -9.447166442871094
    9. '
' → logprob: -9.572166442871094
    10. 'result' → logprob: -9.947166442871094

Token 835: ' swap' (ID: 25489)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.11609238386154175
    2. 'pass' → logprob: -2.9910924434661865
    3. 'reverse' → logprob: -3.3660924434661865
    4. 'swap' → logprob: -4.866092205047607
    5. '   ' → logprob: -5.116092205047607
    6. 'print' → logprob: -5.491092205047607
    7. 'S' → logprob: -5.991092205047607
    8. 'continue' → logprob: -6.741092205047607
    9. '#' → logprob: -6.866092205047607
    10. 'flip' → logprob: -7.991092205047607

Token 836: ' the' (ID: 290)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3178364336490631
    2. 'l' → logprob: -1.4428364038467407
    3. 'for' → logprob: -4.442836284637451
    4. 'def' → logprob: -4.692836284637451
    5. '   ' → logprob: -5.817836284637451
    6. '(l' → logprob: -6.067836284637451
    7. 'the' → logprob: -6.317836284637451
    8. 's' → logprob: -6.692836284637451
    9. '(S' → logprob: -6.692836284637451
    10. '[l' → logprob: -6.817836284637451

Token 837: ' while' (ID: 2049)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8897703289985657
    2. 'S' → logprob: -1.014770269393921
    3. 'r' → logprob: -1.514770269393921
    4. 'for' → logprob: -5.6397705078125
    5. 'def' → logprob: -7.1397705078125
    6. 's' → logprob: -7.3897705078125
    7. 'ls' → logprob: -7.6397705078125
    8. '...' → logprob: -8.7647705078125
    9. 'base' → logprob: -8.8897705078125
    10. '#' → logprob: -9.0147705078125

Token 838: ' loop' (ID: 11453)
  Prédit: 'loops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loops' → logprob: -0.6441661715507507
    2. 'ls' → logprob: -1.3941662311553955
    3. ' loops' → logprob: -1.8941662311553955
    4. 'loop' → logprob: -3.3941662311553955
    5. ' True' → logprob: -4.144165992736816
    6. 'True' → logprob: -4.269165992736816
    7. ' ls' → logprob: -5.269165992736816
    8. ' loop' → logprob: -5.769165992736816
    9. '(True' → logprob: -6.894165992736816
    10. 'condition' → logprob: -7.269165992736816

Token 839: ' order' (ID: 2569)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 840: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05106571689248085
    2. '<|end|>' → logprob: -3.051065683364868
    3. '<|end|>' → logprob: -6.301065921783447
    4. '
' → logprob: -8.551065444946289
    5. '    
' → logprob: -8.926065444946289
    6. ' and' → logprob: -9.551065444946289
    7. 'def' → logprob: -9.801065444946289
    8. '#' → logprob: -10.426065444946289
    9. '```' → logprob: -10.426065444946289
    10. '...' → logprob: -10.551065444946289

Token 841: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00471930718049407
    2. '<|end|>' → logprob: -5.629719257354736
    3. 'def' → logprob: -7.754719257354736
    4. ',' → logprob: -8.629719734191895
    5. '```' → logprob: -9.004719734191895
    6. '    
' → logprob: -9.004719734191895
    7. ':' → logprob: -10.129719734191895
    8. ')' → logprob: -10.379719734191895
    9. '<|end|>' → logprob: -10.504719734191895
    10. '       ' → logprob: -10.629719734191895

Token 842: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5334581732749939
    2. 'def' (adapté à ' def') → logprob: -1.0334582328796387
    3. 'ls' → logprob: -2.9084582328796387
    4. '#' → logprob: -6.783458232879639
    5. '```' → logprob: -7.533458232879639
    6. 'he' → logprob: -8.53345775604248
    7. 'f' → logprob: -8.65845775604248
    8. 'import' → logprob: -8.90845775604248
    9. 'tot' → logprob: -8.90845775604248
    10. '
' → logprob: -9.40845775604248

Token 843: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.055889472365379333
    2. 'solve' → logprob: -2.930889368057251
    3. ' reverse' → logprob: -8.805889129638672
    4. 'reverse' → logprob: -9.430889129638672
    5. ' solver' → logprob: -9.680889129638672
    6. 'rev' → logprob: -9.930889129638672
    7. ' inner' → logprob: -9.930889129638672
    8. ' new' → logprob: -10.055889129638672
    9. ' helper' → logprob: -10.180889129638672
    10. 'solver' → logprob: -10.180889129638672

Token 844: '_reverse' (ID: 112788)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -2.7610454708337784e-05
    2. 'def' → logprob: -11.125027656555176
    3. 'inter' → logprob: -12.625027656555176
    4. '(interval' → logprob: -13.625027656555176
    5. 'interval' → logprob: -13.625027656555176
    6. '_' → logprob: -13.750027656555176
    7. '_interval' → logprob: -14.000027656555176
    8. '_tokens' → logprob: -14.250027656555176
    9. 'Intervals' → logprob: -14.375027656555176
    10. '_ranges' → logprob: -14.375027656555176

Token 845: '(S' (ID: 6181)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.07893870770931244
    2. '(S' → logprob: -2.5789387226104736
    3. 'Intervals' → logprob: -11.078938484191895
    4. '_(' → logprob: -11.828938484191895
    5. '_interval' → logprob: -12.078938484191895
    6. '_' → logprob: -12.203938484191895
    7. '(interval' → logprob: -12.203938484191895
    8. 'interval' → logprob: -12.703938484191895
    9. '_ranges' → logprob: -13.453938484191895
    10. '```' → logprob: -14.078938484191895

Token 846: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002887490263674408
    2. '):' → logprob: -8.625288963317871
    3. ',S' → logprob: -10.375288963317871
    4. '):
' → logprob: -10.500288963317871
    5. ',N' → logprob: -10.500288963317871
    6. '   ' → logprob: -11.250288963317871
    7. ' ,' → logprob: -12.625288963317871
    8. '<|end|>' → logprob: -13.625288963317871
    9. ',n' → logprob: -14.000288963317871
    10. '<|end|>' → logprob: -14.125288963317871

Token 847: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006042677443474531
    2. ' N' → logprob: -5.13104248046875
    3. ')' → logprob: -10.63104248046875
    4. 'base' → logprob: -10.88104248046875
    5. '   ' → logprob: -11.00604248046875
    6. '):
' → logprob: -11.63104248046875
    7. 'ls' → logprob: -11.88104248046875
    8. 'S' → logprob: -12.25604248046875
    9. ' ' → logprob: -12.25604248046875
    10. 'n' → logprob: -12.88104248046875

Token 848: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024488400667905807
    2. '):' → logprob: -3.7744884490966797
    3. '):
' → logprob: -6.89948844909668
    4. '   ' → logprob: -8.52448844909668
    5. ',S' → logprob: -11.39948844909668
    6. ')' → logprob: -11.64948844909668
    7. '       ' → logprob: -12.52448844909668
    8. ' ,' → logprob: -12.89948844909668
    9. '):
' → logprob: -13.64948844909668
    10. ',b' → logprob: -13.89948844909668

Token 849: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.2519860863685608
    2. ' base' → logprob: -1.501986026763916
    3. '   ' → logprob: -10.751986503601074
    4. 'b' → logprob: -11.376986503601074
    5. ' ' → logprob: -11.626986503601074
    6. ')' → logprob: -11.876986503601074
    7. '  ' → logprob: -13.251986503601074
    8. '	base' → logprob: -13.751986503601074
    9. '       ' → logprob: -14.251986503601074
    10. '):
' → logprob: -14.376986503601074

Token 850: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007747529074549675
    2. '):
' → logprob: -4.882747650146484
    3. '   ' → logprob: -9.257747650146484
    4. ':' → logprob: -10.382747650146484
    5. '):
' → logprob: -11.882747650146484
    6. ')' → logprob: -12.132747650146484
    7. ',' → logprob: -14.007747650146484
    8. '):

' → logprob: -14.632747650146484
    9. '       ' → logprob: -15.632747650146484
    10. ' ):' → logprob: -15.757747650146484

Token 851: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010342398309148848
    2. '       ' → logprob: -10.125102996826172
    3. 'import' → logprob: -11.000102996826172
    4. '	import' → logprob: -11.000102996826172
    5. '```' → logprob: -11.875102996826172
    6. '   ' → logprob: -12.500102996826172
    7. '    ' → logprob: -12.625102996826172
    8. '	   ' → logprob: -12.625102996826172
    9. '<|end|>' → logprob: -12.625102996826172
    10. ' import' → logprob: -13.125102996826172

Token 852: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34441354870796204
    2. '       ' → logprob: -2.0944135189056396
    3. 'import' (adapté à ' import') → logprob: -2.2194135189056396
    4. '	import' → logprob: -3.0944135189056396
    5. ' import' → logprob: -4.594413757324219
    6. '	   ' → logprob: -5.594413757324219
    7. '    ' → logprob: -8.719413757324219
    8. '<|end|>' → logprob: -9.719413757324219
    9. 'def' → logprob: -10.344413757324219
    10. '```' → logprob: -10.969413757324219

Token 853: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -6.704273118884885e-07
    2. ' heap' → logprob: -14.625000953674316
    3. 'sys' → logprob: -16.25
    4. 'he' → logprob: -19.5
    5. 'bis' → logprob: -20.25
    6. '_heap' → logprob: -20.375
    7. 'queue' → logprob: -20.875
    8. 'collections' → logprob: -21.25
    9. '(heap' → logprob: -21.625
    10. '
' → logprob: -22.5

Token 854: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'queue' → logprob: -18.625
    3. 'import' → logprob: -21.0
    4. 'ql' → logprob: -21.0
    5. 'qml' → logprob: -21.5
    6. 'p' → logprob: -22.0
    7. '   ' → logprob: -22.25
    8. '```' → logprob: -22.375
    9. '	q' → logprob: -22.5
    10. 'qhub' → logprob: -22.625

Token 855: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12827402353286743
    2. '
' → logprob: -2.3782739639282227
    3. '   ' → logprob: -3.6282739639282227
    4. '        
' → logprob: -7.878273963928223
    5. '	' → logprob: -8.753273963928223
    6. ',' → logprob: -8.878273963928223
    7. '    
' → logprob: -9.378273963928223
    8. '
' → logprob: -9.878273963928223
    9. '	   ' → logprob: -10.003273963928223
    10. '<|end|>' → logprob: -10.253273963928223

Token 856: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31733769178390503
    2. '   ' → logprob: -1.3173377513885498
    3. '
' → logprob: -6.567337512969971
    4. 'def' → logprob: -6.692337512969971
    5. '```' → logprob: -7.942337512969971
    6. '    ' → logprob: -8.067337989807129
    7. '	   ' → logprob: -8.692337989807129
    8. ' def' → logprob: -9.817337989807129
    9. '    
' → logprob: -10.067337989807129
    10. '           ' → logprob: -10.192337989807129

Token 857: ' ls' (ID: 41498)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4332887530326843
    2. '       ' → logprob: -1.308288812637329
    3. '#' → logprob: -3.058288812637329
    4. 'ls' (adapté à ' ls') → logprob: -3.558288812637329
    5. ' ls' → logprob: -5.68328857421875
    6. ' #' → logprob: -6.05828857421875
    7. 'def' → logprob: -9.55828857421875
    8. '    ' → logprob: -11.18328857421875
    9. '           ' → logprob: -11.55828857421875
    10. ' def' → logprob: -11.68328857421875

Token 858: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020626675337553024
    2. '=' → logprob: -3.8956267833709717
    3. '   ' → logprob: -10.27062702178955
    4. '       ' → logprob: -10.39562702178955
    5. ' ' → logprob: -11.89562702178955
    6. '    ' → logprob: -12.64562702178955
    7. '        ' → logprob: -13.39562702178955
    8. ',' → logprob: -13.39562702178955
    9. 's' → logprob: -13.77062702178955
    10. 'def' → logprob: -13.89562702178955

Token 859: ' [-' (ID: 20191)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.05367050692439079
    2. '[' → logprob: -3.1786704063415527
    3. ' [' → logprob: -5.303670406341553
    4. '[-' → logprob: -5.428670406341553
    5. '[l' → logprob: -7.553670406341553
    6. '[(' → logprob: -7.928670406341553
    7. '[R' → logprob: -9.053670883178711
    8. 'r' → logprob: -10.053670883178711
    9. 'heap' → logprob: -10.178670883178711
    10. '[S' → logprob: -10.303670883178711

Token 860: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6397153735160828
    2. 'r' → logprob: -0.7647153735160828
    3. 's' → logprob: -5.514715194702148
    4. 'max' → logprob: -6.639715194702148
    5. '(l' → logprob: -8.139715194702148
    6. '[l' → logprob: -8.264715194702148
    7. '-l' → logprob: -8.639715194702148
    8. 'x' → logprob: -8.764715194702148
    9. '(r' → logprob: -9.014715194702148
    10. 'S' → logprob: -9.014715194702148

Token 861: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31327739357948303
    2. ' *' → logprob: -1.3132773637771606
    3. ' ' → logprob: -12.438277244567871
    4. ',' → logprob: -12.438277244567871
    5. ' ' → logprob: -13.063277244567871
    6. '**' → logprob: -13.313277244567871
    7. '*object' → logprob: -14.063277244567871
    8. '<|end|>' → logprob: -14.688277244567871
    9. '[' → logprob: -14.938277244567871
    10. '```' → logprob: -15.188277244567871

Token 862: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0006342819542624056
    2. ' base' → logprob: -7.37563419342041
    3. '(base' → logprob: -12.87563419342041
    4. '1' → logprob: -13.75063419342041
    5. '   ' → logprob: -14.37563419342041
    6. '
' → logprob: -14.62563419342041
    7. '	base' → logprob: -15.00063419342041
    8. ' ' → logprob: -15.00063419342041
    9. ';base' → logprob: -15.00063419342041
    10. '```' → logprob: -15.25063419342041

Token 863: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47428008913993835
    2. ' +' → logprob: -0.9742801189422607
    3. '-' → logprob: -9.72428035736084
    4. ',' → logprob: -10.09928035736084
    5. ' ' → logprob: -10.84928035736084
    6. '       ' → logprob: -10.97428035736084
    7. ' -' → logprob: -11.09928035736084
    8. '...' → logprob: -11.47428035736084
    9. '   ' → logprob: -11.47428035736084
    10. '+i' → logprob: -12.09928035736084

Token 864: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0040531097911298275
    2. ' i' → logprob: -5.754053115844727
    3. '0' → logprob: -7.129053115844727
    4. '<|end|>' → logprob: -11.254053115844727
    5. ' ' → logprob: -11.379053115844727
    6. '   ' → logprob: -12.004053115844727
    7. '(i' → logprob: -12.129053115844727
    8. '...' → logprob: -12.254053115844727
    9. '       ' → logprob: -12.504053115844727
    10. '[' → logprob: -12.504053115844727

Token 865: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14724960923194885
    2. 'for' → logprob: -2.272249698638916
    3. '       ' → logprob: -3.397249698638916
    4. ',' → logprob: -9.022249221801758
    5. '   ' → logprob: -9.147249221801758
    6. '	for' → logprob: -10.522249221801758
    7. '[' → logprob: -10.897249221801758
    8. '<|end|>' → logprob: -10.897249221801758
    9. '        ' → logprob: -11.147249221801758
    10. '           ' → logprob: -11.147249221801758

Token 866: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25196096301078796
    2. ' i' → logprob: -1.5019609928131104
    3. ',' → logprob: -11.501960754394531
    4. ' in' → logprob: -11.626960754394531
    5. '(i' → logprob: -12.626960754394531
    6. ',i' → logprob: -12.876960754394531
    7. ' ' → logprob: -13.501960754394531
    8. '...' → logprob: -13.876960754394531
    9. '	i' → logprob: -14.001960754394531
    10. 'in' → logprob: -14.501960754394531

Token 867: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014919086243025959
    2. ' in' → logprob: -9.50014877319336
    3. 'in' → logprob: -10.37514877319336
    4. ' ,' → logprob: -10.37514877319336
    5. ',i' → logprob: -11.62514877319336
    6. '_,' → logprob: -13.87514877319336
    7. 'i' → logprob: -14.87514877319336
    8. 's' → logprob: -15.25014877319336
    9. ',_' → logprob: -15.37514877319336
    10. ',
' → logprob: -15.50014877319336

Token 868: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.5841708779335022
    2. ' (' → logprob: -0.8341708779335022
    3. ' in' → logprob: -5.584170818328857
    4. '(i' → logprob: -6.084170818328857
    5. ',' → logprob: -6.459170818328857
    6. '(L' → logprob: -8.334171295166016
    7. '(' → logprob: -8.709171295166016
    8. 'i' → logprob: -10.084171295166016
    9. '(c' → logprob: -10.209171295166016
    10. ' ' → logprob: -10.709171295166016

Token 869: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04649817571043968
    2. '(l' → logprob: -3.2964980602264404
    3. ' l' → logprob: -4.7964982986450195
    4. ' (' → logprob: -9.04649829864502
    5. '	l' → logprob: -11.17149829864502
    6. 'r' → logprob: -11.54649829864502
    7. '(r' → logprob: -12.79649829864502
    8. '[l' → logprob: -12.79649829864502
    9. ',l' → logprob: -13.17149829864502
    10. ' in' → logprob: -13.17149829864502

Token 870: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007873726077377796
    2. 'in' → logprob: -5.00787353515625
    3. ' in' → logprob: -7.00787353515625
    4. ',r' → logprob: -9.13287353515625
    5. ' ,' → logprob: -9.63287353515625
    6. ',(' → logprob: -9.88287353515625
    7. ')' → logprob: -11.75787353515625
    8. ',l' → logprob: -11.75787353515625
    9. ',s' → logprob: -13.00787353515625
    10. 'r' → logprob: -13.25787353515625

Token 871: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02803947404026985
    2. ' r' → logprob: -4.028039455413818
    3. '(r' → logprob: -4.653039455413818
    4. ' (' → logprob: -8.653039932250977
    5. '(l' → logprob: -9.278039932250977
    6. 's' → logprob: -11.528039932250977
    7. '(' → logprob: -12.278039932250977
    8. '...' → logprob: -12.653039932250977
    9. ' ' → logprob: -12.903039932250977
    10. '	r' → logprob: -12.903039932250977

Token 872: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028625354170799255
    2. 'in' → logprob: -5.877862453460693
    3. ' in' → logprob: -9.877862930297852
    4. ']' → logprob: -14.002862930297852
    5. '   ' → logprob: -14.127862930297852
    6. ')
' → logprob: -14.252862930297852
    7. '
' → logprob: -14.252862930297852
    8. 'import' → logprob: -14.752862930297852
    9. ' )' → logprob: -14.877862930297852
    10. 'n' → logprob: -15.252862930297852

Token 873: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3868793845176697
    2. ' in' → logprob: -1.1368794441223145
    3. '   ' → logprob: -12.886878967285156
    4. 'import' → logprob: -13.511878967285156
    5. ' ' → logprob: -13.761878967285156
    6. '
' → logprob: -14.761878967285156
    7. ')' → logprob: -15.011878967285156
    8. '...' → logprob: -15.011878967285156
    9. '<|end|>' → logprob: -15.136878967285156
    10. ',' → logprob: -15.136878967285156

Token 874: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00023333763238042593
    2. ' enumerate' → logprob: -8.37523365020752
    3. 'in' → logprob: -14.00023365020752
    4. 'enum' → logprob: -14.37523365020752
    5. '...' → logprob: -14.62523365020752
    6. 'en' → logprob: -14.87523365020752
    7. 'import' → logprob: -15.50023365020752
    8. ' in' → logprob: -16.125232696533203
    9. 'enqueue' → logprob: -16.500232696533203
    10. '0' → logprob: -18.000232696533203

Token 875: '(S' (ID: 6181)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0001721934968372807
    2. '(S' → logprob: -9.25017261505127
    3. ' S' → logprob: -9.62517261505127
    4. 'enumer' → logprob: -12.12517261505127
    5. 'range' → logprob: -13.12517261505127
    6. '   ' → logprob: -14.25017261505127
    7. 'reverse' → logprob: -15.50017261505127
    8. 's' → logprob: -15.50017261505127
    9. 're' → logprob: -15.62517261505127
    10. '(' → logprob: -15.62517261505127

Token 876: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6955936551094055
    2. ']
' → logprob: -0.6955936551094055
    3. ']
' → logprob: -6.32059383392334
    4. '       ' → logprob: -7.57059383392334
    5. '   ' → logprob: -9.94559383392334
    6. ')]' → logprob: -10.32059383392334
    7. ')' → logprob: -10.94559383392334
    8. ' ]
' → logprob: -11.19559383392334
    9. ' ]' → logprob: -11.94559383392334
    10. ')]
' → logprob: -12.69559383392334

Token 877: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012288003927096725
    2. '<|end|>' → logprob: -7.0012288093566895
    3. '   ' → logprob: -8.751228332519531
    4. '	rs' → logprob: -9.626228332519531
    5. 'rs' → logprob: -10.376228332519531
    6. '<|end|>' → logprob: -11.251228332519531
    7. '	' → logprob: -11.376228332519531
    8. '	   ' → logprob: -12.501228332519531
    9. '```' → logprob: -12.501228332519531
    10. ' ' → logprob: -12.626228332519531

Token 878: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' (adapté à ' rs') → logprob: -0.011138956062495708
    2. ' rs' → logprob: -4.511138916015625
    3. '	rs' → logprob: -9.511138916015625
    4. '   ' → logprob: -11.636138916015625
    5. '       ' → logprob: -12.386138916015625
    6. '$rs' → logprob: -13.261138916015625
    7. '_rs' → logprob: -13.636138916015625
    8. '(rs' → logprob: -14.761138916015625
    9. '.rs' → logprob: -15.261138916015625
    10. 'r' → logprob: -15.511138916015625

Token 879: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931648850440979
    2. ' =' → logprob: -0.6931648850440979
    3. '=[' → logprob: -11.818164825439453
    4. '   ' → logprob: -11.818164825439453
    5. ' =[' → logprob: -13.818164825439453
    6. '=[]' → logprob: -14.318164825439453
    7. ' ' → logprob: -14.568164825439453
    8. ')' → logprob: -15.693164825439453
    9. '[' → logprob: -16.693164825439453
    10. '    ' → logprob: -16.818164825439453

Token 880: ' [' (ID: 723)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.001563065918162465
    2. ' [' → logprob: -6.75156307220459
    3. '[' → logprob: -7.87656307220459
    4. '[-' → logprob: -11.87656307220459
    5. 'r' → logprob: -12.25156307220459
    6. '   ' → logprob: -14.50156307220459
    7. '[R' → logprob: -15.37656307220459
    8. ' r' → logprob: -15.75156307220459
    9. '[b' → logprob: -16.126562118530273
    10. '[(' → logprob: -16.376562118530273

Token 881: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.045941807329654694
    2. '[r' → logprob: -3.2959418296813965
    3. ' r' → logprob: -5.1709418296813965
    4. '-r' → logprob: -7.0459418296813965
    5. '[-' → logprob: -7.4209418296813965
    6. '[' → logprob: -8.295941352844238
    7. ' [' → logprob: -9.170941352844238
    8. '-' → logprob: -9.170941352844238
    9. '(r' → logprob: -9.295941352844238
    10. '   ' → logprob: -9.545941352844238

Token 882: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3484499752521515
    2. ' *' → logprob: -1.223449945449829
    3. 'base' → logprob: -13.34844970703125
    4. '*object' → logprob: -14.72344970703125
    5. '**' → logprob: -14.84844970703125
    6. '```' → logprob: -14.84844970703125
    7. ' ' → logprob: -14.97344970703125
    8. ' ' → logprob: -14.97344970703125
    9. '
' → logprob: -14.97344970703125
    10. ' base' → logprob: -15.34844970703125

Token 883: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.03366148844361305
    2. ' base' → logprob: -3.4086616039276123
    3. '(base' → logprob: -11.408661842346191
    4. '
' → logprob: -13.783661842346191
    5. ' ' → logprob: -13.908661842346191
    6. '	base' → logprob: -14.033661842346191
    7. '0' → logprob: -14.533661842346191
    8. '*' → logprob: -15.658661842346191
    9. '```' → logprob: -15.658661842346191
    10. ' ' → logprob: -16.158660888671875

Token 884: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06062886863946915
    2. ' +' → logprob: -2.935628890991211
    3. '*' → logprob: -5.185628890991211
    4. ' *' → logprob: -9.560628890991211
    5. ' ' → logprob: -11.310628890991211
    6. 'base' → logprob: -11.310628890991211
    7. ' base' → logprob: -11.685628890991211
    8. '[' → logprob: -12.060628890991211
    9. 'def' → logprob: -12.185628890991211
    10. '(base' → logprob: -12.560628890991211

Token 885: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04307501018047333
    2. ' i' → logprob: -3.1680750846862793
    3. '[i' → logprob: -10.418074607849121
    4. ' ' → logprob: -11.043074607849121
    5. '   ' → logprob: -12.168074607849121
    6. '(i' → logprob: -12.418074607849121
    7. '
' → logprob: -12.543074607849121
    8. '  ' → logprob: -12.918074607849121
    9. ' (' → logprob: -13.293074607849121
    10. '[' → logprob: -13.543074607849121

Token 886: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029752222821116447
    2. 'for' → logprob: -3.529752254486084
    3. '	for' → logprob: -14.654751777648926
    4. ',' → logprob: -14.779751777648926
    5. '       ' → logprob: -15.279751777648926
    6. '   ' → logprob: -15.404751777648926
    7. ')' → logprob: -16.154752731323242
    8. '[' → logprob: -16.529752731323242
    9. '<|end|>' → logprob: -16.529752731323242
    10. ' ' → logprob: -16.779752731323242

Token 887: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0488145686686039
    2. ' i' → logprob: -3.048814535140991
    3. ',' → logprob: -8.54881477355957
    4. 'range' → logprob: -11.17381477355957
    5. ' range' → logprob: -11.79881477355957
    6. ' in' → logprob: -12.04881477355957
    7. '0' → logprob: -12.67381477355957
    8. ',i' → logprob: -13.42381477355957
    9. 'in' → logprob: -15.04881477355957
    10. 'enumer' → logprob: -15.17381477355957

Token 888: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.85104202805087e-05
    2. 'in' → logprob: -10.125078201293945
    3. ',i' → logprob: -10.500078201293945
    4. ' ,' → logprob: -11.875078201293945
    5. ' in' → logprob: -13.125078201293945
    6. 'i' → logprob: -13.625078201293945
    7. ',r' → logprob: -14.375078201293945
    8. ',in' → logprob: -17.000078201293945
    9. '_,' → logprob: -17.125078201293945
    10. '0' → logprob: -17.250078201293945

Token 889: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0356286764144897
    2. ' range' → logprob: -2.0356287956237793
    3. 'range' → logprob: -2.1606287956237793
    4. 'enumer' → logprob: -2.1606287956237793
    5. ' i' → logprob: -2.4106287956237793
    6. ',' → logprob: -2.4106287956237793
    7. 'i' → logprob: -2.9106287956237793
    8. 'in' → logprob: -3.9106287956237793
    9. '0' → logprob: -4.285628795623779
    10. ' enumerate' → logprob: -5.160628795623779

Token 890: 'l' (ID: 75)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35350772738456726
    2. 'i' → logprob: -1.2285077571868896
    3. ' in' → logprob: -6.1035075187683105
    4. 'in' → logprob: -6.4785075187683105
    5. ' i' → logprob: -7.2285075187683105
    6. 'r' → logprob: -8.103507995605469
    7. ',r' → logprob: -9.353507995605469
    8. ',i' → logprob: -9.978507995605469
    9. 'enumer' → logprob: -10.353507995605469
    10. ' ,' → logprob: -10.978507995605469

Token 891: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002760771894827485
    2. ',r' → logprob: -6.002760887145996
    3. ' ,' → logprob: -8.752760887145996
    4. ' in' → logprob: -10.127760887145996
    5. 'r' → logprob: -10.377760887145996
    6. ',i' → logprob: -11.127760887145996
    7. 'i' → logprob: -12.002760887145996
    8. 'in' → logprob: -12.127760887145996
    9. ',s' → logprob: -12.127760887145996
    10. 'enumer' → logprob: -12.252760887145996

Token 892: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0039311680011451244
    2. ' r' → logprob: -5.628931045532227
    3. 'range' → logprob: -8.253931045532227
    4. '0' → logprob: -10.253931045532227
    5. 'i' → logprob: -11.128931045532227
    6. 'enumer' → logprob: -11.753931045532227
    7. '-r' → logprob: -13.128931045532227
    8. 're' → logprob: -13.503931045532227
    9. 'rev' → logprob: -13.753931045532227
    10. ' ' → logprob: -13.753931045532227

Token 893: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10957968980073929
    2. ' in' → logprob: -2.9845798015594482
    3. 'in' → logprob: -2.9845798015594482
    4. '),' → logprob: -6.734579563140869
    5. ',' → logprob: -7.359579563140869
    6. '   ' → logprob: -8.359580039978027
    7. 'enumer' → logprob: -8.859580039978027
    8. ']' → logprob: -9.484580039978027
    9. '}' → logprob: -9.484580039978027
    10. 'S' → logprob: -9.859580039978027

Token 894: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5840490460395813
    2. ' in' → logprob: -0.8340490460395813
    3. 'enumer' → logprob: -4.834049224853516
    4. ' enumerate' → logprob: -9.584049224853516
    5. ',' → logprob: -10.209049224853516
    6. '   ' → logprob: -11.834049224853516
    7. 'S' → logprob: -13.334049224853516
    8. ')' → logprob: -13.459049224853516
    9. 'enum' → logprob: -13.834049224853516
    10. ' ' → logprob: -14.084049224853516

Token 895: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00014013137842994183
    2. ' enumerate' → logprob: -8.875140190124512
    3. 'range' → logprob: -16.625139236450195
    4. '   ' → logprob: -17.000139236450195
    5. '...' → logprob: -17.125139236450195
    6. 'enqueue' → logprob: -17.625139236450195
    7. 'import' → logprob: -17.875139236450195
    8. 'in' → logprob: -18.000139236450195
    9. 'enum' → logprob: -18.000139236450195
    10. ' ' → logprob: -18.250139236450195

Token 896: '(S' (ID: 6181)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.009434349834918976
    2. 'enumer' → logprob: -4.759434223175049
    3. '(S' → logprob: -7.509434223175049
    4. 'range' → logprob: -8.634434700012207
    5. 'rs' → logprob: -10.259434700012207
    6. ' S' → logprob: -11.009434700012207
    7. '[S' → logprob: -11.634434700012207
    8. ' enumerate' → logprob: -11.759434700012207
    9. '(en' → logprob: -11.884434700012207
    10. 'reverse' → logprob: -12.384434700012207

Token 897: ')]
' (ID: 11587)
  Prédit: ')]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.40660402178764343
    2. ')]' → logprob: -1.2816040515899658
    3. ']
' → logprob: -3.031604051589966
    4. ']' → logprob: -5.281603813171387
    5. ')]
' → logprob: -6.656603813171387
    6. '   ' → logprob: -7.531603813171387
    7. ')' → logprob: -7.531603813171387
    8. ']
' → logprob: -7.781603813171387
    9. ')
' → logprob: -8.656603813171387
    10. '       ' → logprob: -9.031603813171387

Token 898: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000523246475495398
    2. '   ' → logprob: -8.000523567199707
    3. '<|end|>' → logprob: -8.875523567199707
    4. 'heap' → logprob: -11.000523567199707
    5. '```' → logprob: -11.375523567199707
    6. '<|end|>' → logprob: -12.000523567199707
    7. '(heap' → logprob: -12.625523567199707
    8. '
' → logprob: -13.000523567199707
    9. '[' → logprob: -13.375523567199707
    10. '           ' → logprob: -13.500523567199707

Token 899: ' heap' (ID: 37237)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.164605975151062
    2. '   ' → logprob: -2.2896060943603516
    3. 'heap' (adapté à ' heap') → logprob: -3.0396060943603516
    4. '	' → logprob: -6.664606094360352
    5. ' heap' → logprob: -7.164606094360352
    6. '	   ' → logprob: -8.414606094360352
    7. '```' → logprob: -9.039606094360352
    8. 'import' → logprob: -10.164606094360352
    9. '(heap' → logprob: -10.289606094360352
    10. '_heap' → logprob: -10.539606094360352

Token 900: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1472419600977446e-06
    2. 'ify' → logprob: -15.250000953674316
    3. 'heap' → logprob: -15.750000953674316
    4. '   ' → logprob: -15.750000953674316
    5. '[' → logprob: -16.125001907348633
    6. '       ' → logprob: -16.250001907348633
    7. '.heap' → logprob: -16.250001907348633
    8. 'queue' → logprob: -16.875001907348633
    9. 'ql' → logprob: -17.750001907348633
    10. 'import' → logprob: -18.000001907348633

Token 901: '.heap' (ID: 177287)
  Prédit: '.heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.heap' → logprob: -0.00011975488450843841
    2. '.he' → logprob: -9.500120162963867
    3. 'heap' → logprob: -10.125120162963867
    4. '(heap' → logprob: -13.250120162963867
    5. '.' → logprob: -13.375120162963867
    6. ' heap' → logprob: -13.875120162963867
    7. '_heap' → logprob: -14.875120162963867
    8. '   ' → logprob: -16.750120162963867
    9. ' .' → logprob: -18.875120162963867
    10. 'ify' → logprob: -19.000120162963867

Token 902: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -3.8219583075260743e-05
    2. 'fy' → logprob: -10.625038146972656
    3. 'ize' → logprob: -11.625038146972656
    4. 'if' → logprob: -13.250038146972656
    5. 'heap' → logprob: -13.750038146972656
    6. 'lify' → logprob: -13.875038146972656
    7. 'q' → logprob: -14.250038146972656
    8. '```' → logprob: -15.750038146972656
    9. 'import' → logprob: -16.375038146972656
    10. '   ' → logprob: -16.500038146972656

Token 903: '(ls' (ID: 128476)
  Prédit: '(ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -2.3319124011322856e-05
    2. '(rs' → logprob: -11.000022888183594
    3. 'ls' → logprob: -12.000022888183594
    4. '(' → logprob: -15.250022888183594
    5. '(lst' → logprob: -16.750022888183594
    6. '(l' → logprob: -16.875022888183594
    7. ' ls' → logprob: -17.375022888183594
    8. '(lhs' → logprob: -17.750022888183594
    9. '_ls' → logprob: -18.375022888183594
    10. '(s' → logprob: -18.375022888183594

Token 904: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11459881067276001
    2. '       ' → logprob: -2.2395987510681152
    3. ')
' → logprob: -6.614598751068115
    4. '<|end|>' → logprob: -8.364599227905273
    5. '   ' → logprob: -8.739599227905273
    6. '<|end|>' → logprob: -11.364599227905273
    7. ',' → logprob: -11.489599227905273
    8. '```' → logprob: -12.989599227905273
    9. '()' → logprob: -13.364599227905273
    10. '
' → logprob: -13.614599227905273

Token 905: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012441592989489436
    2. '<|end|>' → logprob: -7.126244068145752
    3. '   ' → logprob: -8.00124454498291
    4. '<|end|>' → logprob: -10.50124454498291
    5. 'def' → logprob: -10.75124454498291
    6. '        
' → logprob: -10.75124454498291
    7. '
' → logprob: -12.25124454498291
    8. '           ' → logprob: -12.25124454498291
    9. ' and' → logprob: -12.75124454498291
    10. ',' → logprob: -12.75124454498291

Token 906: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.00046570412814617157
    2. '   ' → logprob: -7.8754658699035645
    3. '       ' → logprob: -9.625465393066406
    4. ' heap' → logprob: -11.875465393066406
    5. 'rs' → logprob: -12.125465393066406
    6. '(heap' → logprob: -13.250465393066406
    7. '```' → logprob: -13.250465393066406
    8. 'he' → logprob: -13.375465393066406
    9. '.heap' → logprob: -14.750465393066406
    10. '
' → logprob: -14.875465393066406

Token 907: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.339278580620885e-06
    2. 'op' → logprob: -14.375001907348633
    3. 'p' → logprob: -14.625001907348633
    4. 'qhub' → logprob: -15.375001907348633
    5. '...' → logprob: -15.625001907348633
    6. 'queue' → logprob: -15.625001907348633
    7. '       ' → logprob: -15.750001907348633
    8. 'app' → logprob: -16.000001907348633
    9. 'qp' → logprob: -16.000001907348633
    10. '[' → logprob: -16.875001907348633

Token 908: '.heap' (ID: 177287)
  Prédit: '.heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.heap' → logprob: -0.0009162207134068012
    2. 'heap' → logprob: -7.000916004180908
    3. '(heap' → logprob: -13.000916481018066
    4. '.he' → logprob: -13.125916481018066
    5. ' heap' → logprob: -15.000916481018066
    6. '```' → logprob: -16.25091552734375
    7. '_heap' → logprob: -16.37591552734375
    8. '.' → logprob: -17.25091552734375
    9. ' .' → logprob: -18.37591552734375
    10. 'q' → logprob: -18.75091552734375

Token 909: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.0001093841710826382
    2. 'fy' → logprob: -9.875109672546387
    3. 'if' → logprob: -10.875109672546387
    4. 'heap' → logprob: -11.000109672546387
    5. 'lify' → logprob: -11.625109672546387
    6. 'op' → logprob: -12.000109672546387
    7. 'q' → logprob: -12.750109672546387
    8. 'opy' → logprob: -13.875109672546387
    9. '```' → logprob: -14.000109672546387
    10. 'app' → logprob: -14.375109672546387

Token 910: '(rs' (ID: 25887)
  Prédit: '(rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rs' → logprob: -9.088346359931165e-07
    2. 'rs' → logprob: -14.250000953674316
    3. '$rs' → logprob: -16.375
    4. '	rs' → logprob: -18.375
    5. '(' → logprob: -19.75
    6. '(
' → logprob: -19.875
    7. '(rhs' → logprob: -20.75
    8. '(r' → logprob: -20.875
    9. ' rs' → logprob: -21.0
    10. ')' → logprob: -21.125

Token 911: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06478703767061234
    2. '       ' → logprob: -3.0647871494293213
    3. ')
' → logprob: -4.439786911010742
    4. '   ' → logprob: -5.689786911010742
    5. '
' → logprob: -7.314786911010742
    6. '<|end|>' → logprob: -8.939786911010742
    7. ')

' → logprob: -10.189786911010742
    8. '<|end|>' → logprob: -11.064786911010742
    9. '
' → logprob: -12.189786911010742
    10. '        
' → logprob: -12.189786911010742

Token 912: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02499987557530403
    2. '       ' → logprob: -4.150000095367432
    3. '```' → logprob: -5.525000095367432
    4. '	cur' → logprob: -6.650000095367432
    5. '
' → logprob: -7.400000095367432
    6. '	def' → logprob: -7.900000095367432
    7. '	while' → logprob: -7.900000095367432
    8. '<|end|>' → logprob: -8.149999618530273
    9. '\t' → logprob: -8.399999618530273
    10. '[' → logprob: -8.399999618530273

Token 913: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.004678018856793642
    2. '       ' → logprob: -6.129678249359131
    3. '   ' → logprob: -6.379678249359131
    4. ' d' → logprob: -8.004677772521973
    5. 'def' → logprob: -8.379677772521973
    6. 'cur' → logprob: -8.754677772521973
    7. '
' → logprob: -10.754677772521973
    8. ' ' → logprob: -11.129677772521973
    9. '	d' → logprob: -11.254677772521973
    10. '```' → logprob: -11.379677772521973

Token 914: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00032509511220268905
    2. 'def' → logprob: -9.375325202941895
    3. 'ef' → logprob: -9.375325202941895
    4. '   ' → logprob: -10.000325202941895
    5. ' =' → logprob: -10.500325202941895
    6. '=set' → logprob: -10.500325202941895
    7. '=' → logprob: -11.000325202941895
    8. 'et' → logprob: -11.125325202941895
    9. '       ' → logprob: -11.875325202941895
    10. '_set' → logprob: -12.250325202941895

Token 915: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759692192077637
    2. '=' → logprob: -0.8259692192077637
    3. '   ' → logprob: -10.950969696044922
    4. '=set' → logprob: -11.575969696044922
    5. '=
' → logprob: -13.325969696044922
    6. ' =
' → logprob: -14.450969696044922
    7. ' ' → logprob: -15.450969696044922
    8. 'def' → logprob: -16.325969696044922
    9. '  ' → logprob: -16.700969696044922
    10. '=[]' → logprob: -17.075969696044922

Token 916: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0019287518225610256
    2. ' set' → logprob: -6.251928806304932
    3. '=set' → logprob: -16.001928329467773
    4. '(set' → logprob: -17.126928329467773
    5. '	set' → logprob: -18.626928329467773
    6. ' ' → logprob: -19.251928329467773
    7. '{' → logprob: -19.626928329467773
    8. 's' → logprob: -20.001928329467773
    9. ')set' → logprob: -20.001928329467773
    10. '{}' → logprob: -20.626928329467773

Token 917: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5252013802528381
    2. '()' → logprob: -0.9002013802528381
    3. '       ' → logprob: -6.525201320648193
    4. '<|end|>' → logprob: -8.400201797485352
    5. '()\' → logprob: -8.900201797485352
    6. '
' → logprob: -9.275201797485352
    7. '()
' → logprob: -10.150201797485352
    8. '[]
' → logprob: -10.400201797485352
    9. '(' → logprob: -10.650201797485352
    10. '   ' → logprob: -11.275201797485352

Token 918: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024517537094652653
    2. '	cur' → logprob: -6.3774518966674805
    3. '   ' → logprob: -7.6274518966674805
    4. 'cur' → logprob: -8.50245189666748
    5. '	   ' → logprob: -11.37745189666748
    6. '	' → logprob: -11.75245189666748
    7. '```' → logprob: -11.75245189666748
    8. 'def' → logprob: -12.50245189666748
    9. '<|end|>' → logprob: -12.50245189666748
    10. '	       ' → logprob: -13.00245189666748

Token 919: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.012853948399424553
    2. '       ' → logprob: -5.012854099273682
    3. ' cur' → logprob: -5.387854099273682
    4. '	cur' → logprob: -6.512854099273682
    5. '   ' → logprob: -10.637853622436523
    6. '[cur' → logprob: -11.262853622436523
    7. '_cur' → logprob: -12.012853622436523
    8. '	' → logprob: -12.637853622436523
    9. ' ' → logprob: -12.887853622436523
    10. '```' → logprob: -13.012853622436523

Token 920: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20166338980197906
    2. '=' → logprob: -1.7016633749008179
    3. '       ' → logprob: -9.45166301727295
    4. '        ' → logprob: -9.57666301727295
    5. ' +=' → logprob: -10.20166301727295
    6. ' ' → logprob: -10.70166301727295
    7. '   ' → logprob: -11.70166301727295
    8. '+=' → logprob: -11.82666301727295
    9. '    ' → logprob: -12.07666301727295
    10. ')' → logprob: -12.07666301727295

Token 921: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006908706855028868
    2. ' ' → logprob: -7.625690937042236
    3. 'r' → logprob: -9.500690460205078
    4. 'float' → logprob: -10.250690460205078
    5. 'max' → logprob: -10.500690460205078
    6. 'rs' → logprob: -11.000690460205078
    7. '   ' → logprob: -11.500690460205078
    8. '-' → logprob: -12.125690460205078
    9. '100' → logprob: -12.250690460205078
    10. 'S' → logprob: -12.250690460205078

Token 922: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006096287979744375
    2. 'float' → logprob: -8.750609397888184
    3. 'max' → logprob: -9.125609397888184
    4. 'rs' → logprob: -9.250609397888184
    5. '10' → logprob: -9.625609397888184
    6. 'S' → logprob: -9.875609397888184
    7. '-' → logprob: -10.125609397888184
    8. 'r' → logprob: -10.125609397888184
    9. '100' → logprob: -11.625609397888184
    10. ' ' → logprob: -11.625609397888184

Token 923: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5810257196426392
    2. '       ' → logprob: -1.5810257196426392
    3. '<|end|>' → logprob: -2.0810256004333496
    4. '   ' → logprob: -2.3310256004333496
    5. '    
' → logprob: -5.20602560043335
    6. '```' → logprob: -6.20602560043335
    7. '<|end|>' → logprob: -6.20602560043335
    8. '        
' → logprob: -6.70602560043335
    9. '    ' → logprob: -8.206026077270508
    10. '
' → logprob: -8.331026077270508

Token 924: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30229437351226807
    2. '   ' → logprob: -2.1772942543029785
    3. '	while' → logprob: -3.1772942543029785
    4. '<|end|>' → logprob: -3.1772942543029785
    5. '```' → logprob: -3.4272942543029785
    6. '\t' → logprob: -4.9272942543029785
    7. '	   ' → logprob: -5.4272942543029785
    8. '
' → logprob: -5.9272942543029785
    9. '[' → logprob: -6.1772942543029785
    10. '	for' → logprob: -6.8022942543029785

Token 925: ' tot' (ID: 2417)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' (adapté à ' tot') → logprob: -0.5861061215400696
    2. '       ' → logprob: -0.8361061215400696
    3. ' tot' → logprob: -4.961106300354004
    4. '0' → logprob: -6.211106300354004
    5. '   ' → logprob: -7.086106300354004
    6. 't' → logprob: -9.961106300354004
    7. ' ' → logprob: -9.961106300354004
    8. '```' → logprob: -10.461106300354004
    9. 'total' → logprob: -10.711106300354004
    10. 'Tot' → logprob: -10.711106300354004

Token 926: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19230785965919495
    2. '=' → logprob: -1.8173078298568726
    3. '   ' → logprob: -4.442307949066162
    4. '    ' → logprob: -7.942307949066162
    5. '       ' → logprob: -8.817307472229004
    6. ',' → logprob: -9.817307472229004
    7. ' ' → logprob: -10.067307472229004
    8. ')' → logprob: -10.692307472229004
    9. '<|end|>' → logprob: -10.942307472229004
    10. '        ' → logprob: -11.192307472229004

Token 927: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0076065086759626865
    2. ' ' → logprob: -4.882606506347656
    3. '   ' → logprob: -15.882606506347656
    4. ' ' → logprob: -16.382606506347656
    5. '=' → logprob: -17.695106506347656
    6. '  ' → logprob: -17.757606506347656
    7. '۰' → logprob: -18.445106506347656
    8. '1' → logprob: -18.757606506347656
    9. '       ' → logprob: -19.132606506347656
    10. '    ' → logprob: -19.257606506347656

Token 928: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '-' → logprob: -18.000009536743164
    4. '=' → logprob: -18.187509536743164
    5. '۰' → logprob: -18.750009536743164
    6. '   ' → logprob: -19.187509536743164
    7. 'abs' → logprob: -19.750009536743164
    8. '...' → logprob: -20.000009536743164
    9. '```' → logprob: -20.125009536743164
    10. 'int' → logprob: -20.187509536743164

Token 929: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045914790825918317
    2. '   ' → logprob: -7.87545919418335
    3. 'f' → logprob: -9.750458717346191
    4. 'def' → logprob: -11.625458717346191
    5. '```' → logprob: -12.500458717346191
    6. '	' → logprob: -13.000458717346191
    7. '	f' → logprob: -13.000458717346191
    8. ' f' → logprob: -13.625458717346191
    9. '	   ' → logprob: -14.000458717346191
    10. '
' → logprob: -14.875458717346191

Token 930: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010250021703541279
    2. '   ' → logprob: -4.760250091552734
    3. '<|end|>' → logprob: -7.510250091552734
    4. '	while' → logprob: -8.260250091552734
    5. '	   ' → logprob: -8.635250091552734
    6. '	f' → logprob: -8.885250091552734
    7. '	' → logprob: -9.135250091552734
    8. '\t' → logprob: -9.385250091552734
    9. '```' → logprob: -9.635250091552734
    10. '    ' → logprob: -10.385250091552734

Token 931: ' f' (ID: 285)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5790780782699585
    2. 'f' (adapté à ' f') → logprob: -0.8290780782699585
    3. ' f' → logprob: -6.329078197479248
    4. 'while' → logprob: -6.829078197479248
    5. '   ' → logprob: -8.57907772064209
    6. ' while' → logprob: -10.20407772064209
    7. '	f' → logprob: -11.07907772064209
    8. 'he' → logprob: -11.95407772064209
    9. '```' → logprob: -12.20407772064209
    10. 'def' → logprob: -12.57907772064209

Token 932: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022950410842896
    2. '=' → logprob: -1.9102294445037842
    3. '=False' → logprob: -13.285229682922363
    4. ' ' → logprob: -13.785229682922363
    5. '=True' → logprob: -14.035229682922363
    6. '	' → logprob: -14.535229682922363
    7. ' =
' → logprob: -14.785229682922363
    8. '   ' → logprob: -14.785229682922363
    9. '=
' → logprob: -15.660229682922363
    10. '    ' → logprob: -16.160228729248047

Token 933: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1269284337759018
    2. ' False' → logprob: -2.1269283294677734
    3. '(False' → logprob: -15.626928329467773
    4. '=False' → logprob: -16.626928329467773
    5. 'True' → logprob: -18.126928329467773
    6. ' True' → logprob: -18.751928329467773
    7. '   ' → logprob: -19.376928329467773
    8. '.False' → logprob: -19.626928329467773
    9. 'F' → logprob: -20.376928329467773
    10. '
' → logprob: -20.501928329467773

Token 934: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011201790533959866
    2. '
' → logprob: -5.261201858520508
    3. '   ' → logprob: -5.886201858520508
    4. '	' → logprob: -7.011201858520508
    5. '        
' → logprob: -7.511201858520508
    6. '```' → logprob: -7.761201858520508
    7. '<|end|>' → logprob: -7.886201858520508
    8. '    
' → logprob: -8.261201858520508
    9. '	   ' → logprob: -9.761201858520508
    10. '	while' → logprob: -9.886201858520508

Token 935: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01482545305043459
    2. '
' → logprob: -5.014825344085693
    3. '   ' → logprob: -5.889825344085693
    4. '	while' → logprob: -6.889825344085693
    5. '	   ' → logprob: -7.264825344085693
    6. '	' → logprob: -7.389825344085693
    7. '<|end|>' → logprob: -7.389825344085693
    8. '```' → logprob: -7.639825344085693
    9. '[' → logprob: -7.764825344085693
    10. '	       ' → logprob: -8.264825820922852

Token 936: ' he' (ID: 501)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03722716122865677
    2. 'while' → logprob: -3.412227153778076
    3. 'he' (adapté à ' he') → logprob: -6.037227153778076
    4. '   ' → logprob: -6.912227153778076
    5. ' while' → logprob: -9.412227630615234
    6. '```' → logprob: -9.787227630615234
    7. 'def' → logprob: -11.287227630615234
    8. 'ls' → logprob: -11.662227630615234
    9. '           ' → logprob: -11.787227630615234
    10. '	' → logprob: -12.037227630615234

Token 937: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.16025032103061676
    2. 'ap' → logprob: -1.9102503061294556
    3. 'ап' → logprob: -11.285250663757324
    4. '```' → logprob: -12.910250663757324
    5. 'apk' → logprob: -12.910250663757324
    6. 'import' → logprob: -13.285250663757324
    7. 'q' → logprob: -13.535250663757324
    8. 'appt' → logprob: -13.785250663757324
    9. '@app' → logprob: -14.035250663757324
    10. 'a' → logprob: -14.035250663757324

Token 938: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.0280383548888494e-06
    2. 'q' → logprob: -14.250000953674316
    3. 'pop' → logprob: -15.875000953674316
    4. ' op' → logprob: -16.750001907348633
    5. 'o' → logprob: -17.375001907348633
    6. 'ush' → logprob: -18.000001907348633
    7. 'оп' → logprob: -18.125001907348633
    8. 'p' → logprob: -18.500001907348633
    9. 'of' → logprob: -18.625001907348633
    10. 'opping' → logprob: -18.750001907348633

Token 939: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023601591587067
    2. '=' → logprob: -1.9102360010147095
    3. '(ls' → logprob: -12.285236358642578
    4. '(heap' → logprob: -12.285236358642578
    5. '=
' → logprob: -14.410236358642578
    6. '=lambda' → logprob: -14.660236358642578
    7. '<|end|>' → logprob: -14.785236358642578
    8. ' =
' → logprob: -15.535236358642578
    9. ',' → logprob: -15.660236358642578
    10. ' ' → logprob: -16.410236358642578

Token 940: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00015955790877342224
    2. ' heap' → logprob: -8.75015926361084
    3. '(heap' → logprob: -13.87515926361084
    4. 'import' → logprob: -15.75015926361084
    5. '.heap' → logprob: -17.875160217285156
    6. 'queue' → logprob: -19.250160217285156
    7. '_heap' → logprob: -19.375160217285156
    8. '   ' → logprob: -20.125160217285156
    9. 'he' → logprob: -20.625160217285156
    10. ' ' → logprob: -21.500160217285156

Token 941: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.1008713702030946e-06
    2. 'queue' → logprob: -14.125001907348633
    3. '```' → logprob: -14.375001907348633
    4. '[' → logprob: -15.875001907348633
    5. '.heap' → logprob: -16.250001907348633
    6. 'qml' → logprob: -16.250001907348633
    7. 'ql' → logprob: -16.375001907348633
    8. 'heap' → logprob: -16.625001907348633
    9. '(heap' → logprob: -17.125001907348633
    10. 'import' → logprob: -17.250001907348633

Token 942: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0005294414004310966
    2. 'he' → logprob: -8.125529289245605
    3. '.heap' → logprob: -8.500529289245605
    4. ' he' → logprob: -11.375529289245605
    5. '_he' → logprob: -11.875529289245605
    6. '.h' → logprob: -12.500529289245605
    7. 'heap' → logprob: -12.500529289245605
    8. '```' → logprob: -14.250529289245605
    9. '   ' → logprob: -14.750529289245605
    10. '.' → logprob: -14.750529289245605

Token 943: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.553032628493384e-05
    2. 'ap' → logprob: -9.500075340270996
    3. 'pp' → logprob: -14.500075340270996
    4. 'pop' → logprob: -17.000076293945312
    5. 'a' → logprob: -17.750076293945312
    6. 'op' → logprob: -18.750076293945312
    7. 'q' → logprob: -19.250076293945312
    8. 'ап' → logprob: -19.750076293945312
    9. ' app' → logprob: -20.125076293945312
    10. 'App' → logprob: -20.500076293945312

Token 944: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.9361264946837764e-07
    2. 'pop' → logprob: -16.0
    3. 'оп' → logprob: -17.5
    4. 'p' → logprob: -17.75
    5. 'ap' → logprob: -18.75
    6. ' op' → logprob: -19.125
    7. 'o' → logprob: -19.25
    8. 'opleft' → logprob: -19.75
    9. 'q' → logprob: -20.25
    10. '	op' → logprob: -20.625

Token 945: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12853340804576874
    2. '       ' → logprob: -2.128533363342285
    3. '        
' → logprob: -6.628533363342285
    4. '
' → logprob: -9.128533363342285
    5. '<|end|>' → logprob: -9.503533363342285
    6. '    
' → logprob: -10.878533363342285
    7. ',' → logprob: -11.253533363342285
    8. '  
' → logprob: -11.253533363342285
    9. '```' → logprob: -11.378533363342285
    10. '       
' → logprob: -11.753533363342285

Token 946: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1023610457777977
    2. '
' → logprob: -2.477360963821411
    3. '<|end|>' → logprob: -4.72736120223999
    4. '        
' → logprob: -6.35236120223999
    5. '```' → logprob: -6.60236120223999
    6. '<|end|>' → logprob: -7.60236120223999
    7. '		
' → logprob: -8.727360725402832
    8. '   ' → logprob: -9.102360725402832
    9. 'while' → logprob: -9.977360725402832
    10. ' while' → logprob: -9.977360725402832

Token 947: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11684178560972214
    2. ' while' → logprob: -2.2418417930603027
    3. 'while' (adapté à ' while') → logprob: -6.241841793060303
    4. '   ' → logprob: -6.991841793060303
    5. '```' → logprob: -7.491841793060303
    6. '	while' → logprob: -7.616841793060303
    7. ' ' → logprob: -11.116841316223145
    8. '        ' → logprob: -11.241841316223145
    9. '    ' → logprob: -11.241841316223145
    10. 'While' → logprob: -11.866841316223145

Token 948: ' ls' (ID: 41498)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.8837642669677734
    2. ' rs' → logprob: -1.2587642669677734
    3. 'ls' → logprob: -1.5087642669677734
    4. ' ls' → logprob: -2.5087642669677734
    5. '(rs' → logprob: -9.133764266967773
    6. '(ls' → logprob: -9.758764266967773
    7. '$rs' → logprob: -11.758764266967773
    8. ' not' → logprob: -11.758764266967773
    9. '	rs' → logprob: -12.008764266967773
    10. 'True' → logprob: -12.571264266967773

Token 949: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003006942570209503
    2. ':
' → logprob: -6.628006935119629
    3. 'and' → logprob: -7.128006935119629
    4. ':' → logprob: -7.128006935119629
    5. '       ' → logprob: -10.378006935119629
    6. ' or' → logprob: -11.003006935119629
    7. '           ' → logprob: -12.253006935119629
    8. '   ' → logprob: -12.378006935119629
    9. '<|end|>' → logprob: -12.628006935119629
    10. '        ' → logprob: -12.878006935119629

Token 950: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.1269616037607193
    2. ' rs' → logprob: -2.1269617080688477
    3. '	rs' → logprob: -11.001961708068848
    4. '(rs' → logprob: -11.501961708068848
    5. '$rs' → logprob: -12.251961708068848
    6. 'not' → logprob: -14.876961708068848
    7. '.rs' → logprob: -14.876961708068848
    8. '_rs' → logprob: -15.126961708068848
    9. ' not' → logprob: -15.626961708068848
    10. 'r' → logprob: -15.751961708068848

Token 951: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5768420100212097
    2. ':' → logprob: -0.8268420100212097
    3. '       ' → logprob: -7.951841831207275
    4. ':

' → logprob: -8.451842308044434
    5. '<|end|>' → logprob: -9.451842308044434
    6. '():
' → logprob: -9.951842308044434
    7. '=' → logprob: -10.326842308044434
    8. ' and' → logprob: -10.576842308044434
    9. '<|end|>' → logprob: -10.576842308044434
    10. ' :
' → logprob: -10.701842308044434

Token 952: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014581000432372093
    2. '```' → logprob: -4.764581203460693
    3. '[' → logprob: -6.264581203460693
    4. '           ' → logprob: -6.389581203460693
    5. '	       ' → logprob: -7.639581203460693
    6. '	' → logprob: -7.639581203460693
    7. '{' → logprob: -8.014580726623535
    8. '<|end|>' → logprob: -8.514580726623535
    9. '   ' → logprob: -9.514580726623535
    10. ':' → logprob: -9.514580726623535

Token 953: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16597610712051392
    2. '           ' → logprob: -1.9159760475158691
    3. 'while' (adapté à ' while') → logprob: -5.415976047515869
    4. ' while' → logprob: -6.790976047515869
    5. '```' → logprob: -9.290976524353027
    6. '   ' → logprob: -9.790976524353027
    7. '               ' → logprob: -11.790976524353027
    8. '	while' → logprob: -13.165976524353027
    9. '
' → logprob: -13.415976524353027
    10. ' ' → logprob: -13.415976524353027

Token 954: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.0015053401002660394
    2. ' rs' → logprob: -6.501505374908447
    3. 'ls' → logprob: -13.876504898071289
    4. '	rs' → logprob: -14.001504898071289
    5. '   ' → logprob: -14.376504898071289
    6. ' ' → logprob: -15.751504898071289
    7. '$rs' → logprob: -15.751504898071289
    8. '(rs' → logprob: -16.00150489807129
    9. 'True' → logprob: -16.25150489807129
    10. 'r' → logprob: -16.87650489807129

Token 955: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16027124226093292
    2. ':' → logprob: -1.9102712869644165
    3. '):
' → logprob: -10.785271644592285
    4. '           ' → logprob: -11.535271644592285
    5. ' and' → logprob: -12.160271644592285
    6. ':

' → logprob: -12.785271644592285
    7. 'and' → logprob: -13.160271644592285
    8. '():
' → logprob: -13.910271644592285
    9. '               ' → logprob: -14.035271644592285
    10. ':
' → logprob: -14.035271644592285

Token 956: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.18057119846344
    2. '           ' → logprob: -1.30557119846344
    3. ':' → logprob: -1.43057119846344
    4. ':
' → logprob: -1.80557119846344
    5. '```' → logprob: -4.55557107925415
    6. ',' → logprob: -5.55557107925415
    7. '):
' → logprob: -7.05557107925415
    8. '):' → logprob: -7.43057107925415
    9. ' :' → logprob: -7.80557107925415
    10. 'r' → logprob: -7.80557107925415

Token 957: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.08267741650342941
    2. ' r' → logprob: -2.5826773643493652
    3. '               ' → logprob: -5.707677364349365
    4. '                   ' → logprob: -8.207677841186523
    5. '           ' → logprob: -8.957677841186523
    6. '   ' → logprob: -9.832677841186523
    7. '	r' → logprob: -12.957677841186523
    8. ' ' → logprob: -13.457677841186523
    9. ' ' → logprob: -15.332677841186523
    10. '       ' → logprob: -15.332677841186523

Token 958: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.584861744660884e-05
    2. ' ,' → logprob: -10.125045776367188
    3. ',
' → logprob: -13.125045776367188
    4. '               ' → logprob: -13.250045776367188
    5. '           ' → logprob: -14.000045776367188
    6. '=' → logprob: -15.375045776367188
    7. ',r' → logprob: -15.625045776367188
    8. ')' → logprob: -16.125045776367188
    9. ' =' → logprob: -16.625045776367188
    10. '_,' → logprob: -16.750045776367188

Token 959: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1426972597837448
    2. 'i' → logprob: -2.017697334289551
    3. '	i' → logprob: -11.39269733428955
    4. ' ' → logprob: -12.64269733428955
    5. ' ' → logprob: -13.14269733428955
    6. 'space' → logprob: -13.76769733428955
    7. '(i' → logprob: -14.01769733428955
    8. '_i' → logprob: -14.39269733428955
    9. ' 
' → logprob: -14.64269733428955
    10. ''i' → logprob: -15.01769733428955

Token 960: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759398937225342
    2. '=' → logprob: -0.8259398937225342
    3. ' ' → logprob: -15.450940132141113
    4. '   ' → logprob: -16.575939178466797
    5. ' ' → logprob: -16.950939178466797
    6. '＝' → logprob: -17.200939178466797
    7. ',' → logprob: -18.200939178466797
    8. '           ' → logprob: -18.200939178466797
    9. '        ' → logprob: -18.450939178466797
    10. '    ' → logprob: -18.450939178466797

Token 961: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.029750484973192215
    2. ' div' → logprob: -3.5297505855560303
    3. '	div' → logprob: -18.02975082397461
    4. '<div' → logprob: -18.40475082397461
    5. '(div' → logprob: -20.27975082397461
    6. ' ' → logprob: -20.90475082397461
    7. '.div' → logprob: -21.15475082397461
    8. '_div' → logprob: -21.40475082397461
    9. 'dev' → logprob: -22.02975082397461
    10. ' ' → logprob: -22.65475082397461

Token 962: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -8.895480277715251e-06
    2. 'mods' → logprob: -12.500008583068848
    3. 'om' → logprob: -13.375008583068848
    4. 'omod' → logprob: -13.625008583068848
    5. 'mo' → logprob: -14.000008583068848
    6. '(' → logprob: -14.875008583068848
    7. 'pop' → logprob: -15.250008583068848
    8. '(mod' → logprob: -15.500008583068848
    9. 'op' → logprob: -15.500008583068848
    10. 'mom' → logprob: -15.500008583068848

Token 963: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5094070477061905e-05
    2. 'he' → logprob: -11.125015258789062
    3. ' (' → logprob: -15.375015258789062
    4. '(heap' → logprob: -17.625015258789062
    5. ' he' → logprob: -18.250015258789062
    6. '   ' → logprob: -18.625015258789062
    7. '(
' → logprob: -20.500015258789062
    8. ' ' → logprob: -21.125015258789062
    9. '(h' → logprob: -21.625015258789062
    10. '  ' → logprob: -22.250015258789062

Token 964: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -3.128163257315464e-07
    2. ' he' → logprob: -15.75
    3. '(' → logprob: -16.0
    4. 'heap' → logprob: -19.0
    5. '   ' → logprob: -19.75
    6. 'He' → logprob: -23.0
    7. 'ho' → logprob: -23.125
    8. '  ' → logprob: -23.125
    9. 'ha' → logprob: -23.25
    10. '_he' → logprob: -23.375

Token 965: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00011081460979767144
    2. 'ap' → logprob: -9.250110626220703
    3. 'pp' → logprob: -11.625110626220703
    4. 'pop' → logprob: -12.250110626220703
    5. 'op' → logprob: -14.875110626220703
    6. '(app' → logprob: -15.375110626220703
    7. 'p' → logprob: -16.000110626220703
    8. 'App' → logprob: -16.625110626220703
    9. '0' → logprob: -16.750110626220703
    10. ' app' → logprob: -16.875110626220703

Token 966: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -3.774276774493046e-05
    2. '(op' → logprob: -10.875038146972656
    3. 'pop' → logprob: -11.375038146972656
    4. 'p' → logprob: -12.750038146972656
    5. 'оп' → logprob: -13.500038146972656
    6. 'q' → logprob: -13.625038146972656
    7. '(pop' → logprob: -14.875038146972656
    8. 'ops' → logprob: -15.750038146972656
    9. 'opleft' → logprob: -15.750038146972656
    10. ' op' → logprob: -15.875038146972656

Token 967: '(rs' (ID: 25887)
  Prédit: '(rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rs' → logprob: -3.128163257315464e-07
    2. 'rs' → logprob: -16.125
    3. '(' → logprob: -16.875
    4. '(r' → logprob: -18.125
    5. ' rs' → logprob: -18.375
    6. ' (' → logprob: -19.0
    7. '$rs' → logprob: -19.5
    8. '	rs' → logprob: -20.25
    9. '(rhs' → logprob: -21.375
    10. '(rc' → logprob: -21.875

Token 968: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.006736916024237871
    2. ',' → logprob: -5.006736755371094
    3. ' ),' → logprob: -11.381736755371094
    4. ')' → logprob: -12.381736755371094
    5. '(),' → logprob: -12.881736755371094
    6. ' ,' → logprob: -13.881736755371094
    7. '   ' → logprob: -14.256736755371094
    8. ',),' → logprob: -14.256736755371094
    9. '()),' → logprob: -14.756736755371094
    10. '       ' → logprob: -15.631736755371094

Token 969: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.3132617771625519
    2. ' base' → logprob: -1.3132617473602295
    3. '(base' → logprob: -17.188261032104492
    4. '```' → logprob: -18.188261032104492
    5. '	base' → logprob: -18.313261032104492
    6. '_base' → logprob: -19.563261032104492
    7. '
' → logprob: -19.688261032104492
    8. ' ' → logprob: -19.938261032104492
    9. 'b' → logprob: -20.188261032104492
    10. ')' → logprob: -20.313261032104492

Token 970: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14314976334571838
    2. ')' → logprob: -2.0181498527526855
    3. '):
' → logprob: -7.7681498527526855
    4. '           ' → logprob: -10.893149375915527
    5. ')
' → logprob: -10.893149375915527
    6. '):' → logprob: -12.768149375915527
    7. ')

' → logprob: -12.768149375915527
    8. '       ' → logprob: -12.768149375915527
    9. '               ' → logprob: -13.518149375915527
    10. ':
' → logprob: -14.018149375915527

Token 971: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3164208233356476
    2. '           ' → logprob: -1.3164207935333252
    3. '<|end|>' → logprob: -6.441421031951904
    4. '```' → logprob: -7.566421031951904
    5. '                   ' → logprob: -8.941420555114746
    6. '              ' → logprob: -8.941420555114746
    7. '[' → logprob: -9.316420555114746
    8. ')' → logprob: -9.441420555114746
    9. '            
' → logprob: -9.441420555114746
    10. ' ' → logprob: -9.691420555114746

Token 972: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6264830231666565
    2. ' if' → logprob: -1.7514829635620117
    3. '               ' → logprob: -1.8764829635620117
    4. 'if' (adapté à ' if') → logprob: -2.0014829635620117
    5. 'r' → logprob: -5.876482963562012
    6. ' r' → logprob: -7.626482963562012
    7. '            ' → logprob: -8.751482963562012
    8. ' ' → logprob: -9.501482963562012
    9. '          ' → logprob: -9.751482963562012
    10. '                ' → logprob: -10.126482963562012

Token 973: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6326127052307129
    2. ' i' → logprob: -0.7576127052307129
    3. '   ' → logprob: -13.007612228393555
    4. '(i' → logprob: -13.007612228393555
    5. 'f' → logprob: -13.257612228393555
    6. ' ' → logprob: -13.507612228393555
    7. 'not' → logprob: -14.007612228393555
    8. ' not' → logprob: -14.382612228393555
    9. 'r' → logprob: -14.507612228393555
    10. '               ' → logprob: -14.632612228393555

Token 974: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012512356042861938
    2. 'in' → logprob: -4.38751220703125
    3. ' not' → logprob: -13.38751220703125
    4. 'not' → logprob: -15.26251220703125
    5. ' ' → logprob: -15.63751220703125
    6. 'In' → logprob: -15.63751220703125
    7. '<|end|>' → logprob: -15.63751220703125
    8. '               ' → logprob: -16.01251220703125
    9. ')' → logprob: -16.13751220703125
    10. '           ' → logprob: -16.38751220703125

Token 975: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0024780353996902704
    2. ' d' → logprob: -6.002478122711182
    3. '<|end|>' → logprob: -13.002477645874023
    4. '```' → logprob: -17.002477645874023
    5. ')d' → logprob: -17.377477645874023
    6. '	d' → logprob: -17.752477645874023
    7. ' ' → logprob: -18.627477645874023
    8. '<|end|>' → logprob: -18.752477645874023
    9. '...' → logprob: -19.252477645874023
    10. '#' → logprob: -19.377477645874023

Token 976: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -4.320199877838604e-07
    2. 'd' → logprob: -15.625
    3. 'et' → logprob: -16.25
    4. 's' → logprob: -16.75
    5. '```' → logprob: -17.25
    6. ' set' → logprob: -18.125
    7. 'aset' → logprob: -18.5
    8. '...' → logprob: -18.875
    9. '(set' → logprob: -19.625
    10. 'sets' → logprob: -19.875

Token 977: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.46083658933639526
    2. ':' → logprob: -1.08583664894104
    3. '               ' → logprob: -3.58583664894104
    4. '                   ' → logprob: -5.710836410522461
    5. '):
' → logprob: -7.960836410522461
    6. '<|end|>' → logprob: -9.585836410522461
    7. '           ' → logprob: -9.835836410522461
    8. ',' → logprob: -10.085836410522461
    9. ':

' → logprob: -10.835836410522461
    10. '):' → logprob: -11.585836410522461

Token 978: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3335057199001312
    2. '                   ' → logprob: -1.3335057497024536
    3. ':
' → logprob: -4.333505630493164
    4. ':' → logprob: -5.208505630493164
    5. '<|end|>' → logprob: -6.958505630493164
    6. '           ' → logprob: -9.083505630493164
    7. '   ' → logprob: -9.708505630493164
    8. '):
' → logprob: -9.958505630493164
    9. '```' → logprob: -10.083505630493164
    10. '                       ' → logprob: -10.208505630493164

Token 979: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0736612007021904
    2. ' d' → logprob: -2.8236610889434814
    3. '               ' → logprob: -4.5736613273620605
    4. '                   ' → logprob: -6.6986613273620605
    5. '           ' → logprob: -10.323660850524902
    6. '   ' → logprob: -10.823660850524902
    7. '       ' → logprob: -11.448660850524902
    8. '                       ' → logprob: -13.073660850524902
    9. ' ' → logprob: -13.323660850524902
    10. '```' → logprob: -14.198660850524902

Token 980: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0007257753168232739
    2. 'remove' → logprob: -7.250725746154785
    3. '               ' → logprob: -11.125725746154785
    4. 'move' → logprob: -15.250725746154785
    5. 'et' → logprob: -15.375725746154785
    6. '.remove' → logprob: -15.875725746154785
    7. '                   ' → logprob: -16.1257266998291
    8. '           ' → logprob: -16.3757266998291
    9. 'rem' → logprob: -16.3757266998291
    10. ' set' → logprob: -16.8757266998291

Token 981: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.00010580805974313989
    2. 'remove' → logprob: -9.250105857849121
    3. '.' → logprob: -11.875105857849121
    4. '                   ' → logprob: -13.875105857849121
    5. '               ' → logprob: -14.125105857849121
    6. '.pop' → logprob: -15.000105857849121
    7. '<|end|>' → logprob: -15.500105857849121
    8. '	remove' → logprob: -16.000104904174805
    9. ' .' → logprob: -16.375104904174805
    10. '.dis' → logprob: -16.625104904174805

Token 982: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. '(' → logprob: -17.25
    3. '(ii' → logprob: -19.75
    4. ' (' → logprob: -22.0
    5. '(
' → logprob: -22.25
    6. '(I' → logprob: -22.875
    7. '()' → logprob: -22.875
    8. 'i' → logprob: -23.125
    9. '```' → logprob: -23.125
    10. '           ' → logprob: -23.375

Token 983: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5377336144447327
    2. ')
' → logprob: -1.037733554840088
    3. '               ' → logprob: -2.787733554840088
    4. '           ' → logprob: -10.162734031677246
    5. '                   ' → logprob: -10.162734031677246
    6. ')
' → logprob: -10.912734031677246
    7. '<|end|>' → logprob: -12.662734031677246
    8. ')

' → logprob: -13.287734031677246
    9. '()' → logprob: -13.287734031677246
    10. '):
' → logprob: -13.787734031677246

Token 984: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05530163645744324
    2. '           ' → logprob: -2.9303016662597656
    3. '                   ' → logprob: -7.930301666259766
    4. '
' → logprob: -11.305301666259766
    5. '```' → logprob: -11.555301666259766
    6. ' ' → logprob: -11.680301666259766
    7. ')' → logprob: -12.555301666259766
    8. '             ' → logprob: -12.680301666259766
    9. '   ' → logprob: -12.680301666259766
    10. '       ' → logprob: -12.805301666259766

Token 985: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09635952860116959
    2. 'elif' (adapté à ' elif') → logprob: -2.5963594913482666
    3. '           ' → logprob: -4.096359729766846
    4. 'else' → logprob: -7.346359729766846
    5. ' elif' → logprob: -10.971359252929688
    6. '   ' → logprob: -11.221359252929688
    7. '                   ' → logprob: -12.221359252929688
    8. '       ' → logprob: -13.596359252929688
    9. ' ' → logprob: -13.721359252929688
    10. ' else' → logprob: -14.346359252929688

Token 986: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.001502598519437015
    2. ' cur' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.626502990722656
    4. '	cur' → logprob: -17.501502990722656
    5. '               ' → logprob: -18.626502990722656
    6. '           ' → logprob: -18.876502990722656
    7. ' ' → logprob: -19.001502990722656
    8. '                   ' → logprob: -19.001502990722656
    9. '(cur' → logprob: -19.251502990722656
    10. '[cur' → logprob: -19.376502990722656

Token 987: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.13830818235874176
    2. ' <' → logprob: -2.26330828666687
    3. '>' → logprob: -3.76330828666687
    4. '<' → logprob: -6.263308048248291
    5. ' <=' → logprob: -10.63830852508545
    6. ' >=' → logprob: -11.76330852508545
    7. ' ' → logprob: -12.26330852508545
    8. ' ' → logprob: -12.63830852508545
    9. '                   ' → logprob: -13.01330852508545
    10. '               ' → logprob: -13.13830852508545

Token 988: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01416350994259119
    2. ' r' → logprob: -4.264163494110107
    3. '<|end|>' → logprob: -18.639163970947266
    4. '	r' → logprob: -18.764163970947266
    5. ' ' → logprob: -19.264163970947266
    6. '```' → logprob: -19.764163970947266
    7. '   ' → logprob: -20.014163970947266
    8. '_r' → logprob: -20.389163970947266
    9. '(r' → logprob: -21.139163970947266
    10. '
' → logprob: -21.639163970947266

Token 989: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3664713203907013
    2. ':' → logprob: -1.616471290588379
    3. ':
' → logprob: -2.241471290588379
    4. '                   ' → logprob: -6.866471290588379
    5. '<|end|>' → logprob: -8.616471290588379
    6. '):
' → logprob: -8.991471290588379
    7. '```' → logprob: -9.116471290588379
    8. '                ' → logprob: -9.491471290588379
    9. ',' → logprob: -9.616471290588379
    10. '              ' → logprob: -9.741471290588379

Token 990: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005442808847874403
    2. ':' → logprob: -5.8804426193237305
    3. ':
' → logprob: -7.0054426193237305
    4. '                   ' → logprob: -7.7554426193237305
    5. '<|end|>' → logprob: -7.8804426193237305
    6. '                ' → logprob: -8.50544261932373
    7. '```' → logprob: -8.63044261932373
    8. '              ' → logprob: -9.00544261932373
    9. '):
' → logprob: -9.38044261932373
    10. ' :' → logprob: -9.88044261932373

Token 991: ' tot' (ID: 2417)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12119784951210022
    2. '                   ' → logprob: -2.2461979389190674
    3. ' tot' → logprob: -5.746197700500488
    4. 'tot' (adapté à ' tot') → logprob: -5.746197700500488
    5. '                       ' → logprob: -6.746197700500488
    6. '                ' → logprob: -8.621197700500488
    7. '```' → logprob: -9.121197700500488
    8. '           ' → logprob: -9.371197700500488
    9. ' cur' → logprob: -9.746197700500488
    10. '              ' → logprob: -9.871197700500488

Token 992: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01283134613186121
    2. '+=' → logprob: -4.387831211090088
    3. ' +' → logprob: -8.512831687927246
    4. '<|end|>' → logprob: -9.762831687927246
    5. '+' → logprob: -10.637831687927246
    6. ']+=' → logprob: -12.137831687927246
    7. '                    ' → logprob: -12.137831687927246
    8. ')' → logprob: -12.387831687927246
    9. '	            ' → logprob: -12.887831687927246
    10. '                   ' → logprob: -12.887831687927246

Token 993: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.38687872886657715
    2. 'cur' → logprob: -1.1368787288665771
    3. '(cur' → logprob: -12.386878967285156
    4. '[cur' → logprob: -13.136878967285156
    5. '	cur' → logprob: -14.136878967285156
    6. ' ' → logprob: -15.136878967285156
    7. '```' → logprob: -15.761878967285156
    8. '_cur' → logprob: -16.386878967285156
    9. ' r' → logprob: -16.511878967285156
    10. ' cu' → logprob: -16.886878967285156

Token 994: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0002967320033349097
    2. '-' → logprob: -8.125296592712402
    3. ' -=' → logprob: -15.750296592712402
    4. ' ' → logprob: -15.875296592712402
    5. '<|end|>' → logprob: -16.00029754638672
    6. ' ' → logprob: -16.25029754638672
    7. ' –' → logprob: -16.50029754638672
    8. ' -
' → logprob: -17.37529754638672
    9. '```' → logprob: -17.50029754638672
    10. ')' → logprob: -18.12529754638672

Token 995: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01814994215965271
    2. ' r' → logprob: -4.0181498527526855
    3. '	r' → logprob: -18.768150329589844
    4. ' ' → logprob: -19.018150329589844
    5. '```' → logprob: -19.393150329589844
    6. '(r' → logprob: -19.768150329589844
    7. '<|end|>' → logprob: -20.018150329589844
    8. '_r' → logprob: -20.143150329589844
    9. '   ' → logprob: -20.268150329589844
    10. '                   ' → logprob: -20.518150329589844

Token 996: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25322845578193665
    2. '                   ' → logprob: -1.5032284259796143
    3. '```' → logprob: -7.628228664398193
    4. '<|end|>' → logprob: -7.753228664398193
    5. '                       ' → logprob: -9.378228187561035
    6. '
' → logprob: -9.378228187561035
    7. '           ' → logprob: -9.878228187561035
    8. '                
' → logprob: -10.628228187561035
    9. '                    
' → logprob: -10.878228187561035
    10. '``' → logprob: -11.378228187561035

Token 997: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5778979659080505
    2. '                   ' → logprob: -0.8278979659080505
    3. '```' → logprob: -7.077898025512695
    4. '                    
' → logprob: -8.077898025512695
    5. '                
' → logprob: -8.202898025512695
    6. '<|end|>' → logprob: -8.827898025512695
    7. '           ' → logprob: -9.702898025512695
    8. '``' → logprob: -9.827898025512695
    9. '                       ' → logprob: -10.077898025512695
    10. '
' → logprob: -10.077898025512695

Token 998: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.0009168167016468942
    2. '                   ' → logprob: -7.000916957855225
    3. ' cur' → logprob: -12.875916481018066
    4. '               ' → logprob: -13.000916481018066
    5. '```' → logprob: -15.375916481018066
    6. '                       ' → logprob: -16.000917434692383
    7. '``' → logprob: -17.250917434692383
    8. '	cur' → logprob: -17.250917434692383
    9. '                  ' → logprob: -17.250917434692383
    10. '           ' → logprob: -17.375917434692383

Token 999: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023639552295207977
    2. ' =' → logprob: -3.773639440536499
    3. '                   ' → logprob: -8.023639678955078
    4. '               ' → logprob: -10.898639678955078
    5. '```' → logprob: -11.398639678955078
    6. '+=' → logprob: -12.148639678955078
    7. '                    ' → logprob: -12.273639678955078
    8. ' +=' → logprob: -12.523639678955078
    9. '   ' → logprob: -12.648639678955078
    10. '           ' → logprob: -12.648639678955078

Token 1000: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009114635176956654
    2. ' r' → logprob: -7.000911235809326
    3. '	r' → logprob: -19.875911712646484
    4. '                   ' → logprob: -21.250911712646484
    5. '   ' → logprob: -21.750911712646484
    6. '```' → logprob: -22.125911712646484
    7. '_r' → logprob: -22.625911712646484
    8. '(r' → logprob: -23.250911712646484
    9. '[r' → logprob: -23.500911712646484
    10. ' ' → logprob: -23.875911712646484

Token 1001: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006242668721824884
    2. '               ' → logprob: -5.131242752075195
    3. '                    
' → logprob: -9.756242752075195
    4. '```' → logprob: -9.881242752075195
    5. '           ' → logprob: -10.256242752075195
    6. '                       ' → logprob: -10.381242752075195
    7. '<|end|>' → logprob: -10.506242752075195
    8. '                    ' → logprob: -10.506242752075195
    9. '                  ' → logprob: -10.631242752075195
    10. '                ' → logprob: -11.881242752075195

Token 1002: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004724887665361166
    2. '               ' → logprob: -5.504724979400635
    3. '```' → logprob: -8.254724502563477
    4. '				' → logprob: -9.629724502563477
    5. '			       ' → logprob: -9.754724502563477
    6. '		           ' → logprob: -10.254724502563477
    7. '                    ' → logprob: -10.379724502563477
    8. '                  ' → logprob: -10.379724502563477
    9. '	               ' → logprob: -10.504724502563477
    10. '                       ' → logprob: -10.504724502563477

Token 1003: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0005772201111540198
    2. '                   ' → logprob: -7.500577449798584
    3. '               ' → logprob: -11.250576972961426
    4. '```' → logprob: -11.875576972961426
    5. ' d' → logprob: -12.500576972961426
    6. '``' → logprob: -15.500576972961426
    7. '           ' → logprob: -16.125577926635742
    8. '   ' → logprob: -17.000577926635742
    9. '                  ' → logprob: -17.000577926635742
    10. '                       ' → logprob: -17.125577926635742

Token 1004: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: 0.0
    2. ' set' → logprob: -19.75
    3. 'setw' → logprob: -20.375
    4. 's' → logprob: -20.625
    5. '
' → logprob: -20.625
    6. '```' → logprob: -21.0
    7. 'setz' → logprob: -21.375
    8. '   ' → logprob: -22.0
    9. 'et' → logprob: -22.125
    10. '       ' → logprob: -22.25

Token 1005: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.009325110353529453
    2. 'add' → logprob: -4.75932502746582
    3. '                   ' → logprob: -7.75932502746582
    4. '               ' → logprob: -9.13432502746582
    5. 'set' → logprob: -9.25932502746582
    6. ' .' → logprob: -10.88432502746582
    7. '_add' → logprob: -10.88432502746582
    8. '.' → logprob: -11.38432502746582
    9. ' add' → logprob: -12.00932502746582
    10. '                       ' → logprob: -12.25932502746582

Token 1006: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0011709370883181691
    2. 'i' → logprob: -6.751171112060547
    3. ' i' → logprob: -15.126171112060547
    4. '(' → logprob: -15.251171112060547
    5. '                   ' → logprob: -16.501171112060547
    6. '(
' → logprob: -17.001171112060547
    7. '           ' → logprob: -17.001171112060547
    8. ',i' → logprob: -17.251171112060547
    9. '               ' → logprob: -17.376171112060547
    10. '	i' → logprob: -17.376171112060547

Token 1007: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.8610084652900696
    2. '               ' → logprob: -0.9860084652900696
    3. ')' → logprob: -1.7360084056854248
    4. '                   ' → logprob: -3.611008405685425
    5. '           ' → logprob: -7.361008644104004
    6. '                       ' → logprob: -8.736008644104004
    7. '                           ' → logprob: -10.361008644104004
    8. '                               ' → logprob: -10.736008644104004
    9. '                 ' → logprob: -11.111008644104004
    10. ')
' → logprob: -11.111008644104004

Token 1008: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.34983786940574646
    2. '               ' → logprob: -1.2248378992080688
    3. '                    
' → logprob: -8.224838256835938
    4. '                       ' → logprob: -8.724838256835938
    5. 'break' → logprob: -9.224838256835938
    6. '           ' → logprob: -9.224838256835938
    7. '
' → logprob: -9.349838256835938
    8. '                
' → logprob: -9.349838256835938
    9. '  
' → logprob: -9.349838256835938
    10. '```' → logprob: -9.599838256835938

Token 1009: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3422848880290985
    2. '                   ' → logprob: -1.342284917831421
    3. '               ' → logprob: -3.717284917831421
    4. 'continue' → logprob: -5.717284679412842
    5. ' break' → logprob: -7.467284679412842
    6. '```' → logprob: -8.84228515625
    7. '                       ' → logprob: -9.34228515625
    8. '           ' → logprob: -9.34228515625
    9. 'else' → logprob: -9.71728515625
    10. '
' → logprob: -10.71728515625

Token 1010: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5770871043205261
    2. '               ' → logprob: -0.8270871043205261
    3. 'else' → logprob: -7.827086925506592
    4. '```' → logprob: -7.952086925506592
    5. '       ' → logprob: -8.82708740234375
    6. '            
' → logprob: -9.70208740234375
    7. '                
' → logprob: -10.07708740234375
    8. '
' → logprob: -10.82708740234375
    9. '              ' → logprob: -11.07708740234375
    10. '          ' → logprob: -11.20208740234375

Token 1011: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023728957399725914
    2. '               ' → logprob: -3.773728847503662
    3. '```' → logprob: -8.14872932434082
    4. '       ' → logprob: -9.27372932434082
    5. 'else' → logprob: -9.27372932434082
    6. ' else' → logprob: -13.77372932434082
    7. '		' → logprob: -13.77372932434082
    8. '          ' → logprob: -14.02372932434082
    9. '                   ' → logprob: -14.14872932434082
    10. '
' → logprob: -14.14872932434082

Token 1012: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07593067735433578
    2. 'else' (adapté à ' else') → logprob: -2.825930595397949
    3. '               ' → logprob: -4.325930595397949
    4. ' else' → logprob: -7.450930595397949
    5. '       ' → logprob: -10.07593059539795
    6. '          ' → logprob: -12.32593059539795
    7. '   ' → logprob: -12.32593059539795
    8. '             ' → logprob: -13.07593059539795
    9. '
' → logprob: -13.20093059539795
    10. '            ' → logprob: -13.45093059539795

Token 1013: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.458689421415329
    2. '               ' → logprob: -1.2086894512176514
    3. ':' → logprob: -2.7086894512176514
    4. '           ' → logprob: -6.458689212799072
    5. '                   ' → logprob: -7.208689212799072
    6. '```' → logprob: -9.20868968963623
    7. '              ' → logprob: -10.08368968963623
    8. '                ' → logprob: -10.20868968963623
    9. ' :
' → logprob: -10.58368968963623
    10. ',' → logprob: -10.70868968963623

Token 1014: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04368774965405464
    2. 'f' → logprob: -3.1686878204345703
    3. ' f' → logprob: -7.91868782043457
    4. '                   ' → logprob: -8.79368782043457
    5. '```' → logprob: -9.54368782043457
    6. '           ' → logprob: -9.91868782043457
    7. '       ' → logprob: -11.16868782043457
    8. '                ' → logprob: -11.29368782043457
    9. '	f' → logprob: -11.79368782043457
    10. '              ' → logprob: -12.29368782043457

Token 1015: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.0033180462196469307
    2. ' f' → logprob: -6.003317832946777
    3. '           ' → logprob: -7.753317832946777
    4. '               ' → logprob: -7.878317832946777
    5. '	f' → logprob: -10.753317832946777
    6. '                   ' → logprob: -11.628317832946777
    7. '```' → logprob: -13.378317832946777
    8. '   ' → logprob: -14.253317832946777
    9. 'break' → logprob: -14.878317832946777
    10. '       ' → logprob: -15.003317832946777

Token 1016: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023265395313501358
    2. ' =' → logprob: -3.7732653617858887
    3. '                   ' → logprob: -11.273265838623047
    4. '=True' → logprob: -12.523265838623047
    5. '               ' → logprob: -13.273265838623047
    6. '           ' → logprob: -13.773265838623047
    7. '                ' → logprob: -15.523265838623047
    8. '                    ' → logprob: -15.523265838623047
    9. '=
' → logprob: -16.023265838623047
    10. '                       ' → logprob: -16.148265838623047

Token 1017: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.02324605919420719
    2. 'True' → logprob: -3.7732460498809814
    3. '(True' → logprob: -14.898245811462402
    4. '=True' → logprob: -15.148245811462402
    5. '.True' → logprob: -20.39824676513672
    6. ' Tru' → logprob: -20.89824676513672
    7. ' ' → logprob: -21.14824676513672
    8. '_true' → logprob: -21.39824676513672
    9. ' true' → logprob: -22.52324676513672
    10. 'False' → logprob: -23.02324676513672

Token 1018: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5255346894264221
    2. '               ' → logprob: -0.9005346894264221
    3. '           ' → logprob: -7.025534629821777
    4. '                       ' → logprob: -7.150534629821777
    5. '				' → logprob: -8.650534629821777
    6. '<|end|>' → logprob: -9.400534629821777
    7. '       ' → logprob: -9.525534629821777
    8. '			' → logprob: -9.900534629821777
    9. '```' → logprob: -10.025534629821777
    10. '                    
' → logprob: -10.400534629821777

Token 1019: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16557200253009796
    2. '               ' → logprob: -1.9155720472335815
    3. '```' → logprob: -6.415572166442871
    4. '           ' → logprob: -6.665572166442871
    5. '                       ' → logprob: -7.290572166442871
    6. '				' → logprob: -8.165572166442871
    7. '<|end|>' → logprob: -8.290572166442871
    8. '       ' → logprob: -8.665572166442871
    9. '                    
' → logprob: -9.290572166442871
    10. '			       ' → logprob: -9.415572166442871

Token 1020: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4758092761039734
    2. '                   ' → logprob: -0.9758092761039734
    3. ' break' → logprob: -6.475809097290039
    4. '				' → logprob: -9.475809097290039
    5. '	break' → logprob: -10.350809097290039
    6. '                       ' → logprob: -10.600809097290039
    7. '               ' → logprob: -10.850809097290039
    8. '```' → logprob: -11.350809097290039
    9. '
' → logprob: -11.475809097290039
    10. '           ' → logprob: -11.975809097290039

Token 1021: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038656532764434814
    2. '        
' → logprob: -3.91365647315979
    3. '       ' → logprob: -4.163656711578369
    4. '            
' → logprob: -6.538656711578369
    5. '    
' → logprob: -7.663656711578369
    6. '		' → logprob: -9.288656234741211
    7. '		
' → logprob: -9.663656234741211
    8. '
' → logprob: -9.788656234741211
    9. '	       ' → logprob: -9.788656234741211
    10. '```' → logprob: -9.913656234741211

Token 1022: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18384265899658203
    2. '           ' → logprob: -1.933842658996582
    3. '```' → logprob: -4.058842658996582
    4. '        
' → logprob: -6.058842658996582
    5. '	       ' → logprob: -6.558842658996582
    6. '		' → logprob: -8.058842658996582
    7. '​' → logprob: -8.058842658996582
    8. '   ' → logprob: -8.308842658996582
    9. '``' → logprob: -8.308842658996582
    10. '	' → logprob: -8.558842658996582

Token 1023: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04892865940928459
    2. '           ' → logprob: -3.048928737640381
    3. 'while' → logprob: -9.173928260803223
    4. '	       ' → logprob: -9.923928260803223
    5. '   ' → logprob: -10.048928260803223
    6. '        
' → logprob: -10.548928260803223
    7. '		' → logprob: -10.548928260803223
    8. '	' → logprob: -11.048928260803223
    9. '​' → logprob: -11.048928260803223
    10. '         ' → logprob: -11.173928260803223

Token 1024: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6931480169296265
    2. ' f' → logprob: -0.6931480169296265
    3. '   ' → logprob: -14.818147659301758
    4. '	f' → logprob: -15.443147659301758
    5. ' ' → logprob: -16.193147659301758
    6. '    ' → logprob: -16.818147659301758
    7. '(f' → logprob: -16.818147659301758
    8. ' ' → logprob: -17.443147659301758
    9. 'not' → logprob: -17.693147659301758
    10. ' not' → logprob: -17.693147659301758

Token 1025: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7873804569244385
    2. ':' → logprob: -1.1623804569244385
    3. '               ' → logprob: -2.1623804569244385
    4. ':
' → logprob: -2.1623804569244385
    5. '<|end|>' → logprob: -7.037380218505859
    6. '       ' → logprob: -8.41238021850586
    7. ',' → logprob: -8.41238021850586
    8. '=' → logprob: -8.91238021850586
    9. '                   ' → logprob: -9.28738021850586
    10. '		' → logprob: -9.66238021850586

Token 1026: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.315070778131485
    2. '           ' → logprob: -1.3150707483291626
    3. '       ' → logprob: -7.065070629119873
    4. '	       ' → logprob: -7.440070629119873
    5. '		       ' → logprob: -9.190071105957031
    6. '	           ' → logprob: -9.190071105957031
    7. '		' → logprob: -9.565071105957031
    8. '                   ' → logprob: -10.565071105957031
    9. '			' → logprob: -11.315071105957031
    10. '	' → logprob: -11.690071105957031

Token 1027: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12082130461931229
    2. '               ' → logprob: -2.370821237564087
    3. 'break' (adapté à ' break') → logprob: -4.370821475982666
    4. ' break' → logprob: -5.620821475982666
    5. 'continue' → logprob: -6.495821475982666
    6. '	       ' → logprob: -7.495821475982666
    7. ' continue' → logprob: -7.745821475982666
    8. '       ' → logprob: -8.245820999145508
    9. 'return' → logprob: -8.620820999145508
    10. '            
' → logprob: -8.745820999145508

Token 1028: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20177456736564636
    2. '           ' → logprob: -1.7017745971679688
    3. '        
' → logprob: -8.326774597167969
    4. '
' → logprob: -10.951774597167969
    5. '         ' → logprob: -11.076774597167969
    6. '```' → logprob: -11.451774597167969
    7. '	       ' → logprob: -11.451774597167969
    8. '   ' → logprob: -11.576774597167969
    9. '		' → logprob: -11.576774597167969
    10. '<|end|>' → logprob: -11.951774597167969

Token 1029: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03015632927417755
    2. '           ' → logprob: -3.530156373977661
    3. '```' → logprob: -8.405156135559082
    4. '        
' → logprob: -9.280156135559082
    5. '   ' → logprob: -10.155156135559082
    6. '
' → logprob: -11.030156135559082
    7. '         ' → logprob: -11.780156135559082
    8. '	       ' → logprob: -12.155156135559082
    9. '[' → logprob: -12.905156135559082
    10. '<|end|>' → logprob: -13.030156135559082

Token 1030: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1397443264722824
    2. '       ' → logprob: -2.389744281768799
    3. 'while' (adapté à ' while') → logprob: -3.264744281768799
    4. ' while' → logprob: -7.889744281768799
    5. '               ' → logprob: -9.639744758605957
    6. '   ' → logprob: -9.639744758605957
    7. '```' → logprob: -10.889744758605957
    8. '		' → logprob: -11.514744758605957
    9. '	while' → logprob: -11.889744758605957
    10. '                   ' → logprob: -12.264744758605957

Token 1031: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.07889275997877121
    2. ' ls' → logprob: -2.578892707824707
    3. '(ls' → logprob: -13.203892707824707
    4. '   ' → logprob: -13.953892707824707
    5. '_ls' → logprob: -16.203893661499023
    6. 'l' → logprob: -17.078893661499023
    7. ' ' → logprob: -17.203893661499023
    8. 'rs' → logprob: -17.578893661499023
    9. 'lsx' → logprob: -18.078893661499023
    10. 'Ls' → logprob: -18.578893661499023

Token 1032: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1002502366900444
    2. ':' → logprob: -2.350250244140625
    3. '           ' → logprob: -10.475250244140625
    4. '):
' → logprob: -12.350250244140625
    5. '       ' → logprob: -13.475250244140625
    6. '               ' → logprob: -13.475250244140625
    7. ':

' → logprob: -13.850250244140625
    8. '   ' → logprob: -13.850250244140625
    9. ':
' → logprob: -13.850250244140625
    10. ' and' → logprob: -13.975250244140625

Token 1033: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2927798330783844
    2. '           ' → logprob: -1.417779803276062
    3. ' l' → logprob: -4.792779922485352
    4. '```' → logprob: -6.292779922485352
    5. 'l' → logprob: -6.792779922485352
    6. '(l' → logprob: -9.792779922485352
    7. '                   ' → logprob: -9.792779922485352
    8. '   ' → logprob: -9.917779922485352
    9. '	l' → logprob: -10.667779922485352
    10. '            ' → logprob: -10.917779922485352

Token 1034: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.047553036361932755
    2. 'l' (adapté à ' l') → logprob: -3.297553062438965
    3. '               ' → logprob: -4.797553062438965
    4. '                   ' → logprob: -6.797553062438965
    5. '           ' → logprob: -9.672553062438965
    6. '                ' → logprob: -11.047553062438965
    7. '	l' → logprob: -11.922553062438965
    8. '(l' → logprob: -12.547553062438965
    9. '```' → logprob: -12.922553062438965
    10. '   ' → logprob: -12.922553062438965

Token 1035: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.481510692741722e-05
    2. ',l' → logprob: -10.00007438659668
    3. ' ,' → logprob: -10.87507438659668
    4. '               ' → logprob: -12.50007438659668
    5. ',i' → logprob: -12.62507438659668
    6. '           ' → logprob: -13.62507438659668
    7. ',
' → logprob: -14.37507438659668
    8. '                   ' → logprob: -14.50007438659668
    9. 'l' → logprob: -16.00007438659668
    10. ',n' → logprob: -16.12507438659668

Token 1036: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013471248559653759
    2. 'div' → logprob: -5.2634711265563965
    3. 'he' → logprob: -5.6384711265563965
    4. ' i' → logprob: -6.5134711265563965
    5. '-i' → logprob: -6.7634711265563965
    6. 'l' → logprob: -7.0134711265563965
    7. '-' → logprob: -7.2634711265563965
    8. ' -' → logprob: -9.638471603393555
    9. '-he' → logprob: -9.638471603393555
    10. '           ' → logprob: -10.013471603393555

Token 1037: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740900695323944
    2. ' =' → logprob: -0.9740900993347168
    3. '               ' → logprob: -11.849089622497559
    4. '                   ' → logprob: -13.224089622497559
    5. '```' → logprob: -13.224089622497559
    6. '                ' → logprob: -13.724089622497559
    7. ',' → logprob: -15.599089622497559
    8. ' ' → logprob: -15.974089622497559
    9. ')' → logprob: -15.974089622497559
    10. '                    ' → logprob: -16.099090576171875

Token 1038: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.048587486147880554
    2. ' div' → logprob: -3.0485875606536865
    3. '	div' → logprob: -17.298587799072266
    4. '<div' → logprob: -18.048587799072266
    5. '(div' → logprob: -19.798587799072266
    6. 'dev' → logprob: -20.423587799072266
    7. '.div' → logprob: -21.298587799072266
    8. '_div' → logprob: -21.423587799072266
    9. ' ' → logprob: -22.173587799072266
    10. 'def' → logprob: -22.798587799072266

Token 1039: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00042221311014145613
    2. 'pop' → logprob: -8.250422477722168
    3. 'op' → logprob: -9.375422477722168
    4. '(' → logprob: -10.375422477722168
    5. 'omod' → logprob: -11.000422477722168
    6. 'div' → logprob: -11.500422477722168
    7. 'om' → logprob: -12.000422477722168
    8. '(mod' → logprob: -12.875422477722168
    9. 'mo' → logprob: -13.250422477722168
    10. 'mp' → logprob: -13.625422477722168

Token 1040: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002986392646562308
    2. 'he' → logprob: -8.125298500061035
    3. '           ' → logprob: -13.750298500061035
    4. '               ' → logprob: -14.500298500061035
    5. '   ' → logprob: -14.625298500061035
    6. '       ' → logprob: -16.12529945373535
    7. '0' → logprob: -16.37529945373535
    8. ' (' → logprob: -16.50029945373535
    9. '(heap' → logprob: -16.50029945373535
    10. '          ' → logprob: -17.50029945373535

Token 1041: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: 0.0
    2. '(' → logprob: -18.75
    3. ' he' → logprob: -19.25
    4. 'heap' → logprob: -19.75
    5. '-he' → logprob: -21.875
    6. '   ' → logprob: -22.875
    7. '-' → logprob: -23.75
    8. ')' → logprob: -23.875
    9. '```' → logprob: -23.875
    10. '0' → logprob: -24.25

Token 1042: 'app' (ID: 903)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.01834121160209179
    2. 'pop' → logprob: -4.018341064453125
    3. '(op' → logprob: -9.643341064453125
    4. 'ap' → logprob: -9.643341064453125
    5. 'app' → logprob: -10.268341064453125
    6. 'p' → logprob: -11.643341064453125
    7. '(pop' → logprob: -11.643341064453125
    8. 'opp' → logprob: -12.643341064453125
    9. 'Pop' → logprob: -13.018341064453125
    10. 'оп' → logprob: -14.268341064453125

Token 1043: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0001382241171086207
    2. 'pop' → logprob: -9.125138282775879
    3. 'p' → logprob: -11.500138282775879
    4. '(op' → logprob: -11.875138282775879
    5. 'оп' → logprob: -12.500138282775879
    6. '(ls' → logprob: -13.250138282775879
    7. '(pop' → logprob: -13.500138282775879
    8. 'q' → logprob: -14.500138282775879
    9. 'ap' → logprob: -14.625138282775879
    10. 'opleft' → logprob: -15.000138282775879

Token 1044: '(ls' (ID: 128476)
  Prédit: '(ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -1.3663626305060461e-05
    2. 'ls' → logprob: -11.25001335144043
    3. ' ls' → logprob: -15.25001335144043
    4. '(l' → logprob: -16.12501335144043
    5. '(rs' → logprob: -16.87501335144043
    6. '(' → logprob: -17.00001335144043
    7. ' (' → logprob: -17.25001335144043
    8. '```' → logprob: -17.37501335144043
    9. '_ls' → logprob: -17.37501335144043
    10. '(lst' → logprob: -17.62501335144043

Token 1045: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.011173258535563946
    2. ',' → logprob: -4.511173248291016
    3. ',),' → logprob: -9.261173248291016
    4. ')' → logprob: -10.886173248291016
    5. ' ),' → logprob: -13.136173248291016
    6. '   ' → logprob: -13.261173248291016
    7. '           ' → logprob: -13.511173248291016
    8. '(),' → logprob: -13.636173248291016
    9. '       ' → logprob: -14.011173248291016
    10. ' ,' → logprob: -14.386173248291016

Token 1046: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.01814994215965271
    2. ' base' → logprob: -4.0181498527526855
    3. '(base' → logprob: -17.143150329589844
    4. '```' → logprob: -18.143150329589844
    5. '   ' → logprob: -19.518150329589844
    6. 'b' → logprob: -19.893150329589844
    7. '	base' → logprob: -19.893150329589844
    8. '
' → logprob: -20.143150329589844
    9. 'bas' → logprob: -20.893150329589844
    10. '_base' → logprob: -21.393150329589844

Token 1047: ')
' (ID: 446)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.9775663614273071
    2. ')' → logprob: -1.1025663614273071
    3. ',' → logprob: -1.4775663614273071
    4. ')
' → logprob: -2.8525662422180176
    5. '           ' → logprob: -6.352566242218018
    6. '       ' → logprob: -6.352566242218018
    7. '               ' → logprob: -6.477566242218018
    8. '   ' → logprob: -7.852566242218018
    9. '):
' → logprob: -9.352566719055176
    10. '```' → logprob: -9.602566719055176

Token 1048: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33067962527275085
    2. '           ' → logprob: -1.9556796550750732
    3. ' l' → logprob: -2.2056796550750732
    4. '```' → logprob: -4.455679416656494
    5. '                   ' → logprob: -5.205679416656494
    6. '                ' → logprob: -5.830679416656494
    7. 'l' → logprob: -5.955679416656494
    8. '            ' → logprob: -6.580679416656494
    9. '                
' → logprob: -6.580679416656494
    10. '              ' → logprob: -7.330679416656494

Token 1049: ' l' (ID: 305)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11689683794975281
    2. ' l' → logprob: -2.616896867752075
    3. 'l' (adapté à ' l') → logprob: -3.491896867752075
    4. '                   ' → logprob: -5.866896629333496
    5. '           ' → logprob: -6.491896629333496
    6. '                ' → logprob: -6.616896629333496
    7. '	l' → logprob: -7.616896629333496
    8. '              ' → logprob: -8.491896629333496
    9. '```' → logprob: -8.991896629333496
    10. '            ' → logprob: -9.616896629333496

Token 1050: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890080660581589
    2. '=' → logprob: -2.5789008140563965
    3. '=-' → logprob: -12.828900337219238
    4. ' -=' → logprob: -13.328900337219238
    5. '```' → logprob: -13.453900337219238
    6. '           ' → logprob: -13.703900337219238
    7. ' ' → logprob: -14.203900337219238
    8. '   ' → logprob: -14.453900337219238
    9. ' =
' → logprob: -14.953900337219238
    10. '=
' → logprob: -15.078900337219238

Token 1051: ' -' (ID: 533)
  Prédit: '-l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.007150325924158096
    2. ' -' → logprob: -5.007150173187256
    3. '-' → logprob: -7.757150173187256
    4. '-il' → logprob: -12.757150650024414
    5. '-i' → logprob: -13.632150650024414
    6. '-L' → logprob: -14.382150650024414
    7. '-ln' → logprob: -14.882150650024414
    8. '-lfs' → logprob: -15.132150650024414
    9. '-xl' → logprob: -15.257150650024414
    10. '   ' → logprob: -15.257150650024414

Token 1052: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -17.75
    3. '	l' → logprob: -21.375
    4. '```' → logprob: -22.375
    5. '<|end|>' → logprob: -22.625
    6. '*l' → logprob: -23.0
    7. 'л' → logprob: -23.125
    8. '­l' → logprob: -23.125
    9. '   ' → logprob: -23.25
    10. '`' → logprob: -24.0

Token 1053: '
' (ID: 198)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.967624019831419e-05
    2. ' l' → logprob: -10.625060081481934
    3. '
' → logprob: -11.500060081481934
    4. '               ' → logprob: -11.750060081481934
    5. '                   ' → logprob: -12.125060081481934
    6. '           ' → logprob: -12.250060081481934
    7. '[l' → logprob: -12.875060081481934
    8. '<|end|>' → logprob: -14.625060081481934
    9. '```' → logprob: -14.625060081481934
    10. '+l' → logprob: -14.750060081481934

Token 1054: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007087402627803385
    2. '                ' → logprob: -8.12570858001709
    3. '              ' → logprob: -9.25070858001709
    4. '```' → logprob: -9.37570858001709
    5. '           ' → logprob: -9.87570858001709
    6. '<|end|>' → logprob: -9.87570858001709
    7. '                   ' → logprob: -10.00070858001709
    8. '                
' → logprob: -10.50070858001709
    9. ' if' → logprob: -11.75070858001709
    10. 'if' → logprob: -11.87570858001709

Token 1055: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36939364671707153
    2. 'if' (adapté à ' if') → logprob: -1.8693935871124268
    3. ' if' → logprob: -1.8693935871124268
    4. '                ' → logprob: -8.494393348693848
    5. '                   ' → logprob: -9.369393348693848
    6. '              ' → logprob: -10.119393348693848
    7. '           ' → logprob: -10.494393348693848
    8. '```' → logprob: -10.744393348693848
    9. ' ' → logprob: -11.744393348693848
    10. '             ' → logprob: -12.369393348693848

Token 1056: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31326475739479065
    2. 'i' → logprob: -1.3132647275924683
    3. '(i' → logprob: -13.688264846801758
    4. '               ' → logprob: -14.438264846801758
    5. '                   ' → logprob: -15.188264846801758
    6. '{i' → logprob: -15.563264846801758
    7. 'I' → logprob: -15.938264846801758
    8. '	i' → logprob: -15.938264846801758
    9. '```' → logprob: -16.063264846801758
    10. 'not' → logprob: -16.313264846801758

Token 1057: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043520331382751465
    2. 'in' → logprob: -3.168520450592041
    3. '               ' → logprob: -7.668520450592041
    4. '                ' → logprob: -10.668519973754883
    5. '                   ' → logprob: -12.168519973754883
    6. ' not' → logprob: -12.418519973754883
    7. '            ' → logprob: -12.543519973754883
    8. '           ' → logprob: -12.668519973754883
    9. 'In' → logprob: -12.668519973754883
    10. '<|end|>' → logprob: -13.293519973754883

Token 1058: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0015024791937321424
    2. ' d' → logprob: -6.501502513885498
    3. '<|end|>' → logprob: -16.751502990722656
    4. '           ' → logprob: -17.876502990722656
    5. '	d' → logprob: -18.001502990722656
    6. '[' → logprob: -18.251502990722656
    7. ' ' → logprob: -18.376502990722656
    8. '...' → logprob: -18.501502990722656
    9. '   ' → logprob: -18.751502990722656
    10. ')d' → logprob: -19.001502990722656

Token 1059: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.006964593194425106
    2. 's' → logprob: -5.006964683532715
    3. 'd' → logprob: -8.631964683532715
    4. 'et' → logprob: -10.381964683532715
    5. 'ls' → logprob: -11.131964683532715
    6. 'sets' → logprob: -12.131964683532715
    7. 'l' → logprob: -12.506964683532715
    8. '```' → logprob: -12.756964683532715
    9. '...' → logprob: -13.006964683532715
    10. '       ' → logprob: -13.006964683532715

Token 1060: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5304790139198303
    2. ':' → logprob: -1.0304789543151855
    3. ':
' → logprob: -3.5304789543151855
    4. '                   ' → logprob: -4.4054789543151855
    5. '<|end|>' → logprob: -4.4054789543151855
    6. '           ' → logprob: -8.030479431152344
    7. '              ' → logprob: -9.155479431152344
    8. '                ' → logprob: -9.280479431152344
    9. '):
' → logprob: -9.530479431152344
    10. '<|end|>' → logprob: -9.655479431152344

Token 1061: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01621689274907112
    2. '                   ' → logprob: -4.14121675491333
    3. '   ' → logprob: -10.141217231750488
    4. '```' → logprob: -10.266217231750488
    5. '<|end|>' → logprob: -10.891217231750488
    6. 'not' → logprob: -10.891217231750488
    7. '                ' → logprob: -11.266217231750488
    8. '           ' → logprob: -11.266217231750488
    9. '{
' → logprob: -12.016217231750488
    10. '                       ' → logprob: -12.266217231750488

Token 1062: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.7522499561309814
    2. ' d' → logprob: -0.7522499561309814
    3. '               ' → logprob: -2.8772499561309814
    4. '                ' → logprob: -7.627249717712402
    5. '                   ' → logprob: -8.127249717712402
    6. '```' → logprob: -8.127249717712402
    7. '   ' → logprob: -12.627249717712402
    8. ' ' → logprob: -12.752249717712402
    9. '``' → logprob: -12.752249717712402
    10. '                 ' → logprob: -12.877249717712402

Token 1063: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.1472419600977446e-06
    2. 'd' → logprob: -14.125000953674316
    3. 'remove' → logprob: -15.500000953674316
    4. 'et' → logprob: -16.125001907348633
    5. ' set' → logprob: -17.250001907348633
    6. 's' → logprob: -17.375001907348633
    7. '       ' → logprob: -18.625001907348633
    8. '               ' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.250001907348633
    10. ' d' → logprob: -20.125001907348633

Token 1064: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0020794784650206566
    2. 'remove' → logprob: -6.377079486846924
    3. '               ' → logprob: -8.252079010009766
    4. '                   ' → logprob: -9.252079010009766
    5. '.' → logprob: -11.127079010009766
    6. ' remove' → logprob: -13.877079010009766
    7. '                       ' → logprob: -13.877079010009766
    8. '```' → logprob: -14.002079010009766
    9. ' .' → logprob: -14.127079010009766
    10. '	remove' → logprob: -14.377079010009766

Token 1065: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.919942486798391e-05
    2. 'i' → logprob: -9.750059127807617
    3. '(' → logprob: -14.375059127807617
    4. ' i' → logprob: -16.375059127807617
    5. '```' → logprob: -17.125059127807617
    6. '[i' → logprob: -17.625059127807617
    7. '           ' → logprob: -17.625059127807617
    8. '=i' → logprob: -17.875059127807617
    9. '	i' → logprob: -18.125059127807617
    10. ' (' → logprob: -18.250059127807617

Token 1066: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01009201817214489
    2. ')' → logprob: -5.010091781616211
    3. '                   ' → logprob: -6.635091781616211
    4. ')
' → logprob: -7.260091781616211
    5. '()' → logprob: -7.385091781616211
    6. '           ' → logprob: -7.635091781616211
    7. '()
' → logprob: -9.010091781616211
    8. '```' → logprob: -9.760091781616211
    9. '                       ' → logprob: -11.635091781616211
    10. '   ' → logprob: -11.635091781616211

Token 1067: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014140465063974261
    2. '```' → logprob: -6.876413822174072
    3. 'else' → logprob: -8.37641429901123
    4. '           ' → logprob: -9.50141429901123
    5. '                   ' → logprob: -10.37641429901123
    6. ' else' → logprob: -11.12641429901123
    7. 'elif' → logprob: -11.62641429901123
    8. '                ' → logprob: -11.75141429901123
    9. ' ' → logprob: -12.37641429901123
    10. '              ' → logprob: -13.00141429901123

Token 1068: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.38912901282310486
    2. '               ' → logprob: -1.1391290426254272
    3. ' elif' → logprob: -6.639129161834717
    4. '           ' → logprob: -7.139129161834717
    5. '                   ' → logprob: -9.264128684997559
    6. '   ' → logprob: -10.764128684997559
    7. '              ' → logprob: -11.264128684997559
    8. '                ' → logprob: -11.764128684997559
    9. '       ' → logprob: -12.764128684997559
    10. 'else' → logprob: -12.764128684997559

Token 1069: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.1602274775505066
    2. ' cur' → logprob: -1.9102275371551514
    3. '               ' → logprob: -12.91022777557373
    4. '                   ' → logprob: -14.91022777557373
    5. '	cur' → logprob: -15.91022777557373
    6. '```' → logprob: -15.91022777557373
    7. '(cur' → logprob: -16.035226821899414
    8. '           ' → logprob: -16.410226821899414
    9. '[cur' → logprob: -16.410226821899414
    10. '   ' → logprob: -16.535226821899414

Token 1070: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05501452833414078
    2. '<' → logprob: -2.9300146102905273
    3. ' >' → logprob: -9.805014610290527
    4. '<|end|>' → logprob: -10.430014610290527
    5. ' +=' → logprob: -11.805014610290527
    6. '>' → logprob: -11.930014610290527
    7. '+' → logprob: -12.180014610290527
    8. ' ' → logprob: -12.180014610290527
    9. ' ' → logprob: -12.555014610290527
    10. ' +' → logprob: -12.805014610290527

Token 1071: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.048587825149297714
    2. ' l' → logprob: -3.0485877990722656
    3. '	l' → logprob: -15.048587799072266
    4. '                   ' → logprob: -17.548587799072266
    5. '               ' → logprob: -18.173587799072266
    6. '<|end|>' → logprob: -18.423587799072266
    7. ' ' → logprob: -18.673587799072266
    8. '           ' → logprob: -18.923587799072266
    9. '   ' → logprob: -19.173587799072266
    10. '_l' → logprob: -19.673587799072266

Token 1072: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15230576694011688
    2. ':
' → logprob: -2.152305841445923
    3. '               ' → logprob: -3.777305841445923
    4. '                   ' → logprob: -6.277305603027344
    5. '<|end|>' → logprob: -9.527305603027344
    6. '):
' → logprob: -10.152305603027344
    7. '```' → logprob: -10.277305603027344
    8. ':

' → logprob: -10.777305603027344
    9. ' :' → logprob: -10.777305603027344
    10. '                ' → logprob: -10.777305603027344

Token 1073: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004556511528789997
    2. '                   ' → logprob: -5.629556655883789
    3. '                ' → logprob: -7.629556655883789
    4. '```' → logprob: -8.504556655883789
    5. ' ' → logprob: -9.629556655883789
    6. '                
' → logprob: -10.129556655883789
    7. '              ' → logprob: -10.254556655883789
    8. ' ' → logprob: -10.754556655883789
    9. 'cur' → logprob: -10.879556655883789
    10. '                 ' → logprob: -11.004556655883789

Token 1074: ' tot' (ID: 2417)
  Prédit: ' tot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tot' → logprob: -0.7058743834495544
    2. 'tot' (adapté à ' tot') → logprob: -0.7058743834495544
    3. '                   ' → logprob: -4.455874443054199
    4. '               ' → logprob: -6.955874443054199
    5. '```' → logprob: -10.5808744430542
    6. '                       ' → logprob: -11.2058744430542
    7. '                ' → logprob: -11.4558744430542
    8. '``' → logprob: -12.3308744430542
    9. '                           ' → logprob: -12.4558744430542
    10. '           ' → logprob: -12.4558744430542

Token 1075: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.005986154545098543
    2. '+=' → logprob: -5.130986213684082
    3. '                   ' → logprob: -10.255986213684082
    4. '```' → logprob: -11.630986213684082
    5. ' +' → logprob: -12.630986213684082
    6. '                    ' → logprob: -12.880986213684082
    7. ' ' → logprob: -13.130986213684082
    8. '+' → logprob: -13.630986213684082
    9. ' ' → logprob: -13.880986213684082
    10. ']+=' → logprob: -14.130986213684082

Token 1076: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.014164921827614307
    2. 'l' → logprob: -4.264164924621582
    3. ' (' → logprob: -14.264164924621582
    4. '(l' → logprob: -14.764164924621582
    5. '	l' → logprob: -15.389164924621582
    6. ' ' → logprob: -16.389163970947266
    7. '```' → logprob: -16.764163970947266
    8. '(' → logprob: -17.389163970947266
    9. 's' → logprob: -17.514163970947266
    10. '`' → logprob: -17.764163970947266

Token 1077: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00034177995985373855
    2. '-' → logprob: -8.000341415405273
    3. '<|end|>' → logprob: -12.375341415405273
    4. ' ' → logprob: -14.125341415405273
    5. ' ' → logprob: -14.250341415405273
    6. ' -
' → logprob: -15.750341415405273
    7. ' –' → logprob: -16.000341415405273
    8. '```' → logprob: -16.500341415405273
    9. ',' → logprob: -17.000341415405273
    10. ')' → logprob: -17.375341415405273

Token 1078: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.8624639324116288e-06
    2. ' cur' → logprob: -13.250001907348633
    3. '[cur' → logprob: -20.375001907348633
    4. '	cur' → logprob: -21.000001907348633
    5. '(cur' → logprob: -21.250001907348633
    6. '.cur' → logprob: -22.375001907348633
    7. '```' → logprob: -22.375001907348633
    8. '_cur' → logprob: -23.750001907348633
    9. '-cur' → logprob: -23.750001907348633
    10. '           ' → logprob: -25.875001907348633

Token 1079: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021265938878059387
    2. '               ' → logprob: -4.646265983581543
    3. '```' → logprob: -4.771265983581543
    4. '<|end|>' → logprob: -7.271265983581543
    5. '                    
' → logprob: -7.896265983581543
    6. '``' → logprob: -8.021265983581543
    7. '                    ' → logprob: -8.271265983581543
    8. '                       ' → logprob: -8.271265983581543
    9. '                  ' → logprob: -8.521265983581543
    10. '           ' → logprob: -8.646265983581543

Token 1080: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07330610603094101
    2. '               ' → logprob: -2.698306083679199
    3. '```' → logprob: -6.823306083679199
    4. '                    
' → logprob: -8.0733060836792
    5. '<|end|>' → logprob: -8.3233060836792
    6. '                
' → logprob: -8.4483060836792
    7. '                  ' → logprob: -8.5733060836792
    8. '                       ' → logprob: -8.6983060836792
    9. '				' → logprob: -8.6983060836792
    10. '``' → logprob: -8.8233060836792

Token 1081: ' d' (ID: 272)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.07421796023845673
    2. 'd' (adapté à ' d') → logprob: -2.8242180347442627
    3. '                   ' → logprob: -4.949217796325684
    4. ' cur' → logprob: -6.074217796325684
    5. '               ' → logprob: -6.574217796325684
    6. ' d' → logprob: -6.699217796325684
    7. '```' → logprob: -9.324217796325684
    8. '                       ' → logprob: -11.074217796325684
    9. '``' → logprob: -11.574217796325684
    10. '                  ' → logprob: -11.574217796325684

Token 1082: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.292907877039397e-06
    2. 'cur' → logprob: -12.87500286102295
    3. 's' → logprob: -14.62500286102295
    4. '_set' → logprob: -17.125003814697266
    5. 'tot' → logprob: -17.250003814697266
    6. '       ' → logprob: -17.625003814697266
    7. ' set' → logprob: -18.375003814697266
    8. 't' → logprob: -18.500003814697266
    9. '   ' → logprob: -19.125003814697266
    10. 'et' → logprob: -19.375003814697266

Token 1083: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.002976633608341217
    2. 'add' → logprob: -6.002976417541504
    3. '                   ' → logprob: -7.752976417541504
    4. '               ' → logprob: -10.127976417541504
    5. '.' → logprob: -11.502976417541504
    6. '                       ' → logprob: -11.627976417541504
    7. '_add' → logprob: -12.752976417541504
    8. ' .' → logprob: -13.002976417541504
    9. '           ' → logprob: -13.377976417541504
    10. '```' → logprob: -13.377976417541504

Token 1084: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.02976033091545105
    2. 'i' → logprob: -3.5297603607177734
    3. ' i' → logprob: -12.154760360717773
    4. '                   ' → logprob: -14.029760360717773
    5. '               ' → logprob: -14.404760360717773
    6. '(' → logprob: -14.404760360717773
    7. '```' → logprob: -14.404760360717773
    8. '{i' → logprob: -14.654760360717773
    9. '           ' → logprob: -14.779760360717773
    10. ',i' → logprob: -15.279760360717773

Token 1085: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8578814268112183
    2. 'cur' → logprob: -1.2328814268112183
    3. ' cur' → logprob: -1.9828814268112183
    4. '[cur' → logprob: -2.732881546020508
    5. '(cur' → logprob: -3.482881546020508
    6. '```' → logprob: -3.732881546020508
    7. '                   ' → logprob: -4.482881546020508
    8. '<|end|>' → logprob: -5.732881546020508
    9. ')' → logprob: -6.107881546020508
    10. '                
' → logprob: -6.607881546020508

Token 1086: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14313066005706787
    2. '               ' → logprob: -2.1431307792663574
    3. 'break' → logprob: -5.768130779266357
    4. '	               ' → logprob: -5.768130779266357
    5. '                    ' → logprob: -6.143130779266357
    6. '                  ' → logprob: -6.643130779266357
    7. '				' → logprob: -6.893130779266357
    8. 'cur' → logprob: -7.143130779266357
    9. '```' → logprob: -7.268130779266357
    10. '                     ' → logprob: -7.393130779266357

Token 1087: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.0007681751740165055
    2. '                   ' → logprob: -7.875768184661865
    3. ' cur' → logprob: -7.875768184661865
    4. '               ' → logprob: -12.625767707824707
    5. '```' → logprob: -13.125767707824707
    6. '	cur' → logprob: -14.000767707824707
    7. '_cur' → logprob: -14.750767707824707
    8. '                       ' → logprob: -14.750767707824707
    9. '[cur' → logprob: -14.750767707824707
    10. 'break' → logprob: -15.375767707824707

Token 1088: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016238469630479813
    2. ' =' → logprob: -4.266238689422607
    3. '+=' → logprob: -6.266238689422607
    4. ' +=' → logprob: -8.89123821258545
    5. '<' → logprob: -10.26623821258545
    6. ' <' → logprob: -14.76623821258545
    7. '                   ' → logprob: -15.39123821258545
    8. '=
' → logprob: -15.76623821258545
    9. '```' → logprob: -16.391239166259766
    10. '   ' → logprob: -16.641239166259766

Token 1089: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.25192946195602417
    2. ' l' → logprob: -1.501929521560669
    3. '	l' → logprob: -15.25192928314209
    4. '                   ' → logprob: -16.251930236816406
    5. '           ' → logprob: -18.251930236816406
    6. '               ' → logprob: -20.001930236816406
    7. ' ' → logprob: -21.001930236816406
    8. '            ' → logprob: -21.126930236816406
    9. '                    ' → logprob: -21.376930236816406
    10. '   ' → logprob: -21.876930236816406

Token 1090: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006744735408574343
    2. '               ' → logprob: -6.006744861602783
    3. '				' → logprob: -6.631744861602783
    4. '
' → logprob: -7.381744861602783
    5. '                       ' → logprob: -7.881744861602783
    6. '           ' → logprob: -8.131744384765625
    7. '                    
' → logprob: -8.131744384765625
    8. '<|end|>' → logprob: -8.256744384765625
    9. '```' → logprob: -8.631744384765625
    10. '	               ' → logprob: -9.006744384765625

Token 1091: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014085668371990323
    2. '               ' → logprob: -7.376408576965332
    3. '```' → logprob: -8.501408576965332
    4. '				' → logprob: -8.751408576965332
    5. '                       ' → logprob: -8.876408576965332
    6. 'break' → logprob: -10.001408576965332
    7. '                    ' → logprob: -10.251408576965332
    8. '           ' → logprob: -10.251408576965332
    9. '		           ' → logprob: -10.626408576965332
    10. '                  ' → logprob: -10.751408576965332

Token 1092: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.005292815156280994
    2. ' break' → logprob: -5.255292892456055
    3. '                   ' → logprob: -9.755292892456055
    4. '               ' → logprob: -14.255292892456055
    5. '                       ' → logprob: -15.005292892456055
    6. '	break' → logprob: -16.880292892456055
    7. '
' → logprob: -17.630292892456055
    8. '```' → logprob: -18.255292892456055
    9. '_break' → logprob: -18.380292892456055
    10. '                           ' → logprob: -18.630292892456055

Token 1093: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00040540905320085585
    2. '           ' → logprob: -7.875405311584473
    3. '                   ' → logprob: -11.875405311584473
    4. '                ' → logprob: -12.375405311584473
    5. 'else' → logprob: -12.375405311584473
    6. '              ' → logprob: -12.750405311584473
    7. '       ' → logprob: -13.250405311584473
    8. '                
' → logprob: -13.625405311584473
    9. '```' → logprob: -13.875405311584473
    10. '             ' → logprob: -14.250405311584473

Token 1094: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011818927014246583
    2. '           ' → logprob: -7.6261820793151855
    3. '```' → logprob: -7.8761820793151855
    4. 'else' → logprob: -8.751181602478027
    5. '                   ' → logprob: -9.501181602478027
    6. ' else' → logprob: -10.376181602478027
    7. '                ' → logprob: -10.626181602478027
    8. '              ' → logprob: -11.751181602478027
    9. '       ' → logprob: -11.876181602478027
    10. '             ' → logprob: -13.001181602478027

Token 1095: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4095385670661926
    2. 'else' (adapté à ' else') → logprob: -1.1595385074615479
    3. '               ' → logprob: -3.909538507461548
    4. ' else' → logprob: -6.159538745880127
    5. '       ' → logprob: -9.034538269042969
    6. '   ' → logprob: -9.784538269042969
    7. '          ' → logprob: -11.159538269042969
    8. '            ' → logprob: -11.534538269042969
    9. '         ' → logprob: -11.659538269042969
    10. '             ' → logprob: -11.784538269042969

Token 1096: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04746754467487335
    2. '               ' → logprob: -3.4224674701690674
    3. ':
' → logprob: -4.7974677085876465
    4. ':' → logprob: -5.4224677085876465
    5. '           ' → logprob: -8.297467231750488
    6. '```' → logprob: -8.422467231750488
    7. '                  ' → logprob: -9.047467231750488
    8. '                       ' → logprob: -9.047467231750488
    9. '                ' → logprob: -9.297467231750488
    10. '                    ' → logprob: -9.422467231750488

Token 1097: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1156068965792656
    2. '               ' → logprob: -2.4906067848205566
    3. 'f' → logprob: -3.8656067848205566
    4. ' f' → logprob: -5.740606784820557
    5. '           ' → logprob: -6.490606784820557
    6. '   ' → logprob: -8.865607261657715
    7. '```' → logprob: -9.115607261657715
    8. '                ' → logprob: -9.240607261657715
    9. '                       ' → logprob: -9.365607261657715
    10. '                  ' → logprob: -9.865607261657715

Token 1098: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.06834740191698074
    2. ' f' → logprob: -2.818347454071045
    3. '                   ' → logprob: -5.193347454071045
    4. '               ' → logprob: -7.193347454071045
    5. '           ' → logprob: -11.443346977233887
    6. '```' → logprob: -11.568346977233887
    7. '                       ' → logprob: -11.818346977233887
    8. '                ' → logprob: -11.818346977233887
    9. '                    ' → logprob: -12.193346977233887
    10. '	f' → logprob: -12.693346977233887

Token 1099: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014296076260507107
    2. ' =' → logprob: -4.264296054840088
    3. '                   ' → logprob: -9.014296531677246
    4. '               ' → logprob: -12.014296531677246
    5. '           ' → logprob: -12.889296531677246
    6. '=True' → logprob: -14.014296531677246
    7. '       ' → logprob: -14.639296531677246
    8. '   ' → logprob: -14.639296531677246
    9. '                  ' → logprob: -15.264296531677246
    10. '                       ' → logprob: -16.26429557800293

Token 1100: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004078401252627373
    2. ' True' → logprob: -5.504078388214111
    3. '(True' → logprob: -18.754077911376953
    4. '=True' → logprob: -19.379077911376953
    5. 'False' → logprob: -21.254077911376953
    6. '   ' → logprob: -21.879077911376953
    7. '                   ' → logprob: -22.004077911376953
    8. '               ' → logprob: -22.879077911376953
    9. '           ' → logprob: -23.004077911376953
    10. '
' → logprob: -23.254077911376953

Token 1101: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06280185282230377
    2. '<|end|>' → logprob: -3.1878018379211426
    3. '                       ' → logprob: -5.062801837921143
    4. '               ' → logprob: -5.437801837921143
    5. '           ' → logprob: -6.187801837921143
    6. '```' → logprob: -6.562801837921143
    7. '				' → logprob: -7.437801837921143
    8. '		           ' → logprob: -7.437801837921143
    9. '                    
' → logprob: -7.437801837921143
    10. '			       ' → logprob: -7.812801837921143

Token 1102: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08257940411567688
    2. '               ' → logprob: -2.5825793743133545
    3. '                       ' → logprob: -5.832579612731934
    4. '           ' → logprob: -7.707579612731934
    5. '```' → logprob: -8.707579612731934
    6. '		           ' → logprob: -10.582579612731934
    7. '                    ' → logprob: -11.082579612731934
    8. '       ' → logprob: -11.207579612731934
    9. '                           ' → logprob: -11.332579612731934
    10. '			       ' → logprob: -11.707579612731934

Token 1103: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.001246185740455985
    2. '                   ' → logprob: -6.751245975494385
    3. ' break' → logprob: -9.751246452331543
    4. '```' → logprob: -11.751246452331543
    5. '               ' → logprob: -12.126246452331543
    6. '                       ' → logprob: -12.626246452331543
    7. '	break' → logprob: -13.876246452331543
    8. '				' → logprob: -17.001245498657227
    9. '           ' → logprob: -17.001245498657227
    10. '``' → logprob: -17.251245498657227

Token 1104: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3607249855995178
    2. '           ' → logprob: -1.235724925994873
    3. '<|end|>' → logprob: -4.610724925994873
    4. '	       ' → logprob: -6.985724925994873
    5. '               ' → logprob: -7.985724925994873
    6. '<|end|>' → logprob: -8.610725402832031
    7. '        
' → logprob: -8.610725402832031
    8. '		' → logprob: -8.860725402832031
    9. '	' → logprob: -9.360725402832031
    10. '   ' → logprob: -9.360725402832031

Token 1105: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029759511351585388
    2. '           ' → logprob: -3.654759407043457
    3. '
' → logprob: -6.529759407043457
    4. '<|end|>' → logprob: -7.154759407043457
    5. '   ' → logprob: -7.529759407043457
    6. '	       ' → logprob: -8.779759407043457
    7. '        
' → logprob: -8.904759407043457
    8. '	' → logprob: -9.029759407043457
    9. '<|end|>' → logprob: -9.904759407043457
    10. '    
' → logprob: -10.404759407043457

Token 1106: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24113169312477112
    2. '<|end|>' → logprob: -1.9911316633224487
    3. '           ' → logprob: -3.2411317825317383
    4. '   ' → logprob: -3.4911317825317383
    5. '<|end|>' → logprob: -4.991131782531738
    6. ' if' → logprob: -8.116131782531738
    7. ')' → logprob: -8.366131782531738
    8. ' ' → logprob: -8.866131782531738
    9. 'return' → logprob: -8.866131782531738
    10. '
' → logprob: -9.491131782531738

Token 1107: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12693840265274048
    2. ' f' → logprob: -2.1269383430480957
    3. 'not' → logprob: -11.751938819885254
    4. ' not' → logprob: -13.376938819885254
    5. '(f' → logprob: -14.626938819885254
    6. '   ' → logprob: -15.626938819885254
    7. '           ' → logprob: -15.751938819885254
    8. '       ' → logprob: -17.001937866210938
    9. '	f' → logprob: -17.251937866210938
    10. 's' → logprob: -17.626937866210938

Token 1108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6426337957382202
    2. '           ' → logprob: -1.3926337957382202
    3. ':
' → logprob: -1.5176337957382202
    4. '               ' → logprob: -5.39263391494751
    5. '=' → logprob: -7.01763391494751
    6. '```' → logprob: -8.267633438110352
    7. '          ' → logprob: -9.017633438110352
    8. '       ' → logprob: -9.392633438110352
    9. '                   ' → logprob: -9.642633438110352
    10. '[' → logprob: -9.892633438110352

Token 1109: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2820197343826294
    2. '               ' → logprob: -1.4070197343826294
    3. '       ' → logprob: -8.03201961517334
    4. '                   ' → logprob: -8.40701961517334
    5. '	       ' → logprob: -9.90701961517334
    6. '<|end|>' → logprob: -10.03201961517334
    7. '```' → logprob: -10.03201961517334
    8. '                       ' → logprob: -10.15701961517334
    9. '          ' → logprob: -10.90701961517334
    10. '   ' → logprob: -11.03201961517334

Token 1110: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.23551498353481293
    2. '           ' → logprob: -1.7355149984359741
    3. '               ' → logprob: -3.4855148792266846
    4. ' break' → logprob: -5.860515117645264
    5. '	break' → logprob: -11.235514640808105
    6. '       ' → logprob: -11.360514640808105
    7. '                   ' → logprob: -12.610514640808105
    8. '   ' → logprob: -12.610514640808105
    9. 'True' → logprob: -13.360514640808105
    10. '_break' → logprob: -14.235514640808105

Token 1111: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05632924288511276
    2. '       ' → logprob: -2.9313292503356934
    3. '<|end|>' → logprob: -7.181329250335693
    4. '
' → logprob: -8.181328773498535
    5. '    
' → logprob: -8.931328773498535
    6. '        
' → logprob: -9.306328773498535
    7. '<|end|>' → logprob: -10.431328773498535
    8. ',' → logprob: -10.556328773498535
    9. 'continue' → logprob: -10.806328773498535
    10. 'return' → logprob: -10.806328773498535

Token 1112: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013464801304508
    2. '
' → logprob: -9.500134468078613
    3. '       ' → logprob: -10.375134468078613
    4. 'return' → logprob: -11.250134468078613
    5. '```' → logprob: -11.625134468078613
    6. '    
' → logprob: -12.625134468078613
    7. '<|end|>' → logprob: -14.125134468078613
    8. 'print' → logprob: -14.250134468078613
    9. '	return' → logprob: -15.000134468078613
    10. 'def' → logprob: -15.500134468078613

Token 1113: ' tot' (ID: 2417)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.85235276655294e-05
    2. '       ' → logprob: -10.000088691711426
    3. 'return' → logprob: -10.500088691711426
    4. '
' → logprob: -12.125088691711426
    5. '```' → logprob: -12.500088691711426
    6. '<|end|>' → logprob: -13.250088691711426
    7. ' return' → logprob: -13.375088691711426
    8. '    
' → logprob: -13.875088691711426
    9. '	return' → logprob: -14.250088691711426
    10. ')' → logprob: -15.250088691711426

Token 1114: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25321486592292786
    2. '+=' → logprob: -1.5032148361206055
    3. '+' → logprob: -7.6282148361206055
    4. '   ' → logprob: -7.8782148361206055
    5. '       ' → logprob: -9.003214836120605
    6. ' +' → logprob: -9.878214836120605
    7. ' ' → logprob: -10.003214836120605
    8. '=' → logprob: -10.128214836120605
    9. '    ' → logprob: -10.253214836120605
    10. '  ' → logprob: -10.378214836120605

Token 1115: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -7.941850526549388e-06
    2. ' abs' → logprob: -11.750007629394531
    3. '(abs' → logprob: -19.87500762939453
    4. 'cur' → logprob: -21.25000762939453
    5. '   ' → logprob: -22.12500762939453
    6. '0' → logprob: -22.87500762939453
    7. '       ' → logprob: -24.12500762939453
    8. '.abs' → logprob: -24.12500762939453
    9. '```' → logprob: -24.12500762939453
    10. '
' → logprob: -24.37500762939453

Token 1116: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.005233882926404476
    2. 'cur' → logprob: -5.2552337646484375
    3. '[cur' → logprob: -16.630233764648438
    4. '	cur' → logprob: -18.380233764648438
    5. ' cur' → logprob: -18.380233764648438
    6. '(c' → logprob: -18.880233764648438
    7. '(' → logprob: -19.380233764648438
    8. '_cur' → logprob: -19.630233764648438
    9. '-cur' → logprob: -19.755233764648438
    10. '(curr' → logprob: -20.505233764648438

Token 1117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09064023941755295
    2. ')
' → logprob: -2.4656403064727783
    3. '   ' → logprob: -6.465640068054199
    4. ')return' → logprob: -9.2156400680542
    5. '()' → logprob: -11.2156400680542
    6. '       ' → logprob: -11.7156400680542
    7. 'return' → logprob: -11.7156400680542
    8. ')
' → logprob: -12.2156400680542
    9. '<|end|>' → logprob: -13.5906400680542
    10. '+' → logprob: -13.8406400680542

Token 1118: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10770517587661743
    2. '       ' → logprob: -2.3577051162719727
    3. '	return' → logprob: -4.982705116271973
    4. '<|end|>' → logprob: -7.857705116271973
    5. '```' → logprob: -9.482705116271973
    6. ' return' → logprob: -9.732705116271973
    7. '<|end|>' → logprob: -10.982705116271973
    8. 'return' → logprob: -10.982705116271973
    9. '     ' → logprob: -11.107705116271973
    10. ' ' → logprob: -11.732705116271973

Token 1119: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.27615979313850403
    2. '   ' → logprob: -1.5261597633361816
    3. '       ' → logprob: -3.7761597633361816
    4. ' return' → logprob: -7.151159763336182
    5. '	return' → logprob: -8.40116024017334
    6. '```' → logprob: -11.40116024017334
    7. '           ' → logprob: -13.27616024017334
    8. ' ' → logprob: -13.52616024017334
    9. '
' → logprob: -13.52616024017334
    10. ':return' → logprob: -13.65116024017334

Token 1120: ' tot' (ID: 2417)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.0004306692280806601
    2. ' tot' → logprob: -7.750430583953857
    3. 't' → logprob: -17.000431060791016
    4. '0' → logprob: -18.375431060791016
    5. 'total' → logprob: -19.000431060791016
    6. '   ' → logprob: -19.500431060791016
    7. '_tot' → logprob: -19.875431060791016
    8. 'to' → logprob: -20.125431060791016
    9. 'tod' → logprob: -20.250431060791016
    10. '	t' → logprob: -21.000431060791016

Token 1121: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015310514718294144
    2. '```' → logprob: -7.37653112411499
    3. '
' → logprob: -7.87653112411499
    4. '    
' → logprob: -8.376530647277832
    5. '<|end|>' → logprob: -8.501530647277832
    6. 'print' → logprob: -10.751530647277832
    7. 'def' → logprob: -11.126530647277832
    8. '``' → logprob: -11.876530647277832
    9. 'total' → logprob: -12.001530647277832
    10. 'result' → logprob: -12.001530647277832

Token 1122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02039531245827675
    2. 'ans' → logprob: -5.020395278930664
    3. 'result' → logprob: -5.395395278930664
    4. 'tot' → logprob: -5.770395278930664
    5. 'res' → logprob: -6.395395278930664
    6. 'answer' → logprob: -6.645395278930664
    7. 'total' → logprob: -7.145395278930664
    8. '    
' → logprob: -7.770395278930664
    9. '```' → logprob: -7.895395278930664
    10. 'print' → logprob: -8.145395278930664

Token 1123: ' tot' (ID: 2417)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6353880167007446
    2. 'tot' (adapté à ' tot') → logprob: -0.7603880167007446
    3. '
' → logprob: -6.385387897491455
    4. 'total' → logprob: -7.135387897491455
    5. 'ans' → logprob: -9.010388374328613
    6. '    
' → logprob: -9.885388374328613
    7. 'res' → logprob: -10.135388374328613
    8. 'result' → logprob: -10.510388374328613
    9. ' tot' → logprob: -11.260388374328613
    10. 't' → logprob: -11.885388374328613

Token 1124: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02673981711268425
    2. ' =' → logprob: -4.401739597320557
    3. '_' → logprob: -4.901739597320557
    4. '=' → logprob: -5.651739597320557
    5. '2' → logprob: -6.026739597320557
    6. '_=' → logprob: -8.526740074157715
    7. ',' → logprob: -8.901740074157715
    8. ' +=' → logprob: -9.401740074157715
    9. '=_' → logprob: -9.526740074157715
    10. '```' → logprob: -9.901740074157715

Token 1125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022564470767975
    2. '=' → logprob: -1.9102256298065186
    3. ',' → logprob: -14.535225868225098
    4. ' ' → logprob: -14.785225868225098
    5. '   ' → logprob: -15.410225868225098
    6. ')' → logprob: -15.910225868225098
    7. ' =
' → logprob: -16.41022491455078
    8. ' =)' → logprob: -16.41022491455078
    9. '_' → logprob: -16.78522491455078
    10. '＝' → logprob: -17.03522491455078

Token 1126: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0005645881756208837
    2. ' solve' → logprob: -7.5005645751953125
    3. '   ' → logprob: -11.375564575195312
    4. '  ' → logprob: -16.250564575195312
    5. ' ' → logprob: -17.625564575195312
    6. '.solve' → logprob: -18.125564575195312
    7. 'sol' → logprob: -18.250564575195312
    8. '    ' → logprob: -18.375564575195312
    9. '(s' → logprob: -19.250564575195312
    10. 'resolve' → logprob: -19.500564575195312

Token 1127: '_reverse' (ID: 112788)
  Prédit: '_reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reverse' → logprob: -0.000649529043585062
    2. '_inter' → logprob: -7.500649452209473
    3. 'reverse' → logprob: -9.250649452209473
    4. 'Reverse' → logprob: -15.625649452209473
    5. '_interval' → logprob: -16.62565040588379
    6. '(reverse' → logprob: -16.87565040588379
    7. '_inverse' → logprob: -17.12565040588379
    8. 'interval' → logprob: -17.62565040588379
    9. '_' → logprob: -17.87565040588379
    10. '_re' → logprob: -18.12565040588379

Token 1128: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -3.128163257315464e-07
    2. 'S' → logprob: -16.5
    3. '(s' → logprob: -17.375
    4. '   ' → logprob: -17.375
    5. ' (' → logprob: -17.875
    6. '(' → logprob: -17.875
    7. '```' → logprob: -18.625
    8. '((' → logprob: -18.75
    9. '(
' → logprob: -19.875
    10. '(A' → logprob: -20.125

Token 1129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.93710636976175e-05
    2. ',N' → logprob: -9.250099182128906
    3. ' ,' → logprob: -13.250099182128906
    4. '   ' → logprob: -13.625099182128906
    5. ')' → logprob: -15.625099182128906
    6. ',
' → logprob: -16.500099182128906
    7. ',n' → logprob: -17.750099182128906
    8. '(N' → logprob: -18.500099182128906
    9. ',S' → logprob: -18.500099182128906
    10. 'N' → logprob: -19.625099182128906

Token 1130: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.319370302458992e-06
    2. ' N' → logprob: -12.500005722045898
    3. '   ' → logprob: -14.000005722045898
    4. ')' → logprob: -14.375005722045898
    5. 'len' → logprob: -17.3750057220459
    6. '[N' → logprob: -17.8750057220459
    7. 'base' → logprob: -18.0000057220459
    8. ' ' → logprob: -18.3750057220459
    9. '10' → logprob: -18.3750057220459
    10. '  ' → logprob: -18.3750057220459

Token 1131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056915685534477234
    2. ')' → logprob: -3.181915760040283
    3. '   ' → logprob: -4.306915760040283
    4. ')
' → logprob: -8.056915283203125
    5. ',
' → logprob: -11.306915283203125
    6. ' ,' → logprob: -11.806915283203125
    7. '
' → logprob: -12.681915283203125
    8. '  ' → logprob: -13.806915283203125
    9. ',b' → logprob: -14.306915283203125
    10. '[' → logprob: -14.431915283203125

Token 1132: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -2.4153549020411447e-05
    2. ' base' → logprob: -10.87502384185791
    3. 'N' → logprob: -12.50002384185791
    4. '   ' → logprob: -14.00002384185791
    5. '10' → logprob: -14.50002384185791
    6. '2' → logprob: -17.125024795532227
    7. '	base' → logprob: -17.625024795532227
    8. ' ' → logprob: -18.000024795532227
    9. '```' → logprob: -18.000024795532227
    10. '(base' → logprob: -18.125024795532227

Token 1133: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6034979820251465
    2. '   ' → logprob: -1.1034979820251465
    3. '
' → logprob: -2.2284979820251465
    4. '<|end|>' → logprob: -4.4784979820251465
    5. ')
' → logprob: -6.7284979820251465
    6. '    
' → logprob: -7.7284979820251465
    7. '<|end|>' → logprob: -8.103498458862305
    8. '()' → logprob: -9.603498458862305
    9. '+' → logprob: -10.103498458862305
    10. '
' → logprob: -10.228498458862305

Token 1134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02373046986758709
    2. 'print' → logprob: -3.773730516433716
    3. '```' → logprob: -7.648730278015137
    4. '    
' → logprob: -12.898730278015137
    5. '
' → logprob: -12.898730278015137
    6. 'result' → logprob: -13.773730278015137
    7. '``' → logprob: -14.398730278015137
    8. ' print' → logprob: -14.523730278015137
    9. '	print' → logprob: -14.648730278015137
    10. 'answer' → logprob: -14.898730278015137

Token 1135: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.949026571121067e-05
    2. '   ' → logprob: -9.875099182128906
    3. 'ans' → logprob: -10.625099182128906
    4. 'answer' → logprob: -11.625099182128906
    5. 'result' → logprob: -11.625099182128906
    6. 'res' → logprob: -13.250099182128906
    7. 'pr' → logprob: -13.250099182128906
    8. '```' → logprob: -13.875099182128906
    9. '
' → logprob: -14.625099182128906
    10. 'prin' → logprob: -15.125099182128906

Token 1136: '(max' (ID: 17178)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.003076109802350402
    2. '(max' → logprob: -6.003076076507568
    3. '(t' → logprob: -8.128076553344727
    4. '(abs' → logprob: -8.253076553344727
    5. 'min' → logprob: -10.253076553344727
    6. '(' → logprob: -12.378076553344727
    7. '((' → logprob: -13.253076553344727
    8. '(m' → logprob: -14.128076553344727
    9. '(f' → logprob: -14.503076553344727
    10. 'abs' → logprob: -14.628076553344727

Token 1137: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.4140441635390744e-05
    2. 't' → logprob: -11.625014305114746
    3. '(' → logprob: -12.875014305114746
    4. ')' → logprob: -14.125014305114746
    5. 'tot' → logprob: -14.250014305114746
    6. '(
' → logprob: -14.500014305114746
    7. ')t' → logprob: -15.125014305114746
    8. '	t' → logprob: -15.500014305114746
    9. ')(' → logprob: -16.25001335144043
    10. '```' → logprob: -17.12501335144043

Token 1138: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0005262265913188457
    2. 'o' → logprob: -8.375526428222656
    3. 'tot' → logprob: -8.375526428222656
    4. 't' → logprob: -11.000526428222656
    5. '1' → logprob: -11.000526428222656
    6. '{' → logprob: -11.250526428222656
    7. '[' → logprob: -12.125526428222656
    8. '(t' → logprob: -12.750526428222656
    9. 'otal' → logprob: -13.000526428222656
    10. ')' → logprob: -13.750526428222656

Token 1139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012874653562903404
    2. '(t' → logprob: -4.512874603271484
    3. '(' → logprob: -6.887874603271484
    4. 't' → logprob: -7.387874603271484
    5. ',' → logprob: -9.387874603271484
    6. ',t' → logprob: -9.762874603271484
    7. 'tot' → logprob: -10.512874603271484
    8. ')' → logprob: -12.012874603271484
    9. '2' → logprob: -13.012874603271484
    10. ' (' → logprob: -13.637874603271484

Token 1140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.52788148727268e-05
    2. ',t' → logprob: -9.750064849853516
    3. ' ,' → logprob: -12.500064849853516
    4. ',
' → logprob: -12.875064849853516
    5. '(t' → logprob: -14.500064849853516
    6. '(' → logprob: -16.250064849853516
    7. ')' → logprob: -18.500064849853516
    8. 't' → logprob: -18.625064849853516
    9. ',

' → logprob: -19.000064849853516
    10. '+' → logprob: -19.125064849853516

Token 1141: ' tot' (ID: 2417)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.0007101670489646494
    2. ' tot' → logprob: -7.2507100105285645
    3. '0' → logprob: -17.000709533691406
    4. 't' → logprob: -17.000709533691406
    5. '_tot' → logprob: -17.000709533691406
    6. '   ' → logprob: -17.125709533691406
    7. 'total' → logprob: -17.125709533691406
    8. '```' → logprob: -18.125709533691406
    9. 'tol' → logprob: -18.500709533691406
    10. ')' → logprob: -18.625709533691406

Token 1142: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '```' → logprob: -19.25
    4. '
' → logprob: -19.5
    5. '２' → logprob: -20.0
    6. '(' → logprob: -20.125
    7. ')' → logprob: -20.375
    8. '₂' → logprob: -20.625
    9. '_' → logprob: -20.75
    10. '``' → logprob: -20.75

Token 1143: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062044765800237656
    2. '))' → logprob: -2.812044858932495
    3. '())' → logprob: -9.812045097351074
    4. ')))' → logprob: -11.562045097351074
    5. ',' → logprob: -11.937045097351074
    6. '()' → logprob: -13.062045097351074
    7. '(' → logprob: -13.437045097351074
    8. '})' → logprob: -14.687045097351074
    9. ',)' → logprob: -14.937045097351074
    10. '])' → logprob: -15.312045097351074

Token 1144: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1145: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.048608824610710144
    2. '__' → logprob: -3.0486087799072266
    3. '_name' → logprob: -10.923608779907227
    4. 'name' → logprob: -13.798608779907227
    5. '_' → logprob: -14.048608779907227
    6. '___' → logprob: -14.048608779907227
    7. ' _' → logprob: -15.798608779907227
    8. ' ___' → logprob: -16.298608779907227
    9. ' name' → logprob: -16.423608779907227
    10. '(__' → logprob: -16.423608779907227

Token 1146: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006099192891269922
    2. '==' → logprob: -5.881099224090576
    3. '.__' → logprob: -6.506099224090576
    4. '__.__' → logprob: -7.131099224090576
    5. ' ==' → logprob: -7.631099224090576
    6. '.' → logprob: -9.006098747253418
    7. '__.' → logprob: -9.006098747253418
    8. '=="' → logprob: -10.131098747253418
    9. '```' → logprob: -10.131098747253418
    10. ' __' → logprob: -10.881098747253418

Token 1147: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007865179213695228
    2. '==' → logprob: -7.875786304473877
    3. '=="' → logprob: -8.125786781311035
    4. '__.__' → logprob: -10.000786781311035
    5. '=='' → logprob: -10.875786781311035
    6. ' ==' → logprob: -10.875786781311035
    7. '__('' → logprob: -11.625786781311035
    8. '__":
' → logprob: -12.875786781311035
    9. '___' → logprob: -13.000786781311035
    10. '__["' → logprob: -13.125786781311035

Token 1148: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.35616767406463623
    2. '=="' → logprob: -1.7311676740646362
    3. ' ==' → logprob: -2.481167793273926
    4. '=='' → logprob: -3.481167793273926
    5. '__' → logprob: -4.856167793273926
    6. '==
' → logprob: -9.231167793273926
    7. '[' → logprob: -9.981167793273926
    8. '['' → logprob: -9.981167793273926
    9. '"' → logprob: -10.231167793273926
    10. ''' → logprob: -10.981167793273926

Token 1149: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018174296244978905
    2. ''' → logprob: -4.018174171447754
    3. '__' → logprob: -10.768174171447754
    4. ' "__' → logprob: -12.768174171447754
    5. '"user' → logprob: -15.768174171447754
    6. '"name' → logprob: -16.76817512512207
    7. '("__' → logprob: -16.89317512512207
    8. ' '__' → logprob: -17.89317512512207
    9. '"default' → logprob: -17.89317512512207
    10. '"class' → logprob: -18.14317512512207

Token 1150: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0792555883526802
    2. 'main' → logprob: -2.5792555809020996
    3. '"' → logprob: -8.579256057739258
    4. ''' → logprob: -9.329256057739258
    5. '___' → logprob: -10.329256057739258
    6. '_main' → logprob: -10.704256057739258
    7. '__":
' → logprob: -11.454256057739258
    8. 'name' → logprob: -11.829256057739258
    9. '____' → logprob: -11.954256057739258
    10. '__
' → logprob: -13.204256057739258

Token 1151: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04618007317185402
    2. '__' → logprob: -3.296180009841919
    3. '__':
' → logprob: -4.921180248260498
    4. '():
' → logprob: -8.17117977142334
    5. '__()
' → logprob: -9.29617977142334
    6. '__["' → logprob: -9.54617977142334
    7. '__.' → logprob: -9.67117977142334
    8. '.' → logprob: -9.79617977142334
    9. '__.__' → logprob: -9.79617977142334
    10. '__:' → logprob: -10.29617977142334

Token 1152: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.001427855808287859
    2. '   ' → logprob: -7.25142765045166
    3. '	main' → logprob: -7.25142765045166
    4. ' main' → logprob: -11.75142765045166
    5. '_main' → logprob: -15.00142765045166
    6. 'solve' → logprob: -15.50142765045166
    7. ' ' → logprob: -17.001428604125977
    8. '  ' → logprob: -17.501428604125977
    9. '    
' → logprob: -17.751428604125977
    10. '(main' → logprob: -18.001428604125977

Token 1153: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '	main' → logprob: -19.125
    4. '_main' → logprob: -20.25
    5. '(main' → logprob: -20.625
    6. 'import' → logprob: -21.125
    7. '   ' → logprob: -22.5
    8. '.main' → logprob: -24.125
    9. 'Main' → logprob: -25.0
    10. '/main' → logprob: -25.125

Token 1154: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1152
Tokens correctement prédits (1ère position, stricte): 482
Tokens correctement prédits (1ère position, avec adaptation): 524
Tokens correctement prédits (top 10): 984
Précision stricte (1ère position): 41.84%
Précision adaptée (1ère position): 45.49%
Précision (top 10): 85.42%
================================================================================
