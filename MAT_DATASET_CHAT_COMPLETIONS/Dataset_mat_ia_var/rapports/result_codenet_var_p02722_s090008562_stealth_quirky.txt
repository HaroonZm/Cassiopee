================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def gatherDivs(val):
    bag = [1] if val == 1 else []
    ix = 1
    while ix*ix <= val:
        if val%ix==0:
            bag += [ix] if ix not in bag else []
            tmp = val//ix
            if tmp not in bag:
                bag += [tmp]
        ix+=1
    return bag

BOX={}
zap=int(input())
for ele in gatherDivs(zap-1):
    BOX[ele]=True

for ele in gatherDivs(zap):
    v=zap
    if ele==1: continue
    while v%ele==0:
        v//=ele
    BOX[ele]=1 if v%ele==1 else -42

#print([k for k,v in BOX.items() if v])
print(sum(x==1 or x is True for x in BOX.values())-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' gather' (ID: 13660)
  → Token d'amorce (pas de prédiction)

Token 2: 'Div' (ID: 13521)
  → Token d'amorce (pas de prédiction)

Token 3: 's' (ID: 82)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7412936091423035
    2. 'er' → logprob: -1.3662936687469482
    3. 'ide' → logprob: -1.8662936687469482
    4. '(' → logprob: -2.8662936687469482
    5. 's' → logprob: -3.7412936687469482
    6. 'ision' → logprob: -4.741293430328369
    7. 'i' → logprob: -4.991293430328369
    8. 'ider' → logprob: -4.991293430328369
    9. 'iders' → logprob: -6.116293430328369
    10. 'isions' → logprob: -6.241293430328369

Token 4: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00031770815257914364
    2. '```' → logprob: -8.625317573547363
    3. '(`' → logprob: -10.500317573547363
    4. '(:' → logprob: -11.000317573547363
    5. ' (' → logprob: -11.000317573547363
    6. '():' → logprob: -11.250317573547363
    7. ':' → logprob: -11.750317573547363
    8. '[' → logprob: -12.000317573547363
    9. '((' → logprob: -12.250317573547363
    10. 'def' → logprob: -12.375317573547363

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10771127790212631
    2. ')' → logprob: -2.3577113151550293
    3. 's' → logprob: -4.982711315155029
    4. 'a' → logprob: -9.107710838317871
    5. '(' → logprob: -9.732710838317871
    6. '[' → logprob: -9.982710838317871
    7. 'er' → logprob: -9.982710838317871
    8. 'e' → logprob: -10.232710838317871
    9. 'def' → logprob: -10.232710838317871
    10. '):
' → logprob: -10.357710838317871

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020424392074346542
    2. '   ' → logprob: -4.7704243659973145
    3. '():' → logprob: -5.2704243659973145
    4. '(' → logprob: -5.6454243659973145
    5. '```' → logprob: -6.0204243659973145
    6. '(:' → logprob: -9.270424842834473
    7. '\' → logprob: -9.895424842834473
    8. '':' → logprob: -9.895424842834473
    9. '    
' → logprob: -10.020424842834473
    10. ':
' → logprob: -10.145424842834473

Token 7: ' bag' (ID: 7144)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016415908932685852
    2. '```' → logprob: -4.766416072845459
    3. '[' → logprob: -6.016416072845459
    4. ':' → logprob: -6.516416072845459
    5. '(' → logprob: -7.016416072845459
    6. '\' → logprob: -7.516416072845459
    7. '\t' → logprob: -7.641416072845459
    8. '       ' → logprob: -7.891416072845459
    9. '`' → logprob: -8.0164155960083
    10. ' ' → logprob: -8.1414155960083

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.36859869956970215
    2. ' =' → logprob: -1.6185986995697021
    3. '=' → logprob: -2.993598699569702
    4. '.' → logprob: -2.993598699569702
    5. '[]' → logprob: -6.118598937988281
    6. ' ' → logprob: -6.243598937988281
    7. '(' → logprob: -6.993598937988281
    8. '[:]' → logprob: -6.993598937988281
    9. '"' → logprob: -7.618598937988281
    10. '['' → logprob: -7.743598937988281

Token 9: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.14695870876312256
    2. '[]' → logprob: -2.021958827972412
    3. ' ' → logprob: -6.396958827972412
    4. 'set' → logprob: -7.021958827972412
    5. ' set' → logprob: -7.146958827972412
    6. ' {}' → logprob: -7.771958827972412
    7. '{}' → logprob: -7.896958827972412
    8. '[' → logprob: -9.646958351135254
    9. ' [' → logprob: -10.396958351135254
    10. '   ' → logprob: -10.896958351135254

Token 10: '1' (ID: 16)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.23910249769687653
    2. ']' → logprob: -1.7391024827957153
    3. '0' → logprob: -3.489102602005005
    4. '[]' → logprob: -5.864102363586426
    5. '   ' → logprob: -6.614102363586426
    6. ' val' → logprob: -7.239102363586426
    7. '[val' → logprob: -7.614102363586426
    8. '{' → logprob: -8.489102363586426
    9. ' ]' → logprob: -8.614102363586426
    10. '1' → logprob: -8.864102363586426

Token 11: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03165600821375847
    2. ']' → logprob: -3.53165602684021
    3. ' ,' → logprob: -7.406655788421631
    4. ')' → logprob: -7.531655788421631
    5. ',
' → logprob: -7.656655788421631
    6. ' ]' → logprob: -8.656656265258789
    7. '   ' → logprob: -10.281656265258789
    8. '0' → logprob: -10.656656265258789
    9. ')]' → logprob: -11.656656265258789
    10. ',)' → logprob: -11.781656265258789

Token 12: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11113276332616806
    2. '0' → logprob: -3.236132860183716
    3. ' for' → logprob: -4.236132621765137
    4. '*' → logprob: -4.861132621765137
    5. ',
' → logprob: -4.861132621765137
    6. '.' → logprob: -4.986132621765137
    7. 'for' → logprob: -4.986132621765137
    8. '2' → logprob: -5.111132621765137
    9. ' ' → logprob: -5.236132621765137
    10. ')' → logprob: -5.611132621765137

Token 13: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.04303469881415367
    2. 'val' → logprob: -3.168034791946411
    3. ' not' → logprob: -11.168034553527832
    4. ' ' → logprob: -11.668034553527832
    5. '(val' → logprob: -12.043034553527832
    6. ' isinstance' → logprob: -12.668034553527832
    7. '	val' → logprob: -14.168034553527832
    8. '[val' → logprob: -14.418034553527832
    9. ' (' → logprob: -14.543034553527832
    10. '  ' → logprob: -15.043034553527832

Token 14: ' ==' (ID: 951)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.018543902784585953
    2. '%' → logprob: -4.143543720245361
    3. ' ' → logprob: -6.018543720245361
    4. ' ==' → logprob: -9.89354419708252
    5. ' >=' → logprob: -11.89354419708252
    6. '==' → logprob: -12.26854419708252
    7. ' >' → logprob: -12.76854419708252
    8. '>' → logprob: -12.89354419708252
    9. '%i' → logprob: -13.51854419708252
    10. '   ' → logprob: -14.26854419708252

Token 15: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5135535597801208
    2. '1' → logprob: -1.0135536193847656
    3. '0' → logprob: -3.2635536193847656
    4. 'val' → logprob: -8.638553619384766
    5. '2' → logprob: -9.138553619384766
    6. ' val' → logprob: -9.513553619384766
    7. '=' → logprob: -10.763553619384766
    8. '  ' → logprob: -11.388553619384766
    9. '4' → logprob: -12.013553619384766
    10. '    ' → logprob: -12.326053619384766

Token 16: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1721108853816986
    2. ' ' → logprob: -2.4221107959747314
    3. '0' → logprob: -2.6721107959747314
    4. '2' → logprob: -9.422110557556152
    5. 'val' → logprob: -9.547110557556152
    6. '  ' → logprob: -10.297110557556152
    7. '   ' → logprob: -10.797110557556152
    8. '=' → logprob: -11.547110557556152
    9. '    ' → logprob: -11.672110557556152
    10. 'div' → logprob: -11.922110557556152

Token 17: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0968821719288826
    2. 'else' → logprob: -2.4718821048736572
    3. '   ' → logprob: -6.221882343292236
    4. '    ' → logprob: -6.346882343292236
    5. ' ' → logprob: -6.471882343292236
    6. '.' → logprob: -7.346882343292236
    7. ',' → logprob: -7.596882343292236
    8. '[:]' → logprob: -7.971882343292236
    9. '[' → logprob: -8.096881866455078
    10. '  ' → logprob: -8.346881866455078

Token 18: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.41598251461982727
    2. ' [' → logprob: -1.7909824848175049
    3. ' ' → logprob: -2.165982484817505
    4. '[]' → logprob: -3.540982484817505
    5. '[' → logprob: -3.665982484817505
    6. ' range' → logprob: -6.165982723236084
    7. '0' → logprob: -7.415982723236084
    8. 'range' → logprob: -7.665982723236084
    9. '  ' → logprob: -8.665982246398926
    10. ' '' → logprob: -9.290982246398926

Token 19: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3801036775112152
    2. ' for' → logprob: -2.005103588104248
    3. '.' → logprob: -2.755103588104248
    4. ':' → logprob: -3.255103588104248
    5. '[' → logprob: -4.005103588104248
    6. '+' → logprob: -4.005103588104248
    7. ',' → logprob: -4.255103588104248
    8. ')' → logprob: -5.005103588104248
    9. '   ' → logprob: -5.380103588104248
    10. ' ' → logprob: -5.380103588104248

Token 20: ' ix' (ID: 44402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.537714421749115
    2. ' for' → logprob: -0.912714421749115
    3. ':' → logprob: -5.16271448135376
    4. '
' → logprob: -6.16271448135376
    5. ' ' → logprob: -6.91271448135376
    6. ':
' → logprob: -7.03771448135376
    7. '```' → logprob: -7.03771448135376
    8. '\n' → logprob: -7.28771448135376
    9. ',' → logprob: -7.28771448135376
    10. '  
' → logprob: -7.41271448135376

Token 21: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4406511187553406
    2. '=' → logprob: -1.8156511783599854
    3. 'n' → logprob: -2.4406511783599854
    4. 's' → logprob: -3.0656511783599854
    5. ' =' → logprob: -3.3156511783599854
    6. ' ' → logprob: -5.315650939941406
    7. 'x' → logprob: -5.565650939941406
    8. 'nd' → logprob: -5.690650939941406
    9. 't' → logprob: -6.190650939941406
    10. '+' → logprob: -6.190650939941406

Token 22: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7761138081550598
    2. ' ' → logprob: -0.7761138081550598
    3. '1' → logprob: -2.901113748550415
    4. ' val' → logprob: -4.276113986968994
    5. '0' → logprob: -5.026113986968994
    6. 'val' → logprob: -5.526113986968994
    7. '10' → logprob: -10.713613510131836
    8. '[val' → logprob: -10.838613510131836
    9. '3' → logprob: -10.901113510131836
    10. '   ' → logprob: -11.401113510131836

Token 23: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.383811891078949
    2. '1' → logprob: -1.3838119506835938
    3. 'val' → logprob: -3.3838119506835938
    4. ' ' → logprob: -4.008811950683594
    5. '0' → logprob: -4.383811950683594
    6. ' val' → logprob: -5.758811950683594
    7. 'int' → logprob: -10.071311950683594
    8. '[val' → logprob: -10.133811950683594
    9. 'len' → logprob: -10.196311950683594
    10. '(val' → logprob: -10.321311950683594

Token 24: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2693883776664734
    2. '   ' → logprob: -2.519388437271118
    3. ',' → logprob: -3.519388437271118
    4. '<|end|>' → logprob: -4.144388198852539
    5. '+
' → logprob: -4.144388198852539
    6. ' while' → logprob: -4.144388198852539
    7. '```' → logprob: -4.269388198852539
    8. ' +' → logprob: -4.269388198852539
    9. ' for' → logprob: -4.519388198852539
    10. ' ' → logprob: -4.644388198852539

Token 25: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1408529132604599
    2. '<|end|>' → logprob: -2.265852928161621
    3. '   ' → logprob: -4.890852928161621
    4. ' +' → logprob: -5.265852928161621
    5. ' ' → logprob: -5.765852928161621
    6. '+
' → logprob: -6.015852928161621
    7. ',' → logprob: -6.515852928161621
    8. '<|end|>' → logprob: -7.015852928161621
    9. '2' → logprob: -7.140852928161621
    10. '
' → logprob: -7.265852928161621

Token 26: ' while' (ID: 2049)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12274879962205887
    2. ' while' → logprob: -3.122748851776123
    3. '
' → logprob: -3.622748851776123
    4. ' +' → logprob: -4.747748851776123
    5. 'while' (adapté à ' while') → logprob: -4.872748851776123
    6. '<|end|>' → logprob: -4.997748851776123
    7. '+
' → logprob: -5.497748851776123
    8. '   ' → logprob: -5.872748851776123
    9. ' ' → logprob: -5.872748851776123
    10. '    
' → logprob: -6.247748851776123

Token 27: ' ix' (ID: 44402)
  Prédit: ' ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ix' → logprob: -0.04665040969848633
    2. ' ' → logprob: -3.6716504096984863
    3. ' (' → logprob: -4.296650409698486
    4. ' val' → logprob: -5.546650409698486
    5. 'ix' → logprob: -6.296650409698486
    6. '(ix' → logprob: -8.421649932861328
    7. '(' → logprob: -8.546649932861328
    8. ' ' → logprob: -9.171649932861328
    9. ' i' → logprob: -10.046649932861328
    10. 'val' → logprob: -10.171649932861328

Token 28: '*' (ID: 9)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014581120572984219
    2. '<=' → logprob: -4.389581203460693
    3. ' ' → logprob: -6.514581203460693
    4. ' <' → logprob: -7.764581203460693
    5. '*' → logprob: -9.514580726623535
    6. '<' → logprob: -10.264580726623535
    7. ' *' → logprob: -10.389580726623535
    8. '+' → logprob: -11.014580726623535
    9. ' ≤' → logprob: -13.139580726623535
    10. '**' → logprob: -14.764580726623535

Token 29: 'ix' (ID: 1128)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.8889580368995667
    2. 'ix' → logprob: -1.3889579772949219
    3. '2' → logprob: -1.5139579772949219
    4. ' <=' → logprob: -3.263957977294922
    5. '<' → logprob: -3.638957977294922
    6. '*' → logprob: -4.013957977294922
    7. 'val' → logprob: -4.388957977294922
    8. ' ' → logprob: -4.888957977294922
    9. ' ix' → logprob: -5.388957977294922
    10. '1' → logprob: -5.513957977294922

Token 30: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.002333547454327345
    2. '<=' → logprob: -6.377333641052246
    3. '<|end|>' → logprob: -8.252333641052246
    4. ' ' → logprob: -8.502333641052246
    5. ' <' → logprob: -8.877333641052246
    6. '<' → logprob: -11.877333641052246
    7. ' ≤' → logprob: -12.627333641052246
    8. ' <=",' → logprob: -12.752333641052246
    9. '<|end|>' → logprob: -12.752333641052246
    10. ' <<=' → logprob: -13.502333641052246

Token 31: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6931562423706055
    2. ' val' → logprob: -0.6931562423706055
    3. '	val' → logprob: -12.318156242370605
    4. ' ' → logprob: -13.318156242370605
    5. ' ' → logprob: -14.193156242370605
    6. '[val' → logprob: -14.193156242370605
    7. '   ' → logprob: -15.318156242370605
    8. 'v' → logprob: -15.568156242370605
    9. '```' → logprob: -15.568156242370605
    10. '(val' → logprob: -15.693156242370605

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01142844557762146
    2. ' and' → logprob: -4.511428356170654
    3. ' :' → logprob: -8.511428833007812
    4. 'and' → logprob: -9.011428833007812
    5. ':
' → logprob: -10.761428833007812
    6. ':**' → logprob: -11.261428833007812
    7. '<|end|>' → logprob: -12.386428833007812
    8. '):' → logprob: -12.636428833007812
    9. '   ' → logprob: -12.636428833007812
    10. ',' → logprob: -13.011428833007812

Token 33: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015131723135709763
    2. ' :' → logprob: -5.015131950378418
    3. '       ' → logprob: -5.515131950378418
    4. '   ' → logprob: -7.140131950378418
    5. ' and' → logprob: -7.140131950378418
    6. '    ' → logprob: -7.390131950378418
    7. '<|end|>' → logprob: -7.390131950378418
    8. '):' → logprob: -8.265131950378418
    9. ':
' → logprob: -8.265131950378418
    10. ',' → logprob: -8.765131950378418

Token 34: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24301853775978088
    2. '<|end|>' → logprob: -2.368018627166748
    3. ':' → logprob: -2.868018627166748
    4. '    ' → logprob: -3.993018627166748
    5. '   ' → logprob: -4.743018627166748
    6. '       ' → logprob: -4.743018627166748
    7. ' :' → logprob: -4.743018627166748
    8. ' if' → logprob: -5.493018627166748
    9. '\' → logprob: -5.993018627166748
    10. '  ' → logprob: -6.368018627166748

Token 35: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.009782418608665466
    2. 'val' → logprob: -4.634782314300537
    3. '(val' → logprob: -11.634782791137695
    4. ' ' → logprob: -12.259782791137695
    5. ' not' → logprob: -12.759782791137695
    6. '[val' → logprob: -13.009782791137695
    7. '	val' → logprob: -13.134782791137695
    8. ' ' → logprob: -13.259782791137695
    9. ' (' → logprob: -13.259782791137695
    10. ',val' → logprob: -14.134782791137695

Token 36: '%' (ID: 4)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.079147107899189
    2. '%' → logprob: -2.5791471004486084
    3. ' ' → logprob: -8.329147338867188
    4. '%i' → logprob: -11.829147338867188
    5. '%x' → logprob: -12.454147338867188
    6. '<|end|>' → logprob: -13.204147338867188
    7. ' ' → logprob: -13.454147338867188
    8. ' %
' → logprob: -14.579147338867188
    9. ' %#' → logprob: -15.579147338867188
    10. '%s' → logprob: -15.829147338867188

Token 37: 'ix' (ID: 1128)
  Prédit: 'ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.0125388503074646
    2. ' ix' → logprob: -4.387538909912109
    3. '_ix' → logprob: -11.26253890991211
    4. '[ix' → logprob: -11.38753890991211
    5. '(ix' → logprob: -13.26253890991211
    6. 'ixi' → logprob: -14.01253890991211
    7. ' ' → logprob: -14.38753890991211
    8. 'ic' → logprob: -14.51253890991211
    9. 'ixes' → logprob: -15.13753890991211
    10. '<|end|>' → logprob: -15.38753890991211

Token 38: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5764105319976807
    2. '==' → logprob: -0.8264105319976807
    3. ' ' → logprob: -8.201410293579102
    4. '=' → logprob: -9.326410293579102
    5. ')==' → logprob: -10.701410293579102
    6. '===' → logprob: -10.826410293579102
    7. '<|end|>' → logprob: -10.826410293579102
    8. '0' → logprob: -10.951410293579102
    9. ' ' → logprob: -11.826410293579102
    10. ']==' → logprob: -12.326410293579102

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00360019039362669
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -17.25360107421875
    4. ' ' → logprob: -17.25360107421875
    5. '  ' → logprob: -18.25360107421875
    6. '۰' → logprob: -18.50360107421875
    7. '00' → logprob: -18.62860107421875
    8. '```' → logprob: -18.62860107421875
    9. '<|end|>' → logprob: -19.25360107421875
    10. '=' → logprob: -19.50360107421875

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0041191233322024345
    2. ' and' → logprob: -5.629118919372559
    3. ' :' → logprob: -7.629118919372559
    4. ':
' → logprob: -11.004118919372559
    5. 'and' → logprob: -11.629118919372559
    6. '       ' → logprob: -13.379118919372559
    7. ':return' → logprob: -13.504118919372559
    8. '):' → logprob: -13.879118919372559
    9. ' or' → logprob: -14.254118919372559
    10. ':**' → logprob: -14.379118919372559

Token 41: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25324976444244385
    2. '           ' → logprob: -2.2532496452331543
    3. '       ' → logprob: -2.8782496452331543
    4. '        ' → logprob: -3.5032496452331543
    5. ' :' → logprob: -4.253249645233154
    6. ' ' → logprob: -5.128249645233154
    7. ' and' → logprob: -5.878249645233154
    8. ',' → logprob: -6.253249645233154
    9. '<|end|>' → logprob: -6.503249645233154
    10. '            ' → logprob: -6.753249645233154

Token 42: ' bag' (ID: 7144)
  Prédit: ' bag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bag' → logprob: -0.5546668767929077
    2. ' if' → logprob: -1.5546668767929077
    3. 'bag' (adapté à ' bag') → logprob: -2.6796669960021973
    4. ' ' → logprob: -3.0546669960021973
    5. '        ' → logprob: -3.0546669960021973
    6. '           ' → logprob: -4.429666996002197
    7. 'if' → logprob: -4.429666996002197
    8. '       ' → logprob: -4.554666996002197
    9. '            ' → logprob: -4.929666996002197
    10. '    ' → logprob: -5.679666996002197

Token 43: ' +=' (ID: 2757)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.6085034608840942
    2. '.append' → logprob: -1.1085034608840942
    3. '.' → logprob: -2.1085033416748047
    4. ' .' → logprob: -5.733503341674805
    5. ' +=' → logprob: -6.858503341674805
    6. '+=' → logprob: -9.858503341674805
    7. '+' → logprob: -11.733503341674805
    8. '+.' → logprob: -12.358503341674805
    9. '.app' → logprob: -13.233503341674805
    10. ' .=' → logprob: -13.358503341674805

Token 44: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.41785329580307007
    2. '[' → logprob: -1.9178533554077148
    3. '[ix' → logprob: -2.042853355407715
    4. '[val' → logprob: -2.792853355407715
    5. '[i' → logprob: -6.917853355407715
    6. '[x' → logprob: -7.292853355407715
    7. '[index' → logprob: -7.667853355407715
    8. '[int' → logprob: -8.042853355407715
    9. '[value' → logprob: -8.417853355407715
    10. ' ' → logprob: -8.667853355407715

Token 45: 'ix' (ID: 1128)
  Prédit: 'ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.055097561329603195
    2. ' ix' → logprob: -2.9300975799560547
    3. '   ' → logprob: -10.305097579956055
    4. 'ixi' → logprob: -10.305097579956055
    5. '(ix' → logprob: -10.305097579956055
    6. ' ' → logprob: -10.430097579956055
    7. '[ix' → logprob: -10.930097579956055
    8. '_ix' → logprob: -11.180097579956055
    9. ' ' → logprob: -11.617597579956055
    10. '```' → logprob: -11.930097579956055

Token 46: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007368206977844238
    2. ']' → logprob: -5.132368087768555
    3. ' ,' → logprob: -6.757368087768555
    4. ',
' → logprob: -9.007368087768555
    5. '           ' → logprob: -9.882368087768555
    6. ',val' → logprob: -10.632368087768555
    7. ' ]' → logprob: -10.882368087768555
    8. '       ' → logprob: -11.007368087768555
    9. ',x' → logprob: -12.007368087768555
    10. '   ' → logprob: -12.507368087768555

Token 47: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1477309912443161
    2. ' if' → logprob: -2.522731065750122
    3. ' ,' → logprob: -4.022730827331543
    4. '           ' → logprob: -4.272730827331543
    5. 'if' → logprob: -4.272730827331543
    6. ',val' → logprob: -5.647730827331543
    7. ']' → logprob: -6.647730827331543
    8. '<|end|>' → logprob: -6.897730827331543
    9. ',
' → logprob: -7.022730827331543
    10. '+' → logprob: -7.022730827331543

Token 48: ' ix' (ID: 44402)
  Prédit: ' ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ix' → logprob: -0.07909170538187027
    2. 'ix' → logprob: -2.579091787338257
    3. '(ix' → logprob: -8.704092025756836
    4. '[ix' → logprob: -11.454092025756836
    5. '_ix' → logprob: -12.579092025756836
    6. ' (' → logprob: -12.704092025756836
    7. ' ' → logprob: -13.079092025756836
    8. 'val' → logprob: -13.079092025756836
    9. ' not' → logprob: -13.079092025756836
    10. '<|end|>' → logprob: -13.204092025756836

Token 49: ' not' (ID: 625)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3839341104030609
    2. ' !=' → logprob: -1.2589341402053833
    3. '*' → logprob: -3.8839340209960938
    4. ' ' → logprob: -5.258934020996094
    5. '<|end|>' → logprob: -5.383934020996094
    6. '>' → logprob: -5.883934020996094
    7. ' not' → logprob: -7.633934020996094
    8. ' >' → logprob: -8.258934020996094
    9. '<|end|>' → logprob: -8.383934020996094
    10. '==' → logprob: -8.758934020996094

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2528572380542755
    2. 'in' → logprob: -1.5028572082519531
    3. '<|end|>' → logprob: -7.877857208251953
    4. ' ' → logprob: -8.627857208251953
    5. '<|end|>' → logprob: -9.627857208251953
    6. ' bag' → logprob: -9.627857208251953
    7. '   ' → logprob: -9.752857208251953
    8. '	in' → logprob: -9.752857208251953
    9. '  ' → logprob: -10.627857208251953
    10. 'bag' → logprob: -10.877857208251953

Token 51: ' bag' (ID: 7144)
  Prédit: ' bag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bag' → logprob: -0.0006452414090745151
    2. 'bag' → logprob: -7.375645160675049
    3. ' ' → logprob: -11.250645637512207
    4. '<|end|>' → logprob: -13.500645637512207
    5. ' bage' → logprob: -13.500645637512207
    6. ' ' → logprob: -14.125645637512207
    7. ' set' → logprob: -14.625645637512207
    8. ' bags' → logprob: -14.750645637512207
    9. '	b' → logprob: -14.750645637512207
    10. '  ' → logprob: -15.875645637512207

Token 52: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.08692372590303421
    2. ' and' → logprob: -3.336923837661743
    3. 'else' → logprob: -3.461923837661743
    4. '<|end|>' → logprob: -4.461923599243164
    5. 'and' → logprob: -6.586923599243164
    6. '           ' → logprob: -6.961923599243164
    7. ' ' → logprob: -7.086923599243164
    8. '<|end|>' → logprob: -7.461923599243164
    9. '       ' → logprob: -8.711923599243164
    10. '+' → logprob: -8.836923599243164

Token 53: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.47431665658950806
    2. '[]' → logprob: -0.9743166565895081
    3. ' []
' → logprob: -9.224316596984863
    4. ' ' → logprob: -9.724316596984863
    5. '[]
' → logprob: -9.849316596984863
    6. '   ' → logprob: -12.349316596984863
    7. ' []

' → logprob: -12.474316596984863
    8. '[' → logprob: -12.599316596984863
    9. '[]

' → logprob: -12.724316596984863
    10. '[]>' → logprob: -13.099316596984863

Token 54: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03282272070646286
    2. ',' → logprob: -4.782822608947754
    3. ' +' → logprob: -4.782822608947754
    4. '+' → logprob: -4.907822608947754
    5. '            
' → logprob: -6.157822608947754
    6. ' and' → logprob: -6.282822608947754
    7. '       ' → logprob: -7.157822608947754
    8. '               ' → logprob: -7.407822608947754
    9. '[' → logprob: -7.657822608947754
    10. '          ' → logprob: -8.157822608947754

Token 55: ' tmp' (ID: 8919)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007945632562041283
    2. '[' → logprob: -5.382945537567139
    3. ',' → logprob: -7.132945537567139
    4. '            
' → logprob: -7.507945537567139
    5. '+' → logprob: -7.757945537567139
    6. '       ' → logprob: -7.882945537567139
    7. '*' → logprob: -8.007946014404297
    8. 'if' → logprob: -8.507946014404297
    9. '+
' → logprob: -9.382946014404297
    10. '[
' → logprob: -9.632946014404297

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08169126510620117
    2. '=' → logprob: -2.581691265106201
    3. '_' → logprob: -6.956691265106201
    4. 's' → logprob: -7.206691265106201
    5. 'div' → logprob: -8.45669174194336
    6. '_div' → logprob: -8.58169174194336
    7. '_val' → logprob: -8.58169174194336
    8. 'val' → logprob: -9.45669174194336
    9. '_list' → logprob: -9.58169174194336
    10. ' ' → logprob: -10.20669174194336

Token 57: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.5760356783866882
    2. 'val' → logprob: -0.8260356783866882
    3. 'int' → logprob: -10.201035499572754
    4. '    ' → logprob: -11.326035499572754
    5. ' ' → logprob: -11.451035499572754
    6. '[val' → logprob: -11.826035499572754
    7. ' int' → logprob: -12.076035499572754
    8. '(val' → logprob: -12.201035499572754
    9. ' ' → logprob: -12.451035499572754
    10. '	val' → logprob: -12.701035499572754

Token 58: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6486236453056335
    2. ' //' → logprob: -0.8986236453056335
    3. '/' → logprob: -2.8986237049102783
    4. ' /' → logprob: -4.273623466491699
    5. ' ' → logprob: -7.273623466491699
    6. ' ' → logprob: -8.8986234664917
    7. '	' → logprob: -10.2736234664917
    8. '```' → logprob: -10.3986234664917
    9. '<|end|>' → logprob: -10.6486234664917
    10. '/******/' → logprob: -11.0236234664917

Token 59: 'ix' (ID: 1128)
  Prédit: 'ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -7.803360495017841e-05
    2. ' ix' → logprob: -9.500078201293945
    3. '[ix' → logprob: -13.625078201293945
    4. '_ix' → logprob: -14.375078201293945
    5. '(ix' → logprob: -14.625078201293945
    6. ' ' → logprob: -14.875078201293945
    7. 'ixi' → logprob: -15.000078201293945
    8. '  ' → logprob: -15.875078201293945
    9. '   ' → logprob: -16.625078201293945
    10. 'ixo' → logprob: -17.625078201293945

Token 60: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8648579120635986
    2. 'if' (adapté à ' if') → logprob: -1.2398579120635986
    3. ' if' → logprob: -1.2398579120635986
    4. '   ' → logprob: -11.11485767364502
    5. '       ' → logprob: -11.48985767364502
    6. '```' → logprob: -12.86485767364502
    7. '          ' → logprob: -13.11485767364502
    8. ' ' → logprob: -13.36485767364502
    9. '            
' → logprob: -13.86485767364502
    10. '            ' → logprob: -13.86485767364502

Token 63: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.01737327314913273
    2. ' ix' → logprob: -4.517373085021973
    3. 'tmp' → logprob: -5.142373085021973
    4. '(tmp' → logprob: -8.142373085021973
    5. 'ix' → logprob: -9.267373085021973
    6. '/tmp' → logprob: -11.142373085021973
    7. ' ' → logprob: -11.267373085021973
    8. '	tmp' → logprob: -11.517373085021973
    9. ' (' → logprob: -11.642373085021973
    10. '[tmp' → logprob: -12.142373085021973

Token 64: ' not' (ID: 625)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4745352566242218
    2. '!=' → logprob: -0.9745352268218994
    3. ' not' → logprob: -7.7245354652404785
    4. 'not' → logprob: -12.09953498840332
    5. '!==' → logprob: -12.34953498840332
    6. '()!=' → logprob: -13.72453498840332
    7. ' ' → logprob: -13.97453498840332
    8. ']!=' → logprob: -14.09953498840332
    9. '!=(' → logprob: -14.09953498840332
    10. '!=-' → logprob: -14.84953498840332

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012558624148368835
    2. 'in' → logprob: -4.387558460235596
    3. '<|end|>' → logprob: -10.137558937072754
    4. ' ' → logprob: -11.887558937072754
    5. '<|end|>' → logprob: -14.512558937072754
    6. '=' → logprob: -15.012558937072754
    7. '  ' → logprob: -15.012558937072754
    8. ' to' → logprob: -15.262558937072754
    9. ' is' → logprob: -16.012557983398438
    10. '.' → logprob: -16.012557983398438

Token 66: ' bag' (ID: 7144)
  Prédit: ' bag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bag' → logprob: -0.1002914160490036
    2. 'bag' → logprob: -2.3502914905548096
    3. ' ' → logprob: -9.72529125213623
    4. '<|end|>' → logprob: -11.35029125213623
    5. 'Bag' → logprob: -13.35029125213623
    6. 'bags' → logprob: -13.41279125213623
    7. 'b' → logprob: -13.53779125213623
    8. '   ' → logprob: -13.66279125213623
    9. ' bags' → logprob: -13.72529125213623
    10. ' ' → logprob: -13.97529125213623

Token 67: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0018141677137464285
    2. 'and' → logprob: -6.501814365386963
    3. '           ' → logprob: -8.376813888549805
    4. ':' → logprob: -9.876813888549805
    5. '               ' → logprob: -11.501813888549805
    6. '<|end|>' → logprob: -12.251813888549805
    7. '            ' → logprob: -12.376813888549805
    8. ' ' → logprob: -12.751813888549805
    9. ':
' → logprob: -13.501813888549805
    10. '   ' → logprob: -13.751813888549805

Token 68: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.958193302154541
    2. '               ' → logprob: -0.958193302154541
    3. '           ' → logprob: -1.958193302154541
    4. ' and' → logprob: -2.708193302154541
    5. '<|end|>' → logprob: -4.083193302154541
    6. ':
' → logprob: -6.208193302154541
    7. ',' → logprob: -6.708193302154541
    8. '       ' → logprob: -6.833193302154541
    9. '            ' → logprob: -7.708193302154541
    10. '              ' → logprob: -7.958193302154541

Token 69: ' bag' (ID: 7144)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7888709902763367
    2. ' bag' → logprob: -0.7888709902763367
    3. '                ' → logprob: -2.6638710498809814
    4. '               ' → logprob: -4.038870811462402
    5. '                    ' → logprob: -6.788870811462402
    6. 'bag' (adapté à ' bag') → logprob: -6.913870811462402
    7. '            ' → logprob: -8.163870811462402
    8. '                    
' → logprob: -8.288870811462402
    9. '           ' → logprob: -8.413870811462402
    10. ' ' → logprob: -8.413870811462402

Token 70: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.014155282638967037
    2. '+=' → logprob: -4.889155387878418
    3. '.append' → logprob: -5.139155387878418
    4. '+' → logprob: -8.264155387878418
    5. '.extend' → logprob: -8.264155387878418
    6. ' +' → logprob: -8.889155387878418
    7. ' .' → logprob: -12.264155387878418
    8. '.' → logprob: -12.389155387878418
    9. '.add' → logprob: -14.389155387878418
    10. '+="' → logprob: -14.514155387878418

Token 71: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2205560803413391
    2. '[tmp' → logprob: -1.7205560207366943
    3. '[' → logprob: -3.9705560207366943
    4. '[temp' → logprob: -9.595556259155273
    5. '[val' → logprob: -11.470556259155273
    6. ' ' → logprob: -12.220556259155273
    7. '[t' → logprob: -12.470556259155273
    8. '[token' → logprob: -12.470556259155273
    9. '[top' → logprob: -13.470556259155273
    10. '[next' → logprob: -14.345556259155273

Token 72: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.5231651067733765
    2. ' tmp' → logprob: -0.8981651067733765
    3. '(tmp' → logprob: -11.023164749145508
    4. '	tmp' → logprob: -12.023164749145508
    5. '   ' → logprob: -12.523164749145508
    6. '/tmp' → logprob: -12.523164749145508
    7. '[tmp' → logprob: -12.648164749145508
    8. '$tmp' → logprob: -13.148164749145508
    9. ' ' → logprob: -13.273164749145508
    10. ',tmp' → logprob: -13.648164749145508

Token 73: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018508200300857425
    2. ' ]' → logprob: -6.876850605010986
    3. ']
' → logprob: -7.126850605010986
    4. ']

' → logprob: -11.751851081848145
    5. ']
' → logprob: -12.501851081848145
    6. ' ]
' → logprob: -13.126851081848145
    7. ' ' → logprob: -15.376851081848145
    8. '           ' → logprob: -16.001850128173828
    9. '       ' → logprob: -16.251850128173828
    10. ',' → logprob: -16.626850128173828

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5950459241867065
    2. '
' → logprob: -1.8450459241867065
    3. '        
' → logprob: -1.9700459241867065
    4. '    
' → logprob: -2.345046043395996
    5. '   ' → logprob: -3.845046043395996
    6. ' 
' → logprob: -4.470046043395996
    7. '  
' → logprob: -4.845046043395996
    8. '   
' → logprob: -5.345046043395996
    9. '    ' → logprob: -6.845046043395996
    10. '	' → logprob: -6.845046043395996

Token 75: ' ix' (ID: 44402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10183190554380417
    2. '   ' → logprob: -3.3518319129943848
    3. '        
' → logprob: -3.7268319129943848
    4. '    
' → logprob: -4.226831912994385
    5. ' 
' → logprob: -5.601831912994385
    6. ' ' → logprob: -5.726831912994385
    7. '	' → logprob: -5.851831912994385
    8. '    ' → logprob: -6.101831912994385
    9. '\x' → logprob: -6.101831912994385
    10. '
' → logprob: -6.226831912994385

Token 76: '+=' (ID: 18287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18287691473960876
    2. ' +=' → logprob: -2.1828768253326416
    3. '+=' → logprob: -2.9328768253326416
    4. ' +' → logprob: -6.932877063751221
    5. ' ' → logprob: -9.307876586914062
    6. '++' → logprob: -9.807876586914062
    7. '=' → logprob: -10.432876586914062
    8. '<|end|>' → logprob: -11.682876586914062
    9. '1' → logprob: -12.807876586914062
    10. '```' → logprob: -13.432876586914062

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.375431060791016
    4. '```' → logprob: -17.000431060791016
    5. '+' → logprob: -17.750431060791016
    6. ' ' → logprob: -17.875431060791016
    7. '2' → logprob: -18.312931060791016
    8. '    ' → logprob: -18.375431060791016
    9. '  ' → logprob: -18.562931060791016
    10. '１' → logprob: -19.125431060791016

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21344736218452454
    2. '<|end|>' → logprob: -2.213447332382202
    3. ' ' → logprob: -3.463447332382202
    4. '
' → logprob: -3.588447332382202
    5. ',' → logprob: -5.713447570800781
    6. ' return' → logprob: -5.963447570800781
    7. '    
' → logprob: -6.088447570800781
    8. ':' → logprob: -6.338447570800781
    9. ')' → logprob: -6.338447570800781
    10. '```' → logprob: -6.463447570800781

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038715696427971125
    2. 'return' → logprob: -6.128871440887451
    3. ' return' → logprob: -6.628871440887451
    4. ' ' → logprob: -8.75387191772461
    5. '    
' → logprob: -9.37887191772461
    6. ',' → logprob: -10.75387191772461
    7. '<|end|>' → logprob: -10.75387191772461
    8. '```' → logprob: -11.25387191772461
    9. ':return' → logprob: -11.25387191772461
    10. '  ' → logprob: -11.50387191772461

Token 80: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6502304077148438
    2. ' ' → logprob: -1.5252304077148438
    3. ' return' → logprob: -1.7752304077148438
    4. 'return' (adapté à ' return') → logprob: -2.5252304077148438
    5. 'r' → logprob: -6.150230407714844
    6. '  ' → logprob: -6.275230407714844
    7. ',' → logprob: -6.650230407714844
    8. ')' → logprob: -6.650230407714844
    9. '    ' → logprob: -7.025230407714844
    10. '    
' → logprob: -7.275230407714844

Token 81: ' bag' (ID: 7144)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.39903175830841064
    2. 'bag' → logprob: -1.2740317583084106
    3. ' sorted' → logprob: -3.274031639099121
    4. ' bag' → logprob: -4.524031639099121
    5. 'sort' → logprob: -9.399031639099121
    6. ' ' → logprob: -9.461531639099121
    7. '[' → logprob: -9.524031639099121
    8. '(sorted' → logprob: -9.649031639099121
    9. 'tuple' → logprob: -9.836531639099121
    10. 'b' → logprob: -10.211531639099121

Token 82: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: 'BOX' (ID: 43062)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.712871253490448
    2. '.' → logprob: -0.962871253490448
    3. '<|end|>' → logprob: -3.3378713130950928
    4. '
' → logprob: -3.5878713130950928
    5. '[' → logprob: -3.8378713130950928
    6. '_sorted' → logprob: -4.712871074676514
    7. ')' → logprob: -4.962871074676514
    8. '```' → logprob: -5.462871074676514
    9. '\n' → logprob: -5.712871074676514
    10. '#' → logprob: -6.337871074676514

Token 84: '={}
' (ID: 146130)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10260634869337082
    2. '=' → logprob: -2.8526062965393066
    3. '.' → logprob: -4.977606296539307
    4. '=[]' → logprob: -4.977606296539307
    5. 'ES' → logprob: -5.227606296539307
    6. 'S' → logprob: -5.227606296539307
    7. '_SIZE' → logprob: -5.977606296539307
    8. '[' → logprob: -6.102606296539307
    9. '[:]' → logprob: -6.352606296539307
    10. 's' → logprob: -6.352606296539307

Token 85: 'zap' (ID: 141090)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0834769681096077
    2. 'for' → logprob: -2.583477020263672
    3. 'BOX' → logprob: -6.083477020263672
    4. 'keys' → logprob: -7.833477020263672
    5. 'box' → logprob: -8.208477020263672
    6. 'div' → logprob: -8.208477020263672
    7. 'result' → logprob: -8.458477020263672
    8. 'val' → logprob: -8.708477020263672
    9. 'count' → logprob: -8.833477020263672
    10. 'key' → logprob: -9.583477020263672

Token 86: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5383992195129395
    2. ' =' → logprob: -1.6633992195129395
    3. '=[]' → logprob: -2.0383992195129395
    4. '={}' → logprob: -3.9133992195129395
    5. '_keys' → logprob: -4.1633992195129395
    6. 'keys' → logprob: -4.6633992195129395
    7. '(' → logprob: -5.0383992195129395
    8. 'BOX' → logprob: -5.1633992195129395
    9. '={' → logprob: -5.4133992195129395
    10. '=[' → logprob: -5.6633992195129395

Token 87: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.16390053927898407
    2. '(' → logprob: -2.03890061378479
    3. '()' → logprob: -3.91390061378479
    4. 'input' → logprob: -7.538900375366211
    5. '('' → logprob: -8.413900375366211
    6. '(
' → logprob: -9.288900375366211
    7. '(raw' → logprob: -9.913900375366211
    8. '<|end|>' → logprob: -10.163900375366211
    9. '("' → logprob: -10.663900375366211
    10. '(box' → logprob: -11.038900375366211

Token 88: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21270781755447388
    2. '())' → logprob: -1.837707757949829
    3. '(' → logprob: -3.462707757949829
    4. '('' → logprob: -7.587707996368408
    5. '("("' → logprob: -8.96270751953125
    6. '()>' → logprob: -9.33770751953125
    7. '();)' → logprob: -9.83770751953125
    8. '().' → logprob: -10.33770751953125
    9. '());' → logprob: -10.46270751953125
    10. ')' → logprob: -10.46270751953125

Token 89: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014238066505640745
    2. ' for' → logprob: -7.3764238357543945
    3. 'while' → logprob: -7.8764238357543945
    4. '
' → logprob: -7.8764238357543945
    5. '<|end|>' → logprob: -11.626423835754395
    6. 'val' → logprob: -11.751423835754395
    7. '\n' → logprob: -12.751423835754395
    8. 'def' → logprob: -13.001423835754395
    9. '```' → logprob: -13.376423835754395
    10. '[' → logprob: -13.501423835754395

Token 90: ' ele' (ID: 4888)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.05951699987053871
    2. '_' → logprob: -2.9345169067382812
    3. ' i' → logprob: -5.434516906738281
    4. ' ' → logprob: -8.309516906738281
    5. ' ' → logprob: -12.059516906738281
    6. '_i' → logprob: -12.184516906738281
    7. 'i' → logprob: -13.434516906738281
    8. ' _
' → logprob: -14.434516906738281
    9. ' x' → logprob: -14.934516906738281
    10. '  ' → logprob: -15.559516906738281

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01355910487473011
    2. 'in' → logprob: -4.888559341430664
    3. 'm' → logprob: -5.263559341430664
    4. ' ' → logprob: -8.388559341430664
    5. 'nt' → logprob: -8.763559341430664
    6. 'r' → logprob: -9.388559341430664
    7. '   ' → logprob: -9.638559341430664
    8. 'ment' → logprob: -9.763559341430664
    9. 'n' → logprob: -10.388559341430664
    10. 's' → logprob: -10.388559341430664

Token 92: ' gather' (ID: 13660)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.09058187156915665
    2. 'range' → logprob: -2.4655818939208984
    3. ' input' → logprob: -7.965581893920898
    4. ' map' → logprob: -8.215581893920898
    5. ' box' → logprob: -8.340581893920898
    6. ' zap' → logprob: -8.465581893920898
    7. 'input' → logprob: -9.215581893920898
    8. ' ' → logprob: -9.340581893920898
    9. 'map' → logprob: -9.590581893920898
    10. ' gather' → logprob: -9.840581893920898

Token 93: 'Div' (ID: 13521)
  Prédit: 'Div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Div' → logprob: -2.2200749754119897e-06
    2. 'div' → logprob: -14.000001907348633
    3. 'Dis' → logprob: -14.750001907348633
    4. 'Box' → logprob: -15.125001907348633
    5. 'Boxes' → logprob: -15.500001907348633
    6. '<div' → logprob: -15.750001907348633
    7. 'Val' → logprob: -15.875001907348633
    8. '_div' → logprob: -16.500001907348633
    9. '(' → logprob: -17.625001907348633
    10. 'DIV' → logprob: -18.000001907348633

Token 94: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.7848862373502925e-05
    2. ''s' → logprob: -11.250027656555176
    3. '(s' → logprob: -12.125027656555176
    4. '(' → logprob: -12.875027656555176
    5. 'ivs' → logprob: -13.375027656555176
    6. '```' → logprob: -13.500027656555176
    7. '`s' → logprob: -13.875027656555176
    8. 'is' → logprob: -14.625027656555176
    9. 'z' → logprob: -14.875027656555176
    10. 'zs' → logprob: -15.000027656555176

Token 95: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.0015328321605920792
    2. '(' → logprob: -6.501533031463623
    3. '(int' → logprob: -11.501532554626465
    4. ' (' → logprob: -12.126532554626465
    5. '(val' → logprob: -12.501532554626465
    6. '((' → logprob: -13.251532554626465
    7. '(zip' → logprob: -13.751532554626465
    8. '(Z' → logprob: -13.876532554626465
    9. 'zap' → logprob: -13.876532554626465
    10. '(x' → logprob: -14.001532554626465

Token 96: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -5.438573680294212e-06
    2. 'a' → logprob: -12.250005722045898
    3. '	ap' → logprob: -14.875005722045898
    4. ' ap' → logprob: -16.3750057220459
    5. 'ап' → logprob: -16.6250057220459
    6. '   ' → logprob: -17.1250057220459
    7. '(ap' → logprob: -17.5000057220459
    8. '```' → logprob: -17.5000057220459
    9. 'zap' → logprob: -17.6250057220459
    10. '_ap' → logprob: -19.7500057220459

Token 97: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020709214732050896
    2. ')' → logprob: -6.252070903778076
    3. ' ):' → logprob: -9.002071380615234
    4. ')):' → logprob: -12.002071380615234
    5. ':' → logprob: -12.502071380615234
    6. '():' → logprob: -12.877071380615234
    7. '):
' → logprob: -12.877071380615234
    8. '[' → logprob: -13.877071380615234
    9. ']):' → logprob: -14.752071380615234
    10. '[]):' → logprob: -14.752071380615234

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009931529639288783
    2. '2' → logprob: -7.500993251800537
    3. ' ' → logprob: -8.125992774963379
    4. '3' → logprob: -9.375992774963379
    5. '5' → logprob: -10.750992774963379
    6. '4' → logprob: -11.250992774963379
    7. '10' → logprob: -12.250992774963379
    8. ')' → logprob: -12.750992774963379
    9. '7' → logprob: -13.000992774963379
    10. '100' → logprob: -13.250992774963379

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028235390782356262
    2. ')' → logprob: -5.877823352813721
    3. ' ):' → logprob: -11.377823829650879
    4. ':' → logprob: -12.752823829650879
    5. '):
' → logprob: -12.877823829650879
    6. ')):' → logprob: -15.127823829650879
    7. ')+' → logprob: -15.377823829650879
    8. '():' → logprob: -15.502823829650879
    9. ')>' → logprob: -15.502823829650879
    10. ')：' → logprob: -15.877823829650879

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004500023555010557
    2. '<|end|>' → logprob: -6.754499912261963
    3. '	box' → logprob: -7.004499912261963
    4. '	print' → logprob: -7.129499912261963
    5. '	if' → logprob: -8.004500389099121
    6. '	' → logprob: -8.129500389099121
    7. ' BOX' → logprob: -9.129500389099121
    8. '\t' → logprob: -9.629500389099121
    9. '	s' → logprob: -9.629500389099121
    10. '       ' → logprob: -9.629500389099121

Token 101: ' BOX' (ID: 97792)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2832742929458618
    2. ' BOX' → logprob: -2.0332741737365723
    3. ' if' → logprob: -2.6582741737365723
    4. ' for' → logprob: -3.7832741737365723
    5. ' print' → logprob: -4.158274173736572
    6. 'BOX' (adapté à ' BOX') → logprob: -6.158274173736572
    7. '    ' → logprob: -6.283274173736572
    8. ' box' → logprob: -7.033274173736572
    9. 'print' → logprob: -8.22077465057373
    10. ' s' → logprob: -8.34577465057373

Token 102: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008760893833823502
    2. '.setdefault' → logprob: -7.875875949859619
    3. ' +=' → logprob: -8.375876426696777
    4. '[e' → logprob: -9.375876426696777
    5. ' [' → logprob: -9.750876426696777
    6. '+=' → logprob: -10.250876426696777
    7. '[val' → logprob: -10.875876426696777
    8. '```' → logprob: -11.125876426696777
    9. '[in' → logprob: -11.875876426696777
    10. '[arr' → logprob: -12.125876426696777

Token 103: 'ele' (ID: 5449)
  Prédit: 'ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ele' → logprob: -0.0006603728979825974
    2. ' ele' → logprob: -7.375660419464111
    3. '(ele' → logprob: -10.625659942626953
    4. 'str' → logprob: -11.875659942626953
    5. 'elect' → logprob: -15.000659942626953
    6. '   ' → logprob: -15.125659942626953
    7. '-ele' → logprob: -15.125659942626953
    8. '_ele' → logprob: -15.250659942626953
    9. ' str' → logprob: -15.750659942626953
    10. ' ' → logprob: -15.750659942626953

Token 104: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5763774514198303
    2. ']=' → logprob: -0.8263774514198303
    3. ']+=' → logprob: -7.9513773918151855
    4. ' ]' → logprob: -9.951377868652344
    5. '=' → logprob: -10.826377868652344
    6. ']=(' → logprob: -11.201377868652344
    7. ']={' → logprob: -12.826377868652344
    8. ' =' → logprob: -14.951377868652344
    9. ']+' → logprob: -15.201377868652344
    10. ']='' → logprob: -15.451377868652344

Token 105: 'True' (ID: 4710)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0638558864593506
    2. 'True' → logprob: -1.5638558864593506
    3. '1' → logprob: -1.8138558864593506
    4. 'zap' → logprob: -2.5638558864593506
    5. 'BOX' → logprob: -2.8138558864593506
    6. '[]' → logprob: -3.0638558864593506
    7. 'False' → logprob: -3.0638558864593506
    8. 'ele' → logprob: -4.06385612487793
    9. 'float' → logprob: -5.06385612487793
    10. '(' → logprob: -5.31385612487793

Token 106: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010139456950128078
    2. ' for' → logprob: -5.260139465332031
    3. 'f' → logprob: -6.010139465332031
    4. 'n' → logprob: -7.510139465332031
    5. 'a' → logprob: -7.760139465332031
    6. '```' → logprob: -8.385139465332031
    7. 'i' → logprob: -8.635139465332031
    8. '\n' → logprob: -8.885139465332031
    9. '
' → logprob: -9.135139465332031
    10. 'while' → logprob: -9.510139465332031

Token 108: ' ele' (ID: 4888)
  Prédit: ' ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ele' → logprob: -0.5929515957832336
    2. ' i' → logprob: -1.4679515361785889
    3. ' key' → logprob: -2.717951536178589
    4. ' val' → logprob: -3.592951536178589
    5. ' x' → logprob: -3.592951536178589
    6. ' num' → logprob: -4.092951774597168
    7. 'ele' → logprob: -4.092951774597168
    8. 'i' → logprob: -4.342951774597168
    9. ' box' → logprob: -4.717951774597168
    10. ' ix' → logprob: -5.092951774597168

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005952498875558376
    2. 'in' → logprob: -5.13095235824585
    3. ' ' → logprob: -11.880952835083008
    4. '   ' → logprob: -12.505952835083008
    5. ',' → logprob: -12.630952835083008
    6. '  ' → logprob: -12.630952835083008
    7. '	in' → logprob: -13.818452835083008
    8. ' not' → logprob: -14.255952835083008
    9. 'range' → logprob: -14.318452835083008
    10. 'not' → logprob: -14.568452835083008

Token 110: ' gather' (ID: 13660)
  Prédit: ' gather'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gather' → logprob: -0.19029483199119568
    2. 'g' → logprob: -2.9402947425842285
    3. ' BOX' → logprob: -2.9402947425842285
    4. 'BOX' → logprob: -3.0652947425842285
    5. ' range' → logprob: -4.5652947425842285
    6. ' list' → logprob: -5.0652947425842285
    7. 'range' → logprob: -6.6902947425842285
    8. 'list' → logprob: -6.8152947425842285
    9. ' box' → logprob: -7.5652947425842285
    10. ' sorted' → logprob: -8.190295219421387

Token 111: 'Div' (ID: 13521)
  Prédit: 'Div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Div' → logprob: -4.246537173457909e-06
    2. 'Box' → logprob: -12.875003814697266
    3. 'Boxes' → logprob: -14.000003814697266
    4. 'Dis' → logprob: -15.125003814697266
    5. 'div' → logprob: -15.625003814697266
    6. 'BOX' → logprob: -16.125003814697266
    7. ' Div' → logprob: -16.625003814697266
    8. '   ' → logprob: -17.000003814697266
    9. 'Dict' → logprob: -17.500003814697266
    10. 'DIV' → logprob: -17.875003814697266

Token 112: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009705807082355022
    2. 'ivs' → logprob: -5.134706020355225
    3. 'BOX' → logprob: -6.509706020355225
    4. 'iv' → logprob: -6.634706020355225
    5. 'Div' → logprob: -8.134705543518066
    6. 'Box' → logprob: -8.384705543518066
    7. 'z' → logprob: -8.884705543518066
    8. ' BOX' → logprob: -9.759705543518066
    9. 'is' → logprob: -10.134705543518066
    10. '(' → logprob: -10.384705543518066

Token 113: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.00011892046313732862
    2. '(' → logprob: -9.12511920928955
    3. '(box' → logprob: -12.62511920928955
    4. '((' → logprob: -12.87511920928955
    5. 'z' → logprob: -14.00011920928955
    6. '(
' → logprob: -14.50011920928955
    7. ' (' → logprob: -14.50011920928955
    8. 'zap' → logprob: -14.62511920928955
    9. '(Z' → logprob: -15.00011920928955
    10. '(x' → logprob: -15.37511920928955

Token 114: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -3.4121114822482923e-06
    2. 'ап' → logprob: -13.750003814697266
    3. 'zap' → logprob: -13.875003814697266
    4. 'p' → logprob: -15.125003814697266
    5. '	ap' → logprob: -15.250003814697266
    6. '-' → logprob: -15.750003814697266
    7. 'ip' → logprob: -15.875003814697266
    8. '_ap' → logprob: -16.125003814697266
    9. '+' → logprob: -16.500003814697266
    10. ')' → logprob: -16.500003814697266

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014410760253667831
    2. '+' → logprob: -4.514410972595215
    3. '):
' → logprob: -5.764410972595215
    4. '-' → logprob: -9.014410972595215
    5. '   ' → logprob: -11.014410972595215
    6. ' ):' → logprob: -11.264410972595215
    7. ':' → logprob: -11.264410972595215
    8. ')' → logprob: -11.389410972595215
    9. '):

' → logprob: -11.639410972595215
    10. ''):' → logprob: -12.139410972595215

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001322639436693862
    2. ' if' → logprob: -9.12513256072998
    3. 'if' → logprob: -11.25013256072998
    4. '	if' → logprob: -12.62513256072998
    5. '```' → logprob: -13.87513256072998
    6. '   ' → logprob: -14.00013256072998
    7. 'print' → logprob: -14.12513256072998
    8. '       ' → logprob: -14.50013256072998
    9. '[' → logprob: -14.62513256072998
    10. '    
' → logprob: -14.75013256072998

Token 117: ' v' (ID: 323)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6963763236999512
    2. '   ' → logprob: -1.0713763236999512
    3. 'BOX' → logprob: -2.071376323699951
    4. ' if' → logprob: -3.946376323699951
    5. 'print' → logprob: -4.696376323699951
    6. ' BOX' → logprob: -5.696376323699951
    7. 'for' → logprob: -7.571376323699951
    8. '       ' → logprob: -8.57137680053711
    9. ' print' → logprob: -9.44637680053711
    10. ' ' → logprob: -9.69637680053711

Token 118: '=' (ID: 28)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0009365935111418366
    2. 'if' → logprob: -7.500936508178711
    3. '   ' → logprob: -9.000936508178711
    4. 'AL' → logprob: -9.375936508178711
    5. '=' → logprob: -9.875936508178711
    6. 'a' → logprob: -10.375936508178711
    7. ' if' → logprob: -11.125936508178711
    8. ' =' → logprob: -11.250936508178711
    9. 'alue' → logprob: -11.625936508178711
    10. ' ' → logprob: -12.000936508178711

Token 119: 'zap' (ID: 141090)
  Prédit: 'BOX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BOX' → logprob: -0.3736141324043274
    2. 'ele' → logprob: -1.7486140727996826
    3. ' BOX' → logprob: -2.1236140727996826
    4. ' ele' → logprob: -4.248614311218262
    5. 'ELE' → logprob: -7.873614311218262
    6. '   ' → logprob: -8.123614311218262
    7. 'box' → logprob: -8.123614311218262
    8. '1' → logprob: -8.123614311218262
    9. 'zap' → logprob: -8.123614311218262
    10. '(ele' → logprob: -8.123614311218262

Token 120: '
' (ID: 198)
  Prédit: '-ele'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-ele' → logprob: -0.2738926112651825
    2. '%' → logprob: -2.398892641067505
    3. '-' → logprob: -2.398892641067505
    4. ' -' → logprob: -2.898892641067505
    5. ' %' → logprob: -6.398892402648926
    6. '//' → logprob: -7.898892402648926
    7. '%-' → logprob: -7.898892402648926
    8. '-val' → logprob: -9.148892402648926
    9. '-elect' → logprob: -9.523892402648926
    10. '-box' → logprob: -9.648892402648926

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005953687243163586
    2. ' if' → logprob: -5.505953788757324
    3. 'if' → logprob: -6.505953788757324
    4. '-' → logprob: -8.880953788757324
    5. ' for' → logprob: -9.755953788757324
    6. '	if' → logprob: -10.380953788757324
    7. 'for' → logprob: -10.380953788757324
    8. '       ' → logprob: -10.630953788757324
    9. '    
' → logprob: -10.880953788757324
    10. ' -' → logprob: -11.505953788757324

Token 122: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1730562299489975
    2. '   ' → logprob: -2.173056125640869
    3. '//' → logprob: -3.923056125640869
    4. 'for' → logprob: -5.048056125640869
    5. ' while' → logprob: -5.048056125640869
    6. 'if' (adapté à ' if') → logprob: -5.298056125640869
    7. '%' → logprob: -5.548056125640869
    8. '-' → logprob: -6.673056125640869
    9. 'v' → logprob: -7.298056125640869
    10. '+' → logprob: -7.923056125640869

Token 123: ' ele' (ID: 4888)
  Prédit: ' ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ele' → logprob: -0.0835513174533844
    2. 'ele' → logprob: -2.9585514068603516
    3. ' v' → logprob: -3.9585514068603516
    4. ' BOX' → logprob: -5.458551406860352
    5. 'v' → logprob: -6.333551406860352
    6. 'BOX' → logprob: -6.833551406860352
    7. '(ele' → logprob: -7.083551406860352
    8. ' not' → logprob: -7.208551406860352
    9. ' (' → logprob: -8.458551406860352
    10. '(v' → logprob: -9.708551406860352

Token 124: '==' (ID: 560)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -1.0881723165512085
    2. '%' → logprob: -1.3381723165512085
    3. '==' → logprob: -1.8381723165512085
    4. ' !=' → logprob: -1.9631723165512085
    5. ' ==' → logprob: -2.838172435760498
    6. ' %' → logprob: -3.838172435760498
    7. '<=' → logprob: -4.713172435760498
    8. '>' → logprob: -5.588172435760498
    9. ' <=' → logprob: -5.588172435760498
    10. '>=' → logprob: -7.213172435760498

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.828106164932251
    2. '0' → logprob: -0.953106164932251
    3. 'zap' → logprob: -2.203106164932251
    4. 'v' → logprob: -3.078106164932251
    5. ' ' → logprob: -4.453105926513672
    6. ' zap' → logprob: -5.578105926513672
    7. 'z' → logprob: -6.078105926513672
    8. 'val' → logprob: -6.953105926513672
    9. ' v' → logprob: -7.078105926513672
    10. 'ele' → logprob: -8.140605926513672

Token 126: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26776495575904846
    2. ':
' → logprob: -1.517764925956726
    3. ' or' → logprob: -4.892765045166016
    4. '       ' → logprob: -5.142765045166016
    5. ':return' → logprob: -7.017765045166016
    6. '   ' → logprob: -7.767765045166016
    7. ' continue' → logprob: -8.142765045166016
    8. ' and' → logprob: -8.267765045166016
    9. 'continue' → logprob: -8.517765045166016
    10. '	continue' → logprob: -9.017765045166016

Token 127: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011476418934762478
    2. ' continue' → logprob: -4.886476516723633
    3. 'continue' → logprob: -5.636476516723633
    4. '	continue' → logprob: -9.261476516723633
    5. '   ' → logprob: -9.511476516723633
    6. '
' → logprob: -10.761476516723633
    7. ':
' → logprob: -11.261476516723633
    8. '           ' → logprob: -11.636476516723633
    9. '      ' → logprob: -11.761476516723633
    10. '	   ' → logprob: -11.886476516723633

Token 128: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005296485032886267
    2. '    
' → logprob: -5.63029670715332
    3. '
' → logprob: -6.50529670715332
    4. '       ' → logprob: -10.00529670715332
    5. '  
' → logprob: -10.38029670715332
    6. '   
' → logprob: -10.38029670715332
    7. '        
' → logprob: -10.75529670715332
    8. 'v' → logprob: -11.00529670715332
    9. '<|end|>' → logprob: -11.13029670715332
    10. '  ' → logprob: -11.63029670715332

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033134082332253456
    2. ' for' → logprob: -6.8783135414123535
    3. 'v' → logprob: -7.0033135414123535
    4. 'for' → logprob: -7.1283135414123535
    5. 'if' → logprob: -8.628313064575195
    6. '    
' → logprob: -9.003313064575195
    7. ' v' → logprob: -9.253313064575195
    8. '       ' → logprob: -10.128313064575195
    9. ' if' → logprob: -10.128313064575195
    10. '
' → logprob: -10.628313064575195

Token 130: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2701053023338318
    2. 'while' (adapté à ' while') → logprob: -1.7701053619384766
    3. ' while' → logprob: -2.8951053619384766
    4. 'if' → logprob: -5.020105361938477
    5. 'v' → logprob: -6.020105361938477
    6. ' if' → logprob: -7.395105361938477
    7. '    
' → logprob: -7.520105361938477
    8. '
' → logprob: -8.145105361938477
    9. 'for' → logprob: -8.395105361938477
    10. ' v' → logprob: -9.395105361938477

Token 131: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1432371586561203
    2. ' v' → logprob: -2.0182371139526367
    3. '(v' → logprob: -7.518237113952637
    4. ' (' → logprob: -11.643237113952637
    5. 'True' → logprob: -12.643237113952637
    6. '	v' → logprob: -13.393237113952637
    7. '(' → logprob: -13.768237113952637
    8. 'z' → logprob: -14.018237113952637
    9. 'zap' → logprob: -14.268237113952637
    10. ' True' → logprob: -14.518237113952637

Token 132: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01638694293797016
    2. ' %' → logprob: -4.141386985778809
    3. '%e' → logprob: -8.016386985778809
    4. '%E' → logprob: -11.266386985778809
    5. '>=' → logprob: -12.641386985778809
    6. '//' → logprob: -13.516386985778809
    7. '%=' → logprob: -13.766386985778809
    8. '%i' → logprob: -13.766386985778809
    9. '%s' → logprob: -13.891386985778809
    10. ' >=' → logprob: -15.141386985778809

Token 133: 'ele' (ID: 5449)
  Prédit: 'ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ele' → logprob: -6.749814019713085e-06
    2. ' ele' → logprob: -12.625006675720215
    3. '(ele' → logprob: -12.625006675720215
    4. '_ele' → logprob: -17.62500762939453
    5. 'elem' → logprob: -18.75000762939453
    6. 'el' → logprob: -19.50000762939453
    7. 'v' → logprob: -19.75000762939453
    8. 'Ele' → logprob: -19.87500762939453
    9. 'eles' → logprob: -20.12500762939453
    10. '-ele' → logprob: -20.25000762939453

Token 134: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00016277639952022582
    2. ' ==' → logprob: -8.750163078308105
    3. '0' → logprob: -13.000163078308105
    4. '==
' → logprob: -14.000163078308105
    5. '===' → logprob: -14.500163078308105
    6. '```' → logprob: -15.000163078308105
    7. ']==' → logprob: -16.37516212463379
    8. '()==' → logprob: -16.62516212463379
    9. '!=' → logprob: -17.00016212463379
    10. ')==' → logprob: -17.37516212463379

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '1' → logprob: -18.687501907348633
    4. '۰' → logprob: -19.000001907348633
    5. '   ' → logprob: -19.187501907348633
    6. '  ' → logprob: -19.312501907348633
    7. '```' → logprob: -19.625001907348633
    8. '=' → logprob: -19.875001907348633
    9. '    ' → logprob: -20.000001907348633
    10. '٠' → logprob: -20.062501907348633

Token 136: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5765607953071594
    2. ':' → logprob: -0.8265607953071594
    3. '       ' → logprob: -7.701560974121094
    4. ' and' → logprob: -9.576560974121094
    5. '):
' → logprob: -10.451560974121094
    6. '   ' → logprob: -10.826560974121094
    7. 'v' → logprob: -11.201560974121094
    8. 'and' → logprob: -11.701560974121094
    9. ':

' → logprob: -11.701560974121094
    10. ' :
' → logprob: -11.826560974121094

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03650043532252312
    2. 'v' → logprob: -3.5365004539489746
    3. ' v' → logprob: -5.286500453948975
    4. '   ' → logprob: -6.536500453948975
    5. '```' → logprob: -9.536499977111816
    6. '	v' → logprob: -9.661499977111816
    7. '
' → logprob: -9.911499977111816
    8. ',v' → logprob: -11.536499977111816
    9. '``' → logprob: -13.036499977111816
    10. '           ' → logprob: -13.036499977111816

Token 138: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.004927985370159149
    2. '       ' → logprob: -5.504928112030029
    3. ' v' → logprob: -7.379928112030029
    4. '   ' → logprob: -8.504927635192871
    5. '	v' → logprob: -11.004927635192871
    6. '
' → logprob: -12.629927635192871
    7. '           ' → logprob: -13.254927635192871
    8. '```' → logprob: -14.129927635192871
    9. ' ' → logprob: -15.504927635192871
    10. '  ' → logprob: -16.504928588867188

Token 139: '//=' (ID: 171954)
  Prédit: '//='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.00015800826076883823
    2. '/=' → logprob: -9.000158309936523
    3. '//' → logprob: -11.000158309936523
    4. ' //' → logprob: -11.000158309936523
    5. '=' → logprob: -13.875158309936523
    6. '=v' → logprob: -16.125158309936523
    7. 'v' → logprob: -16.625158309936523
    8. '%=' → logprob: -16.750158309936523
    9. ' /=' → logprob: -18.125158309936523
    10. ' =' → logprob: -19.125158309936523

Token 140: 'ele' (ID: 5449)
  Prédit: 'ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ele' → logprob: -1.0206720617134124e-05
    2. ' ele' → logprob: -11.50001049041748
    3. '(ele' → logprob: -17.000009536743164
    4. '   ' → logprob: -17.875009536743164
    5. 'elem' → logprob: -18.750009536743164
    6. 'el' → logprob: -19.125009536743164
    7. ' ' → logprob: -19.125009536743164
    8. '  ' → logprob: -19.375009536743164
    9. '_ele' → logprob: -19.625009536743164
    10. '2' → logprob: -19.625009536743164

Token 141: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4333217740058899
    2. '   ' → logprob: -1.4333217144012451
    3. 'if' → logprob: -3.058321714401245
    4. 'BOX' → logprob: -3.183321714401245
    5. 'else' → logprob: -4.183321952819824
    6. ' BOX' → logprob: -6.308321952819824
    7. 'box' → logprob: -6.683321952819824
    8. 'for' → logprob: -6.808321952819824
    9. 'v' → logprob: -6.808321952819824
    10. '
' → logprob: -6.933321952819824

Token 142: '   ' (ID: 271)
  Prédit: 'BOX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BOX' → logprob: -0.6222164630889893
    2. '       ' → logprob: -1.4972164630889893
    3. '   ' → logprob: -1.7472164630889893
    4. 'if' → logprob: -3.3722164630889893
    5. 'else' → logprob: -4.24721622467041
    6. ' BOX' → logprob: -4.49721622467041
    7. '```' → logprob: -6.87221622467041
    8. 'box' → logprob: -6.99721622467041
    9. 'v' → logprob: -7.24721622467041
    10. 'for' → logprob: -7.24721622467041

Token 143: ' BOX' (ID: 97792)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21578030288219452
    2. '   ' → logprob: -2.215780258178711
    3. ' if' → logprob: -2.465780258178711
    4. '
' → logprob: -10.465780258178711
    5. '```' → logprob: -10.965780258178711
    6. 'v' → logprob: -11.340780258178711
    7. 'for' → logprob: -12.090780258178711
    8. 'else' → logprob: -12.965780258178711
    9. '    
' → logprob: -13.090780258178711
    10. ' ' → logprob: -13.215780258178711

Token 144: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005750556010752916
    2. '[v' → logprob: -5.38075065612793
    3. '[val' → logprob: -7.00575065612793
    4. '```' → logprob: -10.50575065612793
    5. '[e' → logprob: -10.75575065612793
    6. '[z' → logprob: -10.75575065612793
    7. '.setdefault' → logprob: -11.00575065612793
    8. '[f' → logprob: -11.25575065612793
    9. '[obj' → logprob: -11.50575065612793
    10. '[element' → logprob: -11.50575065612793

Token 145: 'ele' (ID: 5449)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.020685292780399323
    2. 'ele' → logprob: -3.8956851959228516
    3. 'zap' → logprob: -9.395685195922852
    4. 'val' → logprob: -11.020685195922852
    5. '(v' → logprob: -11.395685195922852
    6. '(ele' → logprob: -11.895685195922852
    7. 'z' → logprob: -12.020685195922852
    8. ' v' → logprob: -12.395685195922852
    9. 'elem' → logprob: -13.145685195922852
    10. 've' → logprob: -13.958185195922852

Token 146: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.008771034888923168
    2. ']' → logprob: -4.758770942687988
    3. '=False' → logprob: -9.133770942687988
    4. '=' → logprob: -10.508770942687988
    5. '=True' → logprob: -11.383770942687988
    6. ']==' → logprob: -12.883770942687988
    7. ']=(' → logprob: -12.883770942687988
    8. '']=' → logprob: -13.508770942687988
    9. '"]=' → logprob: -13.758770942687988
    10. '-' → logprob: -14.883770942687988

Token 147: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.04416164755821228
    2. 'False' → logprob: -3.169161558151245
    3. 'v' → logprob: -6.919161796569824
    4. ' True' → logprob: -10.169161796569824
    5. 'BOX' → logprob: -10.294161796569824
    6. '(True' → logprob: -10.419161796569824
    7. 'zap' → logprob: -10.794161796569824
    8. 'len' → logprob: -11.294161796569824
    9. '(v' → logprob: -12.044161796569824
    10. 'not' → logprob: -12.294161796569824

Token 148: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' v' (ID: 323)
  Prédit: 'ele'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ele' → logprob: -0.16401922702789307
    2. ' ele' → logprob: -2.5390191078186035
    3. 'v' → logprob: -2.9140191078186035
    4. 'BOX' → logprob: -4.9140191078186035
    5. ' v' → logprob: -5.4140191078186035
    6. ' BOX' → logprob: -5.5390191078186035
    7. '(ele' → logprob: -7.1640191078186035
    8. 'zap' → logprob: -8.039019584655762
    9. 'box' → logprob: -8.539019584655762
    10. '(v' → logprob: -8.914019584655762

Token 150: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.082081638276577
    2. '==' → logprob: -2.5820815563201904
    3. '!=' → logprob: -6.3320817947387695
    4. ' ==' → logprob: -7.2070817947387695
    5. '%i' → logprob: -8.20708179473877
    6. ' %' → logprob: -8.83208179473877
    7. '%e' → logprob: -8.83208179473877
    8. ' not' → logprob: -10.45708179473877
    9. '%x' → logprob: -11.33208179473877
    10. '%=' → logprob: -11.45708179473877

Token 151: 'ele' (ID: 5449)
  Prédit: 'ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ele' → logprob: -2.696889623621246e-06
    2. ' ele' → logprob: -13.37500286102295
    3. '(ele' → logprob: -13.75000286102295
    4. 'ole' → logprob: -18.000001907348633
    5. '_ele' → logprob: -18.000001907348633
    6. '`' → logprob: -18.250001907348633
    7. ' ' → logprob: -18.875001907348633
    8. '1' → logprob: -18.875001907348633
    9. '0' → logprob: -19.000001907348633
    10. '=' → logprob: -19.000001907348633

Token 152: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932620406150818
    2. '!=' → logprob: -0.6932620406150818
    3. 'else' → logprob: -9.318262100219727
    4. '>' → logprob: -11.068262100219727
    5. ' !=' → logprob: -12.068262100219727
    6. ' ==' → logprob: -13.318262100219727
    7. '!==' → logprob: -14.443262100219727
    8. ' else' → logprob: -15.068262100219727
    9. '0' → logprob: -15.068262100219727
    10. 'not' → logprob: -15.318262100219727

Token 153: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.183501293184236e-05
    2. 'ele' → logprob: -10.62507152557373
    3. 'zap' → logprob: -10.87507152557373
    4. ' ' → logprob: -11.12507152557373
    5. '1' → logprob: -11.37507152557373
    6. '   ' → logprob: -14.87507152557373
    7. 'zero' → logprob: -15.00007152557373
    8. 'z' → logprob: -15.25007152557373
    9. '```' → logprob: -16.000072479248047
    10. 'None' → logprob: -16.125072479248047

Token 154: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20141908526420593
    2. ' else' → logprob: -1.7014191150665283
    3. ' ' → logprob: -12.82641887664795
    4. '	else' → logprob: -13.57641887664795
    5. '  ' → logprob: -13.70141887664795
    6. '   ' → logprob: -14.70141887664795
    7. '    ' → logprob: -16.451419830322266
    8. '
' → logprob: -17.201419830322266
    9. '     ' → logprob: -17.576419830322266
    10. '_else' → logprob: -17.576419830322266

Token 155: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006204616511240602
    2. ' ' → logprob: -7.875620365142822
    3. 'False' → logprob: -8.75062084197998
    4. 'True' → logprob: -9.75062084197998
    5. '   ' → logprob: -11.50062084197998
    6. '1' → logprob: -12.25062084197998
    7. '  ' → logprob: -13.12562084197998
    8. ' False' → logprob: -13.37562084197998
    9. ' True' → logprob: -13.62562084197998
    10. '    ' → logprob: -14.75062084197998

Token 156: '42' (ID: 4689)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. '=' → logprob: -10.125075340270996
    3. ' ' → logprob: -10.625075340270996
    4. '-' → logprob: -11.875075340270996
    5. '0' → logprob: -13.250075340270996
    6. '+' → logprob: -14.562575340270996
    7. ' -' → logprob: -15.312575340270996
    8. '１' → logprob: -15.937575340270996
    9. '(' → logprob: -16.50007438659668
    10. '۱' → logprob: -16.68757438659668

Token 157: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: '#print' (ID: 57825)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05054814741015434
    2. '('' → logprob: -3.9255480766296387
    3. '("' → logprob: -4.550548076629639
    4. '(box' → logprob: -4.675548076629639
    5. '(z' → logprob: -5.300548076629639
    6. '(len' → logprob: -6.175548076629639
    7. '()' → logprob: -7.175548076629639
    8. '("("' → logprob: -8.300548553466797
    9. 's' → logprob: -8.425548553466797
    10. '(Box' → logprob: -8.425548553466797

Token 160: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1291545331478119
    2. 'key' → logprob: -2.5041544437408447
    3. 'ele' → logprob: -4.254154682159424
    4. '(k' → logprob: -4.379154682159424
    5. 'x' → logprob: -5.504154682159424
    6. '(key' → logprob: -5.754154682159424
    7. 'BOX' → logprob: -6.504154682159424
    8. '(x' → logprob: -6.629154682159424
    9. 'ix' → logprob: -7.879154682159424
    10. 'i' → logprob: -8.004154205322266

Token 161: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12773343920707703
    2. 'for' → logprob: -2.1277334690093994
    3. ',' → logprob: -7.37773323059082
    4. ')' → logprob: -9.25273323059082
    5. '()' → logprob: -10.25273323059082
    6. '	for' → logprob: -11.25273323059082
    7. ' in' → logprob: -11.62773323059082
    8. ']' → logprob: -11.75273323059082
    9. ',k' → logprob: -12.37773323059082
    10. ',key' → logprob: -12.62773323059082

Token 162: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7113999724388123
    2. ' k' → logprob: -1.211400032043457
    3. ' BOX' → logprob: -1.836400032043457
    4. 'BOX' → logprob: -2.961400032043457
    5. ' range' → logprob: -9.961400032043457
    6. ' box' → logprob: -10.586400032043457
    7. ',k' → logprob: -10.836400032043457
    8. ' in' → logprob: -11.711400032043457
    9. '_BOX' → logprob: -11.711400032043457
    10. ' ' → logprob: -12.211400032043457

Token 163: ',v' (ID: 30680)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3389665186405182
    2. 'BOX' → logprob: -1.9639664888381958
    3. ' k' → logprob: -2.3389666080474854
    4. ' BOX' → logprob: -3.2139666080474854
    5. ',k' → logprob: -5.088966369628906
    6. ' in' → logprob: -5.588966369628906
    7. ',' → logprob: -8.213966369628906
    8. 'in' → logprob: -8.338966369628906
    9. 'box' → logprob: -10.213966369628906
    10. '_BOX' → logprob: -10.338966369628906

Token 164: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.03805835545063019
    2. ' in' → logprob: -3.288058280944824
    3. ',' → logprob: -12.663058280944824
    4. ',k' → logprob: -12.788058280944824
    5. ',v' → logprob: -13.163058280944824
    6. ',in' → logprob: -13.288058280944824
    7. 'ink' → logprob: -13.413058280944824
    8. 'k' → logprob: -13.663058280944824
    9. ' ' → logprob: -14.538058280944824
    10. 'kv' → logprob: -14.538058280944824

Token 165: ' BOX' (ID: 97792)
  Prédit: 'BOX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BOX' → logprob: -2.15310683415737e-05
    2. ' BOX' → logprob: -10.750021934509277
    3. 'box' → logprob: -19.75002098083496
    4. 'BO' → logprob: -21.00002098083496
    5. '_BOX' → logprob: -21.00002098083496
    6. 'ZIP' → logprob: -21.87502098083496
    7. '```' → logprob: -22.12502098083496
    8. 'sorted' → logprob: -22.25002098083496
    9. 'BLOCK' → logprob: -22.50002098083496
    10. 'BOARD' → logprob: -22.62502098083496

Token 166: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.011303281411528587
    2. 'items' → logprob: -4.511303424835205
    3. ' if' → logprob: -8.886302947998047
    4. 'if' → logprob: -9.261302947998047
    5. '()' → logprob: -11.636302947998047
    6. '.iteritems' → logprob: -12.386302947998047
    7. '.values' → logprob: -12.886302947998047
    8. ' items' → logprob: -13.511302947998047
    9. '().' → logprob: -13.886302947998047
    10. ' in' → logprob: -14.011302947998047

Token 167: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2212693989276886
    2. '])' → logprob: -2.471269369125366
    3. 'if' → logprob: -2.971269369125366
    4. '()]' → logprob: -3.346269369125366
    5. ')])' → logprob: -4.471269607543945
    6. ' if' → logprob: -4.971269607543945
    7. '(' → logprob: -5.721269607543945
    8. '())' → logprob: -5.971269607543945
    9. ']' → logprob: -7.221269607543945
    10. '()][' → logprob: -7.346269607543945

Token 168: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11047043651342392
    2. 'if' → logprob: -2.4854705333709717
    3. '])' → logprob: -3.8604705333709717
    4. '()' → logprob: -8.73547077178955
    5. '   ' → logprob: -9.98547077178955
    6. ' ' → logprob: -11.23547077178955
    7. ' ])' → logprob: -12.36047077178955
    8. ')' → logprob: -12.73547077178955
    9. '#' → logprob: -13.11047077178955
    10. '	if' → logprob: -13.23547077178955

Token 169: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11296361684799194
    2. ' v' → logprob: -2.2379636764526367
    3. '   ' → logprob: -9.987963676452637
    4. '  ' → logprob: -9.987963676452637
    5. ' ' → logprob: -10.362963676452637
    6. '    ' → logprob: -12.112963676452637
    7. '	v' → logprob: -12.612963676452637
    8. ' isinstance' → logprob: -12.987963676452637
    9. '(v' → logprob: -13.487963676452637
    10. 'k' → logprob: -14.175463676452637

Token 170: '])
' (ID: 5169)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11345349252223969
    2. '>' → logprob: -2.9884533882141113
    3. ' ==' → logprob: -3.4884533882141113
    4. ' if' → logprob: -3.9884533882141113
    5. ' >' → logprob: -5.988453388214111
    6. 'if' → logprob: -6.363453388214111
    7. '==-' → logprob: -6.363453388214111
    8. ']==' → logprob: -7.238453388214111
    9. '!=' → logprob: -8.23845386505127
    10. '<' → logprob: -8.48845386505127

Token 171: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: '(sum' (ID: 45528)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.09360779821872711
    2. '(' → logprob: -2.4686079025268555
    3. '(k' → logprob: -6.5936079025268555
    4. '([(' → logprob: -6.8436079025268555
    5. '(sorted' → logprob: -7.2186079025268555
    6. '(list' → logprob: -7.8436079025268555
    7. '(len' → logprob: -7.9686079025268555
    8. '(sum' → logprob: -7.9686079025268555
    9. '(max' → logprob: -9.468607902526855
    10. '()' → logprob: -9.468607902526855

Token 173: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24994046986103058
    2. '([' → logprob: -2.1249403953552246
    3. '(v' → logprob: -2.8749403953552246
    4. '(k' → logprob: -3.1249403953552246
    5. '(value' → logprob: -7.249940395355225
    6. '((' → logprob: -8.374940872192383
    7. '(val' → logprob: -8.999940872192383
    8. '(x' → logprob: -9.499940872192383
    9. '(box' → logprob: -9.749940872192383
    10. '(int' → logprob: -10.124940872192383

Token 174: '==' (ID: 560)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.030277999117970467
    2. 'for' → logprob: -3.530277967453003
    3. ' in' → logprob: -7.655278205871582
    4. ' ' → logprob: -10.530278205871582
    5. '	for' → logprob: -11.280278205871582
    6. '==' → logprob: -13.155278205871582
    7. '   ' → logprob: -13.405278205871582
    8. '[' → logprob: -13.405278205871582
    9. 'in' → logprob: -13.405278205871582
    10. '=' → logprob: -13.780278205871582

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005198416765779257
    2. ' ' → logprob: -5.3801984786987305
    3. '-' → logprob: -7.7551984786987305
    4. 'True' → logprob: -8.88019847869873
    5. ' -' → logprob: -12.50519847869873
    6. ' True' → logprob: -13.00519847869873
    7. '42' → logprob: -13.75519847869873
    8. '   ' → logprob: -14.38019847869873
    9. '(' → logprob: -14.38019847869873
    10. '  ' → logprob: -14.38019847869873

Token 176: ' or' (ID: 503)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10023093223571777
    2. 'for' → logprob: -2.3502309322357178
    3. ' ' → logprob: -10.725231170654297
    4. '  ' → logprob: -14.600231170654297
    5. '	for' → logprob: -14.725231170654297
    6. 'value' → logprob: -14.850231170654297
    7. 'v' → logprob: -15.350231170654297
    8. ' or' → logprob: -15.475231170654297
    9. ' v' → logprob: -15.725231170654297
    10. '   ' → logprob: -15.725231170654297

Token 177: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3756427466869354
    2. 'BOX' → logprob: -1.3756427764892578
    3. '(x' → logprob: -4.000642776489258
    4. 'v' → logprob: -4.250642776489258
    5. ' BOX' → logprob: -4.625642776489258
    6. ' x' → logprob: -5.000642776489258
    7. '(' → logprob: -5.750642776489258
    8. '-' → logprob: -6.125642776489258
    9. 'y' → logprob: -6.250642776489258
    10. '(v' → logprob: -6.875642776489258

Token 178: ' is' (ID: 382)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6667064428329468
    2. 'for' → logprob: -1.2917064428329468
    3. 'BOX' → logprob: -2.5417065620422363
    4. ' in' → logprob: -3.0417065620422363
    5. '[' → logprob: -3.4167065620422363
    6. ' BOX' → logprob: -3.9167065620422363
    7. ' ' → logprob: -4.791706562042236
    8. 'in' → logprob: -5.041706562042236
    9. '==' → logprob: -5.166706562042236
    10. 'x' → logprob: -6.291706562042236

Token 179: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7519431710243225
    2. '1' → logprob: -1.2519431114196777
    3. ' True' → logprob: -1.5019431114196777
    4. ' ' → logprob: -4.251943111419678
    5. '-' → logprob: -5.626943111419678
    6. ' not' → logprob: -7.001943111419678
    7. '42' → logprob: -7.626943111419678
    8. ' -' → logprob: -8.376943588256836
    9. 'not' → logprob: -8.751943588256836
    10. 'None' → logprob: -9.876943588256836

Token 180: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1602456420660019
    2. 'for' → logprob: -1.910245656967163
    3. ' ' → logprob: -11.410245895385742
    4. '  ' → logprob: -12.285245895385742
    5. '   ' → logprob: -12.535245895385742
    6. '	for' → logprob: -13.535245895385742
    7. '    ' → logprob: -14.660245895385742
    8. ' or' → logprob: -15.660245895385742
    9. ' in' → logprob: -16.035245895385742
    10. '
' → logprob: -17.035245895385742

Token 181: ' x' (ID: 1215)
  Prédit: 'BOX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'BOX' → logprob: -0.693149745464325
    2. ' BOX' → logprob: -0.693149745464325
    3. ' ' → logprob: -14.44314956665039
    4. ' box' → logprob: -14.56814956665039
    5. '_BOX' → logprob: -14.56814956665039
    6. ' list' → logprob: -14.69314956665039
    7. 'box' → logprob: -15.69314956665039
    8. 'Box' → logprob: -16.31814956665039
    9. '   ' → logprob: -16.44314956665039
    10. 'BO' → logprob: -16.81814956665039

Token 182: ' in' (ID: 306)
  Prédit: ' BOX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BOX' → logprob: -0.20144911110401154
    2. 'BOX' → logprob: -1.7014491558074951
    3. '_BOX' → logprob: -11.201449394226074
    4. ' ' → logprob: -11.951449394226074
    5. ')' → logprob: -12.826449394226074
    6. ',' → logprob: -13.326449394226074
    7. ' box' → logprob: -13.326449394226074
    8. 'BO' → logprob: -13.451449394226074
    9. ' in' → logprob: -13.701449394226074
    10. ' BO' → logprob: -13.826449394226074

Token 183: ' BOX' (ID: 97792)
  Prédit: 'BOX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BOX' → logprob: -0.04859577491879463
    2. ' BOX' → logprob: -3.048595666885376
    3. ' ' → logprob: -12.298595428466797
    4. ' list' → logprob: -13.673595428466797
    5. 'box' → logprob: -14.298595428466797
    6. '   ' → logprob: -14.423595428466797
    7. 'list' → logprob: -14.798595428466797
    8. ' box' → logprob: -15.298595428466797
    9. '_BOX' → logprob: -15.423595428466797
    10. 'Box' → logprob: -15.548595428466797

Token 184: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.005703500472009182
    2. '.items' → logprob: -5.255703449249268
    3. ')' → logprob: -8.005703926086426
    4. '.' → logprob: -9.505703926086426
    5. '.keys' → logprob: -10.005703926086426
    6. ' .' → logprob: -11.755703926086426
    7. '().' → logprob: -12.880703926086426
    8. '))' → logprob: -13.130703926086426
    9. 'values' → logprob: -13.630703926086426
    10. '.value' → logprob: -14.130703926086426

Token 185: '())' (ID: 3516)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38795560598373413
    2. ')' → logprob: -1.137955665588379
    3. '())' → logprob: -7.012955665588379
    4. '()))' → logprob: -8.762955665588379
    5. '()' → logprob: -10.762955665588379
    6. '])' → logprob: -12.887955665588379
    7. ')))' → logprob: -13.012955665588379
    8. '})' → logprob: -14.387955665588379
    9. '))
' → logprob: -15.637955665588379
    10. '),' → logprob: -15.762955665588379

Token 186: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. '))' → logprob: -13.375001907348633
    3. ' )' → logprob: -14.750001907348633
    4. ')
' → logprob: -15.875001907348633
    5. ')`' → logprob: -17.375001907348633
    6. '())' → logprob: -17.750001907348633
    7. ')))' → logprob: -18.250001907348633
    8. '])' → logprob: -18.750001907348633
    9. ')}' → logprob: -19.000001907348633
    10. '）' → logprob: -19.250001907348633

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041875618626363575
    2. ' ' → logprob: -8.250418663024902
    3. '(' → logprob: -9.250418663024902
    4. 'len' → logprob: -11.125418663024902
    5. 'BOX' → logprob: -11.375418663024902
    6. '2' → logprob: -11.625418663024902
    7. 'int' → logprob: -12.000418663024902
    8. 'sum' → logprob: -12.125418663024902
    9. 'zap' → logprob: -12.750418663024902
    10. '0' → logprob: -13.375418663024902

Token 188: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -16.125
    3. ' )' → logprob: -16.125
    4. ')
' → logprob: -16.625
    5. ')`' → logprob: -17.875
    6. ')#' → logprob: -19.0
    7. '）' → logprob: -19.625
    8. '())' → logprob: -20.125
    9. '`)' → logprob: -20.25
    10. ')}' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 186
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 79
Tokens correctement prédits (top 10): 151
Précision stricte (1ère position): 41.94%
Précision adaptée (1ère position): 42.47%
Précision (top 10): 81.18%
================================================================================
