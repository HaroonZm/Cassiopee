================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
d = []
for i in range(10):
    row = []
    for j in range(10):
        row.append(0)
    d.append(row)

for i in range(1, n+1):
    s = str(i)
    if s[0] == "0" or s[-1] == "0":
        continue
    d[int(s[0])][int(s[-1])] = d[int(s[0])][int(s[-1])] + 1

ans = 0
for i in range(1, 10):
    for j in range(1, 10):
        ans = ans + d[i][j] * d[j][i]

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005424272385425866
    2. '```' → logprob: -8.500542640686035
    3. ''' → logprob: -8.625542640686035
    4. '(n' → logprob: -10.250542640686035
    5. '`' → logprob: -10.500542640686035
    6. ')' → logprob: -10.875542640686035
    7. '('' → logprob: -11.250542640686035
    8. '(
' → logprob: -11.250542640686035
    9. '[' → logprob: -11.375542640686035
    10. '()' → logprob: -11.750542640686035

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'd' (ID: 67)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7516968250274658
    2. 'e' → logprob: -1.5016968250274658
    3. ' =' → logprob: -2.001696825027466
    4. '=' → logprob: -2.626696825027466
    5. '[i' → logprob: -3.376696825027466
    6. '.' → logprob: -4.501696586608887
    7. 'i' → logprob: -4.501696586608887
    8. 'ef' → logprob: -4.626696586608887
    9. '[e' → logprob: -4.751696586608887
    10. 'a' → logprob: -5.626696586608887

Token 7: ' []
' (ID: 8911)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.48908647894859314
    2. '{}' → logprob: -0.9890865087509155
    3. ' []' → logprob: -4.989086627960205
    4. ' ' → logprob: -6.114086627960205
    5. 'dict' → logprob: -6.989086627960205
    6. 'n' → logprob: -6.989086627960205
    7. '[]' → logprob: -7.114086627960205
    8. '{' → logprob: -7.239086627960205
    9. ' dict' → logprob: -7.364086627960205
    10. ' n' → logprob: -8.114086151123047

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00104614719748497
    2. ' for' → logprob: -6.876046180725098
    3. '```' → logprob: -12.251046180725098
    4. 'n' → logprob: -12.626046180725098
    5. '
' → logprob: -13.501046180725098
    6. 'f' → logprob: -13.751046180725098
    7. 'r' → logprob: -14.501046180725098
    8. ' 
' → logprob: -14.501046180725098
    9. '\n' → logprob: -14.876046180725098
    10. '`' → logprob: -14.876046180725098

Token 9: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023806603625416756
    2. '  ' → logprob: -4.148806571960449
    3. ' i' → logprob: -4.898806571960449
    4. ' n' → logprob: -9.02380657196045
    5. 'i' → logprob: -9.27380657196045
    6. ' ‌' → logprob: -10.89880657196045
    7. ' d' → logprob: -11.27380657196045
    8. '_' → logprob: -11.39880657196045
    9. ' _' → logprob: -12.27380657196045
    10. ' ' → logprob: -12.89880657196045

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08071314543485641
    2. 'in' → logprob: -3.3307130336761475
    3. 'n' → logprob: -3.4557130336761475
    4. ' ' → logprob: -5.080713272094727
    5. ' n' → logprob: -5.830713272094727
    6. '  ' → logprob: -7.455713272094727
    7. '_' → logprob: -9.330713272094727
    8. ',' → logprob: -9.830713272094727
    9. 'space' → logprob: -9.830713272094727
    10. 'd' → logprob: -9.955713272094727

Token 11: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018191730603575706
    2. 'range' → logprob: -4.018191814422607
    3. ' ' → logprob: -10.14319133758545
    4. '	range' → logprob: -14.01819133758545
    5. ' n' → logprob: -14.39319133758545
    6. ' in' → logprob: -14.89319133758545
    7. ' space' → logprob: -15.51819133758545
    8. ' xrange' → logprob: -15.76819133758545
    9. '(range' → logprob: -16.518192291259766
    10. '  ' → logprob: -16.518192291259766

Token 12: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034447167068719864
    2. '(n' → logprob: -3.409447193145752
    3. ' (' → logprob: -7.159447193145752
    4. ' ' → logprob: -11.659446716308594
    5. '(space' → logprob: -12.534446716308594
    6. '(range' → logprob: -12.659446716308594
    7. '(
' → logprob: -13.659446716308594
    8. ' n' → logprob: -13.659446716308594
    9. '(len' → logprob: -13.909446716308594
    10. '()' → logprob: -14.159446716308594

Token 13: '10' (ID: 702)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003888470819219947
    2. ' n' → logprob: -7.8753886222839355
    3. '0' → logprob: -12.500389099121094
    4. '1' → logprob: -13.125389099121094
    5. ')' → logprob: -13.500389099121094
    6. 'range' → logprob: -14.250389099121094
    7. ')n' → logprob: -14.375389099121094
    8. '(n' → logprob: -15.625389099121094
    9. ' ' → logprob: -16.125389099121094
    10. 'd' → logprob: -17.250389099121094

Token 14: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22850406169891357
    2. '):' → logprob: -1.6035040616989136
    3. ' )' → logprob: -5.978504180908203
    4. ' ):' → logprob: -8.228504180908203
    5. ':' → logprob: -8.478504180908203
    6. '**' → logprob: -11.353504180908203
    7. ')n' → logprob: -11.728504180908203
    8. '[' → logprob: -12.103504180908203
    9. ',' → logprob: -12.228504180908203
    10. '*' → logprob: -12.228504180908203

Token 15: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1177438497543335
    2. ' d' → logprob: -2.867743968963623
    3. ' ' → logprob: -3.242743968963623
    4. '    ' → logprob: -4.867743968963623
    5. '   ' → logprob: -5.617743968963623
    6. '```' → logprob: -7.742743968963623
    7. '`' → logprob: -7.867743968963623
    8. '	d' → logprob: -8.117743492126465
    9. '     
' → logprob: -8.117743492126465
    10. ' ```' → logprob: -8.117743492126465

Token 16: ' row' (ID: 5225)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6950976252555847
    2. ' d' → logprob: -0.6950976252555847
    3. ' ' → logprob: -7.44509744644165
    4. ' if' → logprob: -7.69509744644165
    5. '   ' → logprob: -8.195097923278809
    6. ' n' → logprob: -8.320097923278809
    7. 'n' → logprob: -8.820097923278809
    8. '    ' → logprob: -9.445097923278809
    9. 'if' → logprob: -10.195097923278809
    10. ' `' → logprob: -10.820097923278809

Token 17: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2292812317609787
    2. ' =' → logprob: -1.7292811870574951
    3. 's' → logprob: -4.354281425476074
    4. '[' → logprob: -4.854281425476074
    5. '=' → logprob: -5.729281425476074
    6. '[]' → logprob: -6.354281425476074
    7. '.' → logprob: -7.354281425476074
    8. ' ' → logprob: -8.354281425476074
    9. '[:]' → logprob: -8.604281425476074
    10. '_' → logprob: -8.854281425476074

Token 18: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3717491626739502
    2. '[' → logprob: -1.9967491626739502
    3. ' list' → logprob: -3.12174916267395
    4. '[input' → logprob: -3.12174916267395
    5. ' []' → logprob: -3.49674916267395
    6. '[]' → logprob: -3.62174916267395
    7. 'list' → logprob: -4.371748924255371
    8. '[int' → logprob: -4.746748924255371
    9. '[list' → logprob: -5.121748924255371
    10. '[i' → logprob: -6.871748924255371

Token 19: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6293812394142151
    2. '   ' → logprob: -1.2543811798095703
    3. ' for' → logprob: -1.8793811798095703
    4. '    ' → logprob: -4.25438117980957
    5. '       ' → logprob: -4.37938117980957
    6. ' ' → logprob: -6.37938117980957
    7. '[' → logprob: -8.25438117980957
    8. '	for' → logprob: -9.50438117980957
    9. '        ' → logprob: -9.87938117980957
    10. '     ' → logprob: -10.12938117980957

Token 20: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6943354606628418
    2. 'for' (adapté à ' for') → logprob: -0.6943354606628418
    3. '   ' → logprob: -7.194335460662842
    4. '    ' → logprob: -8.4443359375
    5. ' ' → logprob: -8.9443359375
    6. 'd' → logprob: -10.1943359375
    7. 'n' → logprob: -10.4443359375
    8. '	for' → logprob: -12.4443359375
    9. ' n' → logprob: -12.5693359375
    10. ' ' → logprob: -13.1943359375

Token 21: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.43028947710990906
    2. 'j' → logprob: -1.0552895069122314
    3. 'range' → logprob: -7.180289268493652
    4. ' range' → logprob: -7.430289268493652
    5. '_' → logprob: -8.680289268493652
    6. '_j' → logprob: -10.555289268493652
    7. ' ' → logprob: -11.180289268493652
    8. ' _' → logprob: -12.180289268493652
    9. 'n' → logprob: -12.680289268493652
    10. '```' → logprob: -12.680289268493652

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11287394911050797
    2. 'in' → logprob: -2.2378740310668945
    3. ' ' → logprob: -10.237874031066895
    4. 'n' → logprob: -12.237874031066895
    5. '  ' → logprob: -12.987874031066895
    6. 'range' → logprob: -13.237874031066895
    7. '	in' → logprob: -13.862874031066895
    8. 'In' → logprob: -14.237874031066895
    9. '<|end|>' → logprob: -14.237874031066895
    10. ')' → logprob: -14.362874031066895

Token 23: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.474082887172699
    2. ' range' → logprob: -0.974082887172699
    3. '(range' → logprob: -12.974082946777344
    4. ')' → logprob: -14.099082946777344
    5. ' ' → logprob: -14.349082946777344
    6. '	range' → logprob: -14.349082946777344
    7. 'in' → logprob: -15.349082946777344
    8. 'n' → logprob: -15.849082946777344
    9. '   ' → logprob: -15.974082946777344
    10. 'ran' → logprob: -16.099082946777344

Token 24: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004249112214893103
    2. '(n' → logprob: -5.629249095916748
    3. '(range' → logprob: -8.004249572753906
    4. ' (' → logprob: -8.879249572753906
    5. 'range' → logprob: -9.129249572753906
    6. ' range' → logprob: -10.254249572753906
    7. '(
' → logprob: -10.879249572753906
    8. '10' → logprob: -12.129249572753906
    9. ' ' → logprob: -13.254249572753906
    10. ')' → logprob: -13.379249572753906

Token 25: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.039809416979551315
    2. 'n' → logprob: -3.914809465408325
    3. ' ' → logprob: -4.914809226989746
    4. '100' → logprob: -6.039809226989746
    5. '5' → logprob: -6.164809226989746
    6. '20' → logprob: -6.539809226989746
    7. '11' → logprob: -6.789809226989746
    8. ' n' → logprob: -7.164809226989746
    9. '9' → logprob: -7.289809226989746
    10. '1' → logprob: -7.664809226989746

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015251481905579567
    2. ')' → logprob: -4.265251636505127
    3. '):
' → logprob: -7.515251636505127
    4. ' ):' → logprob: -8.015251159667969
    5. ':' → logprob: -9.140251159667969
    6. '+' → logprob: -9.640251159667969
    7. ' )' → logprob: -11.015251159667969
    8. '   ' → logprob: -11.640251159667969
    9. '):

' → logprob: -13.140251159667969
    10. ')**' → logprob: -13.640251159667969

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08224018663167953
    2. ' row' → logprob: -3.582240104675293
    3. 'row' → logprob: -3.957240104675293
    4. '    ' → logprob: -4.332240104675293
    5. ' ' → logprob: -5.082240104675293
    6. '   ' → logprob: -5.832240104675293
    7. '        ' → logprob: -6.207240104675293
    8. ''' → logprob: -6.332240104675293
    9. '0' → logprob: -6.582240104675293
    10. '(row' → logprob: -7.082240104675293

Token 28: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.49651607871055603
    2. 'row' (adapté à ' row') → logprob: -0.9965161085128784
    3. ' ' → logprob: -4.246516227722168
    4. '0' → logprob: -5.621516227722168
    5. '           ' → logprob: -6.121516227722168
    6. '       ' → logprob: -8.246516227722168
    7. '        ' → logprob: -8.246516227722168
    8. ' if' → logprob: -8.371516227722168
    9. '            ' → logprob: -8.746516227722168
    10. '    ' → logprob: -9.121516227722168

Token 29: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02980591543018818
    2. '.' → logprob: -3.529805898666382
    3. ' .' → logprob: -9.904806137084961
    4. '.app' → logprob: -13.529806137084961
    5. '.extend' → logprob: -13.904806137084961
    6. '       ' → logprob: -14.404806137084961
    7. '.add' → logprob: -14.404806137084961
    8. '   ' → logprob: -14.779806137084961
    9. 'append' → logprob: -14.904806137084961
    10. '.setdefault' → logprob: -15.279806137084961

Token 30: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030146153643727303
    2. '(i' → logprob: -4.15514612197876
    3. '(n' → logprob: -4.78014612197876
    4. '(int' → logprob: -5.90514612197876
    5. '(j' → logprob: -6.65514612197876
    6. '0' → logprob: -7.03014612197876
    7. '((' → logprob: -8.030146598815918
    8. '('' → logprob: -8.655146598815918
    9. '(False' → logprob: -9.905146598815918
    10. '(input' → logprob: -10.155146598815918

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01684054732322693
    2. 'int' → logprob: -4.39184045791626
    3. 'i' → logprob: -6.01684045791626
    4. 'input' → logprob: -7.51684045791626
    5. 'n' → logprob: -7.89184045791626
    6. ' ' → logprob: -8.391840934753418
    7. ')' → logprob: -8.391840934753418
    8. ''' → logprob: -8.766840934753418
    9. 'j' → logprob: -9.766840934753418
    10. ' int' → logprob: -9.891840934753418

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ')
' → logprob: -12.87500286102295
    3. '   ' → logprob: -15.87500286102295
    4. ' )' → logprob: -16.250003814697266
    5. '),' → logprob: -17.750003814697266
    6. '))' → logprob: -17.875003814697266
    7. ')

' → logprob: -17.875003814697266
    8. '       ' → logprob: -18.500003814697266
    9. '')' → logprob: -18.625003814697266
    10. ')`' → logprob: -18.625003814697266

Token 33: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.07262424379587173
    2. ')' → logprob: -4.072624206542969
    3. ' 
' → logprob: -4.322624206542969
    4. ' ' → logprob: -4.572624206542969
    5. '   ' → logprob: -5.072624206542969
    6. '\n' → logprob: -5.197624206542969
    7. '\' → logprob: -5.572624206542969
    8. 'n' → logprob: -5.822624206542969
    9. '    
' → logprob: -5.822624206542969
    10. 'newline' → logprob: -5.947624206542969

Token 35: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001387850963510573
    2. '.' → logprob: -6.626388072967529
    3. 'append' → logprob: -10.251387596130371
    4. '[-' → logprob: -11.501387596130371
    5. '[i' → logprob: -12.251387596130371
    6. '.app' → logprob: -12.251387596130371
    7. '[' → logprob: -12.751387596130371
    8. '.ap' → logprob: -13.126387596130371
    9. '.Append' → logprob: -15.001387596130371
    10. ' .' → logprob: -15.126387596130371

Token 36: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.000432695698691532
    2. '(' → logprob: -7.75043249130249
    3. 'row' → logprob: -13.375432968139648
    4. '(rows' → logprob: -15.000432968139648
    5. '(
' → logprob: -17.50043296813965
    6. '(line' → logprob: -17.50043296813965
    7. '((' → logprob: -17.87543296813965
    8. '([]' → logprob: -18.00043296813965
    9. '()' → logprob: -18.37543296813965
    10. '(Row' → logprob: -18.37543296813965

Token 37: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. '))' → logprob: -14.250000953674316
    3. ')
' → logprob: -15.625000953674316
    4. ' )' → logprob: -16.000001907348633
    5. ')`' → logprob: -18.375001907348633
    6. '`)' → logprob: -18.375001907348633
    7. '   ' → logprob: -18.375001907348633
    8. ')d' → logprob: -18.500001907348633
    9. ')))' → logprob: -18.500001907348633
    10. '')' → logprob: -18.750001907348633

Token 38: 'for' (ID: 1938)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6672067642211914
    2. 'for' → logprob: -0.7922067642211914
    3. 'i' → logprob: -4.542206764221191
    4. '\n' → logprob: -5.417206764221191
    5. ' for' → logprob: -5.667206764221191
    6. '```' → logprob: -6.042206764221191
    7. 'f' → logprob: -6.042206764221191
    8. 'if' → logprob: -6.167206764221191
    9. '[' → logprob: -6.542206764221191
    10. '
' → logprob: -6.792206764221191

Token 39: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005552235990762711
    2. 'i' → logprob: -5.505552291870117
    3. ' ' → logprob: -6.630552291870117
    4. '_' → logprob: -9.630552291870117
    5. ' _' → logprob: -10.005552291870117
    6. ' n' → logprob: -11.005552291870117
    7. ' ' → logprob: -11.505552291870117
    8. ' space' → logprob: -12.630552291870117
    9. ' d' → logprob: -12.880552291870117
    10. ' ‌' → logprob: -13.380552291870117

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08879255503416061
    2. 'in' → logprob: -2.588792562484741
    3. ' ' → logprob: -4.713792324066162
    4. '<|end|>' → logprob: -7.963792324066162
    5. '  ' → logprob: -8.08879280090332
    6. 'space' → logprob: -9.96379280090332
    7. ')' → logprob: -10.46379280090332
    8. 'n' → logprob: -10.71379280090332
    9. ' n' → logprob: -11.08879280090332
    10. '(' → logprob: -11.58879280090332

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25199708342552185
    2. 'range' → logprob: -1.5019971132278442
    3. 'n' → logprob: -10.626996994018555
    4. ' n' → logprob: -10.876996994018555
    5. ' ' → logprob: -11.626996994018555
    6. 'd' → logprob: -12.001996994018555
    7. ' d' → logprob: -12.751996994018555
    8. '(range' → logprob: -13.001996994018555
    9. ' in' → logprob: -13.751996994018555
    10. ')' → logprob: -14.376996994018555

Token 42: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2541474401950836
    2. '(n' → logprob: -1.5041474103927612
    3. ' (' → logprob: -6.129147529602051
    4. '(s' → logprob: -10.87914752960205
    5. ' ' → logprob: -12.25414752960205
    6. ' n' → logprob: -12.62914752960205
    7. '(space' → logprob: -13.12914752960205
    8. '(d' → logprob: -13.25414752960205
    9. '(
' → logprob: -13.62914752960205
    10. 'n' → logprob: -13.87914752960205

Token 43: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10552588850259781
    2. '10' → logprob: -2.6055259704589844
    3. '1' → logprob: -3.7305259704589844
    4. '100' → logprob: -6.730525970458984
    5. ' n' → logprob: -7.605525970458984
    6. '0' → logprob: -8.605525970458984
    7. '11' → logprob: -9.605525970458984
    8. '2' → logprob: -10.105525970458984
    9. '9' → logprob: -10.105525970458984
    10. ')' → logprob: -10.230525970458984

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6827297210693359
    2. ' ,' → logprob: -0.9327297210693359
    3. '(n' → logprob: -2.682729721069336
    4. '(' → logprob: -3.682729721069336
    5. ',n' → logprob: -5.057729721069336
    6. ')' → logprob: -7.557729721069336
    7. ' )' → logprob: -8.057729721069336
    8. ' (' → logprob: -8.557729721069336
    9. ' n' → logprob: -9.057729721069336
    10. 'n' → logprob: -9.307729721069336

Token 45: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04444708675146103
    2. ' n' → logprob: -3.669447183609009
    3. '10' → logprob: -4.16944694519043
    4. ' ' → logprob: -6.91944694519043
    5. '1' → logprob: -7.54444694519043
    6. '11' → logprob: -7.66944694519043
    7. '101' → logprob: -8.04444694519043
    8. '100' → logprob: -9.16944694519043
    9. ')' → logprob: -10.16944694519043
    10. ')n' → logprob: -11.79444694519043

Token 46: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005663310177624226
    2. ' +' → logprob: -5.7556633949279785
    3. '):' → logprob: -6.0056633949279785
    4. ')' → logprob: -12.00566291809082
    5. ',' → logprob: -12.13066291809082
    6. '+:' → logprob: -13.38066291809082
    7. ' ):' → logprob: -14.13066291809082
    8. '+,' → logprob: -14.13066291809082
    9. '{' → logprob: -14.50566291809082
    10. '):
' → logprob: -14.75566291809082

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. ' ' → logprob: -10.750022888183594
    3. ')' → logprob: -14.375022888183594
    4. '2' → logprob: -14.625022888183594
    5. '```' → logprob: -16.000022888183594
    6. '   ' → logprob: -16.687522888183594
    7. '  ' → logprob: -17.000022888183594
    8. '۱' → logprob: -17.250022888183594
    9. '১' → logprob: -17.687522888183594
    10. '+' → logprob: -17.937522888183594

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1465330719947815
    2. ':' → logprob: -2.5215330123901367
    3. ')' → logprob: -2.8965330123901367
    4. ' ):' → logprob: -7.771533012390137
    5. ':)' → logprob: -9.146533012390137
    6. ',' → logprob: -9.396533012390137
    7. ' )' → logprob: -9.646533012390137
    8. ' :' → logprob: -10.146533012390137
    9. ':**' → logprob: -11.521533012390137
    10. '):
' → logprob: -12.396533012390137

Token 49: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3349294066429138
    2. '   ' → logprob: -1.7099294662475586
    3. '    ' → logprob: -3.3349294662475586
    4. ' for' → logprob: -3.7099294662475586
    5. ' d' → logprob: -4.459929466247559
    6. 'for' → logprob: -4.959929466247559
    7. 'd' → logprob: -5.334929466247559
    8. ' n' → logprob: -5.459929466247559
    9. '  ' → logprob: -6.459929466247559
    10. '<|end|>' → logprob: -6.709929466247559

Token 50: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6472299098968506
    2. ' for' → logprob: -1.8972299098968506
    3. 'input' → logprob: -2.5222299098968506
    4. 'd' → logprob: -3.3972299098968506
    5. 'range' → logprob: -3.3972299098968506
    6. '   ' → logprob: -3.5222299098968506
    7. 'i' → logprob: -3.6472299098968506
    8. ' ' → logprob: -3.6472299098968506
    9. ' input' → logprob: -4.14723014831543
    10. 'x' → logprob: -4.64723014831543

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41924768686294556
    2. '=' → logprob: -1.7942476272583008
    3. 'tr' → logprob: -2.419247627258301
    4. 't' → logprob: -3.044247627258301
    5. '=input' → logprob: -3.919247627258301
    6. ' ' → logprob: -4.294247627258301
    7. 'tri' → logprob: -6.294247627258301
    8. 'tring' → logprob: -6.544247627258301
    9. 'trin' → logprob: -7.669247627258301
    10. 'input' → logprob: -8.1692476272583

Token 52: ' str' (ID: 989)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014813936315476894
    2. ' input' → logprob: -4.8898138999938965
    3. 'int' → logprob: -5.0148138999938965
    4. 'str' → logprob: -7.7648138999938965
    5. 'list' → logprob: -10.639814376831055
    6. ' int' → logprob: -10.639814376831055
    7. '(input' → logprob: -11.139814376831055
    8. '=input' → logprob: -11.389814376831055
    9. ' str' → logprob: -11.639814376831055
    10. 'i' → logprob: -12.264814376831055

Token 53: '(i' (ID: 3649)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.020604250952601433
    2. '(i' → logprob: -4.020604133605957
    3. '(' → logprob: -6.020604133605957
    4. 'input' → logprob: -11.520604133605957
    5. '(int' → logprob: -12.395604133605957
    6. '(in' → logprob: -12.645604133605957
    7. '(n' → logprob: -13.270604133605957
    8. '(
' → logprob: -13.895604133605957
    9. '(eval' → logprob: -14.770604133605957
    10. '(inp' → logprob: -14.770604133605957

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004419674631208181
    2. ')
' → logprob: -5.504419803619385
    3. '')' → logprob: -9.129419326782227
    4. ')
' → logprob: -9.629419326782227
    5. ' )' → logprob: -9.629419326782227
    6. '")' → logprob: -10.504419326782227
    7. ').' → logprob: -10.754419326782227
    8. '))' → logprob: -11.129419326782227
    9. ')

' → logprob: -12.004419326782227
    10. ')**' → logprob: -12.379419326782227

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08228718489408493
    2. 'for' → logprob: -3.332287073135376
    3. ' for' → logprob: -3.582287073135376
    4. '    
' → logprob: -5.332287311553955
    5. '[' → logprob: -5.457287311553955
    6. ':' → logprob: -6.207287311553955
    7. ')' → logprob: -7.332287311553955
    8. '    ' → logprob: -7.332287311553955
    9. '.' → logprob: -7.832287311553955
    10. '[]' → logprob: -7.957287311553955

Token 56: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11297990381717682
    2. 'if' (adapté à ' if') → logprob: -3.2379798889160156
    3. ' d' → logprob: -3.8629798889160156
    4. ' if' → logprob: -4.362979888916016
    5. 'first' → logprob: -4.737979888916016
    6. '[' → logprob: -5.362979888916016
    7. ' first' → logprob: -5.612979888916016
    8. 'for' → logprob: -5.612979888916016
    9. ' ' → logprob: -5.987979888916016
    10. '   ' → logprob: -6.237979888916016

Token 57: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7026517391204834
    2. ' len' → logprob: -1.2026517391204834
    3. 's' → logprob: -2.5776517391204834
    4. ' int' → logprob: -2.7026517391204834
    5. 'len' → logprob: -2.9526517391204834
    6. 'int' → logprob: -5.3276519775390625
    7. ' ' → logprob: -6.0776519775390625
    8. ' i' → logprob: -7.3276519775390625
    9. ' '' → logprob: -8.327651977539062
    10. ' d' → logprob: -8.702651977539062

Token 58: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1967162936925888
    2. '.startswith' → logprob: -2.44671630859375
    3. '.' → logprob: -3.32171630859375
    4. '.endswith' → logprob: -3.32171630859375
    5. '[-' → logprob: -3.94671630859375
    6. '[len' → logprob: -8.19671630859375
    7. '.[' → logprob: -8.94671630859375
    8. 'startswith' → logprob: -10.69671630859375
    9. '.count' → logprob: -11.32171630859375
    10. '==' → logprob: -11.69671630859375

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0049099549651145935
    2. '-' → logprob: -5.379909992218018
    3. ' ' → logprob: -8.25490951538086
    4. '[' → logprob: -11.25490951538086
    5. '1' → logprob: -12.12990951538086
    6. ']' → logprob: -13.31740951538086
    7. 'len' → logprob: -13.44240951538086
    8. ':' → logprob: -13.44240951538086
    9. ' -' → logprob: -13.62990951538086
    10. '
' → logprob: -13.87990951538086

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10389687120914459
    2. ']==' → logprob: -2.3538968563079834
    3. '==' → logprob: -6.3538970947265625
    4. ']!=' → logprob: -6.8538970947265625
    5. '=' → logprob: -8.478897094726562
    6. ')' → logprob: -8.603897094726562
    7. ' ]' → logprob: -8.978897094726562
    8. ']=' → logprob: -9.353897094726562
    9. ']=='' → logprob: -9.853897094726562
    10. '-' → logprob: -10.228897094726562

Token 61: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04568653553724289
    2. '!=' → logprob: -3.4206864833831787
    3. ' ==' → logprob: -4.920686721801758
    4. '=' → logprob: -5.545686721801758
    5. ' !=' → logprob: -8.170686721801758
    6. '>' → logprob: -8.795686721801758
    7. '[' → logprob: -9.670686721801758
    8. ':' → logprob: -10.295686721801758
    9. '=='' → logprob: -10.295686721801758
    10. '<=' → logprob: -10.545686721801758

Token 62: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03650767728686333
    2. ''' → logprob: -3.4115076065063477
    3. ' s' → logprob: -6.661507606506348
    4. ''s' → logprob: -6.911507606506348
    5. '1' → logprob: -8.661507606506348
    6. '0' → logprob: -8.911507606506348
    7. ' '' → logprob: -9.411507606506348
    8. ' ' → logprob: -10.036507606506348
    9. '"' → logprob: -10.036507606506348
    10. '   ' → logprob: -10.974007606506348

Token 63: '0' (ID: 15)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13322703540325165
    2. ''' → logprob: -2.3832271099090576
    3. '"' → logprob: -4.2582268714904785
    4. '1' → logprob: -5.0082268714904785
    5. '0' → logprob: -5.8832268714904785
    6. ''s' → logprob: -5.8832268714904785
    7. 'a' → logprob: -6.1332268714904785
    8. 'd' → logprob: -7.5082268714904785
    9. '"s' → logprob: -7.6332268714904785
    10. 'j' → logprob: -7.7582268714904785

Token 64: '"' (ID: 1)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.6555303335189819
    2. '"' → logprob: -0.9055303335189819
    3. '"):' → logprob: -3.1555304527282715
    4. '")' → logprob: -4.9055304527282715
    5. ':' → logprob: -4.9055304527282715
    6. '0' → logprob: -5.1555304527282715
    7. ')' → logprob: -5.9055304527282715
    8. '):' → logprob: -5.9055304527282715
    9. '1' → logprob: -6.2805304527282715
    10. ' "' → logprob: -7.2805304527282715

Token 65: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0057314676232635975
    2. ' :' → logprob: -6.130731582641602
    3. '[' → logprob: -6.630731582641602
    4. ' and' → logprob: -7.755731582641602
    5. '.' → logprob: -8.005731582641602
    6. '):' → logprob: -8.005731582641602
    7. ' or' → logprob: -8.505731582641602
    8. ':
' → logprob: -8.630731582641602
    9. ' ' → logprob: -9.130731582641602
    10. ')' → logprob: -9.130731582641602

Token 66: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6497112512588501
    2. ' s' → logprob: -0.7747112512588501
    3. 'len' → logprob: -5.2747111320495605
    4. ' ' → logprob: -5.3997111320495605
    5. ' len' → logprob: -5.7747111320495605
    6. '0' → logprob: -6.1497111320495605
    7. ' i' → logprob: -8.462211608886719
    8. '1' → logprob: -8.774711608886719
    9. 'i' → logprob: -8.774711608886719
    10. '"' → logprob: -9.024711608886719

Token 67: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.42961034178733826
    2. '[' → logprob: -1.0546103715896606
    3. '[len' → logprob: -7.304610252380371
    4. 's' → logprob: -10.304610252380371
    5. '.' → logprob: -10.554610252380371
    6. '.endswith' → logprob: -10.679610252380371
    7. '==' → logprob: -10.679610252380371
    8. '0' → logprob: -11.054610252380371
    9. '[s' → logprob: -11.554610252380371
    10. '[i' → logprob: -11.679610252380371

Token 68: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004130641929805279
    2. '1' → logprob: -6.629130840301514
    3. ']' → logprob: -6.754130840301514
    4. 's' → logprob: -7.254130840301514
    5. ' ' → logprob: -7.254130840301514
    6. '9' → logprob: -10.129130363464355
    7. '"' → logprob: -10.254130363464355
    8. '[' → logprob: -10.754130363464355
    9. ')' → logprob: -10.754130363464355
    10. 'i' → logprob: -11.004130363464355

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003333372063934803
    2. ']==' → logprob: -6.628333568572998
    3. '"]' → logprob: -7.003333568572998
    4. '==' → logprob: -8.12833309173584
    5. '"' → logprob: -8.12833309173584
    6. '0' → logprob: -8.75333309173584
    7. ' ]' → logprob: -9.12833309173584
    8. ')' → logprob: -9.87833309173584
    9. ' ==' → logprob: -10.62833309173584
    10. '[' → logprob: -11.00333309173584

Token 70: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.32200902700424194
    2. ' ==' → logprob: -1.3220090866088867
    3. '=="' → logprob: -5.822009086608887
    4. ' ' → logprob: -6.572009086608887
    5. '"' → logprob: -6.697009086608887
    6. '!=' → logprob: -7.072009086608887
    7. ' "' → logprob: -7.697009086608887
    8. '=' → logprob: -7.947009086608887
    9. ' !=' → logprob: -7.947009086608887
    10. '0' → logprob: -8.072009086608887

Token 71: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005361109972000122
    2. ' "' → logprob: -6.005361080169678
    3. ''' → logprob: -6.880361080169678
    4. '0' → logprob: -6.880361080169678
    5. 's' → logprob: -7.380361080169678
    6. ' ' → logprob: -9.130361557006836
    7. ' s' → logprob: -10.255361557006836
    8. ' '' → logprob: -11.005361557006836
    9. 'str' → logprob: -11.880361557006836
    10. '"s' → logprob: -11.880361557006836

Token 72: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12397578358650208
    2. ''' → logprob: -2.9989757537841797
    3. '0' → logprob: -2.9989757537841797
    4. 's' → logprob: -4.12397575378418
    5. ' "' → logprob: -8.37397575378418
    6. 'str' → logprob: -8.49897575378418
    7. ' ' → logprob: -9.62397575378418
    8. ' '' → logprob: -9.74897575378418
    9. 'n' → logprob: -10.43647575378418
    10. ' s' → logprob: -10.56147575378418

Token 73: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.10459543019533157
    2. ':' → logprob: -2.354595422744751
    3. '"' → logprob: -5.60459566116333
    4. '"):' → logprob: -8.104595184326172
    5. '):' → logprob: -8.479595184326172
    6. ' ":' → logprob: -9.104595184326172
    7. ' :' → logprob: -11.479595184326172
    8. '"]:' → logprob: -11.479595184326172
    9. '">' → logprob: -11.604595184326172
    10. '':' → logprob: -12.104595184326172

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009113786742091179
    2. '   ' → logprob: -5.634113788604736
    3. ' continue' → logprob: -5.884113788604736
    4. ':' → logprob: -6.134113788604736
    5. 'continue' → logprob: -8.384113311767578
    6. '	continue' → logprob: -8.759113311767578
    7. '	' → logprob: -10.509113311767578
    8. '           ' → logprob: -10.759113311767578
    9. '	   ' → logprob: -10.759113311767578
    10. '    ' → logprob: -11.009113311767578

Token 75: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44967663288116455
    2. ' continue' → logprob: -1.5746766328811646
    3. '   ' → logprob: -2.449676513671875
    4. 'continue' (adapté à ' continue') → logprob: -2.824676513671875
    5. '	continue' → logprob: -4.824676513671875
    6. '
' → logprob: -8.324676513671875
    7. '    ' → logprob: -8.574676513671875
    8. '    
' → logprob: -8.824676513671875
    9. '```' → logprob: -8.824676513671875
    10. '	' → logprob: -9.199676513671875

Token 76: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4063067138195038
    2. '
' → logprob: -1.2813067436218262
    3. '<|end|>' → logprob: -3.656306743621826
    4. '    
' → logprob: -3.781306743621826
    5. '   
' → logprob: -6.031306743621826
    6. '  
' → logprob: -6.031306743621826
    7. '  ' → logprob: -7.531306743621826
    8. '\n' → logprob: -7.656306743621826
    9. ' 
' → logprob: -7.906306743621826
    10. '\' → logprob: -8.156306266784668

Token 77: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5406062602996826
    2. '   ' → logprob: -1.0406062602996826
    3. '<|end|>' → logprob: -3.0406062602996826
    4. '    
' → logprob: -4.665606498718262
    5. '  
' → logprob: -5.915606498718262
    6. ' 
' → logprob: -6.790606498718262
    7. 'd' → logprob: -7.040606498718262
    8. '   
' → logprob: -7.665606498718262
    9. '
' → logprob: -7.915606498718262
    10. '  ' → logprob: -8.290606498718262

Token 78: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20547068119049072
    2. 'd' (adapté à ' d') → logprob: -2.205470561981201
    3. ' d' → logprob: -3.455470561981201
    4. ' ' → logprob: -4.330470561981201
    5. '    
' → logprob: -4.955470561981201
    6. ' 
' → logprob: -5.330470561981201
    7. '  
' → logprob: -5.455470561981201
    8. '
' → logprob: -5.955470561981201
    9. '    ' → logprob: -5.955470561981201
    10. '[' → logprob: -6.205470561981201

Token 79: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.34131699800491333
    2. '[s' → logprob: -1.3413169384002686
    3. '[' → logprob: -3.9663169384002686
    4. '[d' → logprob: -4.841317176818848
    5. '[i' → logprob: -7.591317176818848
    6. '[len' → logprob: -8.716317176818848
    7. '[n' → logprob: -10.091317176818848
    8. '[c' → logprob: -10.966317176818848
    9. '[str' → logprob: -11.216317176818848
    10. '[f' → logprob: -11.841317176818848

Token 80: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.000644764571916312
    2. 's' → logprob: -7.375644683837891
    3. '(' → logprob: -11.00064468383789
    4. '](' → logprob: -14.50064468383789
    5. ' (' → logprob: -14.75064468383789
    6. ']' → logprob: -16.00064468383789
    7. '(d' → logprob: -16.12564468383789
    8. 'd' → logprob: -16.12564468383789
    9. '[s' → logprob: -16.50064468383789
    10. ')(' → logprob: -16.75064468383789

Token 81: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024862384889274836
    2. '[-' → logprob: -6.002486228942871
    3. '0' → logprob: -11.877486228942871
    4. ')' → logprob: -13.252486228942871
    5. '[
' → logprob: -14.752486228942871
    6. ' [' → logprob: -15.252486228942871
    7. ')]' → logprob: -15.502486228942871
    8. ' ' → logprob: -16.002487182617188
    9. ')][' → logprob: -16.127487182617188
    10. '[int' → logprob: -16.252487182617188

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03335507959127426
    2. '-' → logprob: -3.5333549976348877
    3. '[' → logprob: -5.783355236053467
    4. ' ' → logprob: -7.908355236053467
    5. '[-' → logprob: -9.158354759216309
    6. ' -' → logprob: -11.533354759216309
    7. '```' → logprob: -11.658354759216309
    8. '   ' → logprob: -11.908354759216309
    9. '(' → logprob: -12.408354759216309
    10. ']' → logprob: -12.533354759216309

Token 83: '])' (ID: 4636)
  Prédit: ')]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.009303370490670204
    2. '")' → logprob: -5.259303569793701
    3. ')-' → logprob: -6.259303569793701
    4. ')]' → logprob: -6.384303569793701
    5. '')' → logprob: -8.509303092956543
    6. ')' → logprob: -9.384303092956543
    7. '())' → logprob: -9.634303092956543
    8. '`)' → logprob: -10.509303092956543
    9. '-)' → logprob: -10.634303092956543
    10. '[' → logprob: -11.259303092956543

Token 84: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03859207034111023
    2. '[int' → logprob: -3.2885921001434326
    3. ')][' → logprob: -8.663592338562012
    4. ' ][' → logprob: -8.913592338562012
    5. '-' → logprob: -9.038592338562012
    6. '[' → logprob: -9.538592338562012
    7. ']' → logprob: -11.038592338562012
    8. ']int' → logprob: -11.413592338562012
    9. ']][' → logprob: -12.038592338562012
    10. '"][' → logprob: -12.288592338562012

Token 85: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.6240566083070007e-06
    2. ' int' → logprob: -13.500001907348633
    3. '(int' → logprob: -16.875001907348633
    4. ']int' → logprob: -17.125001907348633
    5. '[int' → logprob: -17.500001907348633
    6. '-' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.250001907348633
    8. '=int' → logprob: -18.250001907348633
    9. ':int' → logprob: -19.250001907348633
    10. '1' → logprob: -19.375001907348633

Token 86: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004086708649992943
    2. '(' → logprob: -5.504086494445801
    3. 's' → logprob: -12.0040864944458
    4. ' (' → logprob: -13.2540864944458
    5. '(d' → logprob: -15.6290864944458
    6. '(
' → logprob: -15.7540864944458
    7. '(

' → logprob: -17.254087448120117
    8. ')' → logprob: -18.129087448120117
    9. '((' → logprob: -18.129087448120117
    10. ']' → logprob: -18.254087448120117

Token 87: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0060316575691103935
    2. '[' → logprob: -5.131031513214111
    3. '-' → logprob: -9.50603199005127
    4. '1' → logprob: -11.25603199005127
    5. '0' → logprob: -12.00603199005127
    6. ')]' → logprob: -12.88103199005127
    7. ')' → logprob: -13.13103199005127
    8. ' ' → logprob: -14.13103199005127
    9. '[
' → logprob: -14.13103199005127
    10. '(-' → logprob: -14.25603199005127

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -13.625007629394531
    3. ')]' → logprob: -13.750007629394531
    4. '-' → logprob: -13.875007629394531
    5. '```' → logprob: -14.250007629394531
    6. ']' → logprob: -14.375007629394531
    7. '0' → logprob: -14.500007629394531
    8. '   ' → logprob: -14.625007629394531
    9. '()' → logprob: -14.625007629394531
    10. ')' → logprob: -15.250007629394531

Token 89: '])]' (ID: 178925)
  Prédit: '])]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])]' → logprob: -0.3960358202457428
    2. ')]' → logprob: -1.6460357904434204
    3. ')' → logprob: -2.14603590965271
    4. ']' → logprob: -4.521035671234131
    5. '])' → logprob: -5.271035671234131
    6. ']]' → logprob: -7.771035671234131
    7. '1' → logprob: -7.771035671234131
    8. ')])' → logprob: -9.021036148071289
    9. '")]' → logprob: -9.146036148071289
    10. '')]' → logprob: -9.646036148071289

Token 90: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006865271367132664
    2. ' +=' → logprob: -5.131865501403809
    3. '[' → logprob: -7.506865501403809
    4. '=' → logprob: -8.381865501403809
    5. '+' → logprob: -9.006865501403809
    6. ']+=' → logprob: -10.381865501403809
    7. '+=(' → logprob: -13.631865501403809
    8. '++' → logprob: -13.881865501403809
    9. '+='' → logprob: -14.006865501403809
    10. ' ' → logprob: -15.006865501403809

Token 91: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004303595516830683
    2. ' d' → logprob: -5.504303455352783
    3. '1' → logprob: -8.629303932189941
    4. '   ' → logprob: -10.879303932189941
    5. '0' → logprob: -11.129303932189941
    6. ' ' → logprob: -11.879303932189941
    7. '+' → logprob: -13.004303932189941
    8. '  ' → logprob: -13.754303932189941
    9. '(d' → logprob: -15.004303932189941
    10. '	d' → logprob: -15.254303932189941

Token 92: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.41866585687967e-06
    2. 'int' → logprob: -12.125008583068848
    3. '[' → logprob: -13.250008583068848
    4. '[i' → logprob: -14.125008583068848
    5. '<int' → logprob: -16.00000762939453
    6. '```' → logprob: -16.37500762939453
    7. '[in' → logprob: -16.75000762939453
    8. '[str' → logprob: -16.87500762939453
    9. '[d' → logprob: -17.25000762939453
    10. 'd' → logprob: -17.25000762939453

Token 93: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0004107732092961669
    2. '(' → logprob: -8.375411033630371
    3. 's' → logprob: -8.625411033630371
    4. '<|end|>' → logprob: -15.875411033630371
    5. ' (' → logprob: -16.250410079956055
    6. '('' → logprob: -16.375410079956055
    7. '((' → logprob: -16.625410079956055
    8. ' ' → logprob: -16.750410079956055
    9. '[s' → logprob: -16.875410079956055
    10. '(S' → logprob: -17.250410079956055

Token 94: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07152404636144638
    2. '0' → logprob: -2.696524143218994
    3. '[-' → logprob: -6.696524143218994
    4. '-' → logprob: -8.946523666381836
    5. ' ' → logprob: -9.446523666381836
    6. ')' → logprob: -9.821523666381836
    7. 's' → logprob: -9.946523666381836
    8. ' [' → logprob: -11.946523666381836
    9. '   ' → logprob: -12.321523666381836
    10. '[
' → logprob: -12.446523666381836

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17302264273166656
    2. '-' → logprob: -1.9230226278305054
    3. '[' → logprob: -4.923022747039795
    4. '[-' → logprob: -5.298022747039795
    5. ' ' → logprob: -8.548022270202637
    6. '   ' → logprob: -10.048022270202637
    7. ' -' → logprob: -10.173022270202637
    8. '1' → logprob: -10.173022270202637
    9. '```' → logprob: -10.798022270202637
    10. '(' → logprob: -11.048022270202637

Token 96: '])' (ID: 4636)
  Prédit: ')]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.20748573541641235
    2. '[' → logprob: -1.8324856758117676
    3. ')' → logprob: -4.457485675811768
    4. '0' → logprob: -5.082485675811768
    5. ')]' → logprob: -5.457485675811768
    6. '][' → logprob: -5.832485675811768
    7. ')[' → logprob: -6.332485675811768
    8. ' ' → logprob: -8.957486152648926
    9. '[-' → logprob: -9.332486152648926
    10. '   ' → logprob: -9.957486152648926

Token 97: '][' (ID: 2696)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.16512873768806458
    2. '][' → logprob: -1.9151287078857422
    3. ')][' → logprob: -5.665128707885742
    4. '[' → logprob: -7.415128707885742
    5. 'int' → logprob: -8.165128707885742
    6. ')[' → logprob: -8.915128707885742
    7. 's' → logprob: -9.540128707885742
    8. '[s' → logprob: -9.540128707885742
    9. '"][' → logprob: -9.790128707885742
    10. ''][' → logprob: -10.665128707885742

Token 98: 'int' (ID: 491)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016089973971247673
    2. 'int' → logprob: -4.141089916229248
    3. '-' → logprob: -11.016090393066406
    4. '(s' → logprob: -11.266090393066406
    5. '0' → logprob: -11.516090393066406
    6. '(int' → logprob: -11.891090393066406
    7. '[int' → logprob: -12.266090393066406
    8. ' s' → logprob: -13.266090393066406
    9. ' int' → logprob: -14.141090393066406
    10. '1' → logprob: -14.141090393066406

Token 99: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0013355977134779096
    2. 's' → logprob: -6.626335620880127
    3. '(' → logprob: -12.001335144042969
    4. '[s' → logprob: -13.876335144042969
    5. ']' → logprob: -14.501335144042969
    6. '(-' → logprob: -14.751335144042969
    7. '1' → logprob: -14.751335144042969
    8. '-' → logprob: -15.501335144042969
    9. '0' → logprob: -15.751335144042969
    10. '[' → logprob: -15.876335144042969

Token 100: '[-' (ID: 17503)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.632990300655365
    2. '[-' → logprob: -0.757990300655365
    3. '1' → logprob: -8.632989883422852
    4. '[' → logprob: -9.132989883422852
    5. ')]' → logprob: -10.007989883422852
    6. '(-' → logprob: -11.257989883422852
    7. '```' → logprob: -11.257989883422852
    8. '][-' → logprob: -11.382989883422852
    9. '0' → logprob: -12.507989883422852
    10. '[j' → logprob: -12.632989883422852

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ']' → logprob: -14.25000286102295
    3. ' ' → logprob: -14.75000286102295
    4. '```' → logprob: -14.75000286102295
    5. 'last' → logprob: -15.37500286102295
    6. 'len' → logprob: -15.87500286102295
    7. '])' → logprob: -16.000001907348633
    8. '0' → logprob: -16.250001907348633
    9. '   ' → logprob: -17.125001907348633
    10. ']]' → logprob: -17.187501907348633

Token 102: '])]' (ID: 178925)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10833510756492615
    2. ']]' → logprob: -2.358335018157959
    3. ')' → logprob: -5.608335018157959
    4. ']' → logprob: -6.108335018157959
    5. '])]' → logprob: -6.733335018157959
    6. '])' → logprob: -6.983335018157959
    7. '')]' → logprob: -10.608335494995117
    8. '1' → logprob: -11.108335494995117
    9. ']+' → logprob: -11.233335494995117
    10. '")]' → logprob: -11.483335494995117

Token 103: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026310982182621956
    2. ' +' → logprob: -3.651310920715332
    3. ' plus' → logprob: -13.026310920715332
    4. '+
' → logprob: -13.151310920715332
    5. '1' → logprob: -13.276310920715332
    6. '+i' → logprob: -13.526310920715332
    7. ']+' → logprob: -14.276310920715332
    8. '0' → logprob: -14.651310920715332
    9. ' ' → logprob: -14.651310920715332
    10. '＋' → logprob: -15.276310920715332

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.620622712536715e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.250045776367188
    4. '```' → logprob: -17.875045776367188
    5. '  ' → logprob: -18.500045776367188
    6. '100' → logprob: -19.750045776367188
    7. '１' → logprob: -20.125045776367188
    8. '`' → logprob: -20.625045776367188
    9. ' ' → logprob: -21.000045776367188
    10. '+' → logprob: -21.000045776367188

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.875
    4. '  ' → logprob: -21.25
    5. '```' → logprob: -21.75
    6. '１' → logprob: -22.375
    7. '۱' → logprob: -22.875
    8. '...' → logprob: -23.375
    9. '
' → logprob: -24.125
    10. 'i' → logprob: -24.5

Token 106: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018186001107096672
    2. 'print' → logprob: -4.643186092376709
    3. '
' → logprob: -5.018186092376709
    4. 'n' → logprob: -6.768186092376709
    5. '

' → logprob: -8.14318561553955
    6. 'result' → logprob: -9.51818561553955
    7. ' for' → logprob: -9.76818561553955
    8. '```' → logprob: -10.26818561553955
    9. 'm' → logprob: -10.51818561553955
    10. '  
' → logprob: -10.76818561553955

Token 107: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014561496675014496
    2. 'print' → logprob: -4.264561653137207
    3. 'n' → logprob: -9.014561653137207
    4. 'result' → logprob: -9.014561653137207
    5. ' for' → logprob: -9.639561653137207
    6. 'answer' → logprob: -10.764561653137207
    7. 'r' → logprob: -11.514561653137207
    8. 'count' → logprob: -11.764561653137207
    9. 'ans' → logprob: -12.014561653137207
    10. '#' → logprob: -12.139561653137207

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688600063323975
    2. '=' → logprob: -1.1368860006332397
    3. '=[]' → logprob: -12.636885643005371
    4. '[' → logprob: -12.761885643005371
    5. '(' → logprob: -13.261885643005371
    6. ',' → logprob: -13.386885643005371
    7. 's' → logprob: -13.636885643005371
    8. ' ' → logprob: -13.761885643005371
    9. '=[' → logprob: -14.261885643005371
    10. '_' → logprob: -14.261885643005371

Token 109: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000563638168387115
    2. ' ' → logprob: -8.000563621520996
    3. '[]' → logprob: -8.750563621520996
    4. 'sum' → logprob: -10.000563621520996
    5. '[]
' → logprob: -11.750563621520996
    6. '[' → logprob: -11.875563621520996
    7. '"' → logprob: -12.875563621520996
    8. '""' → logprob: -13.125563621520996
    9. ' []' → logprob: -13.375563621520996
    10. '[[' → logprob: -13.625563621520996

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.015305552864447e-05
    2. '[]' → logprob: -10.125060081481934
    3. 'sum' → logprob: -12.000060081481934
    4. '[]
' → logprob: -12.250060081481934
    5. ' ' → logprob: -12.625060081481934
    6. '[[' → logprob: -13.125060081481934
    7. '[' → logprob: -13.250060081481934
    8. '""' → logprob: -14.000060081481934
    9. '"' → logprob: -14.250060081481934
    10. '[][]' → logprob: -16.37506103515625

Token 111: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.088346359931165e-07
    2. ' for' → logprob: -14.250000953674316
    3. '```' → logprob: -15.875000953674316
    4. '
' → logprob: -17.875
    5. 'For' → logprob: -20.125
    6. '``' → logprob: -20.25
    7. '	for' → logprob: -20.375
    8. '<|end|>' → logprob: -21.25
    9. '`' → logprob: -21.75
    10. 'or' → logprob: -22.625

Token 112: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.375
    3. '```' → logprob: -19.875
    4. '
' → logprob: -20.25
    5. '	for' → logprob: -21.875
    6. '   ' → logprob: -22.75
    7. '<|end|>' → logprob: -23.875
    8. '``' → logprob: -23.875
    9. 'For' → logprob: -24.25
    10. 'from' → logprob: -24.625

Token 113: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00854495633393526
    2. ' i' → logprob: -5.133544921875
    3. 'a' → logprob: -6.508544921875
    4. 'x' → logprob: -6.883544921875
    5. 'j' → logprob: -10.883544921875
    6. 'k' → logprob: -11.008544921875
    7. ' x' → logprob: -11.258544921875
    8. ' a' → logprob: -11.758544921875
    9. '```' → logprob: -12.008544921875
    10. 'f' → logprob: -12.258544921875

Token 114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006889304146170616
    2. 'in' → logprob: -5.006889343261719
    3. ' ' → logprob: -9.256889343261719
    4. 'range' → logprob: -9.631889343261719
    5. ' range' → logprob: -12.381889343261719
    6. '0' → logprob: -12.881889343261719
    7. 'n' → logprob: -13.256889343261719
    8. '1' → logprob: -13.506889343261719
    9. '  ' → logprob: -13.881889343261719
    10. '   ' → logprob: -14.506889343261719

Token 115: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015943869948387146
    2. ' range' → logprob: -8.75015926361084
    3. '
' → logprob: -15.25015926361084
    4. '10' → logprob: -15.37515926361084
    5. '(range' → logprob: -15.87515926361084
    6. ' ' → logprob: -16.125160217285156
    7. 'r' → logprob: -16.500160217285156
    8. '   ' → logprob: -16.750160217285156
    9. '

' → logprob: -17.250160217285156
    10. '```' → logprob: -17.250160217285156

Token 116: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013217651285231113
    2. '10' → logprob: -4.513217449188232
    3. '1' → logprob: -6.138217449188232
    4. ' (' → logprob: -12.38821792602539
    5. '0' → logprob: -13.13821792602539
    6. ' ' → logprob: -14.26321792602539
    7. '```' → logprob: -14.51321792602539
    8. '(
' → logprob: -15.13821792602539
    9. '
' → logprob: -15.51321792602539
    10. '   ' → logprob: -15.76321792602539

Token 117: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.041768160182983e-05
    2. '1' → logprob: -9.625080108642578
    3. ' ' → logprob: -11.250080108642578
    4. '0' → logprob: -14.250080108642578
    5. '   ' → logprob: -15.500080108642578
    6. '(' → logprob: -16.500080108642578
    7. ')' → logprob: -16.750080108642578
    8. '```' → logprob: -16.875080108642578
    9. '
' → logprob: -17.250080108642578
    10. 'len' → logprob: -17.375080108642578

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2536363899707794
    2. '0' → logprob: -1.503636360168457
    3. ' ,' → logprob: -6.878636360168457
    4. '10' → logprob: -7.378636360168457
    5. '1' → logprob: -10.628636360168457
    6. ' ' → logprob: -10.628636360168457
    7. '   ' → logprob: -14.253636360168457
    8. ',
' → logprob: -14.378636360168457
    9. '```' → logprob: -14.628636360168457
    10. '(' → logprob: -14.878636360168457

Token 119: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009296870557591319
    2. ' ' → logprob: -7.000929832458496
    3. '11' → logprob: -11.625929832458496
    4. '0' → logprob: -12.250929832458496
    5. ')' → logprob: -13.750929832458496
    6. '   ' → logprob: -13.875929832458496
    7. '```' → logprob: -14.125929832458496
    8. 'len' → logprob: -14.500929832458496
    9. '1' → logprob: -14.750929832458496
    10. 'n' → logprob: -15.250929832458496

Token 120: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '0' → logprob: -17.5
    4. 'n' → logprob: -18.25
    5. '１０' → logprob: -18.375
    6. '1' → logprob: -19.0
    7. 'len' → logprob: -19.5
    8. '```' → logprob: -20.125
    9. '۱۰' → logprob: -20.375
    10. '   ' → logprob: -20.375

Token 121: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04890311509370804
    2. '):' → logprob: -3.048903226852417
    3. ':' → logprob: -8.673903465270996
    4. ':
' → logprob: -10.048903465270996
    5. '10' → logprob: -10.298903465270996
    6. '0' → logprob: -10.673903465270996
    7. ')' → logprob: -11.048903465270996
    8. '):
' → logprob: -11.548903465270996
    9. '   ' → logprob: -12.048903465270996
    10. ' ):
' → logprob: -12.673903465270996

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.154394268989563
    2. 'for' → logprob: -2.4043941497802734
    3. ' for' → logprob: -3.1543941497802734
    4. '<|end|>' → logprob: -5.029394149780273
    5. '       ' → logprob: -6.654394149780273
    6. '	for' → logprob: -6.654394149780273
    7. ' ' → logprob: -7.154394149780273
    8. '<|end|>' → logprob: -10.029394149780273
    9. '  ' → logprob: -10.279394149780273
    10. '```' → logprob: -11.029394149780273

Token 123: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13086113333702087
    2. '   ' → logprob: -2.6308610439300537
    3. ' for' → logprob: -3.0058610439300537
    4. '       ' → logprob: -7.755861282348633
    5. '<|end|>' → logprob: -8.255861282348633
    6. '	for' → logprob: -8.380861282348633
    7. ' ' → logprob: -8.505861282348633
    8. '    ' → logprob: -11.255861282348633
    9. '  ' → logprob: -11.880861282348633
    10. '<|end|>' → logprob: -13.255861282348633

Token 124: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.023250950500369072
    2. ' j' → logprob: -3.7732510566711426
    3. '   ' → logprob: -12.648250579833984
    4. ' ' → logprob: -13.773250579833984
    5. '	j' → logprob: -14.023250579833984
    6. '_j' → logprob: -15.398250579833984
    7. '  ' → logprob: -16.523250579833984
    8. '$j' → logprob: -17.523250579833984
    9. '    ' → logprob: -17.773250579833984
    10. '<|end|>' → logprob: -17.898250579833984

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10024376213550568
    2. 'in' → logprob: -2.3502438068389893
    3. '(' → logprob: -11.22524356842041
    4. ' ' → logprob: -11.22524356842041
    5. 'range' → logprob: -12.35024356842041
    6. '   ' → logprob: -12.85024356842041
    7. '<|end|>' → logprob: -14.22524356842041
    8. '1' → logprob: -14.35024356842041
    9. ' range' → logprob: -14.60024356842041
    10. '	in' → logprob: -14.72524356842041

Token 126: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01857971027493477
    2. ' range' → logprob: -4.018579483032227
    3. '(range' → logprob: -7.768579483032227
    4. '(' → logprob: -11.893579483032227
    5. '	range' → logprob: -16.518579483032227
    6. ' ' → logprob: -17.643579483032227
    7. '   ' → logprob: -18.143579483032227
    8. 'for' → logprob: -18.393579483032227
    9. '10' → logprob: -18.393579483032227
    10. '.range' → logprob: -18.643579483032227

Token 127: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.380904672667384e-05
    2. 'range' → logprob: -10.500033378601074
    3. '(range' → logprob: -12.500033378601074
    4. ' range' → logprob: -13.375033378601074
    5. '1' → logprob: -15.000033378601074
    6. ' (' → logprob: -15.125033378601074
    7. '(i' → logprob: -16.62503433227539
    8. '10' → logprob: -16.62503433227539
    9. 'in' → logprob: -16.62503433227539
    10. '   ' → logprob: -16.87503433227539

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4757297933101654
    2. '10' → logprob: -0.9757298231124878
    3. '(' → logprob: -6.725729942321777
    4. ' ' → logprob: -7.850729942321777
    5. '   ' → logprob: -10.225729942321777
    6. 'i' → logprob: -10.850729942321777
    7. '9' → logprob: -13.225729942321777
    8. '0' → logprob: -13.225729942321777
    9. '(i' → logprob: -13.975729942321777
    10. ',' → logprob: -14.475729942321777

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009796975646167994
    2. '10' → logprob: -7.625979900360107
    3. ' ,' → logprob: -8.25097942352295
    4. '9' → logprob: -8.50097942352295
    5. ' ' → logprob: -11.25097942352295
    6. '0' → logprob: -11.50097942352295
    7. '1' → logprob: -13.12597942352295
    8. '(' → logprob: -13.75097942352295
    9. '```' → logprob: -15.00097942352295
    10. '_,' → logprob: -15.87597942352295

Token 130: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0013532141456380486
    2. ' ' → logprob: -6.6263532638549805
    3. '   ' → logprob: -11.37635326385498
    4. '0' → logprob: -11.75135326385498
    5. 'i' → logprob: -11.87635326385498
    6. ' i' → logprob: -15.12635326385498
    7. '9' → logprob: -15.25135326385498
    8. '  ' → logprob: -15.75135326385498
    9. '    ' → logprob: -16.751352310180664
    10. '1' → logprob: -16.751352310180664

Token 131: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.779520092299208e-05
    2. '0' → logprob: -10.125078201293945
    3. ' ' → logprob: -10.250078201293945
    4. 'i' → logprob: -13.375078201293945
    5. '   ' → logprob: -14.375078201293945
    6. 'n' → logprob: -16.500078201293945
    7. '```' → logprob: -17.500078201293945
    8. '1' → logprob: -17.750078201293945
    9. 'j' → logprob: -17.875078201293945
    10. '(' → logprob: -18.000078201293945

Token 132: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7331533432006836
    2. '):' → logprob: -1.2331533432006836
    3. '+' → logprob: -1.4831533432006836
    4. ':' → logprob: -7.233153343200684
    5. '   ' → logprob: -8.858153343200684
    6. ' ):
' → logprob: -8.983153343200684
    7. ' +' → logprob: -9.358153343200684
    8. ' ):' → logprob: -9.733153343200684
    9. '):
' → logprob: -10.608153343200684
    10. '1' → logprob: -10.733153343200684

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.743758760625497e-05
    2. '   ' → logprob: -9.875077247619629
    3. 'ans' → logprob: -11.125077247619629
    4. ' ans' → logprob: -12.375077247619629
    5. '           ' → logprob: -13.000077247619629
    6. '	ans' → logprob: -13.500077247619629
    7. '<|end|>' → logprob: -14.250077247619629
    8. '      ' → logprob: -14.625077247619629
    9. '     ' → logprob: -14.750077247619629
    10. '```' → logprob: -14.875077247619629

Token 134: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.005942667368799448
    2. '       ' → logprob: -6.1309428215026855
    3. ' ans' → logprob: -6.2559428215026855
    4. '   ' → logprob: -6.6309428215026855
    5. '	ans' → logprob: -7.7559428215026855
    6. '           ' → logprob: -9.630942344665527
    7. '(ans' → logprob: -11.630942344665527
    8. 'if' → logprob: -12.255942344665527
    9. 'answer' → logprob: -13.255942344665527
    10. ' ' → logprob: -14.505942344665527

Token 135: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12699435651302338
    2. ' +=' → logprob: -2.1269943714141846
    3. '+=(' → logprob: -10.376994132995605
    4. '+' → logprob: -10.751994132995605
    5. '=' → logprob: -12.001994132995605
    6. '   ' → logprob: -13.001994132995605
    7. '+='' → logprob: -13.626994132995605
    8. ']+=' → logprob: -13.626994132995605
    9. '+="' → logprob: -14.001994132995605
    10. '```' → logprob: -14.626994132995605

Token 136: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.14323581755161285
    2. 'ans' → logprob: -2.018235921859741
    3. '(ans' → logprob: -7.893235683441162
    4. '	ans' → logprob: -8.89323616027832
    5. 'd' → logprob: -11.26823616027832
    6. 'max' → logprob: -11.39323616027832
    7. ' ' → logprob: -11.64323616027832
    8. ' max' → logprob: -12.14323616027832
    9. '+' → logprob: -12.39323616027832
    10. ' d' → logprob: -12.64323616027832

Token 137: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31765440106391907
    2. ' +' → logprob: -1.3176543712615967
    3. '+d' → logprob: -5.442654609680176
    4. ' ' → logprob: -10.692654609680176
    5. 'd' → logprob: -11.192654609680176
    6. ' d' → logprob: -11.192654609680176
    7. '+i' → logprob: -14.567654609680176
    8. '+
' → logprob: -14.567654609680176
    9. '+=' → logprob: -14.567654609680176
    10. ' plus' → logprob: -14.942654609680176

Token 138: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03805629536509514
    2. ' d' → logprob: -3.2880563735961914
    3. '   ' → logprob: -11.663056373596191
    4. '	d' → logprob: -12.663056373596191
    5. ' ' → logprob: -13.538056373596191
    6. '(d' → logprob: -14.163056373596191
    7. '       ' → logprob: -15.038056373596191
    8. '  ' → logprob: -15.288056373596191
    9. '>d' → logprob: -15.913056373596191
    10. '    ' → logprob: -16.163055419921875

Token 139: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00032485672272741795
    2. '[' → logprob: -8.625325202941895
    3. '[int' → logprob: -9.500325202941895
    4. '[j' → logprob: -9.625325202941895
    5. 'i' → logprob: -13.375325202941895
    6. ' [' → logprob: -14.000325202941895
    7. '[s' → logprob: -14.500325202941895
    8. '\[' → logprob: -14.750325202941895
    9. '```' → logprob: -15.625325202941895
    10. '[
' → logprob: -15.625325202941895

Token 140: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2843167185783386
    2. '[j' → logprob: -1.4093167781829834
    3. '[' → logprob: -6.284316539764404
    4. '[i' → logprob: -7.909316539764404
    5. '"][' → logprob: -9.034317016601562
    6. 'j' → logprob: -9.034317016601562
    7. '[k' → logprob: -9.284317016601562
    8. ' ][' → logprob: -9.409317016601562
    9. '>[' → logprob: -9.409317016601562
    10. '[d' → logprob: -9.534317016601562

Token 141: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.9650025428272784e-05
    2. ' j' → logprob: -10.750040054321289
    3. '0' → logprob: -11.875040054321289
    4. '   ' → logprob: -12.375040054321289
    5. ']' → logprob: -13.750040054321289
    6. '[j' → logprob: -13.750040054321289
    7. '	j' → logprob: -14.000040054321289
    8. 'i' → logprob: -14.000040054321289
    9. ' ' → logprob: -14.375040054321289
    10. '][' → logprob: -14.500040054321289

Token 142: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2279609590768814
    2. ']' → logprob: -2.1029610633850098
    3. ']*' → logprob: -2.6029610633850098
    4. '*d' → logprob: -5.10296106338501
    5. ' *' → logprob: -6.47796106338501
    6. ' ' → logprob: -10.727960586547852
    7. '**' → logprob: -11.102960586547852
    8. ' ]' → logprob: -11.602960586547852
    9. '*j' → logprob: -11.727960586547852
    10. ' ' → logprob: -12.102960586547852

Token 143: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6589389443397522
    2. '*d' → logprob: -0.7839389443397522
    3. 'd' → logprob: -3.9089388847351074
    4. ' *' → logprob: -5.158938884735107
    5. ' d' → logprob: -9.408939361572266
    6. '**' → logprob: -10.158939361572266
    7. ' ' → logprob: -11.283939361572266
    8. '*j' → logprob: -11.658939361572266
    9. ' ' → logprob: -11.783939361572266
    10. '*
' → logprob: -12.158939361572266

Token 144: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07891876250505447
    2. ' d' → logprob: -2.578918695449829
    3. '	d' → logprob: -11.32891845703125
    4. ' ' → logprob: -11.57891845703125
    5. '   ' → logprob: -12.70391845703125
    6. '*d' → logprob: -13.57891845703125
    7. '  ' → logprob: -14.07891845703125
    8. ')d' → logprob: -14.57891845703125
    9. '<|end|>' → logprob: -15.07891845703125
    10. '[d' → logprob: -15.07891845703125

Token 145: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.5649528298527e-05
    2. '[' → logprob: -10.125075340270996
    3. '[i' → logprob: -11.000075340270996
    4. ' [' → logprob: -11.250075340270996
    5. '```' → logprob: -13.625075340270996
    6. '[d' → logprob: -14.375075340270996
    7. ''[' → logprob: -14.875075340270996
    8. 'j' → logprob: -14.875075340270996
    9. '`' → logprob: -15.125075340270996
    10. '[m' → logprob: -15.250075340270996

Token 146: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001669465214945376
    2. '][' → logprob: -6.751669406890869
    3. '[' → logprob: -7.626669406890869
    4. '[
' → logprob: -12.626669883728027
    5. 'i' → logprob: -13.251669883728027
    6. '[int' → logprob: -13.376669883728027
    7. '[j' → logprob: -13.626669883728027
    8. '"][' → logprob: -14.126669883728027
    9. '[I' → logprob: -14.251669883728027
    10. '}[' → logprob: -15.251669883728027

Token 147: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00029267906211316586
    2. ' i' → logprob: -8.625292778015137
    3. '[i' → logprob: -9.250292778015137
    4. '<|end|>' → logprob: -12.125292778015137
    5. '{i' → logprob: -12.250292778015137
    6. ')i' → logprob: -13.125292778015137
    7. ''i' → logprob: -13.625292778015137
    8. '_i' → logprob: -14.500292778015137
    9. '%i' → logprob: -14.625292778015137
    10. '$i' → logprob: -14.750292778015137

Token 148: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03837698698043823
    2. '<|end|>' → logprob: -3.288377046585083
    3. ']' → logprob: -8.288376808166504
    4. '<|end|>' → logprob: -10.788376808166504
    5. ')
' → logprob: -11.038376808166504
    6. '}' → logprob: -11.288376808166504
    7. '
' → logprob: -11.288376808166504
    8. ' )' → logprob: -12.788376808166504
    9. '#' → logprob: -12.788376808166504
    10. '*' → logprob: -13.038376808166504

Token 149: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00043126524542458355
    2. '
' → logprob: -7.750431060791016
    3. '
' → logprob: -15.375431060791016
    4. ' print' → logprob: -15.625431060791016
    5. '```' → logprob: -16.250431060791016
    6. ')
' → logprob: -17.375431060791016
    7. '``' → logprob: -18.750431060791016
    8. '`
' → logprob: -19.000431060791016
    9. '

' → logprob: -19.375431060791016
    10. ' 
' → logprob: -19.500431060791016

Token 150: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038087278604507446
    2. '(ans' → logprob: -3.2880873680114746
    3. '()' → logprob: -10.913086891174316
    4. '("("' → logprob: -11.538086891174316
    5. '('' → logprob: -12.038086891174316
    6. ' (' → logprob: -12.413086891174316
    7. '(`' → logprob: -12.663086891174316
    8. '(
' → logprob: -13.288086891174316
    9. '(an' → logprob: -14.413086891174316
    10. '(

' → logprob: -14.413086891174316

Token 151: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.75
    3. '))' → logprob: -16.0
    4. ')`' → logprob: -16.125
    5. '`)' → logprob: -18.75
    6. ')
' → logprob: -18.75
    7. '()' → logprob: -19.0
    8. '+' → logprob: -19.375
    9. '(' → logprob: -19.375
    10. '')' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 149
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 48.99%
Précision adaptée (1ère position): 51.01%
Précision (top 10): 87.92%
================================================================================
