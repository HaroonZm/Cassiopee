================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lire deux entiers de l'entrée standard, séparés par un espace.
# La fonction input() lit une ligne au format texte (string) depuis l'entrée standard.
# La méthode split() sépare cette ligne en une liste de sous-chaînes sur les espaces.
# La fonction map(int, ...) applique int() à chaque élément de cette liste, convertissant chaque chaîne en entier.
# Enfin, list(...) convertit le résultat de map en une liste explicite.
N, M = list(map(int, input().split()))

# La fonction divmod(a, b) retourne un tuple de deux éléments :
# 1. Le quotient de la division entière de a par b (a // b)
# 2. Le reste de la division de a par b (a % b)
# Ici, on divise M par N pour obtenir le nombre de fois que N entre dans M (quotient s) et le reste r.
s, r = divmod(M, N)

# On crée une variable appelée ans et on lui affecte la valeur 1.
# Bien que cette variable ne soit pas utilisée dans le reste du code, elle peut servir dans certains contextes.
ans = 1

# On commence une boucle for décroissante.
# La fonction range(start, stop, step) produit une séquence de nombres.
# Ici, elle commence à s et se termine à 1 inclus (car stop=0 et le step est négatif),
# en décrémentant de 1 à chaque itération.
for i in range(s, 0, -1):
    # Pour chaque valeur de i dans la séquence, on vérifie si i est un diviseur de M.
    # L'opérateur modulo % retourne le reste de la division entière de M par i.
    # Si M % i == 0, cela signifie que i divise M sans reste, donc i est un diviseur de M.
    if M % i == 0:
        # On affiche la valeur de i trouvée à l'aide de la fonction print().
        print(i)
        # On sort immédiatement de la boucle for avec l'instruction break.
        # Cela signifie qu'après avoir trouvé et affiché le premier diviseur trouvé en partant de s,
        # le programme arrête la recherche et sort de la boucle.
        break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lire' (ID: 57624)
  → Token d'amorce (pas de prédiction)

Token 2: ' deux' (ID: 10301)
  → Token d'amorce (pas de prédiction)

Token 3: ' ent' (ID: 1121)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.5548110008239746
    2. ' ' → logprob: -1.5548110008239746
    3. ' espaces' → logprob: -2.1798110008239746
    4. 'l' → logprob: -3.1798110008239746
    5. ' ' → logprob: -4.179811000823975
    6. ' ent' → logprob: -4.554811000823975
    7. ' mots' → logprob: -4.804811000823975
    8. ' nombres' → logprob: -5.054811000823975
    9. 's' → logprob: -5.179811000823975
    10. ' l' → logprob: -6.804811000823975

Token 4: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.5070736408233643
    2. 'ières' → logprob: -1.3820736408233643
    3. 'r' → logprob: -2.3820736408233643
    4. 'i' → logprob: -3.6320736408233643
    5. 'ié' → logprob: -4.507073402404785
    6. 'ier' → logprob: -5.132073402404785
    7. 'ière' → logprob: -5.757073402404785
    8. 'î' → logprob: -6.757073402404785
    9. '```' → logprob: -6.757073402404785
    10. 'rès' → logprob: -7.507073402404785

Token 5: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3774475157260895
    2. 'a' → logprob: -2.3774476051330566
    3. 'x' → logprob: -2.5024476051330566
    4. 'i' → logprob: -3.1274476051330566
    5. 'e' → logprob: -3.5024476051330566
    6. '\n' → logprob: -3.6274476051330566
    7. '\' → logprob: -4.627447605133057
    8. '```' → logprob: -4.752447605133057
    9. 's' → logprob: -5.127447605133057
    10. 'd' → logprob: -5.502447605133057

Token 6: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7184012532234192
    2. ' ' → logprob: -1.2184011936187744
    3. ' l' → logprob: -2.2184011936187744
    4. 's' → logprob: -3.4684011936187744
    5. 'r' → logprob: -3.9684011936187744
    6. ' input' → logprob: -4.7184014320373535
    7. 'ux' → logprob: -4.8434014320373535
    8. '_' → logprob: -5.2184014320373535
    9. ' la' → logprob: -5.3434014320373535
    10. ' ' → logprob: -5.3434014320373535

Token 7: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009570498019456863
    2. ''' → logprob: -5.009570598602295
    3. 'e' → logprob: -7.259570598602295
    4. 'i' → logprob: -7.884570598602295
    5. ''a' → logprob: -7.884570598602295
    6. ''entrée' → logprob: -7.884570598602295
    7. ''\' → logprob: -8.134570121765137
    8. '')' → logprob: -9.134570121765137
    9. ''''' → logprob: -9.509570121765137
    10. ''espace' → logprob: -9.634570121765137

Token 8: ' standard' (ID: 7024)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.032238952815532684
    2. 'n' → logprob: -3.6572389602661133
    3. 'x' → logprob: -5.282238960266113
    4. 'e' → logprob: -8.032238960266113
    5. '```' → logprob: -8.157238960266113
    6. 'i' → logprob: -9.532238960266113
    7. ' a' → logprob: -10.157238960266113
    8. 'v' → logprob: -10.282238960266113
    9. 'ent' → logprob: -10.782238960266113
    10. '`' → logprob: -11.157238960266113

Token 9: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.028139151632785797
    2. 'n' → logprob: -4.028139114379883
    3. 'x' → logprob: -4.653139114379883
    4. '```' → logprob: -8.278139114379883
    5. 'ent' → logprob: -10.028139114379883
    6. 'e' → logprob: -10.153139114379883
    7. 'i' → logprob: -10.653139114379883
    8. '`' → logprob: -11.403139114379883
    9. '``' → logprob: -12.028139114379883
    10. ' a' → logprob: -12.028139114379883

Token 10: ' sépar' (ID: 97160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.202338695526123
    2. 'n' → logprob: -1.327338695526123
    3. ' a' → logprob: -2.452338695526123
    4. 'x' → logprob: -2.702338695526123
    5. ' ' → logprob: -2.827338695526123
    6. ' n' → logprob: -3.452338695526123
    7. 's' → logprob: -3.827338695526123
    8. 'r' → logprob: -4.202338695526123
    9. '```' → logprob: -4.202338695526123
    10. ' x' → logprob: -4.327338695526123

Token 11: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.004294572863727808
    2. 'é' → logprob: -5.504294395446777
    3. 'es' → logprob: -9.004294395446777
    4. 's' → logprob: -9.754294395446777
    5. 'ès' → logprob: -11.504294395446777
    6. '```' → logprob: -11.629294395446777
    7. '\xc2' → logprob: -13.004294395446777
    8. '#' → logprob: -13.129294395446777
    9. 'er' → logprob: -13.254294395446777
    10. ' par' → logprob: -13.254294395446777

Token 12: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.4350903630256653
    2. 'par' → logprob: -1.1850903034210205
    3. '_par' → logprob: -4.3100905418396
    4. 'es' → logprob: -4.5600905418396
    5. ' ' → logprob: -4.9350905418396
    6. ',' → logprob: -5.0600905418396
    7. 's' → logprob: -5.1850905418396
    8. '`' → logprob: -7.8100905418396
    9. 'e' → logprob: -7.9350905418396
    10. ' ' → logprob: -8.060090065002441

Token 13: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.06830330938100815
    2. ''un' → logprob: -3.443303346633911
    3. ' un' → logprob: -3.568303346633911
    4. 'une' → logprob: -5.818303108215332
    5. ''' → logprob: -6.693303108215332
    6. ' ' → logprob: -8.193303108215332
    7. '```' → logprob: -8.443303108215332
    8. 'es' → logprob: -8.943303108215332
    9. '_un' → logprob: -8.943303108215332
    10. ' ' → logprob: -8.943303108215332

Token 14: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.09362483024597168
    2. ''espace' → logprob: -2.8436248302459717
    3. 'esp' → logprob: -3.9686248302459717
    4. ' espace' → logprob: -4.843625068664551
    5. '```' → logprob: -6.343625068664551
    6. 'space' → logprob: -6.718625068664551
    7. ''esp' → logprob: -7.468625068664551
    8. '’espace' → logprob: -8.46862506866455
    9. '\n' → logprob: -9.21862506866455
    10. '`' → logprob: -9.34362506866455

Token 15: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04256151616573334
    2. 'x' → logprob: -3.6675615310668945
    3. 'n' → logprob: -4.1675615310668945
    4. '```' → logprob: -8.167561531066895
    5. 'e' → logprob: -8.542561531066895
    6. 'i' → logprob: -9.542561531066895
    7. '`' → logprob: -10.417561531066895
    8. 'ent' → logprob: -10.417561531066895
    9. 'v' → logprob: -11.667561531066895
    10. '``' → logprob: -12.167561531066895

Token 16: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.024142146110534668
    2. 'n' → logprob: -4.024142265319824
    3. 'x' → logprob: -5.149142265319824
    4. '```' → logprob: -9.024142265319824
    5. 'ent' → logprob: -10.649142265319824
    6. 'e' → logprob: -11.524142265319824
    7. '`' → logprob: -12.024142265319824
    8. 'i' → logprob: -12.774142265319824
    9. '#' → logprob: -13.149142265319824
    10. ' a' → logprob: -14.149142265319824

Token 17: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010926486924290657
    2. 'x' → logprob: -5.010926723480225
    3. 'n' → logprob: -5.510926723480225
    4. 'ent' → logprob: -9.135926246643066
    5. '```' → logprob: -10.885926246643066
    6. 'e' → logprob: -11.385926246643066
    7. ' a' → logprob: -12.260926246643066
    8. '#' → logprob: -12.260926246643066
    9. 'i' → logprob: -12.635926246643066
    10. 'num' → logprob: -12.885926246643066

Token 18: ' fonction' (ID: 17610)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03932712599635124
    2. ' a' → logprob: -3.9143271446228027
    3. 'x' → logprob: -4.664327144622803
    4. 's' → logprob: -4.914327144622803
    5. 'n' → logprob: -6.664327144622803
    6. ' x' → logprob: -8.539326667785645
    7. 'e' → logprob: -10.039326667785645
    8. 'b' → logprob: -10.164326667785645
    9. '#' → logprob: -10.289326667785645
    10. 'A' → logprob: -10.539326667785645

Token 19: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0289018377661705
    2. ' input' → logprob: -4.153902053833008
    3. 'input' → logprob: -4.653902053833008
    4. ' def' → logprob: -5.903902053833008
    5. 'd' → logprob: -8.278902053833008
    6. 'print' → logprob: -9.403902053833008
    7. 's' → logprob: -9.778902053833008
    8. ' `' → logprob: -10.903902053833008
    9. 'read' → logprob: -10.903902053833008
    10. '```' → logprob: -10.903902053833008

Token 20: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01383577473461628
    2. '(' → logprob: -4.388835906982422
    3. 's' → logprob: -7.513835906982422
    4. '().' → logprob: -8.638835906982422
    5. ' ()' → logprob: -9.388835906982422
    6. '())' → logprob: -9.763835906982422
    7. '()

' → logprob: -9.888835906982422
    8. '_' → logprob: -10.138835906982422
    9. ')' → logprob: -10.388835906982422
    10. '_line' → logprob: -10.513835906982422

Token 21: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.981256902217865
    2. '(' → logprob: -1.1062569618225098
    3. 's' → logprob: -2.1062569618225098
    4. '().' → logprob: -2.8562569618225098
    5. '.readline' → logprob: -3.6062569618225098
    6. '("' → logprob: -3.7312569618225098
    7. '('' → logprob: -4.10625696182251
    8. ')' → logprob: -5.23125696182251
    9. ' (' → logprob: -5.23125696182251
    10. '.' → logprob: -5.23125696182251

Token 22: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4212820529937744
    2. ' ' → logprob: -2.1712820529937744
    3. '()' → logprob: -2.5462820529937744
    4. '(' → logprob: -3.2962820529937744
    5. ' deux' → logprob: -3.2962820529937744
    6. ' la' → logprob: -3.9212820529937744
    7. 'une' → logprob: -4.171281814575195
    8. 's' → logprob: -4.296281814575195
    9. 'de' → logprob: -5.046281814575195
    10. ''' → logprob: -5.296281814575195

Token 23: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.4197787344455719
    2. 'ligne' → logprob: -1.4197787046432495
    3. ' chaîne' → logprob: -2.544778823852539
    4. 'chaine' → logprob: -4.919778823852539
    5. ' ' → logprob: -5.419778823852539
    6. ' chaine' → logprob: -6.044778823852539
    7. ' seule' → logprob: -6.044778823852539
    8. 'cha' → logprob: -6.419778823852539
    9. 'l' → logprob: -6.544778823852539
    10. 'entrée' → logprob: -7.294778823852539

Token 24: ' au' (ID: 2791)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2877906560897827
    2. 'n' → logprob: -2.0377907752990723
    3. 'x' → logprob: -2.2877907752990723
    4. 'nums' → logprob: -5.662790775299072
    5. ' a' → logprob: -6.162790775299072
    6. 'v' → logprob: -6.537790775299072
    7. 'de' → logprob: -6.537790775299072
    8. 'values' → logprob: -6.662790775299072
    9. 'e' → logprob: -6.787790775299072
    10. 's' → logprob: -6.912790775299072

Token 25: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.9084473848342896
    2. 'b' → logprob: -2.408447265625
    3. 'input' → logprob: -2.533447265625
    4. 'n' → logprob: -2.533447265625
    5. 'pass' → logprob: -3.408447265625
    6. 'tour' → logprob: -3.408447265625
    7. 'entrée' → logprob: -3.533447265625
    8. 'standard' → logprob: -3.658447265625
    9. 't' → logprob: -3.658447265625
    10. 's' → logprob: -3.783447265625

Token 26: ' texte' (ID: 53492)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.370291143655777
    2. ''' → logprob: -2.870291233062744
    3. 'int' → logprob: -2.995291233062744
    4. '`' → logprob: -3.495291233062744
    5. ''d' → logprob: -3.495291233062744
    6. ''int' → logprob: -3.745291233062744
    7. 'ent' → logprob: -4.495291233062744
    8. '<int' → logprob: -4.495291233062744
    9. 'texte' → logprob: -4.495291233062744
    10. ''ent' → logprob: -4.620291233062744

Token 27: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.036780621856451035
    2. 'x' → logprob: -3.786780595779419
    3. 'n' → logprob: -4.411780834197998
    4. 'ent' → logprob: -7.161780834197998
    5. 'e' → logprob: -8.41178035736084
    6. '```' → logprob: -8.91178035736084
    7. '#' → logprob: -9.53678035736084
    8. 'nombre' → logprob: -10.53678035736084
    9. ' a' → logprob: -10.78678035736084
    10. 'num' → logprob: -11.28678035736084

Token 28: 'string' (ID: 1655)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2843579053878784
    2. 'ent' → logprob: -2.659358024597168
    3. ' )' → logprob: -3.034358024597168
    4. 'a' → logprob: -3.409358024597168
    5. '")' → logprob: -3.659358024597168
    6. 'x' → logprob: -4.284358024597168
    7. 'n' → logprob: -4.409358024597168
    8. '#' → logprob: -5.284358024597168
    9. ' ent' → logprob: -5.534358024597168
    10. '`)' → logprob: -5.659358024597168

Token 29: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02801663987338543
    2. 'e' → logprob: -4.778016567230225
    3. ' )' → logprob: -4.903016567230225
    4. ').' → logprob: -5.278016567230225
    5. '),' → logprob: -6.153016567230225
    6. 's' → logprob: -6.278016567230225
    7. '")' → logprob: -7.028016567230225
    8. '')' → logprob: -7.403016567230225
    9. ',' → logprob: -8.153017044067383
    10. '#' → logprob: -8.903017044067383

Token 30: ' depuis' (ID: 16277)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15799090266227722
    2. 'x' → logprob: -2.5329909324645996
    3. 'n' → logprob: -2.7829909324645996
    4. 'ent' → logprob: -6.5329909324646
    5. 'e' → logprob: -7.0329909324646
    6. '```' → logprob: -7.0329909324646
    7. '#' → logprob: -7.7829909324646
    8. ' a' → logprob: -8.532990455627441
    9. ',' → logprob: -8.532990455627441
    10. '`' → logprob: -8.907990455627441

Token 31: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5665061473846436
    2. ' l' → logprob: -1.0665061473846436
    3. ' input' → logprob: -2.5665061473846436
    4. 'input' → logprob: -4.941506385803223
    5. ' la' → logprob: -6.566506385803223
    6. ' standard' → logprob: -7.191506385803223
    7. 'la' → logprob: -7.441506385803223
    8. '	l' → logprob: -8.191506385803223
    9. '=input' → logprob: -8.191506385803223
    10. 's' → logprob: -8.691506385803223

Token 32: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.11544099450111389
    2. ''' → logprob: -2.865441083908081
    3. 'a' → logprob: -3.740441083908081
    4. 'entrée' → logprob: -3.990441083908081
    5. 'e' → logprob: -5.615440845489502
    6. 'input' → logprob: -6.490440845489502
    7. ''ent' → logprob: -6.615440845489502
    8. ''a' → logprob: -7.240440845489502
    9. ''utilisateur' → logprob: -7.490440845489502
    10. 'u' → logprob: -7.865440845489502

Token 33: ' standard' (ID: 7024)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4658526182174683
    2. ' =' → logprob: -1.5908526182174683
    3. ')' → logprob: -1.9658526182174683
    4. 'n' → logprob: -2.715852737426758
    5. ',' → logprob: -2.840852737426758
    6. '=' → logprob: -2.965852737426758
    7. 'user' → logprob: -3.340852737426758
    8. 'x' → logprob: -3.590852737426758
    9. ' ' → logprob: -3.840852737426758
    10. ' )' → logprob: -3.840852737426758

Token 34: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10328292101621628
    2. 'x' → logprob: -2.728282928466797
    3. 'n' → logprob: -3.478282928466797
    4. '```' → logprob: -7.478282928466797
    5. 'i' → logprob: -8.228282928466797
    6. 'ent' → logprob: -8.353282928466797
    7. '#' → logprob: -8.478282928466797
    8. ' a' → logprob: -8.478282928466797
    9. 'e' → logprob: -9.228282928466797
    10. '`' → logprob: -9.603282928466797

Token 35: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0628322958946228
    2. 'n' → logprob: -3.4378323554992676
    3. 'x' → logprob: -3.5628323554992676
    4. '#' → logprob: -8.56283187866211
    5. '```' → logprob: -9.31283187866211
    6. 'e' → logprob: -10.18783187866211
    7. 'v' → logprob: -10.81283187866211
    8. 'ent' → logprob: -10.93783187866211
    9. 'i' → logprob: -10.93783187866211
    10. '`' → logprob: -12.31283187866211

Token 36: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04730996489524841
    2. 'x' → logprob: -3.4223098754882812
    3. 'n' → logprob: -4.422309875488281
    4. 'ent' → logprob: -6.672309875488281
    5. '#' → logprob: -8.922309875488281
    6. 'e' → logprob: -9.547309875488281
    7. '```' → logprob: -10.672309875488281
    8. 'i' → logprob: -11.047309875488281
    9. 'numbers' → logprob: -11.172309875488281
    10. 'nums' → logprob: -11.922309875488281

Token 37: ' méthode' (ID: 71490)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.28127074241638184
    2. 'x' → logprob: -1.9062707424163818
    3. ' a' → logprob: -3.406270742416382
    4. 'n' → logprob: -3.906270742416382
    5. 'ent' → logprob: -4.531270980834961
    6. '#' → logprob: -4.781270980834961
    7. ' x' → logprob: -4.906270980834961
    8. 'l' → logprob: -5.531270980834961
    9. 'ligne' → logprob: -6.406270980834961
    10. 'e' → logprob: -6.406270980834961

Token 38: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3152671754360199
    2. ' split' → logprob: -1.3152672052383423
    3. 'strip' → logprob: -6.815267086029053
    4. '.split' → logprob: -7.190267086029053
    5. ' strip' → logprob: -9.065267562866211
    6. ' input' → logprob: -11.440267562866211
    7. '.strip' → logprob: -11.815267562866211
    8. 's' → logprob: -11.815267562866211
    9. 'spl' → logprob: -12.315267562866211
    10. ' .' → logprob: -12.940267562866211

Token 39: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004543692339211702
    2. '(' → logprob: -5.504543781280518
    3. '('' → logprob: -7.879543781280518
    4. '("' → logprob: -10.50454330444336
    5. '("("' → logprob: -11.25454330444336
    6. '().' → logprob: -11.75454330444336
    7. '()]' → logprob: -12.12954330444336
    8. ' ()' → logprob: -12.12954330444336
    9. '()`' → logprob: -12.75454330444336
    10. '（）' → logprob: -13.00454330444336

Token 40: ' sé' (ID: 7462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008366461843252182
    2. '(' → logprob: -5.633366584777832
    3. ' ()' → logprob: -6.508366584777832
    4. 'split' → logprob: -7.508366584777832
    5. ' permet' → logprob: -7.508366584777832
    6. '().' → logprob: -8.133366584777832
    7. 'spl' → logprob: -8.383366584777832
    8. '.split' → logprob: -8.758366584777832
    9. ')' → logprob: -8.883366584777832
    10. 's' → logprob: -8.883366584777832

Token 41: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.00013679367839358747
    2. 'par' → logprob: -9.375136375427246
    3. 'parer' → logprob: -10.875136375427246
    4. 'parent' → logprob: -11.000136375427246
    5. 'p' → logprob: -11.500136375427246
    6. 'para' → logprob: -13.500136375427246
    7. 'pa' → logprob: -13.875136375427246
    8. 'paration' → logprob: -14.000136375427246
    9. 'pares' → logprob: -14.125136375427246
    10. 'paren' → logprob: -14.375136375427246

Token 42: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03342309966683388
    2. '(' → logprob: -4.408422946929932
    3. '('' → logprob: -4.783422946929932
    4. ' la' → logprob: -6.033422946929932
    5. 'la' → logprob: -6.283422946929932
    6. ' ' → logprob: -6.533422946929932
    7. 'les' → logprob: -6.658422946929932
    8. 'le' → logprob: -7.033422946929932
    9. ' ()' → logprob: -7.033422946929932
    10. 'l' → logprob: -7.158422946929932

Token 43: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.2073390632867813
    2. 'ligne' → logprob: -2.70733904838562
    3. ' chaîne' → logprob: -2.83233904838562
    4. ' ' → logprob: -3.08233904838562
    5. ' chaine' → logprob: -5.457339286804199
    6. ' string' → logprob: -5.707339286804199
    7. 'chaine' → logprob: -6.082339286804199
    8. ' line' → logprob: -6.707339286804199
    9. 's' → logprob: -6.832339286804199
    10. 'l' → logprob: -7.207339286804199

Token 44: ' en' (ID: 469)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.5577733516693115
    2. '()' → logprob: -1.9327733516693115
    3. 'en' → logprob: -2.1827733516693115
    4. ' en' → logprob: -2.1827733516693115
    5. '[' → logprob: -2.5577733516693115
    6. ' )' → logprob: -2.8077733516693115
    7. ' par' → logprob: -2.9327733516693115
    8. ' ' → logprob: -3.1827733516693115
    9. ')' → logprob: -3.5577733516693115
    10. 'sur' → logprob: -3.6827733516693115

Token 45: ' une' (ID: 2463)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1689186096191406
    2. ' une' → logprob: -1.5439186096191406
    3. '['' → logprob: -2.1689186096191406
    4. 'tokens' → logprob: -2.1689186096191406
    5. 'une' → logprob: -2.7939186096191406
    6. 'des' → logprob: -2.9189186096191406
    7. '["' → logprob: -3.5439186096191406
    8. ' tokens' → logprob: -3.5439186096191406
    9. ' ['' → logprob: -4.293918609619141
    10. ' morceaux' → logprob: -4.543918609619141

Token 46: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.1452905237674713
    2. 'liste' → logprob: -2.0202906131744385
    3. 'list' → logprob: -6.395290374755859
    4. 's' → logprob: -7.270290374755859
    5. ' list' → logprob: -9.77029037475586
    6. ' ' → logprob: -10.14529037475586
    7. 'Liste' → logprob: -10.14529037475586
    8. ' listes' → logprob: -11.02029037475586
    9. ' Liste' → logprob: -11.39529037475586
    10. '['' → logprob: -11.39529037475586

Token 47: ' de' (ID: 334)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.28896501660346985
    2. '[' → logprob: -2.2889649868011475
    3. 'input' → logprob: -3.2889649868011475
    4. 's' → logprob: -3.9139649868011475
    5. ' tokens' → logprob: -4.038965225219727
    6. 'de' → logprob: -4.038965225219727
    7. '[]' → logprob: -5.288965225219727
    8. '[:]' → logprob: -5.538965225219727
    9. 'n' → logprob: -5.663965225219727
    10. '.' → logprob: -5.663965225219727

Token 48: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.3233121335506439
    2. 'cha' → logprob: -2.4483120441436768
    3. 'tokens' → logprob: -2.9483120441436768
    4. 'm' → logprob: -3.1983120441436768
    5. 'strings' → logprob: -3.4483120441436768
    6. 'chain' → logprob: -3.4483120441436768
    7. ' tokens' → logprob: -4.823312282562256
    8. 'chaine' → logprob: -5.323312282562256
    9. 'str' → logprob: -5.448312282562256
    10. ' chain' → logprob: -5.573312282562256

Token 49: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.5402431488037109
    2. 'cha' → logprob: -1.665243148803711
    3. 'chain' → logprob: -2.165243148803711
    4. '-cha' → logprob: -2.540243148803711
    5. '-chain' → logprob: -4.290243148803711
    6. '-' → logprob: -5.290243148803711
    7. 'chains' → logprob: -6.040243148803711
    8. 'chaine' → logprob: -6.165243148803711
    9. '   ' → logprob: -6.165243148803711
    10. 'strings' → logprob: -6.165243148803711

Token 50: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.07634515315294266
    2. 'nés' → logprob: -3.326345205307007
    3. 'nes' → logprob: -4.076344966888428
    4. 'r' → logprob: -4.576344966888428
    5. 'î' → logprob: -5.076344966888428
    6. 'n' → logprob: -6.951344966888428
    7. 'ên' → logprob: -7.201344966888428
    8. '```' → logprob: -7.576344966888428
    9. 'nées' → logprob: -7.701344966888428
    10. '``' → logprob: -8.701345443725586

Token 51: ' sur' (ID: 1512)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4558258056640625
    2. 'n' → logprob: -1.3308258056640625
    3. 'ent' → logprob: -4.2058258056640625
    4. 'x' → logprob: -4.3308258056640625
    5. '[' → logprob: -4.4558258056640625
    6. 'numbers' → logprob: -4.7058258056640625
    7. ',' → logprob: -4.9558258056640625
    8. 'nums' → logprob: -4.9558258056640625
    9. 'tokens' → logprob: -5.2058258056640625
    10. 's' → logprob: -5.3308258056640625

Token 52: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2579859495162964
    2. ' l' → logprob: -1.3829859495162964
    3. '_' → logprob: -2.132986068725586
    4. 'l' → logprob: -2.132986068725586
    5. ' les' → logprob: -3.132986068725586
    6. ' '' → logprob: -3.382986068725586
    7. ' espaces' → logprob: -3.507986068725586
    8. ' la' → logprob: -4.382986068725586
    9. ' ' → logprob: -4.507986068725586
    10. ''esp' → logprob: -4.632986068725586

Token 53: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.3235929310321808
    2. 'esp' → logprob: -1.6985929012298584
    3. ''' → logprob: -3.8235929012298584
    4. ''esp' → logprob: -3.8235929012298584
    5. ' ' → logprob: -4.3235931396484375
    6. ''espace' → logprob: -4.4485931396484375
    7. 'es' → logprob: -4.5735931396484375
    8. ' '' → logprob: -5.6985931396484375
    9. ' espace' → logprob: -5.9485931396484375
    10. 'car' → logprob: -6.0735931396484375

Token 54: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6262490153312683
    2. 'n' → logprob: -1.126249074935913
    3. 'x' → logprob: -2.126249074935913
    4. 'ent' → logprob: -4.251248836517334
    5. 'e' → logprob: -6.376248836517334
    6. '#' → logprob: -6.876248836517334
    7. 'numbers' → logprob: -6.876248836517334
    8. 'i' → logprob: -7.251248836517334
    9. '```' → logprob: -7.501248836517334
    10. ',' → logprob: -7.501248836517334

Token 55: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17352394759655
    2. 'n' → logprob: -2.1735239028930664
    3. 'x' → logprob: -3.1735239028930664
    4. 'ent' → logprob: -6.798523902893066
    5. 'i' → logprob: -7.548523902893066
    6. 'e' → logprob: -7.548523902893066
    7. '```' → logprob: -7.673523902893066
    8. '#' → logprob: -8.048523902893066
    9. 'numbers' → logprob: -8.423523902893066
    10. 'nums' → logprob: -9.298523902893066

Token 56: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04352717846632004
    2. 'x' → logprob: -3.668527126312256
    3. 'n' → logprob: -4.168527126312256
    4. 'ent' → logprob: -6.918527126312256
    5. '#' → logprob: -8.418527603149414
    6. '```' → logprob: -9.168527603149414
    7. 'numbers' → logprob: -9.418527603149414
    8. 'i' → logprob: -9.793527603149414
    9. 'nums' → logprob: -10.043527603149414
    10. 'e' → logprob: -10.168527603149414

Token 57: ' fonction' (ID: 17610)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6639111638069153
    2. ' a' → logprob: -1.5389111042022705
    3. '#' → logprob: -2.0389111042022705
    4. 'n' → logprob: -3.6639111042022705
    5. 's' → logprob: -4.16391134262085
    6. 'ent' → logprob: -4.41391134262085
    7. 'ligne' → logprob: -4.66391134262085
    8. 'x' → logprob: -4.78891134262085
    9. 'l' → logprob: -4.91391134262085
    10. 'tokens' → logprob: -5.41391134262085

Token 58: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.8602660298347473
    2. ' map' → logprob: -0.9852660298347473
    3. 'a' → logprob: -2.2352659702301025
    4. ' a' → logprob: -2.6102659702301025
    5. ' int' → logprob: -4.485266208648682
    6. 'int' → logprob: -4.610266208648682
    7. ' input' → logprob: -7.860266208648682
    8. 'input' → logprob: -7.860266208648682
    9. 'list' → logprob: -8.485265731811523
    10. '[int' → logprob: -8.610265731811523

Token 59: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19781513512134552
    2. '(int' → logprob: -2.072815179824829
    3. '(lambda' → logprob: -2.947815179824829
    4. '(str' → logprob: -7.69781494140625
    5. '<int' → logprob: -8.69781494140625
    6. '(
' → logprob: -8.82281494140625
    7. 'int' → logprob: -9.57281494140625
    8. '<|end|>' → logprob: -10.07281494140625
    9. '(float' → logprob: -10.19781494140625
    10. '(convert' → logprob: -10.19781494140625

Token 60: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22604431211948395
    2. ',' → logprob: -1.6010442972183228
    3. '<|end|>' → logprob: -8.226044654846191
    4. ',)' → logprob: -9.726044654846191
    5. ',input' → logprob: -9.726044654846191
    6. ')">' → logprob: -10.351044654846191
    7. ')#' → logprob: -10.476044654846191
    8. '),' → logprob: -10.726044654846191
    9. ' )' → logprob: -10.726044654846191
    10. ')>' → logprob: -10.976044654846191

Token 61: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.18818120658397675
    2. ' input' → logprob: -1.8131811618804932
    3. ')' → logprob: -4.813181400299072
    4. ' )' → logprob: -9.188180923461914
    5. '(input' → logprob: -9.188180923461914
    6. '...)' → logprob: -10.688180923461914
    7. '=input' → logprob: -11.688180923461914
    8. '<input' → logprob: -11.813180923461914
    9. '[input' → logprob: -11.938180923461914
    10. ' ' → logprob: -12.438180923461914

Token 62: ' applique' (ID: 180579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23491854965686798
    2. 'convert' → logprob: -2.2349185943603516
    3. '(input' → logprob: -3.9849185943603516
    4. 'lit' → logprob: -3.9849185943603516
    5. 'input' → logprob: -4.359918594360352
    6. '(' → logprob: -4.859918594360352
    7. ' transforme' → logprob: -5.109918594360352
    8. ' permet' → logprob: -5.109918594360352
    9. ' lit' → logprob: -5.484918594360352
    10. ' )' → logprob: -5.609918594360352

Token 63: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10970532149076462
    2. ' int' → logprob: -2.3597052097320557
    3. '(int' → logprob: -4.984705448150635
    4. '=int' → logprob: -7.109705448150635
    5. '<int' → logprob: -7.359705448150635
    6. ' la' → logprob: -7.484705448150635
    7. '[int' → logprob: -8.109704971313477
    8. '```' → logprob: -9.609704971313477
    9. ' ' → logprob: -9.984704971313477
    10. '	int' → logprob: -10.234704971313477

Token 64: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18247751891613007
    2. '()' → logprob: -2.8074774742126465
    3. '(' → logprob: -2.9324774742126465
    4. ' à' → logprob: -3.9324774742126465
    5. '(lambda' → logprob: -4.6824774742126465
    6. '```' → logprob: -5.0574774742126465
    7. 'sur' → logprob: -5.6824774742126465
    8. 's' → logprob: -6.0574774742126465
    9. 'aux' → logprob: -6.1824774742126465
    10. ' aux' → logprob: -6.4324774742126465

Token 65: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6720432043075562
    2. 'sur' → logprob: -1.7970432043075562
    3. ' à' → logprob: -1.9220432043075562
    4. 'aux' → logprob: -3.0470433235168457
    5. 'à' → logprob: -3.1720433235168457
    6. '```' → logprob: -3.5470433235168457
    7. ' aux' → logprob: -3.7970433235168457
    8. ' sur' → logprob: -4.297043323516846
    9. '()' → logprob: -4.672043323516846
    10. '(' → logprob: -5.672043323516846

Token 66: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.3116365969181061
    2. ' chacune' → logprob: -2.3116366863250732
    3. 'cha' → logprob: -2.9366366863250732
    4. ' each' → logprob: -3.3116366863250732
    5. ' la' → logprob: -3.9366366863250732
    6. 'l' → logprob: -4.311636447906494
    7. ' l' → logprob: -4.436636447906494
    8. 'ch' → logprob: -4.936636447906494
    9. ' chacun' → logprob: -4.936636447906494
    10. 'la' → logprob: -5.186636447906494

Token 67: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.01644851267337799
    2. ' élément' → logprob: -4.141448497772217
    3. 'element' → logprob: -8.391448974609375
    4. ' element' → logprob: -10.141448974609375
    5. 'é' → logprob: -10.516448974609375
    6. ' ' → logprob: -10.641448974609375
    7. 'elem' → logprob: -10.891448974609375
    8. 'él' → logprob: -11.141448974609375
    9. ' éléments' → logprob: -11.391448974609375
    10. ' Él' → logprob: -12.391448974609375

Token 68: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04296424612402916
    2. 's' → logprob: -4.042964458465576
    3. ')' → logprob: -4.667964458465576
    4. '(
' → logprob: -4.792964458465576
    5. '(...)' → logprob: -6.667964458465576
    6. '`' → logprob: -7.417964458465576
    7. ' de' → logprob: -7.417964458465576
    8. '(s' → logprob: -7.542964458465576
    9. '(input' → logprob: -7.792964458465576
    10. '(map' → logprob: -8.042963981628418

Token 69: ' cette' (ID: 7696)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7400543689727783
    2. 'la' → logprob: -1.4900543689727783
    3. 'l' → logprob: -1.9900543689727783
    4. 'input' → logprob: -2.6150543689727783
    5. ' input' → logprob: -2.8650543689727783
    6. ' l' → logprob: -3.7400543689727783
    7. 'split' → logprob: -5.990054130554199
    8. 's' → logprob: -6.490054130554199
    9. 'list' → logprob: -7.740054130554199
    10. ' ' → logprob: -7.865054130554199

Token 70: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.5890634655952454
    2. 'liste' → logprob: -0.8390634655952454
    3. ' ligne' → logprob: -5.33906364440918
    4. '...' → logprob: -5.83906364440918
    5. 'ligne' → logprob: -6.08906364440918
    6. 'list' → logprob: -6.71406364440918
    7. 'split' → logprob: -7.33906364440918
    8. 'l' → logprob: -8.33906364440918
    9. 'spl' → logprob: -8.96406364440918
    10. 's' → logprob: -9.08906364440918

Token 71: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1010587215423584
    2. 'x' → logprob: -1.4760587215423584
    3. 'n' → logprob: -1.6010587215423584
    4. ')' → logprob: -1.8510587215423584
    5. 'ent' → logprob: -3.3510587215423584
    6. 'i' → logprob: -4.9760589599609375
    7. ',' → logprob: -5.1010589599609375
    8. '#' → logprob: -5.1010589599609375
    9. ' )' → logprob: -5.6010589599609375
    10. ' x' → logprob: -6.2260589599609375

Token 72: ' convert' (ID: 8452)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.9193208813667297
    2. ' puis' → logprob: -2.544320821762085
    3. ',' → logprob: -2.794320821762085
    4. 'result' → logprob: -2.794320821762085
    5. 'don' → logprob: -3.169320821762085
    6. '#' → logprob: -3.169320821762085
    7. ' et' → logprob: -3.169320821762085
    8. 'et' → logprob: -3.294320821762085
    9. 'ens' → logprob: -4.044321060180664
    10. ' and' → logprob: -4.169321060180664

Token 73: 'issant' (ID: 31359)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0018351107137277722
    2. ' it' → logprob: -6.876835346221924
    3. 'i' → logprob: -8.751834869384766
    4. 'issant' → logprob: -8.751834869384766
    5. '   ' → logprob: -9.126834869384766
    6. 'is' → logprob: -9.376834869384766
    7. '```' → logprob: -9.501834869384766
    8. '\' → logprob: -10.751834869384766
    9. '#' → logprob: -10.876834869384766
    10. '

' → logprob: -11.001834869384766

Token 74: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5538914799690247
    2. ' les' → logprob: -1.4288914203643799
    3. '(' → logprob: -3.17889142036438
    4. ' la' → logprob: -3.42889142036438
    5. ')' → logprob: -3.80389142036438
    6. ',' → logprob: -4.053891658782959
    7. 's' → logprob: -4.678891658782959
    8. ' le' → logprob: -5.053891658782959
    9. ' chaque' → logprob: -5.053891658782959
    10. 'les' → logprob: -5.428891658782959

Token 75: ' chaîne' (ID: 89288)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5805935263633728
    2. ' élément' → logprob: -0.9555935263633728
    3. ' )' → logprob: -4.205593585968018
    4. ' ' → logprob: -4.455593585968018
    5. ' entier' → logprob: -4.455593585968018
    6. ')' → logprob: -5.330593585968018
    7. 'ent' → logprob: -6.205593585968018
    8. 'element' → logprob: -6.705593585968018
    9. ' él' → logprob: -6.955593585968018
    10. ' caractère' → logprob: -6.955593585968018

Token 76: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0807318463921547
    2. ')' → logprob: -3.2057318687438965
    3. 'en' → logprob: -3.8307318687438965
    4. 's' → logprob: -5.0807318687438965
    5. ' )' → logprob: -5.7057318687438965
    6. ' ' → logprob: -6.8307318687438965
    7. '_en' → logprob: -7.2057318687438965
    8. '```' → logprob: -7.4557318687438965
    9. 'es' → logprob: -7.8307318687438965
    10. 'ent' → logprob: -8.205731391906738

Token 77: ' entier' (ID: 80473)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3773278594017029
    2. ' un' → logprob: -2.2523279190063477
    3. 'ent' → logprob: -2.3773279190063477
    4. ' int' → logprob: -2.8773279190063477
    5. 'des' → logprob: -4.127327919006348
    6. ' entier' → logprob: -4.252327919006348
    7. ' ent' → logprob: -4.377327919006348
    8. 'int' → logprob: -5.127327919006348
    9. 'un' → logprob: -5.502327919006348
    10. ' nombre' → logprob: -6.752327919006348

Token 78: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6436139941215515
    2. 'x' → logprob: -1.2686140537261963
    3. 'n' → logprob: -1.8936140537261963
    4. 'i' → logprob: -3.5186140537261963
    5. ':' → logprob: -6.018613815307617
    6. '```' → logprob: -6.018613815307617
    7. ',' → logprob: -6.143613815307617
    8. 'e' → logprob: -6.518613815307617
    9. 'ent' → logprob: -6.643613815307617
    10. '#' → logprob: -7.268613815307617

Token 79: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04138367995619774
    2. 'x' → logprob: -3.291383743286133
    3. 'n' → logprob: -5.791383743286133
    4. '```' → logprob: -8.541383743286133
    5. 'ent' → logprob: -10.416383743286133
    6. '#' → logprob: -10.916383743286133
    7. ' a' → logprob: -11.916383743286133
    8. 'i' → logprob: -12.041383743286133
    9. 'e' → logprob: -12.166383743286133
    10. '\' → logprob: -12.291383743286133

Token 80: ' Enfin' (ID: 85274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10474992543458939
    2. 'x' → logprob: -2.354749917984009
    3. 'n' → logprob: -5.729750156402588
    4. ' a' → logprob: -7.729750156402588
    5. '#' → logprob: -7.979750156402588
    6. 'ent' → logprob: -8.10474967956543
    7. 'i' → logprob: -9.72974967956543
    8. ' x' → logprob: -9.85474967956543
    9. '```' → logprob: -10.22974967956543
    10. 'e' → logprob: -11.60474967956543

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1833609938621521
    2. ' ,' → logprob: -2.433361053466797
    3. 'x' → logprob: -4.433361053466797
    4. ' les' → logprob: -4.558361053466797
    5. 's' → logprob: -4.683361053466797
    6. ' x' → logprob: -4.683361053466797
    7. ' la' → logprob: -4.808361053466797
    8. 'a' → logprob: -5.558361053466797
    9. ' on' → logprob: -5.683361053466797
    10. ' n' → logprob: -5.808361053466797

Token 82: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26154786348342896
    2. ' a' → logprob: -1.8865478038787842
    3. 'x' → logprob: -2.761547803878784
    4. ' x' → logprob: -4.261548042297363
    5. 'n' → logprob: -8.886548042297363
    6. ' les' → logprob: -9.261548042297363
    7. 'ent' → logprob: -9.261548042297363
    8. '#' → logprob: -9.761548042297363
    9. ' un' → logprob: -9.761548042297363
    10. 'i' → logprob: -9.886548042297363

Token 83: '(...)' (ID: 96375)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034284066408872604
    2. '(map' → logprob: -4.0342841148376465
    3. '()' → logprob: -4.5342841148376465
    4. '(int' → logprob: -5.6592841148376465
    5. '(...)' → logprob: -7.4092841148376465
    6. '```' → logprob: -8.409283638000488
    7. '(
' → logprob: -9.159283638000488
    8. '(range' → logprob: -9.159283638000488
    9. '(convert' → logprob: -9.534283638000488
    10. '(s' → logprob: -10.034283638000488

Token 84: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5659520626068115
    2. '()' → logprob: -1.6909520626068115
    3. ')' → logprob: -2.0659520626068115
    4. '(int' → logprob: -3.8159520626068115
    5. '(input' → logprob: -3.9409520626068115
    6. 'convert' → logprob: -4.065952301025391
    7. '(
' → logprob: -4.565952301025391
    8. '(...)' → logprob: -4.690952301025391
    9. ' =' → logprob: -5.565952301025391
    10. 'int' → logprob: -5.815952301025391

Token 85: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00401346106082201
    2. ' it' → logprob: -5.629013538360596
    3. '```' → logprob: -9.254013061523438
    4. 'i' → logprob: -9.754013061523438
    5. 'ît' → logprob: -10.004013061523438
    6. '(it' → logprob: -10.504013061523438
    7. '   ' → logprob: -10.629013061523438
    8. '_it' → logprob: -10.629013061523438
    9. '	it' → logprob: -10.879013061523438
    10. '#' → logprob: -11.004013061523438

Token 86: ' le' (ID: 505)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.61708003282547
    2. ' la' → logprob: -1.1170799732208252
    3. ' map' → logprob: -3.367079973220825
    4. 'map' → logprob: -3.992079973220825
    5. ' l' → logprob: -4.242080211639404
    6. '(' → logprob: -4.367080211639404
    7. ' les' → logprob: -4.742080211639404
    8. ' en' → logprob: -4.867080211639404
    9. ' le' → logprob: -4.992080211639404
    10. ' ' → logprob: -4.992080211639404

Token 87: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.1774636209011078
    2. 'map' → logprob: -2.5524635314941406
    3. 'rés' → logprob: -3.0524635314941406
    4. 'result' → logprob: -4.302463531494141
    5. ' map' → logprob: -4.802463531494141
    6. 'r' → logprob: -4.927463531494141
    7. 's' → logprob: -5.677463531494141
    8. 'tuple' → logprob: -6.427463531494141
    9. ' tuple' → logprob: -8.05246353149414
    10. '_' → logprob: -8.30246353149414

Token 88: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11316802352666855
    2. '```' → logprob: -3.2381680011749268
    3. '[' → logprob: -4.363168239593506
    4. ')' → logprob: -4.738168239593506
    5. '([' → logprob: -4.988168239593506
    6. 'es' → logprob: -5.113168239593506
    7. '[int' → logprob: -5.488168239593506
    8. ',' → logprob: -5.738168239593506
    9. '(int' → logprob: -5.988168239593506
    10. '()' → logprob: -5.988168239593506

Token 89: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07972770184278488
    2. ' map' → logprob: -2.5797276496887207
    3. 'l' → logprob: -7.954727649688721
    4. 'la' → logprob: -8.204728126525879
    5. ' la' → logprob: -8.704728126525879
    6. ' l' → logprob: -10.829728126525879
    7. '_map' → logprob: -11.329728126525879
    8. '(map' → logprob: -12.329728126525879
    9. '	map' → logprob: -12.954728126525879
    10. ',map' → logprob: -13.204728126525879

Token 90: ' en' (ID: 469)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6342517137527466
    2. '(' → logprob: -1.0092517137527466
    3. '[int' → logprob: -3.259251594543457
    4. '()' → logprob: -4.384251594543457
    5. '<int' → logprob: -4.509251594543457
    6. '<|end|>' → logprob: -5.009251594543457
    7. '```' → logprob: -5.009251594543457
    8. '(...)' → logprob: -5.134251594543457
    9. 'int' → logprob: -5.259251594543457
    10. ')' → logprob: -5.509251594543457

Token 91: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.23598453402519226
    2. 'une' → logprob: -1.7359845638275146
    3. ' liste' → logprob: -3.6109845638275146
    4. 'liste' → logprob: -4.9859843254089355
    5. 'list' → logprob: -10.860984802246094
    6. 'a' → logprob: -11.110984802246094
    7. ' un' → logprob: -11.235984802246094
    8. 'un' → logprob: -11.360984802246094
    9. ' ' → logprob: -11.360984802246094
    10. ''une' → logprob: -11.735984802246094

Token 92: ' liste' (ID: 31719)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3276074230670929
    2. ' ' → logprob: -1.9526073932647705
    3. ' liste' → logprob: -3.4526073932647705
    4. 's' → logprob: -3.8276073932647705
    5. ' l' → logprob: -3.8276073932647705
    6. '_' → logprob: -4.07760763168335
    7. 'liste' → logprob: -4.20260763168335
    8. 'space' → logprob: -4.82760763168335
    9. '[' → logprob: -5.07760763168335
    10. ' espace' → logprob: -6.07760763168335

Token 93: ' explic' (ID: 20781)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4230564534664154
    2. 'n' → logprob: -2.1730563640594482
    3. ',' → logprob: -2.9230563640594482
    4. 'a' → logprob: -3.0480563640594482
    5. 's' → logprob: -3.5480563640594482
    6. 'e' → logprob: -3.9230563640594482
    7. '_' → logprob: -3.9230563640594482
    8. 'i' → logprob: -3.9230563640594482
    9. 'x' → logprob: -4.423056602478027
    10. '(' → logprob: -4.923056602478027

Token 94: 'ite' (ID: 651)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012780385091900826
    2. 't' → logprob: -5.38778018951416
    3. 'ite' → logprob: -5.38778018951416
    4. 'it' → logprob: -6.26278018951416
    5. 'te' → logprob: -7.51278018951416
    6. 'e' → logprob: -7.63778018951416
    7. '#' → logprob: -9.13778018951416
    8. '```' → logprob: -9.26278018951416
    9. 'c' → logprob: -9.76278018951416
    10. 's' → logprob: -10.01278018951416

Token 95: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7159477472305298
    2. 'e' → logprob: -1.7159477472305298
    3. 'i' → logprob: -2.2159476280212402
    4. '[' → logprob: -2.3409476280212402
    5. 'a' → logprob: -3.0909476280212402
    6. 'x' → logprob: -3.4659476280212402
    7. '#' → logprob: -4.46594762802124
    8. 'd' → logprob: -4.71594762802124
    9. ',' → logprob: -5.21594762802124
    10. 'ent' → logprob: -5.21594762802124

Token 96: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7205009460449219
    2. 'a' → logprob: -1.0955009460449219
    3. 'x' → logprob: -2.220500946044922
    4. '[' → logprob: -3.220500946044922
    5. 'i' → logprob: -4.345500946044922
    6. 'e' → logprob: -4.595500946044922
    7. '```' → logprob: -6.095500946044922
    8. '#' → logprob: -6.845500946044922
    9. 'ent' → logprob: -6.970500946044922
    10. 'v' → logprob: -7.595500946044922

Token 97: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2067158222198486
    2. ' ' → logprob: -1.8317158222198486
    3. 'b' → logprob: -1.9567158222198486
    4. 'e' → logprob: -2.2067158222198486
    5. ',' → logprob: -2.4567158222198486
    6. 'o' → logprob: -2.5817158222198486
    7. '=' → logprob: -2.8317158222198486
    8. 'a' → logprob: -3.5817158222198486
    9. 'u' → logprob: -4.4567155838012695
    10. 'i' → logprob: -4.9567155838012695

Token 98: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.0047917366027832
    2. 'M' → logprob: -1.1297917366027832
    3. ' ' → logprob: -1.6297917366027832
    4. 'm' → logprob: -3.504791736602783
    5. 'space' → logprob: -3.754791736602783
    6. ' space' → logprob: -3.879791736602783
    7. 'a' → logprob: -4.754791736602783
    8. ' a' → logprob: -5.004791736602783
    9. ' m' → logprob: -5.504791736602783
    10. 'r' → logprob: -5.754791736602783

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04114392027258873
    2. '=' → logprob: -3.2911438941955566
    3. ',' → logprob: -5.791143894195557
    4. ' ,' → logprob: -10.541144371032715
    5. 's' → logprob: -12.041144371032715
    6. ' ' → logprob: -12.791144371032715
    7. ' =
' → logprob: -13.291144371032715
    8. '.' → logprob: -13.791144371032715
    9. ' ' → logprob: -14.041144371032715
    10. ')' → logprob: -14.478644371032715

Token 100: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.22871245443820953
    2. 'list' → logprob: -1.7287124395370483
    3. ' map' → logprob: -3.728712558746338
    4. 'map' → logprob: -5.853712558746338
    5. ' [' → logprob: -11.72871208190918
    6. '[' → logprob: -12.10371208190918
    7. ' liste' → logprob: -12.10371208190918
    8. ' li' → logprob: -12.60371208190918
    9. ' ' → logprob: -12.72871208190918
    10. 'input' → logprob: -13.22871208190918

Token 101: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00790057610720396
    2. '(input' → logprob: -4.882900714874268
    3. '(int' → logprob: -8.63290023803711
    4. '(map' → logprob: -9.25790023803711
    5. '(s' → logprob: -12.25790023803711
    6. '(
' → logprob: -12.75790023803711
    7. '(

' → logprob: -13.00790023803711
    8. ' (' → logprob: -13.38290023803711
    9. '(split' → logprob: -13.38290023803711
    10. '(list' → logprob: -14.00790023803711

Token 102: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47417140007019043
    2. '(int' → logprob: -0.9741714000701904
    3. '(
' → logprob: -10.34917163848877
    4. '(str' → logprob: -11.22417163848877
    5. '(in' → logprob: -11.47417163848877
    6. '<int' → logprob: -11.72417163848877
    7. '(input' → logprob: -11.97417163848877
    8. '(lambda' → logprob: -12.72417163848877
    9. ' (' → logprob: -12.84917163848877
    10. '(

' → logprob: -13.22417163848877

Token 103: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0553596094250679
    2. '(' → logprob: -2.9303596019744873
    3. ' (' → logprob: -8.180359840393066
    4. ',input' → logprob: -9.430359840393066
    5. 'input' → logprob: -9.805359840393066
    6. ')' → logprob: -9.930359840393066
    7. ' input' → logprob: -12.555359840393066
    8. ',' → logprob: -13.055359840393066
    9. '=input' → logprob: -13.930359840393066
    10. '(
' → logprob: -14.055359840393066

Token 104: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08945180475711823
    2. ' input' → logprob: -2.464451789855957
    3. '(input' → logprob: -8.089451789855957
    4. ')' → logprob: -8.589451789855957
    5. ',input' → logprob: -11.839451789855957
    6. ' ' → logprob: -12.464451789855957
    7. '))' → logprob: -13.339451789855957
    8. ' )' → logprob: -13.589451789855957
    9. '=input' → logprob: -13.964451789855957
    10. '   ' → logprob: -14.089451789855957

Token 105: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7947322130203247
    2. '()' → logprob: -1.0447322130203247
    3. '()))' → logprob: -1.9197322130203247
    4. '())' → logprob: -3.044732093811035
    5. '(' → logprob: -7.294732093811035
    6. '()));' → logprob: -7.419732093811035
    7. '())))' → logprob: -8.044732093811035
    8. '());' → logprob: -9.294732093811035
    9. '(()' → logprob: -9.419732093811035
    10. '()>' → logprob: -9.919732093811035

Token 106: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016313401283696294
    2. 'strip' → logprob: -8.750163078308105
    3. ' split' → logprob: -12.500163078308105
    4. 'rstrip' → logprob: -14.000163078308105
    5. ')' → logprob: -16.500164031982422
    6. 'spl' → logprob: -16.625164031982422
    7. '(split' → logprob: -17.375164031982422
    8. 's' → logprob: -18.250164031982422
    9. ' ' → logprob: -20.250164031982422
    10. '_split' → logprob: -20.625164031982422

Token 107: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.19746939837932587
    2. '()' → logprob: -2.197469472885132
    3. '())' → logprob: -2.697469472885132
    4. '(' → logprob: -8.072469711303711
    5. '())))' → logprob: -8.447469711303711
    6. '))' → logprob: -8.947469711303711
    7. '()));' → logprob: -10.447469711303711
    8. ')' → logprob: -11.072469711303711
    9. '()))
' → logprob: -11.697469711303711
    10. '())).' → logprob: -11.947469711303711

Token 108: '#' (ID: 2)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3219047486782074
    2. '(' → logprob: -1.5719047784805298
    3. '[' → logprob: -2.8219046592712402
    4. ')' → logprob: -5.69690465927124
    5. '[]' → logprob: -6.32190465927124
    6. '()
' → logprob: -7.44690465927124
    7. '.' → logprob: -7.44690465927124
    8. '#' → logprob: -7.57190465927124
    9. '(
' → logprob: -7.69690465927124
    10. '```' → logprob: -8.571905136108398

Token 109: ' La' (ID: 3038)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07461299747228622
    2. ''' → logprob: -4.074613094329834
    3. '#' → logprob: -4.324613094329834
    4. 'N' → logprob: -4.449613094329834
    5. '[' → logprob: -4.574613094329834
    6. 's' → logprob: -4.824613094329834
    7. ')' → logprob: -6.074613094329834
    8. ' N' → logprob: -6.074613094329834
    9. 'n' → logprob: -6.824613094329834
    10. ',' → logprob: -7.199613094329834

Token 110: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21898160874843597
    2. '[' → logprob: -2.3439815044403076
    3. ',' → logprob: -2.7189815044403076
    4. '.' → logprob: -3.8439815044403076
    5. ')' → logprob: -6.093981742858887
    6. ''' → logprob: -6.343981742858887
    7. '_' → logprob: -6.468981742858887
    8. ' =' → logprob: -6.593981742858887
    9. '[:]' → logprob: -7.218981742858887
    10. ' ,' → logprob: -7.343981742858887

Token 111: ' div' (ID: 4223)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08210940659046173
    2. 's' → logprob: -3.4571094512939453
    3. '()' → logprob: -3.9571094512939453
    4. '(s' → logprob: -4.707109451293945
    5. ' ' → logprob: -5.332109451293945
    6. 'print' → logprob: -5.832109451293945
    7. ' (' → logprob: -6.332109451293945
    8. ')' → logprob: -6.582109451293945
    9. '(
' → logprob: -6.707109451293945
    10. '(input' → logprob: -7.082109451293945

Token 112: 'mod' (ID: 4847)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10808336734771729
    2. 'e' → logprob: -2.8580832481384277
    3. 'ision' → logprob: -3.9830832481384277
    4. '()' → logprob: -4.358083248138428
    5. 'i' → logprob: -5.233083248138428
    6. 'ise' → logprob: -6.483083248138428
    7. 's' → logprob: -6.608083248138428
    8. '_' → logprob: -6.858083248138428
    9. 'es' → logprob: -7.733083248138428
    10. 'a' → logprob: -7.733083248138428

Token 113: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020709816366434097
    2. '(N' → logprob: -3.895709753036499
    3. ' (' → logprob: -9.145709991455078
    4. '(n' → logprob: -10.395709991455078
    5. '(M' → logprob: -12.020709991455078
    6. ' ' → logprob: -12.395709991455078
    7. '()' → logprob: -12.520709991455078
    8. '(s' → logprob: -12.770709991455078
    9. '(
' → logprob: -12.770709991455078
    10. '((' → logprob: -13.270709991455078

Token 114: ',' (ID: 11)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4139922559261322
    2. '(' → logprob: -1.1639922857284546
    3. ',' → logprob: -4.163992404937744
    4. ')' → logprob: -5.038992404937744
    5. '(M' → logprob: -6.163992404937744
    6. ',N' → logprob: -6.663992404937744
    7. '(n' → logprob: -7.288992404937744
    8. '<|end|>' → logprob: -8.538991928100586
    9. ' ,' → logprob: -9.163991928100586
    10. '(
' → logprob: -9.788991928100586

Token 115: ' b' (ID: 287)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6131093502044678
    2. 'M' → logprob: -1.3631093502044678
    3. ' M' → logprob: -1.9881093502044678
    4. ' N' → logprob: -2.8631093502044678
    5. ')' → logprob: -5.988109588623047
    6. 'b' → logprob: -6.113109588623047
    7. '<|end|>' → logprob: -6.488109588623047
    8. ' ' → logprob: -6.613109588623047
    9. ' b' → logprob: -7.363109588623047
    10. 'a' → logprob: -9.613109588623047

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08032400906085968
    2. '(N' → logprob: -2.9553239345550537
    3. '(' → logprob: -3.7053239345550537
    4. '(a' → logprob: -8.955324172973633
    5. ')(' → logprob: -9.080324172973633
    6. '(n' → logprob: -9.830324172973633
    7. ',' → logprob: -10.080324172973633
    8. ' ' → logprob: -10.205324172973633
    9. 'a' → logprob: -10.330324172973633
    10. ' )' → logprob: -10.580324172973633

Token 117: ' retourne' (ID: 178818)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002154664834961295
    2. '(N' → logprob: -6.37715482711792
    3. '<|end|>' → logprob: -9.252154350280762
    4. '(
' → logprob: -9.252154350280762
    5. ')' → logprob: -9.377154350280762
    6. '('' → logprob: -10.002154350280762
    7. ' (' → logprob: -10.252154350280762
    8. '(n' → logprob: -10.752154350280762
    9. ',' → logprob: -10.877154350280762
    10. ' ' → logprob: -11.377154350280762

Token 118: ' un' (ID: 537)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04548892751336098
    2. '(a' → logprob: -3.5454888343811035
    3. '(' → logprob: -4.2954888343811035
    4. ' a' → logprob: -6.5454888343811035
    5. 'a' → logprob: -8.670489311218262
    6. ' ' → logprob: -8.920489311218262
    7. ',' → logprob: -9.670489311218262
    8. ' la' → logprob: -10.545489311218262
    9. '<|end|>' → logprob: -10.795489311218262
    10. ')' → logprob: -10.920489311218262

Token 119: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.025614630430936813
    2. 'tuple' → logprob: -3.7756147384643555
    3. 'tu' → logprob: -6.9006147384643555
    4. ' ' → logprob: -7.6506147384643555
    5. '(tuple' → logprob: -8.150614738464355
    6. ' couple' → logprob: -8.650614738464355
    7. ' tu' → logprob: -8.775614738464355
    8. 't' → logprob: -9.275614738464355
    9. ' (' → logprob: -9.400614738464355
    10. ' a' → logprob: -10.650614738464355

Token 120: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023539412766695023
    2. '(N' → logprob: -4.1485395431518555
    3. ' (' → logprob: -5.1485395431518555
    4. '(a' → logprob: -7.2735395431518555
    5. '(n' → logprob: -8.023539543151855
    6. ' ' → logprob: -8.398539543151855
    7. '<|end|>' → logprob: -8.398539543151855
    8. '((' → logprob: -10.148539543151855
    9. ',' → logprob: -10.148539543151855
    10. '('' → logprob: -10.148539543151855

Token 121: ' deux' (ID: 10301)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01074760127812624
    2. ' (' → logprob: -5.13574743270874
    3. '(' → logprob: -5.88574743270874
    4. 'a' → logprob: -7.01074743270874
    5. '(N' → logprob: -8.260747909545898
    6. ' la' → logprob: -8.385747909545898
    7. '(de' → logprob: -9.010747909545898
    8. 'quot' → logprob: -9.010747909545898
    9. '(b' → logprob: -9.135747909545898
    10. 'la' → logprob: -9.635747909545898

Token 122: ' éléments' (ID: 57375)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.17412076890468597
    2. '<|end|>' → logprob: -2.4241206645965576
    3. ' ' → logprob: -4.049120903015137
    4. ' ' → logprob: -4.424120903015137
    5. ' espace' → logprob: -4.674120903015137
    6. '_' → logprob: -5.174120903015137
    7. ',' → logprob: -5.549120903015137
    8. ' (' → logprob: -5.674120903015137
    9. 'es' → logprob: -5.674120903015137
    10. ')' → logprob: -5.674120903015137

Token 123: ' :
' (ID: 10039)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014865853823721409
    2. ' (' → logprob: -4.389865875244141
    3. '(N' → logprob: -6.264865875244141
    4. ',' → logprob: -8.63986587524414
    5. ' ' → logprob: -9.26486587524414
    6. '(
' → logprob: -9.38986587524414
    7. '(n' → logprob: -10.63986587524414
    8. '('' → logprob: -11.13986587524414
    9. ')' → logprob: -11.38986587524414
    10. '((' → logprob: -12.26486587524414

Token 124: '#' (ID: 2)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7085738778114319
    2. '(a' → logprob: -0.8335738778114319
    3. '(' → logprob: -2.833573818206787
    4. 'a' → logprob: -4.958573818206787
    5. ' ' → logprob: -5.208573818206787
    6. ' a' → logprob: -6.833573818206787
    7. '(N' → logprob: -8.208574295043945
    8. ')' → logprob: -8.708574295043945
    9. '(n' → logprob: -9.208574295043945
    10. '(b' → logprob: -10.083574295043945

Token 125: ' ' (ID: 220)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.37925446033477783
    2. ' (' → logprob: -1.2542544603347778
    3. '(' → logprob: -3.7542543411254883
    4. 'a' → logprob: -5.754254341125488
    5. '(N' → logprob: -6.254254341125488
    6. '(div' → logprob: -7.379254341125488
    7. '(n' → logprob: -8.129254341125488
    8. ' a' → logprob: -8.254254341125488
    9. 'quot' → logprob: -9.129254341125488
    10. 'div' → logprob: -9.629254341125488

Token 126: '1' (ID: 16)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.13953210413455963
    2. '(' → logprob: -2.8895320892333984
    3. ' (' → logprob: -3.0145320892333984
    4. '(N' → logprob: -3.7645320892333984
    5. '(q' → logprob: -7.514532089233398
    6. 'quot' → logprob: -8.014532089233398
    7. 'a' → logprob: -8.264532089233398
    8. '(b' → logprob: -8.264532089233398
    9. '(n' → logprob: -8.889532089233398
    10. '(
' → logprob: -9.264532089233398

Token 127: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011613111943006516
    2. ' (' → logprob: -4.761612892150879
    3. ' ,' → logprob: -7.011612892150879
    4. ')' → logprob: -7.386612892150879
    5. '<|end|>' → logprob: -8.136612892150879
    6. '(' → logprob: -8.261612892150879
    7. '.' → logprob: -8.386612892150879
    8. ' ' → logprob: -8.386612892150879
    9. 'a' → logprob: -9.261612892150879
    10. ' =' → logprob: -9.386612892150879

Token 128: ' Le' (ID: 2018)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5443122386932373
    2. 'Le' → logprob: -1.5443122386932373
    3. 'La' → logprob: -2.1693122386932373
    4. 'Qu' → logprob: -3.9193122386932373
    5. ' Le' → logprob: -4.169312477111816
    6. ' a' → logprob: -4.169312477111816
    7. ' la' → logprob: -4.919312477111816
    8. 'N' → logprob: -5.044312477111816
    9. ' le' → logprob: -5.169312477111816
    10. 'quot' → logprob: -5.294312477111816

Token 129: ' quotient' (ID: 169302)
  Prédit: 'quot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quot' → logprob: -0.26318973302841187
    2. ' quotient' → logprob: -1.5131897926330566
    3. 'q' → logprob: -5.638189792633057
    4. ' résultat' → logprob: -6.263189792633057
    5. 'a' → logprob: -6.388189792633057
    6. 'qu' → logprob: -6.638189792633057
    7. 'quo' → logprob: -7.263189792633057
    8. 'rés' → logprob: -7.513189792633057
    9. '

' → logprob: -8.763189315795898
    10. 'prem' → logprob: -9.013189315795898

Token 130: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12125645577907562
    2. ',' → logprob: -2.4962563514709473
    3. ' (' → logprob: -3.8712563514709473
    4. '(N' → logprob: -4.746256351470947
    5. ' ' → logprob: -6.371256351470947
    6. ' ,' → logprob: -9.121256828308105
    7. 'a' → logprob: -9.371256828308105
    8. '(n' → logprob: -9.746256828308105
    9. '_' → logprob: -10.121256828308105
    10. ')' → logprob: -10.246256828308105

Token 131: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38781285285949707
    2. ' a' → logprob: -1.137812852859497
    3. ' N' → logprob: -7.887812614440918
    4. 'N' → logprob: -8.262812614440918
    5. ' ' → logprob: -8.387812614440918
    6. 'div' → logprob: -10.387812614440918
    7. '  ' → logprob: -12.012812614440918
    8. '(a' → logprob: -12.262812614440918
    9. ' la' → logprob: -12.387812614440918
    10. ' div' → logprob: -12.387812614440918

Token 132: ' division' (ID: 21629)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06861823797225952
    2. 'div' → logprob: -3.1936182975769043
    3. ' a' → logprob: -4.443618297576904
    4. 'division' → logprob: -5.068618297576904
    5. 'N' → logprob: -5.693618297576904
    6. ' division' → logprob: -6.443618297576904
    7. ' div' → logprob: -6.443618297576904
    8. ' N' → logprob: -8.193617820739746
    9. 'ent' → logprob: -9.443617820739746
    10. ' ' → logprob: -9.693617820739746

Token 133: ' entière' (ID: 61583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5147045254707336
    2. ' (' → logprob: -1.5147044658660889
    3. ' ,' → logprob: -2.264704465866089
    4. ',' → logprob: -2.764704465866089
    5. 'a' → logprob: -4.889704704284668
    6. '(' → logprob: -6.014704704284668
    7. '  ' → logprob: -6.639704704284668
    8. ' )' → logprob: -6.889704704284668
    9. ')' → logprob: -7.639704704284668
    10. '<|end|>' → logprob: -7.889704704284668

Token 134: ' de' (ID: 334)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05107387900352478
    2. '(' → logprob: -3.8010737895965576
    3. ' ' → logprob: -3.9260737895965576
    4. ',' → logprob: -5.426074028015137
    5. ' ,' → logprob: -6.676074028015137
    6. '(a' → logprob: -7.426074028015137
    7. '(N' → logprob: -7.676074028015137
    8. 'a' → logprob: -8.176074028015137
    9. ' de' → logprob: -8.426074028015137
    10. '(n' → logprob: -8.676074028015137

Token 135: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038693688809871674
    2. ' a' → logprob: -3.28869366645813
    3. 'N' → logprob: -7.663693904876709
    4. ' N' → logprob: -8.66369342803955
    5. ' ' → logprob: -12.28869342803955
    6. 'A' → logprob: -14.16369342803955
    7. '(a' → logprob: -14.16369342803955
    8. '	a' → logprob: -14.16369342803955
    9. ' M' → logprob: -14.41369342803955
    10. 'M' → logprob: -14.66369342803955

Token 136: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19983592629432678
    2. ' ,' → logprob: -2.449836015701294
    3. ' (' → logprob: -3.324836015701294
    4. '(N' → logprob: -3.824836015701294
    5. 'N' → logprob: -4.574835777282715
    6. 'a' → logprob: -4.824835777282715
    7. ' ' → logprob: -5.199835777282715
    8. '(' → logprob: -5.449835777282715
    9. '<|end|>' → logprob: -5.824835777282715
    10. ' N' → logprob: -6.449835777282715

Token 137: ' b' (ID: 287)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.2643826901912689
    2. 'M' → logprob: -1.6393827199935913
    3. 'b' → logprob: -3.7643826007843018
    4. ' b' → logprob: -4.389382839202881
    5. ' ' → logprob: -6.014382839202881
    6. '  ' → logprob: -10.389382362365723
    7. '2' → logprob: -10.764382362365723
    8. 'm' → logprob: -11.264382362365723
    9. 'N' → logprob: -11.389382362365723
    10. '<|end|>' → logprob: -11.389382362365723

Token 138: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07489573210477829
    2. '(' → logprob: -3.3248956203460693
    3. '(N' → logprob: -3.8248956203460693
    4. ')' → logprob: -4.699895858764648
    5. ' (' → logprob: -5.699895858764648
    6. ' ,' → logprob: -7.199895858764648
    7. ',N' → logprob: -8.324895858764648
    8. 'a' → logprob: -8.699895858764648
    9. ' ' → logprob: -8.949895858764648
    10. 'N' → logprob: -9.199895858764648

Token 139: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2407168596982956
    2. ' a' → logprob: -2.6157169342041016
    3. ' )' → logprob: -2.7407169342041016
    4. ')' → logprob: -2.7407169342041016
    5. 'N' → logprob: -5.490716934204102
    6. ' N' → logprob: -5.615716934204102
    7. ',' → logprob: -6.615716934204102
    8. ' '' → logprob: -7.740716934204102
    9. ' "' → logprob: -8.240716934204102
    10. ''a' → logprob: -8.490716934204102

Token 140: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5284792184829712
    2. ',' → logprob: -1.0284792184829712
    3. '//' → logprob: -3.9034790992736816
    4. ' )' → logprob: -3.9034790992736816
    5. ' ,' → logprob: -5.403479099273682
    6. ' //' → logprob: -5.778479099273682
    7. '),' → logprob: -6.028479099273682
    8. ' ' → logprob: -6.778479099273682
    9. ' ),' → logprob: -7.403479099273682
    10. '[' → logprob: -9.15347957611084

Token 141: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023420631885528564
    2. ' b' → logprob: -3.773420572280884
    3. ')' → logprob: -9.023420333862305
    4. 'M' → logprob: -10.273420333862305
    5. ' M' → logprob: -11.523420333862305
    6. ')b' → logprob: -11.773420333862305
    7. ' )' → logprob: -13.523420333862305
    8. ' ' → logprob: -14.523420333862305
    9. ' ' → logprob: -15.898420333862305
    10. 'N' → logprob: -16.273420333862305

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021947486326098442
    2. ',' → logprob: -4.146947383880615
    3. '),' → logprob: -5.271947383880615
    4. ')
' → logprob: -7.896947383880615
    5. ',)' → logprob: -9.271947860717773
    6. ' )' → logprob: -9.396947860717773
    7. ').' → logprob: -9.396947860717773
    8. ',
' → logprob: -10.271947860717773
    9. '),
' → logprob: -10.271947860717773
    10. '))' → logprob: -11.146947860717773

Token 143: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015417111106216908
    2. ')' → logprob: -4.890417098999023
    3. '(' → logprob: -5.390417098999023
    4. ' (' → logprob: -6.890417098999023
    5. ',
' → logprob: -7.015417098999023
    6. ' ,' → logprob: -8.140417098999023
    7. ',)' → logprob: -8.390417098999023
    8. ',(' → logprob: -8.640417098999023
    9. ' ' → logprob: -9.140417098999023
    10. '),' → logprob: -9.390417098999023

Token 144: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08935457468032837
    2. ' )' → logprob: -2.9643545150756836
    3. ',' → logprob: -3.7143545150756836
    4. ' ' → logprob: -5.464354515075684
    5. '2' → logprob: -5.964354515075684
    6. ' ,' → logprob: -6.589354515075684
    7. ',
' → logprob: -8.839354515075684
    8. 'a' → logprob: -8.839354515075684
    9. '  
' → logprob: -8.839354515075684
    10. ' )
' → logprob: -8.964354515075684

Token 145: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029813097789883614
    2. ' ' → logprob: -3.529813051223755
    3. ',' → logprob: -10.529812812805176
    4. '1' → logprob: -10.904812812805176
    5. ' 
' → logprob: -12.404812812805176
    6. ' ,' → logprob: -13.029812812805176
    7. '  ' → logprob: -13.279812812805176
    8. ')' → logprob: -13.404812812805176
    9. ' ' → logprob: -13.404812812805176
    10. '<|end|>' → logprob: -13.654812812805176

Token 146: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.43514445424079895
    2. ',' → logprob: -1.0601444244384766
    3. ' ,' → logprob: -5.435144424438477
    4. ')' → logprob: -7.435144424438477
    5. ' ' → logprob: -7.810144424438477
    6. ' (' → logprob: -7.935144424438477
    7. '(' → logprob: -8.310144424438477
    8. '#' → logprob: -9.060144424438477
    9. ' .' → logprob: -9.560144424438477
    10. '<|end|>' → logprob: -10.060144424438477

Token 147: ' Le' (ID: 2018)
  Prédit: 'Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Le' → logprob: -0.3908325433731079
    2. ' Le' → logprob: -1.140832543373108
    3. ' le' → logprob: -6.265832424163818
    4. 'R' → logprob: -7.515832424163818
    5. 'La' → logprob: -7.515832424163818
    6. 'le' → logprob: -8.265832901000977
    7. ' ' → logprob: -8.640832901000977
    8. ' La' → logprob: -8.765832901000977
    9. ' ' → logprob: -8.765832901000977
    10. ' R' → logprob: -9.890832901000977

Token 148: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.09116031974554062
    2. ' reste' → logprob: -2.716160297393799
    3. 're' → logprob: -4.841160297393799
    4. 'mod' → logprob: -4.966160297393799
    5. 'rest' → logprob: -5.466160297393799
    6. 'quot' → logprob: -7.716160297393799
    7. '#' → logprob: -7.841160297393799
    8. 'r' → logprob: -7.966160297393799
    9. ' ' → logprob: -8.841160774230957
    10. ' remainder' → logprob: -8.966160774230957

Token 149: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08180199563503265
    2. '(N' → logprob: -2.5818018913269043
    3. ',' → logprob: -7.081801891326904
    4. '(n' → logprob: -7.456801891326904
    5. ' (' → logprob: -8.081802368164062
    6. ')' → logprob: -8.206802368164062
    7. '(
' → logprob: -8.206802368164062
    8. '<|end|>' → logprob: -8.706802368164062
    9. '(a' → logprob: -8.831802368164062
    10. '#' → logprob: -9.831802368164062

Token 150: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3017842769622803
    2. ' a' → logprob: -1.8017842769622803
    3. ' la' → logprob: -2.4267842769622803
    4. 'div' → logprob: -5.426784515380859
    5. ' ' → logprob: -7.426784515380859
    6. 'division' → logprob: -7.676784515380859
    7. 'la' → logprob: -7.926784515380859
    8. 'l' → logprob: -8.05178451538086
    9. '(a' → logprob: -8.55178451538086
    10. ' (' → logprob: -8.55178451538086

Token 151: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.2974729537963867
    2. ' division' → logprob: -1.6724729537963867
    3. 'div' → logprob: -2.6724729537963867
    4. 'a' → logprob: -8.047472953796387
    5. ' div' → logprob: -9.297472953796387
    6. ' a' → logprob: -11.672472953796387
    7. ' ' → logprob: -11.797472953796387
    8. 'mod' → logprob: -12.297472953796387
    9. 'd' → logprob: -12.797472953796387
    10. ' división' → logprob: -13.422472953796387

Token 152: ' de' (ID: 334)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7684803009033203
    2. ' de' → logprob: -1.6434803009033203
    3. '(' → logprob: -1.8934803009033203
    4. ' entière' → logprob: -2.0184803009033203
    5. '#' → logprob: -4.39348030090332
    6. ')' → logprob: -4.51848030090332
    7. '(a' → logprob: -4.51848030090332
    8. ',' → logprob: -5.26848030090332
    9. 'a' → logprob: -5.51848030090332
    10. 'de' → logprob: -5.89348030090332

Token 153: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02054574340581894
    2. ' a' → logprob: -3.895545721054077
    3. ' ' → logprob: -12.895545959472656
    4. 'N' → logprob: -14.395545959472656
    5. ' ' → logprob: -15.270545959472656
    6. '	a' → logprob: -16.270545959472656
    7. 'div' → logprob: -16.395545959472656
    8. 'b' → logprob: -16.645545959472656
    9. '#a' → logprob: -16.770545959472656
    10. ' N' → logprob: -16.770545959472656

Token 154: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.04850208759307861
    2. 'par' → logprob: -3.798501968383789
    3. '%' → logprob: -4.298501968383789
    4. ' ' → logprob: -5.673501968383789
    5. 'b' → logprob: -6.298501968383789
    6. ' by' → logprob: -6.673501968383789
    7. 'a' → logprob: -6.923501968383789
    8. ' (' → logprob: -7.423501968383789
    9. ' ' → logprob: -7.798501968383789
    10. '(' → logprob: -8.048501968383789

Token 155: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889761030673981
    2. ' b' → logprob: -2.578897714614868
    3. ' M' → logprob: -12.328897476196289
    4. 'M' → logprob: -13.203897476196289
    5. ' ' → logprob: -13.578897476196289
    6. ' ' → logprob: -16.07889747619629
    7. ' ' → logprob: -16.32889747619629
    8. ')b' → logprob: -17.57889747619629
    9. ' б' → logprob: -17.70389747619629
    10. '<|end|>' → logprob: -17.70389747619629

Token 156: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.287364661693573
    2. '(N' → logprob: -2.0373647212982178
    3. ')' → logprob: -2.1623647212982178
    4. '(
' → logprob: -6.537364482879639
    5. ',' → logprob: -7.037364482879639
    6. 'N' → logprob: -7.162364482879639
    7. '(M' → logprob: -8.162364959716797
    8. '#' → logprob: -8.662364959716797
    9. '(n' → logprob: -8.787364959716797
    10. '.' → logprob: -9.662364959716797

Token 157: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22600826621055603
    2. ' a' → logprob: -1.6010082960128784
    3. ')' → logprob: -7.976008415222168
    4. ' )' → logprob: -8.976008415222168
    5. 'b' → logprob: -10.476008415222168
    6. ')a' → logprob: -10.851008415222168
    7. ' ' → logprob: -11.226008415222168
    8. ' b' → logprob: -11.351008415222168
    9. ' (' → logprob: -11.976008415222168
    10. '))' → logprob: -12.288508415222168

Token 158: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5124573707580566
    2. ' %' → logprob: -1.0124573707580566
    3. ' %)' → logprob: -3.8874573707580566
    4. '%)' → logprob: -4.762457370758057
    5. ')' → logprob: -4.887457370758057
    6. ' )' → logprob: -7.012457370758057
    7. ')%' → logprob: -10.262456893920898
    8. ' ' → logprob: -10.262456893920898
    9. ' %
' → logprob: -11.137456893920898
    10. '%i' → logprob: -11.387456893920898

Token 159: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.27345094084739685
    2. ')' → logprob: -1.6484509706497192
    3. 'M' → logprob: -3.8984508514404297
    4. ' b' → logprob: -4.02345085144043
    5. ' M' → logprob: -5.14845085144043
    6. ' )' → logprob: -5.89845085144043
    7. '))' → logprob: -9.02345085144043
    8. ')b' → logprob: -10.39845085144043
    9. ' ' → logprob: -11.52345085144043
    10. 'N' → logprob: -12.52345085144043

Token 160: ')
' (ID: 446)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.020983250811696053
    2. ')' → logprob: -3.8959832191467285
    3. '))
' → logprob: -8.645983695983887
    4. ' ))' → logprob: -9.395983695983887
    5. ')))' → logprob: -9.770983695983887
    6. '()' → logprob: -11.145983695983887
    7. '))

' → logprob: -11.395983695983887
    8. ')).' → logprob: -11.395983695983887
    9. ' ' → logprob: -11.520983695983887
    10. '()))' → logprob: -11.895983695983887

Token 161: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7279312610626221
    2. ')' → logprob: -0.9779312610626221
    3. '.' → logprob: -3.227931261062622
    4. '(N' → logprob: -3.852931261062622
    5. '[' → logprob: -3.977931261062622
    6. 'N' → logprob: -4.352931022644043
    7. ',' → logprob: -4.602931022644043
    8. ' (' → logprob: -4.852931022644043
    9. 'n' → logprob: -5.477931022644043
    10. ' ' → logprob: -5.477931022644043

Token 162: ' Ici' (ID: 145754)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2950252890586853
    2. 'quot' → logprob: -2.42002534866333
    3. 'r' → logprob: -2.54502534866333
    4. 'result' → logprob: -3.42002534866333
    5. 'Q' → logprob: -3.79502534866333
    6. 'n' → logprob: -4.92002534866333
    7. '#' → logprob: -4.92002534866333
    8. 'N' → logprob: -5.29502534866333
    9. '(' → logprob: -5.79502534866333
    10. 'res' → logprob: -6.42002534866333

Token 163: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0599465370178223
    2. ',' → logprob: -1.5599465370178223
    3. ' =' → logprob: -1.8099465370178223
    4. '_' → logprob: -2.4349465370178223
    5. 'N' → logprob: -2.9349465370178223
    6. '=' → logprob: -3.1849465370178223
    7. ' ' → logprob: -3.3099465370178223
    8. 's' → logprob: -4.684946537017822
    9. ' N' → logprob: -4.934946537017822
    10. ' :' → logprob: -5.184946537017822

Token 164: ' on' (ID: 402)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.40661874413490295
    2. ' q' → logprob: -1.2816187143325806
    3. 'quot' → logprob: -3.90661883354187
    4. ' quotient' → logprob: -4.156618595123291
    5. 'Q' → logprob: -4.781618595123291
    6. 'N' → logprob: -5.281618595123291
    7. ' N' → logprob: -6.406618595123291
    8. 'div' → logprob: -6.406618595123291
    9. ' Q' → logprob: -6.406618595123291
    10. 'quo' → logprob: -7.781618595123291

Token 165: ' div' (ID: 4223)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.8230905532836914
    2. 'N' → logprob: -2.0730905532836914
    3. 'quot' → logprob: -2.3230905532836914
    4. 's' → logprob: -2.4480905532836914
    5. 'div' → logprob: -2.6980905532836914
    6. ' quotient' → logprob: -3.1980905532836914
    7. ' n' → logprob: -3.3230905532836914
    8. ' div' → logprob: -3.3230905532836914
    9. ' récup' → logprob: -3.4480905532836914
    10. 'r' → logprob: -3.4480905532836914

Token 166: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.640125036239624
    2. 'mod' → logprob: -0.765125036239624
    3. 'ide' → logprob: -5.515125274658203
    4. ' N' → logprob: -7.765125274658203
    5. 'iser' → logprob: -7.765125274658203
    6. ')' → logprob: -8.015125274658203
    7. 'id' → logprob: -8.140125274658203
    8. 'm' → logprob: -8.140125274658203
    9. 'e' → logprob: -8.265125274658203
    10. 'ize' → logprob: -8.515125274658203

Token 167: ' M' (ID: 391)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05717690289020538
    2. 'M' → logprob: -2.9321768283843994
    3. ' N' → logprob: -6.8071770668029785
    4. '(N' → logprob: -7.0571770668029785
    5. ' M' → logprob: -8.30717658996582
    6. '(M' → logprob: -10.18217658996582
    7. '(' → logprob: -10.30717658996582
    8. ' ' → logprob: -13.55717658996582
    9. ' (' → logprob: -13.80717658996582
    10. '100' → logprob: -14.43217658996582

Token 168: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6882244944572449
    2. ' ,' → logprob: -1.1882245540618896
    3. ' par' → logprob: -2.1882245540618896
    4. ')' → logprob: -3.5632245540618896
    5. ' by' → logprob: -4.0632243156433105
    6. ' N' → logprob: -4.4382243156433105
    7. ',N' → logprob: -4.6882243156433105
    8. 'par' → logprob: -5.3132243156433105
    9. ' )' → logprob: -5.8132243156433105
    10. ' ' → logprob: -5.8132243156433105

Token 169: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005930574145168066
    2. ' N' → logprob: -5.130930423736572
    3. '2' → logprob: -13.75593090057373
    4. ' ' → logprob: -14.63093090057373
    5. ' ' → logprob: -16.255929946899414
    6. '10' → logprob: -17.005929946899414
    7. '3' → logprob: -17.255929946899414
    8. '>N' → logprob: -17.380929946899414
    9. '1' → logprob: -17.505929946899414
    10. '`' → logprob: -17.505929946899414

Token 170: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047847624868154526
    2. ',' → logprob: -4.047847747802734
    3. '.' → logprob: -5.172847747802734
    4. '(' → logprob: -5.672847747802734
    5. '[' → logprob: -5.922847747802734
    6. ':' → logprob: -6.047847747802734
    7. 'result' → logprob: -6.047847747802734
    8. 'r' → logprob: -6.297847747802734
    9. 's' → logprob: -6.297847747802734
    10. '#' → logprob: -6.797847747802734

Token 171: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.06560011208057404
    2. 'ob' → logprob: -3.6906001567840576
    3. ' calcul' → logprob: -3.8156001567840576
    4. ' récupérer' → logprob: -4.8155999183654785
    5. ' déterminer' → logprob: -5.9405999183654785
    6. ' connaître' → logprob: -6.4405999183654785
    7. ' ob' → logprob: -6.9405999183654785
    8. 'r' → logprob: -7.1905999183654785
    9. ' obten' → logprob: -8.190600395202637
    10. ' connaitre' → logprob: -8.315600395202637

Token 172: ' le' (ID: 505)
  Prédit: ' quotient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quotient' → logprob: -0.5161093473434448
    2. ' le' → logprob: -1.0161093473434448
    3. 'le' → logprob: -4.016109466552734
    4. 'quot' → logprob: -4.391109466552734
    5. ' q' → logprob: -5.516109466552734
    6. ' (' → logprob: -6.016109466552734
    7. ' quot' → logprob: -6.766109466552734
    8. 'q' → logprob: -7.016109466552734
    9. ' ' → logprob: -7.641109466552734
    10. ' un' → logprob: -7.891109466552734

Token 173: ' nombre' (ID: 9733)
  Prédit: ' quotient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quotient' → logprob: -0.18862712383270264
    2. 'quot' → logprob: -1.9386271238327026
    3. ' nombre' → logprob: -4.313627243041992
    4. 'q' → logprob: -5.188627243041992
    5. ' q' → logprob: -5.688627243041992
    6. 'nombre' → logprob: -6.563627243041992
    7. ' quot' → logprob: -7.063627243041992
    8. ' ' → logprob: -7.188627243041992
    9. ' qu' → logprob: -7.938627243041992
    10. 'c' → logprob: -8.438627243041992

Token 174: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5166342258453369
    2. '<|end|>' → logprob: -1.266634225845337
    3. ' d' → logprob: -2.891634225845337
    4. ' de' → logprob: -3.141634225845337
    5. 's' → logprob: -5.141633987426758
    6. '_' → logprob: -5.766633987426758
    7. ' des' → logprob: -6.141633987426758
    8. 'd' → logprob: -6.141633987426758
    9. ' espaces' → logprob: -6.766633987426758
    10. 'space' → logprob: -6.891633987426758

Token 175: ' fois' (ID: 14697)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -1.0283262729644775
    2. ' ' → logprob: -1.2783262729644775
    3. ' parts' → logprob: -2.9033262729644775
    4. 's' → logprob: -3.5283262729644775
    5. ' lignes' → logprob: -3.7783262729644775
    6. '_' → logprob: -3.7783262729644775
    7. ' spaces' → logprob: -3.9033262729644775
    8. ' "' → logprob: -3.9033262729644775
    9. ' fois' → logprob: -4.340826034545898
    10. 'spaces' → logprob: -4.403326034545898

Token 176: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43087613582611084
    2. '<|end|>' → logprob: -1.1808761358261108
    3. ' que' → logprob: -3.9308762550354004
    4. ' qu' → logprob: -5.5558762550354
    5. ' that' → logprob: -5.8058762550354
    6. ' N' → logprob: -6.5558762550354
    7. ' M' → logprob: -6.5558762550354
    8. ' (' → logprob: -6.9308762550354
    9. '<|end|>' → logprob: -7.0558762550354
    10. ' de' → logprob: -7.1808762550354

Token 177: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6361556053161621
    2. 'N' → logprob: -0.7611556053161621
    3. ' ' → logprob: -6.636155605316162
    4. ' M' → logprob: -7.386155605316162
    5. 'M' → logprob: -8.26115608215332
    6. ' "' → logprob: -8.51115608215332
    7. ' on' → logprob: -8.76115608215332
    8. 'l' → logprob: -9.38615608215332
    9. ' `' → logprob: -9.63615608215332
    10. '<|end|>' → logprob: -9.63615608215332

Token 178: ' entre' (ID: 3853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8929224610328674
    2. ' dans' → logprob: -0.8929224610328674
    3. 'dans' → logprob: -1.7679224014282227
    4. '<|end|>' → logprob: -5.642922401428223
    5. ')' → logprob: -6.642922401428223
    6. ',' → logprob: -7.017922401428223
    7. ' )' → logprob: -7.142922401428223
    8. '1' → logprob: -7.392922401428223
    9. ' M' → logprob: -8.205422401428223
    10. ' into' → logprob: -8.205422401428223

Token 180: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.08900555223226547
    2. 'M' → logprob: -2.464005470275879
    3. ' ' → logprob: -9.839005470275879
    4. ' ' → logprob: -11.589005470275879
    5. '<|end|>' → logprob: -13.589005470275879
    6. 'l' → logprob: -14.839005470275879
    7. ' le' → logprob: -15.214005470275879
    8. '```' → logprob: -15.339005470275879
    9. ' ' → logprob: -15.464005470275879
    10. ' l' → logprob: -15.589005470275879

Token 181: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09419209510087967
    2. '(' → logprob: -3.3441920280456543
    3. '.' → logprob: -3.4691920280456543
    4. ',' → logprob: -4.219192028045654
    5. '#' → logprob: -6.469192028045654
    6. '[' → logprob: -6.594192028045654
    7. '(
' → logprob: -6.719192028045654
    8. ')
' → logprob: -7.344192028045654
    9. ').' → logprob: -7.469192028045654
    10. '(N' → logprob: -7.594192028045654

Token 182: 'quot' (ID: 17555)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033836569637060165
    2. ' )' → logprob: -3.533836603164673
    3. 'N' → logprob: -5.908836364746094
    4. ' N' → logprob: -7.658836364746094
    5. ',' → logprob: -8.658836364746094
    6. 'M' → logprob: -8.658836364746094
    7. 'n' → logprob: -9.158836364746094
    8. ' ' → logprob: -9.533836364746094
    9. ' M' → logprob: -9.658836364746094
    10. '),' → logprob: -10.033836364746094

Token 183: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.009341167286038399
    2. ')' → logprob: -4.759341239929199
    3. 'ien' → logprob: -8.0093412399292
    4. ',' → logprob: -8.7593412399292
    5. 'i' → logprob: -9.6343412399292
    6. 'e' → logprob: -9.7593412399292
    7. 'ent' → logprob: -10.2593412399292
    8. 'ients' → logprob: -11.0093412399292
    9. 'u' → logprob: -11.2593412399292
    10. 'ie' → logprob: -11.8843412399292

Token 184: ' s' (ID: 265)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0726781114935875
    2. ',' → logprob: -2.8226780891418457
    3. '),' → logprob: -4.697678089141846
    4. ' )' → logprob: -6.697678089141846
    5. ',)' → logprob: -9.197678565979004
    6. ' ,' → logprob: -9.697678565979004
    7. ' ),' → logprob: -10.572678565979004
    8. ' et' → logprob: -11.072678565979004
    9. ')#' → logprob: -11.072678565979004
    10. '#' → logprob: -11.322678565979004

Token 185: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10134632885456085
    2. 'ur' → logprob: -2.726346254348755
    3. ',' → logprob: -4.226346492767334
    4. '),' → logprob: -4.976346492767334
    5. ' )' → logprob: -6.226346492767334
    6. '=' → logprob: -6.601346492767334
    7. 'e' → logprob: -6.601346492767334
    8. 'ans' → logprob: -7.101346492767334
    9. 'i' → logprob: -8.101346015930176
    10. 'u' → logprob: -8.101346015930176

Token 186: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9913870096206665
    2. ',' → logprob: -1.1163870096206665
    3. 's' → logprob: -1.2413870096206665
    4. '.' → logprob: -4.991386890411377
    5. ',
' → logprob: -6.866386890411377
    6. '#' → logprob: -7.491386890411377
    7. '=' → logprob: -7.491386890411377
    8. ' =' → logprob: -7.616386890411377
    9. ' ' → logprob: -7.991386890411377
    10. '[' → logprob: -8.116387367248535

Token 187: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.34347763657569885
    2. ' l' → logprob: -1.9684776067733765
    3. ' son' → logprob: -2.968477725982666
    4. 'le' → logprob: -3.218477725982666
    5. ' la' → logprob: -4.343477725982666
    6. ' leur' → logprob: -4.468477725982666
    7. ' ' → logprob: -4.843477725982666
    8. ' ' → logprob: -4.843477725982666
    9. 'l' → logprob: -5.718477725982666
    10. 's' → logprob: -6.093477725982666

Token 188: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.5697377324104309
    2. ' reste' → logprob: -0.9447377324104309
    3. 'rest' → logprob: -3.819737672805786
    4. 'r' → logprob: -4.069737911224365
    5. 're' → logprob: -6.194737911224365
    6. ' remainder' → logprob: -7.319737911224365
    7. ' rest' → logprob: -7.569737911224365
    8. 'nombre' → logprob: -7.819737911224365
    9. 's' → logprob: -8.069737434387207
    10. ' ' → logprob: -8.194737434387207

Token 189: ' r' (ID: 428)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9458106756210327
    2. ',' → logprob: -1.1958106756210327
    3. ' =' → logprob: -2.4458107948303223
    4. '=' → logprob: -2.6958107948303223
    5. '.' → logprob: -2.8208107948303223
    6. ')' → logprob: -3.0708107948303223
    7. '(' → logprob: -4.070810794830322
    8. '(s' → logprob: -4.445810794830322
    9. ' (' → logprob: -4.570810794830322
    10. ' ' → logprob: -6.695810794830322

Token 190: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4959363639354706
    2. '.' → logprob: -1.495936393737793
    3. ',' → logprob: -2.620936393737793
    4. '=' → logprob: -3.620936393737793
    5. ' =' → logprob: -3.870936393737793
    6. ')' → logprob: -4.120936393737793
    7. '(' → logprob: -4.370936393737793
    8. 'M' → logprob: -5.745936393737793
    9. 'N' → logprob: -5.745936393737793
    10. ' ' → logprob: -6.620936393737793

Token 191: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05413735285401344
    2. '=' → logprob: -3.8041374683380127
    3. ',' → logprob: -4.429137229919434
    4. ' =' → logprob: -5.054137229919434
    5. ' ' → logprob: -6.054137229919434
    6. '.' → logprob: -6.304137229919434
    7. '(' → logprob: -6.304137229919434
    8. '(s' → logprob: -6.429137229919434
    9. 'N' → logprob: -6.929137229919434
    10. '#' → logprob: -7.054137229919434

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006602536886930466
    2. ' =' → logprob: -7.625660419464111
    3. '=' → logprob: -9.125659942626953
    4. ' ,' → logprob: -10.000659942626953
    5. ',r' → logprob: -12.625659942626953
    6. ',s' → logprob: -12.750659942626953
    7. ' ' → logprob: -12.875659942626953
    8. ',q' → logprob: -13.750659942626953
    9. ',
' → logprob: -14.000659942626953
    10. 'u' → logprob: -14.250659942626953

Token 193: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.34862127900123596
    2. 'r' → logprob: -1.2236212491989136
    3. '<|end|>' → logprob: -9.473621368408203
    4. ' ' → logprob: -9.723621368408203
    5. ' ' → logprob: -10.348621368408203
    6. 's' → logprob: -13.098621368408203
    7. ' ' → logprob: -13.723621368408203
    8. ' s' → logprob: -13.848621368408203
    9. ' M' → logprob: -14.473621368408203
    10. ' =' → logprob: -15.098621368408203

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014457732439041
    2. '=' → logprob: -1.7014458179473877
    3. ')' → logprob: -11.451445579528809
    4. 's' → logprob: -11.701445579528809
    5. ' ' → logprob: -11.951445579528809
    6. '<|end|>' → logprob: -12.826445579528809
    7. ',' → logprob: -13.451445579528809
    8. ' =
' → logprob: -13.576445579528809
    9. '.' → logprob: -14.951445579528809
    10. '=
' → logprob: -15.451445579528809

Token 195: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0024758970830589533
    2. ' div' → logprob: -6.002475738525391
    3. '	div' → logprob: -15.50247573852539
    4. '<div' → logprob: -17.12747573852539
    5. 'd' → logprob: -18.37747573852539
    6. '(div' → logprob: -18.62747573852539
    7. ' ' → logprob: -19.62747573852539
    8. '```' → logprob: -19.87747573852539
    9. '.div' → logprob: -20.25247573852539
    10. '_div' → logprob: -20.25247573852539

Token 196: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00010115911572938785
    2. 'mo' → logprob: -9.625101089477539
    3. 'm' → logprob: -10.750101089477539
    4. 'mot' → logprob: -12.375101089477539
    5. 'mol' → logprob: -12.750101089477539
    6. 'md' → logprob: -13.250101089477539
    7. ' mod' → logprob: -13.250101089477539
    8. '_mod' → logprob: -14.500101089477539
    9. '	mod' → logprob: -15.000101089477539
    10. ' ' → logprob: -15.250101089477539

Token 197: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.020550299435853958
    2. '(' → logprob: -3.89555025100708
    3. '(
' → logprob: -12.270550727844238
    4. ' (' → logprob: -13.020550727844238
    5. '(m' → logprob: -14.645550727844238
    6. '(N' → logprob: -15.020550727844238
    7. '(s' → logprob: -15.395550727844238
    8. 'M' → logprob: -15.770550727844238
    9. '((' → logprob: -16.020549774169922
    10. ')' → logprob: -16.395549774169922

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06264543533325195
    2. ' ,' → logprob: -2.812645435333252
    3. ',N' → logprob: -7.437645435333252
    4. ' ' → logprob: -10.437644958496094
    5. 'N' → logprob: -10.562644958496094
    6. ' N' → logprob: -10.937644958496094
    7. ')' → logprob: -11.437644958496094
    8. ',n' → logprob: -12.687644958496094
    9. 's' → logprob: -14.062644958496094
    10. ' )' → logprob: -15.687644958496094

Token 199: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12692958116531372
    2. ' N' → logprob: -2.126929521560669
    3. ')' → logprob: -14.12692928314209
    4. ' ' → logprob: -14.50192928314209
    5. ' ' → logprob: -15.87692928314209
    6. '	N' → logprob: -16.251930236816406
    7. ' )' → logprob: -17.876930236816406
    8. 's' → logprob: -18.001930236816406
    9. '(N' → logprob: -19.126930236816406
    10. '  ' → logprob: -19.626930236816406

Token 200: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')

' → logprob: -17.625
    5. '))' → logprob: -17.75
    6. ')`' → logprob: -18.125
    7. '),' → logprob: -18.5
    8. '+' → logprob: -18.75
    9. ')#' → logprob: -19.0
    10. '()' → logprob: -19.375

Token 201: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.048561453819275
    2. ')' → logprob: -1.548561453819275
    3. '[' → logprob: -1.923561453819275
    4. ' ' → logprob: -2.1735615730285645
    5. '#' → logprob: -2.9235615730285645
    6. '<|end|>' → logprob: -2.9235615730285645
    7. ':' → logprob: -4.6735615730285645
    8. ' 
' → logprob: -4.6735615730285645
    9. 's' → logprob: -4.9235615730285645
    10. '' → logprob: -5.0485615730285645

Token 202: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0644850954413414
    2. 'if' → logprob: -2.9394850730895996
    3. 'for' → logprob: -4.6894850730896
    4. '#' → logprob: -9.064485549926758
    5. 'p' → logprob: -9.314485549926758
    6. 's' → logprob: -9.939485549926758
    7. 'pr' → logprob: -10.689485549926758
    8. ' if' → logprob: -10.814485549926758
    9. 'result' → logprob: -10.939485549926758
    10. 'prin' → logprob: -11.064485549926758

Token 203: ' crée' (ID: 102256)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.109599232673645
    2. 'print' → logprob: -1.109599232673645
    3. ' print' → logprob: -1.859599232673645
    4. '#' → logprob: -2.9845991134643555
    5. ':' → logprob: -3.8595991134643555
    6. '.' → logprob: -3.9845991134643555
    7. 'r' → logprob: -4.1095991134643555
    8. ''' → logprob: -4.2345991134643555
    9. ' #' → logprob: -4.8595991134643555
    10. ' ' → logprob: -4.8595991134643555

Token 204: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.404864639043808
    2. 'une' → logprob: -1.6548646688461304
    3. ' un' → logprob: -2.404864549636841
    4. 'un' → logprob: -4.27986478805542
    5. ' ' → logprob: -4.40486478805542
    6. 'a' → logprob: -5.15486478805542
    7. 's' → logprob: -5.15486478805542
    8. '#' → logprob: -5.27986478805542
    9. ' la' → logprob: -6.52986478805542
    10. 'l' → logprob: -6.65486478805542

Token 205: ' variable' (ID: 11076)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.45240721106529236
    2. 'liste' → logprob: -1.4524072408676147
    3. ' ' → logprob: -2.202407121658325
    4. 'chaine' → logprob: -6.077407360076904
    5. ' chaîne' → logprob: -6.077407360076904
    6. 'list' → logprob: -6.202407360076904
    7. ' =' → logprob: -6.827407360076904
    8. '_' → logprob: -6.827407360076904
    9. ' nouvelle' → logprob: -7.264907360076904
    10. ' #' → logprob: -7.264907360076904

Token 206: ' appelée' (ID: 179130)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.4925006031990051
    2. 'result' → logprob: -1.6175005435943604
    3. ' res' → logprob: -3.3675005435943604
    4. ' total' → logprob: -4.1175007820129395
    5. 'res' → logprob: -4.3675007820129395
    6. 's' → logprob: -4.3675007820129395
    7. 'count' → logprob: -4.7425007820129395
    8. ' resultat' → logprob: -4.9925007820129395
    9. ' answer' → logprob: -5.1175007820129395
    10. ' ans' → logprob: -5.2425007820129395

Token 207: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.224027618765831
    2. ' result' → logprob: -2.599027633666992
    3. 'res' → logprob: -3.849027633666992
    4. 're' → logprob: -3.974027633666992
    5. 'quot' → logprob: -4.599027633666992
    6. 's' → logprob: -4.599027633666992
    7. 'solution' → logprob: -4.974027633666992
    8. ' resultat' → logprob: -5.224027633666992
    9. 'x' → logprob: -5.974027633666992
    10. 'message' → logprob: -6.099027633666992

Token 208: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0137325469404459
    2. '=' → logprob: -4.388732433319092
    3. 's' → logprob: -7.388732433319092
    4. ' ' → logprob: -8.26373291015625
    5. '_' → logprob: -8.88873291015625
    6. ',' → logprob: -9.13873291015625
    7. 'ans' → logprob: -10.63873291015625
    8. '_ans' → logprob: -10.63873291015625
    9. ' =
' → logprob: -10.88873291015625
    10. ' s' → logprob: -12.01373291015625

Token 209: ' on' (ID: 402)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.740063488483429
    2. ' ' → logprob: -1.7400634288787842
    3. ' []' → logprob: -1.7400634288787842
    4. '0' → logprob: -3.240063428878784
    5. 'initialize' → logprob: -3.490063428878784
    6. 'initial' → logprob: -4.365063667297363
    7. ' =' → logprob: -4.615063667297363
    8. 's' → logprob: -4.740063667297363
    9. '=' → logprob: -4.740063667297363
    10. ' initialize' → logprob: -4.865063667297363

Token 210: ' lui' (ID: 10623)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2992894947528839
    2. ' =' → logprob: -1.4242894649505615
    3. 'initial' → logprob: -5.424289703369141
    4. 'initialize' → logprob: -5.549289703369141
    5. '_' → logprob: -6.299289703369141
    6. '=[]' → logprob: -7.049289703369141
    7. ' ' → logprob: -7.299289703369141
    8. '[]' → logprob: -7.549289703369141
    9. ' initialize' → logprob: -7.549289703369141
    10. 'initialized' → logprob: -7.674289703369141

Token 211: ' affect' (ID: 7902)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5025167465209961
    2. ' =' → logprob: -1.002516746520996
    3. ' affect' → logprob: -4.502516746520996
    4. ' ' → logprob: -4.627516746520996
    5. ' attrib' → logprob: -7.127516746520996
    6. 'assign' → logprob: -7.252516746520996
    7. '赋' → logprob: -7.377516746520996
    8. ' assign' → logprob: -7.627516746520996
    9. ' initialize' → logprob: -7.877516746520996
    10. 'initialize' → logprob: -8.127516746520996

Token 212: 'e' (ID: 68)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.5764572024345398
    2. 'e' → logprob: -0.8264572024345398
    3. 'u' → logprob: -7.5764570236206055
    4. 'er' → logprob: -13.201457023620605
    5. '#' → logprob: -14.576457023620605
    6. 'uer' → logprob: -14.951457023620605
    7. '```' → logprob: -15.076457023620605
    8. 'uée' → logprob: -15.076457023620605
    9. '=' → logprob: -15.201457023620605
    10. ' e' → logprob: -15.201457023620605

Token 213: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4984864294528961
    2. '[]' → logprob: -1.9984863996505737
    3. '0' → logprob: -2.2484865188598633
    4. ' s' → logprob: -2.7484865188598633
    5. '"' → logprob: -2.9984865188598633
    6. ' []' → logprob: -4.498486518859863
    7. ' ' → logprob: -5.248486518859863
    8. ''' → logprob: -5.248486518859863
    9. 'r' → logprob: -5.498486518859863
    10. '(s' → logprob: -6.373486518859863

Token 214: ' valeur' (ID: 41664)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6689804792404175
    2. 's' → logprob: -1.7939804792404175
    3. ''' → logprob: -2.168980598449707
    4. '""' → logprob: -2.543980598449707
    5. '''' → logprob: -3.543980598449707
    6. 'r' → logprob: -3.793980598449707
    7. ''s' → logprob: -3.918980598449707
    8. '0' → logprob: -4.168980598449707
    9. 'str' → logprob: -4.668980598449707
    10. '[]' → logprob: -4.918980598449707

Token 215: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3319742977619171
    2. ' s' → logprob: -2.0819742679595947
    3. 'r' → logprob: -2.5819742679595947
    4. ' r' → logprob: -3.5819742679595947
    5. ''' → logprob: -4.456974506378174
    6. '"' → logprob: -4.706974506378174
    7. '0' → logprob: -4.956974506378174
    8. ' '' → logprob: -5.081974506378174
    9. ' ' → logprob: -5.456974506378174
    10. ''s' → logprob: -5.956974506378174

Token 216: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5731653571128845
    2. 'r' → logprob: -0.9481653571128845
    3. '[]' → logprob: -3.9481654167175293
    4. '0' → logprob: -3.9481654167175293
    5. '""' → logprob: -5.823165416717529
    6. '[' → logprob: -6.573165416717529
    7. '"' → logprob: -6.823165416717529
    8. '(s' → logprob: -7.198165416717529
    9. 'N' → logprob: -7.698165416717529
    10. 'str' → logprob: -8.073164939880371

Token 217: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0079830884933472
    2. ' =' → logprob: -1.2579830884933472
    3. '=' → logprob: -2.7579832077026367
    4. ' ans' → logprob: -2.7579832077026367
    5. '
' → logprob: -2.7579832077026367
    6. ' ' → logprob: -3.2579832077026367
    7. ',' → logprob: -3.6329832077026367
    8. 'a' → logprob: -3.7579832077026367
    9. 's' → logprob: -4.382983207702637
    10. '<|end|>' → logprob: -4.382983207702637

Token 218: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.339278580620885e-06
    2. 'a' → logprob: -13.125001907348633
    3. ' ans' → logprob: -16.250001907348633
    4. 'answer' → logprob: -17.125001907348633
    5. '```' → logprob: -17.750001907348633
    6. 'anst' → logprob: -17.875001907348633
    7. '	ans' → logprob: -17.875001907348633
    8. '(ans' → logprob: -18.125001907348633
    9. '_ans' → logprob: -18.250001907348633
    10. 'an' → logprob: -18.375001907348633

Token 219: ' Bien' (ID: 39734)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.128163257315464e-07
    2. 'a' → logprob: -16.25
    3. ' ans' → logprob: -16.875
    4. '	ans' → logprob: -18.5
    5. 'answer' → logprob: -18.875
    6. '1' → logprob: -19.375
    7. '(ans' → logprob: -19.5
    8. '_ans' → logprob: -20.0
    9. 's' → logprob: -20.125
    10. '#' → logprob: -20.25

Token 220: ' que' (ID: 661)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6829245686531067
    2. '=' → logprob: -0.9329245686531067
    3. ' =' → logprob: -3.307924509048462
    4. ' ans' → logprob: -3.307924509048462
    5. '+' → logprob: -4.432924747467041
    6. ')' → logprob: -5.307924747467041
    7. 's' → logprob: -5.557924747467041
    8. '*' → logprob: -6.432924747467041
    9. '.' → logprob: -6.557924747467041
    10. '_' → logprob: -7.057924747467041

Token 221: ' cette' (ID: 7696)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.1227033138275146
    2. ' s' → logprob: -1.8727033138275146
    3. 'ans' → logprob: -1.8727033138275146
    4. ' True' → logprob: -2.1227033138275146
    5. ' ' → logprob: -2.3727033138275146
    6. 's' → logprob: -2.6227033138275146
    7. '_' → logprob: -3.6227033138275146
    8. ' ' → logprob: -4.372703552246094
    9. 'r' → logprob: -4.497703552246094
    10. ' r' → logprob: -4.997703552246094

Token 222: ' variable' (ID: 11076)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0536419153213501
    2. 's' → logprob: -3.8036417961120605
    3. '=' → logprob: -4.9286417961120605
    4. ' #' → logprob: -5.0536417961120605
    5. 'ans' → logprob: -5.4286417961120605
    6. ')' → logprob: -6.4286417961120605
    7. 'n' → logprob: -6.5536417961120605
    8. ' ans' → logprob: -6.8036417961120605
    9. ' ' → logprob: -7.0536417961120605
    10. ',' → logprob: -7.1786417961120605

Token 223: ' ne' (ID: 453)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13748492300510406
    2. ' ' → logprob: -2.3874850273132324
    3. ' =' → logprob: -3.8874850273132324
    4. '_' → logprob: -5.262485027313232
    5. '#' → logprob: -6.137485027313232
    6. ')' → logprob: -6.262485027313232
    7. ',' → logprob: -6.387485027313232
    8. '*' → logprob: -6.387485027313232
    9. '<|end|>' → logprob: -6.512485027313232
    10. '+' → logprob: -6.887485027313232

Token 224: ' soit' (ID: 17293)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04214559495449066
    2. 'so' → logprob: -4.292145729064941
    3. '+' → logprob: -4.542145729064941
    4. '*' → logprob: -5.542145729064941
    5. ' =' → logprob: -5.667145729064941
    6. '+=' → logprob: -6.667145729064941
    7. '_' → logprob: -6.667145729064941
    8. ' soit' → logprob: -6.917145729064941
    9. ' puisse' → logprob: -7.042145729064941
    10. '#' → logprob: -7.167145729064941

Token 225: ' pas' (ID: 2173)
  Prédit: 'inut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inut' → logprob: -0.8249567151069641
    2. 'pas' → logprob: -1.4499566555023193
    3. 'util' → logprob: -2.0749566555023193
    4. 'utile' → logprob: -2.1999566555023193
    5. '1' → logprob: -4.324956893920898
    6. 'just' → logprob: -4.699956893920898
    7. ' utilisée' → logprob: -4.699956893920898
    8. 'su' → logprob: -4.949956893920898
    9. 'initial' → logprob: -4.949956893920898
    10. ' pas' → logprob: -5.699956893920898

Token 226: ' utilisée' (ID: 106548)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.6860600709915161
    2. ' utilisée' → logprob: -1.0610600709915161
    3. '=' → logprob: -2.8110599517822266
    4. 'utile' → logprob: -3.8110599517822266
    5. 'inut' → logprob: -4.561059951782227
    6. '_' → logprob: -4.686059951782227
    7. 'ind' → logprob: -5.186059951782227
    8. 'initial' → logprob: -5.186059951782227
    9. 'explicit' → logprob: -5.186059951782227
    10. 'used' → logprob: -5.561059951782227

Token 227: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: ' le' (ID: 505)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5860989689826965
    2. 'the' → logprob: -1.9610989093780518
    3. 'this' → logprob: -2.4610989093780518
    4. '_' → logprob: -3.2110989093780518
    5. ' le' → logprob: -3.4610989093780518
    6. 'code' → logprob: -3.5860989093780518
    7. 'le' → logprob: -3.5860989093780518
    8. ' this' → logprob: -3.8360989093780518
    9. ' the' → logprob: -4.586099147796631
    10. 'l' → logprob: -4.961099147796631

Token 229: ' reste' (ID: 26769)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.013546403497457504
    2. '#' → logprob: -5.388546466827393
    3. ' code' → logprob: -5.888546466827393
    4. 'suite' → logprob: -5.888546466827393
    5. 'programme' → logprob: -6.013546466827393
    6. 'reste' → logprob: -8.013545989990234
    7. 'cod' → logprob: -9.138545989990234
    8. 'texte' → logprob: -9.513545989990234
    9. '```' → logprob: -9.513545989990234
    10. '_code' → logprob: -9.888545989990234

Token 230: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04031231254339218
    2. '<|end|>' → logprob: -3.4153122901916504
    3. ',' → logprob: -6.91531229019165
    4. ')' → logprob: -6.91531229019165
    5. 's' → logprob: -7.16531229019165
    6. '_' → logprob: -7.16531229019165
    7. ' )' → logprob: -7.41531229019165
    8. ' de' → logprob: -7.79031229019165
    9. '.' → logprob: -7.79031229019165
    10. '#' → logprob: -7.91531229019165

Token 231: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.0006756199873052537
    2. '#' → logprob: -8.000675201416016
    3. 'programme' → logprob: -8.125675201416016
    4. 'texte' → logprob: -10.875675201416016
    5. ' code' → logprob: -11.500675201416016
    6. 'cod' → logprob: -12.000675201416016
    7. 'script' → logprob: -13.000675201416016
    8. 'コード' → logprob: -13.625675201416016
    9. 'Code' → logprob: -13.750675201416016
    10. '```' → logprob: -13.750675201416016

Token 232: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.084370732307434
    2. '<|end|>' → logprob: -1.459370732307434
    3. 's' → logprob: -1.834370732307434
    4. ' ' → logprob: -2.4593706130981445
    5. 'a' → logprob: -2.9593706130981445
    6. '
' → logprob: -3.3343706130981445
    7. '.' → logprob: -3.4593706130981445
    8. ')' → logprob: -4.0843706130981445
    9. ',' → logprob: -4.2093706130981445
    10. '=' → logprob: -4.4593706130981445

Token 233: ' elle' (ID: 11451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2570401430130005
    2. ' ans' → logprob: -1.2570401430130005
    3. 'ans' → logprob: -1.6320401430130005
    4. '1' → logprob: -2.882040023803711
    5. ' 
' → logprob: -3.132040023803711
    6. '0' → logprob: -3.382040023803711
    7. 'a' → logprob: -3.507040023803711
    8. '#' → logprob: -4.132040023803711
    9. ')' → logprob: -4.382040023803711
    10. '_' → logprob: -4.507040023803711

Token 234: ' peut' (ID: 9216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6962676048278809
    2. ' =' → logprob: -0.6962676048278809
    3. '#' → logprob: -5.946267604827881
    4. '1' → logprob: -9.071268081665039
    5. ' ans' → logprob: -9.696268081665039
    6. ' #' → logprob: -9.821268081665039
    7. 'ans' → logprob: -9.946268081665039
    8. ' ' → logprob: -9.946268081665039
    9. 's' → logprob: -10.321268081665039
    10. ' =
' → logprob: -10.446268081665039

Token 235: ' servir' (ID: 42557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5140830278396606
    2. '#' → logprob: -2.264082908630371
    3. '=' → logprob: -2.264082908630371
    4. ' être' → logprob: -3.014082908630371
    5. 'être' → logprob: -3.139082908630371
    6. ' =' → logprob: -3.889082908630371
    7. ' servir' → logprob: -3.889082908630371
    8. 'a' → logprob: -4.639082908630371
    9. ' ' → logprob: -4.764082908630371
    10. 's' → logprob: -5.139082908630371

Token 236: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38329070806503296
    2. '=' → logprob: -1.7582907676696777
    3. '<|end|>' → logprob: -3.3832907676696777
    4. ')' → logprob: -3.5082907676696777
    5. ' =' → logprob: -3.6332907676696777
    6. ',' → logprob: -3.8832907676696777
    7. '_' → logprob: -4.133290767669678
    8. ' )' → logprob: -5.508290767669678
    9. '#' → logprob: -5.633290767669678
    10. '.' → logprob: -6.008290767669678

Token 237: ' certains' (ID: 30681)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.8600160479545593
    2. 'd' → logprob: -1.360016107559204
    3. 'la' → logprob: -2.360016107559204
    4. ' d' → logprob: -2.610016107559204
    5. 'le' → logprob: -3.360016107559204
    6. 'l' → logprob: -3.860016107559204
    7. ' des' → logprob: -4.110015869140625
    8. ' une' → logprob: -4.110015869140625
    9. 'des' → logprob: -4.110015869140625
    10. 'les' → logprob: -4.235015869140625

Token 238: ' context' (ID: 3814)
  Prédit: ' cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -1.167245626449585
    2. ' calcul' → logprob: -1.917245626449585
    3. ' context' → logprob: -2.167245626449585
    4. '_' → logprob: -2.667245626449585
    5. ' contexte' → logprob: -2.792245626449585
    6. 'context' → logprob: -3.167245626449585
    7. 'calcul' → logprob: -3.292245626449585
    8. ' espaces' → logprob: -3.542245626449585
    9. '=' → logprob: -3.667245626449585
    10. ' code' → logprob: -3.667245626449585

Token 239: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008872182108461857
    2. 'u' → logprob: -5.883872032165527
    3. 'a' → logprob: -6.883872032165527
    4. '=' → logprob: -7.133872032165527
    5. ' ' → logprob: -7.258872032165527
    6. 's' → logprob: -7.258872032165527
    7. '.' → logprob: -7.258872032165527
    8. ')' → logprob: -7.633872032165527
    9. ' e' → logprob: -7.633872032165527
    10. 'es' → logprob: -7.883872032165527

Token 240: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4770226776599884
    2. ',' → logprob: -2.102022647857666
    3. '<|end|>' → logprob: -2.227022647857666
    4. '.' → logprob: -2.352022647857666
    5. '=' → logprob: -3.977022647857666
    6. '
' → logprob: -4.852022647857666
    7. 's' → logprob: -5.102022647857666
    8. ' =' → logprob: -5.227022647857666
    9. '1' → logprob: -5.977022647857666
    10. ')' → logprob: -5.977022647857666

Token 241: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014719030819833279
    2. '
' → logprob: -4.264719009399414
    3. 'a' → logprob: -8.389719009399414
    4. ' ans' → logprob: -8.514719009399414
    5. ' 
' → logprob: -9.764719009399414
    6. '(ans' → logprob: -10.514719009399414
    7. '```' → logprob: -11.764719009399414
    8. '  
' → logprob: -11.764719009399414
    9. '	ans' → logprob: -12.139719009399414
    10. '1' → logprob: -12.764719009399414

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2843204140663147
    2. '=' → logprob: -1.40932035446167
    3. ' ' → logprob: -5.78432035446167
    4. ' =
' → logprob: -10.659320831298828
    5. '.' → logprob: -11.284320831298828
    6. ')' → logprob: -11.409320831298828
    7. ',' → logprob: -11.909320831298828
    8. ' ' → logprob: -12.034320831298828
    9. '<|end|>' → logprob: -12.034320831298828
    10. ' +=' → logprob: -12.284320831298828

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '0' → logprob: -20.00023078918457
    4. ' ' → logprob: -20.12523078918457
    5. '' → logprob: -21.12523078918457
    6. '  ' → logprob: -21.18773078918457
    7. '```' → logprob: -21.18773078918457
    8. '１' → logprob: -21.56273078918457
    9. '۱' → logprob: -21.56273078918457
    10. '   ' → logprob: -21.87523078918457

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '0' → logprob: -19.125001907348633
    4. '```' → logprob: -20.000001907348633
    5. '１' → logprob: -20.125001907348633
    6. 's' → logprob: -20.312501907348633
    7. '' → logprob: -20.750001907348633
    8. 'int' → logprob: -20.937501907348633
    9. '۱' → logprob: -21.000001907348633
    10. '`' → logprob: -21.000001907348633

Token 245: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0871124267578125
    2. 'i' → logprob: -1.4621124267578125
    3. 'if' → logprob: -1.5871124267578125
    4. 'for' → logprob: -1.7121124267578125
    5. 's' → logprob: -4.4621124267578125
    6. 'f' → logprob: -5.0871124267578125
    7. 'a' → logprob: -5.4621124267578125
    8. 'N' → logprob: -5.5871124267578125
    9. 'print' → logprob: -5.9621124267578125
    10. ')' → logprob: -5.9621124267578125

Token 248: ' commence' (ID: 44755)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.966711163520813
    2. 'if' → logprob: -1.091711163520813
    3. 'print' → logprob: -2.8417110443115234
    4. '#' → logprob: -2.9667110443115234
    5. ' if' → logprob: -2.9667110443115234
    6. '_' → logprob: -3.4667110443115234
    7. ' for' → logprob: -3.5917110443115234
    8. 'r' → logprob: -4.341711044311523
    9. '=' → logprob: -4.466711044311523
    10. 's' → logprob: -4.966711044311523

Token 249: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6756547689437866
    2. ' for' → logprob: -1.8006547689437866
    3. '#' → logprob: -1.9256547689437866
    4. ' ' → logprob: -3.175654888153076
    5. ' a' → logprob: -3.175654888153076
    6. ' par' → logprob: -4.050654888153076
    7. ':' → logprob: -4.300654888153076
    8. '_' → logprob: -4.675654888153076
    9. ')' → logprob: -4.800654888153076
    10. ',' → logprob: -5.175654888153076

Token 250: ' boucle' (ID: 174211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9315982460975647
    2. 'for' → logprob: -1.30659818649292
    3. ' boucle' → logprob: -1.30659818649292
    4. ' ' → logprob: -3.30659818649292
    5. '_' → logprob: -4.55659818649292
    6. ' 
' → logprob: -5.05659818649292
    7. 'bou' → logprob: -6.43159818649292
    8. '
' → logprob: -6.43159818649292
    9. ' ' → logprob: -6.55659818649292
    10. ' bou' → logprob: -6.55659818649292

Token 251: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6332528591156006
    2. ' for' → logprob: -0.7582528591156006
    3. 'i' → logprob: -8.38325309753418
    4. ' i' → logprob: -8.75825309753418
    5. ':' → logprob: -9.00825309753418
    6. '_' → logprob: -10.50825309753418
    7. ' pour' → logprob: -10.75825309753418
    8. ',' → logprob: -11.25825309753418
    9. 'range' → logprob: -11.75825309753418
    10. 'f' → logprob: -11.75825309753418

Token 252: ' décro' (ID: 176854)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10017852485179901
    2. '_' → logprob: -3.1001784801483154
    3. 'i' → logprob: -3.1001784801483154
    4. ' _' → logprob: -5.6001787185668945
    5. ' ' → logprob: -6.6001787185668945
    6. ' range' → logprob: -9.725178718566895
    7. ' for' → logprob: -10.225178718566895
    8. ' ' → logprob: -10.225178718566895
    9. '   ' → logprob: -11.850178718566895
    10. ',' → logprob: -11.975178718566895

Token 253: 'issante' (ID: 80061)
  Prédit: 'issante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -0.012211520224809647
    2. 'is' → logprob: -4.512211322784424
    3. 'issant' → logprob: -7.012211322784424
    4. 'i' → logprob: -8.887211799621582
    5. 'iss' → logprob: -9.887211799621582
    6. '#' → logprob: -10.512211799621582
    7. 'issance' → logprob: -11.262211799621582
    8. 'nante' → logprob: -12.262211799621582
    9. 'isant' → logprob: -12.512211799621582
    10. 's' → logprob: -12.887211799621582

Token 254: '.
' (ID: 558)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11012964695692062
    2. 'i' → logprob: -3.2351295948028564
    3. 'for' → logprob: -3.4851295948028564
    4. ' for' → logprob: -3.9851295948028564
    5. 'pour' → logprob: -6.1101298332214355
    6. ',' → logprob: -6.2351298332214355
    7. 'en' → logprob: -6.3601298332214355
    8. ' pour' → logprob: -6.4851298332214355
    9. ' en' → logprob: -6.4851298332214355
    10. 'r' → logprob: -6.6101298332214355

Token 255: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011009939044015482
    2. ' for' → logprob: -9.125109672546387
    3. 'range' → logprob: -13.875109672546387
    4. 'or' → logprob: -16.375110626220703
    5. 'r' → logprob: -16.500110626220703
    6. 'from' → logprob: -16.750110626220703
    7. 'i' → logprob: -17.000110626220703
    8. ')' → logprob: -18.125110626220703
    9. '_' → logprob: -18.750110626220703
    10. 's' → logprob: -19.250110626220703

Token 256: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.3319124011322856e-05
    2. ' for' → logprob: -11.250022888183594
    3. 'i' → logprob: -11.750022888183594
    4. '_' → logprob: -13.750022888183594
    5. 'range' → logprob: -13.750022888183594
    6. 'r' → logprob: -15.625022888183594
    7. 's' → logprob: -18.125022888183594
    8. 'f' → logprob: -18.750022888183594
    9. 'fo' → logprob: -19.750022888183594
    10. ' i' → logprob: -20.000022888183594

Token 257: ' fonction' (ID: 17610)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10478642582893372
    2. ' for' → logprob: -2.8547863960266113
    3. 'range' → logprob: -3.6047863960266113
    4. ' range' → logprob: -4.979786396026611
    5. 'or' → logprob: -5.229786396026611
    6. 'r' → logprob: -6.104786396026611
    7. '_' → logprob: -9.22978687286377
    8. 'rang' → logprob: -10.60478687286377
    9. ' or' → logprob: -10.97978687286377
    10. ' ' → logprob: -11.10478687286377

Token 258: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08014149218797684
    2. ' range' → logprob: -2.580141544342041
    3. 'for' → logprob: -6.830141544342041
    4. ' for' → logprob: -9.205141067504883
    5. 're' → logprob: -10.080141067504883
    6. ' reversed' → logprob: -11.205141067504883
    7. 'r' → logprob: -12.205141067504883
    8. 'rang' → logprob: -12.580141067504883
    9. 'reverse' → logprob: -12.830141067504883
    10. ' ' → logprob: -13.580141067504883

Token 259: '(start' (ID: 20008)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06433407962322235
    2. '(' → logprob: -2.9393341541290283
    3. '(s' → logprob: -4.814333915710449
    4. '(n' → logprob: -7.564333915710449
    5. '(M' → logprob: -7.689333915710449
    6. '(
' → logprob: -9.43933391571045
    7. '()' → logprob: -9.43933391571045
    8. '(range' → logprob: -9.93933391571045
    9. '(len' → logprob: -10.18933391571045
    10. '(start' → logprob: -10.93933391571045

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03677557036280632
    2. '(N' → logprob: -3.411775588989258
    3. '(' → logprob: -6.161775588989258
    4. '(s' → logprob: -7.411775588989258
    5. '(M' → logprob: -8.411775588989258
    6. ',N' → logprob: -9.536775588989258
    7. ' ,' → logprob: -10.286775588989258
    8. '

' → logprob: -10.661775588989258
    9. ')' → logprob: -10.911775588989258
    10. '(n' → logprob: -11.161775588989258

Token 261: ' stop' (ID: 5666)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05167020484805107
    2. 'end' → logprob: -3.8016703128814697
    3. 'M' → logprob: -4.301670074462891
    4. 'stop' → logprob: -4.926670074462891
    5. '0' → logprob: -5.301670074462891
    6. 's' → logprob: -7.051670074462891
    7. ' N' → logprob: -7.676670074462891
    8. '1' → logprob: -7.926670074462891
    9. ')' → logprob: -8.80167007446289
    10. '10' → logprob: -9.55167007446289

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022210339084267616
    2. '(N' → logprob: -6.50222110748291
    3. '(' → logprob: -8.12722110748291
    4. '=' → logprob: -8.62722110748291
    5. '(s' → logprob: -10.00222110748291
    6. ' ,' → logprob: -10.12722110748291
    7. 's' → logprob: -10.12722110748291
    8. ')' → logprob: -10.50222110748291
    9. '=N' → logprob: -10.62722110748291
    10. ',N' → logprob: -10.75222110748291

Token 263: ' step' (ID: 5983)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2537466585636139
    2. ' -' → logprob: -1.5037466287612915
    3. ',' → logprob: -7.128746509552002
    4. 'step' → logprob: -7.503746509552002
    5. ' step' → logprob: -8.62874698638916
    6. ' ' → logprob: -9.37874698638916
    7. '-step' → logprob: -9.50374698638916
    8. 'stop' → logprob: -9.87874698638916
    9. ')' → logprob: -10.00374698638916
    10. '  ' → logprob: -11.87874698638916

Token 264: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18390515446662903
    2. ',' → logprob: -2.1839051246643066
    3. '(' → logprob: -3.0589051246643066
    4. '(N' → logprob: -5.558905124664307
    5. '=' → logprob: -6.433905124664307
    6. '(start' → logprob: -7.058905124664307
    7. '(-' → logprob: -7.433905124664307
    8. 's' → logprob: -8.058905601501465
    9. '):' → logprob: -8.558905601501465
    10. 'start' → logprob: -9.308905601501465

Token 265: ' produit' (ID: 29429)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5867043137550354
    2. '(' → logprob: -0.9617043137550354
    3. '(start' → logprob: -2.9617042541503906
    4. '(s' → logprob: -5.836704254150391
    5. '(range' → logprob: -6.336704254150391
    6. '(
' → logprob: -6.586704254150391
    7. 'for' → logprob: -6.836704254150391
    8. '(n' → logprob: -7.586704254150391
    9. 's' → logprob: -7.711704254150391
    10. '(M' → logprob: -7.711704254150391

Token 266: ' une' (ID: 2463)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2250422239303589
    2. ' range' → logprob: -2.2250423431396484
    3. '(range' → logprob: -3.1000423431396484
    4. '(' → logprob: -3.6000423431396484
    5. '(N' → logprob: -4.975042343139648
    6. '(start' → logprob: -5.725042343139648
    7. ' ' → logprob: -6.225042343139648
    8. ')' → logprob: -6.225042343139648
    9. ' (' → logprob: -6.600042343139648
    10. 's' → logprob: -6.850042343139648

Token 267: ' sé' (ID: 7462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1329381912946701
    2. 'sequence' → logprob: -3.1329381465911865
    3. ' sequence' → logprob: -3.3829381465911865
    4. ' range' → logprob: -3.5079381465911865
    5. ')' → logprob: -5.382938385009766
    6. 's' → logprob: -5.382938385009766
    7. ' ' → logprob: -7.257938385009766
    8. 'r' → logprob: -7.257938385009766
    9. 'reverse' → logprob: -7.507938385009766
    10. 'ré' → logprob: -7.757938385009766

Token 268: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.021973837167024612
    2. 'rie' → logprob: -3.8969738483428955
    3. 'ries' → logprob: -6.771973609924316
    4. 'quences' → logprob: -8.646973609924316
    5. 'q' → logprob: -10.021973609924316
    6. 'QUENCE' → logprob: -10.896973609924316
    7. 'qu' → logprob: -11.396973609924316
    8. 'quent' → logprob: -11.771973609924316
    9. 'range' → logprob: -11.896973609924316
    10. 'ance' → logprob: -12.771973609924316

Token 269: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4614018499851227
    2. '(range' → logprob: -1.8364018201828003
    3. '(start' → logprob: -2.46140193939209
    4. 'range' → logprob: -3.21140193939209
    5. ' range' → logprob: -3.33640193939209
    6. ',' → logprob: -4.58640193939209
    7. '(
' → logprob: -4.71140193939209
    8. '(N' → logprob: -4.83640193939209
    9. 'de' → logprob: -4.96140193939209
    10. ' =' → logprob: -5.58640193939209

Token 270: ' nombres' (ID: 76205)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14500491321086884
    2. 'M' → logprob: -2.270004987716675
    3. 's' → logprob: -5.020004749298096
    4. 'range' → logprob: -5.270004749298096
    5. ' N' → logprob: -5.395004749298096
    6. ')' → logprob: -5.645004749298096
    7. ' M' → logprob: -6.020004749298096
    8. 'numbers' → logprob: -6.520004749298096
    9. 'start' → logprob: -6.895004749298096
    10. 'n' → logprob: -7.020004749298096

Token 271: '.
' (ID: 558)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5694796442985535
    2. '(' → logprob: -1.1944797039031982
    3. '(range' → logprob: -3.3194797039031982
    4. ',' → logprob: -3.4444797039031982
    5. '(M' → logprob: -3.8194797039031982
    6. 'from' → logprob: -4.194479465484619
    7. 'range' → logprob: -5.069479465484619
    8. '(s' → logprob: -5.319479465484619
    9. '(start' → logprob: -5.694479465484619
    10. '(
' → logprob: -6.069479465484619

Token 272: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03695376589894295
    2. '(N' → logprob: -3.5369536876678467
    3. 'range' → logprob: -5.661953926086426
    4. '(range' → logprob: -6.786953926086426
    5. '(' → logprob: -6.911953926086426
    6. 'N' → logprob: -7.161953926086426
    7. ' for' → logprob: -7.286953926086426
    8. 'from' → logprob: -10.536953926086426
    9. '(start' → logprob: -11.036953926086426
    10. '(M' → logprob: -11.036953926086426

Token 273: ' Ici' (ID: 145754)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4458591938018799
    2. 'range' → logprob: -1.4458591938018799
    3. 'N' → logprob: -2.69585919380188
    4. ' for' → logprob: -3.32085919380188
    5. ' range' → logprob: -4.445858955383301
    6. 's' → logprob: -5.695858955383301
    7. ' N' → logprob: -5.945858955383301
    8. 'r' → logprob: -6.570858955383301
    9. 'M' → logprob: -7.195858955383301
    10. '(' → logprob: -8.5708589553833

Token 274: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7907925248146057
    2. ',' → logprob: -1.165792465209961
    3. '(N' → logprob: -2.165792465209961
    4. '(start' → logprob: -3.665792465209961
    5. '(range' → logprob: -3.790792465209961
    6. ' for' → logprob: -4.540792465209961
    7. 'range' → logprob: -4.665792465209961
    8. ' in' → logprob: -4.665792465209961
    9. 'for' → logprob: -4.790792465209961
    10. ' dans' → logprob: -4.915792465209961

Token 275: ' elle' (ID: 11451)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9271418452262878
    2. ' for' → logprob: -1.3021419048309326
    3. 'range' → logprob: -1.6771419048309326
    4. 'N' → logprob: -2.8021419048309326
    5. ' range' → logprob: -2.9271419048309326
    6. ' N' → logprob: -4.1771416664123535
    7. 'i' → logprob: -5.4271416664123535
    8. ' i' → logprob: -6.0521416664123535
    9. 'r' → logprob: -6.1771416664123535
    10. ' ' → logprob: -6.6771416664123535

Token 276: ' commence' (ID: 44755)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.454521894454956
    2. ' =' → logprob: -1.704521894454956
    3. 'range' → logprob: -1.829521894454956
    4. ' for' → logprob: -2.454521894454956
    5. ',' → logprob: -2.454521894454956
    6. 'for' → logprob: -2.704521894454956
    7. ' range' → logprob: -2.704521894454956
    8. '(range' → logprob: -3.579521894454956
    9. ' in' → logprob: -3.954521894454956
    10. ')' → logprob: -4.579522132873535

Token 277: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1313639879226685
    2. 'de' → logprob: -1.3813639879226685
    3. 'from' → logprob: -1.5063639879226685
    4. ' de' → logprob: -2.256363868713379
    5. '(N' → logprob: -2.881363868713379
    6. ' from' → logprob: -3.506363868713379
    7. ',' → logprob: -5.381363868713379
    8. 'N' → logprob: -6.006363868713379
    9. ' à' → logprob: -6.506363868713379
    10. '(
' → logprob: -6.631363868713379

Token 278: ' s' (ID: 265)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5278634428977966
    2. 's' → logprob: -1.0278635025024414
    3. 'M' → logprob: -3.1528635025024414
    4. 'r' → logprob: -5.652863502502441
    5. ' N' → logprob: -5.902863502502441
    6. ' s' → logprob: -6.152863502502441
    7. ' M' → logprob: -7.277863502502441
    8. '10' → logprob: -8.152863502502441
    9. 'n' → logprob: -10.152863502502441
    10. 'min' → logprob: -10.277863502502441

Token 279: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00434834836050868
    2. '+' → logprob: -5.879348278045654
    3. ' ,' → logprob: -6.754348278045654
    4. '-' → logprob: -8.129348754882812
    5. ' +' → logprob: -10.504348754882812
    6. ' -' → logprob: -11.129348754882812
    7. ',-' → logprob: -11.629348754882812
    8. ',
' → logprob: -12.004348754882812
    9. 's' → logprob: -12.129348754882812
    10. '+,' → logprob: -12.629348754882812

Token 280: ' se' (ID: 458)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14234092831611633
    2. '-' → logprob: -2.392340898513794
    3. ' ' → logprob: -3.267340898513794
    4. ' -' → logprob: -5.892341136932373
    5. '1' → logprob: -8.267340660095215
    6. 'r' → logprob: -9.892340660095215
    7. 's' → logprob: -10.517340660095215
    8. ' s' → logprob: -10.767340660095215
    9. '  ' → logprob: -12.392340660095215
    10. ' r' → logprob: -12.392340660095215

Token 281: ' termine' (ID: 76900)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6312322020530701
    2. 'stop' → logprob: -1.3812322616577148
    3. '-' → logprob: -2.381232261657715
    4. 'ar' → logprob: -3.381232261657715
    5. 'range' → logprob: -3.506232261657715
    6. ''arr' → logprob: -4.256232261657715
    7. '0' → logprob: -5.131232261657715
    8. 'term' → logprob: -5.256232261657715
    9. 'top' → logprob: -5.506232261657715
    10. '1' → logprob: -5.506232261657715

Token 282: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2748972177505493
    2. ',' → logprob: -2.2748970985412598
    3. ' at' → logprob: -2.2748970985412598
    4. ' au' → logprob: -3.7748970985412598
    5. 'à' → logprob: -6.02489709854126
    6. ' par' → logprob: -6.02489709854126
    7. '0' → logprob: -6.39989709854126
    8. ' ' → logprob: -6.52489709854126
    9. ' ,' → logprob: -6.52489709854126
    10. '(' → logprob: -7.27489709854126

Token 283: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3714234530925751
    2. ' ' → logprob: -1.4964234828948975
    3. '-' → logprob: -2.8714234828948975
    4. 'r' → logprob: -4.621423244476318
    5. ' -' → logprob: -4.621423244476318
    6. ' r' → logprob: -4.871423244476318
    7. '1' → logprob: -6.371423244476318
    8. 's' → logprob: -7.996423244476318
    9. ' s' → logprob: -8.996423721313477
    10. '-r' → logprob: -10.308923721313477

Token 284: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6086072325706482
    2. '-' → logprob: -0.8586072325706482
    3. 'r' → logprob: -3.858607292175293
    4. ' -' → logprob: -5.233607292175293
    5. '-r' → logprob: -5.733607292175293
    6. ' ' → logprob: -6.483607292175293
    7. '1' → logprob: -7.483607292175293
    8. ' r' → logprob: -8.608607292175293
    9. 's' → logprob: -9.733607292175293
    10. '-s' → logprob: -10.608607292175293

Token 285: ' inclus' (ID: 11891)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025970612186938524
    2. '-' → logprob: -6.002596855163574
    3. ' -' → logprob: -10.002596855163574
    4. ',-' → logprob: -10.127596855163574
    5. ' ,' → logprob: -10.627596855163574
    6. 's' → logprob: -12.252596855163574
    7. '0' → logprob: -12.752596855163574
    8. '-,' → logprob: -13.502596855163574
    9. ',s' → logprob: -13.752596855163574
    10. ',
' → logprob: -13.877596855163574

Token 286: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010675819357857108
    2. '-' → logprob: -7.501067638397217
    3. 's' → logprob: -7.876067638397217
    4. ' ,' → logprob: -9.251067161560059
    5. '0' → logprob: -11.251067161560059
    6. ' -' → logprob: -11.876067161560059
    7. ',-' → logprob: -11.876067161560059
    8. ',s' → logprob: -12.501067161560059
    9. ' s' → logprob: -12.751067161560059
    10. '1' → logprob: -14.001067161560059

Token 287: 'car' (ID: 6830)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3195793926715851
    2. ' -' → logprob: -2.1945793628692627
    3. '-' → logprob: -2.5695793628692627
    4. ' ,' → logprob: -2.6945793628692627
    5. '0' → logprob: -4.694579601287842
    6. ' s' → logprob: -5.569579601287842
    7. ' ' → logprob: -5.944579601287842
    8. 's' → logprob: -6.944579601287842
    9. '),' → logprob: -7.819579601287842
    10. ' -,' → logprob: -7.944579601287842

Token 288: ' stop' (ID: 5666)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2540292739868164
    2. '0' → logprob: -1.6290292739868164
    3. ',' → logprob: -4.129029273986816
    4. ' -' → logprob: -5.004029273986816
    5. ' ,' → logprob: -6.004029273986816
    6. ' s' → logprob: -6.754029273986816
    7. '-' → logprob: -7.004029273986816
    8. '1' → logprob: -8.254029273986816
    9. 's' → logprob: -8.629029273986816
    10. ' ),' → logprob: -9.504029273986816

Token 289: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09549123048782349
    2. '-' → logprob: -2.8454911708831787
    3. ' -' → logprob: -3.7204911708831787
    4. ' ,' → logprob: -5.095491409301758
    5. ',-' → logprob: -6.595491409301758
    6. '0' → logprob: -7.720491409301758
    7. 's' → logprob: -7.970491409301758
    8. '-,' → logprob: -9.345491409301758
    9. ',s' → logprob: -9.595491409301758
    10. '),' → logprob: -9.845491409301758

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012856863031629473
    2. ' ' → logprob: -9.000128746032715
    3. '1' → logprob: -12.500128746032715
    4. '-' → logprob: -14.625128746032715
    5. '   ' → logprob: -15.500128746032715
    6. '  ' → logprob: -16.0001277923584
    7. '
' → logprob: -16.1251277923584
    8. ',' → logprob: -16.2501277923584
    9. '```' → logprob: -16.2501277923584
    10. '=' → logprob: -16.8126277923584

Token 291: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -3.47626737493556e-05
    2. ' ,' → logprob: -10.87503433227539
    3. ',-' → logprob: -11.25003433227539
    4. '-' → logprob: -13.12503433227539
    5. '),' → logprob: -14.50003433227539
    6. ')' → logprob: -15.75003433227539
    7. '0' → logprob: -16.75003433227539
    8. ',
' → logprob: -17.00003433227539
    9. '，' → logprob: -17.25003433227539
    10. ' ,-' → logprob: -17.50003433227539

Token 292: ' le' (ID: 505)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08996257930994034
    2. ' -' → logprob: -2.4649624824523926
    3. ',' → logprob: -7.589962482452393
    4. 's' → logprob: -8.58996295928955
    5. '-step' → logprob: -9.08996295928955
    6. ')' → logprob: -9.58996295928955
    7. ' ' → logprob: -10.46496295928955
    8. '-s' → logprob: -10.71496295928955
    9. ' s' → logprob: -10.71496295928955
    10. '0' → logprob: -10.83996295928955

Token 293: ' step' (ID: 5983)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.096878170967102
    2. ' -' → logprob: -1.096878170967102
    3. ' step' → logprob: -1.471878170967102
    4. 'step' → logprob: -2.5968780517578125
    5. '-step' → logprob: -3.7218780517578125
    6. ',' → logprob: -6.0968780517578125
    7. ' ' → logprob: -7.4718780517578125
    8. '	step' → logprob: -7.5968780517578125
    9. ')' → logprob: -8.721878051757812
    10. ' pas' → logprob: -9.096878051757812

Token 294: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018525179475545883
    2. '-' → logprob: -4.268525123596191
    3. ' -' → logprob: -5.768525123596191
    4. ' ,' → logprob: -7.268525123596191
    5. ',-' → logprob: -8.143525123596191
    6. ')' → logprob: -9.268525123596191
    7. '=' → logprob: -9.518525123596191
    8. '-,' → logprob: -11.018525123596191
    9. '),' → logprob: -11.643525123596191
    10. ' ' → logprob: -11.893525123596191

Token 295: ' nég' (ID: 55805)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010902655776590109
    2. ' -' → logprob: -9.12510871887207
    3. ' ' → logprob: -17.00010871887207
    4. '-step' → logprob: -18.00010871887207
    5. ')' → logprob: -18.25010871887207
    6. '-)' → logprob: -18.62510871887207
    7. ',' → logprob: -19.50010871887207
    8. '-s' → logprob: -19.87510871887207
    9. '-c' → logprob: -20.37510871887207
    10. '  ' → logprob: -20.62510871887207

Token 296: 'atif' (ID: 23984)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007481599459424615
    2. '-' → logprob: -7.375748157501221
    3. ',' → logprob: -9.625748634338379
    4. 's' → logprob: -10.625748634338379
    5. ')' → logprob: -11.250748634338379
    6. ' -' → logprob: -11.500748634338379
    7. ',-' → logprob: -12.125748634338379
    8. '=' → logprob: -14.500748634338379
    9. '-)' → logprob: -14.625748634338379
    10. '),' → logprob: -15.375748634338379

Token 297: '),
' (ID: 2313)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004103096667677164
    2. '-' → logprob: -6.379103183746338
    3. ')' → logprob: -6.879103183746338
    4. ',-' → logprob: -7.129103183746338
    5. '),' → logprob: -8.50410270690918
    6. ' ,' → logprob: -8.62910270690918
    7. ' -' → logprob: -9.75410270690918
    8. ',
' → logprob: -10.25410270690918
    9. '1' → logprob: -10.37910270690918
    10. ').' → logprob: -10.87910270690918

Token 298: '#' (ID: 2)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43675464391708374
    2. 'for' → logprob: -1.1867547035217285
    3. ' s' → logprob: -3.3117547035217285
    4. ',' → logprob: -5.1867547035217285
    5. 's' → logprob: -5.3117547035217285
    6. ' range' → logprob: -7.9367547035217285
    7. 'range' → logprob: -8.06175422668457
    8. ' in' → logprob: -8.06175422668457
    9. ' ' → logprob: -8.43675422668457
    10. ' ,' → logprob: -8.56175422668457

Token 299: ' en' (ID: 469)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27419885993003845
    2. 'for' → logprob: -1.8991988897323608
    3. ' s' → logprob: -2.7741987705230713
    4. 's' → logprob: -5.27419900894165
    5. ' in' → logprob: -5.27419900894165
    6. ' ' → logprob: -5.27419900894165
    7. ',' → logprob: -5.77419900894165
    8. ' i' → logprob: -5.89919900894165
    9. ')' → logprob: -6.27419900894165
    10. ' )' → logprob: -7.14919900894165

Token 300: ' décr' (ID: 123041)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4041217863559723
    2. ' step' → logprob: -2.2791218757629395
    3. ' ' → logprob: -2.7791218757629395
    4. ' range' → logprob: -3.4041218757629395
    5. ' s' → logprob: -3.5291218757629395
    6. '-' → logprob: -4.0291218757629395
    7. ' ,' → logprob: -4.0291218757629395
    8. 's' → logprob: -4.2791218757629395
    9. ' passant' → logprob: -5.0291218757629395
    10. ',' → logprob: -5.1541218757629395

Token 301: 'ément' (ID: 17645)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.48291826248168945
    2. 'ément' → logprob: -2.2329182624816895
    3. 'endant' → logprob: -2.4829182624816895
    4. 'ease' → logprob: -2.8579182624816895
    5. 'esc' → logprob: -3.4829182624816895
    6. 'enant' → logprob: -3.6079182624816895
    7. '```' → logprob: -4.7329182624816895
    8. 'ent' → logprob: -4.8579182624816895
    9. 'ais' → logprob: -4.8579182624816895
    10. 'es' → logprob: -4.9829182624816895

Token 302: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.5288040637969971
    2. 'ent' → logprob: -0.9038040637969971
    3. 'er' → logprob: -6.278803825378418
    4. 's' → logprob: -6.903803825378418
    5. 'e' → logprob: -7.153803825378418
    6. '1' → logprob: -8.278803825378418
    7. 'ment' → logprob: -8.403803825378418
    8. '-' → logprob: -8.653803825378418
    9. ',' → logprob: -8.778803825378418
    10. '=' → logprob: -8.903803825378418

Token 303: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4524868130683899
    2. ' ' → logprob: -1.5774867534637451
    3. ' -' → logprob: -2.202486753463745
    4. '-' → logprob: -3.577486753463745
    5. ' de' → logprob: -4.702486991882324
    6. 's' → logprob: -5.577486991882324
    7. ' s' → logprob: -5.702486991882324
    8. ')' → logprob: -6.452486991882324
    9. ' )' → logprob: -7.577486991882324
    10. ',' → logprob: -8.577486991882324

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023986015003174543
    2. ' ' → logprob: -6.627398490905762
    3. '-' → logprob: -6.877398490905762
    4. ' -' → logprob: -10.127398490905762
    5. 's' → logprob: -14.877398490905762
    6. ' ' → logprob: -15.252398490905762
    7. '```' → logprob: -15.377398490905762
    8. ')' → logprob: -16.127399444580078
    9. 'pas' → logprob: -16.377399444580078
    10. ',' → logprob: -16.752399444580078

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013392893597483635
    2. '-' → logprob: -6.626339435577393
    3. ' ' → logprob: -11.876338958740234
    4. ' -' → logprob: -12.126338958740234
    5. '```' → logprob: -14.876338958740234
    6. 's' → logprob: -16.126338958740234
    7. '   ' → logprob: -16.376338958740234
    8. '2' → logprob: -16.501338958740234
    9. '  ' → logprob: -16.501338958740234
    10. '

' → logprob: -16.626338958740234

Token 306: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.694642186164856
    2. 'for' → logprob: -1.194642186164856
    3. ' for' → logprob: -1.819642186164856
    4. 's' → logprob: -4.194642066955566
    5. ':' → logprob: -4.319642066955566
    6. ')' → logprob: -5.694642066955566
    7. ' ,' → logprob: -6.694642066955566
    8. '(s' → logprob: -7.194642066955566
    9. '):' → logprob: -7.444642066955566
    10. '(' → logprob: -8.319642066955566

Token 307: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.03317323327064514
    2. 'each' → logprob: -3.7831733226776123
    3. 'cha' → logprob: -5.033173084259033
    4. ' each' → logprob: -6.158173084259033
    5. 'ch' → logprob: -8.783173561096191
    6. 'Chaque' → logprob: -8.783173561096191
    7. 'pas' → logprob: -8.908173561096191
    8. 'l' → logprob: -9.158173561096191
    9. '-' → logprob: -9.283173561096191
    10. 'la' → logprob: -9.408173561096191

Token 308: ' it' (ID: 480)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.7354520559310913
    2. ',' → logprob: -1.9854520559310913
    3. ')' → logprob: -2.485452175140381
    4. 's' → logprob: -2.735452175140381
    5. ' ' → logprob: -2.735452175140381
    6. ' pas' → logprob: -2.985452175140381
    7. '-' → logprob: -3.485452175140381
    8. 'step' → logprob: -3.610452175140381
    9. 'pas' → logprob: -4.235452175140381
    10. '.' → logprob: -4.735452175140381

Token 309: 'ération' (ID: 24977)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5345008373260498
    2. ',' → logprob: -0.9095008373260498
    3. 's' → logprob: -5.284501075744629
    4. 'n' → logprob: -6.534501075744629
    5. ' ,' → logprob: -6.909501075744629
    6. ',
' → logprob: -7.659501075744629
    7. ' s' → logprob: -7.784501075744629
    8. 'x' → logprob: -8.159501075744629
    9. '):' → logprob: -8.159501075744629
    10. ' )' → logprob: -8.284501075744629

Token 310: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12833252549171448
    2. ' for' → logprob: -2.1283326148986816
    3. ':' → logprob: -6.628332614898682
    4. ',' → logprob: -10.253332138061523
    5. ':
' → logprob: -11.003332138061523
    6. ')' → logprob: -11.128332138061523
    7. 's' → logprob: -12.503332138061523
    8. '
' → logprob: -12.753332138061523
    9. ' :' → logprob: -13.503332138061523
    10. ' ' → logprob: -13.753332138061523

Token 311: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.375
    3. 'fo' → logprob: -21.25
    4. ')' → logprob: -21.5
    5. '
' → logprob: -21.5
    6. 'from' → logprob: -21.75
    7. '

' → logprob: -22.5
    8. '```' → logprob: -22.5
    9. 'f' → logprob: -23.25
    10. 'fro' → logprob: -23.375

Token 312: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3107296824455261
    2. ' i' → logprob: -1.435729742050171
    3. 's' → logprob: -3.935729742050171
    4. 'i' → logprob: -4.685729503631592
    5. ' ' → logprob: -8.06072998046875
    6. '_' → logprob: -10.81072998046875
    7. ' _' → logprob: -10.93572998046875
    8. ' x' → logprob: -11.18572998046875
    9. ' ' → logprob: -12.06072998046875
    10. 'x' → logprob: -12.31072998046875

Token 313: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04309830814599991
    2. 'in' → logprob: -3.168098211288452
    3. ' ' → logprob: -9.668098449707031
    4. 's' → logprob: -10.918098449707031
    5. ' i' → logprob: -11.793098449707031
    6. 'n' → logprob: -12.793098449707031
    7. 'range' → logprob: -13.168098449707031
    8. ',' → logprob: -13.543098449707031
    9. '	in' → logprob: -14.418098449707031
    10. ')' → logprob: -14.418098449707031

Token 314: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.041279133409261703
    2. ' range' → logprob: -3.2912790775299072
    3. 's' → logprob: -5.916279315948486
    4. ' s' → logprob: -7.541279315948486
    5. ' ' → logprob: -12.791278839111328
    6. 'rang' → logprob: -13.541278839111328
    7. 'r' → logprob: -14.166278839111328
    8. 're' → logprob: -14.541278839111328
    9. ' rang' → logprob: -15.291278839111328
    10. '(range' → logprob: -15.541278839111328

Token 315: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00020771251001860946
    2. '(' → logprob: -8.500207901000977
    3. 's' → logprob: -12.875207901000977
    4. ' (' → logprob: -13.500207901000977
    5. '(
' → logprob: -16.000207901000977
    6. ' s' → logprob: -17.125207901000977
    7. '(i' → logprob: -17.250207901000977
    8. '(S' → logprob: -17.875207901000977
    9. ',' → logprob: -18.250207901000977
    10. '(int' → logprob: -18.500207901000977

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010151672904612496
    2. ' ,' → logprob: -9.250101089477539
    3. 's' → logprob: -12.750101089477539
    4. '1' → logprob: -13.625101089477539
    5. ',s' → logprob: -14.500101089477539
    6. ' ' → logprob: -15.500101089477539
    7. '0' → logprob: -16.00010108947754
    8. ',
' → logprob: -16.12510108947754
    9. '-' → logprob: -16.37510108947754
    10. ',i' → logprob: -16.87510108947754

Token 317: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '1' → logprob: -19.375036239624023
    4. '  ' → logprob: -19.375036239624023
    5. '  
' → logprob: -20.250036239624023
    6. '   ' → logprob: -20.375036239624023
    7. '۰' → logprob: -20.375036239624023
    8. ' ' → logprob: -20.625036239624023
    9. '
' → logprob: -20.625036239624023
    10. '-' → logprob: -21.000036239624023

Token 318: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '1' → logprob: -17.125001907348633
    4. '-' → logprob: -18.750001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '
' → logprob: -18.750001907348633
    7. '```' → logprob: -19.375001907348633
    8. '

' → logprob: -19.625001907348633
    9. '  ' → logprob: -20.000001907348633
    10. '۰' → logprob: -20.125001907348633

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024452158249914646
    2. '-' → logprob: -6.127445220947266
    3. ',-' → logprob: -8.377445220947266
    4. ' -' → logprob: -10.502445220947266
    5. ' ,' → logprob: -13.877445220947266
    6. '-,' → logprob: -14.502445220947266
    7. '0' → logprob: -14.502445220947266
    8. ' ' → logprob: -15.502445220947266
    9. ' ,-' → logprob: -15.502445220947266
    10. ',
' → logprob: -15.627445220947266

Token 320: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2519378066062927
    2. ' -' → logprob: -1.5019378662109375
    3. ' ' → logprob: -11.751937866210938
    4. '-step' → logprob: -15.876937866210938
    5. '	' → logprob: -16.126937866210938
    6. '   ' → logprob: -16.126937866210938
    7. ')' → logprob: -16.251937866210938
    8. '  ' → logprob: -16.251937866210938
    9. ' ' → logprob: -17.001937866210938
    10. '−' → logprob: -17.251937866210938

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. ')' → logprob: -19.375001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '１' → logprob: -20.875001907348633
    6. '```' → logprob: -21.250001907348633
    7. ',' → logprob: -21.375001907348633
    8. '  ' → logprob: -21.500001907348633
    9. '

' → logprob: -21.750001907348633
    10. ' )' → logprob: -22.000001907348633

Token 322: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00046284322161227465
    2. ')' → logprob: -7.750463008880615
    3. ':' → logprob: -11.125462532043457
    4. '):
' → logprob: -11.625462532043457
    5. ' ):' → logprob: -11.750462532043457
    6. ',' → logprob: -16.000463485717773
    7. '():' → logprob: -16.125463485717773
    8. '):
' → logprob: -16.375463485717773
    9. '7' → logprob: -17.250463485717773
    10. ')：' → logprob: -17.375463485717773

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005456457729451358
    2. ' ans' → logprob: -8.625545501708984
    3. ' print' → logprob: -8.875545501708984
    4. 'print' → logprob: -9.375545501708984
    5. '    
' → logprob: -9.500545501708984
    6. 'ans' → logprob: -11.000545501708984
    7. '    ' → logprob: -11.125545501708984
    8. '   ' → logprob: -11.625545501708984
    9. '	ans' → logprob: -12.250545501708984
    10. '#' → logprob: -12.375545501708984

Token 324: ' #' (ID: 1069)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6571745872497559
    2. '   ' → logprob: -1.1571745872497559
    3. 'ans' → logprob: -1.9071745872497559
    4. 'print' → logprob: -4.907174587249756
    5. ' print' → logprob: -5.157174587249756
    6. '    
' → logprob: -6.532174587249756
    7. ' if' → logprob: -6.532174587249756
    8. '    ' → logprob: -6.532174587249756
    9. 'if' → logprob: -7.907174587249756
    10. '	ans' → logprob: -8.407175064086914

Token 325: ' Pour' (ID: 13931)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2640698552131653
    2. 'print' → logprob: -1.8890697956085205
    3. ' ans' → logprob: -3.2640697956085205
    4. 'if' → logprob: -3.7640697956085205
    5. '   ' → logprob: -4.8890700340271
    6. 'for' → logprob: -5.5140700340271
    7. ' if' → logprob: -5.8890700340271
    8. ' print' → logprob: -5.8890700340271
    9. 'pass' → logprob: -6.7640700340271
    10. ' for' → logprob: -7.5140700340271

Token 326: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7188228964805603
    2. '    ' → logprob: -1.468822956085205
    3. ' i' → logprob: -1.968822956085205
    4. ' r' → logprob: -2.843822956085205
    5. 'r' → logprob: -3.218822956085205
    6. '_' → logprob: -4.218822956085205
    7. ' print' → logprob: -4.718822956085205
    8. '   ' → logprob: -5.093822956085205
    9. ' ans' → logprob: -5.343822956085205
    10. ' _' → logprob: -6.343822956085205

Token 327: ' valeur' (ID: 41664)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17092964053153992
    2. 'i' → logprob: -2.2959296703338623
    3. ' ' → logprob: -2.9209296703338623
    4. '    ' → logprob: -6.420929431915283
    5. '   ' → logprob: -8.670929908752441
    6. '_' → logprob: -8.795929908752441
    7. ' ' → logprob: -9.170929908752441
    8. 'print' → logprob: -9.295929908752441
    9. 'r' → logprob: -9.545929908752441
    10. ' print' → logprob: -9.670929908752441

Token 328: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6089791655540466
    2. ':' → logprob: -1.3589792251586914
    3. ' :' → logprob: -2.1089792251586914
    4. ',' → logprob: -3.4839792251586914
    5. '    ' → logprob: -3.8589792251586914
    6. ' ' → logprob: -4.983979225158691
    7. ' de' → logprob: -5.233979225158691
    8. ' i' → logprob: -5.358979225158691
    9. '       ' → logprob: -6.358979225158691
    10. '  ' → logprob: -6.733979225158691

Token 329: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28850433230400085
    2. ' i' → logprob: -1.4135043621063232
    3. 'ans' → logprob: -6.413504123687744
    4. 'r' → logprob: -6.788504123687744
    5. ' ans' → logprob: -6.913504123687744
    6. 'range' → logprob: -7.538504123687744
    7. 'M' → logprob: -7.663504123687744
    8. 's' → logprob: -7.788504123687744
    9. ' ' → logprob: -7.913504123687744
    10. 'N' → logprob: -8.163504600524902

Token 330: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42671358585357666
    2. '   ' → logprob: -1.3017135858535767
    3. ' :' → logprob: -2.801713466644287
    4. ',' → logprob: -4.676713466644287
    5. ':
' → logprob: -6.426713466644287
    6. ' :
' → logprob: -6.801713466644287
    7. '    ' → logprob: -7.176713466644287
    8. '    
' → logprob: -7.676713466644287
    9. ' ' → logprob: -8.551713943481445
    10. ' ,' → logprob: -8.801713943481445

Token 331: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5801666378974915
    2. 'range' → logprob: -0.8301666378974915
    3. ' ' → logprob: -5.955166816711426
    4. ' la' → logprob: -6.955166816711426
    5. ' i' → logprob: -8.705166816711426
    6. '   ' → logprob: -9.330166816711426
    7. ' ' → logprob: -9.455166816711426
    8. 'la' → logprob: -10.205166816711426
    9. ' s' → logprob: -10.330166816711426
    10. 's' → logprob: -10.455166816711426

Token 332: ' sé' (ID: 7462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026895098388195038
    2. ' range' → logprob: -3.776895046234131
    3. 'for' → logprob: -5.776895046234131
    4. ':' → logprob: -8.651895523071289
    5. ' for' → logprob: -9.276895523071289
    6. '   ' → logprob: -9.526895523071289
    7. ' ' → logprob: -9.776895523071289
    8. 'rang' → logprob: -9.901895523071289
    9. 'r' → logprob: -10.651895523071289
    10. 'print' → logprob: -11.651895523071289

Token 333: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00029244067263789475
    2. 'rie' → logprob: -8.625292778015137
    3. '   ' → logprob: -10.375292778015137
    4. 'qu' → logprob: -10.750292778015137
    5. 'range' → logprob: -11.000292778015137
    6. 'quences' → logprob: -11.750292778015137
    7. 'q' → logprob: -12.000292778015137
    8. 'for' → logprob: -12.375292778015137
    9. 'que' → logprob: -12.500292778015137
    10. '#' → logprob: -12.500292778015137

Token 334: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3500814139842987
    2. '   ' → logprob: -1.350081443786621
    3. ' :' → logprob: -3.975081443786621
    4. ',' → logprob: -4.350081443786621
    5. ':
' → logprob: -5.975081443786621
    6. '    
' → logprob: -7.350081443786621
    7. ' :
' → logprob: -7.725081443786621
    8. '    ' → logprob: -7.975081443786621
    9. '       ' → logprob: -8.975081443786621
    10. ' ,' → logprob: -9.600081443786621

Token 335: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5847696661949158
    2. ' ans' → logprob: -1.0847697257995605
    3. ' print' → logprob: -2.5847697257995605
    4. 'ans' → logprob: -4.2097697257995605
    5. 'print' → logprob: -4.5847697257995605
    6. '    
' → logprob: -5.7097697257995605
    7. '    ' → logprob: -7.9597697257995605
    8. ' for' → logprob: -9.334769248962402
    9. ' pass' → logprob: -9.459769248962402
    10. ' if' → logprob: -9.584769248962402

Token 336: ' vér' (ID: 42524)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5814417004585266
    2. 'print' → logprob: -1.0814416408538818
    3. '   ' → logprob: -2.581441640853882
    4. ':' → logprob: -3.831441640853882
    5. '    ' → logprob: -6.706441879272461
    6. ' ' → logprob: -7.456441879272461
    7. '#' → logprob: -8.081441879272461
    8. ' #' → logprob: -8.081441879272461
    9. 'pr' → logprob: -8.456441879272461
    10. ' for' → logprob: -8.456441879272461

Token 337: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.09749289602041245
    2. 'rite' → logprob: -3.0974929332733154
    3. 'ite' → logprob: -3.9724929332733154
    4. 'it' → logprob: -4.472492694854736
    5. 'ife' → logprob: -5.597492694854736
    6. 'rit' → logprob: -5.722492694854736
    7. 'e' → logprob: -5.972492694854736
    8. 'ecute' → logprob: -6.972492694854736
    9. 'eit' → logprob: -7.222492694854736
    10. 'ité' → logprob: -7.347492694854736

Token 338: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031625106930732727
    2. '    ' → logprob: -6.378162384033203
    3. ' if' → logprob: -7.753162384033203
    4. ' ' → logprob: -8.253162384033203
    5. ':' → logprob: -8.628162384033203
    6. '  ' → logprob: -8.878162384033203
    7. 'si' → logprob: -9.378162384033203
    8. ' si' → logprob: -9.628162384033203
    9. '   ' → logprob: -9.878162384033203
    10. '    
' → logprob: -10.003162384033203

Token 339: ' i' (ID: 575)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.2997500896453857
    2. 'r' → logprob: -1.6747500896453857
    3. ' r' → logprob: -1.6747500896453857
    4. ' i' → logprob: -1.9247500896453857
    5. 'M' → logprob: -2.2997500896453857
    6. 'i' → logprob: -3.0497500896453857
    7. ' s' → logprob: -3.5497500896453857
    8. 's' → logprob: -4.299750328063965
    9. ' N' → logprob: -4.924750328063965
    10. 'N' → logprob: -5.299750328063965

Token 340: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.014599328860640526
    2. '%' → logprob: -4.389599323272705
    3. ' ' → logprob: -7.139599323272705
    4. ' *' → logprob: -7.139599323272705
    5. ' <=' → logprob: -8.639599800109863
    6. ' ==' → logprob: -9.014599800109863
    7. '*' → logprob: -9.764599800109863
    8. '%i' → logprob: -10.014599800109863
    9. '   ' → logprob: -10.639599800109863
    10. ' ' → logprob: -11.139599800109863

Token 341: ' un' (ID: 537)
  Prédit: ' divisible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.3018154501914978
    2. ' ' → logprob: -1.6768155097961426
    3. '   ' → logprob: -4.301815509796143
    4. 'div' → logprob: -4.301815509796143
    5. ' %' → logprob: -4.676815509796143
    6. '%' → logprob: -4.676815509796143
    7. ' <=' → logprob: -5.051815509796143
    8. 's' → logprob: -5.926815509796143
    9. ' divis' → logprob: -6.176815509796143
    10. ' >' → logprob: -6.301815509796143

Token 342: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.035609737038612366
    2. ' div' → logprob: -4.160609722137451
    3. ' multiple' → logprob: -4.785609722137451
    4. ' ' → logprob: -5.535609722137451
    5. ' divisor' → logprob: -6.035609722137451
    6. 'multiple' → logprob: -6.535609722137451
    7. ' facteur' → logprob: -6.535609722137451
    8. ' divis' → logprob: -7.285609722137451
    9. ' divisible' → logprob: -8.28561019897461
    10. '_div' → logprob: -9.03561019897461

Token 343: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.01780185103416443
    2. 'ise' → logprob: -4.142801761627197
    3. 'isible' → logprob: -7.017801761627197
    4. 'e' → logprob: -7.767801761627197
    5. ' is' → logprob: -8.892802238464355
    6. '   ' → logprob: -9.642802238464355
    7. 'iser' → logprob: -10.142802238464355
    8. 'eur' → logprob: -10.267802238464355
    9. 'is' → logprob: -10.392802238464355
    10. 'isor' → logprob: -10.517802238464355

Token 344: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2920083999633789
    2. '   ' → logprob: -1.667008399963379
    3. 'de' → logprob: -2.792008399963379
    4. ' ' → logprob: -7.042008399963379
    5. '    ' → logprob: -7.042008399963379
    6. ' of' → logprob: -7.792008399963379
    7. '  ' → logprob: -7.917008399963379
    8. 'd' → logprob: -8.917008399963379
    9. 'div' → logprob: -8.917008399963379
    10. ' d' → logprob: -10.042008399963379

Token 345: ' M' (ID: 391)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5152129530906677
    2. 'N' → logprob: -1.1402130126953125
    3. 'M' → logprob: -2.8902130126953125
    4. ' s' → logprob: -4.3902130126953125
    5. 'r' → logprob: -4.8902130126953125
    6. ' N' → logprob: -5.5152130126953125
    7. ' M' → logprob: -6.0152130126953125
    8. 'n' → logprob: -7.6402130126953125
    9. ' ' → logprob: -8.640213012695312
    10. ' r' → logprob: -9.640213012695312

Token 346: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007096235174685717
    2. ' and' → logprob: -5.257096290588379
    3. ':' → logprob: -7.257096290588379
    4. ' if' → logprob: -7.757096290588379
    5. ' et' → logprob: -7.882096290588379
    6. 'and' → logprob: -9.382096290588379
    7. ',' → logprob: -9.632096290588379
    8. ' :' → logprob: -9.757096290588379
    9. '.' → logprob: -10.007096290588379
    10. '    ' → logprob: -10.257096290588379

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012648787815123796
    2. ' if' → logprob: -7.251265048980713
    3. '    
' → logprob: -7.751265048980713
    4. '    ' → logprob: -10.126264572143555
    5. ' 
' → logprob: -10.501264572143555
    6. 'if' → logprob: -11.251264572143555
    7. '       ' → logprob: -11.376264572143555
    8. '   ' → logprob: -11.501264572143555
    9. '     
' → logprob: -12.001264572143555
    10. '<|end|>' → logprob: -12.876264572143555

Token 348: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01658967323601246
    2. ' if' → logprob: -4.391589641571045
    3. 'if' → logprob: -5.516589641571045
    4. '    
' → logprob: -10.766590118408203
    5. '   ' → logprob: -11.016590118408203
    6. '       ' → logprob: -11.766590118408203
    7. '    ' → logprob: -12.391590118408203
    8. '	if' → logprob: -14.266590118408203
    9. '   ' → logprob: -14.641590118408203
    10. ' 
' → logprob: -14.891590118408203

Token 349: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7700002193450928
    2. ' if' → logprob: -1.1450002193450928
    3. 'if' → logprob: -1.5200002193450928
    4. '   ' → logprob: -11.270000457763672
    5. '    ' → logprob: -11.395000457763672
    6. '	if' → logprob: -11.645000457763672
    7. '    
' → logprob: -12.020000457763672
    8. ' ' → logprob: -12.270000457763672
    9. '       ' → logprob: -13.020000457763672
    10. '   ' → logprob: -13.770000457763672

Token 350: ''op' (ID: 70747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032741617411375046
    2. ' ' → logprob: -4.532741546630859
    3. ' if' → logprob: -4.657741546630859
    4. 'if' → logprob: -4.907741546630859
    5. '    ' → logprob: -6.407741546630859
    6. '  ' → logprob: -6.907741546630859
    7. '    
' → logprob: -7.657741546630859
    8. '       ' → logprob: -8.15774154663086
    9. ' ' → logprob: -8.40774154663086
    10. '	if' → logprob: -8.90774154663086

Token 351: 'érateur' (ID: 108528)
  Prédit: 'ération'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.36913737654685974
    2. 'érateur' → logprob: -1.7441374063491821
    3. 'er' → logprob: -3.3691372871398926
    4. 'if' → logprob: -3.6191372871398926
    5. 'i' → logprob: -3.7441372871398926
    6. ' if' → logprob: -4.369137287139893
    7. '%' → logprob: -4.494137287139893
    8. 'ér' → logprob: -5.244137287139893
    9. 'érations' → logprob: -5.994137287139893
    10. '(i' → logprob: -6.119137287139893

Token 352: ' modulo' (ID: 112372)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16217176616191864
    2. ' ' → logprob: -2.5371718406677246
    3. '%' → logprob: -2.6621718406677246
    4. ' %#' → logprob: -8.912171363830566
    5. '   ' → logprob: -9.162171363830566
    6. '  ' → logprob: -9.162171363830566
    7. ' M' → logprob: -9.287171363830566
    8. ' ==' → logprob: -9.662171363830566
    9. '%i' → logprob: -9.787171363830566
    10. '<|end|>' → logprob: -9.787171363830566

Token 353: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.19637155532836914
    2. ' ' → logprob: -2.071371555328369
    3. '%' → logprob: -3.071371555328369
    4. '(' → logprob: -6.446371555328369
    5. '   ' → logprob: -6.696371555328369
    6. ' (' → logprob: -7.196371555328369
    7. ' ==' → logprob: -7.196371555328369
    8. ' i' → logprob: -7.821371555328369
    9. '  ' → logprob: -8.196371078491211
    10. ' (%)' → logprob: -8.196371078491211

Token 354: ' retourne' (ID: 178818)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7985593676567078
    2. ' ==' → logprob: -0.9235593676567078
    3. '   ' → logprob: -3.2985594272613525
    4. '%' → logprob: -3.4235594272613525
    5. '==' → logprob: -3.6735594272613525
    6. ' %' → logprob: -4.048559188842773
    7. ' est' → logprob: -4.798559188842773
    8. '  ' → logprob: -5.048559188842773
    9. '<|end|>' → logprob: -5.548559188842773
    10. ',' → logprob: -5.548559188842773

Token 355: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1413135975599289
    2. ' M' → logprob: -2.5163135528564453
    3. '0' → logprob: -3.0163135528564453
    4. '  ' → logprob: -6.891313552856445
    5. ' i' → logprob: -8.516313552856445
    6. 'M' → logprob: -8.641313552856445
    7. ' ' → logprob: -8.766313552856445
    8. '<|end|>' → logprob: -8.891313552856445
    9. ' (' → logprob: -9.891313552856445
    10. '    ' → logprob: -10.141313552856445

Token 356: ' reste' (ID: 26769)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08161908388137817
    2. ' M' → logprob: -2.8316190242767334
    3. '0' → logprob: -4.4566192626953125
    4. ' i' → logprob: -5.8316192626953125
    5. '  ' → logprob: -7.0816192626953125
    6. '%' → logprob: -7.0816192626953125
    7. 'M' → logprob: -7.2066192626953125
    8. ' reste' → logprob: -7.8316192626953125
    9. ' ' → logprob: -8.331619262695312
    10. 'r' → logprob: -8.331619262695312

Token 357: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01001211628317833
    2. ' ==' → logprob: -5.635012149810791
    3. ' de' → logprob: -5.885012149810791
    4. '=' → logprob: -6.760012149810791
    5. '  ' → logprob: -7.010012149810791
    6. ' =' → logprob: -7.760012149810791
    7. '   ' → logprob: -8.010011672973633
    8. '    ' → logprob: -9.010011672973633
    9. '<|end|>' → logprob: -9.010011672973633
    10. ',' → logprob: -9.135011672973633

Token 358: ' la' (ID: 557)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.1474081426858902
    2. 'M' → logprob: -2.0224082469940186
    3. ' ' → logprob: -6.0224080085754395
    4. ' i' → logprob: -6.5224080085754395
    5. 'i' → logprob: -7.2724080085754395
    6. ' la' → logprob: -10.397408485412598
    7. ' N' → logprob: -10.897408485412598
    8. '  ' → logprob: -11.397408485412598
    9. ' (' → logprob: -11.522408485412598
    10. ' l' → logprob: -11.522408485412598

Token 359: ' division' (ID: 21629)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.5932229161262512
    2. 'M' → logprob: -1.3432228565216064
    3. ' i' → logprob: -2.9682228565216064
    4. ' division' → logprob: -2.9682228565216064
    5. 'division' → logprob: -3.2182228565216064
    6. 'i' → logprob: -3.8432228565216064
    7. 'div' → logprob: -4.4682230949401855
    8. ' ' → logprob: -4.5932230949401855
    9. '%' → logprob: -9.218222618103027
    10. ' div' → logprob: -9.343222618103027

Token 360: ' entière' (ID: 61583)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2671464681625366
    2. ' ' → logprob: -2.267146587371826
    3. ' de' → logprob: -2.767146587371826
    4. 'i' → logprob: -3.267146587371826
    5. '   ' → logprob: -3.892146587371826
    6. ',' → logprob: -5.642146587371826
    7. ' M' → logprob: -6.267146587371826
    8. '  ' → logprob: -6.392146587371826
    9. '%' → logprob: -7.392146587371826
    10. '    ' → logprob: -8.392146110534668

Token 361: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6473809480667114
    2. ' de' → logprob: -1.3973809480667114
    3. ' i' → logprob: -2.147380828857422
    4. '   ' → logprob: -3.022380828857422
    5. ' M' → logprob: -3.897380828857422
    6. '  ' → logprob: -4.272380828857422
    7. ',' → logprob: -4.397380828857422
    8. ' ,' → logprob: -5.272380828857422
    9. '%' → logprob: -6.272380828857422
    10. '    ' → logprob: -6.397380828857422

Token 362: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.6175097823143005
    2. 'M' → logprob: -0.8675097823143005
    3. 'i' → logprob: -3.6175098419189453
    4. ' i' → logprob: -4.367509841918945
    5. ' ' → logprob: -6.867509841918945
    6. 'N' → logprob: -10.617509841918945
    7. '   ' → logprob: -10.992509841918945
    8. '  ' → logprob: -11.367509841918945
    9. '1' → logprob: -11.367509841918945
    10. ' N' → logprob: -11.680009841918945

Token 363: ' par' (ID: 686)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.804565191268921
    2. ' ' → logprob: -1.929565191268921
    3. ' par' → logprob: -1.929565191268921
    4. '%i' → logprob: -2.179565191268921
    5. ' i' → logprob: -2.304565191268921
    6. ')' → logprob: -2.554565191268921
    7. ' ==' → logprob: -2.554565191268921
    8. ' %' → logprob: -3.304565191268921
    9. ' by' → logprob: -3.429565191268921
    10. '   ' → logprob: -3.679565191268921

Token 364: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28122973442077637
    2. 'i' → logprob: -1.4062297344207764
    3. ' ' → logprob: -10.281229972839355
    4. ' M' → logprob: -10.906229972839355
    5. ' ' → logprob: -11.156229972839355
    6. 'M' → logprob: -11.906229972839355
    7. '	i' → logprob: -12.656229972839355
    8. '   ' → logprob: -14.531229972839355
    9. ' ' → logprob: -15.156229972839355
    10. 'space' → logprob: -15.156229972839355

Token 365: '.
' (ID: 558)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7314638495445251
    2. '   ' → logprob: -1.10646390914917
    3. ' ' → logprob: -2.85646390914917
    4. ' :' → logprob: -3.48146390914917
    5. ':' → logprob: -3.60646390914917
    6. '  ' → logprob: -4.23146390914917
    7. '==' → logprob: -4.23146390914917
    8. ',' → logprob: -4.73146390914917
    9. '%' → logprob: -4.98146390914917
    10. ' ,' → logprob: -5.10646390914917

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0039476752281188965
    2. ' ' → logprob: -6.128947734832764
    3. ' if' → logprob: -7.128947734832764
    4. '<|end|>' → logprob: -8.128947257995605
    5. '    
' → logprob: -8.503947257995605
    6. '    ' → logprob: -8.753947257995605
    7. ' 
' → logprob: -8.878947257995605
    8. '  
' → logprob: -10.628947257995605
    9. '       ' → logprob: -10.878947257995605
    10. '  ' → logprob: -11.003947257995605

Token 367: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13067851960659027
    2. ' if' → logprob: -2.130678415298462
    3. 'if' → logprob: -5.630678653717041
    4. '   ' → logprob: -10.005678176879883
    5. '    
' → logprob: -10.130678176879883
    6. ' ' → logprob: -10.505678176879883
    7. '	if' → logprob: -11.505678176879883
    8. ' 
' → logprob: -11.505678176879883
    9. '    ' → logprob: -11.630678176879883
    10. ' ' → logprob: -12.380678176879883

Token 368: ' Si' (ID: 7832)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09556230902671814
    2. '   ' → logprob: -2.720562219619751
    3. 'if' → logprob: -3.720562219619751
    4. ' ' → logprob: -7.22056245803833
    5. ' ' → logprob: -8.970561981201172
    6. '	if' → logprob: -9.470561981201172
    7. ' 
' → logprob: -10.470561981201172
    8. '    ' → logprob: -10.595561981201172
    9. '   ' → logprob: -10.595561981201172
    10. ' i' → logprob: -10.845561981201172

Token 369: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.022727858275175095
    2. 'M' → logprob: -4.022727966308594
    3. ' i' → logprob: -5.647727966308594
    4. ' ' → logprob: -7.147727966308594
    5. 'i' → logprob: -9.022727966308594
    6. ' ' → logprob: -9.897727966308594
    7. '   ' → logprob: -10.522727966308594
    8. ' (' → logprob: -10.647727966308594
    9. '  ' → logprob: -11.647727966308594
    10. '    ' → logprob: -11.772727966308594

Token 370: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5235046744346619
    2. ' %' → logprob: -0.8985046744346619
    3. ' ' → logprob: -8.523504257202148
    4. '%i' → logprob: -8.773504257202148
    5. ' ' → logprob: -11.398504257202148
    6. '%s' → logprob: -12.148504257202148
    7. '   ' → logprob: -12.648504257202148
    8. '%n' → logprob: -13.148504257202148
    9. '%c' → logprob: -13.398504257202148
    10. ' %
' → logprob: -14.023504257202148

Token 371: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07063037157058716
    2. 'i' → logprob: -2.6956303119659424
    3. ' ' → logprob: -7.3206305503845215
    4. ' ' → logprob: -11.195630073547363
    5. '	i' → logprob: -12.570630073547363
    6. '==' → logprob: -12.945630073547363
    7. '0' → logprob: -13.070630073547363
    8. ' ==' → logprob: -13.445630073547363
    9. '=' → logprob: -13.570630073547363
    10. '  ' → logprob: -13.695630073547363

Token 372: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11367014795541763
    2. '==' → logprob: -2.2386701107025146
    3. '=' → logprob: -8.113670349121094
    4. ' ' → logprob: -8.113670349121094
    5. ')' → logprob: -8.738670349121094
    6. ')==' → logprob: -10.238670349121094
    7. ' =' → logprob: -11.113670349121094
    8. ' ===' → logprob: -12.113670349121094
    9. '```' → logprob: -12.113670349121094
    10. ' )' → logprob: -12.113670349121094

Token 373: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05488363653421402
    2. ' ' → logprob: -2.9298837184906006
    3. ' ' → logprob: -13.92988395690918
    4. '=' → logprob: -15.55488395690918
    5. 's' → logprob: -16.17988395690918
    6. '   ' → logprob: -16.80488395690918
    7. '  ' → logprob: -16.92988395690918
    8. '==' → logprob: -17.67988395690918
    9. '```' → logprob: -17.86738395690918
    10. ' ==' → logprob: -18.30488395690918

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.125041007995605
    3. 's' → logprob: -15.000041007995605
    4. '=' → logprob: -15.250041007995605
    5. 'r' → logprob: -17.37504005432129
    6. '1' → logprob: -17.56254005432129
    7. '==' → logprob: -18.00004005432129
    8. '۰' → logprob: -18.43754005432129
    9. '```' → logprob: -18.75004005432129
    10. '  ' → logprob: -19.56254005432129

Token 375: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037743125576525927
    2. ' :' → logprob: -5.628774166107178
    3. ':
' → logprob: -9.378774642944336
    4. '):' → logprob: -10.128774642944336
    5. ',' → logprob: -10.628774642944336
    6. ' and' → logprob: -11.503774642944336
    7. '   ' → logprob: -11.753774642944336
    8. ')' → logprob: -13.128774642944336
    9. ' :
' → logprob: -13.503774642944336
    10. 'and' → logprob: -14.253774642944336

Token 376: ' cela' (ID: 17542)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20952272415161133
    2. '   ' → logprob: -2.0845227241516113
    3. '    ' → logprob: -3.0845227241516113
    4. ' ' → logprob: -5.084522724151611
    5. '        
' → logprob: -5.584522724151611
    6. '    
' → logprob: -6.209522724151611
    7. '     
' → logprob: -6.334522724151611
    8. ':' → logprob: -6.834522724151611
    9. '<|end|>' → logprob: -7.209522724151611
    10. ' 
' → logprob: -7.209522724151611

Token 377: ' signifie' (ID: 81149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06262875348329544
    2. ' :' → logprob: -3.687628746032715
    3. ' signifie' → logprob: -3.687628746032715
    4. ' continue' → logprob: -5.562628746032715
    5. ' means' → logprob: -6.062628746032715
    6. '   ' → logprob: -7.312628746032715
    7. 'continue' → logprob: -7.687628746032715
    8. ' ' → logprob: -7.812628746032715
    9. ' veut' → logprob: -8.062628746032715
    10. ' print' → logprob: -8.187628746032715

Token 378: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28063249588012695
    2. '   ' → logprob: -2.405632495880127
    3. ' i' → logprob: -2.905632495880127
    4. '    ' → logprob: -3.280632495880127
    5. ' that' → logprob: -3.780632495880127
    6. '  ' → logprob: -4.530632495880127
    7. ' ' → logprob: -4.780632495880127
    8. ' que' → logprob: -5.155632495880127
    9. ' M' → logprob: -5.155632495880127
    10. ':' → logprob: -6.030632495880127

Token 379: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4802126884460449
    2. ' M' → logprob: -1.105212688446045
    3. 'i' → logprob: -3.230212688446045
    4. 'M' → logprob: -4.730212688446045
    5. ' ' → logprob: -6.730212688446045
    6. '   ' → logprob: -8.230213165283203
    7. ' ' → logprob: -8.605213165283203
    8. '    ' → logprob: -8.980213165283203
    9. ' s' → logprob: -11.480213165283203
    10. '  ' → logprob: -11.605213165283203

Token 380: ' div' (ID: 4223)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.0376893281936646
    2. ' ' → logprob: -1.9126893281936646
    3. ' is' → logprob: -2.287689208984375
    4. ' ==' → logprob: -2.412689208984375
    5. ' divides' → logprob: -2.537689208984375
    6. 'div' → logprob: -2.912689208984375
    7. '   ' → logprob: -3.037689208984375
    8. ' %' → logprob: -3.412689208984375
    9. '<|end|>' → logprob: -3.912689208984375
    10. ' div' → logprob: -3.912689208984375

Token 381: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -8.697387966094539e-05
    2. 'ide' → logprob: -10.375086784362793
    3. '```' → logprob: -10.500086784362793
    4. 'iseur' → logprob: -12.125086784362793
    5. '   ' → logprob: -12.500086784362793
    6. '
' → logprob: -13.000086784362793
    7. 'is' → logprob: -13.125086784362793
    8. '

' → logprob: -14.000086784362793
    9. '       ' → logprob: -14.250086784362793
    10. 'isible' → logprob: -14.250086784362793

Token 382: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.023605898022651672
    2. 'M' → logprob: -3.7736058235168457
    3. ' ' → logprob: -8.023606300354004
    4. ' i' → logprob: -11.273606300354004
    5. ' N' → logprob: -11.773606300354004
    6. ' ' → logprob: -12.523606300354004
    7. 'i' → logprob: -12.773606300354004
    8. 'N' → logprob: -13.648606300354004
    9. 's' → logprob: -13.773606300354004
    10. '  ' → logprob: -14.523606300354004

Token 383: ' sans' (ID: 9828)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07471588253974915
    2. '   ' → logprob: -3.3247158527374268
    3. ' :' → logprob: -3.5747158527374268
    4. '):' → logprob: -5.199716091156006
    5. ':
' → logprob: -6.574716091156006
    6. ',' → logprob: -7.574716091156006
    7. ' and' → logprob: -8.949715614318848
    8. ' :
' → logprob: -8.949715614318848
    9. ')' → logprob: -9.824715614318848
    10. '.' → logprob: -10.074715614318848

Token 384: ' reste' (ID: 26769)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.8549216985702515
    2. 'reste' → logprob: -1.1049216985702515
    3. ' reste' → logprob: -1.9799216985702515
    4. 're' → logprob: -3.104921817779541
    5. ' ' → logprob: -3.854921817779541
    6. 'r' → logprob: -3.979921817779541
    7. ' ' → logprob: -4.729921817779541
    8. '```' → logprob: -5.979921817779541
    9. 'rest' → logprob: -6.479921817779541
    10. ' aucun' → logprob: -6.729921817779541

Token 385: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004569919314235449
    2. ' :' → logprob: -5.754570007324219
    3. ':
' → logprob: -7.504570007324219
    4. '   ' → logprob: -7.629570007324219
    5. '):' → logprob: -8.254570007324219
    6. ',' → logprob: -9.629570007324219
    7. ' :
' → logprob: -11.629570007324219
    8. '.' → logprob: -11.879570007324219
    9. '():' → logprob: -13.129570007324219
    10. ' ):' → logprob: -13.379570007324219

Token 386: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0371659994125366
    2. '       ' → logprob: -1.1621659994125366
    3. ':' → logprob: -1.6621659994125366
    4. '    ' → logprob: -2.787166118621826
    5. ' ' → logprob: -3.662166118621826
    6. '<|end|>' → logprob: -3.912166118621826
    7. ' :' → logprob: -4.162166118621826
    8. ' 
' → logprob: -5.037166118621826
    9. '    
' → logprob: -6.037166118621826
    10. '        
' → logprob: -6.287166118621826

Token 387: ' i' (ID: 575)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.7732100486755371
    2. '   ' → logprob: -1.023210048675537
    3. ':' → logprob: -3.523210048675537
    4. '    ' → logprob: -3.523210048675537
    5. ' ' → logprob: -3.648210048675537
    6. ' ' → logprob: -3.773210048675537
    7. '       ' → logprob: -3.898210048675537
    8. ' i' → logprob: -3.898210048675537
    9. '  ' → logprob: -5.273210048675537
    10. '    
' → logprob: -5.898210048675537

Token 388: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6554014682769775
    2. ' continue' → logprob: -2.2804014682769775
    3. ' est' → logprob: -2.4054014682769775
    4. '%' → logprob: -2.5304014682769775
    5. ')' → logprob: -3.1554014682769775
    6. ':' → logprob: -3.2804014682769775
    7. ' is' → logprob: -3.5304014682769775
    8. ' %' → logprob: -3.9054014682769775
    9. ' ' → logprob: -4.405401229858398
    10. ' continues' → logprob: -4.405401229858398

Token 389: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.007248918991535902
    2. ' a' → logprob: -5.632248878479004
    3. 'un' → logprob: -6.007248878479004
    4. ' ' → logprob: -7.507248878479004
    5. '<|end|>' → logprob: -8.007248878479004
    6. 'a' → logprob: -9.132248878479004
    7. ''un' → logprob: -9.632248878479004
    8. ' une' → logprob: -10.382248878479004
    9. 'div' → logprob: -10.882248878479004
    10. 's' → logprob: -11.132248878479004

Token 390: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.11715641617774963
    2. ' div' → logprob: -2.242156505584717
    3. ' facteur' → logprob: -5.742156505584717
    4. 'fact' → logprob: -7.617156505584717
    5. ' divisor' → logprob: -8.242156028747559
    6. ' ' → logprob: -8.992156028747559
    7. ' divis' → logprob: -9.742156028747559
    8. '	div' → logprob: -9.992156028747559
    9. 'd' → logprob: -10.367156028747559
    10. '<div' → logprob: -10.867156028747559

Token 391: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.0005740015767514706
    2. 'ise' → logprob: -7.500574111938477
    3. '   ' → logprob: -11.875574111938477
    4. 'isor' → logprob: -13.375574111938477
    5. '#' → logprob: -13.625574111938477
    6. 'e' → logprob: -13.750574111938477
    7. 'i' → logprob: -13.750574111938477
    8. 'eur' → logprob: -13.750574111938477
    9. 'isateur' → logprob: -13.875574111938477
    10. 'iser' → logprob: -14.000574111938477

Token 392: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6984829306602478
    2. '   ' → logprob: -1.5734829902648926
    3. '.' → logprob: -2.3234829902648926
    4. ' :' → logprob: -2.9484829902648926
    5. '):' → logprob: -3.0734829902648926
    6. ' de' → logprob: -3.4484829902648926
    7. ')' → logprob: -3.4484829902648926
    8. '<|end|>' → logprob: -4.573482990264893
    9. ',' → logprob: -4.823482990264893
    10. ' ' → logprob: -5.448482990264893

Token 393: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.09842481464147568
    2. 'M' → logprob: -2.4734249114990234
    3. ' i' → logprob: -5.223424911499023
    4. 'i' → logprob: -5.598424911499023
    5. ' ' → logprob: -8.098424911499023
    6. 's' → logprob: -10.973424911499023
    7. ' ' → logprob: -11.223424911499023
    8. ',' → logprob: -12.723424911499023
    9. ' ,' → logprob: -13.973424911499023
    10. ' s' → logprob: -14.098424911499023

Token 394: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026224127039313316
    2. '   ' → logprob: -4.276224136352539
    3. ' :' → logprob: -4.526224136352539
    4. ':
' → logprob: -7.026224136352539
    5. ' :
' → logprob: -9.151224136352539
    6. ',' → logprob: -9.776224136352539
    7. '):' → logprob: -10.651224136352539
    8. '       ' → logprob: -11.276224136352539
    9. '  ' → logprob: -11.276224136352539
    10. '    ' → logprob: -11.401224136352539

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010906213894486427
    2. '       ' → logprob: -5.010906219482422
    3. ' if' → logprob: -5.760906219482422
    4. 'if' → logprob: -7.010906219482422
    5. '   ' → logprob: -10.260906219482422
    6. '	if' → logprob: -10.385906219482422
    7. ':' → logprob: -10.510906219482422
    8. '    
' → logprob: -11.635906219482422
    9. '    ' → logprob: -12.135906219482422
    10. '<|end|>' → logprob: -12.510906219482422

Token 396: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0470317117869854
    2. ' if' → logprob: -3.6720316410064697
    3. 'if' (adapté à ' if') → logprob: -3.9220316410064697
    4. '       ' → logprob: -7.297031879425049
    5. '   ' → logprob: -10.54703140258789
    6. '	if' → logprob: -12.04703140258789
    7. '    ' → logprob: -12.67203140258789
    8. '    
' → logprob: -13.54703140258789
    9. '  ' → logprob: -14.29703140258789
    10. ' ' → logprob: -14.42203140258789

Token 397: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.03589246794581413
    2. 'M' → logprob: -3.9108924865722656
    3. ' i' → logprob: -4.285892486572266
    4. 'i' → logprob: -6.785892486572266
    5. ' ' → logprob: -8.160892486572266
    6. '   ' → logprob: -10.910892486572266
    7. ' ' → logprob: -11.035892486572266
    8. '    ' → logprob: -11.910892486572266
    9. ' (' → logprob: -12.410892486572266
    10. ' s' → logprob: -12.785892486572266

Token 398: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16060976684093475
    2. '%' → logprob: -1.9106097221374512
    3. ' ' → logprob: -7.910609722137451
    4. '%i' → logprob: -11.53561019897461
    5. ' ' → logprob: -12.78561019897461
    6. '   ' → logprob: -12.91061019897461
    7. '%s' → logprob: -13.78561019897461
    8. ' %
' → logprob: -13.78561019897461
    9. '  ' → logprob: -14.53561019897461
    10. '    ' → logprob: -15.53561019897461

Token 399: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01815205067396164
    2. ' i' → logprob: -4.018152236938477
    3. '   ' → logprob: -13.643152236938477
    4. '	i' → logprob: -14.518152236938477
    5. ' ' → logprob: -15.143152236938477
    6. '<|end|>' → logprob: -16.018152236938477
    7. '  ' → logprob: -16.893152236938477
    8. '    ' → logprob: -18.018152236938477
    9. '[i' → logprob: -18.018152236938477
    10. '*i' → logprob: -18.393152236938477

Token 400: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08911057561635971
    2. '==' → logprob: -2.4641106128692627
    3. '=' → logprob: -9.339110374450684
    4. ')' → logprob: -10.089110374450684
    5. ')==' → logprob: -10.714110374450684
    6. ' ' → logprob: -11.464110374450684
    7. ' =' → logprob: -12.339110374450684
    8. '0' → logprob: -13.464110374450684
    9. ']==' → logprob: -14.089110374450684
    10. ' )' → logprob: -14.714110374450684

Token 401: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020542005077004433
    2. ' ' → logprob: -3.8955419063568115
    3. '  ' → logprob: -16.27054214477539
    4. '   ' → logprob: -17.77054214477539
    5. 's' → logprob: -18.20804214477539
    6. ' ' → logprob: -18.45804214477539
    7. '=' → logprob: -18.64554214477539
    8. '۰' → logprob: -18.83304214477539
    9. '
' → logprob: -18.89554214477539
    10. '    ' → logprob: -19.14554214477539

Token 402: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '  ' → logprob: -19.000051498413086
    4. '۰' → logprob: -19.375051498413086
    5. '   ' → logprob: -19.812551498413086
    6. '00' → logprob: -20.375051498413086
    7. ' ' → logprob: -20.437551498413086
    8. '
' → logprob: -20.500051498413086
    9. '  ' → logprob: -20.625051498413086
    10. 's' → logprob: -20.937551498413086

Token 403: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007717476109974086
    2. ':
' → logprob: -7.250771522521973
    3. '       ' → logprob: -9.875771522521973
    4. ' :' → logprob: -12.125771522521973
    5. '   ' → logprob: -12.500771522521973
    6. '):' → logprob: -15.375771522521973
    7. ':return' → logprob: -15.375771522521973
    8. ',' → logprob: -15.750771522521973
    9. ':**' → logprob: -16.00077247619629
    10. ' and' → logprob: -16.12577247619629

Token 404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005128088407218456
    2. '        
' → logprob: -6.130127906799316
    3. '    ' → logprob: -6.505127906799316
    4. ' ' → logprob: -8.005127906799316
    5. '   ' → logprob: -8.255127906799316
    6. ':' → logprob: -8.630127906799316
    7. '<|end|>' → logprob: -8.630127906799316
    8. '      ' → logprob: -9.505127906799316
    9. '    
' → logprob: -9.880127906799316
    10. '     ' → logprob: -10.005127906799316

Token 405: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009189045056700706
    2. 'print' → logprob: -5.759189128875732
    3. '        
' → logprob: -6.384189128875732
    4. ' break' → logprob: -6.884189128875732
    5. ' ans' → logprob: -7.009189128875732
    6. 'break' → logprob: -7.259189128875732
    7. ' print' → logprob: -7.634189128875732
    8. '   ' → logprob: -7.634189128875732
    9. '    ' → logprob: -9.009188652038574
    10. '           ' → logprob: -9.259188652038574

Token 406: ' On' (ID: 2160)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7869150638580322
    2. 'ans' → logprob: -0.9119150638580322
    3. 'print' → logprob: -3.0369150638580322
    4. '   ' → logprob: -3.2869150638580322
    5. 'break' → logprob: -3.6619150638580322
    6. '       ' → logprob: -4.286914825439453
    7. ' break' → logprob: -4.661914825439453
    8. ' print' → logprob: -4.911914825439453
    9. 'answer' → logprob: -7.911914825439453
    10. '	ans' → logprob: -8.536914825439453

Token 407: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2254324108362198
    2. 'break' → logprob: -2.6004323959350586
    3. 'print' → logprob: -2.6004323959350586
    4. ' print' → logprob: -3.8504323959350586
    5. ' break' → logprob: -4.350432395935059
    6. ' ans' → logprob: -5.225432395935059
    7. '    ' → logprob: -5.350432395935059
    8. '       ' → logprob: -5.975432395935059
    9. 'ans' → logprob: -6.350432395935059
    10. ' ' → logprob: -6.600432395935059

Token 408: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12696968019008636
    2. 'i' → logprob: -2.126969575881958
    3. '(i' → logprob: -10.251969337463379
    4. '       ' → logprob: -13.001969337463379
    5. '   ' → logprob: -13.751969337463379
    6. '    ' → logprob: -14.501969337463379
    7. ' ' → logprob: -14.751969337463379
    8. ' ' → logprob: -14.876969337463379
    9. ' M' → logprob: -15.126969337463379
    10. '	i' → logprob: -15.126969337463379

Token 409: ' valeur' (ID: 41664)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0018360643880441785
    2. ' i' → logprob: -6.37683629989624
    3. 'print' → logprob: -9.626835823059082
    4. '   ' → logprob: -10.251835823059082
    5. ' ' → logprob: -11.126835823059082
    6. 's' → logprob: -12.376835823059082
    7. 'break' → logprob: -13.376835823059082
    8. '    
' → logprob: -13.501835823059082
    9. '  ' → logprob: -13.501835823059082
    10. ' print' → logprob: -13.751835823059082

Token 410: ' de' (ID: 334)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03178592398762703
    2. '(' → logprob: -3.6567859649658203
    3. '       ' → logprob: -6.03178596496582
    4. ' i' → logprob: -6.15678596496582
    5. 'i' → logprob: -7.15678596496582
    6. '   ' → logprob: -9.90678596496582
    7. ' (' → logprob: -10.28178596496582
    8. ':' → logprob: -10.65678596496582
    9. '(s' → logprob: -11.65678596496582
    10. '    ' → logprob: -11.90678596496582

Token 411: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38692253828048706
    2. 'i' → logprob: -1.1369225978851318
    3. '	i' → logprob: -10.136922836303711
    4. ' ' → logprob: -12.386922836303711
    5. ' ' → logprob: -13.261922836303711
    6. '   ' → logprob: -13.261922836303711
    7. 's' → logprob: -13.761922836303711
    8. '(i' → logprob: -13.886922836303711
    9. '    ' → logprob: -14.011922836303711
    10. ',i' → logprob: -15.386922836303711

Token 412: ' trouv' (ID: 40254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034515805542469025
    2. 'print' → logprob: -4.159515857696533
    3. ':' → logprob: -4.284515857696533
    4. '(' → logprob: -6.534515857696533
    5. ',' → logprob: -7.159515857696533
    6. ' print' → logprob: -7.909515857696533
    7. '           ' → logprob: -8.159515380859375
    8. '.' → logprob: -8.284515380859375
    9. ')' → logprob: -8.409515380859375
    10. '   ' → logprob: -8.534515380859375

Token 413: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0034452839754521847
    2. 'é' → logprob: -5.878445148468018
    3. 'e' → logprob: -7.878445148468018
    4. 'ee' → logprob: -8.503445625305176
    5. '   ' → logprob: -10.628445625305176
    6. ' i' → logprob: -12.253445625305176
    7. '#' → logprob: -12.253445625305176
    8. ')' → logprob: -12.378445625305176
    9. '       ' → logprob: -12.628445625305176
    10. '(e' → logprob: -13.003445625305176

Token 414: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02596467360854149
    2. '(i' → logprob: -4.775964736938477
    3. '(' → logprob: -5.400964736938477
    4. ',' → logprob: -5.525964736938477
    5. '()' → logprob: -5.775964736938477
    6. 'print' → logprob: -6.525964736938477
    7. ':' → logprob: -6.650964736938477
    8. '        
' → logprob: -6.900964736938477
    9. '           ' → logprob: -7.275964736938477
    10. '.' → logprob: -8.025964736938477

Token 415: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4724819660186768
    2. 'print' → logprob: -1.7224819660186768
    3. ' i' → logprob: -1.8474819660186768
    4. 'i' → logprob: -1.9724819660186768
    5. 'la' → logprob: -2.4724819660186768
    6. ' l' → logprob: -2.8474819660186768
    7. 'l' → logprob: -2.9724819660186768
    8. ' print' → logprob: -3.8474819660186768
    9. '<|end|>' → logprob: -4.097481727600098
    10. ' ' → logprob: -5.222481727600098

Token 416: ''aide' (ID: 75684)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8450320363044739
    2. 'a' → logprob: -1.845031976699829
    3. ''aide' → logprob: -2.345031976699829
    4. ''instant' → logprob: -2.595031976699829
    5. ''écran' → logprob: -2.720031976699829
    6. ''intérieur' → logprob: -3.470031976699829
    7. '   ' → logprob: -3.845031976699829
    8. ''i' → logprob: -4.345032215118408
    9. 'print' → logprob: -4.470032215118408
    10. ''' → logprob: -4.595032215118408

Token 417: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032043978571891785
    2. '()' → logprob: -4.407043933868408
    3. 'print' → logprob: -4.907043933868408
    4. '(print' → logprob: -5.782043933868408
    5. ')' → logprob: -6.032043933868408
    6. '   ' → logprob: -6.407043933868408
    7. '("' → logprob: -7.032043933868408
    8. '(i' → logprob: -7.407043933868408
    9. ' print' → logprob: -7.532043933868408
    10. '('' → logprob: -7.532043933868408

Token 418: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31329968571662903
    2. ' print' → logprob: -1.3132996559143066
    3. ' i' → logprob: -10.938300132751465
    4. '```' → logprob: -11.813300132751465
    5. 'pr' → logprob: -12.438300132751465
    6. 'prin' → logprob: -13.438300132751465
    7. ' prin' → logprob: -13.813300132751465
    8. ' ' → logprob: -13.938300132751465
    9. '   ' → logprob: -13.938300132751465
    10. 'i' → logprob: -14.188300132751465

Token 419: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023251185193657875
    2. ' print' → logprob: -3.7732512950897217
    3. 'break' → logprob: -12.8982515335083
    4. '   ' → logprob: -13.6482515335083
    5. 'pr' → logprob: -14.3982515335083
    6. '
' → logprob: -14.7732515335083
    7. 'prin' → logprob: -15.3982515335083
    8. '```' → logprob: -15.3982515335083
    9. ' break' → logprob: -16.398250579833984
    10. '#print' → logprob: -16.398250579833984

Token 420: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002478508511558175
    2. ' print' → logprob: -6.00247859954834
    3. 'prin' → logprob: -14.00247859954834
    4. 'pr' → logprob: -14.12747859954834
    5. '   ' → logprob: -14.75247859954834
    6. '```' → logprob: -14.87747859954834
    7. '`' → logprob: -15.00247859954834
    8. ' ' → logprob: -16.627477645874023
    9. ' prin' → logprob: -17.127477645874023
    10. 'pri' → logprob: -17.127477645874023

Token 421: '().
' (ID: 58434)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.014214630238711834
    2. '(' → logprob: -4.264214515686035
    3. '       ' → logprob: -10.889214515686035
    4. '(
' → logprob: -11.014214515686035
    5. '()' → logprob: -11.264214515686035
    6. '(M' → logprob: -13.639214515686035
    7. '   ' → logprob: -14.139214515686035
    8. '(print' → logprob: -15.514214515686035
    9. '((' → logprob: -15.639214515686035
    10. ' (' → logprob: -15.889214515686035

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027849749312736094
    2. '           ' → logprob: -8.87527847290039
    3. 'print' → logprob: -9.00027847290039
    4. ' print' → logprob: -12.12527847290039
    5. '        
' → logprob: -12.75027847290039
    6. '      ' → logprob: -12.75027847290039
    7. '```' → logprob: -13.62527847290039
    8. '   ' → logprob: -14.25027847290039
    9. '     ' → logprob: -14.25027847290039
    10. '               ' → logprob: -14.75027847290039

Token 423: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6949564218521118
    2. 'print' (adapté à ' print') → logprob: -0.6949564218521118
    3. ' print' → logprob: -6.319956302642822
    4. '   ' → logprob: -12.81995677947998
    5. '           ' → logprob: -12.94495677947998
    6. '```' → logprob: -13.31995677947998
    7. '      ' → logprob: -15.06995677947998
    8. '        
' → logprob: -15.56995677947998
    9. '     ' → logprob: -15.94495677947998
    10. '	print' → logprob: -16.194955825805664

Token 424: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.003178071230649948
    2. '(' → logprob: -5.753178119659424
    3. '()' → logprob: -15.503177642822266
    4. ' (' → logprob: -16.128177642822266
    5. '(I' → logprob: -16.503177642822266
    6. '(
' → logprob: -17.628177642822266
    7. '('' → logprob: -18.003177642822266
    8. '(s' → logprob: -18.128177642822266
    9. 'i' → logprob: -18.503177642822266
    10. '((' → logprob: -18.878177642822266

Token 425: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.098748053773306e-05
    2. ')
' → logprob: -10.25006103515625
    3. ' )' → logprob: -10.62506103515625
    4. '       ' → logprob: -14.87506103515625
    5. ')#' → logprob: -15.25006103515625
    6. '))' → logprob: -15.50006103515625
    7. ')`' → logprob: -15.87506103515625
    8. '   ' → logprob: -16.50006103515625
    9. ')

' → logprob: -16.62506103515625
    10. ')}' → logprob: -17.00006103515625

Token 426: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05356813967227936
    2. '<|end|>' → logprob: -3.053568124771118
    3. '[' → logprob: -6.303568363189697
    4. ' ' → logprob: -7.178568363189697
    5. '#' → logprob: -7.428568363189697
    6. '.' → logprob: -7.803568363189697
    7. '(' → logprob: -8.303567886352539
    8. ':' → logprob: -8.303567886352539
    9. ']' → logprob: -8.428567886352539
    10. '}' → logprob: -8.803567886352539

Token 427: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11667557060718536
    2. '<|end|>' → logprob: -2.241675615310669
    3. '
' → logprob: -7.36667537689209
    4. '   ' → logprob: -7.61667537689209
    5. 'break' → logprob: -7.86667537689209
    6. ' break' → logprob: -7.99167537689209
    7. '\n' → logprob: -8.11667537689209
    8. '        
' → logprob: -8.11667537689209
    9. '#' (adapté à ' #') → logprob: -8.24167537689209
    10. '	break' → logprob: -8.24167537689209

Token 428: ' On' (ID: 2160)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0046326881274580956
    2. '       ' → logprob: -5.504632472991943
    3. ' break' → logprob: -7.504632472991943
    4. '	break' → logprob: -13.254632949829102
    5. '   ' → logprob: -13.754632949829102
    6. 'b' → logprob: -15.004632949829102
    7. 'br' → logprob: -16.0046329498291
    8. '        
' → logprob: -16.8796329498291
    9. '_break' → logprob: -16.8796329498291
    10. 'Break' → logprob: -17.2546329498291

Token 429: ' sort' (ID: 4506)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2519802451133728
    2. 'break' → logprob: -1.5019803047180176
    3. '   ' → logprob: -11.12697982788086
    4. '	break' → logprob: -11.50197982788086
    5. '_break' → logprob: -11.62697982788086
    6. '    ' → logprob: -11.87697982788086
    7. '       ' → logprob: -12.37697982788086
    8. '#' → logprob: -13.87697982788086
    9. '-break' → logprob: -13.87697982788086
    10. '    
' → logprob: -14.75197982788086

Token 430: ' immédiatement' (ID: 100743)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5778006911277771
    2. '<|end|>' → logprob: -0.9528006911277771
    3. ' de' → logprob: -4.327800750732422
    4. '<|end|>' → logprob: -4.952800750732422
    5. '        ' → logprob: -5.077800750732422
    6. ' the' → logprob: -5.452800750732422
    7. 'break' → logprob: -5.702800750732422
    8. ')' → logprob: -5.952800750732422
    9. ' break' → logprob: -5.952800750732422
    10. ' from' → logprob: -6.077800750732422

Token 431: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1255534589290619
    2. ' du' → logprob: -2.2505533695220947
    3. ' la' → logprob: -5.500553607940674
    4. 'de' → logprob: -5.875553607940674
    5. ' le' → logprob: -6.750553607940674
    6. ' from' → logprob: -7.000553607940674
    7. 'du' → logprob: -7.125553607940674
    8. '       ' → logprob: -7.125553607940674
    9. 'from' → logprob: -7.750553607940674
    10. ' the' → logprob: -8.000553131103516

Token 432: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.25343844294548035
    2. 'la' → logprob: -1.5034384727478027
    3. ' the' → logprob: -7.378438472747803
    4. 'the' → logprob: -7.503438472747803
    5. 'for' → logprob: -8.878437995910645
    6. ' boucle' → logprob: -9.503437995910645
    7. 'l' → logprob: -10.003437995910645
    8. ' loop' → logprob: -10.753437995910645
    9. 'le' → logprob: -11.253437995910645
    10. 'loop' → logprob: -11.503437995910645

Token 433: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.20362932980060577
    2. 'for' → logprob: -2.4536292552948
    3. ' boucle' → logprob: -2.8286292552948
    4. 'loop' → logprob: -3.3286292552948
    5. ' loop' → logprob: -6.578629493713379
    6. ' for' → logprob: -6.828629493713379
    7. 'b' → logprob: -7.328629493713379
    8. ' bou' → logprob: -9.328629493713379
    9. 'bloc' → logprob: -10.328629493713379
    10. 'la' → logprob: -10.703629493713379

Token 434: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17351631820201874
    2. '<|end|>' → logprob: -2.298516273498535
    3. '.' → logprob: -3.923516273498535
    4. 'break' → logprob: -4.173516273498535
    5. '	break' → logprob: -5.298516273498535
    6. '	' → logprob: -5.673516273498535
    7. ' break' → logprob: -5.798516273498535
    8. '	       ' → logprob: -6.173516273498535
    9. '<|end|>' → logprob: -6.423516273498535
    10. '           ' → logprob: -6.548516273498535

Token 435: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04105926305055618
    2. '<|end|>' → logprob: -3.2910592555999756
    3. '.' → logprob: -6.666059494018555
    4. '        
' → logprob: -7.791059494018555
    5. 'break' → logprob: -7.916059494018555
    6. '<|end|>' → logprob: -8.916059494018555
    7. '	       ' → logprob: -9.166059494018555
    8. '        ' → logprob: -9.291059494018555
    9. ' break' → logprob: -9.541059494018555
    10. '	' → logprob: -9.541059494018555

Token 436: ' l' (ID: 305)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.018143394961953163
    2. 'la' → logprob: -5.143143177032471
    3. ' break' → logprob: -5.268143177032471
    4. 'le' → logprob: -5.393143177032471
    5. '   ' → logprob: -6.768143177032471
    6. ' la' → logprob: -7.018143177032471
    7. '       ' → logprob: -9.393143653869629
    8. ' le' → logprob: -9.643143653869629
    9. '```' → logprob: -9.643143653869629
    10. '	break' → logprob: -9.893143653869629

Token 437: ''in' (ID: 17942)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6830415725708008
    2. 'break' → logprob: -0.9330415725708008
    3. 'e' → logprob: -2.683041572570801
    4. ' break' → logprob: -3.558041572570801
    5. '_break' → logprob: -6.433041572570801
    6. '```' → logprob: -7.058041572570801
    7. ''a' → logprob: -7.683041572570801
    8. 'b' → logprob: -8.0580415725708
    9. 'reak' → logprob: -8.3080415725708
    10. 'i' → logprob: -8.9330415725708

Token 438: 'struction' (ID: 5316)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.17600710690021515
    2. 'struction' → logprob: -2.426007032394409
    3. ' break' → logprob: -2.926007032394409
    4. 't' → logprob: -4.801007270812988
    5. '```' → logprob: -6.176007270812988
    6. 'struct' → logprob: -6.426007270812988
    7. 'it' → logprob: -6.676007270812988
    8. 'tru' → logprob: -7.176007270812988
    9. 'rupt' → logprob: -7.301007270812988
    10. 'br' → logprob: -7.426007270812988

Token 439: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0024758970830589533
    2. ' break' → logprob: -6.002475738525391
    3. '	break' → logprob: -15.62747573852539
    4. 'br' → logprob: -16.25247573852539
    5. '_break' → logprob: -18.62747573852539
    6. 'breaker' → logprob: -19.12747573852539
    7. 'b' → logprob: -19.25247573852539
    8. 'exit' → logprob: -19.75247573852539
    9. '   ' → logprob: -19.87747573852539
    10. '-break' → logprob: -20.37747573852539

Token 440: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1605757623910904
    2. '<|end|>' → logprob: -2.0355758666992188
    3. ' break' → logprob: -5.160575866699219
    4. '
' → logprob: -6.035575866699219
    5. 'break' → logprob: -6.160575866699219
    6. '	' → logprob: -6.410575866699219
    7. '.' → logprob: -6.535575866699219
    8. '	break' → logprob: -7.035575866699219
    9. '   ' → logprob: -7.535575866699219
    10. '           ' → logprob: -7.660575866699219

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054570674896240234
    2. '	break' → logprob: -4.05457067489624
    3. 'break' → logprob: -4.17957067489624
    4. ' break' → logprob: -4.42957067489624
    5. '	' → logprob: -4.92957067489624
    6. '   ' → logprob: -6.80457067489624
    7. '
' → logprob: -10.554571151733398
    8. '```' → logprob: -10.554571151733398
    9. '           ' → logprob: -11.054571151733398
    10. 'Break' → logprob: -11.179571151733398

Token 442: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.06778031587600708
    2. ' break' → logprob: -2.8177802562713623
    3. '       ' → logprob: -5.192780494689941
    4. '	break' → logprob: -8.442780494689941
    5. 'b' → logprob: -11.567780494689941
    6. '	' → logprob: -11.817780494689941
    7. '   ' → logprob: -12.817780494689941
    8. '```' → logprob: -13.817780494689941
    9. '_break' → logprob: -14.317780494689941
    10. '           ' → logprob: -14.567780494689941

Token 443: ' Cela' (ID: 44403)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.00889605563133955
    2. ' break' → logprob: -4.7588958740234375
    3. '       ' → logprob: -8.383895874023438
    4. '	break' → logprob: -9.883895874023438
    5. '   ' → logprob: -13.758895874023438
    6. 'b' → logprob: -14.883895874023438
    7. 'br' → logprob: -15.633895874023438
    8. '```' → logprob: -15.883895874023438
    9. 'Break' → logprob: -16.508895874023438
    10. 'bre' → logprob: -17.008895874023438

Token 444: ' signifie' (ID: 81149)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3857586085796356
    2. ' permet' → logprob: -2.010758638381958
    3. ' continue' → logprob: -2.760758638381958
    4. ' signifie' → logprob: -3.135758638381958
    5. ' stop' → logprob: -3.510758638381958
    6. ' return' → logprob: -5.010758399963379
    7. 'break' → logprob: -5.510758399963379
    8. ' termine' → logprob: -5.635758399963379
    9. ' exit' → logprob: -5.760758399963379
    10. ' 
' → logprob: -5.885758399963379

Token 445: ' qu' (ID: 474)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.640855610370636
    2. ' que' → logprob: -0.890855610370636
    3. '<|end|>' → logprob: -3.765855550765991
    4. '        ' → logprob: -4.76585578918457
    5. ' qu' → logprob: -4.89085578918457
    6. ' that' → logprob: -5.14085578918457
    7. ' la' → logprob: -5.51585578918457
    8. ' ' → logprob: -6.14085578918457
    9. ' le' → logprob: -6.14085578918457
    10. '.' → logprob: -6.39085578918457

Token 446: ''après' (ID: 105130)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.199188470840454
    2. '       ' → logprob: -1.824188470840454
    3. ' ' → logprob: -1.824188470840454
    4. ' ' → logprob: -2.199188470840454
    5. ' la' → logprob: -2.574188470840454
    6. ' the' → logprob: -2.949188470840454
    7. ' break' → logprob: -3.199188470840454
    8. ' que' → logprob: -3.824188470840454
    9. '        ' → logprob: -4.324188232421875
    10. ' l' → logprob: -4.949188232421875

Token 447: ' avoir' (ID: 16595)
  Prédit: ' avoir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoir' → logprob: -0.8643666505813599
    2. ' la' → logprob: -1.4893666505813599
    3. ' le' → logprob: -2.2393665313720703
    4. 'la' → logprob: -2.8643665313720703
    5. 'break' → logprob: -3.1143665313720703
    6. 'le' → logprob: -3.2393665313720703
    7. 'c' → logprob: -3.7393665313720703
    8. 'l' → logprob: -3.9893665313720703
    9. 'avoir' → logprob: -4.11436653137207
    10. '       ' → logprob: -4.61436653137207

Token 448: ' trouvé' (ID: 60081)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5919262170791626
    2. ' trouvé' → logprob: -1.3419262170791626
    3. ' break' → logprob: -2.091926097869873
    4. 'tr' → logprob: -3.466926097869873
    5. 'find' → logprob: -4.841926097869873
    6. 'print' → logprob: -5.341926097869873
    7. ' find' → logprob: -5.716926097869873
    8. '   ' → logprob: -6.216926097869873
    9. ' ' → logprob: -6.466926097869873
    10. ' trouve' → logprob: -6.591926097869873

Token 449: ' et' (ID: 859)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5596039891242981
    2. ' ' → logprob: -1.8096039295196533
    3. '<|end|>' → logprob: -2.0596039295196533
    4. ' la' → logprob: -3.0596039295196533
    5. ' the' → logprob: -3.1846039295196533
    6. ' l' → logprob: -3.9346039295196533
    7. ' break' → logprob: -4.059604167938232
    8. 'the' → logprob: -5.559604167938232
    9. ' ' → logprob: -6.434604167938232
    10. 'le' → logprob: -6.684604167938232

Token 450: ' affich' (ID: 90179)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2843264937400818
    2. 'tr' → logprob: -2.0343265533447266
    3. ' break' → logprob: -2.9093265533447266
    4. ' trouvé' → logprob: -3.4093265533447266
    5. 'print' → logprob: -4.159326553344727
    6. 'br' → logprob: -6.159326553344727
    7. 'rupt' → logprob: -6.284326553344727
    8. '```' → logprob: -6.409326553344727
    9. 'arr' → logprob: -6.659326553344727
    10. '#' → logprob: -7.034326553344727

Token 451: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.003229528898373246
    2. 'i' → logprob: -6.87822961807251
    3. 'er' → logprob: -7.12822961807251
    4. 'e' → logprob: -8.003229141235352
    5. 'break' → logprob: -8.753229141235352
    6. ' break' → logprob: -8.753229141235352
    7. ' ' → logprob: -8.878229141235352
    8. '   ' → logprob: -9.378229141235352
    9. 'onné' → logprob: -9.878229141235352
    10. 'ié' → logprob: -9.878229141235352

Token 452: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31957903504371643
    2. ' le' → logprob: -1.694579005241394
    3. ' la' → logprob: -2.9445791244506836
    4. ' l' → logprob: -4.319579124450684
    5. ' the' → logprob: -4.944579124450684
    6. ' break' → logprob: -5.569579124450684
    7. '<|end|>' → logprob: -5.569579124450684
    8. 'le' → logprob: -5.819579124450684
    9. 'the' → logprob: -6.694579124450684
    10. ' ' → logprob: -7.069579124450684

Token 453: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.2455340176820755
    2. 'div' → logprob: -1.745534062385559
    3. ' premier' → logprob: -3.2455339431762695
    4. 'plus' → logprob: -6.3705339431762695
    5. ' div' → logprob: -7.3705339431762695
    6. 'first' → logprob: -7.4955339431762695
    7. ' plus' → logprob: -8.24553394317627
    8. ' meilleur' → logprob: -8.49553394317627
    9. 'i' → logprob: -8.49553394317627
    10. ' ' → logprob: -8.62053394317627

Token 454: ' div' (ID: 4223)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10749000310897827
    2. ' break' → logprob: -2.857490062713623
    3. 'div' → logprob: -4.107490062713623
    4. ' divis' → logprob: -4.232490062713623
    5. ' div' → logprob: -5.232490062713623
    6. ' ' → logprob: -6.107490062713623
    7. ' divisor' → logprob: -6.857490062713623
    8. ' divisible' → logprob: -6.857490062713623
    9. ' espace' → logprob: -7.232490062713623
    10. '  ' → logprob: -8.107489585876465

Token 455: 'iseur' (ID: 108637)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1792585551738739
    2. 'reak' → logprob: -2.4292585849761963
    3. 're' → logprob: -3.1792585849761963
    4. 'ri' → logprob: -4.679258346557617
    5. 'rie' → logprob: -5.054258346557617
    6. 'ré' → logprob: -6.304258346557617
    7. 'ruit' → logprob: -6.429258346557617
    8. 'roi' → logprob: -6.554258346557617
    9. 'ro' → logprob: -6.929258346557617
    10. 'iseur' → logprob: -7.179258346557617

Token 456: ' trouvé' (ID: 60081)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6731116771697998
    2. ',' → logprob: -1.0481116771697998
    3. ' ,' → logprob: -3.7981116771698
    4. '<|end|>' → logprob: -3.7981116771698
    5. 's' → logprob: -4.048111915588379
    6. '.' → logprob: -4.173111915588379
    7. '   ' → logprob: -4.423111915588379
    8. 'i' → logprob: -4.548111915588379
    9. ' i' → logprob: -5.423111915588379
    10. '  ' → logprob: -5.673111915588379

Token 457: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08141207695007324
    2. ' ,' → logprob: -2.7064120769500732
    3. ' ' → logprob: -5.206412315368652
    4. '.' → logprob: -6.581412315368652
    5. ' de' → logprob: -6.706412315368652
    6. ',
' → logprob: -7.581412315368652
    7. ' le' → logprob: -7.581412315368652
    8. 's' → logprob: -7.956412315368652
    9. ' ' → logprob: -7.956412315368652
    10. '<|end|>' → logprob: -8.331412315368652

Token 458: ' part' (ID: 997)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8467221856117249
    2. ' i' → logprob: -0.8467221856117249
    3. ' ' → logprob: -3.72172212600708
    4. ' ce' → logprob: -3.84672212600708
    5. 'for' → logprob: -4.09672212600708
    6. ' for' → logprob: -4.47172212600708
    7. 's' → logprob: -4.59672212600708
    8. 'range' → logprob: -5.34672212600708
    9. 'plus' → logprob: -5.47172212600708
    10. 'div' → logprob: -5.59672212600708

Token 459: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.7027143836021423
    2. 'ut' → logprob: -1.702714443206787
    3. 'êt' → logprob: -2.702714443206787
    4. 'avant' → logprob: -3.202714443206787
    5. 'iquant' → logprob: -3.827714443206787
    6. 'out' → logprob: -4.202714443206787
    7. 'ag' → logprob: -4.452714443206787
    8. '   ' → logprob: -4.577714443206787
    9. 'icipant' → logprob: -4.702714443206787
    10. 'ém' → logprob: -4.827714443206787

Token 460: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7839617133140564
    2. ' du' → logprob: -0.9089617133140564
    3. 'de' → logprob: -2.408961772918701
    4. 'from' → logprob: -3.908961772918701
    5. ' from' → logprob: -4.033961772918701
    6. 'du' → logprob: -4.658961772918701
    7. ' d' → logprob: -6.658961772918701
    8. ' ' → logprob: -7.408961772918701
    9. '   ' → logprob: -7.908961772918701
    10. 'd' → logprob: -8.533961296081543

Token 461: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.17995645105838776
    2. 's' → logprob: -1.9299564361572266
    3. ' ' → logprob: -4.054956436157227
    4. 'i' → logprob: -7.179956436157227
    5. ' i' → logprob: -7.179956436157227
    6. ' l' → logprob: -8.429956436157227
    7. ' la' → logprob: -8.679956436157227
    8. 'l' → logprob: -9.929956436157227
    9. ' )' → logprob: -10.054956436157227
    10. '  ' → logprob: -11.179956436157227

Token 462: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01639585569500923
    2. ')' → logprob: -5.0163960456848145
    3. ' ,' → logprob: -6.1413960456848145
    4. 'e' → logprob: -6.2663960456848145
    5. '.' → logprob: -6.3913960456848145
    6. 's' → logprob: -6.6413960456848145
    7. 'u' → logprob: -8.016395568847656
    8. 'reak' → logprob: -8.016395568847656
    9. '),' → logprob: -8.266395568847656
    10. 'r' → logprob: -8.266395568847656

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026403289288282394
    2. ' le' → logprob: -4.276403427124023
    3. ' la' → logprob: -6.026403427124023
    4. ' on' → logprob: -6.276403427124023
    5. ' ' → logprob: -6.651403427124023
    6. ' ' → logprob: -6.776403427124023
    7. '        ' → logprob: -6.776403427124023
    8. '	' → logprob: -7.651403427124023
    9. ' l' → logprob: -7.651403427124023
    10. '#' → logprob: -7.901403427124023

Token 464: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27343544363975525
    2. '#' (adapté à ' #') → logprob: -2.523435354232788
    3. ' le' → logprob: -3.148435354232788
    4. ' #' → logprob: -3.148435354232788
    5. ' la' → logprob: -3.773435354232788
    6. ' l' → logprob: -4.148435592651367
    7. ' ce' → logprob: -5.398435592651367
    8. ' on' → logprob: -5.523435592651367
    9. '   ' → logprob: -5.648435592651367
    10. '        ' → logprob: -5.773435592651367

Token 465: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7936335802078247
    2. '#' → logprob: -1.9186335802078247
    3. ' le' → logprob: -2.168633460998535
    4. 'le' → logprob: -2.543633460998535
    5. ' la' → logprob: -2.918633460998535
    6. '        ' → logprob: -3.043633460998535
    7. 'l' → logprob: -3.793633460998535
    8. ' on' → logprob: -4.293633460998535
    9. 'la' → logprob: -4.543633460998535
    10. 'stop' → logprob: -4.793633460998535

Token 466: ' programme' (ID: 18190)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.06220417842268944
    2. 'break' → logprob: -2.812204122543335
    3. 'b' → logprob: -8.937204360961914
    4. ' ' → logprob: -9.687204360961914
    5. ' code' → logprob: -10.687204360961914
    6. 'br' → logprob: -11.937204360961914
    7. '#' → logprob: -12.812204360961914
    8. ' ' → logprob: -13.062204360961914
    9. ' b' → logprob: -13.937204360961914
    10. 'r' → logprob: -14.187204360961914

Token 467: ' arr' (ID: 1724)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.07001490890979767
    2. ' s' → logprob: -3.8200149536132812
    3. ' continue' → logprob: -3.8200149536132812
    4. '       ' → logprob: -4.195014953613281
    5. ' stop' → logprob: -5.820014953613281
    6. 'break' → logprob: -6.445014953613281
    7. ' ' → logprob: -6.945014953613281
    8. ' casse' → logprob: -7.320014953613281
    9. ' quitte' → logprob: -8.195014953613281
    10. ' va' → logprob: -8.570014953613281

Token 468: 'ête' (ID: 16808)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39951589703559875
    2. 'ête' → logprob: -1.6495158672332764
    3. 'rompt' → logprob: -3.1495158672332764
    4. 'onte' → logprob: -4.1495161056518555
    5. '       ' → logprob: -4.2745161056518555
    6. 'ro' → logprob: -4.8995161056518555
    7. 're' → logprob: -4.8995161056518555
    8. 'reak' → logprob: -4.8995161056518555
    9. 'êt' → logprob: -5.5245161056518555
    10. 'o' → logprob: -5.7745161056518555

Token 469: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.888960063457489
    2. ' la' → logprob: -1.0139601230621338
    3. '<|end|>' → logprob: -1.6389601230621338
    4. ' le' → logprob: -4.888959884643555
    5. 'l' → logprob: -5.013959884643555
    6. 'le' → logprob: -5.138959884643555
    7. ' ' → logprob: -5.638959884643555
    8. 'la' → logprob: -6.138959884643555
    9. '<|end|>' → logprob: -6.638959884643555
    10. ' the' → logprob: -6.638959884643555

Token 470: ' recherche' (ID: 24975)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.1104975938796997
    2. 'ex' → logprob: -1.3604975938796997
    3. 'bou' → logprob: -1.4854975938796997
    4. 'loop' → logprob: -2.11049747467041
    5. ' boucle' → logprob: -4.11049747467041
    6. 'b' → logprob: -4.23549747467041
    7. 'break' → logprob: -4.61049747467041
    8. 'execution' → logprob: -4.73549747467041
    9. 'for' → logprob: -5.11049747467041
    10. 'search' → logprob: -5.73549747467041

Token 471: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 472: ' sort' (ID: 4506)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.03436918556690216
    2. 'break' → logprob: -3.7843692302703857
    3. ' stop' → logprob: -5.909368991851807
    4. ' quitte' → logprob: -5.909368991851807
    5. ' s' → logprob: -6.284368991851807
    6. ' exit' → logprob: -6.659368991851807
    7. ' continue' → logprob: -7.409368991851807
    8. ' ' → logprob: -7.659368991851807
    9. ' cesse' → logprob: -8.409369468688965
    10. '       ' → logprob: -9.034369468688965

Token 473: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 474: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4137503206729889
    2. 'la' → logprob: -1.2887502908706665
    3. 'for' → logprob: -2.913750410079956
    4. ' for' → logprob: -5.788750171661377
    5. 'l' → logprob: -5.913750171661377
    6. ' ' → logprob: -6.913750171661377
    7. 'the' → logprob: -7.413750171661377
    8. ' the' → logprob: -7.663750171661377
    9. ' boucle' → logprob: -7.663750171661377
    10. 'le' → logprob: -8.788750648498535

Token 475: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.26863789558410645
    2. ' boucle' → logprob: -1.5186378955841064
    3. 'loop' → logprob: -4.518637657165527
    4. 'for' → logprob: -5.518637657165527
    5. ' bou' → logprob: -7.143637657165527
    6. 'b' → logprob: -7.643637657165527
    7. ' loop' → logprob: -8.393637657165527
    8. '```' → logprob: -9.518637657165527
    9. 'break' → logprob: -9.893637657165527
    10. ' for' → logprob: -10.893637657165527

Token 476: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: '       ' (ID: 309)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.14738407731056213
    2. '<|end|>' → logprob: -2.3973841667175293
    3. '	break' → logprob: -4.397384166717529
    4. '       ' → logprob: -4.397384166717529
    5. ' break' → logprob: -4.522384166717529
    6. '   ' → logprob: -4.772384166717529
    7. '```' → logprob: -6.772384166717529
    8. 'b' → logprob: -8.272383689880371
    9. '<|end|>' → logprob: -8.772383689880371
    10. 'Break' → logprob: -9.272383689880371

Token 478: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.22301870584487915
    2. '       ' → logprob: -1.7230186462402344
    3. ' break' → logprob: -3.9730186462402344
    4. '	break' → logprob: -6.098018646240234
    5. '	' → logprob: -8.223018646240234
    6. '   ' → logprob: -10.723018646240234
    7. '```' → logprob: -11.973018646240234
    8. ' ' → logprob: -12.598018646240234
    9. '    ' → logprob: -13.223018646240234
    10. ' ' → logprob: -13.598018646240234


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 476
Tokens correctement prédits (1ère position, stricte): 108
Tokens correctement prédits (1ère position, avec adaptation): 109
Tokens correctement prédits (top 10): 273
Précision stricte (1ère position): 22.69%
Précision adaptée (1ère position): 22.90%
Précision (top 10): 57.35%
================================================================================
