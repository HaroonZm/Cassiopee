================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

def _gcd(x, y): return math.gcd(x, y)

inp = input
lst = lambda: list(map(int, inp().split()))
n, m = lst()
s = input()
t = input()

def lcm(x, y):
    return x * y // _gcd(x, y)

L = lcm(n, m)
N1, N2 = n, m

from functools import reduce

positions = []
cnt = (L // N2) * (L // N1)
for z in range(L // cnt):
    positions.append((z * L // N2, z * L // N1))

i = 0
while i < len(positions):
    a_idx, b_idx = positions[i]
    if s[a_idx] != t[b_idx]:
        print(-1)
        quit()
    i += 1

print(L)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002430951688438654
    2. '```' → logprob: -7.2524309158325195
    3. '\n' → logprob: -7.3774309158325195
    4. '\' → logprob: -7.8774309158325195
    5. 'import' → logprob: -8.00243091583252
    6. '<|end|>' → logprob: -9.25243091583252
    7. '.pi' → logprob: -10.25243091583252
    8. 'a' → logprob: -11.00243091583252
    9. '.e' → logprob: -11.12743091583252
    10. '<|end|>' → logprob: -11.12743091583252

Token 4: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009838729165494442
    2. ' calculate' → logprob: -6.009838581085205
    3. ' math' → logprob: -6.009838581085205
    4. ' sqrt' → logprob: -6.134838581085205
    5. ' space' → logprob: -7.384838581085205
    6. '_' → logprob: -7.384838581085205
    7. ' factorial' → logprob: -7.384838581085205
    8. ' ' → logprob: -8.884839057922363
    9. ' f' → logprob: -9.134839057922363
    10. ' square' → logprob: -9.634839057922363

Token 5: 'g' (ID: 70)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5335261225700378
    2. 'sqrt' → logprob: -1.4085261821746826
    3. 'pow' → logprob: -2.5335261821746826
    4. 'sin' → logprob: -3.5335261821746826
    5. '_s' → logprob: -3.5335261821746826
    6. '_' → logprob: -4.9085259437561035
    7. 'p' → logprob: -5.7835259437561035
    8. 'e' → logprob: -6.2835259437561035
    9. 'hyp' → logprob: -6.2835259437561035
    10. 'ceil' → logprob: -6.2835259437561035

Token 6: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.34953510761260986
    2. '_cd' → logprob: -2.0995349884033203
    3. '_g' → logprob: -2.4745349884033203
    4. 'e' → logprob: -3.2245349884033203
    5. 'a' → logprob: -4.22453498840332
    6. 'et' → logprob: -4.84953498840332
    7. '_e' → logprob: -5.22453498840332
    8. '_' → logprob: -5.47453498840332
    9. '_get' → logprob: -5.59953498840332
    10. '_c' → logprob: -6.47453498840332

Token 7: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028210394084453583
    2. ' (' → logprob: -6.87782096862793
    3. '(a' → logprob: -7.37782096862793
    4. '<|end|>' → logprob: -7.87782096862793
    5. '_' → logprob: -8.00282096862793
    6. '(x' → logprob: -8.75282096862793
    7. '<|end|>' → logprob: -9.37782096862793
    8. '```' → logprob: -9.62782096862793
    9. '(_' → logprob: -10.50282096862793
    10. '(user' → logprob: -11.12782096862793

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006781232077628374
    2. ',y' → logprob: -8.250678062438965
    3. ',x' → logprob: -8.250678062438965
    4. ' ,' → logprob: -9.125678062438965
    5. ',g' → logprob: -11.375678062438965
    6. ')' → logprob: -11.750678062438965
    7. ',a' → logprob: -12.375678062438965
    8. ' ' → logprob: -12.750678062438965
    9. ',)' → logprob: -12.750678062438965
    10. ',n' → logprob: -13.000678062438965

Token 9: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3868839740753174
    2. 'y' → logprob: -1.1368839740753174
    3. '<|end|>' → logprob: -12.011883735656738
    4. ' ' → logprob: -12.511883735656738
    5. '	y' → logprob: -13.136883735656738
    6. ''y' → logprob: -15.386883735656738
    7. ')' → logprob: -15.636883735656738
    8. ')y' → logprob: -15.761883735656738
    9. '<|end|>' → logprob: -15.761883735656738
    10. '_y' → logprob: -16.011884689331055

Token 10: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0069925421848893166
    2. ')' → logprob: -5.006992340087891
    3. '):
' → logprob: -8.38199234008789
    4. ':' → logprob: -11.00699234008789
    5. ',' → logprob: -11.50699234008789
    6. ''):' → logprob: -12.38199234008789
    7. '<|end|>' → logprob: -12.63199234008789
    8. '   ' → logprob: -12.88199234008789
    9. '**' → logprob: -13.38199234008789
    10. ' ):' → logprob: -13.63199234008789

Token 11: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8124120235443115
    2. ':' → logprob: -1.3124120235443115
    3. ' return' → logprob: -2.5624120235443115
    4. '):' → logprob: -2.6874120235443115
    5. '```' → logprob: -3.4374120235443115
    6. '():' → logprob: -3.5624120235443115
    7. ' ' → logprob: -3.8124120235443115
    8. 'return' → logprob: -4.062412261962891
    9. ':return' → logprob: -4.562412261962891
    10. ' :' → logprob: -4.687412261962891

Token 12: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.03037017211318016
    2. 'math' → logprob: -3.6553702354431152
    3. ' x' → logprob: -5.530370235443115
    4. 'x' → logprob: -9.530369758605957
    5. ' ' → logprob: -11.155369758605957
    6. '(math' → logprob: -11.780369758605957
    7. ' (' → logprob: -14.405369758605957
    8. ' ' → logprob: -14.905369758605957
    9. '```' → logprob: -15.280369758605957
    10. ' a' → logprob: -15.530369758605957

Token 13: '.g' (ID: 1940)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02475266344845295
    2. '.sqrt' → logprob: -4.149752616882324
    3. '.g' → logprob: -4.774752616882324
    4. ' .' → logprob: -9.899752616882324
    5. '.ceil' → logprob: -10.149752616882324
    6. '.factor' → logprob: -10.149752616882324
    7. '.f' → logprob: -10.649752616882324
    8. '.atan' → logprob: -10.774752616882324
    9. '.floor' → logprob: -11.024752616882324
    10. '.pow' → logprob: -11.524752616882324

Token 14: 'cd' (ID: 8301)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.18022775650024414
    2. 'cd' → logprob: -1.8052277565002441
    3. '	c' → logprob: -8.555227279663086
    4. 'cdf' → logprob: -9.555227279663086
    5. ' c' → logprob: -10.055227279663086
    6. '.c' → logprob: -10.180227279663086
    7. '	cd' → logprob: -10.555227279663086
    8. 'cmath' → logprob: -10.805227279663086
    9. '```' → logprob: -11.430227279663086
    10. 'cdr' → logprob: -11.430227279663086

Token 15: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20143458247184753
    2. '(x' → logprob: -1.70143461227417
    3. '((' → logprob: -12.201434135437012
    4. '(math' → logprob: -12.201434135437012
    5. ' (' → logprob: -12.576434135437012
    6. '```' → logprob: -13.201434135437012
    7. '(
' → logprob: -13.826434135437012
    8. '(y' → logprob: -14.451434135437012
    9. '(

' → logprob: -14.701434135437012
    10. '("("' → logprob: -14.951434135437012

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002326055895537138
    2. ',y' → logprob: -6.127326011657715
    3. ' ,' → logprob: -9.127326011657715
    4. ')' → logprob: -11.377326011657715
    5. 'y' → logprob: -12.377326011657715
    6. ' ' → logprob: -12.502326011657715
    7. ',
' → logprob: -12.502326011657715
    8. '+' → logprob: -12.502326011657715
    9. '-' → logprob: -14.752326011657715
    10. '+,' → logprob: -14.752326011657715

Token 17: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931619048118591
    2. ' y' → logprob: -0.6931619048118591
    3. ' ' → logprob: -11.693161964416504
    4. ')' → logprob: -13.193161964416504
    5. ')y' → logprob: -13.568161964416504
    6. 'x' → logprob: -14.193161964416504
    7. '	y' → logprob: -14.693161964416504
    8. '1' → logprob: -15.193161964416504
    9. ' ' → logprob: -15.443161964416504
    10. '    ' → logprob: -15.568161964416504

Token 18: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. '))' → logprob: -12.000006675720215
    3. ' )' → logprob: -16.2500057220459
    4. ')))' → logprob: -17.7500057220459
    5. ')
' → logprob: -18.0000057220459
    6. ')return' → logprob: -18.5000057220459
    7. '')' → logprob: -18.8750057220459
    8. '`)' → logprob: -19.1250057220459
    9. ' ' → logprob: -19.2500057220459
    10. '),' → logprob: -19.3750057220459

Token 19: 'inp' (ID: 74055)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004033402539789677
    2. '(
' → logprob: -6.00403356552124
    3. '
' → logprob: -8.129033088684082
    4. 'def' → logprob: -8.504033088684082
    5. '(

' → logprob: -8.504033088684082
    6. '\' → logprob: -9.129033088684082
    7. '#' → logprob: -9.254033088684082
    8. '*' → logprob: -9.504033088684082
    9. ')' → logprob: -9.504033088684082
    10. '_' → logprob: -9.629033088684082

Token 20: ' =' (ID: 314)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -7.100059156073257e-05
    2. 'uts' → logprob: -10.250070571899414
    3. 'u' → logprob: -11.125070571899414
    4. '(' → logprob: -11.875070571899414
    5. '[' → logprob: -12.625070571899414
    6. '()' → logprob: -12.875070571899414
    7. '_ut' → logprob: -13.125070571899414
    8. 'ут' → logprob: -13.875070571899414
    9. ' ut' → logprob: -14.250070571899414
    10. '('' → logprob: -14.250070571899414

Token 21: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47763729095458984
    2. 'input' → logprob: -1.1026372909545898
    3. ' int' → logprob: -4.22763729095459
    4. ' []' → logprob: -4.85263729095459
    5. 'int' → logprob: -5.10263729095459
    6. ' [' → logprob: -5.22763729095459
    7. ' list' → logprob: -5.60263729095459
    8. '[int' → logprob: -5.72763729095459
    9. '[]' → logprob: -6.47763729095459
    10. ' ' → logprob: -6.85263729095459

Token 22: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00655420171096921
    2. '('' → logprob: -5.756554126739502
    3. '("("' → logprob: -6.256554126739502
    4. '()' → logprob: -7.131554126739502
    5. ')' → logprob: -9.50655460357666
    6. '("")' → logprob: -9.63155460357666
    7. '```' → logprob: -9.63155460357666
    8. ' ' → logprob: -9.75655460357666
    9. '(
' → logprob: -10.00655460357666
    10. '(

' → logprob: -10.00655460357666

Token 23: 'lst' (ID: 65430)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06112284958362579
    2. '()' → logprob: -3.0611228942871094
    3. '.' → logprob: -5.686122894287109
    4. '(
' → logprob: -6.061122894287109
    5. '=' → logprob: -6.811122894287109
    6. '_' → logprob: -6.936122894287109
    7. 'def' → logprob: -7.186122894287109
    8. ')' → logprob: -7.311122894287109
    9. '('' → logprob: -7.686122894287109
    10. ',' → logprob: -7.686122894287109

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8554390668869019
    2. '(' → logprob: -1.1054390668869019
    3. '=' → logprob: -1.4804390668869019
    4. '[' → logprob: -4.605439186096191
    5. '.' → logprob: -6.730439186096191
    6. '=[]' → logprob: -6.730439186096191
    7. ')' → logprob: -6.980439186096191
    8. '_' → logprob: -7.105439186096191
    9. ',' → logprob: -7.230439186096191
    10. ' (' → logprob: -7.980439186096191

Token 25: ' lambda' (ID: 27871)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09145518392324448
    2. ' []' → logprob: -2.7164552211761475
    3. 'list' → logprob: -4.216454982757568
    4. ' list' → logprob: -5.716454982757568
    5. '[' → logprob: -6.716454982757568
    6. '[list' → logprob: -7.091454982757568
    7. '[input' → logprob: -8.091455459594727
    8. '[int' → logprob: -8.091455459594727
    9. ' [' → logprob: -8.466455459594727
    10. 'inp' → logprob: -9.341455459594727

Token 26: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1503210961818695
    2. ' s' → logprob: -2.6503210067749023
    3. ' lst' → logprob: -3.1503210067749023
    4. ' a' → logprob: -4.900321006774902
    5. ' inp' → logprob: -4.900321006774902
    6. 'x' → logprob: -5.400321006774902
    7. ' input' → logprob: -6.275321006774902
    8. 's' → logprob: -6.775321006774902
    9. ' t' → logprob: -7.150321006774902
    10. ' n' → logprob: -7.650321006774902

Token 27: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3893910348415375
    2. 'list' → logprob: -1.1393910646438599
    3. '[list' → logprob: -6.88939094543457
    4. '[' → logprob: -7.01439094543457
    5. ' [' → logprob: -8.01439094543457
    6. '[int' → logprob: -8.63939094543457
    7. '[input' → logprob: -10.13939094543457
    8. 'map' → logprob: -11.38939094543457
    9. 'input' → logprob: -11.51439094543457
    10. ' input' → logprob: -11.51439094543457

Token 28: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.003117229789495468
    2. '(' → logprob: -5.878117084503174
    3. '(int' → logprob: -8.628117561340332
    4. '(inp' → logprob: -9.253117561340332
    5. '(range' → logprob: -11.253117561340332
    6. '()' → logprob: -11.378117561340332
    7. '(input' → logprob: -11.753117561340332
    8. '(eval' → logprob: -13.378117561340332
    9. '(
' → logprob: -13.628117561340332
    10. 'map' → logprob: -14.128117561340332

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015066476771607995
    2. '(' → logprob: -6.751506805419922
    3. 'int' → logprob: -8.251506805419922
    4. '(str' → logprob: -10.376506805419922
    5. '(inp' → logprob: -11.376506805419922
    6. ',int' → logprob: -11.626506805419922
    7. '<int' → logprob: -12.126506805419922
    8. '[int' → logprob: -12.376506805419922
    9. '(input' → logprob: -12.501506805419922
    10. '<|end|>' → logprob: -12.751506805419922

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25825750827789307
    2. ',input' → logprob: -1.883257508277893
    3. '(inp' → logprob: -2.8832573890686035
    4. '(input' → logprob: -4.6332573890686035
    5. '(' → logprob: -5.3832573890686035
    6. 'input' → logprob: -5.5082573890686035
    7. ')' → logprob: -8.258257865905762
    8. ' ,' → logprob: -8.383257865905762
    9. 'inp' → logprob: -8.383257865905762
    10. ',in' → logprob: -9.133257865905762

Token 31: ' inp' (ID: 64450)
  Prédit: 'inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inp' → logprob: -0.07947801053524017
    2. ' inp' → logprob: -2.5794780254364014
    3. 'input' → logprob: -7.954477787017822
    4. '(inp' → logprob: -8.45447826385498
    5. ' input' → logprob: -11.07947826385498
    6. ')' → logprob: -12.95447826385498
    7. 'Inp' → logprob: -13.45447826385498
    8. 'instr' → logprob: -13.95447826385498
    9. 'in' → logprob: -14.20447826385498
    10. ' ' → logprob: -14.95447826385498

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005553543101996183
    2. '()' → logprob: -5.255553722381592
    3. '()))' → logprob: -8.255553245544434
    4. '())))' → logprob: -10.505553245544434
    5. '())' → logprob: -11.755553245544434
    6. '()));' → logprob: -12.005553245544434
    7. ' ().' → logprob: -12.380553245544434
    8. '.' → logprob: -12.880553245544434
    9. '))' → logprob: -13.005553245544434
    10. ')' → logprob: -13.255553245544434

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009199160267598927
    2. 'strip' → logprob: -7.000919818878174
    3. 'rstrip' → logprob: -12.250920295715332
    4. ' split' → logprob: -12.625920295715332
    5. '(split' → logprob: -15.625920295715332
    6. 'spl' → logprob: -15.875920295715332
    7. ' strip' → logprob: -18.250919342041016
    8. '.split' → logprob: -19.625919342041016
    9. ' ' → logprob: -19.875919342041016
    10. ')' → logprob: -19.875919342041016

Token 34: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.47662678360939026
    2. '))' → logprob: -1.2266267538070679
    3. ')))' → logprob: -2.9766268730163574
    4. '())' → logprob: -4.226626873016357
    5. '())))' → logprob: -4.601626873016357
    6. '()' → logprob: -4.851626873016357
    7. ')' → logprob: -6.101626873016357
    8. '(' → logprob: -8.9766263961792
    9. '()))
' → logprob: -10.6016263961792
    10. '())))
' → logprob: -11.8516263961792

Token 35: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5277550220489502
    2. 'def' → logprob: -1.1527550220489502
    3. 'a' → logprob: -3.52775502204895
    4. 'd' → logprob: -3.52775502204895
    5. 'for' → logprob: -4.652754783630371
    6. '\' → logprob: -5.277754783630371
    7. '\n' → logprob: -5.527754783630371
    8. ')' → logprob: -5.652754783630371
    9. '#' → logprob: -6.152754783630371
    10. 't' → logprob: -6.277754783630371

Token 36: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14502224326133728
    2. '=' → logprob: -2.02002215385437
    3. ' ' → logprob: -6.145022392272949
    4. ',' → logprob: -9.27002239227295
    5. '<|end|>' → logprob: -10.89502239227295
    6. ' =
' → logprob: -11.14502239227295
    7. ')' → logprob: -11.14502239227295
    8. '.' → logprob: -11.39502239227295
    9. ' =)' → logprob: -11.52002239227295
    10. '  ' → logprob: -11.52002239227295

Token 37: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7985525131225586
    2. 'm' → logprob: -0.7985525131225586
    3. ' k' → logprob: -2.9235525131225586
    4. ' m' → logprob: -3.1735525131225586
    5. 'd' → logprob: -6.923552513122559
    6. ' ' → logprob: -6.923552513122559
    7. 'a' → logprob: -7.423552513122559
    8. 't' → logprob: -7.798552513122559
    9. 'q' → logprob: -8.423552513122559
    10. ' t' → logprob: -8.798552513122559

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25195828080177307
    2. '=' → logprob: -1.5019582509994507
    3. ',' → logprob: -11.001957893371582
    4. ' ' → logprob: -12.251957893371582
    5. '=input' → logprob: -13.001957893371582
    6. '<|end|>' → logprob: -13.626957893371582
    7. ')' → logprob: -13.751957893371582
    8. ' =
' → logprob: -14.626957893371582
    9. '=

' → logprob: -15.251957893371582
    10. '  ' → logprob: -15.501957893371582

Token 39: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.003192804753780365
    2. 'lst' → logprob: -5.753192901611328
    3. ' ' → logprob: -11.878192901611328
    4. ' map' → logprob: -12.003192901611328
    5. ' ls' → logprob: -14.128192901611328
    6. '_lst' → logprob: -14.878192901611328
    7. ' inp' → logprob: -15.128192901611328
    8. '(lst' → logprob: -15.753192901611328
    9. ' list' → logprob: -16.503192901611328
    10. 'map' → logprob: -16.503192901611328

Token 40: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010437761375214905
    2. '(' → logprob: -9.375103950500488
    3. '()
' → logprob: -11.375103950500488
    4. '()\' → logprob: -13.375103950500488
    5. '(),' → logprob: -13.500103950500488
    6. '()]' → logprob: -13.750103950500488
    7. '();' → logprob: -14.000103950500488
    8. ' ()' → logprob: -14.500103950500488
    9. '()`' → logprob: -14.625103950500488
    10. '()

' → logprob: -14.625103950500488

Token 41: 's' (ID: 82)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1227705180644989
    2. '1' → logprob: -3.3727705478668213
    3. '=' → logprob: -3.3727705478668213
    4. 'um' → logprob: -4.122770309448242
    5. 'tr' → logprob: -5.372770309448242
    6. 't' → logprob: -5.372770309448242
    7. 'tring' → logprob: -5.872770309448242
    8. '=[]' → logprob: -5.872770309448242
    9. ' ' → logprob: -6.122770309448242
    10. '_' → logprob: -6.497770309448242

Token 43: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4727092981338501
    2. ' input' → logprob: -1.59770929813385
    3. 'inp' → logprob: -2.7227091789245605
    4. ' inp' → logprob: -3.5977091789245605
    5. ' [' → logprob: -4.5977091789245605
    6. '"' → logprob: -4.7227091789245605
    7. ' ' → logprob: -5.0977091789245605
    8. ''' → logprob: -5.2227091789245605
    9. 'set' → logprob: -5.3477091789245605
    10. 'lst' → logprob: -5.5977091789245605

Token 44: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: 't' (ID: 83)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029805339872837067
    2. '=' → logprob: -3.5298054218292236
    3. ' ' → logprob: -10.154805183410645
    4. 's' → logprob: -11.529805183410645
    5. '  ' → logprob: -12.779805183410645
    6. '.' → logprob: -14.404805183410645
    7. ',' → logprob: -14.529805183410645
    8. '_' → logprob: -14.779805183410645
    9. ')' → logprob: -15.029805183410645
    10. '<|end|>' → logprob: -15.529805183410645

Token 47: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16326406598091125
    2. 'input' → logprob: -1.9132640361785889
    3. ' s' → logprob: -6.288264274597168
    4. 's' → logprob: -8.038264274597168
    5. ' ' → logprob: -8.663264274597168
    6. ' inp' → logprob: -8.788264274597168
    7. '"' → logprob: -9.288264274597168
    8. ' list' → logprob: -9.788264274597168
    9. ' []' → logprob: -9.788264274597168
    10. '=input' → logprob: -9.913264274597168

Token 48: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013873815769329667
    2. '(' → logprob: -6.626387596130371
    3. ' ()' → logprob: -11.376387596130371
    4. '`()' → logprob: -11.376387596130371
    5. '()`' → logprob: -11.751387596130371
    6. '()
' → logprob: -11.751387596130371
    7. '()

' → logprob: -12.251387596130371
    8. '```' → logprob: -12.376387596130371
    9. '()]' → logprob: -13.376387596130371
    10. '()</' → logprob: -13.501387596130371

Token 49: 'def' (ID: 1314)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.35634639859199524
    2. 'dp' → logprob: -1.8563463687896729
    3. 'result' → logprob: -3.231346368789673
    4. 'a' → logprob: -3.606346368789673
    5. 'def' → logprob: -4.231346607208252
    6. 'd' → logprob: -4.356346607208252
    7. 'res' → logprob: -4.606346607208252
    8. 'count' → logprob: -4.981346607208252
    9. '_' → logprob: -4.981346607208252
    10. '#' → logprob: -5.606346607208252

Token 50: ' l' (ID: 305)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.017203854396939278
    2. ' ' → logprob: -4.7672038078308105
    3. '_' → logprob: -5.2672038078308105
    4. ' gcd' → logprob: -5.7672038078308105
    5. ' find' → logprob: -9.392204284667969
    6. ' solve' → logprob: -10.142204284667969
    7. '_g' → logprob: -10.892204284667969
    8. ' check' → logprob: -10.892204284667969
    9. ' l' → logprob: -11.142204284667969
    10. ' get' → logprob: -11.392204284667969

Token 51: 'cm' (ID: 7871)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.04197518154978752
    2. 'eft' → logprob: -4.416975021362305
    3. 'cm' → logprob: -4.541975021362305
    4. 'cp' → logprob: -4.541975021362305
    5. 'e' → logprob: -5.416975021362305
    6. 'ength' → logprob: -6.791975021362305
    7. 'ist' → logprob: -7.291975021362305
    8. 'ong' → logprob: -7.541975021362305
    9. 'cs' → logprob: -7.791975021362305
    10. 'ps' → logprob: -9.291975021362305

Token 52: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3589887320995331
    2. '(' → logprob: -1.3589887619018555
    3. '(x' → logprob: -3.1089887619018555
    4. '(n' → logprob: -10.608988761901855
    5. ' (' → logprob: -11.483988761901855
    6. '(A' → logprob: -11.858988761901855
    7. '(s' → logprob: -13.733988761901855
    8. '((' → logprob: -13.733988761901855
    9. '(u' → logprob: -13.733988761901855
    10. '(i' → logprob: -14.108988761901855

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015586259542033076
    2. ',y' → logprob: -8.875155448913574
    3. ' ,' → logprob: -11.125155448913574
    4. ',x' → logprob: -14.000155448913574
    5. ')' → logprob: -15.875155448913574
    6. ',
' → logprob: -16.87515640258789
    7. ',s' → logprob: -17.12515640258789
    8. '<|end|>' → logprob: -17.25015640258789
    9. '‌,' → logprob: -17.37515640258789
    10. ' ' → logprob: -17.50015640258789

Token 54: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.31326326727867126
    2. ' y' → logprob: -1.3132632970809937
    3. ' ' → logprob: -14.063262939453125
    4. '<|end|>' → logprob: -14.813262939453125
    5. '	y' → logprob: -15.688262939453125
    6. '  ' → logprob: -16.313262939453125
    7. 'x' → logprob: -16.438262939453125
    8. '   ' → logprob: -17.813262939453125
    9. ',y' → logprob: -17.938262939453125
    10. '    ' → logprob: -18.063262939453125

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.534558552724775e-05
    2. '):
' → logprob: -11.125025749206543
    3. ')' → logprob: -11.625025749206543
    4. ':' → logprob: -14.125025749206543
    5. ' ):' → logprob: -14.250025749206543
    6. '):
' → logprob: -16.625024795532227
    7. '}:' → logprob: -16.875024795532227
    8. ',' → logprob: -17.125024795532227
    9. '():' → logprob: -17.375024795532227
    10. '):

' → logprob: -17.500024795532227

Token 56: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03214995935559273
    2. '   ' → logprob: -3.6571500301361084
    3. ' return' → logprob: -6.032149791717529
    4. ' :' → logprob: -6.282149791717529
    5. ' =' → logprob: -8.282150268554688
    6. ':
' → logprob: -8.407150268554688
    7. ':return' → logprob: -8.407150268554688
    8. '):' → logprob: -8.657150268554688
    9. '	return' → logprob: -8.782150268554688
    10. '=' → logprob: -9.282150268554688

Token 57: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2678276300430298
    2. ' return' → logprob: -1.7678276300430298
    3. '   ' → logprob: -2.7678275108337402
    4. 'if' → logprob: -7.64282751083374
    5. '	return' → logprob: -8.267827987670898
    6. 'import' → logprob: -8.267827987670898
    7. '    ' → logprob: -8.642827987670898
    8. ' if' → logprob: -9.142827987670898
    9. ' ' → logprob: -9.892827987670898
    10. 'x' → logprob: -10.517827987670898

Token 58: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5363197326660156
    2. ' x' → logprob: -1.0363197326660156
    3. '(x' → logprob: -3.2863197326660156
    4. ' (' → logprob: -3.7863197326660156
    5. '(' → logprob: -8.911319732666016
    6. ' ' → logprob: -9.411319732666016
    7. ' math' → logprob: -11.036319732666016
    8. '   ' → logprob: -11.911319732666016
    9. '	x' → logprob: -11.911319732666016
    10. '(math' → logprob: -11.911319732666016

Token 59: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.44147035479545593
    2. '*' → logprob: -1.1914703845977783
    3. '*y' → logprob: -2.9414703845977783
    4. '*x' → logprob: -8.8164701461792
    5. '*l' → logprob: -9.0664701461792
    6. '*t' → logprob: -10.5664701461792
    7. '*m' → logprob: -10.8164701461792
    8. '*s' → logprob: -11.0664701461792
    9. '*n' → logprob: -12.1914701461792
    10. '//' → logprob: -12.1914701461792

Token 60: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00020497082732617855
    2. ' y' → logprob: -8.500205039978027
    3. '(y' → logprob: -14.375205039978027
    4. '//' → logprob: -14.375205039978027
    5. '   ' → logprob: -16.25020408630371
    6. ' ' → logprob: -16.25020408630371
    7. '	y' → logprob: -17.50020408630371
    8. '```' → logprob: -17.62520408630371
    9. '  ' → logprob: -18.00020408630371
    10. '*y' → logprob: -19.25020408630371

Token 61: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.428830087184906
    2. '//' → logprob: -1.0538301467895508
    3. '#' → logprob: -9.42883014678955
    4. ' ' → logprob: -10.80383014678955
    5. ' #' → logprob: -11.55383014678955
    6. ' /' → logprob: -12.17883014678955
    7. ' ' → logprob: -12.17883014678955
    8. '/' → logprob: -13.05383014678955
    9. '   ' → logprob: -13.42883014678955
    10. '...' → logprob: -13.67883014678955

Token 62: ' _' (ID: 1175)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.01848609559237957
    2. 'math' → logprob: -4.018486022949219
    3. ' math' → logprob: -8.268486022949219
    4. 'g' → logprob: -9.518486022949219
    5. ' _' → logprob: -12.643486022949219
    6. '(math' → logprob: -14.018486022949219
    7. '_math' → logprob: -14.143486022949219
    8. '   ' → logprob: -14.768486022949219
    9. 'm' → logprob: -15.143486022949219
    10. 'G' → logprob: -15.518486022949219

Token 63: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -4.620622712536715e-05
    2. '_g' → logprob: -10.000045776367188
    3. ' gcd' → logprob: -15.125045776367188
    4. 'gc' → logprob: -15.250045776367188
    5. 'l' → logprob: -16.750045776367188
    6. 'gcc' → logprob: -16.875045776367188
    7. 'г' → logprob: -17.500045776367188
    8. 'gd' → logprob: -18.125045776367188
    9. '(g' → logprob: -18.250045776367188
    10. '.g' → logprob: -18.375045776367188

Token 64: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0001227276516146958
    2. '_cd' → logprob: -9.250123023986816
    3. 'c' → logprob: -10.750123023986816
    4. '_c' → logprob: -13.250123023986816
    5. 'cdn' → logprob: -14.125123023986816
    6. 'cdf' → logprob: -14.250123023986816
    7. 'd' → logprob: -14.375123023986816
    8. 'CD' → logprob: -14.625123023986816
    9. '	cd' → logprob: -14.750123023986816
    10. ' cd' → logprob: -16.1251220703125

Token 65: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06205025687813759
    2. '(' → logprob: -2.8120503425598145
    3. '(y' → logprob: -9.437049865722656
    4. '(
' → logprob: -13.437049865722656
    5. '(s' → logprob: -14.062049865722656
    6. ' (' → logprob: -14.937049865722656
    7. 'x' → logprob: -15.812049865722656
    8. '(

' → logprob: -17.562049865722656
    9. '(t' → logprob: -17.937049865722656
    10. '<|end|>' → logprob: -18.062049865722656

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002704185200855136
    2. ',y' → logprob: -6.12770414352417
    3. ' ,' → logprob: -8.377704620361328
    4. 'y' → logprob: -8.752704620361328
    5. ')' → logprob: -9.127704620361328
    6. '(y' → logprob: -11.877704620361328
    7. ' ' → logprob: -12.752704620361328
    8. ',
' → logprob: -12.752704620361328
    9. '),' → logprob: -13.002704620361328
    10. ' y' → logprob: -13.002704620361328

Token 67: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002476604888215661
    2. ' y' → logprob: -6.002476692199707
    3. ' ' → logprob: -15.002476692199707
    4. ')' → logprob: -15.127476692199707
    5. '	y' → logprob: -16.12747573852539
    6. ')y' → logprob: -16.25247573852539
    7. '<|end|>' → logprob: -17.37747573852539
    8. 'x' → logprob: -17.37747573852539
    9. '   ' → logprob: -17.75247573852539
    10. ''y' → logprob: -17.87747573852539

Token 68: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.875000953674316
    3. ')
' → logprob: -15.750000953674316
    4. '))' → logprob: -16.25
    5. ')return' → logprob: -17.5
    6. '}' → logprob: -17.875
    7. '<|end|>' → logprob: -18.375
    8. '')' → logprob: -18.625
    9. ')`' → logprob: -18.625
    10. ')x' → logprob: -18.875

Token 69: 'L' (ID: 43)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2985912561416626
    2. '_' → logprob: -1.7985912561416626
    3. '(' → logprob: -2.048591136932373
    4. '*' → logprob: -2.423591136932373
    5. 'n' → logprob: -2.423591136932373
    6. 's' → logprob: -3.048591136932373
    7. 'i' → logprob: -3.173591136932373
    8. '.' → logprob: -3.423591136932373
    9. 'x' → logprob: -3.923591136932373
    10. 'p' → logprob: -3.923591136932373

Token 70: ' =' (ID: 314)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5216710567474365
    2. '=' → logprob: -1.0216710567474365
    3. ' =' → logprob: -3.8966710567474365
    4. 'c' → logprob: -4.646671295166016
    5. 'cm' → logprob: -5.021671295166016
    6. 'CM' → logprob: -5.396671295166016
    7. '(' → logprob: -5.521671295166016
    8. '_' → logprob: -7.271671295166016
    9. ')' → logprob: -8.896671295166016
    10. ',' → logprob: -9.271671295166016

Token 71: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.026328284293413162
    2. ' l' → logprob: -3.6513283252716064
    3. 'n' → logprob: -11.026328086853027
    4. '	l' → logprob: -12.276328086853027
    5. '   ' → logprob: -12.401328086853027
    6. ' n' → logprob: -13.651328086853027
    7. '(l' → logprob: -14.526328086853027
    8. ' ' → logprob: -14.901328086853027
    9. '  ' → logprob: -15.151328086853027
    10. 'm' → logprob: -15.401328086853027

Token 72: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.06205753982067108
    2. 'c' → logprob: -2.8120574951171875
    3. 'm' → logprob: -10.562057495117188
    4. 'CM' → logprob: -10.937057495117188
    5. 'cms' → logprob: -11.062057495117188
    6. '(' → logprob: -11.937057495117188
    7. 'n' → logprob: -12.437057495117188
    8. '(cm' → logprob: -12.437057495117188
    9. 'e' → logprob: -12.937057495117188
    10. 'o' → logprob: -13.062057495117188

Token 73: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002668192028068006
    2. '(' → logprob: -8.250267028808594
    3. '(m' → logprob: -12.375267028808594
    4. 'n' → logprob: -14.125267028808594
    5. ' (' → logprob: -14.875267028808594
    6. '(s' → logprob: -16.375267028808594
    7. '(
' → logprob: -16.750267028808594
    8. '(l' → logprob: -17.875267028808594
    9. '```' → logprob: -18.500267028808594
    10. 'm' → logprob: -18.625267028808594

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006333283381536603
    2. ',m' → logprob: -7.375633239746094
    3. ' ,' → logprob: -12.500633239746094
    4. 'm' → logprob: -12.875633239746094
    5. ',
' → logprob: -14.750633239746094
    6. ',

' → logprob: -16.500633239746094
    7. ')' → logprob: -17.875633239746094
    8. ',y' → logprob: -18.125633239746094
    9. ',n' → logprob: -18.250633239746094
    10. '，' → logprob: -18.375633239746094

Token 75: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2014138251543045
    2. ' m' → logprob: -1.701413869857788
    3. ')' → logprob: -15.451414108276367
    4. ' ' → logprob: -15.951414108276367
    5. ')m' → logprob: -16.326414108276367
    6. ' ' → logprob: -16.451414108276367
    7. '<|end|>' → logprob: -17.201414108276367
    8. '	m' → logprob: -18.076414108276367
    9. '+m' → logprob: -18.326414108276367
    10. 's' → logprob: -18.826414108276367

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -16.25
    3. ' )' → logprob: -16.625
    4. '))' → logprob: -17.625
    5. ')n' → logprob: -19.25
    6. '),' → logprob: -19.625
    7. ')

' → logprob: -19.625
    8. ')#' → logprob: -19.75
    9. ')`' → logprob: -19.875
    10. ')...' → logprob: -20.625

Token 77: 'N' (ID: 45)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9846076965332031
    2. 's' → logprob: -1.2346076965332031
    3. 'r' → logprob: -2.109607696533203
    4. 'p' → logprob: -2.734607696533203
    5. '_' → logprob: -3.234607696533203
    6. '*' → logprob: -3.484607696533203
    7. 'c' → logprob: -4.484607696533203
    8. 'a' → logprob: -4.984607696533203
    9. 'n' → logprob: -5.109607696533203
    10. ',' → logprob: -5.359607696533203

Token 78: '1' (ID: 16)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0749073475599289
    2. ' *' → logprob: -2.8249073028564453
    3. '=' → logprob: -5.574907302856445
    4. ',' → logprob: -6.199907302856445
    5. '/' → logprob: -6.324907302856445
    6. 's' → logprob: -6.949907302856445
    7. ' ' → logprob: -7.699907302856445
    8. ')' → logprob: -7.824907302856445
    9. '//' → logprob: -7.824907302856445
    10. 'x' → logprob: -7.824907302856445

Token 79: ',' (ID: 11)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.46097755432128906
    2. '=' → logprob: -1.960977554321289
    3. ' *' → logprob: -2.335977554321289
    4. ' =' → logprob: -3.210977554321289
    5. '0' → logprob: -3.710977554321289
    6. ' ' → logprob: -3.835977554321289
    7. ',' → logprob: -4.460977554321289
    8. 'x' → logprob: -4.960977554321289
    9. 'u' → logprob: -5.460977554321289
    10. 'o' → logprob: -5.710977554321289

Token 80: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.41660067439079285
    2. ' N' → logprob: -1.2916007041931152
    3. ' ' → logprob: -3.4166007041931152
    4. ' =' → logprob: -4.416600704193115
    5. '=' → logprob: -4.791600704193115
    6. '_' → logprob: -5.541600704193115
    7. 'L' → logprob: -6.416600704193115
    8. 'M' → logprob: -6.541600704193115
    9. 'n' → logprob: -6.666600704193115
    10. ' M' → logprob: -7.166600704193115

Token 81: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3223329186439514
    2. ',' → logprob: -1.9473328590393066
    3. ' =' → logprob: -2.0723328590393066
    4. '_' → logprob: -5.947332859039307
    5. '2' → logprob: -6.197332859039307
    6. '1' → logprob: -7.072332859039307
    7. 's' → logprob: -8.322333335876465
    8. ' ' → logprob: -8.447333335876465
    9. 'x' → logprob: -8.697333335876465
    10. '0' → logprob: -9.197333335876465

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0433688648045063
    2. '=' → logprob: -3.1683688163757324
    3. ',' → logprob: -7.918368816375732
    4. ' ' → logprob: -12.91836929321289
    5. ' ,' → logprob: -14.16836929321289
    6. '.' → logprob: -14.79336929321289
    7. 's' → logprob: -14.91836929321289
    8. '<|end|>' → logprob: -15.04336929321289
    9. ' =)' → logprob: -15.04336929321289
    10. '=int' → logprob: -15.41836929321289

Token 83: ' n' (ID: 297)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.12698732316493988
    2. ' L' → logprob: -2.1269872188568115
    3. '(L' → logprob: -10.25198745727539
    4. ' ' → logprob: -11.50198745727539
    5. '	L' → logprob: -12.50198745727539
    6. 'l' → logprob: -13.00198745727539
    7. ' ' → logprob: -13.12698745727539
    8. ' (' → logprob: -13.25198745727539
    9. '[L' → logprob: -14.00198745727539
    10. 'N' → logprob: -14.12698745727539

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46341437101364136
    2. '*' → logprob: -1.4634144306182861
    3. ' *' → logprob: -2.338414430618286
    4. '<|end|>' → logprob: -4.588414192199707
    5. 'm' → logprob: -4.713414192199707
    6. ',L' → logprob: -5.213414192199707
    7. '-' → logprob: -5.463414192199707
    8. 'L' → logprob: -6.088414192199707
    9. ' ,' → logprob: -6.088414192199707
    10. '2' → logprob: -6.588414192199707

Token 85: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.061992332339286804
    2. ' m' → logprob: -2.8119924068450928
    3. ' ' → logprob: -11.311992645263672
    4. 'L' → logprob: -11.936992645263672
    5. 'M' → logprob: -13.436992645263672
    6. 'n' → logprob: -14.436992645263672
    7. ' L' → logprob: -14.561992645263672
    8. '<|end|>' → logprob: -14.561992645263672
    9. ' ' → logprob: -14.561992645263672
    10. '   ' → logprob: -14.686992645263672

Token 86: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' functools' (ID: 142636)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.004608010873198509
    2. ' ' → logprob: -6.379608154296875
    3. ' fractions' → logprob: -6.879608154296875
    4. ' functools' → logprob: -7.129608154296875
    5. ' collections' → logprob: -7.879608154296875
    6. '_' → logprob: -8.254608154296875
    7. ' itertools' → logprob: -8.504608154296875
    8. ' ' → logprob: -8.629608154296875
    9. ' sys' → logprob: -11.129608154296875
    10. 'math' → logprob: -12.004608154296875

Token 89: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6302472949028015
    2. 'import' → logprob: -1.3802473545074463
    3. '.' → logprob: -1.6302473545074463
    4. '<|end|>' → logprob: -4.130247116088867
    5. ' .' → logprob: -6.130247116088867
    6. '	import' → logprob: -7.880247116088867
    7. '_import' → logprob: -8.005247116088867
    8. ' ' → logprob: -8.255247116088867
    9. '<|end|>' → logprob: -8.255247116088867
    10. '_' → logprob: -8.630247116088867

Token 90: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.4311062693595886
    2. 'reduce' → logprob: -1.0561063289642334
    3. ' l' → logprob: -6.306106090545654
    4. 'l' → logprob: -7.931106090545654
    5. 'redu' → logprob: -9.181106567382812
    6. 'r' → logprob: -10.681106567382812
    7. '_reduce' → logprob: -10.931106567382812
    8. ' gcd' → logprob: -11.431106567382812
    9. 'cmp' → logprob: -11.556106567382812
    10. '.reduce' → logprob: -11.556106567382812

Token 91: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: 'positions' (ID: 32297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3284222185611725
    2. 'res' → logprob: -2.5784223079681396
    3. 'g' → logprob: -3.2034223079681396
    4. 's' → logprob: -3.7034223079681396
    5. 'result' → logprob: -3.7034223079681396
    6. 'l' → logprob: -4.2034220695495605
    7. 'd' → logprob: -4.3284220695495605
    8. 'ans' → logprob: -4.8284220695495605
    9. '
' → logprob: -4.8284220695495605
    10. '_' → logprob: -4.9534220695495605

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26100680232048035
    2. '=' → logprob: -1.7610068321228027
    3. '_' → logprob: -2.8860068321228027
    4. '<|end|>' → logprob: -6.886006832122803
    5. ' ' → logprob: -7.511006832122803
    6. ',' → logprob: -9.386006355285645
    7. 's' → logprob: -9.511006355285645
    8. '_=' → logprob: -9.636006355285645
    9. '=[]' → logprob: -10.011006355285645
    10. '1' → logprob: -10.386006355285645

Token 94: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.29655328392982483
    2. ' [' → logprob: -1.5465532541275024
    3. '[]' → logprob: -3.796553373336792
    4. ' set' → logprob: -4.796553134918213
    5. '[' → logprob: -5.046553134918213
    6. ' [(' → logprob: -5.421553134918213
    7. 'set' → logprob: -7.546553134918213
    8. ' ' → logprob: -7.796553134918213
    9. ' list' → logprob: -8.546553611755371
    10. ' [[]' → logprob: -8.671553611755371

Token 95: 'cnt' (ID: 33160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27219024300575256
    2. '<|end|>' → logprob: -1.8971902132034302
    3. ' for' → logprob: -2.7721903324127197
    4. ' ' → logprob: -5.022190093994141
    5. '[' → logprob: -5.397190093994141
    6. '=' → logprob: -5.522190093994141
    7. '.' → logprob: -5.897190093994141
    8. '<|end|>' → logprob: -6.022190093994141
    9. ' =' → logprob: -7.272190093994141
    10. '
' → logprob: -7.522190093994141

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31588247418403625
    2. '=' → logprob: -1.3158824443817139
    3. ' ' → logprob: -6.190882682800293
    4. '_' → logprob: -8.565882682800293
    5. ',' → logprob: -8.815882682800293
    6. '  ' → logprob: -9.565882682800293
    7. '<|end|>' → logprob: -9.815882682800293
    8. 's' → logprob: -10.440882682800293
    9. ')' → logprob: -10.565882682800293
    10. '(' → logprob: -11.690882682800293

Token 97: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08011221885681152
    2. ' ' → logprob: -2.5801122188568115
    3. '{}' → logprob: -7.080112457275391
    4. ' {}' → logprob: -8.45511245727539
    5. '{' → logprob: -9.08011245727539
    6. ' {' → logprob: -11.08011245727539
    7. '<|end|>' → logprob: -11.45511245727539
    8. '[' → logprob: -11.83011245727539
    9. '  ' → logprob: -12.83011245727539
    10. '1' → logprob: -12.83011245727539

Token 98: 'L' (ID: 43)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1814626008272171
    2. 'L' → logprob: -2.056462526321411
    3. '{}' → logprob: -4.68146276473999
    4. 'n' → logprob: -4.80646276473999
    5. 'min' → logprob: -5.43146276473999
    6. 'N' → logprob: -5.43146276473999
    7. ' ' → logprob: -5.68146276473999
    8. '{})' → logprob: -5.80646276473999
    9. ')' → logprob: -6.55646276473999
    10. '{' → logprob: -7.05646276473999

Token 99: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1506105214357376
    2. '//' → logprob: -2.2756104469299316
    3. ')' → logprob: -4.150610446929932
    4. ' ' → logprob: -4.525610446929932
    5. '-' → logprob: -5.525610446929932
    6. ' )' → logprob: -5.650610446929932
    7. ' -' → logprob: -6.275610446929932
    8. ')//' → logprob: -8.90061092376709
    9. ' //
' → logprob: -8.96311092376709
    10. ' ' → logprob: -9.08811092376709

Token 100: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17597390711307526
    2. 'N' → logprob: -1.925973892211914
    3. ' n' → logprob: -4.300973892211914
    4. ' N' → logprob: -7.050973892211914
    5. '<|end|>' → logprob: -7.675973892211914
    6. ')' → logprob: -8.175973892211914
    7. ' ' → logprob: -8.550973892211914
    8. '  ' → logprob: -9.425973892211914
    9. ')n' → logprob: -9.675973892211914
    10. '	n' → logprob: -10.425973892211914

Token 101: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005320638883858919
    2. '2' → logprob: -7.625532150268555
    3. ')' → logprob: -10.250532150268555
    4. '```' → logprob: -13.813032150268555
    5. '(' → logprob: -14.188032150268555
    6. '[' → logprob: -14.250532150268555
    7. '   ' → logprob: -14.313032150268555
    8. ' ' → logprob: -14.438032150268555
    9. 'a' → logprob: -14.563032150268555
    10. '`)' → logprob: -14.750532150268555

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004420266952365637
    2. '*' → logprob: -6.504420280456543
    3. ' )' → logprob: -6.504420280456543
    4. ')*' → logprob: -7.504420280456543
    5. ' *' → logprob: -7.879420280456543
    6. '*)' → logprob: -8.379420280456543
    7. '//' → logprob: -9.879420280456543
    8. '-' → logprob: -10.004420280456543
    9. ' -' → logprob: -10.254420280456543
    10. ',' → logprob: -10.379420280456543

Token 103: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8239387273788452
    2. ' *' → logprob: -0.8239387273788452
    3. '<|end|>' → logprob: -2.4489388465881348
    4. '//' → logprob: -4.823938846588135
    5. ')' → logprob: -5.573938846588135
    6. 'def' → logprob: -5.823938846588135
    7. ' //' → logprob: -5.948938846588135
    8. 'import' → logprob: -6.073938846588135
    9. ' -' → logprob: -6.573938846588135
    10. '
' → logprob: -6.573938846588135

Token 104: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.22509895265102386
    2. ' (' → logprob: -1.975098967552185
    3. 'N' → logprob: -3.7250988483428955
    4. '(n' → logprob: -4.100099086761475
    5. '(' → logprob: -4.850099086761475
    6. ' N' → logprob: -5.600099086761475
    7. 'n' → logprob: -5.600099086761475
    8. '(L' → logprob: -6.350099086761475
    9. '(_' → logprob: -7.225099086761475
    10. '(M' → logprob: -7.475099086761475

Token 105: 'L' (ID: 43)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1640787273645401
    2. 'L' → logprob: -2.914078712463379
    3. '(L' → logprob: -3.039078712463379
    4. '(N' → logprob: -3.164078712463379
    5. 'n' → logprob: -5.914078712463379
    6. ' N' → logprob: -6.789078712463379
    7. ' (' → logprob: -7.164078712463379
    8. '(n' → logprob: -7.539078712463379
    9. '(' → logprob: -7.664078712463379
    10. 'len' → logprob: -8.164078712463379

Token 106: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.22547142207622528
    2. ' //' → logprob: -1.6004713773727417
    3. '#' → logprob: -10.850471496582031
    4. ' ' → logprob: -11.350471496582031
    5. '/' → logprob: -11.600471496582031
    6. ')' → logprob: -12.350471496582031
    7. '```' → logprob: -12.975471496582031
    8. '//=' → logprob: -12.975471496582031
    9. ' /' → logprob: -13.600471496582031
    10. ' #' → logprob: -14.100471496582031

Token 107: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00033796546631492674
    2. ' N' → logprob: -8.000337600708008
    3. 'n' → logprob: -14.125337600708008
    4. '  ' → logprob: -14.375337600708008
    5. '   ' → logprob: -15.000337600708008
    6. ' ' → logprob: -15.000337600708008
    7. '	N' → logprob: -15.875337600708008
    8. '1' → logprob: -16.375337600708008
    9. '
' → logprob: -16.875337600708008
    10. '<|end|>' → logprob: -17.000337600708008

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001005630983854644
    2. ')' → logprob: -9.250100135803223
    3. '<|end|>' → logprob: -12.625100135803223
    4. '```' → logprob: -15.500100135803223
    5. '')' → logprob: -15.625100135803223
    6. '[' → logprob: -16.37510108947754
    7. '`)' → logprob: -16.50010108947754
    8. '<|end|>' → logprob: -16.87510108947754
    9. 'I' → logprob: -17.06260108947754
    10. ' ' → logprob: -17.37510108947754

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034930426627397537
    2. ' )' → logprob: -5.878492832183838
    3. '//' → logprob: -8.628493309020996
    4. ')//' → logprob: -9.378493309020996
    5. ' -' → logprob: -9.378493309020996
    6. '<|end|>' → logprob: -9.628493309020996
    7. ' //' → logprob: -10.003493309020996
    8. ',' → logprob: -10.128493309020996
    9. ' ' → logprob: -10.253493309020996
    10. '-' → logprob: -10.378493309020996

Token 110: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' z' (ID: 579)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.054799340665340424
    2. ' _' → logprob: -3.1797993183135986
    3. '_' → logprob: -5.179799556732178
    4. 'i' → logprob: -5.554799556732178
    5. ' ' → logprob: -6.679799556732178
    6. ' x' → logprob: -7.304799556732178
    7. '_i' → logprob: -9.17979907989502
    8. ' a' → logprob: -10.05479907989502
    9. ' ' → logprob: -10.80479907989502
    10. 'x' → logprob: -10.92979907989502

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15089154243469238
    2. 'in' → logprob: -2.0258915424346924
    3. ' ' → logprob: -5.775891304016113
    4. '1' → logprob: -6.150891304016113
    5. ',' → logprob: -6.650891304016113
    6. 'n' → logprob: -7.775891304016113
    7. '_' → logprob: -7.900891304016113
    8. '  ' → logprob: -8.275891304016113
    9. 'i' → logprob: -8.900891304016113
    10. ' i' → logprob: -8.900891304016113

Token 113: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008121958002448082
    2. 'range' → logprob: -4.883121967315674
    3. ' positions' → logprob: -8.758121490478516
    4. ' ' → logprob: -9.383121490478516
    5. '(range' → logprob: -10.008121490478516
    6. '[' → logprob: -10.133121490478516
    7. '  ' → logprob: -10.133121490478516
    8. ' s' → logprob: -10.508121490478516
    9. ' set' → logprob: -10.758121490478516
    10. '	range' → logprob: -11.008121490478516

Token 114: '(L' (ID: 11075)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.49264541268348694
    2. '(' → logprob: -1.6176453828811646
    3. '(L' → logprob: -2.367645502090454
    4. '(N' → logprob: -2.617645502090454
    5. '(n' → logprob: -3.992645502090454
    6. '((' → logprob: -5.867645263671875
    7. '(c' → logprob: -7.242645263671875
    8. ' (' → logprob: -7.617645263671875
    9. '(len' → logprob: -7.617645263671875
    10. '(min' → logprob: -7.742645263671875

Token 115: ' //' (ID: 602)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.037733301520347595
    2. '):
' → logprob: -3.537733316421509
    3. ' ):' → logprob: -5.41273307800293
    4. ')' → logprob: -6.66273307800293
    5. '//' → logprob: -6.78773307800293
    6. ' //' → logprob: -7.16273307800293
    7. ' ):
' → logprob: -9.16273307800293
    8. '):
' → logprob: -10.03773307800293
    9. '):

' → logprob: -10.91273307800293
    10. '1' → logprob: -11.03773307800293

Token 116: ' cnt' (ID: 27340)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06543554365634918
    2. 'n' → logprob: -2.8154356479644775
    3. 'm' → logprob: -6.190435409545898
    4. '1' → logprob: -7.565435409545898
    5. '2' → logprob: -7.690435409545898
    6. ' N' → logprob: -8.190435409545898
    7. ' n' → logprob: -9.065435409545898
    8. 'M' → logprob: -11.190435409545898
    9. ' ' → logprob: -11.440435409545898
    10. '   ' → logprob: -12.065435409545898

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008153468370437622
    2. ')' → logprob: -8.000815391540527
    3. '+' → logprob: -8.250815391540527
    4. ' ):' → logprob: -9.125815391540527
    5. ':' → logprob: -9.500815391540527
    6. '):
' → logprob: -10.625815391540527
    7. '*' → logprob: -12.875815391540527
    8. '**' → logprob: -13.500815391540527
    9. '():' → logprob: -13.625815391540527
    10. ',' → logprob: -13.875815391540527

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1786749362945557
    2. '<|end|>' → logprob: -1.3036749362945557
    3. ' positions' → logprob: -1.8036749362945557
    4. '    ' → logprob: -2.0536749362945557
    5. 'positions' → logprob: -3.0536749362945557
    6. ' ' → logprob: -3.3036749362945557
    7. '0' → logprob: -5.178674697875977
    8. '    
' → logprob: -5.428674697875977
    9. '4' → logprob: -5.428674697875977
    10. ' 
' → logprob: -5.553674697875977

Token 119: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' (adapté à ' positions') → logprob: -1.0012385845184326
    2. ' positions' → logprob: -1.1262385845184326
    3. '    ' → logprob: -2.1262385845184326
    4. ' ' → logprob: -3.6262385845184326
    5. ' z' → logprob: -3.7512385845184326
    6. 'z' → logprob: -3.7512385845184326
    7. ' for' → logprob: -3.8762385845184326
    8. 'for' → logprob: -3.8762385845184326
    9. '0' → logprob: -4.126238822937012
    10. '<|end|>' → logprob: -4.751238822937012

Token 120: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3440758287906647
    2. '.append' → logprob: -1.9690757989883423
    3. '<|end|>' → logprob: -2.719075918197632
    4. '.extend' → logprob: -2.969075918197632
    5. ' +=' → logprob: -4.719075679779053
    6. ' =' → logprob: -4.719075679779053
    7. ' ' → logprob: -5.094075679779053
    8. ' .' → logprob: -5.094075679779053
    9. '.setdefault' → logprob: -6.719075679779053
    10. ')' → logprob: -7.719075679779053

Token 121: '((' (ID: 2054)
  Prédit: '([]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -0.3628196120262146
    2. '(z' → logprob: -2.1128196716308594
    3. '((' → logprob: -2.6128196716308594
    4. '(' → logprob: -2.9878196716308594
    5. '([' → logprob: -2.9878196716308594
    6. '({' → logprob: -5.862819671630859
    7. '(cnt' → logprob: -5.862819671630859
    8. '(set' → logprob: -7.112819671630859
    9. '([(' → logprob: -7.612819671630859
    10. '(L' → logprob: -7.987819671630859

Token 122: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.30482998490333557
    2. 'N' → logprob: -2.0548300743103027
    3. '0' → logprob: -2.6798300743103027
    4. '(z' → logprob: -3.5548300743103027
    5. ')' → logprob: -4.929830074310303
    6. '(N' → logprob: -5.179830074310303
    7. 'L' → logprob: -5.179830074310303
    8. 'n' → logprob: -5.429830074310303
    9. '(' → logprob: -5.679830074310303
    10. '(L' → logprob: -6.054830074310303

Token 123: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.09302977472543716
    2. '*' → logprob: -2.593029737472534
    3. ',' → logprob: -4.468029975891113
    4. ' ,' → logprob: -6.593029975891113
    5. '*N' → logprob: -8.218029975891113
    6. '*n' → logprob: -8.593029975891113
    7. ')' → logprob: -8.718029975891113
    8. '+' → logprob: -9.093029975891113
    9. ' ' → logprob: -9.468029975891113
    10. '*,' → logprob: -9.593029975891113

Token 124: ' L' (ID: 451)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.05220326781272888
    2. ' cnt' → logprob: -3.0522031784057617
    3. 'N' → logprob: -6.552203178405762
    4. 'n' → logprob: -7.302203178405762
    5. '(cnt' → logprob: -7.302203178405762
    6. ' n' → logprob: -8.677203178405762
    7. ' N' → logprob: -8.677203178405762
    8. 'L' → logprob: -8.927203178405762
    9. ' L' → logprob: -10.052203178405762
    10. ')' → logprob: -10.052203178405762

Token 125: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.876725435256958
    2. ' //' → logprob: -1.126725435256958
    3. ')' → logprob: -1.376725435256958
    4. ')//' → logprob: -5.751725196838379
    5. ',' → logprob: -6.626725196838379
    6. ' )' → logprob: -7.876725196838379
    7. '*' → logprob: -8.001725196838379
    8. '%' → logprob: -8.126725196838379
    9. ' ' → logprob: -8.251725196838379
    10. ' *' → logprob: -8.376725196838379

Token 126: ' N' (ID: 478)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.06566286087036133
    2. 'N' → logprob: -3.6906628608703613
    3. 'n' → logprob: -3.6906628608703613
    4. 'L' → logprob: -4.815662860870361
    5. 'm' → logprob: -6.315662860870361
    6. '2' → logprob: -6.690662860870361
    7. ' cnt' → logprob: -6.815662860870361
    8. '(cnt' → logprob: -7.690662860870361
    9. '1' → logprob: -9.065662384033203
    10. 'M' → logprob: -9.065662384033203

Token 127: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04321396350860596
    2. '2' → logprob: -3.1682138442993164
    3. ')' → logprob: -8.793213844299316
    4. 'cnt' → logprob: -11.793213844299316
    5. ' ' → logprob: -12.105713844299316
    6. 'positions' → logprob: -12.355713844299316
    7. '```' → logprob: -12.980713844299316
    8. '))' → logprob: -13.043213844299316
    9. 'z' → logprob: -13.230713844299316
    10. '
' → logprob: -13.230713844299316

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1485505849123001
    2. ')' → logprob: -2.398550510406494
    3. ' ,' → logprob: -3.273550510406494
    4. ' *' → logprob: -5.898550510406494
    5. ' %' → logprob: -6.273550510406494
    6. '))' → logprob: -7.023550510406494
    7. '*' → logprob: -7.023550510406494
    8. ')%' → logprob: -7.273550510406494
    9. ' +' → logprob: -7.523550510406494
    10. '%' → logprob: -7.648550510406494

Token 129: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.164068803191185
    2. ' z' → logprob: -1.9140688180923462
    3. '0' → logprob: -6.039068698883057
    4. ' ' → logprob: -7.539068698883057
    5. '(z' → logprob: -7.664068698883057
    6. ' (' → logprob: -9.039069175720215
    7. ')' → logprob: -9.289069175720215
    8. '   ' → logprob: -9.789069175720215
    9. '	z' → logprob: -10.289069175720215
    10. '    ' → logprob: -10.539069175720215

Token 130: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.011153929866850376
    2. '*' → logprob: -4.511153697967529
    3. ' ' → logprob: -9.761154174804688
    4. ',' → logprob: -11.261154174804688
    5. ')' → logprob: -11.386154174804688
    6. '<|end|>' → logprob: -11.761154174804688
    7. ' ' → logprob: -12.261154174804688
    8. '
' → logprob: -13.136154174804688
    9. ' `' → logprob: -13.948654174804688
    10. '  ' → logprob: -13.948654174804688

Token 131: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.20209817588329315
    2. 'L' → logprob: -1.7020981311798096
    3. ' ' → logprob: -7.577098369598389
    4. '<|end|>' → logprob: -9.82709789276123
    5. '(L' → logprob: -9.95209789276123
    6. '
' → logprob: -10.82709789276123
    7. ' (' → logprob: -11.20209789276123
    8. ' ' → logprob: -11.82709789276123
    9. '	L' → logprob: -11.82709789276123
    10. ')' → logprob: -12.57709789276123

Token 132: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.20159606635570526
    2. '//' → logprob: -1.7015960216522217
    3. ' ' → logprob: -9.0765962600708
    4. ' #' → logprob: -10.8265962600708
    5. '#' → logprob: -10.9515962600708
    6. '<|end|>' → logprob: -11.8265962600708
    7. '```' → logprob: -12.3265962600708
    8. ')' → logprob: -12.8265962600708
    9. ' ' → logprob: -13.0765962600708
    10. '  ' → logprob: -13.4515962600708

Token 133: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0154988132417202
    2. '1' → logprob: -4.265498638153076
    3. ' N' → logprob: -6.765498638153076
    4. 'n' → logprob: -9.265499114990234
    5. ' ' → logprob: -10.390499114990234
    6. '<|end|>' → logprob: -10.390499114990234
    7. 'cnt' → logprob: -12.390499114990234
    8. '  ' → logprob: -12.827999114990234
    9. 'M' → logprob: -12.827999114990234
    10. ')' → logprob: -12.827999114990234

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ')' → logprob: -13.50000286102295
    3. 'I' → logprob: -15.00000286102295
    4. '2' → logprob: -15.12500286102295
    5. ' ' → logprob: -15.81250286102295
    6. 'One' → logprob: -15.87500286102295
    7. '<|end|>' → logprob: -16.687501907348633
    8. '   ' → logprob: -17.250001907348633
    9. '`)' → logprob: -17.312501907348633
    10. '۱' → logprob: -17.312501907348633

Token 135: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006127394735813141
    2. ')' → logprob: -5.13112735748291
    3. '))
' → logprob: -8.63112735748291
    4. ')))' → logprob: -11.88112735748291
    5. ' ))' → logprob: -12.38112735748291
    6. '),' → logprob: -12.75612735748291
    7. '   ' → logprob: -13.38112735748291
    8. ',' → logprob: -13.38112735748291
    9. ')
' → logprob: -13.38112735748291
    10. ''))' → logprob: -14.63112735748291

Token 136: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47869718074798584
    2. 'positions' → logprob: -1.7286971807479858
    3. '<|end|>' → logprob: -1.9786971807479858
    4. 'indices' → logprob: -4.603697299957275
    5. ')' → logprob: -4.728697299957275
    6. '#' → logprob: -5.228697299957275
    7. 'def' → logprob: -5.228697299957275
    8. 'idx' → logprob: -5.478697299957275
    9. 'if' → logprob: -5.478697299957275
    10. 'pos' → logprob: -5.853697299957275

Token 137: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3930374085903168
    2. 'n' → logprob: -1.3930374383926392
    3. '=' → logprob: -2.8930373191833496
    4. ' =' → logprob: -5.01803731918335
    5. 'nd' → logprob: -5.14303731918335
    6. ',' → logprob: -5.64303731918335
    7. 's' → logprob: -6.51803731918335
    8. '<|end|>' → logprob: -6.76803731918335
    9. 'd' → logprob: -7.01803731918335
    10. 'm' → logprob: -8.268037796020508

Token 138: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10029099881649017
    2. ' ' → logprob: -2.3502910137176514
    3. '1' → logprob: -10.22529125213623
    4. '<|end|>' → logprob: -10.35029125213623
    5. ' ' → logprob: -12.78779125213623
    6. '2' → logprob: -12.97529125213623
    7. '  ' → logprob: -13.03779125213623
    8. '(' → logprob: -13.91279125213623
    9. 'len' → logprob: -14.10029125213623
    10. 's' → logprob: -14.28779125213623

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017362393555231392
    2. ' ' → logprob: -9.375173568725586
    3. 'len' → logprob: -9.875173568725586
    4. '1' → logprob: -11.000173568725586
    5. '2' → logprob: -12.000173568725586
    6. 'n' → logprob: -12.750173568725586
    7. '-' → logprob: -12.875173568725586
    8. 'cnt' → logprob: -14.000173568725586
    9. '```' → logprob: -14.125173568725586
    10. '[]' → logprob: -14.250173568725586

Token 140: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28288090229034424
    2. '<|end|>' → logprob: -1.5328809022903442
    3. 'while' → logprob: -3.5328807830810547
    4. ' while' → logprob: -7.157880783081055
    5. '<|end|>' → logprob: -8.157880783081055
    6. 'for' → logprob: -9.782880783081055
    7. '```' → logprob: -10.907880783081055
    8. ' 
' → logprob: -11.282880783081055
    9. ',' → logprob: -11.657880783081055
    10. '  
' → logprob: -11.782880783081055

Token 141: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.055305130779743195
    2. 'i' → logprob: -2.930305242538452
    3. ' True' → logprob: -9.055305480957031
    4. ' ' → logprob: -9.180305480957031
    5. 'True' → logprob: -9.305305480957031
    6. '(i' → logprob: -10.180305480957031
    7. ' len' → logprob: -10.930305480957031
    8. '	i' → logprob: -11.305305480957031
    9. ' positions' → logprob: -11.930305480957031
    10. 'len' → logprob: -11.930305480957031

Token 143: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04866957291960716
    2. '<' → logprob: -3.0486695766448975
    3. '<len' → logprob: -10.173669815063477
    4. ' <=' → logprob: -10.298669815063477
    5. '<=' → logprob: -12.548669815063477
    6. ' ' → logprob: -13.298669815063477
    7. '<n' → logprob: -13.423669815063477
    8. '<|end|>' → logprob: -14.048669815063477
    9. ' *' → logprob: -14.173669815063477
    10. 's' → logprob: -14.673669815063477

Token 144: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.387428343296051
    2. ' len' → logprob: -1.1374282836914062
    3. 'L' → logprob: -9.262428283691406
    4. 'cnt' → logprob: -9.262428283691406
    5. 'positions' → logprob: -9.512428283691406
    6. ' L' → logprob: -9.512428283691406
    7. ' positions' → logprob: -9.887428283691406
    8. ' ' → logprob: -10.137428283691406
    9. ' n' → logprob: -10.512428283691406
    10. 'n' → logprob: -10.512428283691406

Token 145: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012632899917662144
    2. '(s' → logprob: -4.387632846832275
    3. '(t' → logprob: -9.387633323669434
    4. 'positions' → logprob: -11.387633323669434
    5. ' positions' → logprob: -11.512633323669434
    6. ' (' → logprob: -11.762633323669434
    7. '(pos' → logprob: -12.637633323669434
    8. '(lst' → logprob: -13.762633323669434
    9. 's' → logprob: -14.012633323669434
    10. '(position' → logprob: -14.387633323669434

Token 146: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.03901946172118187
    2. ' positions' → logprob: -3.2890193462371826
    3. '(' → logprob: -7.039019584655762
    4. 's' → logprob: -9.414019584655762
    5. ' s' → logprob: -12.164019584655762
    6. ')' → logprob: -12.539019584655762
    7. '(s' → logprob: -12.664019584655762
    8. 'position' → logprob: -13.414019584655762
    9. 'pos' → logprob: -13.539019584655762
    10. 't' → logprob: -13.914019584655762

Token 147: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01574515737593174
    2. '):' → logprob: -5.140745162963867
    3. 'and' → logprob: -5.390745162963867
    4. ' and' → logprob: -5.765745162963867
    5. '):
' → logprob: -6.765745162963867
    6. ' )' → logprob: -7.015745162963867
    7. ' ):' → logprob: -11.140745162963867
    8. ' ' → logprob: -12.515745162963867
    9. ' ):
' → logprob: -12.890745162963867
    10. '):

' → logprob: -13.515745162963867

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16510972380638123
    2. ':' → logprob: -2.040109634399414
    3. ':
' → logprob: -5.290109634399414
    4. ',' → logprob: -5.540109634399414
    5. ' and' → logprob: -5.540109634399414
    6. '<|end|>' → logprob: -5.790109634399414
    7. '    
' → logprob: -6.540109634399414
    8. ' if' → logprob: -7.165109634399414
    9. 's' → logprob: -7.540109634399414
    10. '):' → logprob: -7.665109634399414

Token 149: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8302969932556152
    2. ' x' → logprob: -0.9552969932556152
    3. ' p' → logprob: -2.7052969932556152
    4. ' pos' → logprob: -3.2052969932556152
    5. ' s' → logprob: -3.5802969932556152
    6. 'pos' → logprob: -4.205296993255615
    7. 'p' → logprob: -4.330296993255615
    8. 's' → logprob: -5.205296993255615
    9. 'a' (adapté à ' a') → logprob: -5.580296993255615
    10. ' a' → logprob: -5.830296993255615

Token 150: '_idx' (ID: 15257)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08366041630506516
    2. '_pos' → logprob: -3.208660364151001
    3. ',b' → logprob: -4.45866060256958
    4. '_positions' → logprob: -4.95866060256958
    5. '_idx' → logprob: -5.58366060256958
    6. 'pos' → logprob: -6.08366060256958
    7. ' ,' → logprob: -6.08366060256958
    8. ' =' → logprob: -6.08366060256958
    9. '_i' → logprob: -6.45866060256958
    10. '0' → logprob: -6.83366060256958

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04043722152709961
    2. ' =' → logprob: -3.4154372215270996
    3. ' ,' → logprob: -6.0404372215271
    4. 's' → logprob: -7.0404372215271
    5. ',a' → logprob: -7.1654372215271
    6. 'a' → logprob: -7.5404372215271
    7. '=' → logprob: -7.9154372215271
    8. '   ' → logprob: -8.165437698364258
    9. ' ' → logprob: -8.290437698364258
    10. ')' → logprob: -8.290437698364258

Token 152: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020631814375519753
    2. ' b' → logprob: -3.895631790161133
    3. 'a' → logprob: -9.645631790161133
    4. '<|end|>' → logprob: -11.520631790161133
    5. ' a' → logprob: -12.770631790161133
    6. 's' → logprob: -12.895631790161133
    7. ' ' → logprob: -13.020631790161133
    8. ' positions' → logprob: -13.145631790161133
    9. 'positions' → logprob: -13.395631790161133
    10. ' s' → logprob: -13.770631790161133

Token 153: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00016325322212651372
    2. 'idx' → logprob: -9.500163078308105
    3. '_index' → logprob: -11.000163078308105
    4. '_' → logprob: -11.125163078308105
    5. '_pos' → logprob: -11.125163078308105
    6. '_i' → logprob: -11.500163078308105
    7. '_idxs' → logprob: -11.625163078308105
    8. '[' → logprob: -12.625163078308105
    9. '_indices' → logprob: -12.875163078308105
    10. '_positions' → logprob: -13.250163078308105

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14271782338619232
    2. '=' → logprob: -2.0177178382873535
    3. ',' → logprob: -11.017717361450195
    4. ')' → logprob: -11.642717361450195
    5. '<|end|>' → logprob: -11.642717361450195
    6. '   ' → logprob: -12.392717361450195
    7. ' ' → logprob: -13.267717361450195
    8. '    ' → logprob: -14.392717361450195
    9. '<|end|>' → logprob: -14.517717361450195
    10. ' =)' → logprob: -15.017717361450195

Token 155: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.12694427371025085
    2. 'positions' → logprob: -2.1269443035125732
    3. 'Positions' → logprob: -12.626944541931152
    4. 's' → logprob: -12.751944541931152
    5. '_positions' → logprob: -12.876944541931152
    6. '.positions' → logprob: -13.001944541931152
    7. '   ' → logprob: -13.876944541931152
    8. 'position' → logprob: -14.001944541931152
    9. ' posiciones' → logprob: -14.001944541931152
    10. 'i' → logprob: -15.126944541931152

Token 156: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4498052223643754e-05
    2. '[' → logprob: -11.875014305114746
    3. '][' → logprob: -13.000014305114746
    4. 'i' → logprob: -13.250014305114746
    5. '[a' → logprob: -14.000014305114746
    6. '```' → logprob: -14.125014305114746
    7. ')[' → logprob: -14.625014305114746
    8. '   ' → logprob: -14.875014305114746
    9. ']' → logprob: -15.250014305114746
    10. '[
' → logprob: -15.750014305114746

Token 157: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22546875476837158
    2. ']
' → logprob: -1.9754687547683716
    3. ')' → logprob: -3.225468635559082
    4. ')]' → logprob: -4.600468635559082
    5. '])' → logprob: -4.975468635559082
    6. ')
' → logprob: -5.225468635559082
    7. '])
' → logprob: -8.225468635559082
    8. ']

' → logprob: -8.600468635559082
    9. ')]
' → logprob: -8.725468635559082
    10. '[' → logprob: -8.975468635559082

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009550517424941063
    2. ' if' → logprob: -7.500955104827881
    3. 'if' → logprob: -9.000954627990723
    4. '    
' → logprob: -9.375954627990723
    5. '
' → logprob: -9.500954627990723
    6. '<|end|>' → logprob: -10.250954627990723
    7. ',' → logprob: -10.625954627990723
    8. ' ' → logprob: -11.000954627990723
    9. '  
' → logprob: -11.750954627990723
    10. 's' → logprob: -12.375954627990723

Token 159: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10572656244039536
    2. '   ' → logprob: -2.355726480484009
    3. ' if' → logprob: -5.230726718902588
    4. '
' → logprob: -9.73072624206543
    5. ' ' → logprob: -10.35572624206543
    6. '	if' → logprob: -10.98072624206543
    7. 'i' → logprob: -10.98072624206543
    8. '    
' → logprob: -11.73072624206543
    9. '  ' → logprob: -11.98072624206543
    10. '       ' → logprob: -12.10572624206543

Token 160: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30004456639289856
    2. ' s' → logprob: -1.5500445365905762
    3. 'a' → logprob: -3.175044536590576
    4. ' a' → logprob: -5.425044536590576
    5. 'b' → logprob: -8.050045013427734
    6. 't' → logprob: -9.425045013427734
    7. ' b' → logprob: -9.550045013427734
    8. ' ' → logprob: -9.675045013427734
    9. '   ' → logprob: -9.675045013427734
    10. 'n' → logprob: -10.300045013427734

Token 161: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -8.816591434879228e-05
    2. '[' → logprob: -9.75008773803711
    3. 'a' → logprob: -11.00008773803711
    4. '[b' → logprob: -11.75008773803711
    5. '[
' → logprob: -13.50008773803711
    6. '```' → logprob: -13.50008773803711
    7. '[i' → logprob: -14.50008773803711
    8. ' [' → logprob: -15.00008773803711
    9. '[A' → logprob: -15.37508773803711
    10. '[s' → logprob: -15.37508773803711

Token 162: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0011566509492695332
    2. '[a' → logprob: -6.876156806945801
    3. 'a' → logprob: -9.5011568069458
    4. 'idx' → logprob: -11.1261568069458
    5. 's' → logprob: -12.1261568069458
    6. '[' → logprob: -12.2511568069458
    7. 'x' → logprob: -12.6261568069458
    8. '```' → logprob: -13.2511568069458
    9. '_' → logprob: -13.5011568069458
    10. '[idx' → logprob: -13.5011568069458

Token 163: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007548770401626825
    2. ']!=' → logprob: -5.007548809051514
    3. ' ]' → logprob: -7.382548809051514
    4. '']' → logprob: -9.632548332214355
    5. ']==' → logprob: -9.757548332214355
    6. '!=' → logprob: -10.257548332214355
    7. ' !=' → logprob: -11.507548332214355
    8. '[' → logprob: -11.757548332214355
    9. '"]' → logprob: -11.757548332214355
    10. '-' → logprob: -12.507548332214355

Token 164: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.04864891245961189
    2. ' !=' → logprob: -3.0486488342285156
    3. '==' → logprob: -10.548648834228516
    4. ']!=' → logprob: -11.923648834228516
    5. '!==' → logprob: -11.923648834228516
    6. ')!=' → logprob: -12.423648834228516
    7. '=' → logprob: -12.423648834228516
    8. ' ' → logprob: -12.673648834228516
    9. '()!=' → logprob: -13.423648834228516
    10. '!=(' → logprob: -13.673648834228516

Token 165: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.38689324259757996
    2. ' t' → logprob: -1.1368932723999023
    3. 's' → logprob: -11.636893272399902
    4. ' ' → logprob: -12.011893272399902
    5. '	t' → logprob: -13.761893272399902
    6. ' ' → logprob: -14.136893272399902
    7. '   ' → logprob: -14.386893272399902
    8. 'b' → logprob: -14.511893272399902
    9. '  ' → logprob: -14.761893272399902
    10. '`t' → logprob: -14.761893272399902

Token 166: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.0100624169572257e-05
    2. 'b' → logprob: -11.250020027160645
    3. '[' → logprob: -12.000020027160645
    4. ' [' → logprob: -14.750020027160645
    5. '```' → logprob: -15.750020027160645
    6. '[
' → logprob: -16.00002098083496
    7. ' b' → logprob: -16.12502098083496
    8. ' ' → logprob: -17.62502098083496
    9. '	b' → logprob: -17.87502098083496
    10. '   ' → logprob: -17.87502098083496

Token 167: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0001684981834841892
    2. 'idx' → logprob: -8.875168800354004
    3. 'b' → logprob: -11.000168800354004
    4. 'a' → logprob: -12.500168800354004
    5. '_index' → logprob: -13.000168800354004
    6. '_' → logprob: -13.125168800354004
    7. 'x' → logprob: -14.000168800354004
    8. 'i' → logprob: -14.750168800354004
    9. 'Idx' → logprob: -14.750168800354004
    10. 't' → logprob: -15.000168800354004

Token 168: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7224951386451721
    2. ']:' → logprob: -1.0974950790405273
    3. '):
' → logprob: -2.0974950790405273
    4. ']:
' → logprob: -3.5974950790405273
    5. ':' → logprob: -3.8474950790405273
    6. ']' → logprob: -5.722495079040527
    7. '   ' → logprob: -6.597495079040527
    8. ')' → logprob: -6.597495079040527
    9. ':
' → logprob: -6.847495079040527
    10. ']):' → logprob: -7.097495079040527

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07681421935558319
    2. '   ' → logprob: -2.9518141746520996
    3. ':' → logprob: -4.5768141746521
    4. ':
' → logprob: -4.7018141746521
    5. 'print' → logprob: -7.7018141746521
    6. '    ' → logprob: -7.9518141746521
    7. '```' → logprob: -8.326814651489258
    8. '        
' → logprob: -8.451814651489258
    9. ' break' → logprob: -8.576814651489258
    10. 'break' → logprob: -8.826814651489258

Token 170: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02681131847202778
    2. ' print' → logprob: -3.901811361312866
    3. '
' → logprob: -5.526811122894287
    4. '       ' → logprob: -6.401811122894287
    5. '   ' → logprob: -8.026811599731445
    6. '           ' → logprob: -9.401811599731445
    7. '```' → logprob: -9.401811599731445
    8. 'break' → logprob: -10.026811599731445
    9. '        
' → logprob: -11.151811599731445
    10. ' 
' → logprob: -11.276811599731445

Token 171: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25658634305000305
    2. '(-' → logprob: -1.5065863132476807
    3. '("-' → logprob: -5.88158655166626
    4. '("' → logprob: -6.75658655166626
    5. '(' → logprob: -7.63158655166626
    6. '"-' → logprob: -10.006586074829102
    7. ' -' → logprob: -10.756586074829102
    8. '"' → logprob: -10.881586074829102
    9. '-No' → logprob: -11.381586074829102
    10. '('' → logprob: -11.506586074829102

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -16.125
    3. '0' → logprob: -16.6875
    4. '```' → logprob: -16.9375
    5. '2' → logprob: -17.1875
    6. ')' → logprob: -17.5625
    7. '11' → logprob: -17.625
    8. '`' → logprob: -17.6875
    9. '
' → logprob: -18.375
    10. '"' → logprob: -18.4375

Token 173: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.012696112506091595
    2. ')' → logprob: -4.387696266174316
    3. '       ' → logprob: -9.012696266174316
    4. ')
' → logprob: -9.887696266174316
    5. '
' → logprob: -12.762696266174316
    6. ')return' → logprob: -12.887696266174316
    7. ' )
' → logprob: -13.137696266174316
    8. '`)
' → logprob: -13.262696266174316
    9. '   ' → logprob: -13.387696266174316
    10. '')
' → logprob: -13.512696266174316

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005716658663004637
    2. '
' → logprob: -5.255716800689697
    3. '        
' → logprob: -8.630716323852539
    4. ')' → logprob: -9.130716323852539
    5. '<|end|>' → logprob: -9.880716323852539
    6. 'exit' → logprob: -10.255716323852539
    7. 'import' → logprob: -10.380716323852539
    8. '```' → logprob: -11.255716323852539
    9. '
' → logprob: -11.505716323852539
    10. ',' → logprob: -11.630716323852539

Token 175: ' quit' (ID: 27737)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.06539522856473923
    2. ' exit' → logprob: -3.5653951168060303
    3. 'break' → logprob: -3.6903951168060303
    4. '       ' → logprob: -5.315395355224609
    5. ' break' → logprob: -5.440395355224609
    6. '
' → logprob: -8.69039535522461
    7. 'import' → logprob: -9.06539535522461
    8. '	exit' → logprob: -9.06539535522461
    9. '_exit' → logprob: -9.44039535522461
    10. '0' → logprob: -9.56539535522461

Token 176: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43612128496170044
    2. '()
' → logprob: -1.1861212253570557
    3. ')' → logprob: -3.3111212253570557
    4. ')
' → logprob: -4.686121463775635
    5. '   ' → logprob: -6.436121463775635
    6. '1' → logprob: -8.311120986938477
    7. '(' → logprob: -9.186120986938477
    8. '())' → logprob: -9.311120986938477
    9. '
' → logprob: -9.436120986938477
    10. '())
' → logprob: -9.436120986938477

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006043838220648468
    2. 'i' → logprob: -7.625604152679443
    3. ' i' → logprob: -9.625604629516602
    4. '<|end|>' → logprob: -10.875604629516602
    5. '
' → logprob: -11.750604629516602
    6. ' ' → logprob: -11.875604629516602
    7. '  ' → logprob: -12.125604629516602
    8. '       ' → logprob: -13.000604629516602
    9. '<|end|>' → logprob: -13.500604629516602
    10. ',' → logprob: -13.625604629516602

Token 178: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.16420912742614746
    2. '   ' → logprob: -1.9142091274261475
    3. ' i' → logprob: -5.539209365844727
    4. '
' → logprob: -10.539209365844727
    5. '  ' → logprob: -11.914209365844727
    6. ' ' → logprob: -11.914209365844727
    7. '	i' → logprob: -12.539209365844727
    8. '    
' → logprob: -13.039209365844727
    9. '    ' → logprob: -15.164209365844727
    10. '++' → logprob: -15.539209365844727

Token 179: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3182298541069031
    2. '+' → logprob: -1.3182299137115479
    3. ' +=' → logprob: -5.443229675292969
    4. '=' → logprob: -7.443229675292969
    5. '++' → logprob: -10.193229675292969
    6. '+
' → logprob: -13.443229675292969
    7. ' +' → logprob: -13.443229675292969
    8. '+="' → logprob: -13.568229675292969
    9. '+='' → logprob: -14.068229675292969
    10. '+++' → logprob: -14.193229675292969

Token 180: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.000019073486328
    4. '```' → logprob: -17.937519073486328
    5. '  ' → logprob: -18.500019073486328
    6. '<|end|>' → logprob: -19.687519073486328
    7. '۱' → logprob: -20.000019073486328
    8. '１' → logprob: -20.250019073486328
    9. ' ' → logprob: -20.375019073486328
    10. '0' → logprob: -20.437519073486328

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -17.875
    4. '   ' → logprob: -20.25
    5. '۱' → logprob: -20.8125
    6. '<|end|>' → logprob: -20.8125
    7. '１' → logprob: -21.0625
    8. '  ' → logprob: -21.375
    9. '+' → logprob: -21.375
    10. '
' → logprob: -21.4375

Token 182: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.051300402730703354
    2. '
' → logprob: -3.176300287246704
    3. '<|end|>' → logprob: -5.801300525665283
    4. ')' → logprob: -6.051300525665283
    5. ')
' → logprob: -6.551300525665283
    6. '  
' → logprob: -7.926300525665283
    7. '0' → logprob: -8.426300048828125
    8. '```' → logprob: -8.676300048828125
    9. 's' → logprob: -9.176300048828125
    10. ' print' → logprob: -9.426300048828125

Token 183: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002338144404347986
    2. '#' → logprob: -9.75023365020752
    3. 'result' → logprob: -10.00023365020752
    4. 'total' → logprob: -10.62523365020752
    5. 'length' → logprob: -10.87523365020752
    6. 'count' → logprob: -11.25023365020752
    7. '```' → logprob: -11.50023365020752
    8. ' print' → logprob: -12.00023365020752
    9. 'L' → logprob: -12.00023365020752
    10. ')' → logprob: -12.12523365020752

Token 184: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0007407767116092145
    2. '(' → logprob: -7.250741004943848
    3. 'L' → logprob: -10.500741004943848
    4. '((' → logprob: -13.125741004943848
    5. '(N' → logprob: -14.875741004943848
    6. '()' → logprob: -15.625741004943848
    7. '('' → logprob: -15.750741004943848
    8. '(s' → logprob: -16.37574005126953
    9. '(n' → logprob: -16.50074005126953
    10. ' L' → logprob: -16.75074005126953

Token 185: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00219273311085999
    2. ' -' → logprob: -7.002192497253418
    3. ' )' → logprob: -7.252192497253418
    4. '-' → logprob: -7.502192497253418
    5. '-)' → logprob: -11.502192497253418
    6. '))' → logprob: -12.752192497253418
    7. ')
' → logprob: -13.377192497253418
    8. '-l' → logprob: -13.752192497253418
    9. '`)' → logprob: -14.252192497253418
    10. ')`' → logprob: -14.877192497253418


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 183
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 81
Tokens correctement prédits (top 10): 148
Précision stricte (1ère position): 41.53%
Précision adaptée (1ère position): 44.26%
Précision (top 10): 80.87%
================================================================================
