================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

# Demander le rayon à l'utilisateur... je suppose
r = int(input("Rayon? "))

# Calculer le périmètre du cercle, j'espère que la formule est bonne
perimetre = 2 * math.pi * r # Peut-être que j'aurais dû arrondir ?

print(perimetre)  # Voilà!
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002430951688438654
    2. '```' → logprob: -7.2524309158325195
    3. '\n' → logprob: -7.3774309158325195
    4. '\' → logprob: -7.8774309158325195
    5. 'import' → logprob: -8.00243091583252
    6. '<|end|>' → logprob: -9.25243091583252
    7. '.pi' → logprob: -10.25243091583252
    8. 'a' → logprob: -11.00243091583252
    9. '.e' → logprob: -11.12743091583252
    10. '<|end|>' → logprob: -11.12743091583252

Token 4: ' Dem' (ID: 9458)
  Prédit: ' Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Calculate' → logprob: -0.905214786529541
    2. ' ' → logprob: -2.155214786529541
    3. 'Calculate' → logprob: -2.530214786529541
    4. ' Calcul' → logprob: -2.780214786529541
    5. ' This' → logprob: -3.155214786529541
    6. ' factorial' → logprob: -3.155214786529541
    7. ' calculates' → logprob: -3.530214786529541
    8. ' calculate' → logprob: -3.780214786529541
    9. ' function' → logprob: -3.780214786529541
    10. ' area' → logprob: -4.155214786529541

Token 5: 'ander' (ID: 9330)
  Prédit: 'onstr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onstr' → logprob: -0.058302562683820724
    2. 'o' → logprob: -3.683302640914917
    3. 'a' → logprob: -4.433302402496338
    4. 'on' → logprob: -5.058302402496338
    5. 'and' → logprob: -5.183302402496338
    6. '```' → logprob: -6.433302402496338
    7. ' on' → logprob: -6.558302402496338
    8. '   ' → logprob: -6.933302402496338
    9. 'ands' → logprob: -7.058302402496338
    10. '#' → logprob: -7.183302402496338

Token 6: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.055383969098329544
    2. ' )' → logprob: -3.9303839206695557
    3. ')' → logprob: -4.180384159088135
    4. '_' → logprob: -5.055384159088135
    5. 'a' → logprob: -5.430384159088135
    6. 's' → logprob: -6.555384159088135
    7. ' la' → logprob: -6.680384159088135
    8. ' a' → logprob: -6.805384159088135
    9. '  ' → logprob: -7.805384159088135
    10. ',' → logprob: -8.180383682250977

Token 7: ' rayon' (ID: 80967)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.5339691042900085
    2. 'nombre' → logprob: -1.0339691638946533
    3. ' rayon' → logprob: -3.4089691638946533
    4. 'radius' → logprob: -4.408968925476074
    5. 'r' → logprob: -5.033968925476074
    6. 'import' → logprob: -6.408968925476074
    7. 'angle' → logprob: -6.783968925476074
    8. ' nombre' → logprob: -7.033968925476074
    9. '#' → logprob: -7.533968925476074
    10. 'nom' → logprob: -7.658968925476074

Token 8: ' à' (ID: 1221)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14130376279354095
    2. ' ' → logprob: -2.266303777694702
    3. '_' → logprob: -5.016303539276123
    4. 'ray' → logprob: -5.141303539276123
    5. ' rayon' → logprob: -5.391303539276123
    6. 'radius' → logprob: -5.891303539276123
    7. ' )' → logprob: -6.391303539276123
    8. ')' → logprob: -6.766303539276123
    9. ' r' → logprob: -6.891303539276123
    10. '#' → logprob: -7.141303539276123

Token 9: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.34871870279312134
    2. ' l' → logprob: -1.2237186431884766
    3. 'user' → logprob: -9.223718643188477
    4. ' ' → logprob: -10.098718643188477
    5. ' ' → logprob: -10.223718643188477
    6. ' user' → logprob: -10.848718643188477
    7. 'u' → logprob: -11.098718643188477
    8. '	l' → logprob: -11.223718643188477
    9. ''utilisateur' → logprob: -11.598718643188477
    10. ''' → logprob: -12.723718643188477

Token 10: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.0029546432197093964
    2. ''' → logprob: -6.252954483032227
    3. ''us' → logprob: -8.002954483032227
    4. '’utilisateur' → logprob: -8.127954483032227
    5. 'u' → logprob: -8.877954483032227
    6. ''util' → logprob: -9.127954483032227
    7. ''user' → logprob: -9.752954483032227
    8. 'a' → logprob: -10.627954483032227
    9. ''u' → logprob: -10.627954483032227
    10. 'util' → logprob: -11.377954483032227

Token 11: '...' (ID: 1008)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02167641744017601
    2. 'radius' → logprob: -4.271676540374756
    3. 'ray' → logprob: -4.896676540374756
    4. ' rayon' → logprob: -12.521676063537598
    5. ' ' → logprob: -12.646676063537598
    6. 's' → logprob: -13.646676063537598
    7. ' radius' → logprob: -13.646676063537598
    8. '```' → logprob: -14.396676063537598
    9. ' ray' → logprob: -14.521676063537598
    10. 'n' → logprob: -14.521676063537598

Token 12: ' je' (ID: 1264)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.012683515436947346
    2. 'radius' → logprob: -4.762683391571045
    3. 'ray' → logprob: -6.262683391571045
    4. ' ' → logprob: -6.762683391571045
    5. '_' → logprob: -8.012683868408203
    6. ' r' → logprob: -8.762683868408203
    7. ' rayon' → logprob: -9.012683868408203
    8. ')' → logprob: -9.762683868408203
    9. '#' → logprob: -10.012683868408203
    10. '(r' → logprob: -10.387683868408203

Token 13: ' suppose' (ID: 35968)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0851508378982544
    2. ''' → logprob: -1.4601508378982544
    3. ' ' → logprob: -1.5851508378982544
    4. '_' → logprob: -2.960150718688965
    5. 't' → logprob: -3.835150718688965
    6. '=' → logprob: -3.835150718688965
    7. 'space' → logprob: -3.835150718688965
    8. 'a' → logprob: -4.335150718688965
    9. ' =' → logprob: -4.460150718688965
    10. 's' → logprob: -4.710150718688965

Token 14: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06493406742811203
    2. 'radius' → logprob: -3.439934015274048
    3. ' ' → logprob: -4.689934253692627
    4. '_' → logprob: -4.814934253692627
    5. 'ray' → logprob: -5.314934253692627
    6. '#' → logprob: -5.814934253692627
    7. 's' → logprob: -6.939934253692627
    8. ')' → logprob: -7.439934253692627
    9. ' rayon' → logprob: -7.564934253692627
    10. '```' → logprob: -7.564934253692627

Token 15: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0686906948685646
    2. 'radius' → logprob: -3.068690776824951
    3. 'ray' → logprob: -3.943690776824951
    4. ' ' → logprob: -8.943690299987793
    5. ' rayon' → logprob: -9.068690299987793
    6. ' r' → logprob: -9.443690299987793
    7. ' radius' → logprob: -10.568690299987793
    8. '_' → logprob: -10.568690299987793
    9. ')' → logprob: -10.693690299987793
    10. '(r' → logprob: -11.193690299987793

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28841328620910645
    2. '=' → logprob: -1.5384132862091064
    3. ' ' → logprob: -3.7884132862091064
    4. 'a' → logprob: -4.788413047790527
    5. 'ay' → logprob: -6.288413047790527
    6. 'adius' → logprob: -6.288413047790527
    7. '_' → logprob: -7.413413047790527
    8. 'ad' → logprob: -8.663413047790527
    9. ',' → logprob: -8.913413047790527
    10. '  ' → logprob: -10.413413047790527

Token 17: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.005050878971815109
    2. 'float' → logprob: -5.3800506591796875
    3. ' input' → logprob: -8.505050659179688
    4. ' ' → logprob: -8.880050659179688
    5. ' int' → logprob: -9.630050659179688
    6. 'input' → logprob: -11.505050659179688
    7. '=float' → logprob: -12.505050659179688
    8. ' ' → logprob: -12.630050659179688
    9. 'int' → logprob: -12.880050659179688
    10. '0' → logprob: -13.880050659179688

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4742007553577423
    2. '(input' → logprob: -0.9742007255554199
    3. 'input' → logprob: -9.974201202392578
    4. ' (' → logprob: -9.974201202392578
    5. '(
' → logprob: -10.849201202392578
    6. '()' → logprob: -13.099201202392578
    7. '('' → logprob: -13.224201202392578
    8. '(

' → logprob: -13.349201202392578
    9. '(`' → logprob: -14.099201202392578
    10. '(raw' → logprob: -14.099201202392578

Token 19: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17182038724422455
    2. '("("' → logprob: -2.1718204021453857
    3. '("' → logprob: -3.4218204021453857
    4. '('' → logprob: -4.546820163726807
    5. '("(' → logprob: -8.671820640563965
    6. '("")' → logprob: -8.921820640563965
    7. '(">' → logprob: -9.296820640563965
    8. '(""))' → logprob: -9.546820640563965
    9. '(""' → logprob: -9.921820640563965
    10. '(
' → logprob: -10.046820640563965

Token 20: 'Ray' (ID: 37513)
  Prédit: 'Ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ent' → logprob: -0.9832844138145447
    2. 'Ray' → logprob: -1.8582844734191895
    3. 'r' → logprob: -1.9832844734191895
    4. 'Enter' → logprob: -2.1082844734191895
    5. 'Veuillez' → logprob: -2.8582844734191895
    6. 'ray' → logprob: -3.3582844734191895
    7. 'radius' → logprob: -3.6082844734191895
    8. 'le' → logprob: -3.7332844734191895
    9. 'Radius' → logprob: -4.1082844734191895
    10. 'Quel' → logprob: -4.2332844734191895

Token 21: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.00010509284038562328
    2. 'onnement' → logprob: -10.500104904174805
    3. 'ons' → logprob: -10.625104904174805
    4. ' on' → logprob: -10.625104904174805
    5. 'on's' → logprob: -11.000104904174805
    6. 'onn' → logprob: -11.750104904174805
    7. 'os' → logprob: -14.125104904174805
    8. 'o' → logprob: -14.500104904174805
    9. 'son' → logprob: -14.625104904174805
    10. 'ón' → logprob: -14.875104904174805

Token 22: '?' (ID: 30)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5832458138465881
    2. ':' → logprob: -0.8332458138465881
    3. ' du' → logprob: -5.708245754241943
    4. ' "))' → logprob: -6.583245754241943
    5. ' ' → logprob: -6.833245754241943
    6. ')' → logprob: -7.583245754241943
    7. '"))' → logprob: -8.333246231079102
    8. ' ' → logprob: -9.208246231079102
    9. '(r' → logprob: -9.458246231079102
    10. ' radius' → logprob: -9.458246231079102

Token 23: ' "' (ID: 392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15452083945274353
    2. ' :' → logprob: -2.6545207500457764
    3. '"))' → logprob: -3.0295207500457764
    4. ')' → logprob: -4.4045209884643555
    5. '")' → logprob: -4.7795209884643555
    6. '):' → logprob: -6.0295209884643555
    7. ' "))' → logprob: -7.4045209884643555
    8. '"):' → logprob: -8.404520988464355
    9. '>' → logprob: -9.279520988464355
    10. '"' → logprob: -9.529520988464355

Token 24: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3133411705493927
    2. ')' → logprob: -1.3133411407470703
    3. '"))' → logprob: -9.93834114074707
    4. ')))' → logprob: -11.43834114074707
    5. '):' → logprob: -11.43834114074707
    6. ':' → logprob: -12.93834114074707
    7. '))
' → logprob: -13.31334114074707
    8. '),' → logprob: -13.93834114074707
    9. ''))' → logprob: -14.18834114074707
    10. ')")' → logprob: -14.43834114074707

Token 25: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005637116730213165
    2. '#' → logprob: -6.130637168884277
    3. 'a' → logprob: -7.130637168884277
    4. '*' → logprob: -7.255637168884277
    5. 'n' → logprob: -7.755637168884277
    6. ')
' → logprob: -8.505637168884277
    7. 'r' → logprob: -8.630637168884277
    8. 's' → logprob: -8.755637168884277
    9. 'd' → logprob: -8.755637168884277
    10. 'area' → logprob: -8.755637168884277

Token 26: ' Calcul' (ID: 57243)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.5417159795761108
    2. 'surface' → logprob: -1.6667159795761108
    3. ' area' → logprob: -2.6667160987854004
    4. 'volume' → logprob: -2.9167160987854004
    5. 'aire' → logprob: -3.2917160987854004
    6. ' surface' → logprob: -3.4167160987854004
    7. ' volume' → logprob: -4.7917160987854
    8. '#' → logprob: -5.2917160987854
    9. ' aire' → logprob: -5.2917160987854
    10. 'a' → logprob: -5.5417160987854

Token 27: 'er' (ID: 259)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28983569145202637
    2. ' )' → logprob: -2.4148356914520264
    3. 'r' → logprob: -3.2898356914520264
    4. 's' → logprob: -3.4148356914520264
    5. '_' → logprob: -3.7898356914520264
    6. 'surface' → logprob: -4.4148359298706055
    7. ' =' → logprob: -4.5398359298706055
    8. 'ray' → logprob: -4.7898359298706055
    9. 'radius' → logprob: -4.7898359298706055
    10. '_surface' → logprob: -5.1648359298706055

Token 28: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9620485305786133
    2. 'area' → logprob: -2.5870485305786133
    3. 'surface' → logprob: -2.7120485305786133
    4. ')' → logprob: -2.9620485305786133
    5. '*' → logprob: -3.0870485305786133
    6. 'r' → logprob: -3.0870485305786133
    7. '_surface' → logprob: -3.2120485305786133
    8. '_' → logprob: -3.3370485305786133
    9. ' )' → logprob: -3.5870485305786133
    10. ' =' → logprob: -3.7120485305786133

Token 29: ' pér' (ID: 44932)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.4583800435066223
    2. 'p' → logprob: -2.5833799839019775
    3. 'surface' → logprob: -2.5833799839019775
    4. 'volume' → logprob: -2.8333799839019775
    5. 'c' → logprob: -3.0833799839019775
    6. ' diamètre' → logprob: -3.7083799839019775
    7. ' pér' → logprob: -3.9583799839019775
    8. 'ray' → logprob: -4.083380222320557
    9. 'diam' → logprob: -4.333380222320557
    10. ' cercle' → logprob: -4.458380222320557

Token 30: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -5.371605948312208e-05
    2. '#' → logprob: -10.875053405761719
    3. 'i' → logprob: -11.625053405761719
    4. '\' → logprob: -12.625053405761719
    5. 'm' → logprob: -13.000053405761719
    6. '"' → logprob: -13.000053405761719
    7. 'им' → logprob: -13.250053405761719
    8. 'r' → logprob: -13.375053405761719
    9. 'um' → logprob: -13.625053405761719
    10. 'om' → logprob: -13.625053405761719

Token 31: 'ètre' (ID: 60948)
  Prédit: 'ètre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètre' → logprob: -0.0012273734901100397
    2. 'etre' → logprob: -7.126227378845215
    3. 'è' → logprob: -7.876227378845215
    4. 'ète' → logprob: -11.001227378845215
    5. 'èt' → logprob: -12.001227378845215
    6. 'e' → logprob: -12.251227378845215
    7. 'ètres' → logprob: -12.376227378845215
    8. 'tre' → logprob: -12.751227378845215
    9. 'être' → logprob: -13.126227378845215
    10. '`' → logprob: -13.501227378845215

Token 32: ' du' (ID: 1462)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.044071879237890244
    2. ' p' → logprob: -4.419071674346924
    3. 'per' → logprob: -4.669071674346924
    4. ' ' → logprob: -4.794071674346924
    5. ' =' → logprob: -5.294071674346924
    6. 'P' → logprob: -5.919071674346924
    7. '=' → logprob: -6.794071674346924
    8. '_' → logprob: -6.919071674346924
    9. ' pér' → logprob: -7.419071674346924
    10. ',' → logprob: -7.669071674346924

Token 33: ' cercle' (ID: 172399)
  Prédit: ' cercle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cercle' → logprob: -0.05801484361290932
    2. 'c' → logprob: -3.0580148696899414
    3. 'cer' → logprob: -5.308014869689941
    4. ' cer' → logprob: -5.558014869689941
    5. 'circle' → logprob: -8.683014869689941
    6. '```' → logprob: -8.808014869689941
    7. ' circle' → logprob: -9.183014869689941
    8. ' ' → logprob: -10.058014869689941
    9. ' c' → logprob: -10.308014869689941
    10. ' cerc' → logprob: -10.558014869689941

Token 34: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0359160415828228
    2. 'per' → logprob: -3.9109160900115967
    3. ' p' → logprob: -5.285915851593018
    4. 'P' → logprob: -5.660915851593018
    5. ' pér' → logprob: -5.660915851593018
    6. ',' → logprob: -7.410915851593018
    7. ' =' → logprob: -7.535915851593018
    8. ' ' → logprob: -7.660915851593018
    9. ':' → logprob: -8.285916328430176
    10. '=' → logprob: -8.660916328430176

Token 35: ' j' (ID: 441)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5730168223381042
    2. 'p' → logprob: -1.198016881942749
    3. 'per' → logprob: -2.823016881942749
    4. ' ' → logprob: -3.573016881942749
    5. ' pér' → logprob: -3.573016881942749
    6. '2' → logprob: -5.07301664352417
    7. 'P' → logprob: -5.44801664352417
    8. ' P' → logprob: -5.69801664352417
    9. ' per' → logprob: -5.94801664352417
    10. ' perí' → logprob: -7.57301664352417

Token 36: ''espère' (ID: 116557)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.20070062577724457
    2. 'uste' → logprob: -1.9507006406784058
    3. '=' → logprob: -4.200700759887695
    4. 'ust' → logprob: -4.825700759887695
    5. ''util' → logprob: -5.200700759887695
    6. ' =' → logprob: -5.450700759887695
    7. ''' → logprob: -5.825700759887695
    8. ''ai' → logprob: -7.200700759887695
    9. ''espère' → logprob: -8.075700759887695
    10. '='' → logprob: -8.075700759887695

Token 37: ' que' (ID: 661)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03888634592294693
    2. 'per' → logprob: -4.413886547088623
    3. ' p' → logprob: -4.538886547088623
    4. ' pér' → logprob: -5.288886547088623
    5. 'P' → logprob: -5.538886547088623
    6. ' ' → logprob: -6.413886547088623
    7. ')' → logprob: -7.038886547088623
    8. ' perimeter' → logprob: -7.163886547088623
    9. ',' → logprob: -7.663886547088623
    10. ':' → logprob: -7.788886547088623

Token 38: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03917674347758293
    2. 'r' → logprob: -4.914176940917969
    3. ' le' → logprob: -4.914176940917969
    4. '2' → logprob: -5.039176940917969
    5. ' la' → logprob: -5.539176940917969
    6. ' r' → logprob: -5.914176940917969
    7. 'le' → logprob: -5.914176940917969
    8. ' l' → logprob: -6.289176940917969
    9. ' )' → logprob: -6.914176940917969
    10. ' p' → logprob: -7.289176940917969

Token 39: ' formule' (ID: 84316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.915152370929718
    2. ' pér' → logprob: -1.1651523113250732
    3. ' p' → logprob: -2.1651523113250732
    4. 'p' → logprob: -2.7901523113250732
    5. 'per' → logprob: -3.2901523113250732
    6. ' #' → logprob: -3.7901523113250732
    7. ' formule' → logprob: -4.290152549743652
    8. ' per' → logprob: -5.040152549743652
    9. 'r' → logprob: -5.040152549743652
    10. ' perimeter' → logprob: -5.915152549743652

Token 40: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5352318286895752
    2. 'p' → logprob: -1.5352318286895752
    3. '=' → logprob: -2.410231828689575
    4. 'per' → logprob: -2.910231828689575
    5. ' ' → logprob: -3.910231828689575
    6. '2' → logprob: -5.035231590270996
    7. 'P' → logprob: -5.535231590270996
    8. ':' → logprob: -5.660231590270996
    9. '_per' → logprob: -5.660231590270996
    10. ' pér' → logprob: -5.660231590270996

Token 41: ' bonne' (ID: 24450)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28602132201194763
    2. ' correcte' → logprob: -2.1610212326049805
    3. ' correct' → logprob: -2.9110212326049805
    4. ' :' → logprob: -3.0360212326049805
    5. ':' → logprob: -4.6610212326049805
    6. 'correct' → logprob: -5.7860212326049805
    7. '```' → logprob: -5.9110212326049805
    8. ' ```' → logprob: -6.1610212326049805
    9. ' math' → logprob: -6.4110212326049805
    10. ' correctly' → logprob: -6.5360212326049805

Token 42: '
' (ID: 198)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13486380875110626
    2. 'per' → logprob: -3.13486385345459
    3. ')' → logprob: -3.50986385345459
    4. ' p' → logprob: -4.25986385345459
    5. ' pér' → logprob: -4.50986385345459
    6. '2' → logprob: -4.75986385345459
    7. ' ' → logprob: -5.25986385345459
    8. ':' → logprob: -5.63486385345459
    9. ' :' → logprob: -6.00986385345459
    10. ' )' → logprob: -6.00986385345459

Token 43: 'per' (ID: 543)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.11026429384946823
    2. 'P' → logprob: -2.860264301300049
    3. 'per' → logprob: -3.110264301300049
    4. '2' → logprob: -7.235264301300049
    5. ' p' → logprob: -7.485264301300049
    6. ' pér' → logprob: -7.485264301300049
    7. ' P' → logprob: -8.36026382446289
    8. '_per' → logprob: -9.23526382446289
    9. 'C' → logprob: -9.36026382446289
    10. 'peri' → logprob: -9.98526382446289

Token 44: 'imet' (ID: 29890)
  Prédit: 'imet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imet' → logprob: -0.6074244976043701
    2. 'im' → logprob: -0.8574244976043701
    3. 'imeter' → logprob: -4.107424736022949
    4. 'i' → logprob: -4.357424736022949
    5. '=' → logprob: -7.607424736022949
    6. 'ime' → logprob: -7.982424736022949
    7. 'imiter' → logprob: -8.73242473602295
    8. '_' → logprob: -9.23242473602295
    9. 'í' → logprob: -9.48242473602295
    10. '   ' → logprob: -9.73242473602295

Token 45: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.5756135582923889
    2. 'tre' → logprob: -0.9506135582923889
    3. 'ètre' → logprob: -3.450613498687744
    4. 'etre' → logprob: -4.575613498687744
    5. 'e' → logprob: -5.200613498687744
    6. 'er' → logprob: -6.450613498687744
    7. ' =' → logprob: -6.825613498687744
    8. '=' → logprob: -7.450613498687744
    9. 'r' → logprob: -9.450613975524902
    10. '`' → logprob: -10.200613975524902

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08698337525129318
    2. '=' → logprob: -2.7119834423065186
    3. '_' → logprob: -4.0869832038879395
    4. ' ' → logprob: -9.961983680725098
    5. '_space' → logprob: -10.711983680725098
    6. 's' → logprob: -11.711983680725098
    7. ')' → logprob: -12.586983680725098
    8. '_c' → logprob: -12.711983680725098
    9. '_=' → logprob: -12.961983680725098
    10. ',' → logprob: -13.086983680725098

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28120219707489014
    2. '2' → logprob: -1.4062021970748901
    3. ' math' → logprob: -10.15620231628418
    4. 'math' → logprob: -12.15620231628418
    5. ' ' → logprob: -12.65620231628418
    6. '   ' → logprob: -14.09370231628418
    7. '  ' → logprob: -14.78120231628418
    8. '```' → logprob: -14.78120231628418
    9. 'r' → logprob: -15.34370231628418
    10. ' (' → logprob: -15.59370231628418

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038145645521581173
    2. ' ' → logprob: -7.8753814697265625
    3. 'math' → logprob: -13.750381469726562
    4. ' math' → logprob: -17.125381469726562
    5. '```' → logprob: -17.250381469726562
    6. '1' → logprob: -17.375381469726562
    7. '0' → logprob: -17.500381469726562
    8. 'round' → logprob: -17.625381469726562
    9. '6' → logprob: -17.750381469726562
    10. 'int' → logprob: -17.875381469726562

Token 49: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03806651011109352
    2. '*' → logprob: -3.2880666255950928
    3. ' ' → logprob: -11.663066864013672
    4. '*pi' → logprob: -11.913066864013672
    5. '*Math' → logprob: -12.038066864013672
    6. ' ' → logprob: -12.788066864013672
    7. '*object' → logprob: -15.163066864013672
    8. 'import' → logprob: -15.413066864013672
    9. '*r' → logprob: -15.538066864013672
    10. '*m' → logprob: -15.663066864013672

Token 50: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.011204380542039871
    2. ' ' → logprob: -4.511204242706299
    3. 'math' → logprob: -9.261204719543457
    4. ' r' → logprob: -10.511204719543457
    5. ' m' → logprob: -11.261204719543457
    6. ' ' → logprob: -12.011204719543457
    7. 'r' → logprob: -12.011204719543457
    8. ' pi' → logprob: -12.636204719543457
    9. ' import' → logprob: -13.636204719543457
    10. 'm' → logprob: -14.011204719543457

Token 51: '.pi' (ID: 55497)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12747792899608612
    2. '.pi' → logprob: -2.1274778842926025
    3. '.sqrt' → logprob: -8.002477645874023
    4. ' .' → logprob: -9.127477645874023
    5. '.sin' → logprob: -9.752477645874023
    6. '.PI' → logprob: -10.377477645874023
    7. '.cos' → logprob: -12.252477645874023
    8. '.atan' → logprob: -12.752477645874023
    9. '.*' → logprob: -12.877477645874023
    10. '.s' → logprob: -13.127477645874023

Token 52: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3167281448841095
    2. '*' → logprob: -1.316728115081787
    3. '*r' → logprob: -5.691728115081787
    4. 'r' → logprob: -9.566728591918945
    5. ' r' → logprob: -11.566728591918945
    6. ' ' → logprob: -11.941728591918945
    7. '*s' → logprob: -15.691728591918945
    8. ' ' → logprob: -15.941728591918945
    9. '*object' → logprob: -17.316728591918945
    10. '*f' → logprob: -17.691728591918945

Token 53: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25193390250205994
    2. ' r' → logprob: -1.5019339323043823
    3. ' ' → logprob: -13.001934051513672
    4. ' ' → logprob: -13.001934051513672
    5. '	r' → logprob: -15.251934051513672
    6. '_r' → logprob: -16.876934051513672
    7. '*r' → logprob: -18.626934051513672
    8. ' 
' → logprob: -18.939434051513672
    9. 'radius' → logprob: -18.939434051513672
    10. ' р' → logprob: -19.001934051513672

Token 54: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06159607321023941
    2. '#' → logprob: -3.186596155166626
    3. '
' → logprob: -4.561595916748047
    4. ')' → logprob: -5.436595916748047
    5. '<|end|>' → logprob: -6.936595916748047
    6. '*' → logprob: -7.311595916748047
    7. ' print' → logprob: -7.686595916748047
    8. '

' → logprob: -8.311595916748047
    9. '#print' → logprob: -8.436595916748047
    10. '+' → logprob: -8.686595916748047

Token 55: ' Peut' (ID: 116891)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014718878082931042
    2. ' print' → logprob: -7.251471996307373
    3. ')' → logprob: -8.126471519470215
    4. '#' → logprob: -8.751471519470215
    5. '
' → logprob: -9.751471519470215
    6. '<|end|>' → logprob: -9.751471519470215
    7. 'p' → logprob: -10.251471519470215
    8. 'r' → logprob: -10.626471519470215
    9. 'prin' → logprob: -11.251471519470215
    10. '.' → logprob: -11.251471519470215

Token 56: '-être' (ID: 33599)
  Prédit: '-être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-être' → logprob: -0.48499596118927
    2. 'être' → logprob: -1.35999596118927
    3. 'etre' → logprob: -2.6099958419799805
    4. 'tre' → logprob: -3.3599958419799805
    5. 're' → logprob: -4.6099958419799805
    6. '-' → logprob: -5.4849958419799805
    7. 'êt' → logprob: -5.8599958419799805
    8. '#' → logprob: -7.4849958419799805
    9. 'endre' → logprob: -8.10999584197998
    10. 'ê' → logprob: -8.10999584197998

Token 57: ' que' (ID: 661)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6840375065803528
    2. '
' → logprob: -0.9340375065803528
    3. '

' → logprob: -2.809037446975708
    4. ')' → logprob: -3.809037446975708
    5. '#' → logprob: -5.434037685394287
    6. '
' → logprob: -5.934037685394287
    7. ' print' → logprob: -5.934037685394287
    8. ' 

' → logprob: -6.184037685394287
    9. ' 
' → logprob: -6.434037685394287
    10. '*' → logprob: -6.434037685394287

Token 58: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6637968420982361
    2. 'r' → logprob: -1.2887969017028809
    3. ' r' → logprob: -2.038796901702881
    4. ' math' → logprob: -3.163796901702881
    5. 'per' → logprob: -4.913796901702881
    6. ' print' → logprob: -5.538796901702881
    7. 'math' → logprob: -5.663796901702881
    8. ' per' → logprob: -6.038796901702881
    9. 'print' → logprob: -6.038796901702881
    10. ')' → logprob: -6.413796901702881

Token 59: ''aurais' (ID: 149917)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05325713008642197
    2. ''ai' → logprob: -3.5532572269439697
    3. ''' → logprob: -4.928256988525391
    4. ''aurais' → logprob: -5.303256988525391
    5. ''aur' → logprob: -5.928256988525391
    6. ''a' → logprob: -6.928256988525391
    7. ''oubl' → logprob: -6.928256988525391
    8. 'a' → logprob: -7.303256988525391
    9. ''espère' → logprob: -7.553256988525391
    10. 'eux' → logprob: -7.803256988525391

Token 60: ' dû' (ID: 70715)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.28298458456993103
    2. ' dû' → logprob: -2.282984495162964
    3. ' du' → logprob: -2.532984495162964
    4. 'd' → logprob: -3.157984495162964
    5. 'pu' → logprob: -4.657984733581543
    6. 'do' → logprob: -5.782984733581543
    7. 'due' → logprob: -5.782984733581543
    8. ' ' → logprob: -6.032984733581543
    9. 'f' → logprob: -7.532984733581543
    10. 'mettre' → logprob: -7.657984733581543

Token 61: ' arr' (ID: 1724)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.3970719575881958
    2. 'import' → logprob: -1.7720719575881958
    3. ' utiliser' → logprob: -2.1470718383789062
    4. 'mettre' → logprob: -2.3970718383789062
    5. 'aj' → logprob: -2.5220718383789062
    6. 'v' → logprob: -2.6470718383789062
    7. ' ajouter' → logprob: -3.1470718383789062
    8. 'faire' → logprob: -3.8970718383789062
    9. ' vérifier' → logprob: -3.8970718383789062
    10. 'prendre' → logprob: -4.022071838378906

Token 62: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.0005707867676392198
    2. 'ondi' → logprob: -8.250571250915527
    3. 'on' → logprob: -8.750571250915527
    4. 'onder' → logprob: -8.875571250915527
    5. 'ondissement' → logprob: -12.750571250915527
    6. 'o' → logprob: -13.125571250915527
    7. 'od' → logprob: -14.000571250915527
    8. '

' → logprob: -14.125571250915527
    9. '\' → logprob: -14.625571250915527
    10. 'онд' → logprob: -15.125571250915527

Token 63: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.00041172682540491223
    2. 'i' → logprob: -7.875411510467529
    3. 'r' → logprob: -11.750411987304688
    4. '#' → logprob: -12.125411987304688
    5. '```' → logprob: -12.250411987304688
    6. 'er' → logprob: -13.375411987304688
    7. '.ir' → logprob: -13.625411987304688
    8. 'ond' → logprob: -14.000411987304688
    9. 'is' → logprob: -14.250411987304688
    10. '   ' → logprob: -14.250411987304688

Token 64: ' ?

' (ID: 13570)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02181849628686905
    2. '
' → logprob: -4.7718186378479
    3. ')' → logprob: -5.2718186378479
    4. 'per' → logprob: -5.5218186378479
    5. 'r' → logprob: -7.2718186378479
    6. ' print' → logprob: -7.5218186378479
    7. 'p' → logprob: -7.6468186378479
    8. '#' → logprob: -7.8968186378479
    9. '' → logprob: -8.271818161010742
    10. ' 
' → logprob: -8.521818161010742

Token 65: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004460623953491449
    2. ')' → logprob: -6.25446081161499
    3. '
' → logprob: -6.37946081161499
    4. ' print' → logprob: -8.754460334777832
    5. 'per' → logprob: -8.879460334777832
    6. 'p' → logprob: -9.004460334777832
    7. '
' → logprob: -9.379460334777832
    8. '' → logprob: -10.004460334777832
    9. '#' → logprob: -10.004460334777832
    10. ' 
' → logprob: -10.379460334777832

Token 66: '(per' (ID: 96497)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001946248929016292
    2. '(per' → logprob: -6.251946449279785
    3. '("' → logprob: -12.501946449279785
    4. '(f' → logprob: -12.626946449279785
    5. '('' → logprob: -13.001946449279785
    6. '(p' → logprob: -13.251946449279785
    7. '(round' → logprob: -13.501946449279785
    8. '()' → logprob: -13.876946449279785
    9. '(print' → logprob: -13.876946449279785
    10. '((' → logprob: -14.126946449279785

Token 67: 'imet' (ID: 29890)
  Prédit: 'etre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etre' → logprob: -0.592417299747467
    2. 'met' → logprob: -1.2174172401428223
    3. 'tre' → logprob: -2.0924172401428223
    4. 'imet' → logprob: -3.7174172401428223
    5. 't' → logprob: -6.342417240142822
    6. 'et' → logprob: -7.467417240142822
    7. 'im' → logprob: -7.467417240142822
    8. 're' → logprob: -9.34241771697998
    9. 'm' → logprob: -10.21741771697998
    10. 'ètre' → logprob: -10.34241771697998

Token 68: 're' (ID: 264)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.5761013031005859
    2. 're' → logprob: -0.8261013031005859
    3. 'etre' → logprob: -9.451101303100586
    4. 't' → logprob: -9.701101303100586
    5. 'te' → logprob: -11.826101303100586
    6. 'e' → logprob: -12.201101303100586
    7. 'r' → logprob: -13.701101303100586
    8. ' tre' → logprob: -14.076101303100586
    9. 'ètre' → logprob: -14.326101303100586
    10. '`' → logprob: -14.326101303100586

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.500001907348633
    3. '))' → logprob: -14.875001907348633
    4. ')
' → logprob: -16.875001907348633
    5. ')`' → logprob: -17.625001907348633
    6. '`)' → logprob: -18.625001907348633
    7. ')**' → logprob: -18.625001907348633
    8. ')#' → logprob: -19.000001907348633
    9. ')")' → logprob: -19.625001907348633
    10. '}' → logprob: -19.625001907348633

Token 70: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017306724563241005
    2. '<|end|>' → logprob: -4.392306804656982
    3. '#' → logprob: -6.392306804656982
    4. '(' → logprob: -7.392306804656982
    5. '()' → logprob: -7.517306804656982
    6. ',' → logprob: -8.142306327819824
    7. '
' → logprob: -8.392306327819824
    8. '\' → logprob: -8.392306327819824
    9. '```' → logprob: -8.392306327819824
    10. '<|end|>' → logprob: -8.642306327819824

Token 71: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02672484703361988
    2. '<|end|>' → logprob: -3.7767248153686523
    3. ' ' → logprob: -6.901724815368652
    4. '#' → logprob: -7.651724815368652
    5. '()' → logprob: -7.901724815368652
    6. '(' → logprob: -8.151724815368652
    7. '```' → logprob: -8.151724815368652
    8. '*' → logprob: -8.276724815368652
    9. ' )' → logprob: -8.776724815368652
    10. '<|end|>' → logprob: -9.026724815368652

Token 72: ' Voilà' (ID: 149427)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05135476216673851
    2. '<|end|>' → logprob: -3.5513546466827393
    3. ' ' → logprob: -5.176354885101318
    4. '<|end|>' → logprob: -5.301354885101318
    5. 'round' → logprob: -6.301354885101318
    6. '(round' → logprob: -6.676354885101318
    7. ' round' → logprob: -6.676354885101318
    8. '.' → logprob: -6.926354885101318
    9. ' )' → logprob: -7.051354885101318
    10. '```' → logprob: -7.051354885101318

Token 73: '!' (ID: 0)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07728095352649689
    2. '<|end|>' → logprob: -2.8272809982299805
    3. ' ' → logprob: -4.7022809982299805
    4. '.' → logprob: -6.2022809982299805
    5. ',' → logprob: -6.8272809982299805
    6. '
' → logprob: -7.0772809982299805
    7. '<|end|>' → logprob: -7.4522809982299805
    8. ' )' → logprob: -7.4522809982299805
    9. '```' → logprob: -8.45228099822998
    10. '#' → logprob: -8.95228099822998


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 71
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 40
Précision stricte (1ère position): 28.17%
Précision adaptée (1ère position): 28.17%
Précision (top 10): 56.34%
================================================================================
