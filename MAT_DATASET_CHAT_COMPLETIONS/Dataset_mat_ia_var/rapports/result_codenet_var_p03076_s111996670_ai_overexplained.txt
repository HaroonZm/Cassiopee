================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur de saisir le premier entier
# input() lit une chaîne depuis l'utilisateur, int() convertit cette chaîne en entier
a = int(input())

# Même démarche pour le second entier
b = int(input())

# Même démarche pour le troisième entier
c = int(input())

# Même démarche pour le quatrième entier
d = int(input())

# Même démarche pour le cinquième entier
e = int(input())

# Créer une liste appelée input_list contenant les cinq entiers ci-dessus, dans l'ordre de saisie
input_list = [a, b, c, d, e]

# Créer une liste vide qui servira à stocker chaque nombre après qu'il ait été arrondi au multiple supérieur de 10
# (sauf s'il est déjà multiple de 10, auquel cas il reste identique)
ten_up_list = []

# Créer une liste vide qui servira à stocker le reste de la division par 10 (appelé 'amari' en japonais) seulement pour les nombres non multiples de 10
amari_list = []

# Initialiser une variable total à 0; elle servira à additionner les valeurs après arrondi
total = 0

# Boucle sur tous les nombres de input_list pour appliquer le traitement
for i in input_list:
    # Calculer le reste de la division du nombre par 10
    # Ceci donne la partie "unité" du nombre (ex: 23 % 10 == 3)
    amari = i % 10
    # Si ce reste est égal à 0, cela signifie que le nombre est déjà un multiple de 10
    if amari == 0:
        # Dans ce cas, ajouter le nombre lui-même (sans modification) à ten_up_list
        ten_up_list.append(i)
    else:
        # Sinon, le nombre n'est pas un multiple de 10
        # Calculer combien il manque pour atteindre le multiple de 10 supérieur le plus proche
        # Ceci revient à faire (10 - amari), puis on ajoute ce montant au nombre original
        ten_up_list.append(i + 10 - amari)
        # Également, enregistrer ce reste dans amari_list pour un usage ultérieur d'optimisation
        amari_list.append(amari)

# Après la boucle, on a une liste ten_up_list où chaque nombre a été arrondi au multiple de 10 supérieur

# Ajouter toutes les valeurs de ten_up_list pour obtenir le total
for i in ten_up_list:
    # Ajouter la valeur courante de i à la variable total
    total += i

# Ensuite, il y a une optimisation : on réduit le gaspillage causé par l’arrondi
# Plus précisément, on souhaite soustraire le "surplus" minimal
# Cela est seulement nécessaire si il y avait au moins un nombre qui n'était pas un multiple de 10, donc amari_list n'est pas vide
if len(amari_list) != 0:
    # Trier amari_list pour mettre le plus petit reste en premier (ordre croissant)
    amari_list.sort()
    # Retirer 10 du total, car lorsqu'on arrondissait tous les nombres vers le haut,
    # pour chaque nombre non multiple de 10, on ajoutait "jusqu'à +9" en trop
    # On peut compenser ce "gaspillage" pour un nombre, celui dont le reste était le plus faible
    # On ajoute son reste au total pour rétablir la différence
    total = total - 10 + amari_list[0]

# Afficher le résultat final à l'écran avec la fonction print
print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10969100892543793
    2. ' ' → logprob: -2.8596909046173096
    3. ':' → logprob: -4.234691143035889
    4. '```' → logprob: -4.984691143035889
    5. ' à' → logprob: -5.484691143035889
    6. ''' → logprob: -5.484691143035889
    7. ' d' → logprob: -6.109691143035889
    8. ' de' → logprob: -6.359691143035889
    9. ' a' → logprob: -6.609691143035889
    10. 's' → logprob: -6.609691143035889

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1835603415966034
    2. 'util' → logprob: -1.9335603713989258
    3. 'user' → logprob: -4.183560371398926
    4. ' l' → logprob: -5.558560371398926
    5. 'u' → logprob: -5.808560371398926
    6. 'us' → logprob: -7.433560371398926
    7. ' user' → logprob: -9.433560371398926
    8. 'un' → logprob: -9.433560371398926
    9. 'input' → logprob: -10.933560371398926
    10. 'client' → logprob: -11.058560371398926

Token 5: ''utilisateur' (ID: 140803)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8029055595397949
    2. ''utilisateur' → logprob: -0.9279055595397949
    3. ' utilisateur' → logprob: -2.552905559539795
    4. 'u' → logprob: -3.052905559539795
    5. '’utilisateur' → logprob: -3.802905559539795
    6. 'a' → logprob: -5.302905559539795
    7. '_util' → logprob: -6.552905559539795
    8. ''' → logprob: -7.552905559539795
    9. 'user' → logprob: -7.552905559539795
    10. ' user' → logprob: -8.427906036376953

Token 6: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9538620114326477
    2. ' ' → logprob: -1.703861951828003
    3. 's' → logprob: -1.953861951828003
    4. 'input' → logprob: -2.453861951828003
    5. 'name' → logprob: -3.578861951828003
    6. '=' → logprob: -3.953861951828003
    7. ' =' → logprob: -4.203862190246582
    8. '=input' → logprob: -4.453862190246582
    9. ',' → logprob: -4.703862190246582
    10. '#' → logprob: -4.828862190246582

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029238790273666382
    2. 'entr' → logprob: -4.529238700866699
    3. 'input' → logprob: -4.904238700866699
    4. ' saisir' → logprob: -5.029238700866699
    5. '```' → logprob: -6.904238700866699
    6. 'r' → logprob: -6.904238700866699
    7. '#' → logprob: -7.529238700866699
    8. 'entrée' → logprob: -7.904238700866699
    9. 'contin' → logprob: -7.904238700866699
    10. ' entrer' → logprob: -8.6542387008667

Token 8: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2906728684902191
    2. '_' → logprob: -1.4156728982925415
    3. ''' → logprob: -5.415672779083252
    4. 'u' → logprob: -6.415672779083252
    5. 's' → logprob: -7.415672779083252
    6. '```' → logprob: -7.915672779083252
    7. '`' → logprob: -8.16567325592041
    8. ' ' → logprob: -8.29067325592041
    9. ':' → logprob: -8.66567325592041
    10. ' un' → logprob: -8.91567325592041

Token 9: ' premier' (ID: 15506)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.7154571413993835
    2. 'nom' → logprob: -0.9654571413993835
    3. ' nombre' → logprob: -3.0904572010040283
    4. ' nom' → logprob: -3.3404572010040283
    5. 'texte' → logprob: -3.9654572010040283
    6. 's' → logprob: -4.465456962585449
    7. 'a' → logprob: -5.715456962585449
    8. ' code' → logprob: -5.965456962585449
    9. ' texte' → logprob: -6.465456962585449
    10. 'n' → logprob: -6.465456962585449

Token 10: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03256820887327194
    2. '_' → logprob: -4.907567977905273
    3. 'nombre' → logprob: -5.532567977905273
    4. ''' → logprob: -5.782567977905273
    5. 's' → logprob: -6.157567977905273
    6. 'n' → logprob: -6.282567977905273
    7. ' nombre' → logprob: -6.407567977905273
    8. ' espace' → logprob: -6.657567977905273
    9. 'a' → logprob: -6.907567977905273
    10. 'élé' → logprob: -6.907567977905273

Token 11: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18618562817573547
    2. 'x' → logprob: -2.936185598373413
    3. 'i' → logprob: -3.311185598373413
    4. 'a' → logprob: -3.561185598373413
    5. 'ent' → logprob: -4.311185836791992
    6. 'e' → logprob: -4.436185836791992
    7. 'nombre' → logprob: -5.436185836791992
    8. 'input' → logprob: -5.561185836791992
    9. '#' → logprob: -5.936185836791992
    10. '_' → logprob: -6.311185836791992

Token 12: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1908099502325058
    2. 'x' → logprob: -2.440809965133667
    3. 'nombre' → logprob: -3.440809965133667
    4. 'a' → logprob: -4.190809726715088
    5. 'ent' → logprob: -4.315809726715088
    6. 'prem' → logprob: -4.440809726715088
    7. ' premier' → logprob: -5.315809726715088
    8. 'num' → logprob: -6.065809726715088
    9. '```' → logprob: -6.940809726715088
    10. 'e' → logprob: -6.940809726715088

Token 13: ' input' (ID: 3422)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -1.2021955251693726
    2. 'nombre' → logprob: -1.4521955251693726
    3. 'ent' → logprob: -1.8271955251693726
    4. 'num' → logprob: -1.9521955251693726
    5. 'n' → logprob: -3.202195644378662
    6. ' premier' → logprob: -3.202195644378662
    7. 'x' → logprob: -3.827195644378662
    8. 'a' → logprob: -3.952195644378662
    9. '#' → logprob: -4.077195644378662
    10. ' entier' → logprob: -5.327195644378662

Token 14: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4198022484779358
    2. '_' → logprob: -1.169802188873291
    3. 'n' → logprob: -5.044802188873291
    4. 's' → logprob: -5.044802188873291
    5. '()' → logprob: -5.794802188873291
    6. '#' → logprob: -6.044802188873291
    7. ')' → logprob: -6.544802188873291
    8. ' ' → logprob: -6.919802188873291
    9. ' =' → logprob: -6.919802188873291
    10. 'user' → logprob: -7.044802188873291

Token 15: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08057700097560883
    2. 'n' → logprob: -4.0805768966674805
    3. '#' → logprob: -4.5805768966674805
    4. ')' → logprob: -4.7055768966674805
    5. 'ent' → logprob: -5.2055768966674805
    6. ',' → logprob: -5.2055768966674805
    7. 'a' → logprob: -5.3305768966674805
    8. 's' → logprob: -5.3305768966674805
    9. ' ' → logprob: -5.7055768966674805
    10. '_' → logprob: -6.0805768966674805

Token 16: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.44138580560684204
    2. '()' → logprob: -2.1913857460021973
    3. ' ' → logprob: -2.6913857460021973
    4. ' la' → logprob: -3.0663857460021973
    5. ' un' → logprob: -3.5663857460021973
    6. '(' → logprob: -3.6913857460021973
    7. 'une' → logprob: -3.8163857460021973
    8. ' l' → logprob: -4.566385746002197
    9. 's' → logprob: -4.941385746002197
    10. ' le' → logprob: -5.566385746002197

Token 17: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.1906208097934723
    2. 'chaine' → logprob: -3.3156208992004395
    3. ' ligne' → logprob: -3.4406208992004395
    4. ' ' → logprob: -3.6906208992004395
    5. 'entrée' → logprob: -3.9406208992004395
    6. ' valeur' → logprob: -3.9406208992004395
    7. ' chaine' → logprob: -4.0656208992004395
    8. 'cha' → logprob: -4.4406208992004395
    9. 'ligne' → logprob: -5.3156208992004395
    10. ' entrée' → logprob: -6.4406208992004395

Token 18: ' depuis' (ID: 16277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6624449491500854
    2. '\' → logprob: -1.7874449491500854
    3. ' ' → logprob: -2.287445068359375
    4. '#' → logprob: -2.412445068359375
    5. '\n' → logprob: -2.412445068359375
    6. ',' → logprob: -2.912445068359375
    7. ' )' → logprob: -3.162445068359375
    8. 'n' → logprob: -3.537445068359375
    9. '<|end|>' → logprob: -3.537445068359375
    10. '_' → logprob: -3.662445068359375

Token 19: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03434442728757858
    2. ' l' → logprob: -4.15934419631958
    3. 'le' → logprob: -4.15934419631958
    4. 'la' → logprob: -6.65934419631958
    5. '	l' → logprob: -8.659344673156738
    6. ' le' → logprob: -9.034344673156738
    7. 'lé' → logprob: -9.284344673156738
    8. ' input' → logprob: -9.409344673156738
    9. 'input' → logprob: -9.409344673156738
    10. 's' → logprob: -9.534344673156738

Token 20: ''utilisateur' (ID: 140803)
  Prédit: ''entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.3120664358139038
    2. ''utilisateur' → logprob: -1.4370664358139038
    3. 'entrée' → logprob: -4.312066555023193
    4. 'a' → logprob: -4.562066555023193
    5. ''' → logprob: -5.312066555023193
    6. 'input' → logprob: -7.187066555023193
    7. 'util' → logprob: -8.937066078186035
    8. 'e' → logprob: -9.437066078186035
    9. ''user' → logprob: -9.437066078186035
    10. 'l' → logprob: -9.812066078186035

Token 21: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.332095742225647
    2. 'ent' → logprob: -2.5820956230163574
    3. 'a' → logprob: -2.7070956230163574
    4. 'prem' → logprob: -2.7070956230163574
    5. 'nombre' → logprob: -3.7070956230163574
    6. 'x' → logprob: -4.332095623016357
    7. '#' → logprob: -4.582095623016357
    8. ' premier' → logprob: -5.082095623016357
    9. 'e' → logprob: -5.832095623016357
    10. 'num' → logprob: -5.832095623016357

Token 22: ' int' (ID: 677)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.069032907485962
    2. 'n' → logprob: -1.694032907485962
    3. ' premier' → logprob: -1.694032907485962
    4. 'prem' → logprob: -2.569032907485962
    5. 'a' → logprob: -3.319032907485962
    6. 'num' → logprob: -3.569032907485962
    7. '#' → logprob: -3.569032907485962
    8. 'val' → logprob: -3.694032907485962
    9. ' entier' → logprob: -3.694032907485962
    10. 'nombre' → logprob: -4.194032669067383

Token 23: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013682155404239893
    2. '()' → logprob: -6.626368045806885
    3. '('' → logprob: -11.501368522644043
    4. '("' → logprob: -11.626368522644043
    5. '(
' → logprob: -11.626368522644043
    6. '("""' → logprob: -12.876368522644043
    7. '("")' → logprob: -13.126368522644043
    8. '(input' → logprob: -13.376368522644043
    9. '(

' → logprob: -13.501368522644043
    10. '(convert' → logprob: -13.751368522644043

Token 24: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024643904180265963
    2. '(
' → logprob: -9.000246047973633
    3. '()' → logprob: -11.125246047973633
    4. ')' → logprob: -11.250246047973633
    5. '(convert' → logprob: -11.250246047973633
    6. ' (' → logprob: -11.375246047973633
    7. '(int' → logprob: -11.375246047973633
    8. 's' → logprob: -11.500246047973633
    9. '#' → logprob: -11.750246047973633
    10. 'convert' → logprob: -11.875246047973633

Token 25: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.004834038205444813
    2. 'i' → logprob: -5.754834175109863
    3. '```' → logprob: -7.379834175109863
    4. 'issant' → logprob: -8.004834175109863
    5. ' it' → logprob: -8.504834175109863
    6. '#' → logprob: -8.754834175109863
    7. 'ir' → logprob: -9.129834175109863
    8. 'is' → logprob: -10.379834175109863
    9. 'ie' → logprob: -10.504834175109863
    10. 't' → logprob: -10.629834175109863

Token 26: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08538666367530823
    2. 'la' → logprob: -3.4603867530822754
    3. '()' → logprob: -3.5853867530822754
    4. ' la' → logprob: -4.460386753082275
    5. ' (' → logprob: -5.835386753082275
    6. ' le' → logprob: -7.210386753082275
    7. ' ' → logprob: -7.210386753082275
    8. '```' → logprob: -7.210386753082275
    9. 'le' → logprob: -7.335386753082275
    10. '#' → logprob: -7.460386753082275

Token 27: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.027789423242211342
    2. ' ' → logprob: -4.27778959274292
    3. ' chaine' → logprob: -5.27778959274292
    4. ' valeur' → logprob: -5.90278959274292
    5. ' entrée' → logprob: -6.90278959274292
    6. 'chaine' → logprob: -7.15278959274292
    7. ' donnée' → logprob: -7.15278959274292
    8. ' )' → logprob: -7.65278959274292
    9. '  ' → logprob: -7.77778959274292
    10. ' espace' → logprob: -7.90278959274292

Token 28: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07356518507003784
    2. 's' → logprob: -3.3235652446746826
    3. 'n' → logprob: -4.3235650062561035
    4. ',' → logprob: -5.1985650062561035
    5. 'a' → logprob: -5.3235650062561035
    6. '(
' → logprob: -6.4485650062561035
    7. '(ent' → logprob: -6.8235650062561035
    8. '#' → logprob: -6.9485650062561035
    9. '_' → logprob: -7.1985650062561035
    10. ')' → logprob: -7.3235650062561035

Token 29: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.45182475447654724
    2. ' entier' → logprob: -1.4518247842788696
    3. 'ent' → logprob: -2.32682466506958
    4. 'un' → logprob: -3.57682466506958
    5. ' nombre' → logprob: -6.45182466506958
    6. ' ' → logprob: -6.82682466506958
    7. 'int' → logprob: -7.82682466506958
    8. 'nombre' → logprob: -8.201825141906738
    9. ' int' → logprob: -8.576825141906738
    10. ' ent' → logprob: -8.826825141906738

Token 30: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4149424135684967
    2. 'a' → logprob: -1.6649423837661743
    3. 'x' → logprob: -2.414942502975464
    4. 'prem' → logprob: -3.289942502975464
    5. 'nombre' → logprob: -4.914942264556885
    6. '#' → logprob: -5.164942264556885
    7. 'ent' → logprob: -6.164942264556885
    8. ' premier' → logprob: -6.414942264556885
    9. '\n' → logprob: -6.414942264556885
    10. '\' → logprob: -6.664942264556885

Token 31: 'a' (ID: 64)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3935011923313141
    2. 'a' → logprob: -1.6435011625289917
    3. 'x' → logprob: -2.3935012817382812
    4. 'prem' → logprob: -3.7685012817382812
    5. 'ent' → logprob: -5.268501281738281
    6. 'nombre' → logprob: -5.268501281738281
    7. 'e' → logprob: -6.018501281738281
    8. '#' → logprob: -6.643501281738281
    9. 'num' → logprob: -7.018501281738281
    10. 'v' → logprob: -7.768501281738281

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07906119525432587
    2. '=' → logprob: -2.579061269760132
    3. ' ' → logprob: -8.704061508178711
    4. 'a' → logprob: -13.454061508178711
    5. ',' → logprob: -13.829061508178711
    6. '=input' → logprob: -14.329061508178711
    7. '=int' → logprob: -14.329061508178711
    8. ')' → logprob: -14.704061508178711
    9. '  ' → logprob: -15.204061508178711
    10. '1' → logprob: -15.329061508178711

Token 33: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.02326364815235138
    2. 'int' → logprob: -3.773263692855835
    3. ' input' → logprob: -11.523263931274414
    4. ' ' → logprob: -13.023263931274414
    5. ' ' → logprob: -13.023263931274414
    6. 'input' → logprob: -13.273263931274414
    7. '=int' → logprob: -13.898263931274414
    8. '<int' → logprob: -14.523263931274414
    9. '[int' → logprob: -15.398263931274414
    10. '(int' → logprob: -15.398263931274414

Token 34: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1602465659379959
    2. '(' → logprob: -1.9102466106414795
    3. 'input' → logprob: -11.535246849060059
    4. ' (' → logprob: -11.910246849060059
    5. '(
' → logprob: -13.160246849060059
    6. '()' → logprob: -13.410246849060059
    7. '(user' → logprob: -13.910246849060059
    8. '(

' → logprob: -14.785246849060059
    9. '('' → logprob: -15.035246849060059
    10. '(in' → logprob: -15.410246849060059

Token 35: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18007652461528778
    2. '()' → logprob: -2.3050765991210938
    3. '())' → logprob: -2.8050765991210938
    4. '('' → logprob: -5.930076599121094
    5. '("' → logprob: -7.805076599121094
    6. '(""))' → logprob: -7.805076599121094
    7. '("("' → logprob: -7.930076599121094
    8. '()))' → logprob: -8.430076599121094
    9. ')' → logprob: -8.430076599121094
    10. '(()' → logprob: -9.555076599121094

Token 36: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02809453010559082
    2. '#' → logprob: -5.028094291687012
    3. '+
' → logprob: -5.403094291687012
    4. 'a' → logprob: -5.778094291687012
    5. ' ' → logprob: -6.028094291687012
    6. ' +' → logprob: -6.153094291687012
    7. '+b' → logprob: -6.278094291687012
    8. '\n' → logprob: -6.653094291687012
    9. 'b' → logprob: -6.778094291687012
    10. ')' → logprob: -6.778094291687012

Token 37: ' Même' (ID: 89628)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6890624165534973
    2. 'b' → logprob: -0.8140624165534973
    3. '#' → logprob: -3.0640623569488525
    4. ' #' → logprob: -5.189062595367432
    5. ' Dem' → logprob: -6.564062595367432
    6. ' ' → logprob: -7.314062595367432
    7. 'Dem' → logprob: -8.439062118530273
    8. ' demander' → logprob: -8.814062118530273
    9. ' a' → logprob: -10.314062118530273
    10. '```' → logprob: -10.689062118530273

Token 38: ' démarche' (ID: 99237)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7264936566352844
    2. 'a' → logprob: -0.9764936566352844
    3. '(' → logprob: -2.1014935970306396
    4. '#' → logprob: -5.101493835449219
    5. '(a' → logprob: -5.351493835449219
    6. 'b' → logprob: -6.101493835449219
    7. ' ' → logprob: -6.976493835449219
    8. 's' → logprob: -7.101493835449219
    9. ' a' → logprob: -7.226493835449219
    10. '  ' → logprob: -7.851493835449219

Token 39: ' pour' (ID: 1930)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8401352763175964
    2. 'a' → logprob: -1.2151353359222412
    3. ' ' → logprob: -1.8401353359222412
    4. '(' → logprob: -3.090135335922241
    5. 's' → logprob: -3.965135335922241
    6. ' a' → logprob: -4.465135097503662
    7. '()' → logprob: -4.840135097503662
    8. ' b' → logprob: -4.965135097503662
    9. ')' → logprob: -5.590135097503662
    10. '  ' → logprob: -5.715135097503662

Token 40: ' le' (ID: 505)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.43634822964668274
    2. '()' → logprob: -2.8113481998443604
    3. '(' → logprob: -3.0613481998443604
    4. ' la' → logprob: -3.0613481998443604
    5. 'le' → logprob: -3.1863481998443604
    6. ' le' → logprob: -3.3113481998443604
    7. 'b' → logprob: -3.4363481998443604
    8. ' ' → logprob: -3.8113481998443604
    9. ' l' → logprob: -3.9363481998443604
    10. 'a' → logprob: -4.0613484382629395

Token 41: ' second' (ID: 3099)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2003391981124878
    2. 'second' → logprob: -1.9503391981124878
    3. ' second' → logprob: -3.7003393173217773
    4. ' deuxième' → logprob: -4.325339317321777
    5. 'b' → logprob: -7.325339317321777
    6. 's' → logprob: -8.825339317321777
    7. '2' → logprob: -9.075339317321777
    8. 'a' → logprob: -9.200339317321777
    9. '#' → logprob: -9.325339317321777
    10. 'se' → logprob: -9.450339317321777

Token 42: ' entier' (ID: 80473)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9446613788604736
    2. ' b' → logprob: -1.0696613788604736
    3. 'a' → logprob: -1.5696613788604736
    4. ' ' → logprob: -3.0696613788604736
    5. ' a' → logprob: -4.5696611404418945
    6. 's' → logprob: -7.8196611404418945
    7. 'e' → logprob: -7.8196611404418945
    8. ' entier' → logprob: -8.319661140441895
    9. 'ent' → logprob: -8.444661140441895
    10. ' 
' → logprob: -8.444661140441895

Token 43: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007773502147756517
    2. ' b' → logprob: -7.250777244567871
    3. 'a' → logprob: -9.750777244567871
    4. ')' → logprob: -13.000777244567871
    5. ' 
' → logprob: -13.500777244567871
    6. '```' → logprob: -13.500777244567871
    7. ',' → logprob: -13.750777244567871
    8. '  
' → logprob: -14.500777244567871
    9. ' ' → logprob: -14.625777244567871
    10. '
' → logprob: -14.875777244567871

Token 44: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00884418748319149
    2. ' b' → logprob: -4.758844375610352
    3. 'a' → logprob: -8.508844375610352
    4. ' ' → logprob: -11.258844375610352
    5. ' 
' → logprob: -12.258844375610352
    6. ' a' → logprob: -12.508844375610352
    7. ',' → logprob: -13.508844375610352
    8. ' =' → logprob: -13.633844375610352
    9. '
' → logprob: -14.258844375610352
    10. ' ,' → logprob: -14.508844375610352

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02630099281668663
    2. '=' → logprob: -3.6513009071350098
    3. ' ' → logprob: -14.776301383972168
    4. '=int' → logprob: -15.651301383972168
    5. ' ' → logprob: -16.40130043029785
    6. 's' → logprob: -17.27630043029785
    7. ')' → logprob: -17.27630043029785
    8. '＝' → logprob: -18.15130043029785
    9. 'a' → logprob: -18.52630043029785
    10. ' =)' → logprob: -18.77630043029785

Token 46: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20142805576324463
    2. 'int' → logprob: -1.7014280557632446
    3. '=int' → logprob: -12.451428413391113
    4. '(int' → logprob: -12.826428413391113
    5. ' ' → logprob: -12.951428413391113
    6. ' ' → logprob: -13.201428413391113
    7. '<int' → logprob: -13.451428413391113
    8. '[int' → logprob: -13.576428413391113
    9. '	int' → logprob: -14.451428413391113
    10. ':int' → logprob: -16.388927459716797

Token 47: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07890520989894867
    2. '(' → logprob: -2.5789051055908203
    3. '(
' → logprob: -11.70390510559082
    4. ' (' → logprob: -12.45390510559082
    5. '(in' → logprob: -13.95390510559082
    6. 'input' → logprob: -14.07890510559082
    7. '(user' → logprob: -14.20390510559082
    8. '<input' → logprob: -15.57890510559082
    9. '(inp' → logprob: -15.57890510559082
    10. '(

' → logprob: -15.95390510559082

Token 48: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00683152861893177
    2. '()' → logprob: -5.006831645965576
    3. ')' → logprob: -9.256831169128418
    4. ' ())' → logprob: -10.881831169128418
    5. '(' → logprob: -14.631831169128418
    6. '()))' → logprob: -15.006831169128418
    7. '();)' → logprob: -15.006831169128418
    8. '())
' → logprob: -15.881831169128418
    9. '()
' → logprob: -16.006832122802734
    10. '()]' → logprob: -16.006832122802734

Token 49: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5890859365463257
    2. 'c' → logprob: -1.4640859365463257
    3. 'if' → logprob: -2.4640860557556152
    4. 'print' → logprob: -2.7140860557556152
    5. 's' → logprob: -3.0890860557556152
    6. 'result' → logprob: -4.589086055755615
    7. 'sum' → logprob: -5.839086055755615
    8. '
' → logprob: -6.839086055755615
    9. '+' → logprob: -6.839086055755615
    10. '' → logprob: -8.089085578918457

Token 50: ' Même' (ID: 89628)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8831174969673157
    2. 'if' → logprob: -1.133117437362671
    3. 'result' → logprob: -2.633117437362671
    4. '#' → logprob: -2.758117437362671
    5. 'c' → logprob: -2.883117437362671
    6. 'sum' → logprob: -3.508117437362671
    7. 's' → logprob: -3.633117437362671
    8. ' if' → logprob: -4.25811767578125
    9. ' print' → logprob: -7.50811767578125
    10. ' somme' → logprob: -7.63311767578125

Token 51: ' démarche' (ID: 99237)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9358538389205933
    2. 'if' → logprob: -1.6858538389205933
    3. 'a' → logprob: -2.310853958129883
    4. '#' → logprob: -2.310853958129883
    5. '(' → logprob: -2.560853958129883
    6. ')' → logprob: -3.435853958129883
    7. 's' → logprob: -3.560853958129883
    8. '()' → logprob: -3.685853958129883
    9. 'print' → logprob: -4.060853958129883
    10. 'result' → logprob: -5.435853958129883

Token 52: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0581049919128418
    2. 'pour' → logprob: -1.5581049919128418
    3. '(' → logprob: -1.6831049919128418
    4. 'c' → logprob: -1.8081049919128418
    5. '()' → logprob: -3.058104991912842
    6. '(c' → logprob: -4.433104991912842
    7. ' pour' → logprob: -4.433104991912842
    8. ' for' → logprob: -4.683104991912842
    9. 'a' → logprob: -5.058104991912842
    10. '#' → logprob: -6.433104991912842

Token 53: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.40468084812164307
    2. ' l' → logprob: -2.4046807289123535
    3. ' la' → logprob: -2.7796807289123535
    4. 'le' → logprob: -3.1546807289123535
    5. 'c' → logprob: -3.2796807289123535
    6. ' c' → logprob: -3.6546807289123535
    7. 'a' → logprob: -3.7796807289123535
    8. ' ' → logprob: -4.4046807289123535
    9. '#' → logprob: -4.7796807289123535
    10. ' input' → logprob: -5.0296807289123535

Token 54: ' troisième' (ID: 75373)
  Prédit: ' troisième'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' troisième' → logprob: -0.7920289039611816
    2. 'prem' → logprob: -1.2920289039611816
    3. 's' → logprob: -2.9170289039611816
    4. '#' → logprob: -3.0420289039611816
    5. 'tro' → logprob: -3.0420289039611816
    6. '3' → logprob: -3.4170289039611816
    7. 'a' → logprob: -3.5420289039611816
    8. 't' → logprob: -3.9170289039611816
    9. 'third' → logprob: -4.167028903961182
    10. ' premier' → logprob: -4.917028903961182

Token 55: ' entier' (ID: 80473)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.052460309118032455
    2. ' c' → logprob: -3.302460193634033
    3. '(' → logprob: -5.177460193634033
    4. 'int' → logprob: -6.427460193634033
    5. ' (' → logprob: -6.552460193634033
    6. '```' → logprob: -6.927460193634033
    7. '(c' → logprob: -7.302460193634033
    8. ' ' → logprob: -7.427460193634033
    9. 'ent' → logprob: -7.552460193634033
    10. ')' → logprob: -8.177460670471191

Token 56: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.659005157416686e-05
    2. ' c' → logprob: -9.625066757202148
    3. ')c' → logprob: -16.00006675720215
    4. '(c' → logprob: -16.37506675720215
    5. 'b' → logprob: -16.75006675720215
    6. '```' → logprob: -17.25006675720215
    7. '_c' → logprob: -17.37506675720215
    8. '(' → logprob: -17.62506675720215
    9. '
' → logprob: -17.62506675720215
    10. '	c' → logprob: -17.87506675720215

Token 57: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0001093841710826382
    2. ' c' → logprob: -9.125109672546387
    3. 'int' → logprob: -14.750109672546387
    4. 'b' → logprob: -17.62510871887207
    5. '```' → logprob: -17.62510871887207
    6. ')c' → logprob: -18.12510871887207
    7. '	c' → logprob: -19.37510871887207
    8. 't' → logprob: -19.50010871887207
    9. 'x' → logprob: -20.00010871887207
    10. 'с' → logprob: -20.12510871887207

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313263863325119
    2. '=' → logprob: -1.3132638931274414
    3. '=int' → logprob: -13.438263893127441
    4. ' ' → logprob: -15.188263893127441
    5. ' ' → logprob: -16.313262939453125
    6. 's' → logprob: -16.438262939453125
    7. ')' → logprob: -16.563262939453125
    8. 'a' → logprob: -16.938262939453125
    9. '_' → logprob: -17.188262939453125
    10. '＝' → logprob: -17.313262939453125

Token 59: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.11282826960086823
    2. 'int' → logprob: -2.237828254699707
    3. '(int' → logprob: -12.862828254699707
    4. '=int' → logprob: -13.612828254699707
    5. ' ' → logprob: -14.112828254699707
    6. '<int' → logprob: -14.612828254699707
    7. ' ' → logprob: -15.112828254699707
    8. '	int' → logprob: -15.487828254699707
    9. '[int' → logprob: -15.612828254699707
    10. ' in' → logprob: -16.362829208374023

Token 60: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38692328333854675
    2. '(input' → logprob: -1.1369233131408691
    3. '(int' → logprob: -10.386922836303711
    4. '()' → logprob: -12.011922836303711
    5. '(
' → logprob: -12.511922836303711
    6. ' (' → logprob: -12.511922836303711
    7. '(in' → logprob: -12.636922836303711
    8. 'input' → logprob: -13.136922836303711
    9. '(

' → logprob: -14.761922836303711
    10. '(user' → logprob: -14.886922836303711

Token 61: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4905667006969452
    2. '()' → logprob: -0.9905667304992676
    3. ')' → logprob: -4.115566730499268
    4. ' ())' → logprob: -10.61556625366211
    5. '(' → logprob: -11.99056625366211
    6. ' )' → logprob: -13.49056625366211
    7. '();)' → logprob: -13.74056625366211
    8. '()
' → logprob: -13.86556625366211
    9. '()]' → logprob: -13.99056625366211
    10. '()))' → logprob: -14.24056625366211

Token 62: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3169085681438446
    2. '#' → logprob: -1.566908597946167
    3. 's' → logprob: -3.691908597946167
    4. 'sum' → logprob: -4.441908359527588
    5. 'd' → logprob: -4.566908359527588
    6. 'result' → logprob: -5.816908359527588
    7. '
' → logprob: -5.816908359527588
    8. '\n' → logprob: -6.066908359527588
    9. '' → logprob: -6.191908359527588
    10. 'max' → logprob: -6.691908359527588

Token 63: ' Même' (ID: 89628)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.45277756452560425
    2. '#' → logprob: -1.452777624130249
    3. ' if' → logprob: -3.327777624130249
    4. 'max' → logprob: -3.702777624130249
    5. 'm' → logprob: -4.07777738571167
    6. 's' → logprob: -4.07777738571167
    7. 'result' → logprob: -4.20277738571167
    8. 'sum' → logprob: -4.57777738571167
    9. 'print' → logprob: -5.82777738571167
    10. 'maximum' → logprob: -6.57777738571167

Token 64: ' démarche' (ID: 99237)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5260718464851379
    2. '#' → logprob: -1.1510717868804932
    3. '_' → logprob: -3.526071786880493
    4. '```' → logprob: -4.651072025299072
    5. '_si' → logprob: -4.651072025299072
    6. 'print' → logprob: -5.026072025299072
    7. '_if' → logprob: -5.276072025299072
    8. '_sum' → logprob: -5.901072025299072
    9. ' if' → logprob: -6.026072025299072
    10. 'à' → logprob: -6.151072025299072

Token 65: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.6103492975234985
    2. 'pour' → logprob: -1.7353492975234985
    3. 'd' → logprob: -2.110349178314209
    4. ' d' → logprob: -2.360349178314209
    5. ' for' → logprob: -2.985349178314209
    6. 'for' → logprob: -4.360349178314209
    7. ' для' → logprob: -7.860349178314209
    8. ' ' → logprob: -8.360349655151367
    9. '#' → logprob: -8.360349655151367
    10. ' pentru' → logprob: -8.485349655151367

Token 66: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.05855420604348183
    2. 'le' → logprob: -2.933554172515869
    3. '_le' → logprob: -6.308554172515869
    4. ' ' → logprob: -6.683554172515869
    5. ' l' → logprob: -8.558554649353027
    6. ' quatrième' → logprob: -9.308554649353027
    7. ' ' → logprob: -9.683554649353027
    8. ' d' → logprob: -10.058554649353027
    9. 'l' → logprob: -10.058554649353027
    10. '_' → logprob: -10.183554649353027

Token 67: ' quatrième' (ID: 157861)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.007917601615190506
    2. 'quart' → logprob: -5.382917404174805
    3. ' quatrième' → logprob: -6.007917404174805
    4. ' qu' → logprob: -7.882917404174805
    5. 'four' → logprob: -8.507917404174805
    6. ' quart' → logprob: -9.632917404174805
    7. 'q' → logprob: -10.132917404174805
    8. 'd' → logprob: -10.632917404174805
    9. '```' → logprob: -10.757917404174805
    10. '_qu' → logprob: -10.882917404174805

Token 68: ' entier' (ID: 80473)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.3405277729034424
    2. 'int' → logprob: -1.4655277729034424
    3. '(' → logprob: -2.3405277729034424
    4. ' ' → logprob: -2.5905277729034424
    5. ' (' → logprob: -2.5905277729034424
    6. ' int' → logprob: -2.7155277729034424
    7. 'd' → logprob: -2.9655277729034424
    8. 'a' → logprob: -3.4655277729034424
    9. ' entier' → logprob: -4.215527534484863
    10. '(int' → logprob: -4.340527534484863

Token 69: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04308243468403816
    2. ' d' → logprob: -4.168082237243652
    3. '
' → logprob: -4.293082237243652
    4. ' 
' → logprob: -5.543082237243652
    5. 'c' → logprob: -5.668082237243652
    6. '\n' → logprob: -6.793082237243652
    7. '\' → logprob: -6.793082237243652
    8. 'b' → logprob: -7.418082237243652
    9. '' → logprob: -7.793082237243652
    10. 'a' → logprob: -8.043082237243652

Token 70: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.013689751736819744
    2. ' d' → logprob: -4.3886895179748535
    3. 'int' → logprob: -6.7636895179748535
    4. ' int' → logprob: -10.888689994812012
    5. '```' → logprob: -12.513689994812012
    6. '`' → logprob: -14.513689994812012
    7. '	d' → logprob: -15.013689994812012
    8. '=int' → logprob: -15.638689994812012
    9. 'c' → logprob: -15.763689994812012
    10. ' ' → logprob: -15.888689994812012

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759451985359192
    2. '=' → logprob: -0.8259451985359192
    3. '=int' → logprob: -13.325944900512695
    4. ' ' → logprob: -13.575944900512695
    5. '_' → logprob: -13.575944900512695
    6. ')' → logprob: -14.825944900512695
    7. ' ' → logprob: -15.075944900512695
    8. 's' → logprob: -15.950944900512695
    9. 'a' → logprob: -16.200944900512695
    10. '=

' → logprob: -16.325944900512695

Token 72: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4740985631942749
    2. 'int' → logprob: -0.9740985631942749
    3. '(int' → logprob: -11.724098205566406
    4. '=int' → logprob: -12.099098205566406
    5. ' ' → logprob: -12.724098205566406
    6. ' ' → logprob: -13.474098205566406
    7. '<int' → logprob: -13.599098205566406
    8. '	int' → logprob: -14.349098205566406
    9. '[int' → logprob: -14.724098205566406
    10. 't' → logprob: -16.224098205566406

Token 73: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04911491647362709
    2. '(' → logprob: -3.049114942550659
    3. '(int' → logprob: -7.92411470413208
    4. ' (' → logprob: -8.924115180969238
    5. '()' → logprob: -11.549115180969238
    6. '(
' → logprob: -11.799115180969238
    7. '(in' → logprob: -12.049115180969238
    8. '(

' → logprob: -13.299115180969238
    9. '(inp' → logprob: -13.799115180969238
    10. '(a' → logprob: -13.924115180969238

Token 74: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7639732360839844
    2. '()' → logprob: -1.0139732360839844
    3. ')' → logprob: -1.7639732360839844
    4. ' ())' → logprob: -10.888973236083984
    5. ' )' → logprob: -11.638973236083984
    6. '(' → logprob: -11.763973236083984
    7. '()
' → logprob: -12.013973236083984
    8. '))' → logprob: -13.013973236083984
    9. '())
' → logprob: -13.388973236083984
    10. '()))' → logprob: -13.513973236083984

Token 75: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6253252625465393
    2. 'e' → logprob: -0.8753252625465393
    3. 'if' → logprob: -3.6253252029418945
    4. 's' → logprob: -4.3753252029418945
    5. 'result' → logprob: -6.0003252029418945
    6. '
' → logprob: -6.3753252029418945
    7. 'sum' → logprob: -6.3753252029418945
    8. 'print' → logprob: -7.6253252029418945
    9. 'n' → logprob: -7.7503252029418945
    10. 'max' → logprob: -8.125325202941895

Token 76: ' Même' (ID: 89628)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5823615789413452
    2. 'if' → logprob: -1.7073615789413452
    3. 'sum' → logprob: -2.5823616981506348
    4. 'e' → logprob: -2.7073616981506348
    5. 's' → logprob: -2.9573616981506348
    6. 'result' → logprob: -3.7073616981506348
    7. 'total' → logprob: -4.707361698150635
    8. 'max' → logprob: -4.707361698150635
    9. ' if' → logprob: -4.957361698150635
    10. ' #' → logprob: -5.832361698150635

Token 77: ' démarche' (ID: 99237)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4418978989124298
    2. ' ' → logprob: -1.6918978691101074
    3. '#' → logprob: -2.5668978691101074
    4. 's' → logprob: -3.5668978691101074
    5. '.' → logprob: -4.316897869110107
    6. 'if' → logprob: -4.316897869110107
    7. '  ' → logprob: -5.066897869110107
    8. 'space' → logprob: -5.441897869110107
    9. ')' → logprob: -5.566897869110107
    10. 'a' → logprob: -5.816897869110107

Token 78: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6258012056350708
    2. ' pour' → logprob: -0.8758012056350708
    3. ' for' → logprob: -4.000801086425781
    4. 'pour' → logprob: -5.000801086425781
    5. ' #' → logprob: -6.000801086425781
    6. '  ' → logprob: -6.125801086425781
    7. 'e' → logprob: -6.125801086425781
    8. ' à' → logprob: -6.250801086425781
    9. 'for' → logprob: -6.375801086425781
    10. '#' → logprob: -6.500801086425781

Token 79: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.06218480318784714
    2. 'le' → logprob: -3.3121848106384277
    3. ' ' → logprob: -4.437184810638428
    4. ' ' → logprob: -4.687184810638428
    5. ' l' → logprob: -6.937184810638428
    6. 'e' → logprob: -7.062184810638428
    7. 'l' → logprob: -7.937184810638428
    8. '_le' → logprob: -9.06218433380127
    9. ' la' → logprob: -9.18718433380127
    10. ' e' → logprob: -9.31218433380127

Token 80: ' cin' (ID: 8760)
  Prédit: 'cin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cin' → logprob: -0.47530192136764526
    2. ' cin' → logprob: -0.9753019213676453
    3. 'c' → logprob: -7.975301742553711
    4. ' cinqu' → logprob: -8.100301742553711
    5. ' cinq' → logprob: -8.475301742553711
    6. '```' → logprob: -8.725301742553711
    7. ' ' → logprob: -9.975301742553711
    8. ' ' → logprob: -10.725301742553711
    9. 'e' → logprob: -10.850301742553711
    10. '	cin' → logprob: -11.100301742553711

Token 81: 'qui' (ID: 22771)
  Prédit: 'qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qui' → logprob: -0.026826636865735054
    2. 'q' → logprob: -3.7768266201019287
    3. 'qu' → logprob: -5.651826858520508
    4. '#' → logprob: -11.151826858520508
    5. 'què' → logprob: -11.151826858520508
    6. 'qü' → logprob: -11.526826858520508
    7. 'que' → logprob: -12.151826858520508
    8. 'qi' → logprob: -12.776826858520508
    9. 'quí' → logprob: -13.026826858520508
    10. 'f' → logprob: -13.526826858520508

Token 82: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.008607245050370693
    2. 'me' → logprob: -6.133607387542725
    3. 'ième' → logprob: -6.508607387542725
    4. 'èm' → logprob: -6.508607387542725
    5. 'eme' → logprob: -6.883607387542725
    6. 'è' → logprob: -7.008607387542725
    7. 'ère' → logprob: -7.883607387542725
    8. 'ême' → logprob: -8.258606910705566
    9. 'qui' → logprob: -8.758606910705566
    10. 'ime' → logprob: -9.008606910705566

Token 83: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.22828520834445953
    2. ' e' → logprob: -1.6032851934432983
    3. ' ' → logprob: -6.228285312652588
    4. '(e' → logprob: -7.853285312652588
    5. '_' → logprob: -8.85328483581543
    6. ' =' → logprob: -8.85328483581543
    7. '(' → logprob: -10.22828483581543
    8. '=' → logprob: -10.47828483581543
    9. ')' → logprob: -10.72828483581543
    10. ' )' → logprob: -10.72828483581543

Token 84: '
' (ID: 198)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008649910800158978
    2. ' e' → logprob: -4.758649826049805
    3. ' =' → logprob: -10.508649826049805
    4. '(e' → logprob: -12.758649826049805
    5. '=' → logprob: -13.633649826049805
    6. '	e' → logprob: -13.633649826049805
    7. ' 
' → logprob: -14.258649826049805
    8. ' ' → logprob: -15.008649826049805
    9. '`' → logprob: -15.633649826049805
    10. '\' → logprob: -15.758649826049805

Token 85: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0031890016980469227
    2. ' e' → logprob: -5.7531890869140625
    3. 'int' → logprob: -11.628189086914062
    4. ' =' → logprob: -14.253189086914062
    5. '=' → logprob: -14.753189086914062
    6. 'i' → logprob: -15.128189086914062
    7. '	e' → logprob: -15.503189086914062
    8. '=int' → logprob: -15.503189086914062
    9. ' int' → logprob: -16.003189086914062
    10. '`' → logprob: -16.753189086914062

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029930641874670982
    2. '=' → logprob: -3.529930591583252
    3. ' ' → logprob: -9.02993106842041
    4. ')' → logprob: -10.52993106842041
    5. '.' → logprob: -11.77993106842041
    6. 's' → logprob: -12.02993106842041
    7. ' ' → logprob: -12.77993106842041
    8. ' =
' → logprob: -12.77993106842041
    9. '_' → logprob: -12.90493106842041
    10. ' )' → logprob: -13.02993106842041

Token 87: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04861529543995857
    2. 'int' → logprob: -3.0486152172088623
    3. '=int' → logprob: -11.673615455627441
    4. ' ' → logprob: -11.923615455627441
    5. '(int' → logprob: -12.298615455627441
    6. '<int' → logprob: -13.298615455627441
    7. ' ' → logprob: -13.298615455627441
    8. ' in' → logprob: -13.423615455627441
    9. '[int' → logprob: -13.673615455627441
    10. '	int' → logprob: -14.173615455627441

Token 88: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011073877103626728
    2. '(input' → logprob: -4.511074066162109
    3. '(
' → logprob: -11.38607406616211
    4. '(

' → logprob: -11.76107406616211
    5. '(int' → logprob: -13.13607406616211
    6. ' (' → logprob: -13.38607406616211
    7. '(in' → logprob: -13.88607406616211
    8. '()' → logprob: -14.26107406616211
    9. '(i' → logprob: -15.13607406616211
    10. '(e' → logprob: -15.26107406616211

Token 89: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3205673396587372
    2. '())' → logprob: -1.3205673694610596
    3. ')' → logprob: -4.9455671310424805
    4. '(' → logprob: -9.19556713104248
    5. ' ())' → logprob: -10.07056713104248
    6. '()))' → logprob: -11.69556713104248
    7. '()
' → logprob: -12.44556713104248
    8. '()]' → logprob: -13.44556713104248
    9. ' ()' → logprob: -13.57056713104248
    10. ' )' → logprob: -13.82056713104248

Token 90: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1514323651790619
    2. 's' → logprob: -2.6514322757720947
    3. 'f' → logprob: -3.5264322757720947
    4. 'if' → logprob: -3.6514322757720947
    5. '' → logprob: -5.901432514190674
    6. '
' → logprob: -6.026432514190674
    7. '\n' → logprob: -6.151432514190674
    8. 'n' → logprob: -6.526432514190674
    9. 'sum' → logprob: -7.026432514190674
    10. 'print' → logprob: -7.026432514190674

Token 91: ' Cr' (ID: 5790)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0305979251861572
    2. 's' → logprob: -1.4055979251861572
    3. 'numbers' → logprob: -1.6555979251861572
    4. 'sum' → logprob: -2.6555979251861572
    5. 'values' → logprob: -3.7805979251861572
    6. 'total' → logprob: -4.155597686767578
    7. 'max' → logprob: -4.405597686767578
    8. 'nums' → logprob: -4.405597686767578
    9. 'if' → logprob: -4.530597686767578
    10. 'm' → logprob: -4.655597686767578

Token 92: 'éer' (ID: 83012)
  Prédit: 'éer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.8060786724090576
    2. 'al' → logprob: -1.0560786724090576
    3. 'éder' → logprob: -2.9310786724090576
    4. '#' → logprob: -3.1810786724090576
    5. 'é' → logprob: -3.5560786724090576
    6. 'i' → logprob: -4.181078910827637
    7. 'alc' → logprob: -4.306078910827637
    8. 'ée' → logprob: -4.931078910827637
    9. 'om' → logprob: -5.181078910827637
    10. 'omp' → logprob: -5.431078910827637

Token 93: ' une' (ID: 2463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1212096214294434
    2. ' ' → logprob: -1.4962096214294434
    3. ' un' → logprob: -1.6212096214294434
    4. ' une' → logprob: -3.1212096214294434
    5. 'a' → logprob: -3.3712096214294434
    6. 'u' → logprob: -3.7462096214294434
    7. 'un' → logprob: -3.8712096214294434
    8. ')' → logprob: -4.371209621429443
    9. 'une' → logprob: -4.371209621429443
    10. 's' → logprob: -4.496209621429443

Token 94: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.21269643306732178
    2. ' liste' → logprob: -2.0876965522766113
    3. 'l' → logprob: -3.3376965522766113
    4. 's' → logprob: -4.712696552276611
    5. 'list' → logprob: -4.962696552276611
    6. '#' → logprob: -5.087696552276611
    7. 'a' → logprob: -6.337696552276611
    8. '```' → logprob: -6.462696552276611
    9. ' ' → logprob: -6.712696552276611
    10. ' l' → logprob: -7.712696552276611

Token 95: ' appelée' (ID: 179130)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20271295309066772
    2. ' =' → logprob: -2.0777130126953125
    3. '_' → logprob: -4.4527130126953125
    4. '=' → logprob: -4.5777130126953125
    5. ' [' → logprob: -4.8277130126953125
    6. ' ' → logprob: -4.9527130126953125
    7. 's' → logprob: -5.3277130126953125
    8. '[:]' → logprob: -5.8277130126953125
    9. '[]' → logprob: -6.2027130126953125
    10. 'liste' → logprob: -6.3277130126953125

Token 96: ' input' (ID: 3422)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.3649786710739136
    2. ' nombres' → logprob: -1.6149786710739136
    3. 'n' → logprob: -2.239978790283203
    4. 'numbers' → logprob: -2.364978790283203
    5. 'liste' → logprob: -2.489978790283203
    6. 'ent' → logprob: -2.614978790283203
    7. ' ent' → logprob: -3.114978790283203
    8. ' liste' → logprob: -3.364978790283203
    9. ' lst' → logprob: -3.739978790283203
    10. ' valeurs' → logprob: -3.739978790283203

Token 97: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32365038990974426
    2. 's' → logprob: -1.9486503601074219
    3. '(' → logprob: -2.948650360107422
    4. 'es' → logprob: -3.448650360107422
    5. '_list' → logprob: -3.698650360107422
    6. 'e' → logprob: -4.323650360107422
    7. '_values' → logprob: -6.448650360107422
    8. ' _' → logprob: -6.448650360107422
    9. '_l' → logprob: -6.448650360107422
    10. '_space' → logprob: -6.698650360107422

Token 98: ' contenant' (ID: 131049)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045093730092048645
    2. '=' → logprob: -3.1700937747955322
    3. 'input' → logprob: -7.295093536376953
    4. '[' → logprob: -7.795093536376953
    5. ' =
' → logprob: -7.920093536376953
    6. '=input' → logprob: -8.670093536376953
    7. ' =[' → logprob: -9.170093536376953
    8. ' ' → logprob: -9.170093536376953
    9. 's' → logprob: -10.045093536376953
    10. '_input' → logprob: -10.295093536376953

Token 99: ' les' (ID: 1341)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.45446282625198364
    2. '[' → logprob: -1.3294627666473389
    3. ' [' → logprob: -2.329462766647339
    4. '[input' → logprob: -6.329463005065918
    5. 'a' → logprob: -7.454463005065918
    6. ' a' → logprob: -7.704463005065918
    7. '[e' → logprob: -8.954463005065918
    8. ' les' → logprob: -9.704463005065918
    9. '[
' → logprob: -9.954463005065918
    10. '[:]' → logprob: -10.829463005065918

Token 100: ' cinq' (ID: 60618)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.682965874671936
    2. ' cinq' → logprob: -1.807965874671936
    3. 'ent' → logprob: -2.1829657554626465
    4. ' [' → logprob: -2.4329657554626465
    5. ' ' → logprob: -3.8079657554626465
    6. 'c' → logprob: -3.8079657554626465
    7. ' ent' → logprob: -3.9329657554626465
    8. ' valeurs' → logprob: -4.5579657554626465
    9. '5' → logprob: -4.8079657554626465
    10. '[a' → logprob: -4.9329657554626465

Token 101: ' ent' (ID: 1121)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0717012882232666
    2. ' ' → logprob: -1.0717012882232666
    3. ' ent' → logprob: -1.4467012882232666
    4. ' integers' → logprob: -3.8217012882232666
    5. 'ent' → logprob: -4.5717010498046875
    6. '_ent' → logprob: -4.5717010498046875
    7. 's' → logprob: -4.6967010498046875
    8. ' _' → logprob: -4.8217010498046875
    9. ' éléments' → logprob: -5.5717010498046875
    10. ' entier' → logprob: -5.6967010498046875

Token 102: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.023949654772877693
    2. 'i' → logprob: -3.77394962310791
    3. 'ier' → logprob: -8.02394962310791
    4. '```' → logprob: -8.27394962310791
    5. '_i' → logprob: -10.64894962310791
    6. 'ières' → logprob: -10.77394962310791
    7. '   ' → logprob: -11.39894962310791
    8. ' i' → logprob: -11.64894962310791
    9. '_' → logprob: -11.77394962310791
    10. 'e' → logprob: -11.77394962310791

Token 103: ' ci' (ID: 7405)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3221645951271057
    2. 'input' → logprob: -2.072164535522461
    3. '=' → logprob: -2.197164535522461
    4. '[' → logprob: -3.447164535522461
    5. ' input' → logprob: -6.072164535522461
    6. '=input' → logprob: -6.322164535522461
    7. '[input' → logprob: -7.447164535522461
    8. '[
' → logprob: -7.947164535522461
    9. '[:]' → logprob: -7.947164535522461
    10. '=[' → logprob: -8.197164535522461

Token 104: '-dessus' (ID: 74812)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5806537866592407
    2. '-' → logprob: -2.580653667449951
    3. 'ts' → logprob: -2.580653667449951
    4. 'nés' → logprob: -3.080653667449951
    5. 'n' → logprob: -3.205653667449951
    6. 'tu' → logprob: -3.455653667449951
    7. 'toy' → logprob: -3.455653667449951
    8. 'ns' → logprob: -3.705653667449951
    9. '-dessous' → logprob: -3.705653667449951
    10. '#' → logprob: -4.455653667449951

Token 105: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2619171142578125
    2. ' =' → logprob: -2.2619171142578125
    3. '=' → logprob: -2.5119171142578125
    4. '[' → logprob: -3.5119171142578125
    5. '=input' → logprob: -5.3869171142578125
    6. ' input' → logprob: -5.8869171142578125
    7. ' =
' → logprob: -6.0119171142578125
    8. '[
' → logprob: -6.1369171142578125
    9. '=
' → logprob: -7.0119171142578125
    10. 'a' → logprob: -7.1369171142578125

Token 106: ' dans' (ID: 2671)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4155256748199463
    2. 'input' → logprob: -1.4155256748199463
    3. ' input' → logprob: -3.4155256748199463
    4. ' [' → logprob: -3.7905256748199463
    5. '[input' → logprob: -4.415525436401367
    6. '[
' → logprob: -4.665525436401367
    7. ' =' → logprob: -4.915525436401367
    8. 'space' → logprob: -5.290525436401367
    9. '=' → logprob: -5.790525436401367
    10. ' [
' → logprob: -6.415525436401367

Token 107: ' l' (ID: 305)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4192221760749817
    2. ' l' → logprob: -1.919222116470337
    3. ' [' → logprob: -2.169222116470337
    4. 'l' → logprob: -3.044222116470337
    5. ' order' → logprob: -5.044222354888916
    6. '[
' → logprob: -5.294222354888916
    7. 'order' → logprob: -5.544222354888916
    8. 'ordre' → logprob: -5.544222354888916
    9. '[]' → logprob: -5.669222354888916
    10. ''ordre' → logprob: -5.919222354888916

Token 108: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.5528004765510559
    2. '[' → logprob: -1.5528004169464111
    3. '['' → logprob: -2.552800416946411
    4. 'a' → logprob: -3.302800416946411
    5. 'ordre' → logprob: -3.302800416946411
    6. '_' → logprob: -3.677800416946411
    7. '[]' → logprob: -4.55280065536499
    8. '_order' → logprob: -5.55280065536499
    9. '’ordre' → logprob: -5.55280065536499
    10. ' [' → logprob: -5.92780065536499

Token 109: ' de' (ID: 334)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0026060950476676226
    2. ' =' → logprob: -6.75260591506958
    3. '=' → logprob: -7.62760591506958
    4. ' input' → logprob: -7.75260591506958
    5. '[' → logprob: -8.127606391906738
    6. '=input' → logprob: -9.252606391906738
    7. '[
' → logprob: -10.002606391906738
    8. '[input' → logprob: -10.877606391906738
    9. '=
' → logprob: -11.377606391906738
    10. ' =
' → logprob: -11.502606391906738

Token 110: ' sais' (ID: 30010)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.7771892547607422
    2. ' which' → logprob: -2.277189254760742
    3. 'a' → logprob: -2.402189254760742
    4. '[' → logprob: -2.527189254760742
    5. ' laquelle' → logprob: -2.527189254760742
    6. ' [' → logprob: -2.777189254760742
    7. 'l' → logprob: -3.277189254760742
    8. ' l' → logprob: -4.402189254760742
    9. ' a' → logprob: -4.652189254760742
    10. 'which' → logprob: -4.777189254760742

Token 111: 'ie' (ID: 396)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.48131200671195984
    2. 'e' → logprob: -0.9813120365142822
    3. 'es' → logprob: -4.981311798095703
    4. 'ie' → logprob: -8.981311798095703
    5. 'is' → logprob: -9.731311798095703
    6. 'sie' → logprob: -10.106311798095703
    7. 'ss' → logprob: -10.356311798095703
    8. '#' → logprob: -10.981311798095703
    9. '```' → logprob: -11.106311798095703
    10. 'r' → logprob: -11.731311798095703

Token 112: '
' (ID: 198)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.026438351720571518
    2. ' =' → logprob: -4.776438236236572
    3. '=' → logprob: -4.901438236236572
    4. '=input' → logprob: -5.901438236236572
    5. '[' → logprob: -6.026438236236572
    6. '[
' → logprob: -6.776438236236572
    7. ' input' → logprob: -6.901438236236572
    8. '=
' → logprob: -7.151438236236572
    9. ' =
' → logprob: -7.151438236236572
    10. '[input' → logprob: -7.776438236236572

Token 113: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00029959288076497614
    2. ' input' → logprob: -8.750299453735352
    3. ' =' → logprob: -9.625299453735352
    4. '=' → logprob: -11.125299453735352
    5. '
' → logprob: -11.250299453735352
    6. 'in' → logprob: -11.750299453735352
    7. '[' → logprob: -11.750299453735352
    8. '[
' → logprob: -12.000299453735352
    9. '=input' → logprob: -12.000299453735352
    10. 'i' → logprob: -12.125299453735352

Token 114: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.005681329872459173
    2. '_' → logprob: -5.25568151473999
    3. '_li' → logprob: -8.755681037902832
    4. '_l' → logprob: -9.255681037902832
    5. '_lst' → logprob: -9.255681037902832
    6. '_lists' → logprob: -10.255681037902832
    7. '_lista' → logprob: -10.505681037902832
    8. ' _' → logprob: -11.380681037902832
    9. '_ls' → logprob: -11.755681037902832
    10. ')_' → logprob: -13.255681037902832

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026426630094647408
    2. '=' → logprob: -3.6514265537261963
    3. ' =[' → logprob: -9.651426315307617
    4. '[' → logprob: -10.526426315307617
    5. '.' → logprob: -11.901426315307617
    6. 's' → logprob: -12.026426315307617
    7. ' ' → logprob: -12.151426315307617
    8. '=[' → logprob: -12.276426315307617
    9. '[:]' → logprob: -12.401426315307617
    10. ' =
' → logprob: -13.026426315307617

Token 116: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.03806697204709053
    2. '[a' → logprob: -3.288066864013672
    3. '[' → logprob: -10.663066864013672
    4. ' [
' → logprob: -13.663066864013672
    5. '[
' → logprob: -15.038066864013672
    6. ' ' → logprob: -15.663066864013672
    7. ' a' → logprob: -15.788066864013672
    8. '[int' → logprob: -16.413066864013672
    9. ' [

' → logprob: -16.663066864013672
    10. ' ' → logprob: -16.788066864013672

Token 117: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0280383548888494e-06
    2. ' a' → logprob: -13.875000953674316
    3. '	a' → logprob: -19.125001907348633
    4. '   ' → logprob: -21.250001907348633
    5. ''a' → logprob: -21.625001907348633
    6. 'а' → logprob: -22.000001907348633
    7. '_a' → logprob: -22.125001907348633
    8. '"a' → logprob: -22.500001907348633
    9. '```' → logprob: -22.750001907348633
    10. '
' → logprob: -22.750001907348633

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018232580623589456
    2. ' ,' → logprob: -8.625182151794434
    3. ',b' → logprob: -13.125182151794434
    4. ',
' → logprob: -14.875182151794434
    5. ',a' → logprob: -15.250182151794434
    6. ']' → logprob: -16.00018310546875
    7. ' ' → logprob: -17.62518310546875
    8. ',

' → logprob: -18.00018310546875
    9. ')' → logprob: -18.50018310546875
    10. 'a' → logprob: -18.62518310546875

Token 119: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.025666454806923866
    2. 'b' → logprob: -3.7756664752960205
    3. ' ' → logprob: -6.025666236877441
    4. ' ,' → logprob: -14.025666236877441
    5. ' ' → logprob: -14.775666236877441
    6. ',' → logprob: -15.150666236877441
    7. 'space' → logprob: -15.400666236877441
    8. ' ]' → logprob: -16.150667190551758
    9. ' space' → logprob: -16.650667190551758
    10. ' б' → logprob: -16.775667190551758

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.084206375409849e-05
    2. ' ,' → logprob: -10.125041007995605
    3. ',b' → logprob: -14.625041007995605
    4. ',
' → logprob: -15.625041007995605
    5. ',c' → logprob: -17.25004005432129
    6. ']' → logprob: -17.50004005432129
    7. ',e' → logprob: -18.50004005432129
    8. ' ' → logprob: -18.62504005432129
    9. ',

' → logprob: -18.62504005432129
    10. 'e' → logprob: -18.87504005432129

Token 121: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.10023362934589386
    2. 'c' → logprob: -2.350233554840088
    3. ' ' → logprob: -10.600234031677246
    4. ' ' → logprob: -14.475234031677246
    5. ''' → logprob: -14.600234031677246
    6. '	c' → logprob: -15.100234031677246
    7. '"' → logprob: -15.475234031677246
    8. ' ,' → logprob: -15.600234031677246
    9. ' '' → logprob: -16.35023307800293
    10. ',' → logprob: -16.60023307800293

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001450187264708802
    2. ',d' → logprob: -9.250144958496094
    3. ' ,' → logprob: -10.000144958496094
    4. 'd' → logprob: -12.625144958496094
    5. ',
' → logprob: -16.750144958496094
    6. ',

' → logprob: -18.250144958496094
    7. '`,' → logprob: -18.250144958496094
    8. ' ' → logprob: -18.875144958496094
    9. '‌,' → logprob: -19.000144958496094
    10. 's' → logprob: -19.375144958496094

Token 123: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0788998156785965
    2. 'd' → logprob: -2.57889986038208
    3. ' ' → logprob: -11.578899383544922
    4. ' ' → logprob: -15.203899383544922
    5. 'e' → logprob: -16.078899383544922
    6. '4' → logprob: -16.453899383544922
    7. '	d' → logprob: -16.453899383544922
    8. '1' → logprob: -16.578899383544922
    9. ',' → logprob: -16.703899383544922
    10. ' 
' → logprob: -17.328899383544922

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.93579563125968e-05
    2. ',e' → logprob: -9.625089645385742
    3. ' ,' → logprob: -10.750089645385742
    4. 'e' → logprob: -13.250089645385742
    5. ']' → logprob: -17.875089645385742
    6. ',
' → logprob: -18.375089645385742
    7. ',f' → logprob: -18.750089645385742
    8. '`,' → logprob: -18.875089645385742
    9. '，' → logprob: -19.000089645385742
    10. '‌,' → logprob: -19.000089645385742

Token 125: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.038044821470975876
    2. 'e' → logprob: -3.2880449295043945
    3. ' ' → logprob: -12.913044929504395
    4. ''e' → logprob: -15.163044929504395
    5. ' ' → logprob: -15.163044929504395
    6. '	e' → logprob: -15.288044929504395
    7. ''' → logprob: -16.163043975830078
    8. ' '' → logprob: -17.413043975830078
    9. '"' → logprob: -18.163043975830078
    10. ' е' → logprob: -18.538043975830078

Token 126: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.45848218582978e-06
    2. ' ]' → logprob: -13.00000286102295
    3. ']
' → logprob: -16.000001907348633
    4. ')' → logprob: -17.750001907348633
    5. '']' → logprob: -18.250001907348633
    6. ']

' → logprob: -18.375001907348633
    7. ']
' → logprob: -18.625001907348633
    8. ',' → logprob: -19.250001907348633
    9. ')]' → logprob: -19.750001907348633
    10. '])' → logprob: -19.750001907348633

Token 127: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08051694929599762
    2. '
' → logprob: -3.330517053604126
    3. 'result' → logprob: -5.080516815185547
    4. '.' → logprob: -5.205516815185547
    5. 'max' → logprob: -5.205516815185547
    6. 's' → logprob: -5.455516815185547
    7. 'print' → logprob: -5.830516815185547
    8. 'input' → logprob: -6.205516815185547
    9. 'sum' → logprob: -6.580516815185547
    10. '' → logprob: -6.705516815185547

Token 128: ' Cr' (ID: 5790)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8683604598045349
    2. 's' → logprob: -1.4933605194091797
    3. 'sum' → logprob: -2.3683605194091797
    4. '#' → logprob: -2.3683605194091797
    5. 'sorted' → logprob: -2.7433605194091797
    6. 'm' → logprob: -3.3683605194091797
    7. 'result' → logprob: -3.9933605194091797
    8. 'maximum' → logprob: -4.11836051940918
    9. 'print' → logprob: -4.61836051940918
    10. 'total' → logprob: -5.24336051940918

Token 129: 'éer' (ID: 83012)
  Prédit: 'éer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.038620054721832275
    2. 'ont' → logprob: -4.9136199951171875
    3. 'her' → logprob: -5.0386199951171875
    4. 'om' → logprob: -5.2886199951171875
    5. '#' → logprob: -5.5386199951171875
    6. 'e' → logprob: -5.7886199951171875
    7. 'i' → logprob: -6.5386199951171875
    8. 'er' → logprob: -6.9136199951171875
    9. 'omp' → logprob: -6.9136199951171875
    10. 'éder' → logprob: -6.9136199951171875

Token 130: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.09674008935689926
    2. '_' → logprob: -3.3467400074005127
    3. ' a' → logprob: -4.221740245819092
    4. ' un' → logprob: -4.346740245819092
    5. ' la' → logprob: -4.471740245819092
    6. 'une' → logprob: -5.096740245819092
    7. ' ' → logprob: -5.596740245819092
    8. ' ' → logprob: -6.596740245819092
    9. '_sorted' → logprob: -6.721740245819092
    10. ' sorted' → logprob: -6.971740245819092

Token 131: ' liste' (ID: 31719)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.8234407305717468
    2. ' copie' → logprob: -1.5734407901763916
    3. ' copy' → logprob: -1.8234407901763916
    4. ' result' → logprob: -3.4484407901763916
    5. 'sorted' → logprob: -3.5734407901763916
    6. 'new' → logprob: -3.5734407901763916
    7. 'copy' → logprob: -3.6984407901763916
    8. 'result' → logprob: -3.8234407901763916
    9. 's' → logprob: -3.9484407901763916
    10. ' sorted' → logprob: -4.4484405517578125

Token 132: ' vide' (ID: 21835)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.287914514541626
    2. '_' → logprob: -1.662914514541626
    3. '_des' → logprob: -2.162914514541626
    4. '_output' → logprob: -2.537914514541626
    5. '[' → logprob: -2.912914514541626
    6. '_copy' → logprob: -3.037914514541626
    7. '_final' → logprob: -3.537914514541626
    8. '_filtered' → logprob: -3.662914514541626
    9. '_tr' → logprob: -3.787914514541626
    10. '_empty' → logprob: -4.037914276123047

Token 133: ' qui' (ID: 2780)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.7296153903007507
    2. 'result' → logprob: -1.2296154499053955
    3. ' output' → logprob: -2.2296154499053955
    4. 'output' → logprob: -2.3546154499053955
    5. ' results' → logprob: -5.354615211486816
    6. 'results' → logprob: -5.854615211486816
    7. ' new' → logprob: -5.979615211486816
    8. 'empty' → logprob: -6.229615211486816
    9. 'sum' → logprob: -6.229615211486816
    10. 'sorted' → logprob: -6.479615211486816

Token 134: ' serv' (ID: 2096)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.725670337677002
    2. ' cont' → logprob: -1.225670337677002
    3. ' accueill' → logprob: -2.100670337677002
    4. ' recev' → logprob: -3.225670337677002
    5. 'cont' → logprob: -4.100670337677002
    6. ' serv' → logprob: -4.725670337677002
    7. ' permettra' → logprob: -4.975670337677002
    8. ' stock' → logprob: -5.225670337677002
    9. ' accue' → logprob: -5.725670337677002
    10. 's' → logprob: -5.725670337677002

Token 135: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.000688486616127193
    2. 'ra' → logprob: -7.500688552856445
    3. 'irà' → logprob: -9.750688552856445
    4. 'ir' → logprob: -10.125688552856445
    5. 'a' → logprob: -10.500688552856445
    6. '#' → logprob: -12.375688552856445
    7. 'irá' → logprob: -13.375688552856445
    8. '```' → logprob: -13.500688552856445
    9. 'era' → logprob: -14.250688552856445
    10. 'i' → logprob: -14.875688552856445

Token 136: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.08626113086938858
    2. ' ' → logprob: -3.461261034011841
    3. ' to' → logprob: -4.21126127243042
    4. '<|end|>' → logprob: -4.33626127243042
    5. 'à' → logprob: -4.83626127243042
    6. ' au' → logprob: -5.71126127243042
    7. ' de' → logprob: -6.08626127243042
    8. 'to' → logprob: -6.21126127243042
    9. ' a' → logprob: -6.71126127243042
    10. ' as' → logprob: -6.96126127243042

Token 137: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.3143925368785858
    2. 'stock' → logprob: -1.3143925666809082
    3. '_stock' → logprob: -8.06439208984375
    4. 'conten' → logprob: -8.43939208984375
    5. ' accueillir' → logprob: -8.81439208984375
    6. ' conten' → logprob: -9.06439208984375
    7. 'store' → logprob: -9.43939208984375
    8. 'st' → logprob: -9.68939208984375
    9. 'acc' → logprob: -10.81439208984375
    10. ' recevoir' → logprob: -10.93939208984375

Token 138: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.10287431627511978
    2. 'ir' → logprob: -2.852874279022217
    3. 'e' → logprob: -3.977874279022217
    4. 'r' → logprob: -4.727874279022217
    5. ' ' → logprob: -5.727874279022217
    6. 'i' → logprob: -5.852874279022217
    7. 'ent' → logprob: -5.977874279022217
    8. 'a' → logprob: -6.227874279022217
    9. 'ra' → logprob: -7.602874279022217
    10. ' a' → logprob: -7.727874279022217

Token 139: ' chaque' (ID: 21194)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.18528997898101807
    2. 'les' → logprob: -1.935289978981018
    3. ' des' → logprob: -5.0602898597717285
    4. '[]' → logprob: -5.5602898597717285
    5. 'result' → logprob: -5.9352898597717285
    6. 'input' → logprob: -6.4352898597717285
    7. ' la' → logprob: -6.4352898597717285
    8. ' ' → logprob: -6.9352898597717285
    9. 'des' → logprob: -6.9352898597717285
    10. 's' → logprob: -7.1852898597717285

Token 140: ' nombre' (ID: 9733)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.2128522396087646
    2. ' élément' → logprob: -1.5878522396087646
    3. '_' → logprob: -1.7128522396087646
    4. ' ' → logprob: -1.9628522396087646
    5. ' nombre' → logprob: -2.8378522396087646
    6. ' element' → logprob: -3.9628522396087646
    7. 'nombre' → logprob: -3.9628522396087646
    8. 'element' → logprob: -4.087852478027344
    9. ' carré' → logprob: -4.337852478027344
    10. ' valeur' → logprob: -5.087852478027344

Token 141: ' après' (ID: 16460)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.884830355644226
    2. ' result' → logprob: -2.0098304748535156
    3. 'result' → logprob: -2.1348304748535156
    4. ' squares' → logprob: -2.6348304748535156
    5. 'output' → logprob: -2.6348304748535156
    6. ' output' → logprob: -3.2598304748535156
    7. 'processed' → logprob: -3.3848304748535156
    8. ' processed' → logprob: -3.3848304748535156
    9. 'square' → logprob: -3.7598304748535156
    10. ' results' → logprob: -3.8848304748535156

Token 142: ' qu' (ID: 474)
  Prédit: ' avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' avoir' → logprob: -1.262929081916809
    2. ' transformation' → logprob: -1.637929081916809
    3. ' ' → logprob: -2.7629289627075195
    4. ' traitement' → logprob: -2.8879289627075195
    5. ' conversion' → logprob: -3.0129289627075195
    6. 'l' → logprob: -3.1379289627075195
    7. ' l' → logprob: -3.1379289627075195
    8. ' multiplication' → logprob: -3.2629289627075195
    9. 's' → logprob: -3.3879289627075195
    10. '_' → logprob: -3.5129289627075195

Token 143: ''il' (ID: 14683)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6024767756462097
    2. '_' → logprob: -0.9774767756462097
    3. 'u' → logprob: -3.6024768352508545
    4. 'e' → logprob: -4.102476596832275
    5. ''il' → logprob: -4.102476596832275
    6. 'a' → logprob: -4.727476596832275
    7. ''avoir' → logprob: -6.102476596832275
    8. ' '' → logprob: -7.102476596832275
    9. ''une' → logprob: -7.227476596832275
    10. ''un' → logprob: -7.352476596832275

Token 144: ' ait' (ID: 43015)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9765127897262573
    2. ' soit' → logprob: -1.3515127897262573
    3. ' ait' → logprob: -1.8515127897262573
    4. 'a' → logprob: -1.9765127897262573
    5. 'so' → logprob: -4.101512908935547
    6. '*' → logprob: -4.601512908935547
    7. '_' → logprob: -4.601512908935547
    8. ' ' → logprob: -5.101512908935547
    9. ' has' → logprob: -5.476512908935547
    10. '#' → logprob: -5.601512908935547

Token 145: ' été' (ID: 9799)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08700983226299286
    2. ' été' → logprob: -2.962009906768799
    3. 'été' → logprob: -3.587009906768799
    4. 'é' → logprob: -6.712009906768799
    5. ' ' → logprob: -7.337009906768799
    6. 's' → logprob: -7.837009906768799
    7. '+' → logprob: -8.58700942993164
    8. ' been' → logprob: -8.71200942993164
    9. '*' → logprob: -8.83700942993164
    10. 't' → logprob: -8.83700942993164

Token 146: ' arr' (ID: 1724)
  Prédit: ' multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multip' → logprob: -0.07729475200176239
    2. 'transform' → logprob: -3.8272948265075684
    3. ' doubl' → logprob: -4.202294826507568
    4. 'multip' → logprob: -4.452294826507568
    5. 'trait' → logprob: -5.327294826507568
    6. ' transform' → logprob: -5.952294826507568
    7. ' traité' → logprob: -6.077294826507568
    8. 'mult' → logprob: -6.452294826507568
    9. ' ajouté' → logprob: -6.702294826507568
    10. 's' → logprob: -6.702294826507568

Token 147: 'ondi' (ID: 117409)
  Prédit: 'ondi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.01832166686654091
    2. 'ond' → logprob: -4.018321514129639
    3. 'o' → logprob: -9.393321990966797
    4. 'on' → logprob: -9.893321990966797
    5. 'ondissement' → logprob: -11.143321990966797
    6. 'ound' → logprob: -12.268321990966797
    7. 'ont' → logprob: -12.893321990966797
    8. 'онд' → logprob: -13.018321990966797
    9. 'odi' → logprob: -13.143321990966797
    10. '

' → logprob: -13.268321990966797

Token 148: ' au' (ID: 2791)
  Prédit: ' rounded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rounded' → logprob: -0.7130648493766785
    2. 'rounded' → logprob: -0.7130648493766785
    3. ',' → logprob: -5.213064670562744
    4. '_' → logprob: -5.463064670562744
    5. 'r' → logprob: -6.463064670562744
    6. 'round' → logprob: -6.463064670562744
    7. 'result' → logprob: -7.088064670562744
    8. 'arr' → logprob: -7.213064670562744
    9. ' ' → logprob: -7.213064670562744
    10. 's' → logprob: -7.713064670562744

Token 149: ' multiple' (ID: 7598)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5346287488937378
    2. 'plus' → logprob: -1.4096287488937378
    3. 'multiple' → logprob: -2.6596288681030273
    4. 'sup' → logprob: -3.5346288681030273
    5. 'cent' → logprob: -4.284628868103027
    6. 'nombre' → logprob: -4.659628868103027
    7. ' supérieur' → logprob: -4.659628868103027
    8. ' multiple' → logprob: -5.159628868103027
    9. 'c' → logprob: -5.409628868103027
    10. '```' → logprob: -6.034628868103027

Token 150: ' supérieur' (ID: 98491)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05410561338067055
    2. '_' → logprob: -3.429105520248413
    3. ' de' → logprob: -4.429105758666992
    4. 's' → logprob: -6.429105758666992
    5. ' of' → logprob: -6.429105758666992
    6. '<|end|>' → logprob: -6.804105758666992
    7. ' d' → logprob: -7.054105758666992
    8. ' ' → logprob: -7.804105758666992
    9. 'de' → logprob: -8.054105758666992
    10. 'u' → logprob: -8.179105758666992

Token 151: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0820949077606201
    2. 's' → logprob: -1.0820949077606201
    3. ' ' → logprob: -1.7070949077606201
    4. '_list' → logprob: -3.33209490776062
    5. '_up' → logprob: -4.457095146179199
    6. ' _' → logprob: -4.832095146179199
    7. ' des' → logprob: -4.957095146179199
    8. '[]' → logprob: -4.957095146179199
    9. 'rounded' → logprob: -5.082095146179199
    10. '_s' → logprob: -5.207095146179199

Token 152: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49618053436279297
    2. '10' → logprob: -0.996180534362793
    3. '5' → logprob: -3.871180534362793
    4. '100' → logprob: -8.496180534362793
    5. ' cinq' → logprob: -8.496180534362793
    6. ' dix' → logprob: -8.746180534362793
    7. '2' → logprob: -9.246180534362793
    8. '50' → logprob: -9.746180534362793
    9. '4' → logprob: -9.871180534362793
    10. '0' → logprob: -9.996180534362793

Token 153: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.29945802688598633
    2. '5' → logprob: -1.4244580268859863
    3. ' ' → logprob: -4.049458026885986
    4. ' cinq' → logprob: -8.174457550048828
    5. ' dix' → logprob: -8.424457550048828
    6. 'd' → logprob: -9.424457550048828
    7. '2' → logprob: -10.049457550048828
    8. '1' → logprob: -10.799457550048828
    9. '0' → logprob: -11.049457550048828
    10. '100' → logprob: -11.424457550048828

Token 154: '
' (ID: 198)
  Prédit: 'rounded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rounded' → logprob: -0.12379948049783707
    2. ' rounded' → logprob: -2.7487995624542236
    3. 'arr' → logprob: -3.6237995624542236
    4. 'r' → logprob: -4.7487993240356445
    5. 'result' → logprob: -5.8737993240356445
    6. ',' → logprob: -5.9987993240356445
    7. 's' → logprob: -5.9987993240356445
    8. 'round' → logprob: -6.1237993240356445
    9. '_' → logprob: -7.1237993240356445
    10. 'output' → logprob: -7.2487993240356445

Token 155: '#' (ID: 2)
  Prédit: 'rounded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rounded' → logprob: -0.252173513174057
    2. ' rounded' → logprob: -2.12717342376709
    3. 'arr' → logprob: -3.00217342376709
    4. 'r' → logprob: -3.37717342376709
    5. 'result' → logprob: -5.75217342376709
    6. 'round' → logprob: -5.87717342376709
    7. ' r' → logprob: -6.25217342376709
    8. 'm' → logprob: -6.25217342376709
    9. ' arr' → logprob: -6.75217342376709
    10. 'output' → logprob: -7.25217342376709

Token 156: ' (' (ID: 350)
  Prédit: 'rounded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rounded' → logprob: -0.36426350474357605
    2. 'r' → logprob: -2.1142635345458984
    3. ' rounded' → logprob: -2.3642635345458984
    4. 'arr' → logprob: -2.9892635345458984
    5. 'round' → logprob: -4.864263534545898
    6. 'result' → logprob: -5.239263534545898
    7. 'm' → logprob: -5.239263534545898
    8. 'output' → logprob: -5.489263534545898
    9. 'l' → logprob: -6.176763534545898
    10. ' r' → logprob: -6.426763534545898

Token 157: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17094029486179352
    2. ' )' → logprob: -2.670940399169922
    3. 'r' → logprob: -4.045940399169922
    4. 'rounded' → logprob: -4.045940399169922
    5. ' ' → logprob: -4.170940399169922
    6. ' rounded' → logprob: -4.545940399169922
    7. ']' → logprob: -5.545940399169922
    8. ' ]' → logprob: -6.045940399169922
    9. '#' → logprob: -6.045940399169922
    10. 'n' → logprob: -6.295940399169922

Token 158: 'auf' (ID: 7483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0421011447906494
    2. 'i' → logprob: -1.9171011447906494
    3. 'a' → logprob: -2.2921011447906494
    4. 'e' → logprob: -2.4171011447906494
    5. 'p' → logprob: -2.6671011447906494
    6. 'u' → logprob: -2.7921011447906494
    7. '=' → logprob: -3.1671011447906494
    8. ' )' → logprob: -3.1671011447906494
    9. 'pace' → logprob: -3.2921011447906494
    10. 'ur' → logprob: -4.41710090637207

Token 159: ' s' (ID: 265)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.8010514974594116
    2. ' for' → logprob: -1.3010514974594116
    3. 'pour' → logprob: -2.426051616668701
    4. ' ' → logprob: -2.801051616668701
    5. ' les' → logprob: -2.926051616668701
    6. 'for' → logprob: -3.801051616668701
    7. ')' → logprob: -4.051051616668701
    8. ' si' → logprob: -5.176051616668701
    9. ' )' → logprob: -5.301051616668701
    10. 'les' → logprob: -5.426051616668701

Token 160: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.12512943148612976
    2. 'u' → logprob: -2.375129461288452
    3. 'i' → logprob: -4.000129222869873
    4. ''i' → logprob: -5.500129222869873
    5. 'il' → logprob: -7.875129222869873
    6. ''ils' → logprob: -8.000129699707031
    7. '#' → logprob: -8.250129699707031
    8. '’il' → logprob: -8.375129699707031
    9. ''' → logprob: -8.750129699707031
    10. ''u' → logprob: -9.000129699707031

Token 161: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.8441713452339172
    2. ' est' → logprob: -0.8441713452339172
    3. 'a' → logprob: -2.8441712856292725
    4. ''est' → logprob: -4.094171524047852
    5. 'e' → logprob: -4.219171524047852
    6. '%' → logprob: -4.219171524047852
    7. '#' → logprob: -4.469171524047852
    8. ' already' → logprob: -5.094171524047852
    9. 'already' → logprob: -5.219171524047852
    10. 'dé' → logprob: -5.344171524047852

Token 162: ' déjà' (ID: 21229)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.3629084825515747
    2. ' déjà' → logprob: -1.3629084825515747
    3. 'd' → logprob: -3.237908363342285
    4. ' dé' → logprob: -5.237908363342285
    5. '#' → logprob: -7.362908363342285
    6. ' ' → logprob: -7.612908363342285
    7. ' already' → logprob: -7.987908363342285
    8. 'div' → logprob: -8.300408363342285
    9. ' d' → logprob: -8.300408363342285
    10. 'égal' → logprob: -8.487908363342285

Token 163: ' multiple' (ID: 7598)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.98703533411026
    2. 'multiple' → logprob: -1.4870352745056152
    3. 'div' → logprob: -1.9870352745056152
    4. ' multiple' → logprob: -1.9870352745056152
    5. 'un' → logprob: -2.8620352745056152
    6. ' divisible' → logprob: -3.8620352745056152
    7. 'dé' → logprob: -4.237035274505615
    8. 'multip' → logprob: -4.362035274505615
    9. 'd' → logprob: -4.987035274505615
    10. ' déjà' → logprob: -5.987035274505615

Token 164: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11540617048740387
    2. 'de' → logprob: -2.2404062747955322
    3. ' ' → logprob: -6.740406036376953
    4. ')' → logprob: -7.490406036376953
    5. 's' → logprob: -7.990406036376953
    6. '_de' → logprob: -8.865406036376953
    7. 'd' → logprob: -9.115406036376953
    8. ' ' → logprob: -9.490406036376953
    9. '10' → logprob: -10.115406036376953
    10. '	de' → logprob: -10.865406036376953

Token 165: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04334752634167671
    2. ' ' → logprob: -3.1683475971221924
    3. 'd' → logprob: -8.543347358703613
    4. ' dix' → logprob: -9.043347358703613
    5. ' ' → logprob: -10.793347358703613
    6. '1' → logprob: -11.418347358703613
    7. ' diez' → logprob: -13.918347358703613
    8. '  ' → logprob: -14.543347358703613
    9. 'l' → logprob: -15.168347358703613
    10. '```' → logprob: -15.168347358703613

Token 166: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00014239625306800008
    2. ' ' → logprob: -9.250142097473145
    3. 'd' → logprob: -10.125142097473145
    4. '1' → logprob: -12.625142097473145
    5. ' dix' → logprob: -13.000142097473145
    6. ' ' → logprob: -15.250142097473145
    7. 'ten' → logprob: -16.12514305114746
    8. '' → logprob: -16.87514305114746
    9. ' diez' → logprob: -17.00014305114746
    10. '１０' → logprob: -17.00014305114746

Token 167: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006964695639908314
    2. ']' → logprob: -7.875696659088135
    3. ' )' → logprob: -8.750696182250977
    4. ',' → logprob: -9.500696182250977
    5. ')]' → logprob: -10.500696182250977
    6. ')
' → logprob: -10.750696182250977
    7. 'e' → logprob: -12.000696182250977
    8. ').' → logprob: -12.250696182250977
    9. '])' → logprob: -12.250696182250977
    10. 's' → logprob: -13.000696182250977

Token 168: ' auquel' (ID: 136484)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10900174081325531
    2. ' )' → logprob: -2.359001636505127
    3. ' ' → logprob: -5.359001636505127
    4. ' auquel' → logprob: -7.234001636505127
    5. ' )
' → logprob: -7.359001636505127
    6. ',' → logprob: -7.609001636505127
    7. ')
' → logprob: -7.859001636505127
    8. ' in' → logprob: -8.109002113342285
    9. ' dans' → logprob: -8.484002113342285
    10. '):' → logprob: -8.484002113342285

Token 169: ' cas' (ID: 2108)
  Prédit: ''il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.4095233678817749
    2. ' cas' → logprob: -1.409523367881775
    3. 'cas' → logprob: -3.1595234870910645
    4. ' case' → logprob: -4.4095234870910645
    5. ')' → logprob: -4.6595234870910645
    6. '#' → logprob: -5.4095234870910645
    7. ''' → logprob: -6.0345234870910645
    8. 'il' → logprob: -6.1595234870910645
    9. ''au' → logprob: -6.2845234870910645
    10. ' ' → logprob: -6.4095234870910645

Token 170: ' il' (ID: 1793)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.22403466701507568
    2. 'on' → logprob: -2.2240347862243652
    3. ')' → logprob: -2.9740347862243652
    4. ',' → logprob: -4.349034786224365
    5. ' ' → logprob: -4.474034786224365
    6. ' )' → logprob: -4.849034786224365
    7. ' ' → logprob: -5.474034786224365
    8. 'l' → logprob: -7.224034786224365
    9. ''on' → logprob: -7.224034786224365
    10. 'n' → logprob: -8.099034309387207

Token 171: ' reste' (ID: 26769)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11226476728916168
    2. ')' → logprob: -3.23726487159729
    3. 'n' → logprob: -3.36226487159729
    4. ' )' → logprob: -4.862264633178711
    5. ' ' → logprob: -5.737264633178711
    6. ' restera' → logprob: -5.862264633178711
    7. ' ' → logprob: -5.987264633178711
    8. '<|end|>' → logprob: -6.237264633178711
    9. 'ne' → logprob: -6.487264633178711
    10. 'f' → logprob: -6.862264633178711

Token 172: ' ident' (ID: 3951)
  Prédit: 'tel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tel' → logprob: -0.20761097967624664
    2. ' tel' → logprob: -2.707611083984375
    3. 'ident' → logprob: -3.207611083984375
    4. 'à' → logprob: -3.707611083984375
    5. 'exact' → logprob: -4.082611083984375
    6. 'le' → logprob: -4.957611083984375
    7. 'comme' → logprob: -5.082611083984375
    8. 'inch' → logprob: -5.332611083984375
    9. 'égal' → logprob: -5.582611083984375
    10. 'dans' → logprob: -5.957611083984375

Token 173: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.06641442328691483
    2. 'que' → logprob: -2.8164143562316895
    3. 'al' → logprob: -7.0664143562316895
    4. 'iq' → logprob: -7.0664143562316895
    5. '#' → logprob: -7.4414143562316895
    6. 'e' → logprob: -7.8164143562316895
    7. 'ical' → logprob: -8.191414833068848
    8. 'iqu' → logprob: -8.191414833068848
    9. 'q' → logprob: -8.566414833068848
    10. 'i' → logprob: -8.566414833068848

Token 174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03874208778142929
    2. ']' → logprob: -3.2887420654296875
    3. ')
' → logprob: -8.288742065429688
    4. ')]' → logprob: -8.288742065429688
    5. ' )' → logprob: -9.663742065429688
    6. '])' → logprob: -10.038742065429688
    7. ' ]' → logprob: -10.913742065429688
    8. ',' → logprob: -11.163742065429688
    9. ')
' → logprob: -11.538742065429688
    10. ')

' → logprob: -11.788742065429688

Token 175: 'ten' (ID: 1305)
  Prédit: 'rounded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rounded' → logprob: -0.11207498610019684
    2. 'arr' → logprob: -2.487075090408325
    3. 'result' → logprob: -4.862074851989746
    4. 'round' → logprob: -5.237074851989746
    5. 'output' → logprob: -5.237074851989746
    6. ' rounded' → logprob: -6.237074851989746
    7. 'multip' → logprob: -7.737074851989746
    8. 'r' → logprob: -7.987074851989746
    9. 'input' → logprob: -8.612074851989746
    10. 'ceil' → logprob: -8.862074851989746

Token 176: '_up' (ID: 18721)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0949372872710228
    2. 'd' → logprob: -2.594937324523926
    3. '_list' → logprob: -4.594937324523926
    4. 'ed' → logprob: -5.719937324523926
    5. 't' → logprob: -7.969937324523926
    6. 'g' → logprob: -8.219937324523926
    7. '_' → logprob: -8.594937324523926
    8. '_s' → logprob: -8.719937324523926
    9. '_mult' → logprob: -8.719937324523926
    10. '_round' → logprob: -8.844937324523926

Token 177: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.545872688293457
    2. 's' → logprob: -0.920872688293457
    3. ' =' → logprob: -4.420872688293457
    4. 'ed' → logprob: -5.420872688293457
    5. '_' → logprob: -5.545872688293457
    6. '=' → logprob: -6.545872688293457
    7. '=[]' → logprob: -8.670872688293457
    8. '_lst' → logprob: -8.920872688293457
    9. '_numbers' → logprob: -9.420872688293457
    10. 'list' → logprob: -9.545872688293457

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860779643058777
    2. '=' → logprob: -3.04860782623291
    3. '=[]' → logprob: -11.54860782623291
    4. ']' → logprob: -13.17360782623291
    5. ' ' → logprob: -13.42360782623291
    6. 's' → logprob: -13.79860782623291
    7. ' =[' → logprob: -13.79860782623291
    8. ' =
' → logprob: -13.92360782623291
    9. '.' → logprob: -14.04860782623291
    10. ')' → logprob: -14.04860782623291

Token 179: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.023381974548101425
    2. ' [' → logprob: -4.523382186889648
    3. '[]' → logprob: -4.523382186889648
    4. '[' → logprob: -6.648382186889648
    5. ' ' → logprob: -9.148382186889648
    6. ' [
' → logprob: -14.273382186889648
    7. ' [

' → logprob: -14.273382186889648
    8. ' []
' → logprob: -14.523382186889648
    9. ' [];' → logprob: -14.773382186889648
    10. '[]}' → logprob: -15.523382186889648

Token 180: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006196234375238419
    2. 'f' → logprob: -5.131196022033691
    3. '
' → logprob: -8.631196022033691
    4. ' for' → logprob: -9.631196022033691
    5. 'i' → logprob: -12.006196022033691
    6. 'fo' → logprob: -12.256196022033691
    7. '' → logprob: -12.631196022033691
    8. 'F' → logprob: -12.756196022033691
    9. ' 
' → logprob: -12.881196022033691
    10. '#' → logprob: -13.881196022033691

Token 181: ' Cr' (ID: 5790)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.531315314830863e-06
    2. 'f' → logprob: -13.125003814697266
    3. 'def' → logprob: -14.250003814697266
    4. 'fo' → logprob: -14.625003814697266
    5. ' for' → logprob: -14.875003814697266
    6. 'i' → logprob: -17.750003814697266
    7. '#' → logprob: -19.250003814697266
    8. 'fort' → logprob: -20.875003814697266
    9. 'pour' → logprob: -21.125003814697266
    10. 'F' → logprob: -21.250003814697266

Token 182: 'éer' (ID: 83012)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8637373447418213
    2. 'a' → logprob: -1.1137373447418213
    3. 'for' → logprob: -1.6137373447418213
    4. '#' → logprob: -3.8637373447418213
    5. 'o' → logprob: -4.863737106323242
    6. 'u' → logprob: -5.113737106323242
    7. 'i' → logprob: -5.238737106323242
    8. ' for' → logprob: -5.613737106323242
    9. 'f' → logprob: -5.613737106323242
    10. ' ' → logprob: -6.363737106323242

Token 183: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3960811495780945
    2. ' for' → logprob: -1.8960812091827393
    3. ' a' → logprob: -2.5210812091827393
    4. 'for' → logprob: -2.6460812091827393
    5. ' une' → logprob: -4.27108097076416
    6. ' un' → logprob: -5.27108097076416
    7. ' ' → logprob: -6.52108097076416
    8. '_' → logprob: -6.64608097076416
    9. 'a' → logprob: -7.14608097076416
    10. '(' → logprob: -7.89608097076416

Token 184: ' liste' (ID: 31719)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0028170011937618256
    2. ' for' → logprob: -6.252817153930664
    3. 'def' → logprob: -7.127817153930664
    4. 'bou' → logprob: -9.752817153930664
    5. 'pour' → logprob: -11.252817153930664
    6. ' ' → logprob: -12.502817153930664
    7. 'fo' → logprob: -13.127817153930664
    8. ':' → logprob: -13.877817153930664
    9. '
' → logprob: -14.002817153930664
    10. 'ligne' → logprob: -14.127817153930664

Token 185: ' vide' (ID: 21835)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9879457950592041
    2. ' for' → logprob: -1.612945795059204
    3. 'for' → logprob: -2.237945795059204
    4. '[' → logprob: -3.237945795059204
    5. '=' → logprob: -3.362945795059204
    6. '_' → logprob: -3.487945795059204
    7. ' des' → logprob: -3.612945795059204
    8. '=[]' → logprob: -3.862945795059204
    9. '[]' → logprob: -4.112945556640625
    10. 'des' → logprob: -4.112945556640625

Token 186: ' qui' (ID: 2780)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9122596979141235
    2. ' for' → logprob: -1.2872596979141235
    3. ' ' → logprob: -2.787259578704834
    4. '<|end|>' → logprob: -3.162259578704834
    5. 'for' → logprob: -3.162259578704834
    6. ' pour' → logprob: -4.162259578704834
    7. '[' → logprob: -4.162259578704834
    8. '()' → logprob: -4.287259578704834
    9. '[]' → logprob: -4.662259578704834
    10. ' that' → logprob: -5.162259578704834

Token 187: ' serv' (ID: 2096)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3430835008621216
    2. ' va' → logprob: -1.4680835008621216
    3. ' for' → logprob: -1.9680835008621216
    4. ' contient' → logprob: -2.593083381652832
    5. ' cont' → logprob: -2.718083381652832
    6. '<|end|>' → logprob: -3.093083381652832
    7. ' =' → logprob: -3.218083381652832
    8. '_cont' → logprob: -4.093083381652832
    9. 'cont' → logprob: -4.343083381652832
    10. 's' → logprob: -4.343083381652832

Token 188: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.021272238343954086
    2. 'ra' → logprob: -3.8962721824645996
    3. 'r' → logprob: -8.146272659301758
    4. 'ir' → logprob: -8.771272659301758
    5. 'a' → logprob: -9.271272659301758
    6. 'irà' → logprob: -9.271272659301758
    7. '#' → logprob: -9.771272659301758
    8. 'era' → logprob: -11.646272659301758
    9. 'vira' → logprob: -12.271272659301758
    10. 'rait' → logprob: -12.646272659301758

Token 189: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.07410616427659988
    2. 'à' → logprob: -3.324106216430664
    3. ' a' → logprob: -4.074106216430664
    4. ' ' → logprob: -5.074106216430664
    5. 'a' → logprob: -5.324106216430664
    6. ' to' → logprob: -5.449106216430664
    7. '<|end|>' → logprob: -7.449106216430664
    8. '=' → logprob: -7.574106216430664
    9. ' =' → logprob: -8.324106216430664
    10. '_' → logprob: -8.574106216430664

Token 190: ' stock' (ID: 6546)
  Prédit: 'stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stock' → logprob: -0.20670540630817413
    2. ' stock' → logprob: -1.9567054510116577
    3. 'st' → logprob: -3.456705331802368
    4. 'conten' → logprob: -5.081705570220947
    5. 'store' → logprob: -5.581705570220947
    6. 'stor' → logprob: -6.831705570220947
    7. 'cont' → logprob: -7.706705570220947
    8. 'range' → logprob: -7.956705570220947
    9. 'sto' → logprob: -7.956705570220947
    10. 's' → logprob: -8.331705093383789

Token 191: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.20989300310611725
    2. 'r' → logprob: -2.709892988204956
    3. 'o' → logprob: -2.959892988204956
    4. 'ocker' → logprob: -3.959892988204956
    5. 'é' → logprob: -4.084893226623535
    6. 'ker' → logprob: -4.959893226623535
    7. 'orer' → logprob: -4.959893226623535
    8. 'e' → logprob: -5.709893226623535
    9. 'u' → logprob: -6.084893226623535
    10. 'rer' → logprob: -6.209893226623535

Token 192: ' le' (ID: 505)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4946710169315338
    2. '[' → logprob: -1.9946709871292114
    3. '[input' → logprob: -2.619671106338501
    4. 'les' → logprob: -2.994671106338501
    5. 'l' → logprob: -2.994671106338501
    6. '(input' → logprob: -3.619671106338501
    7. ' les' → logprob: -4.369670867919922
    8. ' input' → logprob: -4.619670867919922
    9. '[]' → logprob: -5.369670867919922
    10. ')' → logprob: -5.494670867919922

Token 193: ' reste' (ID: 26769)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1849883794784546
    2. 'r' → logprob: -1.8099883794784546
    3. ' résultat' → logprob: -2.059988498687744
    4. 'i' → logprob: -2.559988498687744
    5. 'result' → logprob: -2.809988498687744
    6. ' ' → logprob: -2.809988498687744
    7. ' total' → logprob: -3.684988498687744
    8. '#' → logprob: -3.809988498687744
    9. '_' → logprob: -4.059988498687744
    10. 'total' → logprob: -4.184988498687744

Token 194: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.078187108039856
    2. 's' → logprob: -1.328187108039856
    3. ' ' → logprob: -2.0781869888305664
    4. '[' → logprob: -2.8281869888305664
    5. '_' → logprob: -2.9531869888305664
    6. ' de' → logprob: -3.2031869888305664
    7. '[]' → logprob: -3.4531869888305664
    8. ' (' → logprob: -3.9531869888305664
    9. 'des' → logprob: -4.203186988830566
    10. ' modulo' → logprob: -4.578186988830566

Token 195: ' la' (ID: 557)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.4420681595802307
    2. ' la' → logprob: -1.317068099975586
    3. ' each' → logprob: -3.692068099975586
    4. ' division' → logprob: -4.317068099975586
    5. 'each' → logprob: -4.942068099975586
    6. 'div' → logprob: -4.942068099975586
    7. ' l' → logprob: -5.192068099975586
    8. 's' → logprob: -5.317068099975586
    9. 'division' → logprob: -5.317068099975586
    10. ' chacun' → logprob: -5.317068099975586

Token 196: ' division' (ID: 21629)
  Prédit: ' division'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' division' → logprob: -1.020495057106018
    2. 'div' → logprob: -1.520495057106018
    3. 'division' → logprob: -1.645495057106018
    4. 'nombre' → logprob: -2.5204949378967285
    5. ' nombre' → logprob: -2.6454949378967285
    6. 'a' → logprob: -3.3954949378967285
    7. '#' → logprob: -4.8954949378967285
    8. ' #' → logprob: -5.2704949378967285
    9. 's' → logprob: -5.6454949378967285
    10. ' div' → logprob: -5.8954949378967285

Token 197: ' par' (ID: 686)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6980096697807312
    2. ' modulo' → logprob: -2.198009729385376
    3. ' de' → logprob: -2.448009729385376
    4. '%' → logprob: -2.448009729385376
    5. ' ' → logprob: -2.573009729385376
    6. 'mod' → logprob: -3.573009729385376
    7. '10' → logprob: -3.948009729385376
    8. ' %' → logprob: -4.073009490966797
    9. '_mod' → logprob: -4.698009490966797
    10. ' (' → logprob: -4.948009490966797

Token 198: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06208386644721031
    2. ' ' → logprob: -2.8120839595794678
    3. 'd' → logprob: -9.562084197998047
    4. '[' → logprob: -11.562084197998047
    5. ' ' → logprob: -12.312084197998047
    6. '  ' → logprob: -12.437084197998047
    7. '100' → logprob: -12.562084197998047
    8. ' dix' → logprob: -12.687084197998047
    9. '_' → logprob: -12.812084197998047
    10. '1' → logprob: -13.437084197998047

Token 199: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0019473218126222491
    2. ' ' → logprob: -6.251947402954102
    3. 'd' → logprob: -11.001947402954102
    4. ' ' → logprob: -15.376947402954102
    5. ' dix' → logprob: -15.501947402954102
    6. '  ' → logprob: -15.501947402954102
    7. ')' → logprob: -15.876947402954102
    8. '```' → logprob: -16.0644474029541
    9. '[' → logprob: -16.1894474029541
    10. ']' → logprob: -16.5019474029541

Token 200: ' (' (ID: 350)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.8726596236228943
    2. ' remainder' → logprob: -0.8726596236228943
    3. 're' → logprob: -2.997659683227539
    4. 'r' → logprob: -3.497659683227539
    5. 'rem' → logprob: -3.622659683227539
    6. '_' → logprob: -3.872659683227539
    7. '_rest' → logprob: -4.997659683227539
    8. '_r' → logprob: -5.372659683227539
    9. 'reste' → logprob: -5.622659683227539
    10. ' rest' → logprob: -5.872659683227539

Token 201: 'appel' (ID: 100200)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11594505608081818
    2. ' )' → logprob: -2.2409451007843018
    3. 'input' → logprob: -6.990944862365723
    4. 'de' → logprob: -8.115944862365723
    5. ' des' → logprob: -8.240944862365723
    6. 'des' → logprob: -8.240944862365723
    7. ' de' → logprob: -8.865944862365723
    8. 'pour' → logprob: -8.990944862365723
    9. 'for' → logprob: -9.365944862365723
    10. ' ' → logprob: -9.615944862365723

Token 202: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.06567289680242538
    2. 'e' → logprob: -4.440672874450684
    3. 'i' → logprob: -4.565672874450684
    4. 'u' → logprob: -4.940672874450684
    5. 'ed' → logprob: -5.190672874450684
    6. 'ten' → logprob: -5.440672874450684
    7. ')' → logprob: -5.690672874450684
    8. 'ation' → logprob: -5.815672874450684
    9. ' ten' → logprob: -6.565672874450684
    10. 'es' → logprob: -6.565672874450684

Token 203: ' '' (ID: 461)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -1.121597409248352
    2. ' "' → logprob: -1.746597409248352
    3. ' modulo' → logprob: -1.871597409248352
    4. ')' → logprob: -1.996597409248352
    5. ' )' → logprob: -2.9965972900390625
    6. '"' → logprob: -3.3715972900390625
    7. ' '' → logprob: -3.9965972900390625
    8. 'r' → logprob: -4.3715972900390625
    9. 're' → logprob: -4.6215972900390625
    10. ' ' → logprob: -4.6215972900390625

Token 204: 'am' (ID: 313)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -1.1119592189788818
    2. ' modulo' → logprob: -1.2369592189788818
    3. 're' → logprob: -1.8619592189788818
    4. 'mod' → logprob: -2.611959218978882
    5. 'reste' → logprob: -2.986959218978882
    6. 'r' → logprob: -3.111959218978882
    7. ' modulus' → logprob: -4.486959457397461
    8. 'rest' → logprob: -4.986959457397461
    9. ' mod' → logprob: -4.986959457397461
    10. 'rem' → logprob: -5.611959457397461

Token 205: 'ari' (ID: 1683)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'od' → logprob: -1.4981956481933594
    2. 'or' → logprob: -1.7481956481933594
    3. 'ort' → logprob: -1.9981956481933594
    4. 'o' → logprob: -2.4981956481933594
    5. 'e' → logprob: -2.7481956481933594
    6. 'a' → logprob: -2.8731956481933594
    7. 'odule' → logprob: -3.6231956481933594
    8. 'plement' → logprob: -3.7481956481933594
    9. 'u' → logprob: -3.8731956481933594
    10. 'el' → logprob: -4.123195648193359

Token 206: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6826218962669373
    2. ')' → logprob: -1.807621955871582
    3. 'n' → logprob: -2.057621955871582
    4. 'e' → logprob: -2.682621955871582
    5. ' )' → logprob: -4.307621955871582
    6. 'es' → logprob: -4.807621955871582
    7. 'r' → logprob: -4.807621955871582
    8. ' ' → logprob: -4.932621955871582
    9. 'nt' → logprob: -5.182621955871582
    10. 'ent' → logprob: -5.307621955871582

Token 207: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004366032779216766
    2. 's' → logprob: -6.129365921020508
    3. ' )' → logprob: -6.629365921020508
    4. '_' → logprob: -8.379365921020508
    5. '')' → logprob: -9.004365921020508
    6. ')_' → logprob: -9.254365921020508
    7. '_)' → logprob: -9.754365921020508
    8. 'e' → logprob: -10.004365921020508
    9. ',' → logprob: -10.504365921020508
    10. ')
' → logprob: -10.629365921020508

Token 208: ' japonais' (ID: 162300)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2212119698524475
    2. ' japonais' → logprob: -1.7212119102478027
    3. ' j' → logprob: -4.846211910247803
    4. 'J' → logprob: -5.471211910247803
    5. 'Japanese' → logprob: -5.596211910247803
    6. '#' → logprob: -6.721211910247803
    7. 'python' → logprob: -7.596211910247803
    8. 'fr' → logprob: -7.721211910247803
    9. ' Japanese' → logprob: -8.096212387084961
    10. ' japanese' → logprob: -8.221212387084961

Token 209: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14655427634716034
    2. ' )' → logprob: -2.0215542316436768
    3. 's' → logprob: -6.396554470062256
    4. '_' → logprob: -6.646554470062256
    5. '_)' → logprob: -8.146553993225098
    6. ',' → logprob: -8.896553993225098
    7. ']' → logprob: -9.396553993225098
    8. ')_' → logprob: -9.646553993225098
    9. '')' → logprob: -10.646553993225098
    10. ' ]' → logprob: -10.896553993225098

Token 210: ' seulement' (ID: 32072)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.037418950349092484
    2. 're' → logprob: -4.287418842315674
    3. 'rest' → logprob: -4.787418842315674
    4. 'rem' → logprob: -5.162418842315674
    5. ' am' → logprob: -5.912418842315674
    6. 'rema' → logprob: -5.912418842315674
    7. '[' → logprob: -7.662418842315674
    8. 'reste' → logprob: -7.662418842315674
    9. ' remainder' → logprob: -7.912418842315674
    10. 'r' → logprob: -8.037419319152832

Token 211: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.642725944519043
    2. 'for' → logprob: -1.642725944519043
    3. ' des' → logprob: -2.267725944519043
    4. ' for' → logprob: -2.392725944519043
    5. 'des' → logprob: -3.267725944519043
    6. ')' → logprob: -4.142725944519043
    7. '[]' → logprob: -5.142725944519043
    8. '(' → logprob: -5.142725944519043
    9. ']' → logprob: -5.767725944519043
    10. ' (' → logprob: -6.267725944519043

Token 212: ' les' (ID: 1341)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.7080982327461243
    2. 'x' → logprob: -2.5830981731414795
    3. 'number' → logprob: -2.8330981731414795
    4. ' num' → logprob: -2.8330981731414795
    5. 'i' → logprob: -3.3330981731414795
    6. ' number' → logprob: -3.4580981731414795
    7. 'val' → logprob: -3.4580981731414795
    8. 'n' → logprob: -3.5830981731414795
    9. 'input' → logprob: -3.9580981731414795
    10. ' x' → logprob: -4.208098411560059

Token 213: ' nombres' (ID: 76205)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3571354150772095
    2. 'num' → logprob: -1.4821354150772095
    3. 'n' → logprob: -1.6071354150772095
    4. 'i' → logprob: -1.9821354150772095
    5. 'nombre' → logprob: -2.85713529586792
    6. 'number' → logprob: -3.23213529586792
    7. ' ' → logprob: -4.48213529586792
    8. 'input' → logprob: -4.73213529586792
    9. 'élé' → logprob: -4.73213529586792
    10. ' number' → logprob: -5.35713529586792

Token 214: ' non' (ID: 2893)
  Prédit: ' qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -1.113596796989441
    2. 'not' → logprob: -1.863596796989441
    3. 'non' → logprob: -2.1135969161987305
    4. 'qui' → logprob: -2.3635969161987305
    5. '>' → logprob: -2.6135969161987305
    6. '[' → logprob: -3.6135969161987305
    7. ' not' → logprob: -3.8635969161987305
    8. ' non' → logprob: -3.8635969161987305
    9. 'plus' → logprob: -4.3635969161987305
    10. ' ' → logprob: -4.3635969161987305

Token 215: ' multiples' (ID: 70720)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.21429507434368134
    2. ' multiples' → logprob: -1.8392950296401978
    3. ' multip' → logprob: -4.839294910430908
    4. '10' → logprob: -5.339294910430908
    5. ' n' → logprob: -5.464294910430908
    6. 'div' → logprob: -5.464294910430908
    7. '0' → logprob: -6.089294910430908
    8. ' multiple' → logprob: -6.339294910430908
    9. 'n' → logprob: -6.464294910430908
    10. 'multiple' → logprob: -6.589294910430908

Token 216: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.039489757269620895
    2. ' _' → logprob: -3.53948974609375
    3. '[]' → logprob: -6.41448974609375
    4. '[' → logprob: -6.53948974609375
    5. 's' → logprob: -7.16448974609375
    6. '10' → logprob: -7.28948974609375
    7. '_list' → logprob: -7.53948974609375
    8. ')' → logprob: -7.53948974609375
    9. ' ' → logprob: -8.03948974609375
    10. 'a' → logprob: -8.28948974609375

Token 217: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10047581046819687
    2. ' ' → logprob: -2.350475788116455
    3. 'd' → logprob: -8.600476264953613
    4. ' dix' → logprob: -9.475476264953613
    5. ' diez' → logprob: -13.225476264953613
    6. ' ' → logprob: -13.475476264953613
    7. '```' → logprob: -13.975476264953613
    8. '<|end|>' → logprob: -14.100476264953613
    9. 'ten' → logprob: -14.475476264953613
    10. '1' → logprob: -14.600476264953613

Token 218: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00429955730214715
    2. 'd' → logprob: -5.504299640655518
    3. ' ' → logprob: -8.50429916381836
    4. ' dix' → logprob: -11.00429916381836
    5. 'ten' → logprob: -14.25429916381836
    6. '```' → logprob: -15.62929916381836
    7. 'l' → logprob: -15.75429916381836
    8. ' diez' → logprob: -15.75429916381836
    9. '1' → logprob: -16.00429916381836
    10. '１０' → logprob: -16.25429916381836

Token 219: '
' (ID: 198)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.15114237368106842
    2. ' am' → logprob: -2.1511423587799072
    3. '_' → logprob: -5.151142597198486
    4. '_am' → logprob: -5.526142597198486
    5. 'a' → logprob: -6.276142597198486
    6. '[' → logprob: -6.276142597198486
    7. 'rest' → logprob: -6.401142597198486
    8. 'ten' → logprob: -7.151142597198486
    9. '[]' → logprob: -7.276142597198486
    10. '<|end|>' → logprob: -7.526142597198486

Token 220: 'am' (ID: 313)
  Prédit: 'am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.21033059060573578
    2. 're' → logprob: -3.0853304862976074
    3. 'rema' → logprob: -3.0853304862976074
    4. 'rem' → logprob: -3.3353304862976074
    5. 'non' → logprob: -3.9603304862976074
    6. 'r' → logprob: -4.085330486297607
    7. 'a' → logprob: -4.460330486297607
    8. 'rest' → logprob: -5.210330486297607
    9. 'm' → logprob: -6.585330486297607
    10. 'remaining' → logprob: -6.710330486297607

Token 221: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.14429758489131927
    2. 'a' → logprob: -2.0192975997924805
    3. 'ar' → logprob: -6.7692975997924805
    4. '_' → logprob: -7.8942975997924805
    5. '_a' → logprob: -10.39429759979248
    6. 'arii' → logprob: -11.51929759979248
    7. 'ари' → logprob: -11.76929759979248
    8. 'ary' → logprob: -12.14429759979248
    9. 'arri' → logprob: -12.51929759979248
    10. 'arı' → logprob: -12.64429759979248

Token 222: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.10612845420837402
    2. '_' → logprob: -2.981128454208374
    3. '=' → logprob: -3.481128454208374
    4. 's' → logprob: -4.606128692626953
    5. ' =' → logprob: -5.606128692626953
    6. '_non' → logprob: -6.106128692626953
    7. '_s' → logprob: -6.731128692626953
    8. '=[]' → logprob: -6.981128692626953
    9. '_lst' → logprob: -7.606128692626953
    10. '_values' → logprob: -8.231128692626953

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1426984965801239
    2. '=' → logprob: -2.0176985263824463
    3. '=[]' → logprob: -10.892698287963867
    4. '＝' → logprob: -14.017698287963867
    5. ')' → logprob: -14.142698287963867
    6. ' ' → logprob: -14.642698287963867
    7. ']' → logprob: -14.767698287963867
    8. '[' → logprob: -14.892698287963867
    9. ',' → logprob: -14.892698287963867
    10. '[]' → logprob: -15.142698287963867

Token 224: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2523947060108185
    2. ' []' → logprob: -1.502394676208496
    3. '[' → logprob: -7.752394676208496
    4. ' [' → logprob: -10.377394676208496
    5. '[]}' → logprob: -13.127394676208496
    6. ' ' → logprob: -14.127394676208496
    7. '[]
' → logprob: -14.377394676208496
    8. '[]>' → logprob: -14.502394676208496
    9. '[],' → logprob: -15.252394676208496
    10. '[]

' → logprob: -15.627394676208496

Token 225: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011146623641252518
    2. '
' → logprob: -4.511146545410156
    3. ' for' → logprob: -9.386146545410156
    4. 'f' → logprob: -12.511146545410156
    5. '

' → logprob: -12.761146545410156
    6. ' 
' → logprob: -12.886146545410156
    7. '
' → logprob: -13.386146545410156
    8. 'i' → logprob: -13.386146545410156
    9. '#' → logprob: -14.636146545410156
    10. '' → logprob: -15.136146545410156

Token 226: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.45848218582978e-06
    2. ' for' → logprob: -13.62500286102295
    3. 'def' → logprob: -14.12500286102295
    4. '#' → logprob: -15.62500286102295
    5. 'i' → logprob: -16.500001907348633
    6. 'pour' → logprob: -17.000001907348633
    7. 'For' → logprob: -17.375001907348633
    8. 'fo' → logprob: -17.500001907348633
    9. 'while' → logprob: -18.750001907348633
    10. '```' → logprob: -19.000001907348633

Token 227: 'iser' (ID: 7466)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.719133198261261
    2. 'iser' → logprob: -1.0941331386566162
    3. 'er' → logprob: -1.9691331386566162
    4. 'for' → logprob: -4.594133377075195
    5. 'a' → logprob: -4.844133377075195
    6. 'ser' → logprob: -5.469133377075195
    7. '#' → logprob: -5.594133377075195
    8. 'ialize' → logprob: -5.844133377075195
    9. 's' → logprob: -6.094133377075195
    10. 'isation' → logprob: -6.219133377075195

Token 228: ' une' (ID: 2463)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5763567686080933
    2. ' i' → logprob: -0.8263567686080933
    3. ' index' → logprob: -8.576356887817383
    4. 'index' → logprob: -9.576356887817383
    5. ' total' → logprob: -9.826356887817383
    6. '_' → logprob: -10.451356887817383
    7. 'total' → logprob: -10.826356887817383
    8. ' idx' → logprob: -11.076356887817383
    9. ' sum' → logprob: -11.451356887817383
    10. 'sum' → logprob: -11.826356887817383

Token 229: ' variable' (ID: 11076)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2671172618865967
    2. ' i' → logprob: -1.8921172618865967
    3. 'for' → logprob: -3.2671172618865967
    4. '_' → logprob: -4.267117500305176
    5. 'total' → logprob: -4.892117500305176
    6. 'sum' → logprob: -5.142117500305176
    7. 's' → logprob: -5.142117500305176
    8. ' for' → logprob: -5.767117500305176
    9. ' total' → logprob: -6.267117500305176
    10. 'index' → logprob: -6.392117500305176

Token 230: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.40866658091545105
    2. ' sum' → logprob: -1.9086666107177734
    3. 'total' → logprob: -2.2836666107177734
    4. 'sum' → logprob: -3.0336666107177734
    5. ' i' → logprob: -4.033666610717773
    6. 'i' → logprob: -4.783666610717773
    7. ' somme' → logprob: -5.158666610717773
    8. ' result' → logprob: -6.533666610717773
    9. 's' → logprob: -6.658666610717773
    10. ' s' → logprob: -7.408666610717773

Token 231: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.577931821346283
    2. 'total' → logprob: -1.0779318809509277
    3. '_total' → logprob: -3.0779318809509277
    4. '=' → logprob: -3.4529318809509277
    5. ' total' → logprob: -4.077931880950928
    6. ' ' → logprob: -5.702931880950928
    7. '_' → logprob: -8.20293140411377
    8. 'Total' → logprob: -9.45293140411377
    9. ' =
' → logprob: -9.70293140411377
    10. '	total' → logprob: -9.70293140411377

Token 232: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. ' ' → logprob: -21.125024795532227
    4. '=' → logprob: -21.625024795532227
    5. '10' → logprob: -22.000024795532227
    6. '```' → logprob: -22.000024795532227
    7. '`' → logprob: -22.250024795532227
    8. '۰' → logprob: -22.500024795532227
    9. 'int' → logprob: -22.875024795532227
    10. ' ' → logprob: -23.000024795532227

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '10' → logprob: -17.2500057220459
    4. '```' → logprob: -17.6250057220459
    5. 'int' → logprob: -18.1250057220459
    6. '=' → logprob: -18.3750057220459
    7. '100' → logprob: -18.6250057220459
    8. '-' → logprob: -18.7500057220459
    9. 'total' → logprob: -18.8750057220459
    10. 'a' → logprob: -19.2500057220459

Token 234: ';' (ID: 26)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0023567371536046267
    2. ' total' → logprob: -6.12735652923584
    3. '
' → logprob: -9.00235652923584
    4. 't' → logprob: -10.50235652923584
    5. ' =' → logprob: -11.62735652923584
    6. '=' → logprob: -12.00235652923584
    7. ' 
' → logprob: -13.25235652923584
    8. '_total' → logprob: -13.37735652923584
    9. '	total' → logprob: -14.12735652923584
    10. '(total' → logprob: -14.37735652923584

Token 235: ' elle' (ID: 11451)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0010908045805990696
    2. ' total' → logprob: -7.251091003417969
    3. '
' → logprob: -7.876091003417969
    4. 't' → logprob: -15.376091003417969
    5. '	total' → logprob: -15.501091003417969
    6. ' 
' → logprob: -15.626091003417969
    7. '
' → logprob: -15.876091003417969
    8. '0' → logprob: -16.12609100341797
    9. 'Total' → logprob: -16.50109100341797
    10. '_total' → logprob: -16.50109100341797

Token 236: ' serv' (ID: 2096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.433960497379303
    2. '=' → logprob: -1.0589604377746582
    3. ' ' → logprob: -5.433960437774658
    4. '<|end|>' → logprob: -7.808960437774658
    5. 'total' → logprob: -8.558960914611816
    6. ' total' → logprob: -9.683960914611816
    7. '_total' → logprob: -9.933960914611816
    8. '_' → logprob: -10.058960914611816
    9. '.' → logprob: -10.433960914611816
    10. 's' → logprob: -10.683960914611816

Token 237: 'ira' (ID: 2633)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6370943188667297
    2. 'ra' → logprob: -0.8870943188667297
    3. 'r' → logprob: -3.637094259262085
    4. 'er' → logprob: -4.262094497680664
    5. 'ira' → logprob: -4.512094497680664
    6. 'i' → logprob: -5.512094497680664
    7. 'era' → logprob: -7.012094497680664
    8. 'e' → logprob: -7.762094497680664
    9. 'ai' → logprob: -7.762094497680664
    10. 'rai' → logprob: -8.387094497680664

Token 238: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15218444168567657
    2. ' à' → logprob: -2.40218448638916
    3. ' =' → logprob: -3.52718448638916
    4. '=' → logprob: -5.02718448638916
    5. '<|end|>' → logprob: -5.15218448638916
    6. ' to' → logprob: -5.52718448638916
    7. '  ' → logprob: -6.65218448638916
    8. ' au' → logprob: -7.40218448638916
    9. 'total' → logprob: -7.40218448638916
    10. ' a' → logprob: -7.65218448638916

Token 239: ' addition' (ID: 5856)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011492913588881493
    2. 'calcul' → logprob: -5.636492729187012
    3. ' ' → logprob: -5.886492729187012
    4. 'stock' → logprob: -6.136492729187012
    5. 'acc' → logprob: -7.136492729187012
    6. 'sum' → logprob: -7.261492729187012
    7. 'total' → logprob: -7.386492729187012
    8. '<|end|>' → logprob: -8.136492729187012
    9. 's' → logprob: -8.761492729187012
    10. 'comp' → logprob: -9.261492729187012

Token 240: 'ner' (ID: 1247)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0004341261519584805
    2. 'e' → logprob: -8.625433921813965
    3. 'total' → logprob: -9.875433921813965
    4. '=' → logprob: -10.125433921813965
    5. 'ent' → logprob: -10.250433921813965
    6. 'i' → logprob: -10.250433921813965
    7. ' =' → logprob: -11.125433921813965
    8. 'a' → logprob: -11.125433921813965
    9. 'r' → logprob: -11.625433921813965
    10. 'ateur' → logprob: -11.750433921813965

Token 241: ' les' (ID: 1341)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6119049191474915
    2. ' ' → logprob: -1.4869048595428467
    3. ' total' → logprob: -1.6119048595428467
    4. '0' → logprob: -4.361905097961426
    5. '<|end|>' → logprob: -5.236905097961426
    6. '10' → logprob: -5.486905097961426
    7. ')' → logprob: -5.986905097961426
    8. ' )' → logprob: -6.861905097961426
    9. '_total' → logprob: -7.111905097961426
    10. '  ' → logprob: -7.611905097961426

Token 242: ' valeurs' (ID: 73668)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.6910711526870728
    2. 'total' → logprob: -2.441071033477783
    3. ' ' → logprob: -2.566071033477783
    4. 't' → logprob: -2.566071033477783
    5. 'r' → logprob: -2.691071033477783
    6. 'am' → logprob: -2.816071033477783
    7. 's' → logprob: -3.191071033477783
    8. 'numbers' → logprob: -3.191071033477783
    9. 'rounded' → logprob: -3.566071033477783
    10. 'values' → logprob: -3.566071033477783

Token 243: ' après' (ID: 16460)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.05602123588323593
    2. ' total' → logprob: -2.931021213531494
    3. ' ' → logprob: -7.056021213531494
    4. 't' → logprob: -9.306021690368652
    5. '_total' → logprob: -9.556021690368652
    6. ' totale' → logprob: -9.681021690368652
    7. ' ' → logprob: -11.681021690368652
    8. '	total' → logprob: -12.056021690368652
    9. '=' → logprob: -12.306021690368652
    10. ' =' → logprob: -12.306021690368652

Token 244: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.07855813205242157
    2. ' arr' → logprob: -3.2035582065582275
    3. 'round' → logprob: -3.7035582065582275
    4. 'rounded' → logprob: -5.203557968139648
    5. 'l' → logprob: -7.328557968139648
    6. 'r' → logprob: -7.453557968139648
    7. '#' → logprob: -7.703557968139648
    8. ' rounded' → logprob: -7.828557968139648
    9. ' l' → logprob: -7.953557968139648
    10. '10' → logprob: -8.328557968139648

Token 245: 'ondi' (ID: 117409)
  Prédit: 'ondi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.48776209354400635
    2. 'ond' → logprob: -0.9877620935440063
    3. 'ondissement' → logprob: -4.487761974334717
    4. 'ound' → logprob: -6.487761974334717
    5. 'on' → logprob: -8.362762451171875
    6. 'o' → logprob: -8.487762451171875
    7. 'oud' → logprob: -9.112762451171875
    8. 'онд' → logprob: -10.612762451171875
    9. 'ounding' → logprob: -10.737762451171875
    10. 'onde' → logprob: -11.112762451171875

Token 246: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0025245302822440863
    2. '
' → logprob: -6.627524375915527
    3. 't' → logprob: -7.127524375915527
    4. ' total' → logprob: -7.877524375915527
    5. ' 
' → logprob: -12.252524375915527
    6. '
' → logprob: -12.752524375915527
    7. '(total' → logprob: -13.627524375915527
    8. '	total' → logprob: -13.627524375915527
    9. ' ' → logprob: -14.002524375915527
    10. '```' → logprob: -14.127524375915527

Token 247: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.0683535037969705e-05
    2. '
' → logprob: -11.87501049041748
    3. ' total' → logprob: -12.87501049041748
    4. 't' → logprob: -13.87501049041748
    5. '
' → logprob: -17.000011444091797
    6. '	total' → logprob: -17.500011444091797
    7. '```' → logprob: -18.000011444091797
    8. ' 
' → logprob: -18.125011444091797
    9. 'Total' → logprob: -18.250011444091797
    10. 'tot' → logprob: -18.750011444091797

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141801238059998
    2. '=' → logprob: -1.7014180421829224
    3. ' ' → logprob: -12.451417922973633
    4. ' =
' → logprob: -14.951417922973633
    5. ' ' → logprob: -14.951417922973633
    6. ')' → logprob: -16.076417922973633
    7. ' +=' → logprob: -17.576417922973633
    8. '_' → logprob: -17.826417922973633
    9. '＝' → logprob: -17.826417922973633
    10. '.' → logprob: -18.076417922973633

Token 249: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -21.375001907348633
    4. ' ' → logprob: -23.125001907348633
    5. '０' → logprob: -23.625001907348633
    6. '  ' → logprob: -24.000001907348633
    7. '   ' → logprob: -24.125001907348633
    8. ' ' → logprob: -24.250001907348633
    9. '00' → logprob: -24.375001907348633
    10. '٠' → logprob: -24.625001907348633

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۰' → logprob: -19.75
    4. '０' → logprob: -20.625
    5. '00' → logprob: -21.6875
    6. '   ' → logprob: -21.875
    7. '٠' → logprob: -22.1875
    8. '000' → logprob: -22.25
    9. '```' → logprob: -22.375
    10. '০' → logprob: -22.375

Token 251: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05705655366182327
    2. 'for' → logprob: -2.9320566654205322
    3. ' for' → logprob: -6.557056427001953
    4. '
' → logprob: -7.807056427001953
    5. '

' → logprob: -8.432056427001953
    6. '<|end|>' → logprob: -9.682056427001953
    7. '' → logprob: -10.557056427001953
    8. ' 
' → logprob: -11.557056427001953
    9. '\n' → logprob: -11.682056427001953
    10. '

' → logprob: -12.432056427001953

Token 252: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.500108141452074e-05
    2. '
' → logprob: -10.750035285949707
    3. ' for' → logprob: -12.250035285949707
    4. 'f' → logprob: -12.250035285949707
    5. 'i' → logprob: -12.625035285949707
    6. '#' → logprob: -14.875035285949707
    7. 'fo' → logprob: -16.12503433227539
    8. '

' → logprob: -16.62503433227539
    9. '	for' → logprob: -17.00003433227539
    10. 'n' → logprob: -17.12503433227539

Token 253: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7432603272027336e-06
    2. 'def' → logprob: -14.375001907348633
    3. ' for' → logprob: -14.625001907348633
    4. '#' → logprob: -15.500001907348633
    5. '
' → logprob: -16.000001907348633
    6. 'i' → logprob: -16.500001907348633
    7. 'fo' → logprob: -16.625001907348633
    8. 'from' → logprob: -16.875001907348633
    9. 'For' → logprob: -16.875001907348633
    10. 'while' → logprob: -17.375001907348633

Token 254: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.4913856089115143
    2. 'r' → logprob: -1.241385579109192
    3. 'c' → logprob: -2.4913856983184814
    4. 'for' → logprob: -4.866385459899902
    5. 'cl' → logprob: -5.616385459899902
    6. '#' → logprob: -5.866385459899902
    7. 'cles' → logprob: -7.116385459899902
    8. 'l' → logprob: -7.866385459899902
    9. ' for' → logprob: -8.741385459899902
    10. 'g' → logprob: -8.991385459899902

Token 255: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28128620982170105
    2. 'for' → logprob: -1.4062862396240234
    3. ':' → logprob: -10.031286239624023
    4. ' ' → logprob: -10.406286239624023
    5. ' i' → logprob: -10.656286239624023
    6. ' pour' → logprob: -11.656286239624023
    7. ' ' → logprob: -12.156286239624023
    8. 'pour' → logprob: -12.281286239624023
    9. '_for' → logprob: -13.031286239624023
    10. '
' → logprob: -13.031286239624023

Token 256: ' tous' (ID: 10688)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5794210433959961
    2. 'input' → logprob: -0.8294210433959961
    3. 'range' → logprob: -6.204421043395996
    4. ' range' → logprob: -7.079421043395996
    5. 'i' → logprob: -8.579421043395996
    6. ' i' → logprob: -8.954421043395996
    7. 'num' → logprob: -9.329421043395996
    8. 'number' → logprob: -9.954421043395996
    9. ' number' → logprob: -10.204421043395996
    10. ' num' → logprob: -10.704421043395996

Token 257: ' les' (ID: 1341)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.34631115198135376
    2. ' number' → logprob: -2.471311092376709
    3. ' i' → logprob: -2.721311092376709
    4. ' num' → logprob: -2.971311092376709
    5. 'input' → logprob: -3.471311092376709
    6. ' x' → logprob: -4.096311092376709
    7. ' value' → logprob: -4.846311092376709
    8. ' val' → logprob: -5.221311092376709
    9. ' n' → logprob: -5.346311092376709
    10. ' ' → logprob: -5.596311092376709

Token 258: ' nombres' (ID: 76205)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.2469511032104492
    2. ' nombres' → logprob: -1.3719511032104492
    3. 'input' → logprob: -1.9969511032104492
    4. 'numbers' → logprob: -2.121951103210449
    5. 'nombre' → logprob: -3.121951103210449
    6. 'n' → logprob: -3.246951103210449
    7. 'number' → logprob: -3.496951103210449
    8. ' numbers' → logprob: -3.621951103210449
    9. 'i' → logprob: -3.996951103210449
    10. ' input' → logprob: -4.621951103210449

Token 259: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5934411287307739
    2. 'for' → logprob: -0.9684411287307739
    3. ' i' → logprob: -3.7184410095214844
    4. ' in' → logprob: -4.093441009521484
    5. 'in' → logprob: -4.468441009521484
    6. 'i' → logprob: -5.718441009521484
    7. ' ' → logprob: -6.093441009521484
    8. ' dans' → logprob: -6.093441009521484
    9. ':' → logprob: -6.843441009521484
    10. 'pour' → logprob: -7.093441009521484

Token 260: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.038111720234155655
    2. ' input' → logprob: -3.288111686706543
    3. 'range' → logprob: -9.663111686706543
    4. ' range' → logprob: -12.413111686706543
    5. '(input' → logprob: -14.788111686706543
    6. 'the' → logprob: -14.788111686706543
    7. 'ten' → logprob: -14.788111686706543
    8. 'l' → logprob: -15.413111686706543
    9. '	input' → logprob: -15.663111686706543
    10. ' la' → logprob: -15.788111686706543

Token 261: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0008128436165861785
    2. '_' → logprob: -7.250813007354736
    3. '_l' → logprob: -9.375812530517578
    4. 'list' → logprob: -11.750812530517578
    5. ' _' → logprob: -12.375812530517578
    6. '_li' → logprob: -13.875812530517578
    7. '_for' → logprob: -14.375812530517578
    8. 's' → logprob: -14.625812530517578
    9. 'for' → logprob: -14.750812530517578
    10. '_lists' → logprob: -14.875812530517578

Token 262: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004982246900908649
    2. ' for' → logprob: -8.250497817993164
    3. ':' → logprob: -8.625497817993164
    4. '
' → logprob: -10.250497817993164
    5. ':
' → logprob: -11.250497817993164
    6. 'f' → logprob: -11.875497817993164
    7. 'i' → logprob: -14.625497817993164
    8. ',' → logprob: -15.125497817993164
    9. ' 
' → logprob: -15.250497817993164
    10. '```' → logprob: -15.375497817993164

Token 263: ' appliquer' (ID: 172872)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.6552711725234985
    2. ' input' → logprob: -1.9052711725234985
    3. ' num' → logprob: -1.9052711725234985
    4. 'number' → logprob: -3.155271053314209
    5. 'num' → logprob: -3.280271053314209
    6. ' i' → logprob: -3.280271053314209
    7. ' n' → logprob: -3.530271053314209
    8. 'input' → logprob: -4.530271053314209
    9. 'n' → logprob: -4.905271053314209
    10. ' nombre' → logprob: -5.280271053314209

Token 264: ' le' (ID: 505)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0476397275924683
    2. 'num' → logprob: -2.172639846801758
    3. 'range' → logprob: -2.422639846801758
    4. ' la' → logprob: -2.547639846801758
    5. 'input' → logprob: -2.547639846801758
    6. ' range' → logprob: -2.547639846801758
    7. ' num' → logprob: -3.172639846801758
    8. ' number' → logprob: -3.547639846801758
    9. 'number' → logprob: -4.047639846801758
    10. 'n' → logprob: -4.047639846801758

Token 265: ' traitement' (ID: 42434)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.14737069606781
    2. ' range' → logprob: -1.77237069606781
    3. 'for' → logprob: -2.1473708152770996
    4. 'range' → logprob: -2.2723708152770996
    5. 'n' → logprob: -2.7723708152770996
    6. 'num' → logprob: -3.6473708152770996
    7. 'i' → logprob: -3.7723708152770996
    8. ' in' → logprob: -3.8973708152770996
    9. ' input' → logprob: -4.0223708152771
    10. ' num' → logprob: -4.1473708152771

Token 266: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11496930569410324
    2. ':' → logprob: -2.864969253540039
    3. ' for' → logprob: -3.114969253540039
    4. ':
' → logprob: -4.989969253540039
    5. '
' → logprob: -8.364969253540039
    6. ' :
' → logprob: -9.489969253540039
    7. ' :' → logprob: -10.114969253540039
    8. ' 
' → logprob: -10.739969253540039
    9. 'i' → logprob: -11.239969253540039
    10. 'n' → logprob: -11.364969253540039

Token 267: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4140441635390744e-05
    2. ' for' → logprob: -11.250014305114746
    3. '
' → logprob: -13.750014305114746
    4. 'f' → logprob: -17.62501335144043
    5. 'fo' → logprob: -18.62501335144043
    6. 'i' → logprob: -19.25001335144043
    7. '

' → logprob: -19.75001335144043
    8. '```' → logprob: -20.25001335144043
    9. ')' → logprob: -20.37501335144043
    10. ':' → logprob: -20.50001335144043

Token 268: ' i' (ID: 575)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.9006262421607971
    2. ' number' → logprob: -1.0256261825561523
    3. 'num' → logprob: -1.6506261825561523
    4. 'number' → logprob: -3.4006261825561523
    5. ' n' → logprob: -6.150626182556152
    6. 'n' → logprob: -6.150626182556152
    7. ' x' → logprob: -6.400626182556152
    8. 'x' → logprob: -6.650626182556152
    9. ' i' → logprob: -7.025626182556152
    10. ' nombre' → logprob: -7.650626182556152

Token 269: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08956670016050339
    2. 'in' → logprob: -2.464566707611084
    3. ' ' → logprob: -7.714566707611084
    4. 'n' → logprob: -9.214566230773926
    5. '  ' → logprob: -10.589566230773926
    6. 's' → logprob: -11.339566230773926
    7. ',' → logprob: -11.964566230773926
    8. '	in' → logprob: -11.964566230773926
    9. ' i' → logprob: -12.089566230773926
    10. ' ' → logprob: -12.339566230773926

Token 270: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.43033432960510254
    2. 'input' → logprob: -1.1803343296051025
    3. ' range' → logprob: -3.5553343296051025
    4. 'range' → logprob: -4.305334091186523
    5. 'in' → logprob: -8.430334091186523
    6. ' ' → logprob: -9.430334091186523
    7. ' in' → logprob: -9.930334091186523
    8. '(input' → logprob: -10.430334091186523
    9. 'put' → logprob: -11.055334091186523
    10. '[input' → logprob: -11.055334091186523

Token 271: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00010306637705070898
    2. '_' → logprob: -9.250102996826172
    3. '_l' → logprob: -13.375102996826172
    4. ')_' → logprob: -13.500102996826172
    5. 's' → logprob: -14.000102996826172
    6. '_lst' → logprob: -14.000102996826172
    7. '_lists' → logprob: -14.500102996826172
    8. 'list' → logprob: -14.750102996826172
    9. '_lista' → logprob: -14.750102996826172
    10. '_li' → logprob: -15.125102996826172

Token 272: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00037251986213959754
    2. ' :' → logprob: -8.125372886657715
    3. ':
' → logprob: -9.500372886657715
    4. '):' → logprob: -14.750372886657715
    5. ' :
' → logprob: -15.375372886657715
    6. '=' → logprob: -15.375372886657715
    7. ':

' → logprob: -15.875372886657715
    8. ':int' → logprob: -15.875372886657715
    9. ':**' → logprob: -16.2503719329834
    10. ',' → logprob: -16.5003719329834

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022512368857860565
    2. '
' → logprob: -5.272512435913086
    3. '    
' → logprob: -5.397512435913086
    4. ' 
' → logprob: -5.397512435913086
    5. '<|end|>' → logprob: -6.022512435913086
    6. ' if' → logprob: -6.647512435913086
    7. ' ' → logprob: -6.647512435913086
    8. ' am' → logprob: -6.897512435913086
    9. '    ' → logprob: -7.897512435913086
    10. ''s' → logprob: -8.022512435913086

Token 274: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5579156279563904
    2. ' if' → logprob: -1.0579156875610352
    3. ' am' → logprob: -2.932915687561035
    4. 'if' → logprob: -5.057915687561035
    5. '    
' → logprob: -5.307915687561035
    6. ' remainder' → logprob: -5.432915687561035
    7. 'am' → logprob: -5.557915687561035
    8. ' 
' → logprob: -6.057915687561035
    9. ' r' → logprob: -6.432915687561035
    10. '    ' → logprob: -7.307915687561035

Token 275: ' Calcul' (ID: 57243)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8371865153312683
    2. 'am' → logprob: -1.462186574935913
    3. ' if' → logprob: -1.587186574935913
    4. '   ' → logprob: -3.087186574935913
    5. ' am' → logprob: -3.087186574935913
    6. 're' → logprob: -3.837186574935913
    7. ' remainder' → logprob: -4.962186336517334
    8. 'rem' → logprob: -5.837186336517334
    9. 'mod' → logprob: -6.212186336517334
    10. 'r' → logprob: -6.337186336517334

Token 276: 'er' (ID: 259)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25768575072288513
    2. '=' → logprob: -2.382685661315918
    3. '   ' → logprob: -2.757685661315918
    4. ' am' → logprob: -3.507685661315918
    5. 'am' → logprob: -4.507685661315918
    6. 'r' → logprob: -4.757685661315918
    7. ' remainder' → logprob: -5.882685661315918
    8. '_am' → logprob: -6.132685661315918
    9. ' r' → logprob: -6.257685661315918
    10. '_' → logprob: -6.382685661315918

Token 277: ' le' (ID: 505)
  Prédit: ' am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' am' → logprob: -0.38156387209892273
    2. 'am' → logprob: -1.2565639019012451
    3. ' remainder' → logprob: -4.756563663482666
    4. ' r' → logprob: -4.881563663482666
    5. '   ' → logprob: -5.256563663482666
    6. 'r' → logprob: -5.756563663482666
    7. ' l' → logprob: -7.131563663482666
    8. ' i' → logprob: -7.256563663482666
    9. 'reste' → logprob: -7.256563663482666
    10. ' le' → logprob: -7.381563663482666

Token 278: ' reste' (ID: 26769)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.02707553468644619
    2. ' am' → logprob: -4.65207576751709
    3. 're' → logprob: -5.15207576751709
    4. 'reste' → logprob: -5.27707576751709
    5. 'mod' → logprob: -5.90207576751709
    6. 'rest' → logprob: -6.27707576751709
    7. 'r' → logprob: -7.65207576751709
    8. ' remainder' → logprob: -8.27707576751709
    9. 'rem' → logprob: -8.40207576751709
    10. ' reste' → logprob: -8.40207576751709

Token 279: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5952710509300232
    2. '   ' → logprob: -1.470271110534668
    3. ' de' → logprob: -2.220271110534668
    4. '=' → logprob: -3.345271110534668
    5. ' i' → logprob: -3.720271110534668
    6. '    ' → logprob: -4.470271110534668
    7. 'de' → logprob: -4.595271110534668
    8. ' ' → logprob: -4.845271110534668
    9. '10' → logprob: -4.845271110534668
    10. '=i' → logprob: -5.845271110534668

Token 280: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10008026659488678
    2. 'i' → logprob: -2.4750802516937256
    3. ' la' → logprob: -4.600080490112305
    4. ' ' → logprob: -7.475080490112305
    5. '10' → logprob: -8.600080490112305
    6. 'division' → logprob: -9.475080490112305
    7. 'div' → logprob: -9.850080490112305
    8. 'la' → logprob: -10.475080490112305
    9. ' division' → logprob: -10.725080490112305
    10. '(i' → logprob: -10.850080490112305

Token 281: ' division' (ID: 21629)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3278813660144806
    2. 'i' → logprob: -1.3278813362121582
    3. ' division' → logprob: -4.952881336212158
    4. 'division' → logprob: -5.202881336212158
    5. 'div' → logprob: -6.452881336212158
    6. '10' → logprob: -8.702881813049316
    7. ' ' → logprob: -9.077881813049316
    8. ' div' → logprob: -10.077881813049316
    9. 'd' → logprob: -11.702881813049316
    10. '   ' → logprob: -11.827881813049316

Token 282: ' du' (ID: 1462)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10809352993965149
    2. ' par' → logprob: -2.608093500137329
    3. 'par' → logprob: -4.608093738555908
    4. '   ' → logprob: -5.233093738555908
    5. 'i' → logprob: -5.358093738555908
    6. ' ' → logprob: -5.983093738555908
    7. '10' → logprob: -6.108093738555908
    8. ' de' → logprob: -6.358093738555908
    9. '(i' → logprob: -7.608093738555908
    10. '	i' → logprob: -8.10809326171875

Token 283: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25197088718414307
    2. ' i' → logprob: -1.501970887184143
    3. ' ' → logprob: -10.501971244812012
    4. '10' → logprob: -12.126971244812012
    5. '	i' → logprob: -12.251971244812012
    6. '   ' → logprob: -13.126971244812012
    7. 'a' → logprob: -14.251971244812012
    8. ' a' → logprob: -15.751971244812012
    9. '  ' → logprob: -16.001970291137695
    10. 'nombre' → logprob: -16.126970291137695

Token 284: ' par' (ID: 686)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0769638940691948
    2. ' par' → logprob: -2.9519639015197754
    3. 'i' → logprob: -4.326963901519775
    4. 'par' → logprob: -4.826963901519775
    5. ' ' → logprob: -8.326963424682617
    6. '   ' → logprob: -9.326963424682617
    7. ' am' → logprob: -9.451963424682617
    8. '%' → logprob: -9.826963424682617
    9. 'am' → logprob: -10.326963424682617
    10. '10' → logprob: -10.326963424682617

Token 285: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5760329961776733
    2. ' ' → logprob: -0.8260329961776733
    3. 'd' → logprob: -9.951032638549805
    4. ' ' → logprob: -10.201032638549805
    5. ' dix' → logprob: -11.826032638549805
    6. ' i' → logprob: -15.326032638549805
    7. '<|end|>' → logprob: -15.451032638549805
    8. ' diez' → logprob: -15.701032638549805
    9. '1' → logprob: -15.951032638549805
    10. '```' → logprob: -16.576032638549805

Token 286: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00018161057960242033
    2. ' ' → logprob: -8.625181198120117
    3. 'd' → logprob: -13.500181198120117
    4. '```' → logprob: -15.875181198120117
    5. '   ' → logprob: -16.125181198120117
    6. ' ' → logprob: -16.250181198120117
    7. 'i' → logprob: -16.625181198120117
    8. '  ' → logprob: -17.125181198120117
    9. ' dix' → logprob: -17.625181198120117
    10. '`' → logprob: -18.000181198120117

Token 287: '
' (ID: 198)
  Prédit: ' am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' am' → logprob: -0.3131089210510254
    2. '   ' → logprob: -1.6881089210510254
    3. 'am' → logprob: -3.0631089210510254
    4. ' =' → logprob: -4.188108921051025
    5. ',' → logprob: -4.438108921051025
    6. ':' → logprob: -5.813108921051025
    7. '=' → logprob: -5.938108921051025
    8. ' ' → logprob: -6.813108921051025
    9. ' :' → logprob: -7.438108921051025
    10. ' ,' → logprob: -7.563108921051025

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24787113070487976
    2. ' am' → logprob: -1.6228711605072021
    3. 'am' → logprob: -3.997871160507202
    4. ',' → logprob: -6.497870922088623
    5. ' =' → logprob: -6.997870922088623
    6. '=' → logprob: -7.997870922088623
    7. ':' → logprob: -8.247871398925781
    8. ' ' → logprob: -8.497871398925781
    9. '    ' → logprob: -8.872871398925781
    10. '    
' → logprob: -9.247871398925781

Token 289: ' #' (ID: 1069)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.6565161943435669
    2. ' am' → logprob: -0.7815161943435669
    3. '   ' → logprob: -4.281516075134277
    4. 're' → logprob: -5.656516075134277
    5. ' remainder' → logprob: -6.281516075134277
    6. 'rem' → logprob: -7.156516075134277
    7. 'r' → logprob: -7.156516075134277
    8. ' r' → logprob: -7.281516075134277
    9. 'rest' → logprob: -7.281516075134277
    10. '10' → logprob: -7.906516075134277

Token 290: ' Ceci' (ID: 144699)
  Prédit: ' am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' am' → logprob: -0.14283637702465057
    2. 'am' → logprob: -2.517836332321167
    3. '   ' → logprob: -3.017836332321167
    4. ' remainder' → logprob: -6.892836570739746
    5. 're' → logprob: -7.767836570739746
    6. ' r' → logprob: -8.142836570739746
    7. ' rest' → logprob: -8.142836570739746
    8. '    ' → logprob: -8.142836570739746
    9. ' ' → logprob: -8.642836570739746
    10. '10' → logprob: -8.767836570739746

Token 291: ' donne' (ID: 30004)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49873629212379456
    2. ' am' → logprob: -1.7487362623214722
    3. '   ' → logprob: -2.1237363815307617
    4. 'am' → logprob: -2.9987363815307617
    5. '=' → logprob: -4.373736381530762
    6. '_am' → logprob: -4.748736381530762
    7. '_' → logprob: -5.248736381530762
    8. ' is' → logprob: -5.373736381530762
    9. ' ' → logprob: -6.123736381530762
    10. ' est' → logprob: -6.248736381530762

Token 292: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.830674946308136
    2. 'am' → logprob: -1.7056748867034912
    3. ' am' → logprob: -1.7056748867034912
    4. 'i' → logprob: -1.9556748867034912
    5. ' r' → logprob: -3.580674886703491
    6. 'r' → logprob: -4.33067512512207
    7. ' le' → logprob: -5.83067512512207
    8. ' rem' → logprob: -5.95567512512207
    9. 'rem' → logprob: -6.20567512512207
    10. ' remainder' → logprob: -6.45567512512207

Token 293: ' partie' (ID: 22139)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.11193110048770905
    2. ' am' → logprob: -3.361931085586548
    3. 'r' → logprob: -3.486931085586548
    4. 're' → logprob: -4.361931324005127
    5. 'rem' → logprob: -4.736931324005127
    6. 'reste' → logprob: -5.611931324005127
    7. ' remainder' → logprob: -5.611931324005127
    8. 'i' → logprob: -5.736931324005127
    9. ' r' → logprob: -5.736931324005127
    10. 'rest' → logprob: -6.361931324005127

Token 294: ' "' (ID: 392)
  Prédit: ' am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' am' → logprob: -0.29750385880470276
    2. 'am' → logprob: -1.4225038290023804
    3. ' i' → logprob: -5.04750394821167
    4. 'i' → logprob: -5.79750394821167
    5. 'rest' → logprob: -6.67250394821167
    6. '_am' → logprob: -6.67250394821167
    7. ' ' → logprob: -6.92250394821167
    8. '10' → logprob: -7.54750394821167
    9. 'mod' → logprob: -8.047503471374512
    10. '   ' → logprob: -8.047503471374512

Token 295: 'un' (ID: 373)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.6988987922668457
    2. 'i' → logprob: -0.9488987922668457
    3. ' am' → logprob: -2.4488987922668457
    4. ' i' → logprob: -3.5738987922668457
    5. 'mod' → logprob: -8.323898315429688
    6. '10' → logprob: -8.448898315429688
    7. '```' → logprob: -8.948898315429688
    8. ' ' → logprob: -9.198898315429688
    9. 'reste' → logprob: -9.198898315429688
    10. 'r' → logprob: -9.198898315429688

Token 296: 'ité' (ID: 3761)
  Prédit: 'itaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itaire' → logprob: -1.0060327053070068
    2. 'i' → logprob: -1.5060327053070068
    3. 'ité' → logprob: -1.5060327053070068
    4. 'it' → logprob: -2.006032705307007
    5. 'ités' → logprob: -3.506032705307007
    6. 'its' → logprob: -4.006032943725586
    7. 'ite' → logprob: -6.006032943725586
    8. 'itaires' → logprob: -6.756032943725586
    9. 'ità' → logprob: -7.381032943725586
    10. 'digit' → logprob: -8.006032943725586

Token 297: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10759031772613525
    2. '   ' → logprob: -3.1075901985168457
    3. ' i' → logprob: -3.8575901985168457
    4. 's' → logprob: -4.232590198516846
    5. ' "' → logprob: -4.482590198516846
    6. ' =' → logprob: -6.357590198516846
    7. ' ' → logprob: -6.357590198516846
    8. 'i' → logprob: -6.357590198516846
    9. '  ' → logprob: -7.107590198516846
    10. '(i' → logprob: -7.232590198516846

Token 298: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7031376957893372
    2. 'am' → logprob: -1.2031376361846924
    3. ' am' → logprob: -1.7031376361846924
    4. ',' → logprob: -4.5781378746032715
    5. ' =' → logprob: -5.2031378746032715
    6. '=' → logprob: -6.5781378746032715
    7. ' ' → logprob: -6.9531378746032715
    8. ':' → logprob: -6.9531378746032715
    9. 'a' → logprob: -7.7031378746032715
    10. '_am' → logprob: -8.203137397766113

Token 299: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08144712448120117
    2. ' i' → logprob: -2.706447124481201
    3. 'nombre' → logprob: -4.706447124481201
    4. ' nombre' → logprob: -6.081447124481201
    5. ' ' → logprob: -9.95644760131836
    6. 'number' → logprob: -10.70644760131836
    7. 'n' → logprob: -11.20644760131836
    8. ' number' → logprob: -11.45644760131836
    9. '   ' → logprob: -11.83144760131836
    10. 'num' → logprob: -12.08144760131836

Token 300: ' (' (ID: 350)
  Prédit: ' am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' am' → logprob: -0.8612440824508667
    2. 'am' → logprob: -0.9862440824508667
    3. '   ' → logprob: -1.7362440824508667
    4. ',' → logprob: -4.486244201660156
    5. ' =' → logprob: -4.736244201660156
    6. '=' → logprob: -5.361244201660156
    7. ' ' → logprob: -7.861244201660156
    8. '    
' → logprob: -7.861244201660156
    9. ' ,' → logprob: -8.236244201660156
    10. 'a' → logprob: -8.236244201660156

Token 301: 'ex' (ID: 490)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.666568398475647
    2. ' am' → logprob: -1.791568398475647
    3. 'i' → logprob: -2.2915682792663574
    4. 'am' → logprob: -2.5415682792663574
    5. '   ' → logprob: -2.9165682792663574
    6. ')' → logprob: -2.9165682792663574
    7. ' )' → logprob: -4.416568279266357
    8. ' ' → logprob: -5.791568279266357
    9. 'unit' → logprob: -6.291568279266357
    10. ' remainder' → logprob: -6.416568279266357

Token 302: ':' (ID: 25)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4614916443824768
    2. ' i' → logprob: -2.211491584777832
    3. '   ' → logprob: -2.836491584777832
    4. '=' → logprob: -2.961491584777832
    5. 'emple' → logprob: -3.461491584777832
    6. ')' → logprob: -3.836491584777832
    7. 'am' → logprob: -4.336491584777832
    8. 'empl' → logprob: -4.711491584777832
    9. ':' → logprob: -4.711491584777832
    10. ' =' → logprob: -5.086491584777832

Token 303: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7059845924377441
    2. ' i' → logprob: -0.7059845924377441
    3. 'am' → logprob: -5.080984592437744
    4. ' am' → logprob: -5.580984592437744
    5. ' ' → logprob: -6.955984592437744
    6. '   ' → logprob: -7.580984592437744
    7. '10' → logprob: -8.205984115600586
    8. 'r' → logprob: -8.580984115600586
    9. ' r' → logprob: -8.830984115600586
    10. ')' → logprob: -9.080984115600586

Token 304: '23' (ID: 1860)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0407857671380043
    2. 'am' → logprob: -3.415785789489746
    3. ' i' → logprob: -5.540785789489746
    4. 'r' → logprob: -7.040785789489746
    5. 'rem' → logprob: -7.665785789489746
    6. 'unit' → logprob: -7.790785789489746
    7. 're' → logprob: -7.915785789489746
    8. '10' → logprob: -8.290785789489746
    9. 'rest' → logprob: -8.915785789489746
    10. ' am' → logprob: -9.040785789489746

Token 305: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.14565476775169373
    2. ')' → logprob: -2.3956546783447266
    3. ' )' → logprob: -3.7706546783447266
    4. '%' → logprob: -4.020654678344727
    5. '   ' → logprob: -6.020654678344727
    6. ' ' → logprob: -7.770654678344727
    7. ')%' → logprob: -8.395654678344727
    8. ' %)' → logprob: -9.020654678344727
    9. '%i' → logprob: -10.395654678344727
    10. ' )
' → logprob: -10.520654678344727

Token 306: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06197485327720642
    2. ' ' → logprob: -2.8119747638702393
    3. ')' → logprob: -12.56197452545166
    4. ' ' → logprob: -13.31197452545166
    5. 'd' → logprob: -14.43697452545166
    6. '```' → logprob: -15.18697452545166
    7. ',' → logprob: -15.31197452545166
    8. '  ' → logprob: -15.43697452545166
    9. '   ' → logprob: -15.93697452545166
    10. ' )' → logprob: -16.374475479125977

Token 307: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00018029935017693788
    2. ' ' → logprob: -8.6251802444458
    3. ')' → logprob: -14.8751802444458
    4. '```' → logprob: -16.000181198120117
    5. '  ' → logprob: -17.000181198120117
    6. '1' → logprob: -17.000181198120117
    7. '`' → logprob: -17.812681198120117
    8. 'd' → logprob: -18.125181198120117
    9. '<|end|>' → logprob: -18.312681198120117
    10. '100' → logprob: -18.437681198120117

Token 308: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008444956503808498
    2. ' )' → logprob: -5.133444786071777
    3. '   ' → logprob: -6.508444786071777
    4. ')
' → logprob: -7.133444786071777
    5. '")' → logprob: -10.258444786071777
    6. ' )
' → logprob: -10.383444786071777
    7. ')`' → logprob: -10.633444786071777
    8. '))' → logprob: -10.758444786071777
    9. ' ' → logprob: -11.008444786071777
    10. ')
' → logprob: -11.508444786071777

Token 309: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06196993216872215
    2. ' ' → logprob: -2.8119699954986572
    3. ')' → logprob: -13.436969757080078
    4. ' ' → logprob: -15.374469757080078
    5. '```' → logprob: -16.186969757080078
    6. '' → logprob: -16.686969757080078
    7. '۳' → logprob: -16.811969757080078
    8. '³' → logprob: -16.936969757080078
    9. '​' → logprob: -16.936969757080078
    10. '`' → logprob: -17.499469757080078

Token 310: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. ')' → logprob: -16.250123977661133
    4. '```' → logprob: -16.375123977661133
    5. '³' → logprob: -17.500123977661133
    6. '' → logprob: -17.625123977661133
    7. '۳' → logprob: -17.875123977661133
    8. '３' → logprob: -18.312623977661133
    9. '33' → logprob: -18.437623977661133
    10. '`' → logprob: -18.500123977661133

Token 311: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021635590121150017
    2. '   ' → logprob: -4.27163553237915
    3. ' )' → logprob: -5.27163553237915
    4. ')
' → logprob: -6.27163553237915
    5. ')
' → logprob: -8.521636009216309
    6. ' )
' → logprob: -9.396636009216309
    7. '")' → logprob: -10.396636009216309
    8. ' ' → logprob: -10.521636009216309
    9. ' ' → logprob: -11.646636009216309
    10. '	' → logprob: -11.771636009216309

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3496988117694855
    2. ' am' → logprob: -1.474698781967163
    3. 'am' → logprob: -2.849698781967163
    4. '    
' → logprob: -5.849699020385742
    5. '    ' → logprob: -6.349699020385742
    6. ' ' → logprob: -7.662199020385742
    7. ',' → logprob: -7.974699020385742
    8. 'a' → logprob: -8.099699020385742
    9. '  ' → logprob: -8.224699020385742
    10. ' 
' → logprob: -8.474699020385742

Token 313: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' (adapté à ' am') → logprob: -0.7932702898979187
    2. ' am' → logprob: -0.7932702898979187
    3. '   ' → logprob: -2.4182703495025635
    4. ' ' → logprob: -6.918270111083984
    5. ' remainder' → logprob: -6.918270111083984
    6. 'a' → logprob: -7.168270111083984
    7. 'rem' → logprob: -7.668270111083984
    8. 're' → logprob: -7.730770111083984
    9. ' a' → logprob: -8.168270111083984
    10. ' rem' → logprob: -8.293270111083984

Token 314: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.004697357304394245
    2. 'a' → logprob: -5.504697322845459
    3. ' ari' → logprob: -8.379697799682617
    4. 'i' → logprob: -9.129697799682617
    5. ' =' → logprob: -9.379697799682617
    6. '   ' → logprob: -9.504697799682617
    7. 'ar' → logprob: -9.879697799682617
    8. ' ' → logprob: -11.379697799682617
    9. '=' → logprob: -11.504697799682617
    10. '_' → logprob: -12.004697799682617

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28127577900886536
    2. '=' → logprob: -1.406275749206543
    3. '_' → logprob: -9.281275749206543
    4. 's' → logprob: -11.406275749206543
    5. '=i' → logprob: -12.156275749206543
    6. '   ' → logprob: -12.781275749206543
    7. ' ' → logprob: -12.906275749206543
    8. ',' → logprob: -13.406275749206543
    9. '_=' → logprob: -13.406275749206543
    10. ' ' → logprob: -13.531275749206543

Token 316: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008626040071249008
    2. 'i' → logprob: -4.7586259841918945
    3. ' ' → logprob: -11.883625984191895
    4. ' ' → logprob: -13.008625984191895
    5. '10' → logprob: -13.758625984191895
    6. '	i' → logprob: -13.883625984191895
    7. '   ' → logprob: -15.383625984191895
    8. '  ' → logprob: -16.63362693786621
    9. '(i' → logprob: -17.75862693786621
    10. ' (' → logprob: -18.25862693786621

Token 317: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.011088619939982891
    2. '%' → logprob: -4.511088848114014
    3. ' ' → logprob: -10.136088371276855
    4. ' ' → logprob: -14.511088371276855
    5. ' %
' → logprob: -14.886088371276855
    6. '   ' → logprob: -15.886088371276855
    7. '10' → logprob: -16.011089324951172
    8. ')' → logprob: -17.136089324951172
    9. '  ' → logprob: -17.886089324951172
    10. '%i' → logprob: -18.011089324951172

Token 318: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '```' → logprob: -18.251171112060547
    4. '1' → logprob: -19.001171112060547
    5. '`' → logprob: -19.626171112060547
    6. '۱۰' → logprob: -19.751171112060547
    7. ' ' → logprob: -20.126171112060547
    8. '100' → logprob: -20.251171112060547
    9. '   ' → logprob: -20.626171112060547
    10. '  ' → logprob: -20.876171112060547

Token 319: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -18.75
    4. '۱۰' → logprob: -19.5
    5. '१०' → logprob: -20.25
    6. '1' → logprob: -20.5
    7. '１０' → logprob: -20.625
    8. '`' → logprob: -20.875
    9. 'd' → logprob: -21.0
    10. '১০' → logprob: -21.25

Token 320: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4068567156791687
    2. '
' → logprob: -1.1568567752838135
    3. '    
' → logprob: -4.406856536865234
    4. '<|end|>' → logprob: -5.906856536865234
    5. '  
' → logprob: -6.031856536865234
    6. ' if' → logprob: -6.656856536865234
    7. ' 
' → logprob: -8.031856536865234
    8. '   
' → logprob: -8.406856536865234
    9. 'if' → logprob: -8.531856536865234
    10. '
' → logprob: -9.031856536865234

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045443374663591385
    2. '    
' → logprob: -3.795443296432495
    3. '
' → logprob: -5.045443534851074
    4. ' if' → logprob: -5.295443534851074
    5. '<|end|>' → logprob: -5.670443534851074
    6. 'if' → logprob: -6.170443534851074
    7. '  
' → logprob: -6.545443534851074
    8. ' 
' → logprob: -6.795443534851074
    9. '   
' → logprob: -7.170443534851074
    10. ' ' → logprob: -7.295443534851074

Token 322: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11341273784637451
    2. 'if' → logprob: -2.488412857055664
    3. ' if' → logprob: -4.238412857055664
    4. '    
' → logprob: -4.988412857055664
    5. ' ' → logprob: -7.238412857055664
    6. ' 
' → logprob: -7.363412857055664
    7. '  ' → logprob: -7.738412857055664
    8. '    ' → logprob: -8.238412857055664
    9. '  
' → logprob: -8.363412857055664
    10. '
' → logprob: -8.488412857055664

Token 323: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.043234288692474365
    2. ' if' → logprob: -3.418234348297119
    3. '   ' → logprob: -4.668234348297119
    4. '#' → logprob: -9.293233871459961
    5. 'If' → logprob: -11.043233871459961
    6. ' ' → logprob: -11.543233871459961
    7. '  ' → logprob: -11.668233871459961
    8. '    
' → logprob: -12.168233871459961
    9. ' #' → logprob: -12.168233871459961
    10. '	if' → logprob: -12.293233871459961

Token 324: ' ce' (ID: 2357)
  Prédit: ' am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' am' → logprob: -0.02640363946557045
    2. 'am' → logprob: -3.6514036655426025
    3. ' ' → logprob: -9.651403427124023
    4. '   ' → logprob: -11.901403427124023
    5. '  ' → logprob: -11.901403427124023
    6. '(am' → logprob: -12.526403427124023
    7. ' ' → logprob: -12.651403427124023
    8. ' not' → logprob: -12.901403427124023
    9. ' i' → logprob: -12.901403427124023
    10. 'a' → logprob: -13.151403427124023

Token 325: ' reste' (ID: 26769)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0077136969193816185
    2. ' am' → logprob: -4.882713794708252
    3. 'n' → logprob: -9.882713317871094
    4. 'm' → logprob: -10.632713317871094
    5. 'a' → logprob: -11.882713317871094
    6. '_am' → logprob: -12.882713317871094
    7. ''am' → logprob: -13.007713317871094
    8. ' n' → logprob: -13.132713317871094
    9. 's' → logprob: -13.257713317871094
    10. '(am' → logprob: -13.382713317871094

Token 326: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.53926682472229
    2. '!=' → logprob: -1.16426682472229
    3. ' ==' → logprob: -3.03926682472229
    4. '==' → logprob: -3.41426682472229
    5. '>' → logprob: -4.289266586303711
    6. ' >' → logprob: -4.789266586303711
    7. ':' → logprob: -6.664266586303711
    8. '=' → logprob: -8.664266586303711
    9. ' ' → logprob: -8.914266586303711
    10. '!' → logprob: -9.414266586303711

Token 327: ' égal' (ID: 15059)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17662551999092102
    2. 'not' → logprob: -2.8016254901885986
    3. 'diff' → logprob: -3.6766254901885986
    4. ' différent' → logprob: -3.8016254901885986
    5. 'different' → logprob: -3.9266254901885986
    6. ' different' → logprob: -4.926625728607178
    7. 'non' → logprob: -5.176625728607178
    8. ' ' → logprob: -5.676625728607178
    9. ' not' → logprob: -5.801625728607178
    10. '!' → logprob: -5.926625728607178

Token 328: ' à' (ID: 1221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2563273310661316
    2. ' ' → logprob: -1.5063273906707764
    3. ' à' → logprob: -5.756327152252197
    4. '10' → logprob: -8.131327629089355
    5. ' a' → logprob: -8.506327629089355
    6. 'à' → logprob: -8.631327629089355
    7. '=' → logprob: -9.006327629089355
    8. '1' → logprob: -9.381327629089355
    9. 's' → logprob: -9.756327629089355
    10. '  ' → logprob: -10.131327629089355

Token 329: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '#' → logprob: -18.125015258789062
    4. '=' → logprob: -19.125015258789062
    5. '   ' → logprob: -19.125015258789062
    6. '

' → logprob: -19.375015258789062
    7. '```' → logprob: -19.500015258789062
    8. 's' → logprob: -19.875015258789062
    9. '۰' → logprob: -20.125015258789062
    10. ':' → logprob: -20.375015258789062

Token 330: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '#' → logprob: -17.5000057220459
    4. 's' → logprob: -17.8750057220459
    5. '=' → logprob: -18.3750057220459
    6. '

' → logprob: -18.9375057220459
    7. '０' → logprob: -19.0625057220459
    8. '۰' → logprob: -19.2500057220459
    9. 'o' → logprob: -19.7500057220459
    10. '```' → logprob: -20.0000057220459

Token 331: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005233882926404476
    2. ',' → logprob: -5.8802337646484375
    3. ' :' → logprob: -6.2552337646484375
    4. ':
' → logprob: -7.6302337646484375
    5. '   ' → logprob: -11.880233764648438
    6. ' :
' → logprob: -12.005233764648438
    7. ' ,' → logprob: -12.880233764648438
    8. ',:' → logprob: -13.505233764648438
    9. '):' → logprob: -14.255233764648438
    10. ':,' → logprob: -14.630233764648438

Token 332: ' cela' (ID: 17542)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10731890052556992
    2. '    ' → logprob: -3.232318878173828
    3. '    
' → logprob: -3.732318878173828
    4. '       ' → logprob: -3.982318878173828
    5. '     
' → logprob: -5.982318878173828
    6. ':' → logprob: -6.107318878173828
    7. ' ' → logprob: -6.107318878173828
    8. '   ' → logprob: -6.482318878173828
    9. ' 
' → logprob: -6.607318878173828
    10. '
' → logprob: -6.732318878173828

Token 333: ' signifie' (ID: 81149)
  Prédit: ' signifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' signifie' → logprob: -0.4269905090332031
    2. ':' → logprob: -1.5519905090332031
    3. '   ' → logprob: -2.426990509033203
    4. ' means' → logprob: -3.301990509033203
    5. 'means' → logprob: -5.176990509033203
    6. ' significa' → logprob: -7.176990509033203
    7. '  ' → logprob: -7.426990509033203
    8. '       ' → logprob: -7.676990509033203
    9. ' :' → logprob: -7.801990509033203
    10. ':
' → logprob: -7.926990509033203

Token 334: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01955268532037735
    2. ' que' → logprob: -4.269552707672119
    3. '    ' → logprob: -6.144552707672119
    4. '    
' → logprob: -6.644552707672119
    5. ' ' → logprob: -7.769552707672119
    6. ' that' → logprob: -7.769552707672119
    7. '  ' → logprob: -8.019552230834961
    8. '   ' → logprob: -8.894552230834961
    9. ':' → logprob: -9.019552230834961
    10. 'que' → logprob: -9.644552230834961

Token 335: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6273141503334045
    2. 'i' → logprob: -1.1273140907287598
    3. 'ten' → logprob: -2.3773140907287598
    4. ' ten' → logprob: -3.7523140907287598
    5. '   ' → logprob: -5.00231409072876
    6. 'le' → logprob: -5.37731409072876
    7. ' ' → logprob: -6.00231409072876
    8. ' le' → logprob: -6.00231409072876
    9. ' the' → logprob: -6.12731409072876
    10. ' #' → logprob: -6.50231409072876

Token 336: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5247633457183838
    2. ' i' → logprob: -0.8997633457183838
    3. 'nombre' → logprob: -6.899763107299805
    4. ' nombre' → logprob: -8.149763107299805
    5. '   ' → logprob: -8.899763107299805
    6. ' number' → logprob: -9.399763107299805
    7. 'number' → logprob: -9.649763107299805
    8. ' ' → logprob: -11.274763107299805
    9. '	i' → logprob: -11.649763107299805
    10. 'num' → logprob: -11.774763107299805

Token 337: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.0116212368011475
    2. '   ' → logprob: -1.5116212368011475
    3. ' ' → logprob: -2.0116212368011475
    4. ' is' → logprob: -2.0116212368011475
    5. ' %' → logprob: -2.3866212368011475
    6. '%' → logprob: -3.6366212368011475
    7. ' ==' → logprob: -4.761621475219727
    8. 'est' → logprob: -5.511621475219727
    9. '  ' → logprob: -5.761621475219727
    10. '    ' → logprob: -6.011621475219727

Token 338: ' déjà' (ID: 21229)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6058310270309448
    2. ' multiple' → logprob: -1.7308310270309448
    3. ' déjà' → logprob: -3.1058311462402344
    4. '10' → logprob: -3.1058311462402344
    5. 'multiple' → logprob: -3.2308311462402344
    6. ' divisible' → logprob: -3.6058311462402344
    7. '0' → logprob: -3.7308311462402344
    8. ' a' → logprob: -3.8558311462402344
    9. 'dé' → logprob: -3.9808311462402344
    10. 'd' → logprob: -4.730831146240234

Token 339: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.26239320635795593
    2. 'multiple' → logprob: -2.2623932361602783
    3. ' multiple' → logprob: -2.5123932361602783
    4. 'un' → logprob: -3.2623932361602783
    5. '10' → logprob: -6.012392997741699
    6. ' divisible' → logprob: -6.512392997741699
    7. 'multip' → logprob: -6.762392997741699
    8. 'a' → logprob: -7.387392997741699
    9. ' a' → logprob: -7.637392997741699
    10. 'div' → logprob: -8.1373929977417

Token 340: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.6964160203933716
    2. 'multiple' → logprob: -0.6964160203933716
    3. 'multip' → logprob: -6.071415901184082
    4. 'ultiple' → logprob: -8.321415901184082
    5. ' ' → logprob: -8.821415901184082
    6. '10' → logprob: -9.071415901184082
    7. 'mult' → logprob: -9.071415901184082
    8. ' múlt' → logprob: -9.446415901184082
    9. 'm' → logprob: -10.196415901184082
    10. '_multiple' → logprob: -10.571415901184082

Token 341: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6503332257270813
    2. 'de' → logprob: -0.7753332257270813
    3. '   ' → logprob: -4.150333404541016
    4. '10' → logprob: -7.400333404541016
    5. ' of' → logprob: -8.025333404541016
    6. '    ' → logprob: -8.900333404541016
    7. ' ' → logprob: -9.025333404541016
    8. '  ' → logprob: -9.025333404541016
    9. 'd' → logprob: -9.400333404541016
    10. 'def' → logprob: -9.400333404541016

Token 342: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.012520721182227135
    2. ' ' → logprob: -4.387520790100098
    3. 'd' → logprob: -11.887520790100098
    4. ' dix' → logprob: -13.512520790100098
    5. '   ' → logprob: -14.012520790100098
    6. '```' → logprob: -14.137520790100098
    7. ' ' → logprob: -15.012520790100098
    8. ' diez' → logprob: -15.387520790100098
    9. '  ' → logprob: -15.762520790100098
    10. 'ten' → logprob: -16.01251983642578

Token 343: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.782141569303349e-05
    2. ' ' → logprob: -9.25009822845459
    3. 'd' → logprob: -13.75009822845459
    4. '0' → logprob: -15.12509822845459
    5. '```' → logprob: -15.62509822845459
    6. '1' → logprob: -17.125097274780273
    7. '100' → logprob: -18.000097274780273
    8. ' dix' → logprob: -18.125097274780273
    9. 'l' → logprob: -18.750097274780273
    10. ' diez' → logprob: -19.000097274780273

Token 344: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5090082883834839
    2. '   ' → logprob: -1.0090082883834839
    3. ',' → logprob: -3.5090084075927734
    4. ' :' → logprob: -5.884008407592773
    5. '       ' → logprob: -7.259008407592773
    6. '.' → logprob: -8.259008407592773
    7. '    
' → logprob: -8.634008407592773
    8. ':
' → logprob: -8.759008407592773
    9. ' ,' → logprob: -9.384008407592773
    10. '    ' → logprob: -9.384008407592773

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019528986886143684
    2. '    
' → logprob: -6.376953125
    3. '       ' → logprob: -9.501953125
    4. ',' → logprob: -9.751953125
    5. '
' → logprob: -9.876953125
    6. ':' → logprob: -10.751953125
    7. ' if' → logprob: -11.751953125
    8. '    ' → logprob: -11.876953125
    9. '   ' → logprob: -12.376953125
    10. '   
' → logprob: -12.626953125

Token 346: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03563803434371948
    2. ' if' → logprob: -3.7856380939483643
    3. 'if' (adapté à ' if') → logprob: -4.410637855529785
    4. '    
' → logprob: -9.285637855529785
    5. '    ' → logprob: -9.910637855529785
    6. '       ' → logprob: -11.785637855529785
    7. '  ' → logprob: -12.535637855529785
    8. '   ' → logprob: -12.660637855529785
    9. ' ' → logprob: -13.035637855529785
    10. '	if' → logprob: -13.160637855529785

Token 347: ' am' (ID: 939)
  Prédit: ' am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' am' → logprob: -0.003180921310558915
    2. 'am' → logprob: -5.753180980682373
    3. '   ' → logprob: -13.503180503845215
    4. ' ' → logprob: -14.003180503845215
    5. '(am' → logprob: -14.878180503845215
    6. ' i' → logprob: -15.503180503845215
    7. ' ' → logprob: -15.628180503845215
    8. '    ' → logprob: -16.00318145751953
    9. ' a' → logprob: -16.50318145751953
    10. 'i' → logprob: -17.62818145751953

Token 348: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.000718626833986491
    2. 'ar' → logprob: -7.375718593597412
    3. 'a' → logprob: -9.37571907043457
    4. '1' → logprob: -13.75071907043457
    5. ' ari' → logprob: -14.12571907043457
    6. '0' → logprob: -14.25071907043457
    7. '=' → logprob: -14.62571907043457
    8. '   ' → logprob: -14.87571907043457
    9. '`' → logprob: -15.00071907043457
    10. '_' → logprob: -15.12571907043457

Token 349: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10334161669015884
    2. '==' → logprob: -2.478341579437256
    3. ' !=' → logprob: -4.353341579437256
    4. '!=' → logprob: -7.103341579437256
    5. ' ' → logprob: -7.603341579437256
    6. ' >' → logprob: -10.228342056274414
    7. '>' → logprob: -10.478342056274414
    8. ':' → logprob: -11.228342056274414
    9. '0' → logprob: -11.603342056274414
    10. '=' → logprob: -12.353342056274414

Token 350: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06196768581867218
    2. ' ' → logprob: -2.811967611312866
    3. ' ' → logprob: -18.561967849731445
    4. '  ' → logprob: -19.186967849731445
    5. '```' → logprob: -19.311967849731445
    6. '   ' → logprob: -19.311967849731445
    7. '<|end|>' → logprob: -19.561967849731445
    8. '10' → logprob: -20.061967849731445
    9. '۰' → logprob: -20.311967849731445
    10. ' ' → logprob: -20.436967849731445

Token 351: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '10' → logprob: -19.5000057220459
    4. '```' → logprob: -20.6250057220459
    5. '۰' → logprob: -21.7500057220459
    6. '<|end|>' → logprob: -21.7500057220459
    7. '=' → logprob: -22.7500057220459
    8. '   ' → logprob: -22.8750057220459
    9. ' ' → logprob: -23.0000057220459
    10. ' ' → logprob: -23.1250057220459

Token 352: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037195575423538685
    2. ':
' → logprob: -5.628719329833984
    3. '   ' → logprob: -9.253719329833984
    4. '):' → logprob: -11.503719329833984
    5. ' :' → logprob: -11.878719329833984
    6. '       ' → logprob: -12.628719329833984
    7. ',' → logprob: -13.503719329833984
    8. ')' → logprob: -14.503719329833984
    9. '):
' → logprob: -14.503719329833984
    10. ':
' → logprob: -14.753719329833984

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024386707227677107
    2. '   ' → logprob: -6.502438545227051
    3. 'ten' → logprob: -7.127438545227051
    4. ' ten' → logprob: -10.00243854522705
    5. '
' → logprob: -10.75243854522705
    6. '    
' → logprob: -11.50243854522705
    7. '     ' → logprob: -11.75243854522705
    8. '    ' → logprob: -11.87743854522705
    9. ',' → logprob: -12.00243854522705
    10. '```' → logprob: -12.00243854522705

Token 354: ' #' (ID: 1069)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.8357542753219604
    2. '   ' → logprob: -1.2107542753219604
    3. '       ' → logprob: -1.9607542753219604
    4. ' ten' → logprob: -2.08575439453125
    5. ' rounded' → logprob: -6.71075439453125
    6. 'rounded' → logprob: -6.83575439453125
    7. '    ' → logprob: -8.46075439453125
    8. '        
' → logprob: -9.21075439453125
    9. 'round' → logprob: -9.46075439453125
    10. ' ' → logprob: -9.71075439453125

Token 355: ' Dans' (ID: 22082)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.024867786094546318
    2. ' ten' → logprob: -3.7748677730560303
    3. '   ' → logprob: -7.024868011474609
    4. 'rounded' → logprob: -7.649868011474609
    5. ' rounded' → logprob: -9.02486801147461
    6. '#' → logprob: -9.52486801147461
    7. 'total' → logprob: -11.02486801147461
    8. '    
' → logprob: -12.39986801147461
    9. 'round' → logprob: -12.52486801147461
    10. ' ' → logprob: -12.64986801147461

Token 356: ' ce' (ID: 2357)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.0009354014764539897
    2. ' ten' → logprob: -7.2509355545043945
    3. '#' → logprob: -8.875935554504395
    4. '   ' → logprob: -9.625935554504395
    5. '  ' → logprob: -12.375935554504395
    6. 'this' → logprob: -12.500935554504395
    7. ' ' → logprob: -12.750935554504395
    8. '10' → logprob: -13.500935554504395
    9. '	' → logprob: -13.625935554504395
    10. '```' → logprob: -13.750935554504395

Token 357: ' cas' (ID: 2108)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.4921623766422272
    2. '   ' → logprob: -2.2421624660491943
    3. '10' → logprob: -2.3671624660491943
    4. ' ten' → logprob: -2.8671624660491943
    5. ')' → logprob: -3.7421624660491943
    6. ':' → logprob: -3.9921624660491943
    7. '       ' → logprob: -4.242162227630615
    8. ' cas' → logprob: -4.492162227630615
    9. 'case' → logprob: -4.617162227630615
    10. '#' → logprob: -5.117162227630615

Token 358: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6157816648483276
    2. '       ' → logprob: -0.9907816648483276
    3. ',' → logprob: -3.365781784057617
    4. ':' → logprob: -3.740781784057617
    5. '
' → logprob: -4.240781784057617
    6. ':
' → logprob: -5.740781784057617
    7. '           ' → logprob: -5.865781784057617
    8. '    ' → logprob: -6.240781784057617
    9. '    
' → logprob: -6.365781784057617
    10. ' ten' → logprob: -6.365781784057617

Token 359: ' ajouter' (ID: 78457)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.1987098902463913
    2. ' ten' → logprob: -1.8237098455429077
    3. 'rounded' → logprob: -4.948709964752197
    4. ' rounded' → logprob: -5.073709964752197
    5. '   ' → logprob: -5.448709964752197
    6. '       ' → logprob: -7.573709964752197
    7. 'val' → logprob: -9.073709487915039
    8. 'round' → logprob: -9.823709487915039
    9. '        
' → logprob: -9.948709487915039
    10. 'value' → logprob: -10.198709487915039

Token 360: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014445188455283642
    2. ' i' → logprob: -4.2644453048706055
    3. '   ' → logprob: -8.264445304870605
    4. '(i' → logprob: -10.889445304870605
    5. '	i' → logprob: -13.764445304870605
    6. '       ' → logprob: -13.889445304870605
    7. '10' → logprob: -13.889445304870605
    8. '```' → logprob: -14.764445304870605
    9. '    ' → logprob: -15.139445304870605
    10. '(' → logprob: -15.389445304870605

Token 361: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001121880137361586
    2. ' i' → logprob: -7.126121997833252
    3. 'nombre' → logprob: -8.501121520996094
    4. '   ' → logprob: -9.501121520996094
    5. '```' → logprob: -12.001121520996094
    6. ' nombre' → logprob: -12.001121520996094
    7. '10' → logprob: -12.251121520996094
    8. ' ' → logprob: -12.376121520996094
    9. 'num' → logprob: -12.501121520996094
    10. 'a' → logprob: -13.001121520996094

Token 362: ' lui' (ID: 10623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.585225522518158
    2. 'i' → logprob: -1.3352255821228027
    3. ' i' → logprob: -2.3352255821228027
    4. ' à' → logprob: -2.9602255821228027
    5. 'à' → logprob: -4.460225582122803
    6. '    ' → logprob: -5.210225582122803
    7. ' directement' → logprob: -6.085225582122803
    8. ' ' → logprob: -6.335225582122803
    9. ' tel' → logprob: -6.585225582122803
    10. '       ' → logprob: -6.710225582122803

Token 363: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -0.000521577603649348
    2. 'm' → logprob: -7.750521659851074
    3. '-m' → logprob: -9.750521659851074
    4. '-mêmes' → logprob: -11.375521659851074
    5. ' même' → logprob: -11.500521659851074
    6. '```' → logprob: -12.375521659851074
    7. '-' → logprob: -12.875521659851074
    8. 'self' → logprob: -13.250521659851074
    9. '   ' → logprob: -13.500521659851074
    10. 'Même' → logprob: -14.625521659851074

Token 364: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03182056546211243
    2. '   ' → logprob: -4.031820774078369
    3. ' to' → logprob: -5.406820774078369
    4. ' à' → logprob: -5.406820774078369
    5. 'to' → logprob: -5.906820774078369
    6. 'ten' → logprob: -6.906820774078369
    7. 'à' → logprob: -8.156820297241211
    8. '           ' → logprob: -8.281820297241211
    9. ' ten' → logprob: -8.781820297241211
    10. ',' → logprob: -10.531820297241211

Token 365: 'sans' (ID: 106726)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007964789867401123
    2. ' i' → logprob: -5.132964611053467
    3. '   ' → logprob: -6.632964611053467
    4. ')' → logprob: -7.382964611053467
    5. ' )' → logprob: -10.507965087890625
    6. '       ' → logprob: -10.632965087890625
    7. '    ' → logprob: -11.382965087890625
    8. ')i' → logprob: -11.757965087890625
    9. '	i' → logprob: -12.632965087890625
    10. '    
' → logprob: -12.632965087890625

Token 366: ' modification' (ID: 29847)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.12435978651046753
    2. ' modification' → logprob: -3.2493598461151123
    3. 'changer' → logprob: -3.8743598461151123
    4. 'ch' → logprob: -3.9993598461151123
    5. 'modifier' → logprob: -4.374359607696533
    6. 'arr' → logprob: -4.374359607696533
    7. ' changement' → logprob: -5.249359607696533
    8. 'aj' → logprob: -6.499359607696533
    9. ' changer' → logprob: -6.749359607696533
    10. 'change' → logprob: -6.874359607696533

Token 367: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038613174110651016
    2. ' )' → logprob: -3.5386130809783936
    3. '   ' → logprob: -4.913613319396973
    4. ' à' → logprob: -7.038613319396973
    5. '       ' → logprob: -8.788613319396973
    6. '    ' → logprob: -9.288613319396973
    7. ' ' → logprob: -9.538613319396973
    8. ')
' → logprob: -9.788613319396973
    9. 'to' → logprob: -10.538613319396973
    10. 'à' → logprob: -10.538613319396973

Token 368: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13559876382350922
    2. '   ' → logprob: -2.135598659515381
    3. ' to' → logprob: -4.885598659515381
    4. 'to' → logprob: -7.260598659515381
    5. ')' → logprob: -9.385599136352539
    6. ',' → logprob: -9.385599136352539
    7. '    
' → logprob: -10.135599136352539
    8. ' ten' → logprob: -10.135599136352539
    9. '        
' → logprob: -10.635599136352539
    10. '10' → logprob: -10.760599136352539

Token 369: ' ten' (ID: 4325)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.00220687803812325
    2. ' ten' → logprob: -6.127206802368164
    3. 'total' → logprob: -11.877206802368164
    4. 'the' → logprob: -12.502206802368164
    5. '   ' → logprob: -12.502206802368164
    6. '10' → logprob: -12.627206802368164
    7. 'la' → logprob: -13.877206802368164
    8. '```' → logprob: -14.127206802368164
    9. '`' → logprob: -14.752206802368164
    10. '#' → logprob: -15.502206802368164

Token 370: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -1.3856492842023727e-06
    2. 'up' → logprob: -14.375000953674316
    3. '_down' → logprob: -15.000000953674316
    4. '_' → logprob: -15.375000953674316
    5. '_UP' → logprob: -16.250001907348633
    6. 'n' → logprob: -17.500001907348633
    7. 'd' → logprob: -18.625001907348633
    8. 'ten' → logprob: -19.000001907348633
    9. 'uple' → logprob: -19.000001907348633
    10. '\' → logprob: -19.375001907348633

Token 371: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9361264946837764e-07
    2. 'list' → logprob: -15.625
    3. '_' → logprob: -18.625
    4. '_l' → logprob: -20.0
    5. ' _' → logprob: -20.5
    6. '\' → logprob: -21.25
    7. 's' → logprob: -21.375
    8. 'List' → logprob: -21.625
    9. '_up' → logprob: -21.75
    10. '```' → logprob: -22.25

Token 372: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20441974699497223
    2. '   ' → logprob: -1.704419732093811
    3. '.append' → logprob: -6.9544196128845215
    4. 'ten' → logprob: -7.4544196128845215
    5. ' ten' → logprob: -7.7044196128845215
    6. '.' → logprob: -8.45442008972168
    7. '           ' → logprob: -8.57942008972168
    8. '        
' → logprob: -8.95442008972168
    9. '.ten' → logprob: -8.95442008972168
    10. '    
' → logprob: -9.32942008972168

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016780303791165352
    2. '   ' → logprob: -4.141780376434326
    3. 'ten' → logprob: -7.641780376434326
    4. ' ten' → logprob: -8.641779899597168
    5. '        
' → logprob: -10.141779899597168
    6. '           ' → logprob: -10.766779899597168
    7. '    
' → logprob: -11.891779899597168
    8. '    ' → logprob: -12.016779899597168
    9. '     ' → logprob: -12.266779899597168
    10. ',' → logprob: -12.766779899597168

Token 374: ' ten' (ID: 4325)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38477736711502075
    2. 'ten' (adapté à ' ten') → logprob: -1.509777307510376
    3. ' ten' → logprob: -2.634777307510376
    4. '       ' → logprob: -3.634777307510376
    5. '    ' → logprob: -9.384777069091797
    6. '  ' → logprob: -9.759777069091797
    7. '           ' → logprob: -10.509777069091797
    8. '	' → logprob: -11.009777069091797
    9. '    
' → logprob: -11.009777069091797
    10. '10' → logprob: -11.009777069091797

Token 375: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -1.9361264946837764e-07
    2. 'up' → logprob: -16.875
    3. '_down' → logprob: -16.875
    4. '_' → logprob: -17.375
    5. '_UP' → logprob: -17.875
    6. ' _' → logprob: -19.125
    7. '_u' → logprob: -19.25
    8. '
' → logprob: -19.625
    9. '[_' → logprob: -20.625
    10. '_to' → logprob: -21.0

Token 376: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.704273118884885e-07
    2. ' _' → logprob: -15.500000953674316
    3. '_up' → logprob: -16.0
    4. '_lst' → logprob: -16.125
    5. '_' → logprob: -17.0
    6. 'list' → logprob: -17.375
    7. '_lists' → logprob: -17.375
    8. '.append' → logprob: -17.625
    9. '_l' → logprob: -18.0
    10. 'List' → logprob: -18.0

Token 377: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000712670327629894
    2. '.' → logprob: -7.250712871551514
    3. '.app' → logprob: -13.625712394714355
    4. '.ap' → logprob: -14.000712394714355
    5. ' .' → logprob: -14.875712394714355
    6. '.extend' → logprob: -15.875712394714355
    7. '.Append' → logprob: -16.750713348388672
    8. '.add' → logprob: -17.250713348388672
    9. 'append' → logprob: -17.500713348388672
    10. '.push' → logprob: -18.250713348388672

Token 378: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.25
    3. 'i' → logprob: -16.5
    4. '(
' → logprob: -21.25
    5. '(a' → logprob: -22.375
    6. ' i' → logprob: -22.625
    7. ' (' → logprob: -23.25
    8. '[i' → logprob: -23.5
    9. '	i' → logprob: -23.75
    10. '(int' → logprob: -24.125

Token 379: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.191489642835222e-05
    2. ')
' → logprob: -10.500041961669922
    3. '   ' → logprob: -11.375041961669922
    4. ' )' → logprob: -12.875041961669922
    5. ')

' → logprob: -16.750041961669922
    6. ')return' → logprob: -17.000041961669922
    7. ')#' → logprob: -17.250041961669922
    8. '))' → logprob: -17.500041961669922
    9. ' ' → logprob: -17.750041961669922
    10. '       ' → logprob: -17.750041961669922

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001910192659124732
    2. 'else' → logprob: -6.751910209655762
    3. ' else' → logprob: -7.251910209655762
    4. '    
' → logprob: -10.626910209655762
    5. '	else' → logprob: -12.751910209655762
    6. 'elif' → logprob: -14.376910209655762
    7. ')' → logprob: -14.751910209655762
    8. '   
' → logprob: -15.001910209655762
    9. '<|end|>' → logprob: -15.001910209655762
    10. '  ' → logprob: -15.126910209655762

Token 381: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2599319815635681
    2. '   ' → logprob: -1.634932041168213
    3. ' else' → logprob: -3.384932041168213
    4. '	else' → logprob: -10.634931564331055
    5. 'elif' → logprob: -11.134931564331055
    6. '    
' → logprob: -12.259931564331055
    7. ' ' → logprob: -12.759931564331055
    8. '  ' → logprob: -13.384931564331055
    9. 'els' → logprob: -15.009931564331055
    10. '       ' → logprob: -15.134931564331055

Token 382: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6380013227462769
    2. '       ' → logprob: -0.8880013227462769
    3. ':
' → logprob: -2.8880014419555664
    4. '   ' → logprob: -5.513001441955566
    5. ' :' → logprob: -8.638001441955566
    6. ' :
' → logprob: -9.138001441955566
    7. '    ' → logprob: -9.888001441955566
    8. '     ' → logprob: -10.513001441955566
    9. ':

' → logprob: -11.263001441955566
    10. '	' → logprob: -11.263001441955566

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03807121515274048
    2. '   ' → logprob: -3.4130711555480957
    3. 'ten' → logprob: -5.913071155548096
    4. ' ten' → logprob: -6.538071155548096
    5. '   ' → logprob: -9.788071632385254
    6. '    ' → logprob: -10.163071632385254
    7. '    ' → logprob: -10.413071632385254
    8. '      ' → logprob: -11.038071632385254
    9. '     ' → logprob: -11.163071632385254
    10. '	' → logprob: -11.288071632385254

Token 384: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2955160140991211
    2. 'ten' → logprob: -2.170516014099121
    3. '   ' → logprob: -2.545516014099121
    4. ' ten' → logprob: -2.795516014099121
    5. '10' → logprob: -7.795516014099121
    6. '    ' → logprob: -8.045516014099121
    7. '      ' → logprob: -8.545516014099121
    8. '#' (adapté à ' #') → logprob: -8.920516014099121
    9. '     ' → logprob: -9.045516014099121
    10. '        ' → logprob: -9.233016014099121

Token 385: ' Sinon' (ID: 154924)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14191526174545288
    2. ' ten' → logprob: -2.7669153213500977
    3. 'ten' → logprob: -3.0169153213500977
    4. '   ' → logprob: -4.891915321350098
    5. '#' → logprob: -5.016915321350098
    6. ' #' → logprob: -5.891915321350098
    7. 'to' → logprob: -7.391915321350098
    8. ' rounded' → logprob: -7.766915321350098
    9. 'rounded' → logprob: -7.891915321350098
    10. ' to' → logprob: -7.891915321350098

Token 386: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011595555581152439
    2. ':' → logprob: -5.011595726013184
    3. '   ' → logprob: -5.511595726013184
    4. ' ten' → logprob: -8.761595726013184
    5. ':
' → logprob: -9.136595726013184
    6. ' :' → logprob: -9.386595726013184
    7. '           ' → logprob: -9.511595726013184
    8. 'ten' → logprob: -9.886595726013184
    9. '      ' → logprob: -10.011595726013184
    10. ',' → logprob: -10.136595726013184

Token 387: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4336252212524414
    2. ' ten' → logprob: -1.1836252212524414
    3. 'ten' → logprob: -3.5586252212524414
    4. '   ' → logprob: -4.183625221252441
    5. ' rounded' → logprob: -7.933625221252441
    6. ' to' → logprob: -8.433625221252441
    7. '        ' → logprob: -8.558625221252441
    8. '      ' → logprob: -8.996125221252441
    9. '    ' → logprob: -9.121125221252441
    10. ' ' → logprob: -9.183625221252441

Token 388: ' nombre' (ID: 9733)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.07428447157144547
    2. '#' → logprob: -3.199284553527832
    3. 'arr' → logprob: -4.574284553527832
    4. 'rounded' → logprob: -4.574284553527832
    5. 'multiple' → logprob: -6.199284553527832
    6. ' ten' → logprob: -6.699284553527832
    7. 'diff' → logprob: -6.949284553527832
    8. 'nombre' → logprob: -7.074284553527832
    9. ' #' → logprob: -7.324284553527832
    10. 're' → logprob: -7.449284553527832

Token 389: ' n' (ID: 297)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2811583280563354
    2. ' +=' → logprob: -1.2811583280563354
    3. '+=' → logprob: -2.156158447265625
    4. ' =' → logprob: -2.281158447265625
    5. '_' → logprob: -2.406158447265625
    6. ')' → logprob: -3.531158447265625
    7. '   ' → logprob: -3.906158447265625
    8. '_up' → logprob: -4.156158447265625
    9. ' is' → logprob: -4.531158447265625
    10. '10' → logprob: -4.656158447265625

Token 390: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7296773791313171
    2. '   ' → logprob: -2.229677438735962
    3. 'um' → logprob: -2.729677438735962
    4. ''est' → logprob: -3.104677438735962
    5. '=' → logprob: -3.229677438735962
    6. '       ' → logprob: -3.229677438735962
    7. 'e' → logprob: -3.354677438735962
    8. 'est' → logprob: -3.854677438735962
    9. '_up' → logprob: -4.354677200317383
    10. ' =' → logprob: -4.604677200317383

Token 391: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.005293646361678839
    2. 'est' → logprob: -6.130293846130371
    3. ' pas' → logprob: -6.255293846130371
    4. '#' → logprob: -7.630293846130371
    5. 'a' → logprob: -8.505293846130371
    6. ''est' → logprob: -9.255293846130371
    7. 'dé' → logprob: -9.380293846130371
    8. 's' → logprob: -9.505293846130371
    9. 'already' → logprob: -9.505293846130371
    10. '   ' → logprob: -10.630293846130371

Token 392: ' un' (ID: 537)
  Prédit: ' multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.3867257833480835
    2. 'multiple' → logprob: -1.2617257833480835
    3. ' un' → logprob: -4.261725902557373
    4. ' a' → logprob: -5.386725902557373
    5. '10' → logprob: -5.511725902557373
    6. 'a' → logprob: -5.636725902557373
    7. 'un' → logprob: -5.636725902557373
    8. 'i' → logprob: -5.761725902557373
    9. ' divisible' → logprob: -6.886725902557373
    10. '0' → logprob: -7.261725902557373

Token 393: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.00813934113830328
    2. ' multiple' → logprob: -4.883139133453369
    3. 'multip' → logprob: -7.883139133453369
    4. '10' → logprob: -9.258139610290527
    5. 'mult' → logprob: -10.633139610290527
    6. 'nombre' → logprob: -11.758139610290527
    7. 'multi' → logprob: -12.133139610290527
    8. '0' → logprob: -12.258139610290527
    9. ' ' → logprob: -12.633139610290527
    10. '```' → logprob: -12.633139610290527

Token 394: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.49295705556869507
    2. 'de' → logprob: -0.9929570555686951
    3. '   ' → logprob: -4.49295711517334
    4. '       ' → logprob: -5.24295711517334
    5. '10' → logprob: -6.99295711517334
    6. '_de' → logprob: -7.74295711517334
    7. 'd' → logprob: -8.61795711517334
    8. ' of' → logprob: -8.99295711517334
    9. 'of' → logprob: -8.99295711517334
    10. '    ' → logprob: -9.74295711517334

Token 395: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03377029672265053
    2. ' ' → logprob: -3.4087703227996826
    3. ' dix' → logprob: -9.658770561218262
    4. 'd' → logprob: -10.033770561218262
    5. '   ' → logprob: -12.783770561218262
    6. '```' → logprob: -13.033770561218262
    7. ' ' → logprob: -13.158770561218262
    8. '  ' → logprob: -13.471270561218262
    9. 'ten' → logprob: -13.533770561218262
    10. ' diez' → logprob: -13.658770561218262

Token 396: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.375006675720215
    3. 'd' → logprob: -13.125006675720215
    4. ' dix' → logprob: -15.500006675720215
    5. 'ten' → logprob: -17.0000057220459
    6. ' diez' → logprob: -18.1250057220459
    7. '1' → logprob: -18.6250057220459
    8. '１０' → logprob: -18.7500057220459
    9. '```' → logprob: -19.1250057220459
    10. ' ten' → logprob: -19.2500057220459

Token 397: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01493325736373663
    2. '   ' → logprob: -4.389933109283447
    3. ',' → logprob: -7.139933109283447
    4. ':' → logprob: -7.764933109283447
    5. ' ,' → logprob: -8.514933586120605
    6. ' ten' → logprob: -8.764933586120605
    7. '        
' → logprob: -9.264933586120605
    8. ')' → logprob: -9.389933586120605
    9. ' ' → logprob: -9.514933586120605
    10. '    ' → logprob: -9.514933586120605

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001532355323433876
    2. ':' → logprob: -7.376532554626465
    3. '   ' → logprob: -8.126532554626465
    4. ')' → logprob: -9.126532554626465
    5. ',' → logprob: -9.376532554626465
    6. '        
' → logprob: -9.376532554626465
    7. ' ten' → logprob: -10.001532554626465
    8. '      ' → logprob: -10.001532554626465
    9. ' :' → logprob: -10.814032554626465
    10. '        ' → logprob: -11.064032554626465

Token 399: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4688183665275574
    2. 'ten' → logprob: -1.0938184261322021
    3. ' ten' → logprob: -4.093818187713623
    4. '   ' → logprob: -4.218818187713623
    5. '#' (adapté à ' #') → logprob: -5.343818187713623
    6. 'rounded' → logprob: -7.093818187713623
    7. ' #' → logprob: -7.718818187713623
    8. 'to' → logprob: -7.718818187713623
    9. ' rounded' → logprob: -8.218818664550781
    10. ' ' → logprob: -8.906318664550781

Token 400: ' Calcul' (ID: 57243)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.6407374143600464
    2. ' ten' → logprob: -1.1407374143600464
    3. '   ' → logprob: -2.265737533569336
    4. '       ' → logprob: -3.765737533569336
    5. 'rounded' → logprob: -4.765737533569336
    6. 'to' → logprob: -5.515737533569336
    7. ' rounded' → logprob: -5.640737533569336
    8. '#' → logprob: -6.265737533569336
    9. 'round' → logprob: -6.390737533569336
    10. 'next' → logprob: -6.765737533569336

Token 401: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.006864320952445269
    2. '       ' → logprob: -5.506864547729492
    3. 'ation' → logprob: -6.506864547729492
    4. 'ate' → logprob: -7.131864547729492
    5. '   ' → logprob: -8.756864547729492
    6. '=' → logprob: -9.131864547729492
    7. ' =' → logprob: -10.131864547729492
    8. 'ons' → logprob: -10.506864547729492
    9. 'up' → logprob: -10.631864547729492
    10. 'ating' → logprob: -10.631864547729492

Token 402: ' combien' (ID: 106648)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7960701584815979
    2. '(' → logprob: -1.1710700988769531
    3. '   ' → logprob: -2.046070098876953
    4. 'i' → logprob: -3.546070098876953
    5. 'ten' → logprob: -3.796070098876953
    6. ' (' → logprob: -3.921070098876953
    7. ' i' → logprob: -4.921070098876953
    8. ' ' → logprob: -4.921070098876953
    9. '(i' → logprob: -5.671070098876953
    10. ' ten' → logprob: -5.796070098876953

Token 403: ' il' (ID: 1793)
  Prédit: ' il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -1.2002135515213013
    2. 'de' → logprob: -1.3252135515213013
    3. ' de' → logprob: -1.7002135515213013
    4. 'il' → logprob: -2.5752134323120117
    5. '10' → logprob: -2.7002134323120117
    6. 'd' → logprob: -2.9502134323120117
    7. 'à' → logprob: -5.200213432312012
    8. ' =' → logprob: -5.200213432312012
    9. 'to' → logprob: -5.325213432312012
    10. 'man' → logprob: -5.325213432312012

Token 404: ' manque' (ID: 56490)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.2752472460269928
    2. 'f' → logprob: -2.40024733543396
    3. ' faut' → logprob: -3.40024733543396
    4. ' man' → logprob: -3.77524733543396
    5. '_man' → logprob: -3.77524733543396
    6. ' manque' → logprob: -3.90024733543396
    7. 'fa' → logprob: -4.275247097015381
    8. ' ' → logprob: -4.775247097015381
    9. '_' → logprob: -5.275247097015381
    10. '10' → logprob: -5.525247097015381

Token 405: ' pour' (ID: 1930)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pour' → logprob: -0.6714887022972107
    2. ' pour' → logprob: -1.2964887619018555
    3. '10' → logprob: -2.0464887619018555
    4. 'to' → logprob: -3.4214887619018555
    5. '   ' → logprob: -3.7964887619018555
    6. ' =' → logprob: -4.1714887619018555
    7. '=' → logprob: -5.7964887619018555
    8. ' to' → logprob: -5.9214887619018555
    9. ' ' → logprob: -6.0464887619018555
    10. 'for' → logprob: -6.5464887619018555

Token 406: ' atteindre' (ID: 95734)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4010685682296753
    2. 'arr' → logprob: -2.026068687438965
    3. '10' → logprob: -2.151068687438965
    4. ' ' → logprob: -2.151068687438965
    5. 'aj' → logprob: -2.526068687438965
    6. ' atteindre' → logprob: -2.526068687438965
    7. ' ajouter' → logprob: -3.026068687438965
    8. '   ' → logprob: -3.276068687438965
    9. ' augmenter' → logprob: -3.401068687438965
    10. ' i' → logprob: -3.651068687438965

Token 407: ' le' (ID: 505)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014936082065105438
    2. ' ' → logprob: -4.2649359703063965
    3. '(' → logprob: -8.389936447143555
    4. ' (' → logprob: -8.639936447143555
    5. 'i' → logprob: -8.889936447143555
    6. ' i' → logprob: -9.514936447143555
    7. '   ' → logprob: -9.639936447143555
    8. 'le' → logprob: -10.264936447143555
    9. 'd' → logprob: -11.764936447143555
    10. ' le' → logprob: -11.889936447143555

Token 408: ' multiple' (ID: 7598)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.013444902375340462
    2. ' ' → logprob: -5.263444900512695
    3. ' next' → logprob: -6.013444900512695
    4. 'next' → logprob: -6.013444900512695
    5. ' prochain' → logprob: -6.138444900512695
    6. ' multiple' → logprob: -8.263444900512695
    7. 'pro' → logprob: -8.263444900512695
    8. 'd' → logprob: -8.638444900512695
    9. 'multiple' → logprob: -8.888444900512695
    10. '   ' → logprob: -10.013444900512695

Token 409: ' de' (ID: 334)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0243641138076782
    2. '   ' → logprob: -1.1493641138076782
    3. ' supérieur' → logprob: -1.5243641138076782
    4. 'sup' → logprob: -3.7743639945983887
    5. '_sup' → logprob: -4.149363994598389
    6. ' de' → logprob: -4.149363994598389
    7. 'super' → logprob: -4.524363994598389
    8. 'de' → logprob: -5.024363994598389
    9. 'su' → logprob: -5.149363994598389
    10. '_' → logprob: -5.399363994598389

Token 410: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018421964719891548
    2. ' ' → logprob: -4.5184221267700195
    3. 'd' → logprob: -5.1434221267700195
    4. ' dix' → logprob: -6.5184221267700195
    5. ' ' → logprob: -11.39342212677002
    6. ' diez' → logprob: -12.39342212677002
    7. 'ten' → logprob: -13.01842212677002
    8. '<|end|>' → logprob: -13.01842212677002
    9. ' ' → logprob: -13.14342212677002
    10. '```' → logprob: -13.39342212677002

Token 411: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001004943042062223
    2. ' ' → logprob: -7.001005172729492
    3. 'd' → logprob: -9.626005172729492
    4. ' dix' → logprob: -11.376005172729492
    5. '```' → logprob: -11.876005172729492
    6. '<|end|>' → logprob: -12.876005172729492
    7. '`' → logprob: -13.251005172729492
    8. '  ' → logprob: -14.251005172729492
    9. 'ten' → logprob: -14.376005172729492
    10. '.' → logprob: -14.376005172729492

Token 412: ' supérieur' (ID: 98491)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22049392759799957
    2. '10' → logprob: -2.095494031906128
    3. ' =' → logprob: -4.220493793487549
    4. ' (' → logprob: -4.220493793487549
    5. ' +' → logprob: -4.345493793487549
    6. ' to' → logprob: -4.595493793487549
    7. 'to' → logprob: -5.345493793487549
    8. '(' → logprob: -5.470493793487549
    9. ' ' → logprob: -5.845493793487549
    10. '=' → logprob: -6.345493793487549

Token 413: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24472525715827942
    2. '10' → logprob: -1.869725227355957
    3. ' (' → logprob: -3.619725227355957
    4. ' +' → logprob: -5.244725227355957
    5. ',' → logprob: -5.494725227355957
    6. ' i' → logprob: -5.744725227355957
    7. '
' → logprob: -5.744725227355957
    8. ' =' → logprob: -5.994725227355957
    9. ' ,' → logprob: -5.994725227355957
    10. 'i' → logprob: -6.244725227355957

Token 414: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.014828969724476337
    2. ' plus' → logprob: -5.264829158782959
    3. '+' → logprob: -5.514829158782959
    4. '_plus' → logprob: -5.764829158782959
    5. 'd' → logprob: -6.889829158782959
    6. '10' → logprob: -7.639829158782959
    7. 'su' → logprob: -8.0148286819458
    8. ' ' → logprob: -9.2648286819458
    9. '```' → logprob: -9.5148286819458
    10. 'sup' → logprob: -9.6398286819458

Token 415: ' proche' (ID: 61089)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.003758632577955723
    2. 'prox' → logprob: -6.253758430480957
    3. 'plus' → logprob: -6.503758430480957
    4. ' proche' → logprob: -9.128758430480957
    5. 'next' → logprob: -9.128758430480957
    6. '```' → logprob: -9.628758430480957
    7. 'près' → logprob: -11.128758430480957
    8. '10' → logprob: -11.378758430480957
    9. ' prochain' → logprob: -12.003758430480957
    10. 'prec' → logprob: -12.753758430480957

Token 416: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07298866659402847
    2. '10' → logprob: -3.572988748550415
    3. ',' → logprob: -4.947988510131836
    4. ' =' → logprob: -5.447988510131836
    5. 'ten' → logprob: -5.447988510131836
    6. ' (' → logprob: -5.572988510131836
    7. ' to' → logprob: -5.947988510131836
    8. ' ,' → logprob: -6.072988510131836
    9. '
' → logprob: -6.322988510131836
    10. '(' → logprob: -6.322988510131836

Token 417: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5842587351799011
    2. '       ' → logprob: -0.8342587351799011
    3. 'ten' → logprob: -6.084258556365967
    4. '10' → logprob: -6.209258556365967
    5. ' ten' → logprob: -6.709258556365967
    6. '    ' → logprob: -7.209258556365967
    7. ' +' → logprob: -7.959258556365967
    8. '        ' → logprob: -7.959258556365967
    9. '+' → logprob: -8.959259033203125
    10. '  ' → logprob: -9.209259033203125

Token 418: ' #' (ID: 1069)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6655595302581787
    2. ' ten' → logprob: -1.6655595302581787
    3. 'ten' → logprob: -2.0405595302581787
    4. '   ' → logprob: -2.7905595302581787
    5. ' ' → logprob: -3.7905595302581787
    6. '(' → logprob: -3.9155595302581787
    7. ' (' → logprob: -4.415559768676758
    8. ' to' → logprob: -4.790559768676758
    9. 'to' → logprob: -4.915559768676758
    10. 'diff' → logprob: -5.290559768676758

Token 419: ' Ceci' (ID: 144699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7159398794174194
    2. ' ten' → logprob: -1.5909398794174194
    3. 'ten' → logprob: -2.215939998626709
    4. ' to' → logprob: -2.465939998626709
    5. 'to' → logprob: -2.965939998626709
    6. '10' → logprob: -4.215939998626709
    7. 'diff' → logprob: -4.840939998626709
    8. 'up' → logprob: -5.840939998626709
    9. ' up' → logprob: -5.840939998626709
    10. ' add' → logprob: -5.965939998626709

Token 420: ' revient' (ID: 95900)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6281734108924866
    2. ' =' → logprob: -1.5031733512878418
    3. '   ' → logprob: -2.253173351287842
    4. ' manque' → logprob: -2.878173351287842
    5. ' +=' → logprob: -3.878173351287842
    6. '       ' → logprob: -4.378173351287842
    7. '10' → logprob: -4.878173351287842
    8. '+=' → logprob: -5.003173351287842
    9. 'diff' → logprob: -5.378173351287842
    10. 'missing' → logprob: -5.628173351287842

Token 421: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3293505609035492
    2. '       ' → logprob: -2.579350471496582
    3. 'à' → logprob: -2.579350471496582
    4. '   ' → logprob: -2.704350471496582
    5. ' to' → logprob: -3.454350471496582
    6. 'to' → logprob: -4.329350471496582
    7. '    ' → logprob: -5.704350471496582
    8. ' a' → logprob: -5.704350471496582
    9. ' ' → logprob: -5.829350471496582
    10. '           ' → logprob: -6.204350471496582

Token 422: ' faire' (ID: 8119)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.15748152136802673
    2. '(' → logprob: -2.6574814319610596
    3. ' (' → logprob: -3.5324814319610596
    4. ' ' → logprob: -3.5324814319610596
    5. '   ' → logprob: -4.907481670379639
    6. ' ten' → logprob: -5.282481670379639
    7. 'ten' → logprob: -5.657481670379639
    8. '
' → logprob: -8.84498119354248
    9. ' i' → logprob: -8.84498119354248
    10. '  ' → logprob: -9.21998119354248

Token 423: ' (' (ID: 350)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.276750385761261
    2. '(' → logprob: -2.026750326156616
    3. ' (' → logprob: -2.901750326156616
    4. '   ' → logprob: -3.401750326156616
    5. ' ' → logprob: -4.401750564575195
    6. 'ten' → logprob: -5.401750564575195
    7. ' ten' → logprob: -5.651750564575195
    8. '`' → logprob: -8.151750564575195
    9. ' i' → logprob: -8.276750564575195
    10. '```' → logprob: -9.026750564575195

Token 424: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0036397494841367006
    2. ' ' → logprob: -6.0036396980285645
    3. '(' → logprob: -7.1286396980285645
    4. ' (' → logprob: -8.128640174865723
    5. ')' → logprob: -10.878640174865723
    6. '   ' → logprob: -11.003640174865723
    7. 'i' → logprob: -11.503640174865723
    8. '
' → logprob: -12.503640174865723
    9. '```' → logprob: -12.753640174865723
    10. ' i' → logprob: -12.753640174865723

Token 425: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018354443833231926
    2. '-' → logprob: -4.018354415893555
    3. '-am' → logprob: -8.643354415893555
    4. ' am' → logprob: -11.268354415893555
    5. ' ' → logprob: -11.768354415893555
    6. ' ' → logprob: -12.518354415893555
    7. ')' → logprob: -13.768354415893555
    8. 'am' → logprob: -13.768354415893555
    9. '   ' → logprob: -14.393354415893555
    10. '```' → logprob: -14.893354415893555

Token 426: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0024758970830589533
    2. ' am' → logprob: -6.002475738525391
    3. 'amu' → logprob: -17.12747573852539
    4. ')' → logprob: -18.00247573852539
    5. '_am' → logprob: -18.00247573852539
    6. 'amn' → logprob: -18.12747573852539
    7. 'ami' → logprob: -18.37747573852539
    8. ' ' → logprob: -18.62747573852539
    9. '   ' → logprob: -18.75247573852539
    10. 'amp' → logprob: -18.87747573852539

Token 427: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -5.512236498361744e-07
    2. 'a' → logprob: -15.500000953674316
    3. 'ари' → logprob: -16.375
    4. 'ar' → logprob: -16.75
    5. 'i' → logprob: -18.0
    6. 'ani' → logprob: -18.625
    7. 'arri' → logprob: -18.75
    8. ' ari' → logprob: -19.0
    9. '   ' → logprob: -19.0
    10. '`' → logprob: -19.5

Token 428: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01326870359480381
    2. ' )' → logprob: -4.38826847076416
    3. ')
' → logprob: -7.38826847076416
    4. '   ' → logprob: -10.01326847076416
    5. ' )
' → logprob: -10.01326847076416
    6. ')
' → logprob: -11.26326847076416
    7. '))' → logprob: -11.63826847076416
    8. '),' → logprob: -12.01326847076416
    9. ' ' → logprob: -12.26326847076416
    10. ')

' → logprob: -13.01326847076416

Token 429: ' puis' (ID: 18766)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08749237656593323
    2. ' )' → logprob: -3.4624924659729004
    3. ' puis' → logprob: -4.3374924659729
    4. '   ' → logprob: -5.2124924659729
    5. ' et' → logprob: -5.3374924659729
    6. ' and' → logprob: -5.3374924659729
    7. '),' → logprob: -5.5874924659729
    8. '    ' → logprob: -5.9624924659729
    9. ' mais' → logprob: -6.0874924659729
    10. 'end' → logprob: -6.4624924659729

Token 430: ' on' (ID: 402)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8202820420265198
    2. ' ten' → logprob: -1.820281982421875
    3. '   ' → logprob: -2.070281982421875
    4. ')' → logprob: -2.195281982421875
    5. 'ten' → logprob: -3.570281982421875
    6. '10' → logprob: -3.820281982421875
    7. '    ' → logprob: -4.070281982421875
    8. 'i' → logprob: -4.070281982421875
    9. ' ' → logprob: -4.445281982421875
    10. ' append' → logprob: -4.570281982421875

Token 431: ' ajoute' (ID: 91611)
  Prédit: ' append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' append' → logprob: -0.9684969782829285
    2. 'append' → logprob: -1.3434970378875732
    3. ' ajouter' → logprob: -2.3434970378875732
    4. ' ajoute' → logprob: -2.5934970378875732
    5. '_append' → logprob: -3.2184970378875732
    6. ' add' → logprob: -3.2184970378875732
    7. '.append' → logprob: -3.9684970378875732
    8. ')' → logprob: -4.343496799468994
    9. ' i' → logprob: -4.718496799468994
    10. ' ' → logprob: -4.843496799468994

Token 432: ' ce' (ID: 2357)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.45107370615005493
    2. '(' → logprob: -2.32607364654541
    3. ' ' → logprob: -2.82607364654541
    4. ' this' → logprob: -2.95107364654541
    5. ' cela' → logprob: -3.45107364654541
    6. '10' → logprob: -3.57607364654541
    7. ' i' → logprob: -3.70107364654541
    8. ' that' → logprob: -3.95107364654541
    9. 'i' → logprob: -4.20107364654541
    10. ' cette' → logprob: -4.32607364654541

Token 433: ' montant' (ID: 72364)
  Prédit: ' montant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' montant' → logprob: -0.8734732866287231
    2. ' (' → logprob: -2.2484731674194336
    3. 'nombre' → logprob: -2.4984731674194336
    4. 'space' → logprob: -2.8734731674194336
    5. ' espace' → logprob: -2.8734731674194336
    6. ' ' → logprob: -3.1234731674194336
    7. ' nombre' → logprob: -3.4984731674194336
    8. ' amount' → logprob: -3.6234731674194336
    9. 'val' → logprob: -3.7484731674194336
    10. ' )' → logprob: -4.248473167419434

Token 434: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2849447429180145
    2. ' to' → logprob: -2.159944772720337
    3. 'to' → logprob: -2.534944772720337
    4. '   ' → logprob: -3.784944772720337
    5. ' à' → logprob: -4.159944534301758
    6. ' )' → logprob: -4.909944534301758
    7. '10' → logprob: -5.784944534301758
    8. ' ' → logprob: -6.659944534301758
    9. '       ' → logprob: -7.409944534301758
    10. ',' → logprob: -8.284944534301758

Token 435: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006851416081190109
    2. ' i' → logprob: -5.0068511962890625
    3. 'nombre' → logprob: -9.131851196289062
    4. ' nombre' → logprob: -11.631851196289062
    5. 'num' → logprob: -12.256851196289062
    6. ' ' → logprob: -12.506851196289062
    7. '```' → logprob: -13.131851196289062
    8. 'code' → logprob: -13.131851196289062
    9. '   ' → logprob: -13.256851196289062
    10. 'number' → logprob: -14.006851196289062

Token 436: ' original' (ID: 4756)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0186686422675848
    2. ' i' → logprob: -4.5186686515808105
    3. 'i' → logprob: -5.3936686515808105
    4. '       ' → logprob: -6.3936686515808105
    5. ')' → logprob: -7.7686686515808105
    6. ' +' → logprob: -8.768668174743652
    7. ',' → logprob: -8.893668174743652
    8. ' )' → logprob: -9.268668174743652
    9. '	i' → logprob: -9.518668174743652
    10. '(i' → logprob: -9.643668174743652

Token 437: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2929486334323883
    2. ' i' → logprob: -1.667948603630066
    3. '   ' → logprob: -2.9179487228393555
    4. 'i' → logprob: -5.1679487228393555
    5. '(i' → logprob: -6.7929487228393555
    6. ')' → logprob: -6.9179487228393555
    7. ',' → logprob: -7.2929487228393555
    8. ' +' → logprob: -7.2929487228393555
    9. ' (' → logprob: -7.5429487228393555
    10. ' )' → logprob: -8.542948722839355

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08284652978181839
    2. '   ' → logprob: -2.5828466415405273
    3. ' i' → logprob: -6.332846641540527
    4. ' ten' → logprob: -6.832846641540527
    5. 'ten' → logprob: -8.582846641540527
    6. 'i' → logprob: -8.707846641540527
    7. '        
' → logprob: -9.082846641540527
    8. ',' → logprob: -9.332846641540527
    9. '   ' → logprob: -9.957846641540527
    10. 'n' → logprob: -10.332846641540527

Token 439: ' ten' (ID: 4325)
  Prédit: ' ten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ten' → logprob: -0.4412330090999603
    2. '       ' → logprob: -1.8162330389022827
    3. 'ten' (adapté à ' ten') → logprob: -1.8162330389022827
    4. ' rounded' → logprob: -4.441233158111572
    5. '   ' → logprob: -4.566233158111572
    6. 'rounded' → logprob: -5.316233158111572
    7. 'temp' → logprob: -7.566233158111572
    8. 'next' → logprob: -7.566233158111572
    9. 'round' → logprob: -7.941233158111572
    10. '10' → logprob: -8.378732681274414

Token 440: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -2.176947600673884e-05
    2. '_' → logprob: -12.000021934509277
    3. 'up' → logprob: -12.250021934509277
    4. '   ' → logprob: -12.375021934509277
    5. ' _' → logprob: -12.375021934509277
    6. '_UP' → logprob: -14.125021934509277
    7. '_down' → logprob: -15.375021934509277
    8. '	up' → logprob: -15.625021934509277
    9. '    ' → logprob: -16.12502098083496
    10. '  ' → logprob: -16.50002098083496

Token 441: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.432518421206623e-05
    2. '_up' → logprob: -9.7500638961792
    3. 'list' → logprob: -12.2500638961792
    4. 'up' → logprob: -14.6250638961792
    5. '_' → logprob: -14.8750638961792
    6. '[' → logprob: -16.000064849853516
    7. '_lists' → logprob: -16.750064849853516
    8. '   ' → logprob: -16.875064849853516
    9. '_lst' → logprob: -17.125064849853516
    10. 'List' → logprob: -17.500064849853516

Token 442: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011720098555088043
    2. '.' → logprob: -6.751172065734863
    3. '.extend' → logprob: -13.876172065734863
    4. '.app' → logprob: -14.751172065734863
    5. ' .' → logprob: -15.751172065734863
    6. 'append' → logprob: -16.251171112060547
    7. '.Append' → logprob: -16.876171112060547
    8. '.ap' → logprob: -16.876171112060547
    9. '.add' → logprob: -17.501171112060547
    10. ').' → logprob: -17.876171112060547

Token 443: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.596781946020201e-05
    2. '(' → logprob: -10.000045776367188
    3. ' (' → logprob: -14.750045776367188
    4. '((' → logprob: -16.375045776367188
    5. ' i' → logprob: -17.875045776367188
    6. '(int' → logprob: -18.500045776367188
    7. 'i' → logprob: -18.625045776367188
    8. '(a' → logprob: -18.750045776367188
    9. '(
' → logprob: -19.375045776367188
    10. '(I' → logprob: -20.500045776367188

Token 444: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12696139514446259
    2. '+' → logprob: -2.1269614696502686
    3. '+(' → logprob: -11.251961708068848
    4. ')' → logprob: -11.626961708068848
    5. ' ' → logprob: -12.501961708068848
    6. ' ' → logprob: -13.251961708068848
    7. ' -' → logprob: -13.626961708068848
    8. ' plus' → logprob: -13.626961708068848
    9. '+i' → logprob: -14.001961708068848
    10. '-' → logprob: -14.376961708068848

Token 445: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5909209251403809
    2. '10' → logprob: -1.4659209251403809
    3. ' (' → logprob: -1.7159209251403809
    4. ' ' → logprob: -3.340920925140381
    5. '   ' → logprob: -9.715921401977539
    6. '  ' → logprob: -11.090921401977539
    7. ')' → logprob: -11.340921401977539
    8. '```' → logprob: -11.590921401977539
    9. '
' → logprob: -12.090921401977539
    10. '    ' → logprob: -12.215921401977539

Token 446: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06229804828763008
    2. '10' → logprob: -2.812298059463501
    3. ' (' → logprob: -8.062297821044922
    4. ' ' → logprob: -11.312297821044922
    5. '   ' → logprob: -13.562297821044922
    6. '
' → logprob: -14.437297821044922
    7. '```' → logprob: -14.437297821044922
    8. '[' → logprob: -15.687297821044922
    9. '  ' → logprob: -16.562297821044922
    10. ')' → logprob: -17.062297821044922

Token 447: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029751529917120934
    2. '-' → logprob: -3.5297515392303467
    3. ' ' → logprob: -14.154751777648926
    4. ' ' → logprob: -15.779751777648926
    5. ')' → logprob: -15.904751777648926
    6. '   ' → logprob: -17.02975082397461
    7. '-am' → logprob: -17.15475082397461
    8. ' am' → logprob: -17.65475082397461
    9. '  ' → logprob: -18.27975082397461
    10. '	' → logprob: -19.77975082397461

Token 448: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0011703446507453918
    2. ' am' → logprob: -6.7511701583862305
    3. 'amn' → logprob: -16.751171112060547
    4. 'amp' → logprob: -17.501171112060547
    5. 'amu' → logprob: -18.376171112060547
    6. 'ams' → logprob: -19.251171112060547
    7. '<|end|>' → logprob: -19.251171112060547
    8. ')' → logprob: -19.501171112060547
    9. ' ' → logprob: -19.626171112060547
    10. 'a' → logprob: -19.626171112060547

Token 449: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -1.1472419600977446e-06
    2. 'ари' → logprob: -14.375000953674316
    3. 'ar' → logprob: -15.875000953674316
    4. 'ori' → logprob: -16.000001907348633
    5. 'a' → logprob: -16.125001907348633
    6. 'lari' → logprob: -16.875001907348633
    7. 'arii' → logprob: -17.000001907348633
    8. 'arri' → logprob: -17.000001907348633
    9. 'arı' → logprob: -17.625001907348633
    10. 'vari' → logprob: -17.875001907348633

Token 450: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ' )' → logprob: -11.75001335144043
    3. '   ' → logprob: -12.37501335144043
    4. ')
' → logprob: -13.87501335144043
    5. ')#' → logprob: -16.25001335144043
    6. '))' → logprob: -17.50001335144043
    7. '#' → logprob: -18.00001335144043
    8. ')

' → logprob: -18.25001335144043
    9. ' ' → logprob: -18.87501335144043
    10. '）' → logprob: -19.00001335144043

Token 451: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000846671755425632
    2. ' am' → logprob: -7.375846862792969
    3. '       ' → logprob: -9.125846862792969
    4. 'am' → logprob: -9.625846862792969
    5. '    
' → logprob: -11.500846862792969
    6. '<|end|>' → logprob: -11.750846862792969
    7. '```' → logprob: -12.125846862792969
    8. '    ' → logprob: -12.375846862792969
    9. '  ' → logprob: -12.375846862792969
    10. '#' → logprob: -12.625846862792969

Token 452: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056354373693466187
    2. '       ' → logprob: -3.431354284286499
    3. ' am' → logprob: -4.431354522705078
    4. 'am' → logprob: -4.556354522705078
    5. ' ' → logprob: -11.306354522705078
    6. '#' (adapté à ' #') → logprob: -11.556354522705078
    7. '  ' → logprob: -11.556354522705078
    8. '    ' → logprob: -12.056354522705078
    9. '    
' → logprob: -13.056354522705078
    10. ' #' → logprob: -13.306354522705078

Token 453: ' É' (ID: 10055)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0003464289184194058
    2. '   ' → logprob: -8.125346183776855
    3. ' am' → logprob: -10.250346183776855
    4. '       ' → logprob: -11.500346183776855
    5. '#' → logprob: -12.750346183776855
    6. '  ' → logprob: -14.625346183776855
    7. ' ' → logprob: -14.875346183776855
    8. 'amp' → logprob: -15.000346183776855
    9. 'amm' → logprob: -16.375347137451172
    10. 'Am' → logprob: -16.375347137451172

Token 454: 'gal' (ID: 8298)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.005285696126520634
    2. 'm' → logprob: -5.505285739898682
    3. ' am' → logprob: -8.380285263061523
    4. 'crire' → logprob: -8.755285263061523
    5. 'x' → logprob: -9.130285263061523
    6. '#' → logprob: -9.255285263061523
    7. 'mer' → logprob: -9.505285263061523
    8. 'mar' → logprob: -10.005285263061523
    9. 'elif' → logprob: -10.630285263061523
    10. 'rror' → logprob: -10.755285263061523

Token 455: 'ement' (ID: 962)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.9129093289375305
    2. 'ement' → logprob: -1.0379092693328857
    3. 'ment' → logprob: -1.5379092693328857
    4. 'al' → logprob: -4.537909507751465
    5. 'ament' → logprob: -4.537909507751465
    6. 'lement' → logprob: -5.912909507751465
    7. ' am' → logprob: -6.912909507751465
    8. 'er' → logprob: -7.162909507751465
    9. 'emment' → logprob: -7.537909507751465
    10. 'ual' → logprob: -7.662909507751465

Token 456: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3569491505622864
    2. 'am' → logprob: -1.3569490909576416
    3. '       ' → logprob: -3.7319490909576416
    4. ' am' → logprob: -3.9819490909576416
    5. ' ' → logprob: -10.106948852539062
    6. '  ' → logprob: -10.231948852539062
    7. '           ' → logprob: -11.356948852539062
    8. '    ' → logprob: -11.606948852539062
    9. '   ' → logprob: -11.731948852539062
    10. ' ' → logprob: -12.231948852539062

Token 457: ' enregistr' (ID: 76845)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.19294528663158417
    2. '   ' → logprob: -1.9429452419281006
    3. ' am' → logprob: -3.5679452419281006
    4. '       ' → logprob: -5.56794548034668
    5. ' ' → logprob: -10.06794548034668
    6. '  ' → logprob: -10.06794548034668
    7. '    ' → logprob: -10.94294548034668
    8. '           ' → logprob: -11.44294548034668
    9. 'amp' → logprob: -11.69294548034668
    10. '     ' → logprob: -12.44294548034668

Token 458: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.13113698363304138
    2. 'am' → logprob: -2.131136894226074
    3. '(am' → logprob: -6.131136894226074
    4. 'e' → logprob: -7.131136894226074
    5. ' am' → logprob: -7.256136894226074
    6. '.append' → logprob: -8.381136894226074
    7. '_am' → logprob: -9.006136894226074
    8. '(e' → logprob: -10.756136894226074
    9. '(' → logprob: -10.881136894226074
    10. 'append' → logprob: -11.006136894226074

Token 459: ' ce' (ID: 2357)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.00015252856246661395
    2. '(am' → logprob: -9.375152587890625
    3. ' am' → logprob: -9.750152587890625
    4. '(' → logprob: -12.625152587890625
    5. '10' → logprob: -13.375152587890625
    6. 'a' → logprob: -13.875152587890625
    7. 'the' → logprob: -14.125152587890625
    8. '_am' → logprob: -15.125152587890625
    9. 'le' → logprob: -15.250152587890625
    10. 'l' → logprob: -15.875152587890625

Token 460: ' reste' (ID: 26769)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.003161795437335968
    2. ' am' → logprob: -6.003161907196045
    3. '10' → logprob: -7.378161907196045
    4. 'reste' → logprob: -11.003161430358887
    5. ')' → logprob: -11.503161430358887
    6. 'rest' → logprob: -12.128161430358887
    7. 'i' → logprob: -12.253161430358887
    8. 'a' → logprob: -12.378161430358887
    9. 'rem' → logprob: -12.628161430358887
    10. ' ' → logprob: -12.878161430358887

Token 461: ' dans' (ID: 2671)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.5973809957504272
    2. '(am' → logprob: -1.0973809957504272
    3. ' am' → logprob: -2.222381114959717
    4. ' in' → logprob: -5.722381114959717
    5. '   ' → logprob: -6.472381114959717
    6. ' dans' → logprob: -7.472381114959717
    7. 'dans' → logprob: -7.847381114959717
    8. ' (' → logprob: -7.972381114959717
    9. '.append' → logprob: -8.222380638122559
    10. ')' → logprob: -8.347380638122559

Token 462: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0010330495424568653
    2. ' am' → logprob: -6.876032829284668
    3. 'amp' → logprob: -16.501033782958984
    4. ' ' → logprob: -17.001033782958984
    5. ''am' → logprob: -17.376033782958984
    6. '(am' → logprob: -17.751033782958984
    7. '_am' → logprob: -17.751033782958984
    8. '  ' → logprob: -18.251033782958984
    9. 'amm' → logprob: -18.376033782958984
    10. 'a' → logprob: -18.501033782958984

Token 463: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.00024596223374828696
    2. '_' → logprob: -8.625246047973633
    3. 'am' → logprob: -10.625246047973633
    4. 'a' → logprob: -10.625246047973633
    5. 'ar' → logprob: -11.625246047973633
    6. 'ara' → logprob: -14.125246047973633
    7. 'arai' → logprob: -14.250246047973633
    8. 'ami' → logprob: -14.500246047973633
    9. 'lari' → logprob: -14.875246047973633
    10. 'ари' → logprob: -14.875246047973633

Token 464: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.000000953674316
    3. 's' → logprob: -16.75
    4. '_l' → logprob: -17.125
    5. '_li' → logprob: -17.625
    6. '_am' → logprob: -18.25
    7. '_lst' → logprob: -18.25
    8. ' _' → logprob: -18.625
    9. ')_' → logprob: -18.875
    10. 'list' → logprob: -18.875

Token 465: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010747362859547138
    2. 'am' → logprob: -4.76074743270874
    3. ' am' → logprob: -6.51074743270874
    4. '   ' → logprob: -7.38574743270874
    5. '
' → logprob: -12.010746955871582
    6. '(am' → logprob: -12.010746955871582
    7. '        
' → logprob: -12.885746955871582
    8. '           ' → logprob: -12.885746955871582
    9. '      ' → logprob: -13.260746955871582
    10. '```' → logprob: -14.010746955871582

Token 466: ' un' (ID: 537)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.15859299898147583
    2. ' am' → logprob: -2.033592939376831
    3. 'i' → logprob: -5.40859317779541
    4. 'le' → logprob: -6.15859317779541
    5. 'la' → logprob: -6.28359317779541
    6. ' i' → logprob: -6.53359317779541
    7. 'les' → logprob: -6.78359317779541
    8. 'calcul' → logprob: -7.15859317779541
    9. ' les' → logprob: -7.78359317779541
    10. 'non' → logprob: -7.78359317779541

Token 467: ' usage' (ID: 16622)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.6008952856063843
    2. 'e' → logprob: -0.9758952856063843
    3. ' am' → logprob: -3.975895404815674
    4. 'a' → logprob: -4.475895404815674
    5. ' traitement' → logprob: -4.475895404815674
    6. 'possible' → logprob: -5.975895404815674
    7. 'calcul' → logprob: -5.975895404815674
    8. 'al' → logprob: -6.225895404815674
    9. ' usage' → logprob: -6.350895404815674
    10. 'usage' → logprob: -6.350895404815674

Token 468: ' ult' (ID: 11619)
  Prédit: ' ult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ult' → logprob: -0.8154928684234619
    2. ' futur' → logprob: -1.815492868423462
    3. ' future' → logprob: -1.815492868423462
    4. '   ' → logprob: -2.440492868423462
    5. 'future' → logprob: -3.190492868423462
    6. '.append' → logprob: -3.690492868423462
    7. 'f' → logprob: -3.940492868423462
    8. 'ult' → logprob: -4.815492630004883
    9. 'append' → logprob: -4.815492630004883
    10. ' fut' → logprob: -5.190492630004883

Token 469: 'érieur' (ID: 24251)
  Prédit: 'érieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieur' → logprob: -0.04122709110379219
    2. 'er' → logprob: -4.166226863861084
    3. 'isé' → logprob: -4.791226863861084
    4. 'ime' → logprob: -5.041226863861084
    5. 'érieure' → logprob: -5.916226863861084
    6. 'ilise' → logprob: -6.166226863861084
    7. 'il' → logprob: -6.291226863861084
    8. '```' → logprob: -7.041226863861084
    9. 'ile' → logprob: -7.166226863861084
    10. 'itaire' → logprob: -7.791226863861084

Token 470: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1143503487110138
    2. '   ' → logprob: -2.2393503189086914
    3. 'am' → logprob: -7.114350318908691
    4. ' am' → logprob: -7.739350318908691
    5. '
' → logprob: -8.614350318908691
    6. '        
' → logprob: -10.364350318908691
    7. '           ' → logprob: -11.239350318908691
    8. '    
' → logprob: -11.364350318908691
    9. '      ' → logprob: -11.739350318908691
    10. '     ' → logprob: -11.739350318908691

Token 471: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03745925799012184
    2. ''am' → logprob: -4.412459373474121
    3. 'am' → logprob: -5.662459373474121
    4. 'u' → logprob: -5.912459373474121
    5. '<|end|>' → logprob: -5.912459373474121
    6. '```' → logprob: -6.037459373474121
    7. 'es' → logprob: -6.162459373474121
    8. ' am' → logprob: -6.787459373474121
    9. ''' → logprob: -7.287459373474121
    10. ''aj' → logprob: -7.537459373474121

Token 472: 'optim' (ID: 29513)
  Prédit: 'analyse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'analyse' → logprob: -0.7256138920783997
    2. 'optim' → logprob: -1.6006138324737549
    3. ''analyse' → logprob: -1.9756138324737549
    4. 'am' → logprob: -3.100613832473755
    5. 'é' → logprob: -4.600614070892334
    6. 'arr' → logprob: -4.600614070892334
    7. 'e' → logprob: -4.725614070892334
    8. 'an' → logprob: -4.975614070892334
    9. 'éc' → logprob: -4.975614070892334
    10. 'analysis' → logprob: -4.975614070892334

Token 473: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.005500310566276312
    2. 'al' → logprob: -5.880500316619873
    3. 'ization' → logprob: -6.130500316619873
    4. 'iser' → logprob: -7.880500316619873
    5. 'ation' → logprob: -9.255499839782715
    6. 'e' → logprob: -11.755499839782715
    7. 'ale' → logprob: -12.130499839782715
    8. 'alité' → logprob: -12.380499839782715
    9. 'er' → logprob: -12.630499839782715
    10. '#' → logprob: -12.755499839782715

Token 474: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39049047231674194
    2. '   ' → logprob: -1.1404905319213867
    3. '
' → logprob: -6.640490531921387
    4. ' am' → logprob: -6.890490531921387
    5. 'am' → logprob: -7.515490531921387
    6. '        
' → logprob: -8.265490531921387
    7. '    
' → logprob: -9.015490531921387
    8. '  ' → logprob: -9.765490531921387
    9. '           ' → logprob: -10.140490531921387
    10. ' ' → logprob: -10.390490531921387

Token 475: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19143712520599365
    2. '       ' → logprob: -2.191437244415283
    3. 'am' → logprob: -2.816437244415283
    4. ' am' → logprob: -5.941437244415283
    5. '  ' → logprob: -11.816436767578125
    6. '    ' → logprob: -12.816436767578125
    7. '```' → logprob: -12.816436767578125
    8. '      ' → logprob: -13.066436767578125
    9. '(am' → logprob: -13.066436767578125
    10. ' ' → logprob: -13.191436767578125

Token 476: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' (adapté à ' am') → logprob: -0.2791459262371063
    2. '   ' → logprob: -1.6541459560394287
    3. ' am' → logprob: -3.1541459560394287
    4. '       ' → logprob: -4.65414571762085
    5. '  ' → logprob: -9.904146194458008
    6. ' ' → logprob: -10.404146194458008
    7. '    ' → logprob: -11.654146194458008
    8. 'amp' → logprob: -12.529146194458008
    9. '           ' → logprob: -12.654146194458008
    10. '      ' → logprob: -12.779146194458008

Token 477: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -3.531315314830863e-06
    2. 'ar' → logprob: -13.625003814697266
    3. 'ари' → logprob: -14.625003814697266
    4. 'a' → logprob: -14.875003814697266
    5. 'am' → logprob: -14.875003814697266
    6. 'ori' → logprob: -15.000003814697266
    7. 's' → logprob: -15.625003814697266
    8. 'b' → logprob: -16.375003814697266
    9. 'lari' → logprob: -16.625003814697266
    10. 'arii' → logprob: -16.750003814697266

Token 478: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.2200749754119897e-06
    2. '_l' → logprob: -13.875001907348633
    3. '_li' → logprob: -14.375001907348633
    4. '_' → logprob: -14.875001907348633
    5. '_lst' → logprob: -15.750001907348633
    6. ' _' → logprob: -16.125001907348633
    7. 's' → logprob: -17.625001907348633
    8. '_lista' → logprob: -18.500001907348633
    9. '._' → logprob: -18.875001907348633
    10. '=_' → logprob: -19.000001907348633

Token 479: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.16026678681373596
    2. '.' → logprob: -1.9102667570114136
    3. '.ap' → logprob: -10.910266876220703
    4. ' .' → logprob: -11.285266876220703
    5. '.app' → logprob: -11.660266876220703
    6. '.add' → logprob: -13.535266876220703
    7. '.push' → logprob: -14.160266876220703
    8. '.extend' → logprob: -14.785266876220703
    9. '.insert' → logprob: -15.160266876220703
    10. '.py' → logprob: -16.660266876220703

Token 480: '(am' (ID: 158066)
  Prédit: '(am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(am' → logprob: -8.339776832144707e-05
    2. 'am' → logprob: -9.750082969665527
    3. '(' → logprob: -10.625082969665527
    4. '(i' → logprob: -14.375082969665527
    5. ' am' → logprob: -15.875082969665527
    6. '(a' → logprob: -17.250083923339844
    7. '(an' → logprob: -17.625083923339844
    8. ' (' → logprob: -18.375083923339844
    9. ''am' → logprob: -19.000083923339844
    10. '_am' → logprob: -19.375083923339844

Token 481: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.00019901065388694406
    2. 'a' → logprob: -8.750199317932129
    3. 'i' → logprob: -10.250199317932129
    4. 'ori' → logprob: -12.750199317932129
    5. 'ar' → logprob: -14.000199317932129
    6. ' ari' → logprob: -15.125199317932129
    7. ')' → logprob: -15.375199317932129
    8. 'ари' → logprob: -16.000198364257812
    9. 'ai' → logprob: -16.250198364257812
    10. 'arii' → logprob: -16.375198364257812

Token 482: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -14.625000953674316
    4. '   ' → logprob: -17.000001907348633
    5. ')

' → logprob: -17.875001907348633
    6. '))' → logprob: -18.000001907348633
    7. '}' → logprob: -18.500001907348633
    8. ')#' → logprob: -18.500001907348633
    9. ')}' → logprob: -18.625001907348633
    10. '')' → logprob: -18.750001907348633

Token 483: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6919932961463928
    2. '#' → logprob: -1.816993236541748
    3. ' ' → logprob: -1.941993236541748
    4. '\' → logprob: -2.566993236541748
    5. ' 
' → logprob: -3.566993236541748
    6. '+' → logprob: -4.066993236541748
    7. '10' → logprob: -4.941993236541748
    8. '
' → logprob: -4.941993236541748
    9. '.' → logprob: -5.066993236541748
    10. '<|end|>' → logprob: -5.191993236541748

Token 484: ' Après' (ID: 47562)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6280581951141357
    2. '#' → logprob: -1.0030581951141357
    3. 'min' → logprob: -2.5030581951141357
    4. 'am' → logprob: -5.378058433532715
    5. 'total' → logprob: -6.003058433532715
    6. 'minimum' → logprob: -6.003058433532715
    7. 'remaining' → logprob: -6.378058433532715
    8. 'print' → logprob: -6.628058433532715
    9. 'max' → logprob: -7.003058433532715
    10. 'minimal' → logprob: -7.128058433532715

Token 485: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1807725429534912
    2. 'la' → logprob: -1.1807725429534912
    3. ' avoir' → logprob: -2.430772542953491
    4. '#' → logprob: -2.430772542953491
    5. ' cette' → logprob: -2.555772542953491
    6. ' this' → logprob: -4.05577278137207
    7. 'le' → logprob: -4.43077278137207
    8. 'avoir' → logprob: -4.43077278137207
    9. ' le' → logprob: -4.55577278137207
    10. ' cela' → logprob: -4.68077278137207

Token 486: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03274715691804886
    2. '#' → logprob: -4.032747268676758
    3. 'bou' → logprob: -4.407747268676758
    4. 'if' → logprob: -6.907747268676758
    5. ' for' → logprob: -8.032747268676758
    6. 'loop' → logprob: -8.782747268676758
    7. ' boucle' → logprob: -8.907747268676758
    8. 'pour' → logprob: -9.032747268676758
    9. 'fin' → logprob: -9.032747268676758
    10. 'ten' → logprob: -9.407747268676758

Token 487: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4428389072418213
    2. 'if' → logprob: -1.1928389072418213
    3. 'min' → logprob: -4.067838668823242
    4. 'am' → logprob: -4.067838668823242
    5. '
' → logprob: -4.692838668823242
    6. ' if' → logprob: -5.692838668823242
    7. ',' → logprob: -5.942838668823242
    8. 'total' → logprob: -6.192838668823242
    9. 'minimum' → logprob: -7.317838668823242
    10. ' am' → logprob: -8.067838668823242

Token 488: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10607580840587616
    2. '#' → logprob: -2.9810757637023926
    3. 'am' → logprob: -3.9810757637023926
    4. 'min' → logprob: -4.356075763702393
    5. 'total' → logprob: -4.981075763702393
    6. 'max' → logprob: -5.231075763702393
    7. 'minimum' → logprob: -6.481075763702393
    8. 'sorted' → logprob: -6.981075763702393
    9. 'minimal' → logprob: -7.231075763702393
    10. 'ten' → logprob: -7.356075763702393

Token 489: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6028374433517456
    2. 'if' → logprob: -0.8528374433517456
    3. 'am' → logprob: -3.727837562561035
    4. 'total' → logprob: -7.227837562561035
    5. 'ten' → logprob: -7.602837562561035
    6. ' if' → logprob: -7.727837562561035
    7. 'sort' → logprob: -8.477837562561035
    8. ' am' → logprob: -9.102837562561035
    9. '```' → logprob: -9.852837562561035
    10. 'si' → logprob: -10.102837562561035

Token 490: ' une' (ID: 2463)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9840565919876099
    2. 'total' → logprob: -1.1090565919876099
    3. 'if' → logprob: -1.9840565919876099
    4. ' #' → logprob: -3.6090564727783203
    5. ' if' → logprob: -3.8590564727783203
    6. 'len' → logprob: -3.9840564727783203
    7. 'ten' → logprob: -4.10905647277832
    8. ' total' → logprob: -4.23405647277832
    9. 'une' → logprob: -4.23405647277832
    10. 'max' → logprob: -4.85905647277832

Token 491: ' liste' (ID: 31719)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3065386414527893
    2. 'total' → logprob: -1.6815385818481445
    3. 'if' → logprob: -4.4315385818481445
    4. 'liste' → logprob: -4.4315385818481445
    5. 'prem' → logprob: -4.5565385818481445
    6. 's' → logprob: -4.5565385818481445
    7. 'sum' → logprob: -4.9315385818481445
    8. 'max' → logprob: -5.4315385818481445
    9. 'sorted' → logprob: -5.8065385818481445
    10. 'variable' → logprob: -6.1815385818481445

Token 492: ' ten' (ID: 4325)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.08615690469741821
    2. 'des' → logprob: -3.3361568450927734
    3. '#' → logprob: -4.211156845092773
    4. ' des' → logprob: -4.836156845092773
    5. 'sorted' → logprob: -5.086156845092773
    6. ' ten' → logprob: -5.211156845092773
    7. 'final' → logprob: -5.586156845092773
    8. 'total' → logprob: -6.586156845092773
    9. ' complète' → logprob: -6.836156845092773
    10. 'complete' → logprob: -7.086156845092773

Token 493: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -0.0004917914047837257
    2. '_' → logprob: -7.875491619110107
    3. 'up' → logprob: -9.875492095947266
    4. '_down' → logprob: -10.250492095947266
    5. '#' → logprob: -12.375492095947266
    6. '_UP' → logprob: -13.000492095947266
    7. '_sum' → logprob: -13.125492095947266
    8. '_total' → logprob: -13.125492095947266
    9. '\' → logprob: -13.250492095947266
    10. 's' → logprob: -13.750492095947266

Token 494: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.093505099765025e-05
    2. '_' → logprob: -11.125020980834961
    3. 'list' → logprob: -12.750020980834961
    4. '_l' → logprob: -13.750020980834961
    5. '_up' → logprob: -14.250020980834961
    6. '_lst' → logprob: -14.750020980834961
    7. 'List' → logprob: -15.500020980834961
    8. 's' → logprob: -15.750020980834961
    9. '#' → logprob: -15.875020980834961
    10. '_lists' → logprob: -15.875020980834961

Token 495: ' où' (ID: 15113)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.46249687671661377
    2. '<|end|>' → logprob: -1.4624968767166138
    3. 'if' → logprob: -2.712496757507324
    4. '.' → logprob: -2.962496757507324
    5. 'am' → logprob: -5.087496757507324
    6. ',' → logprob: -5.212496757507324
    7. ' if' → logprob: -6.087496757507324
    8. '
' → logprob: -6.587496757507324
    9. '<|end|>' → logprob: -7.337496757507324
    10. 'min' → logprob: -7.337496757507324

Token 496: ' chaque' (ID: 21194)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.24765264987945557
    2. 'cha' → logprob: -1.9976526498794556
    3. 'total' → logprob: -3.497652530670166
    4. 'les' → logprob: -3.622652530670166
    5. 'tout' → logprob: -5.247652530670166
    6. 'la' → logprob: -5.497652530670166
    7. 'ch' → logprob: -5.622652530670166
    8. 'on' → logprob: -5.872652530670166
    9. 's' → logprob: -6.122652530670166
    10. '#' → logprob: -6.122652530670166

Token 497: ' nombre' (ID: 9733)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.10495913028717041
    2. 'nombre' → logprob: -3.104959011077881
    3. ' élément' → logprob: -3.604959011077881
    4. 'val' → logprob: -3.979959011077881
    5. ' nombre' → logprob: -5.479959011077881
    6. ' valeur' → logprob: -5.729959011077881
    7. 'element' → logprob: -7.479959011077881
    8. 'entrée' → logprob: -8.479959487915039
    9. 'él' → logprob: -9.479959487915039
    10. '#' → logprob: -9.479959487915039

Token 498: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.019963264465332
    2. 'est' → logprob: -1.019963264465332
    3. ' est' → logprob: -1.894963264465332
    4. ' a' → logprob: -2.894963264465332
    5. 's' → logprob: -3.644963264465332
    6. '#' → logprob: -4.144963264465332
    7. '.' → logprob: -4.894963264465332
    8. ' has' → logprob: -5.769963264465332
    9. 'n' → logprob: -5.894963264465332
    10. ',' → logprob: -6.269963264465332

Token 499: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.01652343012392521
    2. ' été' → logprob: -4.391523361206055
    3. 'ét' → logprob: -6.766523361206055
    4. 'dé' → logprob: -6.766523361206055
    5. 't' → logprob: -7.266523361206055
    6. 'é' → logprob: -7.516523361206055
    7. '```' → logprob: -9.891523361206055
    8. '#' → logprob: -9.891523361206055
    9. 's' → logprob: -10.266523361206055
    10. 'éta' → logprob: -10.266523361206055

Token 500: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.022176750004291534
    2. ' arr' → logprob: -3.897176742553711
    3. 'aj' → logprob: -7.522176742553711
    4. 'r' → logprob: -8.022176742553711
    5. 'mod' → logprob: -9.022176742553711
    6. 'transform' → logprob: -9.147176742553711
    7. 'calcul' → logprob: -9.147176742553711
    8. '#' → logprob: -9.272176742553711
    9. 'convert' → logprob: -9.897176742553711
    10. ' remplac' → logprob: -10.147176742553711

Token 501: 'ondi' (ID: 117409)
  Prédit: 'ondi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.00015943869948387146
    2. 'ond' → logprob: -8.75015926361084
    3. 'on' → logprob: -14.00015926361084
    4. 'ondissement' → logprob: -16.250160217285156
    5. 'ound' → logprob: -19.250160217285156
    6. 'ont' → logprob: -19.250160217285156
    7. 'o' → logprob: -20.250160217285156
    8. 'onzi' → logprob: -20.500160217285156
    9. 'onni' → logprob: -20.750160217285156
    10. 'онд' → logprob: -21.500160217285156

Token 502: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.6348838806152344
    2. ' au' → logprob: -0.7598838806152344
    3. '#' → logprob: -7.634883880615234
    4. '.' → logprob: -8.134883880615234
    5. 'à' → logprob: -8.384883880615234
    6. ' #' → logprob: -8.384883880615234
    7. ' aux' → logprob: -9.009883880615234
    8. ' à' → logprob: -9.009883880615234
    9. ' jusqu' → logprob: -9.134883880615234
    10. ' ' → logprob: -9.384883880615234

Token 503: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.007372469175606966
    2. 'multip' → logprob: -5.5073723793029785
    3. ' multiple' → logprob: -6.2573723793029785
    4. 'sup' → logprob: -7.1323723793029785
    5. ' supérieur' → logprob: -9.132372856140137
    6. '10' → logprob: -9.132372856140137
    7. 'plus' → logprob: -9.757372856140137
    8. '```' → logprob: -10.007372856140137
    9. 'uple' → logprob: -10.132372856140137
    10. 'd' → logprob: -10.132372856140137

Token 504: ' de' (ID: 334)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.6207820773124695
    2. 'sup' → logprob: -0.9957820773124695
    3. 'super' → logprob: -2.7457821369171143
    4. 'su' → logprob: -4.370781898498535
    5. 's' → logprob: -4.745781898498535
    6. 'de' → logprob: -6.495781898498535
    7. '<|end|>' → logprob: -6.870781898498535
    8. ' sup' → logprob: -7.370781898498535
    9. '```' → logprob: -7.495781898498535
    10. ' de' → logprob: -7.495781898498535

Token 505: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001666611758992076
    2. 'd' → logprob: -6.87666654586792
    3. ' ' → logprob: -7.37666654586792
    4. ' dix' → logprob: -12.876667022705078
    5. '```' → logprob: -13.001667022705078
    6. '_' → logprob: -13.501667022705078
    7. ' ' → logprob: -15.126667022705078
    8. '<|end|>' → logprob: -15.251667022705078
    9. 'l' → logprob: -15.501667022705078
    10. '.' → logprob: -15.626667022705078

Token 506: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.6060808522743173e-05
    2. ' ' → logprob: -11.375025749206543
    3. '```' → logprob: -11.625025749206543
    4. 'd' → logprob: -12.875025749206543
    5. ',' → logprob: -13.875025749206543
    6. '.' → logprob: -14.125025749206543
    7. '#' → logprob: -15.250025749206543
    8. '`' → logprob: -15.875025749206543
    9. '...' → logprob: -16.25002670288086
    10. '1' → logprob: -16.75002670288086

Token 507: ' supérieur' (ID: 98491)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.33747830986976624
    2. '
' → logprob: -1.7124782800674438
    3. '.' → logprob: -2.9624783992767334
    4. 'if' → logprob: -3.9624783992767334
    5. 'am' → logprob: -4.337478160858154
    6. ',' → logprob: -5.462478160858154
    7. '<|end|>' → logprob: -5.837478160858154
    8. '
' → logprob: -6.212478160858154
    9. ' if' → logprob: -6.587478160858154
    10. '

' → logprob: -6.587478160858154

Token 508: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11621540039777756
    2. '<|end|>' → logprob: -3.366215467453003
    3. 'if' → logprob: -3.491215467453003
    4. '
' → logprob: -3.991215467453003
    5. '.' → logprob: -4.116215229034424
    6. ',' → logprob: -6.116215229034424
    7. 'am' → logprob: -6.366215229034424
    8. ' if' → logprob: -6.491215229034424
    9. ' #' → logprob: -7.116215229034424
    10. ')' → logprob: -7.866215229034424

Token 509: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5366119742393494
    2. '#' → logprob: -0.9116119742393494
    3. 'min' → logprob: -4.536612033843994
    4. 'minimum' → logprob: -6.911612033843994
    5. '
' → logprob: -7.411612033843994
    6. 'max' → logprob: -8.161611557006836
    7. ' if' → logprob: -8.286611557006836
    8. '```' → logprob: -8.536611557006836
    9. '\' → logprob: -10.286611557006836
    10. 'remaining' → logprob: -10.536611557006836

Token 510: ' Ajouter' (ID: 165754)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0697922706604004
    2. 'total' → logprob: -1.0697922706604004
    3. '#' → logprob: -1.4447922706604004
    4. 'for' → logprob: -3.0697922706604004
    5. 'min' → logprob: -4.0697922706604
    6. 'am' → logprob: -5.3197922706604
    7. 'minimum' → logprob: -5.3197922706604
    8. 'sorted' → logprob: -6.9447922706604
    9. 'minimal' → logprob: -7.0697922706604
    10. 'remaining' → logprob: -7.5697922706604

Token 511: ' toutes' (ID: 17502)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.04088442400097847
    2. 'for' → logprob: -4.415884494781494
    3. 'sum' → logprob: -4.665884494781494
    4. 'max' → logprob: -4.665884494781494
    5. ' total' → logprob: -6.040884494781494
    6. '(total' → logprob: -6.165884494781494
    7. 'min' → logprob: -6.665884494781494
    8. 'ten' → logprob: -7.040884494781494
    9. 'if' → logprob: -7.165884494781494
    10. '(' → logprob: -7.790884494781494

Token 512: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4119033217430115
    2. 'ten' → logprob: -1.6619033813476562
    3. 'for' → logprob: -3.0369033813476562
    4. 'val' → logprob: -3.0369033813476562
    5. 'sum' → logprob: -3.7869033813476562
    6. 'total' → logprob: -4.411903381347656
    7. 'value' → logprob: -5.286903381347656
    8. '(sum' → logprob: -6.286903381347656
    9. '(total' → logprob: -6.911903381347656
    10. 'i' → logprob: -6.911903381347656

Token 513: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.18179640173912048
    2. 'ten' → logprob: -2.5567963123321533
    3. 'values' → logprob: -3.0567963123321533
    4. 'value' → logprob: -3.8067963123321533
    5. 'elements' → logprob: -5.181796550750732
    6. 'for' → logprob: -5.431796550750732
    7. 'num' → logprob: -6.056796550750732
    8. 'numbers' → logprob: -6.181796550750732
    9. 'x' → logprob: -6.931796550750732
    10. 'vals' → logprob: -7.181796550750732

Token 514: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1026197001338005
    2. 'de' → logprob: -3.6026196479797363
    3. 'pour' → logprob: -3.7276196479797363
    4. 'dans' → logprob: -4.102619647979736
    5. 'ten' → logprob: -4.227619647979736
    6. 'total' → logprob: -4.477619647979736
    7. 'à' → logprob: -7.102619647979736
    8. '=' → logprob: -7.352619647979736
    9. 'to' → logprob: -8.102620124816895
    10. ' for' → logprob: -8.102620124816895

Token 515: ' ten' (ID: 4325)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -3.5954712075181305e-05
    2. ' ten' → logprob: -10.250036239624023
    3. '```' → logprob: -15.875036239624023
    4. '`' → logprob: -16.250036239624023
    5. '10' → logprob: -16.625036239624023
    6. 'tent' → logprob: -16.875036239624023
    7. 'the' → logprob: -17.875036239624023
    8. 'range' → logprob: -18.250036239624023
    9. 'Ten' → logprob: -18.250036239624023
    10. 'total' → logprob: -18.375036239624023

Token 516: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -4.8351892473874614e-05
    2. '_sum' → logprob: -10.625048637390137
    3. 'up' → logprob: -11.000048637390137
    4. '_' → logprob: -12.625048637390137
    5. 'sum' → logprob: -12.750048637390137
    6. '_down' → logprob: -15.625048637390137
    7. '_total' → logprob: -16.12504768371582
    8. '_UP' → logprob: -16.25004768371582
    9. '_u' → logprob: -16.37504768371582
    10. ' _' → logprob: -16.62504768371582

Token 517: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.566264295950532e-05
    2. '_up' → logprob: -9.875085830688477
    3. 'list' → logprob: -10.750085830688477
    4. 'up' → logprob: -11.500085830688477
    5. '_' → logprob: -13.000085830688477
    6. '_lst' → logprob: -16.625085830688477
    7. 'List' → logprob: -16.625085830688477
    8. 'ist' → logprob: -17.000085830688477
    9. '_l' → logprob: -17.125085830688477
    10. '_lists' → logprob: -17.125085830688477

Token 518: ' pour' (ID: 1930)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9047889709472656
    2. '=' → logprob: -1.7797889709472656
    3. 'sum' → logprob: -1.9047889709472656
    4. 'for' → logprob: -1.9047889709472656
    5. ' =' → logprob: -2.4047889709472656
    6. '=sum' → logprob: -4.154788970947266
    7. '_sum' → logprob: -4.904788970947266
    8. '(total' → logprob: -5.154788970947266
    9. '_total' → logprob: -5.529788970947266
    10. '(sum' → logprob: -6.279788970947266

Token 519: ' obtenir' (ID: 54423)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.033676933497190475
    2. ' total' → logprob: -3.408676862716675
    3. '_total' → logprob: -11.908677101135254
    4. 'calcul' → logprob: -12.033677101135254
    5. ' obtenir' → logprob: -12.158677101135254
    6. '_' → logprob: -12.283677101135254
    7. 'i' → logprob: -12.408677101135254
    8. 'final' → logprob: -13.908677101135254
    9. 'calculate' → logprob: -14.783677101135254
    10. 'get' → logprob: -14.908677101135254

Token 520: ' le' (ID: 505)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.01838638447225094
    2. ' total' → logprob: -4.643386363983154
    3. 'sum' → logprob: -4.768386363983154
    4. ' sum' → logprob: -10.268386840820312
    5. 'le' → logprob: -10.518386840820312
    6. '(total' → logprob: -11.393386840820312
    7. ' la' → logprob: -11.768386840820312
    8. 'la' → logprob: -12.018386840820312
    9. ' le' → logprob: -12.518386840820312
    10. '_total' → logprob: -13.268386840820312

Token 521: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.23073360323905945
    2. 'sum' → logprob: -1.6057336330413818
    3. ' total' → logprob: -5.480733394622803
    4. ' sum' → logprob: -6.980733394622803
    5. 's' → logprob: -9.480733871459961
    6. 'final' → logprob: -9.855733871459961
    7. 'minimum' → logprob: -10.355733871459961
    8. 'result' → logprob: -11.480733871459961
    9. 'initial' → logprob: -11.480733871459961
    10. 'min' → logprob: -11.980733871459961

Token 522: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0003570343542378396
    2. '=' → logprob: -8.750356674194336
    3. 'for' → logprob: -8.875356674194336
    4. '(total' → logprob: -10.750356674194336
    5. 'sum' → logprob: -11.125356674194336
    6. ' total' → logprob: -11.250356674194336
    7. ' =' → logprob: -12.125356674194336
    8. '+=' → logprob: -13.250356674194336
    9. '
' → logprob: -13.875356674194336
    10. '_total' → logprob: -15.250356674194336

Token 523: 'for' (ID: 1938)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0009342094417661428
    2. 'for' → logprob: -7.00093412399292
    3. ' total' → logprob: -10.750934600830078
    4. '```' → logprob: -14.875934600830078
    5. '(total' → logprob: -15.125934600830078
    6. '=' → logprob: -15.625934600830078
    7. ' for' → logprob: -15.875934600830078
    8. 'sum' → logprob: -16.250934600830078
    9. '
' → logprob: -16.375934600830078
    10. 'print' → logprob: -16.625934600830078

Token 524: ' i' (ID: 575)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.21634064614772797
    2. 'value' → logprob: -2.2163405418395996
    3. 'x' → logprob: -3.5913405418395996
    4. 'val' → logprob: -3.8413405418395996
    5. 'number' → logprob: -4.0913405418396
    6. 'i' → logprob: -4.9663405418396
    7. 'n' → logprob: -4.9663405418396
    8. 'item' → logprob: -6.4663405418396
    9. ' num' → logprob: -6.8413405418396
    10. 'v' → logprob: -6.8413405418396

Token 525: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20150592923164368
    2. 'in' → logprob: -1.7015058994293213
    3. ' ' → logprob: -10.326505661010742
    4. 'ten' → logprob: -10.326505661010742
    5. '  ' → logprob: -11.701505661010742
    6. '	in' → logprob: -12.826505661010742
    7. 'import' → logprob: -12.951505661010742
    8. '_' → logprob: -13.076505661010742
    9. ' i' → logprob: -13.201505661010742
    10. '_in' → logprob: -13.576505661010742

Token 526: ' ten' (ID: 4325)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.008622609078884125
    2. ' ten' → logprob: -4.758622646331787
    3. 'range' → logprob: -12.508622169494629
    4. '   ' → logprob: -13.633622169494629
    5. ' range' → logprob: -13.758622169494629
    6. ' ' → logprob: -14.008622169494629
    7. '  ' → logprob: -15.133622169494629
    8. '10' → logprob: -15.383622169494629
    9. '```' → logprob: -15.633622169494629
    10. 'total' → logprob: -16.258623123168945

Token 527: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.500001907348633
    3. 'up' → logprob: -14.250001907348633
    4. '_list' → logprob: -17.125001907348633
    5. '_UP' → logprob: -17.375001907348633
    6. '_down' → logprob: -18.500001907348633
    7. '_u' → logprob: -19.000001907348633
    8. ' up' → logprob: -19.250001907348633
    9. 'Up' → logprob: -19.500001907348633
    10. '_to' → logprob: -19.750001907348633

Token 528: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.300083648762666e-05
    2. 'list' → logprob: -9.875053405761719
    3. '_' → logprob: -14.625053405761719
    4. '_up' → logprob: -14.750053405761719
    5. 'up' → logprob: -15.125053405761719
    6. 'List' → logprob: -15.375053405761719
    7. '_l' → logprob: -16.62505340576172
    8. 'ist' → logprob: -17.50005340576172
    9. '_lst' → logprob: -18.37505340576172
    10. '_lists' → logprob: -18.62505340576172

Token 529: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00047285633627325296
    2. '   ' → logprob: -8.500473022460938
    3. ':
' → logprob: -8.500473022460938
    4. 'total' → logprob: -10.500473022460938
    5. '=' → logprob: -11.375473022460938
    6. '+' → logprob: -12.125473022460938
    7. '+:' → logprob: -12.375473022460938
    8. ' :' → logprob: -12.875473022460938
    9. '+=' → logprob: -13.000473022460938
    10. ':
' → logprob: -13.250473022460938

Token 530: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22646328806877136
    2. 'total' → logprob: -1.8514633178710938
    3. ' total' → logprob: -3.1014633178710938
    4. '	total' → logprob: -8.101463317871094
    5. ' ' → logprob: -8.601463317871094
    6. '(total' → logprob: -9.851463317871094
    7. '  ' → logprob: -9.976463317871094
    8. '    
' → logprob: -10.726463317871094
    9. '    ' → logprob: -11.226463317871094
    10. '       ' → logprob: -11.601463317871094

Token 531: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.027776086702942848
    2. ' total' → logprob: -3.652776002883911
    3. '   ' → logprob: -6.52777624130249
    4. '	total' → logprob: -11.402775764465332
    5. ' ' → logprob: -14.527775764465332
    6. '  ' → logprob: -15.777775764465332
    7. '```' → logprob: -16.02777671813965
    8. ',total' → logprob: -16.15277671813965
    9. '_total' → logprob: -16.27777671813965
    10. 'Total' → logprob: -16.52777671813965

Token 532: ' Ajouter' (ID: 165754)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -2.2603901015827432e-05
    2. ' total' → logprob: -10.750022888183594
    3. '   ' → logprob: -13.750022888183594
    4. '	total' → logprob: -19.125022888183594
    5. ' ' → logprob: -22.125022888183594
    6. '  ' → logprob: -22.625022888183594
    7. 'Total' → logprob: -23.250022888183594
    8. '```' → logprob: -24.250022888183594
    9. '(total' → logprob: -24.375022888183594
    10. 'tot' → logprob: -24.375022888183594

Token 533: ' la' (ID: 557)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.04738568887114525
    2. ' total' → logprob: -3.4223856925964355
    3. 'i' → logprob: -4.4223856925964355
    4. ' i' → logprob: -6.5473856925964355
    5. '   ' → logprob: -8.547385215759277
    6. '	total' → logprob: -12.672385215759277
    7. ' ' → logprob: -12.797385215759277
    8. 'to' → logprob: -13.672385215759277
    9. '    ' → logprob: -14.297385215759277
    10. ' to' → logprob: -14.297385215759277

Token 534: ' valeur' (ID: 41664)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.018488790839910507
    2. 'i' → logprob: -4.018488883972168
    3. ' total' → logprob: -8.018488883972168
    4. ' i' → logprob: -11.643488883972168
    5. '   ' → logprob: -14.768488883972168
    6. 'value' → logprob: -16.39348793029785
    7. ' ' → logprob: -17.14348793029785
    8. 't' → logprob: -17.39348793029785
    9. '_total' → logprob: -17.76848793029785
    10. '	total' → logprob: -17.76848793029785

Token 535: ' cour' (ID: 2871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32087960839271545
    2. 'total' → logprob: -1.320879578590393
    3. '+=' → logprob: -5.8208794593811035
    4. ' total' → logprob: -5.8208794593811035
    5. '=' → logprob: -7.1958794593811035
    6. ' +=' → logprob: -7.3208794593811035
    7. 'to' → logprob: -9.695879936218262
    8. '(total' → logprob: -10.070879936218262
    9. ' to' → logprob: -10.320879936218262
    10. '	total' → logprob: -10.320879936218262

Token 536: 'ante' (ID: 2116)
  Prédit: 'rent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rent' → logprob: -0.21182595193386078
    2. 'ent' → logprob: -1.836825966835022
    3. 'r' → logprob: -3.7118258476257324
    4. 'ente' → logprob: -5.836825847625732
    5. 'ant' → logprob: -6.211825847625732
    6. 'nt' → logprob: -7.586825847625732
    7. 'ante' → logprob: -7.711825847625732
    8. '   ' → logprob: -8.33682632446289
    9. 're' → logprob: -8.58682632446289
    10. 'ur' → logprob: -8.71182632446289

Token 537: ' de' (ID: 334)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.008860021829605103
    2. ' total' → logprob: -4.758860111236572
    3. '+=' → logprob: -8.758859634399414
    4. '   ' → logprob: -10.258859634399414
    5. ' +=' → logprob: -11.008859634399414
    6. ' ' → logprob: -12.008859634399414
    7. '+' → logprob: -12.133859634399414
    8. '=' → logprob: -12.258859634399414
    9. 'to' → logprob: -12.258859634399414
    10. '
' → logprob: -12.508859634399414

Token 538: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00044592362246476114
    2. ' i' → logprob: -7.75044584274292
    3. 'total' → logprob: -11.125446319580078
    4. '   ' → logprob: -15.875446319580078
    5. '	i' → logprob: -16.000446319580078
    6. ' total' → logprob: -16.375446319580078
    7. ' ' → logprob: -16.500446319580078
    8. '  ' → logprob: -18.125446319580078
    9. '```' → logprob: -19.750446319580078
    10. '    ' → logprob: -19.750446319580078

Token 539: ' à' (ID: 1221)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7385528087615967
    2. '   ' → logprob: -1.3635528087615967
    3. 'total' → logprob: -1.8635528087615967
    4. ' +=' → logprob: -2.8635528087615967
    5. 'to' → logprob: -3.7385528087615967
    6. ' to' → logprob: -4.613553047180176
    7. '=' → logprob: -5.363553047180176
    8. ':' → logprob: -5.488553047180176
    9. '+' → logprob: -5.613553047180176
    10. ' ' → logprob: -5.863553047180176

Token 540: ' la' (ID: 557)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0007104054093360901
    2. ' total' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.000710487365723
    4. ' ' → logprob: -17.875709533691406
    5. '	total' → logprob: -18.250709533691406
    6. '  ' → logprob: -19.500709533691406
    7. 't' → logprob: -20.125709533691406
    8. 'to' → logprob: -21.500709533691406
    9. '```' → logprob: -21.500709533691406
    10. '_total' → logprob: -21.625709533691406

Token 541: ' variable' (ID: 11076)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.306760805164231e-05
    2. ' total' → logprob: -11.25001335144043
    3. 't' → logprob: -21.00001335144043
    4. 'otal' → logprob: -21.12501335144043
    5. '_total' → logprob: -21.75001335144043
    6. '	total' → logprob: -22.25001335144043
    7. '   ' → logprob: -22.37501335144043
    8. 'to' → logprob: -22.37501335144043
    9. 'tot' → logprob: -22.50001335144043
    10. 'Total' → logprob: -22.87501335144043

Token 542: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.03804366663098335
    2. ' total' → logprob: -3.288043737411499
    3. ' ' → logprob: -14.163043975830078
    4. '	total' → logprob: -14.663043975830078
    5. '(total' → logprob: -15.038043975830078
    6. '   ' → logprob: -15.288043975830078
    7. '_total' → logprob: -15.288043975830078
    8. 't' → logprob: -16.288043975830078
    9. '$total' → logprob: -16.913043975830078
    10. '  ' → logprob: -17.163043975830078

Token 543: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0718240812420845
    2. 'total' → logprob: -3.196824073791504
    3. ' total' → logprob: -3.571824073791504
    4. '	total' → logprob: -8.446824073791504
    5. '(total' → logprob: -10.196824073791504
    6. '=' → logprob: -11.196824073791504
    7. '    
' → logprob: -11.946824073791504
    8. '       ' → logprob: -12.196824073791504
    9. '+' → logprob: -12.196824073791504
    10. ',total' → logprob: -12.196824073791504

Token 544: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10066801309585571
    2. ' total' → logprob: -2.975667953491211
    3. 'total' → logprob: -3.225667953491211
    4. '+' → logprob: -6.600667953491211
    5. ' +=' → logprob: -6.600667953491211
    6. '=' → logprob: -6.725667953491211
    7. '+=' → logprob: -7.350667953491211
    8. '	total' → logprob: -8.850667953491211
    9. ' =' → logprob: -9.350667953491211
    10. ' ' → logprob: -9.600667953491211

Token 545: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0009331366163678467
    2. ' total' → logprob: -7.0009331703186035
    3. '   ' → logprob: -10.750932693481445
    4. '	total' → logprob: -15.750932693481445
    5. '  ' → logprob: -20.000932693481445
    6. '    
' → logprob: -20.125932693481445
    7. 't' → logprob: -20.125932693481445
    8. '_total' → logprob: -20.250932693481445
    9. ' ' → logprob: -20.875932693481445
    10. 'Total' → logprob: -21.250932693481445

Token 546: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20164547860622406
    2. ' +=' → logprob: -1.7016454935073853
    3. '+' → logprob: -9.076645851135254
    4. '=' → logprob: -9.076645851135254
    5. ']+=' → logprob: -13.451645851135254
    6. '   ' → logprob: -14.201645851135254
    7. '+=(' → logprob: -15.076645851135254
    8. '+="' → logprob: -15.076645851135254
    9. '+='' → logprob: -15.201645851135254
    10. ' ' → logprob: -15.826645851135254

Token 547: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007099286303855479
    2. ' i' → logprob: -7.2507100105285645
    3. '	i' → logprob: -19.375709533691406
    4. '   ' → logprob: -20.250709533691406
    5. '_i' → logprob: -23.375709533691406
    6. ' ' → logprob: -23.500709533691406
    7. '(i' → logprob: -23.875709533691406
    8. 'int' → logprob: -23.875709533691406
    9. '  ' → logprob: -24.625709533691406
    10. ' ' → logprob: -24.625709533691406

Token 548: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01686938852071762
    2. 'if' → logprob: -4.39186954498291
    3. 'min' → logprob: -6.39186954498291
    4. 'print' → logprob: -6.76686954498291
    5. 'minimum' → logprob: -7.39186954498291
    6. '<|end|>' → logprob: -8.64186954498291
    7. 'max' → logprob: -9.14186954498291
    8. '```' → logprob: -9.64186954498291
    9. '
' → logprob: -9.76686954498291
    10. '#print' → logprob: -9.89186954498291

Token 549: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12274385243654251
    2. 'if' → logprob: -2.872743844985962
    3. '
' → logprob: -3.497743844985962
    4. 'min' → logprob: -4.497744083404541
    5. 'print' → logprob: -5.372744083404541
    6. '

' → logprob: -5.622744083404541
    7. '
' → logprob: -5.872744083404541
    8. 'minimum' → logprob: -5.997744083404541
    9. 'max' → logprob: -7.372744083404541
    10. 'total' → logprob: -8.122743606567383

Token 550: ' Ensuite' (ID: 113884)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2646423578262329
    2. 'if' → logprob: -2.2646422386169434
    3. 'min' → logprob: -2.2646422386169434
    4. 'minimum' → logprob: -5.139642238616943
    5. 'remaining' → logprob: -5.514642238616943
    6. 'am' → logprob: -5.764642238616943
    7. 'best' → logprob: -6.014642238616943
    8. 'sorted' → logprob: -6.139642238616943
    9. 'print' → logprob: -6.639642238616943
    10. 'minimal' → logprob: -6.764642238616943

Token 551: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22146210074424744
    2. 'min' → logprob: -2.5964620113372803
    3. 'if' → logprob: -2.8464620113372803
    4. 'am' → logprob: -2.8464620113372803
    5. 'minimum' → logprob: -5.596462249755859
    6. 'sorted' → logprob: -7.971462249755859
    7. ',' → logprob: -8.22146224975586
    8. '
' → logprob: -8.22146224975586
    9. 'max' → logprob: -8.34646224975586
    10. 'for' → logprob: -8.34646224975586

Token 552: ' il' (ID: 1793)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.60108482837677
    2. 'min' → logprob: -1.60108482837677
    3. '#' → logprob: -1.85108482837677
    4. 'am' → logprob: -2.6010847091674805
    5. 'minimum' → logprob: -4.9760847091674805
    6. 'for' → logprob: -5.9760847091674805
    7. 'best' → logprob: -6.1010847091674805
    8. 'sorted' → logprob: -6.6010847091674805
    9. 'minimal' → logprob: -6.6010847091674805
    10. 'max' → logprob: -7.3510847091674805

Token 553: ' y' (ID: 342)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7114757299423218
    2. ' faut' → logprob: -0.9614757299423218
    3. 'f' → logprob: -2.8364758491516113
    4. ' faudra' → logprob: -3.9614758491516113
    5. ' semble' → logprob: -4.336475849151611
    6. ' manque' → logprob: -4.461475849151611
    7. ' reste' → logprob: -4.461475849151611
    8. ' faudrait' → logprob: -4.586475849151611
    9. 's' → logprob: -7.336475849151611
    10. 'rest' → logprob: -7.711475849151611

Token 554: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2595347762107849
    2. ' a' → logprob: -1.7595348358154297
    3. '#' → logprob: -3.3845348358154297
    4. '#a' → logprob: -3.8845348358154297
    5. ''a' → logprob: -6.75953483581543
    6. 'avait' → logprob: -8.38453483581543
    7. ' aura' → logprob: -9.00953483581543
    8. ' avait' → logprob: -9.00953483581543
    9. '_a' → logprob: -9.50953483581543
    10. ' faut' → logprob: -10.13453483581543

Token 555: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.582831084728241
    2. 'une' → logprob: -1.4578311443328857
    3. ' un' → logprob: -1.9578311443328857
    4. '#' → logprob: -3.2078311443328857
    5. 'un' → logprob: -4.957830905914307
    6. ' #' → logprob: -5.082830905914307
    7. ' a' → logprob: -5.582830905914307
    8. ' ' → logprob: -5.707830905914307
    9. 'a' → logprob: -6.332830905914307
    10. ' probablement' → logprob: -6.707830905914307

Token 556: ' optimisation' (ID: 139802)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2781776487827301
    2. '#' → logprob: -1.6531776189804077
    3. 'poss' → logprob: -4.528177738189697
    4. 'am' → logprob: -4.653177738189697
    5. 'possible' → logprob: -4.778177738189697
    6. ' if' → logprob: -5.403177738189697
    7. 'si' → logprob: -6.028177738189697
    8. 'for' → logprob: -6.028177738189697
    9. '```' → logprob: -6.278177738189697
    10. 'condition' → logprob: -6.278177738189697

Token 557: ' :' (ID: 712)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0842057392001152
    2. '#' → logprob: -2.8342056274414062
    3. 'possible' → logprob: -4.209205627441406
    4. ' if' → logprob: -6.084205627441406
    5. 'am' → logprob: -6.334205627441406
    6. ':' → logprob: -6.834205627441406
    7. '_possible' → logprob: -7.334205627441406
    8. 'for' → logprob: -8.834205627441406
    9. 'max' → logprob: -8.834205627441406
    10. ' possible' → logprob: -8.834205627441406

Token 558: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15755251049995422
    2. 'min' → logprob: -2.782552480697632
    3. '#' → logprob: -3.032552480697632
    4. 'am' → logprob: -3.532552480697632
    5. 'best' → logprob: -6.282552719116211
    6. 'for' → logprob: -6.657552719116211
    7. 'minimum' → logprob: -7.532552719116211
    8. 'max' → logprob: -7.532552719116211
    9. 'sorted' → logprob: -7.657552719116211
    10. 'remaining' → logprob: -8.032552719116211

Token 559: ' réduit' (ID: 120775)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27911120653152466
    2. 'if' → logprob: -1.6541111469268799
    3. 'try' → logprob: -4.279111385345459
    4. 'for' → logprob: -4.279111385345459
    5. ' essa' → logprob: -5.654111385345459
    6. 'cherche' → logprob: -5.904111385345459
    7. ' #' → logprob: -6.029111385345459
    8. ' try' → logprob: -6.279111385345459
    9. 'continue' → logprob: -6.654111385345459
    10. ' va' → logprob: -6.654111385345459

Token 560: ' le' (ID: 505)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2195015847682953
    2. ' total' → logprob: -2.594501495361328
    3. 'le' → logprob: -2.844501495361328
    4. ' le' → logprob: -3.219501495361328
    5. ' ' → logprob: -4.969501495361328
    6. 'l' → logprob: -4.969501495361328
    7. 'la' → logprob: -5.969501495361328
    8. '#' → logprob: -5.969501495361328
    9. ' la' → logprob: -6.094501495361328
    10. ' l' → logprob: -7.094501495361328

Token 561: ' gasp' (ID: 165650)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.511707603931427
    2. 'éc' → logprob: -1.3867075443267822
    3. 'total' → logprob: -3.2617075443267822
    4. 'if' → logprob: -3.8867075443267822
    5. '#' → logprob: -4.261707782745361
    6. 'diff' → logprob: -4.386707782745361
    7. 'ec' → logprob: -4.511707782745361
    8. 'es' → logprob: -4.886707782745361
    9. 'for' → logprob: -4.886707782745361
    10. 'max' → logprob: -5.386707782745361

Token 562: 'illage' (ID: 44473)
  Prédit: 'illage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illage' → logprob: -0.0003478593716863543
    2. 'ille' → logprob: -8.375348091125488
    3. 'age' → logprob: -9.750348091125488
    4. 'ill' → logprob: -10.375348091125488
    5. 'ilage' → logprob: -11.000348091125488
    6. 'il' → logprob: -12.375348091125488
    7. 'illeur' → logprob: -13.000348091125488
    8. 'tage' → logprob: -13.500348091125488
    9. 'iller' → logprob: -14.000348091125488
    10. 'e' → logprob: -14.375348091125488

Token 563: ' caus' (ID: 20635)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36849382519721985
    2. '#' → logprob: -2.4934937953948975
    3. ' if' → logprob: -3.4934937953948975
    4. ' de' → logprob: -3.8684937953948975
    5. 'if' → logprob: -3.8684937953948975
    6. '_possible' → logprob: -3.9934937953948975
    7. 's' → logprob: -4.118494033813477
    8. ' ' → logprob: -4.243494033813477
    9. 'possible' → logprob: -4.493494033813477
    10. 'de' → logprob: -4.743494033813477

Token 564: 'é' (ID: 377)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6129121780395508
    2. 'par' → logprob: -0.8629121780395508
    3. 'é' → logprob: -3.987912178039551
    4. 'e' → logprob: -4.237912178039551
    5. '#' → logprob: -6.362912178039551
    6. 'by' → logprob: -7.612912178039551
    7. ' by' → logprob: -8.23791217803955
    8. 'à' → logprob: -8.36291217803955
    9. 'au' → logprob: -8.73791217803955
    10. ' #' → logprob: -9.11291217803955

Token 565: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.35407859086990356
    2. 'par' → logprob: -1.2290785312652588
    3. '#' → logprob: -5.479078769683838
    4. ' by' → logprob: -7.354078769683838
    5. 'by' → logprob: -7.479078769683838
    6. ' #' → logprob: -9.60407829284668
    7. ' ' → logprob: -10.35407829284668
    8. ' des' → logprob: -10.97907829284668
    9. '<|end|>' → logprob: -11.22907829284668
    10. 'des' → logprob: -11.35407829284668

Token 566: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4855365753173828
    2. 'le' → logprob: -1.8605365753173828
    3. 'la' → logprob: -2.110536575317383
    4. '10' → logprob: -2.235536575317383
    5. 'max' → logprob: -2.360536575317383
    6. 'am' → logprob: -2.735536575317383
    7. ' l' → logprob: -2.985536575317383
    8. '#' → logprob: -3.735536575317383
    9. ' la' → logprob: -3.860536575317383
    10. 'ten' → logprob: -3.985536575317383

Token 567: '’arr' (ID: 51821)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05147954821586609
    2. '#' → logprob: -3.5514795780181885
    3. 'a' → logprob: -5.176479339599609
    4. ' am' → logprob: -5.676479339599609
    5. 'plus' → logprob: -6.426479339599609
    6. ''' → logprob: -6.926479339599609
    7. ''aj' → logprob: -6.926479339599609
    8. 'es' → logprob: -7.051479339599609
    9. ' e' → logprob: -7.051479339599609
    10. ''am' → logprob: -7.176479339599609

Token 568: 'ondi' (ID: 117409)
  Prédit: 'ondi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.005182524211704731
    2. 'ond' → logprob: -5.63018274307251
    3. 'ondissement' → logprob: -6.75518274307251
    4. 'ound' → logprob: -8.755182266235352
    5. 'on' → logprob: -9.630182266235352
    6. 'ont' → logprob: -10.255182266235352
    7. '#' → logprob: -10.880182266235352
    8. 'o' → logprob: -11.130182266235352
    9. '**' → logprob: -11.380182266235352
    10. '"' → logprob: -11.505182266235352

Token 569: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10890339314937592
    2. '#' → logprob: -3.108903408050537
    3. ' if' → logprob: -3.108903408050537
    4. 'am' → logprob: -5.108903408050537
    5. 's' → logprob: -5.983903408050537
    6. '.' → logprob: -6.608903408050537
    7. ',' → logprob: -6.733903408050537
    8. 'non' → logprob: -7.983903408050537
    9. 'si' → logprob: -7.983903408050537
    10. '
' → logprob: -8.108902931213379

Token 570: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10350306332111359
    2. '#' → logprob: -2.4785029888153076
    3. 'am' → logprob: -4.603503227233887
    4. 'min' → logprob: -5.603503227233887
    5. 'minimum' → logprob: -8.478503227233887
    6. ' if' → logprob: -8.853503227233887
    7. 'max' → logprob: -9.228503227233887
    8. 'best' → logprob: -10.228503227233887
    9. 'sorted' → logprob: -10.228503227233887
    10. 'for' → logprob: -10.353503227233887

Token 571: ' Plus' (ID: 11899)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0381508506834507
    2. '#' → logprob: -3.9131507873535156
    3. 'am' → logprob: -4.163150787353516
    4. 'min' → logprob: -6.538150787353516
    5. ' if' → logprob: -8.788150787353516
    6. 'best' → logprob: -9.788150787353516
    7. 'minimum' → logprob: -10.038150787353516
    8. '```' → logprob: -10.288150787353516
    9. 'possible' → logprob: -11.038150787353516
    10. 'sorted' → logprob: -11.163150787353516

Token 572: ' précisément' (ID: 139179)
  Prédit: 'ieurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieurs' → logprob: -0.7318475842475891
    2. '#' → logprob: -1.1068475246429443
    3. 't' → logprob: -2.9818475246429443
    4. 'am' → logprob: -4.356847763061523
    5. 'grand' → logprob: -4.481847763061523
    6. 'en' → logprob: -4.481847763061523
    7. ' précisément' → logprob: -4.481847763061523
    8. 'ieur' → logprob: -4.856847763061523
    9. 'exact' → logprob: -5.231847763061523
    10. '```' → logprob: -5.231847763061523

Token 573: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3444202244281769
    2. ',' → logprob: -1.4694201946258545
    3. ' if' → logprob: -3.0944201946258545
    4. '#' → logprob: -4.469420433044434
    5. ':' → logprob: -6.469420433044434
    6. ' si' → logprob: -6.969420433044434
    7. 'on' → logprob: -7.344420433044434
    8. 'si' → logprob: -7.969420433044434
    9. 'possible' → logprob: -8.719420433044434
    10. 's' → logprob: -8.969420433044434

Token 574: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011260728351771832
    2. ' if' → logprob: -4.761260509490967
    3. '#' → logprob: -6.136260509490967
    4. 'min' → logprob: -8.636260986328125
    5. 'si' → logprob: -9.011260986328125
    6. 'for' → logprob: -9.761260986328125
    7. 'am' → logprob: -10.636260986328125
    8. 's' → logprob: -10.886260986328125
    9. 'max' → logprob: -11.011260986328125
    10. ' si' → logprob: -11.511260986328125

Token 575: ' souhaite' (ID: 68897)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.406026154756546
    2. '#' → logprob: -1.7810261249542236
    3. 'for' → logprob: -3.1560261249542236
    4. 'cherche' → logprob: -3.5310261249542236
    5. 'try' → logprob: -3.7810261249542236
    6. 'tr' → logprob: -4.156026363372803
    7. 'am' → logprob: -4.656026363372803
    8. 'tri' → logprob: -5.156026363372803
    9. 'va' → logprob: -5.406026363372803
    10. 'v' → logprob: -5.656026363372803

Token 576: ' sou' (ID: 4069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31336724758148193
    2. 'v' → logprob: -2.8133673667907715
    3. 'tr' → logprob: -2.8133673667907715
    4. '#' → logprob: -3.0633673667907715
    5. 'min' → logprob: -3.0633673667907715
    6. 'ré' → logprob: -3.9383673667907715
    7. 'optim' → logprob: -5.5633673667907715
    8. 'max' → logprob: -5.6883673667907715
    9. 'rem' → logprob: -5.6883673667907715
    10. 'corr' → logprob: -5.8133673667907715

Token 577: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.4877786934375763
    2. 'mettre' → logprob: -2.112778663635254
    3. 't' → logprob: -2.612778663635254
    4. 'str' → logprob: -2.737778663635254
    5. 'stract' → logprob: -3.862778663635254
    6. 'pl' → logprob: -4.362778663635254
    7. 'p' → logprob: -4.487778663635254
    8. '#' → logprob: -4.487778663635254
    9. 'st' → logprob: -4.737778663635254
    10. 's' → logprob: -4.737778663635254

Token 578: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.13168500363826752
    2. 'ire' → logprob: -3.1316850185394287
    3. 'cter' → logprob: -3.3816850185394287
    4. 'c' → logprob: -4.63168478012085
    5. 'i' → logprob: -4.63168478012085
    6. 'it' → logprob: -5.50668478012085
    7. '   ' → logprob: -5.63168478012085
    8. 'ction' → logprob: -6.38168478012085
    9. '```' → logprob: -6.50668478012085
    10. '	' → logprob: -6.94418478012085

Token 579: ' le' (ID: 505)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1377842128276825
    2. ' min' → logprob: -2.762784242630005
    3. 'max' → logprob: -3.262784242630005
    4. '10' → logprob: -3.887784242630005
    5. ' ' → logprob: -5.512784004211426
    6. ' max' → logprob: -6.887784004211426
    7. '(min' → logprob: -7.762784004211426
    8. '1' → logprob: -7.762784004211426
    9. '(' → logprob: -8.262784004211426
    10. ' (' → logprob: -8.637784004211426

Token 580: ' "' (ID: 392)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.16115093231201172
    2. 'max' → logprob: -2.1611509323120117
    3. 'minimum' → logprob: -3.6611509323120117
    4. ' min' → logprob: -5.786150932312012
    5. 'plus' → logprob: -6.911150932312012
    6. 'maximum' → logprob: -6.911150932312012
    7. '(min' → logprob: -7.036150932312012
    8. '10' → logprob: -7.161150932312012
    9. '9' → logprob: -8.036150932312012
    10. ' minimum' → logprob: -8.161150932312012

Token 581: 'sur' (ID: 26617)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.42545080184936523
    2. 'max' → logprob: -1.8004508018493652
    3. '(min' → logprob: -1.9254508018493652
    4. '(max' → logprob: -3.8004508018493652
    5. '9' → logprob: -5.300450801849365
    6. '(' → logprob: -5.550450801849365
    7. '10' → logprob: -6.050450801849365
    8. 'am' → logprob: -7.300450801849365
    9. ' min' → logprob: -7.925450801849365
    10. 'minimum' → logprob: -8.300451278686523

Token 582: 'plus' (ID: 11601)
  Prédit: 'plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.016505490988492966
    2. 'pl' → logprob: -4.641505718231201
    3. ' plus' → logprob: -6.016505718231201
    4. 'co' → logprob: -6.016505718231201
    5. 'cout' → logprob: -7.516505718231201
    6. '+' → logprob: -8.391505241394043
    7. '-plus' → logprob: -8.641505241394043
    8. 'e' → logprob: -9.141505241394043
    9. '_plus' → logprob: -9.391505241394043
    10. '10' → logprob: -9.641505241394043

Token 583: '"' (ID: 1)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13383899629116058
    2. ' =' → logprob: -3.6338388919830322
    3. ' ' → logprob: -4.258839130401611
    4. '_max' → logprob: -4.508839130401611
    5. '_le' → logprob: -5.008839130401611
    6. '_amount' → logprob: -5.008839130401611
    7. ' le' → logprob: -5.258839130401611
    8. ' _' → logprob: -5.383839130401611
    9. '_total' → logprob: -5.383839130401611
    10. '_min' → logprob: -5.508839130401611

Token 584: ' minimal' (ID: 19957)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.341248631477356
    2. ' minimal' → logprob: -1.466248631477356
    3. ' le' → logprob: -2.3412485122680664
    4. '_min' → logprob: -2.7162485122680664
    5. 'minimum' → logprob: -2.7162485122680664
    6. 'min' → logprob: -2.8412485122680664
    7. ' minimum' → logprob: -3.0912485122680664
    8. '#' → logprob: -3.8412485122680664
    9. '_le' → logprob: -3.8412485122680664
    10. 'minimal' → logprob: -3.9662485122680664

Token 585: '
' (ID: 198)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.8602194786071777
    2. 'possible' → logprob: -1.2352194786071777
    3. '_possible' → logprob: -1.8602194786071777
    4. ' ' → logprob: -3.4852194786071777
    5. 'sur' → logprob: -4.485219478607178
    6. ',' → logprob: -4.485219478607178
    7. '.' → logprob: -4.735219478607178
    8. ' parmi' → logprob: -4.860219478607178
    9. ' de' → logprob: -5.235219478607178
    10. 'from' → logprob: -5.485219478607178

Token 586: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3426594138145447
    2. ' if' → logprob: -1.7176594734191895
    3. '#' → logprob: -3.0926594734191895
    4. 'am' → logprob: -3.9676594734191895
    5. 'min' → logprob: -4.3426594734191895
    6. 'max' → logprob: -5.0926594734191895
    7. ',' → logprob: -5.2176594734191895
    8. '.' → logprob: -5.2176594734191895
    9. '
' → logprob: -5.9676594734191895
    10. 'minimum' → logprob: -6.0926594734191895

Token 587: ' Cela' (ID: 44403)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08950478583574295
    2. '#' → logprob: -3.5895047187805176
    3. 'am' → logprob: -3.7145047187805176
    4. ' if' → logprob: -4.214504718780518
    5. 'min' → logprob: -4.214504718780518
    6. 'sur' → logprob: -6.464504718780518
    7. ' am' → logprob: -8.089505195617676
    8. 'max' → logprob: -8.339505195617676
    9. 'minimum' → logprob: -8.339505195617676
    10. '```' → logprob: -8.339505195617676

Token 588: ' est' (ID: 893)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47284770011901855
    2. ' #' → logprob: -2.5978477001190186
    3. ' peut' → logprob: -3.0978477001190186
    4. 's' → logprob: -3.2228477001190186
    5. 'se' → logprob: -3.4728477001190186
    6. ' pourrait' → logprob: -3.5978477001190186
    7. ' se' → logprob: -3.8478477001190186
    8. 'if' → logprob: -3.9728477001190186
    9. ' consiste' → logprob: -4.097847938537598
    10. ' signifie' → logprob: -4.222847938537598

Token 589: ' seulement' (ID: 32072)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.39281049370765686
    2. ' possible' → logprob: -1.1428104639053345
    3. '#' → logprob: -6.642810344696045
    4. 'poss' → logprob: -7.142810344696045
    5. ' réalis' → logprob: -7.267810344696045
    6. '_possible' → logprob: -7.642810344696045
    7. ' lié' → logprob: -8.267810821533203
    8. 'fac' → logprob: -8.392810821533203
    9. ' fais' → logprob: -8.642810821533203
    10. ' rendu' → logprob: -8.642810821533203

Token 590: ' nécessaire' (ID: 43098)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.005701008252799511
    2. ' possible' → logprob: -5.255701065063477
    3. 'poss' → logprob: -7.755701065063477
    4. 'pos' → logprob: -11.630701065063477
    5. 'à' → logprob: -12.130701065063477
    6. 'né' → logprob: -12.630701065063477
    7. '_possible' → logprob: -12.630701065063477
    8. 'pert' → logprob: -12.755701065063477
    9. '   ' → logprob: -13.130701065063477
    10. 'utile' → logprob: -13.130701065063477

Token 591: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -0.35059839487075806
    2. 'if' → logprob: -1.4755983352661133
    3. ' si' → logprob: -3.6005983352661133
    4. 's' → logprob: -3.7255983352661133
    5. ' if' → logprob: -4.225598335266113
    6. '#' → logprob: -7.350598335266113
    7. ' s' → logprob: -8.475598335266113
    8. 'dans' → logprob: -10.100598335266113
    9. '_si' → logprob: -10.225598335266113
    10. ' lorsque' → logprob: -10.475598335266113

Token 592: ' il' (ID: 1793)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16355492174625397
    2. 'am' → logprob: -1.9135549068450928
    3. ' len' → logprob: -5.913555145263672
    4. ' am' → logprob: -8.413555145263672
    5. 'not' → logprob: -8.913555145263672
    6. '10' → logprob: -9.413555145263672
    7. '0' → logprob: -10.288555145263672
    8. '(len' → logprob: -10.413555145263672
    9. 'le' → logprob: -11.163555145263672
    10. 'ten' → logprob: -11.163555145263672

Token 593: ' y' (ID: 342)
  Prédit: ' am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' am' → logprob: -0.5118762850761414
    2. ' len' → logprob: -1.7618763446807861
    3. 'len' → logprob: -2.011876344680786
    4. 'am' → logprob: -2.386876344680786
    5. 'a' → logprob: -7.261876106262207
    6. ' not' → logprob: -7.761876106262207
    7. ' a' → logprob: -7.761876106262207
    8. ' ' → logprob: -7.886876106262207
    9. 'e' → logprob: -8.261876106262207
    10. ' ' → logprob: -8.636876106262207

Token 594: ' avait' (ID: 18892)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.29803624749183655
    2. 'a' → logprob: -1.4230362176895142
    3. 's' → logprob: -4.548036098480225
    4. '#' → logprob: -6.298036098480225
    5. '#a' → logprob: -7.298036098480225
    6. '>' → logprob: -7.548036098480225
    7. ' ' → logprob: -7.673036098480225
    8. 'e' → logprob: -7.798036098480225
    9. '>a' → logprob: -8.423036575317383
    10. ''a' → logprob: -8.548036575317383

Token 595: ' au' (ID: 2791)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4213605225086212
    2. 'am' → logprob: -2.296360492706299
    3. ' au' → logprob: -2.296360492706299
    4. ' am' → logprob: -3.421360492706299
    5. 'des' → logprob: -3.546360492706299
    6. 'au' → logprob: -3.546360492706299
    7. 'non' → logprob: -3.796360492706299
    8. ' non' → logprob: -4.296360492706299
    9. 'len' → logprob: -5.046360492706299
    10. 'une' → logprob: -6.046360492706299

Token 596: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.005697453860193491
    2. '#' → logprob: -6.255697250366211
    3. 'mo' → logprob: -6.630697250366211
    4. ' moins' → logprob: -7.505697250366211
    5. 'menos' → logprob: -7.505697250366211
    6. 'm' → logprob: -8.005697250366211
    7. 'plus' → logprob: -8.755697250366211
    8. 'minimum' → logprob: -8.880697250366211
    9. '```' → logprob: -9.255697250366211
    10. 'une' → logprob: -9.255697250366211

Token 597: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.5267146229743958
    2. 'une' → logprob: -1.526714563369751
    3. '1' → logprob: -2.026714563369751
    4. 'de' → logprob: -3.026714563369751
    5. '2' → logprob: -5.27671480178833
    6. ' deux' → logprob: -5.90171480178833
    7. 'len' → logprob: -6.90171480178833
    8. ''un' → logprob: -6.90171480178833
    9. ' un' → logprob: -7.40171480178833
    10. ' ' → logprob: -7.52671480178833

Token 598: ' nombre' (ID: 9733)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.9769706130027771
    2. 'élé' → logprob: -1.7269706726074219
    3. 'nombre' → logprob: -1.8519706726074219
    4. ' élément' → logprob: -1.8519706726074219
    5. ' nombre' → logprob: -2.601970672607422
    6. 'non' → logprob: -4.101970672607422
    7. 'element' → logprob: -4.476970672607422
    8. '0' → logprob: -5.226970672607422
    9. 'e' → logprob: -5.476970672607422
    10. ' am' → logprob: -5.976970672607422

Token 599: ' qui' (ID: 2780)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.0065985918045044
    2. 'non' → logprob: -1.5065985918045044
    3. ' dans' → logprob: -1.8815985918045044
    4. ' non' → logprob: -2.256598472595215
    5. 'not' → logprob: -2.756598472595215
    6. '%' → logprob: -3.631598472595215
    7. 'dont' → logprob: -4.131598472595215
    8. ' in' → logprob: -4.881598472595215
    9. ' not' → logprob: -5.006598472595215
    10. 'in' → logprob: -5.131598472595215

Token 600: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35197222232818604
    2. ' n' → logprob: -1.226972222328186
    3. 'n't' → logprob: -6.9769721031188965
    4. 'a' → logprob: -7.3519721031188965
    5. '%' → logprob: -7.9769721031188965
    6. 'ne' → logprob: -7.9769721031188965
    7. '%n' → logprob: -8.476972579956055
    8. ' a' → logprob: -8.851972579956055
    9. '#' → logprob: -8.851972579956055
    10. 'est' → logprob: -8.976972579956055

Token 601: ''était' (ID: 40609)
  Prédit: ''est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.6862567067146301
    2. ''était' → logprob: -0.8112567067146301
    3. '#' → logprob: -3.9362566471099854
    4. ''a' → logprob: -4.1862568855285645
    5. 'est' → logprob: -4.9362568855285645
    6. 'a' → logprob: -5.8112568855285645
    7. ''avait' → logprob: -6.8112568855285645
    8. ''' → logprob: -6.8112568855285645
    9. '’était' → logprob: -7.3112568855285645
    10. ''et' → logprob: -7.5612568855285645

Token 602: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.034062646329402924
    2. ' pas' → logprob: -3.409062623977661
    3. 'multiple' → logprob: -9.159062385559082
    4. 's' → logprob: -10.034062385559082
    5. '#' → logprob: -10.284062385559082
    6. 'multip' → logprob: -10.659062385559082
    7. 'un' → logprob: -10.784062385559082
    8. 'arr' → logprob: -10.784062385559082
    9. 'import' → logprob: -10.784062385559082
    10. 'not' → logprob: -11.034062385559082

Token 603: ' un' (ID: 537)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.3520874083042145
    2. 'un' → logprob: -1.477087378501892
    3. ' un' → logprob: -3.2270874977111816
    4. ' multiple' → logprob: -3.9770874977111816
    5. 'multip' → logprob: -5.102087497711182
    6. '10' → logprob: -6.352087497711182
    7. '0' → logprob: -7.602087497711182
    8. 'div' → logprob: -7.977087497711182
    9. 'pas' → logprob: -8.852087020874023
    10. ' divisible' → logprob: -9.102087020874023

Token 604: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.010986280627548695
    2. ' multiple' → logprob: -4.635986328125
    3. 'multip' → logprob: -7.010986328125
    4. '0' → logprob: -8.760986328125
    5. '10' → logprob: -9.135986328125
    6. 'mult' → logprob: -11.135986328125
    7. 'ultiple' → logprob: -11.135986328125
    8. '```' → logprob: -11.510986328125
    9. 'm' → logprob: -12.260986328125
    10. 'multi' → logprob: -12.260986328125

Token 605: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2107180804014206
    2. 'de' → logprob: -1.710718035697937
    3. '_de' → logprob: -4.710718154907227
    4. '_' → logprob: -8.960718154907227
    5. ' of' → logprob: -9.460718154907227
    6. 'd' → logprob: -11.335718154907227
    7. '0' → logprob: -11.960718154907227
    8. '10' → logprob: -12.085718154907227
    9. ' ' → logprob: -12.085718154907227
    10. 'def' → logprob: -12.585718154907227

Token 606: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00785586517304182
    2. ' ' → logprob: -4.8828558921813965
    3. '0' → logprob: -9.007855415344238
    4. 'd' → logprob: -9.132855415344238
    5. '1' → logprob: -11.632855415344238
    6. '```' → logprob: -12.132855415344238
    7. ' dix' → logprob: -13.382855415344238
    8. ' ' → logprob: -14.382855415344238
    9. 'l' → logprob: -14.945355415344238
    10. '100' → logprob: -15.007855415344238

Token 607: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00010711929644457996
    2. '0' → logprob: -9.500106811523438
    3. 'd' → logprob: -10.500106811523438
    4. ' ' → logprob: -13.000106811523438
    5. '1' → logprob: -13.250106811523438
    6. '```' → logprob: -15.250106811523438
    7. 'ten' → logprob: -15.375106811523438
    8. '100' → logprob: -16.375106811523438
    9. ' dix' → logprob: -17.750106811523438
    10. '１０' → logprob: -17.750106811523438

Token 608: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00028505371301434934
    2. ' if' → logprob: -8.250285148620605
    3. '
' → logprob: -11.375285148620605
    4. '```' → logprob: -11.500285148620605
    5. '``' → logprob: -15.000285148620605
    6. ':' → logprob: -15.375285148620605
    7. '#' → logprob: -15.625285148620605
    8. ' 
' → logprob: -15.750285148620605
    9. ';if' → logprob: -15.750285148620605
    10. ',' → logprob: -15.875285148620605

Token 609: ' donc' (ID: 14206)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27430814504623413
    2. ' if' → logprob: -2.274308204650879
    3. ' car' → logprob: -2.649308204650879
    4. ' et' → logprob: -4.149308204650879
    5. ' and' → logprob: -4.649308204650879
    6. ':' → logprob: -5.024308204650879
    7. ' which' → logprob: -5.399308204650879
    8. 'car' → logprob: -5.649308204650879
    9. ' donc' → logprob: -5.774308204650879
    10. ' i' → logprob: -5.899308204650879

Token 610: ' am' (ID: 939)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10866314172744751
    2. 'am' → logprob: -2.4836630821228027
    3. ' len' → logprob: -4.233663082122803
    4. 'if' → logprob: -5.608663082122803
    5. ' am' → logprob: -6.733663082122803
    6. ' if' → logprob: -9.108663558959961
    7. '(len' → logprob: -10.983663558959961
    8. 'le' → logprob: -11.358663558959961
    9. '   ' → logprob: -11.983663558959961
    10. 'not' → logprob: -11.983663558959961

Token 611: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.0006602536886930466
    2. 'a' → logprob: -8.250659942626953
    3. 'len' → logprob: -8.250659942626953
    4. 'ar' → logprob: -10.625659942626953
    5. 'ori' → logprob: -11.125659942626953
    6. 'ami' → logprob: -11.500659942626953
    7. 'am' → logprob: -11.625659942626953
    8. '_' → logprob: -11.625659942626953
    9. 'not' → logprob: -11.875659942626953
    10. '_list' → logprob: -12.125659942626953

Token 612: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.02814854308962822
    2. 's' → logprob: -3.653148651123047
    3. '_' → logprob: -6.403148651123047
    4. '_s' → logprob: -9.903148651123047
    5. ' _' → logprob: -10.653148651123047
    6. '_lst' → logprob: -10.778148651123047
    7. '_l' → logprob: -10.903148651123047
    8. 'List' → logprob: -11.403148651123047
    9. ')' → logprob: -12.278148651123047
    10. '>' → logprob: -12.278148651123047

Token 613: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05172896012663841
    2. '!=' → logprob: -3.0517289638519287
    3. ' !=' → logprob: -6.80172872543335
    4. '.' → logprob: -7.80172872543335
    5. '>:' → logprob: -7.92672872543335
    6. '):' → logprob: -8.176729202270508
    7. ' :' → logprob: -8.801729202270508
    8. '!' → logprob: -8.926729202270508
    9. 'and' → logprob: -9.051729202270508
    10. '!==' → logprob: -9.051729202270508

Token 614: ''est' (ID: 6616)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2039971798658371
    2. ' !=' → logprob: -2.3289971351623535
    3. ':' → logprob: -3.0789971351623535
    4. '#' → logprob: -4.5789971351623535
    5. '>' → logprob: -4.7039971351623535
    6. '!' → logprob: -5.3289971351623535
    7. '.' → logprob: -5.5789971351623535
    8. ')' → logprob: -5.8289971351623535
    9. ']' → logprob: -6.7039971351623535
    10. 'ot' → logprob: -6.9539971351623535

Token 615: ' pas' (ID: 2173)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.07468446344137192
    2. '[]' → logprob: -3.5746843814849854
    3. ' not' → logprob: -3.6996843814849854
    4. 'empty' → logprob: -4.3246846199035645
    5. '[' → logprob: -6.1996846199035645
    6. '>' → logprob: -6.9496846199035645
    7. '[]>' → logprob: -7.8246846199035645
    8. '	not' → logprob: -7.8246846199035645
    9. ']' → logprob: -7.9496846199035645
    10. '!' → logprob: -7.9496846199035645

Token 616: ' vide' (ID: 21835)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.38773617148399353
    2. 'empty' → logprob: -1.137736201286316
    3. '_empty' → logprob: -8.387736320495605
    4. '=[]' → logprob: -8.387736320495605
    5. ' empty' → logprob: -9.262736320495605
    6. 'vide' → logprob: -9.387736320495605
    7. 'Empty' → logprob: -9.762736320495605
    8. '[' → logprob: -10.012736320495605
    9. 'empt' → logprob: -10.012736320495605
    10. '-empty' → logprob: -10.387736320495605

Token 617: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0026474790647625923
    2. '
' → logprob: -6.377647399902344
    3. ' if' → logprob: -7.002647399902344
    4. ':' → logprob: -11.377647399902344
    5. ':
' → logprob: -12.752647399902344
    6. '```' → logprob: -12.877647399902344
    7. '\n' → logprob: -13.002647399902344
    8. '  
' → logprob: -13.127647399902344
    9. ';if' → logprob: -13.127647399902344
    10. '#' → logprob: -13.377647399902344

Token 618: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002426194492727518
    2. ' if' → logprob: -6.2524261474609375
    3. '
' → logprob: -7.6274261474609375
    4. '\n' → logprob: -13.502426147460938
    5. 'If' → logprob: -13.877426147460938
    6. '#' → logprob: -13.877426147460938
    7. ':' → logprob: -13.877426147460938
    8. '

' → logprob: -14.127426147460938
    9. '```' → logprob: -14.127426147460938
    10. '
' → logprob: -14.252426147460938

Token 619: ' len' (ID: 4631)
  Prédit: ' am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' am' → logprob: -0.5976800322532654
    2. ' len' → logprob: -0.8476800322532654
    3. 'len' → logprob: -4.47268009185791
    4. 'am' → logprob: -4.59768009185791
    5. ' ' → logprob: -11.59768009185791
    6. ' ' → logprob: -13.09768009185791
    7. '(len' → logprob: -13.84768009185791
    8. ' not' → logprob: -13.97268009185791
    9. '  ' → logprob: -15.09768009185791
    10. '	len' → logprob: -15.22268009185791

Token 620: '(am' (ID: 158066)
  Prédit: '(am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(am' → logprob: -0.001237252727150917
    2. '(' → logprob: -6.751237392425537
    3. ' (' → logprob: -9.626236915588379
    4. 'am' → logprob: -14.376236915588379
    5. ' am' → logprob: -15.501236915588379
    6. '(an' → logprob: -16.626237869262695
    7. '(im' → logprob: -17.501237869262695
    8. '_am' → logprob: -17.626237869262695
    9. '(a' → logprob: -17.876237869262695
    10. '('' → logprob: -18.126237869262695

Token 621: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -6.511406809295295e-06
    2. 'ar' → logprob: -12.750006675720215
    3. '_' → logprob: -13.875006675720215
    4. 'a' → logprob: -13.875006675720215
    5. 'ари' → logprob: -14.875006675720215
    6. ' ari' → logprob: -15.625006675720215
    7. '#' → logprob: -16.0000057220459
    8. '`' → logprob: -16.2500057220459
    9. '...' → logprob: -16.6250057220459
    10. '>' → logprob: -16.8750057220459

Token 622: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.1994775377388578e-05
    2. ')' → logprob: -11.750012397766113
    3. '_' → logprob: -12.750012397766113
    4. '>' → logprob: -15.000012397766113
    5. ')>' → logprob: -15.000012397766113
    6. '_)' → logprob: -15.750012397766113
    7. ')_' → logprob: -16.000011444091797
    8. 'list' → logprob: -16.750011444091797
    9. 'List' → logprob: -17.250011444091797
    10. '_l' → logprob: -17.750011444091797

Token 623: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03080400452017784
    2. '>' → logprob: -4.15580415725708
    3. ' >' → logprob: -4.65580415725708
    4. ')>' → logprob: -5.28080415725708
    5. ' )' → logprob: -9.780803680419922
    6. '):' → logprob: -12.155803680419922
    7. ' !=' → logprob: -13.655803680419922
    8. '!=' → logprob: -14.280803680419922
    9. ')!=' → logprob: -14.530803680419922
    10. '&gt' → logprob: -15.030803680419922

Token 624: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.100703164935112
    2. ' >' → logprob: -2.350703239440918
    3. '!=' → logprob: -7.975703239440918
    4. ' !=' → logprob: -9.225703239440918
    5. ':' → logprob: -10.100703239440918
    6. '==' → logprob: -12.475703239440918
    7. '()>' → logprob: -13.100703239440918
    8. ')>' → logprob: -13.600703239440918
    9. '&gt' → logprob: -13.725703239440918
    10. '＞' → logprob: -14.225703239440918

Token 625: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. '=' → logprob: -17.639163970947266
    4. '	' → logprob: -18.889163970947266
    5. '  ' → logprob: -18.889163970947266
    6. '<|end|>' → logprob: -18.889163970947266
    7. ' ' → logprob: -19.014163970947266
    8. ')' → logprob: -19.514163970947266
    9. '```' → logprob: -19.764163970947266
    10. '   ' → logprob: -19.764163970947266

Token 626: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '=' → logprob: -19.00006675720215
    4. '```' → logprob: -19.12506675720215
    5. '   ' → logprob: -20.12506675720215
    6. '  ' → logprob: -20.37506675720215
    7. '#' → logprob: -20.62506675720215
    8. '>' → logprob: -20.75006675720215
    9. ' ' → logprob: -20.87506675720215
    10. '[]' → logprob: -21.00006675720215

Token 627: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038419815246015787
    2. ':
' → logprob: -7.875384330749512
    3. ' :' → logprob: -12.625384330749512
    4. ':
' → logprob: -14.625384330749512
    5. ':

' → logprob: -15.750384330749512
    6. '   ' → logprob: -16.500383377075195
    7. ':#' → logprob: -16.625383377075195
    8. ' and' → logprob: -16.875383377075195
    9. '):' → logprob: -18.000383377075195
    10. ':def' → logprob: -18.125383377075195

Token 628: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005894071888178587
    2. ' am' → logprob: -6.130894184112549
    3. ':' → logprob: -6.505894184112549
    4. '#' → logprob: -7.005894184112549
    5. ' total' → logprob: -7.630894184112549
    6. ' min' → logprob: -9.00589370727539
    7. 'total' → logprob: -9.13089370727539
    8. 'min' → logprob: -9.38089370727539
    9. ' #' → logprob: -9.88089370727539
    10. '    
' → logprob: -10.13089370727539

Token 629: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.651496171951294
    2. 'min' → logprob: -1.651496171951294
    3. '   ' → logprob: -1.901496171951294
    4. 'am' → logprob: -3.151496171951294
    5. '#' (adapté à ' #') → logprob: -3.276496171951294
    6. 'minimum' → logprob: -4.026495933532715
    7. 'sur' → logprob: -4.151495933532715
    8. ' total' → logprob: -4.651495933532715
    9. 'minimal' → logprob: -5.151495933532715
    10. ' min' → logprob: -6.276495933532715

Token 630: ' Trier' (ID: 191551)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.754957914352417
    2. 'min' → logprob: -1.379957914352417
    3. '#' → logprob: -1.504957914352417
    4. 'sur' → logprob: -3.504957914352417
    5. 'minimum' → logprob: -4.629958152770996
    6. 'am' → logprob: -4.754958152770996
    7. 'minimal' → logprob: -6.004958152770996
    8. 'max' → logprob: -6.379958152770996
    9. '   ' → logprob: -6.754958152770996
    10. 're' → logprob: -8.254958152770996

Token 631: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.023126913234591484
    2. '   ' → logprob: -4.14812707901001
    3. ' am' → logprob: -5.14812707901001
    4. '(am' → logprob: -6.77312707901001
    5. 'sorted' → logprob: -10.023126602172852
    6. '_am' → logprob: -10.023126602172852
    7. '(' → logprob: -12.023126602172852
    8. ' ' → logprob: -12.523126602172852
    9. '  ' → logprob: -12.898126602172852
    10. 'ams' → logprob: -13.648126602172852

Token 632: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.0006841989234089851
    2. 'am' → logprob: -7.3756842613220215
    3. 'ami' → logprob: -10.500683784484863
    4. 'ar' → logprob: -10.875683784484863
    5. '_' → logprob: -12.375683784484863
    6. '   ' → logprob: -13.250683784484863
    7. ' am' → logprob: -14.000683784484863
    8. 'ri' → logprob: -14.375683784484863
    9. '_list' → logprob: -14.500683784484863
    10. 'ori' → logprob: -14.875683784484863

Token 633: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.703443770878948e-06
    2. 'list' → logprob: -12.250007629394531
    3. '=' → logprob: -13.625007629394531
    4. '_' → logprob: -14.250007629394531
    5. 'List' → logprob: -14.750007629394531
    6. ' =' → logprob: -15.500007629394531
    7. '_l' → logprob: -16.12500762939453
    8. '=_' → logprob: -16.25000762939453
    9. '_sorted' → logprob: -16.50000762939453
    10. 's' → logprob: -16.87500762939453

Token 634: ' pour' (ID: 1930)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0002913678181357682
    2. '   ' → logprob: -8.75029182434082
    3. '.' → logprob: -9.62529182434082
    4. '=' → logprob: -10.25029182434082
    5. ' =' → logprob: -11.37529182434082
    6. 'sort' → logprob: -11.50029182434082
    7. ' .' → logprob: -12.37529182434082
    8. '().' → logprob: -13.12529182434082
    9. 'sorted' → logprob: -14.12529182434082
    10. '.am' → logprob: -14.37529182434082

Token 635: ' mettre' (ID: 25339)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.07632869482040405
    2. ' am' → logprob: -3.326328754425049
    3. 'min' → logprob: -4.076328754425049
    4. 'tr' → logprob: -4.576328754425049
    5. '#' → logprob: -4.826328754425049
    6. ' trouver' → logprob: -8.45132827758789
    7. 'total' → logprob: -8.70132827758789
    8. 'mettre' → logprob: -8.70132827758789
    9. '   ' → logprob: -9.07632827758789
    10. 'minimum' → logprob: -9.20132827758789

Token 636: ' le' (ID: 505)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.17362716794013977
    2. 'le' → logprob: -1.9236271381378174
    3. 'la' → logprob: -4.4236273765563965
    4. 'l' → logprob: -7.7986273765563965
    5. ' am' → logprob: -7.9236273765563965
    6. ' le' → logprob: -8.423626899719238
    7. 'min' → logprob: -9.048626899719238
    8. 'en' → logprob: -9.548626899719238
    9. '#' → logprob: -10.548626899719238
    10. 'au' → logprob: -10.548626899719238

Token 637: ' plus' (ID: 2932)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.30405953526496887
    2. 'plus' → logprob: -1.8040595054626465
    3. 'am' → logprob: -2.6790595054626465
    4. 'minimum' → logprob: -3.8040595054626465
    5. '#' → logprob: -6.0540595054626465
    6. 'minimal' → logprob: -6.5540595054626465
    7. 'moins' → logprob: -7.5540595054626465
    8. ' plus' → logprob: -7.5540595054626465
    9. 'mini' → logprob: -7.6790595054626465
    10. ' am' → logprob: -8.804059982299805

Token 638: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.0002165299083571881
    2. ' petit' → logprob: -9.000216484069824
    3. 'small' → logprob: -9.875216484069824
    4. 'grand' → logprob: -10.250216484069824
    5. 'Petit' → logprob: -12.625216484069824
    6. '小' → logprob: -13.250216484069824
    7. '```' → logprob: -14.625216484069824
    8. 'prem' → logprob: -16.25021743774414
    9. 'pe' → logprob: -16.25021743774414
    10. '#' → logprob: -16.37521743774414

Token 639: ' reste' (ID: 26769)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.555512547492981
    2. 'élé' → logprob: -0.930512547492981
    3. 'element' → logprob: -4.055512428283691
    4. ' élément' → logprob: -4.805512428283691
    5. 'val' → logprob: -5.805512428283691
    6. ' am' → logprob: -6.555512428283691
    7. 'elem' → logprob: -7.430512428283691
    8. 'reste' → logprob: -8.180512428283691
    9. 'value' → logprob: -8.555512428283691
    10. 'en' → logprob: -8.930512428283691

Token 640: ' en' (ID: 469)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.7458126544952393
    2. '   ' → logprob: -1.2458126544952393
    3. '.sort' → logprob: -1.4958126544952393
    4. '().' → logprob: -5.49581241607666
    5. '()' → logprob: -5.62081241607666
    6. '=' → logprob: -6.99581241607666
    7. 'sorted' → logprob: -7.12081241607666
    8. '(am' → logprob: -7.12081241607666
    9. '.' → logprob: -7.37081241607666
    10. 'sort' → logprob: -7.62081241607666

Token 641: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.013159757480025291
    2. 'am' → logprob: -4.51315975189209
    3. 'avant' → logprob: -7.26315975189209
    4. 'dé' → logprob: -7.51315975189209
    5. 't' → logprob: -7.63815975189209
    6. 'first' → logprob: -9.38815975189209
    7. 'head' → logprob: -9.63815975189209
    8. 'de' → logprob: -9.76315975189209
    9. '#' → logprob: -10.76315975189209
    10. ' premier' → logprob: -11.26315975189209

Token 642: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007104166783392429
    2. 'am' → logprob: -5.007104396820068
    3. ' am' → logprob: -8.13210391998291
    4. 'sorted' → logprob: -10.88210391998291
    5. '(am' → logprob: -11.00710391998291
    6. '.sort' → logprob: -11.25710391998291
    7. '  ' → logprob: -11.38210391998291
    8. '   ' → logprob: -12.13210391998291
    9. '    ' → logprob: -12.50710391998291
    10. ' ' → logprob: -12.63210391998291

Token 643: 'ordre' (ID: 59831)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.01724896766245365
    2. '   ' → logprob: -4.39224910736084
    3. ')' → logprob: -5.64224910736084
    4. ' am' → logprob: -6.89224910736084
    5. ')
' → logprob: -10.39224910736084
    6. '       ' → logprob: -10.64224910736084
    7. 'amin' → logprob: -10.76724910736084
    8. 'sorted' → logprob: -10.89224910736084
    9. 'ams' → logprob: -11.26724910736084
    10. '  ' → logprob: -11.51724910736084

Token 644: ' cro' (ID: 11270)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.7313242554664612
    2. '=' → logprob: -1.2313241958618164
    3. ')' → logprob: -2.7313241958618164
    4. '(am' → logprob: -2.8563241958618164
    5. ' am' → logprob: -3.3563241958618164
    6. '()' → logprob: -3.8563241958618164
    7. '())' → logprob: -3.9813241958618164
    8. 'asc' → logprob: -4.481324195861816
    9. 'sorted' → logprob: -5.481324195861816
    10. 'sort' → logprob: -5.856324195861816

Token 645: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.03781665116548538
    2. 'sc' → logprob: -3.9128167629241943
    3. 'ss' → logprob: -4.412816524505615
    4. 'issante' → logprob: -6.037816524505615
    5. 'issants' → logprob: -6.662816524505615
    6. 's' → logprob: -7.662816524505615
    7. 'issent' → logprob: -7.662816524505615
    8. 'issance' → logprob: -8.912817001342773
    9. 'c' → logprob: -9.662817001342773
    10. 'is' → logprob: -9.787817001342773

Token 646: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6532678008079529
    2. '   ' → logprob: -0.7782678008079529
    3. ')
' → logprob: -3.9032678604125977
    4. ')
' → logprob: -9.778267860412598
    5. 'sorted' → logprob: -9.903267860412598
    6. ' )' → logprob: -10.778267860412598
    7. 'am' → logprob: -11.153267860412598
    8. ',' → logprob: -11.278267860412598
    9. '.sort' → logprob: -11.278267860412598
    10. ').' → logprob: -11.278267860412598

Token 647: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.258072167634964
    2. 'am' → logprob: -1.5080721378326416
    3. ' am' → logprob: -5.133072376251221
    4. 'sorted' → logprob: -10.133071899414062
    5. ' ' → logprob: -10.383071899414062
    6. '(am' → logprob: -10.883071899414062
    7. '```' → logprob: -11.133071899414062
    8. '   ' → logprob: -11.133071899414062
    9. '  ' → logprob: -11.383071899414062
    10. '_am' → logprob: -11.508071899414062

Token 648: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' (adapté à ' am') → logprob: -0.005992789752781391
    2. '   ' → logprob: -5.130992889404297
    3. ' am' → logprob: -9.880992889404297
    4. 'amin' → logprob: -12.005992889404297
    5. 'amp' → logprob: -13.630992889404297
    6. 'sorted' → logprob: -13.755992889404297
    7. ' ' → logprob: -14.130992889404297
    8. 'amen' → logprob: -14.505992889404297
    9. 'amn' → logprob: -14.630992889404297
    10. 'ams' → logprob: -14.630992889404297

Token 649: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -1.4617256056226324e-05
    2. 'ar' → logprob: -11.750014305114746
    3. 'a' → logprob: -12.375014305114746
    4. 's' → logprob: -14.875014305114746
    5. '   ' → logprob: -15.375014305114746
    6. 'm' → logprob: -15.500014305114746
    7. 'ари' → logprob: -15.625014305114746
    8. ' ari' → logprob: -15.625014305114746
    9. '_' → logprob: -15.750014305114746
    10. '#' → logprob: -16.125015258789062

Token 650: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.8624639324116288e-06
    2. '.sort' → logprob: -14.250001907348633
    3. '_sorted' → logprob: -14.750001907348633
    4. '_' → logprob: -15.125001907348633
    5. '_sort' → logprob: -15.375001907348633
    6. '=' → logprob: -16.500001907348633
    7. '_li' → logprob: -17.250001907348633
    8. '=_' → logprob: -17.500001907348633
    9. '._' → logprob: -17.500001907348633
    10. '_l' → logprob: -17.625001907348633

Token 651: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.003185198176652193
    2. '.' → logprob: -5.753185272216797
    3. '=' → logprob: -12.503185272216797
    4. ' .' → logprob: -13.003185272216797
    5. '.s' → logprob: -14.503185272216797
    6. 'sort' → logprob: -14.628185272216797
    7. '.=' → logprob: -14.878185272216797
    8. ' =' → logprob: -17.253185272216797
    9. '.sorted' → logprob: -17.628185272216797
    10. '.Sort' → logprob: -17.753185272216797

Token 652: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009175926446914673
    2. '()
' → logprob: -4.759175777435303
    3. '   ' → logprob: -7.509175777435303
    4. '()
' → logprob: -12.509176254272461
    5. '()

' → logprob: -12.634176254272461
    6. '()[' → logprob: -12.759176254272461
    7. '(' → logprob: -13.509176254272461
    8. '()\' → logprob: -14.259176254272461
    9. '()>' → logprob: -14.884176254272461
    10. '()<' → logprob: -15.509176254272461

Token 653: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05150988698005676
    2. 'total' → logprob: -3.0515098571777344
    3. '#' → logprob: -6.051509857177734
    4. '
' → logprob: -8.301509857177734
    5. ' total' → logprob: -8.426509857177734
    6. '    
' → logprob: -11.176509857177734
    7. '```' → logprob: -11.176509857177734
    8. '-' → logprob: -11.426509857177734
    9. '	total' → logprob: -11.801509857177734
    10. 'sur' → logprob: -12.051509857177734

Token 654: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.526176929473877
    2. 'total' → logprob: -0.901176929473877
    3. '#' (adapté à ' #') → logprob: -6.276176929473877
    4. ' total' → logprob: -6.901176929473877
    5. 'sur' → logprob: -9.776176452636719
    6. '	total' → logprob: -11.026176452636719
    7. 'min' → logprob: -11.151176452636719
    8. 'subtract' → logprob: -11.276176452636719
    9. '
' → logprob: -11.651176452636719
    10. 'minimum' → logprob: -11.901176452636719

Token 655: ' Ret' (ID: 16724)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.004603149369359016
    2. '#' → logprob: -5.504603385925293
    3. 'sur' → logprob: -7.754603385925293
    4. 'min' → logprob: -10.379603385925293
    5. 'minimum' → logprob: -11.504603385925293
    6. ' total' → logprob: -11.754603385925293
    7. 'minimal' → logprob: -11.879603385925293
    8. 'diff' → logprob: -12.254603385925293
    9. 'for' → logprob: -12.504603385925293
    10. 'cor' → logprob: -12.629603385925293

Token 656: 'irer' (ID: 85189)
  Prédit: 'irer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irer' → logprob: -0.09786979109048843
    2. 'ra' → logprob: -2.847869873046875
    3. 'our' → logprob: -4.472869873046875
    4. 'rait' → logprob: -4.597869873046875
    5. 'otal' → logprob: -4.722869873046875
    6. 'rai' → logprob: -6.722869873046875
    7. 'urn' → logprob: -7.097869873046875
    8. 'ro' → logprob: -7.222869873046875
    9. 'total' → logprob: -7.597869873046875
    10. 'r' → logprob: -7.847869873046875

Token 657: ' ' (ID: 220)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.005243360530585051
    2. ' am' → logprob: -5.255243301391602
    3. '(am' → logprob: -11.755243301391602
    4. 'amin' → logprob: -14.630243301391602
    5. '   ' → logprob: -14.880243301391602
    6. 'total' → logprob: -15.255243301391602
    7. 'min' → logprob: -15.880243301391602
    8. '_am' → logprob: -16.3802433013916
    9. 'ami' → logprob: -16.6302433013916
    10. 'amm' → logprob: -16.6302433013916

Token 658: '10' (ID: 702)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0004083891399204731
    2. '10' → logprob: -8.750408172607422
    3. '(' → logprob: -9.375408172607422
    4. ' am' → logprob: -9.625408172607422
    5. '(am' → logprob: -10.000408172607422
    6. 'total' → logprob: -10.250408172607422
    7. 'min' → logprob: -11.875408172607422
    8. 'ten' → logprob: -12.375408172607422
    9. 'amin' → logprob: -12.500408172607422
    10. '1' → logprob: -14.000408172607422

Token 659: ' du' (ID: 1462)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28118661046028137
    2. '-' → logprob: -1.406186580657959
    3. '   ' → logprob: -11.406187057495117
    4. ' ' → logprob: -12.531187057495117
    5. '-min' → logprob: -12.781187057495117
    6. '	' → logprob: -13.156187057495117
    7. ' ' → logprob: -13.156187057495117
    8. ' -=' → logprob: -13.281187057495117
    9. '-
' → logprob: -13.281187057495117
    10. '-am' → logprob: -13.531187057495117

Token 660: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -8.180258191714529e-06
    2. ' total' → logprob: -12.250008583068848
    3. 'am' → logprob: -12.750008583068848
    4. 'sur' → logprob: -15.625008583068848
    5. '10' → logprob: -15.750008583068848
    6. 'ten' → logprob: -16.87500762939453
    7. '(total' → logprob: -17.50000762939453
    8. 't' → logprob: -18.25000762939453
    9. '	total' → logprob: -18.25000762939453
    10. 'tot' → logprob: -18.37500762939453

Token 661: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7613016963005066
    2. ' -=' → logprob: -0.8863016963005066
    3. ' -' → logprob: -2.8863017559051514
    4. '   ' → logprob: -3.0113017559051514
    5. '-=' → logprob: -4.261301517486572
    6. 'total' → logprob: -6.761301517486572
    7. ' total' → logprob: -8.76130199432373
    8. ' ' → logprob: -9.26130199432373
    9. '10' → logprob: -9.51130199432373
    10. '-total' → logprob: -9.88630199432373

Token 662: ' car' (ID: 1669)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.178328514099121
    2. 'am' → logprob: -1.303328514099121
    3. ' am' → logprob: -1.303328514099121
    4. 'total' → logprob: -2.803328514099121
    5. '   ' → logprob: -3.803328514099121
    6. ' then' → logprob: -4.178328514099121
    7. 'then' → logprob: -4.428328514099121
    8. 'ten' → logprob: -4.553328514099121
    9. ' and' → logprob: -4.678328514099121
    10. ' ' → logprob: -5.678328514099121

Token 663: ' lorsqu' (ID: 57416)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3424367308616638
    2. 'am' → logprob: -1.3424367904663086
    3. ' total' → logprob: -4.217436790466309
    4. ' am' → logprob: -4.592436790466309
    5. '10' → logprob: -5.592436790466309
    6. '   ' → logprob: -9.592436790466309
    7. 'ten' → logprob: -11.092436790466309
    8. ' ' → logprob: -11.092436790466309
    9. '#' → logprob: -11.467436790466309
    10. 'the' → logprob: -11.592436790466309

Token 664: ''on' (ID: 25812)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.3198769986629486
    2. ''on' → logprob: -1.319877028465271
    3. ' on' → logprob: -5.0698771476745605
    4. '#' → logprob: -8.444876670837402
    5. '’on' → logprob: -9.944876670837402
    6. '_on' → logprob: -11.069876670837402
    7. '10' → logprob: -11.819876670837402
    8. 'le' → logprob: -12.319876670837402
    9. 'ont' → logprob: -12.569876670837402
    10. 'total' → logprob: -12.694876670837402

Token 665: ' arr' (ID: 1724)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.2534542381763458
    2. 'arr' → logprob: -2.6284542083740234
    3. 'sub' → logprob: -3.6284542083740234
    4. 'a' → logprob: -3.6284542083740234
    5. 'corr' → logprob: -3.7534542083740234
    6. 'aj' → logprob: -3.7534542083740234
    7. 'ret' → logprob: -4.128454208374023
    8. 's' → logprob: -4.628454208374023
    9. 'optim' → logprob: -5.128454208374023
    10. 'rem' → logprob: -5.503454208374023

Token 666: 'ond' (ID: 1415)
  Prédit: 'ondi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.009959486313164234
    2. 'ond' → logprob: -4.634959697723389
    3. 'on' → logprob: -9.00995922088623
    4. 'ondissement' → logprob: -10.88495922088623
    5. 'ound' → logprob: -11.00995922088623
    6. 'ont' → logprob: -11.13495922088623
    7. 'onde' → logprob: -11.38495922088623
    8. 'onda' → logprob: -13.13495922088623
    9. 'ondes' → logprob: -13.63495922088623
    10. 'ived' → logprob: -13.88495922088623

Token 667: 'issait' (ID: 93767)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4509337544441223
    2. 'it' → logprob: -1.0759336948394775
    3. 'issait' → logprob: -3.9509336948394775
    4. 'is' → logprob: -7.075933933258057
    5. 'ir' → logprob: -7.575933933258057
    6. 'ait' → logprob: -7.700933933258057
    7. 'issant' → logprob: -8.200933456420898
    8. '#' → logprob: -8.200933456420898
    9. '```' → logprob: -10.075933456420898
    10. '[i' → logprob: -10.450933456420898

Token 668: ' tous' (ID: 10688)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2767504453659058
    2. 'au' → logprob: -1.2767504453659058
    3. 'un' → logprob: -1.9017504453659058
    4. 'le' → logprob: -2.2767505645751953
    5. 'à' → logprob: -2.9017505645751953
    6. 'les' → logprob: -3.2767505645751953
    7. 'on' → logprob: -3.5267505645751953
    8. ' au' → logprob: -3.7767505645751953
    9. ' un' → logprob: -4.776750564575195
    10. ' le' → logprob: -5.526750564575195

Token 669: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.0039100307039916515
    2. 'au' → logprob: -6.378910064697266
    3. ' les' → logprob: -6.503910064697266
    4. 'à' → logprob: -8.503910064697266
    5. 'i' → logprob: -8.628910064697266
    6. 'le' → logprob: -10.128910064697266
    7. 'aux' → logprob: -10.253910064697266
    8. '(' → logprob: -10.503910064697266
    9. 'except' → logprob: -10.628910064697266
    10. 's' → logprob: -10.878910064697266

Token 670: ' nombres' (ID: 76205)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8162646889686584
    2. 'nombre' → logprob: -1.5662646293640137
    3. 'i' → logprob: -1.6912646293640137
    4. 'numbers' → logprob: -3.1912646293640137
    5. ' nombres' → logprob: -3.1912646293640137
    6. 'd' → logprob: -3.5662646293640137
    7. 'am' → logprob: -4.316264629364014
    8. 'num' → logprob: -4.566264629364014
    9. 'elements' → logprob: -4.816264629364014
    10. 'val' → logprob: -5.191264629364014

Token 671: ' vers' (ID: 3640)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9590263962745667
    2. '#' → logprob: -1.2090263366699219
    3. 'au' → logprob: -1.5840263366699219
    4. ' au' → logprob: -3.334026336669922
    5. 'total' → logprob: -4.209026336669922
    6. 'à' → logprob: -4.584026336669922
    7. '   ' → logprob: -4.709026336669922
    8. 'up' → logprob: -4.834026336669922
    9. 'to' → logprob: -5.334026336669922
    10. 'aux' → logprob: -5.834026336669922

Token 672: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.00013131031300872564
    2. '10' → logprob: -9.125131607055664
    3. 'Le' → logprob: -12.500131607055664
    4. ' le' → logprob: -12.625131607055664
    5. '_le' → logprob: -12.750131607055664
    6. 'l' → logprob: -13.000131607055664
    7. '```' → logprob: -13.000131607055664
    8. 'ha' → logprob: -13.375131607055664
    9. '   ' → logprob: -13.750131607055664
    10. '(le' → logprob: -13.750131607055664

Token 673: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.03492018207907677
    2. 'ha' → logprob: -3.7849202156066895
    3. ' haut' → logprob: -4.7849202156066895
    4. 'bas' → logprob: -6.4099202156066895
    5. '10' → logprob: -6.9099202156066895
    6. 'up' → logprob: -8.784919738769531
    7. '   ' → logprob: -9.409919738769531
    8. '#' → logprob: -9.659919738769531
    9. '```' → logprob: -9.784919738769531
    10. 'H' → logprob: -9.909919738769531

Token 674: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2602204978466034
    2. '   ' → logprob: -1.7602205276489258
    3. '#' → logprob: -3.760220527648926
    4. 'total' → logprob: -3.885220527648926
    5. '+' → logprob: -5.760220527648926
    6. '10' → logprob: -5.885220527648926
    7. ' +' → logprob: -6.635220527648926
    8. ' on' → logprob: -7.135220527648926
    9. ' total' → logprob: -7.260220527648926
    10. ' ,' → logprob: -7.385220527648926

Token 675: '   ' (ID: 271)
  Prédit: ' am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' am' → logprob: -0.16236545145511627
    2. ' ' → logprob: -3.037365436553955
    3. 'am' → logprob: -3.037365436553955
    4. '10' → logprob: -3.037365436553955
    5. '   ' → logprob: -5.787365436553955
    6. '    ' → logprob: -6.662365436553955
    7. ' ten' → logprob: -7.287365436553955
    8. 'ten' → logprob: -7.787365436553955
    9. ' ' → logprob: -9.037365913391113
    10. ' total' → logprob: -9.537365913391113

Token 676: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9894562363624573
    2. '10' → logprob: -1.4894561767578125
    3. 'on' → logprob: -1.6144561767578125
    4. '#' (adapté à ' #') → logprob: -2.2394561767578125
    5. ' on' → logprob: -2.3644561767578125
    6. ' total' → logprob: -6.4894561767578125
    7. '   ' → logprob: -7.7394561767578125
    8. ' ' → logprob: -7.9894561767578125
    9. 'le' → logprob: -8.114456176757812
    10. 'il' → logprob: -9.114456176757812

Token 677: ' pour' (ID: 1930)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3521641492843628
    2. 'on' → logprob: -1.4771641492843628
    3. ' on' → logprob: -3.2271642684936523
    4. '10' → logprob: -4.227164268493652
    5. '#' → logprob: -4.602164268493652
    6. ' total' → logprob: -5.977164268493652
    7. '   ' → logprob: -6.852164268493652
    8. 'le' → logprob: -8.227164268493652
    9. ' ' → logprob: -9.727164268493652
    10. '  ' → logprob: -9.977164268493652

Token 678: ' chaque' (ID: 21194)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5019189119338989
    2. 'min' → logprob: -2.2519187927246094
    3. 'am' → logprob: -2.5019187927246094
    4. '#' → logprob: -3.0019187927246094
    5. ' le' → logprob: -3.0019187927246094
    6. 'l' → logprob: -4.001918792724609
    7. 'la' → logprob: -4.126918792724609
    8. ' am' → logprob: -4.126918792724609
    9. 'i' → logprob: -4.501918792724609
    10. ' réduire' → logprob: -5.376918792724609

Token 679: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7417789101600647
    2. 'nombre' → logprob: -1.24177885055542
    3. 'am' → logprob: -2.11677885055542
    4. ' nombre' → logprob: -3.11677885055542
    5. ' i' → logprob: -3.49177885055542
    6. 'number' → logprob: -4.61677885055542
    7. 'multiple' → logprob: -5.36677885055542
    8. 'val' → logprob: -5.61677885055542
    9. 'élé' → logprob: -6.11677885055542
    10. ' am' → logprob: -6.24177885055542

Token 680: ' non' (ID: 2893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.484379380941391
    2. ' on' → logprob: -2.234379291534424
    3. 'except' → logprob: -2.984379291534424
    4. '#' → logprob: -3.359379291534424
    5. 'non' → logprob: -3.359379291534424
    6. 'arr' → logprob: -3.484379291534424
    7. 'on' → logprob: -3.734379291534424
    8. '   ' → logprob: -4.234379291534424
    9. ' non' → logprob: -4.359379291534424
    10. ' except' → logprob: -5.109379291534424

Token 681: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.12257153540849686
    2. 'multip' → logprob: -2.6225714683532715
    3. '0' → logprob: -4.1225714683532715
    4. ' multiple' → logprob: -4.2475714683532715
    5. 'mult' → logprob: -5.3725714683532715
    6. '10' → logprob: -5.6225714683532715
    7. '   ' → logprob: -6.8725714683532715
    8. 'uple' → logprob: -7.9975714683532715
    9. 'ultiple' → logprob: -8.12257194519043
    10. 'arr' → logprob: -8.24757194519043

Token 682: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.019471431151032448
    2. ' de' → logprob: -4.019471645355225
    3. '10' → logprob: -6.769471645355225
    4. 's' → logprob: -10.269471168518066
    5. 'd' → logprob: -10.644471168518066
    6. '#' → logprob: -11.019471168518066
    7. '_de' → logprob: -11.019471168518066
    8. 'def' → logprob: -11.144471168518066
    9. ',' → logprob: -11.269471168518066
    10. ' ' → logprob: -11.644471168518066

Token 683: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014187720604240894
    2. ' ' → logprob: -4.264187812805176
    3. 'd' → logprob: -11.264187812805176
    4. ' dix' → logprob: -12.014187812805176
    5. ' ' → logprob: -13.389187812805176
    6. '100' → logprob: -14.264187812805176
    7. '```' → logprob: -14.889187812805176
    8. '>' → logprob: -15.139187812805176
    9. 's' → logprob: -15.139187812805176
    10. '#' → logprob: -15.264187812805176

Token 684: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00251656211912632
    2. 'd' → logprob: -6.002516746520996
    3. ' ' → logprob: -10.502516746520996
    4. ' dix' → logprob: -12.127516746520996
    5. '```' → logprob: -12.502516746520996
    6. '#' → logprob: -14.127516746520996
    7. ' ' → logprob: -14.252516746520996
    8. '１０' → logprob: -14.377516746520996
    9. 'ten' → logprob: -14.502516746520996
    10. '0' → logprob: -15.252516746520996

Token 685: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07867880165576935
    2. '-' → logprob: -3.328678846359253
    3. '#' → logprob: -3.828678846359253
    4. 'total' → logprob: -4.953678607940674
    5. ' -' → logprob: -5.578678607940674
    6. ' on' → logprob: -6.703678607940674
    7. '<|end|>' → logprob: -6.953678607940674
    8. ' total' → logprob: -7.203678607940674
    9. ')' → logprob: -7.203678607940674
    10. '   ' → logprob: -7.453678607940674

Token 686: ' on' (ID: 402)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.06396380066871643
    2. ' total' → logprob: -2.9389638900756836
    3. '#' → logprob: -4.938963890075684
    4. '10' → logprob: -6.313963890075684
    5. ' #' → logprob: -10.813963890075684
    6. ' ' → logprob: -11.188963890075684
    7. '<|end|>' → logprob: -12.188963890075684
    8. '	total' → logprob: -12.313963890075684
    9. '(total' → logprob: -12.813963890075684
    10. ' we' → logprob: -12.813963890075684

Token 687: ' ajout' (ID: 64605)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.8749445676803589
    2. ' sou' → logprob: -1.1249445676803589
    3. ' a' → logprob: -2.2499446868896484
    4. 'subtract' → logprob: -2.8749446868896484
    5. 'a' → logprob: -3.1249446868896484
    6. ' subtract' → logprob: -3.3749446868896484
    7. 's' → logprob: -5.249944686889648
    8. 'sub' → logprob: -5.499944686889648
    9. 'avait' → logprob: -5.999944686889648
    10. '#' → logprob: -6.249944686889648

Token 688: 'ait' (ID: 1271)
  Prédit: 'ait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ait' → logprob: -0.1058230847120285
    2. '10' → logprob: -2.980823040008545
    3. 'ai' → logprob: -4.480823040008545
    4. 'ais' → logprob: -4.730823040008545
    5. 'a' → logprob: -4.855823040008545
    6. '1' → logprob: -5.355823040008545
    7. ' ' → logprob: -5.480823040008545
    8. 'ons' → logprob: -5.480823040008545
    9. '+' → logprob: -6.605823040008545
    10. '-' → logprob: -6.730823040008545

Token 689: ' "' (ID: 392)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00556018203496933
    2. ' ' → logprob: -5.505560398101807
    3. '1' → logprob: -7.380560398101807
    4. 'am' → logprob: -7.755560398101807
    5. ' am' → logprob: -8.130559921264648
    6. ' a' → logprob: -9.630559921264648
    7. '#' → logprob: -11.005559921264648
    8. ' the' → logprob: -11.380559921264648
    9. ' (' → logprob: -11.755559921264648
    10. 'a' → logprob: -11.755559921264648

Token 690: 'jus' (ID: 56271)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03404005989432335
    2. 'am' → logprob: -3.6590399742126465
    3. '(' → logprob: -5.7840399742126465
    4. ' ' → logprob: -5.9090399742126465
    5. 'ten' → logprob: -7.2840399742126465
    6. ' (' → logprob: -7.9090399742126465
    7. ' am' → logprob: -7.9090399742126465
    8. '1' → logprob: -7.9090399742126465
    9. ' ten' → logprob: -10.284040451049805
    10. '(am' → logprob: -11.034040451049805

Token 691: 'qu' (ID: 351)
  Prédit: 'qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.17663511633872986
    2. 'que' → logprob: -1.9266351461410522
    3. '10' → logprob: -5.551635265350342
    4. 'ques' → logprob: -5.551635265350342
    5. 't' → logprob: -5.801635265350342
    6. 'q' → logprob: -6.676635265350342
    7. 'quant' → logprob: -7.051635265350342
    8. 'u' → logprob: -7.301635265350342
    9. 'pend' → logprob: -7.926635265350342
    10. '```' → logprob: -8.676634788513184

Token 692: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.7257224321365356
    2. 'à' → logprob: -1.3507224321365356
    3. 'au' → logprob: -1.4757224321365356
    4. ''au' → logprob: -4.475722312927246
    5. '’à' → logprob: -5.225722312927246
    6. 'a' → logprob: -5.475722312927246
    7. '10' → logprob: -5.975722312927246
    8. '#' → logprob: -5.975722312927246
    9. '```' → logprob: -7.725722312927246
    10. 'al' → logprob: -7.850722312927246

Token 693: ' +' (ID: 659)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03971903398633003
    2. ' ' → logprob: -3.9147191047668457
    3. '(' → logprob: -4.164719104766846
    4. ' (' → logprob: -6.289719104766846
    5. ' am' → logprob: -7.414719104766846
    6. 'am' → logprob: -7.414719104766846
    7. '1' → logprob: -9.164718627929688
    8. '9' → logprob: -9.414718627929688
    9. '```' → logprob: -9.789718627929688
    10. '<|end|>' → logprob: -10.414718627929688

Token 694: '9' (ID: 24)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06960467994213104
    2. '9' → logprob: -3.1946046352386475
    3. '(' → logprob: -3.6946046352386475
    4. ' ' → logprob: -7.069604873657227
    5. ' (' → logprob: -7.694604873657227
    6. '1' → logprob: -10.319604873657227
    7. '```' → logprob: -10.819604873657227
    8. 'am' → logprob: -11.944604873657227
    9. 'ten' → logprob: -12.632104873657227
    10. '   ' → logprob: -13.194604873657227

Token 695: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.028296301141381264
    2. ')"' → logprob: -4.15329647064209
    3. '",' → logprob: -4.90329647064209
    4. ')",' → logprob: -6.27829647064209
    5. ')' → logprob: -7.40329647064209
    6. '10' → logprob: -7.77829647064209
    7. '")' → logprob: -7.90329647064209
    8. ' +' → logprob: -8.40329647064209
    9. 'minimum' → logprob: -8.90329647064209
    10. '9' → logprob: -9.15329647064209

Token 696: ' en' (ID: 469)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0432136170566082
    2. '-' → logprob: -3.5432136058807373
    3. ' total' → logprob: -5.043213844299316
    4. '
' → logprob: -5.793213844299316
    5. '   ' → logprob: -5.918213844299316
    6. ' -' → logprob: -8.043213844299316
    7. '#' → logprob: -8.168213844299316
    8. '-total' → logprob: -8.168213844299316
    9. '-
' → logprob: -9.293213844299316
    10. '+' → logprob: -9.293213844299316

Token 697: ' trop' (ID: 14765)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.08056886494159698
    2. 'total' → logprob: -3.955568790435791
    3. 'am' → logprob: -4.455568790435791
    4. 'val' → logprob: -4.705568790435791
    5. '10' → logprob: -4.830568790435791
    6. 'ten' → logprob: -5.205568790435791
    7. '+' → logprob: -5.705568790435791
    8. '```' → logprob: -5.705568790435791
    9. 'exc' → logprob: -5.955568790435791
    10. 'sup' → logprob: -6.080568790435791

Token 698: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7947049140930176
    2. '-' → logprob: -1.2947049140930176
    3. ' -' → logprob: -1.9197049140930176
    4. 'total' → logprob: -2.9197049140930176
    5. '-total' → logprob: -3.0447049140930176
    6. '
' → logprob: -4.294704914093018
    7. ' total' → logprob: -4.544704914093018
    8. '
' → logprob: -7.169704914093018
    9. ' ' → logprob: -8.54470443725586
    10. '-
' → logprob: -8.91970443725586

Token 699: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0059122079983353615
    2. ' total' → logprob: -5.2559123039245605
    3. '-' → logprob: -7.5059123039245605
    4. '   ' → logprob: -9.505911827087402
    5. '-total' → logprob: -10.505911827087402
    6. '10' → logprob: -11.505911827087402
    7. ' -' → logprob: -11.630911827087402
    8. '#' → logprob: -12.505911827087402
    9. '
' → logprob: -13.630911827087402
    10. '(total' → logprob: -14.005911827087402

Token 700: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0029022356029599905
    2. ' total' → logprob: -5.877902030944824
    3. '10' → logprob: -9.252902030944824
    4. ' ' → logprob: -14.627902030944824
    5. '   ' → logprob: -14.752902030944824
    6. '#' (adapté à ' #') → logprob: -15.002902030944824
    7. '(total' → logprob: -16.25290298461914
    8. '	total' → logprob: -16.62790298461914
    9. '-' → logprob: -17.12790298461914
    10. '1' → logprob: -17.75290298461914

Token 701: ' On' (ID: 2160)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -4.36574100604048e-06
    2. ' total' → logprob: -12.750004768371582
    3. '#' → logprob: -13.750004768371582
    4. '10' → logprob: -15.000004768371582
    5. '   ' → logprob: -17.875003814697266
    6. 'minimum' → logprob: -19.125003814697266
    7. 'subtract' → logprob: -19.250003814697266
    8. '	total' → logprob: -19.375003814697266
    9. ' ' → logprob: -19.625003814697266
    10. 'for' → logprob: -19.750003814697266

Token 702: ' peut' (ID: 9216)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.06839482486248016
    2. 'total' → logprob: -3.443394899368286
    3. '-' → logprob: -4.193394660949707
    4. ' -=' → logprob: -4.443394660949707
    5. '+=' → logprob: -5.818394660949707
    6. '#' → logprob: -6.068394660949707
    7. '=' → logprob: -6.818394660949707
    8. ' total' → logprob: -7.318394660949707
    9. '   ' → logprob: -9.318394660949707
    10. ' +=' → logprob: -10.568394660949707

Token 703: ' comp' (ID: 1050)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.009323690086603165
    2. ' sou' → logprob: -5.259323596954346
    3. 'total' → logprob: -6.259323596954346
    4. 'sub' → logprob: -7.384323596954346
    5. 'ret' → logprob: -7.759323596954346
    6. 'retr' → logprob: -7.759323596954346
    7. 'subtract' → logprob: -8.134324073791504
    8. ' retirer' → logprob: -9.009324073791504
    9. ' retr' → logprob: -9.884324073791504
    10. '#' → logprob: -9.884324073791504

Token 704: 'enser' (ID: 114019)
  Prédit: 'penser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'penser' → logprob: -0.01934831775724888
    2. 'p' → logprob: -4.76934814453125
    3. 'pens' → logprob: -5.14434814453125
    4. 'pen' → logprob: -6.01934814453125
    5. 'puter' → logprob: -7.26934814453125
    6. 'prendre' → logprob: -7.76934814453125
    7. 'ment' → logprob: -8.26934814453125
    8. 'ple' → logprob: -8.51934814453125
    9. 'pler' → logprob: -9.01934814453125
    10. '```' → logprob: -9.14434814453125

Token 705: ' ce' (ID: 2357)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.5499141812324524
    2. 'total' → logprob: -2.1749141216278076
    3. ' par' → logprob: -2.4249141216278076
    4. ' by' → logprob: -2.5499141216278076
    5. ' ten' → logprob: -2.6749141216278076
    6. ' am' → logprob: -4.174914360046387
    7. '   ' → logprob: -4.174914360046387
    8. ' en' → logprob: -4.299914360046387
    9. 'ten' → logprob: -5.049914360046387
    10. ' le' → logprob: -5.924914360046387

Token 706: ' "' (ID: 392)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.8303483724594116
    2. 'plus' → logprob: -1.8303483724594116
    3. 'am' → logprob: -2.080348491668701
    4. ' minimum' → logprob: -2.830348491668701
    5. ' plus' → logprob: -3.205348491668701
    6. ' am' → logprob: -3.205348491668701
    7. 'min' → logprob: -3.330348491668701
    8. '10' → logprob: -3.580348491668701
    9. '+' → logprob: -3.580348491668701
    10. ' minimal' → logprob: -4.455348491668701

Token 707: 'g' (ID: 70)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1500430852174759
    2. 'am' → logprob: -2.52504301071167
    3. 'min' → logprob: -3.65004301071167
    4. ' ' → logprob: -4.15004301071167
    5. ' am' → logprob: -4.77504301071167
    6. 'minimum' → logprob: -5.90004301071167
    7. '1' → logprob: -6.27504301071167
    8. 'ten' → logprob: -6.40004301071167
    9. ' min' → logprob: -7.02504301071167
    10. ' (' → logprob: -8.275043487548828

Token 708: 'asp' (ID: 13954)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4946105480194092
    2. 'ard' → logprob: -2.619610548019409
    3. 'rand' → logprob: -2.619610548019409
    4. 'arder' → logprob: -3.244610548019409
    5. 'lobal' → logprob: -3.619610548019409
    6. 'r' → logprob: -3.744610548019409
    7. 'u' → logprob: -3.744610548019409
    8. '+' → logprob: -4.244610786437988
    9. 'ran' → logprob: -4.244610786437988
    10. 'reater' → logprob: -4.369610786437988

Token 709: 'illage' (ID: 44473)
  Prédit: 'illage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illage' → logprob: -0.0019180490635335445
    2. 'ilage' → logprob: -7.001917839050293
    3. 'iller' → logprob: -7.376917839050293
    4. 'ille' → logprob: -8.876917839050293
    5. 'i' → logprob: -9.501917839050293
    6. 'age' → logprob: -9.876917839050293
    7. 'ill' → logprob: -10.626917839050293
    8. 'er' → logprob: -11.126917839050293
    9. 'lage' → logprob: -11.126917839050293
    10. 'il' → logprob: -11.126917839050293

Token 710: '"' (ID: 1)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.015594950877130032
    2. ' by' → logprob: -4.890594959259033
    3. ' par' → logprob: -5.015594959259033
    4. ' avec' → logprob: -8.265594482421875
    5. 'by' → logprob: -8.890594482421875
    6. ' -' → logprob: -9.265594482421875
    7. ' de' → logprob: -9.265594482421875
    8. 'en' → logprob: -9.390594482421875
    9. ' au' → logprob: -9.515594482421875
    10. ' minimal' → logprob: -9.640594482421875

Token 711: ' pour' (ID: 1930)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.15743866562843323
    2. '   ' → logprob: -2.0324387550354004
    3. '-=' → logprob: -5.6574387550354
    4. ' by' → logprob: -5.6574387550354
    5. ' +=' → logprob: -6.2824387550354
    6. ' =' → logprob: -6.2824387550354
    7. '-' → logprob: -7.0324387550354
    8. ' -' → logprob: -7.1574387550354
    9. '=' → logprob: -7.4074387550354
    10. ' en' → logprob: -7.7824387550354

Token 712: ' un' (ID: 537)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9786224961280823
    2. ' total' → logprob: -1.1036224365234375
    3. 'min' → logprob: -2.2286224365234375
    4. 'am' → logprob: -2.6036224365234375
    5. ' am' → logprob: -3.4786224365234375
    6. ' réduire' → logprob: -3.9786224365234375
    7. '10' → logprob: -4.8536224365234375
    8. 'le' → logprob: -4.9786224365234375
    9. ' ' → logprob: -5.3536224365234375
    10. ' le' → logprob: -5.3536224365234375

Token 713: ' nombre' (ID: 9733)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -1.8266392946243286
    2. 'am' → logprob: -2.076639175415039
    3. ' minimum' → logprob: -2.326639175415039
    4. 'e' → logprob: -2.326639175415039
    5. ' montant' → logprob: -2.701639175415039
    6. 'se' → logprob: -2.826639175415039
    7. 'i' → logprob: -2.951639175415039
    8. ' am' → logprob: -3.076639175415039
    9. ' total' → logprob: -3.076639175415039
    10. ' seul' → logprob: -3.701639175415039

Token 714: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.221431702375412
    2. ' -' → logprob: -1.9714317321777344
    3. 'minimum' → logprob: -4.221431732177734
    4. '-' → logprob: -4.596431732177734
    5. ' minimal' → logprob: -5.346431732177734
    6. 'minimal' → logprob: -5.471431732177734
    7. ' smallest' → logprob: -5.596431732177734
    8. 'min' → logprob: -5.846431732177734
    9. ' en' → logprob: -6.096431732177734
    10. ' am' → logprob: -6.096431732177734

Token 715: ' celui' (ID: 27857)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.0163029432296753
    2. 'total' → logprob: -1.0163029432296753
    3. '   ' → logprob: -1.8913029432296753
    4. ' et' → logprob: -3.516303062438965
    5. '10' → logprob: -4.016303062438965
    6. '-' → logprob: -4.516303062438965
    7. ' ' → logprob: -4.641303062438965
    8. ' en' → logprob: -4.641303062438965
    9. 'et' → logprob: -4.891303062438965
    10. ' -' → logprob: -5.141303062438965

Token 716: ' dont' (ID: 11562)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32839491963386536
    2. ' qui' → logprob: -2.078394889831543
    3. 'qui' → logprob: -2.703394889831543
    4. ' de' → logprob: -4.078394889831543
    5. 'de' → logprob: -4.703394889831543
    6. '-' → logprob: -4.703394889831543
    7. 'moins' → logprob: -4.703394889831543
    8. '   ' → logprob: -4.953394889831543
    9. ' #' → logprob: -5.703394889831543
    10. '+' → logprob: -5.703394889831543

Token 717: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6403669118881226
    2. 'am' → logprob: -1.5153669118881226
    3. 'l' → logprob: -1.7653669118881226
    4. ' le' → logprob: -3.765367031097412
    5. ' l' → logprob: -3.765367031097412
    6. ' am' → logprob: -4.265367031097412
    7. 'la' → logprob: -4.515367031097412
    8. '#' → logprob: -4.765367031097412
    9. ' la' → logprob: -7.765367031097412
    10. 'the' → logprob: -8.140366554260254

Token 718: ' reste' (ID: 26769)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.008791127242147923
    2. 'plus' → logprob: -5.258790969848633
    3. ' am' → logprob: -6.383790969848633
    4. '#' → logprob: -8.008790969848633
    5. 'min' → logprob: -8.258790969848633
    6. 'reste' → logprob: -8.633790969848633
    7. 'sur' → logprob: -8.758790969848633
    8. 'small' → logprob: -8.883790969848633
    9. 'minimum' → logprob: -8.883790969848633
    10. ' plus' → logprob: -9.258790969848633

Token 719: ' était' (ID: 16647)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.20306426286697388
    2. 'est' → logprob: -2.328064203262329
    3. '#' → logprob: -3.078064203262329
    4. ' minimal' → logprob: -4.328064441680908
    5. 'minimal' → logprob: -4.453064441680908
    6. ' le' → logprob: -4.828064441680908
    7. 'le' → logprob: -6.078064441680908
    8. 'minimum' → logprob: -6.453064441680908
    9. ' #' → logprob: -6.953064441680908
    10. 'min' → logprob: -7.078064441680908

Token 720: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3879653215408325
    2. ' le' → logprob: -1.1379653215408325
    3. ' am' → logprob: -8.512965202331543
    4. 'min' → logprob: -8.512965202331543
    5. 'minimal' → logprob: -8.637965202331543
    6. 'am' → logprob: -8.762965202331543
    7. ' minimal' → logprob: -9.012965202331543
    8. '#' → logprob: -9.387965202331543
    9. 'minimum' → logprob: -9.637965202331543
    10. ' the' → logprob: -11.012965202331543

Token 721: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.009549480862915516
    2. 'am' → logprob: -5.759549617767334
    3. 'min' → logprob: -5.759549617767334
    4. ' plus' → logprob: -6.759549617767334
    5. 'minimum' → logprob: -7.259549617767334
    6. 'small' → logprob: -7.509549617767334
    7. 'moins' → logprob: -8.259549140930176
    8. 'minimal' → logprob: -9.009549140930176
    9. 'prem' → logprob: -9.259549140930176
    10. '#' → logprob: -10.009549140930176

Token 722: ' faible' (ID: 75786)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.007867928594350815
    2. 'fa' → logprob: -5.007867813110352
    3. 'small' → logprob: -7.257867813110352
    4. ' petit' → logprob: -7.882867813110352
    5. '小' → logprob: -10.882867813110352
    6. 'grand' → logprob: -11.257867813110352
    7. '```' → logprob: -11.257867813110352
    8. ' faible' → logprob: -12.007867813110352
    9. 'Petit' → logprob: -12.257867813110352
    10. 'pe' → logprob: -12.507867813110352

Token 723: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01562440488487482
    2. 'total' → logprob: -4.765624523162842
    3. ' total' → logprob: -5.015624523162842
    4. '
' → logprob: -9.265624046325684
    5. ' ' → logprob: -10.015624046325684
    6. '-' → logprob: -10.265624046325684
    7. '	total' → logprob: -10.265624046325684
    8. ',' → logprob: -10.390624046325684
    9. '(total' → logprob: -10.890624046325684
    10. '  ' → logprob: -11.265624046325684

Token 724: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7793582677841187
    2. ' -=' → logprob: -1.7793582677841187
    3. 'total' → logprob: -1.7793582677841187
    4. '-' → logprob: -2.279358386993408
    5. '-=' → logprob: -2.779358386993408
    6. ' total' → logprob: -3.404358386993408
    7. '
' → logprob: -6.404358386993408
    8. '=' → logprob: -6.779358386993408
    9. '-total' → logprob: -7.029358386993408
    10. ' -' → logprob: -7.029358386993408

Token 725: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.005253322422504425
    2. ' total' → logprob: -5.255253314971924
    3. '-' → logprob: -11.255253791809082
    4. ' -' → logprob: -13.005253791809082
    5. '   ' → logprob: -13.130253791809082
    6. '-total' → logprob: -13.755253791809082
    7. '10' → logprob: -14.755253791809082
    8. '(total' → logprob: -15.255253791809082
    9. '#' (adapté à ' #') → logprob: -15.505253791809082
    10. '	total' → logprob: -16.505252838134766

Token 726: ' On' (ID: 2160)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.000528606993611902
    2. ' total' → logprob: -7.750528812408447
    3. '   ' → logprob: -9.250528335571289
    4. '#' → logprob: -14.250528335571289
    5. ' ' → logprob: -14.500528335571289
    6. '	total' → logprob: -15.750528335571289
    7. 'subtract' → logprob: -15.750528335571289
    8. '-' → logprob: -15.875528335571289
    9. '10' → logprob: -16.50052833557129
    10. 'minimum' → logprob: -17.00052833557129

Token 727: ' ajoute' (ID: 91611)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.7636025547981262
    2. 'total' → logprob: -1.2636024951934814
    3. ' -=' → logprob: -1.7636024951934814
    4. ' total' → logprob: -3.2636024951934814
    5. '=' → logprob: -3.3886024951934814
    6. '   ' → logprob: -6.3886027336120605
    7. ' =' → logprob: -6.3886027336120605
    8. '+=' → logprob: -6.5136027336120605
    9. '#' → logprob: -7.3886027336120605
    10. '-' → logprob: -7.6386027336120605

Token 728: ' son' (ID: 2391)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8797271847724915
    2. ' -' → logprob: -1.8797271251678467
    3. '-' → logprob: -2.0047271251678467
    4. ' am' → logprob: -2.7547271251678467
    5. 'am' → logprob: -2.7547271251678467
    6. '   ' → logprob: -3.1297271251678467
    7. 'total' → logprob: -3.6297271251678467
    8. ' ' → logprob: -3.7547271251678467
    9. ' total' → logprob: -4.379727363586426
    10. '=' → logprob: -4.629727363586426

Token 729: ' reste' (ID: 26769)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.12095704674720764
    2. ' am' → logprob: -2.745957136154175
    3. '10' → logprob: -3.245957136154175
    4. ' ' → logprob: -4.870956897735596
    5. ' (' → logprob: -7.370956897735596
    6. '(' → logprob: -7.620956897735596
    7. '
' → logprob: -8.245957374572754
    8. '[' → logprob: -8.870957374572754
    9. 'amin' → logprob: -8.870957374572754
    10. 'minimum' → logprob: -9.433457374572754

Token 730: ' au' (ID: 2791)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.037936020642519
    2. ' am' → logprob: -4.287936210632324
    3. '   ' → logprob: -4.537936210632324
    4. ' -=' → logprob: -5.412936210632324
    5. '-' → logprob: -5.662936210632324
    6. ' +' → logprob: -6.537936210632324
    7. 'am' → logprob: -6.787936210632324
    8. ' +=' → logprob: -7.287936210632324
    9. ' to' → logprob: -7.787936210632324
    10. ' =' → logprob: -8.037936210632324

Token 731: ' total' (ID: 3609)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.03883519768714905
    2. 'total' → logprob: -3.788835287094116
    3. ' am' → logprob: -4.288835048675537
    4. '10' → logprob: -6.913835048675537
    5. ' total' → logprob: -7.288835048675537
    6. 'amin' → logprob: -10.413835525512695
    7. ' ' → logprob: -10.538835525512695
    8. 'min' → logprob: -12.913835525512695
    9. '-' → logprob: -14.038835525512695
    10. '#' → logprob: -14.163835525512695

Token 732: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5188332796096802
    2. 'total' → logprob: -1.5188332796096802
    3. '+=' → logprob: -3.1438331604003906
    4. '-' → logprob: -3.3938331604003906
    5. ' +=' → logprob: -3.5188331604003906
    6. ' total' → logprob: -3.5188331604003906
    7. ' -' → logprob: -3.7688331604003906
    8. ' -=' → logprob: -4.518833160400391
    9. ' +' → logprob: -5.143833160400391
    10. '+' → logprob: -5.518833160400391

Token 733: ' ré' (ID: 3146)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.16223734617233276
    2. 'min' → logprob: -2.5372374057769775
    3. ' total' → logprob: -3.4122374057769775
    4. 'ré' → logprob: -5.037237167358398
    5. ' réduire' → logprob: -5.287237167358398
    6. 'correct' → logprob: -5.787237167358398
    7. '10' → logprob: -5.787237167358398
    8. 'comp' → logprob: -6.162237167358398
    9. 'corr' → logprob: -6.912237167358398
    10. '#' → logprob: -7.037237167358398

Token 734: 'tabl' (ID: 138168)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.000720891694072634
    2. 'aj' → logprob: -7.625720977783203
    3. 'tabl' → logprob: -9.250720977783203
    4. 'équ' → logprob: -9.750720977783203
    5. 'd' → logprob: -10.625720977783203
    6. 'duction' → logprob: -11.375720977783203
    7. 'total' → logprob: -12.000720977783203
    8. 'parer' → logprob: -12.125720977783203
    9. 'é' → logprob: -12.125720977783203
    10. 'int' → logprob: -12.750720977783203

Token 735: 'ir' (ID: 380)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0027732516173273325
    2. ' total' → logprob: -7.377773284912109
    3. 'ifier' → logprob: -7.752773284912109
    4. '   ' → logprob: -8.00277328491211
    5. 'total' → logprob: -8.00277328491211
    6. 'is' → logprob: -8.25277328491211
    7. 'isser' → logprob: -9.12777328491211
    8. 's' → logprob: -9.25277328491211
    9. 'i' → logprob: -9.50277328491211
    10. 'c' → logprob: -9.62777328491211

Token 736: ' la' (ID: 557)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.3134998679161072
    2. ' am' → logprob: -1.313499927520752
    3. '10' → logprob: -8.938499450683594
    4. '+' → logprob: -10.313499450683594
    5. '(am' → logprob: -10.563499450683594
    6. 'ten' → logprob: -11.313499450683594
    7. ' +' → logprob: -11.938499450683594
    8. '   ' → logprob: -12.313499450683594
    9. ' ' → logprob: -12.438499450683594
    10. 'total' → logprob: -12.688499450683594

Token 737: ' différence' (ID: 79196)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.0792295932769775
    2. 'am' → logprob: -1.8292295932769775
    3. ' total' → logprob: -2.3292295932769775
    4. '10' → logprob: -2.4542295932769775
    5. ' am' → logprob: -2.5792295932769775
    6. 'plus' → logprob: -2.7042295932769775
    7. 'prem' → logprob: -2.9542295932769775
    8. 'minimum' → logprob: -3.5792295932769775
    9. ' ' → logprob: -3.8292295932769775
    10. ' plus' → logprob: -4.204229354858398

Token 738: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8793720602989197
    2. 'total' → logprob: -1.0043721199035645
    3. '
' → logprob: -1.6293721199035645
    4. ' total' → logprob: -4.6293721199035645
    5. '+' → logprob: -5.1293721199035645
    6. '-' → logprob: -6.3793721199035645
    7. '+=' → logprob: -6.5043721199035645
    8. '+
' → logprob: -7.0043721199035645
    9. '=' → logprob: -7.2543721199035645
    10. '-total' → logprob: -7.6293721199035645

Token 739: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8003547787666321
    2. 'total' → logprob: -1.0503547191619873
    3. '   ' → logprob: -1.6753547191619873
    4. ' total' → logprob: -5.175354957580566
    5. '-' → logprob: -5.675354957580566
    6. '+
' → logprob: -6.550354957580566
    7. '-
' → logprob: -7.175354957580566
    8. '+' → logprob: -7.675354957580566
    9. '
' → logprob: -7.800354957580566
    10. '    
' → logprob: -8.050354957580566

Token 740: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.003714569378644228
    2. ' total' → logprob: -5.628714561462402
    3. '-' → logprob: -9.878714561462402
    4. '   ' → logprob: -10.253714561462402
    5. '
' → logprob: -11.003714561462402
    6. '-total' → logprob: -12.753714561462402
    7. ' -' → logprob: -13.128714561462402
    8. '-
' → logprob: -13.253714561462402
    9. '10' → logprob: -14.253714561462402
    10. '
' → logprob: -14.253714561462402

Token 741: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.20894558727741241
    2. ' -=' → logprob: -1.708945631980896
    3. '=' → logprob: -4.9589457511901855
    4. '-' → logprob: -7.8339457511901855
    5. ' =' → logprob: -9.833945274353027
    6. '+=' → logprob: -10.458945274353027
    7. ' -' → logprob: -13.208945274353027
    8. ' +=' → logprob: -13.708945274353027
    9. '   ' → logprob: -13.958945274353027
    10. ' ' → logprob: -14.333945274353027

Token 742: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.20142318308353424
    2. ' total' → logprob: -1.701423168182373
    3. '(total' → logprob: -12.701423645019531
    4. '10' → logprob: -12.826423645019531
    5. '	total' → logprob: -13.826423645019531
    6. 't' → logprob: -14.076423645019531
    7. ' ' → logprob: -14.201423645019531
    8. ' ' → logprob: -14.701423645019531
    9. '   ' → logprob: -14.826423645019531
    10. 'tot' → logprob: -15.576423645019531

Token 743: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25193288922309875
    2. '-' → logprob: -1.5019328594207764
    3. ' ' → logprob: -13.501933097839355
    4. ' ' → logprob: -14.001933097839355
    5. '-ten' → logprob: -14.501933097839355
    6. '+' → logprob: -14.876933097839355
    7. '-total' → logprob: -15.126933097839355
    8. '-
' → logprob: -16.12693214416504
    9. ' +' → logprob: -16.50193214416504
    10. '   ' → logprob: -16.75193214416504

Token 744: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0008102210704237223
    2. '(' → logprob: -7.125810146331787
    3. ' ' → logprob: -12.250810623168945
    4. ' (' → logprob: -14.500810623168945
    5. 'ten' → logprob: -15.125810623168945
    6. '   ' → logprob: -16.250810623168945
    7. '１０' → logprob: -17.500810623168945
    8. '1' → logprob: -17.750810623168945
    9. '```' → logprob: -18.500810623168945
    10. ' ten' → logprob: -18.750810623168945

Token 745: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.24179228907451e-05
    2. '(' → logprob: -9.750061988830566
    3. ' ' → logprob: -12.500061988830566
    4. 'ten' → logprob: -15.750061988830566
    5. ' (' → logprob: -16.250062942504883
    6. '   ' → logprob: -16.625062942504883
    7. '１０' → logprob: -17.750062942504883
    8. '```' → logprob: -18.125062942504883
    9. '1' → logprob: -18.750062942504883
    10. '۱۰' → logprob: -18.875062942504883

Token 746: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023248974233865738
    2. ' +' → logprob: -3.7732489109039307
    3. '   ' → logprob: -12.898248672485352
    4. ' plus' → logprob: -14.648248672485352
    5. 'plus' → logprob: -15.023248672485352
    6. '＋' → logprob: -15.648248672485352
    7. '+a' → logprob: -17.14824867248535
    8. '    ' → logprob: -17.39824867248535
    9. ' ' → logprob: -17.64824867248535
    10. '+++' → logprob: -18.14824867248535

Token 747: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0001584850688232109
    2. ' am' → logprob: -8.750158309936523
    3. 'amin' → logprob: -17.625158309936523
    4. 'amp' → logprob: -18.875158309936523
    5. ' ' → logprob: -19.000158309936523
    6. 'amn' → logprob: -19.375158309936523
    7. 'ams' → logprob: -20.250158309936523
    8. '(am' → logprob: -20.375158309936523
    9. 'amm' → logprob: -20.625158309936523
    10. 'amu' → logprob: -20.750158309936523

Token 748: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -1.5048530030981055e-06
    2. 'ar' → logprob: -14.250001907348633
    3. 'am' → logprob: -14.375001907348633
    4. 'a' → logprob: -16.250001907348633
    5. 'ami' → logprob: -18.000001907348633
    6. 'ари' → logprob: -18.125001907348633
    7. 'ary' → logprob: -18.375001907348633
    8. ' am' → logprob: -18.875001907348633
    9. ' ari' → logprob: -19.000001907348633
    10. 'ara' → logprob: -19.250001907348633

Token 749: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.1085304245352745
    2. '_' → logprob: -2.4835305213928223
    3. '[' → logprob: -4.358530521392822
    4. 'am' → logprob: -5.983530521392822
    5. '_am' → logprob: -6.483530521392822
    6. ' _' → logprob: -7.483530521392822
    7. '.' → logprob: -7.483530521392822
    8. 'List' → logprob: -8.233530044555664
    9. 's' → logprob: -8.483530044555664
    10. '0' → logprob: -8.608530044555664

Token 750: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010986098641296849
    2. '0' → logprob: -9.125109672546387
    3. ' [' → logprob: -14.250109672546387
    4. '\[' → logprob: -16.375110626220703
    5. '```' → logprob: -16.875110626220703
    6. '#' → logprob: -17.375110626220703
    7. '][' → logprob: -17.375110626220703
    8. '[
' → logprob: -17.875110626220703
    9. '(' → logprob: -17.875110626220703
    10. '()[' → logprob: -18.500110626220703

Token 751: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '<|end|>' → logprob: -16.5
    4. '۰' → logprob: -17.875
    5. '[' → logprob: -18.25
    6. '000' → logprob: -18.625
    7. '০' → logprob: -18.75
    8. '00' → logprob: -19.625
    9. 'user' → logprob: -19.875
    10. '٠' → logprob: -19.9375

Token 752: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001170132018160075
    2. ' ]' → logprob: -9.500117301940918
    3. ')' → logprob: -10.625117301940918
    4. '])' → logprob: -11.250117301940918
    5. '}' → logprob: -13.250117301940918
    6. ']}' → logprob: -13.750117301940918
    7. ')]' → logprob: -14.625117301940918
    8. ']
' → logprob: -14.750117301940918
    9. '<|end|>' → logprob: -14.875117301940918
    10. '']' → logprob: -15.125117301940918

Token 753: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003820524725597352
    2. '
' → logprob: -8.500382423400879
    3. ' print' → logprob: -9.250382423400879
    4. '#' → logprob: -10.375382423400879
    5. '<|end|>' → logprob: -10.875382423400879
    6. '\n' → logprob: -11.500382423400879
    7. '#print' → logprob: -11.875382423400879
    8. '```' → logprob: -11.875382423400879
    9. ')' → logprob: -13.125382423400879
    10. '\' → logprob: -13.250382423400879

Token 754: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.5
    3. 'prin' → logprob: -20.125
    4. '```' → logprob: -20.5
    5. 'pr' → logprob: -20.625
    6. '#print' → logprob: -20.75
    7. 'total' → logprob: -21.5
    8. '#' → logprob: -23.625
    9. 'prit' → logprob: -24.75
    10. '	print' → logprob: -24.75

Token 755: 'icher' (ID: 13617)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7328775525093079
    2. 'icher' → logprob: -0.9828775525093079
    3. 'print' → logprob: -2.232877492904663
    4. 'f' → logprob: -3.732877492904663
    5. 'ich' → logprob: -5.607877731323242
    6. 'iche' → logprob: -5.982877731323242
    7. 'fic' → logprob: -5.982877731323242
    8. 'ichage' → logprob: -6.107877731323242
    9. 'ic' → logprob: -6.482877731323242
    10. '   ' → logprob: -7.482877731323242

Token 756: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4887332320213318
    2. '(total' → logprob: -0.9887332320213318
    3. 'total' → logprob: -4.238733291625977
    4. '()' → logprob: -10.113733291625977
    5. 'print' → logprob: -10.488733291625977
    6. '(
' → logprob: -10.488733291625977
    7. ' total' → logprob: -10.988733291625977
    8. '(print' → logprob: -12.238733291625977
    9. ' (' → logprob: -12.863733291625977
    10. '(

' → logprob: -14.113733291625977

Token 757: ' résultat' (ID: 62556)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0009231308358721435
    2. ' total' → logprob: -7.250923156738281
    3. 'result' → logprob: -8.750923156738281
    4. '(total' → logprob: -9.875923156738281
    5. 'final' → logprob: -12.750923156738281
    6. 't' → logprob: -15.000923156738281
    7. ' résultat' → logprob: -16.25092315673828
    8. 'print' → logprob: -17.00092315673828
    9. 'tot' → logprob: -17.25092315673828
    10. ' result' → logprob: -17.25092315673828

Token 758: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8312570318812504e-05
    2. '
' → logprob: -11.250018119812012
    3. ' print' → logprob: -12.250018119812012
    4. '```' → logprob: -14.625018119812012
    5. '
' → logprob: -17.000019073486328
    6. '``' → logprob: -17.625019073486328
    7. '(print' → logprob: -18.125019073486328
    8. 'total' → logprob: -18.250019073486328
    9. '`
' → logprob: -18.625019073486328
    10. '\' → logprob: -19.375019073486328

Token 759: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.93579563125968e-05
    2. '
' → logprob: -9.500089645385742
    3. '```' → logprob: -11.625089645385742
    4. ' print' → logprob: -12.625089645385742
    5. '``' → logprob: -14.125089645385742
    6. 'total' → logprob: -14.375089645385742
    7. '\n' → logprob: -15.250089645385742
    8. ')
' → logprob: -15.625089645385742
    9. '\' → logprob: -15.750089645385742
    10. '`
' → logprob: -15.875089645385742

Token 760: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006273117382079363
    2. 'la' → logprob: -6.13127326965332
    3. 'otal' → logprob: -6.75627326965332
    4. 'l' → logprob: -6.88127326965332
    5. 'total' → logprob: -7.88127326965332
    6. 'r' → logprob: -8.00627326965332
    7. ' print' → logprob: -8.13127326965332
    8. '```' → logprob: -9.63127326965332
    9. '#' → logprob: -9.88127326965332
    10. 'c' → logprob: -9.88127326965332

Token 761: ''écran' (ID: 147901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009613827802240849
    2. ''écran' → logprob: -5.384613990783691
    3. 'e' → logprob: -5.509613990783691
    4. 'print' → logprob: -7.884613990783691
    5. 'é' → logprob: -8.259613990783691
    6. ''utilisateur' → logprob: -9.134613990783691
    7. 'total' → logprob: -10.009613990783691
    8. '’écran' → logprob: -10.009613990783691
    9. '#' → logprob: -10.634613990783691
    10. 'screen' → logprob: -11.009613990783691

Token 762: ' avec' (ID: 3937)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.650518920039758e-06
    2. '```' → logprob: -13.250003814697266
    3. '
' → logprob: -13.500003814697266
    4. ' print' → logprob: -14.750003814697266
    5. '``' → logprob: -17.375003814697266
    6. 'total' → logprob: -18.250003814697266
    7. '
' → logprob: -20.625003814697266
    8. '`
' → logprob: -21.125003814697266
    9. '(print' → logprob: -21.125003814697266
    10. '\n' → logprob: -21.625003814697266

Token 763: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024367989972233772
    2. '(print' → logprob: -3.8993680477142334
    3. '(' → logprob: -5.649367809295654
    4. ' print' → logprob: -8.649368286132812
    5. '()' → logprob: -9.274368286132812
    6. '(total' → logprob: -10.774368286132812
    7. 'total' → logprob: -13.274368286132812
    8. '#print' → logprob: -13.899368286132812
    9. '```' → logprob: -13.899368286132812
    10. '	print' → logprob: -14.274368286132812

Token 764: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.696889623621246e-06
    2. ' print' → logprob: -13.25000286102295
    3. 'pr' → logprob: -15.00000286102295
    4. 'prin' → logprob: -15.37500286102295
    5. '#print' → logprob: -16.125001907348633
    6. ')' → logprob: -16.625001907348633
    7. '#' → logprob: -16.750001907348633
    8. '```' → logprob: -17.500001907348633
    9. 'p' → logprob: -17.625001907348633
    10. '.print' → logprob: -19.125001907348633

Token 765: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.000001907348633
    3. '```' → logprob: -19.500001907348633
    4. '(print' → logprob: -21.250001907348633
    5. '
' → logprob: -22.125001907348633
    6. 'pr' → logprob: -22.625001907348633
    7. '#print' → logprob: -22.625001907348633
    8. '`' → logprob: -24.250001907348633
    9. 'prin' → logprob: -24.875001907348633
    10. '.print' → logprob: -25.000001907348633

Token 766: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023265292402356863
    2. '()
' → logprob: -6.752326488494873
    3. 'total' → logprob: -7.502326488494873
    4. '(print' → logprob: -8.627326965332031
    5. '()' → logprob: -9.002326965332031
    6. '(' → logprob: -9.127326965332031
    7. '(total' → logprob: -9.252326965332031
    8. '(
' → logprob: -9.502326965332031
    9. '
' → logprob: -11.877326965332031
    10. ' print' → logprob: -12.127326965332031

Token 767: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.750000953674316
    3. ' print' → logprob: -15.000000953674316
    4. 'total' → logprob: -18.375
    5. '(print' → logprob: -18.875
    6. '``' → logprob: -19.875
    7. '
' → logprob: -21.75
    8. '.print' → logprob: -22.25
    9. '#print' → logprob: -22.625
    10. '`' → logprob: -23.625

Token 768: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.023249788209795952
    2. '(' → logprob: -3.773249864578247
    3. '()' → logprob: -12.898249626159668
    4. 'total' → logprob: -13.773249626159668
    5. '(
' → logprob: -14.648249626159668
    6. '(final' → logprob: -15.898249626159668
    7. ' (' → logprob: -16.523250579833984
    8. '('' → logprob: -17.398250579833984
    9. '(max' → logprob: -17.398250579833984
    10. '(t' → logprob: -18.023250579833984

Token 769: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -13.875000953674316
    3. ')`' → logprob: -16.125001907348633
    4. '))' → logprob: -17.875001907348633
    5. ')
' → logprob: -18.125001907348633
    6. ')#' → logprob: -18.875001907348633
    7. '()' → logprob: -19.000001907348633
    8. '())' → logprob: -19.375001907348633
    9. '(' → logprob: -19.500001907348633
    10. ')}' → logprob: -20.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 767
Tokens correctement prédits (1ère position, stricte): 212
Tokens correctement prédits (1ère position, avec adaptation): 218
Tokens correctement prédits (top 10): 474
Précision stricte (1ère position): 27.64%
Précision adaptée (1ère position): 28.42%
Précision (top 10): 61.80%
================================================================================
