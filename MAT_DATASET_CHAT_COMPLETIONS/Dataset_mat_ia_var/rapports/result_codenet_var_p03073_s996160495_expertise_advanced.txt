================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter

s = input()
pattern1 = ((i % 2 == 0) ^ (ch == '1') for i, ch in enumerate(s))
counts = Counter(pattern1)
print(min(counts[True], counts[False]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.037925124168396
    2. 'default' → logprob: -1.162925124168396
    3. 'abc' → logprob: -1.787925124168396
    4. 'Counter' → logprob: -2.4129252433776855
    5. ' defaultdict' → logprob: -2.7879252433776855
    6. 'named' → logprob: -5.4129252433776855
    7. ' Counter' → logprob: -5.5379252433776855
    8. ' abc' → logprob: -6.0379252433776855
    9. ' deque' → logprob: -6.4129252433776855
    10. '```' → logprob: -6.7879252433776855

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.8961017202818766e-05
    2. '\(' → logprob: -10.375059127807617
    3. ' (' → logprob: -11.500059127807617
    4. '()' → logprob: -12.625059127807617
    5. '\' → logprob: -12.875059127807617
    6. '(
' → logprob: -12.875059127807617
    7. 'a' → logprob: -12.875059127807617
    8. '```' → logprob: -14.000059127807617
    9. '\n' → logprob: -14.125059127807617
    10. '.' → logprob: -14.250059127807617

Token 5: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001178439473733306
    2. 'a' → logprob: -7.75117826461792
    3. '.' → logprob: -8.251178741455078
    4. '\(' → logprob: -9.126178741455078
    5. '(
' → logprob: -9.251178741455078
    6. '\n' → logprob: -9.751178741455078
    7. 'newline' → logprob: -9.751178741455078
    8. '\' → logprob: -10.001178741455078
    9. ',' → logprob: -10.751178741455078
    10. '```' → logprob: -11.626178741455078

Token 6: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1471424102783203
    2. '.' → logprob: -1.2721424102783203
    3. '[' → logprob: -1.6471424102783203
    4. 'u' → logprob: -2.3971424102783203
    5. '=' → logprob: -3.0221424102783203
    6. 'a' → logprob: -3.6471424102783203
    7. 't' → logprob: -4.27214241027832
    8. 's' → logprob: -4.77214241027832
    9. ')' → logprob: -5.14714241027832
    10. '```' → logprob: -5.64714241027832

Token 7: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5184921622276306
    2. ' "' → logprob: -1.2684922218322754
    3. ''' → logprob: -2.2684922218322754
    4. ' '' → logprob: -4.143492221832275
    5. ' Counter' → logprob: -6.268492221832275
    6. ' ' → logprob: -6.768492221832275
    7. 'input' → logprob: -8.893491744995117
    8. ''s' → logprob: -9.018491744995117
    9. 'Counter' → logprob: -9.018491744995117
    10. ' input' → logprob: -9.518491744995117

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001200231839902699
    2. '('' → logprob: -7.251200199127197
    3. ''' → logprob: -8.251200675964355
    4. ')' → logprob: -9.751200675964355
    5. '`' → logprob: -10.251200675964355
    6. '()' → logprob: -10.376200675964355
    7. '"' → logprob: -10.626200675964355
    8. '("("' → logprob: -10.751200675964355
    9. '(
' → logprob: -11.251200675964355
    10. '```' → logprob: -11.376200675964355

Token 9: 'pattern' (ID: 29563)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3141658902168274
    2. '(' → logprob: -2.4391658306121826
    3. ')' → logprob: -3.0641658306121826
    4. 'c' → logprob: -3.0641658306121826
    5. 'counter' → logprob: -3.1891658306121826
    6. 'count' → logprob: -4.689166069030762
    7. '=' → logprob: -4.814166069030762
    8. 'result' → logprob: -4.814166069030762
    9. 'counts' → logprob: -4.939166069030762
    10. '_' → logprob: -6.314166069030762

Token 10: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20440877974033356
    2. '_' → logprob: -2.454408884048462
    3. '=' → logprob: -2.579408884048462
    4. 's' → logprob: -4.079408645629883
    5. '_counts' → logprob: -6.079408645629883
    6. ' ' → logprob: -6.579408645629883
    7. '_count' → logprob: -7.329408645629883
    8. '_counter' → logprob: -7.454408645629883
    9. '(' → logprob: -7.829408645629883
    10. '.' → logprob: -8.204408645629883

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43898117542266846
    2. '=' → logprob: -1.5639811754226685
    3. '[' → logprob: -2.313981056213379
    4. '.' → logprob: -3.688981056213379
    5. 's' → logprob: -4.438981056213379
    6. '_' → logprob: -5.563981056213379
    7. '(' → logprob: -6.563981056213379
    8. '[:]' → logprob: -7.188981056213379
    9. '.count' → logprob: -7.438981056213379
    10. ' ' → logprob: -7.438981056213379

Token 12: ' ((' (ID: 3536)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.5379734635353088
    2. 'Counter' → logprob: -1.787973403930664
    3. '"' → logprob: -1.912973403930664
    4. 'r' → logprob: -3.287973403930664
    5. 's' → logprob: -4.162973403930664
    6. ' "' → logprob: -4.162973403930664
    7. ''' → logprob: -4.162973403930664
    8. ' s' → logprob: -5.037973403930664
    9. ' r' → logprob: -5.787973403930664
    10. ' '' → logprob: -5.912973403930664

Token 13: 'i' (ID: 72)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3862603008747101
    2. ')' → logprob: -2.3862602710723877
    3. 'r' → logprob: -2.7612602710723877
    4. ''' → logprob: -3.5112602710723877
    5. ''[' → logprob: -3.7612602710723877
    6. '[' → logprob: -4.136260509490967
    7. ''s' → logprob: -4.511260509490967
    8. ''.' → logprob: -4.886260509490967
    9. 'len' → logprob: -5.136260509490967
    10. 'Counter' → logprob: -5.386260509490967

Token 14: ' %' (ID: 1851)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6889530420303345
    2. ' for' → logprob: -2.063952922821045
    3. ' in' → logprob: -2.313952922821045
    4. 'in' → logprob: -2.438952922821045
    5. ')' → logprob: -3.063952922821045
    6. 'for' → logprob: -3.063952922821045
    7. '==' → logprob: -3.813952922821045
    8. 'n' → logprob: -4.438952922821045
    9. ',)' → logprob: -4.688952922821045
    10. ' ==' → logprob: -4.813952922821045

Token 15: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18521054089069366
    2. ' ' → logprob: -1.9352105855941772
    3. '3' → logprob: -4.060210704803467
    4. '10' → logprob: -6.185210704803467
    5. '4' → logprob: -6.560210704803467
    6. '5' → logprob: -6.560210704803467
    7. 'len' → logprob: -7.435210704803467
    8. '7' → logprob: -7.560210704803467
    9. ' len' → logprob: -7.935210704803467
    10. '6' → logprob: -7.935210704803467

Token 16: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04049858823418617
    2. '3' → logprob: -3.4154984951019287
    3. '4' → logprob: -6.290498733520508
    4. '5' → logprob: -6.540498733520508
    5. '10' → logprob: -6.915498733520508
    6. '7' → logprob: -7.415498733520508
    7. ' ' → logprob: -7.915498733520508
    8. '6' → logprob: -8.040498733520508
    9. '26' → logprob: -8.665498733520508
    10. '100' → logprob: -9.040498733520508

Token 17: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5977837443351746
    2. ')' → logprob: -0.9727837443351746
    3. ' ==' → logprob: -3.2227838039398193
    4. ')==' → logprob: -3.4727838039398193
    5. ' )' → logprob: -7.22278356552124
    6. ' ' → logprob: -8.722784042358398
    7. '=' → logprob: -10.222784042358398
    8. '0' → logprob: -10.347784042358398
    9. '!=' → logprob: -10.722784042358398
    10. '2' → logprob: -11.222784042358398

Token 18: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043082546442747116
    2. ' ' → logprob: -3.4180824756622314
    3. '1' → logprob: -4.6680827140808105
    4. ')' → logprob: -14.543082237243652
    5. '   ' → logprob: -14.668082237243652
    6. '```' → logprob: -15.293082237243652
    7. 's' → logprob: -15.793082237243652
    8. '<|end|>' → logprob: -15.855582237243652
    9. '  ' → logprob: -15.918082237243652
    10. '۰' → logprob: -16.60558319091797

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005719862412661314
    2. '1' → logprob: -5.2557196617126465
    3. ' ' → logprob: -7.6307196617126465
    4. ')' → logprob: -15.630720138549805
    5. '```' → logprob: -15.943220138549805
    6. 's' → logprob: -16.255720138549805
    7. '   ' → logprob: -17.005720138549805
    8. '  ' → logprob: -17.193220138549805
    9. '2' → logprob: -17.568220138549805
    10. '3' → logprob: -17.818220138549805

Token 20: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2399367243051529
    2. ')' → logprob: -1.7399367094039917
    3. 'and' → logprob: -3.6149368286132812
    4. ' )' → logprob: -4.864936828613281
    5. ' or' → logprob: -6.239936828613281
    6. '))' → logprob: -7.739936828613281
    7. ' ' → logprob: -7.864936828613281
    8. ' ))' → logprob: -8.489936828613281
    9. 'or' → logprob: -8.864936828613281
    10. '),' → logprob: -11.864936828613281

Token 21: ' ^' (ID: 7602)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.045973118394613266
    2. 'and' → logprob: -3.420973062515259
    3. ')' → logprob: -4.670973300933838
    4. ' or' → logprob: -6.295973300933838
    5. ' )' → logprob: -7.545973300933838
    6. ' ' → logprob: -7.795973300933838
    7. 'or' → logprob: -10.04597282409668
    8. '))' → logprob: -10.67097282409668
    9. '    ' → logprob: -11.92097282409668
    10. '   ' → logprob: -12.42097282409668

Token 22: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.33998245000839233
    2. '(s' → logprob: -1.464982509613037
    3. ' s' → logprob: -3.589982509613037
    4. '(i' → logprob: -4.464982509613037
    5. 's' → logprob: -4.589982509613037
    6. ' ' → logprob: -6.339982509613037
    7. '(' → logprob: -6.464982509613037
    8. ' True' → logprob: -6.589982509613037
    9. 'True' → logprob: -7.339982509613037
    10. '(True' → logprob: -8.089982032775879

Token 23: 'ch' (ID: 332)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3507835566997528
    2. ' s' → logprob: -1.4757835865020752
    3. ' ord' → logprob: -3.725783586502075
    4. 'int' → logprob: -4.225783348083496
    5. 'ord' → logprob: -4.975783348083496
    6. '(s' → logprob: -5.225783348083496
    7. 'i' → logprob: -5.600783348083496
    8. '(ord' → logprob: -5.850783348083496
    9. ' int' → logprob: -5.975783348083496
    10. ' (' → logprob: -6.350783348083496

Token 24: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.21364329755306244
    2. ' in' → logprob: -2.5886433124542236
    3. 'ar' → logprob: -3.3386433124542236
    4. ' ' → logprob: -3.4636433124542236
    5. '==' → logprob: -3.4636433124542236
    6. 's' → logprob: -5.0886430740356445
    7. ' !=' → logprob: -5.3386430740356445
    8. '=='' → logprob: -6.5886430740356445
    9. '=' → logprob: -6.9636430740356445
    10. '   ' → logprob: -7.0886430740356445

Token 25: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5866023898124695
    2. ''a' → logprob: -1.2116024494171143
    3. ' '' → logprob: -3.5866024494171143
    4. ''A' → logprob: -3.5866024494171143
    5. ''s' → logprob: -3.9616024494171143
    6. '"' → logprob: -4.086602210998535
    7. ''i' → logprob: -4.086602210998535
    8. ''o' → logprob: -5.211602210998535
    9. ''l' → logprob: -5.711602210998535
    10. '"a' → logprob: -5.711602210998535

Token 26: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6869217753410339
    2. 'R' → logprob: -1.6869218349456787
    3. 'A' → logprob: -2.4369218349456787
    4. ''' → logprob: -2.9369218349456787
    5. 'B' → logprob: -3.8119218349456787
    6. '1' → logprob: -3.8119218349456787
    7. '0' → logprob: -4.0619215965271
    8. 'W' → logprob: -4.3119215965271
    9. '')' → logprob: -4.3119215965271
    10. ')' → logprob: -4.5619215965271

Token 27: '')' (ID: 1542)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.03616500273346901
    2. ')' → logprob: -4.036165237426758
    3. '')' → logprob: -5.036165237426758
    4. ''' → logprob: -5.161165237426758
    5. '))' → logprob: -5.411165237426758
    6. '')))' → logprob: -7.286165237426758
    7. 's' → logprob: -9.286165237426758
    8. ''))
' → logprob: -9.661165237426758
    9. ''s' → logprob: -9.786165237426758
    10. '[i' → logprob: -10.661165237426758

Token 28: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006887249764986336
    2. ' for' → logprob: -8.375688552856445
    3. '))' → logprob: -8.500688552856445
    4. ' )' → logprob: -8.625688552856445
    5. 'for' → logprob: -9.875688552856445
    6. ')))' → logprob: -12.375688552856445
    7. ' ' → logprob: -12.625688552856445
    8. '):' → logprob: -12.750688552856445
    9. ' and' → logprob: -13.125688552856445
    10. '  ' → logprob: -13.125688552856445

Token 29: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.008795143105089664
    2. 's' → logprob: -4.758795261383057
    3. ' ch' → logprob: -10.008794784545898
    4. ' enumerate' → logprob: -10.383794784545898
    5. 'enumer' → logprob: -10.633794784545898
    6. ' ' → logprob: -10.758794784545898
    7. ' range' → logprob: -11.258794784545898
    8. 'ch' → logprob: -11.258794784545898
    9. ')' → logprob: -11.383794784545898
    10. ' i' → logprob: -11.758794784545898

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5174302458763123
    2. ' ,' → logprob: -1.267430305480957
    3. ' in' → logprob: -2.517430305480957
    4. ' s' → logprob: -3.767430305480957
    5. 's' → logprob: -4.142430305480957
    6. '<|end|>' → logprob: -6.392430305480957
    7. ',s' → logprob: -7.517430305480957
    8. 'in' → logprob: -8.142430305480957
    9. ' ' → logprob: -9.267430305480957
    10. ' range' → logprob: -10.517430305480957

Token 31: ' ch' (ID: 549)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020602382719516754
    2. 'in' → logprob: -3.8956024646759033
    3. 's' → logprob: -11.020602226257324
    4. '<|end|>' → logprob: -11.145602226257324
    5. 'enumer' → logprob: -11.395602226257324
    6. ',' → logprob: -11.770602226257324
    7. ')' → logprob: -12.395602226257324
    8. ' ' → logprob: -13.020602226257324
    9. ' enumerate' → logprob: -13.770602226257324
    10. ' s' → logprob: -13.895602226257324

Token 33: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.04859123006463051
    2. 'enumer' → logprob: -3.048591136932373
    3. '(en' → logprob: -13.673591613769531
    4. ' enumer' → logprob: -14.173591613769531
    5. ')' → logprob: -14.548591613769531
    6. ' zip' → logprob: -15.048591613769531
    7. ' ' → logprob: -15.298591613769531
    8. 's' → logprob: -15.298591613769531
    9. '```' → logprob: -15.298591613769531
    10. ' ' → logprob: -16.17359161376953

Token 34: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.006766056176275015
    2. 's' → logprob: -5.006765842437744
    3. '(' → logprob: -10.381766319274902
    4. ')' → logprob: -11.006766319274902
    5. ' (' → logprob: -13.506766319274902
    6. ' s' → logprob: -14.381766319274902
    7. ')s' → logprob: -14.506766319274902
    8. ')(' → logprob: -14.881766319274902
    9. '(
' → logprob: -16.506765365600586
    10. ' )' → logprob: -16.756765365600586

Token 35: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25201645493507385
    2. ')' → logprob: -1.5020164251327515
    3. ')))' → logprob: -9.502016067504883
    4. ' ))' → logprob: -12.252016067504883
    5. '))
' → logprob: -13.252016067504883
    6. '),' → logprob: -13.377016067504883
    7. ' )' → logprob: -13.502016067504883
    8. ')
' → logprob: -13.627016067504883
    9. ')),' → logprob: -15.627016067504883
    10. ')}' → logprob: -15.627016067504883

Token 36: 'counts' (ID: 99089)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017733223736286163
    2. ' ' → logprob: -4.892733097076416
    3. 'sum' → logprob: -6.142733097076416
    4. 'Counter' → logprob: -6.642733097076416
    5. 's' → logprob: -7.017733097076416
    6. '<|end|>' → logprob: -7.142733097076416
    7. ')
' → logprob: -7.267733097076416
    8. 'for' → logprob: -7.642733097076416
    9. '.' → logprob: -8.142733573913574
    10. '[' → logprob: -8.392733573913574

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4298321008682251
    2. '=' → logprob: -1.054832100868225
    3. '(' → logprob: -7.0548319816589355
    4. ' ' → logprob: -8.804832458496094
    5. ')' → logprob: -9.304832458496094
    6. ' (' → logprob: -12.179832458496094
    7. ',' → logprob: -12.179832458496094
    8. '.' → logprob: -12.304832458496094
    9. '[' → logprob: -12.929832458496094
    10. ')=' → logprob: -13.429832458496094

Token 38: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.20146265625953674
    2. ' Counter' → logprob: -1.7014626264572144
    3. 'sum' → logprob: -11.451462745666504
    4. ' ' → logprob: -12.201462745666504
    5. '.Counter' → logprob: -12.201462745666504
    6. 'Counters' → logprob: -12.451462745666504
    7. '(C' → logprob: -12.576462745666504
    8. ' sum' → logprob: -12.701462745666504
    9. '   ' → logprob: -12.701462745666504
    10. 'C' → logprob: -13.451462745666504

Token 39: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.008638443425297737
    2. '(' → logprob: -4.758638381958008
    3. '(p' → logprob: -11.133638381958008
    4. 'pattern' → logprob: -12.758638381958008
    5. '()' → logprob: -13.008638381958008
    6. '((' → logprob: -13.383638381958008
    7. '(
' → logprob: -15.008638381958008
    8. '(list' → logprob: -15.383638381958008
    9. ' (' → logprob: -15.508638381958008
    10. ')' → logprob: -15.633638381958008

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011689399980241433
    2. ')' → logprob: -9.125117301940918
    3. 'er' → logprob: -12.500117301940918
    4. '))' → logprob: -13.250117301940918
    5. 'pattern' → logprob: -14.000117301940918
    6. '(pattern' → logprob: -14.000117301940918
    7. '```' → logprob: -15.750117301940918
    8. 's' → logprob: -15.875117301940918
    9. ')`' → logprob: -16.7501163482666
    10. ')**' → logprob: -16.8751163482666

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.0259150157216936e-05
    2. '))' → logprob: -10.12505054473877
    3. ' )' → logprob: -12.75005054473877
    4. ')
' → logprob: -12.87505054473877
    5. '.values' → logprob: -13.37505054473877
    6. '())' → logprob: -14.50005054473877
    7. ').' → logprob: -14.62505054473877
    8. '[' → logprob: -15.00005054473877
    9. '()' → logprob: -15.12505054473877
    10. ')`' → logprob: -15.25005054473877

Token 42: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1414145976305008
    2. ')' → logprob: -3.5164146423339844
    3. '0' → logprob: -3.7664146423339844
    4. '[' → logprob: -3.8914146423339844
    5. '1' → logprob: -3.8914146423339844
    6. '(' → logprob: -4.016414642333984
    7. '```' → logprob: -5.266414642333984
    8. '{' → logprob: -5.391414642333984
    9. '(True' → logprob: -5.641414642333984
    10. 'if' → logprob: -6.141414642333984

Token 43: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25202322006225586
    2. '(count' → logprob: -1.5020232200622559
    3. '('' → logprob: -10.002023696899414
    4. '(len' → logprob: -11.502023696899414
    5. '((' → logprob: -11.877023696899414
    6. '(sum' → logprob: -12.127023696899414
    7. '()' → logprob: -12.252023696899414
    8. '(
' → logprob: -12.502023696899414
    9. '(max' → logprob: -12.502023696899414
    10. '("("' → logprob: -12.752023696899414

Token 44: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0015531904064118862
    2. '(' → logprob: -6.501553058624268
    3. ')' → logprob: -10.251553535461426
    4. 'counts' → logprob: -12.251553535461426
    5. ' counts' → logprob: -12.501553535461426
    6. ' (' → logprob: -12.751553535461426
    7. ')(' → logprob: -13.251553535461426
    8. '(
' → logprob: -14.501553535461426
    9. 'count' → logprob: -15.001553535461426
    10. '((' → logprob: -15.126553535461426

Token 45: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003111519617959857
    2. 'ts' → logprob: -8.125310897827148
    3. 'counts' → logprob: -12.125310897827148
    4. 'nts' → logprob: -12.375310897827148
    5. '(s' → logprob: -13.250310897827148
    6. 'cts' → logprob: -13.875310897827148
    7. 'sts' → logprob: -14.000310897827148
    8. ')' → logprob: -14.375310897827148
    9. 'unts' → logprob: -15.375310897827148
    10. 't' → logprob: -15.625310897827148

Token 46: '[' (ID: 58)
  Prédit: '.values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.6143763661384583
    2. '()))' → logprob: -1.6143763065338135
    3. '().' → logprob: -1.7393763065338135
    4. '()' → logprob: -3.6143763065338135
    5. '))' → logprob: -3.6143763065338135
    6. '())' → logprob: -4.614376544952393
    7. '(' → logprob: -5.114376544952393
    8. '(values' → logprob: -5.114376544952393
    9. '.keys' → logprob: -5.614376544952393
    10. 'values' → logprob: -6.114376544952393

Token 47: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.04860372841358185
    2. 'False' → logprob: -3.0486037731170654
    3. ' True' → logprob: -11.173604011535645
    4. '0' → logprob: -13.423604011535645
    5. ' False' → logprob: -14.798604011535645
    6. 'Fal' → logprob: -15.798604011535645
    7. 'T' → logprob: -16.298603057861328
    8. 'Tr' → logprob: -16.923603057861328
    9. '(True' → logprob: -16.923603057861328
    10. '1' → logprob: -17.423603057861328

Token 48: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0018491511000320315
    2. ' ],' → logprob: -6.751849174499512
    3. ',' → logprob: -7.876849174499512
    4. ']' → logprob: -8.251849174499512
    5. '],
' → logprob: -11.251849174499512
    6. '),' → logprob: -11.751849174499512
    7. ' counts' → logprob: -12.501849174499512
    8. ' ,' → logprob: -12.751849174499512
    9. 'counts' → logprob: -12.876849174499512
    10. ']))' → logprob: -13.251849174499512

Token 49: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.002475777640938759
    2. 'counts' → logprob: -6.002475738525391
    3. ' count' → logprob: -17.00247573852539
    4. 'count' → logprob: -17.12747573852539
    5. '_counts' → logprob: -17.87747573852539
    6. ' ' → logprob: -18.37747573852539
    7. ' len' → logprob: -18.37747573852539
    8. ' ' → logprob: -20.37747573852539
    9. '[count' → logprob: -20.62747573852539
    10. ')' → logprob: -20.62747573852539

Token 50: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.933173426659778e-05
    2. 'False' → logprob: -9.625069618225098
    3. '(False' → logprob: -13.125069618225098
    4. '=False' → logprob: -15.125069618225098
    5. ')[' → logprob: -15.500069618225098
    6. ' False' → logprob: -15.875069618225098
    7. '```' → logprob: -16.00006866455078
    8. ')' → logprob: -16.00006866455078
    9. ']' → logprob: -16.75006866455078
    10. '{' → logprob: -17.37506866455078

Token 51: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.1080467781284824e-05
    2. ' False' → logprob: -10.125041007995605
    3. '(False' → logprob: -14.625041007995605
    4. 'True' → logprob: -15.000041007995605
    5. '[' → logprob: -15.750041007995605
    6. '.False' → logprob: -16.875041961669922
    7. '=False' → logprob: -17.625041961669922
    8. ']' → logprob: -18.000041961669922
    9. ' ' → logprob: -18.875041961669922
    10. '   ' → logprob: -19.625041961669922

Token 52: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0057279132306575775
    2. ')' → logprob: -5.255727767944336
    3. ')))' → logprob: -7.630727767944336
    4. ']))' → logprob: -12.380727767944336
    5. '])' → logprob: -13.255727767944336
    6. '))
' → logprob: -14.255727767944336
    7. '}))' → logprob: -14.505727767944336
    8. ' ))' → logprob: -14.630727767944336
    9. ')])' → logprob: -15.005727767944336
    10. '()))' → logprob: -15.130727767944336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 50
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 70.00%
================================================================================
