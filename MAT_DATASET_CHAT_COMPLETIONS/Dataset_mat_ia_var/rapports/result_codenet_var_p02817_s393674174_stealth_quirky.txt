================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def grab(): return sys.stdin.readline().strip()
def smash(s): return list(map(lambda x: x, s.split()))
def glue(x, y): return y + x

basket = smash(grab())
print(glue(*basket))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' grab' (ID: 18013)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013850589282810688
    2. ' space' → logprob: -6.138850688934326
    3. ' ' → logprob: -6.888850688934326
    4. ' sys' → logprob: -6.888850688934326
    5. '<|end|>' → logprob: -6.888850688934326
    6. ' main' → logprob: -7.013850688934326
    7. '  ' → logprob: -7.138850688934326
    8. ' process' → logprob: -7.138850688934326
    9. '_' → logprob: -7.263850688934326
    10. ' a' → logprob: -7.388850688934326

Token 5: '():' (ID: 9442)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08647643774747849
    2. ' _' → logprob: -3.0864763259887695
    3. ' ' → logprob: -3.7114763259887695
    4. '(' → logprob: -4.8364763259887695
    5. ' (' → logprob: -6.3364763259887695
    6. '_space' → logprob: -6.8364763259887695
    7. ' a' → logprob: -7.8364763259887695
    8. 'a' → logprob: -8.46147632598877
    9. '(_' → logprob: -8.71147632598877
    10. '_data' → logprob: -8.96147632598877

Token 6: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8821811676025391
    2. '   ' → logprob: -1.507181167602539
    3. 'return' → logprob: -2.507181167602539
    4. ' ' → logprob: -2.882181167602539
    5. '<|end|>' → logprob: -3.132181167602539
    6. '\' → logprob: -3.257181167602539
    7. '(' → logprob: -3.257181167602539
    8. '    
' → logprob: -3.882181167602539
    9. ' 
' → logprob: -3.882181167602539
    10. '    ' → logprob: -4.382181167602539

Token 7: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07037173956632614
    2. 'sys' → logprob: -2.945371627807617
    3. ' ' → logprob: -4.945371627807617
    4. ' next' → logprob: -5.070371627807617
    5. 'next' → logprob: -7.445371627807617
    6. ' input' → logprob: -8.195371627807617
    7. ' None' → logprob: -8.570371627807617
    8. '  ' → logprob: -8.695371627807617
    9. 'input' → logprob: -8.695371627807617
    10. '"' → logprob: -8.945371627807617

Token 8: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007518553175032139
    2. ' .' → logprob: -8.625751495361328
    3. '.exit' → logprob: -8.625751495361328
    4. '.stdin' → logprob: -9.125751495361328
    5. '.argv' → logprob: -9.500751495361328
    6. '.readline' → logprob: -9.625751495361328
    7. '.import' → logprob: -10.125751495361328
    8. '.stdout' → logprob: -11.000751495361328
    9. '.get' → logprob: -11.625751495361328
    10. '.read' → logprob: -12.125751495361328

Token 9: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0026635273825377226
    2. '.readline' → logprob: -6.127663612365723
    3. '.read' → logprob: -7.752663612365723
    4. '[' → logprob: -11.252663612365723
    5. ' .' → logprob: -11.877663612365723
    6. 'read' → logprob: -12.127663612365723
    7. '.`' → logprob: -13.127663612365723
    8. '."""' → logprob: -13.127663612365723
    9. '.​' → logprob: -13.252663612365723
    10. '.[' → logprob: -13.252663612365723

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.138772115111351
    2. '(' → logprob: -2.1387720108032227
    3. '().' → logprob: -4.763772010803223
    4. ' ()' → logprob: -7.263772010803223
    5. '(
' → logprob: -8.138772010803223
    6. '(\' → logprob: -8.138772010803223
    7. ' ' → logprob: -8.138772010803223
    8. '```' → logprob: -8.263772010803223
    9. '()\' → logprob: -8.263772010803223
    10. '()
' → logprob: -8.388772010803223

Token 11: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.023271339014172554
    2. 'rstrip' → logprob: -3.773271322250366
    3. ' strip' → logprob: -10.773271560668945
    4. 'split' → logprob: -13.523271560668945
    5. '_strip' → logprob: -13.523271560668945
    6. 'replace' → logprob: -13.773271560668945
    7. 'decode' → logprob: -15.148271560668945
    8. '```' → logprob: -15.398271560668945
    9. 'startswith' → logprob: -15.773271560668945
    10. '-strip' → logprob: -15.898271560668945

Token 12: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0212346650660038
    2. '()' → logprob: -3.8962347507476807
    3. '(
' → logprob: -7.646234512329102
    4. '(

' → logprob: -10.271234512329102
    5. '\n' → logprob: -10.396234512329102
    6. ' (' → logprob: -10.396234512329102
    7. ' ' → logprob: -10.521234512329102
    8. '()
' → logprob: -11.021234512329102
    9. ')' → logprob: -11.271234512329102
    10. '(\' → logprob: -11.396234512329102

Token 13: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5595912337303162
    2. '
' → logprob: -1.184591293334961
    3. '' → logprob: -3.434591293334961
    4. '```' → logprob: -3.684591293334961
    5. 'def' → logprob: -3.934591293334961
    6. '\n' → logprob: -4.184591293334961
    7. 'newline' → logprob: -4.809591293334961
    8. '


' → logprob: -5.684591293334961
    9. ' 

' → logprob: -5.809591293334961
    10. '<|end|>' → logprob: -5.934591293334961

Token 14: ' smash' (ID: 104662)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.011199071072041988
    2. 'main' → logprob: -5.136198997497559
    3. ' print' → logprob: -6.386198997497559
    4. ' write' → logprob: -6.886198997497559
    5. ' grab' → logprob: -7.386198997497559
    6. ' solve' → logprob: -7.511198997497559
    7. ' split' → logprob: -7.886198997497559
    8. ' parse' → logprob: -8.386198997497559
    9. ' test' → logprob: -9.261198997497559
    10. 'split' → logprob: -9.636198997497559

Token 15: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12614314258098602
    2. '():' → logprob: -2.376143217086792
    3. '()' → logprob: -4.001142978668213
    4. '(a' → logprob: -5.626142978668213
    5. '(s' → logprob: -6.876142978668213
    6. '_' → logprob: -8.001143455505371
    7. '(x' → logprob: -8.126143455505371
    8. '('' → logprob: -8.626143455505371
    9. '("("' → logprob: -8.751143455505371
    10. ' (' → logprob: -8.876143455505371

Token 16: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020408514887094498
    2. ')' → logprob: -4.020408630371094
    3. ' ):' → logprob: -6.520408630371094
    4. ',' → logprob: -7.520408630371094
    5. '[' → logprob: -9.770408630371094
    6. '):
' → logprob: -10.645408630371094
    7. ''):' → logprob: -10.895408630371094
    8. 's' → logprob: -11.145408630371094
    9. ' )' → logprob: -11.145408630371094
    10. '   ' → logprob: -11.270408630371094

Token 17: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0024452158249914646
    2. 'return' → logprob: -6.377445220947266
    3. ' s' → logprob: -7.502445220947266
    4. ' ' → logprob: -9.377445220947266
    5. '   ' → logprob: -9.752445220947266
    6. '	return' → logprob: -11.002445220947266
    7. '    ' → logprob: -12.002445220947266
    8. 's' → logprob: -12.252445220947266
    9. ' for' → logprob: -12.502445220947266
    10. ' pass' → logprob: -12.502445220947266

Token 18: ' list' (ID: 1562)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.49932411313056946
    2. 's' → logprob: -0.9993240833282471
    3. '"' → logprob: -4.999324321746826
    4. ''' → logprob: -5.499324321746826
    5. ' ''.' → logprob: -5.499324321746826
    6. ''s' → logprob: -5.999324321746826
    7. '''.' → logprob: -5.999324321746826
    8. ' ' → logprob: -6.374324321746826
    9. ' '' → logprob: -7.124324321746826
    10. ' "".' → logprob: -7.624324321746826

Token 19: '(map' (ID: 16946)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.021285776048898697
    2. '(' → logprob: -3.8962857723236084
    3. '(map' → logprob: -7.2712860107421875
    4. '(str' → logprob: -11.396286010742188
    5. '(filter' → logprob: -11.396286010742188
    6. '((' → logprob: -12.271286010742188
    7. '(range' → logprob: -12.896286010742188
    8. '()' → logprob: -13.146286010742188
    9. '(string' → logprob: -13.146286010742188
    10. '(set' → logprob: -13.146286010742188

Token 20: '(lambda' (ID: 43341)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.4060876667499542
    2. '(int' → logprob: -1.1560876369476318
    3. '(' → logprob: -4.281087875366211
    4. '(ord' → logprob: -5.281087875366211
    5. 'str' → logprob: -9.656087875366211
    6. '(chr' → logprob: -10.781087875366211
    7. ' str' → logprob: -11.656087875366211
    8. '(lambda' → logprob: -12.031087875366211
    9. 'int' → logprob: -12.531087875366211
    10. '(len' → logprob: -12.781087875366211

Token 21: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.03143053874373436
    2. 'x' → logprob: -3.65643048286438
    3. ' c' → logprob: -5.406430721282959
    4. 'c' → logprob: -8.2814302444458
    5. ' a' → logprob: -9.4064302444458
    6. ' s' → logprob: -9.6564302444458
    7. ' t' → logprob: -9.6564302444458
    8. ' ' → logprob: -9.7814302444458
    9. ' y' → logprob: -11.0314302444458
    10. 'a' → logprob: -11.5314302444458

Token 22: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0614059641957283
    2. ' :' → logprob: -3.061405897140503
    3. ':int' → logprob: -4.436406135559082
    4. ':s' → logprob: -7.311406135559082
    5. ':x' → logprob: -8.686406135559082
    6. ',' → logprob: -11.186406135559082
    7. ':str' → logprob: -11.311406135559082
    8. 'int' → logprob: -12.436406135559082
    9. ' s' → logprob: -12.686406135559082
    10. ':n' → logprob: -12.811406135559082

Token 23: ' x' (ID: 1215)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.44367602467536926
    2. 'int' → logprob: -1.0686759948730469
    3. ' x' → logprob: -4.693675994873047
    4. ' ord' → logprob: -6.193675994873047
    5. 'x' → logprob: -6.568675994873047
    6. ' str' → logprob: -7.443675994873047
    7. ' s' → logprob: -7.693675994873047
    8. 'ord' → logprob: -8.068675994873047
    9. 'str' → logprob: -8.193675994873047
    10. 's' → logprob: -8.568675994873047

Token 24: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2852117121219635
    2. '.split' → logprob: -1.7852116823196411
    3. ':int' → logprob: -3.2852118015289307
    4. ' :' → logprob: -4.410211563110352
    5. '.strip' → logprob: -4.910211563110352
    6. '.replace' → logprob: -5.285211563110352
    7. ':s' → logprob: -5.660211563110352
    8. '+' → logprob: -5.785211563110352
    9. ',' → logprob: -6.535211563110352
    10. ':x' → logprob: -6.535211563110352

Token 25: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.008638561703264713
    2. 's' → logprob: -4.758638381958008
    3. ' ' → logprob: -11.383638381958008
    4. ' filter' → logprob: -12.258638381958008
    5. '(s' → logprob: -12.758638381958008
    6. 'filter' → logprob: -13.633638381958008
    7. 'str' → logprob: -13.883638381958008
    8. ' str' → logprob: -13.883638381958008
    9. ' sm' → logprob: -14.633638381958008
    10. '  ' → logprob: -14.883638381958008

Token 26: '.split' (ID: 10347)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00699952058494091
    2. '.split' → logprob: -5.381999492645264
    3. ' ))' → logprob: -6.256999492645264
    4. ')))' → logprob: -8.506999969482422
    5. '.strip' → logprob: -9.381999969482422
    6. ' ' → logprob: -9.506999969482422
    7. ')' → logprob: -10.631999969482422
    8. '))
' → logprob: -10.756999969482422
    9. '()))' → logprob: -11.131999969482422
    10. '.replace' → logprob: -12.131999969482422

Token 27: '()))
' (ID: 24521)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7186737060546875
    2. '()))' → logprob: -0.7186737060546875
    3. '()' → logprob: -3.7186737060546875
    4. '(','' → logprob: -8.343673706054688
    5. '(' → logprob: -8.718673706054688
    6. '("' → logprob: -8.718673706054688
    7. '())' → logprob: -8.718673706054688
    8. '())))' → logprob: -8.968673706054688
    9. '()))
' → logprob: -10.718673706054688
    10. '()))

' → logprob: -11.093673706054688

Token 28: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6520466804504395
    2. '<|end|>' → logprob: -1.6520466804504395
    3. '(
' → logprob: -2.6520466804504395
    4. '[' → logprob: -2.9020466804504395
    5. '
' → logprob: -3.6520466804504395
    6. ')' → logprob: -3.6520466804504395
    7. '.' → logprob: -3.9020466804504395
    8. '\' → logprob: -4.1520466804504395
    9. '()' → logprob: -4.9020466804504395
    10. '\n' → logprob: -5.0270466804504395

Token 29: ' glue' (ID: 54312)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.18916991353034973
    2. ' join' → logprob: -2.9391698837280273
    3. ' solve' → logprob: -3.6891698837280273
    4. ' split' → logprob: -4.189169883728027
    5. 'main' → logprob: -4.189169883728027
    6. ' print' → logprob: -4.439169883728027
    7. ' grab' → logprob: -5.189169883728027
    8. ' map' → logprob: -5.689169883728027
    9. ' parse' → logprob: -5.814169883728027
    10. 'split' → logprob: -5.814169883728027

Token 30: '(x' (ID: 4061)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6349123120307922
    2. '(' → logprob: -0.7599123120307922
    3. '("("' → logprob: -7.134912490844727
    4. '(a' → logprob: -7.634912490844727
    5. ' (' → logprob: -8.134912490844727
    6. '('' → logprob: -8.884912490844727
    7. '()' → logprob: -8.884912490844727
    8. '(strings' → logprob: -9.509912490844727
    9. '(ss' → logprob: -9.759912490844727
    10. '(str' → logprob: -10.134912490844727

Token 31: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004833207465708256
    2. ',' → logprob: -5.879833221435547
    3. 's' → logprob: -7.129833221435547
    4. ')' → logprob: -7.379833221435547
    5. ' ):' → logprob: -8.129833221435547
    6. '):
' → logprob: -8.754833221435547
    7. '_list' → logprob: -10.379833221435547
    8. ':' → logprob: -10.629833221435547
    9. '[]):' → logprob: -11.504833221435547
    10. '   ' → logprob: -11.504833221435547

Token 32: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6793337464332581
    2. ' sep' → logprob: -1.1793336868286133
    3. 'y' → logprob: -2.0543336868286133
    4. 'sep' → logprob: -3.6793336868286133
    5. 'lst' → logprob: -5.554333686828613
    6. ' lst' → logprob: -5.554333686828613
    7. ' ' → logprob: -5.554333686828613
    8. 'delimiter' → logprob: -5.679333686828613
    9. ' ys' → logprob: -5.929333686828613
    10. ' delimiter' → logprob: -6.054333686828613

Token 33: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017161124851554632
    2. ')' → logprob: -6.626716136932373
    3. ' ):' → logprob: -8.626715660095215
    4. ',' → logprob: -9.751715660095215
    5. '):
' → logprob: -9.751715660095215
    6. '=' → logprob: -10.001715660095215
    7. ''):' → logprob: -11.501715660095215
    8. ')=' → logprob: -11.751715660095215
    9. ' ' → logprob: -12.126715660095215
    10. ':' → logprob: -12.251715660095215

Token 34: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14447155594825745
    2. ' x' → logprob: -2.3944716453552246
    3. 'return' → logprob: -3.2694716453552246
    4. 'x' → logprob: -5.894471645355225
    5. ' ' → logprob: -6.769471645355225
    6. ' y' → logprob: -7.394471645355225
    7. ''' → logprob: -8.644471168518066
    8. ' f' → logprob: -9.519471168518066
    9. '	return' → logprob: -9.519471168518066
    10. '"' → logprob: -9.769471168518066

Token 35: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9756505489349365
    2. 'str' → logprob: -0.9756505489349365
    3. ' str' → logprob: -1.9756505489349365
    4. ' x' → logprob: -2.4756505489349365
    5. 'f' → logprob: -4.475650787353516
    6. ' f' → logprob: -5.100650787353516
    7. '"' → logprob: -6.100650787353516
    8. ''' → logprob: -6.600650787353516
    9. '"x' → logprob: -7.225650787353516
    10. '''.' → logprob: -8.100650787353516

Token 36: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20697730779647827
    2. ' +' → logprob: -2.456977367401123
    3. '[' → logprob: -3.206977367401123
    4. '(' → logprob: -3.456977367401123
    5. '<|end|>' → logprob: -4.331977367401123
    6. ' ' → logprob: -5.456977367401123
    7. '(x' → logprob: -5.706977367401123
    8. '.' → logprob: -6.331977367401123
    9. ',' → logprob: -7.331977367401123
    10. ')' → logprob: -7.331977367401123

Token 37: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15345399081707
    2. ' x' → logprob: -2.153454065322876
    3. '"' → logprob: -4.278453826904297
    4. ''' → logprob: -5.028453826904297
    5. ' ' → logprob: -6.028453826904297
    6. ' "' → logprob: -6.903453826904297
    7. ' '' → logprob: -7.278453826904297
    8. '"x' → logprob: -7.403453826904297
    9. ''.' → logprob: -8.653453826904297
    10. ''x' → logprob: -8.653453826904297

Token 38: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3388049602508545
    2. '.' → logprob: -2.2138049602508545
    3. '<|end|>' → logprob: -3.0888049602508545
    4. '
' → logprob: -3.2138049602508545
    5. ')' → logprob: -3.4638049602508545
    6. '(
' → logprob: -4.338805198669434
    7. 'def' → logprob: -4.463805198669434
    8. '[' → logprob: -5.088805198669434
    9. ' ' → logprob: -5.463805198669434
    10. '#' → logprob: -5.463805198669434

Token 39: 'basket' (ID: 106622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19327695667743683
    2. '.' → logprob: -3.193276882171631
    3. 'def' → logprob: -3.193276882171631
    4. '#' → logprob: -4.193276882171631
    5. '(
' → logprob: -4.193276882171631
    6. '*' → logprob: -4.443276882171631
    7. '
' → logprob: -4.568276882171631
    8. ')' → logprob: -4.818276882171631
    9. '[' → logprob: -5.193276882171631
    10. '_' → logprob: -5.193276882171631

Token 40: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0915326401591301
    2. '.' → logprob: -3.2165327072143555
    3. '=' → logprob: -3.9665327072143555
    4. ' =' → logprob: -4.0915327072143555
    5. '.append' → logprob: -5.2165327072143555
    6. '[' → logprob: -5.8415327072143555
    7. '_' → logprob: -6.7165327072143555
    8. '=[]' → logprob: -7.3415327072143555
    9. '[]' → logprob: -7.5915327072143555
    10. '[:]' → logprob: -7.7165327072143555

Token 41: ' smash' (ID: 104662)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011675317771732807
    2. '{}' → logprob: -4.6366753578186035
    3. '""' → logprob: -7.3866753578186035
    4. '[' → logprob: -7.7616753578186035
    5. ' []' → logprob: -8.261674880981445
    6. '[]
' → logprob: -8.886674880981445
    7. '['' → logprob: -9.261674880981445
    8. '["' → logprob: -9.511674880981445
    9. 'set' → logprob: -9.761674880981445
    10. '[]}' → logprob: -9.761674880981445

Token 42: '(gr' (ID: 64506)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02290789596736431
    2. '(b' → logprob: -5.022907733917236
    3. '(gl' → logprob: -5.522907733917236
    4. '(gr' → logprob: -5.522907733917236
    5. '("("' → logprob: -5.772907733917236
    6. '('' → logprob: -5.897907733917236
    7. '(s' → logprob: -6.647907733917236
    8. '("' → logprob: -8.647908210754395
    9. '(sm' → logprob: -9.397908210754395
    10. '(g' → logprob: -9.397908210754395

Token 43: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -1.6240566083070007e-06
    2. '(ab' → logprob: -13.875001907348633
    3. 'abber' → logprob: -15.375001907348633
    4. 'аб' → logprob: -15.875001907348633
    5. 'a' → logprob: -16.250001907348633
    6. 'ob' → logprob: -17.125001907348633
    7. 'b' → logprob: -17.250001907348633
    8. 'ub' → logprob: -17.375001907348633
    9. '```' → logprob: -17.375001907348633
    10. '#ab' → logprob: -17.500001907348633

Token 44: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2535499036312103
    2. '()))' → logprob: -1.5035499334335327
    3. '()' → logprob: -6.503550052642822
    4. ')' → logprob: -9.878549575805664
    5. '))' → logprob: -10.253549575805664
    6. ' ())' → logprob: -11.753549575805664
    7. '())))' → logprob: -12.128549575805664
    8. '()));' → logprob: -12.253549575805664
    9. '()))

' → logprob: -12.378549575805664
    10. '()))
' → logprob: -12.628549575805664

Token 45: 'print' (ID: 1598)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2444814294576645
    2. '+' → logprob: -2.119481325149536
    3. '.' → logprob: -3.244481325149536
    4. '[::-' → logprob: -4.869481563568115
    5. '(' → logprob: -5.119481563568115
    6. '#' → logprob: -5.244481563568115
    7. ')' → logprob: -5.619481563568115
    8. '<|end|>' → logprob: -5.744481563568115
    9. ' +' → logprob: -5.869481563568115
    10. '```' → logprob: -5.994481563568115

Token 46: '(gl' (ID: 41099)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30903956294059753
    2. '(gl' → logprob: -1.55903959274292
    3. '(b' → logprob: -2.93403959274292
    4. '('' → logprob: -7.43403959274292
    5. '(len' → logprob: -7.68403959274292
    6. '("("' → logprob: -7.93403959274292
    7. '()' → logprob: -8.434039115905762
    8. '(sum' → logprob: -8.434039115905762
    9. '("' → logprob: -8.934039115905762
    10. '((' → logprob: -9.559039115905762

Token 47: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.009966438636183739
    2. 'u' → logprob: -5.2599663734436035
    3. 'e' → logprob: -5.3849663734436035
    4. '(' → logprob: -10.697466850280762
    5. '(e' → logprob: -11.697466850280762
    6. '\' → logprob: -11.822466850280762
    7. '{' → logprob: -12.197466850280762
    8. '#' → logprob: -12.197466850280762
    9. '"' → logprob: -12.447466850280762
    10. ')' → logprob: -12.509966850280762

Token 48: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22614996135234833
    2. '(b' → logprob: -1.6011499166488647
    3. '((' → logprob: -8.101149559020996
    4. '('' → logprob: -8.226149559020996
    5. '(
' → logprob: -10.476149559020996
    6. '(s' → logprob: -11.101149559020996
    7. ' (' → logprob: -11.226149559020996
    8. '([' → logprob: -11.351149559020996
    9. '(`' → logprob: -11.726149559020996
    10. '("("' → logprob: -11.726149559020996

Token 49: 'basket' (ID: 106622)
  Prédit: 'basket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basket' → logprob: -0.0008056987426243722
    2. ' basket' → logprob: -7.750805854797363
    3. '(b' → logprob: -8.500805854797363
    4. 'sm' → logprob: -10.250805854797363
    5. '(re' → logprob: -10.250805854797363
    6. 're' → logprob: -10.250805854797363
    7. 'b' → logprob: -11.250805854797363
    8. 'sorted' → logprob: -11.625805854797363
    9. '[b' → logprob: -12.500805854797363
    10. 'bag' → logprob: -12.750805854797363

Token 50: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -2.927930654550437e-05
    2. ')' → logprob: -10.750029563903809
    3. '))
' → logprob: -12.500029563903809
    4. ')))' → logprob: -12.625029563903809
    5. ' ))' → logprob: -14.750029563903809
    6. '()))' → logprob: -15.750029563903809
    7. '));' → logprob: -16.750028610229492
    8. '),' → logprob: -17.000028610229492
    9. '))

' → logprob: -17.125028610229492
    10. '))
' → logprob: -17.125028610229492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 48
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 33
Précision stricte (1ère position): 31.25%
Précision adaptée (1ère position): 31.25%
Précision (top 10): 68.75%
================================================================================
