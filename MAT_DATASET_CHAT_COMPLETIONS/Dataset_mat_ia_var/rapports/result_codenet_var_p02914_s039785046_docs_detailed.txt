================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_basis(a):
    """
    Calcule la base linéaire de l'ensemble des entiers fournis sur le corps GF(2).
    La base retournée est une base réduite telle que tout élément du sous-espace vectoriel 
    généré par 'a' peut s'écrire comme combinaison linéaire (XOR) des éléments de la base.

    Args:
        a (list of int): Liste d'entiers pour laquelle calculer la base linéaire (modulo 2).
    
    Returns:
        list of int: La base réduite, où chaque élément est linéairement indépendant (modulo 2).
    """
    basis = []  # Liste qui va contenir les éléments de la base
    for e in a:
        # Pour chaque nouvel élément, on le réduit vis-à-vis des éléments déjà dans la base
        for b in basis:
            # On remplace 'e' par le minimum avec 'e XOR b' pour garantir l'aspect réduit
            e = min(e, e ^ b)
        if e:
            # Si 'e' est non nul après réduction, il est linéairement indépendant, on l'ajoute à la base
            basis.append(e)
    return basis

def main():
    """
    Fonction principale qui lit les entrées, effectue les transformations, et affiche le résultat.
    Procède comme suit :
    1. Lit 'n' et la liste 'a'.
    2. Calcule le XOR de toute la liste (forte contribution au résultat final).
    3. Filtre chaque élément pour annuler les bits déjà présents dans 'ans' (le XOR total).
    4. Calcule la base linéaire des éléments filtrés.
    5. Cherche le plus grand XOR possible obtenu en combinant des éléments de la base.
    6. Affiche le résultat final.
    """
    
    # Lecture de la taille du tableau
    n = int(input())
    # Lecture des éléments du tableau
    a = list(map(int, input().split()))
    
    # Calcul du XOR total de la liste; c'est la contribution initiale au résultat
    ans = 0
    for i in a:
        ans ^= i

    # Calcul du masque complémentaire : ~ans. Les bits à 1 dans ce masque indiquent les positions où l’on veut maximiser le XOR restant.
    k = ~ans
    
    # Filtrage des éléments : on garde uniquement les bits que l’on peut potentiellement augmenter (non présents dans ans)
    for i in range(n):
        a[i] &= k

    # Construction de la base linéaire des éléments devant être XOR-és pour maximiser le résultat
    basis = get_basis(a)
    
    # Calcul du meilleur XOR possible avec la base (maximum sur tous les XOR de sous-ensembles)
    res = 0
    for i in basis:
        # On tente d'améliorer res en xorant avec chaque base
        res = max(res, res ^ i)
    
    # Affichage du résultat final: le XOR initial + deux fois le maximum ajouté grâce à la base linéaire
    print(ans + 2 * res)

# Appel de la fonction principale
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_basis' (ID: 180790)
  → Token d'amorce (pas de prédiction)

Token 3: '(a' (ID: 6271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7050518989562988
    2. '_basis' → logprob: -0.8300518989562988
    3. '(' → logprob: -2.705051898956299
    4. '():' → logprob: -7.080051898956299
    5. '```' → logprob: -7.455051898956299
    6. '_:' → logprob: -7.955051898956299
    7. '(_' → logprob: -8.33005142211914
    8. ' (' → logprob: -8.70505142211914
    9. '):' → logprob: -8.83005142211914
    10. '(:' → logprob: -9.33005142211914

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7159220576286316
    2. ')' → logprob: -1.5909221172332764
    3. ',' → logprob: -2.0909221172332764
    4. 's' → logprob: -2.2159221172332764
    5. '_' → logprob: -2.9659221172332764
    6. '_basis' → logprob: -4.590921878814697
    7. '[' → logprob: -4.965921878814697
    8. 'a' → logprob: -6.715921878814697
    9. '_s' → logprob: -7.090921878814697
    10. '_,' → logprob: -7.090921878814697

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014937491156160831
    2. '   ' → logprob: -5.014937400817871
    3. '```' → logprob: -5.139937400817871
    4. '():' → logprob: -7.014937400817871
    5. ':
' → logprob: -7.889937400817871
    6. ':return' → logprob: -8.639937400817871
    7. '    
' → logprob: -8.764937400817871
    8. '``' → logprob: -9.139937400817871
    9. '':' → logprob: -9.264937400817871
    10. '_:' → logprob: -10.014937400817871

Token 6: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1888694763183594
    2. '```' → logprob: -1.4388694763183594
    3. '\n' → logprob: -2.0638694763183594
    4. '\' → logprob: -2.0638694763183594
    5. ':' → logprob: -2.9388694763183594
    6. ''' → logprob: -3.3138694763183594
    7. ' ' → logprob: -3.3138694763183594
    8. '`' → logprob: -3.8138694763183594
    9. '[' → logprob: -4.438869476318359
    10. '``' → logprob: -4.688869476318359

Token 7: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.2799891531467438
    2. '   ' → logprob: -2.779989242553711
    3. 'Returns' → logprob: -2.779989242553711
    4. ' """' → logprob: -3.654989242553711
    5. ''''' → logprob: -3.904989242553711
    6. '"""
' → logprob: -4.404989242553711
    7. ' """
' → logprob: -4.779989242553711
    8. 'r' → logprob: -5.029989242553711
    9. 'Calculate' → logprob: -5.029989242553711
    10. 'Return' → logprob: -5.154989242553711

Token 8: ' Cal' (ID: 4453)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Returns' → logprob: -0.9862398505210876
    2. 'Return' → logprob: -1.2362399101257324
    3. 'Generate' → logprob: -1.8612399101257324
    4. 'Calculate' → logprob: -2.4862399101257324
    5. '"""' → logprob: -3.4862399101257324
    6. 'Calcul' → logprob: -4.611239910125732
    7. 'Compute' → logprob: -4.861239910125732
    8. '"""
' → logprob: -4.861239910125732
    9. 'Gener' → logprob: -4.986239910125732
    10. '   ' → logprob: -5.111239910125732

Token 9: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2575112581253052
    2. 'culate' → logprob: -1.5075112581253052
    3. 'cula' → logprob: -6.132511138916016
    4. 'cul' → logprob: -7.132511138916016
    5. 'culation' → logprob: -7.382511138916016
    6. 'cu' → logprob: -7.632511138916016
    7. '   ' → logprob: -7.632511138916016
    8. 'culated' → logprob: -8.132511138916016
    9. 'culator' → logprob: -8.507511138916016
    10. ' ' → logprob: -9.257511138916016

Token 10: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07486719638109207
    2. 'te' → logprob: -3.8248672485351562
    3. 't' → logprob: -3.8248672485351562
    4. 'r' → logprob: -3.9498672485351562
    5. '_' → logprob: -5.949867248535156
    6. 'u' → logprob: -6.824867248535156
    7. 'ulate' → logprob: -6.949867248535156
    8. 'm' → logprob: -7.199867248535156
    9. 'space' → logprob: -7.324867248535156
    10. 'brate' → logprob: -7.699867248535156

Token 11: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.588689923286438
    2. ' ' → logprob: -1.088689923286438
    3. '   ' → logprob: -2.8386898040771484
    4. 's' → logprob: -4.838689804077148
    5. '  ' → logprob: -4.963689804077148
    6. ' basis' → logprob: -5.213689804077148
    7. ' space' → logprob: -5.338689804077148
    8. ' n' → logprob: -5.338689804077148
    9. ' b' → logprob: -5.338689804077148
    10. '_' → logprob: -5.588689804077148

Token 12: ' lin' (ID: 14432)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2078370302915573
    2. ' ' → logprob: -2.0828371047973633
    3. '```' → logprob: -4.082837104797363
    4. '\' → logprob: -4.832837104797363
    5. 'd' → logprob: -5.082837104797363
    6. ' de' → logprob: -5.332837104797363
    7. '   ' → logprob: -5.457837104797363
    8. '  ' → logprob: -5.832837104797363
    9. ' ```' → logprob: -5.832837104797363
    10. ' d' → logprob: -6.082837104797363

Token 13: 'é' (ID: 377)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.2624626159667969
    2. 'a' → logprob: -2.387462615966797
    3. 'é' → logprob: -2.512462615966797
    4. 'e' → logprob: -2.887462615966797
    5. '\' → logprob: -7.387462615966797
    6. '\'' → logprob: -8.137462615966797
    7. '\x' → logprob: -8.387462615966797
    8. 'naire' → logprob: -8.887462615966797
    9. '\xe' → logprob: -9.137462615966797
    10. '```' → logprob: -9.512462615966797

Token 14: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.22628696262836456
    2. 'a' → logprob: -1.6012870073318481
    3. ' aire' → logprob: -8.351286888122559
    4. 'air' → logprob: -8.976286888122559
    5. 'aires' → logprob: -9.351286888122559
    6. '\' → logprob: -9.476286888122559
    7. 'é' → logprob: -10.226286888122559
    8. '\x' → logprob: -10.226286888122559
    9. ' a' → logprob: -10.351286888122559
    10. '\'' → logprob: -10.601286888122559

Token 15: ' de' (ID: 334)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0110796689987183
    2. ' ' → logprob: -1.5110796689987183
    3. ''' → logprob: -1.7610796689987183
    4. '\' → logprob: -2.511079788208008
    5. '```' → logprob: -3.386079788208008
    6. 's' → logprob: -3.886079788208008
    7. '\n' → logprob: -3.886079788208008
    8. ' \' → logprob: -4.261079788208008
    9. '`' → logprob: -4.636079788208008
    10. ' d' → logprob: -4.761079788208008

Token 16: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.42518341541290283
    2. 'a' → logprob: -2.0501832962036133
    3. ' a' → logprob: -2.3001832962036133
    4. ' ' → logprob: -3.1751832962036133
    5. 'l' → logprob: -3.4251832962036133
    6. ' la' → logprob: -3.5501832962036133
    7. '   ' → logprob: -6.175183296203613
    8. '\' → logprob: -6.300183296203613
    9. 's' → logprob: -6.300183296203613
    10. '```' → logprob: -6.675183296203613

Token 17: ''ensemble' (ID: 79341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07173122465610504
    2. ''' → logprob: -3.4467313289642334
    3. ''espace' → logprob: -3.5717313289642334
    4. ''ensemble' → logprob: -5.571731090545654
    5. 'e' → logprob: -5.946731090545654
    6. 'i' → logprob: -6.946731090545654
    7. '’espace' → logprob: -8.571731567382812
    8. ''\' → logprob: -8.821731567382812
    9. ''''' → logprob: -8.821731567382812
    10. ''entrée' → logprob: -8.946731567382812

Token 18: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.167595386505127
    2. ' des' → logprob: -1.792595386505127
    3. ' ' → logprob: -1.917595386505127
    4. ' \' → logprob: -2.167595386505127
    5. 's' → logprob: -3.042595386505127
    6. 'e' → logprob: -3.542595386505127
    7. '\' → logprob: -3.667595386505127
    8. '"' → logprob: -4.042595386505127
    9. '```' → logprob: -4.042595386505127
    10. '`' → logprob: -4.292595386505127

Token 19: ' ent' (ID: 1121)
  Prédit: ' vect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vect' → logprob: -0.20811113715171814
    2. ' vectors' → logprob: -1.9581111669540405
    3. ' ' → logprob: -3.458111047744751
    4. ' a' → logprob: -5.45811128616333
    5. ' espaces' → logprob: -5.45811128616333
    6. 'vect' → logprob: -6.20811128616333
    7. ' vector' → logprob: -6.45811128616333
    8. 'a' → logprob: -7.33311128616333
    9. 'vectors' → logprob: -7.95811128616333
    10. 's' → logprob: -7.95811128616333

Token 20: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.397778183221817
    2. 'i' → logprob: -1.1477781534194946
    3. 'r' → logprob: -4.897778034210205
    4. 'ières' → logprob: -6.522778034210205
    5. 'ié' → logprob: -7.147778034210205
    6. 'ités' → logprob: -8.147778511047363
    7. 'a' → logprob: -8.647778511047363
    8. ' vectors' → logprob: -9.272778511047363
    9. 'e' → logprob: -9.647778511047363
    10. 'ière' → logprob: -9.897778511047363

Token 21: ' four' (ID: 4242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.059217967092990875
    2. 'es' → logprob: -3.809217929840088
    3. ' ' → logprob: -4.184217929840088
    4. ''' → logprob: -5.184217929840088
    5. 'e' → logprob: -5.809217929840088
    6. ' s' → logprob: -5.809217929840088
    7. '```' → logprob: -6.184217929840088
    8. ' de' → logprob: -6.934217929840088
    9. '  ' → logprob: -6.934217929840088
    10. '\' → logprob: -7.684217929840088

Token 22: 'nis' (ID: 12113)
  Prédit: 'iers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.43295279145240784
    2. 'i' → logprob: -1.0579527616500854
    3. 'r' → logprob: -6.432952880859375
    4. 'm' → logprob: -6.682952880859375
    5. '```' → logprob: -7.557952880859375
    6. 'g' → logprob: -7.932952880859375
    7. 's' → logprob: -9.307952880859375
    8. 't' → logprob: -9.682952880859375
    9. 'ti' → logprob: -9.807952880859375
    10. 'ier' → logprob: -10.432952880859375

Token 23: ' sur' (ID: 1512)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.273579478263855
    2. ')' → logprob: -2.5235795974731445
    3. ' ' → logprob: -3.3985795974731445
    4. ''' → logprob: -4.1485795974731445
    5. ' )' → logprob: -4.3985795974731445
    6. '.' → logprob: -4.5235795974731445
    7. ''s' → logprob: -4.6485795974731445
    8. ',' → logprob: -4.7735795974731445
    9. '```' → logprob: -5.0235795974731445
    10. ' s' → logprob: -5.1485795974731445

Token 24: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24358129501342773
    2. ' l' → logprob: -2.4935812950134277
    3. ' \xe2\x84' → logprob: -3.2435812950134277
    4. ' ' → logprob: -3.3685812950134277
    5. ' \' → logprob: -4.493581295013428
    6. ' les' → logprob: -4.618581295013428
    7. '\xe2\x84' → logprob: -5.368581295013428
    8. '   ' → logprob: -5.618581295013428
    9. ' le' → logprob: -5.743581295013428
    10. 'l' → logprob: -5.743581295013428

Token 25: ' corps' (ID: 29363)
  Prédit: ' Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Z' → logprob: -0.6219786405563354
    2. ' \' → logprob: -2.371978759765625
    3. ' ' → logprob: -2.496978759765625
    4. ' cor' → logprob: -2.496978759765625
    5. ' corps' → logprob: -3.496978759765625
    6. ' \xe2\x84' → logprob: -3.496978759765625
    7. 'cor' → logprob: -3.996978759765625
    8. ' vect' → logprob: -3.996978759765625
    9. ' b' → logprob: -4.121978759765625
    10. ' K' → logprob: -4.246978759765625

Token 26: ' GF' (ID: 85509)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.31819257140159607
    2. ' ' → logprob: -2.193192481994629
    3. ' \' → logprob: -2.693192481994629
    4. ' de' → logprob: -3.193192481994629
    5. ' `' → logprob: -4.818192481994629
    6. '```' → logprob: -5.568192481994629
    7. '\' → logprob: -5.693192481994629
    8. ' ' → logprob: -5.693192481994629
    9. 'e' → logprob: -5.693192481994629
    10. 'des' → logprob: -5.818192481994629

Token 27: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18423089385032654
    2. '2' → logprob: -1.809230923652649
    3. ' (' → logprob: -6.559230804443359
    4. ' ' → logprob: -6.684230804443359
    5. '_' → logprob: -6.934230804443359
    6. '[' → logprob: -7.684230804443359
    7. '(
' → logprob: -9.18423080444336
    8. '```' → logprob: -9.68423080444336
    9. 'p' → logprob: -10.43423080444336
    10. '`' → logprob: -10.80923080444336

Token 28: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006829274818301201
    2. ' ' → logprob: -5.006829261779785
    3. ')' → logprob: -9.631829261779785
    4. '(' → logprob: -11.256829261779785
    5. ' )' → logprob: -11.506829261779785
    6. ''' → logprob: -11.881829261779785
    7. '"' → logprob: -13.069329261779785
    8. ',' → logprob: -13.194329261779785
    9. '```' → logprob: -13.444329261779785
    10. ' ,' → logprob: -13.506829261779785

Token 29: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0066405292600393295
    2. ').' → logprob: -5.381640434265137
    3. ' )' → logprob: -7.131640434265137
    4. ')
' → logprob: -7.381640434265137
    5. '"""
' → logprob: -9.506640434265137
    6. '"""' → logprob: -9.506640434265137
    7. '   ' → logprob: -9.631640434265137
    8. 's' → logprob: -9.881640434265137
    9. ')
' → logprob: -10.256640434265137
    10. ')\' → logprob: -10.256640434265137

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.933985710144043
    2. '\n' → logprob: -1.308985710144043
    3. '\' → logprob: -2.558985710144043
    4. '```' → logprob: -2.558985710144043
    5. ' 
' → logprob: -3.183985710144043
    6. '    
' → logprob: -3.308985710144043
    7. '"""
' → logprob: -3.308985710144043
    8. '  
' → logprob: -4.058985710144043
    9. ')' → logprob: -4.683985710144043
    10. '"""' → logprob: -4.808985710144043

Token 31: ' La' (ID: 3038)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5856837630271912
    2. '"""' → logprob: -2.210683822631836
    3. '"""
' → logprob: -2.460683822631836
    4. '   ' → logprob: -2.835683822631836
    5. '  
' → logprob: -2.835683822631836
    6. '    
' → logprob: -3.210683822631836
    7. '```' → logprob: -3.335683822631836
    8. ' 
' → logprob: -4.210683822631836
    9. '\' → logprob: -4.585683822631836
    10. '
' → logprob: -4.710683822631836

Token 32: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.2675377428531647
    2. ' ' → logprob: -1.6425377130508423
    3. ' bases' → logprob: -4.267537593841553
    4. 'base' → logprob: -4.517537593841553
    5. ' basi' → logprob: -5.517537593841553
    6. ' basis' → logprob: -5.767537593841553
    7. 'bases' → logprob: -6.767537593841553
    8. '  ' → logprob: -6.892537593841553
    9. '_basis' → logprob: -6.892537593841553
    10. 'b' → logprob: -7.017537593841553

Token 33: ' retourn' (ID: 150215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8389778733253479
    2. ' lin' → logprob: -0.9639778733253479
    3. ' linear' → logprob: -2.838977813720703
    4. ' de' → logprob: -3.713977813720703
    5. ' est' → logprob: -3.838977813720703
    6. '  ' → logprob: -4.088977813720703
    7. ' des' → logprob: -4.213977813720703
    8. ' ```' → logprob: -4.838977813720703
    9. ' ,' → logprob: -5.213977813720703
    10. 'e' → logprob: -5.838977813720703

Token 34: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.006422140169888735
    2. 'é' → logprob: -5.63142204284668
    3. 'ée' → logprob: -5.88142204284668
    4. ' e' → logprob: -10.88142204284668
    5. 'a' → logprob: -12.50642204284668
    6. 'ee' → logprob: -12.63142204284668
    7. '   ' → logprob: -14.88142204284668
    8. 'er' → logprob: -15.00642204284668
    9. 'è' → logprob: -15.38142204284668
    10. 'u' → logprob: -15.75642204284668

Token 35: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23460061848163605
    2. ' est' → logprob: -1.9846006631851196
    3. ' des' → logprob: -3.98460054397583
    4. ' de' → logprob: -4.85960054397583
    5. ',' → logprob: -5.48460054397583
    6. ' :' → logprob: -5.60960054397583
    7. ' ```' → logprob: -5.73460054397583
    8. ' ,' → logprob: -5.85960054397583
    9. '.' → logprob: -5.98460054397583
    10. ' """
' → logprob: -6.10960054397583

Token 36: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8675237894058228
    2. ' un' → logprob: -1.9925237894058228
    3. ' ' → logprob: -2.367523670196533
    4. '  ' → logprob: -2.617523670196533
    5. ' a' → logprob: -2.992523670196533
    6. ' la' → logprob: -2.992523670196533
    7. ' sous' → logprob: -2.992523670196533
    8. ' composée' → logprob: -3.367523670196533
    9. '[]' → logprob: -4.492523670196533
    10. ' constitu' → logprob: -4.992523670196533

Token 37: ' base' (ID: 3611)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.1759445071220398
    2. ' ' → logprob: -2.0509445667266846
    3. ' list' → logprob: -3.5509445667266846
    4. ' base' → logprob: -5.8009443283081055
    5. ' listes' → logprob: -8.925944328308105
    6. ' lista' → logprob: -9.050944328308105
    7. ' l' → logprob: -9.050944328308105
    8. '  ' → logprob: -9.300944328308105
    9. ' matr' → logprob: -9.300944328308105
    10. 'liste' → logprob: -9.550944328308105

Token 38: ' rédu' (ID: 42105)
  Prédit: ' lin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lin' → logprob: -0.4409608244895935
    2. ' vector' → logprob: -1.8159608840942383
    3. ' de' → logprob: -2.8159608840942383
    4. ' orth' → logprob: -3.5659608840942383
    5. ' maximale' → logprob: -4.190960884094238
    6. ' linear' → logprob: -4.440960884094238
    7. ' d' → logprob: -5.065960884094238
    8. ' indépendante' → logprob: -5.065960884094238
    9. ' line' → logprob: -5.190960884094238
    10. ' fondamentale' → logprob: -5.690960884094238

Token 39: 'ite' (ID: 651)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1029146909713745
    2. 'uite' → logprob: -1.6029146909713745
    3. 'ite' → logprob: -1.7279146909713745
    4. 'c' → logprob: -2.977914810180664
    5. '*' → logprob: -3.727914810180664
    6. '```' → logprob: -3.852914810180664
    7. 'cte' → logprob: -3.852914810180664
    8. '   ' → logprob: -4.102914810180664
    9. 'cie' → logprob: -4.102914810180664
    10. 'ction' → logprob: -4.227914810180664

Token 40: ' telle' (ID: 70904)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6562251448631287
    2. ' ' → logprob: -1.9062252044677734
    3. ',' → logprob: -2.4062252044677734
    4. '  ' → logprob: -2.5312252044677734
    5. ' ,' → logprob: -2.9062252044677734
    6. '.' → logprob: -3.9062252044677734
    7. '   ' → logprob: -4.406225204467773
    8. ' .' → logprob: -4.656225204467773
    9. '```' → logprob: -4.906225204467773
    10. 'de' → logprob: -5.031225204467773

Token 41: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.0017651435919106007
    2. 'que' → logprob: -7.251765251159668
    3. ' that' → logprob: -7.751765251159668
    4. ' qu' → logprob: -8.126765251159668
    5. '```' → logprob: -9.501765251159668
    6. ' ' → logprob: -9.626765251159668
    7. '   ' → logprob: -9.751765251159668
    8. 'qu' → logprob: -10.376765251159668
    9. '\n' → logprob: -11.126765251159668
    10. '      ' → logprob: -11.376765251159668

Token 42: ' tout' (ID: 5501)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.5315858125686646
    2. ' les' → logprob: -1.4065858125686646
    3. ' la' → logprob: -2.406585693359375
    4. ' le' → logprob: -3.781585693359375
    5. ' l' → logprob: -3.906585693359375
    6. ' tous' → logprob: -4.781585693359375
    7. 'a' → logprob: -5.406585693359375
    8. ' a' → logprob: -5.656585693359375
    9. 'les' → logprob: -5.906585693359375
    10. ' toutes' → logprob: -6.281585693359375

Token 43: ' élément' (ID: 99627)
  Prédit: ' vect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vect' → logprob: -0.024727076292037964
    2. ' vector' → logprob: -4.024726867675781
    3. 'vect' → logprob: -5.649726867675781
    4. 's' → logprob: -6.399726867675781
    5. ' élément' → logprob: -8.149726867675781
    6. ' ' → logprob: -8.649726867675781
    7. '_vect' → logprob: -8.899726867675781
    8. ' vectors' → logprob: -8.899726867675781
    9. ' s' → logprob: -9.399726867675781
    10. '   ' → logprob: -9.774726867675781

Token 44: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08787883073091507
    2. ' ' → logprob: -2.837878942489624
    3. ' a' → logprob: -5.087878704071045
    4. ' d' → logprob: -5.837878704071045
    5. '_' → logprob: -6.337878704071045
    6. 's' → logprob: -6.462878704071045
    7. ' s' → logprob: -6.712878704071045
    8. ' est' → logprob: -6.837878704071045
    9. ' des' → logprob: -6.962878704071045
    10. '  ' → logprob: -7.087878704071045

Token 45: ' sous' (ID: 14487)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9545955061912537
    2. ' ' → logprob: -1.0795955657958984
    3. ' a' → logprob: -2.2045955657958984
    4. '_' → logprob: -3.4545955657958984
    5. ' espace' → logprob: -3.8295955657958984
    6. ' code' → logprob: -4.329595565795898
    7. 's' → logprob: -4.454595565795898
    8. 'es' → logprob: -4.579595565795898
    9. ' b' → logprob: -4.579595565795898
    10. ' ensemble' → logprob: -4.829595565795898

Token 46: '-es' (ID: 40011)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.07245606184005737
    2. '-' → logprob: -4.197455883026123
    3. '_' → logprob: -4.447455883026123
    4. ' espace' → logprob: -4.447455883026123
    5. '-es' → logprob: -4.822455883026123
    6. '_es' → logprob: -5.072455883026123
    7. 'esp' → logprob: -5.072455883026123
    8. ' ' → logprob: -5.072455883026123
    9. '   ' → logprob: -6.697455883026123
    10. '```' → logprob: -7.197455883026123

Token 47: 'pace' (ID: 2612)
  Prédit: 'pace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pace' → logprob: -0.0576019361615181
    2. 'p' → logprob: -2.9326019287109375
    3. 't' → logprob: -6.5576019287109375
    4. 'space' → logprob: -7.8076019287109375
    5. 'pa' → logprob: -7.8076019287109375
    6. 'pac' → logprob: -8.432601928710938
    7. '```' → logprob: -9.557601928710938
    8. 'paces' → logprob: -9.932601928710938
    9. 'pan' → logprob: -10.807601928710938
    10. '   ' → logprob: -10.807601928710938

Token 48: ' vector' (ID: 9727)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8105822205543518
    2. ' est' → logprob: -1.560582160949707
    3. ' des' → logprob: -2.685582160949707
    4. ' ' → logprob: -3.185582160949707
    5. ' lin' → logprob: -3.435582160949707
    6. ' a' → logprob: -4.060582160949707
    7. '   ' → logprob: -4.060582160949707
    8. ' can' → logprob: -4.185582160949707
    9. ' peut' → logprob: -4.560582160949707
    10. ' génér' → logprob: -4.560582160949707

Token 49: 'iel' (ID: 930)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.8590803742408752
    2. 'c' → logprob: -1.7340803146362305
    3. '   ' → logprob: -1.7340803146362305
    4. 'ct' → logprob: -3.1090803146362305
    5. 'u' → logprob: -3.7340803146362305
    6. 'space' → logprob: -3.8590803146362305
    7. 'ect' → logprob: -3.8590803146362305
    8. 'e' → logprob: -3.9840803146362305
    9. ' ' → logprob: -4.6090803146362305
    10. '	' → logprob: -5.2340803146362305

Token 50: ' 
' (ID: 793)
  Prédit: ' form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' form' → logprob: -1.3903636932373047
    2. ' de' → logprob: -1.6403636932373047
    3. ' est' → logprob: -2.1403636932373047
    4. ' eng' → logprob: -2.3903636932373047
    5. ' des' → logprob: -2.6403636932373047
    6. ' ' → logprob: -2.6403636932373047
    7. ' sp' → logprob: -2.7653636932373047
    8. ' génér' → logprob: -3.2653636932373047
    9. ' a' → logprob: -3.6403636932373047
    10. '   ' → logprob: -4.765363693237305

Token 51: '   ' (ID: 271)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9375647306442261
    2. ' de' → logprob: -1.812564730644226
    3. ' est' → logprob: -2.3125648498535156
    4. ' ' → logprob: -2.3125648498535156
    5. ' a' → logprob: -2.4375648498535156
    6. ' form' → logprob: -3.5625648498535156
    7. '   ' → logprob: -3.9375648498535156
    8. ' génér' → logprob: -4.062564849853516
    9. ' eng' → logprob: -4.437564849853516
    10. ' sur' → logprob: -4.687564849853516

Token 52: ' génér' (ID: 18939)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.416825532913208
    2. ' eng' → logprob: -1.916825532913208
    3. ' ' → logprob: -2.041825532913208
    4. ' de' → logprob: -2.291825532913208
    5. ' form' → logprob: -2.416825532913208
    6. ' est' → logprob: -2.416825532913208
    7. ' génér' → logprob: -2.791825532913208
    8. ' a' → logprob: -3.041825532913208
    9. ' generated' → logprob: -4.166825294494629
    10. ' sp' → logprob: -4.541825294494629

Token 53: 'é' (ID: 377)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.2218247652053833
    2. 'ée' → logprob: -1.2218247652053833
    3. 'é' → logprob: -1.3468247652053833
    4. 'e' → logprob: -2.3468246459960938
    5. 'a' → logprob: -4.471824645996094
    6. 'ate' → logprob: -4.596824645996094
    7. 'ale' → logprob: -4.596824645996094
    8. 'er' → logprob: -4.971824645996094
    9. 'és' → logprob: -5.596824645996094
    10. 'ant' → logprob: -6.221824645996094

Token 54: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.003053765743970871
    2. 'par' → logprob: -6.128053665161133
    3. ' ' → logprob: -7.628053665161133
    4. ' est' → logprob: -8.878053665161133
    5. 'e' → logprob: -9.128053665161133
    6. ' by' → logprob: -10.628053665161133
    7. '	par' → logprob: -11.003053665161133
    8. 'es' → logprob: -11.128053665161133
    9. '_par' → logprob: -11.378053665161133
    10. ' ' → logprob: -11.628053665161133

Token 55: ' '' (ID: 461)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6775354146957397
    2. 'a' → logprob: -1.8025354146957397
    3. ' l' → logprob: -2.1775355339050293
    4. ' ' → logprob: -2.8025355339050293
    5. ' les' → logprob: -2.8025355339050293
    6. ' ces' → logprob: -3.0525355339050293
    7. ' la' → logprob: -4.552535533905029
    8. ' `' → logprob: -4.677535533905029
    9. ' the' → logprob: -5.177535533905029
    10. 'l' → logprob: -5.177535533905029

Token 56: 'a' (ID: 64)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.14291666448116302
    2. 'a' → logprob: -2.017916679382324
    3. ' la' → logprob: -9.517916679382324
    4. ' ' → logprob: -9.892916679382324
    5. ' l' → logprob: -10.267916679382324
    6. ' the' → logprob: -11.142916679382324
    7. 'l' → logprob: -11.767916679382324
    8. 'la' → logprob: -11.767916679382324
    9. ' `' → logprob: -11.892916679382324
    10. '>a' → logprob: -12.142916679382324

Token 57: ''' (ID: 6)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5375019907951355
    2. ''' → logprob: -0.9125019907951355
    3. 's' → logprob: -4.662501811981201
    4. ')'' → logprob: -6.412501811981201
    5. '['' → logprob: -7.287501811981201
    6. ')' → logprob: -7.912501811981201
    7. '[]' → logprob: -8.28750228881836
    8. ' est' → logprob: -8.28750228881836
    9. 'a' → logprob: -8.66250228881836
    10. 'es' → logprob: -8.78750228881836

Token 58: ' peut' (ID: 9216)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3509658873081207
    2. ''' → logprob: -3.225965976715088
    3. ' ' → logprob: -3.225965976715088
    4. '   ' → logprob: -3.350965976715088
    5. ')' → logprob: -3.850965976715088
    6. ',' → logprob: -3.975965976715088
    7. '"' → logprob: -4.100965976715088
    8. '.' → logprob: -4.350965976715088
    9. ' peut' → logprob: -4.475965976715088
    10. ' )' → logprob: -4.600965976715088

Token 59: ' s' (ID: 265)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.23786741495132446
    2. ' s' → logprob: -1.9878673553466797
    3. 'être' → logprob: -3.2378673553466797
    4. ' ' → logprob: -4.11286735534668
    5. ' be' → logprob: -5.36286735534668
    6. 's' → logprob: -5.73786735534668
    7. ' etre' → logprob: -5.98786735534668
    8. ''être' → logprob: -6.23786735534668
    9. '  ' → logprob: -6.73786735534668
    10. ' ' → logprob: -7.23786735534668

Token 60: ''é' (ID: 12728)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8253694772720337
    2. ''é' → logprob: -0.9503694772720337
    3. 'e' → logprob: -2.450369358062744
    4. 'é' → logprob: -3.200369358062744
    5. 'être' → logprob: -4.075369358062744
    6. ''être' → logprob: -4.200369358062744
    7. 'expr' → logprob: -5.075369358062744
    8. '’é' → logprob: -6.575369358062744
    9. ''ex' → logprob: -6.700369358062744
    10. '&apos' → logprob: -7.075369358062744

Token 61: 'crire' (ID: 62436)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.37135642766952515
    2. 'crit' → logprob: -1.62135648727417
    3. 'crire' → logprob: -2.62135648727417
    4. '{' → logprob: -4.74635648727417
    5. 'cr' → logprob: -4.87135648727417
    6. ''' → logprob: -5.87135648727417
    7. 'e' → logprob: -5.99635648727417
    8. 'criv' → logprob: -6.12135648727417
    9. 'cri' → logprob: -6.24635648727417
    10. 'criture' → logprob: -6.24635648727417

Token 62: ' comme' (ID: 7971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0428168773651123
    2. ' comme' → logprob: -1.0428168773651123
    3. ' sur' → logprob: -2.9178168773651123
    4. ' en' → logprob: -3.2928168773651123
    5. 's' → logprob: -3.5428168773651123
    6. '\' → logprob: -3.6678168773651123
    7. 'comme' → logprob: -4.042817115783691
    8. ' uniquement' → logprob: -4.292817115783691
    9. ' sous' → logprob: -4.542817115783691
    10. 'sur' → logprob: -4.542817115783691

Token 63: ' combinaison' (ID: 165933)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.26362207531929016
    2. 'une' → logprob: -2.1386220455169678
    3. ' un' → logprob: -2.8886220455169678
    4. ' ' → logprob: -3.8886220455169678
    5. 'un' → logprob: -4.263622283935547
    6. ' la' → logprob: -4.638622283935547
    7. ' a' → logprob: -5.388622283935547
    8. '\' → logprob: -5.888622283935547
    9. ' des' → logprob: -6.388622283935547
    10. 'a' → logprob: -7.138622283935547

Token 64: ' lin' (ID: 14432)
  Prédit: ' lin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lin' → logprob: -0.018628736957907677
    2. ' unique' → logprob: -4.7686285972595215
    3. ' line' → logprob: -5.6436285972595215
    4. ' ' → logprob: -5.7686285972595215
    5. '   ' → logprob: -7.1436285972595215
    6. ' l' → logprob: -7.3936285972595215
    7. ' de' → logprob: -7.6436285972595215
    8. ' linear' → logprob: -7.7686285972595215
    9. ' des' → logprob: -8.01862907409668
    10. '  ' → logprob: -9.39362907409668

Token 65: 'é' (ID: 377)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11728163063526154
    2. 'é' → logprob: -2.242281675338745
    3. 'aire' → logprob: -5.992281436920166
    4. '#' → logprob: -7.617281436920166
    5. 'á' → logprob: -8.367281913757324
    6. '_' → logprob: -8.617281913757324
    7. 'e' → logprob: -8.742281913757324
    8. 'ai' → logprob: -8.867281913757324
    9. '*' → logprob: -8.992281913757324
    10. 'æ' → logprob: -9.617281913757324

Token 66: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.020637184381484985
    2. 'a' → logprob: -4.395637035369873
    3. 'aires' → logprob: -4.895637035369873
    4. ' aire' → logprob: -7.520637035369873
    5. '`' → logprob: -11.145637512207031
    6. '   ' → logprob: -11.770637512207031
    7. ' a' → logprob: -11.770637512207031
    8. '\' → logprob: -12.020637512207031
    9. '*' → logprob: -12.020637512207031
    10. 'air' → logprob: -12.395637512207031

Token 67: ' (' (ID: 350)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.22302863001823425
    2. ' de' → logprob: -1.7230286598205566
    3. ' of' → logprob: -4.848028659820557
    4. ' d' → logprob: -5.223028659820557
    5. ' unique' → logprob: -5.348028659820557
    6. 'de' → logprob: -6.973028659820557
    7. ' à' → logprob: -7.723028659820557
    8. ' ' → logprob: -7.723028659820557
    9. 'des' → logprob: -7.973028659820557
    10. '   ' → logprob: -8.598028182983398

Token 68: 'X' (ID: 55)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3705057203769684
    2. ')' → logprob: -1.870505690574646
    3. ' )' → logprob: -3.4955058097839355
    4. ' de' → logprob: -3.4955058097839355
    5. ' d' → logprob: -3.6205058097839355
    6. ' ' → logprob: -3.7455058097839355
    7. 'des' → logprob: -3.8705058097839355
    8. 'de' → logprob: -4.1205058097839355
    9. 'd' → logprob: -5.6205058097839355
    10. ' lin' → logprob: -7.6205058097839355

Token 69: 'OR' (ID: 1301)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.8862928152084351
    2. ' de' → logprob: -1.886292815208435
    3. ')' → logprob: -2.2612929344177246
    4. 'OR' → logprob: -2.6362929344177246
    5. '^' → logprob: -2.7612929344177246
    6. '^{' → logprob: -3.7612929344177246
    7. '_' → logprob: -4.011292934417725
    8. '²' → logprob: -4.261292934417725
    9. '   ' → logprob: -4.761292934417725
    10. ' ^' → logprob: -4.761292934417725

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18338333070278168
    2. ' )' → logprob: -1.8083833456039429
    3. ' des' → logprob: -6.058383464813232
    4. ' de' → logprob: -7.308383464813232
    5. 's' → logprob: -8.058382987976074
    6. ' ' → logprob: -8.933382987976074
    7. 'des' → logprob: -9.933382987976074
    8. ' of' → logprob: -10.683382987976074
    9. 'de' → logprob: -10.808382987976074
    10. '')' → logprob: -11.308382987976074

Token 71: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.09285052865743637
    2. ' de' → logprob: -2.59285044670105
    3. ' of' → logprob: -4.967850685119629
    4. '\n' → logprob: -6.467850685119629
    5. ' ' → logprob: -7.092850685119629
    6. 's' → logprob: -7.217850685119629
    7. ' \' → logprob: -7.217850685119629
    8. '\' → logprob: -7.467850685119629
    9. 'des' → logprob: -7.592850685119629
    10. ' d' → logprob: -7.842850685119629

Token 72: ' éléments' (ID: 57375)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8042933344841003
    2. ' éléments' → logprob: -1.3042933940887451
    3. ' vect' → logprob: -1.6792933940887451
    4. 'élé' → logprob: -3.429293394088745
    5. ' vectors' → logprob: -3.679293394088745
    6. ' elements' → logprob: -3.679293394088745
    7. ' bases' → logprob: -5.929293155670166
    8. ' a' → logprob: -6.429293155670166
    9. ' élément' → logprob: -7.179293155670166
    10. ' autres' → logprob: -7.179293155670166

Token 73: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.00813532155007124
    2. 'de' → logprob: -5.5081353187561035
    3. ' suivants' → logprob: -7.2581353187561035
    4. ' présents' → logprob: -7.3831353187561035
    5. ' a' → logprob: -7.5081353187561035
    6. ' rest' → logprob: -8.008135795593262
    7. ' d' → logprob: -8.133135795593262
    8. '   ' → logprob: -8.133135795593262
    9. ' du' → logprob: -8.258135795593262
    10. 's' → logprob: -8.883135795593262

Token 74: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.30584123730659485
    2. 'a' → logprob: -1.9308412075042725
    3. 'la' → logprob: -2.9308412075042725
    4. ' a' → logprob: -2.9308412075042725
    5. ' cette' → logprob: -5.055841445922852
    6. ' base' → logprob: -5.805841445922852
    7. ' the' → logprob: -7.805841445922852
    8. 'base' → logprob: -8.180841445922852
    9. 'l' → logprob: -8.430841445922852
    10. ' this' → logprob: -8.430841445922852

Token 75: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.18225201964378357
    2. 'base' → logprob: -1.807252049446106
    3. 'basis' → logprob: -6.807251930236816
    4. '_base' → logprob: -7.057251930236816
    5. ' basis' → logprob: -8.182251930236816
    6. '_basis' → logprob: -9.682251930236816
    7. '```' → logprob: -9.932251930236816
    8. 'b' → logprob: -10.307251930236816
    9. 'bas' → logprob: -10.432251930236816
    10. ' liste' → logprob: -10.932251930236816

Token 76: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0904732942581177
    2. '\' → logprob: -1.3404732942581177
    3. '\n' → logprob: -2.215473175048828
    4. '.' → logprob: -2.465473175048828
    5. '"' → logprob: -3.465473175048828
    6. ':' → logprob: -3.590473175048828
    7. '    
' → logprob: -3.965473175048828
    8. ' ' → logprob: -4.090473175048828
    9. ' 
' → logprob: -4.090473175048828
    10. '
' → logprob: -4.215473175048828

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1333022564649582
    2. '"""' → logprob: -2.1333022117614746
    3. '"' → logprob: -5.758302211761475
    4. '"""
' → logprob: -6.258302211761475
    5. '```' → logprob: -7.383302211761475
    6. ' """' → logprob: -8.883302688598633
    7. '""' → logprob: -8.883302688598633
    8. '    ' → logprob: -9.508302688598633
    9. ')' → logprob: -9.508302688598633
    10. '
' → logprob: -9.758302688598633

Token 78: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030396074056625366
    2. '"""' → logprob: -4.655395984649658
    3. 'a' → logprob: -5.530395984649658
    4. 'n' → logprob: -5.780395984649658
    5. '    
' → logprob: -6.030395984649658
    6. 'b' → logprob: -6.405395984649658
    7. '```' → logprob: -6.530395984649658
    8. '\n' → logprob: -6.655395984649658
    9. '    ' → logprob: -6.780395984649658
    10. '#' → logprob: -7.155395984649658

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14784185588359833
    2. ' :' → logprob: -2.2728419303894043
    3. '   ' → logprob: -4.147841930389404
    4. '):' → logprob: -4.397841930389404
    5. ',' → logprob: -6.772841930389404
    6. 's' → logprob: -7.022841930389404
    7. '<|end|>' → logprob: -7.272841930389404
    8. '[' → logprob: -7.397841930389404
    9. ')' → logprob: -7.522841930389404
    10. '(a' → logprob: -8.147841453552246

Token 80: '       ' (ID: 309)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.40521329641342163
    2. 'a' → logprob: -1.6552133560180664
    3. '   ' → logprob: -2.0302133560180664
    4. '    ' → logprob: -4.655213356018066
    5. '```' → logprob: -8.655213356018066
    6. ' :' → logprob: -8.780213356018066
    7. '[a' → logprob: -9.155213356018066
    8. '	a' → logprob: -9.280213356018066
    9. '(a' → logprob: -9.405213356018066
    10. ' list' → logprob: -9.655213356018066

Token 81: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.05138591304421425
    2. ' a' → logprob: -3.0513858795166016
    3. '   ' → logprob: -6.051385879516602
    4. 'self' → logprob: -8.301385879516602
    5. ' self' → logprob: -8.801385879516602
    6. '       ' → logprob: -11.801385879516602
    7. '`' → logprob: -12.176385879516602
    8. '```' → logprob: -12.301385879516602
    9. ' ' → logprob: -12.426385879516602
    10. '	a' → logprob: -12.551385879516602

Token 82: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24550463259220123
    2. '):' → logprob: -1.62050461769104
    3. ' :' → logprob: -3.99550461769104
    4. ' ):' → logprob: -6.745504856109619
    5. '):
' → logprob: -8.995504379272461
    6. ')' → logprob: -9.620504379272461
    7. ':list' → logprob: -9.745504379272461
    8. ',' → logprob: -10.620504379272461
    9. '   ' → logprob: -12.370504379272461
    10. '[:]' → logprob: -12.370504379272461

Token 83: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10448462516069412
    2. 'List' → logprob: -2.3544845581054688
    3. ' list' → logprob: -6.104484558105469
    4. 'Iterable' → logprob: -7.104484558105469
    5. 'iter' → logprob: -7.854484558105469
    6. ' List' → logprob: -7.979484558105469
    7. '[List' → logprob: -9.479484558105469
    8. '[list' → logprob: -9.729484558105469
    9. 'liste' → logprob: -9.979484558105469
    10. 'int' → logprob: -10.104484558105469

Token 84: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.007447252050042152
    2. ' of' → logprob: -5.757447242736816
    3. ')' → logprob: -5.882447242736816
    4. '<int' → logprob: -6.882447242736816
    5. '):' → logprob: -8.632447242736816
    6. '[' → logprob: -9.007447242736816
    7. ',' → logprob: -10.132447242736816
    8. '<|end|>' → logprob: -10.132447242736816
    9. '):
' → logprob: -11.257447242736816
    10. 'int' → logprob: -11.632447242736816

Token 85: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023544883355498314
    2. ' int' → logprob: -3.7735447883605957
    3. 'ints' → logprob: -8.773545265197754
    4. '[int' → logprob: -9.898545265197754
    5. ' integers' → logprob: -10.773545265197754
    6. 'str' → logprob: -11.023545265197754
    7. 'inte' → logprob: -11.398545265197754
    8. ' ints' → logprob: -11.523545265197754
    9. '	int' → logprob: -11.898545265197754
    10. 'list' → logprob: -12.273545265197754

Token 86: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3814336955547333
    2. '):' → logprob: -1.3814337253570557
    3. 's' → logprob: -2.7564337253570557
    4. '[int' → logprob: -7.006433486938477
    5. ']):' → logprob: -7.381433486938477
    6. '])' → logprob: -8.256433486938477
    7. ' )' → logprob: -8.881433486938477
    8. '[' → logprob: -9.131433486938477
    9. '>):' → logprob: -9.506433486938477
    10. ' ):' → logprob: -9.756433486938477

Token 87: ' Liste' (ID: 61030)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7276104092597961
    2. '   ' → logprob: -1.7276103496551514
    3. ')' → logprob: -1.9776103496551514
    4. '<|end|>' → logprob: -2.2276103496551514
    5. '    ' → logprob: -2.7276103496551514
    6. ' )' → logprob: -4.6026105880737305
    7. '  ' → logprob: -5.3526105880737305
    8. '[' → logprob: -5.9776105880737305
    9. '[]' → logprob: -6.1026105880737305
    10. '[int' → logprob: -6.6026105880737305

Token 88: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2936607599258423
    2. '[' → logprob: -2.5436606407165527
    3. '<|end|>' → logprob: -2.5436606407165527
    4. ' of' → logprob: -3.1686606407165527
    5. '[int' → logprob: -4.418660640716553
    6. 'des' → logprob: -5.043660640716553
    7. ' de' → logprob: -5.043660640716553
    8. ')' → logprob: -5.043660640716553
    9. '   ' → logprob: -5.543660640716553
    10. '<|end|>' → logprob: -5.668660640716553

Token 89: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.0032494855113327503
    2. '’ent' → logprob: -6.503249645233154
    3. ''' → logprob: -7.003249645233154
    4. ' ent' → logprob: -7.628249645233154
    5. 'ent' → logprob: -8.878249168395996
    6. ' des' → logprob: -10.003249168395996
    7. ''ex' → logprob: -10.503249168395996
    8. ''in' → logprob: -10.628249168395996
    9. 'e' → logprob: -10.753249168395996
    10. ''é' → logprob: -11.003249168395996

Token 90: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.20980428159236908
    2. 'i' → logprob: -1.7098042964935303
    3. 'ier' → logprob: -5.334804058074951
    4. 'ières' → logprob: -6.334804058074951
    5. '```' → logprob: -7.584804058074951
    6. '   ' → logprob: -7.709804058074951
    7. 'ière' → logprob: -8.20980453491211
    8. '       ' → logprob: -9.83480453491211
    9. 'e' → logprob: -10.08480453491211
    10. '#' → logprob: -10.33480453491211

Token 91: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3022870719432831
    2. ')' → logprob: -1.8022871017456055
    3. '):' → logprob: -2.9272871017456055
    4. 's' → logprob: -3.9272871017456055
    5. '):
' → logprob: -5.0522871017456055
    6. '```' → logprob: -5.1772871017456055
    7. '<|end|>' → logprob: -5.9272871017456055
    8. ',' → logprob: -6.6772871017456055
    9. '    
' → logprob: -7.0522871017456055
    10. '[int' → logprob: -7.0522871017456055

Token 92: ' laquelle' (ID: 47998)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7136216163635254
    2. ' lesquels' → logprob: -2.4636216163635254
    3. ' ' → logprob: -2.7136216163635254
    4. '  ' → logprob: -2.7136216163635254
    5. '   ' → logprob: -2.9636216163635254
    6. ' )' → logprob: -3.2136216163635254
    7. ' laquelle' → logprob: -3.2136216163635254
    8. ' représ' → logprob: -3.4636216163635254
    9. ' which' → logprob: -3.8386216163635254
    10. '```' → logprob: -3.9636216163635254

Token 93: ' calcul' (ID: 7559)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.24403388798236847
    2. ' la' → logprob: -1.869033932685852
    3. '   ' → logprob: -3.3690338134765625
    4. ' il' → logprob: -4.7440338134765625
    5. ' ' → logprob: -5.2440338134765625
    6. '    ' → logprob: -5.3690338134765625
    7. ' vous' → logprob: -5.7440338134765625
    8. '_' → logprob: -7.3690338134765625
    9. '  ' → logprob: -7.7440338134765625
    10. ' ' → logprob: -7.7440338134765625

Token 94: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -2.8206473871250637e-05
    2. 'e' → logprob: -11.250028610229492
    3. '   ' → logprob: -11.625028610229492
    4. 's' → logprob: -13.125028610229492
    5. '       ' → logprob: -14.250028610229492
    6. 'é' → logprob: -14.375028610229492
    7. 'a' → logprob: -14.500028610229492
    8. '```' → logprob: -15.000028610229492
    9. '_' → logprob: -15.125028610229492
    10. ' a' → logprob: -15.250028610229492

Token 95: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6508274078369141
    2. '<|end|>' → logprob: -1.525827407836914
    3. 's' → logprob: -2.775827407836914
    4. '_' → logprob: -2.775827407836914
    5. ' ' → logprob: -3.275827407836914
    6. '```' → logprob: -3.775827407836914
    7. '   ' → logprob: -4.275827407836914
    8. ')' → logprob: -4.400827407836914
    9. '_la' → logprob: -4.525827407836914
    10. ' ' → logprob: -5.025827407836914

Token 96: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.19151893258094788
    2. ' ' → logprob: -1.8165189027786255
    3. ' basis' → logprob: -5.066518783569336
    4. '_base' → logprob: -6.691518783569336
    5. ' bases' → logprob: -6.941518783569336
    6. '_basis' → logprob: -6.941518783569336
    7. 'base' → logprob: -7.191518783569336
    8. ' _' → logprob: -7.816518783569336
    9. ''' → logprob: -8.566518783569336
    10. '_' → logprob: -8.566518783569336

Token 97: ' lin' (ID: 14432)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3280475437641144
    2. '   ' → logprob: -1.703047513961792
    3. '):' → logprob: -2.953047513961792
    4. 's' → logprob: -3.453047513961792
    5. ',' → logprob: -5.203047752380371
    6. '):
' → logprob: -6.203047752380371
    7. '```' → logprob: -6.578047752380371
    8. ')
' → logprob: -7.078047752380371
    9. ' ' → logprob: -7.203047752380371
    10. '       ' → logprob: -7.703047752380371

Token 98: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0012909513898193836
    2. 'aire' → logprob: -7.501290798187256
    3. 'ière' → logprob: -8.751291275024414
    4. '__' → logprob: -9.001291275024414
    5. 'ére' → logprob: -9.126291275024414
    6. 'éraire' → logprob: -9.126291275024414
    7. '   ' → logprob: -9.751291275024414
    8. 'e' → logprob: -10.376291275024414
    9. '       ' → logprob: -10.376291275024414
    10. 'ère' → logprob: -10.626291275024414

Token 99: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.0029639117419719696
    2. 'a' → logprob: -6.252964019775391
    3. 'ar' → logprob: -8.00296401977539
    4. 'aires' → logprob: -8.37796401977539
    5. ' ' → logprob: -8.75296401977539
    6. '   ' → logprob: -9.75296401977539
    7. 'al' → logprob: -10.12796401977539
    8. 'air' → logprob: -10.25296401977539
    9. 'ière' → logprob: -10.37796401977539
    10. ' aire' → logprob: -10.37796401977539

Token 100: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8001601099967957
    2. ')' → logprob: -0.9251601099967957
    3. '):' → logprob: -1.9251601696014404
    4. '):
' → logprob: -4.925159931182861
    5. ',' → logprob: -7.925159931182861
    6. '```' → logprob: -8.42516040802002
    7. ')
' → logprob: -9.05016040802002
    8. '       ' → logprob: -9.17516040802002
    9. ' )' → logprob: -9.80016040802002
    10. ' ' → logprob: -9.80016040802002

Token 101: 'mod' (ID: 4847)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7795996069908142
    2. ' )' → logprob: -0.9045996069908142
    3. ' sur' → logprob: -2.404599666595459
    4. '   ' → logprob: -4.529599666595459
    5. '):
' → logprob: -4.779599666595459
    6. ' ):
' → logprob: -5.029599666595459
    7. '):' → logprob: -5.279599666595459
    8. ' )
' → logprob: -5.779599666595459
    9. ' ):' → logprob: -6.029599666595459
    10. ' des' → logprob: -6.029599666595459

Token 102: 'ulo' (ID: 5953)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12702837586402893
    2. '2' → logprob: -2.127028465270996
    3. 'ulo' → logprob: -9.877028465270996
    4. ' ' → logprob: -10.752028465270996
    5. '(' → logprob: -11.752028465270996
    6. '   ' → logprob: -12.377028465270996
    7. '_' → logprob: -12.502028465270996
    8. 'e' → logprob: -12.752028465270996
    9. 'ule' → logprob: -13.002028465270996
    10. ' )' → logprob: -13.502028465270996

Token 103: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20150554180145264
    2. '2' → logprob: -1.7015055418014526
    3. ' ' → logprob: -9.576505661010742
    4. ' )' → logprob: -11.701505661010742
    5. 'GF' → logprob: -12.701505661010742
    6. ')' → logprob: -12.826505661010742
    7. '1' → logprob: -13.201505661010742
    8. '```' → logprob: -13.451505661010742
    9. '   ' → logprob: -13.701505661010742
    10. ' GF' → logprob: -13.701505661010742

Token 104: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3868725001811981
    2. ' ' → logprob: -1.1368725299835205
    3. ' ' → logprob: -14.136872291564941
    4. '256' → logprob: -15.011872291564941
    5. ')' → logprob: -15.386872291564941
    6. '```' → logprob: -16.261873245239258
    7. '32' → logprob: -16.761873245239258
    8. '   ' → logprob: -17.386873245239258
    9. '64' → logprob: -17.636873245239258
    10. ' )' → logprob: -18.261873245239258

Token 105: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025461582466959953
    2. '):' → logprob: -3.7754616737365723
    3. ').' → logprob: -7.150461673736572
    4. '):
' → logprob: -7.150461673736572
    5. ' )' → logprob: -8.025461196899414
    6. '   ' → logprob: -8.400461196899414
    7. ' ):' → logprob: -10.400461196899414
    8. ',' → logprob: -11.275461196899414
    9. ')
' → logprob: -11.525461196899414
    10. '),' → logprob: -11.775461196899414

Token 106: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.351657509803772
    2. '"""' → logprob: -1.601657509803772
    3. '"""
' → logprob: -3.1016573905944824
    4. ')' → logprob: -3.1016573905944824
    5. '```' → logprob: -6.226657390594482
    6. '"' → logprob: -6.851657390594482
    7. '    
' → logprob: -7.976657390594482
    8. ')
' → logprob: -7.976657390594482
    9. '  
' → logprob: -8.72665786743164
    10. '
' → logprob: -8.72665786743164

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017498034983873367
    2. '"""' → logprob: -4.892498016357422
    3. 'Returns' → logprob: -5.142498016357422
    4. '"""
' → logprob: -6.017498016357422
    5. ' """
' → logprob: -7.642498016357422
    6. ' Returns' → logprob: -8.017498016357422
    7. '
' → logprob: -8.142498016357422
    8. '    
' → logprob: -8.517498016357422
    9. ' """' → logprob: -8.892498016357422
    10. ')' → logprob: -9.642498016357422

Token 108: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.015245606191456318
    2. '   ' → logprob: -4.64024543762207
    3. 'returns' → logprob: -5.39024543762207
    4. ' Returns' → logprob: -7.64024543762207
    5. '"""
' → logprob: -8.89024543762207
    6. '```' → logprob: -9.76524543762207
    7. 'Retour' → logprob: -9.76524543762207
    8. 'return' → logprob: -10.01524543762207
    9. '    
' → logprob: -10.14024543762207
    10. '
' → logprob: -10.26524543762207

Token 109: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.08225929737091064
    2. ':' → logprob: -2.832259178161621
    3. ' []' → logprob: -4.957259178161621
    4. '   ' → logprob: -5.832259178161621
    5. ' list' → logprob: -6.457259178161621
    6. ' [' → logprob: -6.582259178161621
    7. ' =' → logprob: -7.332259178161621
    8. '    ' → logprob: -7.332259178161621
    9. ' ' → logprob: -7.457259178161621
    10. ' ' → logprob: -7.707259178161621

Token 110: '       ' (ID: 309)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4687199592590332
    2. '   ' → logprob: -1.5937199592590332
    3. ' []' → logprob: -1.9687199592590332
    4. ' List' → logprob: -4.593719959259033
    5. 'list' → logprob: -5.218719959259033
    6. '    ' → logprob: -5.218719959259033
    7. '[]' → logprob: -5.718719959259033
    8. ' a' → logprob: -6.218719959259033
    9. 'List' → logprob: -6.468719959259033
    10. ' [' → logprob: -7.218719959259033

Token 111: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.5760344862937927
    2. ' list' → logprob: -0.8260344862937927
    3. '   ' → logprob: -9.826034545898438
    4. 'List' → logprob: -10.326034545898438
    5. ' List' → logprob: -12.826034545898438
    6. 'set' → logprob: -12.951034545898438
    7. '       ' → logprob: -14.076034545898438
    8. ' set' → logprob: -14.576034545898438
    9. 'a' → logprob: -15.326034545898438
    10. 'dict' → logprob: -15.326034545898438

Token 112: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31326648592948914
    2. ' int' → logprob: -1.3132665157318115
    3. '[int' → logprob: -13.06326675415039
    4. '<int' → logprob: -13.56326675415039
    5. '(int' → logprob: -14.93826675415039
    6. ' ints' → logprob: -15.06326675415039
    7. 'ints' → logprob: -15.43826675415039
    8. ' integers' → logprob: -15.81326675415039
    9. '	int' → logprob: -16.31326675415039
    10. ':int' → logprob: -16.43826675415039

Token 114: ':' (ID: 25)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8108435273170471
    2. ':' → logprob: -1.0608434677124023
    3. ']:' → logprob: -1.8108434677124023
    4. '):' → logprob: -4.185843467712402
    5. ' ]' → logprob: -4.935843467712402
    6. '   ' → logprob: -5.060843467712402
    7. ')' → logprob: -5.060843467712402
    8. '<|end|>' → logprob: -5.685843467712402
    9. '```' → logprob: -6.185843467712402
    10. ']>' → logprob: -7.060843467712402

Token 115: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.6767426133155823
    2. 'La' → logprob: -1.4267425537109375
    3. '   ' → logprob: -1.8017425537109375
    4. 'Base' → logprob: -2.6767425537109375
    5. ' base' → logprob: -5.0517425537109375
    6. 'Une' → logprob: -6.1767425537109375
    7. ' la' → logprob: -6.5517425537109375
    8. ' Une' → logprob: -6.8017425537109375
    9. ' Base' → logprob: -6.8017425537109375
    10. 'Bases' → logprob: -6.9267425537109375

Token 116: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.0010799680603668094
    2. 'base' → logprob: -7.00108003616333
    3. ' liste' → logprob: -9.001079559326172
    4. '_base' → logprob: -10.626079559326172
    5. ' basis' → logprob: -11.376079559326172
    6. ' bases' → logprob: -12.626079559326172
    7. ' basi' → logprob: -14.251079559326172
    8. ' bas' → logprob: -14.376079559326172
    9. ' list' → logprob: -14.501079559326172
    10. ' ' → logprob: -14.501079559326172

Token 117: ' rédu' (ID: 42105)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5566431283950806
    2. '[' → logprob: -1.8066431283950806
    3. '[]' → logprob: -2.681643009185791
    4. '[:]' → logprob: -2.806643009185791
    5. ' ' → logprob: -3.681643009185791
    6. '<|end|>' → logprob: -3.931643009185791
    7. ' []' → logprob: -4.181643009185791
    8. ' de' → logprob: -4.181643009185791
    9. '   ' → logprob: -5.181643009185791
    10. ' lin' → logprob: -5.181643009185791

Token 118: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.009845450520515442
    2. 'cie' → logprob: -4.88484525680542
    3. 'du' → logprob: -7.13484525680542
    4. 'uite' → logprob: -7.50984525680542
    5. 'ue' → logprob: -9.134845733642578
    6. 'e' → logprob: -9.259845733642578
    7. 'icie' → logprob: -9.509845733642578
    8. 'ie' → logprob: -9.634845733642578
    9. 'ed' → logprob: -9.759845733642578
    10. 'nie' → logprob: -10.009845733642578

Token 119: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0150259733200073
    2. ':' → logprob: -2.140026092529297
    3. ',' → logprob: -2.265026092529297
    4. '[]' → logprob: -3.015026092529297
    5. '<|end|>' → logprob: -3.015026092529297
    6. ' de' → logprob: -3.265026092529297
    7. '.' → logprob: -3.515026092529297
    8. 'def' → logprob: -3.640026092529297
    9. '[' → logprob: -4.015026092529297
    10. ' ' → logprob: -4.015026092529297

Token 120: ' où' (ID: 15113)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2729116678237915
    2. ' []' → logprob: -2.522911548614502
    3. ' sorted' → logprob: -2.897911548614502
    4. ' complète' → logprob: -3.647911548614502
    5. '   ' → logprob: -4.147911548614502
    6. '[' → logprob: -5.272911548614502
    7. ' list' → logprob: -5.522911548614502
    8. ' optim' → logprob: -5.647911548614502
    9. '[:]' → logprob: -5.772911548614502
    10. ' en' → logprob: -5.772911548614502

Token 121: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.03173822537064552
    2. ' les' → logprob: -3.90673828125
    3. ' each' → logprob: -5.15673828125
    4. ' la' → logprob: -6.03173828125
    5. ' chacun' → logprob: -7.15673828125
    6. 'each' → logprob: -7.28173828125
    7. ' tous' → logprob: -7.28173828125
    8. '   ' → logprob: -8.65673828125
    9. 'les' → logprob: -9.03173828125
    10. 'cha' → logprob: -9.28173828125

Token 122: ' élément' (ID: 99627)
  Prédit: ' élément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.5282279849052429
    2. 'élé' → logprob: -0.9032279849052429
    3. ' element' → logprob: -6.028227806091309
    4. ' vect' → logprob: -7.278227806091309
    5. 'element' → logprob: -7.403227806091309
    6. ' ' → logprob: -7.653227806091309
    7. ' entier' → logprob: -7.903227806091309
    8. ' éléments' → logprob: -8.778227806091309
    9. 'int' → logprob: -9.153227806091309
    10. ' él' → logprob: -9.653227806091309

Token 123: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.42429327964782715
    2. ' is' → logprob: -2.299293279647827
    3. ',' → logprob: -3.049293279647827
    4. ' a' → logprob: -3.424293279647827
    5. '<|end|>' → logprob: -3.799293279647827
    6. ' de' → logprob: -4.049293518066406
    7. '>' → logprob: -4.174293518066406
    8. ' représente' → logprob: -4.299293518066406
    9. '   ' → logprob: -4.424293518066406
    10. ' ' → logprob: -4.424293518066406

Token 124: ' lin' (ID: 14432)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3608732223510742
    2. 'un' → logprob: -1.6108732223510742
    3. 'une' → logprob: -2.985873222351074
    4. ' non' → logprob: -4.235873222351074
    5. ' une' → logprob: -4.610873222351074
    6. 'non' → logprob: -4.860873222351074
    7. 'strict' → logprob: -5.235873222351074
    8. ' distinct' → logprob: -5.735873222351074
    9. 'le' → logprob: -6.360873222351074
    10. 'int' → logprob: -6.485873222351074

Token 125: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00041637211688794196
    2. 'e' → logprob: -7.875416278839111
    3. 'éraire' → logprob: -11.37541675567627
    4. 'aire' → logprob: -11.62541675567627
    5. 'ea' → logprob: -12.25041675567627
    6. 'éar' → logprob: -12.75041675567627
    7. 'ée' → logprob: -13.12541675567627
    8. 'ear' → logprob: -13.62541675567627
    9. 'éra' → logprob: -13.87541675567627
    10. 'a' → logprob: -14.50041675567627

Token 126: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.0008538239635527134
    2. 'a' → logprob: -7.500854015350342
    3. 'al' → logprob: -9.750853538513184
    4. ' aire' → logprob: -9.750853538513184
    5. 'aires' → logprob: -10.625853538513184
    6. 'air' → logprob: -10.625853538513184
    7. '_' → logprob: -10.625853538513184
    8. 'ale' → logprob: -10.750853538513184
    9. 'naire' → logprob: -11.250853538513184
    10. 'are' → logprob: -11.375853538513184

Token 127: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.008168661966919899
    2. 'ement' → logprob: -6.008168697357178
    3. '_' → logprob: -7.383168697357178
    4. 'ément' → logprob: -7.633168697357178
    5. 'lement' → logprob: -7.633168697357178
    6. ' independent' → logprob: -7.758168697357178
    7. 'ly' → logprob: -7.883168697357178
    8. 'e' → logprob: -8.13316822052002
    9. ' de' → logprob: -8.13316822052002
    10. ' indépendante' → logprob: -8.38316822052002

Token 128: ' indépendant' (ID: 150296)
  Prédit: ' indépendant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indépendant' → logprob: -0.43493759632110596
    2. 'ind' → logprob: -1.059937596321106
    3. ' indépendante' → logprob: -5.934937477111816
    4. ' indépend' → logprob: -6.184937477111816
    5. ' independent' → logprob: -6.559937477111816
    6. ' ind' → logprob: -9.934937477111816
    7. '_ind' → logprob: -11.184937477111816
    8. ' independ' → logprob: -11.559937477111816
    9. 'é' → logprob: -12.309937477111816
    10. '(ind' → logprob: -12.434937477111816

Token 129: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9904409646987915
    2. ' des' → logprob: -1.7404409646987915
    3. ' de' → logprob: -1.8654409646987915
    4. ',
' → logprob: -2.740440845489502
    5. ')' → logprob: -3.115440845489502
    6. '.' → logprob: -3.240440845489502
    7. ' et' → logprob: -3.615440845489502
    8. '   ' → logprob: -3.615440845489502
    9. ' entre' → logprob: -3.740440845489502
    10. ' ' → logprob: -4.240440845489502

Token 130: 'mod' (ID: 4847)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4589122235774994
    2. ' sur' → logprob: -2.3339121341705322
    3. ' modulo' → logprob: -2.3339121341705322
    4. ')
' → logprob: -2.7089121341705322
    5. ' par' → logprob: -3.4589121341705322
    6. ' dans' → logprob: -4.458912372589111
    7. ' )' → logprob: -4.458912372589111
    8. 'mod' → logprob: -4.958912372589111
    9. ' mod' → logprob: -5.208912372589111
    10. '   ' → logprob: -5.333912372589111

Token 131: 'ulo' (ID: 5953)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.1757785081863403
    2. 'ifié' → logprob: -1.4257785081863403
    3. 'od' → logprob: -1.5507785081863403
    4. 'ulé' → logprob: -3.425778388977051
    5. 'ulaire' → logprob: -3.925778388977051
    6. '2' → logprob: -4.300778388977051
    7. 'u' → logprob: -4.300778388977051
    8. 'ique' → logprob: -4.550778388977051
    9. 'ué' → logprob: -4.925778388977051
    10. 'élé' → logprob: -4.925778388977051

Token 132: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5231959819793701
    2. '2' → logprob: -0.8981959819793701
    3. ')' → logprob: -10.39819622039795
    4. ' )' → logprob: -10.64819622039795
    5. ' ' → logprob: -11.64819622039795
    6. '   ' → logprob: -13.27319622039795
    7. '1' → logprob: -13.52319622039795
    8. '```' → logprob: -13.77319622039795
    9. ' )
' → logprob: -14.02319622039795
    10. ',' → logprob: -14.02319622039795

Token 133: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.043004341423511505
    2. ' ' → logprob: -3.168004274368286
    3. ')' → logprob: -13.668004035949707
    4. '```' → logprob: -13.793004035949707
    5. ' ' → logprob: -14.168004035949707
    6. '1' → logprob: -14.168004035949707
    7. '   ' → logprob: -14.668004035949707
    8. ' )' → logprob: -14.793004035949707
    9. '256' → logprob: -15.918004035949707
    10. '  ' → logprob: -16.230504989624023

Token 134: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01628866419196129
    2. ').' → logprob: -4.141288757324219
    3. ')
' → logprob: -9.141288757324219
    4. ' )' → logprob: -9.641288757324219
    5. '   ' → logprob: -10.141288757324219
    6. ',' → logprob: -11.766288757324219
    7. ').
' → logprob: -11.766288757324219
    8. '")' → logprob: -11.766288757324219
    9. '),' → logprob: -11.766288757324219
    10. '.' → logprob: -12.891288757324219

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03932609781622887
    2. '"""' → logprob: -3.2893261909484863
    3. '"""
' → logprob: -6.914326190948486
    4. ' """' → logprob: -9.414325714111328
    5. '```' → logprob: -9.414325714111328
    6. '"' → logprob: -10.414325714111328
    7. ')' → logprob: -10.539325714111328
    8. ' """
' → logprob: -10.664325714111328
    9. '""' → logprob: -11.039325714111328
    10. '    ' → logprob: -11.414325714111328

Token 136: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15113037824630737
    2. '"""' → logprob: -2.026130437850952
    3. '"' → logprob: -6.151130199432373
    4. '
' → logprob: -6.651130199432373
    5. ')' → logprob: -6.651130199432373
    6. ':' → logprob: -7.026130199432373
    7. '"""
' (adapté à ' """
') → logprob: -7.026130199432373
    8. '```' → logprob: -7.526130199432373
    9. '\n' → logprob: -7.776130199432373
    10. ' """' → logprob: -8.151130676269531

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07726892828941345
    2. ' 
' → logprob: -3.7022688388824463
    3. '    
' → logprob: -4.077269077301025
    4. 'n' → logprob: -4.327269077301025
    5. '
' → logprob: -5.327269077301025
    6. ' basis' → logprob: -5.952269077301025
    7. 'b' → logprob: -6.577269077301025
    8. ' n' → logprob: -6.577269077301025
    9. 'basis' → logprob: -6.702269077301025
    10. '    ' → logprob: -6.827269077301025

Token 138: ' basis' (ID: 9571)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basis' (adapté à ' basis') → logprob: -0.3137147128582001
    2. 'base' → logprob: -1.8137147426605225
    3. 'b' → logprob: -2.8137147426605225
    4. '   ' → logprob: -3.9387147426605225
    5. ' basis' → logprob: -4.688714504241943
    6. 'n' → logprob: -4.688714504241943
    7. ' base' → logprob: -5.688714504241943
    8. 'res' → logprob: -6.938714504241943
    9. 'bas' → logprob: -7.313714504241943
    10. ' n' → logprob: -7.313714504241943

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028928478714078665
    2. '=' → logprob: -5.877892971038818
    3. '=[]' → logprob: -10.25289249420166
    4. '_' → logprob: -10.37789249420166
    5. ' ' → logprob: -12.12789249420166
    6. 's' → logprob: -12.25289249420166
    7. '[:]' → logprob: -13.25289249420166
    8. '.' → logprob: -13.37789249420166
    9. '[' → logprob: -13.37789249420166
    10. '   ' → logprob: -13.62789249420166

Token 140: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.857719275401905e-05
    2. ' []' → logprob: -10.250038146972656
    3. '[' → logprob: -13.250038146972656
    4. '[]
' → logprob: -13.625038146972656
    5. '[]}' → logprob: -16.500038146972656
    6. '[:]' → logprob: -18.500038146972656
    7. '[]

' → logprob: -18.625038146972656
    8. '[],' → logprob: -19.000038146972656
    9. '[]"' → logprob: -19.250038146972656
    10. '[]>' → logprob: -20.125038146972656

Token 141: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.913379967212677
    2. 'for' → logprob: -1.1633799076080322
    3. ' for' → logprob: -1.5383799076080322
    4. '    
' → logprob: -3.4133799076080322
    5. '   ' → logprob: -3.6633799076080322
    6. '\n' → logprob: -5.663380146026611
    7. '  
' → logprob: -5.663380146026611
    8. ' 
' → logprob: -5.788380146026611
    9. '   
' → logprob: -6.413380146026611
    10. '' → logprob: -7.788380146026611

Token 142: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1295439600944519
    2. '
' → logprob: -2.3795440196990967
    3. ' for' → logprob: -3.6295440196990967
    4. '    
' → logprob: -6.754543781280518
    5. '   ' → logprob: -7.379543781280518
    6. '\n' → logprob: -8.379544258117676
    7. '   
' → logprob: -9.254544258117676
    8. '  
' → logprob: -9.379544258117676
    9. ' 
' → logprob: -9.879544258117676
    10. '	for' → logprob: -10.004544258117676

Token 143: ' Liste' (ID: 61030)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.05200060084462166
    2. '[]' → logprob: -3.0520005226135254
    3. ' set' → logprob: -6.802000522613525
    4. ' ' → logprob: -7.302000522613525
    5. ' list' → logprob: -7.552000522613525
    6. ' []
' → logprob: -8.677000999450684
    7. ' [' → logprob: -8.802000999450684
    8. 'a' → logprob: -8.802000999450684
    9. ' a' → logprob: -8.927000999450684
    10. ' for' → logprob: -9.302000999450684

Token 144: ' qui' (ID: 2780)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.4245705604553223
    2. ' des' → logprob: -1.5495705604553223
    3. ' =' → logprob: -2.0495705604553223
    4. 'def' → logprob: -2.2995705604553223
    5. '   ' → logprob: -2.7995705604553223
    6. ' of' → logprob: -2.9245705604553223
    7. 'de' → logprob: -3.0495705604553223
    8. '[]' → logprob: -3.2995705604553223
    9. 'des' → logprob: -4.049570560455322
    10. ' d' → logprob: -4.424570560455322

Token 145: ' va' (ID: 3423)
  Prédit: ' contient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -1.315147042274475
    2. '.append' → logprob: -1.565147042274475
    3. ' =' → logprob: -2.4401469230651855
    4. 'cont' → logprob: -2.5651469230651855
    5. '=' → logprob: -2.9401469230651855
    6. ' va' → logprob: -3.0651469230651855
    7. '   ' → logprob: -3.1901469230651855
    8. '_' → logprob: -3.4401469230651855
    9. '=[]' → logprob: -3.4401469230651855
    10. ' cont' → logprob: -3.5651469230651855

Token 146: ' conten' (ID: 23523)
  Prédit: ' accueillir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accueillir' → logprob: -1.2612892389297485
    2. ' recevoir' → logprob: -1.6362892389297485
    3. 'acc' → logprob: -1.7612892389297485
    4. ' stock' → logprob: -2.386289119720459
    5. ' conten' → logprob: -2.636289119720459
    6. 'con' → logprob: -3.261289119720459
    7. 'être' → logprob: -3.386289119720459
    8. 'stock' → logprob: -3.761289119720459
    9. 'rece' → logprob: -4.136289119720459
    10. ' servir' → logprob: -4.261289119720459

Token 147: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.7066814303398132
    2. 'ir' → logprob: -0.7066814303398132
    3. 'ter' → logprob: -5.081681251525879
    4. 'r' → logprob: -6.206681251525879
    5. 't' → logprob: -6.331681251525879
    6. 'uer' → logprob: -6.581681251525879
    7. 'u' → logprob: -7.206681251525879
    8. 'rer' → logprob: -7.581681251525879
    9. 'eur' → logprob: -8.456681251525879
    10. 'ner' → logprob: -9.081681251525879

Token 148: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2818910777568817
    2. ' la' → logprob: -2.156891107559204
    3. 'les' → logprob: -2.531891107559204
    4. 'la' → logprob: -3.656891107559204
    5. ' des' → logprob: -4.281890869140625
    6. 'des' → logprob: -5.156890869140625
    7. 'the' → logprob: -6.031890869140625
    8. '[]' → logprob: -7.281890869140625
    9. ' chaque' → logprob: -7.406890869140625
    10. ' the' → logprob: -7.531890869140625

Token 149: ' éléments' (ID: 57375)
  Prédit: ' vect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vect' → logprob: -0.1332210898399353
    2. 'élé' → logprob: -2.75822114944458
    3. ' éléments' → logprob: -3.63322114944458
    4. 'vect' → logprob: -4.00822114944458
    5. ' vectors' → logprob: -4.75822114944458
    6. ' piv' → logprob: -5.25822114944458
    7. ' elements' → logprob: -7.13322114944458
    8. ' pivot' → logprob: -7.50822114944458
    9. ' bases' → logprob: -8.008220672607422
    10. 'vectors' → logprob: -8.258220672607422

Token 150: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8901529908180237
    2. '   ' → logprob: -1.265152931213379
    3. ' for' → logprob: -2.515152931213379
    4. 'for' → logprob: -2.515152931213379
    5. 'de' → logprob: -2.890152931213379
    6. 'a' → logprob: -3.765152931213379
    7. 'def' → logprob: -3.765152931213379
    8. '[]' → logprob: -4.390152931213379
    9. ' à' → logprob: -4.515152931213379
    10. ' a' → logprob: -5.515152931213379

Token 151: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.10919596254825592
    2. ' base' → logprob: -2.6091959476470947
    3. 'la' → logprob: -4.109196186065674
    4. ' ' → logprob: -5.484196186065674
    5. 'base' → logprob: -5.484196186065674
    6. ' basis' → logprob: -5.734196186065674
    7. 'basis' → logprob: -7.109196186065674
    8. '  ' → logprob: -8.484195709228516
    9. 'b' → logprob: -8.609195709228516
    10. ' the' → logprob: -8.734195709228516

Token 152: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.019294772297143936
    2. ' base' → logprob: -4.019294738769531
    3. 'basis' → logprob: -6.894294738769531
    4. '_base' → logprob: -9.894294738769531
    5. 'bas' → logprob: -10.394294738769531
    6. 'b' → logprob: -11.269294738769531
    7. 'bases' → logprob: -11.269294738769531
    8. '(base' → logprob: -12.144294738769531
    9. ' basis' → logprob: -12.644294738769531
    10. 'based' → logprob: -13.144294738769531

Token 153: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0652310699224472
    2. ' 
' → logprob: -3.6902310848236084
    3. '    
' → logprob: -4.065230846405029
    4. ' for' → logprob: -4.815230846405029
    5. '  
' → logprob: -5.315230846405029
    6. '   
' → logprob: -5.940230846405029
    7. 'for' → logprob: -6.065230846405029
    8. '\n' → logprob: -6.565230846405029
    9. '   ' → logprob: -7.440230846405029
    10. '\' → logprob: -8.440231323242188

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7394651770591736
    2. '
' → logprob: -0.9894651770591736
    3. '    
' → logprob: -2.3644652366638184
    4. ' for' → logprob: -3.1144652366638184
    5. 'for' → logprob: -5.239465236663818
    6. '  
' → logprob: -5.864465236663818
    7. '\n' → logprob: -6.489465236663818
    8. '   
' → logprob: -6.489465236663818
    9. ' 
' → logprob: -7.489465236663818
    10. ':' → logprob: -8.86446475982666

Token 155: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0208954606205225
    2. ' for' → logprob: -3.895895481109619
    3. '   ' → logprob: -8.020895004272461
    4. ':' → logprob: -11.895895004272461
    5. '
' → logprob: -11.895895004272461
    6. '	for' → logprob: -12.770895004272461
    7. '    
' → logprob: -12.895895004272461
    8. 'a' → logprob: -13.270895004272461
    9. ' ' → logprob: -13.645895004272461
    10. ' 
' → logprob: -14.020895004272461

Token 156: ' e' (ID: 319)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.32174935936927795
    2. 'x' → logprob: -1.3217493295669556
    3. ' v' → logprob: -5.821749210357666
    4. 'v' → logprob: -5.946749210357666
    5. ' num' → logprob: -6.946749210357666
    6. 'num' → logprob: -7.071749210357666
    7. ' vector' → logprob: -8.696749687194824
    8. ' ai' → logprob: -8.946749687194824
    9. 'vector' → logprob: -9.321749687194824
    10. 'vec' → logprob: -9.321749687194824

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0018001272110268474
    2. ' ' → logprob: -6.876800060272217
    3. 'in' → logprob: -7.251800060272217
    4. '  ' → logprob: -10.626800537109375
    5. 'n' → logprob: -11.251800537109375
    6. '   ' → logprob: -11.751800537109375
    7. ' i' → logprob: -12.876800537109375
    8. 's' → logprob: -13.001800537109375
    9. ' ' → logprob: -14.064300537109375
    10. '	in' → logprob: -14.251800537109375

Token 158: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931495666503906
    2. ' a' → logprob: -0.6931495666503906
    3. '	a' → logprob: -13.56814956665039
    4. ' ' → logprob: -14.69314956665039
    5. '   ' → logprob: -15.31814956665039
    6. '_a' → logprob: -16.06814956665039
    7. '#a' → logprob: -16.81814956665039
    8. ')a' → logprob: -17.44314956665039
    9. '[a' → logprob: -17.69314956665039
    10. 'а' → logprob: -17.69314956665039

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026320507749915123
    2. ' :' → logprob: -3.651320457458496
    3. ':
' → logprob: -11.151320457458496
    4. '):' → logprob: -12.776320457458496
    5. ' :
' → logprob: -13.776320457458496
    6. ':**' → logprob: -14.901320457458496
    7. ',' → logprob: -15.026320457458496
    8. ')' → logprob: -15.026320457458496
    9. '   ' → logprob: -15.276320457458496
    10. '=' → logprob: -16.151321411132812

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035224512219429016
    2. '        
' → logprob: -3.910224437713623
    3. '        ' → logprob: -5.160224437713623
    4. '    ' → logprob: -5.660224437713623
    5. ' ' → logprob: -6.660224437713623
    6. ' 
' → logprob: -7.285224437713623
    7. '
' → logprob: -7.660224437713623
    8. ',' → logprob: -7.660224437713623
    9. 'e' → logprob: -7.785224437713623
    10. ':' → logprob: -8.035224914550781

Token 161: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4860592782497406
    2. 'x' → logprob: -1.486059308052063
    3. 'v' → logprob: -2.4860591888427734
    4. ' for' → logprob: -3.1110591888427734
    5. '   ' → logprob: -4.111059188842773
    6. 'e' → logprob: -5.611059188842773
    7. ' x' → logprob: -5.986059188842773
    8. 'temp' → logprob: -6.361059188842773
    9. 'tmp' → logprob: -6.736059188842773
    10. '       ' → logprob: -6.986059188842773

Token 162: ' Pour' (ID: 13931)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3180880546569824
    2. ' x' → logprob: -1.3180880546569824
    3. 'v' → logprob: -1.9430880546569824
    4. 'for' → logprob: -2.3180880546569824
    5. ' for' → logprob: -2.5680880546569824
    6. ' v' → logprob: -2.8180880546569824
    7. '   ' → logprob: -4.318088054656982
    8. 'vec' → logprob: -4.318088054656982
    9. ' val' → logprob: -5.068088054656982
    10. 'vect' → logprob: -5.193088054656982

Token 163: ' chaque' (ID: 21194)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3129865229129791
    2. 'b' → logprob: -2.0629866123199463
    3. ' x' → logprob: -2.6879866123199463
    4. 'x' → logprob: -3.5629866123199463
    5. ' e' → logprob: -3.6879866123199463
    6. 'e' → logprob: -4.562986373901367
    7. ' v' → logprob: -6.062986373901367
    8. ' chaque' → logprob: -7.062986373901367
    9. ' each' → logprob: -7.062986373901367
    10. ' elem' → logprob: -7.187986373901367

Token 164: ' nouvel' (ID: 76298)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5349872708320618
    2. 'b' → logprob: -1.909987211227417
    3. ' v' → logprob: -2.034987211227417
    4. ' b' → logprob: -2.909987211227417
    5. 'e' → logprob: -3.784987211227417
    6. ' e' → logprob: -4.659987449645996
    7. 'vect' → logprob: -4.784987449645996
    8. 'x' → logprob: -4.909987449645996
    9. 'elem' → logprob: -5.034987449645996
    10. ' vector' → logprob: -5.159987449645996

Token 165: ' élément' (ID: 99627)
  Prédit: ' élément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.28669196367263794
    2. 'élé' → logprob: -1.7866919040679932
    3. 'e' → logprob: -3.411691904067993
    4. 'element' → logprob: -4.036692142486572
    5. ' e' → logprob: -4.786692142486572
    6. ' element' → logprob: -4.786692142486572
    7. ' vect' → logprob: -4.786692142486572
    8. 'elem' → logprob: -6.661692142486572
    9. ' vector' → logprob: -6.786692142486572
    10. '   ' → logprob: -7.036692142486572

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6067824959754944
    2. ':' → logprob: -1.6067824363708496
    3. ' :' → logprob: -2.4817824363708496
    4. 'e' → logprob: -3.1067824363708496
    5. ' ,' → logprob: -3.6067824363708496
    6. ' e' → logprob: -3.9817824363708496
    7. '    ' → logprob: -4.23178243637085
    8. '       ' → logprob: -4.23178243637085
    9. '        ' → logprob: -4.60678243637085
    10. '   ' → logprob: -4.73178243637085

Token 167: ' on' (ID: 402)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5344534516334534
    2. 'x' → logprob: -1.6594533920288086
    3. ' v' → logprob: -2.6594533920288086
    4. 'for' → logprob: -2.6594533920288086
    5. ' x' → logprob: -3.1594533920288086
    6. ' for' → logprob: -3.6594533920288086
    7. 'vect' → logprob: -5.784453392028809
    8. 'vec' → logprob: -6.534453392028809
    9. 'e' → logprob: -6.534453392028809
    10. '   ' → logprob: -7.034453392028809

Token 168: ' le' (ID: 505)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1355903148651123
    2. ' x' → logprob: -1.1355903148651123
    3. ' v' → logprob: -2.0105903148651123
    4. 'x' → logprob: -2.0105903148651123
    5. ' for' → logprob: -4.510590553283691
    6. 'e' → logprob: -4.635590553283691
    7. ' e' → logprob: -4.760590553283691
    8. 'temp' → logprob: -4.760590553283691
    9. 'for' → logprob: -5.010590553283691
    10. ' temp' → logprob: -5.135590553283691

Token 169: ' réduit' (ID: 120775)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.3957865238189697
    2. 'x' → logprob: -1.5207865238189697
    3. 'v' → logprob: -2.1457865238189697
    4. 'insert' → logprob: -2.5207865238189697
    5. 'temp' → logprob: -3.5207865238189697
    6. 'ins' → logprob: -3.5207865238189697
    7. ' ajoute' → logprob: -3.6457865238189697
    8. ' ins' → logprob: -3.7707865238189697
    9. 'tmp' → logprob: -3.7707865238189697
    10. ' insert' → logprob: -3.8957865238189697

Token 170: ' vis' (ID: 1909)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2701124846935272
    2. '   ' → logprob: -3.1451125144958496
    3. 'e' → logprob: -3.5201125144958496
    4. '    ' → logprob: -3.6451125144958496
    5. '       ' → logprob: -4.02011251449585
    6. ' à' → logprob: -4.14511251449585
    7. ' au' → logprob: -4.27011251449585
    8. ' via' → logprob: -4.27011251449585
    9. '  ' → logprob: -4.64511251449585
    10. ' e' → logprob: -4.64511251449585

Token 171: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.018858760595321655
    2. 'à' → logprob: -4.518858909606934
    3. '-' → logprob: -5.268858909606934
    4. 'e' → logprob: -7.018858909606934
    5. 'é' → logprob: -7.143858909606934
    6. '```' → logprob: -8.018858909606934
    7. 'iblement' → logprob: -8.143858909606934
    8. 'ant' → logprob: -9.643858909606934
    9. ''à' → logprob: -9.893858909606934
    10. ' à' → logprob: -10.393858909606934

Token 172: '-vis' (ID: 105740)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.669100821018219
    2. 'vis' → logprob: -2.169100761413574
    3. 's' → logprob: -2.919100761413574
    4. 'e' → logprob: -3.044100761413574
    5. 'a' → logprob: -3.169100761413574
    6. '-' → logprob: -3.544100761413574
    7. '-à' → logprob: -3.544100761413574
    8. 'u' → logprob: -3.669100761413574
    9. '-vis' → logprob: -4.044100761413574
    10. 'w' → logprob: -4.169100761413574

Token 173: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5126050710678101
    2. ' des' → logprob: -1.01260507106781
    3. 'de' → logprob: -3.5126051902770996
    4. 'des' → logprob: -5.0126051902771
    5. '   ' → logprob: -7.2626051902771
    6. ' la' → logprob: -8.512604713439941
    7. ' ' → logprob: -8.887604713439941
    8. ' of' → logprob: -9.762604713439941
    9. '    ' → logprob: -10.512604713439941
    10. 'basis' → logprob: -10.637604713439941

Token 174: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.33826008439064026
    2. 'élé' → logprob: -1.7132600545883179
    3. ' elements' → logprob: -2.8382601737976074
    4. ' basis' → logprob: -3.8382601737976074
    5. 'elements' → logprob: -4.838260173797607
    6. 'basis' → logprob: -5.088260173797607
    7. ' base' → logprob: -5.338260173797607
    8. ' bases' → logprob: -6.213260173797607
    9. ' élément' → logprob: -6.713260173797607
    10. 'b' → logprob: -6.963260173797607

Token 175: ' déjà' (ID: 21229)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2807179391384125
    2. ' exist' → logprob: -1.6557179689407349
    3. '   ' → logprob: -3.6557178497314453
    4. 'de' → logprob: -4.405717849731445
    5. ' déjà' → logprob: -5.280717849731445
    6. ' présents' → logprob: -5.905717849731445
    7. 'exist' → logprob: -6.280717849731445
    8. 'dé' → logprob: -6.530717849731445
    9. ' existing' → logprob: -6.905717849731445
    10. ' dans' → logprob: -7.155717849731445

Token 176: ' dans' (ID: 2671)
  Prédit: ' présents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' présents' → logprob: -0.3347374200820923
    2. 'dans' → logprob: -1.5847374200820923
    3. 'prés' → logprob: -2.8347373008728027
    4. ' dans' → logprob: -4.209737300872803
    5. ' présentes' → logprob: -6.209737300872803
    6. 'exist' → logprob: -6.334737300872803
    7. 'present' → logprob: -7.584737300872803
    8. 'en' → logprob: -8.209737777709961
    9. 'in' → logprob: -8.209737777709961
    10. ' exist' → logprob: -8.459737777709961

Token 177: ' la' (ID: 557)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.6334757208824158
    2. ' basis' → logprob: -0.7584757208824158
    3. ' la' → logprob: -8.383475303649902
    4. '_basis' → logprob: -8.633475303649902
    5. 'bas' → logprob: -9.008475303649902
    6. '   ' → logprob: -9.133475303649902
    7. 'the' → logprob: -9.383475303649902
    8. ' the' → logprob: -10.008475303649902
    9. ' ' → logprob: -10.508475303649902
    10. 'base' → logprob: -11.258475303649902

Token 178: ' base' (ID: 3611)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.0702144056558609
    2. ' basis' → logprob: -2.6952145099639893
    3. '_basis' → logprob: -9.19521427154541
    4. 'base' → logprob: -9.82021427154541
    5. 'bas' → logprob: -10.32021427154541
    6. '   ' → logprob: -10.94521427154541
    7. ' ' → logprob: -11.32021427154541
    8. '
' → logprob: -11.32021427154541
    9. 'b' → logprob: -12.25771427154541
    10. '```' → logprob: -12.25771427154541

Token 179: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1303166300058365
    2. ':' → logprob: -2.505316734313965
    3. ' :' → logprob: -3.880316734313965
    4. '        
' → logprob: -4.755316734313965
    5. ',' → logprob: -5.255316734313965
    6. '        ' → logprob: -6.005316734313965
    7. ' ' → logprob: -7.630316734313965
    8. '   ' → logprob: -7.755316734313965
    9. '    ' → logprob: -7.880316734313965
    10. ':
' → logprob: -8.005316734313965

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09598519653081894
    2. ':' → logprob: -3.220985174179077
    3. ' :' → logprob: -3.845985174179077
    4. '        ' → logprob: -4.720985412597656
    5. '    ' → logprob: -4.970985412597656
    6. ' ' → logprob: -5.345985412597656
    7. '        
' → logprob: -5.720985412597656
    8. '   ' → logprob: -5.845985412597656
    9. ',' → logprob: -7.345985412597656
    10. '      ' → logprob: -8.345985412597656

Token 181: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.24690671265125275
    2. ' for' → logprob: -1.6219067573547363
    3. 'x' → logprob: -4.121906757354736
    4. ' x' → logprob: -6.496906757354736
    5. 'e' → logprob: -6.871906757354736
    6. '       ' → logprob: -7.121906757354736
    7. '   ' → logprob: -7.621906757354736
    8. 'v' → logprob: -7.871906757354736
    9. 'val' → logprob: -9.121906280517578
    10. 'new' → logprob: -9.371906280517578

Token 182: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2816157639026642
    2. ' b' → logprob: -1.4066157341003418
    3. 'v' → logprob: -8.9066162109375
    4. 'base' → logprob: -9.4066162109375
    5. ' base' → logprob: -9.6566162109375
    6. ' v' → logprob: -10.0316162109375
    7. 'i' → logprob: -10.4066162109375
    8. ' i' → logprob: -10.7816162109375
    9. 'basis' → logprob: -10.9066162109375
    10. '   ' → logprob: -11.2816162109375

Token 183: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006082733627408743
    2. 'asis' → logprob: -5.881082534790039
    3. 'in' → logprob: -6.131082534790039
    4. ' ' → logprob: -7.631082534790039
    5. 'ase' → logprob: -7.756082534790039
    6. '  ' → logprob: -9.881082534790039
    7. 'ases' → logprob: -10.006082534790039
    8. 'as' → logprob: -10.881082534790039
    9. ':' → logprob: -11.131082534790039
    10. ' :' → logprob: -11.631082534790039

Token 184: ' basis' (ID: 9571)
  Prédit: ' basis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.38688886165618896
    2. 'basis' → logprob: -1.136888861656189
    3. '_basis' → logprob: -11.13688850402832
    4. 'asis' → logprob: -12.76188850402832
    5. ' ' → logprob: -15.26188850402832
    6. 'Basis' → logprob: -16.51188850402832
    7. 'bas' → logprob: -17.01188850402832
    8. 'ase' → logprob: -17.51188850402832
    9. '  ' → logprob: -18.63688850402832
    10. 'base' → logprob: -18.88688850402832

Token 185: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013072226196527481
    2. ' :' → logprob: -4.3880720138549805
    3. ':
' → logprob: -7.5130720138549805
    4. ' :
' → logprob: -11.76307201385498
    5. '[:]' → logprob: -13.01307201385498
    6. ',' → logprob: -13.88807201385498
    7. '):' → logprob: -14.01307201385498
    8. '=' → logprob: -14.26307201385498
    9. ':**' → logprob: -14.63807201385498
    10. '[:' → logprob: -14.63807201385498

Token 186: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6585441827774048
    2. ' :' → logprob: -1.1585441827774048
    3. '           ' → logprob: -2.7835440635681152
    4. ':
' → logprob: -3.2835440635681152
    5. ' :
' → logprob: -3.6585440635681152
    6. '       ' → logprob: -4.908544063568115
    7. ' =' → logprob: -5.033544063568115
    8. 'e' → logprob: -5.158544063568115
    9. ' if' → logprob: -5.658544063568115
    10. '        ' → logprob: -5.783544063568115

Token 187: ' #' (ID: 1069)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.45619478821754456
    2. ' e' → logprob: -1.0811947584152222
    3. ' if' → logprob: -3.8311948776245117
    4. 'if' → logprob: -5.831194877624512
    5. ' 
' → logprob: -6.831194877624512
    6. '           ' → logprob: -7.456194877624512
    7. ' ' → logprob: -8.831194877624512
    8. '
' → logprob: -8.831194877624512
    9. '       ' → logprob: -8.956194877624512
    10. '            
' → logprob: -9.081194877624512

Token 188: ' On' (ID: 2160)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6039448380470276
    2. ' e' → logprob: -0.8539448380470276
    3. ' if' → logprob: -3.978944778442383
    4. 'if' → logprob: -5.103944778442383
    5. '           ' → logprob: -7.228944778442383
    6. '        ' → logprob: -7.478944778442383
    7. '       ' → logprob: -7.853944778442383
    8. ' ' → logprob: -7.853944778442383
    9. '    ' → logprob: -8.978944778442383
    10. '	e' → logprob: -9.228944778442383

Token 189: ' rem' (ID: 1662)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1943628340959549
    2. ' e' → logprob: -2.1943628787994385
    3. ' ^=' → logprob: -3.3193628787994385
    4. '=' → logprob: -4.694362640380859
    5. '^' → logprob: -5.069362640380859
    6. 'if' → logprob: -5.819362640380859
    7. ' =' → logprob: -6.194362640380859
    8. '   ' → logprob: -6.444362640380859
    9. '=e' → logprob: -6.694362640380859
    10. ' ^' → logprob: -7.444362640380859

Token 190: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.04600317403674126
    2. 'et' → logprob: -4.046003341674805
    3. 'e' → logprob: -4.171003341674805
    4. 'ixe' → logprob: -4.921003341674805
    5. 'plit' → logprob: -5.921003341674805
    6. 'p' → logprob: -7.421003341674805
    7. 'b' → logprob: -7.421003341674805
    8. 'onte' → logprob: -8.421003341674805
    9. 'arque' → logprob: -8.671003341674805
    10. '#' → logprob: -9.296003341674805

Token 191: ' '' (ID: 461)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.10902536660432816
    2. 'e' → logprob: -2.359025478363037
    3. ' if' → logprob: -5.484025478363037
    4. ' ' → logprob: -6.484025478363037
    5. 'if' → logprob: -7.234025478363037
    6. '    ' → logprob: -7.609025478363037
    7. '	e' → logprob: -7.609025478363037
    8. '        ' → logprob: -8.234025001525879
    9. '(e' → logprob: -8.359025001525879
    10. '            ' → logprob: -8.984025001525879

Token 192: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06212889775633812
    2. ' e' → logprob: -2.812128782272339
    3. '	e' → logprob: -9.812129020690918
    4. '   ' → logprob: -10.062129020690918
    5. '       ' → logprob: -10.312129020690918
    6. ' ' → logprob: -11.312129020690918
    7. '           ' → logprob: -12.312129020690918
    8. '    ' → logprob: -12.937129020690918
    9. '  ' → logprob: -13.187129020690918
    10. ''e' → logprob: -13.812129020690918

Token 193: ''' (ID: 6)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.022215213626623154
    2. ' ^' → logprob: -4.272215366363525
    3. ' ' → logprob: -4.897215366363525
    4. ' =' → logprob: -7.897215366363525
    5. '^' → logprob: -9.772214889526367
    6. ' &=' → logprob: -10.522214889526367
    7. ' &' → logprob: -10.522214889526367
    8. ' <<=' → logprob: -10.522214889526367
    9. ' |=' → logprob: -11.897214889526367
    10. ' ==' → logprob: -12.272214889526367

Token 194: ' par' (ID: 686)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.4097156822681427
    2. ' =' → logprob: -1.1597156524658203
    3. '=' → logprob: -4.03471565246582
    4. '^' → logprob: -5.65971565246582
    5. ' ' → logprob: -7.28471565246582
    6. ' ^' → logprob: -7.40971565246582
    7. ' &=' → logprob: -9.90971565246582
    8. '   ' → logprob: -11.28471565246582
    9. ' |=' → logprob: -11.40971565246582
    10. ',' → logprob: -11.78471565246582

Token 195: ' le' (ID: 505)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.38743990659713745
    2. 'e' → logprob: -1.1374399662017822
    3. ' max' → logprob: -8.137439727783203
    4. ' min' → logprob: -8.762439727783203
    5. 'max' → logprob: -10.137439727783203
    6. ' ' → logprob: -10.762439727783203
    7. 'min' → logprob: -11.137439727783203
    8. '	e' → logprob: -11.262439727783203
    9. '(e' → logprob: -12.387439727783203
    10. '   ' → logprob: -12.512439727783203

Token 196: ' minimum' (ID: 11085)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7586902976036072
    2. ' e' → logprob: -2.008690357208252
    3. ' xor' → logprob: -2.133690357208252
    4. ' XOR' → logprob: -2.383690357208252
    5. ' minimum' → logprob: -2.633690357208252
    6. 'xor' → logprob: -3.133690357208252
    7. ' moindre' → logprob: -3.883690357208252
    8. '^' → logprob: -4.758690357208252
    9. 'minimum' → logprob: -5.258690357208252
    10. ' smaller' → logprob: -5.258690357208252

Token 197: ' avec' (ID: 3937)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -1.1570640802383423
    2. '(e' → logprob: -1.4070640802383423
    3. ' entre' → logprob: -1.5320640802383423
    4. 'e' → logprob: -2.1570639610290527
    5. ' e' → logprob: -2.5320639610290527
    6. 'between' → logprob: -4.782063961029053
    7. ' de' → logprob: -5.032063961029053
    8. '   ' → logprob: -6.032063961029053
    9. '           ' → logprob: -6.032063961029053
    10. '       ' → logprob: -6.407063961029053

Token 198: ' '' (ID: 461)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.15047577023506165
    2. 'e' → logprob: -2.0254757404327393
    3. 'b' → logprob: -5.275475978851318
    4. ' b' → logprob: -6.650475978851318
    5. ' ' → logprob: -8.15047550201416
    6. '(e' → logprob: -8.15047550201416
    7. 'l' → logprob: -8.65047550201416
    8. ' l' → logprob: -8.90047550201416
    9. ' '' → logprob: -9.15047550201416
    10. ''' → logprob: -9.27547550201416

Token 199: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.523958683013916
    2. ' e' → logprob: -0.898958683013916
    3. 'b' → logprob: -8.023958206176758
    4. ' b' → logprob: -8.523958206176758
    5. ' (' → logprob: -9.273958206176758
    6. '(e' → logprob: -9.398958206176758
    7. ' ' → logprob: -9.773958206176758
    8. ''e' → logprob: -10.773958206176758
    9. '	e' → logprob: -11.023958206176758
    10. '```' → logprob: -11.648958206176758

Token 200: ' XOR' (ID: 147209)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.11333204805850983
    2. '^' → logprob: -2.2383320331573486
    3. ' xor' → logprob: -7.863332271575928
    4. ' ' → logprob: -10.48833179473877
    5. ' ^=' → logprob: -10.73833179473877
    6. ' XOR' → logprob: -10.73833179473877
    7. 'b' → logprob: -11.61333179473877
    8. ' ' → logprob: -11.73833179473877
    9. 'xor' → logprob: -11.86333179473877
    10. 'e' → logprob: -11.98833179473877

Token 201: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.12693557143211365
    2. 'b' → logprob: -2.1269354820251465
    3. ' ' → logprob: -13.251935958862305
    4. ' ' → logprob: -13.251935958862305
    5. '	b' → logprob: -13.251935958862305
    6. '(b' → logprob: -15.001935958862305
    7. ' б' → logprob: -15.001935958862305
    8. ' (' → logprob: -15.001935958862305
    9. ''b' → logprob: -15.501935958862305
    10. '    ' → logprob: -15.626935958862305

Token 202: ''' (ID: 6)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.6121724843978882
    2. ' if' → logprob: -1.7371724843978882
    3. ' ' → logprob: -2.3621726036071777
    4. '^' → logprob: -3.2371726036071777
    5. '           ' → logprob: -3.3621726036071777
    6. ' e' → logprob: -3.7371726036071777
    7. '   ' → logprob: -3.9871726036071777
    8. '       ' → logprob: -4.237172603607178
    9. ')' → logprob: -4.487172603607178
    10. '    ' → logprob: -4.487172603607178

Token 203: ' pour' (ID: 1930)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05933210998773575
    2. ' ' → logprob: -4.059331893920898
    3. ' ^' → logprob: -4.434331893920898
    4. '           ' → logprob: -4.559331893920898
    5. '            ' → logprob: -5.559331893920898
    6. 'if' → logprob: -5.559331893920898
    7. ' e' → logprob: -6.684331893920898
    8. '^' → logprob: -6.684331893920898
    9. ' ^=' → logprob: -6.684331893920898
    10. '    ' → logprob: -7.059331893920898

Token 204: ' garantir' (ID: 48328)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.06742378324270248
    2. 'e' → logprob: -2.9424238204956055
    3. ' réduire' → logprob: -5.5674238204956055
    4. '(e' → logprob: -6.1924238204956055
    5. 'b' → logprob: -6.8174238204956055
    6. ' obtenir' → logprob: -7.0674238204956055
    7. ' ' → logprob: -7.9424238204956055
    8. ' garantir' → logprob: -8.067423820495605
    9. ' conserver' → logprob: -8.067423820495605
    10. 'min' → logprob: -8.192423820495605

Token 205: ' l' (ID: 305)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.05805039778351784
    2. 'e' → logprob: -3.5580503940582275
    3. ' que' → logprob: -4.308050632476807
    4. '(e' → logprob: -4.683050632476807
    5. ' that' → logprob: -6.558050632476807
    6. ' ' → logprob: -7.183050632476807
    7. ' le' → logprob: -7.308050632476807
    8. ' (' → logprob: -7.558050632476807
    9. ' une' → logprob: -8.058050155639648
    10. ' '' → logprob: -8.183050155639648

Token 206: ''as' (ID: 73430)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.22037985920906067
    2. ' e' → logprob: -2.5953798294067383
    3. 'a' → logprob: -2.8453798294067383
    4. ''e' → logprob: -3.9703798294067383
    5. ''' → logprob: -4.345379829406738
    6. ''ordre' → logprob: -5.220379829406738
    7. ' '' → logprob: -5.345379829406738
    8. '   ' → logprob: -5.595379829406738
    9. ''é' → logprob: -5.595379829406738
    10. ''espace' → logprob: -5.845379829406738

Token 207: 'pect' (ID: 1248)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7367284297943115
    2. 'sm' → logprob: -1.4867284297943115
    3. 'ss' → logprob: -1.6117284297943115
    4. 'ssi' → logprob: -3.8617284297943115
    5. 'c' → logprob: -4.361728668212891
    6. 'sign' → logprob: -4.486728668212891
    7. 'sert' → logprob: -4.861728668212891
    8. 'sort' → logprob: -5.111728668212891
    9. 'sc' → logprob: -5.361728668212891
    10. 'sent' → logprob: -5.611728668212891

Token 208: ' réduit' (ID: 120775)
  Prédit: ' lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lex' → logprob: -0.33314791321754456
    2. '   ' → logprob: -2.4581480026245117
    3. ' e' → logprob: -3.0831480026245117
    4. 'e' → logprob: -3.0831480026245117
    5. 'lex' → logprob: -3.8331480026245117
    6. ' ' → logprob: -4.333148002624512
    7. ' lin' → logprob: -4.833148002624512
    8. ' strict' → logprob: -5.083148002624512
    9. '  ' → logprob: -5.333148002624512
    10. ' linear' → logprob: -5.583148002624512

Token 209: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.280255526304245
    2. ' e' → logprob: -2.9052555561065674
    3. '       ' → logprob: -3.4052555561065674
    4. '           ' → logprob: -3.6552555561065674
    5. ' 
' → logprob: -3.7802555561065674
    6. 'e' → logprob: -4.030255317687988
    7. ' =' → logprob: -4.030255317687988
    8. '   ' → logprob: -4.905255317687988
    9. 'if' → logprob: -5.030255317687988
    10. ' ' → logprob: -5.030255317687988

Token 210: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4355323612689972
    2. ' if' → logprob: -2.060532331466675
    3. ' 
' → logprob: -2.810532331466675
    4. ' =' → logprob: -3.185532331466675
    5. 'e' → logprob: -3.810532331466675
    6. '           ' → logprob: -3.810532331466675
    7. ' e' → logprob: -4.185532569885254
    8. '        
' → logprob: -4.310532569885254
    9. '   ' → logprob: -4.810532569885254
    10. '=' → logprob: -5.310532569885254

Token 211: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.4642266631126404
    2. ' if' → logprob: -1.7142267227172852
    3. 'e' (adapté à ' e') → logprob: -1.8392267227172852
    4. ' ' → logprob: -4.089226722717285
    5. 'if' → logprob: -4.839226722717285
    6. '    ' → logprob: -5.964226722717285
    7. ' 
' → logprob: -6.214226722717285
    8. '       ' → logprob: -6.964226722717285
    9. '        ' → logprob: -7.089226722717285
    10. '           ' → logprob: -8.464226722717285

Token 212: ' =' (ID: 314)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.03037838079035282
    2. ' =' → logprob: -3.5303783416748047
    3. ' ^' → logprob: -7.530378341674805
    4. '^' → logprob: -9.655378341674805
    5. '=' → logprob: -11.155378341674805
    6. ' ' → logprob: -11.280378341674805
    7. ' |=' → logprob: -15.780378341674805
    8. ' xor' → logprob: -17.155378341674805
    9. ' ' → logprob: -17.405378341674805
    10. ' &=' → logprob: -17.905378341674805

Token 213: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.20580066740512848
    2. 'min' → logprob: -1.7058006525039673
    3. ' e' → logprob: -5.830800533294678
    4. 'e' → logprob: -6.580800533294678
    5. '	min' → logprob: -10.205801010131836
    6. ' ' → logprob: -12.580801010131836
    7. '	e' → logprob: -13.205801010131836
    8. '(min' → logprob: -13.330801010131836
    9. ' minimum' → logprob: -13.455801010131836
    10. '```' → logprob: -13.518301010131836

Token 214: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.12500286102295
    3. 'e' → logprob: -14.50000286102295
    4. ' (' → logprob: -19.250001907348633
    5. '((' → logprob: -19.875001907348633
    6. '(
' → logprob: -20.125001907348633
    7. '(i' → logprob: -20.375001907348633
    8. '	e' → logprob: -20.500001907348633
    9. '(a' → logprob: -20.625001907348633
    10. ' e' → logprob: -20.750001907348633

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004672206938266754
    2. ',e' → logprob: -6.129672050476074
    3. ' ,' → logprob: -6.504672050476074
    4. 'e' → logprob: -7.504672050476074
    5. ' e' → logprob: -7.754672050476074
    6. ' ^' → logprob: -12.129672050476074
    7. '^' → logprob: -13.254672050476074
    8. ',
' → logprob: -14.379672050476074
    9. ' ' → logprob: -14.879672050476074
    10. '   ' → logprob: -16.50467300415039

Token 216: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.2811676263809204
    2. 'e' → logprob: -1.4061676263809204
    3. '	e' → logprob: -11.781167984008789
    4. '   ' → logprob: -12.406167984008789
    5. ' ' → logprob: -13.031167984008789
    6. '    ' → logprob: -13.406167984008789
    7. '(e' → logprob: -14.656167984008789
    8. 'b' → logprob: -14.781167984008789
    9. '           ' → logprob: -15.656167984008789
    10. '  ' → logprob: -15.781167984008789

Token 217: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.20158319175243378
    2. '^' → logprob: -1.7015831470489502
    3. ' ' → logprob: -8.826582908630371
    4. ' ' → logprob: -12.326582908630371
    5. ')' → logprob: -12.576582908630371
    6. '1' → logprob: -12.826582908630371
    7. 'e' → logprob: -12.951582908630371
    8. ' xor' → logprob: -12.951582908630371
    9. ' ^
' → logprob: -13.701582908630371
    10. '   ' → logprob: -13.951582908630371

Token 218: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023245595395565033
    2. ' b' → logprob: -3.7732455730438232
    3. '   ' → logprob: -17.398244857788086
    4. ' ' → logprob: -17.523244857788086
    5. '	b' → logprob: -18.273244857788086
    6. '    ' → logprob: -19.148244857788086
    7. ')b' → logprob: -19.398244857788086
    8. '  ' → logprob: -20.273244857788086
    9. ' б' → logprob: -20.273244857788086
    10. '       ' → logprob: -20.273244857788086

Token 219: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020683543756604195
    2. ')
' → logprob: -3.895683526992798
    3. '       ' → logprob: -9.520683288574219
    4. ' )' → logprob: -10.020683288574219
    5. '   ' → logprob: -11.270683288574219
    6. ')
' → logprob: -12.270683288574219
    7. ')

' → logprob: -12.770683288574219
    8. ' )
' → logprob: -13.145683288574219
    9. '           ' → logprob: -14.895683288574219
    10. '))' → logprob: -15.395683288574219

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6384895443916321
    2. '
' → logprob: -0.7634895443916321
    3. '        
' → logprob: -5.763489723205566
    4. '    
' → logprob: -7.138489723205566
    5. ' 
' → logprob: -7.388489723205566
    6. '   ' → logprob: -7.763489723205566
    7. '  
' → logprob: -7.888489723205566
    8. '<|end|>' → logprob: -8.263489723205566
    9. '\n' → logprob: -9.888489723205566
    10. ' if' → logprob: -10.138489723205566

Token 221: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3026621639728546
    2. 'if' (adapté à ' if') → logprob: -1.6776621341705322
    3. ' if' → logprob: -3.1776621341705322
    4. '   ' → logprob: -3.4276621341705322
    5. '```' → logprob: -9.427661895751953
    6. '    ' → logprob: -10.177661895751953
    7. '  ' → logprob: -10.302661895751953
    8. '     ' → logprob: -11.552661895751953
    9. ' ' → logprob: -11.677661895751953
    10. '      ' → logprob: -11.927661895751953

Token 222: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.10021249949932098
    2. 'e' → logprob: -2.350212574005127
    3. '   ' → logprob: -12.725212097167969
    4. ' ' → logprob: -13.100212097167969
    5. '	e' → logprob: -14.475212097167969
    6. '  ' → logprob: -16.22521209716797
    7. ')e' → logprob: -17.28771209716797
    8. '    ' → logprob: -17.35021209716797
    9. ' ' → logprob: -17.60021209716797
    10. '(e' → logprob: -17.66271209716797

Token 223: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4243711531162262
    2. ' >' → logprob: -1.4243711233139038
    3. ' !=' → logprob: -2.9243712425231934
    4. '!=' → logprob: -3.5493712425231934
    5. ':' → logprob: -3.7993712425231934
    6. ' not' → logprob: -9.674370765686035
    7. '>:' → logprob: -10.049370765686035
    8. ' :' → logprob: -10.174370765686035
    9. '<|end|>' → logprob: -10.174370765686035
    10. '&gt' → logprob: -10.799370765686035

Token 224: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016053372994065285
    2. '           ' → logprob: -4.266053199768066
    3. ' basis' → logprob: -6.891053199768066
    4. '   ' → logprob: -8.641053199768066
    5. ':' → logprob: -8.891053199768066
    6. 'basis' → logprob: -8.891053199768066
    7. '_basis' → logprob: -9.016053199768066
    8. '	       ' → logprob: -9.391053199768066
    9. '	   ' → logprob: -9.516053199768066
    10. '        
' → logprob: -10.391053199768066

Token 225: ' #' (ID: 1069)
  Prédit: ' basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.7972241044044495
    2. 'basis' → logprob: -0.7972241044044495
    3. '       ' → logprob: -2.6722240447998047
    4. '           ' → logprob: -3.6722240447998047
    5. '   ' → logprob: -5.922224044799805
    6. ' for' → logprob: -7.922224044799805
    7. '    ' → logprob: -8.297224044799805
    8. 'for' → logprob: -8.297224044799805
    9. '_basis' → logprob: -8.297224044799805
    10. 'b' → logprob: -9.297224044799805

Token 226: ' Si' (ID: 7832)
  Prédit: ' basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.2926843762397766
    2. 'basis' → logprob: -1.9176843166351318
    3. '           ' → logprob: -3.167684316635132
    4. '#' → logprob: -3.792684316635132
    5. ' #' → logprob: -4.417684555053711
    6. '   ' → logprob: -4.792684555053711
    7. '       ' → logprob: -5.417684555053711
    8. 'insert' → logprob: -5.542684555053711
    9. ' insert' → logprob: -5.667684555053711
    10. '    ' → logprob: -6.417684555053711

Token 227: ' '' (ID: 461)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9589033126831055
    2. ' e' → logprob: -1.4589033126831055
    3. 'e' → logprob: -1.5839033126831055
    4. ' len' → logprob: -2.3339033126831055
    5. 'len' → logprob: -3.4589033126831055
    6. 'not' → logprob: -4.3339033126831055
    7. ' all' → logprob: -4.5839033126831055
    8. ' any' → logprob: -4.5839033126831055
    9. ' basis' → logprob: -4.8339033126831055
    10. 'basis' → logprob: -5.9589033126831055

Token 228: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5098296999931335
    2. ' e' → logprob: -1.1348297595977783
    3. ' not' → logprob: -3.5098297595977783
    4. 'len' → logprob: -4.134829521179199
    5. 'not' → logprob: -4.884829521179199
    6. ' len' → logprob: -5.134829521179199
    7. 'basis' → logprob: -5.259829521179199
    8. 'all' → logprob: -5.509829521179199
    9. ' all' → logprob: -5.759829521179199
    10. ' basis' → logprob: -6.009829521179199

Token 229: ''' (ID: 6)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.23847945034503937
    2. ' >' → logprob: -1.738479495048523
    3. '>' → logprob: -4.2384796142578125
    4. ')' → logprob: -5.7384796142578125
    5. 'not' → logprob: -6.1134796142578125
    6. ' is' → logprob: -6.2384796142578125
    7. ' =' → logprob: -6.2384796142578125
    8. ' )' → logprob: -6.3634796142578125
    9. ' n' → logprob: -6.4884796142578125
    10. 'n' → logprob: -6.7384796142578125

Token 230: ' est' (ID: 893)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.036558933556079865
    2. ':' → logprob: -4.786559104919434
    3. 'not' → logprob: -4.786559104919434
    4. 'n' → logprob: -5.536559104919434
    5. ',' → logprob: -5.786559104919434
    6. ' is' → logprob: -5.911559104919434
    7. ' n' → logprob: -6.036559104919434
    8. '>' → logprob: -7.036559104919434
    9. ' =' → logprob: -7.161559104919434
    10. '.append' → logprob: -7.411559104919434

Token 231: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.9472622275352478
    2. ' non' → logprob: -1.0722622871398926
    3. ' différent' → logprob: -2.0722622871398926
    4. ' not' → logprob: -2.9472622871398926
    5. 'not' → logprob: -3.3222622871398926
    6. 'different' → logprob: -4.197262287139893
    7. ' different' → logprob: -5.197262287139893
    8. ' pas' → logprob: -5.322262287139893
    9. '   ' → logprob: -5.447262287139893
    10. 'pas' → logprob: -5.447262287139893

Token 232: ' nul' (ID: 64435)
  Prédit: ' nul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nul' → logprob: -0.0810650959610939
    2. 'nul' → logprob: -2.7060651779174805
    3. '0' → logprob: -5.8310651779174805
    4. ' dans' → logprob: -5.9560651779174805
    5. ' déjà' → logprob: -6.3310651779174805
    6. ' zéro' → logprob: -6.9560651779174805
    7. ' null' → logprob: -7.5810651779174805
    8. 'zero' → logprob: -7.5810651779174805
    9. ' None' → logprob: -8.20606517791748
    10. ' in' → logprob: -8.33106517791748

Token 233: ' après' (ID: 16460)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20571886003017426
    2. ':' → logprob: -1.8307188749313354
    3. '           ' → logprob: -4.580718994140625
    4. ':
' → logprob: -5.205718994140625
    5. ' ,' → logprob: -5.330718994140625
    6. ' :' → logprob: -5.580718994140625
    7. ',
' → logprob: -7.830718994140625
    8. '               ' → logprob: -8.080718994140625
    9. ' :
' → logprob: -8.330718994140625
    10. '       ' → logprob: -9.205718994140625

Token 234: ' réduction' (ID: 89072)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.8748860359191895
    2. ' réduction' → logprob: -1.8748860359191895
    3. ' insertion' → logprob: -2.2498860359191895
    4. ' cette' → logprob: -2.3748860359191895
    5. 'la' → logprob: -2.4998860359191895
    6. 'l' → logprob: -2.6248860359191895
    7. ' reduction' → logprob: -2.9998860359191895
    8. 'aj' → logprob: -3.4998860359191895
    9. 'e' → logprob: -3.4998860359191895
    10. ' avoir' → logprob: -3.6248860359191895

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09641777724027634
    2. '           ' → logprob: -3.2214176654815674
    3. ':' → logprob: -3.3464176654815674
    4. ' ,' → logprob: -4.9714179039001465
    5. ' :' → logprob: -5.4714179039001465
    6. ':
' → logprob: -6.4714179039001465
    7. '               ' → logprob: -6.4714179039001465
    8. ',
' → logprob: -7.0964179039001465
    9. '       ' → logprob: -7.5964179039001465
    10. ' :
' → logprob: -7.7214179039001465

Token 236: ' il' (ID: 1793)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2726934254169464
    2. '       ' → logprob: -2.397693395614624
    3. ' basis' → logprob: -3.147693395614624
    4. 'basis' → logprob: -3.522693395614624
    5. '#' → logprob: -3.772693395614624
    6. '   ' → logprob: -4.022693634033203
    7. ' #' → logprob: -4.147693634033203
    8. '               ' → logprob: -4.897693634033203
    9. 'insert' → logprob: -6.272693634033203
    10. ' insert' → logprob: -6.397693634033203

Token 237: ' est' (ID: 893)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0209534168243408
    2. ' =' → logprob: -1.3959534168243408
    3. '=' → logprob: -1.5209534168243408
    4. ' ajoute' → logprob: -3.895953416824341
    5. ' est' → logprob: -4.020953178405762
    6. '           ' → logprob: -4.270953178405762
    7. 's' → logprob: -4.395953178405762
    8. ' is' → logprob: -4.520953178405762
    9. ' s' → logprob: -4.770953178405762
    10. ' n' → logprob: -5.020953178405762

Token 238: ' lin' (ID: 14432)
  Prédit: ' ajouté'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ajouté' → logprob: -0.5258327722549438
    2. ' ins' → logprob: -1.1508327722549438
    3. 'ins' → logprob: -2.5258326530456543
    4. 'insert' → logprob: -5.400832653045654
    5. ' insert' → logprob: -6.400832653045654
    6. ' ajout' → logprob: -6.900832653045654
    7. 'import' → logprob: -7.275832653045654
    8. ' intégré' → logprob: -7.275832653045654
    9. '.append' → logprob: -7.525832653045654
    10. 'aj' → logprob: -7.525832653045654

Token 239: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.007246199529618025
    2. '   ' → logprob: -6.132246017456055
    3. '           ' → logprob: -6.882246017456055
    4. 'e' → logprob: -7.007246017456055
    5. '       ' → logprob: -7.132246017456055
    6. 'éra' → logprob: -7.757246017456055
    7. 'éin' → logprob: -8.132246017456055
    8. 'aire' → logprob: -8.507246017456055
    9. 'ément' → logprob: -8.632246017456055
    10. 'ére' → logprob: -9.007246017456055

Token 240: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.0014597621047869325
    2. 'èrement' → logprob: -8.126460075378418
    3. 'air' → logprob: -8.251460075378418
    4. 'a' → logprob: -8.376460075378418
    5. 'irement' → logprob: -8.751460075378418
    6. 'ment' → logprob: -9.251460075378418
    7. 'al' → logprob: -9.501460075378418
    8. 'ar' → logprob: -10.001460075378418
    9. 'iquement' → logprob: -10.376460075378418
    10. 'quement' → logprob: -10.501460075378418

Token 241: 'ment' (ID: 508)
  Prédit: ' indépendant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indépendant' → logprob: -0.8785455822944641
    2. 'ind' → logprob: -1.1285455226898193
    3. '   ' → logprob: -2.1285455226898193
    4. 'ment' → logprob: -3.0035455226898193
    5. 'lement' → logprob: -3.5035455226898193
    6. 'ement' → logprob: -3.6285455226898193
    7. ' indépend' → logprob: -4.753545761108398
    8. 'ément' → logprob: -5.003545761108398
    9. ' independent' → logprob: -5.128545761108398
    10. '       ' → logprob: -6.003545761108398

Token 242: ' indépendant' (ID: 150296)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.25329139828681946
    2. ' indépendant' → logprob: -1.503291368484497
    3. ' independent' → logprob: -6.753291606903076
    4. ' indépend' → logprob: -8.753291130065918
    5. 'in' → logprob: -11.378291130065918
    6. '_ind' → logprob: -11.753291130065918
    7. ' independ' → logprob: -12.628291130065918
    8. ' indépendante' → logprob: -12.753291130065918
    9. ' ind' → logprob: -13.003291130065918
    10. ' ajouté' → logprob: -13.628291130065918

Token 243: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01162548828870058
    2. ',' → logprob: -5.011625289916992
    3. '       ' → logprob: -5.761625289916992
    4. ' from' → logprob: -7.136625289916992
    5. ' and' → logprob: -8.136625289916992
    6. '   ' → logprob: -8.761625289916992
    7. 'from' → logprob: -9.136625289916992
    8. ' de' → logprob: -9.136625289916992
    9. ' et' → logprob: -9.261625289916992
    10. '    ' → logprob: -10.636625289916992

Token 244: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22595548629760742
    2. '       ' → logprob: -1.7259554862976074
    3. 'basis' → logprob: -4.725955486297607
    4. ' basis' → logprob: -4.850955486297607
    5. '   ' → logprob: -5.100955486297607
    6. '	       ' → logprob: -8.725955963134766
    7. '               ' → logprob: -8.850955963134766
    8. '    ' → logprob: -8.975955963134766
    9. '	   ' → logprob: -8.975955963134766
    10. '        ' → logprob: -9.350955963134766

Token 245: ' l' (ID: 305)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1924799680709839
    2. '.append' → logprob: -1.5674799680709839
    3. '   ' → logprob: -2.1924800872802734
    4. ' append' → logprob: -2.4424800872802734
    5. 'ins' → logprob: -2.9424800872802734
    6. 'insert' → logprob: -3.0674800872802734
    7. '           ' → logprob: -3.0674800872802734
    8. ' ins' → logprob: -3.1924800872802734
    9. 'aj' → logprob: -3.6924800872802734
    10. ' insert' → logprob: -3.6924800872802734

Token 246: ''aj' (ID: 116735)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5130744576454163
    2. 'append' → logprob: -1.7630743980407715
    3. 'ins' → logprob: -2.3880743980407715
    4. 'aj' → logprob: -3.1380743980407715
    5. '   ' → logprob: -3.7630743980407715
    6. 'insert' → logprob: -3.8880743980407715
    7. '           ' → logprob: -3.8880743980407715
    8. '.insert' → logprob: -5.1380743980407715
    9. ' append' → logprob: -5.5130743980407715
    10. 's' → logprob: -5.8880743980407715

Token 247: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.0006096287979744375
    2. 'out' → logprob: -7.625609397888184
    3. 'outer' → logprob: -9.125609397888184
    4. 'outez' → logprob: -11.500609397888184
    5. 'uste' → logprob: -13.750609397888184
    6. 'outes' → logprob: -13.875609397888184
    7. 'o' → logprob: -15.375609397888184
    8. 'p' → logprob: -16.1256103515625
    9. 'ointe' → logprob: -16.8756103515625
    10. 'ust' → logprob: -17.3756103515625

Token 248: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1219930350780487
    2. '           ' → logprob: -2.621993064880371
    3. '   ' → logprob: -3.496993064880371
    4. ' to' → logprob: -5.496993064880371
    5. ' au' → logprob: -5.871993064880371
    6. ' dans' → logprob: -6.746993064880371
    7. ' basis' → logprob: -6.996993064880371
    8. '       ' → logprob: -7.121993064880371
    9. 'à' → logprob: -7.246993064880371
    10. '    ' → logprob: -8.496993064880371

Token 249: ' la' (ID: 557)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.1628345549106598
    2. ' basis' → logprob: -1.9128345251083374
    3. '   ' → logprob: -6.287834644317627
    4. 'la' → logprob: -8.412834167480469
    5. ' la' → logprob: -8.537834167480469
    6. '_basis' → logprob: -8.912834167480469
    7. 'the' → logprob: -9.287834167480469
    8. 'base' → logprob: -10.787834167480469
    9. ' ' → logprob: -11.037834167480469
    10. 'l' → logprob: -11.287834167480469

Token 250: ' base' (ID: 3611)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.020255377516150475
    2. ' basis' → logprob: -4.3952555656433105
    3. 'base' → logprob: -4.8952555656433105
    4. ' base' → logprob: -9.645255088806152
    5. '_basis' → logprob: -10.395255088806152
    6. '   ' → logprob: -10.645255088806152
    7. 'bas' → logprob: -10.770255088806152
    8. ' ' → logprob: -10.895255088806152
    9. 'bases' → logprob: -11.457755088806152
    10. '  ' → logprob: -11.645255088806152

Token 251: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2841784656047821
    2. '           ' → logprob: -1.4091784954071045
    3. '        
' → logprob: -6.659178256988525
    4. ',' → logprob: -7.534178256988525
    5. '   ' → logprob: -8.284178733825684
    6. '            
' → logprob: -8.534178733825684
    7. '
' → logprob: -8.784178733825684
    8. '.' → logprob: -9.284178733825684
    9. '       
' → logprob: -9.659178733825684
    10. '        ' → logprob: -9.784178733825684

Token 252: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0192889254540205
    2. ' basis' → logprob: -4.394289016723633
    3. '           ' → logprob: -5.269289016723633
    4. 'basis' → logprob: -7.144289016723633
    5. '        
' → logprob: -7.894289016723633
    6. '   ' → logprob: -8.644289016723633
    7. '_basis' → logprob: -9.144289016723633
    8. '
' → logprob: -9.644289016723633
    9. '```' → logprob: -10.894289016723633
    10. '    
' → logprob: -11.269289016723633

Token 253: ' basis' (ID: 9571)
  Prédit: ' basis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.6833051443099976
    2. 'basis' (adapté à ' basis') → logprob: -0.8083051443099976
    3. '           ' → logprob: -3.683305263519287
    4. '   ' → logprob: -4.183305263519287
    5. '       ' → logprob: -4.808305263519287
    6. '    ' → logprob: -8.683304786682129
    7. '_basis' → logprob: -8.683304786682129
    8. ' ' → logprob: -9.183304786682129
    9. '  ' → logprob: -9.433304786682129
    10. '               ' → logprob: -9.808304786682129

Token 254: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009126556105911732
    2. '.' → logprob: -7.000912666320801
    3. ' .' → logprob: -14.7509126663208
    4. 'append' → logprob: -14.8759126663208
    5. '.app' → logprob: -15.2509126663208
    6. '.add' → logprob: -17.000911712646484
    7. '.Append' → logprob: -17.500911712646484
    8. '.ap' → logprob: -17.500911712646484
    9. '.extend' → logprob: -17.625911712646484
    10. ' append' → logprob: -17.875911712646484

Token 255: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -2.935296834039036e-06
    2. 'e' → logprob: -13.00000286102295
    3. '(' → logprob: -14.37500286102295
    4. '(
' → logprob: -19.000003814697266
    5. '(a' → logprob: -20.875003814697266
    6. '(i' → logprob: -20.875003814697266
    7. '((' → logprob: -21.000003814697266
    8. ' e' → logprob: -21.250003814697266
    9. ' (' → logprob: -21.375003814697266
    10. '(E' → logprob: -21.625003814697266

Token 256: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007672637701034546
    2. ')
' → logprob: -4.8826727867126465
    3. ' )' → logprob: -10.132672309875488
    4. '   ' → logprob: -11.007672309875488
    5. '       ' → logprob: -12.882672309875488
    6. ')

' → logprob: -12.882672309875488
    7. '))' → logprob: -13.257672309875488
    8. ' )
' → logprob: -13.757672309875488
    9. ')
' → logprob: -14.007672309875488
    10. ' ' → logprob: -15.632672309875488

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02395501546561718
    2. '    
' → logprob: -4.27395486831665
    3. '
' → logprob: -5.52395486831665
    4. ' return' → logprob: -6.02395486831665
    5. 'return' → logprob: -6.14895486831665
    6. '       ' → logprob: -7.77395486831665
    7. '	return' → logprob: -8.148955345153809
    8. '        
' → logprob: -9.273955345153809
    9. ' 
' → logprob: -9.523955345153809
    10. '\n' → logprob: -10.023955345153809

Token 258: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15885195136070251
    2. ' return' → logprob: -2.4088518619537354
    3. '   ' → logprob: -3.1588518619537354
    4. 'basis' → logprob: -4.4088521003723145
    5. ' basis' → logprob: -6.2838521003723145
    6. '
' → logprob: -9.033851623535156
    7. '    
' → logprob: -9.408851623535156
    8. ' ' → logprob: -10.033851623535156
    9. '	return' → logprob: -10.283851623535156
    10. 'b' → logprob: -10.283851623535156

Token 259: ' basis' (ID: 9571)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.4740903675556183
    2. ' basis' → logprob: -0.9740903377532959
    3. '_basis' → logprob: -11.974090576171875
    4. 'sorted' → logprob: -13.099090576171875
    5. ' sorted' → logprob: -13.974090576171875
    6. 'bas' → logprob: -14.099090576171875
    7. 'b' → logprob: -14.349090576171875
    8. ' ' → logprob: -14.349090576171875
    9. '   ' → logprob: -14.849090576171875
    10. 'Basis' → logprob: -14.974090576171875

Token 260: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: ' main' (ID: 2758)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.8808067440986633
    2. ' combine' → logprob: -1.7558066844940186
    3. ' linear' → logprob: -2.2558066844940186
    4. ' compute' → logprob: -2.6308066844940186
    5. ' xor' → logprob: -3.2558066844940186
    6. ' reduce' → logprob: -3.8808066844940186
    7. ' ' → logprob: -4.130806922912598
    8. ' calculate' → logprob: -4.255806922912598
    9. ' find' → logprob: -4.255806922912598
    10. ' union' → logprob: -4.380806922912598

Token 263: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8947292566299438
    2. '(' → logprob: -1.0197292566299438
    3. '_' → logprob: -1.5197292566299438
    4. ' (' → logprob: -5.144729137420654
    5. '_:' → logprob: -6.144729137420654
    6. '_(' → logprob: -7.019729137420654
    7. ' ():' → logprob: -7.144729137420654
    8. 'def' → logprob: -7.894729137420654
    9. '()' → logprob: -7.894729137420654
    10. '(_' → logprob: -8.644729614257812

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2604368031024933
    2. ' a' → logprob: -1.760436773300171
    3. ' import' → logprob: -3.385436773300171
    4. 'a' → logprob: -4.63543701171875
    5. ' n' → logprob: -5.38543701171875
    6. ' input' → logprob: -5.51043701171875
    7. 'import' → logprob: -6.76043701171875
    8. '    ' → logprob: -7.38543701171875
    9. 'n' → logprob: -7.51043701171875
    10. ' data' → logprob: -7.88543701171875

Token 265: ' """
' (ID: 7037)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5416955351829529
    2. ' n' → logprob: -2.0416955947875977
    3. ' import' → logprob: -2.2916955947875977
    4. 'a' → logprob: -2.4166955947875977
    5. '   ' → logprob: -3.5416955947875977
    6. 'n' → logprob: -3.9166955947875977
    7. ' numbers' → logprob: -3.9166955947875977
    8. ' input' → logprob: -4.666695594787598
    9. 'import' → logprob: -4.916695594787598
    10. ' data' → logprob: -5.291695594787598

Token 266: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4335377514362335
    2. ' a' → logprob: -1.9335377216339111
    3. '   ' → logprob: -2.183537721633911
    4. 'import' → logprob: -2.933537721633911
    5. 'n' → logprob: -3.808537721633911
    6. '#' → logprob: -5.18353796005249
    7. ' import' → logprob: -5.30853796005249
    8. ' n' → logprob: -5.80853796005249
    9. ' #' → logprob: -6.93353796005249
    10. 'data' → logprob: -7.18353796005249

Token 267: ' Fonction' (ID: 189149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0794801115989685
    2. 'Calcul' → logprob: -3.5794801712036133
    3. '#' → logprob: -4.329480171203613
    4. ' Calcul' → logprob: -4.829480171203613
    5. 'def' → logprob: -6.079480171203613
    6. ' La' → logprob: -6.204480171203613
    7. ' print' → logprob: -6.204480171203613
    8. 'import' → logprob: -6.579480171203613
    9. ' #' → logprob: -6.579480171203613
    10. 'print' → logprob: -6.704480171203613

Token 268: ' principale' (ID: 68926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6506240367889404
    2. ' principale' → logprob: -1.4006240367889404
    3. ' de' → logprob: -2.4006240367889404
    4. ' main' → logprob: -2.5256240367889404
    5. ' test' → logprob: -3.7756240367889404
    6. ' principal' → logprob: -4.2756242752075195
    7. 'def' → logprob: -5.2756242752075195
    8. ' d' → logprob: -5.5256242752075195
    9. ' ' → logprob: -6.2756242752075195
    10. 'de' → logprob: -6.2756242752075195

Token 269: ' qui' (ID: 2780)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3333950340747833
    2. '():
' → logprob: -2.083395004272461
    3. ':' → logprob: -2.583395004272461
    4. '   ' → logprob: -2.583395004272461
    5. 'def' → logprob: -5.333395004272461
    6. ':
' → logprob: -6.333395004272461
    7. '()' → logprob: -7.083395004272461
    8. ' :' → logprob: -8.833395004272461
    9. '
' → logprob: -9.458395004272461
    10. '```' → logprob: -9.458395004272461

Token 270: ' lit' (ID: 11980)
  Prédit: ' lit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lit' → logprob: -0.15951986610889435
    2. ' récup' → logprob: -3.284519910812378
    3. ':' → logprob: -3.909519910812378
    4. ' lance' → logprob: -4.534519672393799
    5. ' continue' → logprob: -4.659519672393799
    6. ' prend' → logprob: -4.909519672393799
    7. ' reads' → logprob: -5.159519672393799
    8. ' appelle' → logprob: -5.284519672393799
    9. ' demande' → logprob: -5.659519672393799
    10. ' calc' → logprob: -5.784519672393799

Token 271: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.3892462253570557
    2. ' des' → logprob: -1.6392462253570557
    3. ' l' → logprob: -1.7642462253570557
    4. ' les' → logprob: -2.2642462253570557
    5. '   ' → logprob: -2.5142462253570557
    6. '()' → logprob: -2.6392462253570557
    7. ' une' → logprob: -2.7642462253570557
    8. '():' → logprob: -4.014245986938477
    9. ' le' → logprob: -4.639245986938477
    10. ' ' → logprob: -4.889245986938477

Token 272: ' entr' (ID: 7072)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.3311697244644165
    2. ' entr' → logprob: -2.456169605255127
    3. ' nombres' → logprob: -2.706169605255127
    4. ' ent' → logprob: -2.956169605255127
    5. 'n' → logprob: -3.956169605255127
    6. ' inputs' → logprob: -4.206169605255127
    7. ' lignes' → logprob: -4.706169605255127
    8. ' input' → logprob: -4.831169605255127
    9. 'ent' → logprob: -4.956169605255127
    10. 'entrée' → logprob: -5.206169605255127

Token 273: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0016922038048505783
    2. 'ees' → logprob: -6.626692295074463
    3. 'es' → logprob: -8.751691818237305
    4. 'ée' → logprob: -9.126691818237305
    5. '   ' → logprob: -10.501691818237305
    6. 'és' → logprob: -10.501691818237305
    7. 'ies' → logprob: -10.751691818237305
    8. '```' → logprob: -12.501691818237305
    9. 'e' → logprob: -12.876691818237305
    10. '#' → logprob: -13.126691818237305

Token 274: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3898456394672394
    2. ',' → logprob: -1.264845609664917
    3. '()' → logprob: -4.014845848083496
    4. ' ,' → logprob: -4.764845848083496
    5. ' et' → logprob: -5.639845848083496
    6. '():' → logprob: -6.014845848083496
    7. '(),' → logprob: -6.264845848083496
    8. 'import' → logprob: -7.389845848083496
    9. ':' → logprob: -7.514845848083496
    10. '```' → logprob: -7.514845848083496

Token 275: ' effect' (ID: 3159)
  Prédit: ' traite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traite' → logprob: -1.0641974210739136
    2. ' les' → logprob: -1.6891974210739136
    3. ' trie' → logprob: -1.6891974210739136
    4. '   ' → logprob: -2.689197540283203
    5. ' construit' → logprob: -3.064197540283203
    6. ' effect' → logprob: -3.064197540283203
    7. ' calc' → logprob: -3.814197540283203
    8. ' réalise' → logprob: -4.689197540283203
    9. ' complète' → logprob: -4.814197540283203
    10. 'effect' → logprob: -4.814197540283203

Token 276: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.00020377879263833165
    2. 'u' → logprob: -8.625204086303711
    3. 'uate' → logprob: -11.375204086303711
    4. '   ' → logprob: -12.000204086303711
    5. 'ues' → logprob: -13.625204086303711
    6. 'uera' → logprob: -13.875204086303711
    7. 'uer' → logprob: -14.000204086303711
    8. 'ute' → logprob: -14.125204086303711
    9. 'uent' → logprob: -14.250204086303711
    10. 'uez' → logprob: -14.500204086303711

Token 277: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.09664519131183624
    2. ' les' → logprob: -3.3466451168060303
    3. '   ' → logprob: -3.7216451168060303
    4. ' l' → logprob: -4.221645355224609
    5. ' le' → logprob: -4.346645355224609
    6. ' ' → logprob: -6.596645355224609
    7. ' des' → logprob: -6.846645355224609
    8. ' the' → logprob: -7.346645355224609
    9. '    ' → logprob: -7.971645355224609
    10. 'l' → logprob: -7.971645355224609

Token 278: ' transformations' (ID: 94732)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.11470968276262283
    2. ' calcul' → logprob: -2.3647096157073975
    3. ' opérations' → logprob: -4.364709854125977
    4. 'op' → logprob: -7.864709854125977
    5. ' traitements' → logprob: -7.864709854125977
    6. 'import' → logprob: -8.364709854125977
    7. ' appels' → logprob: -8.614709854125977
    8. 'operations' → logprob: -9.239709854125977
    9. 'bases' → logprob: -9.489709854125977
    10. ' calculations' → logprob: -9.864709854125977

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5490905046463013
    2. ' et' → logprob: -1.4240905046463013
    3. '   ' → logprob: -1.7990905046463013
    4. ' ,' → logprob: -4.549090385437012
    5. 'et' → logprob: -5.924090385437012
    6. ' ' → logprob: -7.299090385437012
    7. 'import' → logprob: -7.674090385437012
    8. ' des' → logprob: -7.674090385437012
    9. ' and' → logprob: -7.924090385437012
    10. ' de' → logprob: -8.424090385437012

Token 280: ' et' (ID: 859)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.9462074041366577
    2. '   ' → logprob: -1.0712074041366577
    3. 'et' → logprob: -1.9462074041366577
    4. ' et' → logprob: -2.1962075233459473
    5. 'p' → logprob: -4.571207523345947
    6. ' les' → logprob: -6.946207523345947
    7. ' calc' → logprob: -7.446207523345947
    8. '    ' → logprob: -7.446207523345947
    9. 'and' → logprob: -7.446207523345947
    10. ' and' → logprob: -7.571207523345947

Token 281: ' affiche' (ID: 127479)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.6351990699768066
    2. ' affiche' → logprob: -1.0101990699768066
    3. 'print' → logprob: -3.2601990699768066
    4. '   ' → logprob: -3.2601990699768066
    5. ' imprime' → logprob: -3.7601990699768066
    6. ' print' → logprob: -5.635199069976807
    7. 'im' → logprob: -7.260199069976807
    8. ' calc' → logprob: -8.510198593139648
    9. 'é' → logprob: -9.010198593139648
    10. ' affich' → logprob: -9.135198593139648

Token 282: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.091444969177246
    2. ' la' → logprob: -1.216444969177246
    3. ' les' → logprob: -1.716444969177246
    4. '(' → logprob: -2.341444969177246
    5. ' le' → logprob: -2.966444969177246
    6. '   ' → logprob: -3.966444969177246
    7. '(len' → logprob: -4.841444969177246
    8. '(
' → logprob: -6.341444969177246
    9. ' l' → logprob: -6.716444969177246
    10. '("' → logprob: -6.716444969177246

Token 283: ' résultat' (ID: 62556)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.19022604823112488
    2. ' résultat' → logprob: -2.1902260780334473
    3. 'result' → logprob: -2.8152260780334473
    4. 'res' → logprob: -7.940226078033447
    5. 'r' → logprob: -8.065225601196289
    6. ' résultats' → logprob: -8.565225601196289
    7. ' resultat' → logprob: -8.815225601196289
    8. ' result' → logprob: -8.940225601196289
    9. 'nombre' → logprob: -9.440225601196289
    10. '_result' → logprob: -9.940225601196289

Token 284: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019683727994561195
    2. '():' → logprob: -4.894683837890625
    3. '
' → logprob: -5.269683837890625
    4. '    
' → logprob: -6.769683837890625
    5. '():
' → logprob: -6.769683837890625
    6. ':' → logprob: -7.269683837890625
    7. '):' → logprob: -7.519683837890625
    8. '()' → logprob: -7.644683837890625
    9. '```' → logprob: -7.644683837890625
    10. '.' → logprob: -7.769683837890625

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003413031517993659
    2. '    
' → logprob: -8.125341415405273
    3. '
' → logprob: -10.875341415405273
    4. 'import' → logprob: -12.125341415405273
    5. '    ' → logprob: -12.500341415405273
    6. '```' → logprob: -12.625341415405273
    7. '       ' → logprob: -12.875341415405273
    8. 'n' → logprob: -13.250341415405273
    9. 'def' → logprob: -13.375341415405273
    10. ' 
' → logprob: -13.625341415405273

Token 286: ' Proc' (ID: 61817)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029622502624988556
    2. 'import' → logprob: -6.127962112426758
    3. ' import' → logprob: -8.377962112426758
    4. 'n' → logprob: -8.502962112426758
    5. '    
' → logprob: -9.002962112426758
    6. '```' → logprob: -9.377962112426758
    7. 'a' → logprob: -10.502962112426758
    8. 'input' → logprob: -10.502962112426758
    9. '
' → logprob: -10.877962112426758
    10. 'def' → logprob: -11.127962112426758

Token 287: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.001444164663553238
    2. 'ede' → logprob: -7.251444339752197
    3. 'é' → logprob: -7.376444339752197
    4. 'è' → logprob: -10.126443862915039
    5. 'édé' → logprob: -11.251443862915039
    6. 'e' → logprob: -11.376443862915039
    7. 'ess' → logprob: -11.751443862915039
    8. '\' → logprob: -12.001443862915039
    9. 'éd' → logprob: -12.001443862915039
    10. 'éder' → logprob: -12.376443862915039

Token 288: ' comme' (ID: 7971)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.11802077293395996
    2. '   ' → logprob: -2.74302077293396
    3. ' aux' → logprob: -3.61802077293396
    4. ' au' → logprob: -4.493021011352539
    5. ' ' → logprob: -5.743021011352539
    6. ' par' → logprob: -6.368021011352539
    7. ' a' → logprob: -7.118021011352539
    8. 'à' → logprob: -7.368021011352539
    9. 'aux' → logprob: -8.243021011352539
    10. '  ' → logprob: -8.243021011352539

Token 289: ' suit' (ID: 15170)
  Prédit: ' suit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suit' → logprob: -0.13388539850711823
    2. 's' → logprob: -2.383885383605957
    3. ' ceci' → logprob: -3.883885383605957
    4. 'su' → logprob: -4.883885383605957
    5. '   ' → logprob: -7.008885383605957
    6. ' prévu' → logprob: -7.133885383605957
    7. 'suite' → logprob: -7.258885383605957
    8. ' ça' → logprob: -7.383885383605957
    9. 'ce' → logprob: -8.008885383605957
    10. ' suis' → logprob: -8.758885383605957

Token 290: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.0222722291946411
    2. ':' → logprob: -1.1472722291946411
    3. '   ' → logprob: -1.1472722291946411
    4. '       ' → logprob: -5.897272109985352
    5. '```' → logprob: -7.397272109985352
    6. ' :
' → logprob: -8.022272109985352
    7. '    ' → logprob: -8.147272109985352
    8. ' à' → logprob: -8.397272109985352
    9. ':
' → logprob: -8.522272109985352
    10. '  ' → logprob: -8.772272109985352

Token 291: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14021308720111847
    2. '   ' → logprob: -2.1402130126953125
    3. '    ' → logprob: -4.3902130126953125
    4. '     ' → logprob: -8.515213012695312
    5. '    ' → logprob: -8.640213012695312
    6. '```' → logprob: -9.765213012695312
    7. '      ' → logprob: -9.890213012695312
    8. '        ' → logprob: -9.890213012695312
    9. '	   ' → logprob: -10.015213012695312
    10. '   ' → logprob: -10.640213012695312

Token 292: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7156914472579956
    2. '    ' → logprob: -1.2156914472579956
    3. '       ' → logprob: -1.5906914472579956
    4. '```' → logprob: -5.590691566467285
    5. 'import' → logprob: -6.715691566467285
    6. '1' → logprob: -6.965691566467285
    7. ' import' → logprob: -7.465691566467285
    8. 'def' → logprob: -7.840691566467285
    9. ' ' → logprob: -7.840691566467285
    10. ' input' → logprob: -7.965691566467285

Token 293: '1' (ID: 16)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33081313967704773
    2. '   ' → logprob: -1.4558131694793701
    3. '    ' → logprob: -3.33081316947937
    4. '```' → logprob: -5.205812931060791
    5. '1' → logprob: -5.580812931060791
    6. ' ' → logprob: -7.080812931060791
    7. '     ' → logprob: -7.580812931060791
    8. '        ' → logprob: -7.955812931060791
    9. '           ' → logprob: -8.70581340789795
    10. '"""
' → logprob: -8.95581340789795

Token 294: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3653046488761902
    2. ':' → logprob: -1.615304708480835
    3. ')' → logprob: -2.490304708480835
    4. '.' → logprob: -4.115304470062256
    5. ' :' → logprob: -6.115304470062256
    6. '    ' → logprob: -6.365304470062256
    7. ',' → logprob: -7.240304470062256
    8. '):' → logprob: -7.365304470062256
    9. '```' → logprob: -7.615304470062256
    10. '<|end|>' → logprob: -7.865304470062256

Token 295: ' Lit' (ID: 45595)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6044554114341736
    2. 'n' → logprob: -2.6044554710388184
    3. '   ' → logprob: -2.6044554710388184
    4. ' Lire' → logprob: -2.9794554710388184
    5. ' import' → logprob: -3.4794554710388184
    6. ' read' → logprob: -3.4794554710388184
    7. 'Lire' → logprob: -3.4794554710388184
    8. 'import' → logprob: -3.7294554710388184
    9. ' reads' → logprob: -3.8544554710388184
    10. ' lit' → logprob: -4.354455471038818

Token 296: ' '' (ID: 461)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17788539826869965
    2. '   ' → logprob: -2.6778852939605713
    3. ' la' → logprob: -3.0528852939605713
    4. '    ' → logprob: -3.8028852939605713
    5. ' l' → logprob: -4.55288553237915
    6. ' ' → logprob: -5.55288553237915
    7. ' une' → logprob: -5.92788553237915
    8. ' le' → logprob: -6.42788553237915
    9. ' les' → logprob: -6.80288553237915
    10. ' n' → logprob: -6.80288553237915

Token 297: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0114628616720438
    2. ' n' → logprob: -5.386462688446045
    3. 'int' → logprob: -5.511462688446045
    4. 'import' → logprob: -7.136462688446045
    5. 't' → logprob: -7.261462688446045
    6. '   ' → logprob: -8.136463165283203
    7. 'input' → logprob: -8.386463165283203
    8. '()' → logprob: -8.636463165283203
    9. 'N' → logprob: -9.011463165283203
    10. '1' → logprob: -9.386463165283203

Token 298: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014359652064740658
    2. ''' → logprob: -4.514359474182129
    3. '=int' → logprob: -6.389359474182129
    4. '   ' → logprob: -7.514359474182129
    5. '=' → logprob: -7.764359474182129
    6. ' ' → logprob: -8.764359474182129
    7. ' ='' → logprob: -9.014359474182129
    8. ',' → logprob: -9.139359474182129
    9. ' '' → logprob: -9.764359474182129
    10. '=input' → logprob: -10.014359474182129

Token 299: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025391592644155025
    2. '=int' → logprob: -6.252539157867432
    3. '=' → logprob: -8.62753963470459
    4. '   ' → logprob: -8.87753963470459
    5. ',' → logprob: -9.00253963470459
    6. ' ' → logprob: -10.00253963470459
    7. '<|end|>' → logprob: -10.37753963470459
    8. 'n' → logprob: -11.00253963470459
    9. '=input' → logprob: -11.25253963470459
    10. '  ' → logprob: -11.50253963470459

Token 300: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.24267594516277313
    2. 'a' → logprob: -2.367676019668579
    3. ' a' → logprob: -2.992676019668579
    4. ' l' → logprob: -3.242676019668579
    5. ' '' → logprob: -4.36767578125
    6. ' le' → logprob: -5.74267578125
    7. 'la' → logprob: -5.74267578125
    8. ' ' → logprob: -5.99267578125
    9. 'l' → logprob: -5.99267578125
    10. ' une' → logprob: -6.36767578125

Token 301: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.35642844438552856
    2. 'liste' → logprob: -1.6064283847808838
    3. 'a' → logprob: -3.231428384780884
    4. 'list' → logprob: -3.606428384780884
    5. ' list' → logprob: -4.231428623199463
    6. 'n' → logprob: -5.106428623199463
    7. ' a' → logprob: -5.356428623199463
    8. ' base' → logprob: -6.606428623199463
    9. 'lst' → logprob: -7.106428623199463
    10. 's' → logprob: -7.481428623199463

Token 302: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9292286038398743
    2. 'a' → logprob: -1.4292285442352295
    3. ' des' → logprob: -2.0542285442352295
    4. ' n' → logprob: -3.1792285442352295
    5. ' of' → logprob: -3.1792285442352295
    6. '_a' → logprob: -3.4292285442352295
    7. ' de' → logprob: -3.9292285442352295
    8. ' =' → logprob: -3.9292285442352295
    9. ' a' → logprob: -4.304228782653809
    10. '(n' → logprob: -4.554228782653809

Token 303: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09013961255550385
    2. ' a' → logprob: -2.965139627456665
    3. 'numbers' → logprob: -4.590139389038086
    4. 'arr' → logprob: -5.215139389038086
    5. 'nums' → logprob: -5.340139389038086
    6. ' numbers' → logprob: -5.465139389038086
    7. ' integers' → logprob: -6.340139389038086
    8. 'values' → logprob: -6.465139389038086
    9. 'ints' → logprob: -7.215139389038086
    10. 'lst' → logprob: -7.340139389038086

Token 304: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6463243365287781
    2. ' =' → logprob: -0.7713243365287781
    3. ''
' → logprob: -4.896324157714844
    4. 'n' → logprob: -5.771324157714844
    5. '   ' → logprob: -7.021324157714844
    6. '',' → logprob: -7.521324157714844
    7. '_n' → logprob: -7.896324157714844
    8. ' ='' → logprob: -8.396324157714844
    9. ''.' → logprob: -9.021324157714844
    10. '
' → logprob: -9.146324157714844

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012349952012300491
    2. 'n' → logprob: -7.501235008239746
    3. '    
' → logprob: -7.876235008239746
    4. '
' → logprob: -9.001235008239746
    5. ' n' → logprob: -10.376235008239746
    6. ' ' → logprob: -10.626235008239746
    7. '2' → logprob: -10.751235008239746
    8. '    ' → logprob: -11.001235008239746
    9. '       ' → logprob: -11.251235008239746
    10. '  ' → logprob: -11.251235008239746

Token 306: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021750046871602535
    2. 'n' → logprob: -6.5021748542785645
    3. '    
' → logprob: -8.127175331115723
    4. '    ' → logprob: -9.627175331115723
    5. ' n' → logprob: -9.627175331115723
    6. '
' → logprob: -10.127175331115723
    7. ')' → logprob: -10.502175331115723
    8. ' ' → logprob: -10.627175331115723
    9. '  ' → logprob: -10.752175331115723
    10. '       ' → logprob: -10.877175331115723

Token 307: '2' (ID: 17)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001966343028470874
    2. 'n' → logprob: -6.75196647644043
    3. '2' → logprob: -7.50196647644043
    4. '  ' → logprob: -9.87696647644043
    5. '       ' → logprob: -10.12696647644043
    6. ' ' → logprob: -10.12696647644043
    7. '
' → logprob: -10.25196647644043
    8. '    ' → logprob: -10.75196647644043
    9. '    
' → logprob: -10.75196647644043
    10. ' n' → logprob: -11.25196647644043

Token 308: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22716489434242249
    2. '.' → logprob: -1.6021648645401
    3. '    ' → logprob: -7.2271647453308105
    4. ' =' → logprob: -7.6021647453308105
    5. '  ' → logprob: -8.602165222167969
    6. ':' → logprob: -9.477165222167969
    7. '=' → logprob: -10.102165222167969
    8. ' ' → logprob: -10.227165222167969
    9. '       ' → logprob: -10.227165222167969
    10. '    
' → logprob: -10.602165222167969

Token 309: ' Cal' (ID: 4453)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4376368820667267
    2. ' a' → logprob: -1.1876368522644043
    3. ' Reads' → logprob: -5.062636852264404
    4. 'Calcul' → logprob: -5.187636852264404
    5. ' n' → logprob: -5.562636852264404
    6. 'n' → logprob: -5.562636852264404
    7. 'Reads' → logprob: -5.687636852264404
    8. '   ' → logprob: -5.937636852264404
    9. ' b' → logprob: -6.562636852264404
    10. 'e' → logprob: -6.687636852264404

Token 310: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.006579654291272163
    2. 'cul' → logprob: -5.131579875946045
    3. 'c' → logprob: -7.881579875946045
    4. '   ' → logprob: -10.006579399108887
    5. 'e' → logprob: -10.131579399108887
    6. 'cules' → logprob: -10.631579399108887
    7. 'culate' → logprob: -10.881579399108887
    8. '```' → logprob: -11.381579399108887
    9. '  ' → logprob: -11.506579399108887
    10. '``' → logprob: -11.506579399108887

Token 311: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.002282884204760194
    2. 'la' → logprob: -7.127283096313477
    3. ' l' → logprob: -8.002283096313477
    4. '_la' → logprob: -8.502283096313477
    5. ' =' → logprob: -8.627283096313477
    6. ' the' → logprob: -9.002283096313477
    7. ' ' → logprob: -9.377283096313477
    8. '_' → logprob: -9.377283096313477
    9. '    ' → logprob: -9.752283096313477
    10. ' le' → logprob: -9.752283096313477

Token 312: ' XOR' (ID: 147209)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.28498023748397827
    2. ' basis' → logprob: -1.534980297088623
    3. '_basis' → logprob: -4.034980297088623
    4. 'base' → logprob: -5.284980297088623
    5. 'a' → logprob: -5.784980297088623
    6. 'bases' → logprob: -7.034980297088623
    7. 'code' → logprob: -7.159980297088623
    8. ' base' → logprob: -7.284980297088623
    9. 'b' → logprob: -7.784980297088623
    10. 'bas' → logprob: -7.909980297088623

Token 313: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4001486003398895
    2. ' des' → logprob: -2.025148630142212
    3. ' of' → logprob: -3.150148630142212
    4. 'de' → logprob: -3.275148630142212
    5. ' basis' → logprob: -3.900148630142212
    6. 'a' → logprob: -4.025148391723633
    7. ' a' → logprob: -4.275148391723633
    8. '_basis' → logprob: -4.400148391723633
    9. 'basis' → logprob: -5.025148391723633
    10. ' total' → logprob: -5.150148391723633

Token 314: ' toute' (ID: 16825)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3071250319480896
    2. ' a' → logprob: -1.4321250915527344
    3. 'all' → logprob: -5.057125091552734
    4. 't' → logprob: -5.932125091552734
    5. ' all' → logprob: -6.057125091552734
    6. ' tous' → logprob: -6.182125091552734
    7. '(a' → logprob: -6.432125091552734
    8. ' les' → logprob: -6.682125091552734
    9. ' la' → logprob: -6.682125091552734
    10. 'n' → logprob: -6.682125091552734

Token 315: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40359196066856384
    2. ' la' → logprob: -1.7785919904708862
    3. ' a' → logprob: -2.5285918712615967
    4. 's' → logprob: -2.6535918712615967
    5. 'la' → logprob: -5.278592109680176
    6. 'l' → logprob: -6.278592109680176
    7. ' l' → logprob: -6.403592109680176
    8. ' liste' → logprob: -6.778592109680176
    9. ' s' → logprob: -7.778592109680176
    10. ' des' → logprob: -7.903592109680176

Token 316: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.09174680709838867
    2. 'liste' → logprob: -2.8417468070983887
    3. 'a' → logprob: -3.7167468070983887
    4. ' a' → logprob: -5.841746807098389
    5. ' list' → logprob: -6.966746807098389
    6. 'list' → logprob: -7.591746807098389
    7. '   ' → logprob: -8.341747283935547
    8. ' ' → logprob: -8.716747283935547
    9. 'Liste' → logprob: -10.341747283935547
    10. 's' → logprob: -10.341747283935547

Token 317: ' (' (ID: 350)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5865539312362671
    2. 'a' → logprob: -1.586553931236267
    3. ' des' → logprob: -1.836553931236267
    4. '   ' → logprob: -2.8365540504455566
    5. '(a' → logprob: -5.336554050445557
    6. ',' → logprob: -5.711554050445557
    7. ' de' → logprob: -6.211554050445557
    8. ' (' → logprob: -6.336554050445557
    9. ' entière' → logprob: -6.711554050445557
    10. ' ' → logprob: -6.836554050445557

Token 318: 'fort' (ID: 3980)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.931170642375946
    2. 'a' → logprob: -1.1811707019805908
    3. ')' → logprob: -2.556170701980591
    4. '   ' → logprob: -2.931170701980591
    5. ' )' → logprob: -2.931170701980591
    6. ' ^' → logprob: -3.056170701980591
    7. ' ' → logprob: -5.431170463562012
    8. '')' → logprob: -5.556170463562012
    9. ' e' → logprob: -5.681170463562012
    10. '^' → logprob: -5.681170463562012

Token 319: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7590639591217041
    2. '   ' → logprob: -1.384063959121704
    3. ')' → logprob: -1.884063959121704
    4. ' )' → logprob: -3.634063959121704
    5. ' xor' → logprob: -3.884063959121704
    6. '_' → logprob: -4.259063720703125
    7. ' XOR' → logprob: -4.384063720703125
    8. '=' → logprob: -5.134063720703125
    9. 'xor' → logprob: -5.134063720703125
    10. ' a' → logprob: -5.259063720703125

Token 320: ' contribution' (ID: 26735)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1015019416809082
    2. ' a' → logprob: -1.9765019416809082
    3. ' )' → logprob: -1.9765019416809082
    4. ')' → logprob: -2.476501941680908
    5. '_' → logprob: -2.976501941680908
    6. ' de' → logprob: -3.226501941680908
    7. ' ' → logprob: -3.351501941680908
    8. 'a' → logprob: -3.351501941680908
    9. ' des' → logprob: -3.476501941680908
    10. ' entière' → logprob: -3.726501941680908

Token 321: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6601553559303284
    2. ')' → logprob: -2.0351552963256836
    3. ' de' → logprob: -2.1601552963256836
    4. 'a' → logprob: -2.6601552963256836
    5. ' a' → logprob: -2.7851552963256836
    6. ' )' → logprob: -3.5351552963256836
    7. ' des' → logprob: -4.660155296325684
    8. ' à' → logprob: -5.410155296325684
    9. ')
' → logprob: -5.535155296325684
    10. '    ' → logprob: -5.535155296325684

Token 322: ' résultat' (ID: 62556)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.4557799100875854
    2. 'a' → logprob: -1.5807799100875854
    3. ' base' → logprob: -2.205780029296875
    4. ' basis' → logprob: -2.705780029296875
    5. 'xor' → logprob: -2.955780029296875
    6. 'base' → logprob: -3.830780029296875
    7. 'code' → logprob: -3.830780029296875
    8. ' XOR' → logprob: -4.080780029296875
    9. ' xor' → logprob: -4.330780029296875
    10. 'basis' → logprob: -4.330780029296875

Token 323: ' final' (ID: 1721)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8032962083816528
    2. ' )' → logprob: -0.8032962083816528
    3. ').' → logprob: -3.6782960891723633
    4. ' ).' → logprob: -3.8032960891723633
    5. '   ' → logprob: -4.178296089172363
    6. ' )
' → logprob: -4.303296089172363
    7. ')
' → logprob: -5.053296089172363
    8. ' ' → logprob: -6.053296089172363
    9. ' de' → logprob: -6.303296089172363
    10. ' ),' → logprob: -6.428296089172363

Token 324: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0681122541427612
    2. '   ' → logprob: -1.6931122541427612
    3. ')
' → logprob: -1.6931122541427612
    4. ').' → logprob: -2.193112373352051
    5. ').
' → logprob: -3.068112373352051
    6. ' )' → logprob: -3.193112373352051
    7. ' )
' → logprob: -3.193112373352051
    8. ' ).' → logprob: -4.443112373352051
    9. ' de' → logprob: -5.318112373352051
    10. ' ).
' → logprob: -5.568112373352051

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01706535369157791
    2. '3' → logprob: -4.767065525054932
    3. '    
' → logprob: -5.642065525054932
    4. '
' → logprob: -5.892065525054932
    5. '   
' → logprob: -7.142065525054932
    6. ' ' → logprob: -8.017065048217773
    7. '  ' → logprob: -8.142065048217773
    8. ' 
' → logprob: -8.517065048217773
    9. '    ' → logprob: -8.517065048217773
    10. '  
' → logprob: -9.142065048217773

Token 326: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012761084362864494
    2. '3' → logprob: -4.512761116027832
    3. '    
' → logprob: -7.387761116027832
    4. '
' → logprob: -7.387761116027832
    5. ' ' → logprob: -9.137761116027832
    6. '    ' → logprob: -9.262761116027832
    7. 'n' → logprob: -9.387761116027832
    8. '  ' → logprob: -10.012761116027832
    9. '       ' → logprob: -10.637761116027832
    10. '   
' → logprob: -10.637761116027832

Token 327: '3' (ID: 18)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022429844364523888
    2. '
' → logprob: -4.397429943084717
    3. '    
' → logprob: -4.897429943084717
    4. '   
' → logprob: -7.022429943084717
    5. ' 
' → logprob: -8.022429466247559
    6. '  
' → logprob: -8.522429466247559
    7. '  ' → logprob: -8.897429466247559
    8. 'n' → logprob: -9.022429466247559
    9. '    ' → logprob: -9.147429466247559
    10. ')' → logprob: -9.522429466247559

Token 328: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.038328684866428375
    2. '   ' → logprob: -3.2883286476135254
    3. '.
' → logprob: -8.913329124450684
    4. '    ' → logprob: -9.538329124450684
    5. '  ' → logprob: -11.163329124450684
    6. '#' → logprob: -11.288329124450684
    7. '    
' → logprob: -11.413329124450684
    8. ' ' → logprob: -11.913329124450684
    9. '
' → logprob: -12.163329124450684
    10. 'import' → logprob: -12.413329124450684

Token 329: ' Fil' (ID: 9170)
  Prédit: ' basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.7921216487884521
    2. ' Cal' → logprob: -1.7921216487884521
    3. ' calc' → logprob: -2.667121648788452
    4. 'basis' → logprob: -2.792121648788452
    5. ' a' → logprob: -3.792121648788452
    6. 'a' → logprob: -3.917121648788452
    7. ' base' → logprob: -4.042121887207031
    8. 'Calcul' → logprob: -4.167121887207031
    9. 'Cal' → logprob: -4.292121887207031
    10. ' lit' → logprob: -4.542121887207031

Token 330: 'tre' (ID: 4086)
  Prédit: 'tre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.015322498977184296
    2. 'trer' → logprob: -4.890322685241699
    3. 'e' → logprob: -5.640322685241699
    4. 're' → logprob: -6.765322685241699
    5. 't' → logprob: -7.015322685241699
    6. 'tr' → logprob: -7.140322685241699
    7. 'ter' → logprob: -7.265322685241699
    8. 'trate' → logprob: -8.5153226852417
    9. 'tra' → logprob: -9.6403226852417
    10. '```' → logprob: -10.2653226852417

Token 331: ' chaque' (ID: 21194)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.3029426336288452
    2. ' la' → logprob: -1.6779426336288452
    3. 'a' → logprob: -1.8029426336288452
    4. '(a' → logprob: -2.1779427528381348
    5. '([' → logprob: -2.3029427528381348
    6. '(lambda' → logprob: -2.4279427528381348
    7. ' a' → logprob: -4.052942752838135
    8. ' [' → logprob: -5.052942752838135
    9. 'les' → logprob: -5.177942752838135
    10. ' out' → logprob: -5.427942752838135

Token 332: ' élément' (ID: 99627)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1464239358901978
    2. ' e' → logprob: -1.6464239358901978
    3. ' élément' → logprob: -1.7714239358901978
    4. 'a' → logprob: -2.021423816680908
    5. ' element' → logprob: -2.271423816680908
    6. 'élé' → logprob: -3.271423816680908
    7. 'element' → logprob: -4.271423816680908
    8. 'e' → logprob: -4.396423816680908
    9. ' x' → logprob: -4.771423816680908
    10. ' elem' → logprob: -5.521423816680908

Token 333: ' pour' (ID: 1930)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7138991355895996
    2. ' a' → logprob: -1.7138991355895996
    3. 'a' → logprob: -1.8388991355895996
    4. '   ' → logprob: -2.8388991355895996
    5. ' dans' → logprob: -3.3388991355895996
    6. ' pour' → logprob: -3.8388991355895996
    7. ' en' → logprob: -4.2138991355896
    8. ' qui' → logprob: -4.7138991355896
    9. 'de' → logprob: -4.7138991355896
    10. ' avec' → logprob: -5.4638991355896

Token 334: ' ann' (ID: 3041)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0981191396713257
    2. ' e' → logprob: -1.4731191396713257
    3. ' a' → logprob: -1.5981191396713257
    4. 'e' → logprob: -3.5981192588806152
    5. ' ' → logprob: -3.5981192588806152
    6. ' conserver' → logprob: -3.9731192588806152
    7. ' x' → logprob: -4.098119258880615
    8. ' b' → logprob: -4.348119258880615
    9. ' garder' → logprob: -4.348119258880615
    10. ' val' → logprob: -4.348119258880615

Token 335: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -5.514650183613412e-05
    2. 'ule' → logprob: -10.250055313110352
    3. 'ul' → logprob: -11.625055313110352
    4. 'u' → logprob: -12.625055313110352
    5. 'ih' → logprob: -13.875055313110352
    6. 'uller' → logprob: -14.000055313110352
    7. 'ulé' → logprob: -14.000055313110352
    8. 'ler' → logprob: -14.125055313110352
    9. 'ulation' → logprob: -14.625055313110352
    10. 'er' → logprob: -14.625055313110352

Token 336: ' les' (ID: 1341)
  Prédit: ' ceux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceux' → logprob: -0.42833414673805237
    2. ' les' → logprob: -1.30333411693573
    3. ' le' → logprob: -3.6783342361450195
    4. ' celui' → logprob: -4.1783342361450195
    5. ' la' → logprob: -4.3033342361450195
    6. ' l' → logprob: -5.4283342361450195
    7. '   ' → logprob: -5.5533342361450195
    8. ' ' → logprob: -6.4283342361450195
    9. 'les' → logprob: -6.5533342361450195
    10. ' son' → logprob: -6.9283342361450195

Token 337: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.7007641196250916
    2. 'élé' → logprob: -1.7007641792297363
    3. ' éléments' → logprob: -1.7007641792297363
    4. 'bits' → logprob: -3.8257641792297363
    5. ' multiples' → logprob: -3.8257641792297363
    6. 'a' → logprob: -3.9507641792297363
    7. ' bit' → logprob: -4.075764179229736
    8. ' elements' → logprob: -4.200764179229736
    9. ' a' → logprob: -5.325764179229736
    10. 'b' → logprob: -5.325764179229736

Token 338: ' déjà' (ID: 21229)
  Prédit: ' inutil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inutil' → logprob: -1.5383789539337158
    2. ' qui' → logprob: -2.038378953933716
    3. ' non' → logprob: -2.413378953933716
    4. ' sup' → logprob: -2.538378953933716
    5. ' les' → logprob: -2.663378953933716
    6. '   ' → logprob: -2.788378953933716
    7. ' ' → logprob: -2.913378953933716
    8. ' de' → logprob: -3.038378953933716
    9. ' set' → logprob: -3.163378953933716
    10. ' à' → logprob: -3.288378953933716

Token 339: ' présents' (ID: 108718)
  Prédit: 'prés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prés' → logprob: -0.8352700471878052
    2. ' présents' → logprob: -0.8352700471878052
    3. 'c' → logprob: -2.7102699279785156
    4. ' pris' → logprob: -4.085269927978516
    5. ' cou' → logprob: -4.460269927978516
    6. 'cou' → logprob: -4.710269927978516
    7. 'pris' → logprob: -4.835269927978516
    8. 'abs' → logprob: -5.460269927978516
    9. 'dans' → logprob: -5.960269927978516
    10. ' couvert' → logprob: -6.210269927978516

Token 340: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.4977264404296875
    2. '   ' → logprob: -1.1227264404296875
    3. 'dans' → logprob: -2.8727264404296875
    4. ' in' → logprob: -5.4977264404296875
    5. ' en' → logprob: -6.6227264404296875
    6. ' ' → logprob: -6.6227264404296875
    7. '  ' → logprob: -6.9977264404296875
    8. '    ' → logprob: -7.2477264404296875
    9. ',' → logprob: -7.7477264404296875
    10. ' chez' → logprob: -8.122726440429688

Token 341: ' '' (ID: 461)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -1.2389434576034546
    2. ' xor' → logprob: -1.6139434576034546
    3. ' result' → logprob: -2.113943576812744
    4. ' basis' → logprob: -2.238943576812744
    5. 'basis' → logprob: -2.238943576812744
    6. 'result' → logprob: -2.613943576812744
    7. ' x' → logprob: -3.988943576812744
    8. 'x' → logprob: -3.988943576812744
    9. ' the' → logprob: -4.113943576812744
    10. ' main' → logprob: -5.113943576812744

Token 342: 'ans' (ID: 616)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.912148118019104
    2. 'xor' → logprob: -0.912148118019104
    3. 'x' → logprob: -2.6621479988098145
    4. ' basis' → logprob: -3.2871479988098145
    5. ' xor' → logprob: -3.2871479988098145
    6. 'result' → logprob: -4.0371479988098145
    7. 'a' → logprob: -4.9121479988098145
    8. 'res' → logprob: -5.5371479988098145
    9. ' x' → logprob: -5.5371479988098145
    10. 'base' → logprob: -6.0371479988098145

Token 343: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6304946541786194
    2. ''' → logprob: -1.6304945945739746
    3. ')' → logprob: -2.5054945945739746
    4. '')
' → logprob: -3.2554945945739746
    5. ' ')
' → logprob: -3.3804945945739746
    6. ' ^' → logprob: -3.6304945945739746
    7. ' ')' → logprob: -3.8804945945739746
    8. '',' → logprob: -4.005494594573975
    9. '   ' → logprob: -4.255494594573975
    10. ')'' → logprob: -4.880494594573975

Token 344: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03729216381907463
    2. ',' → logprob: -4.037292003631592
    3. '.' → logprob: -5.537292003631592
    4. ' et' → logprob: -5.537292003631592
    5. ' avec' → logprob: -6.162292003631592
    6. ' en' → logprob: -6.912292003631592
    7. '    
' → logprob: -6.912292003631592
    8. '    ' → logprob: -6.912292003631592
    9. '       ' → logprob: -7.037292003631592
    10. ' ,' → logprob: -7.412292003631592

Token 345: 'le' (ID: 282)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9955520629882812
    2. ')' → logprob: -1.2455520629882812
    3. ' )' → logprob: -2.2455520629882812
    4. 'a' → logprob: -3.1205520629882812
    5. ' e' → logprob: -3.4955520629882812
    6. 'e' → logprob: -3.4955520629882812
    7. '       ' → logprob: -3.7455520629882812
    8. ' a' → logprob: -3.7455520629882812
    9. ')
' → logprob: -4.495552062988281
    10. ' ^' → logprob: -4.745552062988281

Token 346: ' XOR' (ID: 147209)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^' → logprob: -1.112853765487671
    2. 'a' → logprob: -1.987853765487671
    3. ' )' → logprob: -2.862853765487671
    4. '   ' → logprob: -2.862853765487671
    5. ' e' → logprob: -3.237853765487671
    6. ' ' → logprob: -3.237853765487671
    7. ' =' → logprob: -3.237853765487671
    8. ')' → logprob: -3.487853765487671
    9. ' a' → logprob: -3.612853765487671
    10. ' x' → logprob: -3.737853765487671

Token 347: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0572365522384644
    2. ')' → logprob: -1.4322365522384644
    3. ' ^' → logprob: -1.6822365522384644
    4. ' )' → logprob: -3.432236671447754
    5. ')
' → logprob: -3.557236671447754
    6. ' >>' → logprob: -3.682236671447754
    7. ' des' → logprob: -3.682236671447754
    8. ' de' → logprob: -4.182236671447754
    9. ').' → logprob: -4.432236671447754
    10. '^' → logprob: -4.557236671447754

Token 348: ').
' (ID: 6294)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7686684727668762
    2. ')
' → logprob: -1.3936684131622314
    3. ')' → logprob: -2.1436684131622314
    4. ').
' → logprob: -2.7686684131622314
    5. ').' → logprob: -3.2686684131622314
    6. ' ^' → logprob: -3.8936684131622314
    7. '),' → logprob: -4.5186686515808105
    8. ',' → logprob: -5.0186686515808105
    9. ' )
' → logprob: -5.6436686515808105
    10. ' >>' → logprob: -5.7686686515808105

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004541554022580385
    2. '       ' → logprob: -6.254541397094727
    3. '
' → logprob: -7.629541397094727
    4. ',' → logprob: -7.879541397094727
    5. '    
' → logprob: -8.004541397094727
    6. '.' → logprob: -8.504541397094727
    7. '  ' → logprob: -8.879541397094727
    8. ')' → logprob: -8.879541397094727
    9. ' for' → logprob: -9.129541397094727
    10. 'def' → logprob: -9.254541397094727

Token 350: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005423123482614756
    2. '4' → logprob: -5.505423069000244
    3. '
' → logprob: -7.880423069000244
    4. '       ' → logprob: -8.005423545837402
    5. '    
' → logprob: -8.630423545837402
    6. '  ' → logprob: -8.880423545837402
    7. ' ' → logprob: -9.255423545837402
    8. ')' → logprob: -9.755423545837402
    9. '    ' → logprob: -10.755423545837402
    10. ' ' → logprob: -10.880423545837402

Token 351: '4' (ID: 19)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006578235421329737
    2. '4' → logprob: -6.13157844543457
    3. ' ' → logprob: -6.50657844543457
    4. '       ' → logprob: -7.00657844543457
    5. ' for' → logprob: -7.63157844543457
    6. '  ' → logprob: -8.38157844543457
    7. '
' → logprob: -8.63157844543457
    8. 'def' → logprob: -8.75657844543457
    9. 'for' → logprob: -8.75657844543457
    10. '    ' → logprob: -8.88157844543457

Token 352: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6338237524032593
    2. '.' → logprob: -0.7588237524032593
    3. '    ' → logprob: -7.883823871612549
    4. ':' → logprob: -8.75882339477539
    5. '  ' → logprob: -9.00882339477539
    6. '.
' → logprob: -9.00882339477539
    7. '       ' → logprob: -9.38382339477539
    8. '    
' → logprob: -9.88382339477539
    9. 'a' → logprob: -10.00882339477539
    10. ' ' → logprob: -10.38382339477539

Token 353: ' Cal' (ID: 4453)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.5577477216720581
    2. ' basis' → logprob: -1.057747721672058
    3. ' filtered' → logprob: -4.057747840881348
    4. 'filtered' → logprob: -4.307747840881348
    5. 'a' → logprob: -4.932747840881348
    6. 'base' → logprob: -5.807747840881348
    7. 'Calcul' → logprob: -6.245247840881348
    8. ' a' → logprob: -6.307747840881348
    9. ' new' → logprob: -6.370247840881348
    10. ' Cal' → logprob: -6.557747840881348

Token 354: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.023614628240466118
    2. 'cul' → logprob: -3.7736146450042725
    3. 'c' → logprob: -8.273614883422852
    4. 'ule' → logprob: -10.523614883422852
    5. 'culate' → logprob: -10.773614883422852
    6. 'e' → logprob: -11.648614883422852
    7. 'cules' → logprob: -11.773614883422852
    8. '#' → logprob: -12.273614883422852
    9. '

' → logprob: -12.898614883422852
    10. '\' → logprob: -13.023614883422852

Token 355: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.07744921743869781
    2. ' get' → logprob: -3.202449321746826
    3. 'la' → logprob: -4.077449321746826
    4. 'get' → logprob: -4.702449321746826
    5. '   ' → logprob: -5.077449321746826
    6. '    ' → logprob: -7.577449321746826
    7. '(get' → logprob: -8.077448844909668
    8. ' ' → logprob: -8.827448844909668
    9. '_la' → logprob: -8.827448844909668
    10. ' le' → logprob: -9.952448844909668

Token 356: ' base' (ID: 3611)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.8516293168067932
    2. 'basis' → logprob: -1.7266292572021484
    3. ' get' → logprob: -1.8516292572021484
    4. ' basis' → logprob: -2.4766292572021484
    5. '_basis' → logprob: -2.7266292572021484
    6. 'base' → logprob: -2.9766292572021484
    7. ' base' → logprob: -3.3516292572021484
    8. '_base' → logprob: -6.726629257202148
    9. 'bas' → logprob: -8.101629257202148
    10. '_bas' → logprob: -8.101629257202148

Token 357: ' lin' (ID: 14432)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.9045620560646057
    2. '(filtered' → logprob: -1.279561996459961
    3. 'get' → logprob: -2.529561996459961
    4. '(' → logprob: -3.279561996459961
    5. 'filtered' → logprob: -3.779561996459961
    6. '   ' → logprob: -3.779561996459961
    7. 'de' → logprob: -4.154561996459961
    8. '(filter' → logprob: -4.279561996459961
    9. '([' → logprob: -4.404561996459961
    10. ' =' → logprob: -4.529561996459961

Token 358: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4045017957687378
    2. 'aire' → logprob: -1.1545017957687378
    3. 'ère' → logprob: -4.904501914978027
    4. 'ére' → logprob: -5.529501914978027
    5. 'ière' → logprob: -6.029501914978027
    6. 'e' → logprob: -6.779501914978027
    7. '__' → logprob: -7.404501914978027
    8. 'ée' → logprob: -7.529501914978027
    9. '   ' → logprob: -7.779501914978027
    10. 'è' → logprob: -9.154501914978027

Token 359: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.0003613256849348545
    2. 'ère' → logprob: -8.000361442565918
    3. '__' → logprob: -12.125361442565918
    4. 'are' → logprob: -12.500361442565918
    5. 'ére' → logprob: -12.625361442565918
    6. '   ' → logprob: -13.250361442565918
    7. 'e' → logprob: -13.375361442565918
    8. 'ière' → logprob: -13.500361442565918
    9. 'ire' → logprob: -13.625361442565918
    10. 'ale' → logprob: -14.000361442565918

Token 360: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3257025480270386
    2. ' de' → logprob: -1.7007025480270386
    3. ' filtr' → logprob: -2.325702667236328
    4. ' des' → logprob: -2.450702667236328
    5. 'de' → logprob: -2.825702667236328
    6. ' restante' → logprob: -3.200702667236328
    7. '(filtered' → logprob: -3.325702667236328
    8. 'filtered' → logprob: -3.450702667236328
    9. 're' → logprob: -3.575702667236328
    10. ' filtered' → logprob: -4.075702667236328

Token 361: ' éléments' (ID: 57375)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.8349457383155823
    2. '[a' → logprob: -1.4599456787109375
    3. 'a' → logprob: -2.9599456787109375
    4. 'filtered' → logprob: -2.9599456787109375
    5. '[' → logprob: -3.0849456787109375
    6. 'b' → logprob: -3.4599456787109375
    7. '[b' → logprob: -3.4599456787109375
    8. 'e' → logprob: -3.9599456787109375
    9. ' filtered' → logprob: -4.2099456787109375
    10. ' [' → logprob: -4.3349456787109375

Token 362: ' filtr' (ID: 71370)
  Prédit: ' filtr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' filtr' → logprob: -0.34616735577583313
    2. ' rest' → logprob: -1.5961673259735107
    3. 'rest' → logprob: -3.3461673259735107
    4. '   ' → logprob: -4.34616756439209
    5. 'fil' → logprob: -5.22116756439209
    6. ' filt' → logprob: -5.22116756439209
    7. ' filtered' → logprob: -5.47116756439209
    8. 'filtered' → logprob: -5.72116756439209
    9. '[i' → logprob: -5.97116756439209
    10. ' mod' → logprob: -5.97116756439209

Token 363: 'és' (ID: 1756)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.19591939449310303
    2. '   ' → logprob: -2.9459195137023926
    3. '[i' → logprob: -3.4459195137023926
    4. '[' → logprob: -4.195919513702393
    5. '[a' → logprob: -4.195919513702393
    6. '(e' → logprob: -4.320919513702393
    7. 'e' → logprob: -4.945919513702393
    8. '       ' → logprob: -5.320919513702393
    9. ']' → logprob: -5.570919513702393
    10. 'er' → logprob: -5.695919513702393

Token 364: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14781738817691803
    2. ' filtr' → logprob: -2.897817373275757
    3. ' filtered' → logprob: -3.522817373275757
    4. 'filtered' → logprob: -3.772817373275757
    5. ',' → logprob: -5.022817611694336
    6. '(filtered' → logprob: -5.022817611694336
    7. ' filt' → logprob: -5.897817611694336
    8. ' (' → logprob: -6.272817611694336
    9. ' rest' → logprob: -6.522817611694336
    10. ' et' → logprob: -7.022817611694336

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033620083704590797
    2. '    
' → logprob: -6.12836217880249
    3. '
' → logprob: -7.00336217880249
    4. '<|end|>' → logprob: -9.253361701965332
    5. 'def' → logprob: -10.003361701965332
    6. '   
' → logprob: -10.753361701965332
    7. 'import' → logprob: -11.003361701965332
    8. ')' → logprob: -11.503361701965332
    9. '  
' → logprob: -11.503361701965332
    10. '#' → logprob: -11.503361701965332

Token 366: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030396245419979095
    2. '    
' → logprob: -6.128039836883545
    3. '
' → logprob: -7.253039836883545
    4. 'import' → logprob: -10.253039360046387
    5. 'def' → logprob: -10.753039360046387
    6. '   
' → logprob: -10.753039360046387
    7. '  
' → logprob: -11.503039360046387
    8. 'n' → logprob: -12.003039360046387
    9. 'a' → logprob: -12.378039360046387
    10. '       ' → logprob: -12.378039360046387

Token 367: '5' (ID: 20)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00602348055690527
    2. '    
' → logprob: -5.631023406982422
    3. '
' → logprob: -6.131023406982422
    4. '   
' → logprob: -10.006023406982422
    5. '    ' → logprob: -10.506023406982422
    6. '<|end|>' → logprob: -10.881023406982422
    7. 'import' → logprob: -11.006023406982422
    8. '#' → logprob: -11.131023406982422
    9. 'def' → logprob: -11.381023406982422
    10. ')' → logprob: -11.631023406982422

Token 368: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003200050676241517
    2. '   ' → logprob: -5.753200054168701
    3. '.
' → logprob: -11.128199577331543
    4. 'def' → logprob: -12.753199577331543
    5. '#' → logprob: -13.878199577331543
    6. 'import' → logprob: -14.003199577331543
    7. '    
' → logprob: -14.753199577331543
    8. '.

' → logprob: -15.065699577331543
    9. '  ' → logprob: -15.128199577331543
    10. ':' → logprob: -15.378199577331543

Token 369: ' Cher' (ID: 48756)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4236036539077759
    2. ' print' → logprob: -1.7986036539077759
    3. ' Cal' → logprob: -1.7986036539077759
    4. '#' → logprob: -3.0486035346984863
    5. 'Cal' → logprob: -3.4236035346984863
    6. ' max' → logprob: -3.5486035346984863
    7. 'max' → logprob: -3.6736035346984863
    8. 'import' → logprob: -4.048603534698486
    9. 'aff' → logprob: -4.048603534698486
    10. ' calc' → logprob: -4.048603534698486

Token 370: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.046869393438100815
    2. 'cher' → logprob: -3.1718692779541016
    3. 'ch' → logprob: -6.171869277954102
    4. 'e' → logprob: -7.421869277954102
    5. '   ' → logprob: -7.421869277954102
    6. 'er' → logprob: -8.546869277954102
    7. 'ches' → logprob: -9.296869277954102
    8. 'r' → logprob: -10.171869277954102
    9. 'chir' → logprob: -10.171869277954102
    10. 'it' → logprob: -10.296869277954102

Token 371: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.30766740441322327
    2. ' le' → logprob: -2.4326674938201904
    3. ' à' → logprob: -2.8076674938201904
    4. ' l' → logprob: -3.1826674938201904
    5. ' une' → logprob: -3.3076674938201904
    6. ' un' → logprob: -4.557667255401611
    7. ' ' → logprob: -5.307667255401611
    8. ' max' → logprob: -5.682667255401611
    9. 'à' → logprob: -5.932667255401611
    10. ' a' → logprob: -6.182667255401611

Token 372: ' plus' (ID: 2932)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.7733901143074036
    2. 'maximum' → logprob: -1.5233900547027588
    3. 'max' → logprob: -1.6483900547027588
    4. ' max' → logprob: -2.273390054702759
    5. ' maximal' → logprob: -4.648390293121338
    6. 'xor' → logprob: -5.523390293121338
    7. 'plus' → logprob: -6.023390293121338
    8. 'minimum' → logprob: -6.523390293121338
    9. ' maximale' → logprob: -6.773390293121338
    10. ' plus' → logprob: -6.773390293121338

Token 373: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.3492894172668457
    2. ' grand' → logprob: -1.2242894172668457
    3. 'gr' → logprob: -7.599289417266846
    4. ' petit' → logprob: -9.974288940429688
    5. 'large' → logprob: -10.099288940429688
    6. 'pet' → logprob: -10.099288940429688
    7. '```' → logprob: -10.224288940429688
    8. ' grande' → logprob: -10.349288940429688
    9. ' large' → logprob: -10.724288940429688
    10. ' haut' → logprob: -11.099288940429688

Token 374: ' XOR' (ID: 147209)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.10847223550081253
    2. ' élément' → logprob: -2.3584723472595215
    3. 'element' → logprob: -5.1084723472595215
    4. 'xor' → logprob: -7.3584723472595215
    5. 'elem' → logprob: -8.358471870422363
    6. 'é' → logprob: -8.358471870422363
    7. 'val' → logprob: -8.483471870422363
    8. ' element' → logprob: -8.858471870422363
    9. 'e' → logprob: -8.983471870422363
    10. 'x' → logprob: -9.483471870422363

Token 375: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.30230221152305603
    2. 'possible' → logprob: -2.177302122116089
    3. ' que' → logprob: -2.802302122116089
    4. ' de' → logprob: -4.302302360534668
    5. ' obtenu' → logprob: -4.927302360534668
    6. 'que' → logprob: -5.302302360534668
    7. ' des' → logprob: -5.427302360534668
    8. 'sub' → logprob: -5.552302360534668
    9. ' achievable' → logprob: -5.552302360534668
    10. 'de' → logprob: -5.677302360534668

Token 376: ' obtenu' (ID: 117330)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.885092556476593
    2. ' possible' → logprob: -0.885092556476593
    3. ' des' → logprob: -3.1350924968719482
    4. ' achievable' → logprob: -3.3850924968719482
    5. 'possible' → logprob: -3.3850924968719482
    6. ' avec' → logprob: -4.635092735290527
    7. ' de' → logprob: -4.635092735290527
    8. ' que' → logprob: -4.885092735290527
    9. ' entre' → logprob: -5.010092735290527
    10. '    
' → logprob: -5.885092735290527

Token 377: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2468764781951904
    2. ' avec' → logprob: -1.3718764781951904
    3. ' par' → logprob: -2.2468764781951904
    4. ' entre' → logprob: -2.4968764781951904
    5. ' ' → logprob: -2.6218764781951904
    6. ' de' → logprob: -3.1218764781951904
    7. ' des' → logprob: -3.6218764781951904
    8. ' à' → logprob: -3.7468764781951904
    9. ' en' → logprob: -3.7468764781951904
    10. ' possible' → logprob: -4.1218767166137695

Token 378: ' combin' (ID: 25307)
  Prédit: ' combin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combin' → logprob: -0.01651076413691044
    2. ' utilisant' → logprob: -5.766510963439941
    3. 'comb' → logprob: -5.766510963439941
    4. 'xor' → logprob: -6.016510963439941
    5. ' xor' → logprob: -6.391510963439941
    6. ' faisant' → logprob: -6.516510963439941
    7. ' comb' → logprob: -7.266510963439941
    8. ' combinaison' → logprob: -7.391510963439941
    9. ' XOR' → logprob: -7.641510963439941
    10. ' x' → logprob: -7.641510963439941

Token 379: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.11319389194250107
    2. 'ais' → logprob: -2.363193988800049
    3. 'a' → logprob: -4.863193988800049
    4. '```' → logprob: -6.363193988800049
    5. 'e' → logprob: -7.113193988800049
    6. 'aison' → logprob: -7.988193988800049
    7. '   ' → logprob: -8.36319351196289
    8. 'ai' → logprob: -8.36319351196289
    9. '#' → logprob: -8.61319351196289
    10. '=' → logprob: -8.61319351196289

Token 380: ' des' (ID: 731)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.10240989923477173
    2. ' la' → logprob: -2.727409839630127
    3. ' des' → logprob: -4.102409839630127
    4. 'les' → logprob: -5.602409839630127
    5. ' basis' → logprob: -6.102409839630127
    6. '   ' → logprob: -6.227409839630127
    7. 'la' → logprob: -6.602409839630127
    8. '    ' → logprob: -7.102409839630127
    9. ' elements' → logprob: -7.227409839630127
    10. ' un' → logprob: -7.352409839630127

Token 381: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.3178110122680664
    2. ' éléments' → logprob: -1.3178110122680664
    3. ' elements' → logprob: -6.567811012268066
    4. 'elements' → logprob: -6.942811012268066
    5. ' élément' → logprob: -7.442811012268066
    6. 'b' → logprob: -7.692811012268066
    7. 'é' → logprob: -7.817811012268066
    8. 'element' → logprob: -9.067811012268066
    9. ' ' → logprob: -9.317811012268066
    10. 'él' → logprob: -9.317811012268066

Token 382: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.013698802329599857
    2. 'de' → logprob: -5.263698577880859
    3. '   ' → logprob: -5.513698577880859
    4. ' possible' → logprob: -5.763698577880859
    5. ' possibles' → logprob: -7.763698577880859
    6. 'possible' → logprob: -8.63869857788086
    7. '    ' → logprob: -8.88869857788086
    8. ' des' → logprob: -9.38869857788086
    9. ' basis' → logprob: -9.88869857788086
    10. ' disponibles' → logprob: -10.26369857788086

Token 383: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.25419554114341736
    2. 'la' → logprob: -1.5041955709457397
    3. ' base' → logprob: -7.754195690155029
    4. 'base' → logprob: -7.754195690155029
    5. 'the' → logprob: -8.004195213317871
    6. ' the' → logprob: -8.504195213317871
    7. 'basis' → logprob: -8.754195213317871
    8. ' basis' → logprob: -8.879195213317871
    9. ' cette' → logprob: -9.129195213317871
    10. ' ' → logprob: -9.254195213317871

Token 384: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.5972031950950623
    2. 'base' → logprob: -0.8472031950950623
    3. 'basis' → logprob: -4.222203254699707
    4. ' basis' → logprob: -5.097203254699707
    5. 'def' → logprob: -9.847203254699707
    6. '_base' → logprob: -9.847203254699707
    7. 'bas' → logprob: -10.097203254699707
    8. '   ' → logprob: -11.222203254699707
    9. 'import' → logprob: -11.222203254699707
    10. ' ' → logprob: -11.347203254699707

Token 385: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03627077117562294
    2. '.' → logprob: -4.286270618438721
    3. ' possible' → logprob: -5.161270618438721
    4. ',' → logprob: -5.411270618438721
    5. '.
' → logprob: -5.411270618438721
    6. 'def' → logprob: -6.786270618438721
    7. 'possible' → logprob: -6.786270618438721
    8. '    
' → logprob: -7.286270618438721
    9. '
' → logprob: -7.536270618438721
    10. ',
' → logprob: -7.661270618438721

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004659425176214427
    2. '
' → logprob: -8.250466346740723
    3. '    
' → logprob: -8.625466346740723
    4. '    ' → logprob: -12.500466346740723
    5. 'def' → logprob: -12.500466346740723
    6. '       ' → logprob: -12.750466346740723
    7. 'import' → logprob: -13.000466346740723
    8. ' 
' → logprob: -13.125466346740723
    9. '```' → logprob: -13.125466346740723
    10. '#' → logprob: -14.125466346740723

Token 387: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013505916576832533
    2. '
' → logprob: -7.001350402832031
    3. '    
' → logprob: -8.251350402832031
    4. 'def' → logprob: -10.001350402832031
    5. '```' → logprob: -10.876350402832031
    6. '#' → logprob: -11.126350402832031
    7. '    ' → logprob: -11.126350402832031
    8. '       ' → logprob: -11.126350402832031
    9. 'import' → logprob: -11.876350402832031
    10. '`' → logprob: -12.001350402832031

Token 388: '6' (ID: 21)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003140520304441452
    2. '
' → logprob: -6.128140449523926
    3. '    
' → logprob: -7.503140449523926
    4. 'def' → logprob: -8.253140449523926
    5. '    ' → logprob: -10.503140449523926
    6. '#' → logprob: -11.128140449523926
    7. '       ' → logprob: -11.253140449523926
    8. '
' → logprob: -11.628140449523926
    9. 'from' → logprob: -11.878140449523926
    10. '   
' → logprob: -12.128140449523926

Token 389: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25267305970191956
    2. '.' → logprob: -1.5026730298995972
    3. 'def' → logprob: -7.752673149108887
    4. '.
' → logprob: -9.627673149108887
    5. '#' → logprob: -10.002673149108887
    6. '    ' → logprob: -10.127673149108887
    7. ' def' → logprob: -10.127673149108887
    8. '  ' → logprob: -10.502673149108887
    9. '    
' → logprob: -10.877673149108887
    10. '
' → logprob: -11.252673149108887

Token 390: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7466497421264648
    2. ' result' → logprob: -2.371649742126465
    3. ' ans' → logprob: -2.621649742126465
    4. ' print' → logprob: -2.996649742126465
    5. ' max' → logprob: -3.496649742126465
    6. 'def' → logprob: -3.746649742126465
    7. ' #' → logprob: -3.871649742126465
    8. ' for' → logprob: -3.871649742126465
    9. 'result' → logprob: -4.121649742126465
    10. ' return' → logprob: -4.121649742126465

Token 391: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.028243109583854675
    2. 'icher' → logprob: -3.778243064880371
    3. 'ic' → logprob: -5.778243064880371
    4. 'iner' → logprob: -7.278243064880371
    5. 'ich' → logprob: -7.653243064880371
    6. 'ine' → logprob: -8.778243064880371
    7. 'i' → logprob: -9.028243064880371
    8. '#' → logprob: -9.403243064880371
    9. 'f' → logprob: -9.528243064880371
    10. 'ichage' → logprob: -9.653243064880371

Token 392: ' le' (ID: 505)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.6950661540031433
    2. '(' → logprob: -0.9450661540031433
    3. '(max' → logprob: -3.320066213607788
    4. '(len' → logprob: -3.445066213607788
    5. '   ' → logprob: -4.570065975189209
    6. '()' → logprob: -4.820065975189209
    7. ' le' → logprob: -4.945065975189209
    8. '(l' → logprob: -5.070065975189209
    9. ' la' → logprob: -6.195065975189209
    10. 'le' → logprob: -6.570065975189209

Token 393: ' résultat' (ID: 62556)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.5245128870010376
    2. ' résultat' → logprob: -1.6495128870010376
    3. ' maximum' → logprob: -1.6495128870010376
    4. 'result' → logprob: -2.399512767791748
    5. 'rés' → logprob: -2.774512767791748
    6. 'maximum' → logprob: -2.899512767791748
    7. ' plus' → logprob: -3.524512767791748
    8. 'plus' → logprob: -3.649512767791748
    9. ' max' → logprob: -3.899512767791748
    10. ' result' → logprob: -4.024512767791748

Token 394: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0546276830136776
    2. '
' → logprob: -3.3046276569366455
    3. ':' → logprob: -4.929627895355225
    4. '.' → logprob: -5.554627895355225
    5. '    
' → logprob: -6.179627895355225
    6. '```' → logprob: -7.054627895355225
    7. '  
' → logprob: -7.929627895355225
    8. ':
' → logprob: -7.929627895355225
    9. '\n' → logprob: -8.554627418518066
    10. '.
' → logprob: -8.679627418518066

Token 395: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18496286869049072
    2. ':' → logprob: -1.9349628686904907
    3. '():' → logprob: -4.559962749481201
    4. '.' → logprob: -5.434962749481201
    5. ':
' → logprob: -6.184962749481201
    6. '()' → logprob: -6.434962749481201
    7. '():
' → logprob: -6.684962749481201
    8. '
' → logprob: -6.934962749481201
    9. '```' → logprob: -7.059962749481201
    10. ' :' → logprob: -7.559962749481201

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014479756355285645
    2. '
' → logprob: -7.251448154449463
    3. '```' → logprob: -7.751448154449463
    4. '    
' → logprob: -8.501447677612305
    5. 'def' → logprob: -10.251447677612305
    6. '"""' → logprob: -10.376447677612305
    7. ':' → logprob: -11.501447677612305
    8. '"""
' → logprob: -11.626447677612305
    9. ')' → logprob: -12.626447677612305
    10. '\' → logprob: -13.126447677612305

Token 397: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010481616482138634
    2. 'def' → logprob: -4.885481834411621
    3. '```' → logprob: -6.260481834411621
    4. '
' → logprob: -7.885481834411621
    5. '"""' → logprob: -8.260481834411621
    6. '    
' → logprob: -9.385481834411621
    7. ' def' → logprob: -10.010481834411621
    8. ':' → logprob: -10.260481834411621
    9. ')' → logprob: -10.510481834411621
    10. '"""
' (adapté à ' """
') → logprob: -10.760481834411621

Token 398: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031091354321688414
    2. 'n' → logprob: -9.000310897827148
    3. '    
' → logprob: -9.250310897827148
    4. '
' → logprob: -9.875310897827148
    5. 'import' → logprob: -10.875310897827148
    6. 'def' → logprob: -11.500310897827148
    7. '```' → logprob: -12.375310897827148
    8. '	n' → logprob: -13.250310897827148
    9. '(n' → logprob: -13.375310897827148
    10. '    ' → logprob: -13.875310897827148

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025449153035879135
    2. 'n' → logprob: -3.77544903755188
    3. ' n' → logprob: -6.275449275970459
    4. 'import' → logprob: -8.1504487991333
    5. '	n' → logprob: -10.5254487991333
    6. ' import' → logprob: -13.1504487991333
    7. '   ' → logprob: -13.7754487991333
    8. '```' → logprob: -15.4004487991333
    9. '    
' → logprob: -15.7754487991333
    10. '       ' → logprob: -16.025449752807617

Token 400: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0054897526279091835
    2. '   ' → logprob: -5.505489826202393
    3. 'import' → logprob: -6.630489826202393
    4. ' n' → logprob: -9.380489349365234
    5. '#' (adapté à ' #') → logprob: -12.755489349365234
    6. 'input' → logprob: -13.005489349365234
    7. '```' → logprob: -14.880489349365234
    8. 'from' → logprob: -15.130489349365234
    9. '	n' → logprob: -15.130489349365234
    10. ' import' → logprob: -15.380489349365234

Token 401: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015002441592514515
    2. 'import' → logprob: -4.640002250671387
    3. ' n' → logprob: -5.515002250671387
    4. '   ' → logprob: -6.765002250671387
    5. ' import' → logprob: -10.515002250671387
    6. 'input' → logprob: -11.265002250671387
    7. '```' → logprob: -11.890002250671387
    8. '#' → logprob: -13.140002250671387
    9. '	n' → logprob: -13.390002250671387
    10. ' ' → logprob: -14.390002250671387

Token 402: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.260100781917572
    2. 'n' → logprob: -1.5101008415222168
    3. ' n' → logprob: -5.010100841522217
    4. '(n' → logprob: -7.510100841522217
    5. '    
' → logprob: -7.510100841522217
    6. '
' → logprob: -8.510100364685059
    7. '	n' → logprob: -9.635100364685059
    8. '()' → logprob: -10.885100364685059
    9. 'import' → logprob: -10.885100364685059
    10. ' =' → logprob: -11.260100364685059

Token 403: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3873981535434723
    2. ' n' → logprob: -1.13739812374115
    3. 'int' → logprob: -7.6373982429504395
    4. '   ' → logprob: -10.887397766113281
    5. ' int' → logprob: -10.887397766113281
    6. ' la' → logprob: -12.887397766113281
    7. '	n' → logprob: -13.137397766113281
    8. 'l' → logprob: -13.512397766113281
    9. ' ' → logprob: -15.387397766113281
    10. 'la' → logprob: -15.637397766113281

Token 404: ' taille' (ID: 41644)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01339374203234911
    2. 'int' → logprob: -4.513393878936768
    3. ' n' → logprob: -6.888393878936768
    4. 'input' → logprob: -7.388393878936768
    5. 'import' → logprob: -7.513393878936768
    6. 'ent' → logprob: -9.88839340209961
    7. 'nombre' → logprob: -10.38839340209961
    8. ' input' → logprob: -10.63839340209961
    9. 'entrée' → logprob: -11.01339340209961
    10. ' int' → logprob: -11.63839340209961

Token 405: ' du' (ID: 1462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12355908006429672
    2. '   ' → logprob: -2.74855899810791
    3. ' n' → logprob: -2.99855899810791
    4. '(n' → logprob: -6.24855899810791
    5. ' =' → logprob: -8.12355899810791
    6. '	n' → logprob: -9.87355899810791
    7. '    
' → logprob: -10.99855899810791
    8. ' (' → logprob: -11.24855899810791
    9. '=n' → logprob: -11.49855899810791
    10. '    ' → logprob: -12.24855899810791

Token 406: ' tableau' (ID: 67053)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.43835127353668213
    2. 'n' → logprob: -1.5633512735366821
    3. ' input' → logprob: -2.4383511543273926
    4. 'table' → logprob: -4.063351154327393
    5. 'a' → logprob: -4.188351154327393
    6. ' tableau' → logprob: -4.438351154327393
    7. 'liste' → logprob: -5.938351154327393
    8. 'entrée' → logprob: -5.938351154327393
    9. 'ent' → logprob: -6.313351154327393
    10. 'list' → logprob: -6.438351154327393

Token 407: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06068316474556923
    2. '   ' → logprob: -3.060683250427246
    3. ' n' → logprob: -4.435683250427246
    4. '
' → logprob: -9.060683250427246
    5. '	n' → logprob: -10.185683250427246
    6. '    
' → logprob: -11.185683250427246
    7. '(n' → logprob: -12.685683250427246
    8. '\n' → logprob: -12.935683250427246
    9. '```' → logprob: -14.560683250427246
    10. '  
' → logprob: -14.810683250427246

Token 408: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5046299695968628
    2. '   ' → logprob: -1.0046299695968628
    3. ' n' → logprob: -3.5046300888061523
    4. '	n' → logprob: -10.629630088806152
    5. '    
' → logprob: -12.254630088806152
    6. '
' → logprob: -13.379630088806152
    7. '(n' → logprob: -14.379630088806152
    8. '```' → logprob: -14.504630088806152
    9. '  ' → logprob: -15.004630088806152
    10. '\n' → logprob: -15.129630088806152

Token 409: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.01840721070766449
    2. ' n' → logprob: -4.018407344818115
    3. '   ' → logprob: -8.268406867980957
    4. '	n' → logprob: -14.018406867980957
    5. 'import' → logprob: -18.268407821655273
    6. '    
' → logprob: -19.143407821655273
    7. '```' → logprob: -19.518407821655273
    8. ' ' → logprob: -20.143407821655273
    9. 'try' → logprob: -20.643407821655273
    10. '  ' → logprob: -20.768407821655273

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02980939857661724
    2. '=' → logprob: -3.5298094749450684
    3. '=int' → logprob: -10.27980899810791
    4. ',' → logprob: -11.02980899810791
    5. '   ' → logprob: -11.77980899810791
    6. '=input' → logprob: -14.40480899810791
    7. ' ' → logprob: -16.529809951782227
    8. '  ' → logprob: -17.529809951782227
    9. ' =
' → logprob: -18.279809951782227
    10. ' ' → logprob: -18.279809951782227

Token 411: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47407710552215576
    2. 'int' → logprob: -0.9740771055221558
    3. ' ' → logprob: -16.849077224731445
    4. '[int' → logprob: -17.849077224731445
    5. '(int' → logprob: -17.974077224731445
    6. '	int' → logprob: -18.099077224731445
    7. '   ' → logprob: -18.099077224731445
    8. '=int' → logprob: -18.474077224731445
    9. '<int' → logprob: -19.599077224731445
    10. ' ' → logprob: -19.849077224731445

Token 412: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.347765181795694e-05
    2. 'input' → logprob: -10.000053405761719
    3. '(' → logprob: -11.750053405761719
    4. ' input' → logprob: -17.00005340576172
    5. '()' → logprob: -17.87505340576172
    6. '=input' → logprob: -18.62505340576172
    7. '(
' → logprob: -19.75005340576172
    8. ' (' → logprob: -20.12505340576172
    9. ',input' → logprob: -20.75005340576172
    10. '	input' → logprob: -20.87505340576172

Token 413: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003206711495295167
    2. '()' → logprob: -5.753206729888916
    3. '().' → logprob: -10.753206253051758
    4. '(' → logprob: -12.503206253051758
    5. ' ())' → logprob: -13.253206253051758
    6. '())
' → logprob: -14.128206253051758
    7. '();)' → logprob: -15.003206253051758
    8. ')' → logprob: -15.003206253051758
    9. '(),' → logprob: -15.128206253051758
    10. '()))' → logprob: -15.753206253051758

Token 414: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10453508794307709
    2. 'a' → logprob: -2.4795351028442383
    3. '    
' → logprob: -4.229535102844238
    4. '
' → logprob: -7.229535102844238
    5. ' a' → logprob: -9.104535102844238
    6. '   
' → logprob: -10.979535102844238
    7. ' 
' → logprob: -11.229535102844238
    8. 'n' → logprob: -11.354535102844238
    9. '	a' → logprob: -11.854535102844238
    10. '#' → logprob: -11.979535102844238

Token 415: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20336733758449554
    2. '   ' → logprob: -1.7033673524856567
    3. ' a' → logprob: -6.578367233276367
    4. '    
' → logprob: -7.703367233276367
    5. '  ' → logprob: -10.203367233276367
    6. '	a' → logprob: -10.328367233276367
    7. '   
' → logprob: -11.328367233276367
    8. '    ' → logprob: -11.453367233276367
    9. ' ' → logprob: -11.953367233276367
    10. ' 
' → logprob: -12.203367233276367

Token 416: ' Lecture' (ID: 106534)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00018852073117159307
    2. ' a' → logprob: -8.625188827514648
    3. '   ' → logprob: -12.250188827514648
    4. '#' → logprob: -12.500188827514648
    5. '	a' → logprob: -16.50018882751465
    6. '#a' → logprob: -16.62518882751465
    7. '
' → logprob: -17.00018882751465
    8. ' ' → logprob: -17.25018882751465
    9. '    
' → logprob: -17.37518882751465
    10. 'arr' → logprob: -18.12518882751465

Token 417: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.022234221920371056
    2. 'a' → logprob: -4.6472344398498535
    3. ' de' → logprob: -5.5222344398498535
    4. '   ' → logprob: -5.6472344398498535
    5. 'de' → logprob: -6.2722344398498535
    6. '()
' → logprob: -6.3972344398498535
    7. ' a' → logprob: -8.272233963012695
    8. '().' → logprob: -8.522233963012695
    9. '(a' → logprob: -8.772233963012695
    10. 'des' → logprob: -8.897233963012695

Token 418: ' éléments' (ID: 57375)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22575300931930542
    2. ' a' → logprob: -1.6007530689239502
    3. ' elements' → logprob: -9.100752830505371
    4. 'n' → logprob: -10.225752830505371
    5. 'numbers' → logprob: -10.225752830505371
    6. 'elements' → logprob: -10.350752830505371
    7. ' numbers' → logprob: -10.725752830505371
    8. 'list' → logprob: -10.725752830505371
    9. 'lst' → logprob: -11.600752830505371
    10. ' integers' → logprob: -11.850752830505371

Token 419: ' du' (ID: 1462)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21637597680091858
    2. '   ' → logprob: -1.7163759469985962
    3. ' a' → logprob: -4.341375827789307
    4. '    
' → logprob: -7.091375827789307
    5. '
' → logprob: -7.216375827789307
    6. '	a' → logprob: -8.841376304626465
    7. '()' → logprob: -10.966376304626465
    8. 'n' → logprob: -11.091376304626465
    9. ' 
' → logprob: -11.841376304626465
    10. ' =' → logprob: -11.841376304626465

Token 420: ' tableau' (ID: 67053)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06971565634012222
    2. 'input' → logprob: -3.444715738296509
    3. 'n' → logprob: -4.31971549987793
    4. 'list' → logprob: -5.19471549987793
    5. ' a' → logprob: -5.19471549987793
    6. 'array' → logprob: -6.31971549987793
    7. ' list' → logprob: -6.44471549987793
    8. ' input' → logprob: -6.44471549987793
    9. 'liste' → logprob: -7.06971549987793
    10. ')' → logprob: -7.06971549987793

Token 421: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3210001587867737
    2. ' a' → logprob: -1.821000099182129
    3. '   ' → logprob: -2.196000099182129
    4. '
' → logprob: -7.071000099182129
    5. '    
' → logprob: -8.196000099182129
    6. '	a' → logprob: -8.446000099182129
    7. ' 
' → logprob: -9.946000099182129
    8. ',a' → logprob: -10.821000099182129
    9. '    ' → logprob: -11.321000099182129
    10. ',' → logprob: -11.821000099182129

Token 422: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1626259684562683
    2. ' a' → logprob: -1.912626028060913
    3. '   ' → logprob: -6.037625789642334
    4. '	a' → logprob: -11.537626266479492
    5. '    
' → logprob: -14.662626266479492
    6. '_a' → logprob: -15.037626266479492
    7. ',a' → logprob: -15.037626266479492
    8. '
' → logprob: -15.287626266479492
    9. '#a' → logprob: -15.787626266479492
    10. '[a' → logprob: -16.412626266479492

Token 423: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.023266326636075974
    2. ' a' → logprob: -3.773266315460205
    3. '   ' → logprob: -10.898266792297363
    4. '	a' → logprob: -13.898266792297363
    5. 'list' → logprob: -14.148266792297363
    6. ' list' → logprob: -15.398266792297363
    7. '[a' → logprob: -15.898266792297363
    8. 'arr' → logprob: -16.023265838623047
    9. '*a' → logprob: -16.648265838623047
    10. 'lst' → logprob: -16.773265838623047

Token 424: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141363143920898
    2. '=' → logprob: -1.701413631439209
    3. ' =[' → logprob: -15.326414108276367
    4. '.=' → logprob: -17.826414108276367
    5. '=list' → logprob: -17.951414108276367
    6. '=[]' → logprob: -17.951414108276367
    7. '[' → logprob: -18.451414108276367
    8. ' ' → logprob: -18.701414108276367
    9. ' ' → logprob: -18.826414108276367
    10. '=[' → logprob: -18.951414108276367

Token 425: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00861468818038702
    2. ' list' → logprob: -4.758614540100098
    3. '[list' → logprob: -16.258615493774414
    4. '[' → logprob: -17.258615493774414
    5. '	list' → logprob: -20.633615493774414
    6. 'List' → logprob: -21.383615493774414
    7. '=list' → logprob: -21.508615493774414
    8. '(list' → logprob: -21.758615493774414
    9. 'map' → logprob: -22.258615493774414
    10. ' [' → logprob: -23.258615493774414

Token 426: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.500027656555176
    3. '(int' → logprob: -17.00002670288086
    4. 'map' → logprob: -17.50002670288086
    5. '(input' → logprob: -19.62502670288086
    6. '()' → logprob: -19.75002670288086
    7. '(m' → logprob: -20.00002670288086
    8. '(
' → logprob: -20.25002670288086
    9. '(range' → logprob: -21.00002670288086
    10. ' map' → logprob: -21.25002670288086

Token 427: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007360121817328036
    2. 'int' → logprob: -7.250736236572266
    3. '(' → logprob: -10.625736236572266
    4. ' int' → logprob: -14.375736236572266
    5. '(
' → logprob: -14.875736236572266
    6. ',int' → logprob: -15.375736236572266
    7. '[int' → logprob: -15.625736236572266
    8. '<int' → logprob: -15.750736236572266
    9. '=int' → logprob: -16.000736236572266
    10. '   ' → logprob: -16.375736236572266

Token 428: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04108339920639992
    2. ',input' → logprob: -3.416083335876465
    3. 'input' → logprob: -5.166083335876465
    4. ',' → logprob: -6.666083335876465
    5. '(' → logprob: -7.916083335876465
    6. ' input' → logprob: -10.541083335876465
    7. '   ' → logprob: -11.541083335876465
    8. ' (' → logprob: -11.666083335876465
    9. ' ' → logprob: -12.041083335876465
    10. '	input' → logprob: -12.791083335876465

Token 429: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00015860427811276168
    2. ' input' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.875158309936523
    4. '(input' → logprob: -17.875158309936523
    5. '<input' → logprob: -18.250158309936523
    6. ',input' → logprob: -18.250158309936523
    7. ' ' → logprob: -19.750158309936523
    8. '	input' → logprob: -20.250158309936523
    9. '=input' → logprob: -20.375158309936523
    10. '
' → logprob: -20.625158309936523

Token 430: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.127333340875339e-06
    2. '()' → logprob: -12.625003814697266
    3. '(' → logprob: -14.750003814697266
    4. ' ().' → logprob: -15.500003814697266
    5. '   ' → logprob: -17.250003814697266
    6. ' .' → logprob: -17.375003814697266
    7. '.split' → logprob: -17.500003814697266
    8. 'split' → logprob: -17.500003814697266
    9. 'input' → logprob: -17.625003814697266
    10. '(input' → logprob: -18.125003814697266

Token 431: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005533903022296727
    2. 'strip' → logprob: -7.500553607940674
    3. ' split' → logprob: -15.250553131103516
    4. 'rstrip' → logprob: -16.625553131103516
    5. 'spl' → logprob: -18.250553131103516
    6. '(split' → logprob: -18.250553131103516
    7. ' strip' → logprob: -21.500553131103516
    8. '.split' → logprob: -21.875553131103516
    9. '_split' → logprob: -22.000553131103516
    10. 's' → logprob: -22.125553131103516

Token 432: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00885434728115797
    2. '()' → logprob: -4.758854389190674
    3. '(' → logprob: -9.258853912353516
    4. '())' → logprob: -9.383853912353516
    5. '))' → logprob: -10.508853912353516
    6. '()))
' → logprob: -10.633853912353516
    7. '())))' → logprob: -12.633853912353516
    8. '()));' → logprob: -12.883853912353516
    9. '(),' → logprob: -14.008853912353516
    10. '('' → logprob: -14.258853912353516

Token 433: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5144965052604675
    2. '
' → logprob: -1.5144965648651123
    3. '    
' → logprob: -1.7644965648651123
    4. 'ans' → logprob: -4.639496326446533
    5. '```' → logprob: -8.139496803283691
    6. '   
' → logprob: -8.389496803283691
    7. '  
' → logprob: -8.764496803283691
    8. '
' → logprob: -8.889496803283691
    9. ' ans' → logprob: -9.139496803283691
    10. ' 
' → logprob: -9.514496803283691

Token 434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1429784595966339
    2. 'ans' → logprob: -2.0179784297943115
    3. '    
' → logprob: -9.14297866821289
    4. '
' → logprob: -9.89297866821289
    5. ' ans' → logprob: -9.89297866821289
    6. '#' → logprob: -10.14297866821289
    7. '	ans' → logprob: -10.51797866821289
    8. '   ' → logprob: -11.64297866821289
    9. '```' → logprob: -11.64297866821289
    10. '(ans' → logprob: -12.89297866821289

Token 435: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00011510594777064398
    2. '#' (adapté à ' #') → logprob: -9.625115394592285
    3. '   ' → logprob: -10.000115394592285
    4. ' ans' → logprob: -13.625115394592285
    5. '    
' → logprob: -13.875115394592285
    6. '
' → logprob: -13.875115394592285
    7. 'answer' → logprob: -15.625115394592285
    8. '	ans' → logprob: -15.875115394592285
    9. '(ans' → logprob: -16.50011444091797
    10. 'result' → logprob: -17.37511444091797

Token 436: ' Calcul' (ID: 57243)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.618001053633634e-05
    2. '#' → logprob: -10.750025749206543
    3. ' ans' → logprob: -12.875025749206543
    4. '   ' → logprob: -13.500025749206543
    5. '	ans' → logprob: -15.250025749206543
    6. 'answer' → logprob: -15.625025749206543
    7. '(ans' → logprob: -15.625025749206543
    8. 'ann' → logprob: -16.00002670288086
    9. '
' → logprob: -17.12502670288086
    10. '    
' → logprob: -17.50002670288086

Token 437: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00892961211502552
    2. ' de' → logprob: -5.13392972946167
    3. 'ans' → logprob: -6.63392972946167
    4. 'de' → logprob: -6.88392972946167
    5. ' ans' → logprob: -8.508929252624512
    6. ' du' → logprob: -9.008929252624512
    7. '(ans' → logprob: -9.258929252624512
    8. 'du' → logprob: -9.633929252624512
    9. 'd' → logprob: -10.383929252624512
    10. 's' → logprob: -10.883929252624512

Token 438: ' XOR' (ID: 147209)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.8206473871250637e-05
    2. ' ans' → logprob: -10.750028610229492
    3. 'xor' → logprob: -12.625028610229492
    4. 'from' → logprob: -13.250028610229492
    5. '(ans' → logprob: -14.000028610229492
    6. '	ans' → logprob: -14.750028610229492
    7. 'import' → logprob: -16.625028610229492
    8. 'answer' → logprob: -16.750028610229492
    9. 'x' → logprob: -16.750028610229492
    10. '_ans' → logprob: -17.000028610229492

Token 439: ' total' (ID: 3609)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1773715615272522
    2. 'ans' → logprob: -2.3023715019226074
    3. '   ' → logprob: -3.6773715019226074
    4. 'total' → logprob: -4.052371501922607
    5. ' total' → logprob: -4.552371501922607
    6. '(ans' → logprob: -5.302371501922607
    7. ' of' → logprob: -6.052371501922607
    8. ' de' → logprob: -7.802371501922607
    9. '_ans' → logprob: -7.802371501922607
    10. '	ans' → logprob: -8.302371978759766

Token 440: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4704763889312744
    2. ' ans' → logprob: -1.4704763889312744
    3. 'ans' → logprob: -1.9704763889312744
    4. '(ans' → logprob: -5.345476150512695
    5. '	ans' → logprob: -7.220476150512695
    6. ' =' → logprob: -7.970476150512695
    7. '    
' → logprob: -9.845476150512695
    8. '=' → logprob: -9.845476150512695
    9. '_ans' → logprob: -10.345476150512695
    10. '
' → logprob: -10.720476150512695

Token 441: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012511532753705978
    2. ' a' → logprob: -4.387511730194092
    3. 'ans' → logprob: -14.387511253356934
    4. '   ' → logprob: -14.637511253356934
    5. ' ' → logprob: -14.762511253356934
    6. '	a' → logprob: -16.01251220703125
    7. '_a' → logprob: -16.26251220703125
    8. '(a' → logprob: -16.51251220703125
    9. 'all' → logprob: -16.76251220703125
    10. ' all' → logprob: -17.26251220703125

Token 442: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01076411735266447
    2. ' a' → logprob: -4.635764122009277
    3. 'ans' → logprob: -7.635764122009277
    4. 'array' → logprob: -8.260764122009277
    5. 'liste' → logprob: -9.510764122009277
    6. ' array' → logprob: -10.135764122009277
    7. ' tableau' → logprob: -10.510764122009277
    8. ' ans' → logprob: -11.010764122009277
    9. ' liste' → logprob: -11.385764122009277
    10. ' ' → logprob: -11.385764122009277

Token 443: ';' (ID: 26)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3567737638950348
    2. '   ' → logprob: -1.2317737340927124
    3. ' ans' → logprob: -5.106773853302002
    4. '(ans' → logprob: -6.856773853302002
    5. '	ans' → logprob: -7.731773853302002
    6. '    
' → logprob: -7.731773853302002
    7. '
' → logprob: -8.231773376464844
    8. '_ans' → logprob: -11.731773376464844
    9. '```' → logprob: -11.981773376464844
    10. 'answer' → logprob: -12.856773376464844

Token 444: ' c' (ID: 274)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.21691888570785522
    2. 'ans' → logprob: -1.7169189453125
    3. '   ' → logprob: -4.2169189453125
    4. '    
' → logprob: -8.2169189453125
    5. '	ans' → logprob: -8.5919189453125
    6. '
' → logprob: -9.2169189453125
    7. '(ans' → logprob: -10.0919189453125
    8. '_ans' → logprob: -11.7169189453125
    9. ' 
' → logprob: -11.8419189453125
    10. 'answer' → logprob: -12.2169189453125

Token 445: ''est' (ID: 6616)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.048360005021095276
    2. 'urrent' → logprob: -4.4233598709106445
    3. ' =' → logprob: -4.7983598709106445
    4. '=' → logprob: -4.9233598709106445
    5. '   ' → logprob: -4.9233598709106445
    6. '(ans' → logprob: -5.5483598709106445
    7. '_ans' → logprob: -6.0483598709106445
    8. 'urr' → logprob: -6.4233598709106445
    9. '	ans' → logprob: -6.5483598709106445
    10. ' ans' → logprob: -7.1733598709106445

Token 446: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12084688246250153
    2. ' ans' → logprob: -2.62084698677063
    3. '0' → logprob: -3.49584698677063
    4. '   ' → logprob: -4.870846748352051
    5. ' ' → logprob: -6.245846748352051
    6. 'a' → logprob: -7.995846748352051
    7. '	ans' → logprob: -8.12084674835205
    8. ' a' → logprob: -8.49584674835205
    9. '  ' → logprob: -9.93334674835205
    10. '(ans' → logprob: -10.05834674835205

Token 447: ' contribution' (ID: 26735)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3425900936126709
    2. ' base' → logprob: -2.217590093612671
    3. 'base' → logprob: -2.592590093612671
    4. ' ans' → logprob: -3.467590093612671
    5. 'result' → logprob: -3.717590093612671
    6. 'reduce' → logprob: -4.34259033203125
    7. 'answer' → logprob: -5.09259033203125
    8. ' result' → logprob: -5.09259033203125
    9. 'xor' → logprob: -6.09259033203125
    10. ' reduce' → logprob: -6.09259033203125

Token 448: ' initial' (ID: 4871)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5723844766616821
    2. ' ans' → logprob: -1.5723844766616821
    3. '   ' → logprob: -1.6973844766616821
    4. 'initial' → logprob: -3.9473843574523926
    5. ' initial' → logprob: -4.322384357452393
    6. 'final' → logprob: -5.572384357452393
    7. '_ans' → logprob: -6.197384357452393
    8. ' de' → logprob: -6.322384357452393
    9. ' ' → logprob: -6.697384357452393
    10. ' finale' → logprob: -7.197384357452393

Token 449: 'e' (ID: 68)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032135527580976486
    2. ' ' → logprob: -4.157135486602783
    3. '  ' → logprob: -5.657135486602783
    4. ' de' → logprob: -5.907135486602783
    5. ' =' → logprob: -6.157135486602783
    6. '_' → logprob: -6.532135486602783
    7. 'ante' → logprob: -6.907135486602783
    8. '    ' → logprob: -7.282135486602783
    9. 'ans' → logprob: -7.282135486602783
    10. ' ans' → logprob: -7.532135486602783

Token 450: ' au' (ID: 2791)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6241194009780884
    2. ' ans' → logprob: -0.8741194009780884
    3. '   ' → logprob: -3.124119281768799
    4. '(ans' → logprob: -6.374119281768799
    5. '	ans' → logprob: -7.374119281768799
    6. '_ans' → logprob: -8.124119758605957
    7. ' de' → logprob: -8.999119758605957
    8. ' ' → logprob: -8.999119758605957
    9. '    
' → logprob: -9.999119758605957
    10. ' =' → logprob: -11.124119758605957

Token 451: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005167462397366762
    2. 'result' → logprob: -5.505167484283447
    3. 'answer' → logprob: -7.005167484283447
    4. ' ans' → logprob: -9.255167007446289
    5. 'res' → logprob: -10.130167007446289
    6. 'rés' → logprob: -10.630167007446289
    7. 'xor' → logprob: -12.005167007446289
    8. ' result' → logprob: -12.505167007446289
    9. 'final' → logprob: -13.130167007446289
    10. '#' → logprob: -13.505167007446289

Token 452: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15306136012077332
    2. 'ans' → logprob: -2.0280613899230957
    3. ' ans' → logprob: -4.903061389923096
    4. '
' → logprob: -6.653061389923096
    5. '(ans' → logprob: -7.528061389923096
    6. '	ans' → logprob: -7.528061389923096
    7. '    
' → logprob: -7.653061389923096
    8. '_ans' → logprob: -11.153060913085938
    9. '  ' → logprob: -11.653060913085938
    10. ',' → logprob: -11.778060913085938

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32499822974205017
    2. 'ans' → logprob: -1.4499982595443726
    3. ' ans' → logprob: -3.199998140335083
    4. '
' → logprob: -6.574998378753662
    5. '    
' → logprob: -7.824998378753662
    6. '	ans' → logprob: -8.574997901916504
    7. '(ans' → logprob: -9.074997901916504
    8. '_ans' → logprob: -11.949997901916504
    9. ',' → logprob: -12.324997901916504
    10. ' ' → logprob: -12.324997901916504

Token 454: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00021724513499066234
    2. ' ans' → logprob: -8.87521743774414
    3. '   ' → logprob: -9.50021743774414
    4. '	ans' → logprob: -14.37521743774414
    5. '    
' → logprob: -14.50021743774414
    6. 'answer' → logprob: -14.62521743774414
    7. '(ans' → logprob: -14.75021743774414
    8. '
' → logprob: -15.00021743774414
    9. '_ans' → logprob: -16.25021743774414
    10. 'ann' → logprob: -16.75021743774414

Token 455: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619756355881691
    2. '=' → logprob: -2.8119757175445557
    3. ' ' → logprob: -11.936975479125977
    4. ' ^=' → logprob: -14.311975479125977
    5. '  ' → logprob: -15.311975479125977
    6. ',' → logprob: -15.561975479125977
    7. '   ' → logprob: -15.936975479125977
    8. ' ' → logprob: -16.561975479125977
    9. '_' → logprob: -16.811975479125977
    10. 's' → logprob: -17.936975479125977

Token 456: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20146577060222626
    2. ' ' → logprob: -1.7014657258987427
    3. 'a' → logprob: -9.951465606689453
    4. ' a' → logprob: -12.701465606689453
    5. '   ' → logprob: -13.951465606689453
    6. ' ' → logprob: -15.701465606689453
    7. '  ' → logprob: -15.701465606689453
    8. '
' → logprob: -15.826465606689453
    9. 'n' → logprob: -16.201465606689453
    10. '    ' → logprob: -16.451465606689453

Token 457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.44312788406387e-05
    2. ' ' → logprob: -10.250054359436035
    3. 'a' → logprob: -10.875054359436035
    4. 'reduce' → logprob: -16.75005531311035
    5. '   ' → logprob: -17.87505531311035
    6. 'n' → logprob: -19.50005531311035
    7. ' a' → logprob: -19.75005531311035
    8. '1' → logprob: -19.87505531311035
    9. 'int' → logprob: -20.00005531311035
    10. 'ans' → logprob: -20.00005531311035

Token 458: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7126585841178894
    2. '<|end|>' → logprob: -1.4626586437225342
    3. '^' → logprob: -2.337658643722534
    4. ' ^' → logprob: -2.462658643722534
    5. ' ^=' → logprob: -2.837658643722534
    6. 'for' → logprob: -4.587658405303955
    7. ' for' → logprob: -4.962658405303955
    8. '<|end|>' → logprob: -5.212658405303955
    9. '   ' → logprob: -5.712658405303955
    10. '    
' → logprob: -5.837658405303955

Token 459: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0398783683776855
    2. 'for' → logprob: -1.1648783683776855
    3. '<|end|>' → logprob: -2.1648783683776855
    4. ' ^=' → logprob: -2.4148783683776855
    5. ' ^' → logprob: -3.0398783683776855
    6. '^' → logprob: -3.1648783683776855
    7. '   ' → logprob: -4.1648783683776855
    8. '
' → logprob: -4.1648783683776855
    9. ' ' → logprob: -5.6648783683776855
    10. '<|end|>' → logprob: -6.6648783683776855

Token 460: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5235599279403687
    2. 'for' (adapté à ' for') → logprob: -0.8985599279403687
    3. '   ' → logprob: -7.898560047149658
    4. ' ^' → logprob: -11.1485595703125
    5. '	for' → logprob: -11.3985595703125
    6. '^' → logprob: -11.6485595703125
    7. ' ^=' → logprob: -12.1485595703125
    8. 'e' → logprob: -12.3985595703125
    9. 'a' → logprob: -12.5235595703125
    10. ' ' → logprob: -12.5235595703125

Token 461: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004155806731432676
    2. 'num' → logprob: -6.37915563583374
    3. 'v' → logprob: -6.50415563583374
    4. 'e' → logprob: -8.004156112670898
    5. 'ai' → logprob: -8.254156112670898
    6. 'val' → logprob: -9.004156112670898
    7. 'i' → logprob: -9.004156112670898
    8. ' x' → logprob: -9.504156112670898
    9. 'a' → logprob: -11.004156112670898
    10. 'value' → logprob: -11.254156112670898

Token 462: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062207091599702835
    2. 'in' → logprob: -2.812206983566284
    3. 'n' → logprob: -8.687207221984863
    4. ' ' → logprob: -10.812207221984863
    5. '_' → logprob: -11.187207221984863
    6. 'a' → logprob: -11.812207221984863
    7. 'i' → logprob: -12.312207221984863
    8. 'e' → logprob: -12.812207221984863
    9. '_in' → logprob: -12.812207221984863
    10. ',' → logprob: -12.812207221984863

Token 463: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.054659392684698105
    2. 'range' → logprob: -3.554659366607666
    3. ' range' → logprob: -4.179659366607666
    4. ' a' → logprob: -4.679659366607666
    5. '   ' → logprob: -11.804659843444824
    6. ' ' → logprob: -12.679659843444824
    7. '  ' → logprob: -13.554659843444824
    8. '	a' → logprob: -13.679659843444824
    9. '    ' → logprob: -14.867159843444824
    10. ' xrange' → logprob: -14.929659843444824

Token 464: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020323728676885366
    2. ' ^=' → logprob: -7.002032279968262
    3. ':
' → logprob: -7.502032279968262
    4. '^' → logprob: -7.627032279968262
    5. ' :' → logprob: -10.127032279968262
    6. ':^' → logprob: -10.502032279968262
    7. 'xor' → logprob: -12.252032279968262
    8. '=' → logprob: -13.502032279968262
    9. ' ^' → logprob: -13.627032279968262
    10. '   ' → logprob: -13.627032279968262

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08851403743028641
    2. 'ans' → logprob: -3.0885140895843506
    3. ' ans' → logprob: -3.3385140895843506
    4. '	ans' → logprob: -6.3385138511657715
    5. '   ' → logprob: -6.5885138511657715
    6. '(ans' → logprob: -7.9635138511657715
    7. '^' → logprob: -9.71351432800293
    8. '```' → logprob: -10.58851432800293
    9. '_ans' → logprob: -10.71351432800293
    10. '           ' → logprob: -12.08851432800293

Token 466: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.09004886448383331
    2. 'ans' (adapté à ' ans') → logprob: -2.4650487899780273
    3. '       ' → logprob: -6.965048789978027
    4. '	ans' → logprob: -9.090048789978027
    5. '(ans' → logprob: -10.465048789978027
    6. '           ' → logprob: -11.215048789978027
    7. '_ans' → logprob: -12.340048789978027
    8. '   ' → logprob: -13.090048789978027
    9. '
' → logprob: -13.715048789978027
    10. 'i' → logprob: -14.465048789978027

Token 467: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.2519512474536896
    2. '^' → logprob: -1.5019512176513672
    3. '=' → logprob: -11.001951217651367
    4. ' ^' → logprob: -12.626951217651367
    5. ' ' → logprob: -13.626951217651367
    6. 'ˆ' → logprob: -15.251951217651367
    7. ' ' → logprob: -15.626951217651367
    8. '^)' → logprob: -16.126951217651367
    9. ' =' → logprob: -16.251951217651367
    10. '^{' → logprob: -16.501951217651367

Token 468: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002613358374219388
    2. ' i' → logprob: -8.250261306762695
    3. 'int' → logprob: -19.375261306762695
    4. '   ' → logprob: -19.625261306762695
    5. ' ' → logprob: -20.625261306762695
    6. '	i' → logprob: -20.625261306762695
    7. '(i' → logprob: -20.750261306762695
    8. 'a' → logprob: -21.625261306762695
    9. '_i' → logprob: -21.875261306762695
    10. '{i' → logprob: -22.250261306762695

Token 469: '

' (ID: 279)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.17668727040290833
    2. '
' → logprob: -1.926687240600586
    3. '
    
' → logprob: -4.426687240600586
    4. '   ' → logprob: -6.051687240600586
    5. '   
' → logprob: -7.426687240600586
    6. '        
' → logprob: -8.176687240600586
    7. '    
    
' → logprob: -8.301687240600586
    8. '    
' → logprob: -8.676687240600586
    9. '  
' → logprob: -8.801687240600586
    10. '

' → logprob: -8.926687240600586

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6467351913452148
    2. 'filtered' → logprob: -1.2717351913452148
    3. '    
' → logprob: -2.021735191345215
    4. 'mask' → logprob: -4.146735191345215
    5. ' filtered' → logprob: -4.396735191345215
    6. 'masked' → logprob: -4.646735191345215
    7. 'a' → logprob: -4.646735191345215
    8. '
' → logprob: -5.521735191345215
    9. 'for' → logprob: -6.146735191345215
    10. '#' → logprob: -6.271735191345215

Token 471: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6618930697441101
    2. 'filtered' → logprob: -0.9118930697441101
    3. 'for' → logprob: -3.536893129348755
    4. '   ' → logprob: -4.161892890930176
    5. 'b' → logprob: -4.536892890930176
    6. '#' (adapté à ' #') → logprob: -4.661892890930176
    7. 'masked' → logprob: -4.911892890930176
    8. 'mask' → logprob: -5.661892890930176
    9. '    
' → logprob: -6.286892890930176
    10. 'new' → logprob: -7.161892890930176

Token 472: ' Calcul' (ID: 57243)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.3011320233345032
    2. 'b' → logprob: -2.0511319637298584
    3. 'a' → logprob: -2.1761319637298584
    4. 'for' → logprob: -5.0511322021484375
    5. 'masked' → logprob: -5.9261322021484375
    6. '#' → logprob: -6.5511322021484375
    7. 'f' → logprob: -6.8011322021484375
    8. 'v' → logprob: -6.9261322021484375
    9. 'x' → logprob: -7.1761322021484375
    10. 'tmp' → logprob: -7.3011322021484375

Token 473: ' du' (ID: 1462)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.8144644498825073
    2. 'du' → logprob: -2.064464569091797
    3. 'de' → logprob: -2.314464569091797
    4. ' du' → logprob: -2.939464569091797
    5. 'des' → logprob: -3.189464569091797
    6. '#' → logprob: -3.189464569091797
    7. 'final' → logprob: -3.564464569091797
    8. ' of' → logprob: -3.564464569091797
    9. 'of' → logprob: -3.564464569091797
    10. ' de' → logprob: -3.689464569091797

Token 474: ' masque' (ID: 128511)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.3401971757411957
    2. 'b' → logprob: -2.2151970863342285
    3. 'mask' → logprob: -2.5901970863342285
    4. 'basis' → logprob: -3.9651970863342285
    5. 'masked' → logprob: -4.2151970863342285
    6. 'a' → logprob: -4.5901970863342285
    7. 'base' → logprob: -4.9651970863342285
    8. 'tmp' → logprob: -5.0901970863342285
    9. 'v' → logprob: -5.3401970863342285
    10. 'x' → logprob: -5.4651970863342285

Token 475: ' complément' (ID: 81265)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04893558472394943
    2. '=' → logprob: -3.673935651779175
    3. 'mask' → logprob: -4.173935413360596
    4. '   ' → logprob: -5.423935413360596
    5. ' mask' → logprob: -7.048935413360596
    6. 'for' → logprob: -8.173935890197754
    7. 'filtered' → logprob: -8.173935890197754
    8. 'masked' → logprob: -8.298935890197754
    9. '_mask' → logprob: -8.548935890197754
    10. 'mas' → logprob: -8.923935890197754

Token 476: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.010244712233543396
    2. '   ' → logprob: -5.260244846343994
    3. 'e' → logprob: -6.385244846343994
    4. 'naire' → logprob: -7.010244846343994
    5. '       ' → logprob: -8.135244369506836
    6. ' =' → logprob: -8.260244369506836
    7. '_' → logprob: -8.385244369506836
    8. 'def' → logprob: -8.510244369506836
    9. '=' → logprob: -8.510244369506836
    10. 'ent' → logprob: -8.635244369506836

Token 477: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6289780139923096
    2. ' =' → logprob: -1.1289780139923096
    3. 'mask' → logprob: -2.5039780139923096
    4. ' mask' → logprob: -3.5039780139923096
    5. 'com' → logprob: -4.3789777755737305
    6. '=' → logprob: -4.7539777755737305
    7. ' complementary' → logprob: -6.2539777755737305
    8. ' complement' → logprob: -6.3789777755737305
    9. 'compl' → logprob: -6.5039777755737305
    10. 'comp' → logprob: -7.2539777755737305

Token 478: ' ~' (ID: 6574)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.21812193095684052
    2. ' mask' → logprob: -2.2181220054626465
    3. 'com' → logprob: -3.5931220054626465
    4. '   ' → logprob: -3.8431220054626465
    5. 'mas' → logprob: -4.9681220054626465
    6. 'ans' → logprob: -5.3431220054626465
    7. 'comp' → logprob: -5.3431220054626465
    8. ' complement' → logprob: -5.4681220054626465
    9. 'compl' → logprob: -5.5931220054626465
    10. 'inv' → logprob: -6.0931220054626465

Token 479: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0016520909266546369
    2. ' ans' → logprob: -7.001652240753174
    3. '(ans' → logprob: -7.251652240753174
    4. '(' → logprob: -11.001651763916016
    5. ' (' → logprob: -12.751651763916016
    6. '	ans' → logprob: -13.126651763916016
    7. 'a' → logprob: -13.251651763916016
    8. 'mask' → logprob: -13.251651763916016
    9. '((' → logprob: -13.376651763916016
    10. '   ' → logprob: -14.001651763916016

Token 480: '.' (ID: 13)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.13046540319919586
    2. '&' → logprob: -2.130465507507324
    3. '   ' → logprob: -6.005465507507324
    4. ' &=' → logprob: -8.755465507507324
    5. ')' → logprob: -8.880465507507324
    6. '&amp' → logprob: -8.880465507507324
    7. ',' → logprob: -9.380465507507324
    8. '
' → logprob: -9.630465507507324
    9. ' =' → logprob: -9.880465507507324
    10. ' ' → logprob: -10.130465507507324

Token 481: ' Les' (ID: 7029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8534623980522156
    2. 'filtered' → logprob: -1.6034624576568604
    3. 'mask' → logprob: -1.8534624576568604
    4. ' filtered' → logprob: -2.8534624576568604
    5. ' mask' → logprob: -3.3534624576568604
    6. 'masked' → logprob: -3.3534624576568604
    7. 'a' → logprob: -3.4784624576568604
    8. 'for' → logprob: -4.978462219238281
    9. ' a' → logprob: -5.228462219238281
    10. 'm' → logprob: -5.353462219238281

Token 482: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.7422603964805603
    2. 'élé' → logprob: -1.742260456085205
    3. ' bits' → logprob: -2.492260456085205
    4. 'mas' → logprob: -3.492260456085205
    5. ' éléments' → logprob: -3.492260456085205
    6. 'elements' → logprob: -3.617260456085205
    7. ' elements' → logprob: -3.617260456085205
    8. '#' → logprob: -3.742260456085205
    9. 'filtered' → logprob: -3.742260456085205
    10. 'a' → logprob: -3.867260456085205

Token 483: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8017075657844543
    2. 'à' → logprob: -2.0517075061798096
    3. ' =' → logprob: -2.3017075061798096
    4. 'dé' → logprob: -2.6767075061798096
    5. ' présents' → logprob: -3.1767075061798096
    6. ' qui' → logprob: -3.5517075061798096
    7. ' non' → logprob: -3.9267075061798096
    8. 'non' → logprob: -4.051707744598389
    9. ' déjà' → logprob: -4.051707744598389
    10. 'prés' → logprob: -4.176707744598389

Token 484: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.46799328923225403
    2. '0' → logprob: -1.2179932594299316
    3. ' ' → logprob: -3.4679932594299316
    4. 'ans' → logprob: -4.592993259429932
    5. 'mas' → logprob: -5.217993259429932
    6. 'ann' → logprob: -5.217993259429932
    7. 'z' → logprob: -5.342993259429932
    8. 'comb' → logprob: -6.342993259429932
    9. 'mask' → logprob: -6.842993259429932
    10. 'c' → logprob: -6.967993259429932

Token 485: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.59341961145401
    2. '1' → logprob: -0.84341961145401
    3. 'ans' → logprob: -4.843419551849365
    4. 'z' → logprob: -5.343419551849365
    5. 'mas' → logprob: -7.468419551849365
    6. ' ' → logprob: -7.593419551849365
    7. 'ann' → logprob: -8.593420028686523
    8. 'un' → logprob: -8.593420028686523
    9. 'mask' → logprob: -8.718420028686523
    10. 'False' → logprob: -8.968420028686523

Token 486: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.7299954295158386
    2. 'dans' → logprob: -1.2299954891204834
    3. ' qui' → logprob: -2.8549954891204834
    4. ' in' → logprob: -3.3549954891204834
    5. ' de' → logprob: -3.4799954891204834
    6. '&' → logprob: -3.6049954891204834
    7. ' &' → logprob: -4.729995250701904
    8. 's' → logprob: -4.854995250701904
    9. ' présents' → logprob: -4.854995250701904
    10. ' des' → logprob: -4.979995250701904

Token 487: ' ce' (ID: 2357)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2757717967033386
    2. '~' → logprob: -1.7757718563079834
    3. '(~' → logprob: -3.2757718563079834
    4. ' ans' → logprob: -4.650771617889404
    5. ' ~' → logprob: -5.025771617889404
    6. ' (~' → logprob: -5.025771617889404
    7. '   ' → logprob: -5.275771617889404
    8. 'mask' → logprob: -5.900771617889404
    9. '(ans' → logprob: -6.150771617889404
    10. '`' → logprob: -8.400772094726562

Token 488: ' masque' (ID: 128511)
  Prédit: 'mas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mas' → logprob: -0.12403064966201782
    2. 'mask' → logprob: -2.749030590057373
    3. '~' → logprob: -3.249030590057373
    4. ' masque' → logprob: -4.624030590057373
    5. ' mas' → logprob: -6.874030590057373
    6. ' ~' → logprob: -6.999030590057373
    7. '#' → logprob: -7.124030590057373
    8. ' mask' → logprob: -7.749030590057373
    9. 'ans' → logprob: -9.249031066894531
    10. '   ' → logprob: -9.249031066894531

Token 489: ' indiqu' (ID: 100773)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0428718328475952
    2. '<|end|>' → logprob: -1.1678718328475952
    3. ' &=' → logprob: -2.1678719520568848
    4. ' represent' → logprob: -2.6678719520568848
    5. ' are' → logprob: -3.4178719520568848
    6. ' sont' → logprob: -3.6678719520568848
    7. ' représentent' → logprob: -4.167871952056885
    8. '&' → logprob: -4.292871952056885
    9. '=' → logprob: -4.417871952056885
    10. ' vont' → logprob: -4.417871952056885

Token 490: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0002407282590866089
    2. 'ant' → logprob: -8.625240325927734
    3. '   ' → logprob: -9.875240325927734
    4. '       ' → logprob: -13.375240325927734
    5. 'quent' → logprob: -13.375240325927734
    6. 'e' → logprob: -13.750240325927734
    7. '#' → logprob: -13.750240325927734
    8. 'sent' → logprob: -14.125240325927734
    9. '```' → logprob: -14.250240325927734
    10. 'er' → logprob: -14.375240325927734

Token 491: ' les' (ID: 1341)
  Prédit: ' ceux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceux' → logprob: -1.0113856792449951
    2. ' les' → logprob: -1.5113856792449951
    3. ' des' → logprob: -1.8863856792449951
    4. 'les' → logprob: -2.261385679244995
    5. ' bits' → logprob: -2.761385679244995
    6. 'bits' → logprob: -3.386385679244995
    7. 'des' → logprob: -4.136385917663574
    8. 'ans' → logprob: -4.761385917663574
    9. ' quels' → logprob: -5.011385917663574
    10. ' que' → logprob: -5.136385917663574

Token 492: ' positions' (ID: 15897)
  Prédit: ' bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.526645302772522
    2. 'bits' → logprob: -0.901645302772522
    3. ' positions' → logprob: -6.276645183563232
    4. 'positions' → logprob: -7.026645183563232
    5. '0' → logprob: -8.27664566040039
    6. 'bit' → logprob: -9.02664566040039
    7. ' bit' → logprob: -9.27664566040039
    8. ' ' → logprob: -9.52664566040039
    9. 'b' → logprob: -9.77664566040039
    10. '   ' → logprob: -11.02664566040039

Token 493: ' où' (ID: 15113)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.43653199076652527
    2. ' où' → logprob: -1.5615320205688477
    3. ' non' → logprob: -3.0615320205688477
    4. ' qui' → logprob: -4.436532020568848
    5. 'où' → logprob: -4.561532020568848
    6. 'non' → logprob: -4.686532020568848
    7. '   ' → logprob: -4.811532020568848
    8. ' de' → logprob: -4.936532020568848
    9. ' du' → logprob: -5.061532020568848
    10. ' where' → logprob: -5.186532020568848

Token 494: ' l' (ID: 305)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20907898247241974
    2. ' ans' → logprob: -2.0840790271759033
    3. ' on' → logprob: -3.2090790271759033
    4. 'on' → logprob: -4.834078788757324
    5. ' les' → logprob: -5.959078788757324
    6. ' le' → logprob: -6.084078788757324
    7. '(ans' → logprob: -6.334078788757324
    8. 'les' → logprob: -6.459078788757324
    9. 'le' → logprob: -6.709078788757324
    10. ' nous' → logprob: -7.084078788757324

Token 495: '’on' (ID: 25036)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.2566548585891724
    2. ''on' → logprob: -1.2566548585891724
    3. ''' → logprob: -1.8816548585891724
    4. 'a' → logprob: -2.006654739379883
    5. 'e' → logprob: -2.506654739379883
    6. ''''' → logprob: -3.631654739379883
    7. 'on' → logprob: -5.006654739379883
    8. '')' → logprob: -5.881654739379883
    9. ''''
' → logprob: -6.006654739379883
    10. 'es' → logprob: -6.381654739379883

Token 496: ' veut' (ID: 41653)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.1492386907339096
    2. 'a' → logprob: -3.2742385864257812
    3. 'n' → logprob: -3.3992385864257812
    4. '0' → logprob: -4.149238586425781
    5. ' peut' → logprob: -4.399238586425781
    6. 'do' → logprob: -4.899238586425781
    7. 've' → logprob: -5.399238586425781
    8. 'pour' → logprob: -5.399238586425781
    9. 'can' → logprob: -5.524238586425781
    10. ' n' → logprob: -5.649238586425781

Token 497: ' maxim' (ID: 29045)
  Prédit: 'ann'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ann' → logprob: -1.098205804824829
    2. 'mettre' → logprob: -2.223205804824829
    3. 'forcer' → logprob: -2.473205804824829
    4. 'clear' → logprob: -2.848205804824829
    5. 'é' → logprob: -2.973205804824829
    6. 'con' → logprob: -3.223205804824829
    7. 'eff' → logprob: -3.223205804824829
    8. '0' → logprob: -3.348205804824829
    9. 'g' → logprob: -3.348205804824829
    10. 'z' → logprob: -3.473205804824829

Token 498: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.05550983548164368
    2. 'al' → logprob: -3.1805098056793213
    3. 'er' → logprob: -5.0555100440979
    4. 'um' → logprob: -6.1805100440979
    5. 'izer' → logprob: -6.4305100440979
    6. 'ize' → logprob: -8.180509567260742
    7. 'is' → logprob: -8.430509567260742
    8. 'ser' → logprob: -8.430509567260742
    9. 'aiser' → logprob: -8.680509567260742
    10. 'ier' → logprob: -8.680509567260742

Token 499: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9902756214141846
    2. 'l' → logprob: -1.9902756214141846
    3. '1' → logprob: -2.3652756214141846
    4. 'le' → logprob: -2.4902756214141846
    5. 'a' → logprob: -2.9902756214141846
    6. ' ' → logprob: -3.2402756214141846
    7. ' le' → logprob: -3.2402756214141846
    8. ' ans' → logprob: -3.6152756214141846
    9. ' la' → logprob: -3.8652756214141846
    10. 'les' → logprob: -3.9902756214141846

Token 500: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.37961798906326294
    2. 'X' → logprob: -1.2546179294586182
    3. ' XOR' → logprob: -4.129618167877197
    4. '0' → logprob: -5.504618167877197
    5. ' xor' → logprob: -6.004618167877197
    6. 'x' → logprob: -6.254618167877197
    7. 'rés' → logprob: -6.379618167877197
    8. 'val' → logprob: -6.629618167877197
    9. 'result' → logprob: -7.379618167877197
    10. 'a' → logprob: -8.129617691040039

Token 501: ' restant' (ID: 172358)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5898419618606567
    2. ' =' → logprob: -1.2148419618606567
    3. 'mask' → logprob: -2.089841842651367
    4. '_mask' → logprob: -5.089841842651367
    5. '=' → logprob: -5.714841842651367
    6. ' mask' → logprob: -5.714841842651367
    7. 'com' → logprob: -6.089841842651367
    8. 'mas' → logprob: -6.714841842651367
    9. '    
' → logprob: -6.964841842651367
    10. 'not' → logprob: -6.964841842651367

Token 502: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10566211491823196
    2. ' =' → logprob: -2.6056621074676514
    3. 'mask' → logprob: -4.6056623458862305
    4. '    
' → logprob: -5.2306623458862305
    5. '=' → logprob: -5.7306623458862305
    6. '_mask' → logprob: -5.9806623458862305
    7. ' mask' → logprob: -7.2306623458862305
    8. '.' → logprob: -7.3556623458862305
    9. ',' → logprob: -7.4806623458862305
    10. '
' → logprob: -7.9806623458862305

Token 503: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36689823865890503
    2. 'mask' → logprob: -1.6168982982635498
    3. ' mask' → logprob: -2.36689829826355
    4. '    
' → logprob: -5.741898059844971
    5. 'masked' → logprob: -6.366898059844971
    6. ' filtered' → logprob: -6.616898059844971
    7. 'rest' → logprob: -6.616898059844971
    8. ' rest' → logprob: -6.741898059844971
    9. 'filtered' → logprob: -6.741898059844971
    10. '
' → logprob: -7.616898059844971

Token 504: ' k' (ID: 372)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.023604853078722954
    2. 'm' → logprob: -5.273604869842529
    3. 'com' → logprob: -5.648604869842529
    4. 'ms' → logprob: -5.773604869842529
    5. 'rem' → logprob: -6.398604869842529
    6. 'inv' → logprob: -6.648604869842529
    7. 'comp' → logprob: -6.773604869842529
    8. 'masked' → logprob: -6.773604869842529
    9. 'rest' → logprob: -7.398604869842529
    10. 'not' → logprob: -7.648604869842529

Token 505: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025184378027915955
    2. '_mask' → logprob: -4.275184154510498
    3. '=' → logprob: -4.650184154510498
    4. 'mask' → logprob: -6.775184154510498
    5. 'ey' → logprob: -10.025184631347656
    6. 'e' → logprob: -10.025184631347656
    7. '_' → logprob: -10.275184631347656
    8. 'eep' → logprob: -10.650184631347656
    9. '_MASK' → logprob: -11.400184631347656
    10. 'ernel' → logprob: -11.650184631347656

Token 506: ' ~' (ID: 6574)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.22489182651042938
    2. '(~' → logprob: -2.3498919010162354
    3. '[' → logprob: -2.9748919010162354
    4. 'ans' → logprob: -3.0998919010162354
    5. '[]
' → logprob: -6.099891662597656
    6. ' ~' → logprob: -6.474891662597656
    7. '(ans' → logprob: -6.474891662597656
    8. '[]' → logprob: -6.599891662597656
    9. '((' → logprob: -6.724891662597656
    10. '0' → logprob: -7.224891662597656

Token 507: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.4121114822482923e-06
    2. '(ans' → logprob: -13.250003814697266
    3. ' ans' → logprob: -13.625003814697266
    4. '	ans' → logprob: -15.875003814697266
    5. '   ' → logprob: -16.125003814697266
    6. 'a' → logprob: -16.875003814697266
    7. '0' → logprob: -17.000003814697266
    8. ' ' → logprob: -18.375003814697266
    9. 'anst' → logprob: -18.500003814697266
    10. '(' → logprob: -18.625003814697266

Token 508: '
    
' (ID: 15698)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.025876741856336594
    2. '&' → logprob: -4.275876522064209
    3. '   ' → logprob: -5.400876522064209
    4. '<|end|>' → logprob: -5.775876522064209
    5. '
' → logprob: -6.650876522064209
    6. ' 
' → logprob: -7.025876522064209
    7. '    
' → logprob: -7.150876522064209
    8. '<|end|>' → logprob: -8.150876998901367
    9. '+' → logprob: -9.275876998901367
    10. '&nbsp' → logprob: -9.400876998901367

Token 509: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08380052447319031
    2. 'a' → logprob: -3.4588005542755127
    3. '    
' → logprob: -3.4588005542755127
    4. 'filtered' → logprob: -4.833800315856934
    5. ' a' → logprob: -5.958800315856934
    6. ' filtered' → logprob: -6.333800315856934
    7. ' for' → logprob: -6.458800315856934
    8. 'for' → logprob: -7.083800315856934
    9. ' 
' → logprob: -7.583800315856934
    10. '   
' → logprob: -7.958800315856934

Token 510: ' #' (ID: 1069)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.2982262969017029
    2. 'b' → logprob: -1.6732263565063477
    3. 'a' → logprob: -2.9232263565063477
    4. '   ' → logprob: -5.048226356506348
    5. 'for' → logprob: -5.798226356506348
    6. 'masked' → logprob: -5.923226356506348
    7. '#' (adapté à ' #') → logprob: -6.423226356506348
    8. ' filtered' → logprob: -6.798226356506348
    9. 'f' → logprob: -7.673226356506348
    10. 'mask' → logprob: -8.298226356506348

Token 511: ' Fil' (ID: 9170)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.2402038723230362
    2. 'b' → logprob: -1.865203857421875
    3. 'a' → logprob: -2.990203857421875
    4. 'masked' → logprob: -5.865203857421875
    5. '#' → logprob: -6.490203857421875
    6. ' filtered' → logprob: -6.490203857421875
    7. 'mask' → logprob: -7.240203857421875
    8. 'for' → logprob: -8.240203857421875
    9. 'f' → logprob: -8.240203857421875
    10. 'fil' → logprob: -8.490203857421875

Token 512: 'tr' (ID: 371)
  Prédit: 'tered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tered' → logprob: -0.9169782996177673
    2. 'ter' → logprob: -1.666978359222412
    3. 'tre' → logprob: -1.916978359222412
    4. 'trer' → logprob: -2.041978359222412
    5. 'tr' → logprob: -2.791978359222412
    6. 't' → logprob: -3.291978359222412
    7. 'tré' → logprob: -3.666978359222412
    8. '#' → logprob: -6.291978359222412
    9. ' =' → logprob: -6.666978359222412
    10. '_a' → logprob: -7.416978359222412

Token 513: 'age' (ID: 477)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -1.5722142457962036
    2. 'er' → logprob: -1.9472142457962036
    3. 'tered' → logprob: -1.9472142457962036
    4. 'ered' → logprob: -2.072214126586914
    5. 'ter' → logprob: -2.197214126586914
    6. 'tr' → logprob: -2.947214126586914
    7. 'trer' → logprob: -2.947214126586914
    8. 'tre' → logprob: -3.197214126586914
    9. 'rer' → logprob: -3.197214126586914
    10. 't' → logprob: -4.197214126586914

Token 514: ' des' (ID: 731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32499808073043823
    2. ' =' → logprob: -1.949998140335083
    3. 'filtered' → logprob: -2.699998140335083
    4. '   ' → logprob: -3.074998140335083
    5. '=' → logprob: -4.449997901916504
    6. ' a' → logprob: -5.574997901916504
    7. '_filtered' → logprob: -6.074997901916504
    8. ' filtered' → logprob: -7.324997901916504
    9. 'b' → logprob: -7.449997901916504
    10. 'f' → logprob: -7.824997901916504

Token 515: ' éléments' (ID: 57375)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10151597112417221
    2. 'i' → logprob: -3.476516008377075
    3. '[i' → logprob: -3.476516008377075
    4. '[x' → logprob: -4.351515769958496
    5. 'e' → logprob: -4.726515769958496
    6. '(x' → logprob: -5.851515769958496
    7. 'a' → logprob: -5.976515769958496
    8. '[e' → logprob: -6.476515769958496
    9. '[(' → logprob: -6.601515769958496
    10. '[a' → logprob: -6.976515769958496

Token 516: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01565515249967575
    2. '   ' → logprob: -5.265655040740967
    3. '=' → logprob: -5.890655040740967
    4. 'a' → logprob: -5.890655040740967
    5. 'filtered' → logprob: -6.015655040740967
    6. ' a' → logprob: -7.640655040740967
    7. ' filtr' → logprob: -7.765655040740967
    8. 'f' → logprob: -8.015655517578125
    9. ' filtered' → logprob: -8.015655517578125
    10. '_filtered' → logprob: -8.515655517578125

Token 517: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.419983446598053
    2. 'filtered' → logprob: -1.6699833869934082
    3. 'b' → logprob: -2.669983386993408
    4. '   ' → logprob: -3.294983386993408
    5. ' a' → logprob: -3.794983386993408
    6. ' filtered' → logprob: -4.169983386993408
    7. '[a' → logprob: -5.794983386993408
    8. ' b' → logprob: -5.794983386993408
    9. ' [' → logprob: -7.294983386993408
    10. 'f' → logprob: -7.419983386993408

Token 518: ' garde' (ID: 65309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6446986198425293
    2. ' =' → logprob: -0.7696986198425293
    3. 'filtered' → logprob: -5.394698619842529
    4. 'a' → logprob: -5.769698619842529
    5. '=[]' → logprob: -6.769698619842529
    6. ' filtre' → logprob: -7.019698619842529
    7. 'fil' → logprob: -7.394698619842529
    8. 'f' → logprob: -8.394699096679688
    9. '=[' → logprob: -8.394699096679688
    10. '=a' → logprob: -8.769699096679688

Token 519: ' uniquement' (ID: 65527)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6554772257804871
    2. '[e' → logprob: -1.2804772853851318
    3. '[a' → logprob: -3.280477285385132
    4. '[(' → logprob: -3.405477285385132
    5. 'a' → logprob: -3.530477285385132
    6. 'i' → logprob: -3.780477285385132
    7. 'e' → logprob: -4.155477046966553
    8. '[x' → logprob: -4.280477046966553
    9. ' [' → logprob: -4.280477046966553
    10. '[' → logprob: -4.780477046966553

Token 520: ' les' (ID: 1341)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3624131381511688
    2. '[e' → logprob: -1.9874131679534912
    3. '[x' → logprob: -3.112413167953491
    4. 'x' → logprob: -3.362413167953491
    5. ' [' → logprob: -3.612413167953491
    6. 'e' → logprob: -3.737413167953491
    7. 'i' → logprob: -4.487412929534912
    8. '[a' → logprob: -5.237412929534912
    9. '[' → logprob: -5.362412929534912
    10. '[(' → logprob: -5.737412929534912

Token 521: ' bits' (ID: 18189)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9457529187202454
    2. 'x' → logprob: -1.3207528591156006
    3. '[e' → logprob: -2.0707528591156006
    4. 'e' → logprob: -2.1957528591156006
    5. '[x' → logprob: -2.5707528591156006
    6. 'i' → logprob: -4.44575309753418
    7. '[' → logprob: -5.44575309753418
    8. '[a' → logprob: -5.69575309753418
    9. ' [' → logprob: -6.19575309753418
    10. '[v' → logprob: -6.94575309753418

Token 522: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.250976324081421
    2. ' des' → logprob: -1.625976324081421
    3. ' non' → logprob: -2.375976324081421
    4. ' =' → logprob: -2.500976324081421
    5. ' qui' → logprob: -2.750976324081421
    6. ' i' → logprob: -3.125976324081421
    7. 'k' → logprob: -3.250976324081421
    8. ' inutil' → logprob: -3.375976324081421
    9. ' k' → logprob: -4.0009765625
    10. 'i' → logprob: -4.1259765625

Token 523: ' l' (ID: 305)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.1710939109325409
    2. 'k' → logprob: -1.9210939407348633
    3. ' n' → logprob: -6.171093940734863
    4. 'n' → logprob: -6.421093940734863
    5. ' on' → logprob: -6.671093940734863
    6. ' sont' → logprob: -7.046093940734863
    7. 's' → logprob: -7.421093940734863
    8. ' ' → logprob: -7.546093940734863
    9. ' not' → logprob: -7.796093940734863
    10. ' a' → logprob: -7.921093940734863

Token 524: '’on' (ID: 25036)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.10868687182664871
    2. 'k' → logprob: -2.608686923980713
    3. 'a' → logprob: -4.483686923980713
    4. ''on' → logprob: -5.358686923980713
    5. '(k' → logprob: -5.608686923980713
    6. ' a' → logprob: -6.233686923980713
    7. 'e' → logprob: -6.233686923980713
    8. '   ' → logprob: -6.358686923980713
    9. ''' → logprob: -7.483686923980713
    10. '=k' → logprob: -7.733686923980713

Token 525: ' peut' (ID: 9216)
  Prédit: ' veut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' veut' → logprob: -1.0187270641326904
    2. ' souhaite' → logprob: -1.0187270641326904
    3. ' n' → logprob: -2.3937270641326904
    4. 'n' → logprob: -2.3937270641326904
    5. 'a' → logprob: -4.5187273025512695
    6. ' a' → logprob: -4.7687273025512695
    7. ' veux' → logprob: -4.7687273025512695
    8. '&' → logprob: -4.7687273025512695
    9. 'k' → logprob: -4.8937273025512695
    10. '<|end|>' → logprob: -4.8937273025512695

Token 526: ' potent' (ID: 35668)
  Prédit: ' maxim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maxim' → logprob: -0.527471661567688
    2. 'max' → logprob: -1.527471661567688
    3. ' optimiser' → logprob: -4.027471542358398
    4. ' act' → logprob: -4.152471542358398
    5. ' explo' → logprob: -4.277471542358398
    6. ' mettre' → logprob: -4.277471542358398
    7. ' max' → logprob: -4.402471542358398
    8. ' set' → logprob: -4.402471542358398
    9. 'act' → logprob: -4.527471542358398
    10. 'mettre' → logprob: -4.652471542358398

Token 527: 'iellement' (ID: 70958)
  Prédit: 'iellement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iellement' → logprob: -0.09779855608940125
    2. 'ier' → logprob: -2.5977985858917236
    3. 'ial' → logprob: -4.7227983474731445
    4. 'iel' → logprob: -5.9727983474731445
    5. 'iels' → logprob: -6.5977983474731445
    6. 'er' → logprob: -6.7227983474731445
    7. 'uellement' → logprob: -7.4727983474731445
    8. 'iaux' → logprob: -7.5977983474731445
    9. '```' → logprob: -7.5977983474731445
    10. 'ielle' → logprob: -7.8477983474731445

Token 528: ' augmenter' (ID: 114677)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6652347445487976
    2. ' maxim' → logprob: -1.5402348041534424
    3. 'act' → logprob: -3.0402348041534424
    4. 'modifier' → logprob: -3.1652348041534424
    5. 'augment' → logprob: -3.5402348041534424
    6. ' utiliser' → logprob: -3.6652348041534424
    7. 'mettre' → logprob: -3.9152348041534424
    8. 'util' → logprob: -4.165234565734863
    9. 'changer' → logprob: -4.415234565734863
    10. 'optim' → logprob: -4.790234565734863

Token 529: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.392098993062973
    2. '   ' → logprob: -1.6420990228652954
    3. '=' → logprob: -3.017098903656006
    4. 'e' → logprob: -3.892098903656006
    5. '[i' → logprob: -4.392098903656006
    6. 'a' → logprob: -5.017098903656006
    7. ',' → logprob: -5.267098903656006
    8. ' in' → logprob: -5.392098903656006
    9. ' e' → logprob: -5.517098903656006
    10. 'i' → logprob: -5.892098903656006

Token 530: 'non' (ID: 11741)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1313422918319702
    2. 'i' → logprob: -1.6313422918319702
    3. 'e' → logprob: -2.1313424110412598
    4. ' x' → logprob: -2.1313424110412598
    5. ' e' → logprob: -2.6313424110412598
    6. ' i' → logprob: -2.6313424110412598
    7. 'b' → logprob: -3.7563424110412598
    8. 'k' → logprob: -4.00634241104126
    9. 'ai' → logprob: -4.63134241104126
    10. 'a' → logprob: -5.13134241104126

Token 531: ' présents' (ID: 108718)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -1.0835936069488525
    2. 'ans' → logprob: -1.2085936069488525
    3. ' ans' → logprob: -2.5835936069488525
    4. 'k' → logprob: -2.7085936069488525
    5. ' &' → logprob: -2.9585936069488525
    6. ' mas' → logprob: -3.2085936069488525
    7. 'mas' → logprob: -3.3335936069488525
    8. '   ' → logprob: -3.9585936069488525
    9. ' k' → logprob: -4.208593368530273
    10. ' présents' → logprob: -4.583593368530273

Token 532: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.5006786584854126
    2. 'dans' → logprob: -1.1256786584854126
    3. ' in' → logprob: -3.750678539276123
    4. ')' → logprob: -4.250678539276123
    5. '   ' → logprob: -4.250678539276123
    6. 'ans' → logprob: -5.125678539276123
    7. 'in' → logprob: -5.875678539276123
    8. ' ans' → logprob: -6.000678539276123
    9. ' en' → logprob: -6.500678539276123
    10. 'en' → logprob: -7.250678539276123

Token 533: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.21057119965553284
    2. ' ans' → logprob: -1.7105711698532104
    3. 'k' → logprob: -4.9605712890625
    4. ' k' → logprob: -6.4605712890625
    5. '(ans' → logprob: -8.7105712890625
    6. '	ans' → logprob: -9.0855712890625
    7. 'a' → logprob: -9.4605712890625
    8. ' ' → logprob: -9.8355712890625
    9. ' ' → logprob: -10.7105712890625
    10. '   ' → logprob: -11.0230712890625

Token 534: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17433549463748932
    2. ' &' → logprob: -2.299335479736328
    3. ')
' → logprob: -3.549335479736328
    4. '&' → logprob: -4.299335479736328
    5. '   ' → logprob: -4.799335479736328
    6. ')&' → logprob: -5.924335479736328
    7. ' )' → logprob: -5.924335479736328
    8. ' )
' → logprob: -7.299335479736328
    9. ',' → logprob: -7.424335479736328
    10. '),' → logprob: -7.424335479736328

Token 535: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8558443188667297
    2. 'a' → logprob: -1.480844259262085
    3. '   ' → logprob: -1.855844259262085
    4. ' a' → logprob: -2.230844259262085
    5. 'filtered' → logprob: -2.855844259262085
    6. '=' → logprob: -4.605844497680664
    7. ' filtered' → logprob: -4.730844497680664
    8. ',' → logprob: -6.480844497680664
    9. '_filtered' → logprob: -6.855844497680664
    10. '[' → logprob: -7.355844497680664

Token 536: ' for' (ID: 395)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47427570819854736
    2. 'filtered' → logprob: -1.5992757081985474
    3. '   ' → logprob: -2.349275588989258
    4. ' a' → logprob: -3.349275588989258
    5. 'b' → logprob: -3.474275588989258
    6. ' filtered' → logprob: -4.724275588989258
    7. ' b' → logprob: -5.849275588989258
    8. 'f' → logprob: -7.224275588989258
    9. 'for' (adapté à ' for') → logprob: -7.849275588989258
    10. 'c' → logprob: -8.599275588989258

Token 537: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2258857935667038
    2. ' i' → logprob: -1.6008857488632202
    3. 'idx' → logprob: -8.475885391235352
    4. ' idx' → logprob: -8.850885391235352
    5. 'index' → logprob: -9.725885391235352
    6. ' index' → logprob: -11.225885391235352
    7. '_i' → logprob: -11.600885391235352
    8. 'ind' → logprob: -11.725885391235352
    9. 'x' → logprob: -12.225885391235352
    10. '	i' → logprob: -12.350885391235352

Token 538: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03830242529511452
    2. 'in' → logprob: -3.538302421569824
    3. ',' → logprob: -4.913302421569824
    4. 'a' → logprob: -7.913302421569824
    5. ' ' → logprob: -8.163302421569824
    6. ' ,' → logprob: -9.038302421569824
    7. 'range' → logprob: -9.538302421569824
    8. ' i' → logprob: -9.788302421569824
    9. 'i' → logprob: -10.038302421569824
    10. 's' → logprob: -10.163302421569824

Token 539: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17083659768104553
    2. 'a' → logprob: -2.1708366870880127
    3. ' range' → logprob: -3.1708366870880127
    4. ' a' → logprob: -7.045836448669434
    5. '[a' → logprob: -11.233336448669434
    6. ' ' → logprob: -11.295836448669434
    7. '	range' → logprob: -11.295836448669434
    8. 'r' → logprob: -11.608336448669434
    9. '(range' → logprob: -11.733336448669434
    10. '[' → logprob: -11.733336448669434

Token 540: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10081826895475388
    2. '(len' → logprob: -2.350818157196045
    3. 'len' → logprob: -7.975818157196045
    4. '(' → logprob: -8.475818634033203
    5. 'n' → logprob: -10.225818634033203
    6. '   ' → logprob: -10.850818634033203
    7. '(
' → logprob: -13.475818634033203
    8. ' len' → logprob: -13.975818634033203
    9. ' (' → logprob: -14.100818634033203
    10. ' n' → logprob: -15.350818634033203

Token 541: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03849400207400322
    2. '):' → logprob: -3.288494110107422
    3. '   ' → logprob: -8.163494110107422
    4. ')' → logprob: -9.538494110107422
    5. '):
' → logprob: -9.663494110107422
    6. ':' → logprob: -11.663494110107422
    7. ' ):
' → logprob: -11.913494110107422
    8. '       ' → logprob: -12.413494110107422
    9. ':
' → logprob: -12.538494110107422
    10. '):

' → logprob: -12.538494110107422

Token 542: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3980105519294739
    2. '       ' → logprob: -1.273010492324829
    3. ' a' → logprob: -3.148010492324829
    4. '   ' → logprob: -5.273010730743408
    5. '	a' → logprob: -8.27301025390625
    6. '	   ' → logprob: -11.52301025390625
    7. '	' → logprob: -12.27301025390625
    8. ' ' → logprob: -12.27301025390625
    9. ',a' → logprob: -12.77301025390625
    10. ',' → logprob: -13.27301025390625

Token 543: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.03340177610516548
    2. ' a' → logprob: -4.033401966094971
    3. '   ' → logprob: -4.283401966094971
    4. '       ' → logprob: -6.658401966094971
    5. '	a' → logprob: -9.908401489257812
    6. ' ' → logprob: -12.408401489257812
    7. '  ' → logprob: -13.033401489257812
    8. '    ' → logprob: -14.658401489257812
    9. '           ' → logprob: -15.533401489257812
    10. '```' → logprob: -16.033401489257812

Token 544: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3782830137643032e-05
    2. '[' → logprob: -11.87501335144043
    3. ' [' → logprob: -13.12501335144043
    4. '[
' → logprob: -13.87501335144043
    5. '```' → logprob: -13.87501335144043
    6. '[a' → logprob: -14.25001335144043
    7. 'i' → logprob: -14.87501335144043
    8. '
' → logprob: -15.25001335144043
    9. '\[' → logprob: -15.25001335144043
    10. '[I' → logprob: -15.25001335144043

Token 545: ']' (ID: 60)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.07115741074085236
    2. '=' → logprob: -3.446157455444336
    3. ']' → logprob: -3.946157455444336
    4. ' &=' → logprob: -4.196157455444336
    5. ')' → logprob: -6.946157455444336
    6. ' =' → logprob: -7.571157455444336
    7. '&gt' → logprob: -7.696157455444336
    8. '>' → logprob: -8.571157455444336
    9. ']&' → logprob: -9.696157455444336
    10. '&a' → logprob: -9.821157455444336

Token 546: ' &=' (ID: 35621)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.03591247275471687
    2. '=' → logprob: -3.66091251373291
    3. ' &=' → logprob: -4.66091251373291
    4. ' =' → logprob: -9.41091251373291
    5. '=&' → logprob: -11.53591251373291
    6. '&amp' → logprob: -12.53591251373291
    7. '&a' → logprob: -12.78591251373291
    8. '&nbsp' → logprob: -12.91091251373291
    9. '"&' → logprob: -13.03591251373291
    10. ' &' → logprob: -13.78591251373291

Token 547: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.000204851632588543
    2. ' k' → logprob: -8.500205039978027
    3. '~' → logprob: -14.125205039978027
    4. '   ' → logprob: -15.625205039978027
    5. ' ~' → logprob: -15.750205039978027
    6. '(k' → logprob: -16.00020408630371
    7. ' ' → logprob: -16.37520408630371
    8. ' ' → logprob: -17.37520408630371
    9. '	k' → logprob: -18.00020408630371
    10. ' (' → logprob: -18.75020408630371

Token 548: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1281474381685257
    2. 'basis' → logprob: -2.6281473636627197
    3. '    
' → logprob: -3.5031473636627197
    4. '<|end|>' → logprob: -4.878147602081299
    5. '```' → logprob: -6.003147602081299
    6. '
' → logprob: -6.253147602081299
    7. ' basis' → logprob: -6.253147602081299
    8. '_basis' → logprob: -6.753147602081299
    9. '  
' → logprob: -7.128147602081299
    10. '#' → logprob: -7.503147602081299

Token 550: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47899171710014343
    2. 'basis' → logprob: -1.1039917469024658
    3. 'b' → logprob: -3.353991746902466
    4. 'base' → logprob: -4.603991508483887
    5. '```' → logprob: -6.228991508483887
    6. ' basis' → logprob: -7.103991508483887
    7. '    
' → logprob: -7.478991508483887
    8. '
' → logprob: -8.603991508483887
    9. '#' (adapté à ' #') → logprob: -9.478991508483887
    10. ' b' → logprob: -9.603991508483887

Token 551: ' Construction' (ID: 31452)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.204353466629982
    2. 'base' → logprob: -2.2043535709381104
    3. 'b' → logprob: -2.9543535709381104
    4. 'filtered' → logprob: -4.079353332519531
    5. 'bs' → logprob: -6.579353332519531
    6. 'bas' → logprob: -6.829353332519531
    7. '#' → logprob: -7.329353332519531
    8. 'rest' → logprob: -7.704353332519531
    9. 'res' → logprob: -8.579353332519531
    10. 'v' → logprob: -8.704353332519531

Token 552: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16286242008209229
    2. ' de' → logprob: -3.1628623008728027
    3. 'de' → logprob: -3.4128623008728027
    4. 'basis' → logprob: -3.4128623008728027
    5. ' of' → logprob: -4.287862300872803
    6. 'b' → logprob: -4.662862300872803
    7. ' basis' → logprob: -4.787862300872803
    8. 'base' → logprob: -6.412862300872803
    9. '_basis' → logprob: -6.537862300872803
    10. '<|end|>' → logprob: -6.787862300872803

Token 553: ' la' (ID: 557)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.1358422040939331
    2. 'basis' → logprob: -2.7608423233032227
    3. ' get' → logprob: -2.8858423233032227
    4. 'b' → logprob: -5.635842323303223
    5. 'base' → logprob: -6.135842323303223
    6. ' basis' → logprob: -6.510842323303223
    7. 'a' → logprob: -7.760842323303223
    8. ' la' → logprob: -9.760842323303223
    9. 'la' → logprob: -9.760842323303223
    10. ' base' → logprob: -9.885842323303223

Token 554: ' base' (ID: 3611)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.14228695631027222
    2. 'base' → logprob: -2.142287015914917
    3. ' basis' → logprob: -4.392286777496338
    4. ' base' → logprob: -6.142286777496338
    5. 'get' → logprob: -7.767286777496338
    6. 'bas' → logprob: -9.517287254333496
    7. ' get' → logprob: -10.017287254333496
    8. '_basis' → logprob: -10.017287254333496
    9. 'baseline' → logprob: -10.767287254333496
    10. 'b' → logprob: -10.767287254333496

Token 555: ' lin' (ID: 14432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07752136141061783
    2. 'basis' → logprob: -2.702521324157715
    3. ' basis' → logprob: -4.952521324157715
    4. 'b' → logprob: -8.952521324157715
    5. 'base' → logprob: -9.202521324157715
    6. '```' → logprob: -9.452521324157715
    7. '    
' → logprob: -10.202521324157715
    8. 'a' → logprob: -10.327521324157715
    9. '_basis' → logprob: -10.452521324157715
    10. '
' → logprob: -10.952521324157715

Token 556: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.39362552762031555
    2. 'aire' → logprob: -1.1436254978179932
    3. 'e' → logprob: -5.268625736236572
    4. 'ére' → logprob: -7.893625736236572
    5. 'ear' → logprob: -8.268625259399414
    6. 'ière' → logprob: -8.393625259399414
    7. 'a' → logprob: -8.643625259399414
    8. 'ère' → logprob: -9.018625259399414
    9. 'ée' → logprob: -9.643625259399414
    10. 'éraire' → logprob: -9.643625259399414

Token 557: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.0005512446514330804
    2. 'are' → logprob: -8.125551223754883
    3. 'def' → logprob: -9.750551223754883
    4. 'a' → logprob: -10.000551223754883
    5. 'ale' → logprob: -10.250551223754883
    6. '   ' → logprob: -10.875551223754883
    7. 'air' → logprob: -10.875551223754883
    8. 'e' → logprob: -11.625551223754883
    9. 'ear' → logprob: -11.875551223754883
    10. '       ' → logprob: -11.875551223754883

Token 558: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06649819016456604
    2. 'basis' → logprob: -2.816498279571533
    3. ' basis' → logprob: -5.566498279571533
    4. 'b' → logprob: -7.941498279571533
    5. 'base' → logprob: -8.316497802734375
    6. '```' → logprob: -10.566497802734375
    7. ' base' → logprob: -10.816497802734375
    8. 'a' → logprob: -11.941497802734375
    9. '_basis' → logprob: -12.191497802734375
    10. '    
' → logprob: -12.191497802734375

Token 559: ' éléments' (ID: 57375)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004258850589394569
    2. ' a' → logprob: -5.504258632659912
    3. '[a' → logprob: -9.00425910949707
    4. 'filtered' → logprob: -10.37925910949707
    5. '[i' → logprob: -11.75425910949707
    6. ' [' → logprob: -11.87925910949707
    7. ' filtered' → logprob: -11.87925910949707
    8. '(a' → logprob: -13.75425910949707
    9. 'elements' → logprob: -14.00425910949707
    10. '[' → logprob: -14.75425910949707

Token 560: ' devant' (ID: 37522)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42847856879234314
    2. 'filtered' → logprob: -2.053478479385376
    3. 'a' → logprob: -2.428478479385376
    4. ' =' → logprob: -2.553478479385376
    5. 'basis' → logprob: -3.928478479385376
    6. 'b' → logprob: -4.303478717803955
    7. '=' → logprob: -4.428478717803955
    8. ' filtered' → logprob: -6.053478717803955
    9. 'de' → logprob: -6.678478717803955
    10. 'base' → logprob: -6.803478717803955

Token 561: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.6986628770828247
    2. 'a' → logprob: -0.8236628770828247
    3. 'get' → logprob: -4.198662757873535
    4. 'augment' → logprob: -4.573662757873535
    5. 'constit' → logprob: -5.073662757873535
    6. 'max' → logprob: -5.198662757873535
    7. 'entr' → logprob: -6.073662757873535
    8. 'filter' → logprob: -6.073662757873535
    9. 'etre' → logprob: -6.073662757873535
    10. 'com' → logprob: -6.448662757873535

Token 562: ' XOR' (ID: 147209)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.9118426442146301
    2. 'fil' → logprob: -1.6618425846099854
    3. ' filtr' → logprob: -1.9118425846099854
    4. 'aj' → logprob: -2.2868425846099854
    5. 'trait' → logprob: -2.5368425846099854
    6. 'a' → logprob: -4.2868428230285645
    7. 'calcul' → logprob: -4.2868428230285645
    8. ' ajout' → logprob: -4.5368428230285645
    9. 'filtered' → logprob: -4.7868428230285645
    10. ' get' → logprob: -4.9118428230285645

Token 563: '-' (ID: 12)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.019832037389278412
    2. 'ables' → logprob: -5.144832134246826
    3. 'a' → logprob: -6.269832134246826
    4. '   ' → logprob: -6.269832134246826
    5. 's' → logprob: -6.769832134246826
    6. 'é' → logprob: -7.144832134246826
    7. 'non' → logprob: -7.519832134246826
    8. ' rédu' → logprob: -7.519832134246826
    9. '```' → logprob: -7.644832134246826
    10. 'rés' → logprob: -7.769832134246826

Token 564: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.06992854177951813
    2. 'ed' → logprob: -4.4449286460876465
    3. ' rédu' → logprob: -4.6949286460876465
    4. ' combin' → logprob: -4.8199286460876465
    5. 'ré' → logprob: -5.0699286460876465
    6. 'é' → logprob: -5.3199286460876465
    7. 'comb' → logprob: -5.5699286460876465
    8. 'com' → logprob: -5.5699286460876465
    9. 'rés' → logprob: -5.8199286460876465
    10. 'nés' → logprob: -6.0699286460876465

Token 565: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010132494382560253
    2. 'basis' → logprob: -5.385132312774658
    3. ' basis' → logprob: -6.010132312774658
    4. 'a' → logprob: -7.135132312774658
    5. ' =' → logprob: -7.510132312774658
    6. ' a' → logprob: -8.010132789611816
    7. 'b' → logprob: -8.010132789611816
    8. 'filtered' → logprob: -8.260132789611816
    9. ' filtered' → logprob: -9.260132789611816
    10. ',' → logprob: -9.385132789611816

Token 566: ' maxim' (ID: 29045)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6632881760597229
    2. ' maxim' → logprob: -0.9132881760597229
    3. 'augment' → logprob: -3.288288116455078
    4. 'am' → logprob: -3.913288116455078
    5. ' max' → logprob: -4.913288116455078
    6. ' augmenter' → logprob: -5.413288116455078
    7. 'ob' → logprob: -6.038288116455078
    8. 'compl' → logprob: -6.163288116455078
    9. 'aj' → logprob: -6.788288116455078
    10. ' compléter' → logprob: -6.788288116455078

Token 567: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.03519723191857338
    2. 'er' → logprob: -3.6601972579956055
    3. 'al' → logprob: -5.1601972579956055
    4. 'um' → logprob: -6.5351972579956055
    5. 'is' → logprob: -8.035197257995605
    6. 'ser' → logprob: -8.285197257995605
    7. '#' → logprob: -8.660197257995605
    8. '   ' → logprob: -9.035197257995605
    9. 'izer' → logprob: -9.035197257995605
    10. 'é' → logprob: -9.535197257995605

Token 568: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5949704051017761
    2. 'la' → logprob: -0.9699704051017761
    3. ' la' → logprob: -2.969970464706421
    4. ' a' → logprob: -4.969970226287842
    5. 'le' → logprob: -5.219970226287842
    6. 'get' → logprob: -6.219970226287842
    7. ' le' → logprob: -7.219970226287842
    8. 'l' → logprob: -7.344970226287842
    9. 'leur' → logprob: -7.469970226287842
    10. ' get' → logprob: -7.594970226287842

Token 569: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2384914755821228
    2. 'result' → logprob: -2.4884915351867676
    3. 'a' → logprob: -3.1134915351867676
    4. ' ans' → logprob: -3.2384915351867676
    5. 'rés' → logprob: -3.8634915351867676
    6. ' résultat' → logprob: -4.488491535186768
    7. 'xor' → logprob: -5.738491535186768
    8. ' result' → logprob: -5.988491535186768
    9. 'res' → logprob: -6.113491535186768
    10. 'answer' → logprob: -6.988491535186768

Token 570: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7299339771270752
    2. ' basis' → logprob: -1.3549339771270752
    3. 'basis' → logprob: -1.3549339771270752
    4. ' base' → logprob: -7.979933738708496
    5. 'base' → logprob: -7.979933738708496
    6. 'b' → logprob: -8.229933738708496
    7. '```' → logprob: -8.729933738708496
    8. 'a' → logprob: -8.979933738708496
    9. '
' → logprob: -8.979933738708496
    10. '_basis' → logprob: -9.104933738708496

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33737853169441223
    2. ' basis' → logprob: -1.5873785018920898
    3. 'basis' → logprob: -2.58737850189209
    4. 'b' → logprob: -6.08737850189209
    5. ' base' → logprob: -6.71237850189209
    6. ' b' → logprob: -6.71237850189209
    7. 'base' → logprob: -8.08737850189209
    8. ' =' → logprob: -8.33737850189209
    9. ' result' → logprob: -8.71237850189209
    10. ' filtered' → logprob: -8.83737850189209

Token 572: ' basis' (ID: 9571)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basis' (adapté à ' basis') → logprob: -0.047847166657447815
    2. 'base' → logprob: -3.672847270965576
    3. ' basis' → logprob: -4.297847270965576
    4. 'b' → logprob: -5.297847270965576
    5. '   ' → logprob: -6.422847270965576
    6. ' base' → logprob: -7.547847270965576
    7. 'bas' → logprob: -8.922846794128418
    8. 'filtered' → logprob: -9.297846794128418
    9. ' b' → logprob: -9.672846794128418
    10. 'rest' → logprob: -9.922846794128418

Token 573: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010451936395838857
    2. '=' → logprob: -6.876045227050781
    3. ' +=' → logprob: -11.501045227050781
    4. '=get' → logprob: -13.501045227050781
    5. '.extend' → logprob: -14.501045227050781
    6. '+=' → logprob: -16.62604522705078
    7. '.append' → logprob: -16.62604522705078
    8. '.' → logprob: -16.75104522705078
    9. ' ' → logprob: -17.00104522705078
    10. ' ' → logprob: -17.50104522705078

Token 574: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.014166207052767277
    2. ' get' → logprob: -4.264166355133057
    3. '[get' → logprob: -13.389165878295898
    4. '   ' → logprob: -15.014165878295898
    5. '	get' → logprob: -15.014165878295898
    6. ' ' → logprob: -15.389165878295898
    7. '(get' → logprob: -15.889165878295898
    8. '[]' → logprob: -16.2641658782959
    9. '.get' → logprob: -16.3891658782959
    10. '=get' → logprob: -17.1391658782959

Token 575: '_basis' (ID: 180790)
  Prédit: '_basis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_basis' → logprob: -4.4849443838757e-06
    2. 'basis' → logprob: -12.500004768371582
    3. '_bas' → logprob: -14.125004768371582
    4. '_based' → logprob: -17.500003814697266
    5. '_base' → logprob: -17.750003814697266
    6. ' basis' → logprob: -18.625003814697266
    7. '_' → logprob: -18.750003814697266
    8. '```' → logprob: -19.750003814697266
    9. 'Basis' → logprob: -19.875003814697266
    10. '_basic' → logprob: -20.500003814697266

Token 576: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.339278580620885e-06
    2. ' (' → logprob: -14.125001907348633
    3. '([' → logprob: -14.250001907348633
    4. '(' → logprob: -14.250001907348633
    5. 'a' → logprob: -15.875001907348633
    6. '```' → logprob: -16.000001907348633
    7. '(
' → logprob: -16.875001907348633
    8. '((' → logprob: -17.375001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '(list' → logprob: -19.000001907348633

Token 577: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016754455282352865
    2. ')
' → logprob: -9.375167846679688
    3. ')

' → logprob: -9.500167846679688
    4. ' )' → logprob: -12.125167846679688
    5. '   ' → logprob: -13.625167846679688
    6. ')
' → logprob: -15.250167846679688
    7. ')

' → logprob: -15.375167846679688
    8. '))' → logprob: -16.125167846679688
    9. '[' → logprob: -16.125167846679688
    10. '())' → logprob: -16.250167846679688

Token 578: '    
' (ID: 1944)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5372507572174072
    2. '   ' → logprob: -1.4122507572174072
    3. 'res' → logprob: -2.1622507572174072
    4. 'result' → logprob: -3.2872507572174072
    5. 'best' → logprob: -4.412250518798828
    6. 'mx' → logprob: -5.787250518798828
    7. '```' → logprob: -7.037250518798828
    8. 'maximum' → logprob: -7.162250518798828
    9. 'x' → logprob: -7.662250518798828
    10. '    
' → logprob: -7.662250518798828

Token 579: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6427796483039856
    2. 'res' → logprob: -1.0177795886993408
    3. 'result' → logprob: -3.267779588699341
    4. 'best' → logprob: -3.392779588699341
    5. '   ' → logprob: -3.517779588699341
    6. 'mx' → logprob: -5.14277982711792
    7. 'for' → logprob: -6.26777982711792
    8. 'x' → logprob: -6.76777982711792
    9. 'maximum' → logprob: -7.39277982711792
    10. 'final' → logprob: -7.76777982711792

Token 580: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0069659012369811535
    2. 'res' → logprob: -5.8819661140441895
    3. 'result' → logprob: -6.1319661140441895
    4. 'max' → logprob: -6.8819661140441895
    5. '   ' → logprob: -7.6319661140441895
    6. ' for' → logprob: -8.131965637207031
    7. 'best' → logprob: -10.131965637207031
    8. '```' → logprob: -10.881965637207031
    9. 'cur' → logprob: -11.131965637207031
    10. 'x' → logprob: -11.131965637207031

Token 581: ' Calcul' (ID: 57243)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02609126642346382
    2. 'result' → logprob: -4.5260910987854
    3. 'max' → logprob: -4.9010910987854
    4. 'res' → logprob: -5.5260910987854
    5. ' for' → logprob: -6.7760910987854
    6. '   ' → logprob: -6.9010910987854
    7. 'best' → logprob: -7.7760910987854
    8. '#' → logprob: -7.9010910987854
    9. 'maximum' → logprob: -9.651091575622559
    10. 'rest' → logprob: -9.651091575622559

Token 582: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060053836554288864
    2. ' du' → logprob: -3.310053825378418
    3. 'for' → logprob: -4.435053825378418
    4. 'du' → logprob: -5.685053825378418
    5. ' for' → logprob: -5.810053825378418
    6. ' de' → logprob: -6.060053825378418
    7. 'de' → logprob: -8.310053825378418
    8. '  ' → logprob: -8.810053825378418
    9. 'final' → logprob: -8.810053825378418
    10. ' of' → logprob: -8.935053825378418

Token 583: ' meilleur' (ID: 37552)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15175311267375946
    2. 'res' → logprob: -2.4017531871795654
    3. 'result' → logprob: -3.1517531871795654
    4. ' for' → logprob: -5.776752948760986
    5. 'max' → logprob: -6.901752948760986
    6. 'best' → logprob: -6.901752948760986
    7. 'cur' → logprob: -7.901752948760986
    8. '```' → logprob: -7.901752948760986
    9. 'value' → logprob: -8.651753425598145
    10. ' res' → logprob: -8.776753425598145

Token 584: ' XOR' (ID: 147209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26267898082733154
    2. ' for' → logprob: -2.762679100036621
    3. 'possible' → logprob: -2.762679100036621
    4. 'result' → logprob: -2.887679100036621
    5. ' possible' → logprob: -4.262679100036621
    6. 'xor' → logprob: -4.387679100036621
    7. 'pour' → logprob: -4.762679100036621
    8. 'res' → logprob: -5.137679100036621
    9. ' pour' → logprob: -6.012679100036621
    10. ' result' → logprob: -6.512679100036621

Token 585: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.7045595049858093
    2. 'for' → logprob: -1.704559564590454
    3. '   ' → logprob: -1.954559564590454
    4. ' possible' → logprob: -2.204559564590454
    5. ' for' → logprob: -4.204559326171875
    6. 'max' → logprob: -4.204559326171875
    7. 'final' → logprob: -4.454559326171875
    8. '_possible' → logprob: -4.954559326171875
    9. 'result' → logprob: -5.079559326171875
    10. ' supplémentaire' → logprob: -5.704559326171875

Token 586: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16746070981025696
    2. 'for' → logprob: -2.0424606800079346
    3. ' for' → logprob: -4.667460918426514
    4. 'possible' → logprob: -4.667460918426514
    5. 'pour' → logprob: -5.917460918426514
    6. ' possible' → logprob: -6.667460918426514
    7. ' pour' → logprob: -7.667460918426514
    8. 'result' → logprob: -7.917460918426514
    9. 'with' → logprob: -8.792460441589355
    10. 'max' → logprob: -9.292460441589355

Token 587: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8711714744567871
    2. ' la' → logprob: -1.621171474456787
    3. ' les' → logprob: -2.496171474456787
    4. 'basis' → logprob: -2.621171474456787
    5. 'la' → logprob: -2.871171474456787
    6. ' for' → logprob: -2.871171474456787
    7. 'base' → logprob: -3.746171474456787
    8. 'the' → logprob: -3.871171474456787
    9. 'b' → logprob: -4.246171474456787
    10. ' basis' → logprob: -4.496171474456787

Token 588: ' base' (ID: 3611)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6968237161636353
    2. 'basis' → logprob: -0.8218237161636353
    3. 'base' → logprob: -3.3218235969543457
    4. ' for' → logprob: -4.571823596954346
    5. ' basis' → logprob: -5.321823596954346
    6. 'b' → logprob: -5.696823596954346
    7. '_basis' → logprob: -6.196823596954346
    8. '```' → logprob: -6.946823596954346
    9. '<|end|>' → logprob: -7.071823596954346
    10. '
' → logprob: -7.196823596954346

Token 589: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21656741201877594
    2. ' for' → logprob: -2.2165675163269043
    3. '   ' → logprob: -2.4665675163269043
    4. 'result' → logprob: -7.466567516326904
    5. '<|end|>' → logprob: -9.341567039489746
    6. 'max' → logprob: -10.216567039489746
    7. '    
' → logprob: -10.341567039489746
    8. '```' → logprob: -10.591567039489746
    9. 'x' → logprob: -11.341567039489746
    10. 'current' → logprob: -11.591567039489746

Token 590: 'maximum' (ID: 78601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13367120921611786
    2. ' for' → logprob: -2.258671283721924
    3. '   ' → logprob: -4.633671283721924
    4. 'result' → logprob: -5.383671283721924
    5. ')' → logprob: -6.258671283721924
    6. 'res' → logprob: -6.633671283721924
    7. 'current' → logprob: -7.508671283721924
    8. 'max' → logprob: -7.883671283721924
    9. 'best' → logprob: -8.258670806884766
    10. 'value' → logprob: -8.383670806884766

Token 591: ' sur' (ID: 1512)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.44992387294769287
    2. 'result' → logprob: -2.3249239921569824
    3. '_possible' → logprob: -2.6999239921569824
    4. ' possible' → logprob: -2.9499239921569824
    5. ' =' → logprob: -3.4499239921569824
    6. '=' → logprob: -3.9499239921569824
    7. '   ' → logprob: -4.199923992156982
    8. ')' → logprob: -4.324923992156982
    9. 'xor' → logprob: -4.449923992156982
    10. '_' → logprob: -4.574923992156982

Token 592: ' tous' (ID: 10688)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.09931463748216629
    2. ' basis' → logprob: -2.8493146896362305
    3. 'b' → logprob: -4.4743146896362305
    4. 'range' → logprob: -4.8493146896362305
    5. 'base' → logprob: -5.0993146896362305
    6. ' range' → logprob: -6.3493146896362305
    7. '   ' → logprob: -6.4743146896362305
    8. ')' → logprob: -6.7243146896362305
    9. 'e' → logprob: -6.7243146896362305
    10. ' la' → logprob: -7.2243146896362305

Token 593: ' les' (ID: 1341)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6489532589912415
    2. '   ' → logprob: -1.6489531993865967
    3. 'subset' → logprob: -2.5239531993865967
    4. ' b' → logprob: -2.6489531993865967
    5. 'basis' → logprob: -3.6489531993865967
    6. 'possible' → logprob: -3.8989531993865967
    7. ' subset' → logprob: -4.023953437805176
    8. ' les' → logprob: -4.148953437805176
    9. ' possible' → logprob: -4.773953437805176
    10. 's' → logprob: -5.148953437805176

Token 594: ' XOR' (ID: 147209)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.37134304642677307
    2. 'subset' → logprob: -1.9963430166244507
    3. ' b' → logprob: -2.8713431358337402
    4. ' subset' → logprob: -3.3713431358337402
    5. 'e' → logprob: -3.8713431358337402
    6. ' subsets' → logprob: -4.12134313583374
    7. 'x' → logprob: -4.49634313583374
    8. 'elem' → logprob: -4.87134313583374
    9. 'elements' → logprob: -5.24634313583374
    10. ' e' → logprob: -5.37134313583374

Token 595: ' de' (ID: 334)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.73723965883255
    2. 'possible' → logprob: -1.4872395992279053
    3. '   ' → logprob: -1.7372395992279053
    4. ' b' → logprob: -3.7372395992279053
    5. ' des' → logprob: -4.237239837646484
    6. ' subset' → logprob: -4.362239837646484
    7. 'subset' → logprob: -4.487239837646484
    8. 'b' → logprob: -4.862239837646484
    9. '_possible' → logprob: -4.862239837646484
    10. '       ' → logprob: -5.362239837646484

Token 596: ' sous' (ID: 14487)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.5268806219100952
    2. 'basis' → logprob: -2.2768807411193848
    3. ' subsets' → logprob: -2.2768807411193848
    4. ' subset' → logprob: -2.6518807411193848
    5. ' la' → logprob: -3.4018807411193848
    6. 'b' → logprob: -3.4018807411193848
    7. 'sub' → logprob: -4.151880741119385
    8. 'la' → logprob: -4.526880741119385
    9. ' basis' → logprob: -4.651880741119385
    10. 'comb' → logprob: -5.276880741119385

Token 597: '-' (ID: 12)
  Prédit: 'ense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.12908318638801575
    2. 'ensemble' → logprob: -2.3790831565856934
    3. '-' → logprob: -3.7540831565856934
    4. 'sets' → logprob: -6.504083156585693
    5. '   ' → logprob: -6.629083156585693
    6. '```' → logprob: -7.004083156585693
    7. ' ensembles' → logprob: -8.629083633422852
    8. '_' → logprob: -8.754083633422852
    9. 'con' → logprob: -8.754083633422852
    10. 's' → logprob: -9.004083633422852

Token 598: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.017621494829654694
    2. 'ensemble' → logprob: -4.2676215171813965
    3. 'sets' → logprob: -5.8926215171813965
    4. 'bases' → logprob: -8.767621040344238
    5. 'con' → logprob: -9.267621040344238
    6. 'basis' → logprob: -9.392621040344238
    7. 's' → logprob: -9.517621040344238
    8. ' ensembles' → logprob: -9.767621040344238
    9. '```' → logprob: -10.017621040344238
    10. 'b' → logprob: -10.142621040344238

Token 599: 'mbles' (ID: 60383)
  Prédit: 'mbles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mbles' → logprob: -0.7424073219299316
    2. 'ts' → logprob: -0.9924073219299316
    3. 't' → logprob: -2.2424073219299316
    4. 'quences' → logprob: -3.7424073219299316
    5. 'mb' → logprob: -4.117407321929932
    6. 'ttes' → logprob: -6.742407321929932
    7. 'sets' → logprob: -6.867407321929932
    8. 'mble' → logprob: -7.367407321929932
    9. '```' → logprob: -7.367407321929932
    10. 'mes' → logprob: -7.617407321929932

Token 600: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057171061635017395
    2. ' de' → logprob: -3.432171106338501
    3. ')' → logprob: -4.932170867919922
    4. ' basis' → logprob: -5.307170867919922
    5. 'basis' → logprob: -5.932170867919922
    6. '):' → logprob: -6.057170867919922
    7. 'de' → logprob: -6.682170867919922
    8. ' possible' → logprob: -7.057170867919922
    9. ' of' → logprob: -7.432170867919922
    10. '):
' → logprob: -7.557170867919922

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12400484830141068
    2. 'for' → logprob: -2.62400484085083
    3. ' for' → logprob: -3.12400484085083
    4. '    
' → logprob: -9.999005317687988
    5. '
' → logprob: -10.374005317687988
    6. '```' → logprob: -10.624005317687988
    7. '	for' → logprob: -10.999005317687988
    8. '       ' → logprob: -12.749005317687988
    9. '``' → logprob: -13.249005317687988
    10. '   ' → logprob: -13.249005317687988

Token 602: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003457136917859316
    2. 'res' (adapté à ' res') → logprob: -9.125346183776855
    3. ' for' → logprob: -9.625346183776855
    4. 'max' → logprob: -9.875346183776855
    5. '   ' → logprob: -10.375346183776855
    6. 'result' → logprob: -10.375346183776855
    7. 'best' → logprob: -10.375346183776855
    8. 'cur' → logprob: -11.125346183776855
    9. 'current' → logprob: -12.250346183776855
    10. 'x' → logprob: -12.875346183776855

Token 603: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033648815006017685
    2. '=' → logprob: -3.408648729324341
    3. ',' → logprob: -14.158648490905762
    4. ')' → logprob: -14.533648490905762
    5. '  ' → logprob: -14.783648490905762
    6. ' ' → logprob: -15.158648490905762
    7. 's' → logprob: -15.158648490905762
    8. ' ' → logprob: -15.908648490905762
    9. '_' → logprob: -16.158649444580078
    10. '   ' → logprob: -16.283649444580078

Token 604: ' ' (ID: 220)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0021750046871602535
    2. ' ans' → logprob: -6.3771748542785645
    3. '0' → logprob: -7.7521748542785645
    4. '   ' → logprob: -10.377175331115723
    5. '	ans' → logprob: -11.752175331115723
    6. '(ans' → logprob: -12.877175331115723
    7. '  ' → logprob: -14.877175331115723
    8. ' ' → logprob: -14.877175331115723
    9. '_ans' → logprob: -15.377175331115723
    10. 'answer' → logprob: -15.877175331115723

Token 605: '0' (ID: 15)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005248106550425291
    2. '0' → logprob: -5.255248069763184
    3. ' ans' → logprob: -11.380248069763184
    4. '(ans' → logprob: -13.880248069763184
    5. '	ans' → logprob: -14.005248069763184
    6. '   ' → logprob: -14.755248069763184
    7. ' ' → logprob: -15.005248069763184
    8. 'max' → logprob: -16.5052490234375
    9. '1' → logprob: -17.0052490234375
    10. '```' → logprob: -17.2552490234375

Token 606: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3361811637878418
    2. '   ' → logprob: -1.4611811637878418
    3. 'for' → logprob: -2.961181163787842
    4. '<|end|>' → logprob: -6.836181163787842
    5. '    
' → logprob: -8.711181640625
    6. ' 
' → logprob: -8.836181640625
    7. '
' → logprob: -9.086181640625
    8. ' ' → logprob: -9.461181640625
    9. '	for' → logprob: -9.461181640625
    10. '  
' → logprob: -10.461181640625

Token 607: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4928513467311859
    2. ' for' → logprob: -0.9928513765335083
    3. 'for' → logprob: -3.9928512573242188
    4. '	for' → logprob: -9.742851257324219
    5. ' basis' → logprob: -9.742851257324219
    6. '       ' → logprob: -11.367851257324219
    7. '```' → logprob: -12.242851257324219
    8. ' ' → logprob: -12.742851257324219
    9. '    
' → logprob: -12.992851257324219
    10. ',' → logprob: -13.367851257324219

Token 608: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49845102429389954
    2. 'for' (adapté à ' for') → logprob: -1.2484509944915771
    3. ' for' → logprob: -2.248450994491577
    4. '	for' → logprob: -11.123451232910156
    5. '```' → logprob: -13.373451232910156
    6. ' ' → logprob: -14.498451232910156
    7. '       ' → logprob: -14.748451232910156
    8. '[' → logprob: -16.248451232910156
    9. '  ' → logprob: -16.623451232910156
    10. '   ' → logprob: -16.748451232910156

Token 609: ' i' (ID: 575)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00038932388997636735
    2. 'x' → logprob: -8.250389099121094
    3. 'v' → logprob: -9.125389099121094
    4. 'e' → logprob: -11.250389099121094
    5. ' b' → logprob: -12.125389099121094
    6. 'vec' → logprob: -14.750389099121094
    7. 'base' → logprob: -16.625389099121094
    8. 'i' → logprob: -16.875389099121094
    9. 'elem' → logprob: -17.000389099121094
    10. 'bb' → logprob: -17.750389099121094

Token 610: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6328646540641785
    2. 'in' → logprob: -0.7578646540641785
    3. 'b' → logprob: -8.632864952087402
    4. ' ' → logprob: -10.632864952087402
    5. '   ' → logprob: -11.132864952087402
    6. '_' → logprob: -11.757864952087402
    7. 'i' → logprob: -11.882864952087402
    8. ',' → logprob: -12.132864952087402
    9. 'n' → logprob: -12.945364952087402
    10. '  ' → logprob: -13.070364952087402

Token 611: ' basis' (ID: 9571)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.0010423363419249654
    2. ' basis' → logprob: -6.876042366027832
    3. 'range' → logprob: -12.501042366027832
    4. 'base' → logprob: -13.001042366027832
    5. '   ' → logprob: -13.876042366027832
    6. '_basis' → logprob: -13.876042366027832
    7. ' ' → logprob: -14.376042366027832
    8. 'b' → logprob: -14.501042366027832
    9. '  ' → logprob: -15.626042366027832
    10. 'bas' → logprob: -15.751042366027832

Token 612: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11350372433662415
    2. ':
' → logprob: -2.4885036945343018
    3. '       ' → logprob: -3.7385036945343018
    4. '   ' → logprob: -8.488503456115723
    5. '=' → logprob: -9.363503456115723
    6. '):
' → logprob: -9.738503456115723
    7. '):' → logprob: -10.738503456115723
    8. '[' → logprob: -10.988503456115723
    9. '<|end|>' → logprob: -11.113503456115723
    10. ',' → logprob: -11.238503456115723

Token 613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009086026693694293
    2. 'res' → logprob: -7.250908374786377
    3. ' res' → logprob: -8.875908851623535
    4. '   ' → logprob: -10.500908851623535
    5. ' if' → logprob: -11.500908851623535
    6. '```' → logprob: -11.500908851623535
    7. 'if' → logprob: -12.750908851623535
    8. '[' → logprob: -13.250908851623535
    9. '           ' → logprob: -13.625908851623535
    10. '      ' → logprob: -14.000908851623535

Token 614: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16669966280460358
    2. 'tmp' → logprob: -2.1666996479034424
    3. 'temp' → logprob: -4.0416998863220215
    4. ' if' → logprob: -4.7916998863220215
    5. 'new' → logprob: -4.9166998863220215
    6. '       ' → logprob: -6.4166998863220215
    7. 'res' → logprob: -6.6666998863220215
    8. 'candidate' → logprob: -7.2916998863220215
    9. '   ' → logprob: -7.6666998863220215
    10. 't' → logprob: -7.6666998863220215

Token 615: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1055474579334259
    2. 'tmp' → logprob: -2.7305474281311035
    3. 'res' → logprob: -4.1055474281311035
    4. 'temp' → logprob: -4.8555474281311035
    5. '   ' → logprob: -4.9805474281311035
    6. 'candidate' → logprob: -6.1055474281311035
    7. 'new' → logprob: -7.1055474281311035
    8. ' if' → logprob: -8.355547904968262
    9. 'cand' → logprob: -8.730547904968262
    10. 't' → logprob: -9.230547904968262

Token 616: ' tente' (ID: 75234)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3094658851623535
    2. 'if' → logprob: -1.3094658851623535
    3. 'temp' → logprob: -1.5594658851623535
    4. 'tmp' → logprob: -2.5594658851623535
    5. 'candidate' → logprob: -3.1844658851623535
    6. '^' → logprob: -3.5594658851623535
    7. 'xor' → logprob: -3.6844658851623535
    8. 'res' → logprob: -3.9344658851623535
    9. 'x' → logprob: -4.1844658851623535
    10. '_candidate' → logprob: -5.3094658851623535

Token 617: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.984753429889679
    2. '       ' → logprob: -1.4847533702850342
    3. 'res' → logprob: -1.6097533702850342
    4. ' if' → logprob: -2.109753370285034
    5. '   ' → logprob: -3.484753370285034
    6. 'tmp' → logprob: -3.734753370285034
    7. ' res' → logprob: -5.359753608703613
    8. 'new' → logprob: -5.484753608703613
    9. 'temp' → logprob: -5.734753608703613
    10. '           ' → logprob: -5.734753608703613

Token 618: ''améli' (ID: 164097)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.930755078792572
    2. 'res' → logprob: -1.3057551383972168
    3. '   ' → logprob: -2.555755138397217
    4. '       ' → logprob: -2.680755138397217
    5. '=' → logprob: -3.555755138397217
    6. '=res' → logprob: -3.680755138397217
    7. '(res' → logprob: -3.930755138397217
    8. ' =' → logprob: -4.180755138397217
    9. 'for' → logprob: -4.430755138397217
    10. 'if' → logprob: -4.430755138397217

Token 619: 'orer' (ID: 13634)
  Prédit: 'orer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orer' → logprob: -0.0057710581459105015
    2. 'or' → logprob: -5.755771160125732
    3. 'ore' → logprob: -6.005771160125732
    4. 'e' → logprob: -9.880770683288574
    5. 'er' → logprob: -10.380770683288574
    6. 'ior' → logprob: -11.880770683288574
    7. 'uer' → logprob: -12.005770683288574
    8. 'o' → logprob: -12.005770683288574
    9. 'rer' → logprob: -12.755770683288574
    10. 'orera' → logprob: -13.005770683288574

Token 620: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.010660214349627495
    2. ' res' → logprob: -4.635660171508789
    3. '   ' → logprob: -7.135660171508789
    4. '       ' → logprob: -9.760660171508789
    5. '	res' → logprob: -10.885660171508789
    6. 'if' → logprob: -11.510660171508789
    7. ' if' → logprob: -11.760660171508789
    8. 'de' → logprob: -12.385660171508789
    9. ' de' → logprob: -12.760660171508789
    10. '(res' → logprob: -13.260660171508789

Token 621: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5340103507041931
    2. '=' → logprob: -1.159010410308838
    3. '       ' → logprob: -2.909010410308838
    4. ' ^=' → logprob: -3.284010410308838
    5. '^' → logprob: -5.034010410308838
    6. ',' → logprob: -7.909010410308838
    7. ':' → logprob: -8.53400993347168
    8. '           ' → logprob: -8.78400993347168
    9. '	' → logprob: -8.78400993347168
    10. ' ^' → logprob: -9.28400993347168

Token 622: ' xor' (ID: 106402)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6994284987449646
    2. 'res' → logprob: -0.8244284987449646
    3. 'xor' → logprob: -3.8244285583496094
    4. '^' → logprob: -4.449428558349609
    5. '(res' → logprob: -4.949428558349609
    6. 'trying' → logprob: -5.824428558349609
    7. 'x' → logprob: -5.949428558349609
    8. 'X' → logprob: -6.074428558349609
    9. ' res' → logprob: -6.199428558349609
    10. 'rés' → logprob: -6.449428558349609

Token 623: 'ant' (ID: 493)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8875766396522522
    2. '=' → logprob: -1.1375765800476074
    3. ' =' → logprob: -2.6375765800476074
    4. '=res' → logprob: -2.7625765800476074
    5. ' res' → logprob: -3.2625765800476074
    6. '   ' → logprob: -3.5125765800476074
    7. '(res' → logprob: -3.6375765800476074
    8. 'er' → logprob: -4.512576580047607
    9. 'ing' → logprob: -4.887576580047607
    10. '       ' → logprob: -6.012576580047607

Token 624: ' avec' (ID: 3937)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.08100584149360657
    2. ' res' → logprob: -2.831005811691284
    3. '(res' → logprob: -4.456006050109863
    4. 'with' → logprob: -6.081006050109863
    5. ' with' → logprob: -6.206006050109863
    6. 'i' → logprob: -6.831006050109863
    7. ' i' → logprob: -7.206006050109863
    8. '(i' → logprob: -7.206006050109863
    9. '   ' → logprob: -8.831006050109863
    10. '	res' → logprob: -9.581006050109863

Token 625: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014173151925206184
    2. ' i' → logprob: -4.2641730308532715
    3. '   ' → logprob: -12.38917350769043
    4. '(i' → logprob: -12.63917350769043
    5. '	i' → logprob: -13.88917350769043
    6. '[i' → logprob: -15.01417350769043
    7. ' ' → logprob: -15.13917350769043
    8. '_i' → logprob: -15.51417350769043
    9. '`' → logprob: -16.13917350769043
    10. '```' → logprob: -16.51417350769043

Token 626: ' base' (ID: 3611)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012733189389109612
    2. ' i' → logprob: -4.387732982635498
    3. 'b' → logprob: -8.637733459472656
    4. 'element' → logprob: -10.637733459472656
    5. '   ' → logprob: -11.387733459472656
    6. '(i' → logprob: -13.137733459472656
    7. ' ' → logprob: -13.137733459472656
    8. ' element' → logprob: -13.512733459472656
    9. '	i' → logprob: -13.762733459472656
    10. 'élé' → logprob: -13.887733459472656

Token 627: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8007072806358337
    2. ' ^=' → logprob: -1.1757073402404785
    3. ' =' → logprob: -2.9257073402404785
    4. ' if' → logprob: -3.1757073402404785
    5. ' res' → logprob: -3.4257073402404785
    6. '=' → logprob: -3.4257073402404785
    7. '^' → logprob: -4.0507073402404785
    8. 'if' → logprob: -4.0507073402404785
    9. ' ^' → logprob: -4.1757073402404785
    10. '       ' → logprob: -4.6757073402404785

Token 628: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.317070335149765
    2. '       ' → logprob: -1.8170703649520874
    3. '   ' → logprob: -2.692070245742798
    4. ' res' → logprob: -4.692070484161377
    5. ' =' → logprob: -4.692070484161377
    6. 'res' → logprob: -4.817070484161377
    7. 'if' → logprob: -5.067070484161377
    8. '=' → logprob: -5.567070484161377
    9. ' ' → logprob: -6.942070484161377
    10. ',' → logprob: -7.192070484161377

Token 629: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7255061864852905
    2. ' if' → logprob: -1.7255061864852905
    3. 'res' (adapté à ' res') → logprob: -1.9755061864852905
    4. 'temp' → logprob: -2.72550630569458
    5. 'tmp' → logprob: -2.97550630569458
    6. 'new' → logprob: -3.60050630569458
    7. ' res' → logprob: -3.72550630569458
    8. ' new' → logprob: -4.60050630569458
    9. 'candidate' → logprob: -5.35050630569458
    10. ' temp' → logprob: -5.35050630569458

Token 630: ' =' (ID: 314)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.5716065168380737
    2. '=' → logprob: -1.1966065168380737
    3. ' ^=' → logprob: -2.0716066360473633
    4. ' =' → logprob: -4.946606636047363
    5. ' ^' → logprob: -11.071606636047363
    6. ' ' → logprob: -11.446606636047363
    7. '=max' → logprob: -11.696606636047363
    8. '|' → logprob: -11.946606636047363
    9. '_=' → logprob: -12.446606636047363
    10. '   ' → logprob: -12.446606636047363

Token 631: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2029382586479187
    2. ' max' → logprob: -1.7029383182525635
    3. 'res' → logprob: -6.577938079833984
    4. ' res' → logprob: -8.952938079833984
    5. 'min' → logprob: -12.827938079833984
    6. '(max' → logprob: -14.827938079833984
    7. ' min' → logprob: -15.202938079833984
    8. '	max' → logprob: -15.952938079833984
    9. ' ' → logprob: -16.827938079833984
    10. '(res' → logprob: -16.952938079833984

Token 632: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -3.8889261304575484e-06
    2. 'res' → logprob: -12.500003814697266
    3. '(' → logprob: -16.125003814697266
    4. '	res' → logprob: -19.500003814697266
    5. '(
' → logprob: -20.125003814697266
    6. ',res' → logprob: -20.125003814697266
    7. ' res' → logprob: -20.375003814697266
    8. '=res' → logprob: -21.250003814697266
    9. '_res' → logprob: -21.625003814697266
    10. ' (' → logprob: -21.750003814697266

Token 633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00411591911688447
    2. ',res' → logprob: -5.504116058349609
    3. 'res' → logprob: -11.00411605834961
    4. ' ,' → logprob: -11.12911605834961
    5. '(res' → logprob: -12.00411605834961
    6. ',
' → logprob: -16.75411605834961
    7. ' res' → logprob: -17.62911605834961
    8. '   ' → logprob: -18.62911605834961
    9. ' ' → logprob: -18.75411605834961
    10. 'a' → logprob: -19.50411605834961

Token 634: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -9.674858301877975e-05
    2. ' res' → logprob: -9.250096321105957
    3. '   ' → logprob: -14.750096321105957
    4. '       ' → logprob: -16.125097274780273
    5. '	res' → logprob: -16.500097274780273
    6. '     ' → logprob: -18.250097274780273
    7. '    ' → logprob: -18.625097274780273
    8. '(res' → logprob: -18.875097274780273
    9. '      ' → logprob: -19.750097274780273
    10. '           ' → logprob: -19.750097274780273

Token 635: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.07891600579023361
    2. ' ^' → logprob: -2.578916072845459
    3. ',' → logprob: -10.9539155960083
    4. ')' → logprob: -12.7039155960083
    5. '^)' → logprob: -13.0789155960083
    6. ' ' → logprob: -13.5789155960083
    7. ' ' → logprob: -13.8289155960083
    8. '   ' → logprob: -15.3289155960083
    9. ' xor' → logprob: -15.4539155960083
    10. '^{' → logprob: -15.5789155960083

Token 636: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.836499985889532e-05
    2. ' i' → logprob: -9.7500581741333
    3. '   ' → logprob: -20.375059127807617
    4. '_i' → logprob: -21.625059127807617
    5. '	i' → logprob: -22.375059127807617
    6. '(i' → logprob: -22.625059127807617
    7. '[i' → logprob: -22.750059127807617
    8. ' ' → logprob: -23.000059127807617
    9. '```' → logprob: -23.625059127807617
    10. '  ' → logprob: -23.750059127807617

Token 637: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019257364328950644
    2. ')
' → logprob: -8.625192642211914
    3. '   ' → logprob: -11.500192642211914
    4. ')return' → logprob: -13.375192642211914
    5. ' )' → logprob: -13.750192642211914
    6. ')

' → logprob: -16.250192642211914
    7. ')
' → logprob: -17.625192642211914
    8. '<|end|>' → logprob: -18.125192642211914
    9. '}' → logprob: -18.500192642211914
    10. '       ' → logprob: -18.625192642211914

Token 638: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02474719099700451
    2. '    
' → logprob: -4.024747371673584
    3. '
' → logprob: -5.274747371673584
    4. 'return' → logprob: -6.899747371673584
    5. '```' → logprob: -8.649746894836426
    6. 'print' → logprob: -9.399746894836426
    7. '  
' → logprob: -9.524746894836426
    8. ' return' → logprob: -9.774746894836426
    9. '        
' → logprob: -10.899746894836426
    10. '   
' → logprob: -11.524746894836426

Token 639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5395087003707886
    2. '
' → logprob: -1.0395087003707886
    3. 'print' → logprob: -2.789508819580078
    4. '    
' → logprob: -6.539508819580078
    5. '```' → logprob: -8.539508819580078
    6. ' print' → logprob: -9.164508819580078
    7. '
' → logprob: -9.789508819580078
    8. 'return' → logprob: -10.039508819580078
    9. '

' → logprob: -11.289508819580078
    10. '  
' → logprob: -11.914508819580078

Token 640: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011424804106354713
    2. '   ' → logprob: -7.001142501831055
    3. ' print' → logprob: -8.501142501831055
    4. 'ans' → logprob: -11.126142501831055
    5. 'return' → logprob: -11.501142501831055
    6. '```' → logprob: -12.876142501831055
    7. 'answer' → logprob: -15.626142501831055
    8. 'result' → logprob: -16.751142501831055
    9. ' ans' → logprob: -17.126142501831055
    10. ' return' → logprob: -17.626142501831055

Token 641: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010866894444916397
    2. '   ' → logprob: -9.50010871887207
    3. ' print' → logprob: -10.75010871887207
    4. 'ans' → logprob: -11.37510871887207
    5. 'result' → logprob: -14.50010871887207
    6. 'return' → logprob: -15.87510871887207
    7. 'answer' → logprob: -16.00010871887207
    8. '```' → logprob: -16.50010871887207
    9. 'res' → logprob: -18.75010871887207
    10. 'final' → logprob: -18.87510871887207

Token 642: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.03004956804215908
    2. 'iche' → logprob: -3.5300495624542236
    3. 'ichage' → logprob: -8.905049324035645
    4. '#' → logprob: -9.405049324035645
    5. '   ' → logprob: -10.155049324035645
    6. 'ich' → logprob: -11.030049324035645
    7. 'ic' → logprob: -11.780049324035645
    8. '
' → logprob: -12.780049324035645
    9. 'cher' → logprob: -12.905049324035645
    10. '\' → logprob: -13.530049324035645

Token 643: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14539721608161926
    2. '   ' → logprob: -2.145397186279297
    3. '(ans' → logprob: -4.395397186279297
    4. ' print' → logprob: -5.270397186279297
    5. '(print' → logprob: -7.645397186279297
    6. '(' → logprob: -8.145397186279297
    7. 'ans' → logprob: -10.520397186279297
    8. 'result' → logprob: -10.895397186279297
    9. ' ans' → logprob: -12.395397186279297
    10. '(result' → logprob: -13.520397186279297

Token 644: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8580102324485779
    2. '(ans' → logprob: -1.1080102920532227
    3. 'print' → logprob: -1.6080102920532227
    4. 'res' → logprob: -3.1080102920532227
    5. '(res' → logprob: -7.358010292053223
    6. ' ans' → logprob: -9.358010292053223
    7. 'result' → logprob: -9.733010292053223
    8. 'answer' → logprob: -11.983010292053223
    9. '   ' → logprob: -12.358010292053223
    10. ' res' → logprob: -12.983010292053223

Token 645: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019424250058364123
    2. '   ' → logprob: -8.750194549560547
    3. ' print' → logprob: -10.250194549560547
    4. '```' → logprob: -14.875194549560547
    5. '(print' → logprob: -18.375194549560547
    6. '	print' → logprob: -19.500194549560547
    7. '
' → logprob: -20.000194549560547
    8. '`' → logprob: -20.500194549560547
    9. '#print' → logprob: -20.625194549560547
    10. '    
' → logprob: -20.875194549560547

Token 646: ':' (ID: 25)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016424537170678377
    2. '   ' → logprob: -6.501642227172852
    3. ' print' → logprob: -9.001642227172852
    4. '```' → logprob: -11.001642227172852
    5. '	print' → logprob: -16.00164222717285
    6. '`' → logprob: -17.37664222717285
    7. '
' → logprob: -17.37664222717285
    8. '``' → logprob: -17.37664222717285
    9. '    
' → logprob: -18.87664222717285
    10. '(print' → logprob: -19.87664222717285

Token 647: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016084164381027222
    2. ' print' → logprob: -6.501608371734619
    3. '   ' → logprob: -9.251608848571777
    4. '```' → logprob: -11.501608848571777
    5. '`' → logprob: -17.37660789489746
    6. '``' → logprob: -17.87660789489746
    7. '	print' → logprob: -19.12660789489746
    8. '
' → logprob: -20.75160789489746
    9. '    
' → logprob: -21.50160789489746
    10. 'Print' → logprob: -21.62660789489746

Token 648: ' XOR' (ID: 147209)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01427504327148199
    2. 'ans' → logprob: -4.264275074005127
    3. 'res' → logprob: -9.889274597167969
    4. ' print' → logprob: -10.264274597167969
    5. ' ans' → logprob: -11.389274597167969
    6. '(ans' → logprob: -12.264274597167969
    7. '   ' → logprob: -12.389274597167969
    8. 'answer' → logprob: -12.764274597167969
    9. 'max' → logprob: -13.764274597167969
    10. 'result' → logprob: -14.014274597167969

Token 649: ' initial' (ID: 4871)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5046855807304382
    2. '^' → logprob: -1.129685640335083
    3. ' ^' → logprob: -3.629685640335083
    4. ' ans' → logprob: -3.754685640335083
    5. 'res' → logprob: -5.254685401916504
    6. 'ans' → logprob: -5.254685401916504
    7. '   ' → logprob: -5.504685401916504
    8. '(res' → logprob: -5.754685401916504
    9. 'print' → logprob: -6.004685401916504
    10. '^(' → logprob: -7.254685401916504

Token 650: ' +' (ID: 659)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.6714226007461548
    2. '   ' → logprob: -1.2964226007461548
    3. ' ^' → logprob: -1.5464226007461548
    4. ',' → logprob: -7.046422481536865
    5. 'print' → logprob: -7.546422481536865
    6. '^(' → logprob: -8.546422958374023
    7. ' ans' → logprob: -8.546422958374023
    8. ' print' → logprob: -8.546422958374023
    9. '^{' → logprob: -9.296422958374023
    10. ' ^=' → logprob: -9.296422958374023

Token 651: ' deux' (ID: 10301)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.25193706154823303
    2. 'res' → logprob: -1.5019370317459106
    3. '(res' → logprob: -12.876936912536621
    4. ' ' → logprob: -13.251936912536621
    5. ''' → logprob: -13.751936912536621
    6. '"' → logprob: -14.001936912536621
    7. 'rés' → logprob: -14.501936912536621
    8. ' ' → logprob: -15.251936912536621
    9. '	res' → logprob: -15.376936912536621
    10. '_res' → logprob: -15.751936912536621

Token 652: ' fois' (ID: 14697)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5766049027442932
    2. ' *' → logprob: -0.8266049027442932
    3. 'res' → logprob: -8.701604843139648
    4. ' fois' → logprob: -9.201604843139648
    5. 'ans' → logprob: -9.701604843139648
    6. ' ' → logprob: -9.701604843139648
    7. ' ans' → logprob: -9.826604843139648
    8. ' ' → logprob: -10.201604843139648
    9. '**' → logprob: -10.576604843139648
    10. '   ' → logprob: -10.826604843139648

Token 653: ' le' (ID: 505)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.2523020803928375
    2. 'res' → logprob: -1.5023020505905151
    3. ' ans' → logprob: -8.127302169799805
    4. ' ' → logprob: -10.502302169799805
    5. '(res' → logprob: -10.877302169799805
    6. 'ans' → logprob: -11.502302169799805
    7. ' the' → logprob: -12.252302169799805
    8. ' le' → logprob: -12.252302169799805
    9. ' la' → logprob: -13.002302169799805
    10. 'rés' → logprob: -13.252302169799805

Token 654: ' maximum' (ID: 10562)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5760121941566467
    2. 'res' → logprob: -0.8260121941566467
    3. '(res' → logprob: -10.57601261138916
    4. ''' → logprob: -11.45101261138916
    5. 'result' → logprob: -11.82601261138916
    6. 'rés' → logprob: -11.95101261138916
    7. ' ' → logprob: -12.07601261138916
    8. 'space' → logprob: -12.20101261138916
    9. ' result' → logprob: -12.20101261138916
    10. '"' → logprob: -13.57601261138916

Token 655: ' ajouté' (ID: 127784)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.9420006275177002
    2. 'res' → logprob: -1.9420006275177002
    3. '(ans' → logprob: -2.0670006275177
    4. ' +' → logprob: -2.1920006275177
    5. ' res' → logprob: -2.9420006275177
    6. '*' → logprob: -3.1920006275177
    7. 'print' → logprob: -3.4420006275177
    8. ' *' → logprob: -3.5670006275177
    9. '+' → logprob: -3.9420006275177
    10. '   ' → logprob: -4.442000389099121

Token 656: ' grâce' (ID: 31589)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3064151704311371
    2. '   ' → logprob: -1.5564152002334595
    3. '+' → logprob: -3.93141508102417
    4. ' print' → logprob: -4.43141508102417
    5. ' +' → logprob: -5.05641508102417
    6. ',' → logprob: -5.80641508102417
    7. '(' → logprob: -6.18141508102417
    8. 'res' → logprob: -6.30641508102417
    9. '^' → logprob: -6.43141508102417
    10. '(ans' → logprob: -6.43141508102417

Token 657: ' à' (ID: 1221)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -1.0183922052383423
    2. ' à' → logprob: -1.2683922052383423
    3. ' au' → logprob: -1.3933922052383423
    4. 'à' → logprob: -2.2683920860290527
    5. 'aux' → logprob: -6.268392086029053
    6. 'res' → logprob: -6.768392086029053
    7. '   ' → logprob: -6.893392086029053
    8. ' ' → logprob: -7.018392086029053
    9. ' aux' → logprob: -8.268392562866211
    10. 'a' → logprob: -9.018392562866211

Token 658: ' la' (ID: 557)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.012527893297374249
    2. ' res' → logprob: -4.387527942657471
    3. 'la' → logprob: -11.637527465820312
    4. ' la' → logprob: -12.637527465820312
    5. 'rés' → logprob: -13.012527465820312
    6. 'l' → logprob: -14.387527465820312
    7. '(res' → logprob: -14.637527465820312
    8. 'r' → logprob: -14.637527465820312
    9. ' ' → logprob: -14.637527465820312
    10. '	res' → logprob: -14.887527465820312

Token 659: ' base' (ID: 3611)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.014243894256651402
    2. ' res' → logprob: -4.264244079589844
    3. 'rés' → logprob: -10.014244079589844
    4. 'base' → logprob: -11.514244079589844
    5. 'basis' → logprob: -11.514244079589844
    6. 'ress' → logprob: -12.889244079589844
    7. 'space' → logprob: -12.889244079589844
    8. 'r' → logprob: -13.014244079589844
    9. '"' → logprob: -13.764244079589844
    10. 'bas' → logprob: -14.014244079589844

Token 660: ' lin' (ID: 14432)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4764031767845154
    2. '   ' → logprob: -0.9764031767845154
    3. ' print' → logprob: -6.10140323638916
    4. '
' → logprob: -10.22640323638916
    5. '(' → logprob: -11.10140323638916
    6. '(print' → logprob: -11.47640323638916
    7. '```' → logprob: -12.10140323638916
    8. '    
' → logprob: -12.47640323638916
    9. '(ans' → logprob: -12.72640323638916
    10. ',' → logprob: -13.22640323638916

Token 661: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.010128242895007133
    2. 'aire' → logprob: -4.885128021240234
    3. 'e' → logprob: -6.635128021240234
    4. 'éraire' → logprob: -8.135128021240234
    5. 'éar' → logprob: -8.635128021240234
    6. '\xe' → logprob: -9.010128021240234
    7. '\x' → logprob: -9.135128021240234
    8. 'ére' → logprob: -9.510128021240234
    9. 'éra' → logprob: -10.010128021240234
    10. 'éal' → logprob: -10.010128021240234

Token 662: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.10278256982564926
    2. 'ar' → logprob: -2.6027824878692627
    3. 'e' → logprob: -5.102782726287842
    4. 'are' → logprob: -5.602782726287842
    5. 'age' → logprob: -5.852782726287842
    6. 'res' → logprob: -6.102782726287842
    7. 'a' → logprob: -6.727782726287842
    8. 'aires' → logprob: -7.227782726287842
    9. 'é' → logprob: -7.352782726287842
    10. 'air' → logprob: -7.727782726287842

Token 663: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1163850799202919
    2. '   ' → logprob: -2.241384983062744
    3. ' print' → logprob: -6.116384983062744
    4. '(' → logprob: -6.991384983062744
    5. '(print' → logprob: -8.866385459899902
    6. '```' → logprob: -9.116385459899902
    7. '*' → logprob: -10.491385459899902
    8. '()
' → logprob: -10.491385459899902
    9. '+' → logprob: -10.491385459899902
    10. '()' → logprob: -10.741385459899902

Token 664: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01026489119976759
    2. '   ' → logprob: -4.760264873504639
    3. ' print' → logprob: -6.510264873504639
    4. '```' → logprob: -8.760265350341797
    5. '(print' → logprob: -13.135265350341797
    6. '``' → logprob: -13.885265350341797
    7. '(' → logprob: -15.385265350341797
    8. '.print' → logprob: -15.385265350341797
    9. '	print' → logprob: -15.510265350341797
    10. '
' → logprob: -15.885265350341797

Token 665: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007181499968282878
    2. ' print' → logprob: -7.750718116760254
    3. '   ' → logprob: -8.250718116760254
    4. '```' → logprob: -10.625718116760254
    5. '(print' → logprob: -13.375718116760254
    6. '
' → logprob: -16.12571907043457
    7. '``' → logprob: -16.25071907043457
    8. '(' → logprob: -16.25071907043457
    9. '	print' → logprob: -16.37571907043457
    10. '.print' → logprob: -17.12571907043457

Token 666: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.875001907348633
    3. 'ans' → logprob: -13.875001907348633
    4. '((' → logprob: -15.875001907348633
    5. ' ans' → logprob: -16.500001907348633
    6. '	ans' → logprob: -18.500001907348633
    7. '(res' → logprob: -18.625001907348633
    8. ' (' → logprob: -19.000001907348633
    9. '(abs' → logprob: -19.000001907348633
    10. '(answer' → logprob: -19.500001907348633

Token 667: ' +' (ID: 659)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.16321049630641937
    2. ' ^' → logprob: -1.9132105112075806
    3. '+' → logprob: -5.913210391998291
    4. ' +' → logprob: -8.53821086883545
    5. ' ' → logprob: -10.28821086883545
    6. ')' → logprob: -10.78821086883545
    7. ' ' → logprob: -11.28821086883545
    8. '^(' → logprob: -12.28821086883545
    9. ',' → logprob: -12.41321086883545
    10. '^)' → logprob: -13.28821086883545

Token 668: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18711262941360474
    2. 'res' → logprob: -1.81211256980896
    3. '(res' → logprob: -5.937112808227539
    4. ' ' → logprob: -6.062112808227539
    5. ' res' → logprob: -6.312112808227539
    6. '(' → logprob: -7.687112808227539
    7. ' (' → logprob: -9.562112808227539
    8. '   ' → logprob: -11.187112808227539
    9. '  ' → logprob: -13.062112808227539
    10. '	res' → logprob: -13.062112808227539

Token 669: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10779935866594315
    2. 'res' → logprob: -2.4827992916107178
    3. '(res' → logprob: -4.107799530029297
    4. '(' → logprob: -6.107799530029297
    5. ' ' → logprob: -12.232799530029297
    6. ' res' → logprob: -12.482799530029297
    7. ' (' → logprob: -13.982799530029297
    8. '   ' → logprob: -15.107799530029297
    9. '_res' → logprob: -15.107799530029297
    10. 'ress' → logprob: -15.232799530029297

Token 670: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0009114635176956654
    2. ' *' → logprob: -7.000911235809326
    3. ' ' → logprob: -18.375911712646484
    4. ' ' → logprob: -18.750911712646484
    5. '**' → logprob: -19.250911712646484
    6. '*out' → logprob: -19.750911712646484
    7. '*(' → logprob: -20.250911712646484
    8. '*object' → logprob: -20.750911712646484
    9. '*
' → logprob: -21.250911712646484
    10. '   ' → logprob: -21.250911712646484

Token 671: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.9361264946837764e-07
    2. ' res' → logprob: -16.25
    3. '(res' → logprob: -20.25
    4. 'ress' → logprob: -21.375
    5. '$res' → logprob: -22.0
    6. '	res' → logprob: -22.625
    7. 'rés' → logprob: -23.5
    8. 'r' → logprob: -23.875
    9. '
' → logprob: -24.125
    10. 'resi' → logprob: -25.25

Token 672: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.875000953674316
    3. ')
' → logprob: -15.625000953674316
    4. ')`' → logprob: -16.875
    5. '())' → logprob: -17.125
    6. '))' → logprob: -17.125
    7. ')}' → logprob: -17.5
    8. '')' → logprob: -17.625
    9. '")' → logprob: -18.25
    10. '`)' → logprob: -18.75

Token 673: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17210516333580017
    2. '<|end|>' → logprob: -2.172105073928833
    3. '```' → logprob: -3.547105073928833
    4. '#' → logprob: -5.047105312347412
    5. ' if' → logprob: -5.547105312347412
    6. ')' → logprob: -6.047105312347412
    7. '<|end|>' → logprob: -7.422105312347412
    8. '
' → logprob: -7.922105312347412
    9. 'main' → logprob: -8.047104835510254
    10. '[' → logprob: -8.297104835510254

Token 674: ' App' (ID: 2583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8550976164988242e-05
    2. 'main' → logprob: -11.000018119812012
    3. ' if' → logprob: -13.250018119812012
    4. '#' → logprob: -18.375019073486328
    5. '```' → logprob: -18.750019073486328
    6. 'If' → logprob: -21.000019073486328
    7. '__' → logprob: -22.125019073486328
    8. ' main' → logprob: -23.250019073486328
    9. '	if' → logprob: -23.500019073486328
    10. 'print' → logprob: -24.125019073486328

Token 675: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.30982741713523865
    2. 'if' → logprob: -1.684827446937561
    3. 'e' → logprob: -3.8098273277282715
    4. 'ear' → logprob: -3.8098273277282715
    5. 'end' → logprob: -4.0598273277282715
    6. 'le' → logprob: -4.5598273277282715
    7. 'ly' → logprob: -5.9348273277282715
    8. 'elf' → logprob: -6.6848273277282715
    9. 'elif' → logprob: -6.9348273277282715
    10. 'en' → logprob: -7.0598273277282715

Token 676: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0017870404990389943
    2. 'main' → logprob: -6.376787185668945
    3. '(main' → logprob: -9.501787185668945
    4. '=' → logprob: -12.251787185668945
    5. ' if' → logprob: -13.001787185668945
    6. '```' → logprob: -14.001787185668945
    7. '__' → logprob: -14.501787185668945
    8. '()' → logprob: -14.501787185668945
    9. '_main' → logprob: -15.251787185668945
    10. ' main' → logprob: -15.501787185668945

Token 677: ' la' (ID: 557)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0280383548888494e-06
    2. 'if' → logprob: -14.000000953674316
    3. ' main' → logprob: -16.000001907348633
    4. '__' → logprob: -17.250001907348633
    5. '(main' → logprob: -19.375001907348633
    6. '_main' → logprob: -20.625001907348633
    7. '	main' → logprob: -21.750001907348633
    8. '```' → logprob: -22.000001907348633
    9. '.main' → logprob: -23.125001907348633
    10. 'def' → logprob: -23.875001907348633

Token 678: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00013393278641160578
    2. 'if' → logprob: -9.000133514404297
    3. '__' → logprob: -12.125133514404297
    4. ' main' → logprob: -12.250133514404297
    5. '```' → logprob: -16.375133514404297
    6. '`' → logprob: -16.625133514404297
    7. 'def' → logprob: -17.250133514404297
    8. '	main' → logprob: -17.750133514404297
    9. '(main' → logprob: -18.250133514404297
    10. '_main' → logprob: -19.125133514404297

Token 679: ' principale' (ID: 68926)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1269284337759018
    2. 'if' → logprob: -2.1269283294677734
    3. '(main' → logprob: -16.126928329467773
    4. ' main' → logprob: -16.376928329467773
    5. '
' → logprob: -16.751928329467773
    6. '```' → logprob: -17.626928329467773
    7. ' if' → logprob: -17.751928329467773
    8. '_main' → logprob: -20.126928329467773
    9. '.main' → logprob: -20.626928329467773
    10. '	main' → logprob: -20.876928329467773

Token 680: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1619940549135208
    2. 'main' → logprob: -1.9119940996170044
    3. '
' → logprob: -6.411993980407715
    4. '```' → logprob: -9.036993980407715
    5. '(main' → logprob: -12.286993980407715
    6. ' if' → logprob: -13.536993980407715
    7. ' main' → logprob: -14.411993980407715
    8. '``' → logprob: -14.661993980407715
    9. '    
' → logprob: -15.536993980407715
    10. '\n' → logprob: -15.911993980407715

Token 681: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.004078639671206474
    2. 'if' → logprob: -5.5040788650512695
    3. ' main' → logprob: -16.504077911376953
    4. '```' → logprob: -17.629077911376953
    5. '(main' → logprob: -19.879077911376953
    6. '	main' → logprob: -21.754077911376953
    7. ' if' → logprob: -21.754077911376953
    8. '.main' → logprob: -23.129077911376953
    9. '_main' → logprob: -23.254077911376953
    10. '`' → logprob: -24.004077911376953

Token 682: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 680
Tokens correctement prédits (1ère position, stricte): 187
Tokens correctement prédits (1ère position, avec adaptation): 200
Tokens correctement prédits (top 10): 421
Précision stricte (1ère position): 27.50%
Précision adaptée (1ère position): 29.41%
Précision (top 10): 61.91%
================================================================================
