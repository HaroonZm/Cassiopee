================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from numpy import *
def parse_input():
    return map(int, input().split())

def get_l(n):
    return n * 3 + 1

def create_zeros(l, n):
    return zeros((l, n * 5), int64)

def set_init(d):
    d[0][0] = 1

def assign_indices(i):
    return i - 1, i - 2

def compute_first_term(d, i, k, j):
    return d[i - 3] * k * j

def compute_second_term(d, k, j):
    return roll(d[k], -1) * j

def compute_third_term(d, j):
    return roll(d[j], 1)

def compute_row(d, i, k, j, M):
    term1 = compute_first_term(d, i, k, j)
    term2 = compute_second_term(d, k, j)
    term3 = compute_third_term(d, j)
    return (term1 + term2 + term3) % M

def fill_matrix(d, l, M):
    for i in range(1, l):
        j, k = assign_indices(i)
        d[i] = compute_row(d, i, k, j, M)

def compute_result(d, l, M):
    return sum(d[-1][:l]) % M

def main():
    n, M = parse_input()
    l = get_l(n)
    d = create_zeros(l, n)
    set_init(d)
    fill_matrix(d, l, M)
    print(compute_result(d, l, M))

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' *
' (ID: 2099)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.43176841735839844
    2. ' array' → logprob: -1.0567684173583984
    3. 'random' → logprob: -6.556768417358398
    4. ' as' → logprob: -7.181768417358398
    5. ' random' → logprob: -7.431768417358398
    6. ' ndarray' → logprob: -9.556768417358398
    7. 'empty' → logprob: -9.681768417358398
    8. 'as' → logprob: -10.181768417358398
    9. ' numpy' → logprob: -10.306768417358398
    10. 'numpy' → logprob: -10.431768417358398

Token 4: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2299823760986328
    2. 'a' → logprob: -2.229982376098633
    3. '.' → logprob: -2.854982376098633
    4. 'import' → logprob: -4.229982376098633
    5. 'random' → logprob: -4.604982376098633
    6. 'array' → logprob: -5.604982376098633
    7. 'as' → logprob: -6.479982376098633
    8. '*' → logprob: -6.604982376098633
    9. 'ar' → logprob: -7.104982376098633
    10. '`' → logprob: -7.229982376098633

Token 5: ' parse' (ID: 8420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20791245996952057
    2. ' my' → logprob: -2.7079124450683594
    3. ' space' → logprob: -3.0829124450683594
    4. ' f' → logprob: -3.7079124450683594
    5. ' array' → logprob: -3.8329124450683594
    6. ' add' → logprob: -5.332912445068359
    7. ' factorial' → logprob: -5.707912445068359
    8. ' ' → logprob: -5.957912445068359
    9. '_' → logprob: -6.082912445068359
    10. ' func' → logprob: -6.332912445068359

Token 6: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27803030610084534
    2. '_' → logprob: -1.528030276298523
    3. '_line' → logprob: -4.9030303955078125
    4. '_token' → logprob: -5.7780303955078125
    5. '_name' → logprob: -6.0280303955078125
    6. ' (' → logprob: -6.6530303955078125
    7. 'parse' → logprob: -6.7780303955078125
    8. '_par' → logprob: -6.9030303955078125
    9. '_parse' → logprob: -7.0280303955078125
    10. '_args' → logprob: -7.4030303955078125

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009493148885667324
    2. '_' → logprob: -4.884493350982666
    3. '(_:' → logprob: -7.884493350982666
    4. '(_' → logprob: -8.384492874145508
    5. '_input' → logprob: -8.634492874145508
    6. '(:' → logprob: -8.634492874145508
    7. '_line' → logprob: -9.009492874145508
    8. '_:' → logprob: -9.134492874145508
    9. '(input' → logprob: -9.509492874145508
    10. '("("' → logprob: -9.634492874145508

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17327046394348145
    2. '(' → logprob: -2.1732704639434814
    3. '```' → logprob: -4.173270225524902
    4. ' ' → logprob: -4.798270225524902
    5. 'input' → logprob: -5.673270225524902
    6. '[' → logprob: -5.798270225524902
    7. 'return' → logprob: -6.298270225524902
    8. '()' → logprob: -6.423270225524902
    9. '\' → logprob: -6.423270225524902
    10. ''' → logprob: -6.798270225524902

Token 9: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0540821552276611
    2. 'input' → logprob: -1.8040821552276611
    3. 'return' (adapté à ' return') → logprob: -1.9290821552276611
    4. 'data' → logprob: -1.9290821552276611
    5. 'line' → logprob: -2.929082155227661
    6. 'user' → logprob: -3.804082155227661
    7. 'x' → logprob: -3.929082155227661
    8. 'l' → logprob: -4.054081916809082
    9. 'n' → logprob: -4.179081916809082
    10. 'r' → logprob: -4.304081916809082

Token 10: ' map' (ID: 4014)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.1118680015206337
    2. '[]' → logprob: -3.236867904663086
    3. ' ' → logprob: -3.736867904663086
    4. ' map' → logprob: -3.861867904663086
    5. ' array' → logprob: -4.861867904663086
    6. 'array' → logprob: -5.486867904663086
    7. ' [' → logprob: -6.736867904663086
    8. ' list' → logprob: -6.736867904663086
    9. ' input' → logprob: -6.861867904663086
    10. '[' → logprob: -6.861867904663086

Token 11: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1467994898557663
    2. '(int' → logprob: -2.0217995643615723
    3. '(str' → logprob: -6.271799564361572
    4. '(lambda' → logprob: -6.521799564361572
    5. '(list' → logprob: -8.396799087524414
    6. '(parse' → logprob: -8.896799087524414
    7. '(float' → logprob: -9.771799087524414
    8. '(s' → logprob: -9.771799087524414
    9. '(
' → logprob: -10.021799087524414
    10. '(eval' → logprob: -10.521799087524414

Token 12: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07118771970272064
    2. ')' → logprob: -3.071187734603882
    3. '(input' → logprob: -4.446187496185303
    4. '(line' → logprob: -6.071187496185303
    5. '('' → logprob: -6.196187496185303
    6. ',' → logprob: -6.571187496185303
    7. '(data' → logprob: -7.696187496185303
    8. '(
' → logprob: -7.946187496185303
    9. '(token' → logprob: -7.946187496185303
    10. ' (' → logprob: -8.321187973022461

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2277839183807373
    2. ' input' → logprob: -1.8527839183807373
    3. ')' → logprob: -3.4777839183807373
    4. 'raw' → logprob: -5.352784156799316
    5. 'split' → logprob: -5.352784156799316
    6. ' raw' → logprob: -5.727784156799316
    7. '(input' → logprob: -6.727784156799316
    8. ' split' → logprob: -7.602784156799316
    9. 'stdin' → logprob: -8.227784156799316
    10. '))' → logprob: -8.727784156799316

Token 14: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2562060058116913
    2. '())' → logprob: -1.5062060356140137
    3. '(' → logprob: -6.256206035614014
    4. '('' → logprob: -7.131206035614014
    5. '()))' → logprob: -7.506206035614014
    6. '().' → logprob: -8.256205558776855
    7. ')' → logprob: -8.756205558776855
    8. ' ())' → logprob: -9.006205558776855
    9. '(()' → logprob: -9.381205558776855
    10. ' ()' → logprob: -9.631205558776855

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005241344682872295
    2. 'strip' → logprob: -5.255241394042969
    3. 'rstrip' → logprob: -12.005241394042969
    4. ' split' → logprob: -13.630241394042969
    5. '(split' → logprob: -15.130241394042969
    6. 'read' → logprob: -18.38024139404297
    7. 'spl' → logprob: -18.50524139404297
    8. ' strip' → logprob: -19.00524139404297
    9. 'replace' → logprob: -19.38024139404297
    10. 's' → logprob: -19.38024139404297

Token 16: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5782963037490845
    2. '()))' → logprob: -0.8282963037490845
    3. '()' → logprob: -6.328296184539795
    4. ')' → logprob: -8.453296661376953
    5. '(' → logprob: -8.703296661376953
    6. '))' → logprob: -8.828296661376953
    7. '()),' → logprob: -11.578296661376953
    8. '()));' → logprob: -12.078296661376953
    9. '())))' → logprob: -12.078296661376953
    10. ' ())' → logprob: -12.078296661376953

Token 17: 'def' (ID: 1314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3262848854064941
    2. 'x' → logprob: -1.5762848854064941
    3. 'def' → logprob: -1.8262848854064941
    4. 'for' → logprob: -1.9512848854064941
    5. '(' → logprob: -2.451284885406494
    6. 'n' → logprob: -2.826284885406494
    7. '#' → logprob: -3.826284885406494
    8. ')' → logprob: -4.451284885406494
    9. 'data' → logprob: -4.451284885406494
    10. '[' → logprob: -4.701284885406494

Token 18: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7730322480201721
    2. ' solve' → logprob: -1.1480321884155273
    3. ' parse' → logprob: -2.6480321884155273
    4. ' process' → logprob: -3.0230321884155273
    5. ' factorial' → logprob: -3.6480321884155273
    6. ' find' → logprob: -3.7730321884155273
    7. ' calculate' → logprob: -3.7730321884155273
    8. ' compute' → logprob: -5.273032188415527
    9. ' reverse' → logprob: -5.898032188415527
    10. ' predict' → logprob: -6.023032188415527

Token 19: '_l' (ID: 1478)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.38045090436935425
    2. '_div' → logprob: -3.630450963973999
    3. '_sum' → logprob: -3.630450963973999
    4. '_' → logprob: -3.755450963973999
    5. '_l' → logprob: -3.880450963973999
    6. '_min' → logprob: -4.13045072555542
    7. '_matrix' → logprob: -4.38045072555542
    8. '_array' → logprob: -4.38045072555542
    9. '_data' → logprob: -4.50545072555542
    10. '_input' → logprob: -4.50545072555542

Token 20: '(n' (ID: 2406)
  Prédit: 'ength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ength' → logprob: -1.1947358846664429
    2. 'eft' → logprob: -1.3197358846664429
    3. 'ist' → logprob: -1.8197358846664429
    4. 'e' → logprob: -1.9447358846664429
    5. 'en' → logprob: -2.9447360038757324
    6. 'cm' → logprob: -4.319736003875732
    7. 'imit' → logprob: -5.194736003875732
    8. 'ast' → logprob: -5.319736003875732
    9. 'im' → logprob: -5.444736003875732
    10. 'is' → logprob: -5.569736003875732

Token 21: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05454673618078232
    2. '):' → logprob: -3.55454683303833
    3. ',' → logprob: -4.67954683303833
    4. '_' → logprob: -4.92954683303833
    5. ')_' → logprob: -6.55454683303833
    6. '_)' → logprob: -7.05454683303833
    7. 'a' → logprob: -7.42954683303833
    8. 'e' → logprob: -7.67954683303833
    9. '[' → logprob: -7.80454683303833
    10. '))' → logprob: -8.054546356201172

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.864829957485199
    2. '(' → logprob: -1.4898300170898438
    3. '[' → logprob: -1.4898300170898438
    4. '(n' → logprob: -2.3648300170898438
    5. '_' → logprob: -4.989830017089844
    6. ' (' → logprob: -5.614830017089844
    7. '    ' → logprob: -5.614830017089844
    8. 'return' → logprob: -5.989830017089844
    9. '[n' → logprob: -6.114830017089844
    10. ' ' → logprob: -6.489830017089844

Token 23: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6685701608657837
    2. ' [' → logprob: -1.9185701608657837
    3. ' l' → logprob: -2.293570041656494
    4. ' return' → logprob: -2.668570041656494
    5. 'l' → logprob: -2.793570041656494
    6. 'return' (adapté à ' return') → logprob: -3.668570041656494
    7. '   ' → logprob: -4.043570041656494
    8. ' zeros' → logprob: -4.168570041656494
    9. 'zeros' → logprob: -4.918570041656494
    10. ' array' → logprob: -5.293570041656494

Token 24: ' n' (ID: 297)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1254208087921143
    2. ' [' → logprob: -1.1254208087921143
    3. '[n' → logprob: -2.7504208087921143
    4. '[int' → logprob: -2.7504208087921143
    5. ' n' → logprob: -3.3754208087921143
    6. 'array' → logprob: -3.7504208087921143
    7. ' array' → logprob: -4.000420570373535
    8. 'n' → logprob: -4.000420570373535
    9. ' lin' → logprob: -4.250420570373535
    10. ' ar' → logprob: -4.375420570373535

Token 25: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6965131759643555
    2. '+' → logprob: -1.8215131759643555
    3. '*' → logprob: -2.1965131759643555
    4. ' ' → logprob: -2.9465131759643555
    5. '.' → logprob: -3.3215131759643555
    6. ' *' → logprob: -3.5715131759643555
    7. '%' → logprob: -3.5715131759643555
    8. ',' → logprob: -3.6965131759643555
    9. '**' → logprob: -4.3215131759643555
    10. ' %' → logprob: -4.8215131759643555

Token 26: ' ' (ID: 220)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7605686187744141
    2. '2' → logprob: -1.635568618774414
    3. 'n' → logprob: -2.635568618774414
    4. ' ' → logprob: -2.635568618774414
    5. ' (' → logprob: -2.760568618774414
    6. '(' → logprob: -3.135568618774414
    7. ' n' → logprob: -3.385568618774414
    8. '3' → logprob: -4.510568618774414
    9. '10' → logprob: -4.760568618774414
    10. '4' → logprob: -5.010568618774414

Token 27: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.053925633430481
    2. '(n' → logprob: -1.428925633430481
    3. 'n' → logprob: -1.553925633430481
    4. '(' → logprob: -3.0539255142211914
    5. '3' → logprob: -3.5539255142211914
    6. '10' → logprob: -3.6789255142211914
    7. '4' → logprob: -4.053925514221191
    8. 'log' → logprob: -4.053925514221191
    9. '1' → logprob: -4.303925514221191
    10. '0' → logprob: -4.428925514221191

Token 28: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2548767626285553
    2. 'def' → logprob: -2.0048768520355225
    3. '+' → logprob: -4.004876613616943
    4. '<|end|>' → logprob: -4.254876613616943
    5. '\n' → logprob: -4.629876613616943
    6. ')' → logprob: -4.754876613616943
    7. '**' → logprob: -5.004876613616943
    8. '(' → logprob: -5.254876613616943
    9. '
' → logprob: -5.629876613616943
    10. '```' → logprob: -5.754876613616943

Token 29: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4663878083229065
    2. '1' → logprob: -1.7163877487182617
    3. '2' → logprob: -2.0913877487182617
    4. '3' → logprob: -3.9663877487182617
    5. '4' → logprob: -3.9663877487182617
    6. '7' → logprob: -4.466387748718262
    7. '5' → logprob: -4.966387748718262
    8. '6' → logprob: -5.216387748718262
    9. '9' → logprob: -6.466387748718262
    10. '8' → logprob: -6.466387748718262

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.46047040820121765
    2. '2' → logprob: -1.46047043800354
    3. '7' → logprob: -2.96047043800354
    4. '4' → logprob: -3.21047043800354
    5. '5' → logprob: -4.210470199584961
    6. '3' → logprob: -4.460470199584961
    7. ' ' → logprob: -4.960470199584961
    8. '6' → logprob: -5.585470199584961
    9. '10' → logprob: -5.960470199584961
    10. '8' → logprob: -6.710470199584961

Token 31: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.044822607189416885
    2. '

' → logprob: -4.419822692871094
    3. 'def' → logprob: -4.794822692871094
    4. '<|end|>' → logprob: -5.294822692871094
    5. '\n' → logprob: -5.544822692871094
    6. '*' → logprob: -5.544822692871094
    7. '(' → logprob: -6.419822692871094
    8. ')' → logprob: -6.544822692871094
    9. 'newline' → logprob: -6.544822692871094
    10. '```' → logprob: -6.669822692871094

Token 32: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08118655532598495
    2. '
' → logprob: -2.581186532974243
    3. '```' → logprob: -7.331186771392822
    4. '

' → logprob: -7.581186771392822
    5. '\' → logprob: -7.706186771392822
    6. '<|end|>' → logprob: -8.956186294555664
    7. '\n' → logprob: -9.081186294555664
    8. ' def' → logprob: -9.331186294555664
    9. 'for' → logprob: -10.081186294555664
    10. 'newline' → logprob: -10.206186294555664

Token 33: ' create' (ID: 2501)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.144729882478714
    2. ' main' → logprob: -2.5197298526763916
    3. ' l' → logprob: -3.8947298526763916
    4. ' parse' → logprob: -4.144730091094971
    5. 'get' → logprob: -5.394730091094971
    6. ' solve' → logprob: -6.019730091094971
    7. ' def' → logprob: -6.269730091094971
    8. ' calculate' → logprob: -6.644730091094971
    9. ' run' → logprob: -7.019730091094971
    10. ' is' → logprob: -7.144730091094971

Token 34: '_' (ID: 62)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.34843501448631287
    2. '_list' → logprob: -1.9734350442886353
    3. '_l' → logprob: -2.9734349250793457
    4. '_' → logprob: -3.2234349250793457
    5. '_line' → logprob: -3.9734349250793457
    6. '_layer' → logprob: -4.973434925079346
    7. '(' → logprob: -5.098434925079346
    8. '_matrix' → logprob: -5.098434925079346
    9. '_table' → logprob: -5.473434925079346
    10. '_arr' → logprob: -6.598434925079346

Token 35: 'zeros' (ID: 24095)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -1.2807594537734985
    2. 'list' → logprob: -1.4057594537734985
    3. 'array' → logprob: -1.5307594537734985
    4. 'l' → logprob: -2.905759334564209
    5. 'board' → logprob: -3.155759334564209
    6. 'arr' → logprob: -3.155759334564209
    7. 'grid' → logprob: -4.030759334564209
    8. 'graph' → logprob: -4.155759334564209
    9. 'table' → logprob: -5.155759334564209
    10. 'lst' → logprob: -5.280759334564209

Token 36: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3624708950519562
    2. '(n' → logprob: -1.2374708652496338
    3. '((' → logprob: -4.612471103668213
    4. '(size' → logprob: -5.862471103668213
    5. '(l' → logprob: -8.487470626831055
    6. ' (' → logprob: -8.737470626831055
    7. '(length' → logprob: -8.737470626831055
    8. '(_' → logprob: -8.987470626831055
    9. '_(' → logprob: -9.112470626831055
    10. '(len' → logprob: -9.862470626831055

Token 37: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004936408717185259
    2. '):
' → logprob: -5.629936218261719
    3. ')' → logprob: -6.879936218261719
    4. ',' → logprob: -9.254936218261719
    5. '   ' → logprob: -9.629936218261719
    6. ' ):' → logprob: -10.004936218261719
    7. ':' → logprob: -10.754936218261719
    8. '):
' → logprob: -11.504936218261719
    9. 's' → logprob: -11.629936218261719
    10. '_' → logprob: -11.754936218261719

Token 38: ' n' (ID: 297)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4519877433776855
    2. 'dtype' → logprob: -1.8269877433776855
    3. ' dtype' → logprob: -2.2019877433776855
    4. 'm' → logprob: -2.3269877433776855
    5. ' l' → logprob: -2.4519877433776855
    6. 'n' → logprob: -2.7019877433776855
    7. ' m' → logprob: -3.4519877433776855
    8. ' n' → logprob: -3.5769877433776855
    9. ')' → logprob: -3.5769877433776855
    10. 'shape' → logprob: -3.7019877433776855

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1214044988155365
    2. ',' → logprob: -2.2464044094085693
    3. '):
' → logprob: -5.371404647827148
    4. ')' → logprob: -5.746404647827148
    5. ' ):' → logprob: -7.871404647827148
    6. ':' → logprob: -9.746404647827148
    7. ' ,' → logprob: -9.746404647827148
    8. '):
' → logprob: -10.496404647827148
    9. 's' → logprob: -10.496404647827148
    10. '):

' → logprob: -10.746404647827148

Token 40: '   ' (ID: 271)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.34553393721580505
    2. 'zeros' → logprob: -2.220533847808838
    3. '   ' → logprob: -2.345533847808838
    4. ' return' → logprob: -3.720533847808838
    5. '[' → logprob: -4.845533847808838
    6. ' ' → logprob: -4.970533847808838
    7. ' =' → logprob: -5.220533847808838
    8. '(' → logprob: -5.220533847808838
    9. ' [' → logprob: -5.470533847808838
    10. 'return' → logprob: -5.470533847808838

Token 41: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14983448386192322
    2. 'return' (adapté à ' return') → logprob: -2.274834394454956
    3. ' zeros' → logprob: -3.899834394454956
    4. '   ' → logprob: -4.524834632873535
    5. 'zeros' → logprob: -5.524834632873535
    6. ' ' → logprob: -8.024834632873535
    7. ' array' → logprob: -8.899834632873535
    8. '[' → logprob: -9.149834632873535
    9. ' [' → logprob: -9.399834632873535
    10. ' r' → logprob: -9.649834632873535

Token 42: ' zeros' (ID: 42274)
  Prédit: 'zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.0345476008951664
    2. 'array' → logprob: -3.9095475673675537
    3. ' zeros' → logprob: -4.409547805786133
    4. '[[' → logprob: -7.534547805786133
    5. 'ones' → logprob: -8.284547805786133
    6. 'full' → logprob: -8.534547805786133
    7. '[' → logprob: -8.659547805786133
    8. 'zero' → logprob: -8.659547805786133
    9. ' array' → logprob: -9.284547805786133
    10. 'empty' → logprob: -9.409547805786133

Token 43: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.03488921746611595
    2. '(l' → logprob: -3.5348892211914062
    3. '(' → logprob: -5.284889221191406
    4. '(int' → logprob: -10.409889221191406
    5. '(get' → logprob: -11.159889221191406
    6. '(shape' → logprob: -12.659889221191406
    7. '(s' → logprob: -12.784889221191406
    8. '```' → logprob: -13.034889221191406
    9. '(n' → logprob: -14.159889221191406
    10. ' (' → logprob: -14.409889221191406

Token 44: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0070214224979281425
    2. ' l' → logprob: -5.132021427154541
    3. ',' → logprob: -8.007020950317383
    4. ')' → logprob: -8.132020950317383
    5. '(' → logprob: -9.132020950317383
    6. 'n' → logprob: -9.382020950317383
    7. ' (' → logprob: -9.382020950317383
    8. '(l' → logprob: -9.507020950317383
    9. ',l' → logprob: -10.257020950317383
    10. '   ' → logprob: -10.882020950317383

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011428380385041237
    2. ' ,' → logprob: -7.251142978668213
    3. ',n' → logprob: -8.626142501831055
    4. ')' → logprob: -9.876142501831055
    5. '-' → logprob: -10.376142501831055
    6. '+' → logprob: -10.501142501831055
    7. ' ' → logprob: -11.001142501831055
    8. '),' → logprob: -11.001142501831055
    9. '))' → logprob: -11.001142501831055
    10. '   ' → logprob: -11.126142501831055

Token 46: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8061081171035767
    2. 'l' → logprob: -1.3061081171035767
    3. ' n' → logprob: -1.6811081171035767
    4. ' l' → logprob: -2.681107997894287
    5. '3' → logprob: -4.431107997894287
    6. ' ' → logprob: -5.056107997894287
    7. '2' → logprob: -5.806107997894287
    8. '4' → logprob: -6.431107997894287
    9. '1' → logprob: -7.056107997894287
    10. '6' → logprob: -7.306107997894287

Token 47: ' *' (ID: 425)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2527652084827423
    2. '),' → logprob: -1.50276517868042
    3. ')' → logprob: -8.127765655517578
    4. ' ))' → logprob: -8.252765655517578
    5. ' ),' → logprob: -9.377765655517578
    6. '))
' → logprob: -9.627765655517578
    7. ' ' → logprob: -10.127765655517578
    8. ',' → logprob: -10.252765655517578
    9. ')))' → logprob: -11.502765655517578
    10. '   ' → logprob: -12.002765655517578

Token 48: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.37408456206321716
    2. '2' → logprob: -2.24908447265625
    3. '4' → logprob: -2.74908447265625
    4. '))' → logprob: -2.99908447265625
    5. ' ' → logprob: -3.37408447265625
    6. '6' → logprob: -3.87408447265625
    7. '*' → logprob: -5.12408447265625
    8. ',' → logprob: -5.49908447265625
    9. ' *' → logprob: -5.87408447265625
    10. '7' → logprob: -5.87408447265625

Token 49: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2840346395969391
    2. '2' → logprob: -2.5340347290039062
    3. 'l' → logprob: -2.5340347290039062
    4. '4' → logprob: -3.0340347290039062
    5. '6' → logprob: -4.409034729003906
    6. '5' → logprob: -4.784034729003906
    7. 'n' → logprob: -5.159034729003906
    8. '7' → logprob: -5.284034729003906
    9. '9' → logprob: -6.034034729003906
    10. '10' → logprob: -6.659034729003906

Token 50: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.015915647149086
    2. '),' → logprob: -4.265915870666504
    3. ')' → logprob: -7.390915870666504
    4. ' ))' → logprob: -7.640915870666504
    5. '+' → logprob: -8.265915870666504
    6. ',' → logprob: -9.265915870666504
    7. ')))' → logprob: -9.515915870666504
    8. ' ' → logprob: -10.265915870666504
    9. '))
' → logprob: -10.390915870666504
    10. ')),' → logprob: -10.515915870666504

Token 51: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4828914999961853
    2. 'dtype' → logprob: -2.10789155960083
    3. 'float' → logprob: -2.60789155960083
    4. ' int' → logprob: -2.60789155960083
    5. ' dtype' → logprob: -2.60789155960083
    6. ' float' → logprob: -3.48289155960083
    7. ')' → logprob: -4.98289155960083
    8. 'bool' → logprob: -6.48289155960083
    9. 'uint' → logprob: -7.73289155960083
    10. ' bool' → logprob: -8.607891082763672

Token 52: '64' (ID: 2220)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38702917098999023
    2. ')' → logprob: -1.1370291709899902
    3. '),' → logprob: -8.887029647827148
    4. ')))' → logprob: -11.637029647827148
    5. ' ))' → logprob: -12.512029647827148
    6. ' )' → logprob: -12.762029647827148
    7. '))
' → logprob: -13.387029647827148
    8. '));' → logprob: -15.012029647827148
    9. ')
' → logprob: -15.012029647827148
    10. ' ' → logprob: -15.137029647827148

Token 53: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38690537214279175
    2. '))' → logprob: -1.1369054317474365
    3. ')))' → logprob: -10.886905670166016
    4. '),' → logprob: -12.011905670166016
    5. ' )' → logprob: -13.136905670166016
    6. ' ))' → logprob: -13.386905670166016
    7. '()' → logprob: -13.636905670166016
    8. '   ' → logprob: -13.886905670166016
    9. '())' → logprob: -14.261905670166016
    10. '()))' → logprob: -14.261905670166016

Token 54: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1235519647598267
    2. ')' → logprob: -1.7485519647598267
    3. '<|end|>' → logprob: -1.9985519647598267
    4. '
' → logprob: -1.9985519647598267
    5. '(' → logprob: -2.373551845550537
    6. '[' → logprob: -3.248551845550537
    7. 'newline' → logprob: -4.123551845550537
    8. '#' → logprob: -4.373551845550537
    9. '\' → logprob: -4.373551845550537
    10. '_' → logprob: -4.748551845550537

Token 55: ' set' (ID: 920)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0243030786514282
    2. ' solve' → logprob: -1.3993030786514282
    3. ' process' → logprob: -1.7743030786514282
    4. ' create' → logprob: -3.1493029594421387
    5. ' build' → logprob: -3.6493029594421387
    6. ' fill' → logprob: -3.7743029594421387
    7. ' parse' → logprob: -3.8993029594421387
    8. ' generate' → logprob: -4.024302959442139
    9. ' find' → logprob: -4.399302959442139
    10. ' get' → logprob: -4.524302959442139

Token 56: '_init' (ID: 13909)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5562906861305237
    2. '_values' → logprob: -2.306290626525879
    3. '_array' → logprob: -3.056290626525879
    4. '_value' → logprob: -3.306290626525879
    5. '_cell' → logprob: -3.431290626525879
    6. '_cells' → logprob: -3.431290626525879
    7. '_bits' → logprob: -3.931290626525879
    8. '(' → logprob: -3.931290626525879
    9. '_row' → logprob: -4.306290626525879
    10. '_data' → logprob: -4.806290626525879

Token 57: '(d' (ID: 2572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.496056318283081
    2. '_state' → logprob: -1.496056318283081
    3. '_pos' → logprob: -1.871056318283081
    4. '_positions' → logprob: -2.996056318283081
    5. '_values' → logprob: -3.121056318283081
    6. 'ial' → logprob: -3.246056318283081
    7. '_val' → logprob: -3.621056318283081
    8. '_array' → logprob: -3.746056318283081
    9. '_vals' → logprob: -3.871056318283081
    10. '_states' → logprob: -3.871056318283081

Token 58: '):
' (ID: 1883)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.24780423939228058
    2. ',' → logprob: -2.3728041648864746
    3. ')' → logprob: -3.3728041648864746
    4. 'ict' → logprob: -3.4978041648864746
    5. '[' → logprob: -4.497804164886475
    6. 'ef' → logprob: -4.872804164886475
    7. 'ictionary' → logprob: -5.497804164886475
    8. 'efs' → logprob: -5.497804164886475
    9. 'ic' → logprob: -5.747804164886475
    10. 'ims' → logprob: -6.247804164886475

Token 59: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10659318417310715
    2. '   ' → logprob: -2.981593132019043
    3. '[d' → logprob: -3.981593132019043
    4. '(d' → logprob: -4.731593132019043
    5. '(' → logprob: -5.106593132019043
    6. 'd' → logprob: -5.356593132019043
    7. ' d' → logprob: -6.106593132019043
    8. ')' → logprob: -6.481593132019043
    9. '[
' → logprob: -6.481593132019043
    10. ' ' → logprob: -6.606593132019043

Token 60: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7882040739059448
    2. 'd' (adapté à ' d') → logprob: -0.9132040739059448
    3. ' for' → logprob: -2.7882041931152344
    4. '   ' → logprob: -2.9132041931152344
    5. 'for' → logprob: -3.9132041931152344
    6. ' ' → logprob: -5.288204193115234
    7. '[' → logprob: -6.913204193115234
    8. ' return' → logprob: -7.663204193115234
    9. 'return' → logprob: -7.913204193115234
    10. '    ' → logprob: -8.788204193115234

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007880349643528461
    2. '[:]' → logprob: -5.632880210876465
    3. '[:,' → logprob: -6.882880210876465
    4. '.' → logprob: -7.507880210876465
    5. ' [' → logprob: -7.882880210876465
    6. '[int' → logprob: -8.007880210876465
    7. '[:' → logprob: -8.007880210876465
    8. '.fill' → logprob: -8.132880210876465
    9. '[d' → logprob: -8.382880210876465
    10. ' .' → logprob: -8.382880210876465

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004514377564191818
    2. '1' → logprob: -6.504514217376709
    3. ' ' → logprob: -6.504514217376709
    4. '[' → logprob: -7.504514217376709
    5. ',' → logprob: -8.004514694213867
    6. 'd' → logprob: -8.629514694213867
    7. '-' → logprob: -8.754514694213867
    8. '2' → logprob: -9.504514694213867
    9. '3' → logprob: -10.129514694213867
    10. ' -' → logprob: -10.692014694213867

Token 63: '][' (ID: 2696)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1549609750509262
    2. '][' → logprob: -2.029960870742798
    3. ']' → logprob: -4.654961109161377
    4. '[' → logprob: -6.404961109161377
    5. ' ,' → logprob: -7.779961109161377
    6. '][:' → logprob: -9.029960632324219
    7. '0' → logprob: -9.279960632324219
    8. ' ' → logprob: -9.529960632324219
    9. ' ][' → logprob: -9.529960632324219
    10. ',:' → logprob: -10.342460632324219

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027176938951015472
    2. '2' → logprob: -4.277176856994629
    3. 'd' → logprob: -5.652176856994629
    4. ':' → logprob: -5.902176856994629
    5. '1' → logprob: -6.027176856994629
    6. '-' → logprob: -6.902176856994629
    7. '3' → logprob: -7.027176856994629
    8. ' ' → logprob: -7.402176856994629
    9. '::' → logprob: -7.527176856994629
    10. '4' → logprob: -7.777176856994629

Token 65: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005236956290900707
    2. ']=' → logprob: -5.630237102508545
    3. ' ]' → logprob: -6.505237102508545
    4. ',' → logprob: -9.630236625671387
    5. '=' → logprob: -11.130236625671387
    6. ']==' → logprob: -11.255236625671387
    7. '[' → logprob: -11.755236625671387
    8. ']+=' → logprob: -11.755236625671387
    9. '][' → logprob: -12.630236625671387
    10. ':' → logprob: -13.005236625671387

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34853148460388184
    2. ' =' → logprob: -1.2235314846038818
    3. ' ' → logprob: -9.723531723022461
    4. ' +=' → logprob: -11.848531723022461
    5. ',' → logprob: -12.098531723022461
    6. '+=' → logprob: -12.223531723022461
    7. '[' → logprob: -13.723531723022461
    8. '.' → logprob: -13.973531723022461
    9. ' |=' → logprob: -14.098531723022461
    10. ']' → logprob: -14.348531723022461

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.032492052763700485
    2. '0' → logprob: -4.282492160797119
    3. '2' → logprob: -5.282492160797119
    4. '3' → logprob: -5.782492160797119
    5. ' ' → logprob: -5.782492160797119
    6. '-' → logprob: -6.407492160797119
    7. '5' → logprob: -7.032492160797119
    8. '100' → logprob: -7.157492160797119
    9. '10' → logprob: -7.282492160797119
    10. '4' → logprob: -7.282492160797119

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.046741779893636703
    2. '0' → logprob: -4.171741962432861
    3. '3' → logprob: -5.046741962432861
    4. '2' → logprob: -5.171741962432861
    5. '-' → logprob: -5.171741962432861
    6. '5' → logprob: -5.796741962432861
    7. '4' → logprob: -6.421741962432861
    8. '100' → logprob: -6.421741962432861
    9. '10' → logprob: -6.671741962432861
    10. 'int' → logprob: -7.421741962432861

Token 69: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38522279262542725
    2. '<|end|>' → logprob: -1.2602227926254272
    3. '\n' → logprob: -5.135222911834717
    4. ' 
' → logprob: -5.260222911834717
    5. 'd' → logprob: -5.510222911834717
    6. '\' → logprob: -6.010222911834717
    7. '<|end|>' → logprob: -6.135222911834717
    8. 'def' → logprob: -6.385222911834717
    9. ' ' → logprob: -6.385222911834717
    10. 'newline' → logprob: -6.385222911834717

Token 70: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003721576649695635
    2. '
' → logprob: -5.878721714019775
    3. '\' → logprob: -8.628721237182617
    4. '<|end|>' → logprob: -8.628721237182617
    5. '<|end|>' → logprob: -8.878721237182617
    6. ' def' → logprob: -8.878721237182617
    7. '```' → logprob: -9.628721237182617
    8. 'd' → logprob: -9.878721237182617
    9. '\n' → logprob: -10.003721237182617
    10. 'ndef' → logprob: -11.003721237182617

Token 71: ' assign' (ID: 14975)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.18623065948486328
    2. ' get' → logprob: -2.5612306594848633
    3. ' test' → logprob: -4.686230659484863
    4. ' run' → logprob: -4.686230659484863
    5. ' dfs' → logprob: -4.811230659484863
    6. ' ' → logprob: -5.186230659484863
    7. ' multiply' → logprob: -5.186230659484863
    8. ' add' → logprob: -5.311230659484863
    9. ' create' → logprob: -5.311230659484863
    10. ' parse' → logprob: -5.311230659484863

Token 72: '_indices' (ID: 43508)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.7723544836044312
    2. '_' → logprob: -1.5223544836044312
    3. '_values' → logprob: -1.7723544836044312
    4. '(' → logprob: -3.1473546028137207
    5. '_value' → logprob: -3.2723546028137207
    6. '_array' → logprob: -3.8973546028137207
    7. '_cells' → logprob: -4.772354602813721
    8. '_indices' → logprob: -5.772354602813721
    9. '_cell' → logprob: -5.772354602813721
    10. '_(' → logprob: -5.897354602813721

Token 73: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024488283321261406
    2. '(d' → logprob: -3.7744882106781006
    3. '(n' → logprob: -7.89948844909668
    4. ' (' → logprob: -8.14948844909668
    5. '(l' → logprob: -8.27448844909668
    6. '(s' → logprob: -9.27448844909668
    7. '(data' → logprob: -10.14948844909668
    8. '(indices' → logprob: -10.52448844909668
    9. '(a' → logprob: -10.89948844909668
    10. '()' → logprob: -10.89948844909668

Token 74: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034497492015361786
    2. ' ,' → logprob: -3.9094974994659424
    3. '):' → logprob: -4.409497261047363
    4. ',d' → logprob: -7.784497261047363
    5. ')' → logprob: -8.034497261047363
    6. ',n' → logprob: -8.409497261047363
    7. ' ' → logprob: -8.659497261047363
    8. ' ):' → logprob: -9.034497261047363
    9. ',i' → logprob: -9.659497261047363
    10. '   ' → logprob: -9.784497261047363

Token 75: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7151049971580505
    2. '   ' → logprob: -0.9651049971580505
    3. ' i' → logprob: -2.8401050567626953
    4. 'return' → logprob: -3.7151050567626953
    5. '    ' → logprob: -3.8401050567626953
    6. ' (' → logprob: -5.465105056762695
    7. ' ' → logprob: -5.590105056762695
    8. ' [' → logprob: -6.090105056762695
    9. '[]' → logprob: -6.215105056762695
    10. '[' → logprob: -6.340105056762695

Token 76: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4456271529197693
    2. ' i' → logprob: -1.820627212524414
    3. 'return' (adapté à ' return') → logprob: -2.195627212524414
    4. '   ' → logprob: -3.195627212524414
    5. ' [' → logprob: -4.320627212524414
    6. 'i' → logprob: -4.945627212524414
    7. '[' → logprob: -5.195627212524414
    8. ' (' → logprob: -5.445627212524414
    9. ' range' → logprob: -5.820627212524414
    10. '[i' → logprob: -6.195627212524414

Token 77: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7715944051742554
    2. ' i' → logprob: -1.1465944051742554
    3. '[i' → logprob: -2.521594524383545
    4. ' [' → logprob: -2.896594524383545
    5. '[' → logprob: -3.521594524383545
    6. ' (' → logprob: -4.021594524383545
    7. '(i' → logprob: -4.146594524383545
    8. '(' → logprob: -5.271594524383545
    9. '3' → logprob: -6.021594524383545
    10. '[(' → logprob: -6.396594524383545

Token 78: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021318919956684113
    2. '2' → logprob: -4.7713189125061035
    3. '3' → logprob: -5.0213189125061035
    4. ' ' → logprob: -5.6463189125061035
    5. '4' → logprob: -7.2713189125061035
    6. '5' → logprob: -7.7713189125061035
    7. 'i' → logprob: -8.146319389343262
    8. 'get' → logprob: -8.521319389343262
    9. '6' → logprob: -8.646319389343262
    10. '(' → logprob: -9.271319389343262

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033643852919340134
    2. '2' → logprob: -4.28364372253418
    3. '3' → logprob: -4.53364372253418
    4. '4' → logprob: -6.15864372253418
    5. '5' → logprob: -6.40864372253418
    6. '6' → logprob: -7.40864372253418
    7. 'i' → logprob: -7.65864372253418
    8. '10' → logprob: -7.90864372253418
    9. '(' → logprob: -8.40864372253418
    10. '15' → logprob: -8.40864372253418

Token 81: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5672870874404907
    2. '<|end|>' → logprob: -0.9422870874404907
    3. '<|end|>' → logprob: -3.817286968231201
    4. '
' → logprob: -4.192286968231201
    5. '\n' → logprob: -6.317286968231201
    6. ' def' → logprob: -7.067286968231201
    7. ':' → logprob: -7.192286968231201
    8. '#' → logprob: -7.567286968231201
    9. '```' → logprob: -7.942286968231201
    10. '\' → logprob: -8.19228744506836

Token 82: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9329111576080322
    2. ' i' → logprob: -1.3079111576080322
    3. 'i' → logprob: -1.5579111576080322
    4. ' ' → logprob: -2.1829111576080322
    5. '2' → logprob: -6.057910919189453
    6. '5' → logprob: -6.057910919189453
    7. '1' → logprob: -6.432910919189453
    8. '...' → logprob: -7.057910919189453
    9. ',' → logprob: -7.182910919189453
    10. '3' → logprob: -7.182910919189453

Token 83: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.649162232875824
    2. '<|end|>' → logprob: -0.774162232875824
    3. '<|end|>' → logprob: -5.024162292480469
    4. '
' → logprob: -5.649162292480469
    5. ':' → logprob: -6.399162292480469
    6. ' def' → logprob: -7.024162292480469
    7. '\' → logprob: -7.149162292480469
    8. '\n' → logprob: -7.274162292480469
    9. '```' → logprob: -7.399162292480469
    10. '[' → logprob: -7.899162292480469

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.36371663212776184
    2. '2' → logprob: -1.3637166023254395
    3. ' ' → logprob: -3.6137166023254395
    4. '3' → logprob: -4.1137166023254395
    5. 'i' → logprob: -6.3637166023254395
    6. '4' → logprob: -6.7387166023254395
    7. '5' → logprob: -6.9887166023254395
    8. '0' → logprob: -7.3637166023254395
    9. '6' → logprob: -7.6137166023254395
    10. '7' → logprob: -8.613717079162598

Token 85: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6698397994041443
    2. '2' → logprob: -0.7948397994041443
    3. '3' → logprob: -3.544839859008789
    4. '5' → logprob: -5.919839859008789
    5. '4' → logprob: -5.919839859008789
    6. '0' → logprob: -7.544839859008789
    7. '6' → logprob: -7.669839859008789
    8. ' ' → logprob: -7.669839859008789
    9. 'i' → logprob: -8.044839859008789
    10. '7' → logprob: -9.044839859008789

Token 86: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' compute' (ID: 23864)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.8461822867393494
    2. ' parse' → logprob: -2.846182346343994
    3. 'get' → logprob: -3.096182346343994
    4. ' set' → logprob: -3.346182346343994
    5. ' process' → logprob: -3.471182346343994
    6. ' test' → logprob: -3.596182346343994
    7. ' def' → logprob: -3.596182346343994
    8. ' check' → logprob: -3.721182346343994
    9. 'def' → logprob: -3.846182346343994
    10. ' create' → logprob: -4.096182346343994

Token 89: '_first' (ID: 29347)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.7385878562927246
    2. '_sum' → logprob: -2.3635878562927246
    3. '_' → logprob: -2.4885878562927246
    4. '(i' → logprob: -2.8635878562927246
    5. '_result' → logprob: -2.8635878562927246
    6. '(l' → logprob: -2.8635878562927246
    7. '_max' → logprob: -3.2385878562927246
    8. '_values' → logprob: -3.2385878562927246
    9. '_next' → logprob: -3.3635878562927246
    10. '_array' → logprob: -3.3635878562927246

Token 90: '_term' (ID: 41867)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.2446469068527222
    2. '_layer' → logprob: -1.4946469068527222
    3. '(l' → logprob: -3.1196470260620117
    4. '_diff' → logprob: -3.1196470260620117
    5. '_line' → logprob: -3.3696470260620117
    6. '_step' → logprob: -3.3696470260620117
    7. '_l' → logprob: -3.3696470260620117
    8. '_value' → logprob: -3.4946470260620117
    9. '_column' → logprob: -3.8696470260620117
    10. '_level' → logprob: -4.244647026062012

Token 91: '(d' (ID: 2572)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.40008848905563354
    2. '(n' → logprob: -1.7750885486602783
    3. '(' → logprob: -2.2750885486602783
    4. '(l' → logprob: -3.7750885486602783
    5. '(s' → logprob: -4.150088310241699
    6. '(a' → logprob: -5.025088310241699
    7. ' (' → logprob: -5.275088310241699
    8. '():' → logprob: -6.025088310241699
    9. '(x' → logprob: -7.400088310241699
    10. '(d' → logprob: -7.650088310241699

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007325843907892704
    2. ',i' → logprob: -5.632325649261475
    3. ' ,' → logprob: -6.632325649261475
    4. '   ' → logprob: -7.257325649261475
    5. '[' → logprob: -7.257325649261475
    6. '):' → logprob: -7.757325649261475
    7. ',d' → logprob: -9.257326126098633
    8. '[i' → logprob: -9.632326126098633
    9. '(' → logprob: -9.757326126098633
    10. '(i' → logprob: -9.757326126098633

Token 93: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3847821950912476
    2. ' i' → logprob: -1.5097821950912476
    3. '0' → logprob: -1.8847821950912476
    4. ' ' → logprob: -2.509782314300537
    5. ' l' → logprob: -2.759782314300537
    6. 'l' → logprob: -3.134782314300537
    7. ' n' → logprob: -3.134782314300537
    8. 'n' → logprob: -3.634782314300537
    9. '1' → logprob: -3.634782314300537
    10. ' d' → logprob: -3.884782314300537

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6026089787483215
    2. '):' → logprob: -0.8526089787483215
    3. '):
' → logprob: -4.227609157562256
    4. ')' → logprob: -5.477609157562256
    5. ' ,' → logprob: -6.352609157562256
    6. ' ):' → logprob: -6.477609157562256
    7. '-' → logprob: -6.602609157562256
    8. '   ' → logprob: -6.602609157562256
    9. ' ' → logprob: -8.352608680725098
    10. ',i' → logprob: -8.477608680725098

Token 95: ' k' (ID: 372)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3787879943847656
    2. ' j' → logprob: -1.6287879943847656
    3. 'x' → logprob: -3.0037879943847656
    4. 'a' → logprob: -3.0037879943847656
    5. 'l' → logprob: -3.3787879943847656
    6. ' idx' → logprob: -3.3787879943847656
    7. ' x' → logprob: -3.5037879943847656
    8. 'i' → logprob: -3.5037879943847656
    9. ' a' → logprob: -3.5037879943847656
    10. ' l' → logprob: -3.5037879943847656

Token 96: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13239428400993347
    2. '):
' → logprob: -2.632394313812256
    3. ',' → logprob: -3.132394313812256
    4. ')' → logprob: -5.007394313812256
    5. '):
' → logprob: -7.507394313812256
    6. ' ):' → logprob: -7.632394313812256
    7. '   ' → logprob: -7.882394313812256
    8. '):

' → logprob: -9.382393836975098
    9. ' ' → logprob: -10.007393836975098
    10. ' ,' → logprob: -10.257393836975098

Token 97: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.9800689816474915
    2. ' l' → logprob: -1.9800689220428467
    3. 'j' → logprob: -2.1050689220428467
    4. ' n' → logprob: -2.8550689220428467
    5. 'l' → logprob: -3.4800689220428467
    6. ' idx' → logprob: -3.9800689220428467
    7. ' prev' → logprob: -3.9800689220428467
    8. ' x' → logprob: -4.230069160461426
    9. 'n' → logprob: -4.230069160461426
    10. ' ' → logprob: -4.542569160461426

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.041599493473768234
    2. '):
' → logprob: -3.5415995121002197
    3. ',' → logprob: -4.791599273681641
    4. ')' → logprob: -6.666599273681641
    5. '+' → logprob: -7.291599273681641
    6. '   ' → logprob: -7.666599273681641
    7. ' ):' → logprob: -7.791599273681641
    8. '):
' → logprob: -8.54159927368164
    9. '-' → logprob: -8.79159927368164
    10. ' ' → logprob: -9.54159927368164

Token 99: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31840187311172485
    2. 'return' → logprob: -1.94340181350708
    3. '   ' → logprob: -2.44340181350708
    4. ' d' → logprob: -3.56840181350708
    5. ' return' → logprob: -4.31840181350708
    6. 'if' → logprob: -7.31840181350708
    7. ' ' → logprob: -9.443402290344238
    8. ' if' → logprob: -9.818402290344238
    9. '(d' → logprob: -9.943402290344238
    10. 'for' → logprob: -10.318402290344238

Token 100: ' return' (ID: 622)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23133046925067902
    2. 'return' (adapté à ' return') → logprob: -2.356330394744873
    3. ' d' → logprob: -2.731330394744873
    4. '   ' → logprob: -3.981330394744873
    5. ' return' → logprob: -4.106330394744873
    6. 'if' → logprob: -4.981330394744873
    7. '(d' → logprob: -6.106330394744873
    8. ' if' → logprob: -6.981330394744873
    9. 'for' → logprob: -8.231330871582031
    10. ' (' → logprob: -8.356330871582031

Token 101: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.021053172647953033
    2. ' d' → logprob: -4.146053314208984
    3. '(d' → logprob: -5.896053314208984
    4. '2' → logprob: -7.771053314208984
    5. '3' → logprob: -7.896053314208984
    6. '(' → logprob: -8.146053314208984
    7. '   ' → logprob: -8.271053314208984
    8. 'int' → logprob: -8.521053314208984
    9. ' (' → logprob: -8.646053314208984
    10. ' ' → logprob: -8.771053314208984

Token 102: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.035519883036613464
    2. '[k' → logprob: -3.41051983833313
    3. '[j' → logprob: -6.410520076751709
    4. '[' → logprob: -8.91051959991455
    5. 'k' → logprob: -10.91051959991455
    6. '[
' → logprob: -11.41051959991455
    7. 'i' → logprob: -11.41051959991455
    8. '[d' → logprob: -11.78551959991455
    9. ' [' → logprob: -11.91051959991455
    10. '```' → logprob: -12.28551959991455

Token 103: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4237101376056671
    2. '][' → logprob: -1.2987101078033447
    3. ' -' → logprob: -3.4237101078033447
    4. ',' → logprob: -4.423710346221924
    5. ',k' → logprob: -4.423710346221924
    6. '-k' → logprob: -5.298710346221924
    7. '   ' → logprob: -5.673710346221924
    8. ' ' → logprob: -5.798710346221924
    9. ',j' → logprob: -6.298710346221924
    10. ' ,' → logprob: -7.173710346221924

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023113394156098366
    2. '2' → logprob: -4.273113250732422
    3. ' ' → logprob: -4.898113250732422
    4. 'k' → logprob: -7.148113250732422
    5. '   ' → logprob: -8.273113250732422
    6. '3' → logprob: -8.898113250732422
    7. ' k' → logprob: -10.148113250732422
    8. '][' → logprob: -10.585613250732422
    9. '```' → logprob: -10.835613250732422
    10. '    ' → logprob: -10.835613250732422

Token 105: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011643871665000916
    2. '2' → logprob: -4.511643886566162
    3. '3' → logprob: -7.886643886566162
    4. 'k' → logprob: -8.886643409729004
    5. ' ' → logprob: -10.011643409729004
    6. '4' → logprob: -11.136643409729004
    7. 'j' → logprob: -11.886643409729004
    8. '5' → logprob: -12.199143409729004
    9. '   ' → logprob: -12.449143409729004
    10. '```' → logprob: -14.261643409729004

Token 106: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003924995195120573
    2. ',' → logprob: -6.62892484664917
    3. ']' → logprob: -6.87892484664917
    4. ',k' → logprob: -7.37892484664917
    5. ' ][' → logprob: -8.003925323486328
    6. '[k' → logprob: -8.253925323486328
    7. 'k' → logprob: -8.378925323486328
    8. '   ' → logprob: -10.503925323486328
    9. '[' → logprob: -11.128925323486328
    10. ' ' → logprob: -11.253925323486328

Token 107: ' *' (ID: 425)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08254022151231766
    2. '[k' → logprob: -3.082540273666382
    3. 'k' → logprob: -4.332540035247803
    4. '[' → logprob: -5.207540035247803
    5. ',' → logprob: -5.457540035247803
    6. ',k' → logprob: -5.457540035247803
    7. '[j' → logprob: -5.832540035247803
    8. ']' → logprob: -6.707540035247803
    9. ' [' → logprob: -7.457540035247803
    10. ',j' → logprob: -8.332540512084961

Token 108: ' k' (ID: 372)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38075289130210876
    2. ' d' → logprob: -1.5057529211044312
    3. 'k' → logprob: -3.6307528018951416
    4. '3' → logprob: -4.505753040313721
    5. '(d' → logprob: -4.505753040313721
    6. ' ' → logprob: -4.755753040313721
    7. '2' → logprob: -4.880753040313721
    8. ' k' → logprob: -4.880753040313721
    9. 'j' → logprob: -5.130753040313721
    10. ' (' → logprob: -5.380753040313721

Token 109: ' *' (ID: 425)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.4342883229255676
    2. '[' → logprob: -1.0592882633209229
    3. '[i' → logprob: -6.434288501739502
    4. ',' → logprob: -6.559288501739502
    5. ',j' → logprob: -6.559288501739502
    6. ' [' → logprob: -8.059288024902344
    7. '[
' → logprob: -8.809288024902344
    8. '<|end|>' → logprob: -8.809288024902344
    9. '[js' → logprob: -9.684288024902344
    10. '[k' → logprob: -9.684288024902344

Token 110: ' j' (ID: 441)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4116637110710144
    2. ' d' → logprob: -1.6616637706756592
    3. 'j' → logprob: -2.286663770675659
    4. ' j' → logprob: -4.16166353225708
    5. '3' → logprob: -4.53666353225708
    6. ' (' → logprob: -5.53666353225708
    7. '(' → logprob: -5.66166353225708
    8. ' ' → logprob: -5.78666353225708
    9. '2' → logprob: -6.03666353225708
    10. '5' → logprob: -6.53666353225708

Token 111: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008972621522843838
    2. '[i' → logprob: -5.008972644805908
    3. '[
' → logprob: -6.883972644805908
    4. '<|end|>' → logprob: -7.258972644805908
    5. '.' → logprob: -8.50897216796875
    6. '[int' → logprob: -10.00897216796875
    7. '[]' → logprob: -10.38397216796875
    8. '```' → logprob: -10.63397216796875
    9. '[user' → logprob: -10.75897216796875
    10. ',' → logprob: -11.00897216796875

Token 112: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022830991074442863
    2. '[i' → logprob: -4.272830963134766
    3. '<|end|>' → logprob: -5.397830963134766
    4. '[
' → logprob: -5.772830963134766
    5. ',' → logprob: -8.897830963134766
    6. '```' → logprob: -9.147830963134766
    7. '[int' → logprob: -9.522830963134766
    8. ']' → logprob: -9.647830963134766
    9. '.' → logprob: -9.897830963134766
    10. '<|end|>' → logprob: -10.022830963134766

Token 113: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.006302499677985907
    2. 'compute' → logprob: -5.381302356719971
    3. ' def' → logprob: -7.381302356719971
    4. ' get' → logprob: -8.131302833557129
    5. ' parse' → logprob: -8.756302833557129
    6. '_compute' → logprob: -9.006302833557129
    7. 'def' → logprob: -9.131302833557129
    8. ' set' → logprob: -9.381302833557129
    9. ' calculate' → logprob: -10.131302833557129
    10. '_' → logprob: -10.256302833557129

Token 114: '_second' (ID: 67724)
  Prédit: '_first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.008685247972607613
    2. '_second' → logprob: -5.133685111999512
    3. '_next' → logprob: -7.383685111999512
    4. '(' → logprob: -7.508685111999512
    5. 'first' → logprob: -7.633685111999512
    6. '(d' → logprob: -7.758685111999512
    7. '_last' → logprob: -8.758685111999512
    8. '[' → logprob: -9.883685111999512
    9. '_' → logprob: -10.008685111999512
    10. 'First' → logprob: -10.258685111999512

Token 115: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.001738720922730863
    2. '(d' → logprob: -7.001738548278809
    3. '(' → logprob: -8.501738548278809
    4. '_' → logprob: -8.626738548278809
    5. '_token' → logprob: -8.626738548278809
    6. '_terms' → logprob: -8.876738548278809
    7. '(_' → logprob: -10.251738548278809
    8. ' _' → logprob: -11.376738548278809
    9. '_d' → logprob: -11.376738548278809
    10. '```' → logprob: -12.001738548278809

Token 116: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00275792577303946
    2. '(' → logprob: -6.502758026123047
    3. ' (' → logprob: -6.752758026123047
    4. 'def' → logprob: -10.252758026123047
    5. '(def' → logprob: -11.127758026123047
    6. ' +' → logprob: -11.877758026123047
    7. '   ' → logprob: -12.252758026123047
    8. '+' → logprob: -12.502758026123047
    9. ':' → logprob: -12.752758026123047
    10. ' ' → logprob: -12.877758026123047

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017465773271396756
    2. '[i' → logprob: -6.501746654510498
    3. ',i' → logprob: -9.12674617767334
    4. '[' → logprob: -9.75174617767334
    5. '   ' → logprob: -10.75174617767334
    6. ' ,' → logprob: -10.87674617767334
    7. '):' → logprob: -12.00174617767334
    8. '[d' → logprob: -12.62674617767334
    9. '[j' → logprob: -12.75174617767334
    10. 'def' → logprob: -12.87674617767334

Token 118: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25549253821372986
    2. 'i' → logprob: -1.5054925680160522
    3. ')' → logprob: -7.505492687225342
    4. ' j' → logprob: -7.630492687225342
    5. ' d' → logprob: -7.880492687225342
    6. ' k' → logprob: -7.880492687225342
    7. 'd' → logprob: -8.130492210388184
    8. '   ' → logprob: -8.380492210388184
    9. ' ' → logprob: -8.505492210388184
    10. 'j' → logprob: -8.630492210388184

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03215619549155235
    2. '):' → logprob: -4.032155990600586
    3. '-' → logprob: -6.157155990600586
    4. ')' → logprob: -6.407155990600586
    5. ' ,' → logprob: -6.407155990600586
    6. '   ' → logprob: -6.407155990600586
    7. '[i' → logprob: -6.657155990600586
    8. '[' → logprob: -7.032155990600586
    9. ']' → logprob: -7.032155990600586
    10. ',k' → logprob: -7.532155990600586

Token 120: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7440388202667236
    2. ' j' → logprob: -1.7440388202667236
    3. 'i' → logprob: -2.1190388202667236
    4. 'k' → logprob: -2.2440388202667236
    5. ' i' → logprob: -2.7440388202667236
    6. ' k' → logprob: -3.3690388202667236
    7. '1' → logprob: -5.1190385818481445
    8. ' ' → logprob: -6.1190385818481445
    9. ')' → logprob: -6.1190385818481445
    10. '2' → logprob: -6.2440385818481445

Token 121: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6075796484947205
    2. '):
' → logprob: -1.2325797080993652
    3. ',' → logprob: -1.8575797080993652
    4. '   ' → logprob: -5.857579708099365
    5. '[' → logprob: -6.857579708099365
    6. '):
' → logprob: -7.232579708099365
    7. ')' → logprob: -7.482579708099365
    8. ' ):' → logprob: -7.607579708099365
    9. ' ,' → logprob: -8.107579231262207
    10. '-' → logprob: -8.607579231262207

Token 122: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8752669095993042
    2. ' d' → logprob: -1.3752669095993042
    3. ' =' → logprob: -2.0002670288085938
    4. '   ' → logprob: -2.2502670288085938
    5. 'return' → logprob: -3.6252670288085938
    6. '=' → logprob: -4.000267028808594
    7. 'd' → logprob: -4.250267028808594
    8. '[' → logprob: -5.000267028808594
    9. ' k' → logprob: -5.500267028808594
    10. ' ' → logprob: -5.500267028808594

Token 123: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8121603727340698
    2. ' return' → logprob: -1.1871603727340698
    3. 'd' → logprob: -1.9371603727340698
    4. ' d' → logprob: -2.3121604919433594
    5. 'k' → logprob: -5.937160491943359
    6. ' k' → logprob: -6.437160491943359
    7. 'sum' → logprob: -7.437160491943359
    8. ' sum' → logprob: -7.937160491943359
    9. 'j' → logprob: -8.06216049194336
    10. '-' → logprob: -8.06216049194336

Token 124: ' roll' (ID: 8465)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11807119846343994
    2. ' d' → logprob: -2.3680710792541504
    3. 'k' → logprob: -5.36807107925415
    4. '(d' → logprob: -5.99307107925415
    5. 'sum' → logprob: -5.99307107925415
    6. 'dot' → logprob: -6.61807107925415
    7. 'j' → logprob: -7.24307107925415
    8. ' sum' → logprob: -7.36807107925415
    9. '2' → logprob: -7.49307107925415
    10. '1' → logprob: -7.61807107925415

Token 125: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.005937805864959955
    2. '(' → logprob: -5.130937576293945
    3. 'd' → logprob: -12.380937576293945
    4. '((' → logprob: -13.130937576293945
    5. '(k' → logprob: -14.630937576293945
    6. '(
' → logprob: -15.255937576293945
    7. '(-' → logprob: -15.380937576293945
    8. '(a' → logprob: -15.505937576293945
    9. '(D' → logprob: -15.505937576293945
    10. '(s' → logprob: -15.630937576293945

Token 126: '[k' (ID: 14298)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29829928278923035
    2. ',k' → logprob: -1.9232993125915527
    3. '[' → logprob: -2.5482993125915527
    4. '[k' → logprob: -3.6732993125915527
    5. ',(' → logprob: -5.798299312591553
    6. '[-' → logprob: -6.673299312591553
    7. ' ,' → logprob: -6.798299312591553
    8. ',[' → logprob: -7.048299312591553
    9. ',d' → logprob: -7.298299312591553
    10. ',-' → logprob: -7.798299312591553

Token 127: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0029752030968666077
    2. ',' → logprob: -6.377974987030029
    3. ']' → logprob: -7.877974987030029
    4. '],[' → logprob: -8.127975463867188
    5. '][' → logprob: -9.002975463867188
    6. '-' → logprob: -9.127975463867188
    7. ',-' → logprob: -9.877975463867188
    8. ',k' → logprob: -10.002975463867188
    9. '+' → logprob: -10.127975463867188
    10. ']+' → logprob: -10.377975463867188

Token 128: ' -' (ID: 533)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16795706748962402
    2. '1' → logprob: -2.917957067489624
    3. ' j' → logprob: -2.917957067489624
    4. '-j' → logprob: -3.542957067489624
    5. '-' → logprob: -4.667957305908203
    6. ' -' → logprob: -5.917957305908203
    7. ' ' → logprob: -6.292957305908203
    8. 'axis' → logprob: -6.917957305908203
    9. 'shift' → logprob: -7.417957305908203
    10. '2' → logprob: -8.292957305908203

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11696618050336838
    2. 'j' → logprob: -2.2419662475585938
    3. '3' → logprob: -6.116966247558594
    4. '2' → logprob: -6.491966247558594
    5. '5' → logprob: -8.491966247558594
    6. ' j' → logprob: -9.241966247558594
    7. ' ' → logprob: -9.866966247558594
    8. '   ' → logprob: -11.241966247558594
    9. '4' → logprob: -11.366966247558594
    10. '(' → logprob: -11.741966247558594

Token 130: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2532120943069458
    2. ',' → logprob: -1.5032120943069458
    3. ')[' → logprob: -7.128211975097656
    4. ' ,' → logprob: -8.878211975097656
    5. ',j' → logprob: -9.378211975097656
    6. ')*' → logprob: -10.003211975097656
    7. '[' → logprob: -10.003211975097656
    8. ' ' → logprob: -10.378211975097656
    9. '[:,' → logprob: -10.378211975097656
    10. ' )' → logprob: -10.378211975097656

Token 131: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16131173074245453
    2. '<|end|>' → logprob: -2.161311626434326
    3. '[k' → logprob: -4.661311626434326
    4. '(' → logprob: -5.161311626434326
    5. '[
' → logprob: -5.286311626434326
    6. ')' → logprob: -5.286311626434326
    7. 'def' → logprob: -5.661311626434326
    8. '(k' → logprob: -6.411311626434326
    9. '```' → logprob: -7.286311626434326
    10. '[]' → logprob: -7.286311626434326

Token 132: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07081984728574753
    2. ' j' → logprob: -2.695819854736328
    3. '2' → logprob: -8.570819854736328
    4. ' ' → logprob: -9.195819854736328
    5. '(j' → logprob: -9.445819854736328
    6. '3' → logprob: -9.570819854736328
    7. 'k' → logprob: -9.820819854736328
    8. 'd' → logprob: -10.070819854736328
    9. '5' → logprob: -10.195819854736328
    10. '(' → logprob: -10.195819854736328

Token 133: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19981104135513306
    2. '<|end|>' → logprob: -2.3248109817504883
    3. '[' → logprob: -3.5748109817504883
    4. ' def' → logprob: -4.074810981750488
    5. '(' → logprob: -4.574810981750488
    6. ')' → logprob: -5.074810981750488
    7. ',' → logprob: -5.199810981750488
    8. 'd' → logprob: -5.824810981750488
    9. ' ' → logprob: -5.949810981750488
    10. '
' → logprob: -6.324810981750488

Token 135: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.3538854718208313
    2. ' compute' → logprob: -2.6038854122161865
    3. 'process' → logprob: -3.7288854122161865
    4. 'parse' → logprob: -4.103885650634766
    5. 'multiply' → logprob: -4.103885650634766
    6. 'update' → logprob: -4.353885650634766
    7. 'main' → logprob: -4.353885650634766
    8. 'get' → logprob: -4.478885650634766
    9. 'solve' → logprob: -4.853885650634766
    10. 'def' → logprob: -4.853885650634766

Token 136: '_th' (ID: 16038)
  Prédit: '_th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_th' → logprob: -0.1931777149438858
    2. '_second' → logprob: -1.8181777000427246
    3. '_first' → logprob: -4.568177700042725
    4. 'third' → logprob: -6.568177700042725
    5. '_sum' → logprob: -8.068178176879883
    6. '_last' → logprob: -8.318178176879883
    7. '_next' → logprob: -8.568178176879883
    8. '_total' → logprob: -9.068178176879883
    9. '_four' → logprob: -9.443178176879883
    10. '_term' → logprob: -9.818178176879883

Token 137: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -8.458980300929397e-05
    2. 'erm' → logprob: -9.87508487701416
    3. '_term' → logprob: -11.25008487701416
    4. 'ree' → logprob: -11.87508487701416
    5. 'irst' → logprob: -13.00008487701416
    6. 'irds' → logprob: -13.12508487701416
    7. 'ir' → logprob: -13.25008487701416
    8. 'read' → logprob: -13.62508487701416
    9. 'term' → logprob: -13.75008487701416
    10. 'rd' → logprob: -14.00008487701416

Token 138: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -3.4121114822482923e-06
    2. '_terms' → logprob: -13.625003814697266
    3. 'term' → logprob: -14.125003814697266
    4. '_part' → logprob: -15.125003814697266
    5. '_token' → logprob: -15.500003814697266
    6. '_factor' → logprob: -15.625003814697266
    7. '_' → logprob: -16.000003814697266
    8. '_value' → logprob: -16.250003814697266
    9. 'erm' → logprob: -16.250003814697266
    10. '```' → logprob: -16.500003814697266

Token 139: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -3.5120287066092715e-05
    2. '(' → logprob: -10.750035285949707
    3. '(def' → logprob: -12.375035285949707
    4. ' (' → logprob: -12.875035285949707
    5. 'def' → logprob: -13.125035285949707
    6. '(k' → logprob: -13.875035285949707
    7. '(s' → logprob: -14.250035285949707
    8. '(*' → logprob: -14.500035285949707
    9. '(n' → logprob: -14.875035285949707
    10. '(a' → logprob: -15.125035285949707

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006416454911231995
    2. ',k' → logprob: -5.131416320800781
    3. '[k' → logprob: -8.381416320800781
    4. ' ,' → logprob: -9.256416320800781
    5. ',j' → logprob: -10.131416320800781
    6. 'k' → logprob: -10.131416320800781
    7. ',i' → logprob: -11.131416320800781
    8. '(k' → logprob: -11.381416320800781
    9. 'def' → logprob: -11.381416320800781
    10. 'd' → logprob: -12.256416320800781

Token 141: ' j' (ID: 441)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.0104396343231201
    2. 'k' → logprob: -1.1354396343231201
    3. ' j' → logprob: -1.8854396343231201
    4. 'j' → logprob: -2.76043963432312
    5. ' i' → logprob: -2.76043963432312
    6. 'i' → logprob: -3.38543963432312
    7. ' ' → logprob: -7.635439872741699
    8. ')' → logprob: -8.1354398727417
    9. '1' → logprob: -8.4479398727417
    10. '0' → logprob: -8.6979398727417

Token 142: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010032890364527702
    2. '):
' → logprob: -4.885032653808594
    3. ',k' → logprob: -6.510032653808594
    4. '):' → logprob: -7.510032653808594
    5. '   ' → logprob: -9.135032653808594
    6. '[k' → logprob: -9.635032653808594
    7. ' ,' → logprob: -9.885032653808594
    8. ',j' → logprob: -10.260032653808594
    9. ',
' → logprob: -11.010032653808594
    10. ',d' → logprob: -11.010032653808594

Token 143: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05513704940676689
    2. ' return' → logprob: -2.9301371574401855
    3. 'd' → logprob: -8.930136680603027
    4. '   ' → logprob: -9.930136680603027
    5. '=' → logprob: -10.055136680603027
    6. 'roll' → logprob: -11.930136680603027
    7. 'def' → logprob: -12.180136680603027
    8. '```' → logprob: -12.805136680603027
    9. ' d' → logprob: -12.930136680603027
    10. ' =' → logprob: -13.055136680603027

Token 144: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01285711582750082
    2. ' return' → logprob: -4.387856960296631
    3. 'roll' → logprob: -8.512857437133789
    4. 'd' → logprob: -9.512857437133789
    5. ' roll' → logprob: -10.387857437133789
    6. 'def' → logprob: -11.012857437133789
    7. 'j' → logprob: -11.637857437133789
    8. '   ' → logprob: -13.012857437133789
    9. ' d' → logprob: -13.012857437133789
    10. 'import' → logprob: -13.762857437133789

Token 145: ' roll' (ID: 8465)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.07108957320451736
    2. ' roll' → logprob: -2.821089506149292
    3. 'd' → logprob: -5.071089744567871
    4. ' d' → logprob: -6.696089744567871
    5. 'zeros' → logprob: -8.071089744567871
    6. 'dot' → logprob: -9.071089744567871
    7. 'j' → logprob: -9.071089744567871
    8. '0' → logprob: -9.321089744567871
    9. 'flip' → logprob: -9.321089744567871
    10. 'conc' → logprob: -9.696089744567871

Token 146: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0030052734073251486
    2. '(' → logprob: -5.878005504608154
    3. 'd' → logprob: -8.628005027770996
    4. '(
' → logprob: -13.378005027770996
    5. '(s' → logprob: -13.503005027770996
    6. '(arr' → logprob: -13.628005027770996
    7. '(array' → logprob: -13.628005027770996
    8. '((' → logprob: -13.753005027770996
    9. '(...' → logprob: -13.753005027770996
    10. ',d' → logprob: -13.878005027770996

Token 147: '[j' (ID: 7895)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.623656690120697
    2. '[j' → logprob: -1.2486567497253418
    3. '[' → logprob: -1.7486567497253418
    4. '[:,' → logprob: -6.998656749725342
    5. '[...,' → logprob: -7.498656749725342
    6. 'j' → logprob: -8.123656272888184
    7. ',j' → logprob: -8.373656272888184
    8. ',' → logprob: -8.748656272888184
    9. '[len' → logprob: -8.873656272888184
    10. ')' → logprob: -8.873656272888184

Token 148: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0647801086306572
    2. ',' → logprob: -2.9397799968719482
    3. '[' → logprob: -5.689780235290527
    4. ']' → logprob: -6.064780235290527
    5. ' ,' → logprob: -6.814780235290527
    6. '][' → logprob: -7.064780235290527
    7. '-' → logprob: -7.689780235290527
    8. '+' → logprob: -8.064780235290527
    9. ' ],' → logprob: -8.064780235290527
    10. 'j' → logprob: -8.689780235290527

Token 149: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2744441330432892
    2. '1' → logprob: -1.5244441032409668
    3. ' ' → logprob: -4.524444103240967
    4. ' -' → logprob: -4.899444103240967
    5. '2' → logprob: -6.274444103240967
    6. '0' → logprob: -7.399444103240967
    7. '3' → logprob: -7.649444103240967
    8. ')' → logprob: -8.149444580078125
    9. '+' → logprob: -8.399444580078125
    10. 'j' → logprob: -9.399444580078125

Token 150: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16176633536815643
    2. '1' → logprob: -1.9117662906646729
    3. '2' → logprob: -7.286766529083252
    4. ' -' → logprob: -8.286766052246094
    5. ' ' → logprob: -8.411766052246094
    6. ')' → logprob: -9.286766052246094
    7. '3' → logprob: -9.286766052246094
    8. '0' → logprob: -9.411766052246094
    9. '+' → logprob: -10.036766052246094
    10. '
' → logprob: -11.974266052246094

Token 151: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.0948158382670954e-05
    2. ')*' → logprob: -10.750030517578125
    3. ' )' → logprob: -11.750030517578125
    4. ' ' → logprob: -15.500030517578125
    5. '*)' → logprob: -15.750030517578125
    6. '*' → logprob: -15.750030517578125
    7. ')`' → logprob: -15.875030517578125
    8. ',' → logprob: -15.875030517578125
    9. '   ' → logprob: -16.125030517578125
    10. '),' → logprob: -16.625030517578125

Token 152: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8027188181877136
    2. 'def' → logprob: -1.3027188777923584
    3. ')' → logprob: -2.0527188777923584
    4. ':' → logprob: -2.3027188777923584
    5. '[' → logprob: -4.427718639373779
    6. ' def' → logprob: -4.552718639373779
    7. '<|end|>' → logprob: -4.677718639373779
    8. ',' → logprob: -5.177718639373779
    9. '(
' → logprob: -5.802718639373779
    10. '#' → logprob: -6.302718639373779

Token 153: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.9289335012435913
    2. 'compute' → logprob: -2.178933620452881
    3. 'update' → logprob: -2.553933620452881
    4. 'process' → logprob: -2.803933620452881
    5. ' main' → logprob: -3.053933620452881
    6. 'solve' → logprob: -3.053933620452881
    7. 'parse' → logprob: -3.303933620452881
    8. 'multiply' → logprob: -3.803933620452881
    9. 'calculate' → logprob: -3.928933620452881
    10. ' update' → logprob: -4.428933620452881

Token 154: '_row' (ID: 19157)
  Prédit: '_four'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_four' → logprob: -0.15063337981700897
    2. '_th' → logprob: -2.4006333351135254
    3. '_second' → logprob: -4.400633335113525
    4. '_first' → logprob: -4.775633335113525
    5. '_sum' → logprob: -5.275633335113525
    6. '_f' → logprob: -5.775633335113525
    7. '_last' → logprob: -5.900633335113525
    8. '_next' → logprob: -6.400633335113525
    9. '_result' → logprob: -6.525633335113525
    10. '_final' → logprob: -6.650633335113525

Token 155: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.03733443468809128
    2. '(' → logprob: -4.412334442138672
    3. '(i' → logprob: -4.412334442138672
    4. '_(' → logprob: -5.037334442138672
    5. '(l' → logprob: -6.412334442138672
    6. '_sum' → logprob: -6.662334442138672
    7. '_' → logprob: -7.537334442138672
    8. '(n' → logprob: -8.287334442138672
    9. '_length' → logprob: -8.412334442138672
    10. '_d' → logprob: -8.412334442138672

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006567967939190567
    2. ',i' → logprob: -8.000657081604004
    3. ' ,' → logprob: -9.250657081604004
    4. '[i' → logprob: -10.125657081604004
    5. '   ' → logprob: -10.250657081604004
    6. 'd' → logprob: -10.625657081604004
    7. ',d' → logprob: -10.750657081604004
    8. '):' → logprob: -10.750657081604004
    9. '[' → logprob: -11.000657081604004
    10. ',
' → logprob: -11.250657081604004

Token 157: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6405865550041199
    2. 'i' → logprob: -0.8905865550041199
    3. ' d' → logprob: -3.7655866146087646
    4. 'd' → logprob: -4.2655863761901855
    5. ' l' → logprob: -4.2655863761901855
    6. 'l' → logprob: -5.1405863761901855
    7. ' n' → logprob: -6.3905863761901855
    8. 'n' → logprob: -6.8905863761901855
    9. ' j' → logprob: -7.3905863761901855
    10. ' row' → logprob: -7.7655863761901855

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011856284982059151
    2. ' ,' → logprob: -9.375118255615234
    3. ',j' → logprob: -11.750118255615234
    4. '   ' → logprob: -11.875118255615234
    5. '):' → logprob: -12.125118255615234
    6. ',d' → logprob: -12.250118255615234
    7. '):
' → logprob: -13.000118255615234
    8. ',n' → logprob: -13.750118255615234
    9. ',k' → logprob: -13.750118255615234
    10. ',
' → logprob: -13.875118255615234

Token 159: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9109325408935547
    2. 'j' → logprob: -1.5359325408935547
    3. ' k' → logprob: -1.9109325408935547
    4. ' j' → logprob: -2.0359325408935547
    5. 'n' → logprob: -3.0359325408935547
    6. ' n' → logprob: -3.1609325408935547
    7. 'i' → logprob: -5.535932540893555
    8. 'd' → logprob: -5.910932540893555
    9. ' d' → logprob: -6.035932540893555
    10. ' i' → logprob: -6.035932540893555

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035044457763433456
    2. ',j' → logprob: -5.878504276275635
    3. ' ,' → logprob: -7.628504276275635
    4. '):
' → logprob: -9.503504753112793
    5. 'j' → logprob: -9.753504753112793
    6. '):' → logprob: -10.003504753112793
    7. '   ' → logprob: -12.253504753112793
    8. ' j' → logprob: -12.378504753112793
    9. ',
' → logprob: -12.503504753112793
    10. '):

' → logprob: -12.628504753112793

Token 161: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.18018366396427155
    2. ' j' → logprob: -1.8051836490631104
    3. 'k' → logprob: -8.180183410644531
    4. ' k' → logprob: -9.555183410644531
    5. 'i' → logprob: -10.930183410644531
    6. ' ' → logprob: -11.242683410644531
    7. 'l' → logprob: -11.867683410644531
    8. 'n' → logprob: -12.055183410644531
    9. '   ' → logprob: -12.055183410644531
    10. ')' → logprob: -12.242683410644531

Token 162: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025194191839545965
    2. '):
' → logprob: -6.002519607543945
    3. ':' → logprob: -11.002519607543945
    4. ',' → logprob: -11.252519607543945
    5. ')' → logprob: -12.002519607543945
    6. '   ' → logprob: -12.252519607543945
    7. '):
' → logprob: -13.752519607543945
    8. ' ):' → logprob: -13.877519607543945
    9. 'def' → logprob: -15.252519607543945
    10. '():' → logprob: -15.502519607543945

Token 163: ' M' (ID: 391)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.450321912765503
    2. 'd' → logprob: -1.950321912765503
    3. ' l' → logprob: -2.075321912765503
    4. 'l' → logprob: -2.450321912765503
    5. ' n' → logprob: -3.200321912765503
    6. ' k' → logprob: -3.325321912765503
    7. 'k' → logprob: -3.325321912765503
    8. ')' → logprob: -3.575321912765503
    9. 'n' → logprob: -3.575321912765503
    10. ' x' → logprob: -4.200322151184082

Token 164: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5364524722099304
    2. '):
' → logprob: -0.9114524722099304
    3. ',' → logprob: -4.411452293395996
    4. '):
' → logprob: -8.161452293395996
    5. ' ):' → logprob: -9.036452293395996
    6. ')' → logprob: -9.036452293395996
    7. '):

' → logprob: -9.286452293395996
    8. 'def' → logprob: -9.661452293395996
    9. 'd' → logprob: -9.786452293395996
    10. ' ):
' → logprob: -9.911452293395996

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27129459381103516
    2. ':' → logprob: -1.5212945938110352
    3. ':
' → logprob: -5.521294593811035
    4. 'd' → logprob: -6.021294593811035
    5. '[' → logprob: -6.021294593811035
    6. ' =' → logprob: -6.146294593811035
    7. ' result' → logprob: -7.021294593811035
    8. ' row' → logprob: -7.021294593811035
    9. 'result' → logprob: -7.146294593811035
    10. '=' → logprob: -7.146294593811035

Token 166: ' term' (ID: 2914)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07172800600528717
    2. 'res' → logprob: -4.071728229522705
    3. ' d' → logprob: -4.571728229522705
    4. 'row' → logprob: -4.696728229522705
    5. 'for' → logprob: -5.196728229522705
    6. '   ' → logprob: -5.321728229522705
    7. 'result' → logprob: -5.696728229522705
    8. 'return' → logprob: -5.821728229522705
    9. ' res' → logprob: -5.946728229522705
    10. 'term' (adapté à ' term') → logprob: -5.946728229522705

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02303174138069153
    2. 's' → logprob: -4.273031711578369
    3. '_' → logprob: -5.023031711578369
    4. ' =' → logprob: -6.398031711578369
    5. '=' → logprob: -7.648031711578369
    6. '_first' → logprob: -10.648032188415527
    7. '0' → logprob: -10.773032188415527
    8. '_one' → logprob: -10.898032188415527
    9. '=d' → logprob: -11.523032188415527
    10. '_s' → logprob: -11.898032188415527

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689273595809937
    2. '=' → logprob: -1.1368927955627441
    3. '1' → logprob: -11.011892318725586
    4. '_' → logprob: -13.511892318725586
    5. ',' → logprob: -13.636892318725586
    6. '=d' → logprob: -13.761892318725586
    7. ' ' → logprob: -14.511892318725586
    8. 'd' → logprob: -15.011892318725586
    9. 's' → logprob: -15.261892318725586
    10. ' ' → logprob: -16.386892318725586

Token 169: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0015408077742904425
    2. ' compute' → logprob: -6.501540660858154
    3. 'd' → logprob: -10.251541137695312
    4. 'multiply' → logprob: -13.501541137695312
    5. 'M' → logprob: -14.126541137695312
    6. 'dot' → logprob: -15.251541137695312
    7. 'sum' → logprob: -15.626541137695312
    8. 'expand' → logprob: -16.251541137695312
    9. 'np' → logprob: -16.751541137695312
    10. ' d' → logprob: -16.876541137695312

Token 170: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -5.512236498361744e-07
    2. 'first' → logprob: -15.125000953674316
    3. '_second' → logprob: -15.125000953674316
    4. 'First' → logprob: -18.75
    5. '_FIRST' → logprob: -19.75
    6. '_' → logprob: -20.25
    7. '_last' → logprob: -20.5
    8. '```' → logprob: -20.625
    9. '_First' → logprob: -21.25
    10. '_next' → logprob: -21.375

Token 171: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -1.2471589798224159e-05
    2. '_token' → logprob: -11.875012397766113
    3. '(d' → logprob: -12.625012397766113
    4. '_terms' → logprob: -13.875012397766113
    5. '_' → logprob: -14.375012397766113
    6. '_value' → logprob: -16.12501335144043
    7. ' _' → logprob: -16.25001335144043
    8. '(term' → logprob: -16.62501335144043
    9. '(' → logprob: -16.75001335144043
    10. '_step' → logprob: -16.75001335144043

Token 172: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0002978048287332058
    2. '(' → logprob: -8.125297546386719
    3. '(
' → logprob: -13.375297546386719
    4. ' (' → logprob: -16.62529754638672
    5. '(def' → logprob: -16.87529754638672
    6. '(

' → logprob: -17.12529754638672
    7. '(de' → logprob: -17.75029754638672
    8. ',d' → logprob: -18.00029754638672
    9. '(data' → logprob: -18.12529754638672
    10. 'd' → logprob: -18.75029754638672

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1424973713001236e-05
    2. ' ,' → logprob: -11.000031471252441
    3. ',d' → logprob: -11.500031471252441
    4. ',i' → logprob: -12.875031471252441
    5. '[' → logprob: -14.000031471252441
    6. '[i' → logprob: -14.750031471252441
    7. ',
' → logprob: -15.875031471252441
    8. 'd' → logprob: -16.125030517578125
    9. ')' → logprob: -16.125030517578125
    10. '   ' → logprob: -16.500030517578125

Token 174: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0076079354621469975
    2. ' i' → logprob: -4.882607936859131
    3. ' ' → logprob: -14.632607460021973
    4. '   ' → logprob: -14.882607460021973
    5. ',i' → logprob: -15.257607460021973
    6. ',' → logprob: -15.632607460021973
    7. '[i' → logprob: -15.632607460021973
    8. '	i' → logprob: -15.882607460021973
    9. ')' → logprob: -15.882607460021973
    10. 'k' → logprob: -16.75760841369629

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001613459608051926
    2. ' ,' → logprob: -9.375161170959473
    3. ',k' → logprob: -9.500161170959473
    4. '[k' → logprob: -14.875161170959473
    5. '-' → logprob: -15.000161170959473
    6. '[' → logprob: -15.125161170959473
    7. ' ' → logprob: -15.750161170959473
    8. '   ' → logprob: -15.750161170959473
    9. ')' → logprob: -16.12516212463379
    10. ' -' → logprob: -16.50016212463379

Token 176: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001712901284918189
    2. ' k' → logprob: -6.376712799072266
    3. ' ' → logprob: -12.126712799072266
    4. '   ' → logprob: -13.001712799072266
    5. '  ' → logprob: -13.501712799072266
    6. 'j' → logprob: -15.001712799072266
    7. '    ' → logprob: -15.251712799072266
    8. 'array' → logprob: -15.501712799072266
    9. '
' → logprob: -16.126712799072266
    10. '0' → logprob: -16.251712799072266

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013083349040243775
    2. ',j' → logprob: -9.750130653381348
    3. ' ,' → logprob: -10.125130653381348
    4. '[j' → logprob: -10.750130653381348
    5. '[' → logprob: -12.125130653381348
    6. ')' → logprob: -13.125130653381348
    7. ',k' → logprob: -14.125130653381348
    8. '[i' → logprob: -14.875130653381348
    9. '```' → logprob: -15.250130653381348
    10. '   ' → logprob: -15.250130653381348

Token 178: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007666490040719509
    2. ' j' → logprob: -4.88266658782959
    3. '1' → logprob: -11.00766658782959
    4. 'M' → logprob: -11.38266658782959
    5. '   ' → logprob: -11.63266658782959
    6. ' ' → logprob: -12.00766658782959
    7. ' M' → logprob: -12.38266658782959
    8. '  ' → logprob: -13.00766658782959
    9. '    ' → logprob: -13.13266658782959
    10. '0' → logprob: -13.63266658782959

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062450259923934937
    2. ')
' → logprob: -2.8124501705169678
    3. ' )' → logprob: -8.437450408935547
    4. ',' → logprob: -9.187450408935547
    5. ' )
' → logprob: -9.937450408935547
    6. ')
' → logprob: -10.062450408935547
    7. '[' → logprob: -10.937450408935547
    8. ')

' → logprob: -11.562450408935547
    9. ')+' → logprob: -11.687450408935547
    10. ')*' → logprob: -11.812450408935547

Token 180: '   ' (ID: 271)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9695286750793457
    2. '   ' → logprob: -1.7195286750793457
    3. '
' → logprob: -1.9695286750793457
    4. '+' → logprob: -2.0945286750793457
    5. ' term' → logprob: -2.4695286750793457
    6. 'term' → logprob: -2.7195286750793457
    7. ')' → logprob: -4.969528675079346
    8. '+
' → logprob: -5.469528675079346
    9. '    
' → logprob: -5.969528675079346
    10. '-term' → logprob: -6.094528675079346

Token 181: ' term' (ID: 2914)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9381349682807922
    2. 'term' (adapté à ' term') → logprob: -1.0631349086761475
    3. ' term' → logprob: -2.3131349086761475
    4. ' +' → logprob: -2.4381349086761475
    5. '+
' → logprob: -2.9381349086761475
    6. ' +
' → logprob: -4.438135147094727
    7. '-' → logprob: -5.688135147094727
    8. '
' → logprob: -6.313135147094727
    9. '-term' → logprob: -6.563135147094727
    10. '*' → logprob: -7.063135147094727

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009422066621482372
    2. '_' → logprob: -5.259422302246094
    3. '=' → logprob: -5.759422302246094
    4. '1' → logprob: -8.009422302246094
    5. '+' → logprob: -8.134422302246094
    6. '*' → logprob: -9.134422302246094
    7. '+=' → logprob: -9.259422302246094
    8. ' =' → logprob: -10.009422302246094
    9. '3' → logprob: -10.009422302246094
    10. ' +=' → logprob: -10.759422302246094

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804366663098335
    2. '=' → logprob: -3.288043737411499
    3. ' ' → logprob: -13.538043975830078
    4. ' ' → logprob: -14.663043975830078
    5. ',' → logprob: -15.663043975830078
    6. ' =
' → logprob: -15.788043975830078
    7. ' +=' → logprob: -16.413043975830078
    8. '[' → logprob: -16.913043975830078
    9. 's' → logprob: -17.788043975830078
    10. 'def' → logprob: -17.913043975830078

Token 184: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.012510828673839569
    2. ' compute' → logprob: -4.387510776519775
    3. '
' → logprob: -14.762511253356934
    4. ' ' → logprob: -15.637511253356934
    5. 'computer' → logprob: -16.262510299682617
    6. '   ' → logprob: -16.387510299682617
    7. 'multiply' → logprob: -16.637510299682617
    8. '.compute' → logprob: -16.762510299682617
    9. 'roll' → logprob: -16.762510299682617
    10. 'com' → logprob: -17.012510299682617

Token 185: '_second' (ID: 67724)
  Prédit: '_second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -3.130576806142926e-05
    2. 'second' → logprob: -10.500031471252441
    3. '(second' → logprob: -13.375031471252441
    4. 'Second' → logprob: -13.875031471252441
    5. '_first' → logprob: -14.625031471252441
    6. '_term' → logprob: -15.875031471252441
    7. 'cond' → logprob: -16.250030517578125
    8. ' second' → logprob: -16.500030517578125
    9. '_th' → logprob: -16.625030517578125
    10. 'nd' → logprob: -16.750030517578125

Token 186: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.002971160924062133
    2. '(d' → logprob: -6.002971172332764
    3. '_' → logprob: -7.877971172332764
    4. '_terms' → logprob: -9.377970695495605
    5. '(' → logprob: -11.502970695495605
    6. 'term' → logprob: -11.752970695495605
    7. ' _' → logprob: -13.002970695495605
    8. '_second' → logprob: -13.377970695495605
    9. '(_' → logprob: -13.502970695495605
    10. ')' → logprob: -13.627970695495605

Token 187: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -3.35706390615087e-05
    2. '(' → logprob: -10.375033378601074
    3. ' (' → logprob: -14.125033378601074
    4. 'd' → logprob: -14.125033378601074
    5. ',d' → logprob: -15.125033378601074
    6. '(
' → logprob: -16.12503433227539
    7. ')' → logprob: -16.62503433227539
    8. ',' → logprob: -16.75003433227539
    9. '(def' → logprob: -16.75003433227539
    10. ' ' → logprob: -17.12503433227539

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007885316386818886
    2. ',d' → logprob: -5.257885456085205
    3. '(d' → logprob: -6.257885456085205
    4. ',k' → logprob: -7.757885456085205
    5. ' ,' → logprob: -8.257884979248047
    6. 'd' → logprob: -10.507884979248047
    7. '(k' → logprob: -11.757884979248047
    8. ' d' → logprob: -13.007884979248047
    9. '   ' → logprob: -13.632884979248047
    10. ' ' → logprob: -13.757884979248047

Token 189: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004734257236123085
    2. ' k' → logprob: -5.379734039306641
    3. 'd' → logprob: -10.00473403930664
    4. 'i' → logprob: -10.87973403930664
    5. ' ' → logprob: -11.25473403930664
    6. 'j' → logprob: -11.37973403930664
    7. 'M' → logprob: -11.62973403930664
    8. '
' → logprob: -12.12973403930664
    9. ' M' → logprob: -13.62973403930664
    10. ' d' → logprob: -13.62973403930664

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015080781886354089
    2. ',j' → logprob: -6.6265082359313965
    3. ' ,' → logprob: -8.626507759094238
    4. ')' → logprob: -13.626507759094238
    5. ',k' → logprob: -14.626507759094238
    6. 'j' → logprob: -15.126507759094238
    7. '   ' → logprob: -16.001508712768555
    8. '[' → logprob: -16.001508712768555
    9. '```' → logprob: -16.001508712768555
    10. ',
' → logprob: -16.501508712768555

Token 191: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0011708177626132965
    2. ' j' → logprob: -6.751170635223389
    3. ')' → logprob: -15.251171112060547
    4. ' ' → logprob: -15.626171112060547
    5. '	j' → logprob: -16.126171112060547
    6. '```' → logprob: -16.626171112060547
    7. '$j' → logprob: -16.751171112060547
    8. '<|end|>' → logprob: -17.251171112060547
    9. '
' → logprob: -17.751171112060547
    10. '   ' → logprob: -17.751171112060547

Token 192: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07892768830060959
    2. ')
' → logprob: -2.578927755355835
    3. '   ' → logprob: -11.578927993774414
    4. ' )' → logprob: -11.578927993774414
    5. ')
' → logprob: -11.953927993774414
    6. ' )
' → logprob: -12.453927993774414
    7. ')

' → logprob: -12.578927993774414
    8. ' ' → logprob: -13.578927993774414
    9. 'def' → logprob: -13.953927993774414
    10. ' ' → logprob: -13.953927993774414

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18144111335277557
    2. '
' → logprob: -1.931441068649292
    3. '+' → logprob: -5.431441307067871
    4. ')' → logprob: -5.681441307067871
    5. '    
' → logprob: -5.681441307067871
    6. ' +' → logprob: -5.806441307067871
    7. '+
' → logprob: -7.056441307067871
    8. '<|end|>' → logprob: -7.056441307067871
    9. '  
' → logprob: -7.181441307067871
    10. ')
' → logprob: -7.306441307067871

Token 194: ' term' (ID: 2914)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5613719820976257
    2. 'term' (adapté à ' term') → logprob: -1.5613720417022705
    3. ' term' → logprob: -1.5613720417022705
    4. '
' → logprob: -5.436371803283691
    5. '+' → logprob: -6.061371803283691
    6. ' +' → logprob: -6.936371803283691
    7. 'return' → logprob: -7.811371803283691
    8. ' ' → logprob: -8.311371803283691
    9. 'def' → logprob: -8.311371803283691
    10. ' return' → logprob: -8.686371803283691

Token 195: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.040457421680912e-05
    2. '=' → logprob: -10.500070571899414
    3. ' =' → logprob: -11.375070571899414
    4. '1' → logprob: -11.625070571899414
    5. '2' → logprob: -11.625070571899414
    6. '_' → logprob: -12.250070571899414
    7. ' ' → logprob: -13.250070571899414
    8. '   ' → logprob: -13.500070571899414
    9. '```' → logprob: -13.625070571899414
    10. 's' → logprob: -14.375070571899414

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132622241973877
    2. '=' → logprob: -1.3132622241973877
    3. ' ' → logprob: -15.688261985778809
    4. '=d' → logprob: -15.813261985778809
    5. ',' → logprob: -16.938262939453125
    6. '   ' → logprob: -17.188262939453125
    7. ' =
' → logprob: -17.688262939453125
    8. '[' → logprob: -17.688262939453125
    9. ')' → logprob: -18.063262939453125
    10. ' ' → logprob: -18.063262939453125

Token 197: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.009756917133927345
    2. ' compute' → logprob: -4.634757041931152
    3. '   ' → logprob: -14.884757041931152
    4. ' ' → logprob: -15.509757041931152
    5. 'roll' → logprob: -16.384756088256836
    6. '.compute' → logprob: -16.509756088256836
    7. '
' → logprob: -16.759756088256836
    8. 'computer' → logprob: -17.009756088256836
    9. 'def' → logprob: -17.759756088256836
    10. '  ' → logprob: -17.759756088256836

Token 198: '_th' (ID: 16038)
  Prédit: '_th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_th' → logprob: -4.167648876318708e-05
    2. 'third' → logprob: -10.125041961669922
    3. '_second' → logprob: -13.750041961669922
    4. 'Third' → logprob: -16.000041961669922
    5. '_first' → logprob: -16.000041961669922
    6. 'th' → logprob: -17.125041961669922
    7. '_row' → logprob: -17.125041961669922
    8. ' third' → logprob: -17.125041961669922
    9. '第三' → logprob: -17.125041961669922
    10. '_' → logprob: -17.250041961669922

Token 199: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -0.12451735138893127
    2. 'erm' → logprob: -3.2495174407958984
    3. 'rd' → logprob: -3.2495174407958984
    4. 'd' → logprob: -3.9995174407958984
    5. 'term' → logprob: -4.249517440795898
    6. '_term' → logprob: -6.124517440795898
    7. 'od' → logprob: -6.624517440795898
    8. 'def' → logprob: -7.499517440795898
    9. 'row' → logprob: -7.749517440795898
    10. '(d' → logprob: -7.874517440795898

Token 200: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.20234397053718567
    2. '(d' → logprob: -1.7023439407348633
    3. '(' → logprob: -7.577343940734863
    4. 'term' → logprob: -8.327343940734863
    5. '_' → logprob: -9.702343940734863
    6. 'Term' → logprob: -9.827343940734863
    7. '_terms' → logprob: -10.577343940734863
    8. '(term' → logprob: -11.827343940734863
    9. ' term' → logprob: -12.202343940734863
    10. ' (' → logprob: -12.327343940734863

Token 201: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0001254693343071267
    2. '(' → logprob: -9.000125885009766
    3. 'd' → logprob: -13.375125885009766
    4. ' (' → logprob: -15.375125885009766
    5. '(
' → logprob: -16.250125885009766
    6. ',d' → logprob: -16.500125885009766
    7. ')' → logprob: -16.625125885009766
    8. ')d' → logprob: -17.500125885009766
    9. '```' → logprob: -17.875125885009766
    10. ' d' → logprob: -18.500125885009766

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01534598134458065
    2. ',j' → logprob: -4.265346050262451
    3. ',d' → logprob: -7.390346050262451
    4. 'j' → logprob: -7.765346050262451
    5. 'd' → logprob: -9.390345573425293
    6. ' ,' → logprob: -10.265345573425293
    7. '[j' → logprob: -12.640345573425293
    8. ')' → logprob: -12.765345573425293
    9. '   ' → logprob: -13.015345573425293
    10. ' j' → logprob: -13.015345573425293

Token 203: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007968693971633911
    2. ' j' → logprob: -4.882968902587891
    3. 'd' → logprob: -8.13296890258789
    4. 'k' → logprob: -11.13296890258789
    5. ' ' → logprob: -11.25796890258789
    6. 'i' → logprob: -11.50796890258789
    7. ' d' → logprob: -11.88296890258789
    8. '	j' → logprob: -12.25796890258789
    9. '   ' → logprob: -12.38296890258789
    10. 'M' → logprob: -12.50796890258789

Token 204: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07924027740955353
    2. ')
' → logprob: -2.579240322113037
    3. '   ' → logprob: -8.204239845275879
    4. ')

' → logprob: -10.204239845275879
    5. 'def' → logprob: -11.579239845275879
    6. ')
' → logprob: -11.579239845275879
    7. ' )' → logprob: -11.829239845275879
    8. ' ' → logprob: -12.704239845275879
    9. ',' → logprob: -12.829239845275879
    10. ' )
' → logprob: -13.579239845275879

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008661724627017975
    2. '
' → logprob: -5.13366174697876
    3. '    
' → logprob: -6.75866174697876
    4. 'return' → logprob: -7.50866174697876
    5. 'def' → logprob: -8.133661270141602
    6. 'result' → logprob: -8.383661270141602
    7. ')' → logprob: -8.883661270141602
    8. '+' → logprob: -9.383661270141602
    9. ' return' → logprob: -9.508661270141602
    10. 'd' → logprob: -10.883661270141602

Token 206: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16937001049518585
    2. '   ' → logprob: -2.16936993598938
    3. ' return' → logprob: -3.54436993598938
    4. '
' → logprob: -5.544370174407959
    5. 'result' → logprob: -5.544370174407959
    6. '+' → logprob: -7.044370174407959
    7. ')' → logprob: -7.169370174407959
    8. 'd' → logprob: -7.294370174407959
    9. 'for' → logprob: -7.669370174407959
    10. '[' → logprob: -8.4193696975708

Token 207: ' (' (ID: 350)
  Prédit: ' term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' term' → logprob: -0.3164575695991516
    2. 'term' → logprob: -1.3164575099945068
    3. '(term' → logprob: -6.191457748413086
    4. ' (' → logprob: -7.691457748413086
    5. 'M' → logprob: -8.566457748413086
    6. '(' → logprob: -8.566457748413086
    7. ' M' → logprob: -9.691457748413086
    8. 'd' → logprob: -10.441457748413086
    9. ' ' → logprob: -10.753957748413086
    10. 'int' → logprob: -11.503957748413086

Token 208: 'term' (ID: 8044)
  Prédit: 'term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.023464659228920937
    2. ' term' → logprob: -3.8984646797180176
    3. 'M' → logprob: -6.398464679718018
    4. '(term' → logprob: -7.148464679718018
    5. 'd' → logprob: -9.02346420288086
    6. ' M' → logprob: -9.27346420288086
    7. '(' → logprob: -9.64846420288086
    8. '(M' → logprob: -10.02346420288086
    9. '   ' → logprob: -10.02346420288086
    10. ' (' → logprob: -10.52346420288086

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.143808109802194e-05
    2. 's' → logprob: -10.625041007995605
    3. '3' → logprob: -11.500041007995605
    4. '2' → logprob: -12.250041007995605
    5. '_' → logprob: -14.375041007995605
    6. '[' → logprob: -14.625041007995605
    7. ')' → logprob: -15.625041007995605
    8. ' ' → logprob: -16.000041961669922
    9. 'term' → logprob: -16.062541961669922
    10. '(' → logprob: -16.875041961669922

Token 210: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20491354167461395
    2. '+' → logprob: -1.7049134969711304
    3. ' -' → logprob: -6.07991361618042
    4. '-' → logprob: -7.45491361618042
    5. '[' → logprob: -8.704913139343262
    6. ' +
' → logprob: -9.079913139343262
    7. ' ' → logprob: -9.204913139343262
    8. '*' → logprob: -9.579913139343262
    9. ' *' → logprob: -9.704913139343262
    10. ' +
' → logprob: -10.704913139343262

Token 211: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.47433269023895264
    2. ' term' → logprob: -0.9743326902389526
    3. '(term' → logprob: -9.724332809448242
    4. ' ' → logprob: -9.849332809448242
    5. '   ' → logprob: -10.224332809448242
    6. ' (' → logprob: -10.349332809448242
    7. ' M' → logprob: -11.224332809448242
    8. ' d' → logprob: -11.849332809448242
    9. '  ' → logprob: -12.036832809448242
    10. 'd' → logprob: -12.411832809448242

Token 212: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2811869978904724
    2. '2' → logprob: -1.4061870574951172
    3. '1' → logprob: -11.656187057495117
    4. 'term' → logprob: -11.781187057495117
    5. 's' → logprob: -12.406187057495117
    6. ' ' → logprob: -13.406187057495117
    7. '_' → logprob: -13.656187057495117
    8. ')' → logprob: -13.656187057495117
    9. '_term' → logprob: -13.656187057495117
    10. '[' → logprob: -13.781187057495117

Token 213: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10475227981805801
    2. '+' → logprob: -2.3547523021698
    3. ' -' → logprob: -5.729752063751221
    4. ')' → logprob: -6.854752063751221
    5. '-' → logprob: -8.979752540588379
    6. ' ' → logprob: -9.979752540588379
    7. ' +
' → logprob: -11.229752540588379
    8. '   ' → logprob: -11.354752540588379
    9. ' )' → logprob: -11.479752540588379
    10. '*' → logprob: -12.354752540588379

Token 214: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.2814353108406067
    2. ' term' → logprob: -1.406435251235962
    3. ' ' → logprob: -9.281435012817383
    4. '   ' → logprob: -10.031435012817383
    5. '(term' → logprob: -10.406435012817383
    6. '3' → logprob: -10.843935012817383
    7. 'ter' → logprob: -11.406435012817383
    8. '  ' → logprob: -11.531435012817383
    9. ')' → logprob: -11.593935012817383
    10. '+' → logprob: -12.031435012817383

Token 215: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. 'term' → logprob: -17.125
    4. '_term' → logprob: -18.0
    5. 's' → logprob: -18.25
    6. '[' → logprob: -18.75
    7. '   ' → logprob: -18.875
    8. 'Term' → logprob: -18.875
    9. '*' → logprob: -19.875
    10. '３' → logprob: -20.0

Token 216: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018993634730577469
    2. ')%' → logprob: -7.001899242401123
    3. ' )' → logprob: -7.501899242401123
    4. ').' → logprob: -8.501899719238281
    5. ')[' → logprob: -8.751899719238281
    6. ',' → logprob: -11.001899719238281
    7. ')*' → logprob: -11.501899719238281
    8. ')
' → logprob: -12.126899719238281
    9. ' -' → logprob: -12.251899719238281
    10. '%' → logprob: -12.251899719238281

Token 217: ' %' (ID: 1851)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4759543836116791
    2. '<|end|>' → logprob: -1.8509544134140015
    3. '[
' → logprob: -2.100954294204712
    4. '[i' → logprob: -2.850954294204712
    5. 'def' → logprob: -4.475954532623291
    6. '
' → logprob: -4.850954532623291
    7. '[k' → logprob: -5.725954532623291
    8. '*' → logprob: -5.850954532623291
    9. '+' → logprob: -6.350954532623291
    10. '%' → logprob: -6.725954532623291

Token 218: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.04869648814201355
    2. ' M' → logprob: -3.048696517944336
    3. '256' → logprob: -10.798696517944336
    4. '10' → logprob: -10.798696517944336
    5. '100' → logprob: -10.923696517944336
    6. ' ' → logprob: -11.048696517944336
    7. '64' → logprob: -12.548696517944336
    8. '7' → logprob: -12.798696517944336
    9. '(' → logprob: -12.923696517944336
    10. '128' → logprob: -12.923696517944336

Token 219: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007299474673345685
    2. '#' → logprob: -8.62572956085205
    3. '<|end|>' → logprob: -8.75072956085205
    4. '
' → logprob: -9.25072956085205
    5. '(' → logprob: -9.37572956085205
    6. 'for' → logprob: -10.25072956085205
    7. '(
' → logprob: -10.37572956085205
    8. '[' → logprob: -10.62572956085205
    9. '```' → logprob: -10.75072956085205
    10. ':' → logprob: -10.87572956085205

Token 221: ' fill' (ID: 6954)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04418753832578659
    2. ' main' → logprob: -3.169187545776367
    3. 'parse' → logprob: -6.794187545776367
    4. 'solve' → logprob: -10.669187545776367
    5. ' parse' → logprob: -10.794187545776367
    6. 'process' → logprob: -11.544187545776367
    7. 'def' → logprob: -12.419187545776367
    8. 'compute' → logprob: -12.919187545776367
    9. 'get' → logprob: -13.044187545776367
    10. ' solve' → logprob: -13.419187545776367

Token 222: '_matrix' (ID: 23431)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06272067874670029
    2. '(d' → logprob: -3.812720775604248
    3. '_(' → logprob: -4.562720775604248
    4. '_rows' → logprob: -4.937720775604248
    5. '(' → logprob: -5.062720775604248
    6. '_row' → logprob: -5.187720775604248
    7. '_data' → logprob: -5.562720775604248
    8. '_array' → logprob: -6.187720775604248
    9. '_d' → logprob: -7.187720775604248
    10. '_line' → logprob: -7.437720775604248

Token 223: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0009401659481227398
    2. '(' → logprob: -7.000940322875977
    3. '(l' → logprob: -11.125940322875977
    4. ' (' → logprob: -11.750940322875977
    5. '(def' → logprob: -12.875940322875977
    6. '():' → logprob: -14.250940322875977
    7. '(D' → logprob: -14.375940322875977
    8. '(
' → logprob: -14.875940322875977
    9. '(n' → logprob: -14.875940322875977
    10. '(s' → logprob: -15.250940322875977

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ' ,' → logprob: -13.125004768371582
    3. ',d' → logprob: -13.250004768371582
    4. ',n' → logprob: -15.000004768371582
    5. '   ' → logprob: -15.250004768371582
    6. ',i' → logprob: -15.875004768371582
    7. '):' → logprob: -15.875004768371582
    8. 'd' → logprob: -16.3750057220459
    9. ',
' → logprob: -16.7500057220459
    10. 'def' → logprob: -17.0000057220459

Token 225: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5334436297416687
    2. 'n' → logprob: -1.1584436893463135
    3. ' M' → logprob: -2.9084436893463135
    4. 'M' → logprob: -4.158443450927734
    5. ' l' → logprob: -4.158443450927734
    6. 'l' → logprob: -5.033443450927734
    7. ' i' → logprob: -6.158443450927734
    8. 'i' → logprob: -6.658443450927734
    9. ' d' → logprob: -6.658443450927734
    10. 'd' → logprob: -6.908443450927734

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.897412822581828e-05
    2. ',n' → logprob: -9.750068664550781
    3. ' ,' → logprob: -11.500068664550781
    4. 'n' → logprob: -15.500068664550781
    5. ',
' → logprob: -16.00006866455078
    6. 'def' → logprob: -16.62506866455078
    7. '   ' → logprob: -17.00006866455078
    8. ',d' → logprob: -17.87506866455078
    9. '):
' → logprob: -17.87506866455078
    10. ',N' → logprob: -18.12506866455078

Token 227: ' M' (ID: 391)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18274296820163727
    2. ' n' → logprob: -1.807742953300476
    3. 'M' → logprob: -6.307743072509766
    4. ' M' → logprob: -6.932743072509766
    5. 'N' → logprob: -10.057743072509766
    6. 'l' → logprob: -10.557743072509766
    7. 'def' → logprob: -11.182743072509766
    8. ')' → logprob: -11.370243072509766
    9. '```' → logprob: -11.557743072509766
    10. '   ' → logprob: -11.682743072509766

Token 228: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002510262420400977
    2. '):
' → logprob: -6.627510070800781
    3. '):' → logprob: -6.752510070800781
    4. ',n' → logprob: -12.252510070800781
    5. '   ' → logprob: -12.752510070800781
    6. ',
' → logprob: -12.877510070800781
    7. ' ,' → logprob: -13.502510070800781
    8. 'def' → logprob: -13.627510070800781
    9. ',i' → logprob: -14.127510070800781
    10. ':' → logprob: -14.752510070800781

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29019632935523987
    2. 'for' → logprob: -1.5401962995529175
    3. ' for' → logprob: -3.290196418762207
    4. '	for' → logprob: -8.415196418762207
    5. '```' → logprob: -9.665196418762207
    6. '
' → logprob: -11.790196418762207
    7. 'def' → logprob: -12.540196418762207
    8. '    
' → logprob: -14.540196418762207
    9. '   ' → logprob: -15.040196418762207
    10. '``' → logprob: -15.165196418762207

Token 230: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003293924732133746
    2. ' for' → logprob: -6.128293991088867
    3. '   ' → logprob: -6.878293991088867
    4. 'n' → logprob: -9.753293991088867
    5. '```' → logprob: -11.378293991088867
    6. 'def' → logprob: -12.253293991088867
    7. '
' → logprob: -13.628293991088867
    8. '``' → logprob: -14.253293991088867
    9. '	for' → logprob: -14.503293991088867
    10. 'i' → logprob: -15.128293991088867

Token 231: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5231433510780334
    2. ' i' → logprob: -0.8981433510780334
    3. '   ' → logprob: -12.273143768310547
    4. '	i' → logprob: -12.398143768310547
    5. ' ' → logprob: -12.523143768310547
    6. '_i' → logprob: -13.148143768310547
    7. '```' → logprob: -13.898143768310547
    8. 'j' → logprob: -14.023143768310547
    9. 'k' → logprob: -14.398143768310547
    10. '(i' → logprob: -14.773143768310547

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061988864094018936
    2. 'in' → logprob: -2.8119888305664062
    3. ' ' → logprob: -12.186988830566406
    4. 'range' → logprob: -12.186988830566406
    5. '   ' → logprob: -12.561988830566406
    6. ',' → logprob: -13.186988830566406
    7. 'import' → logprob: -13.561988830566406
    8. ')' → logprob: -13.686988830566406
    9. '```' → logprob: -14.686988830566406
    10. 'd' → logprob: -14.811988830566406

Token 233: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234356038272381
    2. ' range' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.380234718322754
    4. 'ar' → logprob: -16.255233764648438
    5. '	range' → logprob: -16.380233764648438
    6. ' ' → logprob: -17.005233764648438
    7. '(range' → logprob: -17.380233764648438
    8. 'r' → logprob: -17.630233764648438
    9. '[' → logprob: -17.880233764648438
    10. '  ' → logprob: -18.130233764648438

Token 234: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002913678181357682
    2. '1' → logprob: -8.25029182434082
    3. '2' → logprob: -10.75029182434082
    4. '3' → logprob: -11.75029182434082
    5. '(l' → logprob: -14.50029182434082
    6. ' (' → logprob: -16.50029182434082
    7. '   ' → logprob: -16.87529182434082
    8. ' ' → logprob: -17.12529182434082
    9. 'l' → logprob: -17.12529182434082
    10. '(
' → logprob: -19.00029182434082

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6210922598838806
    2. '3' → logprob: -0.8710922598838806
    3. '2' → logprob: -3.1210923194885254
    4. '4' → logprob: -10.371091842651367
    5. 'l' → logprob: -12.496091842651367
    6. ' ' → logprob: -12.746091842651367
    7. '5' → logprob: -13.871091842651367
    8. '(' → logprob: -15.371091842651367
    9. '```' → logprob: -15.746091842651367
    10. '   ' → logprob: -16.121091842651367

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.558399319241289e-05
    2. ' ,' → logprob: -10.875025749206543
    3. ',l' → logprob: -12.125025749206543
    4. 'l' → logprob: -14.500025749206543
    5. '1' → logprob: -15.625025749206543
    6. '   ' → logprob: -16.375024795532227
    7. '+' → logprob: -16.500024795532227
    8. '_,' → logprob: -17.000024795532227
    9. '```' → logprob: -17.062524795532227
    10. ',
' → logprob: -17.062524795532227

Token 237: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.5690089639974758e-05
    2. ' l' → logprob: -11.125015258789062
    3. 'len' → logprob: -15.000015258789062
    4. 'get' → logprob: -15.625015258789062
    5. 'd' → logprob: -16.000015258789062
    6. '3' → logprob: -16.625015258789062
    7. '   ' → logprob: -16.875015258789062
    8. '	l' → logprob: -17.500015258789062
    9. '1' → logprob: -17.625015258789062
    10. 'll' → logprob: -18.375015258789062

Token 238: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10033886879682541
    2. '):
' → logprob: -2.350338935852051
    3. ':' → logprob: -9.72533893585205
    4. ',' → logprob: -10.85033893585205
    5. ' ):' → logprob: -10.97533893585205
    6. '   ' → logprob: -11.10033893585205
    7. '):
' → logprob: -12.22533893585205
    8. ')' → logprob: -12.47533893585205
    9. '+' → logprob: -12.85033893585205
    10. '):

' → logprob: -13.35033893585205

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025251450017094612
    2. ' for' → logprob: -4.150251388549805
    3. 'for' → logprob: -4.775251388549805
    4. '   ' → logprob: -7.650251388549805
    5. ',' → logprob: -9.275251388549805
    6. 'd' → logprob: -10.525251388549805
    7. '```' → logprob: -10.525251388549805
    8. '        
' → logprob: -10.775251388549805
    9. 'k' → logprob: -10.900251388549805
    10. ' ' → logprob: -11.275251388549805

Token 240: ' j' (ID: 441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.339446485042572
    2. 'k' → logprob: -1.5894465446472168
    3. '   ' → logprob: -3.089446544647217
    4. ' for' → logprob: -3.464446544647217
    5. 'j' (adapté à ' j') → logprob: -5.464446544647217
    6. ' k' → logprob: -6.589446544647217
    7. 'd' → logprob: -7.714446544647217
    8. '       ' → logprob: -7.839446544647217
    9. 'i' → logprob: -9.339446067810059
    10. '_,' → logprob: -9.464446067810059

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16467252373695374
    2. ' =' → logprob: -2.039672613143921
    3. '=' → logprob: -4.039672374725342
    4. ',k' → logprob: -5.789672374725342
    5. ' ,' → logprob: -7.164672374725342
    6. ',i' → logprob: -9.2896728515625
    7. ',j' → logprob: -9.6646728515625
    8. ' ' → logprob: -10.1646728515625
    9. '=i' → logprob: -10.5396728515625
    10. 'for' → logprob: -10.6646728515625

Token 242: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04405146837234497
    2. 'i' → logprob: -3.4190514087677
    3. ' k' → logprob: -4.794051647186279
    4. ' i' → logprob: -6.794051647186279
    5. 'j' → logprob: -7.044051647186279
    6. ' j' → logprob: -10.169051170349121
    7. ' =' → logprob: -11.919051170349121
    8. ' ' → logprob: -12.419051170349121
    9. ',' → logprob: -12.669051170349121
    10. 'l' → logprob: -12.731551170349121

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016038119792938232
    2. ' =' → logprob: -4.141037940979004
    3. ',' → logprob: -12.641037940979004
    4. ' ' → logprob: -16.64103889465332
    5. '=

' → logprob: -16.76603889465332
    6. '=
' → logprob: -17.14103889465332
    7. '=i' → logprob: -17.14103889465332
    8. '=j' → logprob: -17.14103889465332
    9. '=get' → logprob: -17.51603889465332
    10. '=k' → logprob: -17.51603889465332

Token 244: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -4.584861744660884e-05
    2. ' assign' → logprob: -10.000045776367188
    3. '(assign' → logprob: -16.000045776367188
    4. 'i' → logprob: -16.125045776367188
    5. '	assign' → logprob: -17.000045776367188
    6. 'ass' → logprob: -17.250045776367188
    7. '   ' → logprob: -17.375045776367188
    8. 'j' → logprob: -18.125045776367188
    9. 'assing' → logprob: -18.625045776367188
    10. 'assigned' → logprob: -19.750045776367188

Token 245: '_indices' (ID: 43508)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7116034626960754
    2. 'indices' → logprob: -1.2116034030914307
    3. '_indices' → logprob: -1.5866034030914307
    4. 'i' → logprob: -5.08660364151001
    5. 'Indices' → logprob: -7.96160364151001
    6. ' indices' → logprob: -8.836603164672852
    7. ' i' → logprob: -10.086603164672852
    8. '[i' → logprob: -10.711603164672852
    9. '(indices' → logprob: -11.211603164672852
    10. 'ind' → logprob: -11.711603164672852

Token 246: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.7432603272027336e-06
    2. '(j' → logprob: -13.750001907348633
    3. '(' → logprob: -15.125001907348633
    4. ' (' → logprob: -15.875001907348633
    5. '(k' → logprob: -16.125001907348633
    6. 'i' → logprob: -16.125001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '(I' → logprob: -18.125001907348633
    9. '[i' → logprob: -18.250001907348633
    10. '
' → logprob: -19.000001907348633

Token 247: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009789974428713322
    2. ')
' → logprob: -4.634789943695068
    3. '   ' → logprob: -10.509790420532227
    4. ')
' → logprob: -12.634790420532227
    5. ' )' → logprob: -13.509790420532227
    6. ')

' → logprob: -14.134790420532227
    7. ' ' → logprob: -14.509790420532227
    8. '       ' → logprob: -15.384790420532227
    9. ',' → logprob: -16.509790420532227
    10. '	' → logprob: -16.884790420532227

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0807093009352684
    2. ' for' → logprob: -3.080709218978882
    3. 'for' → logprob: -4.330709457397461
    4. '
' → logprob: -4.330709457397461
    5. '   ' → logprob: -6.580709457397461
    6. '        
' → logprob: -6.580709457397461
    7. '<|end|>' → logprob: -7.455709457397461
    8. ',' → logprob: -7.580709457397461
    9. '  
' → logprob: -7.705709457397461
    10. '[' → logprob: -8.205709457397461

Token 249: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0027002585120499134
    2. 'for' → logprob: -6.627700328826904
    3. ' d' → logprob: -6.877700328826904
    4. ' for' → logprob: -9.252699851989746
    5. '       ' → logprob: -9.502699851989746
    6. '   ' → logprob: -9.502699851989746
    7. 'value' → logprob: -10.752699851989746
    8. 'val' → logprob: -10.877699851989746
    9. 'row' → logprob: -11.127699851989746
    10. 'term' → logprob: -11.377699851989746

Token 250: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0921942703134846e-05
    2. '[' → logprob: -12.62501049041748
    3. '[j' → logprob: -12.62501049041748
    4. ' [' → logprob: -14.25001049041748
    5. '=' → logprob: -14.50001049041748
    6. '[:,' → logprob: -14.62501049041748
    7. '[I' → logprob: -14.62501049041748
    8. '[d' → logprob: -14.75001049041748
    9. '[
' → logprob: -14.75001049041748
    10. '```' → logprob: -15.25001049041748

Token 251: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001311544212512672
    2. ']=' → logprob: -7.626311779022217
    3. ']+=' → logprob: -8.126311302185059
    4. '][:' → logprob: -8.376311302185059
    5. '][' → logprob: -8.751311302185059
    6. ',' → logprob: -9.251311302185059
    7. ' ]' → logprob: -10.876311302185059
    8. ']=(' → logprob: -11.126311302185059
    9. '][]' → logprob: -13.251311302185059
    10. ' ' → logprob: -14.001311302185059

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010255211964249611
    2. ' =' → logprob: -4.635255336761475
    3. '[:]' → logprob: -7.885255336761475
    4. '%=' → logprob: -9.635254859924316
    5. '+=' → logprob: -10.510254859924316
    6. '[:' → logprob: -11.885254859924316
    7. ']' → logprob: -11.885254859924316
    8. ']=' → logprob: -12.260254859924316
    9. '[' → logprob: -12.510254859924316
    10. '%' → logprob: -13.385254859924316

Token 253: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.12694312632083893
    2. ' compute' → logprob: -2.1269431114196777
    3. '   ' → logprob: -11.876943588256836
    4. ' (' → logprob: -13.126943588256836
    5. ' ' → logprob: -13.751943588256836
    6. 'create' → logprob: -14.001943588256836
    7. '(com' → logprob: -14.501943588256836
    8. '(' → logprob: -14.626943588256836
    9. '.compute' → logprob: -14.626943588256836
    10. '_compute' → logprob: -14.814443588256836

Token 254: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -4.60414821645827e-06
    2. 'row' → logprob: -12.750004768371582
    3. '_first' → logprob: -14.000004768371582
    4. 'compute' → logprob: -15.250004768371582
    5. '_matrix' → logprob: -15.875004768371582
    6. '_fill' → logprob: -16.000003814697266
    7. '```' → logprob: -16.625003814697266
    8. 'Row' → logprob: -16.875003814697266
    9. ''_' → logprob: -16.875003814697266
    10. '_rows' → logprob: -17.000003814697266

Token 255: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.375001907348633
    3. 'd' → logprob: -15.125001907348633
    4. ' (' → logprob: -17.000001907348633
    5. '(
' → logprob: -17.000001907348633
    6. '```' → logprob: -18.125001907348633
    7. ',d' → logprob: -19.125001907348633
    8. '
' → logprob: -19.500001907348633
    9. '

' → logprob: -20.500001907348633
    10. '(de' → logprob: -20.625001907348633

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002813078695908189
    2. '(d' → logprob: -6.25281286239624
    3. ',d' → logprob: -7.12781286239624
    4. ' ,' → logprob: -9.752813339233398
    5. '(' → logprob: -11.627813339233398
    6. 'd' → logprob: -12.127813339233398
    7. '(i' → logprob: -12.752813339233398
    8. '   ' → logprob: -13.127813339233398
    9. ' d' → logprob: -13.627813339233398
    10. ')' → logprob: -13.877813339233398

Token 257: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1604330986738205
    2. ' i' → logprob: -1.910433053970337
    3. 'd' → logprob: -9.160432815551758
    4. '   ' → logprob: -10.285432815551758
    5. ' d' → logprob: -10.285432815551758
    6. ' ' → logprob: -10.660432815551758
    7. '  ' → logprob: -12.660432815551758
    8. 'j' → logprob: -12.910432815551758
    9. ' j' → logprob: -13.535432815551758
    10. 'k' → logprob: -13.535432815551758

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014546399470418692
    2. ' ,' → logprob: -6.626454830169678
    3. ',k' → logprob: -9.00145435333252
    4. ',j' → logprob: -12.37645435333252
    5. '   ' → logprob: -14.00145435333252
    6. '  ' → logprob: -15.50145435333252
    7. '    ' → logprob: -17.001455307006836
    8. ',
' → logprob: -17.126455307006836
    9. ' ' → logprob: -17.376455307006836
    10. ' k' → logprob: -17.376455307006836

Token 259: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0028095098678022623
    2. ' k' → logprob: -5.877809524536133
    3. 'j' → logprob: -12.377809524536133
    4. ' j' → logprob: -15.752809524536133
    5. ' ' → logprob: -16.252809524536133
    6. '
' → logprob: -16.502809524536133
    7. '  ' → logprob: -17.377809524536133
    8. '   ' → logprob: -17.502809524536133
    9. '    ' → logprob: -17.877809524536133
    10. '	k' → logprob: -18.002809524536133

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0250244140625
    2. ',j' → logprob: -3.7750244140625
    3. ' ,' → logprob: -6.4000244140625
    4. 'j' → logprob: -9.2750244140625
    5. ' j' → logprob: -10.7750244140625
    6. ')' → logprob: -15.2750244140625
    7. '   ' → logprob: -15.5250244140625
    8. ' ' → logprob: -15.7750244140625
    9. ',
' → logprob: -15.9000244140625
    10. ',k' → logprob: -16.4000244140625

Token 261: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012510236352682114
    2. ' j' → logprob: -4.387510299682617
    3. ' ' → logprob: -15.637510299682617
    4. '	j' → logprob: -16.012510299682617
    5. ',j' → logprob: -16.387510299682617
    6. '   ' → logprob: -16.762510299682617
    7. ',' → logprob: -16.887510299682617
    8. '$j' → logprob: -17.262510299682617
    9. '
' → logprob: -18.200010299682617
    10. '[j' → logprob: -18.200010299682617

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003500050224829465
    2. ' ,' → logprob: -8.000349998474121
    3. ',M' → logprob: -11.375349998474121
    4. ')' → logprob: -14.125349998474121
    5. 'M' → logprob: -14.250349998474121
    6. '```' → logprob: -15.250349998474121
    7. '   ' → logprob: -15.375349998474121
    8. 'd' → logprob: -15.500349998474121
    9. 'def' → logprob: -15.750349998474121
    10. ' ' → logprob: -16.000350952148438

Token 263: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.16022585332393646
    2. ' M' → logprob: -1.9102258682250977
    3. ')' → logprob: -13.910225868225098
    4. ' ' → logprob: -14.785225868225098
    5. '   ' → logprob: -15.660225868225098
    6. ' ' → logprob: -16.16022491455078
    7. '    ' → logprob: -16.66022491455078
    8. '  ' → logprob: -17.41022491455078
    9. '
' → logprob: -17.78522491455078
    10. '```' → logprob: -17.78522491455078

Token 264: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012642296496778727
    2. ')
' → logprob: -9.000126838684082
    3. '   ' → logprob: -13.250126838684082
    4. ' )' → logprob: -14.750126838684082
    5. ')

' → logprob: -15.375126838684082
    6. '<|end|>' → logprob: -15.875126838684082
    7. ')
' → logprob: -16.500125885009766
    8. '))' → logprob: -16.625125885009766
    9. '}' → logprob: -16.875125885009766
    10. ')return' → logprob: -17.250125885009766

Token 265: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: ' compute' (ID: 23864)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27368226647377014
    2. ' def' → logprob: -1.5236822366714478
    3. 'parse' → logprob: -4.398682117462158
    4. ' parse' → logprob: -5.523682117462158
    5. ' main' → logprob: -6.023682117462158
    6. 'main' → logprob: -6.273682117462158
    7. 'get' → logprob: -8.398682594299316
    8. '
' → logprob: -9.398682594299316
    9. 'define' → logprob: -9.648682594299316
    10. 'solve' → logprob: -9.648682594299316

Token 267: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0249570608139038
    2. '_sum' → logprob: -2.1499571800231934
    3. '_result' → logprob: -2.1499571800231934
    4. '(n' → logprob: -2.7749571800231934
    5. '(d' → logprob: -2.8999571800231934
    6. '_' → logprob: -3.3999571800231934
    7. '_factor' → logprob: -3.5249571800231934
    8. '_l' → logprob: -3.6499571800231934
    9. '_matrix' → logprob: -3.6499571800231934
    10. '_max' → logprob: -4.024957180023193

Token 268: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.000498701527249068
    2. '(' → logprob: -8.37549877166748
    3. 'def' → logprob: -8.62549877166748
    4. '(def' → logprob: -9.50049877166748
    5. '(n' → logprob: -12.87549877166748
    6. '(
' → logprob: -13.00049877166748
    7. ' (' → logprob: -13.50049877166748
    8. '(l' → logprob: -13.87549877166748
    9. '(D' → logprob: -13.87549877166748
    10. ' def' → logprob: -14.12549877166748

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.779520092299208e-05
    2. '):' → logprob: -10.250078201293945
    3. ',i' → logprob: -11.000078201293945
    4. ',l' → logprob: -11.625078201293945
    5. '):
' → logprob: -11.875078201293945
    6. ' ,' → logprob: -12.625078201293945
    7. ',n' → logprob: -13.125078201293945
    8. '   ' → logprob: -13.625078201293945
    9. ')' → logprob: -14.250078201293945
    10. ',
' → logprob: -14.375078201293945

Token 270: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6323422789573669
    2. 'l' → logprob: -0.8823422789573669
    3. ' n' → logprob: -3.8823423385620117
    4. 'n' → logprob: -4.257342338562012
    5. ' M' → logprob: -4.382342338562012
    6. 'M' → logprob: -5.257342338562012
    7. 'd' → logprob: -7.257342338562012
    8. ' d' → logprob: -7.507342338562012
    9. ' ' → logprob: -8.507342338562012
    10. 'def' → logprob: -8.882342338562012

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.8961017202818766e-05
    2. '):
' → logprob: -10.625059127807617
    3. '):' → logprob: -11.125059127807617
    4. ' ,' → logprob: -11.750059127807617
    5. ',
' → logprob: -13.000059127807617
    6. 'def' → logprob: -13.125059127807617
    7. '   ' → logprob: -13.125059127807617
    8. ',i' → logprob: -13.625059127807617
    9. ')' → logprob: -14.125059127807617
    10. ',M' → logprob: -14.625059127807617

Token 272: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5287572741508484
    2. ' M' → logprob: -0.9037572741508484
    3. 'n' → logprob: -5.528757095336914
    4. ' n' → logprob: -6.528757095336914
    5. 'def' → logprob: -10.028757095336914
    6. 'N' → logprob: -10.153757095336914
    7. 'd' → logprob: -10.403757095336914
    8. 'l' → logprob: -11.278757095336914
    9. ')' → logprob: -11.403757095336914
    10. ' ' → logprob: -11.778757095336914

Token 273: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20193862915039062
    2. '):' → logprob: -1.7019386291503906
    3. ',' → logprob: -7.701938629150391
    4. '):
' → logprob: -9.95193862915039
    5. '   ' → logprob: -11.57693862915039
    6. ')' → logprob: -12.20193862915039
    7. '):

' → logprob: -12.32693862915039
    8. 'def' → logprob: -12.70193862915039
    9. ' ):
' → logprob: -13.45193862915039
    10. ' ):' → logprob: -14.20193862915039

Token 274: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.518538236618042
    2. '   ' → logprob: -1.643538236618042
    3. 'res' → logprob: -2.268538236618042
    4. 'result' → logprob: -2.393538236618042
    5. 's' → logprob: -5.143538475036621
    6. 'total' → logprob: -5.768538475036621
    7. '```' → logprob: -6.018538475036621
    8. 'def' → logprob: -6.143538475036621
    9. ' return' → logprob: -7.018538475036621
    10. 'for' → logprob: -7.268538475036621

Token 275: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15736500918865204
    2. 'result' → logprob: -2.532365083694458
    3. 'res' → logprob: -3.032365083694458
    4. 'total' → logprob: -4.782364845275879
    5. '   ' → logprob: -5.407364845275879
    6. 's' → logprob: -6.157364845275879
    7. 'def' → logprob: -6.407364845275879
    8. 'acc' → logprob: -8.282364845275879
    9. 'ans' → logprob: -8.407364845275879
    10. ' return' → logprob: -8.532364845275879

Token 276: ' sum' (ID: 4215)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4105834364891052
    2. 'sum' → logprob: -1.16058349609375
    3. 'int' → logprob: -4.53558349609375
    4. 'max' → logprob: -5.41058349609375
    5. '(d' → logprob: -5.53558349609375
    6. ' d' → logprob: -6.41058349609375
    7. '(sum' → logprob: -7.28558349609375
    8. ' sum' → logprob: -7.66058349609375
    9. 'array' → logprob: -7.78558349609375
    10. 'amax' → logprob: -8.41058349609375

Token 277: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0002631238894537091
    2. '(' → logprob: -8.625263214111328
    3. '((' → logprob: -9.500263214111328
    4. ' (' → logprob: -12.250263214111328
    5. 'd' → logprob: -13.000263214111328
    6. '(
' → logprob: -14.125263214111328
    7. '([' → logprob: -15.875263214111328
    8. '```' → logprob: -16.250263214111328
    9. ' d' → logprob: -16.375263214111328
    10. '[d' → logprob: -16.500263214111328

Token 278: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.22657810151576996
    2. '[l' → logprob: -1.6015781164169312
    3. '[:,' → logprob: -7.851578235626221
    4. '[:' → logprob: -8.351577758789062
    5. '[d' → logprob: -8.726577758789062
    6. '[' → logprob: -8.976577758789062
    7. ',' → logprob: -9.351577758789062
    8. '[(' → logprob: -9.851577758789062
    9. ')' → logprob: -10.101577758789062
    10. '[i' → logprob: -11.476577758789062

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8232690460281447e-05
    2. '2' → logprob: -11.000048637390137
    3. ' ' → logprob: -11.000048637390137
    4. '   ' → logprob: -11.625048637390137
    5. ']' → logprob: -13.875048637390137
    6. '])' → logprob: -14.125048637390137
    7. '```' → logprob: -14.125048637390137
    8. '(' → logprob: -14.250048637390137
    9. '  ' → logprob: -14.625048637390137
    10. ',' → logprob: -15.125048637390137

Token 280: '][:' (ID: 63357)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1303744912147522
    2. ']' → logprob: -2.1303744316101074
    3. '],' → logprob: -6.255374431610107
    4. ',' → logprob: -6.880374431610107
    5. ']%' → logprob: -8.755374908447266
    6. '][' → logprob: -9.005374908447266
    7. '][:' → logprob: -9.130374908447266
    8. ')' → logprob: -10.005374908447266
    9. ' ])' → logprob: -11.755374908447266
    10. ']))' → logprob: -12.130374908447266

Token 281: 'l' (ID: 75)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.28319600224494934
    2. 'l' → logprob: -2.408195972442627
    3. '-' → logprob: -2.783195972442627
    4. ']' → logprob: -2.783195972442627
    5. 'M' → logprob: -4.158195972442627
    6. '3' → logprob: -5.408195972442627
    7. '2' → logprob: -6.033195972442627
    8. '4' → logprob: -6.158195972442627
    9. '5' → logprob: -6.658195972442627
    10. ']==' → logprob: -7.033195972442627

Token 282: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006384541047737002
    2. ']' → logprob: -8.125638008117676
    3. ' ])' → logprob: -8.500638008117676
    4. ',' → logprob: -9.625638008117676
    5. '],' → logprob: -10.375638008117676
    6. '])
' → logprob: -11.250638008117676
    7. ')' → logprob: -11.875638008117676
    8. '-' → logprob: -12.625638008117676
    9. '   ' → logprob: -12.750638008117676
    10. '%' → logprob: -12.750638008117676

Token 283: ' %' (ID: 1851)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25909504294395447
    2. '<|end|>' → logprob: -1.5090950727462769
    3. '```' → logprob: -5.759095191955566
    4. '#' → logprob: -6.259095191955566
    5. '
' → logprob: -6.884095191955566
    6. '<|end|>' → logprob: -7.759095191955566
    7. 'n' → logprob: -8.634095191955566
    8. '``' → logprob: -9.259095191955566
    9. 'for' → logprob: -10.009095191955566
    10. 'from' → logprob: -10.134095191955566

Token 284: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0067156096920371056
    2. ' M' → logprob: -5.006715774536133
    3. ' ' → logprob: -16.256715774536133
    4. '   ' → logprob: -16.381715774536133
    5. '```' → logprob: -18.006715774536133
    6. '  ' → logprob: -18.881715774536133
    7. '	M' → logprob: -19.256715774536133
    8. ' ' → logprob: -19.381715774536133
    9. '`' → logprob: -20.131715774536133
    10. '<M' → logprob: -20.506715774536133

Token 285: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021942712366580963
    2. '```' → logprob: -4.771942615509033
    3. 'from' → logprob: -5.146942615509033
    4. 'n' → logprob: -5.521942615509033
    5. '<|end|>' → logprob: -6.521942615509033
    6. 'if' → logprob: -7.521942615509033
    7. '#' → logprob: -7.646942615509033
    8. 'for' → logprob: -8.146943092346191
    9. 'a' → logprob: -8.771943092346191
    10. '(' → logprob: -8.896943092346191

Token 287: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08950718492269516
    2. ' main' → logprob: -2.4645071029663086
    3. 'parse' → logprob: -7.589507102966309
    4. ' parse' → logprob: -10.589507102966309
    5. 'solve' → logprob: -10.714507102966309
    6. ' solve' → logprob: -12.339507102966309
    7. 'def' → logprob: -12.464507102966309
    8. 'run' → logprob: -13.214507102966309
    9. 'process' → logprob: -13.339507102966309
    10. '	main' → logprob: -14.464507102966309

Token 288: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04859418421983719
    2. '():
' → logprob: -3.0485942363739014
    3. '():
' → logprob: -12.67359447479248
    4. ' ():' → logprob: -13.54859447479248
    5. '()' → logprob: -13.79859447479248
    6. 'def' → logprob: -14.42359447479248
    7. '():

' → logprob: -14.42359447479248
    8. '(' → logprob: -15.29859447479248
    9. '();' → logprob: -17.548593521118164
    10. '()>' → logprob: -17.673593521118164

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18053939938545227
    2. 'n' → logprob: -1.9305393695831299
    3. ' n' → logprob: -3.93053936958313
    4. 'l' → logprob: -8.93053913116455
    5. '	n' → logprob: -9.18053913116455
    6. 't' → logprob: -9.68053913116455
    7. '```' → logprob: -9.68053913116455
    8. ' l' → logprob: -10.18053913116455
    9. '(n' → logprob: -10.55553913116455
    10. ' t' → logprob: -11.30553913116455

Token 290: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.009216208942234516
    2. '   ' → logprob: -4.75921630859375
    3. ' n' → logprob: -8.13421630859375
    4. 't' → logprob: -8.88421630859375
    5. 'N' → logprob: -9.38421630859375
    6. 'l' → logprob: -10.13421630859375
    7. '(n' → logprob: -11.25921630859375
    8. 'M' → logprob: -11.38421630859375
    9. 'T' → logprob: -12.13421630859375
    10. '	n' → logprob: -12.50921630859375

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13660649955272675
    2. ' =' → logprob: -2.261606454849243
    3. '=' → logprob: -3.761606454849243
    4. ',l' → logprob: -8.511606216430664
    5. ',n' → logprob: -11.261606216430664
    6. ' ,' → logprob: -11.511606216430664
    7. ',k' → logprob: -12.511606216430664
    8. ' ' → logprob: -12.761606216430664
    9. ',s' → logprob: -12.886606216430664
    10. 's' → logprob: -13.011606216430664

Token 292: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.029795266687870026
    2. ' M' → logprob: -3.5297951698303223
    3. 'm' → logprob: -10.15479564666748
    4. ' ' → logprob: -13.40479564666748
    5. '   ' → logprob: -13.40479564666748
    6. 'k' → logprob: -14.02979564666748
    7. 'p' → logprob: -14.77979564666748
    8. '  ' → logprob: -15.02979564666748
    9. ' m' → logprob: -15.15479564666748
    10. '*' → logprob: -15.27979564666748

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759541392326355
    2. '=' → logprob: -0.8259541392326355
    3. '=parse' → logprob: -11.45095443725586
    4. ',' → logprob: -13.32595443725586
    5. ' ' → logprob: -14.57595443725586
    6. '   ' → logprob: -14.70095443725586
    7. '=input' → logprob: -14.82595443725586
    8. ')' → logprob: -15.32595443725586
    9. ')=' → logprob: -16.07595443725586
    10. '=int' → logprob: -16.07595443725586

Token 294: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.10289990901947021
    2. 'parse' → logprob: -2.3529000282287598
    3. ' map' → logprob: -5.97790002822876
    4. 'map' → logprob: -8.852899551391602
    5. ' tuple' → logprob: -11.727899551391602
    6. '	parse' → logprob: -13.602899551391602
    7. 'tuple' → logprob: -13.977899551391602
    8. ' ' → logprob: -14.102899551391602
    9. '   ' → logprob: -14.727899551391602
    10. '=parse' → logprob: -14.977899551391602

Token 295: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.08239686489105225
    2. '()' → logprob: -2.582396984100342
    3. 'input' → logprob: -6.082396984100342
    4. 'int' → logprob: -7.707396984100342
    5. '_int' → logprob: -8.332396507263184
    6. '(int' → logprob: -8.582396507263184
    7. '(' → logprob: -8.957396507263184
    8. '()
' → logprob: -8.957396507263184
    9. '_inputs' → logprob: -11.582396507263184
    10. ' input' → logprob: -11.707396507263184

Token 296: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005241821985691786
    2. '()
' → logprob: -5.255241870880127
    3. '()

' → logprob: -12.880241394042969
    4. '()
' → logprob: -13.255241394042969
    5. '()\' → logprob: -13.380241394042969
    6. '()`' → logprob: -14.255241394042969
    7. '();' → logprob: -14.630241394042969
    8. '():' → logprob: -15.130241394042969
    9. '()"' → logprob: -15.505241394042969
    10. '()<' → logprob: -16.25524139404297

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01877768337726593
    2. 'l' → logprob: -4.018777847290039
    3. ' l' → logprob: -8.018777847290039
    4. '```' → logprob: -8.268777847290039
    5. '	l' → logprob: -10.893777847290039
    6. '<|end|>' → logprob: -11.893777847290039
    7. 'n' → logprob: -12.518777847290039
    8. '    
' → logprob: -12.643777847290039
    9. '
' → logprob: -13.018777847290039
    10. ',l' → logprob: -13.018777847290039

Token 298: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0006782424170523882
    2. ' l' → logprob: -7.750678062438965
    3. '   ' → logprob: -8.375678062438965
    4. '```' → logprob: -11.125678062438965
    5. '	l' → logprob: -13.875678062438965
    6. '
' → logprob: -14.875678062438965
    7. ' ' → logprob: -15.000678062438965
    8. '`' → logprob: -15.500678062438965
    9. 'n' → logprob: -16.12567901611328
    10. '``' → logprob: -16.25067901611328

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. ',' → logprob: -15.693147659301758
    4. ' ' → logprob: -16.443147659301758
    5. ')' → logprob: -17.318147659301758
    6. '   ' → logprob: -17.943147659301758
    7. ' ' → logprob: -18.443147659301758
    8. '＝' → logprob: -19.068147659301758
    9. ' =
' → logprob: -19.193147659301758
    10. '```' → logprob: -19.443147659301758

Token 300: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.10021141171455383
    2. 'get' → logprob: -2.3502113819122314
    3. '(get' → logprob: -12.850211143493652
    4. ' ' → logprob: -14.350211143493652
    5. ' n' → logprob: -14.475211143493652
    6. '=get' → logprob: -15.100211143493652
    7. 'n' → logprob: -15.475211143493652
    8. '	get' → logprob: -15.475211143493652
    9. '   ' → logprob: -15.850211143493652
    10. '[get' → logprob: -16.22521209716797

Token 301: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.05053000897169113
    2. '(n' → logprob: -3.050529956817627
    3. 'l' → logprob: -6.425529956817627
    4. '_n' → logprob: -8.925530433654785
    5. 'n' → logprob: -9.050530433654785
    6. '_(' → logprob: -10.425530433654785
    7. '_' → logprob: -11.300530433654785
    8. '(l' → logprob: -12.050530433654785
    9. '(' → logprob: -12.175530433654785
    10. '_length' → logprob: -12.550530433654785

Token 302: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00023226479243021458
    2. 'n' → logprob: -8.375232696533203
    3. '(' → logprob: -13.625232696533203
    4. ' (' → logprob: -15.125232696533203
    5. '(
' → logprob: -17.125232696533203
    6. ' n' → logprob: -17.125232696533203
    7. '	n' → logprob: -18.250232696533203
    8. '```' → logprob: -18.750232696533203
    9. ',n' → logprob: -19.875232696533203
    10. 'l' → logprob: -19.875232696533203

Token 303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011717714369297028
    2. ')
' → logprob: -6.751171588897705
    3. '())' → logprob: -14.876172065734863
    4. '   ' → logprob: -15.126172065734863
    5. ')

' → logprob: -15.126172065734863
    6. '()' → logprob: -15.501172065734863
    7. ')
' → logprob: -15.501172065734863
    8. ' )' → logprob: -16.376171112060547
    9. '))' → logprob: -17.251171112060547
    10. '),' → logprob: -17.626171112060547

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20814666152000427
    2. 'd' → logprob: -1.7081466913223267
    3. ' d' → logprob: -5.083146572113037
    4. '	d' → logprob: -7.958146572113037
    5. '
' → logprob: -9.458147048950195
    6. '    
' → logprob: -10.208147048950195
    7. '```' → logprob: -10.583147048950195
    8. '   ' → logprob: -12.458147048950195
    9. ',d' → logprob: -12.708147048950195
    10. ' ' → logprob: -12.833147048950195

Token 305: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.02170442044734955
    2. '   ' → logprob: -3.8967044353485107
    3. ' d' → logprob: -6.771704196929932
    4. '```' → logprob: -11.64670467376709
    5. '	d' → logprob: -12.77170467376709
    6. ' ' → logprob: -12.89670467376709
    7. '  ' → logprob: -14.02170467376709
    8. '       ' → logprob: -15.14670467376709
    9. '   ' → logprob: -15.64670467376709
    10. '    
' → logprob: -15.77170467376709

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193676352500916
    2. '=' → logprob: -1.5019367933273315
    3. '[' → logprob: -12.876936912536621
    4. ',' → logprob: -13.126936912536621
    5. '	' → logprob: -13.876936912536621
    6. ' ' → logprob: -14.001936912536621
    7. '   ' → logprob: -14.001936912536621
    8. '=create' → logprob: -15.001936912536621
    9. '  ' → logprob: -16.626935958862305
    10. ' =
' → logprob: -16.876935958862305

Token 307: ' create' (ID: 2501)
  Prédit: ' create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' create' → logprob: -0.6931662559509277
    2. 'create' → logprob: -0.6931662559509277
    3. ' zeros' → logprob: -11.193166732788086
    4. '(create' → logprob: -13.068166732788086
    5. 'zeros' → logprob: -13.443166732788086
    6. '=create' → logprob: -14.193166732788086
    7. '	create' → logprob: -15.193166732788086
    8. 'reate' → logprob: -15.318166732788086
    9. '   ' → logprob: -15.443166732788086
    10. ' ' → logprob: -16.193166732788086

Token 308: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.704273118884885e-07
    2. 'zeros' → logprob: -15.250000953674316
    3. ' _' → logprob: -15.750000953674316
    4. '```' → logprob: -16.5
    5. '(d' → logprob: -16.75
    6. '(' → logprob: -17.5
    7. '.zeros' → logprob: -17.625
    8. '=zeros' → logprob: -17.625
    9. '_zero' → logprob: -17.875
    10. 'd' → logprob: -18.25

Token 309: 'zeros' (ID: 24095)
  Prédit: 'zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -4.429896944202483e-05
    2. ' zeros' → logprob: -10.250043869018555
    3. '.zeros' → logprob: -12.250043869018555
    4. 'Zeros' → logprob: -13.500043869018555
    5. 'd' → logprob: -14.375043869018555
    6. 'ones' → logprob: -14.500043869018555
    7. '```' → logprob: -14.625043869018555
    8. '=zeros' → logprob: -14.875043869018555
    9. '(d' → logprob: -15.625043869018555
    10. '(' → logprob: -15.625043869018555

Token 310: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.125017166137695
    3. ' (' → logprob: -13.000017166137695
    4. '```' → logprob: -15.875017166137695
    5. '((' → logprob: -16.875017166137695
    6. '(length' → logprob: -17.375017166137695
    7. ',l' → logprob: -17.625017166137695
    8. 'l' → logprob: -18.250017166137695
    9. '(d' → logprob: -18.375017166137695
    10. '(len' → logprob: -18.500017166137695

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004517646157182753
    2. ',n' → logprob: -8.125452041625977
    3. ' ,' → logprob: -9.500452041625977
    4. ',l' → logprob: -9.500452041625977
    5. '(n' → logprob: -12.250452041625977
    6. ')' → logprob: -14.625452041625977
    7. ',d' → logprob: -15.500452041625977
    8. ',
' → logprob: -15.750452041625977
    9. '(l' → logprob: -16.125452041625977
    10. 'n' → logprob: -16.375452041625977

Token 312: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020580526324920356
    2. ' n' → logprob: -8.750205993652344
    3. '5' → logprob: -10.625205993652344
    4. '1' → logprob: -11.125205993652344
    5. '   ' → logprob: -11.875205993652344
    6. '	n' → logprob: -14.875205993652344
    7. '    ' → logprob: -15.250205993652344
    8. '2' → logprob: -15.625205993652344
    9. '```' → logprob: -15.750205993652344
    10. ' ' → logprob: -16.250205993652344

Token 313: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004681814927607775
    2. ')
' → logprob: -5.379681587219238
    3. '   ' → logprob: -11.004681587219238
    4. ')

' → logprob: -11.254681587219238
    5. ' )' → logprob: -11.379681587219238
    6. ',' → logprob: -11.879681587219238
    7. '<|end|>' → logprob: -12.629681587219238
    8. ')
' → logprob: -13.504681587219238
    9. '```' → logprob: -13.504681587219238
    10. '),' → logprob: -13.879681587219238

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009816531091928482
    2. 'set' → logprob: -4.884816646575928
    3. ' set' → logprob: -6.384816646575928
    4. '<|end|>' → logprob: -8.00981616973877
    5. '	set' → logprob: -9.13481616973877
    6. '```' → logprob: -10.13481616973877
    7. ')set' → logprob: -11.63481616973877
    8. '
' → logprob: -12.25981616973877
    9. 'd' → logprob: -12.63481616973877
    10. '    
' → logprob: -12.88481616973877

Token 315: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.12078803777694702
    2. '   ' → logprob: -2.245788097381592
    3. ' set' → logprob: -4.870788097381592
    4. '	set' → logprob: -8.995787620544434
    5. '```' → logprob: -9.620787620544434
    6. ')set' → logprob: -10.995787620544434
    7. '  ' → logprob: -11.495787620544434
    8. 'fill' → logprob: -11.620787620544434
    9. '    
' → logprob: -11.620787620544434
    10. '
' → logprob: -11.870787620544434

Token 316: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.125
    3. 'init' → logprob: -17.75
    4. '_initial' → logprob: -18.25
    5. ' _' → logprob: -18.375
    6. '_ini' → logprob: -19.375
    7. '```' → logprob: -19.875
    8. 'd' → logprob: -20.0
    9. '_iter' → logprob: -20.25
    10. '(d' → logprob: -20.625

Token 317: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. '(
' → logprob: -16.625003814697266
    4. ' (' → logprob: -17.500003814697266
    5. '```' → logprob: -18.000003814697266
    6. '(def' → logprob: -19.250003814697266
    7. '(de' → logprob: -20.375003814697266
    8. '   ' → logprob: -20.500003814697266
    9. '(D' → logprob: -20.625003814697266
    10. 'd' → logprob: -20.875003814697266

Token 318: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20162753760814667
    2. ')
' → logprob: -1.701627492904663
    3. '   ' → logprob: -8.701627731323242
    4. ')

' → logprob: -10.826627731323242
    5. ')
' → logprob: -11.701627731323242
    6. '[' → logprob: -11.826627731323242
    7. '()' → logprob: -12.951627731323242
    8. ')d' → logprob: -12.951627731323242
    9. ' )' → logprob: -13.576627731323242
    10. '())
' → logprob: -13.701627731323242

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029902756214141846
    2. '```' → logprob: -3.904902696609497
    3. 'fill' → logprob: -5.154902935028076
    4. '
' → logprob: -6.404902935028076
    5. ' fill' → logprob: -7.404902935028076
    6. '``' → logprob: -7.529902935028076
    7. '    
' → logprob: -7.904902935028076
    8. '	fill' → logprob: -8.404902458190918
    9. '  
' → logprob: -10.779902458190918
    10. '(fill' → logprob: -10.779902458190918

Token 320: ' fill' (ID: 6954)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' (adapté à ' fill') → logprob: -0.32325443625450134
    2. '   ' → logprob: -1.4482544660568237
    3. ' fill' → logprob: -3.198254346847534
    4. 'for' → logprob: -8.823254585266113
    5. '```' → logprob: -9.323254585266113
    6. '	fill' → logprob: -9.448254585266113
    7. ' for' → logprob: -10.948254585266113
    8. '
' → logprob: -11.073254585266113
    9. '  ' → logprob: -11.198254585266113
    10. ' ' → logprob: -11.573254585266113

Token 321: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.375
    3. 'matrix' → logprob: -16.875
    4. '(d' → logprob: -17.75
    5. '_fill' → logprob: -19.125
    6. '_array' → logprob: -19.375
    7. '(matrix' → logprob: -19.625
    8. '(' → logprob: -19.875
    9. '_m' → logprob: -20.0
    10. '```' → logprob: -20.25

Token 322: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.0722858102526516e-05
    2. '(' → logprob: -10.125041007995605
    3. '(
' → logprob: -15.125041007995605
    4. ' (' → logprob: -15.875041007995605
    5. '```' → logprob: -16.00004005432129
    6. 'd' → logprob: -16.37504005432129
    7. ',d' → logprob: -18.12504005432129
    8. '   ' → logprob: -18.37504005432129
    9. '(def' → logprob: -19.37504005432129
    10. 'def' → logprob: -20.00004005432129

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005344755481928587
    2. ',d' → logprob: -5.880344867706299
    3. '(d' → logprob: -6.005344867706299
    4. 'd' → logprob: -10.50534439086914
    5. '(' → logprob: -10.88034439086914
    6. ' ,' → logprob: -11.25534439086914
    7. '   ' → logprob: -11.75534439086914
    8. ')' → logprob: -13.25534439086914
    9. ',
' → logprob: -14.38034439086914
    10. ' d' → logprob: -14.50534439086914

Token 324: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002478627720847726
    2. ' l' → logprob: -6.00247859954834
    3. '   ' → logprob: -13.00247859954834
    4. '	l' → logprob: -15.12747859954834
    5. ' ' → logprob: -15.37747859954834
    6. 'd' → logprob: -16.252479553222656
    7. '  ' → logprob: -16.502479553222656
    8. '    ' → logprob: -17.002479553222656
    9. '
' → logprob: -17.002479553222656
    10. ')' → logprob: -18.377479553222656

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.407366916188039e-05
    2. ' ,' → logprob: -9.875054359436035
    3. '   ' → logprob: -13.625054359436035
    4. ',M' → logprob: -13.750054359436035
    5. ')' → logprob: -16.00005340576172
    6. ',
' → logprob: -17.12505340576172
    7. '=' → logprob: -17.50005340576172
    8. '```' → logprob: -17.62505340576172
    9. '‌,' → logprob: -18.37505340576172
    10. '),' → logprob: -18.62505340576172

Token 326: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.026304593309760094
    2. ' M' → logprob: -3.6513044834136963
    3. ' ' → logprob: -13.151304244995117
    4. '   ' → logprob: -13.276304244995117
    5. '  ' → logprob: -15.776304244995117
    6. '
' → logprob: -15.901304244995117
    7. '```' → logprob: -16.276304244995117
    8. '    ' → logprob: -16.526304244995117
    9. '	M' → logprob: -16.776304244995117
    10. ' ' → logprob: -17.151304244995117

Token 327: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004211243707686663
    2. ')
' → logprob: -5.50421142578125
    3. '   ' → logprob: -9.00421142578125
    4. ')

' → logprob: -11.75421142578125
    5. ' )' → logprob: -13.75421142578125
    6. '
' → logprob: -15.50421142578125
    7. ')
' → logprob: -15.87921142578125
    8. ' ' → logprob: -16.37921142578125
    9. ')`' → logprob: -16.62921142578125
    10. ')#' → logprob: -16.75421142578125

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029794352129101753
    2. 'result' → logprob: -3.904794454574585
    3. 'print' → logprob: -5.154794216156006
    4. '```' → logprob: -6.029794216156006
    5. ' result' → logprob: -7.279794216156006
    6. '    
' → logprob: -9.404794692993164
    7. 'return' → logprob: -9.779794692993164
    8. 'res' → logprob: -9.904794692993164
    9. '``' → logprob: -9.904794692993164
    10. ' print' → logprob: -9.904794692993164

Token 329: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.012315855361521244
    2. 'result' → logprob: -4.51231575012207
    3. 'res' → logprob: -7.38731575012207
    4. 'r' → logprob: -8.01231575012207
    5. '   ' → logprob: -8.38731575012207
    6. ' print' → logprob: -9.63731575012207
    7. ' result' → logprob: -11.76231575012207
    8. '```' → logprob: -11.76231575012207
    9. 'pr' → logprob: -13.13731575012207
    10. '
' → logprob: -13.26231575012207

Token 330: '(com' (ID: 27868)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2560456097126007
    2. '(' → logprob: -1.5060455799102783
    3. '()' → logprob: -5.756045818328857
    4. ' (' → logprob: -7.256045818328857
    5. '(sum' → logprob: -9.0060453414917
    6. '(
' → logprob: -9.8810453414917
    7. '(*' → logprob: -10.6310453414917
    8. ' ()' → logprob: -11.7560453414917
    9. '((' → logprob: -11.8810453414917
    10. 'd' → logprob: -12.2560453414917

Token 331: 'pute' (ID: 13605)
  Prédit: 'pute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.24278467893600464
    2. 'pose' → logprob: -2.3677847385406494
    3. '(d' → logprob: -3.3677847385406494
    4. 'pt' → logprob: -3.4927847385406494
    5. 'p' → logprob: -3.6177847385406494
    6. 'd' → logprob: -4.99278450012207
    7. 'press' → logprob: -5.36778450012207
    8. 'pat' → logprob: -5.49278450012207
    9. 'bine' → logprob: -6.36778450012207
    10. 'plete' → logprob: -6.61778450012207

Token 332: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -4.320199877838604e-07
    2. '_results' → logprob: -15.625
    3. '_res' → logprob: -15.875
    4. 'result' → logprob: -16.125
    5. ' _' → logprob: -17.5
    6. '_output' → logprob: -17.875
    7. '_' → logprob: -18.125
    8. ')_' → logprob: -18.875
    9. '_final' → logprob: -18.875
    10. '```' → logprob: -20.125

Token 333: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.50000286102295
    3. ')(' → logprob: -14.50000286102295
    4. ')' → logprob: -15.37500286102295
    5. ' (' → logprob: -15.50000286102295
    6. '(
' → logprob: -16.250001907348633
    7. ')d' → logprob: -17.500001907348633
    8. '```' → logprob: -18.750001907348633
    9. ',d' → logprob: -19.375001907348633
    10. 'd' → logprob: -19.625001907348633

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7873793840408325
    2. '(d' → logprob: -0.7873793840408325
    3. ',d' → logprob: -2.537379264831543
    4. ')' → logprob: -5.287379264831543
    5. 'd' → logprob: -5.412379264831543
    6. '(' → logprob: -7.162379264831543
    7. '   ' → logprob: -8.037379264831543
    8. ')d' → logprob: -10.037379264831543
    9. ' ,' → logprob: -10.162379264831543
    10. ')
' → logprob: -10.787379264831543

Token 335: ' l' (ID: 305)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.000912774819880724
    2. ' d' → logprob: -7.000912666320801
    3. ')d' → logprob: -14.7509126663208
    4. '	d' → logprob: -15.0009126663208
    5. '(d' → logprob: -15.3759126663208
    6. '   ' → logprob: -15.3759126663208
    7. ')' → logprob: -16.500913619995117
    8. '
' → logprob: -17.125913619995117
    9. '```' → logprob: -19.125913619995117
    10. ' ' → logprob: -19.375913619995117

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.200166469876422e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',M' → logprob: -13.750004768371582
    4. ',d' → logprob: -15.000004768371582
    5. 'd' → logprob: -16.0000057220459
    6. ')' → logprob: -16.3750057220459
    7. '),' → logprob: -16.5000057220459
    8. '   ' → logprob: -17.1250057220459
    9. '`,' → logprob: -17.2500057220459
    10. '```' → logprob: -17.6250057220459

Token 337: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.011048054322600365
    2. ' M' → logprob: -4.511047840118408
    3. '   ' → logprob: -15.636048316955566
    4. ' ' → logprob: -17.51104736328125
    5. ')' → logprob: -17.63604736328125
    6. '
' → logprob: -19.01104736328125
    7. '  ' → logprob: -19.26104736328125
    8. '    ' → logprob: -19.38604736328125
    9. ' ' → logprob: -19.38604736328125
    10. '[' → logprob: -19.51104736328125

Token 338: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0031846018973737955
    2. ')' → logprob: -5.753184795379639
    3. '))
' → logprob: -12.00318431854248
    4. ')))' → logprob: -14.75318431854248
    5. ' ))' → logprob: -16.253185272216797
    6. ')
' → logprob: -16.753185272216797
    7. ' ' → logprob: -17.128185272216797
    8. '()))' → logprob: -17.128185272216797
    9. ''))' → logprob: -17.378185272216797
    10. '),' → logprob: -17.378185272216797

Token 339: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00048477304517291486
    2. ' if' → logprob: -8.375484466552734
    3. '```' → logprob: -9.250484466552734
    4. '<|end|>' → logprob: -9.625484466552734
    5. '_' → logprob: -10.500484466552734
    6. 'main' → logprob: -11.000484466552734
    7. '#' → logprob: -11.250484466552734
    8. ')' → logprob: -11.875484466552734
    9. '\' → logprob: -12.250484466552734
    10. '()' → logprob: -12.250484466552734

Token 340: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05171096324920654
    2. '<|end|>' → logprob: -3.551711082458496
    3. '#' → logprob: -4.926711082458496
    4. ':' → logprob: -5.301711082458496
    5. '[' → logprob: -5.926711082458496
    6. '(' → logprob: -6.176711082458496
    7. '```' → logprob: -6.426711082458496
    8. ',' → logprob: -7.301711082458496
    9. '<|end|>' → logprob: -7.676711082458496
    10. '()' → logprob: -8.051711082458496


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 338
Tokens correctement prédits (1ère position, stricte): 138
Tokens correctement prédits (1ère position, avec adaptation): 150
Tokens correctement prédits (top 10): 284
Précision stricte (1ère position): 40.83%
Précision adaptée (1ère position): 44.38%
Précision (top 10): 84.02%
================================================================================
