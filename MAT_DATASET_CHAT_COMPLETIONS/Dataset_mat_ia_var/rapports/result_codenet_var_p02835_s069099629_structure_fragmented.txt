================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return input()

def split_input(user_input):
    return user_input.split()

def to_int_list(str_list):
    return list(map(int, str_list))

def get_numbers():
    user_input = get_input()
    str_list = split_input(user_input)
    int_list = to_int_list(str_list)
    return int_list

def calculate_sum(numbers):
    return sum(numbers)

def check_bust(total):
    return total >= 22

def get_result(is_bust):
    if is_bust:
        return "bust"
    else:
        return "win"

def main():
    numbers = get_numbers()
    total = calculate_sum(numbers)
    is_bust = check_bust(total)
    result = get_result(is_bust)
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004976270254701376
    2. '():' → logprob: -5.629976272583008
    3. '_' → logprob: -6.879976272583008
    4. '()' → logprob: -8.629976272583008
    5. '```' → logprob: -10.004976272583008
    6. '(:' → logprob: -10.504976272583008
    7. '(_' → logprob: -10.754976272583008
    8. '(_:' → logprob: -10.879976272583008
    9. ' (' → logprob: -11.504976272583008
    10. '("("' → logprob: -12.004976272583008

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.12195135653018951
    2. '\' → logprob: -3.1219513416290283
    3. '   ' → logprob: -3.8719513416290283
    4. '\n' → logprob: -4.371951580047607
    5. '``' → logprob: -4.871951580047607
    6. '(' → logprob: -5.496951580047607
    7. '    
' → logprob: -5.621951580047607
    8. '`' → logprob: -5.621951580047607
    9. ':' → logprob: -5.746951580047607
    10. '():' → logprob: -5.996951580047607

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3084721863269806
    2. 'i' → logprob: -2.058472156524658
    3. 'input' → logprob: -2.808472156524658
    4. 'user' → logprob: -3.808472156524658
    5. 'r' → logprob: -4.058472156524658
    6. 'x' → logprob: -4.433472156524658
    7. '   ' → logprob: -4.558472156524658
    8. ' ' → logprob: -5.558472156524658
    9. 'n' → logprob: -6.058472156524658
    10. '```' → logprob: -6.058472156524658

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3835088610649109
    2. ' ' → logprob: -1.3835089206695557
    3. 'input' → logprob: -2.7585089206695557
    4. '"' → logprob: -6.008508682250977
    5. ''' → logprob: -7.133508682250977
    6. ' "' → logprob: -8.008508682250977
    7. '  ' → logprob: -8.258508682250977
    8. ' '' → logprob: -8.508508682250977
    9. ' None' → logprob: -9.133508682250977
    10. '(input' → logprob: -9.258508682250977

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015529518714174628
    2. '()' → logprob: -6.626553058624268
    3. '('' → logprob: -9.25155258178711
    4. '("("' → logprob: -9.62655258178711
    5. '(
' → logprob: -11.25155258178711
    6. ' (' → logprob: -11.25155258178711
    7. '```' → logprob: -11.62655258178711
    8. '("")' → logprob: -11.87655258178711
    9. ' ' → logprob: -12.12655258178711
    10. ''' → logprob: -12.62655258178711

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9562095403671265
    2. '(' → logprob: -1.3312095403671265
    3. '()' → logprob: -2.456209659576416
    4. '\n' → logprob: -2.581209659576416
    5. '```' → logprob: -3.206209659576416
    6. '(
' → logprob: -3.456209659576416
    7. '#' → logprob: -3.706209659576416
    8. '<|end|>' → logprob: -3.831209659576416
    9. '\' → logprob: -4.331209659576416
    10. '
' → logprob: -4.706209659576416

Token 9: ' split' (ID: 12648)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6385780572891235
    2. ' calculate' → logprob: -1.1385780572891235
    3. ' process' → logprob: -2.763577938079834
    4. ' main' → logprob: -3.388577938079834
    5. ' print' → logprob: -4.638577938079834
    6. ' add' → logprob: -4.888577938079834
    7. ' space' → logprob: -5.388577938079834
    8. ' user' → logprob: -5.638577938079834
    9. ' validate' → logprob: -5.638577938079834
    10. ' compute' → logprob: -5.638577938079834

Token 10: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.055169202387332916
    2. '(' → logprob: -3.180169105529785
    3. '_text' → logprob: -5.305169105529785
    4. '_string' → logprob: -6.430169105529785
    5. '_line' → logprob: -6.930169105529785
    6. '_words' → logprob: -7.430169105529785
    7. '('_' → logprob: -7.680169105529785
    8. '_word' → logprob: -7.805169105529785
    9. '_s' → logprob: -7.930169105529785
    10. '_input' → logprob: -8.180169105529785

Token 11: '(user' (ID: 7195)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01149739883840084
    2. '_' → logprob: -5.136497497558594
    3. '('_' → logprob: -5.886497497558594
    4. '("("' → logprob: -7.011497497558594
    5. '("_' → logprob: -8.261497497558594
    6. '('' → logprob: -8.511497497558594
    7. '(_)' → logprob: -8.511497497558594
    8. '```' → logprob: -8.761497497558594
    9. '_text' → logprob: -8.886497497558594
    10. '(_' → logprob: -9.261497497558594

Token 12: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7706237435340881
    2. ')' → logprob: -0.8956237435340881
    3. '):' → logprob: -2.7706236839294434
    4. '_input' → logprob: -3.2706236839294434
    5. ')_' → logprob: -4.145623683929443
    6. '_)' → logprob: -5.895623683929443
    7. '_text' → logprob: -6.645623683929443
    8. '_string' → logprob: -6.770623683929443
    9. ' )' → logprob: -7.020623683929443
    10. '(' → logprob: -7.145623683929443

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.046040408313274384
    2. ',' → logprob: -3.5460402965545654
    3. ')' → logprob: -4.1710405349731445
    4. '):
' → logprob: -8.796040534973145
    5. ':' → logprob: -8.921040534973145
    6. ' ):' → logprob: -9.046040534973145
    7. '(' → logprob: -9.671040534973145
    8. '(user' → logprob: -10.046040534973145
    9. ',user' → logprob: -10.296040534973145
    10. ')):' → logprob: -10.546040534973145

Token 14: '   ' (ID: 271)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.4325704872608185
    2. 'user' → logprob: -1.432570457458496
    3. '(user' → logprob: -2.307570457458496
    4. '   ' → logprob: -4.557570457458496
    5. ' return' → logprob: -6.682570457458496
    6. '(' → logprob: -7.307570457458496
    7. 'return' → logprob: -8.932570457458496
    8. '[user' → logprob: -9.182570457458496
    9. '	user' → logprob: -9.432570457458496
    10. '_user' → logprob: -10.182570457458496

Token 15: ' return' (ID: 622)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.04969562217593193
    2. 'user' → logprob: -3.0496957302093506
    3. ' return' → logprob: -7.2996954917907715
    4. '   ' → logprob: -8.04969596862793
    5. 'return' (adapté à ' return') → logprob: -9.29969596862793
    6. '(user' → logprob: -11.54969596862793
    7. '[user' → logprob: -12.92469596862793
    8. '	user' → logprob: -13.54969596862793
    9. ' ' → logprob: -13.54969596862793
    10. '_user' → logprob: -13.79969596862793

Token 16: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.020549597218632698
    2. 'user' → logprob: -3.8955495357513428
    3. '(user' → logprob: -12.520549774169922
    4. ' ' → logprob: -13.895549774169922
    5. '"user' → logprob: -14.145549774169922
    6. '	user' → logprob: -14.395549774169922
    7. ''user' → logprob: -14.395549774169922
    8. '[user' → logprob: -14.895549774169922
    9. '=user' → logprob: -15.395549774169922
    10. '.user' → logprob: -15.395549774169922

Token 17: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.20585906505584717
    2. '_' → logprob: -1.8308590650558472
    3. '_put' → logprob: -4.580859184265137
    4. '._' → logprob: -4.705859184265137
    5. '_p' → logprob: -5.705859184265137
    6. '_user' → logprob: -7.330859184265137
    7. ' _' → logprob: -7.580859184265137
    8. '.' → logprob: -7.955859184265137
    9. 'put' → logprob: -8.205859184265137
    10. '_s' → logprob: -8.580859184265137

Token 18: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3876171410083771
    2. '.split' → logprob: -1.1376171112060547
    3. '.strip' → logprob: -7.262617111206055
    4. ' .' → logprob: -10.262617111206055
    5. '.s' → logprob: -12.637617111206055
    6. '().' → logprob: -13.387617111206055
    7. 'split' → logprob: -13.387617111206055
    8. '.replace' → logprob: -13.887617111206055
    9. '.rstrip' → logprob: -14.637617111206055
    10. '.lower' → logprob: -14.762617111206055

Token 19: '()

' (ID: 5874)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.032538216561079025
    2. '(' → logprob: -3.6575381755828857
    3. '("("' → logprob: -5.157538414001465
    4. ''' → logprob: -7.907538414001465
    5. '()' → logprob: -9.782538414001465
    6. '('.')' → logprob: -11.407538414001465
    7. '(`' → logprob: -11.782538414001465
    8. '("' → logprob: -12.157538414001465
    9. '(('' → logprob: -12.782538414001465
    10. '(',' → logprob: -13.157538414001465

Token 20: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004361879080533981
    2. 'd' → logprob: -5.504362106323242
    3. '```' → logprob: -9.379362106323242
    4. '#' → logprob: -9.754362106323242
    5. '\' → logprob: -10.004362106323242
    6. 'de' → logprob: -10.129362106323242
    7. '<|end|>' → logprob: -10.379362106323242
    8. '[' → logprob: -12.629362106323242
    9. '
' → logprob: -13.004362106323242
    10. '(' → logprob: -13.129362106323242

Token 21: ' to' (ID: 316)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1998225599527359
    2. ' process' → logprob: -2.5748226642608643
    3. ' join' → logprob: -3.0748226642608643
    4. 'main' → logprob: -3.5748226642608643
    5. 'process' → logprob: -4.574822425842285
    6. ' get' → logprob: -5.324822425842285
    7. 'join' → logprob: -5.699822425842285
    8. ' is' → logprob: -6.324822425842285
    9. ' calculate' → logprob: -6.324822425842285
    10. ' parse' → logprob: -6.574822425842285

Token 22: '_int' (ID: 12285)
  Prédit: '_lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lower' → logprob: -0.3692817986011505
    2. 'ken' → logprob: -1.2442817687988281
    3. '_upper' → logprob: -4.369281768798828
    4. 'lower' → logprob: -5.619281768798828
    5. '_' → logprob: -6.369281768798828
    6. 'kens' → logprob: -6.494281768798828
    7. '_k' → logprob: -7.744281768798828
    8. 'k' → logprob: -8.119281768798828
    9. '_int' → logprob: -9.244281768798828
    10. '_string' → logprob: -9.744281768798828

Token 23: '_list' (ID: 4162)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01096694078296423
    2. 's' → logprob: -4.760966777801514
    3. '(s' → logprob: -7.260966777801514
    4. '(user' → logprob: -7.510966777801514
    5. '("("' → logprob: -8.510967254638672
    6. '_' → logprob: -8.635967254638672
    7. '(token' → logprob: -8.635967254638672
    8. '()' → logprob: -8.885967254638672
    9. '```' → logprob: -9.135967254638672
    10. '(n' → logprob: -10.510967254638672

Token 24: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5243838429450989
    2. '(user' → logprob: -0.8993838429450989
    3. '(lst' → logprob: -8.024383544921875
    4. ' (' → logprob: -9.024383544921875
    5. '(users' → logprob: -9.024383544921875
    6. '(s' → logprob: -9.274383544921875
    7. '("("' → logprob: -9.524383544921875
    8. '(tokens' → logprob: -9.899383544921875
    9. '(input' → logprob: -10.149383544921875
    10. '(list' → logprob: -10.399383544921875

Token 25: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4586842954158783
    2. 'ing' → logprob: -1.7086843252182007
    3. '_list' → logprob: -2.083684206008911
    4. 'ings' → logprob: -2.833684206008911
    5. ')' → logprob: -6.45868444442749
    6. '_)' → logprob: -7.08368444442749
    7. '_lists' → logprob: -7.83368444442749
    8. '_' → logprob: -8.458683967590332
    9. '_lst' → logprob: -9.208683967590332
    10. '_tokens' → logprob: -9.583683967590332

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.525291383266449
    2. ')' → logprob: -0.900291383266449
    3. '(' → logprob: -6.900291442871094
    4. '):
' → logprob: -7.775291442871094
    5. ' ):' → logprob: -8.150291442871094
    6. '):

' → logprob: -8.900291442871094
    7. ' )' → logprob: -9.150291442871094
    8. '   ' → logprob: -10.150291442871094
    9. ':' → logprob: -10.275291442871094
    10. ',' → logprob: -11.150291442871094

Token 27: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10309088975191116
    2. '   ' → logprob: -2.47809100151062
    3. '[int' → logprob: -4.478090763092041
    4. '(' → logprob: -6.978090763092041
    5. '[str' → logprob: -7.478090763092041
    6. ' [' → logprob: -7.978090763092041
    7. ' return' → logprob: -8.6030912399292
    8. '[
' → logprob: -8.9780912399292
    9. 'return' → logprob: -9.4780912399292
    10. '[:]' → logprob: -9.4780912399292

Token 28: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3259483575820923
    2. '   ' → logprob: -1.4509483575820923
    3. '[' → logprob: -3.9509482383728027
    4. ' [' → logprob: -4.325948238372803
    5. 'return' (adapté à ' return') → logprob: -4.575948238372803
    6. '[int' → logprob: -7.325948238372803
    7. ' [
' → logprob: -9.325948715209961
    8. '	return' → logprob: -9.575948715209961
    9. ' []' → logprob: -9.700948715209961
    10. '[
' → logprob: -10.075948715209961

Token 29: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.07312019914388657
    2. '[list' → logprob: -3.0731201171875
    3. '[' → logprob: -4.1981201171875
    4. ' list' → logprob: -4.8231201171875
    5. 'list' → logprob: -7.4481201171875
    6. '[int' → logprob: -7.6981201171875
    7. '[List' → logprob: -9.1981201171875
    8. '[len' → logprob: -11.3231201171875
    9. '[i' → logprob: -12.4481201171875
    10. '   ' → logprob: -13.3231201171875

Token 30: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04859974980354309
    2. '(' → logprob: -3.0485997200012207
    3. '(
' → logprob: -11.923600196838379
    4. '(int' → logprob: -12.798600196838379
    5. 'map' → logprob: -13.673600196838379
    6. '(

' → logprob: -13.798600196838379
    7. '_map' → logprob: -15.298600196838379
    8. ' map' → logprob: -15.423600196838379
    9. ',map' → logprob: -15.548600196838379
    10. '	map' → logprob: -16.673599243164062

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005744783557020128
    2. '(' → logprob: -7.625574588775635
    3. 'int' → logprob: -10.125574111938477
    4. ' int' → logprob: -10.375574111938477
    5. '<int' → logprob: -12.000574111938477
    6. ',int' → logprob: -13.000574111938477
    7. '=int' → logprob: -13.375574111938477
    8. '   ' → logprob: -13.500574111938477
    9. ')' → logprob: -13.625574111938477
    10. ' (' → logprob: -13.750574111938477

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008152224123477936
    2. ',str' → logprob: -5.133152008056641
    3. '(str' → logprob: -6.758152008056641
    4. ' ,' → logprob: -7.008152008056641
    5. '(' → logprob: -9.25815200805664
    6. ',
' → logprob: -10.50815200805664
    7. ')' → logprob: -12.38315200805664
    8. '   ' → logprob: -12.38315200805664
    9. '```' → logprob: -12.38315200805664
    10. ' ' → logprob: -12.63315200805664

Token 33: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.126982182264328
    2. 'str' → logprob: -2.1269822120666504
    3. '(str' → logprob: -11.126981735229492
    4. '	str' → logprob: -11.251981735229492
    5. ' ' → logprob: -11.751981735229492
    6. 's' → logprob: -12.001981735229492
    7. ')' → logprob: -12.751981735229492
    8. '_str' → logprob: -13.126981735229492
    9. ' 
' → logprob: -13.876981735229492
    10. '$str' → logprob: -14.001981735229492

Token 34: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.4617256056226324e-05
    2. '_' → logprob: -11.250014305114746
    3. ')_' → logprob: -14.500014305114746
    4. ')' → logprob: -14.750014305114746
    5. '_l' → logprob: -15.125014305114746
    6. '_)' → logprob: -15.875014305114746
    7. '_lst' → logprob: -16.125015258789062
    8. ' _' → logprob: -16.375015258789062
    9. 'list' → logprob: -17.250015258789062
    10. '_List' → logprob: -17.250015258789062

Token 35: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -3.5716304410016164e-05
    2. ')' → logprob: -11.000035285949707
    3. ')))' → logprob: -11.500035285949707
    4. ' ))' → logprob: -12.000035285949707
    5. '))
' → logprob: -13.000035285949707
    6. '   ' → logprob: -16.000036239624023
    7. ' ' → logprob: -16.250036239624023
    8. '));' → logprob: -17.125036239624023
    9. '()))' → logprob: -17.375036239624023
    10. '))

' → logprob: -17.500036239624023

Token 36: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.698698704596609e-05
    2. '<|end|>' → logprob: -9.875097274780273
    3. '#' → logprob: -11.375097274780273
    4. '\' → logprob: -11.500097274780273
    5. '```' → logprob: -11.875097274780273
    6. '<|end|>' → logprob: -12.250097274780273
    7. '
' → logprob: -12.375097274780273
    8. 'print' → logprob: -13.250097274780273
    9. 'data' → logprob: -13.875097274780273
    10. '\n' → logprob: -14.125097274780273

Token 37: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12458240240812302
    2. ' calculate' → logprob: -2.624582290649414
    3. ' process' → logprob: -3.749582290649414
    4. ' solve' → logprob: -4.874582290649414
    5. ' compute' → logprob: -5.624582290649414
    6. ' sum' → logprob: -5.749582290649414
    7. ' factorial' → logprob: -6.749582290649414
    8. ' add' → logprob: -6.874582290649414
    9. ' find' → logprob: -7.124582290649414
    10. ' multiply' → logprob: -7.124582290649414

Token 38: '_numbers' (ID: 76842)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.05968254804611206
    2. '_user' → logprob: -2.934682607650757
    3. '_' → logprob: -5.809682369232178
    4. '_int' → logprob: -7.559682369232178
    5. '_numbers' → logprob: -8.559682846069336
    6. '_number' → logprob: -8.684682846069336
    7. '_integer' → logprob: -9.059682846069336
    8. '_output' → logprob: -9.059682846069336
    9. '_max' → logprob: -9.559682846069336
    10. '_data' → logprob: -9.684682846069336

Token 39: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00047750159865245223
    2. '(' → logprob: -8.25047779083252
    3. '():
' → logprob: -9.37547779083252
    4. ' ():' → logprob: -10.00047779083252
    5. '()' → logprob: -10.37547779083252
    6. '_input' → logprob: -10.50047779083252
    7. '()(' → logprob: -11.62547779083252
    8. '(prompt' → logprob: -11.87547779083252
    9. '_' → logprob: -13.00047779083252
    10. '_list' → logprob: -13.87547779083252

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010365027701482177
    2. 'user' → logprob: -7.251036643981934
    3. ' user' → logprob: -8.251036643981934
    4. '    
' → logprob: -10.751036643981934
    5. 'input' → logprob: -11.251036643981934
    6. '```' → logprob: -11.376036643981934
    7. ' return' → logprob: -12.376036643981934
    8. ' input' → logprob: -12.501036643981934
    9. '   ' → logprob: -13.251036643981934
    10. ' ' → logprob: -13.251036643981934

Token 41: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.896398663520813
    2. '   ' → logprob: -1.021398663520813
    3. 'user' (adapté à ' user') → logprob: -1.521398663520813
    4. ' numbers' → logprob: -5.896398544311523
    5. ' split' → logprob: -6.146398544311523
    6. 'split' → logprob: -6.146398544311523
    7. 'numbers' → logprob: -6.396398544311523
    8. ' input' → logprob: -6.521398544311523
    9. 'input' → logprob: -7.021398544311523
    10. ' str' → logprob: -7.771398544311523

Token 42: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0015073629328981042
    2. '_' → logprob: -6.50150728225708
    3. '_user' → logprob: -13.626507759094238
    4. '_in' → logprob: -14.126507759094238
    5. '_output' → logprob: -14.251507759094238
    6. '_inputs' → logprob: -14.751507759094238
    7. '_numbers' → logprob: -14.876507759094238
    8. ' _' → logprob: -14.876507759094238
    9. '_data' → logprob: -15.126507759094238
    10. '_Input' → logprob: -15.751507759094238

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001702675479464233
    2. '=' → logprob: -6.376702785491943
    3. ' ' → logprob: -15.001702308654785
    4. '(' → logprob: -16.3767032623291
    5. ')' → logprob: -16.8767032623291
    6. ' =)' → logprob: -17.3767032623291
    7. '()' → logprob: -17.7517032623291
    8. '_' → logprob: -17.8767032623291
    9. '  ' → logprob: -18.0017032623291
    10. '   ' → logprob: -18.1267032623291

Token 44: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.0059958635829389095
    2. 'get' → logprob: -5.130995750427246
    3. ' input' → logprob: -9.755995750427246
    4. ' ' → logprob: -11.755995750427246
    5. '	get' → logprob: -14.380995750427246
    6. 'input' → logprob: -14.505995750427246
    7. '(get' → logprob: -15.005995750427246
    8. '  ' → logprob: -17.130996704101562
    9. ' ' → logprob: -18.255996704101562
    10. ' getchar' → logprob: -18.255996704101562

Token 45: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.416665640543215e-05
    2. '_' → logprob: -10.37503433227539
    3. '_user' → logprob: -13.00003433227539
    4. ' _' → logprob: -14.75003433227539
    5. '_output' → logprob: -15.87503433227539
    6. '_in' → logprob: -17.12503433227539
    7. '_inputs' → logprob: -17.50003433227539
    8. '_put' → logprob: -18.12503433227539
    9. '_Input' → logprob: -18.12503433227539
    10. ')_' → logprob: -19.12503433227539

Token 46: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1160349458805285e-05
    2. '()
' → logprob: -12.125011444091797
    3. '())' → logprob: -12.375011444091797
    4. '()

' → logprob: -14.875011444091797
    5. ' ()' → logprob: -15.000011444091797
    6. ')' → logprob: -15.125011444091797
    7. '()`' → logprob: -15.500011444091797
    8. '(' → logprob: -16.375011444091797
    9. '()\' → logprob: -17.125011444091797
    10. '(),' → logprob: -17.375011444091797

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006981056649237871
    2. 'tokens' → logprob: -6.006980895996094
    3. ' tokens' → logprob: -6.506980895996094
    4. ' parts' → logprob: -6.881980895996094
    5. 'str' → logprob: -7.256980895996094
    6. ' str' → logprob: -7.881980895996094
    7. ' splitted' → logprob: -8.506980895996094
    8. 'split' → logprob: -8.756980895996094
    9. 'parts' → logprob: -9.006980895996094
    10. ' return' → logprob: -9.381980895996094

Token 48: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.9389955401420593
    2. ' str' → logprob: -1.188995599746704
    3. 'split' → logprob: -2.813995599746704
    4. ' split' → logprob: -2.938995599746704
    5. ' splitted' → logprob: -2.938995599746704
    6. ' parts' → logprob: -3.188995599746704
    7. ' tokens' → logprob: -3.688995599746704
    8. 'words' → logprob: -3.813995599746704
    9. 'tokens' → logprob: -4.188995361328125
    10. '   ' → logprob: -4.438995361328125

Token 49: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.029847231227905e-05
    2. '_' → logprob: -10.125080108642578
    3. '_input' → logprob: -11.500080108642578
    4. '_numbers' → logprob: -11.750080108642578
    5. '_lst' → logprob: -12.000080108642578
    6. '_lists' → logprob: -12.000080108642578
    7. 'ing' → logprob: -12.125080108642578
    8. 's' → logprob: -13.500080108642578
    9. '_l' → logprob: -14.375080108642578
    10. 'ings' → logprob: -14.750080108642578

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048602476716041565
    2. '=' → logprob: -3.04860258102417
    3. '(' → logprob: -11.423602104187012
    4. '=user' → logprob: -13.423602104187012
    5. '(user' → logprob: -13.923602104187012
    6. ')' → logprob: -14.423602104187012
    7. ' ' → logprob: -14.548602104187012
    8. ' =)' → logprob: -15.423602104187012
    9. '＝' → logprob: -16.423603057861328
    10. ' =
' → logprob: -16.423603057861328

Token 51: ' split' (ID: 12648)
  Prédit: ' split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.01815146580338478
    2. 'split' → logprob: -4.01815128326416
    3. '(split' → logprob: -13.89315128326416
    4. ' ' → logprob: -15.64315128326416
    5. ' user' → logprob: -15.64315128326416
    6. '_split' → logprob: -16.268152236938477
    7. ' get' → logprob: -16.268152236938477
    8. ' ' → logprob: -16.768152236938477
    9. 'user' → logprob: -17.268152236938477
    10. '.split' → logprob: -17.893152236938477

Token 52: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.8087270038668066e-05
    2. '_user' → logprob: -10.500027656555176
    3. '_' → logprob: -14.500027656555176
    4. 'input' → logprob: -17.875028610229492
    5. '_in' → logprob: -18.000028610229492
    6. '_inputs' → logprob: -18.250028610229492
    7. '_output' → logprob: -18.625028610229492
    8. '```' → logprob: -18.875028610229492
    9. '_Input' → logprob: -19.500028610229492
    10. '_INPUT' → logprob: -19.625028610229492

Token 53: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -11.50001049041748
    3. 'user' → logprob: -15.37501049041748
    4. '(u' → logprob: -16.625011444091797
    5. '(use' → logprob: -17.500011444091797
    6. ' (' → logprob: -17.625011444091797
    7. '(us' → logprob: -18.375011444091797
    8. ' user' → logprob: -18.875011444091797
    9. '(users' → logprob: -19.125011444091797
    10. '=user' → logprob: -19.250011444091797

Token 54: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.052119988948106766
    2. 'put' → logprob: -3.0521199703216553
    3. '_put' → logprob: -5.802120208740234
    4. 'ut' → logprob: -8.177120208740234
    5. 'input' → logprob: -8.927120208740234
    6. '_user' → logprob: -9.802120208740234
    7. 'user' → logprob: -11.802120208740234
    8. 'puts' → logprob: -11.802120208740234
    9. ')' → logprob: -12.177120208740234
    10. '```' → logprob: -12.177120208740234

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018029935017693788
    2. ')
' → logprob: -8.6251802444458
    3. ' )' → logprob: -14.8751802444458
    4. '   ' → logprob: -16.000181198120117
    5. ')
' → logprob: -16.375181198120117
    6. ' ' → logprob: -18.000181198120117
    7. ')

' → logprob: -18.000181198120117
    8. ')return' → logprob: -18.125181198120117
    9. '))' → logprob: -18.625181198120117
    10. ')`' → logprob: -18.750181198120117

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013511877041310072
    2. 'return' → logprob: -7.126351356506348
    3. ' return' → logprob: -7.876351356506348
    4. '
' → logprob: -9.251351356506348
    5. '    
' → logprob: -9.751351356506348
    6. '```' → logprob: -12.751351356506348
    7. '    ' → logprob: -12.876351356506348
    8. '  ' → logprob: -13.126351356506348
    9. 'numbers' → logprob: -13.751351356506348
    10. '<|end|>' → logprob: -14.501351356506348

Token 57: ' int' (ID: 677)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5623231530189514
    2. 'return' → logprob: -1.1873230934143066
    3. '   ' → logprob: -3.5623230934143066
    4. 'num' → logprob: -3.6873230934143066
    5. 'int' (adapté à ' int') → logprob: -3.8123230934143066
    6. ' int' → logprob: -3.9373230934143066
    7. ' numbers' → logprob: -4.187323093414307
    8. ' num' → logprob: -4.687323093414307
    9. 'numbers' → logprob: -5.562323093414307
    10. 'nums' → logprob: -7.562323093414307

Token 58: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0001307142956648022
    2. 's' → logprob: -9.625130653381348
    3. '_' → logprob: -10.625130653381348
    4. '_lists' → logprob: -10.625130653381348
    5. '_lst' → logprob: -12.000130653381348
    6. '_numbers' → logprob: -12.750130653381348
    7. ' _' → logprob: -13.125130653381348
    8. '_li' → logprob: -14.000130653381348
    9. '_l' → logprob: -14.125130653381348
    10. '_s' → logprob: -14.375130653381348

Token 59: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31345584988594055
    2. ' =' → logprob: -1.3134558200836182
    3. '(' → logprob: -8.563455581665039
    4. ')' → logprob: -14.313455581665039
    5. '＝' → logprob: -14.313455581665039
    6. ' ' → logprob: -14.563455581665039
    7. '()' → logprob: -14.813455581665039
    8. '[:]' → logprob: -15.313455581665039
    9. '_' → logprob: -15.563455581665039
    10. '   ' → logprob: -15.688455581665039

Token 60: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0005530327325686812
    2. 'to' → logprob: -7.500553131103516
    3. '	to' → logprob: -17.000553131103516
    4. ' ' → logprob: -17.500553131103516
    5. ' ' → logprob: -18.625553131103516
    6. 'To' → logprob: -19.875553131103516
    7. '(to' → logprob: -20.625553131103516
    8. '_to' → logprob: -21.125553131103516
    9. ' To' → logprob: -21.250553131103516
    10. '[to' → logprob: -21.750553131103516

Token 61: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -4.4849443838757e-06
    2. 'int' → logprob: -12.500004768371582
    3. '_list' → logprob: -15.125004768371582
    4. '_in' → logprob: -15.500004768371582
    5. 'nt' → logprob: -15.625004768371582
    6. ' _' → logprob: -17.000003814697266
    7. 't' → logprob: -17.625003814697266
    8. '<int' → logprob: -17.875003814697266
    9. '_' → logprob: -18.500003814697266
    10. '_nt' → logprob: -18.500003814697266

Token 62: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.625
    3. '_lst' → logprob: -17.625
    4. 'List' → logprob: -18.125
    5. '_lists' → logprob: -18.125
    6. 'list' → logprob: -18.375
    7. '_LIST' → logprob: -18.75
    8. '_List' → logprob: -19.5
    9. '```' → logprob: -19.75
    10. 'int' → logprob: -19.875

Token 63: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00015478975547011942
    2. '(' → logprob: -9.000154495239258
    3. ' (' → logprob: -10.375154495239258
    4. ' str' → logprob: -18.000154495239258
    5. '[str' → logprob: -18.625154495239258
    6. '(
' → logprob: -19.125154495239258
    7. '(Str' → logprob: -19.125154495239258
    8. '(s' → logprob: -19.500154495239258
    9. '(int' → logprob: -19.500154495239258
    10. ',str' → logprob: -19.625154495239258

Token 64: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.125
    3. '_l' → logprob: -16.875
    4. 'list' → logprob: -17.5
    5. '_LIST' → logprob: -19.0
    6. 'List' → logprob: -19.125
    7. '_lst' → logprob: -19.875
    8. '_lists' → logprob: -19.875
    9. ')_' → logprob: -20.0
    10. '   ' → logprob: -20.25

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20145757496356964
    2. ')
' → logprob: -1.7014576196670532
    3. ')
' → logprob: -10.201457977294922
    4. ')return' → logprob: -12.451457977294922
    5. '   ' → logprob: -13.951457977294922
    6. ' )' → logprob: -13.951457977294922
    7. ')

' → logprob: -14.201457977294922
    8. ' )
' → logprob: -14.326457977294922
    9. ' ' → logprob: -16.826457977294922
    10. 'return' → logprob: -17.201457977294922

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.93579563125968e-05
    2. 'return' → logprob: -9.625089645385742
    3. ' return' → logprob: -11.500089645385742
    4. '
' → logprob: -11.625089645385742
    5. '    
' → logprob: -12.625089645385742
    6. '	return' → logprob: -14.125089645385742
    7. '```' → logprob: -15.625089645385742
    8. '       ' → logprob: -17.625089645385742
    9. '<|end|>' → logprob: -17.625089645385742
    10. ':return' → logprob: -18.500089645385742

Token 67: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2544037997722626
    2. 'return' (adapté à ' return') → logprob: -1.504403829574585
    3. ' return' → logprob: -6.004403591156006
    4. '	return' → logprob: -13.379404067993164
    5. '```' → logprob: -13.629404067993164
    6. '
' → logprob: -15.129404067993164
    7. ' ' → logprob: -15.129404067993164
    8. '  ' → logprob: -15.754404067993164
    9. '    
' → logprob: -16.129404067993164
    10. '       ' → logprob: -17.004404067993164

Token 68: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0008049834286794066
    2. 'int' → logprob: -7.125804901123047
    3. '(int' → logprob: -14.875804901123047
    4. ' ' → logprob: -17.000804901123047
    5. ' in' → logprob: -17.500804901123047
    6. '[int' → logprob: -17.500804901123047
    7. '<int' → logprob: -18.125804901123047
    8. '	int' → logprob: -19.000804901123047
    9. ' ' → logprob: -19.125804901123047
    10. '_int' → logprob: -19.750804901123047

Token 69: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -12.750003814697266
    3. 'List' → logprob: -15.625003814697266
    4. 'list' → logprob: -16.250003814697266
    5. 's' → logprob: -16.625003814697266
    6. '(_' → logprob: -16.875003814697266
    7. '_array' → logprob: -17.500003814697266
    8. '_l' → logprob: -18.125003814697266
    9. '```' → logprob: -18.250003814697266
    10. '_List' → logprob: -18.375003814697266

Token 70: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05199596285820007
    2. '<|end|>' → logprob: -3.4269959926605225
    3. '
' → logprob: -4.801995754241943
    4. '[' → logprob: -5.801995754241943
    5. '#' → logprob: -6.176995754241943
    6. '```' → logprob: -6.801995754241943
    7. '<|end|>' → logprob: -6.801995754241943
    8. 'numbers' → logprob: -7.301995754241943
    9. '[]' → logprob: -7.801995754241943
    10. '[
' → logprob: -8.176996231079102

Token 71: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.055173713713884354
    2. '#' → logprob: -4.180173873901367
    3. 'numbers' → logprob: -4.180173873901367
    4. 'print' → logprob: -4.305173873901367
    5. 'num' → logprob: -5.805173873901367
    6. 'n' → logprob: -6.555173873901367
    7. 'number' → logprob: -6.555173873901367
    8. '[' → logprob: -7.430173873901367
    9. 'for' → logprob: -7.555173873901367
    10. 'sum' → logprob: -7.555173873901367

Token 72: ' calculate' (ID: 17950)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13817259669303894
    2. ' calculate' → logprob: -2.5131726264953613
    3. ' sum' → logprob: -3.8881726264953613
    4. ' factorial' → logprob: -4.888172626495361
    5. ' add' → logprob: -5.388172626495361
    6. ' solve' → logprob: -5.513172626495361
    7. ' compute' → logprob: -6.013172626495361
    8. ' process' → logprob: -6.013172626495361
    9. ' multiply' → logprob: -6.138172626495361
    10. ' find' → logprob: -6.513172626495361

Token 73: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.06209933012723923
    2. '_' → logprob: -3.9370992183685303
    3. '_average' → logprob: -3.9370992183685303
    4. '(' → logprob: -4.562099456787109
    5. '_total' → logprob: -4.937099456787109
    6. '_factor' → logprob: -7.312099456787109
    7. '_area' → logprob: -7.437099456787109
    8. '_max' → logprob: -8.18709945678711
    9. '_mean' → logprob: -8.18709945678711
    10. '_frequency' → logprob: -8.56209945678711

Token 74: '(numbers' (ID: 98592)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11693098396062851
    2. '(numbers' → logprob: -2.2419309616088867
    3. '(nums' → logprob: -6.741930961608887
    4. '(n' → logprob: -7.616930961608887
    5. '(num' → logprob: -7.616930961608887
    6. '(user' → logprob: -7.741930961608887
    7. '(lst' → logprob: -7.991930961608887
    8. '()' → logprob: -8.366930961608887
    9. '(list' → logprob: -8.991930961608887
    10. '(data' → logprob: -9.241930961608887

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00014180023572407663
    2. ')' → logprob: -9.625142097473145
    3. '):
' → logprob: -10.875142097473145
    4. ' ):' → logprob: -10.875142097473145
    5. '   ' → logprob: -11.000142097473145
    6. '(numbers' → logprob: -11.875142097473145
    7. '(' → logprob: -12.375142097473145
    8. '[]):' → logprob: -12.875142097473145
    9. ':' → logprob: -13.625142097473145
    10. '_list' → logprob: -13.750142097473145

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016166195273399353
    2. ' return' → logprob: -6.501616477966309
    3. 'return' → logprob: -9.251616477966309
    4. ' sum' → logprob: -11.126616477966309
    5. 'sum' → logprob: -12.876616477966309
    6. '   ' → logprob: -14.501616477966309
    7. ' total' → logprob: -15.751616477966309
    8. '    ' → logprob: -16.251617431640625
    9. '	return' → logprob: -16.251617431640625
    10. '```' → logprob: -17.001617431640625

Token 77: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2815076410770416
    2. '   ' → logprob: -1.5315076112747192
    3. 'return' (adapté à ' return') → logprob: -4.03150749206543
    4. ' sum' → logprob: -4.53150749206543
    5. 'sum' → logprob: -7.40650749206543
    6. '    ' → logprob: -11.78150749206543
    7. ' total' → logprob: -11.78150749206543
    8. ' s' → logprob: -12.28150749206543
    9. ' ' → logprob: -12.65650749206543
    10. '  ' → logprob: -13.78150749206543

Token 78: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.0024788661394268274
    2. 'sum' → logprob: -6.002479076385498
    3. ' ' → logprob: -12.87747859954834
    4. ' ' → logprob: -14.87747859954834
    5. '(sum' → logprob: -15.75247859954834
    6. '	sum' → logprob: -16.627479553222656
    7. '  ' → logprob: -17.377479553222656
    8. '   ' → logprob: -17.627479553222656
    9. '=sum' → logprob: -18.377479553222656
    10. ' sums' → logprob: -19.377479553222656

Token 79: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.4741043448448181
    2. '(' → logprob: -0.9741043448448181
    3. ' (' → logprob: -11.474103927612305
    4. '(n' → logprob: -11.724103927612305
    5. '(number' → logprob: -13.224103927612305
    6. '(nums' → logprob: -13.599103927612305
    7. '(
' → logprob: -13.724103927612305
    8. '()' → logprob: -13.974103927612305
    9. '((' → logprob: -14.724103927612305
    10. '('' → logprob: -14.724103927612305

Token 80: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -15.125000953674316
    4. '))' → logprob: -17.125
    5. '   ' → logprob: -17.5
    6. '())' → logprob: -18.125
    7. ')return' → logprob: -18.25
    8. '[' → logprob: -18.5
    9. '}' → logprob: -18.5
    10. '()' → logprob: -19.125

Token 81: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002681304467841983
    2. '()' → logprob: -9.37526798248291
    3. '
' → logprob: -9.75026798248291
    4. 'numbers' → logprob: -10.62526798248291
    5. '()

' → logprob: -10.87526798248291
    6. '()
' → logprob: -11.00026798248291
    7. '```' → logprob: -11.37526798248291
    8. '(
' → logprob: -11.37526798248291
    9. '(' → logprob: -11.87526798248291
    10. '<|end|>' → logprob: -11.87526798248291

Token 82: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0009937490103766322
    2. ' calculate' → logprob: -7.375993728637695
    3. ' def' → logprob: -8.625993728637695
    4. 'main' → logprob: -8.875993728637695
    5. ' print' → logprob: -11.500993728637695
    6. ' get' → logprob: -11.750993728637695
    7. '_main' → logprob: -11.875993728637695
    8. ' process' → logprob: -12.375993728637695
    9. ' find' → logprob: -12.500993728637695
    10. ' generate' → logprob: -12.625993728637695

Token 83: '_b' (ID: 1535)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3500306010246277
    2. '_even' → logprob: -1.9750306606292725
    3. '_' → logprob: -2.6000306606292725
    4. '_numbers' → logprob: -3.3500306606292725
    5. '_div' → logprob: -4.350030422210693
    6. '_positive' → logprob: -4.600030422210693
    7. '_number' → logprob: -5.475030422210693
    8. '_if' → logprob: -5.850030422210693
    9. '_equal' → logprob: -5.975030422210693
    10. '_prime' → logprob: -6.100030422210693

Token 84: 'ust' (ID: 570)
  Prédit: 'ound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ound' → logprob: -0.33122673630714417
    2. 'ounds' → logprob: -2.0812268257141113
    3. 'alance' → logprob: -2.4562268257141113
    4. 'etween' → logprob: -3.9562268257141113
    5. 'order' → logprob: -4.456226825714111
    6. 'r' → logprob: -4.831226825714111
    7. 'reak' → logprob: -4.831226825714111
    8. 'al' → logprob: -5.206226825714111
    9. 'race' → logprob: -6.206226825714111
    10. 'elow' → logprob: -6.331226825714111

Token 85: '(total' (ID: 39744)
  Prédit: '(amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(amount' → logprob: -0.7695281505584717
    2. '(numbers' → logprob: -1.7695281505584717
    3. '(number' → logprob: -2.5195281505584717
    4. '(value' → logprob: -2.6445281505584717
    5. '(score' → logprob: -2.7695281505584717
    6. '(total' → logprob: -2.8945281505584717
    7. '(' → logprob: -3.1445281505584717
    8. '(points' → logprob: -4.269528388977051
    9. '(status' → logprob: -4.519528388977051
    10. '(hand' → logprob: -4.644528388977051

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009766003116965294
    2. ',' → logprob: -4.759766101837158
    3. ' ):' → logprob: -7.884766101837158
    4. ')' → logprob: -8.009765625
    5. '):
' → logprob: -8.259765625
    6. ',total' → logprob: -9.259765625
    7. ' ' → logprob: -10.384765625
    8. '   ' → logprob: -11.259765625
    9. '=' → logprob: -11.509765625
    10. ' ,' → logprob: -12.009765625

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10886821150779724
    2. '(' → logprob: -2.85886812210083
    3. ':' → logprob: -3.10886812210083
    4. ' :' → logprob: -8.358868598937988
    5. '():' → logprob: -8.858868598937988
    6. ':
' → logprob: -8.858868598937988
    7. ' if' → logprob: -9.483868598937988
    8. '(n' → logprob: -9.733868598937988
    9. '(
' → logprob: -9.733868598937988
    10. ':return' → logprob: -9.858868598937988

Token 88: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11742983013391495
    2. ' return' → logprob: -2.492429733276367
    3. ' if' → logprob: -3.617429733276367
    4. 'return' (adapté à ' return') → logprob: -6.867429733276367
    5. 'if' → logprob: -8.617429733276367
    6. '   ' → logprob: -12.367429733276367
    7. '	return' → logprob: -12.867429733276367
    8. ' ' → logprob: -13.742429733276367
    9. '    ' → logprob: -13.742429733276367
    10. '  ' → logprob: -14.117429733276367

Token 89: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3868728280067444
    2. 'total' → logprob: -1.1368727684020996
    3. '(total' → logprob: -13.761873245239258
    4. '	total' → logprob: -15.011873245239258
    5. 'b' → logprob: -15.261873245239258
    6. ' ' → logprob: -16.136873245239258
    7. '>' → logprob: -16.761873245239258
    8. ' ' → logprob: -17.386873245239258
    9. 'Total' → logprob: -17.761873245239258
    10. '$total' → logprob: -17.761873245239258

Token 90: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.048930589109659195
    2. ' >' → logprob: -3.0489306449890137
    3. '>=' → logprob: -8.298930168151855
    4. ' >=' → logprob: -9.923930168151855
    5. '()>' → logprob: -10.673930168151855
    6. ' ' → logprob: -11.673930168151855
    7. '<=' → logprob: -13.048930168151855
    8. '==' → logprob: -13.173930168151855
    9. '">' → logprob: -13.923930168151855
    10. ' ' → logprob: -14.048930168151855

Token 91: ' ' (ID: 220)
  Prédit: '22'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.15607891976833344
    2. '21' → logprob: -2.031078815460205
    3. ' ' → logprob: -4.406078815460205
    4. '100' → logprob: -7.156078815460205
    5. '17' → logprob: -8.781079292297363
    6. '1' → logprob: -10.781079292297363
    7. '12' → logprob: -10.906079292297363
    8. '2' → logprob: -11.531079292297363
    9. '50' → logprob: -11.656079292297363
    10. '16' → logprob: -11.906079292297363

Token 92: '22' (ID: 1709)
  Prédit: '22'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.25679078698158264
    2. '21' → logprob: -1.5067907571792603
    3. '100' → logprob: -5.756790637969971
    4. ' ' → logprob: -7.381790637969971
    5. '17' → logprob: -7.506790637969971
    6. '50' → logprob: -10.131791114807129
    7. '20' → logprob: -10.256791114807129
    8. '1' → logprob: -10.256791114807129
    9. '31' → logprob: -10.256791114807129
    10. '12' → logprob: -10.256791114807129

Token 93: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.048627447336912155
    2. '

' → logprob: -3.7986273765563965
    3. '<|end|>' → logprob: -4.0486273765563965
    4. '
' → logprob: -4.9236273765563965
    5. '<|end|>' → logprob: -8.673627853393555
    6. '```' → logprob: -9.673627853393555
    7. '\' → logprob: -10.048627853393555
    8. ' def' → logprob: -10.798627853393555
    9. '\n' → logprob: -11.548627853393555
    10. 'newline' → logprob: -11.798627853393555

Token 94: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019485102966427803
    2. '
' → logprob: -6.751948356628418
    3. '<|end|>' → logprob: -7.876948356628418
    4. '

' → logprob: -8.126948356628418
    5. '```' → logprob: -10.126948356628418
    6. '\' → logprob: -10.376948356628418
    7. '\n' → logprob: -11.751948356628418
    8. '<|end|>' → logprob: -12.001948356628418
    9. '  
' → logprob: -12.251948356628418
    10. '#' → logprob: -13.376948356628418

Token 95: ' get' (ID: 717)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7111090421676636
    2. ' main' → logprob: -1.0861090421676636
    3. 'play' → logprob: -2.461109161376953
    4. 'def' → logprob: -3.461109161376953
    5. ' play' → logprob: -3.586109161376953
    6. 'black' → logprob: -4.211109161376953
    7. ' blackjack' → logprob: -5.461109161376953
    8. 'calculate' → logprob: -5.461109161376953
    9. ' calculate' → logprob: -7.336109161376953
    10. ' black' → logprob: -7.586109161376953

Token 96: '_result' (ID: 11623)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.8624852895736694
    2. '_input' → logprob: -1.3624852895736694
    3. '_b' → logprob: -2.237485408782959
    4. '_result' → logprob: -2.612485408782959
    5. '_user' → logprob: -3.362485408782959
    6. '_score' → logprob: -3.987485408782959
    7. '_final' → logprob: -4.487485408782959
    8. '_' → logprob: -4.737485408782959
    9. '_output' → logprob: -4.862485408782959
    10. '_hand' → logprob: -4.862485408782959

Token 97: '(is' (ID: 16171)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.023335041478276253
    2. '(' → logprob: -4.023334980010986
    3. ' (' → logprob: -5.273334980010986
    4. '():' → logprob: -11.648335456848145
    5. '(score' → logprob: -11.898335456848145
    6. '(sum' → logprob: -12.148335456848145
    7. '(user' → logprob: -12.773335456848145
    8. '(num' → logprob: -13.023335456848145
    9. '(number' → logprob: -13.273335456848145
    10. '(amount' → logprob: -13.273335456848145

Token 98: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0007061177166178823
    2. 'b' → logprob: -7.875706195831299
    3. '_' → logprob: -8.37570571899414
    4. '_black' → logprob: -10.37570571899414
    5. 'Bust' → logprob: -10.87570571899414
    6. '_w' → logprob: -11.87570571899414
    7. '_player' → logprob: -12.00070571899414
    8. ' _' → logprob: -12.62570571899414
    9. '_win' → logprob: -12.87570571899414
    10. '_d' → logprob: -13.12570571899414

Token 99: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -0.0006307095172815025
    2. 'usted' → logprob: -7.625630855560303
    3. '   ' → logprob: -10.375630378723145
    4. 'us' → logprob: -11.250630378723145
    5. 'b' → logprob: -11.438130378723145
    6. '>' → logprob: -11.750630378723145
    7. '```' → logprob: -11.875630378723145
    8. 'u' → logprob: -12.438130378723145
    9. 'уст' → logprob: -12.563130378723145
    10. 'usting' → logprob: -12.563130378723145

Token 100: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6370779275894165
    2. '):' → logprob: -0.7620779275894165
    3. ')' → logprob: -6.137077808380127
    4. '):
' → logprob: -6.387077808380127
    5. ',b' → logprob: -8.387078285217285
    6. ' ):' → logprob: -8.762078285217285
    7. ' ,' → logprob: -9.137078285217285
    8. ',total' → logprob: -10.887078285217285
    9. ',is' → logprob: -11.387078285217285
    10. '):

' → logprob: -11.512078285217285

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004253981169313192
    2. ' if' → logprob: -5.50425386428833
    3. 'if' → logprob: -8.754254341125488
    4. '    ' → logprob: -11.629254341125488
    5. ' ' → logprob: -13.254254341125488
    6. ':' → logprob: -13.254254341125488
    7. '  ' → logprob: -13.504254341125488
    8. '    
' → logprob: -14.004254341125488
    9. ' return' → logprob: -14.129254341125488
    10. '(' → logprob: -14.379254341125488

Token 102: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3179669976234436
    2. 'if' (adapté à ' if') → logprob: -1.9429669380187988
    3. '   ' → logprob: -2.067966938018799
    4. ' return' → logprob: -6.317966938018799
    5. 'return' → logprob: -7.567966938018799
    6. '"' → logprob: -8.442967414855957
    7. ' "' → logprob: -9.317967414855957
    8. ' ' → logprob: -11.567967414855957
    9. '    ' → logprob: -11.817967414855957
    10. '	if' → logprob: -13.317967414855957

Token 103: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.008118410594761372
    2. 'is' → logprob: -4.883118629455566
    3. ' not' → logprob: -7.633118629455566
    4. 'not' → logprob: -10.508118629455566
    5. '   ' → logprob: -15.508118629455566
    6. ' ' → logprob: -15.508118629455566
    7. '	is' → logprob: -15.883118629455566
    8. ' ' → logprob: -16.13311767578125
    9. '    ' → logprob: -17.13311767578125
    10. '_' → logprob: -17.38311767578125

Token 104: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -4.978233846486546e-05
    2. '_' → logprob: -10.125049591064453
    3. 'b' → logprob: -11.625049591064453
    4. ' _' → logprob: -15.500049591064453
    5. ' bust' → logprob: -15.750049591064453
    6. '_a' → logprob: -16.750049591064453
    7. '_s' → logprob: -16.750049591064453
    8. 'Bust' → logprob: -17.000049591064453
    9. '_t' → logprob: -17.500049591064453
    10. 's' → logprob: -17.875049591064453

Token 105: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -5.512236498361744e-07
    2. 'уст' → logprob: -16.5
    3. '
' → logprob: -16.625
    4. 'st' → logprob: -17.125
    5. '   ' → logprob: -17.125
    6. 'urst' → logprob: -17.25
    7. '_' → logprob: -17.375
    8. 'usted' → logprob: -17.5
    9. '>' → logprob: -17.625
    10. 'u' → logprob: -18.25

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001936485292389989
    2. ':
' → logprob: -6.251936435699463
    3. '==' → logprob: -12.876936912536621
    4. ' :' → logprob: -12.876936912536621
    5. ':return' → logprob: -13.251936912536621
    6. '   ' → logprob: -14.876936912536621
    7. ' ==' → logprob: -14.876936912536621
    8. '):' → logprob: -16.126935958862305
    9. ':

' → logprob: -16.876935958862305
    10. '=' → logprob: -17.001935958862305

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04865776747465134
    2. ' return' → logprob: -3.4236576557159424
    3. '   ' → logprob: -4.4236578941345215
    4. 'return' → logprob: -5.9236578941345215
    5. '    ' → logprob: -9.673657417297363
    6. '"' → logprob: -10.048657417297363
    7. '
' → logprob: -10.173657417297363
    8. '     ' → logprob: -11.298657417297363
    9. '	return' → logprob: -11.298657417297363
    10. ':' → logprob: -11.673657417297363

Token 108: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7729228138923645
    2. ' return' → logprob: -1.1479227542877197
    3. '       ' → logprob: -1.5229227542877197
    4. '   ' → logprob: -6.022922992706299
    5. '"' → logprob: -8.02292251586914
    6. '           ' → logprob: -9.64792251586914
    7. '	return' → logprob: -9.89792251586914
    8. ' ' → logprob: -10.02292251586914
    9. '     ' → logprob: -11.39792251586914
    10. '    ' → logprob: -11.77292251586914

Token 109: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07182031869888306
    2. ' "' → logprob: -2.8218202590942383
    3. '"B' → logprob: -5.071820259094238
    4. ''' → logprob: -5.821820259094238
    5. '"You' → logprob: -8.071820259094238
    6. ' '' → logprob: -9.321820259094238
    7. '"No' → logprob: -9.696820259094238
    8. '"I' → logprob: -11.071820259094238
    9. '"The' → logprob: -11.071820259094238
    10. ' ' → logprob: -11.321820259094238

Token 110: 'b' (ID: 65)
  Prédit: 'Bust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bust' → logprob: -0.051071614027023315
    2. 'b' → logprob: -3.8010716438293457
    3. 'B' → logprob: -3.9260716438293457
    4. 'バ' → logprob: -6.176071643829346
    5. 'You' → logprob: -6.551071643829346
    6. '"' → logprob: -6.676071643829346
    7. 'Burst' → logprob: -6.801071643829346
    8. '"B' → logprob: -7.176071643829346
    9. ' Bust' → logprob: -8.676071166992188
    10. ' bust' → logprob: -9.426071166992188

Token 111: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -0.0008594118990004063
    2. 'usted' → logprob: -7.250859260559082
    3. 'urst' → logprob: -9.625859260559082
    4. 'u' → logprob: -9.750859260559082
    5. 'us' → logprob: -11.375859260559082
    6. 'UST' → logprob: -12.375859260559082
    7. '
' → logprob: -13.375859260559082
    8. 'You' → logprob: -13.875859260559082
    9. 'uzz' → logprob: -14.125859260559082
    10. '"' → logprob: -14.375859260559082

Token 112: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.476386159658432
    2. '"' → logprob: -0.9763861894607544
    3. 'ed' → logprob: -6.726386070251465
    4. '"
' → logprob: -7.351386070251465
    5. '!"
' → logprob: -8.101386070251465
    6. '!"' → logprob: -8.976386070251465
    7. '"

' → logprob: -10.976386070251465
    8. 'else' → logprob: -12.726386070251465
    9. 's' → logprob: -12.851386070251465
    10. '!' → logprob: -13.101386070251465

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025430647656321526
    2. ' else' → logprob: -9.00025463104248
    3. 'else' → logprob: -9.00025463104248
    4. 'return' → logprob: -12.37525463104248
    5. ' return' → logprob: -13.12525463104248
    6. '    
' → logprob: -14.62525463104248
    7. 'def' → logprob: -15.50025463104248
    8. '	else' → logprob: -15.62525463104248
    9. '
' → logprob: -15.87525463104248
    10. 'elif' → logprob: -15.87525463104248

Token 114: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04405397176742554
    2. ' else' → logprob: -3.2940540313720703
    3. 'else' (adapté à ' else') → logprob: -5.16905403137207
    4. ' return' → logprob: -8.54405403137207
    5. 'return' → logprob: -9.41905403137207
    6. ' elif' → logprob: -11.04405403137207
    7. 'elif' → logprob: -11.66905403137207
    8. '"' → logprob: -13.91905403137207
    9. '
' → logprob: -14.16905403137207
    10. ' ' → logprob: -14.29405403137207

Token 115: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14629170298576355
    2. ':' → logprob: -3.146291732788086
    3. '"' → logprob: -3.271291732788086
    4. ' "' → logprob: -3.521291732788086
    5. '   ' → logprob: -4.146291732788086
    6. 'return' → logprob: -5.521291732788086
    7. ' return' → logprob: -5.646291732788086
    8. ':
' → logprob: -6.521291732788086
    9. ':return' → logprob: -8.146291732788086
    10. '    ' → logprob: -8.771291732788086

Token 116: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10057412832975388
    2. ' "' → logprob: -2.475574016571045
    3. '   ' → logprob: -4.600574016571045
    4. 'return' → logprob: -7.100574016571045
    5. ' return' → logprob: -7.600574016571045
    6. '       ' → logprob: -9.350574493408203
    7. '    ' → logprob: -10.100574493408203
    8. ' ' → logprob: -10.600574493408203
    9. ''' → logprob: -10.975574493408203
    10. '"value' → logprob: -12.350574493408203

Token 117: ' return' (ID: 622)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0555909164249897
    2. ' "' → logprob: -2.930590867996216
    3. 'return' (adapté à ' return') → logprob: -7.680591106414795
    4. '   ' → logprob: -9.305590629577637
    5. '"s' → logprob: -10.305590629577637
    6. ' return' → logprob: -10.430590629577637
    7. '"value' → logprob: -10.805590629577637
    8. '"user' → logprob: -11.180590629577637
    9. '"display' → logprob: -11.555590629577637
    10. '"go' → logprob: -11.805590629577637

Token 118: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38692545890808105
    2. ' "' → logprob: -1.136925458908081
    3. '"value' → logprob: -11.01192569732666
    4. '"user' → logprob: -11.51192569732666
    5. '"s' → logprob: -11.88692569732666
    6. ' ' → logprob: -12.26192569732666
    7. '"net' → logprob: -13.01192569732666
    8. '"go' → logprob: -13.13692569732666
    9. '   ' → logprob: -13.26192569732666
    10. '"display' → logprob: -13.38692569732666

Token 119: 'win' (ID: 11668)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.009752077050507069
    2. 'safe' → logprob: -4.75975227355957
    3. 'win' → logprob: -7.88475227355957
    4. '"s' → logprob: -8.00975227355957
    5. '"go' → logprob: -8.75975227355957
    6. ''' → logprob: -10.13475227355957
    7. ' "' → logprob: -10.13475227355957
    8. 'str' → logprob: -10.13475227355957
    9. 'black' → logprob: -10.50975227355957
    10. ' safe' → logprob: -10.75975227355957

Token 120: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -6.153795766294934e-06
    2. '"
' → logprob: -12.375005722045898
    3. 's' → logprob: -15.000005722045898
    4. '"""' → logprob: -15.375005722045898
    5. '```' → logprob: -15.375005722045898
    6. ' "' → logprob: -15.500005722045898
    7. '"value' → logprob: -15.625005722045898
    8. '"user' → logprob: -16.0000057220459
    9. '")' → logprob: -16.1250057220459
    10. '"`' → logprob: -16.5000057220459

Token 121: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1472419600977446e-06
    2. '
' → logprob: -14.625000953674316
    3. '```' → logprob: -15.375000953674316
    4. '<|end|>' → logprob: -15.375000953674316
    5. ' def' → logprob: -16.375001907348633
    6. '  
' → logprob: -18.250001907348633
    7. 'ndef' → logprob: -18.375001907348633
    8. 'if' → logprob: -18.625001907348633
    9. '<|end|>' → logprob: -18.625001907348633
    10. '    
' → logprob: -19.000001907348633

Token 122: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3883862793445587
    2. ' main' → logprob: -1.1383862495422363
    3. 'def' → logprob: -7.013386249542236
    4. 'play' → logprob: -7.763386249542236
    5. ' play' → logprob: -9.013386726379395
    6. ' blackjack' → logprob: -10.138386726379395
    7. 'black' → logprob: -11.388386726379395
    8. ' def' → logprob: -12.138386726379395
    9. 'process' → logprob: -12.763386726379395
    10. 'run' → logprob: -12.888386726379395

Token 123: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00010139751975657418
    2. ' ():' → logprob: -9.375101089477539
    3. '():
' → logprob: -11.250101089477539
    4. '()' → logprob: -12.750101089477539
    5. '_' → logprob: -15.125101089477539
    6. '(' → logprob: -15.250101089477539
    7. '():
' → logprob: -16.62510108947754
    8. '()>' → logprob: -17.87510108947754
    9. ':' → logprob: -18.25010108947754
    10. '(":' → logprob: -18.25010108947754

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027050355449318886
    2. ' numbers' → logprob: -4.152050495147705
    3. 'numbers' → logprob: -4.527050495147705
    4. '(numbers' → logprob: -10.152050018310547
    5. '
' → logprob: -10.902050018310547
    6. 'n' → logprob: -11.027050018310547
    7. 'nums' → logprob: -11.277050018310547
    8. '    
' → logprob: -11.402050018310547
    9. '```' → logprob: -11.902050018310547
    10. '_numbers' → logprob: -12.027050018310547

Token 125: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' (adapté à ' numbers') → logprob: -0.07386992126703262
    2. ' numbers' → logprob: -2.6988699436187744
    3. '   ' → logprob: -5.823869705200195
    4. 'nums' → logprob: -7.073869705200195
    5. 'def' → logprob: -9.448869705200195
    6. '
' → logprob: -11.573869705200195
    7. ' ' → logprob: -11.948869705200195
    8. ' nums' → logprob: -12.073869705200195
    9. '    
' → logprob: -12.323869705200195
    10. 'num' → logprob: -12.698869705200195

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003177952254191041
    2. '=' → logprob: -5.753178119659424
    3. '   ' → logprob: -16.503177642822266
    4. ')' → logprob: -16.878177642822266
    5. ' ' → logprob: -17.003177642822266
    6. '_' → logprob: -18.003177642822266
    7. 's' → logprob: -18.003177642822266
    8. ' ' → logprob: -18.378177642822266
    9. ',' → logprob: -18.628177642822266
    10. '  ' → logprob: -18.878177642822266

Token 127: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.47407791018486023
    2. 'get' → logprob: -0.9740779399871826
    3. '(get' → logprob: -14.474078178405762
    4. '	get' → logprob: -15.474078178405762
    5. '[get' → logprob: -16.849077224731445
    6. '_get' → logprob: -16.974077224731445
    7. '=get' → logprob: -16.974077224731445
    8. '   ' → logprob: -17.224077224731445
    9. ')get' → logprob: -17.349077224731445
    10. '.get' → logprob: -17.849077224731445

Token 128: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -2.5776860184123507e-06
    2. '_input' → logprob: -13.62500286102295
    3. '_' → logprob: -14.00000286102295
    4. '_number' → logprob: -15.62500286102295
    5. 'numbers' → logprob: -16.000001907348633
    6. '_n' → logprob: -17.375001907348633
    7. 's' → logprob: -17.500001907348633
    8. '```' → logprob: -18.250001907348633
    9. '_num' → logprob: -18.375001907348633
    10. '_scores' → logprob: -18.500001907348633

Token 129: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029754657298326492
    2. '()
' → logprob: -3.529754638671875
    3. '()
' → logprob: -13.154754638671875
    4. '()

' → logprob: -14.154754638671875
    5. '()\' → logprob: -14.279754638671875
    6. ' ()' → logprob: -14.654754638671875
    7. '   ' → logprob: -15.154754638671875
    8. '())' → logprob: -16.404754638671875
    9. '()`' → logprob: -16.654754638671875
    10. '()"' → logprob: -16.779754638671875

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7253369688987732
    2. ' total' → logprob: -0.9753369688987732
    3. 'total' → logprob: -1.975337028503418
    4. '
' → logprob: -11.225337028503418
    5. ' result' → logprob: -11.225337028503418
    6. '	total' → logprob: -11.600337028503418
    7. 'result' → logprob: -11.600337028503418
    8. ' sum' → logprob: -12.600337028503418
    9. 'sum' → logprob: -13.225337028503418
    10. ' ' → logprob: -13.600337028503418

Token 131: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.007638567127287388
    2. ' total' → logprob: -4.882638454437256
    3. '   ' → logprob: -10.507638931274414
    4. 'result' → logprob: -12.882638931274414
    5. '
' → logprob: -13.632638931274414
    6. '	total' → logprob: -14.007638931274414
    7. '_total' → logprob: -15.882638931274414
    8. 'Total' → logprob: -16.257638931274414
    9. '    
' → logprob: -16.382638931274414
    10. ' ' → logprob: -17.132638931274414

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005234121344983578
    2. '=' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.880233764648438
    4. '   ' → logprob: -16.380233764648438
    5. ')' → logprob: -16.505233764648438
    6. ' ' → logprob: -17.630233764648438
    7. '_' → logprob: -18.130233764648438
    8. '  ' → logprob: -18.630233764648438
    9. '=sum' → logprob: -18.880233764648438
    10. ' =
' → logprob: -19.755233764648438

Token 133: ' calculate' (ID: 17950)
  Prédit: ' calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.04858986660838127
    2. 'calculate' → logprob: -3.0485899448394775
    3. ' sum' → logprob: -13.048589706420898
    4. 'sum' → logprob: -15.798589706420898
    5. '.calculate' → logprob: -16.6735897064209
    6. ' ' → logprob: -16.9235897064209
    7. ' compute' → logprob: -18.0485897064209
    8. '   ' → logprob: -18.2985897064209
    9. ' calcular' → logprob: -18.2985897064209
    10. ' calculates' → logprob: -18.4235897064209

Token 134: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.5
    3. 'sum' → logprob: -17.75
    4. '_total' → logprob: -19.25
    5. '_
' → logprob: -20.875
    6. ' sum' → logprob: -22.375
    7. ' _' → logprob: -22.375
    8. 's' → logprob: -23.0
    9. '_score' → logprob: -23.375
    10. '_SUM' → logprob: -23.375

Token 135: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -1.700132997939363e-05
    2. '(' → logprob: -11.000017166137695
    3. '(total' → logprob: -15.875017166137695
    4. '(number' → logprob: -16.875017166137695
    5. '(nums' → logprob: -17.125017166137695
    6. ' (' → logprob: -17.750017166137695
    7. '(n' → logprob: -17.875017166137695
    8. 'numbers' → logprob: -18.500017166137695
    9. '(scores' → logprob: -19.375017166137695
    10. '(sum' → logprob: -19.750017166137695

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008622374385595322
    2. ')
' → logprob: -4.758622169494629
    3. '   ' → logprob: -12.383622169494629
    4. '()' → logprob: -13.508622169494629
    5. ' )' → logprob: -13.758622169494629
    6. ')
' → logprob: -14.508622169494629
    7. '())' → logprob: -14.883622169494629
    8. ')

' → logprob: -15.633622169494629
    9. '
' → logprob: -16.508623123168945
    10. ' ' → logprob: -16.758623123168945

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17379258573055267
    2. '
' → logprob: -2.298792600631714
    3. ' is' → logprob: -2.923792600631714
    4. 'is' → logprob: -5.423792362213135
    5. '    
' → logprob: -7.423792362213135
    6. ' result' → logprob: -9.548792839050293
    7. 'result' → logprob: -9.548792839050293
    8. '
' → logprob: -10.048792839050293
    9. ' if' → logprob: -10.298792839050293
    10. '	is' → logprob: -10.298792839050293

Token 138: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.35867613554000854
    2. ' is' → logprob: -1.6086761951446533
    3. 'result' → logprob: -3.2336761951446533
    4. ' result' → logprob: -3.3586761951446533
    5. 'b' → logprob: -4.733675956726074
    6. 'print' → logprob: -5.108675956726074
    7. 'if' → logprob: -5.483675956726074
    8. '   ' → logprob: -5.483675956726074
    9. ' if' → logprob: -6.233675956726074
    10. ' print' → logprob: -6.733675956726074

Token 139: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.002679225755855441
    2. '_' → logprob: -6.002679347991943
    3. 'b' → logprob: -8.502678871154785
    4. ' _' → logprob: -14.752678871154785
    5. ' bust' → logprob: -16.2526798248291
    6. 'Bust' → logprob: -17.3776798248291
    7. '\' → logprob: -17.5026798248291
    8. 't' → logprob: -18.0026798248291
    9. '	b' → logprob: -18.6276798248291
    10. '_
' → logprob: -19.1276798248291

Token 140: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -1.6240566083070007e-06
    2. 'b' → logprob: -14.000001907348633
    3. '_b' → logprob: -14.875001907348633
    4. '_' → logprob: -15.875001907348633
    5. 'st' → logprob: -16.875001907348633
    6. 'уст' → logprob: -16.875001907348633
    7. 'us' → logprob: -17.125001907348633
    8. 'u' → logprob: -17.375001907348633
    9. 'urst' → logprob: -17.750001907348633
    10. 'ost' → logprob: -18.000001907348633

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150413408875465
    2. '=' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.643150329589844
    4. ')' → logprob: -15.643150329589844
    5. '(' → logprob: -15.893150329589844
    6. ' ' → logprob: -16.768150329589844
    7. ' ' → logprob: -16.893150329589844
    8. '_' → logprob: -17.518150329589844
    9. '=is' → logprob: -18.893150329589844
    10. ',' → logprob: -19.143150329589844

Token 142: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.12692883610725403
    2. ' check' → logprob: -2.1269288063049316
    3. '(check' → logprob: -14.25192928314209
    4. '	check' → logprob: -17.126928329467773
    5. '   ' → logprob: -18.376928329467773
    6. ' ' → logprob: -19.251928329467773
    7. '_check' → logprob: -21.251928329467773
    8. '
' → logprob: -21.626928329467773
    9. '.check' → logprob: -21.626928329467773
    10. 'chec' → logprob: -21.751928329467773

Token 143: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.531315314830863e-06
    2. 'b' → logprob: -13.375003814697266
    3. '(b' → logprob: -13.500003814697266
    4. '_' → logprob: -14.750003814697266
    5. '_(' → logprob: -16.625003814697266
    6. '(' → logprob: -17.625003814697266
    7. '(_' → logprob: -18.375003814697266
    8. 'Bust' → logprob: -18.375003814697266
    9. 's' → logprob: -19.125003814697266
    10. ' bust' → logprob: -19.375003814697266

Token 144: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -1.5048530030981055e-06
    2. '   ' → logprob: -15.000001907348633
    3. 'b' → logprob: -15.875001907348633
    4. 'u' → logprob: -16.125001907348633
    5. 'уст' → logprob: -16.125001907348633
    6. 'ost' → logprob: -16.250001907348633
    7. 'st' → logprob: -16.375001907348633
    8. '_' → logprob: -16.375001907348633
    9. '_b' → logprob: -16.375001907348633
    10. 'urst' → logprob: -16.625001907348633

Token 145: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0019402962643653154
    2. '(' → logprob: -6.2519402503967285
    3. '(is' → logprob: -11.626940727233887
    4. 'total' → logprob: -12.876940727233887
    5. '(
' → logprob: -15.626940727233887
    6. ' (' → logprob: -17.37693977355957
    7. '(t' → logprob: -18.12693977355957
    8. '(not' → logprob: -18.37693977355957
    9. 'is' → logprob: -19.12693977355957
    10. '(to' → logprob: -19.50193977355957

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005247395019978285
    2. ')
' → logprob: -5.255247592926025
    3. '   ' → logprob: -11.255247116088867
    4. ' )' → logprob: -15.130247116088867
    5. ')

' → logprob: -15.380247116088867
    6. ')
' → logprob: -16.630247116088867
    7. '))' → logprob: -18.630247116088867
    8. ')return' → logprob: -18.630247116088867
    9. ' )
' → logprob: -18.755247116088867
    10. ' ' → logprob: -18.755247116088867

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00818486139178276
    2. ' result' → logprob: -5.508184909820557
    3. 'result' → logprob: -5.508184909820557
    4. 'print' → logprob: -10.258184432983398
    5. ' print' → logprob: -12.008184432983398
    6. '
' → logprob: -13.133184432983398
    7. '    
' → logprob: -14.508184432983398
    8. '	result' → logprob: -15.258184432983398
    9. '```' → logprob: -15.633184432983398
    10. 'results' → logprob: -16.0081844329834

Token 148: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.7018777132034302
    2. 'result' (adapté à ' result') → logprob: -0.7018777132034302
    3. 'print' → logprob: -5.201877593994141
    4. ' print' → logprob: -6.326877593994141
    5. '   ' → logprob: -6.576877593994141
    6. 'return' → logprob: -13.20187759399414
    7. '	result' → logprob: -14.07687759399414
    8. ' return' → logprob: -14.07687759399414
    9. '_result' → logprob: -14.20187759399414
    10. ' ' → logprob: -14.45187759399414

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059335362166166306
    2. '=' → logprob: -5.13093376159668
    3. ' ' → logprob: -13.13093376159668
    4. ')' → logprob: -13.63093376159668
    5. '_' → logprob: -13.88093376159668
    6. '   ' → logprob: -15.75593376159668
    7. ' =)' → logprob: -16.00593376159668
    8. ' ==' → logprob: -16.13093376159668
    9. ' =
' → logprob: -16.38093376159668
    10. ',' → logprob: -16.38093376159668

Token 150: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.061968132853507996
    2. 'get' → logprob: -2.8119680881500244
    3. '_get' → logprob: -15.061967849731445
    4. '(get' → logprob: -16.186967849731445
    5. '	get' → logprob: -16.436967849731445
    6. '.get' → logprob: -17.686967849731445
    7. ' ' → logprob: -18.936967849731445
    8. ' ' → logprob: -19.061967849731445
    9. '[get' → logprob: -19.061967849731445
    10. '=get' → logprob: -19.186967849731445

Token 151: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.9361264946837764e-07
    2. 'result' → logprob: -15.75
    3. '_res' → logprob: -18.75
    4. '_' → logprob: -19.25
    5. '_Result' → logprob: -19.875
    6. '_RESULT' → logprob: -20.0
    7. '_results' → logprob: -20.125
    8. '_r' → logprob: -21.125
    9. 's' → logprob: -21.75
    10. 'Result' → logprob: -22.0

Token 152: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.00016027313540689647
    2. '(' → logprob: -8.750160217285156
    3. ' (' → logprob: -13.375160217285156
    4. '(not' → logprob: -16.250160217285156
    5. '(True' → logprob: -17.250160217285156
    6. 'is' → logprob: -17.500160217285156
    7. '(has' → logprob: -17.625160217285156
    8. '(s' → logprob: -18.125160217285156
    9. '(result' → logprob: -18.375160217285156
    10. '("("' → logprob: -18.375160217285156

Token 153: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0040874239057302475
    2. 'b' → logprob: -5.504087448120117
    3. 'Bust' → logprob: -12.879087448120117
    4. 'ust' → logprob: -13.129087448120117
    5. 't' → logprob: -13.879087448120117
    6. ' bust' → logprob: -14.004087448120117
    7. 'ist' → logprob: -14.254087448120117
    8. '(b' → logprob: -14.379087448120117
    9. 'ub' → logprob: -14.879087448120117
    10. 'is' → logprob: -15.629087448120117

Token 154: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -4.4849443838757e-06
    2. 'st' → logprob: -13.000004768371582
    3. 'уст' → logprob: -14.125004768371582
    4. '_' → logprob: -14.875004768371582
    5. 'u' → logprob: -15.375004768371582
    6. 't' → logprob: -16.000003814697266
    7. 'ost' → logprob: -16.500003814697266
    8. ' ust' → logprob: -16.500003814697266
    9. 'urst' → logprob: -16.500003814697266
    10. '```' → logprob: -16.500003814697266

Token 155: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47410061955451965
    2. ')' → logprob: -0.9741005897521973
    3. ')
' → logprob: -10.724101066589355
    4. ' )
' → logprob: -14.474101066589355
    5. ')

' → logprob: -14.474101066589355
    6. '   ' → logprob: -14.724101066589355
    7. ' )' → logprob: -16.09910011291504
    8. ')`
' → logprob: -17.47410011291504
    9. ')return' → logprob: -18.34910011291504
    10. '())
' → logprob: -18.34910011291504

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00408884696662426
    2. 'print' → logprob: -5.504088878631592
    3. ' print' → logprob: -11.754088401794434
    4. '    
' → logprob: -13.379088401794434
    5. '
' → logprob: -14.129088401794434
    6. '	print' → logprob: -15.754088401794434
    7. '```' → logprob: -16.25408935546875
    8. '    ' → logprob: -18.37908935546875
    9. '   ' → logprob: -18.62908935546875
    10. '  ' → logprob: -18.87908935546875

Token 157: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04945603013038635
    2. '   ' → logprob: -3.0494561195373535
    3. ' print' → logprob: -7.0494561195373535
    4. '	print' → logprob: -15.674455642700195
    5. '```' → logprob: -16.174455642700195
    6. '
' → logprob: -17.549455642700195
    7. 'return' → logprob: -17.674455642700195
    8. '    
' → logprob: -18.799455642700195
    9. '  ' → logprob: -19.549455642700195
    10. ' ' → logprob: -20.174455642700195

Token 158: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.023258056491613388
    2. '(' → logprob: -3.7732579708099365
    3. '(f' → logprob: -11.648258209228516
    4. ' (' → logprob: -13.648258209228516
    5. '("("' → logprob: -14.023258209228516
    6. 'result' → logprob: -14.398258209228516
    7. '()' → logprob: -14.648258209228516
    8. '('' → logprob: -15.398258209228516
    9. '(results' → logprob: -15.648258209228516
    10. '("' → logprob: -16.148258209228516

Token 159: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.000000953674316
    3. '`)' → logprob: -16.625
    4. ')`' → logprob: -16.625
    5. ' )' → logprob: -17.0
    6. '")' → logprob: -17.625
    7. '')' → logprob: -17.75
    8. '()' → logprob: -18.375
    9. '))' → logprob: -18.375
    10. '())' → logprob: -18.75

Token 160: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00019245444855187088
    2. '
' → logprob: -8.625192642211914
    3. ' if' → logprob: -11.875192642211914
    4. '\n' → logprob: -12.375192642211914
    5. '```' → logprob: -14.125192642211914
    6. '\' → logprob: -15.125192642211914
    7. '  
' → logprob: -15.250192642211914
    8. '    
' → logprob: -15.625192642211914
    9. 'main' → logprob: -16.000192642211914
    10. '\
' → logprob: -16.250192642211914

Token 161: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0021206384990364313
    2. '(' → logprob: -6.252120494842529
    3. '()
' → logprob: -8.627120971679688
    4. '()\' → logprob: -12.752120971679688
    5. ' ()' → logprob: -12.877120971679688
    6. '()

' → logprob: -13.127120971679688
    7. '(
' → logprob: -13.502120971679688
    8. '#' → logprob: -13.502120971679688
    9. '```' → logprob: -14.502120971679688
    10. '()"' → logprob: -15.002120971679688


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 159
Tokens correctement prédits (1ère position, stricte): 86
Tokens correctement prédits (1ère position, avec adaptation): 93
Tokens correctement prédits (top 10): 141
Précision stricte (1ère position): 54.09%
Précision adaptée (1ère position): 58.49%
Précision (top 10): 88.68%
================================================================================
