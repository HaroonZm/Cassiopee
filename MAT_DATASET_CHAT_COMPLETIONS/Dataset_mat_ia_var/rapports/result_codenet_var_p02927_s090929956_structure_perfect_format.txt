================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import sqrt

M, D = map(int, input().split())
ans = 0
for i in range(1, M + 1):
    for j in range(1, D + 1):
        if j // 10 >= 2 and j % 10 >= 2:
            if (j // 10) * (j % 10) == i:
                ans += 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' sqrt' (ID: 44237)
  Prédit: ' sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.649153470993042
    2. 'sqrt' → logprob: -0.774153470993042
    3. ' pi' → logprob: -5.024153709411621
    4. 'pow' → logprob: -5.649153709411621
    5. 'sin' → logprob: -6.149153709411621
    6. 'pi' → logprob: -6.524153709411621
    7. ' sin' → logprob: -6.649153709411621
    8. ' ceil' → logprob: -7.649153709411621
    9. 'ceil' → logprob: -8.399153709411621
    10. ' pow' → logprob: -8.399153709411621

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004090393427759409
    2. '(
' → logprob: -6.129090309143066
    3. '\n' → logprob: -7.004090309143066
    4. '\(' → logprob: -7.379090309143066
    5. '\' → logprob: -8.879090309143066
    6. '
' → logprob: -9.754090309143066
    7. ',' → logprob: -10.129090309143066
    8. '```' → logprob: -10.629090309143066
    9. '(

' → logprob: -11.504090309143066
    10. 'a' → logprob: -11.504090309143066

Token 5: 'M' (ID: 44)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03092455491423607
    2. '(
' → logprob: -3.5309245586395264
    3. '\(' → logprob: -7.780924320220947
    4. '
' → logprob: -9.030924797058105
    5. ',' → logprob: -9.155924797058105
    6. '(

' → logprob: -9.405924797058105
    7. 'a' → logprob: -9.530924797058105
    8. '\n' → logprob: -9.655924797058105
    9. 'def' → logprob: -10.030924797058105
    10. '\' → logprob: -10.280924797058105

Token 6: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012036513537168503
    2. 'e' → logprob: -4.512036323547363
    3. '=' → logprob: -8.887036323547363
    4. 'ath' → logprob: -8.887036323547363
    5. 'y' → logprob: -9.012036323547363
    6. 'atrix' → logprob: -9.387036323547363
    7. 's' → logprob: -9.512036323547363
    8. 'o' → logprob: -9.887036323547363
    9. '_' → logprob: -10.012036323547363
    10. 'ean' → logprob: -10.387036323547363

Token 7: ' D' (ID: 415)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7408902049064636
    2. ' N' → logprob: -0.7408902049064636
    3. 'n' → logprob: -3.9908902645111084
    4. ' n' → logprob: -4.615890026092529
    5. 'x' → logprob: -5.740890026092529
    6. 'm' → logprob: -5.740890026092529
    7. ' m' → logprob: -5.990890026092529
    8. 'a' → logprob: -6.115890026092529
    9. ' ' → logprob: -6.740890026092529
    10. ' x' → logprob: -7.115890026092529

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4875905215740204
    2. '=' → logprob: -0.9875905513763428
    3. ' ' → logprob: -4.862590312957764
    4. ',' → logprob: -5.237590312957764
    5. '_' → logprob: -9.112590789794922
    6. ' ,' → logprob: -9.612590789794922
    7. '.' → logprob: -9.612590789794922
    8. ')' → logprob: -9.737590789794922
    9. '  ' → logprob: -10.862590789794922
    10. '>' → logprob: -11.362590789794922

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2365623414516449
    2. 'map' → logprob: -2.1115622520446777
    3. ' ' → logprob: -2.4865622520446777
    4. '10' → logprob: -6.361562252044678
    5. '0' → logprob: -6.486562252044678
    6. '1' → logprob: -7.486562252044678
    7. 'int' → logprob: -7.611562252044678
    8. 'input' → logprob: -8.361562728881836
    9. ' input' → logprob: -8.611562728881836
    10. ' int' → logprob: -8.736562728881836

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.051533330231904984
    2. '(' → logprob: -3.0515332221984863
    3. '(lambda' → logprob: -6.301533222198486
    4. '(str' → logprob: -7.301533222198486
    5. '(input' → logprob: -8.176533699035645
    6. 'int' → logprob: -9.426533699035645
    7. '(eval' → logprob: -11.176533699035645
    8. '<int' → logprob: -11.301533699035645
    9. '(list' → logprob: -11.301533699035645
    10. '[int' → logprob: -11.676533699035645

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03894607722759247
    2. '(' → logprob: -3.7889461517333984
    3. ')' → logprob: -5.038946151733398
    4. ',' → logprob: -5.538946151733398
    5. ',input' → logprob: -6.038946151733398
    6. 'input' → logprob: -6.663946151733398
    7. '(str' → logprob: -8.038946151733398
    8. '=input' → logprob: -8.538946151733398
    9. '(),' → logprob: -8.913946151733398
    10. '(int' → logprob: -8.913946151733398

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31326669454574585
    2. ' input' → logprob: -1.3132667541503906
    3. '(input' → logprob: -13.18826675415039
    4. ' ' → logprob: -13.31326675415039
    5. ')' → logprob: -14.31326675415039
    6. ',input' → logprob: -14.68826675415039
    7. '=input' → logprob: -16.06326675415039
    8. '	input' → logprob: -16.06326675415039
    9. ' )' → logprob: -17.31326675415039
    10. '```' → logprob: -17.93826675415039

Token 13: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.19275712966918945
    2. '()' → logprob: -2.4427571296691895
    3. '().' → logprob: -2.4427571296691895
    4. '());' → logprob: -7.3177571296691895
    5. '()))' → logprob: -8.942756652832031
    6. ')' → logprob: -8.942756652832031
    7. '();)' → logprob: -9.067756652832031
    8. '()>' → logprob: -9.192756652832031
    9. '(' → logprob: -9.817756652832031
    10. '(),' → logprob: -10.192756652832031

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.014196882955729961
    2. 'strip' → logprob: -4.264196872711182
    3. 'rstrip' → logprob: -10.76419734954834
    4. ' split' → logprob: -11.76419734954834
    5. 'read' → logprob: -13.01419734954834
    6. ')' → logprob: -13.38919734954834
    7. ' strip' → logprob: -15.13919734954834
    8. '(split' → logprob: -15.51419734954834
    9. ' readline' → logprob: -16.514196395874023
    10. 'spl' → logprob: -16.889196395874023

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2022458165884018
    2. '))' → logprob: -1.702245831489563
    3. '())' → logprob: -7.327245712280273
    4. '()' → logprob: -9.077245712280273
    5. '()))' → logprob: -10.202245712280273
    6. ')))' → logprob: -11.827245712280273
    7. '`)' → logprob: -12.202245712280273
    8. '(' → logprob: -12.327245712280273
    9. '),' → logprob: -13.202245712280273
    10. ')`' → logprob: -14.077245712280273

Token 16: 'ans' (ID: 616)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6347425580024719
    2. 'for' → logprob: -1.0097424983978271
    3. 'count' → logprob: -3.884742498397827
    4. ' for' → logprob: -4.134742736816406
    5. 'x' → logprob: -4.634742736816406
    6. ' if' → logprob: -4.759742736816406
    7. 's' → logprob: -4.884742736816406
    8. '```' → logprob: -5.009742736816406
    9. 'max' → logprob: -5.134742736816406
    10. 'result' → logprob: -5.259742736816406

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0205889530479908
    2. '=' → logprob: -3.8955888748168945
    3. '_' → logprob: -10.270588874816895
    4. '1' → logprob: -13.020588874816895
    5. ' ' → logprob: -13.145588874816895
    6. 's' → logprob: -13.395588874816895
    7. ',' → logprob: -13.520588874816895
    8. 'if' → logprob: -13.645588874816895
    9. ')' → logprob: -14.520588874816895
    10. ':' → logprob: -15.020588874816895

Token 18: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6717342138290405
    2. ' ' → logprob: -0.7967342138290405
    3. ' []' → logprob: -4.92173433303833
    4. '"' → logprob: -5.04673433303833
    5. 'float' → logprob: -5.54673433303833
    6. '[]' → logprob: -5.54673433303833
    7. ' float' → logprob: -6.42173433303833
    8. '100' → logprob: -6.42173433303833
    9. ''' → logprob: -6.67173433303833
    10. ' sqrt' → logprob: -6.79673433303833

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012841001152992249
    2. '-' → logprob: -5.63784122467041
    3. '[]' → logprob: -6.13784122467041
    4. '"' → logprob: -6.76284122467041
    5. '100' → logprob: -7.13784122467041
    6. 'max' → logprob: -7.26284122467041
    7. 'float' → logprob: -7.63784122467041
    8. '[' → logprob: -7.76284122467041
    9. 'sqrt' → logprob: -7.88784122467041
    10. ' ' → logprob: -7.88784122467041

Token 20: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8158937692642212
    2. 'for' → logprob: -0.9408937692642212
    3. ' 
' → logprob: -2.0658936500549316
    4. ' ' → logprob: -3.8158936500549316
    5. 'if' → logprob: -5.065893650054932
    6. '
' → logprob: -5.440893650054932
    7. ' if' → logprob: -5.690893650054932
    8. '  
' → logprob: -6.065893650054932
    9. '\n' → logprob: -6.565893650054932
    10. '<|end|>' → logprob: -8.19089412689209

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18569548428058624
    2. ' for' → logprob: -1.9356955289840698
    3. ' ' → logprob: -4.310695648193359
    4. 'if' → logprob: -4.685695648193359
    5. ' if' → logprob: -7.560695648193359
    6. '<|end|>' → logprob: -7.685695648193359
    7. '\n' → logprob: -7.810695648193359
    8. '' → logprob: -8.06069564819336
    9. '
' → logprob: -8.56069564819336
    10. ' 
' → logprob: -8.68569564819336

Token 22: ' i' (ID: 575)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.31248682737350464
    2. ' i' → logprob: -1.4374868869781494
    3. ' day' → logprob: -4.06248664855957
    4. 'd' → logprob: -4.81248664855957
    5. ' m' → logprob: -6.43748664855957
    6. ' ' → logprob: -6.68748664855957
    7. '_' → logprob: -7.06248664855957
    8. ' _' → logprob: -7.43748664855957
    9. 'i' → logprob: -7.56248664855957
    10. ' range' → logprob: -8.56248664855957

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09221860021352768
    2. 'in' → logprob: -2.4672186374664307
    3. ' ' → logprob: -5.967218399047852
    4. 'n' → logprob: -8.592218399047852
    5. '1' → logprob: -8.842218399047852
    6. 'range' → logprob: -9.092218399047852
    7. '_' → logprob: -9.467218399047852
    8. '  ' → logprob: -9.967218399047852
    9. ',' → logprob: -10.592218399047852
    10. '   ' → logprob: -10.717218399047852

Token 24: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16034862399101257
    2. 'range' → logprob: -1.910348653793335
    3. ' ' → logprob: -9.160348892211914
    4. '	range' → logprob: -11.910348892211914
    5. '(range' → logprob: -12.660348892211914
    6. '  ' → logprob: -13.410348892211914
    7. '   ' → logprob: -13.660348892211914
    8. ' ran' → logprob: -13.910348892211914
    9. ' xrange' → logprob: -14.285348892211914
    10. ' ' → logprob: -14.410348892211914

Token 25: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010223194840364158
    2. '(M' → logprob: -9.375102043151855
    3. '(D' → logprob: -11.250102043151855
    4. ' (' → logprob: -13.750102043151855
    5. '((' → logprob: -14.125102043151855
    6. '(i' → logprob: -14.375102043151855
    7. '(
' → logprob: -14.375102043151855
    8. '(-' → logprob: -15.500102043151855
    9. '(range' → logprob: -15.750102043151855
    10. '(len' → logprob: -15.875102043151855

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06088845059275627
    2. 'M' → logprob: -3.0608885288238525
    3. '10' → logprob: -5.060888290405273
    4. '2' → logprob: -5.685888290405273
    5. '11' → logprob: -7.310888290405273
    6. '100' → logprob: -7.560888290405273
    7. 'max' → logprob: -7.560888290405273
    8. 'D' → logprob: -8.560888290405273
    9. '(' → logprob: -8.685888290405273
    10. '22' → logprob: -10.185888290405273

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023254329338669777
    2. ' ,' → logprob: -3.77325439453125
    3. ',M' → logprob: -12.52325439453125
    4. ',D' → logprob: -13.14825439453125
    5. '1' → logprob: -14.27325439453125
    6. ' ' → logprob: -14.77325439453125
    7. ' )' → logprob: -15.14825439453125
    8. ',d' → logprob: -15.27325439453125
    9. '+' → logprob: -15.64825439453125
    10. ')' → logprob: -15.64825439453125

Token 28: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.279855340719223
    2. ' M' → logprob: -1.5298553705215454
    3. 'min' → logprob: -4.904855251312256
    4. '10' → logprob: -5.029855251312256
    5. ' min' → logprob: -5.279855251312256
    6. ' ' → logprob: -5.654855251312256
    7. 'D' → logprob: -5.904855251312256
    8. '100' → logprob: -6.529855251312256
    9. ' D' → logprob: -7.779855251312256
    10. '101' → logprob: -9.779855728149414

Token 29: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2813206911087036
    2. ' +' → logprob: -1.4063206911087036
    3. '):' → logprob: -8.906320571899414
    4. ' ):' → logprob: -11.156320571899414
    5. '*' → logprob: -11.906320571899414
    6. ' ' → logprob: -12.781320571899414
    7. ' *' → logprob: -12.781320571899414
    8. '-' → logprob: -13.031320571899414
    9. '):
' → logprob: -13.531320571899414
    10. ')' → logprob: -13.656320571899414

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '```' → logprob: -16.500911712646484
    4. '   ' → logprob: -17.250911712646484
    5. '  ' → logprob: -17.500911712646484
    6. ')' → logprob: -17.625911712646484
    7. '2' → logprob: -17.750911712646484
    8. ' ' → logprob: -18.313411712646484
    9. '    ' → logprob: -18.688411712646484
    10. '

' → logprob: -18.938411712646484

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '2' → logprob: -17.500030517578125
    4. '```' → logprob: -19.500030517578125
    5. '  ' → logprob: -19.875030517578125
    6. ' ' → logprob: -19.875030517578125
    7. '１' → logprob: -19.875030517578125
    8. ')' → logprob: -19.937530517578125
    9. '(' → logprob: -20.062530517578125
    10. '   ' → logprob: -20.187530517578125

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10106083750724792
    2. ':' → logprob: -2.3510608673095703
    3. ',' → logprob: -7.97606086730957
    4. ' ):' → logprob: -8.10106086730957
    5. ')' → logprob: -8.97606086730957
    6. ' :' → logprob: -10.22606086730957
    7. '):
' → logprob: -10.85106086730957
    8. '+' → logprob: -12.60106086730957
    9. ' ' → logprob: -12.85106086730957
    10. '+:' → logprob: -12.85106086730957

Token 33: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8471193313598633
    2. '   ' → logprob: -1.3471193313598633
    3. ':' → logprob: -1.4721193313598633
    4. ' for' → logprob: -3.2221193313598633
    5. '<|end|>' → logprob: -3.7221193313598633
    6. '\t' → logprob: -5.222119331359863
    7. 'for' → logprob: -5.847119331359863
    8. '  ' → logprob: -6.097119331359863
    9. ' :' → logprob: -6.222119331359863
    10. '<|end|>' → logprob: -7.222119331359863

Token 34: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4993683397769928
    2. 'for' (adapté à ' for') → logprob: -0.9993683099746704
    3. ' ' → logprob: -4.124368190765381
    4. '   ' → logprob: -4.999368190765381
    5. 'd' → logprob: -7.749368190765381
    6. 'range' → logprob: -7.999368190765381
    7. ':' → logprob: -8.499368667602539
    8. '  ' → logprob: -8.624368667602539
    9. '	for' → logprob: -8.749368667602539
    10. 'if' → logprob: -8.999368667602539

Token 35: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.15376806259155273
    2. 'd' → logprob: -2.2787680625915527
    3. ' j' → logprob: -3.5287680625915527
    4. ' d' → logprob: -5.403768062591553
    5. 'range' → logprob: -5.403768062591553
    6. ' range' → logprob: -7.903768062591553
    7. 'k' → logprob: -8.403768539428711
    8. 'a' → logprob: -8.653768539428711
    9. 'D' → logprob: -8.778768539428711
    10. '_j' → logprob: -8.903768539428711

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027187373489141464
    2. 'in' → logprob: -3.6521873474121094
    3. ' ' → logprob: -7.152187347412109
    4. '  ' → logprob: -10.15218734741211
    5. 'range' → logprob: -10.27718734741211
    6. '   ' → logprob: -11.65218734741211
    7. 'space' → logprob: -12.52718734741211
    8. '(' → logprob: -12.77718734741211
    9. 'n' → logprob: -12.77718734741211
    10. ')' → logprob: -13.15218734741211

Token 37: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8878119587898254
    2. '(' → logprob: -1.0128118991851807
    3. '1' → logprob: -1.6378118991851807
    4. '2' → logprob: -4.38781213760376
    5. '(range' → logprob: -5.26281213760376
    6. ' range' → logprob: -5.38781213760376
    7. '10' → logprob: -5.88781213760376
    8. '(D' → logprob: -6.01281213760376
    9. '4' → logprob: -7.01281213760376
    10. '11' → logprob: -7.51281213760376

Token 38: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001111639547161758
    2. '(D' → logprob: -7.0011115074157715
    3. '(i' → logprob: -8.62611198425293
    4. '(M' → logprob: -11.87611198425293
    5. '(s' → logprob: -12.62611198425293
    6. '(d' → logprob: -12.75111198425293
    7. '((' → logprob: -13.00111198425293
    8. ' (' → logprob: -13.62611198425293
    9. '1' → logprob: -13.75111198425293
    10. '(-' → logprob: -14.75111198425293

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01893572509288788
    2. 'D' → logprob: -4.268935680389404
    3. '10' → logprob: -6.143935680389404
    4. '0' → logprob: -7.143935680389404
    5. 'i' → logprob: -7.393935680389404
    6. '2' → logprob: -7.643935680389404
    7. '(' → logprob: -8.268936157226562
    8. '(D' → logprob: -9.018936157226562
    9. 'M' → logprob: -9.393936157226562
    10. ' ' → logprob: -9.768936157226562

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002517277142032981
    2. ' ,' → logprob: -6.002517223358154
    3. ',D' → logprob: -10.377517700195312
    4. ' ' → logprob: -13.502517700195312
    5. '2' → logprob: -13.877517700195312
    6. 'D' → logprob: -14.002517700195312
    7. '1' → logprob: -14.002517700195312
    8. ',i' → logprob: -14.002517700195312
    9. ',d' → logprob: -14.002517700195312
    10. '0' → logprob: -14.252517700195312

Token 41: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.026946870610117912
    2. ' D' → logprob: -3.776946783065796
    3. '10' → logprob: -6.401947021484375
    4. ' min' → logprob: -7.151947021484375
    5. 'min' → logprob: -7.276947021484375
    6. ' ' → logprob: -9.026947021484375
    7. '31' → logprob: -9.276947021484375
    8. '100' → logprob: -9.651947021484375
    9. 'd' → logprob: -10.026947021484375
    10. 'i' → logprob: -10.026947021484375

Token 42: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740866422653198
    2. '+' → logprob: -0.9740866422653198
    3. '):' → logprob: -12.47408676147461
    4. '):
' → logprob: -13.22408676147461
    5. ')' → logprob: -13.84908676147461
    6. '1' → logprob: -13.97408676147461
    7. ' ' → logprob: -14.22408676147461
    8. ',' → logprob: -15.34908676147461
    9. '0' → logprob: -15.97408676147461
    10. '   ' → logprob: -16.09908676147461

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001443449524231255
    2. ' ' → logprob: -6.626443386077881
    3. '+' → logprob: -9.126443862915039
    4. '2' → logprob: -13.376443862915039
    5. '11' → logprob: -13.501443862915039
    6. 'i' → logprob: -13.751443862915039
    7. ' +' → logprob: -13.876443862915039
    8. '31' → logprob: -14.501443862915039
    9. '   ' → logprob: -14.501443862915039
    10. '```' → logprob: -14.688943862915039

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39530470967292786
    2. '32' → logprob: -1.1453046798706055
    3. 'i' → logprob: -6.1453046798706055
    4. '10' → logprob: -6.3953046798706055
    5. '2' → logprob: -7.0203046798706055
    6. '31' → logprob: -7.1453046798706055
    7. '11' → logprob: -7.6453046798706055
    8. '+' → logprob: -7.7703046798706055
    9. '```' → logprob: -7.7703046798706055
    10. '100' → logprob: -8.020304679870605

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04618428647518158
    2. ':' → logprob: -3.7961843013763428
    3. '):
' → logprob: -3.7961843013763428
    4. ')' → logprob: -9.546184539794922
    5. '):
' → logprob: -9.796184539794922
    6. ' ):' → logprob: -9.921184539794922
    7. ':
' → logprob: -11.046184539794922
    8. '   ' → logprob: -11.171184539794922
    9. ' ):
' → logprob: -12.546184539794922
    10. ' :' → logprob: -12.796184539794922

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05846143886446953
    2. ':' → logprob: -3.1834614276885986
    3. '   ' → logprob: -4.933461666107178
    4. '    ' → logprob: -5.683461666107178
    5. ' ' → logprob: -6.308461666107178
    6. ' :' → logprob: -7.433461666107178
    7. 'if' → logprob: -8.05846118927002
    8. '):' → logprob: -8.18346118927002
    9. ',' → logprob: -8.68346118927002
    10. '<|end|>' → logprob: -8.68346118927002

Token 47: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4367079734802246
    2. 's' → logprob: -2.3117079734802246
    3. 'x' → logprob: -2.6867079734802246
    4. '           ' → logprob: -3.1867079734802246
    5. ' if' → logprob: -3.1867079734802246
    6. 'num' → logprob: -3.6867079734802246
    7. 'val' → logprob: -4.186707973480225
    8. 'n' → logprob: -4.186707973480225
    9. 'sq' → logprob: -4.561707973480225
    10. 'd' → logprob: -4.811707973480225

Token 48: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24851353466510773
    2. ' i' → logprob: -2.2485134601593018
    3. 'j' → logprob: -2.7485134601593018
    4. 'int' → logprob: -3.8735134601593018
    5. ' j' → logprob: -4.873513698577881
    6. 'sqrt' → logprob: -4.998513698577881
    7. ' ' → logprob: -5.748513698577881
    8. 'str' → logprob: -5.998513698577881
    9. ' (' → logprob: -6.123513698577881
    10. '(' → logprob: -6.498513698577881

Token 49: ' //' (ID: 602)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.36872562766075134
    2. ' %' → logprob: -1.8687256574630737
    3. '>=' → logprob: -2.868725538253784
    4. '==' → logprob: -2.868725538253784
    5. ' ==' → logprob: -3.743725538253784
    6. ' >=' → logprob: -4.618725776672363
    7. '%i' → logprob: -5.993725776672363
    8. '>' → logprob: -6.118725776672363
    9. '**' → logprob: -7.118725776672363
    10. ' >' → logprob: -8.368725776672363

Token 50: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5319798588752747
    2. '10' → logprob: -0.9069798588752747
    3. 'sqrt' → logprob: -5.031980037689209
    4. ' ' → logprob: -7.531980037689209
    5. '100' → logprob: -7.656980037689209
    6. '(s' → logprob: -8.40697956085205
    7. ' i' → logprob: -8.78197956085205
    8. '(' → logprob: -9.40697956085205
    9. '(i' → logprob: -9.40697956085205
    10. 's' → logprob: -9.53197956085205

Token 51: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009046572260558605
    2. 'i' → logprob: -4.88404655456543
    3. '100' → logprob: -6.63404655456543
    4. ' ' → logprob: -9.88404655456543
    5. 'sqrt' → logprob: -9.88404655456543
    6. '11' → logprob: -11.88404655456543
    7. '1' → logprob: -12.38404655456543
    8. '(' → logprob: -12.88404655456543
    9. '(i' → logprob: -13.63404655456543
    10. '(s' → logprob: -13.75904655456543

Token 52: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8472128510475159
    2. ' ==' → logprob: -1.097212791442871
    3. '!=' → logprob: -2.847212791442871
    4. '>' → logprob: -3.222212791442871
    5. ' !=' → logprob: -3.222212791442871
    6. ' >' → logprob: -3.222212791442871
    7. '>=' → logprob: -3.347212791442871
    8. ' >=' → logprob: -4.597212791442871
    9. ' and' → logprob: -4.972212791442871
    10. '<=' → logprob: -5.722212791442871

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22551965713500977
    2. '2' → logprob: -1.6005196571350098
    3. '10' → logprob: -10.100519180297852
    4. ' ' → logprob: -10.475519180297852
    5. '3' → logprob: -11.600519180297852
    6. 'j' → logprob: -12.100519180297852
    7. '   ' → logprob: -12.475519180297852
    8. '```' → logprob: -12.725519180297852
    9. 'i' → logprob: -12.913019180297852
    10. '4' → logprob: -13.288019180297852

Token 54: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38762471079826355
    2. '2' → logprob: -1.137624740600586
    3. 'j' → logprob: -7.762624740600586
    4. '10' → logprob: -9.137624740600586
    5. '3' → logprob: -9.762624740600586
    6. 'i' → logprob: -9.762624740600586
    7. ' ' → logprob: -9.887624740600586
    8. 's' → logprob: -11.012624740600586
    9. '   ' → logprob: -11.512624740600586
    10. '4' → logprob: -11.762624740600586

Token 55: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6333706974983215
    2. ' and' → logprob: -0.7583706974983215
    3. ':' → logprob: -7.383370876312256
    4. ':
' → logprob: -9.258370399475098
    5. '           ' → logprob: -11.383370399475098
    6. ' ' → logprob: -11.383370399475098
    7. '0' → logprob: -11.633370399475098
    8. '       ' → logprob: -11.883370399475098
    9. '   ' → logprob: -12.883370399475098
    10. ' :' → logprob: -13.008370399475098

Token 56: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03994034603238106
    2. 'i' → logprob: -4.414940357208252
    3. '(j' → logprob: -4.539940357208252
    4. ' j' → logprob: -4.789940357208252
    5. 'sqrt' → logprob: -5.789940357208252
    6. 'int' → logprob: -6.789940357208252
    7. '           ' → logprob: -6.914940357208252
    8. ' (' → logprob: -7.414940357208252
    9. '       ' → logprob: -7.539940357208252
    10. '(i' → logprob: -7.914940357208252

Token 57: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8602495789527893
    2. '%' → logprob: -1.2352495193481445
    3. ' %' → logprob: -1.6102495193481445
    4. '==' → logprob: -2.4852495193481445
    5. '%i' → logprob: -6.7352495193481445
    6. ' ' → logprob: -7.7352495193481445
    7. '%s' → logprob: -8.235249519348145
    8. '%x' → logprob: -8.735249519348145
    9. ' //' → logprob: -8.735249519348145
    10. '%d' → logprob: -8.860249519348145

Token 58: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09141362458467484
    2. ' ' → logprob: -2.466413736343384
    3. '(' → logprob: -6.216413497924805
    4. ' (' → logprob: -8.466413497924805
    5. 'i' → logprob: -9.341413497924805
    6. '100' → logprob: -9.966413497924805
    7. '(i' → logprob: -10.091413497924805
    8. '1' → logprob: -10.966413497924805
    9. '  ' → logprob: -11.716413497924805
    10. ' i' → logprob: -11.966413497924805

Token 59: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004336595069617033
    2. 'j' → logprob: -5.879336357116699
    3. 'i' → logprob: -6.879336357116699
    4. 'sqrt' → logprob: -8.6293363571167
    5. ' ' → logprob: -9.0043363571167
    6. '11' → logprob: -9.6293363571167
    7. '5' → logprob: -10.1293363571167
    8. '(' → logprob: -10.6293363571167
    9. '100' → logprob: -10.6293363571167
    10. '20' → logprob: -11.8793363571167

Token 60: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.628528356552124
    2. '!=' → logprob: -1.753528356552124
    3. '>=' → logprob: -2.003528356552124
    4. ' ==' → logprob: -2.253528356552124
    5. ' !=' → logprob: -3.753528356552124
    6. '>' → logprob: -4.878528594970703
    7. ' >=' → logprob: -4.878528594970703
    8. 'and' → logprob: -5.128528594970703
    9. ' and' → logprob: -5.378528594970703
    10. '0' → logprob: -6.503528594970703

Token 61: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.041051361709833145
    2. 'j' → logprob: -4.166051387786865
    3. 'i' → logprob: -4.166051387786865
    4. '1' → logprob: -4.916051387786865
    5. '0' → logprob: -6.791051387786865
    6. ' ' → logprob: -7.791051387786865
    7. '(i' → logprob: -9.291050910949707
    8. 'sqrt' → logprob: -9.916050910949707
    9. '(' → logprob: -10.541050910949707
    10. 'int' → logprob: -10.666050910949707

Token 62: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006698915269225836
    2. 'j' → logprob: -6.006699085235596
    3. '1' → logprob: -6.131699085235596
    4. 'i' → logprob: -6.756699085235596
    5. ' ' → logprob: -7.381699085235596
    6. '0' → logprob: -8.756698608398438
    7. '3' → logprob: -10.881698608398438
    8. '5' → logprob: -11.506698608398438
    9. '   ' → logprob: -11.506698608398438
    10. 's' → logprob: -11.631698608398438

Token 63: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.027349082753062248
    2. 'and' → logprob: -3.9023489952087402
    3. ':' → logprob: -5.02734899520874
    4. ':
' → logprob: -9.527349472045898
    5. '           ' → logprob: -10.152349472045898
    6. '       ' → logprob: -10.277349472045898
    7. ' :' → logprob: -10.402349472045898
    8. ' ' → logprob: -11.027349472045898
    9. '   ' → logprob: -11.527349472045898
    10. '	and' → logprob: -11.652349472045898

Token 64: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19546358287334442
    2. '           ' → logprob: -2.0704636573791504
    3. 'and' → logprob: -3.8204636573791504
    4. ':' → logprob: -3.9454636573791504
    5. ':
' → logprob: -4.94546365737915
    6. '       ' → logprob: -6.19546365737915
    7. '          ' → logprob: -8.570463180541992
    8. '               ' → logprob: -8.570463180541992
    9. ' ' → logprob: -9.195463180541992
    10. ' :' → logprob: -9.570463180541992

Token 65: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3991469442844391
    2. '               ' → logprob: -1.7741469144821167
    3. '           ' → logprob: -2.8991470336914062
    4. 'x' → logprob: -3.1491470336914062
    5. ' if' → logprob: -3.7741470336914062
    6. 'a' → logprob: -4.899147033691406
    7. 's' → logprob: -5.024147033691406
    8. 'i' → logprob: -5.149147033691406
    9. ' x' → logprob: -5.649147033691406
    10. '                   ' → logprob: -6.274147033691406

Token 66: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.976495087146759
    2. '(s' → logprob: -1.2264950275421143
    3. 'sqrt' → logprob: -2.1014950275421143
    4. '(i' → logprob: -2.8514950275421143
    5. ' i' → logprob: -3.2264950275421143
    6. ' (' → logprob: -3.2264950275421143
    7. 'int' → logprob: -3.3514950275421143
    8. ' sqrt' → logprob: -4.476495265960693
    9. 'j' → logprob: -5.226495265960693
    10. ' int' → logprob: -5.226495265960693

Token 67: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7649275064468384
    2. 'sqrt' → logprob: -0.7649275064468384
    3. '(s' → logprob: -3.139927387237549
    4. 'j' → logprob: -5.014927387237549
    5. '(i' → logprob: -5.139927387237549
    6. 's' → logprob: -5.264927387237549
    7. 'int' → logprob: -6.139927387237549
    8. '           ' → logprob: -6.264927387237549
    9. ' sqrt' → logprob: -6.639927387237549
    10. ' (' → logprob: -7.514927387237549

Token 68: ' //' (ID: 602)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7205049991607666
    2. ' ==' → logprob: -0.9705049991607666
    3. '//' → logprob: -2.3455049991607666
    4. ' //' → logprob: -3.3455049991607666
    5. ')' → logprob: -6.3455047607421875
    6. '%' → logprob: -7.9705047607421875
    7. ' ' → logprob: -8.095504760742188
    8. ' %' → logprob: -8.095504760742188
    9. '   ' → logprob: -8.720504760742188
    10. ')==' → logprob: -9.095504760742188

Token 69: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0016494720475748181
    2. ' ' → logprob: -6.501649379730225
    3. '100' → logprob: -9.126649856567383
    4. ')' → logprob: -10.876649856567383
    5. '   ' → logprob: -12.251649856567383
    6. '1' → logprob: -12.251649856567383
    7. '  ' → logprob: -13.376649856567383
    8. '%' → logprob: -13.876649856567383
    9. '```' → logprob: -13.876649856567383
    10. 'i' → logprob: -14.189149856567383

Token 70: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00025561772054061294
    2. ' ' → logprob: -9.250255584716797
    3. 'i' → logprob: -9.500255584716797
    4. '%' → logprob: -10.500255584716797
    5. ')' → logprob: -10.500255584716797
    6. '100' → logprob: -11.125255584716797
    7. '   ' → logprob: -12.750255584716797
    8. '1' → logprob: -13.125255584716797
    9. 'sqrt' → logprob: -13.125255584716797
    10. ')%' → logprob: -13.375255584716797

Token 71: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47553250193595886
    2. ' *' → logprob: -0.9755325317382812
    3. ')' → logprob: -6.850532531738281
    4. ')*' → logprob: -8.225532531738281
    5. ' ' → logprob: -10.225532531738281
    6. '+' → logprob: -10.475532531738281
    7. '*)' → logprob: -10.975532531738281
    8. ' +' → logprob: -11.475532531738281
    9. ' )' → logprob: -11.725532531738281
    10. '**' → logprob: -11.725532531738281

Token 72: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31331807374954224
    2. ' *' → logprob: -1.3133180141448975
    3. '*j' → logprob: -11.063318252563477
    4. '**' → logprob: -11.313318252563477
    5. '!=' → logprob: -11.438318252563477
    6. '*i' → logprob: -11.813318252563477
    7. ' ' → logprob: -12.188318252563477
    8. ' !=' → logprob: -13.063318252563477
    9. '*s' → logprob: -14.313318252563477
    10. '*(' → logprob: -14.438318252563477

Token 73: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.014386437833309174
    2. ' (' → logprob: -4.3893866539001465
    3. 'j' → logprob: -7.0143866539001465
    4. '(' → logprob: -7.2643866539001465
    5. '10' → logprob: -8.764386177062988
    6. '           ' → logprob: -10.389386177062988
    7. ' j' → logprob: -10.639386177062988
    8. ' ' → logprob: -11.264386177062988
    9. '(i' → logprob: -11.389386177062988
    10. '0' → logprob: -12.139386177062988

Token 74: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0626499131321907
    2. ' j' → logprob: -3.062649965286255
    3. '(j' → logprob: -4.312649726867676
    4. ' (' → logprob: -7.687649726867676
    5. '           ' → logprob: -10.312649726867676
    6. '(' → logprob: -10.562649726867676
    7. ')' → logprob: -10.937649726867676
    8. ' ' → logprob: -11.937649726867676
    9. '[j' → logprob: -12.312649726867676
    10. '<|end|>' → logprob: -12.937649726867676

Token 75: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.52266526222229
    2. ' %' → logprob: -1.64766526222229
    3. '%' → logprob: -2.77266526222229
    4. ' ==' → logprob: -3.27266526222229
    5. ' %)' → logprob: -3.27266526222229
    6. '%)' → logprob: -3.52266526222229
    7. ' )' → logprob: -4.147665023803711
    8. ')%' → logprob: -4.147665023803711
    9. ')==' → logprob: -5.147665023803711
    10. '<|end|>' → logprob: -5.522665023803711

Token 76: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0010337610729038715
    2. ' ' → logprob: -6.876033782958984
    3. '```' → logprob: -15.126033782958984
    4. '  ' → logprob: -16.001033782958984
    5. '1' → logprob: -16.376033782958984
    6. ')' → logprob: -16.376033782958984
    7. '100' → logprob: -16.501033782958984
    8. '   ' → logprob: -16.501033782958984
    9. '           ' → logprob: -16.876033782958984
    10. '         ' → logprob: -17.001033782958984

Token 77: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. '1' → logprob: -15.750001907348633
    4. ')' → logprob: -16.250001907348633
    5. '```' → logprob: -16.250001907348633
    6. '१०' → logprob: -17.312501907348633
    7. '100' → logprob: -17.500001907348633
    8. '۱۰' → logprob: -17.750001907348633
    9. '``' → logprob: -18.187501907348633
    10. '  ' → logprob: -18.375001907348633

Token 78: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.737237274646759
    2. ')' → logprob: -1.1122372150421143
    3. ' ==' → logprob: -1.7372372150421143
    4. ')==' → logprob: -4.237237453460693
    5. ' )' → logprob: -6.987237453460693
    6. '<=' → logprob: -7.362237453460693
    7. ' <=' → logprob: -7.737237453460693
    8. '>=' → logprob: -9.362236976623535
    9. '=' → logprob: -9.862236976623535
    10. ')<=' → logprob: -9.987236976623535

Token 79: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22676189243793488
    2. ' ==' → logprob: -1.6017619371414185
    3. '<=' → logprob: -6.976761817932129
    4. ' <=' → logprob: -8.226761817932129
    5. '=' → logprob: -9.726761817932129
    6. '===' → logprob: -10.476761817932129
    7. ' ' → logprob: -11.476761817932129
    8. '>=' → logprob: -11.476761817932129
    9. ')==' → logprob: -11.476761817932129
    10. '==
' → logprob: -11.601761817932129

Token 80: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.872261317563243e-05
    2. ' i' → logprob: -9.750059127807617
    3. '	i' → logprob: -15.875059127807617
    4. ' ' → logprob: -16.375059127807617
    5. '   ' → logprob: -16.500059127807617
    6. '           ' → logprob: -16.750059127807617
    7. ''i' → logprob: -18.250059127807617
    8. '  ' → logprob: -18.375059127807617
    9. '```' → logprob: -19.125059127807617
    10. '<|end|>' → logprob: -19.125059127807617

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04864981397986412
    2. ':
' → logprob: -3.048649787902832
    3. ':
' → logprob: -10.048649787902832
    4. ' :' → logprob: -11.173649787902832
    5. ' :
' → logprob: -13.548649787902832
    6. '   ' → logprob: -13.673649787902832
    7. ':

' → logprob: -14.048649787902832
    8. '):' → logprob: -14.673649787902832
    9. '       ' → logprob: -15.423649787902832
    10. ' and' → logprob: -15.423649787902832

Token 82: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027166146785020828
    2. '           ' → logprob: -3.6521661281585693
    3. 'ans' → logprob: -7.402166366577148
    4. ' ans' → logprob: -8.777166366577148
    5. '```' → logprob: -10.527166366577148
    6. '                   ' → logprob: -10.902166366577148
    7. '       ' → logprob: -11.402166366577148
    8. '              ' → logprob: -11.527166366577148
    9. '            
' → logprob: -11.902166366577148
    10. '             ' → logprob: -12.152166366577148

Token 83: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.3624594509601593
    2. ' ans' → logprob: -1.487459421157837
    3. '                   ' → logprob: -3.237459421157837
    4. '               ' → logprob: -3.612459421157837
    5. '           ' → logprob: -4.487459659576416
    6. '   ' → logprob: -8.487459182739258
    7. '	ans' → logprob: -8.487459182739258
    8. '```' → logprob: -9.862459182739258
    9. ' ' → logprob: -10.112459182739258
    10. '       ' → logprob: -10.862459182739258

Token 84: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1602444350719452
    2. ' +=' → logprob: -1.9102444648742676
    3. '+' → logprob: -11.16024398803711
    4. '=' → logprob: -12.41024398803711
    5. ']+=' → logprob: -13.41024398803711
    6. '+='' → logprob: -15.28524398803711
    7. '+="' → logprob: -15.91024398803711
    8. ' =' → logprob: -17.28524398803711
    9. '+=(' → logprob: -17.28524398803711
    10. ' ' → logprob: -18.28524398803711

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '１' → logprob: -18.2500057220459
    4. '   ' → logprob: -18.8750057220459
    5. '۱' → logprob: -19.6250057220459
    6. '<|end|>' → logprob: -20.1250057220459
    7. '```' → logprob: -20.2500057220459
    8. '१' → logprob: -20.5000057220459
    9. '১' → logprob: -20.9375057220459
    10. '  ' → logprob: -21.3125057220459

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '１' → logprob: -20.125
    4. '   ' → logprob: -20.625
    5. '۱' → logprob: -21.75
    6. '<|end|>' → logprob: -22.0
    7. '```' → logprob: -22.0
    8. '१' → logprob: -22.375
    9. '  ' → logprob: -22.5
    10. 'i' → logprob: -22.625

Token 87: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001509739668108523
    2. '
' → logprob: -6.501509666442871
    3. ' print' → logprob: -12.751509666442871
    4. '
' → logprob: -13.126509666442871
    5. '\n' → logprob: -13.626509666442871
    6. '```' → logprob: -15.376509666442871
    7. ' 
' → logprob: -15.501509666442871
    8. '  
' → logprob: -15.626509666442871
    9. '(print' → logprob: -15.626509666442871
    10. '

' → logprob: -15.626509666442871

Token 88: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005564896273426712
    2. '
' → logprob: -7.500556468963623
    3. ' print' → logprob: -13.625556945800781
    4. '
' → logprob: -14.375556945800781
    5. '\n' → logprob: -14.375556945800781
    6. '```' → logprob: -15.000556945800781
    7. ' 
' → logprob: -15.750556945800781
    8. ')
' → logprob: -15.750556945800781
    9. '  
' → logprob: -16.00055694580078
    10. '\' → logprob: -16.12555694580078

Token 89: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.12693430483341217
    2. '(' → logprob: -2.126934289932251
    3. 'ans' → logprob: -12.751934051513672
    4. '('' → logprob: -13.751934051513672
    5. '("("' → logprob: -14.376934051513672
    6. '(answer' → logprob: -14.501934051513672
    7. '((' → logprob: -15.376934051513672
    8. '(abs' → logprob: -15.501934051513672
    9. '(
' → logprob: -15.751934051513672
    10. ' (' → logprob: -15.751934051513672

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.125
    3. ')
' → logprob: -16.75
    4. ')`' → logprob: -17.375
    5. '))' → logprob: -18.375
    6. '）' → logprob: -19.75
    7. '),' → logprob: -20.125
    8. ')}' → logprob: -20.125
    9. '')' → logprob: -20.375
    10. '()' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 88
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 40.91%
Précision (top 10): 92.05%
================================================================================
