================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin, stdout, exit

def main():
    n, k = map(int, stdin.readline().split())
    k_max = (n-1)*(n-2)//2
    
    if k > k_max:
        stdout.write("-1\n")
        exit()
    
    m = n - 1 + k_max - k
    stdout.write(f"{m}\n")
    
    base_edges = ((1, i) for i in range(2, n+1))
    stdout.writelines(f"{u} {v}\n" for u, v in base_edges)
    
    pairs_needed = k_max - k
    def extra_edges():
        cnt = 0
        for u in range(2, n):
            for v in range(u+1, n+1):
                if cnt >= pairs_needed:
                    return
                yield (u, v)
                cnt += 1

    stdout.writelines(f"{u} {v}\n" for u, v in extra_edges())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.08520080149173737
    2. ' argv' → logprob: -2.710200786590576
    3. 'exit' → logprob: -4.585200786590576
    4. ' exit' → logprob: -5.835200786590576
    5. 'stdout' → logprob: -6.960200786590576
    6. 'path' → logprob: -7.710200786590576
    7. 'stdin' → logprob: -8.210201263427734
    8. 'version' → logprob: -9.085201263427734
    9. 'import' → logprob: -9.460201263427734
    10. ' path' → logprob: -10.085201263427734

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05420396849513054
    2. '.readline' → logprob: -3.804203987121582
    3. '\n' → logprob: -3.929203987121582
    4. '
' → logprob: -5.554203987121582
    5. '```' → logprob: -6.054203987121582
    6. '.read' → logprob: -6.929203987121582
    7. 'import' → logprob: -6.929203987121582
    8. 'newline' → logprob: -7.429203987121582
    9. '\' → logprob: -7.679203987121582
    10. '' → logprob: -8.304203987121582

Token 5: ' stdout' (ID: 48014)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.007005562540143728
    2. ' stdout' → logprob: -5.00700569152832
    3. 'stderr' → logprob: -8.25700569152832
    4. 'argv' → logprob: -10.75700569152832
    5. '.stdout' → logprob: -13.13200569152832
    6. 'set' → logprob: -13.63200569152832
    7. 'exit' → logprob: -14.00700569152832
    8. 'stdin' → logprob: -14.13200569152832
    9. ' ' → logprob: -14.25700569152832
    10. 'std' → logprob: -14.25700569152832

Token 6: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08396089822053909
    2. '\n' → logprob: -2.958961009979248
    3. '.readline' → logprob: -4.208961009979248
    4. '
' → logprob: -5.458961009979248
    5. '```' → logprob: -5.958961009979248
    6. 'newline' → logprob: -6.083961009979248
    7. '\' → logprob: -6.333961009979248
    8. 'import' → logprob: -6.833961009979248
    9. '' → logprob: -8.33396053314209
    10. '.read' → logprob: -8.33396053314209

Token 7: ' exit' (ID: 10654)
  Prédit: 'stderr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stderr' → logprob: -0.0724450871348381
    2. ' stderr' → logprob: -2.9474451541900635
    3. 'set' → logprob: -4.447444915771484
    4. 'argv' → logprob: -6.572444915771484
    5. ' set' → logprob: -6.572444915771484
    6. ' argv' → logprob: -7.322444915771484
    7. ' ' → logprob: -7.572444915771484
    8. 'stdout' → logprob: -7.697444915771484
    9. 'exit' → logprob: -7.822444915771484
    10. 'version' → logprob: -8.447444915771484

Token 8: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9040634632110596
    2. '\n' → logprob: -1.2790634632110596
    3. '```' → logprob: -2.1540634632110596
    4. '\' → logprob: -2.5290634632110596
    5. '
' → logprob: -3.0290634632110596
    6. 'import' → logprob: -3.9040634632110596
    7. '<|end|>' → logprob: -3.9040634632110596
    8. '' → logprob: -5.0290632247924805
    9. 'newline' → logprob: -5.0290632247924805
    10. ',' → logprob: -5.9040632247924805

Token 9: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0563784837722778
    2. '\n' → logprob: -1.1813784837722778
    3. '```' → logprob: -2.3063783645629883
    4. '
' → logprob: -2.6813783645629883
    5. 'newline' → logprob: -3.1813783645629883
    6. '\' → logprob: -3.3063783645629883
    7. ':' → logprob: -3.6813783645629883
    8. 'import' → logprob: -4.056378364562988
    9. ',' → logprob: -4.431378364562988
    10. '.readline' → logprob: -4.681378364562988

Token 10: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.030937040224671364
    2. ' main' → logprob: -4.405937194824219
    3. '_' → logprob: -4.530937194824219
    4. ' _' → logprob: -5.405937194824219
    5. ' read' → logprob: -6.905937194824219
    6. ' space' → logprob: -7.405937194824219
    7. ' my' → logprob: -8.280937194824219
    8. ' hello' → logprob: -8.780937194824219
    9. '  ' → logprob: -9.155937194824219
    10. ' parse' → logprob: -9.530937194824219

Token 11: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4331337511539459
    2. '(' → logprob: -1.0581337213516235
    3. '(:' → logprob: -6.058133602142334
    4. ':' → logprob: -6.558133602142334
    5. ' ():' → logprob: -7.933133602142334
    6. '(":' → logprob: -8.933134078979492
    7. '(
' → logprob: -9.558134078979492
    8. ' (' → logprob: -10.433134078979492
    9. '):' → logprob: -10.808134078979492
    10. '()' → logprob: -11.433134078979492

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009832946583628654
    2. ' ' → logprob: -5.259832859039307
    3. '    
' → logprob: -7.009832859039307
    4. '    ' → logprob: -7.134832859039307
    5. 'n' → logprob: -7.884832859039307
    6. '(stdin' → logprob: -8.009833335876465
    7. 'x' → logprob: -8.509833335876465
    8. 'input' → logprob: -8.509833335876465
    9. '  ' → logprob: -8.634833335876465
    10. ' readline' → logprob: -8.884833335876465

Token 13: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24243880808353424
    2. 'data' → logprob: -2.742438793182373
    3. 'pass' → logprob: -2.867438793182373
    4. 'for' → logprob: -3.742438793182373
    5. 'n' (adapté à ' n') → logprob: -4.117438793182373
    6. '    ' → logprob: -4.367438793182373
    7. 'x' → logprob: -4.367438793182373
    8. 'i' → logprob: -5.367438793182373
    9. 'input' → logprob: -5.742438793182373
    10. ' pass' → logprob: -5.992438793182373

Token 14: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06256280094385147
    2. '=' → logprob: -2.8125627040863037
    3. ' ' → logprob: -7.687562942504883
    4. ',' → logprob: -9.562562942504883
    5. '  ' → logprob: -10.687562942504883
    6. '=int' → logprob: -11.312562942504883
    7. ')' → logprob: -11.812562942504883
    8. '.' → logprob: -12.062562942504883
    9. ' ,' → logprob: -12.437562942504883
    10. '   ' → logprob: -13.062562942504883

Token 15: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3786996901035309
    2. 'm' → logprob: -1.3786996603012085
    3. ' k' → logprob: -3.378699779510498
    4. ' =' → logprob: -4.253699779510498
    5. ' ' → logprob: -5.003699779510498
    6. '=' → logprob: -5.878699779510498
    7. 'k' → logprob: -6.253699779510498
    8. ' n' → logprob: -7.253699779510498
    9. 'input' → logprob: -7.378699779510498
    10. ' t' → logprob: -8.00369930267334

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048592709004879
    2. '=' → logprob: -3.0485928058624268
    3. ',' → logprob: -12.673592567443848
    4. ' ' → logprob: -13.298592567443848
    5. ' =
' → logprob: -16.048593521118164
    6. ')' → logprob: -16.423593521118164
    7. '=int' → logprob: -16.423593521118164
    8. ' =",' → logprob: -16.798593521118164
    9. ' =
' → logprob: -17.173593521118164
    10. '   ' → logprob: -17.173593521118164

Token 17: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0040882546454668045
    2. 'map' → logprob: -5.504088401794434
    3. ' list' → logprob: -12.254088401794434
    4. ' ' → logprob: -12.879088401794434
    5. '   ' → logprob: -14.254088401794434
    6. ' [' → logprob: -14.629088401794434
    7. '	map' → logprob: -14.754088401794434
    8. ' stdin' → logprob: -14.754088401794434
    9. '  ' → logprob: -15.879088401794434
    10. 'list' → logprob: -16.129087448120117

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.09573836624622345
    2. '(' → logprob: -2.470738410949707
    3. '(str' → logprob: -5.095738410949707
    4. '(stdin' → logprob: -7.845738410949707
    5. '(lambda' → logprob: -8.470738410949707
    6. '(input' → logprob: -10.345738410949707
    7. '(eval' → logprob: -12.720738410949707
    8. 'int' → logprob: -13.095738410949707
    9. '(std' → logprob: -13.345738410949707
    10. ' (' → logprob: -13.345738410949707

Token 19: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.0017317025922238827
    2. ')' → logprob: -7.001731872558594
    3. '(' → logprob: -7.376731872558594
    4. ',' → logprob: -9.001731872558594
    5. '(input' → logprob: -10.751731872558594
    6. 'stdin' → logprob: -10.876731872558594
    7. '(st' → logprob: -11.501731872558594
    8. '(stdout' → logprob: -12.001731872558594
    9. '(stderr' → logprob: -12.376731872558594
    10. '(std' → logprob: -13.126731872558594

Token 20: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.18185365200042725
    2. ' stdin' → logprob: -1.8068536520004272
    3. '(stdin' → logprob: -6.181853771209717
    4. '.stdin' → logprob: -10.556853294372559
    5. ')' → logprob: -11.556853294372559
    6. 'stdout' → logprob: -12.931853294372559
    7. 'input' → logprob: -13.806853294372559
    8. 'std' → logprob: -15.056853294372559
    9. 'stdlib' → logprob: -16.306854248046875
    10. ' )' → logprob: -16.306854248046875

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.68022444692906e-05
    2. '.read' → logprob: -10.125046730041504
    3. '.' → logprob: -12.250046730041504
    4. '().' → logprob: -13.250046730041504
    5. '.readlines' → logprob: -15.875046730041504
    6. '.stdin' → logprob: -17.62504768371582
    7. '.write' → logprob: -18.25004768371582
    8. ').' → logprob: -19.25004768371582
    9. ' .' → logprob: -19.37504768371582
    10. '.next' → logprob: -19.50004768371582

Token 22: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.39289313554763794
    2. '().' → logprob: -1.1428930759429932
    3. '()' → logprob: -5.142893314361572
    4. '()))' → logprob: -9.267892837524414
    5. ')' → logprob: -10.017892837524414
    6. ' ())' → logprob: -12.017892837524414
    7. '()),' → logprob: -12.517892837524414
    8. '(),' → logprob: -12.642892837524414
    9. '()]' → logprob: -13.017892837524414
    10. '());' → logprob: -13.142892837524414

Token 23: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06263580918312073
    2. 'split' → logprob: -2.812635898590088
    3. 'rstrip' → logprob: -7.312635898590088
    4. ' strip' → logprob: -15.06263542175293
    5. 'read' → logprob: -15.31263542175293
    6. ')' → logprob: -15.43763542175293
    7. ' split' → logprob: -16.93763542175293
    8. '(split' → logprob: -17.31263542175293
    9. 'str' → logprob: -17.43763542175293
    10. 'decode' → logprob: -17.56263542175293

Token 24: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011212162673473358
    2. '))' → logprob: -4.511212348937988
    3. '())' → logprob: -9.136212348937988
    4. '()' → logprob: -9.886212348937988
    5. '()))' → logprob: -13.261212348937988
    6. ')))' → logprob: -13.386212348937988
    7. '(' → logprob: -14.011212348937988
    8. '),' → logprob: -14.761212348937988
    9. ')
' → logprob: -14.886212348937988
    10. ' )' → logprob: -16.136211395263672

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26847586035728455
    2. ' ' → logprob: -2.7684757709503174
    3. '    
' → logprob: -3.6434757709503174
    4. ')' → logprob: -3.7684757709503174
    5. '\n' → logprob: -3.8934757709503174
    6. '\' → logprob: -4.1434760093688965
    7. '
' → logprob: -4.1434760093688965
    8. ' 
' → logprob: -4.2684760093688965
    9. '   
' → logprob: -4.3934760093688965
    10. '```' → logprob: -4.5184760093688965

Token 26: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4725762605667114
    2. 'a' → logprob: -2.097576141357422
    3. 'data' → logprob: -3.347576141357422
    4. 'd' → logprob: -3.597576141357422
    5. ' a' → logprob: -4.097576141357422
    6. 'for' → logprob: -4.222576141357422
    7. 'result' → logprob: -4.222576141357422
    8. 'if' → logprob: -4.472576141357422
    9. ' if' → logprob: -4.472576141357422
    10. 'count' → logprob: -4.597576141357422

Token 27: '_max' (ID: 13731)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5174795389175415
    2. ' %' → logprob: -1.1424795389175415
    3. '=' → logprob: -3.767479419708252
    4. ' %=' → logprob: -3.892479419708252
    5. ' =' → logprob: -4.392479419708252
    6. '-' → logprob: -4.517479419708252
    7. ' -=' → logprob: -5.892479419708252
    8. '>' → logprob: -6.017479419708252
    9. ')' → logprob: -6.392479419708252
    10. '**' → logprob: -6.517479419708252

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10122913122177124
    2. '=' → logprob: -2.351229190826416
    3. '_' → logprob: -7.351229190826416
    4. ',' → logprob: -8.976228713989258
    5. ' ' → logprob: -9.226228713989258
    6. ')' → logprob: -9.726228713989258
    7. '  ' → logprob: -10.476228713989258
    8. ' +=' → logprob: -11.476228713989258
    9. '   ' → logprob: -11.726228713989258
    10. ' _' → logprob: -12.101228713989258

Token 29: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8326154947280884
    2. 'min' → logprob: -1.5826154947280884
    3. ' n' → logprob: -1.9576154947280884
    4. 'k' → logprob: -2.332615375518799
    5. ' min' → logprob: -3.082615375518799
    6. '10' → logprob: -3.832615375518799
    7. 'max' → logprob: -4.332615375518799
    8. ' k' → logprob: -4.582615375518799
    9. ' ' → logprob: -4.707615375518799
    10. '2' → logprob: -5.082615375518799

Token 30: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19727163016796112
    2. ' n' → logprob: -2.0722715854644775
    3. 'k' → logprob: -3.5722715854644775
    4. '1' → logprob: -4.447271823883057
    5. ' k' → logprob: -5.822271823883057
    6. '10' → logprob: -5.947271823883057
    7. ')' → logprob: -6.197271823883057
    8. '2' → logprob: -6.572271823883057
    9. ' ' → logprob: -6.572271823883057
    10. ' (' → logprob: -6.947271823883057

Token 31: '-' (ID: 12)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8477014303207397
    2. '+' → logprob: -1.0977014303207397
    3. ' //' → logprob: -2.5977015495300293
    4. '-' → logprob: -2.7227015495300293
    5. ' -' → logprob: -2.8477015495300293
    6. ' *' → logprob: -3.9727015495300293
    7. ')' → logprob: -4.972701549530029
    8. '//' → logprob: -5.097701549530029
    9. '*' → logprob: -5.722701549530029
    10. ' )' → logprob: -5.722701549530029

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0071154143661260605
    2. ' ' → logprob: -5.132115364074707
    3. 'k' → logprob: -6.882115364074707
    4. '2' → logprob: -9.507115364074707
    5. ' k' → logprob: -9.882115364074707
    6. '   ' → logprob: -11.819615364074707
    7. '3' → logprob: -12.444615364074707
    8. '(' → logprob: -12.882115364074707
    9. ')' → logprob: -13.007115364074707
    10. '-' → logprob: -13.007115364074707

Token 33: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06784626841545105
    2. ')//' → logprob: -2.8178462982177734
    3. ')*' → logprob: -5.317846298217773
    4. ' )' → logprob: -8.317846298217773
    5. ')**' → logprob: -8.692846298217773
    6. ')>>' → logprob: -8.817846298217773
    7. ')*(' → logprob: -9.192846298217773
    8. '//' → logprob: -9.192846298217773
    9. '+' → logprob: -9.692846298217773
    10. ')/' → logprob: -11.067846298217773

Token 34: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03409213572740555
    2. ' n' → logprob: -4.659091949462891
    3. '(n' → logprob: -4.909091949462891
    4. ')n' → logprob: -4.909091949462891
    5. 'k' → logprob: -5.284091949462891
    6. ')' → logprob: -5.909091949462891
    7. ' (' → logprob: -7.784091949462891
    8. '2' → logprob: -8.15909194946289
    9. '1' → logprob: -8.40909194946289
    10. ' ' → logprob: -9.15909194946289

Token 35: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009545749635435641
    2. ' -' → logprob: -7.000954627990723
    3. ')' → logprob: -10.375954627990723
    4. '-)' → logprob: -11.625954627990723
    5. ')-' → logprob: -14.000954627990723
    6. '-k' → logprob: -14.000954627990723
    7. '```' → logprob: -14.750954627990723
    8. '<|end|>' → logprob: -15.375954627990723
    9. ' )' → logprob: -16.000953674316406
    10. ' ' → logprob: -16.250953674316406

Token 36: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01253802701830864
    2. '2' → logprob: -4.387537956237793
    3. ' ' → logprob: -11.762537956237793
    4. '   ' → logprob: -11.762537956237793
    5. '```' → logprob: -12.387537956237793
    6. '-' → logprob: -14.075037956237793
    7. '3' → logprob: -14.137537956237793
    8. '  ' → logprob: -14.200037956237793
    9. '    ' → logprob: -14.262537956237793
    10. 'k' → logprob: -14.575037956237793

Token 37: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.2917715609073639
    2. ')' → logprob: -1.4167715311050415
    3. '//' → logprob: -5.041771411895752
    4. ' )' → logprob: -5.666771411895752
    5. ')/' → logprob: -8.04177188873291
    6. ' //' → logprob: -8.29177188873291
    7. ')>>' → logprob: -11.66677188873291
    8. '")' → logprob: -11.79177188873291
    9. '   ' → logprob: -11.79177188873291
    10. ')#' → logprob: -11.91677188873291

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.349075556499884e-05
    2. '1' → logprob: -10.2500638961792
    3. ' ' → logprob: -10.5000638961792
    4. '3' → logprob: -16.000062942504883
    5. '```' → logprob: -16.750062942504883
    6. '6' → logprob: -16.875062942504883
    7. '   ' → logprob: -16.875062942504883
    8. '  ' → logprob: -17.062562942504883
    9. '4' → logprob: -17.187562942504883
    10. ' ' → logprob: -18.312562942504883

Token 39: '
    
' (ID: 15698)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5359944105148315
    2. '   ' → logprob: -1.2859944105148315
    3. 'if' → logprob: -2.410994529724121
    4. '
' → logprob: -4.285994529724121
    5. '    
' → logprob: -4.785994529724121
    6. '\n' → logprob: -5.285994529724121
    7. '<|end|>' → logprob: -5.410994529724121
    8. '+' → logprob: -5.535994529724121
    9. ' ' → logprob: -6.160994529724121
    10. '    ' → logprob: -6.285994529724121

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27606645226478577
    2. '
' → logprob: -1.9010664224624634
    3. '\n' → logprob: -3.401066541671753
    4. ' if' → logprob: -3.776066541671753
    5. '    
' → logprob: -4.151066303253174
    6. 'if' → logprob: -4.401066303253174
    7. ' 
' → logprob: -6.026066303253174
    8. '  
' → logprob: -6.276066303253174
    9. '   
' → logprob: -7.026066303253174
    10. '    ' → logprob: -7.276066303253174

Token 41: ' if' (ID: 538)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.14977259933948517
    2. ' if' → logprob: -2.2747726440429688
    3. 'if' (adapté à ' if') → logprob: -4.274772644042969
    4. '\' → logprob: -4.524772644042969
    5. '\r' → logprob: -5.649772644042969
    6. ' \' → logprob: -6.399772644042969
    7. ''\' → logprob: -6.524772644042969
    8. '   ' → logprob: -6.524772644042969
    9. '
' → logprob: -7.399772644042969
    10. '<|end|>' → logprob: -7.649772644042969

Token 42: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.01815931126475334
    2. 'k' → logprob: -4.01815938949585
    3. ' ' → logprob: -12.143158912658691
    4. '   ' → logprob: -13.643158912658691
    5. ' n' → logprob: -14.143158912658691
    6. '	k' → logprob: -14.768158912658691
    7. ' (' → logprob: -14.893158912658691
    8. ' ' → logprob: -14.893158912658691
    9. '(k' → logprob: -15.268158912658691
    10. '    ' → logprob: -15.643158912658691

Token 43: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5237125754356384
    2. ' >' → logprob: -0.8987125754356384
    3. '<' → logprob: -8.898712158203125
    4. ' <=' → logprob: -9.023712158203125
    5. ' ' → logprob: -9.148712158203125
    6. '<=' → logprob: -9.398712158203125
    7. ' <' → logprob: -9.898712158203125
    8. '==' → logprob: -10.523712158203125
    9. ' ==' → logprob: -11.523712158203125
    10. '=' → logprob: -11.773712158203125

Token 44: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5231584906578064
    2. 'k' → logprob: -0.8981584906578064
    3. '	k' → logprob: -10.648158073425293
    4. ' ' → logprob: -12.148158073425293
    5. '<|end|>' → logprob: -12.648158073425293
    6. '(k' → logprob: -13.898158073425293
    7. ' к' → logprob: -14.898158073425293
    8. '  ' → logprob: -15.273158073425293
    9. '   ' → logprob: -15.523158073425293
    10. '{k' → logprob: -15.773158073425293

Token 45: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00019603055261541158
    2. 'max' → logprob: -8.75019645690918
    3. '_' → logprob: -10.50019645690918
    4. ':' → logprob: -12.75019645690918
    5. ' _' → logprob: -13.50019645690918
    6. '_m' → logprob: -13.50019645690918
    7. '_:' → logprob: -13.75019645690918
    8. '_MAX' → logprob: -14.37519645690918
    9. '_ma' → logprob: -14.87519645690918
    10. '```' → logprob: -15.12519645690918

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006224881508387625
    2. ':
' → logprob: -8.125622749328613
    3. ' :' → logprob: -8.125622749328613
    4. ':return' → logprob: -11.250622749328613
    5. '):' → logprob: -11.375622749328613
    6. ' :
' → logprob: -13.500622749328613
    7. ':**' → logprob: -13.500622749328613
    8. '+:' → logprob: -14.750622749328613
    9. ' ):' → logprob: -15.000622749328613
    10. '>:' → logprob: -15.250622749328613

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6636497974395752
    2. '   ' → logprob: -1.1636497974395752
    3. ':' → logprob: -2.038649797439575
    4. ':
' → logprob: -3.288649797439575
    5. ' :' → logprob: -6.788649559020996
    6. ',' → logprob: -6.913649559020996
    7. ' :
' → logprob: -7.413649559020996
    8. '.' → logprob: -7.538649559020996
    9. 'stdout' → logprob: -7.663649559020996
    10. '):
' → logprob: -8.288649559020996

Token 48: ' stdout' (ID: 48014)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdout' (adapté à ' stdout') → logprob: -0.638166069984436
    2. '   ' → logprob: -0.888166069984436
    3. ' stdout' → logprob: -3.6381659507751465
    4. 'exit' → logprob: -4.1381659507751465
    5. '       ' → logprob: -4.7631659507751465
    6. '```' → logprob: -6.0131659507751465
    7. '    ' → logprob: -6.3881659507751465
    8. 'print' → logprob: -6.8881659507751465
    9. ' ' → logprob: -7.2631659507751465
    10. '  ' → logprob: -7.5131659507751465

Token 49: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.007648983504623175
    2. '.' → logprob: -4.882648944854736
    3. ' .' → logprob: -11.632649421691895
    4. '.put' → logprob: -11.757649421691895
    5. '.w' → logprob: -12.007649421691895
    6. '.readline' → logprob: -12.507649421691895
    7. '.append' → logprob: -13.382649421691895
    8. '.println' → logprob: -13.382649421691895
    9. '.Write' → logprob: -13.382649421691895
    10. '.print' → logprob: -13.507649421691895

Token 50: '("-' (ID: 27133)
  Prédit: '("-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("-' → logprob: -0.1546095907688141
    2. '("' → logprob: -2.2796096801757812
    3. '('-' → logprob: -3.6546096801757812
    4. '('' → logprob: -4.279609680175781
    5. '(' → logprob: -6.904609680175781
    6. '(str' → logprob: -8.779609680175781
    7. '(-' → logprob: -11.029609680175781
    8. '(f' → logprob: -11.279609680175781
    9. ' ("' → logprob: -12.404609680175781
    10. '"-' → logprob: -13.029609680175781

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.387458365177736e-05
    2. '"' → logprob: -9.500083923339844
    3. '11' → logprob: -13.625083923339844
    4. ' ' → logprob: -13.812583923339844
    5. '10' → logprob: -13.875083923339844
    6. '\n' → logprob: -14.062583923339844
    7. '
' → logprob: -14.875083923339844
    8. '\' → logprob: -15.250083923339844
    9. '

' → logprob: -15.312583923339844
    10. '۱' → logprob: -15.312583923339844

Token 52: '\n' (ID: 3392)
  Prédit: '\n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.013783697970211506
    2. '")' → logprob: -4.763783931732178
    3. '"\' → logprob: -5.763783931732178
    4. '\' → logprob: -7.138783931732178
    5. ')' → logprob: -7.263783931732178
    6. ')\' → logprob: -7.888783931732178
    7. '   ' → logprob: -10.26378345489502
    8. ')
' → logprob: -10.51378345489502
    9. '```' → logprob: -10.88878345489502
    10. '")
' → logprob: -11.13878345489502

Token 53: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.019287753850221634
    2. ')' → logprob: -4.394287586212158
    3. '")
' → logprob: -5.269287586212158
    4. '   ' → logprob: -6.644287586212158
    5. '       ' → logprob: -8.644288063049316
    6. ')")' → logprob: -9.519288063049316
    7. ')
' → logprob: -10.394288063049316
    8. '")
' → logprob: -11.394288063049316
    9. ')")
' → logprob: -12.019288063049316
    10. '')' → logprob: -13.019288063049316

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0700388103723526
    2. '   ' → logprob: -2.6950387954711914
    3. '<|end|>' → logprob: -10.695038795471191
    4. '    
' → logprob: -11.070038795471191
    5. '    ' → logprob: -11.445038795471191
    6. '        
' → logprob: -11.570038795471191
    7. ')' → logprob: -11.695038795471191
    8. '     ' → logprob: -11.695038795471191
    9. '```' → logprob: -12.320038795471191
    10. ' ' → logprob: -12.320038795471191

Token 55: ' exit' (ID: 10654)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010295925894752145
    2. 'exit' (adapté à ' exit') → logprob: -7.6260294914245605
    3. ' exit' → logprob: -8.501029968261719
    4. '   ' → logprob: -8.626029968261719
    5. 'return' → logprob: -9.251029968261719
    6. ' return' → logprob: -9.876029968261719
    7. ' ' → logprob: -12.001029968261719
    8. '	exit' → logprob: -12.751029968261719
    9. '```' → logprob: -14.376029968261719
    10. '     ' → logprob: -14.626029968261719

Token 56: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015859685838222504
    2. '(' → logprob: -4.265859603881836
    3. '()\' → logprob: -6.515859603881836
    4. '()
' → logprob: -9.265859603881836
    5. '()`' → logprob: -9.890859603881836
    6. ' ()' → logprob: -10.265859603881836
    7. '()(' → logprob: -11.140859603881836
    8. '()

' → logprob: -11.890859603881836
    9. '()"' → logprob: -12.140859603881836
    10. '()
' → logprob: -13.265859603881836

Token 57: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.47606799006462097
    2. '
' → logprob: -1.2260680198669434
    3. '   ' → logprob: -2.7260680198669434
    4. '  
' → logprob: -4.976068019866943
    5. '<|end|>' → logprob: -5.351068019866943
    6. '   
' → logprob: -5.726068019866943
    7. '\n' → logprob: -6.726068019866943
    8. '        
' → logprob: -6.976068019866943
    9. '    
    
' → logprob: -7.101068019866943
    10. ' 
' → logprob: -7.101068019866943

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04188120365142822
    2. '    
' → logprob: -3.2918810844421387
    3. 'stdout' → logprob: -5.666881084442139
    4. '
' → logprob: -9.166881561279297
    5. ' stdout' → logprob: -9.916881561279297
    6. '  
' → logprob: -9.916881561279297
    7. '    
    
' → logprob: -10.041881561279297
    8. '        
' → logprob: -10.291881561279297
    9. '```' → logprob: -10.666881561279297
    10. ' 
' → logprob: -10.791881561279297

Token 59: ' m' (ID: 284)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.01781473681330681
    2. '   ' → logprob: -4.767814636230469
    3. 'edges' → logprob: -5.517814636230469
    4. 'm' (adapté à ' m') → logprob: -6.392814636230469
    5. 'if' → logprob: -6.767814636230469
    6. 'else' → logprob: -7.267814636230469
    7. ' stdout' → logprob: -7.392814636230469
    8. '```' → logprob: -8.892814636230469
    9. 'stdin' → logprob: -8.892814636230469
    10. 'k' → logprob: -9.267814636230469

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1619957834482193
    2. '=' → logprob: -1.911995768547058
    3. 'ax' → logprob: -6.786995887756348
    4. '   ' → logprob: -8.036995887756348
    5. ' ' → logprob: -8.536995887756348
    6. '=[]' → logprob: -10.411995887756348
    7. '  ' → logprob: -11.286995887756348
    8. '=int' → logprob: -11.411995887756348
    9. '=ax' → logprob: -11.411995887756348
    10. '    ' → logprob: -11.661995887756348

Token 61: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.256380170583725
    2. ' n' → logprob: -1.6313802003860474
    3. '(n' → logprob: -4.131380081176758
    4. 'k' → logprob: -5.131380081176758
    5. '1' → logprob: -5.756380081176758
    6. ' (' → logprob: -6.131380081176758
    7. ' ' → logprob: -6.506380081176758
    8. '0' → logprob: -7.506380081176758
    9. ' k' → logprob: -7.756380081176758
    10. '(k' → logprob: -7.881380081176758

Token 62: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05494649335741997
    2. ' -' → logprob: -2.9299464225769043
    3. '1' → logprob: -11.304946899414062
    4. '   ' → logprob: -11.804946899414062
    5. '*(' → logprob: -12.054946899414062
    6. '-k' → logprob: -12.179946899414062
    7. ' ' → logprob: -12.179946899414062
    8. '*' → logprob: -12.429946899414062
    9. '(n' → logprob: -12.679946899414062
    10. '"-' → logprob: -12.804946899414062

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011834424221888185
    2. ' ' → logprob: -6.87618350982666
    3. 'k' → logprob: -9.00118350982666
    4. '-' → logprob: -12.12618350982666
    5. ' k' → logprob: -12.25118350982666
    6. '2' → logprob: -12.25118350982666
    7. '   ' → logprob: -12.75118350982666
    8. '
' → logprob: -13.31368350982666
    9. '  ' → logprob: -13.37618350982666
    10. '(' → logprob: -14.25118350982666

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000284696085145697
    2. 'k' → logprob: -8.250285148620605
    3. ' ' → logprob: -11.000285148620605
    4. '2' → logprob: -12.875285148620605
    5. '-' → logprob: -13.250285148620605
    6. '   ' → logprob: -14.500285148620605
    7. ' k' → logprob: -14.625285148620605
    8. '
' → logprob: -15.250285148620605
    9. '(k' → logprob: -15.250285148620605
    10. '  ' → logprob: -15.500285148620605

Token 65: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27672553062438965
    2. '
' → logprob: -2.1517255306243896
    3. '    
' → logprob: -2.5267255306243896
    4. '\n' → logprob: -3.7767255306243896
    5. '  
' → logprob: -4.651725769042969
    6. 'stdout' → logprob: -4.901725769042969
    7. '   
' → logprob: -6.151725769042969
    8. ' 
' → logprob: -6.901725769042969
    9. ',' → logprob: -7.401725769042969
    10. '<|end|>' → logprob: -7.651725769042969

Token 66: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006717863027006388
    2. ' k' → logprob: -5.006717681884766
    3. '(k' → logprob: -13.881717681884766
    4. '
' → logprob: -15.006717681884766
    5. ' ' → logprob: -15.131717681884766
    6. '	k' → logprob: -15.381717681884766
    7. 'n' → logprob: -15.381717681884766
    8. '   ' → logprob: -15.631717681884766
    9. ' (' → logprob: -16.006717681884766
    10. '  ' → logprob: -16.381717681884766

Token 67: '_max' (ID: 13731)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.26068511605262756
    2. '
' → logprob: -1.6356850862503052
    3. '   ' → logprob: -3.6356852054595947
    4. '    
' → logprob: -5.760684967041016
    5. '
' → logprob: -6.260684967041016
    6. '\' → logprob: -6.760684967041016
    7. 'stdout' → logprob: -7.510684967041016
    8. '  
' → logprob: -8.010684967041016
    9. ''\' → logprob: -8.760684967041016
    10. '   
' → logprob: -9.010684967041016

Token 68: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8700014352798462
    2. '-k' → logprob: -1.1200014352798462
    3. ' -' → logprob: -1.3700014352798462
    4. '-n' → logprob: -8.620001792907715
    5. '
' → logprob: -9.245001792907715
    6. '\n' → logprob: -9.370001792907715
    7. '-m' → logprob: -9.870001792907715
    8. ' ' → logprob: -9.870001792907715
    9. '-
' → logprob: -9.870001792907715
    10. '   ' → logprob: -9.870001792907715

Token 69: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011054890230298042
    2. ' k' → logprob: -4.511054992675781
    3. '<|end|>' → logprob: -12.761054992675781
    4. '	k' → logprob: -13.011054992675781
    5. ' ' → logprob: -14.136054992675781
    6. '   ' → logprob: -14.636054992675781
    7. '_k' → logprob: -15.386054992675781
    8. '<|end|>' → logprob: -16.01105499267578
    9. ' к' → logprob: -16.13605499267578
    10. '  ' → logprob: -16.26105499267578

Token 70: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2879665791988373
    2. '   ' → logprob: -1.5379666090011597
    3. '\n' → logprob: -3.78796648979187
    4. '    
' → logprob: -4.787966728210449
    5. 'stdout' → logprob: -6.287966728210449
    6. '  
' → logprob: -6.912966728210449
    7. '
' → logprob: -7.537966728210449
    8. '\' → logprob: -8.66296672821045
    9. '   
' → logprob: -8.66296672821045
    10. '<|end|>' → logprob: -8.91296672821045

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19647853076457977
    2. '\n' → logprob: -2.0714786052703857
    3. '
' → logprob: -3.9464786052703857
    4. '    
' → logprob: -4.071478366851807
    5. '\' → logprob: -4.571478366851807
    6. 'stdout' → logprob: -6.071478366851807
    7. '  
' → logprob: -6.571478366851807
    8. '```' → logprob: -7.321478366851807
    9. ' 
' → logprob: -8.446478843688965
    10. '   
' → logprob: -8.571478843688965

Token 72: ' stdout' (ID: 48014)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17478010058403015
    2. '\' → logprob: -3.1747801303863525
    3. '\n' → logprob: -3.1747801303863525
    4. 'stdout' (adapté à ' stdout') → logprob: -3.2997801303863525
    5. '    
' → logprob: -3.7997801303863525
    6. '
' → logprob: -4.174779891967773
    7. '  
' → logprob: -7.424779891967773
    8. '```' → logprob: -7.924779891967773
    9. ' 
' → logprob: -8.549779891967773
    10. '"\' → logprob: -8.924779891967773

Token 73: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -1.5213274309644476e-05
    2. '.' → logprob: -11.125015258789062
    3. '.w' → logprob: -16.250015258789062
    4. ' .' → logprob: -16.500015258789062
    5. '.put' → logprob: -17.000015258789062
    6. '".' → logprob: -17.125015258789062
    7. '.writerow' → logprob: -17.750015258789062
    8. ').' → logprob: -17.875015258789062
    9. '`.' → logprob: -18.125015258789062
    10. 'write' → logprob: -18.125015258789062

Token 74: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0919266790151596
    2. '("("' → logprob: -2.4669265747070312
    3. '("' → logprob: -7.091926574707031
    4. 'f' → logprob: -7.091926574707031
    5. '(' → logprob: -7.216926574707031
    6. '("(' → logprob: -7.716926574707031
    7. '('' → logprob: -9.716926574707031
    8. '(str' → logprob: -10.466926574707031
    9. '   ' → logprob: -10.966926574707031
    10. '"(' → logprob: -11.841926574707031

Token 75: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.5760487914085388
    2. '"' → logprob: -0.8260487914085388
    3. '1' → logprob: -9.451048851013184
    4. '0' → logprob: -11.326048851013184
    5. '{' → logprob: -11.826048851013184
    6. 'f' → logprob: -12.451048851013184
    7. ''' → logprob: -13.201048851013184
    8. ''{' → logprob: -13.326048851013184
    9. '("{}' → logprob: -13.951048851013184
    10. '3' → logprob: -14.451048851013184

Token 76: 'm' (ID: 76)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.269565634895116e-05
    2. 'm' → logprob: -9.375092506408691
    3. ' n' → logprob: -12.000092506408691
    4. '{' → logprob: -13.625092506408691
    5. '(n' → logprob: -15.750092506408691
    6. '}' → logprob: -16.125093460083008
    7. '   ' → logprob: -17.125093460083008
    8. '	n' → logprob: -17.250093460083008
    9. 'nm' → logprob: -17.250093460083008
    10. '{}' → logprob: -17.500093460083008

Token 77: '}\' (ID: 21170)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.0701441615819931
    2. '}\' → logprob: -2.6951441764831543
    3. ''\' → logprob: -9.195143699645996
    4. '\' → logprob: -10.070143699645996
    5. ')\' → logprob: -10.445143699645996
    6. '"\' → logprob: -11.570143699645996
    7. ' }\' → logprob: -11.945143699645996
    8. ' \' → logprob: -12.195143699645996
    9. ']\' → logprob: -12.945143699645996
    10. '`\' → logprob: -13.320143699645996

Token 78: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -3.1424973713001236e-05
    2. '")' → logprob: -10.500031471252441
    3. '"\' → logprob: -12.875031471252441
    4. '"' → logprob: -14.375031471252441
    5. ')\' → logprob: -15.375031471252441
    6. '\' → logprob: -15.875031471252441
    7. ' \' → logprob: -15.875031471252441
    8. '")
' → logprob: -17.125030517578125
    9. ')' → logprob: -17.250030517578125
    10. ''\' → logprob: -17.375030517578125

Token 79: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.1562109738588333
    2. ')' → logprob: -2.0312108993530273
    3. '   ' → logprob: -4.406210899353027
    4. '"' → logprob: -7.906210899353027
    5. 'a' → logprob: -7.906210899353027
    6. '")
' → logprob: -9.156210899353027
    7. '')' → logprob: -9.156210899353027
    8. ')
' → logprob: -10.031210899353027
    9. '1' → logprob: -10.156210899353027
    10. '0' → logprob: -10.156210899353027

Token 80: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005627154838293791
    2. '    
' → logprob: -6.130627155303955
    3. 'for' → logprob: -6.380627155303955
    4. '<|end|>' → logprob: -6.880627155303955
    5. ' for' → logprob: -7.380627155303955
    6. '  
' → logprob: -10.880626678466797
    7. '   
' → logprob: -11.380626678466797
    8. '  ' → logprob: -11.505626678466797
    9. '```' → logprob: -11.755626678466797
    10. '    ' → logprob: -12.005626678466797

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15830913186073303
    2. 'for' → logprob: -2.0333092212677
    3. 'stdout' → logprob: -4.658308982849121
    4. ' for' → logprob: -5.158308982849121
    5. '    
' → logprob: -9.283308982849121
    6. '#' → logprob: -9.533308982849121
    7. '```' → logprob: -10.033308982849121
    8. ' stdout' → logprob: -10.033308982849121
    9. 'a' → logprob: -12.033308982849121
    10. ' #' → logprob: -12.158308982849121

Token 82: ' base' (ID: 3611)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.0020742492051795e-05
    2. '#' → logprob: -10.000049591064453
    3. ' for' → logprob: -12.625049591064453
    4. 'edges' → logprob: -14.375049591064453
    5. 'fo' → logprob: -15.250049591064453
    6. 'i' → logprob: -15.750049591064453
    7. 'stdout' → logprob: -16.000049591064453
    8. 'f' → logprob: -16.500049591064453
    9. '```' → logprob: -17.000049591064453
    10. '
' → logprob: -17.125049591064453

Token 83: '_edges' (ID: 68870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08806309849023819
    2. '_' → logprob: -3.2130630016326904
    3. '=' → logprob: -3.5880630016326904
    4. '_edges' → logprob: -4.9630632400512695
    5. 'd' → logprob: -6.4630632400512695
    6. '_node' → logprob: -6.5880632400512695
    7. '   ' → logprob: -6.5880632400512695
    8. '_nodes' → logprob: -6.7130632400512695
    9. '1' → logprob: -7.7130632400512695
    10. '_edge' → logprob: -7.8380632400512695

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004127080552279949
    2. '=' → logprob: -5.504127025604248
    3. ' ' → logprob: -10.629127502441406
    4. '   ' → logprob: -11.254127502441406
    5. '  ' → logprob: -12.629127502441406
    6. ':' → logprob: -12.879127502441406
    7. ' =
' → logprob: -14.004127502441406
    8. '_' → logprob: -14.129127502441406
    9. '    ' → logprob: -14.254127502441406
    10. 'for' → logprob: -14.629127502441406

Token 85: ' ((' (ID: 3536)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.050548259168863297
    2. ' [(' → logprob: -3.3005483150482178
    3. '[]' → logprob: -4.800548076629639
    4. '[n' → logprob: -5.800548076629639
    5. ' []' → logprob: -7.675548076629639
    6. '[' → logprob: -8.425548553466797
    7. '[[' → logprob: -9.050548553466797
    8. 'set' → logprob: -9.175548553466797
    9. '[f' → logprob: -9.550548553466797
    10. 'list' → logprob: -9.925548553466797

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34202122688293457
    2. 'i' → logprob: -1.7170212268829346
    3. '0' → logprob: -2.4670212268829346
    4. '(' → logprob: -5.0920209884643555
    5. '2' → logprob: -5.2170209884643555
    6. '(i' → logprob: -5.7170209884643555
    7. 'n' → logprob: -6.0920209884643555
    8. 'range' → logprob: -6.2170209884643555
    9. ' ' → logprob: -6.4670209884643555
    10. '   ' → logprob: -6.8420209884643555

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005324362311512232
    2. ' ,' → logprob: -5.255324363708496
    3. ',i' → logprob: -9.880324363708496
    4. ',n' → logprob: -11.255324363708496
    5. '   ' → logprob: -11.630324363708496
    6. ',j' → logprob: -12.880324363708496
    7. '+' → logprob: -13.130324363708496
    8. ' ' → logprob: -13.630324363708496
    9. '    ' → logprob: -13.755324363708496
    10. '2' → logprob: -13.880324363708496

Token 88: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4442569613456726
    2. ' i' → logprob: -1.0692570209503174
    3. '2' → logprob: -4.569256782531738
    4. ' ' → logprob: -5.319256782531738
    5. ' v' → logprob: -9.819256782531738
    6. '   ' → logprob: -10.444256782531738
    7. 'v' → logprob: -10.569256782531738
    8. ')' → logprob: -10.694256782531738
    9. ' )' → logprob: -11.569256782531738
    10. '  ' → logprob: -11.944256782531738

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.169718936085701
    2. '+' → logprob: -1.9197189807891846
    3. ' +' → logprob: -4.6697187423706055
    4. ' )' → logprob: -9.919718742370605
    5. 'n' → logprob: -12.044718742370605
    6. '   ' → logprob: -12.669718742370605
    7. '}' → logprob: -12.794718742370605
    8. ' ' → logprob: -13.044718742370605
    9. ')
' → logprob: -13.044718742370605
    10. '+)' → logprob: -13.044718742370605

Token 90: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017275912687182426
    2. '+' → logprob: -4.267275810241699
    3. ' for' → logprob: -6.017275810241699
    4. ' )' → logprob: -7.642275810241699
    5. ' +' → logprob: -9.0172758102417
    6. '}' → logprob: -10.2672758102417
    7. 'for' → logprob: -11.1422758102417
    8. ' ' → logprob: -11.3922758102417
    9. '   ' → logprob: -12.8922758102417
    10. '    ' → logprob: -13.3922758102417

Token 91: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006017317995429039
    2. 'i' → logprob: -5.131017208099365
    3. ' ' → logprob: -9.506017684936523
    4. ' range' → logprob: -11.881017684936523
    5. '	i' → logprob: -12.381017684936523
    6. '  ' → logprob: -13.381017684936523
    7. 'range' → logprob: -14.131017684936523
    8. ' in' → logprob: -15.006017684936523
    9. ' ' → logprob: -15.756017684936523
    10. '   ' → logprob: -16.006017684936523

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00547221302986145
    2. 'in' → logprob: -5.255472183227539
    3. ' ' → logprob: -8.505472183227539
    4. ' range' → logprob: -10.880472183227539
    5. 'range' → logprob: -11.130472183227539
    6. '2' → logprob: -14.130472183227539
    7. '  ' → logprob: -14.130472183227539
    8. '	in' → logprob: -15.505472183227539
    9. '<|end|>' → logprob: -15.630472183227539
    10. ',' → logprob: -16.00547218322754

Token 93: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0019607478752732277
    2. 'range' → logprob: -6.251960754394531
    3. ' ' → logprob: -10.876960754394531
    4. ' xrange' → logprob: -12.001960754394531
    5. '	range' → logprob: -12.251960754394531
    6. '(range' → logprob: -13.251960754394531
    7. '<|end|>' → logprob: -14.751960754394531
    8. '2' → logprob: -15.501960754394531
    9. '  ' → logprob: -16.75196075439453
    10. ' [' → logprob: -17.25196075439453

Token 94: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5858256816864014
    2. '(' → logprob: -0.8358256816864014
    3. ' ' → logprob: -4.7108259201049805
    4. '   ' → logprob: -7.8358259201049805
    5. ' (' → logprob: -8.96082592010498
    6. ',' → logprob: -9.08582592010498
    7. ')' → logprob: -9.58582592010498
    8. '  ' → logprob: -9.71082592010498
    9. '	' → logprob: -10.21082592010498
    10. 'from' → logprob: -11.71082592010498

Token 95: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005263645201921463
    2. ' ' → logprob: -5.255263805389404
    3. '   ' → logprob: -11.130263328552246
    4. '(' → logprob: -12.505263328552246
    5. ')' → logprob: -12.505263328552246
    6. '  ' → logprob: -12.505263328552246
    7. '    ' → logprob: -13.505263328552246
    8. '	' → logprob: -13.880263328552246
    9. ',' → logprob: -14.130263328552246
    10. 'from' → logprob: -15.505263328552246

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004320996522437781
    2. ' ,' → logprob: -8.000432014465332
    3. ',n' → logprob: -9.250432014465332
    4. '<|end|>' → logprob: -16.25043296813965
    5. '‌,' → logprob: -16.37543296813965
    6. ' ' → logprob: -16.50043296813965
    7. 'n' → logprob: -16.87543296813965
    8. ',int' → logprob: -17.12543296813965
    9. ',
' → logprob: -17.12543296813965
    10. ',m' → logprob: -17.50043296813965

Token 97: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08895070850849152
    2. 'n' → logprob: -2.4639506340026855
    3. '	n' → logprob: -12.338951110839844
    4. ' ' → logprob: -12.963951110839844
    5. '   ' → logprob: -13.088951110839844
    6. ')n' → logprob: -14.338951110839844
    7. '    ' → logprob: -14.463951110839844
    8. '(n' → logprob: -14.713951110839844
    9. ')' → logprob: -15.588951110839844
    10. '  ' → logprob: -15.963951110839844

Token 98: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015912124887108803
    2. ' +' → logprob: -4.390912055969238
    3. ')' → logprob: -6.015912055969238
    4. '))' → logprob: -7.015912055969238
    5. ' )' → logprob: -10.890912055969238
    6. '+)' → logprob: -11.265912055969238
    7. ')+' → logprob: -12.390912055969238
    8. '+
' → logprob: -12.515912055969238
    9. ' ))' → logprob: -12.640912055969238
    10. ' ' → logprob: -12.640912055969238

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. ' ' → logprob: -10.875020027160645
    3. '2' → logprob: -14.500020027160645
    4. ')' → logprob: -15.125020027160645
    5. '   ' → logprob: -15.875020027160645
    6. '```' → logprob: -16.12502098083496
    7. '))' → logprob: -17.50002098083496
    8. '  ' → logprob: -17.62502098083496
    9. '    ' → logprob: -18.62502098083496
    10. ',' → logprob: -18.75002098083496

Token 100: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07890553772449493
    2. '))' → logprob: -2.5789055824279785
    3. ' )' → logprob: -11.70390510559082
    4. ')))' → logprob: -12.20390510559082
    5. ' ))' → logprob: -14.32890510559082
    6. ')}' → logprob: -14.95390510559082
    7. ')
' → logprob: -14.95390510559082
    8. '))
' → logprob: -15.32890510559082
    9. ')")' → logprob: -15.57890510559082
    10. '   ' → logprob: -15.70390510559082

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36304861307144165
    2. '    
' → logprob: -2.113048553466797
    3. ' for' → logprob: -2.238048553466797
    4. 'for' → logprob: -2.613048553466797
    5. '
' → logprob: -6.488048553466797
    6. '```' → logprob: -7.613048553466797
    7. ')' → logprob: -7.738048553466797
    8. ' 
' → logprob: -8.113048553466797
    9. '<|end|>' → logprob: -8.238048553466797
    10. '  
' → logprob: -8.738048553466797

Token 102: ' stdout' (ID: 48014)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21785227954387665
    2. ' for' → logprob: -2.0928523540496826
    3. '   ' → logprob: -2.7178523540496826
    4. '    
' → logprob: -5.0928521156311035
    5. '
' → logprob: -8.842852592468262
    6. ' 
' → logprob: -10.342852592468262
    7. '   
' → logprob: -10.592852592468262
    8. '  
' → logprob: -11.092852592468262
    9. 'edges' → logprob: -11.092852592468262
    10. '```' → logprob: -11.967852592468262

Token 103: '.w' (ID: 2234)
  Prédit: '.write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.0003049570368602872
    2. '.' → logprob: -8.50030517578125
    3. 'write' → logprob: -10.00030517578125
    4. '.w' → logprob: -10.25030517578125
    5. '.flush' → logprob: -11.12530517578125
    6. ' .' → logprob: -12.50030517578125
    7. '_write' → logprob: -13.87530517578125
    8. '.readline' → logprob: -14.87530517578125
    9. ' write' → logprob: -15.25030517578125
    10. '	write' → logprob: -16.00030517578125

Token 104: 'rit' (ID: 1166)
  Prédit: 'rite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rite' → logprob: -0.002351741772145033
    2. 'rit' → logprob: -6.377351760864258
    3. 'riter' → logprob: -7.502351760864258
    4. 'riteln' → logprob: -10.002351760864258
    5. 'write' → logprob: -10.502351760864258
    6. 'ritel' → logprob: -11.252351760864258
    7. 'rites' → logprob: -12.252351760864258
    8. 'ritable' → logprob: -12.252351760864258
    9. 'rito' → logprob: -14.752351760864258
    10. 'ride' → logprob: -14.877351760864258

Token 105: 'elines' (ID: 14368)
  Prédit: 'elines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elines' → logprob: -0.012608423829078674
    2. 'e' → logprob: -4.762608528137207
    3. 'els' → logprob: -6.512608528137207
    4. 'eline' → logprob: -6.637608528137207
    5. 'el' → logprob: -7.012608528137207
    6. 'lines' → logprob: -8.762608528137207
    7. 'ext' → logprob: -10.012608528137207
    8. 'ef' → logprob: -11.137608528137207
    9. 'es' → logprob: -11.387608528137207
    10. 'ines' → logprob: -11.637608528137207

Token 106: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.005052067805081606
    2. '((' → logprob: -5.505052089691162
    3. 'f' → logprob: -7.880052089691162
    4. '(' → logprob: -8.380051612854004
    5. '([' → logprob: -8.380051612854004
    6. '(map' → logprob: -9.880051612854004
    7. '(str' → logprob: -10.505051612854004
    8. '("' → logprob: -11.005051612854004
    9. '(base' → logprob: -11.880051612854004
    10. '("{}' → logprob: -11.880051612854004

Token 107: '"{' (ID: 27510)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39350852370262146
    2. '"' → logprob: -1.8935085535049438
    3. '"{' → logprob: -2.2685084342956543
    4. '{' → logprob: -3.3935084342956543
    5. '(' → logprob: -3.3935084342956543
    6. '("' → logprob: -5.893508434295654
    7. '("{' → logprob: -7.268508434295654
    8. ' ' → logprob: -8.643508911132812
    9. 'f' → logprob: -8.893508911132812
    10. '   ' → logprob: -9.268508911132812

Token 108: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.037525393068790436
    2. 'a' → logprob: -3.6625254154205322
    3. '1' → logprob: -5.162525177001953
    4. 'e' → logprob: -6.287525177001953
    5. 'x' → logprob: -6.287525177001953
    6. 'b' → logprob: -6.787525177001953
    7. '   ' → logprob: -8.537525177001953
    8. ' u' → logprob: -9.412525177001953
    9. 'v' → logprob: -9.412525177001953
    10. 's' → logprob: -9.912525177001953

Token 109: '}' (ID: 92)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.008470256812870502
    2. '}' → logprob: -5.383470058441162
    3. ' v' → logprob: -6.133470058441162
    4. ' }' → logprob: -6.508470058441162
    5. '{' → logprob: -9.63347053527832
    6. ' {}' → logprob: -10.13347053527832
    7. ' i' → logprob: -11.00847053527832
    8. ' ' → logprob: -11.13347053527832
    9. ' u' → logprob: -11.50847053527832
    10. ' f' → logprob: -11.75847053527832

Token 110: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.0014915307983756065
    2. ' v' → logprob: -6.626491546630859
    3. '}' → logprob: -9.75149154663086
    4. '{' → logprob: -9.87649154663086
    5. ' {(' → logprob: -10.87649154663086
    6. ' f' → logprob: -11.00149154663086
    7. ' }' → logprob: -12.12649154663086
    8. ' {}' → logprob: -12.62649154663086
    9. ' ' → logprob: -12.87649154663086
    10. ' i' → logprob: -13.12649154663086

Token 111: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.5048530030981055e-06
    2. ' v' → logprob: -13.750001907348633
    3. '   ' → logprob: -15.875001907348633
    4. ' ' → logprob: -16.375001907348633
    5. '```' → logprob: -16.875001907348633
    6. '	v' → logprob: -17.375001907348633
    7. '}' → logprob: -17.500001907348633
    8. '  ' → logprob: -17.625001907348633
    9. '1' → logprob: -17.625001907348633
    10. 'w' → logprob: -17.625001907348633

Token 112: '}\' (ID: 21170)
  Prédit: '}\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}\' → logprob: -1.8624639324116288e-06
    2. '\n' → logprob: -13.250001907348633
    3. '}"' → logprob: -16.750001907348633
    4. '}' → logprob: -17.125001907348633
    5. ' }\' → logprob: -17.500001907348633
    6. '}
' → logprob: -19.250001907348633
    7. '}\\' → logprob: -19.250001907348633
    8. ')\' → logprob: -20.250001907348633
    9. '}}\' → logprob: -20.375001907348633
    10. '"\' → logprob: -20.875001907348633

Token 113: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.0019793107639998198
    2. '}\' → logprob: -6.251979351043701
    3. '{' → logprob: -10.251978874206543
    4. '"' → logprob: -11.876978874206543
    5. 'n' → logprob: -12.501978874206543
    6. ')\' → logprob: -13.751978874206543
    7. '```' → logprob: -13.876978874206543
    8. '"\' → logprob: -14.001978874206543
    9. '``' → logprob: -14.251978874206543
    10. '")' → logprob: -14.501978874206543

Token 114: '"' (ID: 1)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5763658285140991
    2. 'for' → logprob: -0.8263658285140991
    3. ')' → logprob: -7.826365947723389
    4. '"' → logprob: -11.45136547088623
    5. '   ' → logprob: -11.70136547088623
    6. '```' → logprob: -12.82636547088623
    7. '
' → logprob: -13.32636547088623
    8. '")' → logprob: -13.45136547088623
    9. '	for' → logprob: -13.45136547088623
    10. ' ' → logprob: -14.82636547088623

Token 115: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5762647390365601
    2. 'for' → logprob: -0.8262647390365601
    3. '   ' → logprob: -8.451264381408691
    4. ')' → logprob: -9.201264381408691
    5. ' ' → logprob: -13.076264381408691
    6. '       ' → logprob: -13.951264381408691
    7. 'base' → logprob: -13.951264381408691
    8. '  ' → logprob: -14.201264381408691
    9. '	for' → logprob: -14.201264381408691
    10. '(base' → logprob: -14.201264381408691

Token 116: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.07901151478290558
    2. ' u' → logprob: -2.5790114402770996
    3. '(u' → logprob: -10.579011917114258
    4. ',' → logprob: -10.704011917114258
    5. '   ' → logprob: -10.954011917114258
    6. '_,' → logprob: -11.079011917114258
    7. ' (' → logprob: -11.204011917114258
    8. ' ' → logprob: -11.204011917114258
    9. '  ' → logprob: -12.329011917114258
    10. ',u' → logprob: -12.829011917114258

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11287917196750641
    2. ',v' → logprob: -2.2378792762756348
    3. 'v' → logprob: -9.987878799438477
    4. ' ,' → logprob: -11.612878799438477
    5. 'in' → logprob: -14.362878799438477
    6. ' in' → logprob: -15.237878799438477
    7. ',
' → logprob: -15.987878799438477
    8. '```' → logprob: -15.987878799438477
    9. '_,' → logprob: -16.112878799438477
    10. ' v' → logprob: -16.112878799438477

Token 118: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0001238004770129919
    2. ' v' → logprob: -9.000123977661133
    3. ',v' → logprob: -15.125123977661133
    4. 'base' → logprob: -17.500123977661133
    5. '	v' → logprob: -18.625123977661133
    6. '(v' → logprob: -18.875123977661133
    7. ')v' → logprob: -19.125123977661133
    8. ',' → logprob: -19.500123977661133
    9. '_v' → logprob: -19.875123977661133
    10. 'u' → logprob: -20.750123977661133

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011050417087972164
    2. 'in' → logprob: -4.511050224304199
    3. 'base' → logprob: -13.6360502243042
    4. ')' → logprob: -14.1360502243042
    5. ' ' → logprob: -14.6360502243042
    6. 's' → logprob: -16.761051177978516
    7. ' )' → logprob: -16.886051177978516
    8. ' base' → logprob: -17.011051177978516
    9. 'In' → logprob: -17.136051177978516
    10. '   ' → logprob: -17.636051177978516

Token 120: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.25193992257118225
    2. 'base' → logprob: -1.5019398927688599
    3. '(base' → logprob: -11.75193977355957
    4. ' ' → logprob: -14.00193977355957
    5. 'Base' → logprob: -14.25193977355957
    6. '_base' → logprob: -14.62693977355957
    7. '	base' → logprob: -14.62693977355957
    8. '   ' → logprob: -15.62693977355957
    9. ')' → logprob: -16.25193977355957
    10. '.base' → logprob: -16.62693977355957

Token 121: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -9.13388703338569e-06
    2. 'edges' → logprob: -11.625009536743164
    3. ' edges' → logprob: -16.750009536743164
    4. 'Edges' → logprob: -17.000009536743164
    5. 's' → logprob: -18.250009536743164
    6. ')' → logprob: -19.125009536743164
    7. '_' → logprob: -19.375009536743164
    8. '_edge' → logprob: -19.500009536743164
    9. '```' → logprob: -19.750009536743164
    10. '_ed' → logprob: -20.250009536743164

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0059310514479875565
    2. ')
' → logprob: -5.2559309005737305
    3. ' )' → logprob: -7.3809309005737305
    4. ' )
' → logprob: -10.63093090057373
    5. '   ' → logprob: -10.75593090057373
    6. ')

' → logprob: -10.88093090057373
    7. ' if' → logprob: -12.00593090057373
    8. ')+' → logprob: -13.88093090057373
    9. ')
' → logprob: -14.38093090057373
    10. '))' → logprob: -14.50593090057373

Token 123: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01704835705459118
    2. ' for' → logprob: -5.017048358917236
    3. '    
' → logprob: -5.267048358917236
    4. 'for' → logprob: -6.017048358917236
    5. '```' → logprob: -6.642048358917236
    6. '    ' → logprob: -7.392048358917236
    7. '<|end|>' → logprob: -8.142047882080078
    8. '  ' → logprob: -9.142047882080078
    9. ' ' → logprob: -9.267047882080078
    10. '  
' → logprob: -10.642047882080078

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029558276291936636
    2. 'for' → logprob: -6.127955913543701
    3. ' for' → logprob: -7.252955913543701
    4. '    
' → logprob: -10.377955436706543
    5. '```' → logprob: -11.252955436706543
    6. '  ' → logprob: -11.502955436706543
    7. '    ' → logprob: -12.502955436706543
    8. ' ' → logprob: -14.252955436706543
    9. 'i' → logprob: -14.502955436706543
    10. 'if' → logprob: -14.752955436706543

Token 125: ' pairs' (ID: 24702)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1759573221206665
    2. 'count' → logprob: -1.1759573221206665
    3. 'added' → logprob: -1.3009573221206665
    4. 'cnt' → logprob: -3.050957202911377
    5. 'used' → logprob: -3.675957202911377
    6. 'extra' → logprob: -4.550957202911377
    7. 'additional' → logprob: -4.800957202911377
    8. 'edges' → logprob: -4.925957202911377
    9. 'current' → logprob: -5.800957202911377
    10. 'edge' → logprob: -6.550957202911377

Token 126: '_needed' (ID: 148421)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269301027059555
    2. '=' → logprob: -2.126929998397827
    3. '_' → logprob: -14.001930236816406
    4. ' ' → logprob: -15.251930236816406
    5. '   ' → logprob: -15.376930236816406
    6. ':' → logprob: -15.626930236816406
    7. 'from' → logprob: -16.376930236816406
    8. '  ' → logprob: -16.626930236816406
    9. '    ' → logprob: -16.626930236816406
    10. 'for' → logprob: -16.876930236816406

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750604182481766
    2. '=' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.77975082397461
    4. '=int' → logprob: -17.27975082397461
    5. ' =
' → logprob: -17.90475082397461
    6. '   ' → logprob: -18.02975082397461
    7. ',' → logprob: -18.15475082397461
    8. ':' → logprob: -18.40475082397461
    9. '＝' → logprob: -18.65475082397461
    10. ')' → logprob: -18.77975082397461

Token 128: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22811555862426758
    2. ' k' → logprob: -1.6031155586242676
    3. 'm' → logprob: -6.478115558624268
    4. ' m' → logprob: -7.228115558624268
    5. '(k' → logprob: -8.22811508178711
    6. '   ' → logprob: -9.72811508178711
    7. ' (' → logprob: -9.85311508178711
    8. ' ' → logprob: -11.35311508178711
    9. '(m' → logprob: -11.60311508178711
    10. ' n' → logprob: -11.60311508178711

Token 129: '_max' (ID: 13731)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6886608004570007
    2. '    
' → logprob: -1.4386608600616455
    3. '   ' → logprob: -1.6886608600616455
    4. '+' → logprob: -4.188660621643066
    5. '=' → logprob: -4.313660621643066
    6. ' =' → logprob: -4.313660621643066
    7. '  
' → logprob: -5.188660621643066
    8. '   
' → logprob: -5.313660621643066
    9. ' +' → logprob: -5.813660621643066
    10. '-' → logprob: -5.938660621643066

Token 130: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.29766374826431274
    2. '-' → logprob: -2.172663688659668
    3. ' -=' → logprob: -2.172663688659668
    4. ' =' → logprob: -4.172663688659668
    5. '-=' → logprob: -4.672663688659668
    6. '=' → logprob: -5.422663688659668
    7. '   ' → logprob: -9.047663688659668
    8. '
' → logprob: -9.547663688659668
    9. '    ' → logprob: -9.672663688659668
    10. '-k' → logprob: -9.797663688659668

Token 131: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.018151231110095978
    2. ' k' → logprob: -4.01815128326416
    3. '	k' → logprob: -14.64315128326416
    4. '{k' → logprob: -15.01815128326416
    5. '   ' → logprob: -15.39315128326416
    6. '_k' → logprob: -15.64315128326416
    7. '<|end|>' → logprob: -17.018150329589844
    8. ' ' → logprob: -17.018150329589844
    9. ',k' → logprob: -17.143150329589844
    10. ' к' → logprob: -17.143150329589844

Token 132: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029226405546069145
    2. '    
' → logprob: -3.654226303100586
    3. ' for' → logprob: -6.529226303100586
    4. ' pairs' → logprob: -7.654226303100586
    5. '
' → logprob: -7.779226303100586
    6. 'for' → logprob: -9.029226303100586
    7. '<|end|>' → logprob: -9.404226303100586
    8. '    ' → logprob: -9.529226303100586
    9. ',' → logprob: -9.529226303100586
    10. 'pairs' → logprob: -9.779226303100586

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0343426950275898
    2. '    
' → logprob: -4.0343427658081055
    3. ' for' → logprob: -5.0343427658081055
    4. ' pairs' → logprob: -5.6593427658081055
    5. 'for' → logprob: -5.7843427658081055
    6. 'pairs' → logprob: -6.4093427658081055
    7. ' i' → logprob: -7.0343427658081055
    8. 'i' → logprob: -9.409342765808105
    9. '   
' → logprob: -9.784342765808105
    10. '_pairs' → logprob: -9.909342765808105

Token 134: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5430126190185547
    2. 'count' → logprob: -1.5430126190185547
    3. 'added' → logprob: -2.0430126190185547
    4. 'used' → logprob: -3.0430126190185547
    5. 'current' → logprob: -4.668012619018555
    6. 'edges' → logprob: -5.043012619018555
    7. 'cnt' → logprob: -5.293012619018555
    8. 'pairs' → logprob: -6.043012619018555
    9. 'if' → logprob: -6.918012619018555
    10. 'existing' → logprob: -6.918012619018555

Token 135: ' extra' (ID: 5018)
  Prédit: ' additional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' additional' → logprob: -1.1540074348449707
    2. ' pairs' → logprob: -1.5290074348449707
    3. ' extra' → logprob: -1.6540074348449707
    4. 'additional' → logprob: -2.2790074348449707
    5. 'pairs' → logprob: -3.4040074348449707
    6. ' generate' → logprob: -3.7790074348449707
    7. ' possible' → logprob: -4.029007434844971
    8. ' edges' → logprob: -4.029007434844971
    9. ' edge' → logprob: -4.404007434844971
    10. 'extra' → logprob: -4.404007434844971

Token 136: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.014451421797275543
    2. '_pairs' → logprob: -4.389451503753662
    3. '_' → logprob: -6.639451503753662
    4. '():' → logprob: -8.764451026916504
    5. '():
' → logprob: -9.389451026916504
    6. '()' → logprob: -9.389451026916504
    7. '_edge' → logprob: -10.014451026916504
    8. '_nodes' → logprob: -10.139451026916504
    9. '   ' → logprob: -10.639451026916504
    10. '_connections' → logprob: -10.639451026916504

Token 137: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0069004325196146965
    2. '():
' → logprob: -5.131900310516357
    3. ' ():' → logprob: -7.006900310516357
    4. '()' → logprob: -10.381900787353516
    5. '(' → logprob: -10.756900787353516
    6. ':' → logprob: -12.381900787353516
    7. '():
' → logprob: -12.756900787353516
    8. '(n' → logprob: -13.006900787353516
    9. ' ()' → logprob: -13.381900787353516
    10. '():

' → logprob: -14.006900787353516

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0058992840349674225
    2. ' for' → logprob: -5.505899429321289
    3. '   ' → logprob: -6.380899429321289
    4. 'for' → logprob: -10.130899429321289
    5. ',' → logprob: -10.630899429321289
    6. '     ' → logprob: -11.130899429321289
    7. ' from' → logprob: -11.755899429321289
    8. '    ' → logprob: -11.880899429321289
    9. '      ' → logprob: -11.880899429321289
    10. ' ' → logprob: -12.380899429321289

Token 139: ' cnt' (ID: 27340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1291743516921997
    2. ' for' → logprob: -1.3791743516921997
    3. 'for' → logprob: -1.5041743516921997
    4. '           ' → logprob: -1.8791743516921997
    5. '   ' → logprob: -4.00417423248291
    6. 'i' → logprob: -4.12917423248291
    7. ' i' → logprob: -5.25417423248291
    8. 'u' → logprob: -5.50417423248291
    9. 'count' → logprob: -6.62917423248291
    10. ' u' → logprob: -6.75417423248291

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28129181265830994
    2. '=' → logprob: -1.4062918424606323
    3. '   ' → logprob: -9.781291961669922
    4. ',' → logprob: -10.406291961669922
    5. ' ' → logprob: -10.531291961669922
    6. '  ' → logprob: -11.406291961669922
    7. '    ' → logprob: -12.156291961669922
    8. '<|end|>' → logprob: -12.781291961669922
    9. 'inue' → logprob: -13.656291961669922
    10. ')' → logprob: -13.906291961669922

Token 141: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12696202099323273
    2. ' ' → logprob: -2.1269619464874268
    3. 'pairs' → logprob: -11.001961708068848
    4. ' pairs' → logprob: -11.251961708068848
    5. '1' → logprob: -12.876961708068848
    6. '   ' → logprob: -14.126961708068848
    7. '  ' → logprob: -15.001961708068848
    8. '2' → logprob: -15.501961708068848
    9. '00' → logprob: -16.251962661743164
    10. ' ' → logprob: -16.689462661743164

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013004729989916086
    2. ' ' → logprob: -6.75130033493042
    3. 'pairs' → logprob: -9.251300811767578
    4. '1' → logprob: -10.501300811767578
    5. ' pairs' → logprob: -13.001300811767578
    6. '   ' → logprob: -13.126300811767578
    7. '2' → logprob: -14.126300811767578
    8. 'cnt' → logprob: -14.876300811767578
    9. '(' → logprob: -15.001300811767578
    10. '  ' → logprob: -15.001300811767578

Token 143: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.203023299574852
    2. '<|end|>' → logprob: -2.2030231952667236
    3. '
' → logprob: -2.8280231952667236
    4. '        
' → logprob: -5.203023433685303
    5. '   ' → logprob: -5.703023433685303
    6. '    
' → logprob: -6.828023433685303
    7. '<|end|>' → logprob: -6.828023433685303
    8. ' for' → logprob: -7.078023433685303
    9. '  
' → logprob: -7.203023433685303
    10. ' ' → logprob: -8.078022956848145

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12264461815357208
    2. '
' → logprob: -2.4976446628570557
    3. '   ' → logprob: -4.122644424438477
    4. '<|end|>' → logprob: -4.372644424438477
    5. '    
' → logprob: -6.622644424438477
    6. '        
' → logprob: -6.622644424438477
    7. ' for' → logprob: -7.122644424438477
    8. '  
' → logprob: -8.247644424438477
    9. '<|end|>' → logprob: -8.872644424438477
    10. '
' → logprob: -9.622644424438477

Token 145: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01538459025323391
    2. ' for' → logprob: -4.265384674072266
    3. '   ' → logprob: -6.765384674072266
    4. '       ' → logprob: -9.640384674072266
    5. '	for' → logprob: -13.640384674072266
    6. ' ' → logprob: -14.265384674072266
    7. '  ' → logprob: -15.390384674072266
    8. '           ' → logprob: -16.015384674072266
    9. 'i' → logprob: -16.140384674072266
    10. '    ' → logprob: -16.890384674072266

Token 146: ' u' (ID: 337)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47850432991981506
    2. 'u' → logprob: -1.3535043001174927
    3. ' u' → logprob: -2.7285044193267822
    4. ' i' → logprob: -3.3535044193267822
    5. 'v' → logprob: -4.603504180908203
    6. 'j' → logprob: -4.978504180908203
    7. ' v' → logprob: -5.603504180908203
    8. ' j' → logprob: -7.353504180908203
    9. 'a' → logprob: -8.353504180908203
    10. 'x' → logprob: -9.603504180908203

Token 147: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0298071950674057
    2. 'in' → logprob: -3.5298070907592773
    3. ',' → logprob: -10.654807090759277
    4. ' ' → logprob: -11.529807090759277
    5. 'range' → logprob: -12.154807090759277
    6. '```' → logprob: -12.654807090759277
    7. ')' → logprob: -13.154807090759277
    8. '2' → logprob: -13.529807090759277
    9. '	in' → logprob: -13.529807090759277
    10. '<|end|>' → logprob: -13.654807090759277

Token 148: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008615399710834026
    2. ' range' → logprob: -4.758615493774414
    3. '	range' → logprob: -15.258615493774414
    4. '2' → logprob: -15.508615493774414
    5. '(range' → logprob: -15.758615493774414
    6. '   ' → logprob: -16.008615493774414
    7. ' ' → logprob: -16.383615493774414
    8. '1' → logprob: -18.258615493774414
    9. '  ' → logprob: -18.508615493774414
    10. '
' → logprob: -18.633615493774414

Token 149: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05559012293815613
    2. '(' → logprob: -2.9305901527404785
    3. ' ' → logprob: -7.5555901527404785
    4. 'from' → logprob: -9.18058967590332
    5. '   ' → logprob: -9.68058967590332
    6. '
' → logprob: -11.80558967590332
    7. 'import' → logprob: -13.05558967590332
    8. ' (' → logprob: -13.30558967590332
    9. ')' → logprob: -13.43058967590332
    10. ',' → logprob: -13.93058967590332

Token 150: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -10.750021934509277
    3. '
' → logprob: -15.000021934509277
    4. '   ' → logprob: -15.500021934509277
    5. '```' → logprob: -16.375022888183594
    6. '(' → logprob: -16.750022888183594
    7. '

' → logprob: -17.000022888183594
    8. 'from' → logprob: -17.250022888183594
    9. ')' → logprob: -17.500022888183594
    10. '
' → logprob: -17.500022888183594

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019426802173256874
    2. ',n' → logprob: -6.5019426345825195
    3. ' ,' → logprob: -7.7519426345825195
    4. 'n' → logprob: -12.62694263458252
    5. '   ' → logprob: -12.75194263458252
    6. '+' → logprob: -13.25194263458252
    7. '       ' → logprob: -14.37694263458252
    8. ',u' → logprob: -14.75194263458252
    9. ',
' → logprob: -15.12694263458252
    10. ' +' → logprob: -15.12694263458252

Token 152: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002855159342288971
    2. ' n' → logprob: -5.87785530090332
    3. '   ' → logprob: -10.50285530090332
    4. '	n' → logprob: -11.62785530090332
    5. '<|end|>' → logprob: -12.37785530090332
    6. '(n' → logprob: -13.25285530090332
    7. ' ' → logprob: -13.50285530090332
    8. '_n' → logprob: -13.75285530090332
    9. '       ' → logprob: -13.87785530090332
    10. '  ' → logprob: -14.25285530090332

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20379212498664856
    2. '):
' → logprob: -1.8287920951843262
    3. '+' → logprob: -4.078792095184326
    4. '-' → logprob: -5.203792095184326
    5. ' -' → logprob: -7.828792095184326
    6. '       ' → logprob: -8.328792572021484
    7. ')' → logprob: -8.453792572021484
    8. ' +' → logprob: -8.703792572021484
    9. ' ):' → logprob: -8.953792572021484
    10. '   ' → logprob: -9.703792572021484

Token 154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4227532744407654
    2. '<|end|>' → logprob: -1.4227533340454102
    3. '       ' → logprob: -2.67275333404541
    4. ' for' → logprob: -3.79775333404541
    5. '	       ' → logprob: -5.42275333404541
    6. '<|end|>' → logprob: -5.79775333404541
    7. ':' → logprob: -6.92275333404541
    8. ',' → logprob: -7.04775333404541
    9. '               ' → logprob: -7.29775333404541
    10. '        ' → logprob: -7.67275333404541

Token 155: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5836382508277893
    2. ' for' → logprob: -0.8336382508277893
    3. '               ' → logprob: -5.7086381912231445
    4. '       ' → logprob: -5.7086381912231445
    5. '           ' → logprob: -7.0836381912231445
    6. '	for' → logprob: -9.083638191223145
    7. '   ' → logprob: -9.833638191223145
    8. '	       ' → logprob: -11.458638191223145
    9. ' ' → logprob: -12.208638191223145
    10. '        ' → logprob: -12.708638191223145

Token 156: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0031777136027812958
    2. ' v' → logprob: -5.753177642822266
    3. '	v' → logprob: -17.628177642822266
    4. '   ' → logprob: -18.003177642822266
    5. '_v' → logprob: -19.003177642822266
    6. 'vj' → logprob: -19.628177642822266
    7. 'w' → logprob: -20.128177642822266
    8. '    ' → logprob: -20.878177642822266
    9. ' ' → logprob: -21.253177642822266
    10. '<v' → logprob: -21.753177642822266

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026345698162913322
    2. 'in' → logprob: -3.651345729827881
    3. 'range' → logprob: -10.401345252990723
    4. ' ' → logprob: -12.776345252990723
    5. '<|end|>' → logprob: -12.901345252990723
    6. ' range' → logprob: -13.651345252990723
    7. '	in' → logprob: -13.651345252990723
    8. '(range' → logprob: -14.151345252990723
    9. '```' → logprob: -14.151345252990723
    10. '=' → logprob: -14.651345252990723

Token 158: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12702438235282898
    2. ' range' → logprob: -2.1270244121551514
    3. '(range' → logprob: -9.25202465057373
    4. '	range' → logprob: -15.50202465057373
    5. 'ange' → logprob: -17.127023696899414
    6. '_range' → logprob: -17.377023696899414
    7. '.range' → logprob: -17.502023696899414
    8. ' xrange' → logprob: -17.502023696899414
    9. ' ' → logprob: -17.627023696899414
    10. '<|end|>' → logprob: -18.252023696899414

Token 159: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -9.662937372922897e-05
    2. '(' → logprob: -9.875096321105957
    3. 'range' → logprob: -10.875096321105957
    4. 'u' → logprob: -11.500096321105957
    5. '(range' → logprob: -11.875096321105957
    6. '(v' → logprob: -13.500096321105957
    7. '(n' → logprob: -13.875096321105957
    8. ' (' → logprob: -14.250096321105957
    9. ' range' → logprob: -14.375096321105957
    10. '[u' → logprob: -14.375096321105957

Token 160: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03805159032344818
    2. ' +' → logprob: -3.2880516052246094
    3. '1' → logprob: -12.91305160522461
    4. ',' → logprob: -13.03805160522461
    5. '+,' → logprob: -13.03805160522461
    6. '()+' → logprob: -13.66305160522461
    7. '+
' → logprob: -13.91305160522461
    8. ')+' → logprob: -15.03805160522461
    9. ' ' → logprob: -16.03805160522461
    10. '(' → logprob: -16.16305160522461

Token 161: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5741402506828308
    2. '(n' → logprob: -1.0741403102874756
    3. '2' → logprob: -3.0741403102874756
    4. ',' → logprob: -3.9491403102874756
    5. 'n' → logprob: -4.0741400718688965
    6. 'range' → logprob: -5.5741400718688965
    7. '(range' → logprob: -6.3241400718688965
    8. '(v' → logprob: -6.5741400718688965
    9. '<|end|>' → logprob: -6.9491400718688965
    10. ')' → logprob: -6.9491400718688965

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031434930860996246
    2. ',n' → logprob: -6.128143310546875
    3. ' ,' → logprob: -7.503143310546875
    4. 'n' → logprob: -8.378143310546875
    5. '(n' → logprob: -9.003143310546875
    6. '(),' → logprob: -10.378143310546875
    7. '1' → logprob: -12.378143310546875
    8. '+,' → logprob: -12.503143310546875
    9. ' n' → logprob: -13.128143310546875
    10. '(' → logprob: -13.378143310546875

Token 163: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02633443847298622
    2. ' n' → logprob: -3.651334524154663
    3. '   ' → logprob: -10.526334762573242
    4. ' ' → logprob: -13.151334762573242
    5. '(n' → logprob: -13.526334762573242
    6. '    ' → logprob: -13.651334762573242
    7. '	n' → logprob: -13.776334762573242
    8. '       ' → logprob: -14.651334762573242
    9. '           ' → logprob: -15.151334762573242
    10. '  ' → logprob: -15.276334762573242

Token 164: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005203993525356054
    2. '):' → logprob: -5.380204200744629
    3. ' +' → logprob: -7.505204200744629
    4. ')' → logprob: -10.630204200744629
    5. '):
' → logprob: -12.005204200744629
    6. '+
' → logprob: -14.255204200744629
    7. '<|end|>' → logprob: -14.255204200744629
    8. '+)' → logprob: -14.755204200744629
    9. ')+' → logprob: -14.880204200744629
    10. '   ' → logprob: -15.130204200744629

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '+' → logprob: -12.875004768371582
    3. ' ' → logprob: -13.000004768371582
    4. '2' → logprob: -16.3750057220459
    5. '0' → logprob: -16.6250057220459
    6. '   ' → logprob: -17.1250057220459
    7. '```' → logprob: -18.1250057220459
    8. ')' → logprob: -18.2500057220459
    9. '
' → logprob: -18.2500057220459
    10. ' +' → logprob: -19.1250057220459

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1002805307507515
    2. '):
' → logprob: -2.350280523300171
    3. '):
' → logprob: -10.47528076171875
    4. ':' → logprob: -10.85028076171875
    5. '           ' → logprob: -11.47528076171875
    6. ')' → logprob: -12.60028076171875
    7. '):

' → logprob: -12.85028076171875
    8. '               ' → logprob: -13.10028076171875
    9. '       ' → logprob: -13.22528076171875
    10. ' ):' → logprob: -13.47528076171875

Token 167: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004150699358433485
    2. '           ' → logprob: -5.879150867462158
    3. ' ' → logprob: -7.379150867462158
    4. '<|end|>' → logprob: -7.754150867462158
    5. '            ' → logprob: -10.254150390625
    6. '                
' → logprob: -10.379150390625
    7. '       ' → logprob: -10.629150390625
    8. '                               ' → logprob: -10.754150390625
    9. '              ' → logprob: -10.879150390625
    10. '                ' → logprob: -10.879150390625

Token 168: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6434907913208008
    2. '                   ' → logprob: -1.2684907913208008
    3. '               ' → logprob: -1.7684907913208008
    4. '           ' → logprob: -4.018490791320801
    5. 'if' (adapté à ' if') → logprob: -5.768490791320801
    6. '                ' → logprob: -6.768490791320801
    7. '                       ' → logprob: -9.1434907913208
    8. '                    ' → logprob: -9.6434907913208
    9. '            ' → logprob: -9.7684907913208
    10. '   ' → logprob: -10.0184907913208

Token 169: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.018180029466748238
    2. 'cnt' → logprob: -4.018179893493652
    3. '(cnt' → logprob: -11.018179893493652
    4. '	cnt' → logprob: -11.268179893493652
    5. '[cnt' → logprob: -14.518179893493652
    6. ' pairs' → logprob: -15.893179893493652
    7. ' not' → logprob: -16.14318084716797
    8. '_cnt' → logprob: -16.64318084716797
    9. '   ' → logprob: -17.14318084716797
    10. ' ' → logprob: -17.14318084716797

Token 170: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.0642777532339096
    2. ' ==' → logprob: -3.5642776489257812
    3. '>=' → logprob: -4.064277648925781
    4. ' <' → logprob: -4.314277648925781
    5. '==' → logprob: -6.439277648925781
    6. ' ' → logprob: -6.689277648925781
    7. '   ' → logprob: -8.314277648925781
    8. '<' → logprob: -8.689277648925781
    9. '<|end|>' → logprob: -9.939277648925781
    10. '    ' → logprob: -10.564277648925781

Token 171: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.012510941363871098
    2. ' pairs' → logprob: -4.387510776519775
    3. '_pairs' → logprob: -14.137511253356934
    4. '           ' → logprob: -16.012510299682617
    5. 'p' → logprob: -16.137510299682617
    6. '
' → logprob: -16.137510299682617
    7. 'pair' → logprob: -16.387510299682617
    8. '   ' → logprob: -16.762510299682617
    9. 'Pairs' → logprob: -17.012510299682617
    10. '       ' → logprob: -17.262510299682617

Token 172: '_needed' (ID: 148421)
  Prédit: '_needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_needed' → logprob: -2.2200749754119897e-06
    2. '_required' → logprob: -13.875001907348633
    3. '_' → logprob: -14.750001907348633
    4. '_need' → logprob: -14.875001907348633
    5. 'needed' → logprob: -15.375001907348633
    6. '_used' → logprob: -17.125001907348633
    7. ' _' → logprob: -17.125001907348633
    8. '```' → logprob: -17.250001907348633
    9. '_requested' → logprob: -17.500001907348633
    10. '_pairs' → logprob: -17.625001907348633

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7093711495399475
    2. ':
' → logprob: -0.7093711495399475
    3. '                   ' → logprob: -4.209371089935303
    4. '               ' → logprob: -7.709371089935303
    5. ':return' → logprob: -7.834371089935303
    6. '           ' → logprob: -8.584371566772461
    7. '                       ' → logprob: -8.959371566772461
    8. ':
' → logprob: -10.209371566772461
    9. '):
' → logprob: -10.959371566772461
    10. ':

' → logprob: -12.834371566772461

Token 174: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007392307161353528
    2. 'break' → logprob: -7.625739097595215
    3. '                       ' → logprob: -9.375739097595215
    4. ' break' → logprob: -9.750739097595215
    5. '           ' → logprob: -10.250739097595215
    6. '               ' → logprob: -10.500739097595215
    7. 'return' → logprob: -10.875739097595215
    8. '
' → logprob: -11.500739097595215
    9. ' return' → logprob: -11.625739097595215
    10. '       ' → logprob: -12.875739097595215

Token 175: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15193551778793335
    2. '                       ' → logprob: -2.151935577392578
    3. ' return' → logprob: -3.901935577392578
    4. '                   ' → logprob: -5.651935577392578
    5. 'break' → logprob: -7.026935577392578
    6. '
' → logprob: -10.526935577392578
    7. '               ' → logprob: -10.776935577392578
    8. '                           ' → logprob: -11.151935577392578
    9. ' break' → logprob: -11.276935577392578
    10. '           ' → logprob: -12.026935577392578

Token 176: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021173158660531044
    2. ' yield' → logprob: -3.8961732387542725
    3. 'yield' → logprob: -7.521173000335693
    4. '                
' → logprob: -10.146173477172852
    5. '                ' → logprob: -11.396173477172852
    6. '           ' → logprob: -11.521173477172852
    7. '	yield' → logprob: -11.896173477172852
    8. '                   ' → logprob: -11.896173477172852
    9. ' yields' → logprob: -12.396173477172852
    10. '
' → logprob: -13.146173477172852

Token 177: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006672830786556005
    2. '                
' → logprob: -7.750667095184326
    3. ' yield' → logprob: -9.250667572021484
    4. 'yield' → logprob: -9.875667572021484
    5. '
' → logprob: -10.125667572021484
    6. '           ' → logprob: -11.625667572021484
    7. '                    
' → logprob: -12.125667572021484
    8. '                ' → logprob: -12.250667572021484
    9. 'stdout' → logprob: -12.250667572021484
    10. '                   ' → logprob: -12.500667572021484

Token 178: ' yield' (ID: 14376)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1394776701927185
    2. 'yield' (adapté à ' yield') → logprob: -2.8894777297973633
    3. ' yield' → logprob: -3.1394777297973633
    4. 'stdout' → logprob: -3.5144777297973633
    5. ' stdout' → logprob: -7.764477729797363
    6. '           ' → logprob: -8.139477729797363
    7. '	yield' → logprob: -8.264477729797363
    8. '                   ' → logprob: -9.014477729797363
    9. '                
' → logprob: -9.639477729797363
    10. '
' → logprob: -10.014477729797363

Token 179: ' (' (ID: 350)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2687254548072815
    2. ' f' → logprob: -1.6437253952026367
    3. 'u' → logprob: -3.5187253952026367
    4. ' u' → logprob: -4.893725395202637
    5. '(f' → logprob: -5.893725395202637
    6. '(u' → logprob: -6.268725395202637
    7. ' (' → logprob: -7.518725395202637
    8. '   ' → logprob: -10.268725395202637
    9. ' ' → logprob: -11.643725395202637
    10. '"' → logprob: -11.893725395202637

Token 180: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -4.584861744660884e-05
    2. ' u' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.000045776367188
    4. '	u' → logprob: -16.500045776367188
    5. '               ' → logprob: -16.500045776367188
    6. '                   ' → logprob: -16.875045776367188
    7. ')' → logprob: -17.500045776367188
    8. '(u' → logprob: -18.125045776367188
    9. ',u' → logprob: -18.250045776367188
    10. '           ' → logprob: -19.875045776367188

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001612267515156418
    2. ',v' → logprob: -9.375161170959473
    3. ' ,' → logprob: -9.500161170959473
    4. '               ' → logprob: -14.750161170959473
    5. ')' → logprob: -15.375161170959473
    6. 'v' → logprob: -15.500161170959473
    7. ',
' → logprob: -15.500161170959473
    8. '),' → logprob: -16.12516212463379
    9. '‌,' → logprob: -16.25016212463379
    10. '                   ' → logprob: -16.62516212463379

Token 182: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0001398929744027555
    2. ' v' → logprob: -8.875140190124512
    3. ')v' → logprob: -17.875139236450195
    4. ')' → logprob: -18.750139236450195
    5. '	v' → logprob: -19.750139236450195
    6. '   ' → logprob: -20.000139236450195
    7. ' ' → logprob: -20.125139236450195
    8. '               ' → logprob: -20.750139236450195
    9. '                   ' → logprob: -21.250139236450195
    10. 'vj' → logprob: -21.625139236450195

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0039468444883823395
    2. ')
' → logprob: -5.628946781158447
    3. '               ' → logprob: -8.003947257995605
    4. ' )' → logprob: -12.503947257995605
    5. ')
' → logprob: -13.003947257995605
    6. '<|end|>' → logprob: -13.378947257995605
    7. ')

' → logprob: -14.003947257995605
    8. '           ' → logprob: -14.128947257995605
    9. ',' → logprob: -14.253947257995605
    10. ')\' → logprob: -14.378947257995605

Token 184: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001860174525063485
    2. '                
' → logprob: -9.0001859664917
    3. '<|end|>' → logprob: -10.5001859664917
    4. '           ' → logprob: -11.5001859664917
    5. '<|end|>' → logprob: -12.6251859664917
    6. '                   ' → logprob: -12.6251859664917
    7. '    
' → logprob: -12.7501859664917
    8. '       ' → logprob: -13.1251859664917
    9. '	           ' → logprob: -13.2501859664917
    10. '```' → logprob: -13.5001859664917

Token 185: ' cnt' (ID: 27340)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016725433990359306
    2. 'cnt' (adapté à ' cnt') → logprob: -4.141725540161133
    3. ' cnt' → logprob: -7.516725540161133
    4. '           ' → logprob: -9.766725540161133
    5. '	cnt' → logprob: -10.266725540161133
    6. '                   ' → logprob: -10.391725540161133
    7. '[cnt' → logprob: -12.266725540161133
    8. '              ' → logprob: -12.516725540161133
    9. '			' → logprob: -12.766725540161133
    10. '                
' → logprob: -12.766725540161133

Token 186: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0920926034450531
    2. ' +=' → logprob: -2.592092514038086
    3. '+' → logprob: -4.342092514038086
    4. '=' → logprob: -9.342092514038086
    5. '++' → logprob: -11.967092514038086
    6. ' +' → logprob: -12.342092514038086
    7. '<|end|>' → logprob: -12.842092514038086
    8. ']+=' → logprob: -13.842092514038086
    9. ' =' → logprob: -14.467092514038086
    10. '                ' → logprob: -14.717092514038086

Token 187: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.50000762939453
    4. '```' → logprob: -21.00000762939453
    5. '<|end|>' → logprob: -22.00000762939453
    6. '           ' → logprob: -22.12500762939453
    7. '۱' → logprob: -22.50000762939453
    8. '１' → logprob: -22.87500762939453
    9. ' ' → logprob: -23.12500762939453
    10. '       ' → logprob: -23.25000762939453

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -19.250001907348633
    5. '           ' → logprob: -20.750001907348633
    6. '<|end|>' → logprob: -21.500001907348633
    7. '       ' → logprob: -21.750001907348633
    8. '  ' → logprob: -21.875001907348633
    9. '
' → logprob: -21.875001907348633
    10. '۱' → logprob: -22.250001907348633

Token 189: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035518158227205276
    2. '    
' → logprob: -3.410518169403076
    3. 'for' → logprob: -7.285518169403076
    4. ' for' → logprob: -7.410518169403076
    5. '
' → logprob: -8.285517692565918
    6. '                
' → logprob: -9.035517692565918
    7. '        
' → logprob: -9.160517692565918
    8. '  
' → logprob: -10.285517692565918
    9. '            
' → logprob: -10.535517692565918
    10. '       ' → logprob: -11.785517692565918

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15826059877872467
    2. '    
' → logprob: -2.0332605838775635
    3. 'for' → logprob: -4.533260822296143
    4. '
' → logprob: -6.158260822296143
    5. 'stdout' → logprob: -6.533260822296143
    6. ' for' → logprob: -7.283260822296143
    7. '        
' → logprob: -8.033260345458984
    8. '  
' → logprob: -9.783260345458984
    9. '            
' → logprob: -10.783260345458984
    10. '   
' → logprob: -11.158260345458984

Token 191: ' stdout' (ID: 48014)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdout' (adapté à ' stdout') → logprob: -0.003208372974768281
    2. 'for' → logprob: -5.878208160400391
    3. '   ' → logprob: -8.00320816040039
    4. ' stdout' → logprob: -9.87820816040039
    5. 'stdin' → logprob: -11.62820816040039
    6. '    
' → logprob: -13.12820816040039
    7. ' for' → logprob: -13.25320816040039
    8. '```' → logprob: -13.62820816040039
    9. 'stderr' → logprob: -14.00320816040039
    10. '.stdout' → logprob: -14.12820816040039

Token 192: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -0.0009156247251667082
    2. '.write' → logprob: -7.00091552734375
    3. '.' → logprob: -12.50091552734375
    4. 'w' → logprob: -15.25091552734375
    5. '.writerow' → logprob: -16.50091552734375
    6. ' .' → logprob: -16.62591552734375
    7. '".' → logprob: -18.37591552734375
    8. '\.' → logprob: -18.62591552734375
    9. '`.' → logprob: -18.75091552734375
    10. '   ' → logprob: -18.75091552734375

Token 193: 'rit' (ID: 1166)
  Prédit: 'rit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rit' → logprob: -0.000193527273950167
    2. 'rites' → logprob: -9.37519359588623
    3. 'ritel' → logprob: -9.50019359588623
    4. 'riteln' → logprob: -10.50019359588623
    5. 'rite' → logprob: -12.50019359588623
    6. 'riter' → logprob: -13.37519359588623
    7. 'r' → logprob: -14.25019359588623
    8. 'rl' → logprob: -16.625192642211914
    9. 'riet' → logprob: -16.625192642211914
    10. 'riters' → logprob: -17.000192642211914

Token 194: 'elines' (ID: 14368)
  Prédit: 'elines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elines' → logprob: -0.005931401159614325
    2. 'es' → logprob: -5.630931377410889
    3. 'ines' → logprob: -6.505931377410889
    4. 'lines' → logprob: -7.255931377410889
    5. 'els' → logprob: -9.630931854248047
    6. 'el' → logprob: -10.255931854248047
    7. 'eles' → logprob: -11.380931854248047
    8. 'eline' → logprob: -11.880931854248047
    9. '(lines' → logprob: -12.630931854248047
    10. 'enes' → logprob: -13.755931854248047

Token 195: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00011534435179783031
    2. 'f' → logprob: -9.125115394592285
    3. '(' → logprob: -12.000115394592285
    4. '(
' → logprob: -16.62511444091797
    5. '((' → logprob: -16.62511444091797
    6. '   ' → logprob: -17.25011444091797
    7. '[f' → logprob: -17.87511444091797
    8. ' f' → logprob: -18.00011444091797
    9. ' (' → logprob: -18.62511444091797
    10. '	f' → logprob: -18.62511444091797

Token 196: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -3.500108141452074e-05
    2. 'f' → logprob: -10.375035285949707
    3. '{' → logprob: -12.625035285949707
    4. ' f' → logprob: -15.125035285949707
    5. ' "{' → logprob: -16.75003433227539
    6. ''{' → logprob: -16.75003433227539
    7. '("{' → logprob: -17.00003433227539
    8. '"' → logprob: -17.25003433227539
    9. '(f' → logprob: -19.12503433227539
    10. '   ' → logprob: -19.12503433227539

Token 197: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -4.36574100604048e-06
    2. '{' → logprob: -13.000004768371582
    3. ' u' → logprob: -13.750004768371582
    4. '   ' → logprob: -14.250004768371582
    5. '	u' → logprob: -16.625003814697266
    6. '"{' → logprob: -16.750003814697266
    7. '```' → logprob: -16.875003814697266
    8. '{}' → logprob: -17.000003814697266
    9. '}' → logprob: -17.000003814697266
    10. '(u' → logprob: -17.125003814697266

Token 198: '}' (ID: 92)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.8606641292572021
    2. '}' → logprob: -0.9856641292572021
    3. ' v' → logprob: -1.9856641292572021
    4. ' f' → logprob: -3.110664129257202
    5. '{' → logprob: -4.860664367675781
    6. ' u' → logprob: -4.985664367675781
    7. ' ' → logprob: -5.610664367675781
    8. '"' → logprob: -6.110664367675781
    9. ' }' → logprob: -7.610664367675781
    10. ' "' → logprob: -7.860664367675781

Token 199: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.10381606966257095
    2. ' f' → logprob: -3.103816032409668
    3. ' v' → logprob: -3.353816032409668
    4. '{' → logprob: -3.978816032409668
    5. ' ' → logprob: -10.603816032409668
    6. '"' → logprob: -10.853816032409668
    7. '}' → logprob: -11.228816032409668
    8. 'v' → logprob: -12.228816032409668
    9. 'f' → logprob: -12.478816032409668
    10. '{}' → logprob: -13.353816032409668

Token 200: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.088346359931165e-07
    2. ' v' → logprob: -14.375000953674316
    3. '   ' → logprob: -16.375
    4. ' ' → logprob: -16.375
    5. '{' → logprob: -18.125
    6. '	v' → logprob: -18.375
    7. '```' → logprob: -18.375
    8. '    ' → logprob: -18.5
    9. '  ' → logprob: -18.625
    10. '}' → logprob: -19.25

Token 201: '}\' (ID: 21170)
  Prédit: '}\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}\' → logprob: -1.0683535037969705e-05
    2. '\n' → logprob: -11.50001049041748
    3. ' }\' → logprob: -15.87501049041748
    4. '}\\' → logprob: -16.250011444091797
    5. '   ' → logprob: -16.500011444091797
    6. '}' → logprob: -16.750011444091797
    7. ')\' → logprob: -16.750011444091797
    8. ']\' → logprob: -17.500011444091797
    9. '"}' → logprob: -17.625011444091797
    10. '}}\' → logprob: -17.750011444091797

Token 202: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -7.183501293184236e-05
    2. 'n' → logprob: -9.75007152557373
    3. '}\' → logprob: -11.25007152557373
    4. '"\' → logprob: -15.62507152557373
    5. ')\' → logprob: -15.75007152557373
    6. 'for' → logprob: -17.000072479248047
    7. ' \' → logprob: -17.625072479248047
    8. '")' → logprob: -17.625072479248047
    9. '\' → logprob: -17.750072479248047
    10. '``' → logprob: -17.875072479248047

Token 203: '"' (ID: 1)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10021217912435532
    2. 'for' → logprob: -2.3502120971679688
    3. ')' → logprob: -13.475212097167969
    4. '   ' → logprob: -13.475212097167969
    5. '       ' → logprob: -14.350212097167969
    6. '           ' → logprob: -14.350212097167969
    7. '	for' → logprob: -14.600212097167969
    8. '               ' → logprob: -14.725212097167969
    9. '        ' → logprob: -15.350212097167969
    10. '    ' → logprob: -15.725212097167969

Token 204: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2014695703983307
    2. ' for' → logprob: -1.7014695405960083
    3. ')' → logprob: -10.826469421386719
    4. '   ' → logprob: -10.826469421386719
    5. '               ' → logprob: -12.326469421386719
    6. '           ' → logprob: -12.451469421386719
    7. '       ' → logprob: -12.951469421386719
    8. '        ' → logprob: -13.576469421386719
    9. '    ' → logprob: -13.951469421386719
    10. '	for' → logprob: -14.076469421386719

Token 205: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.011365159414708614
    2. ' u' → logprob: -4.511364936828613
    3. '(u' → logprob: -8.136364936828613
    4. ' (' → logprob: -11.886364936828613
    5. '	u' → logprob: -12.136364936828613
    6. '   ' → logprob: -12.636364936828613
    7. '  ' → logprob: -13.136364936828613
    8. '```' → logprob: -13.136364936828613
    9. ' ' → logprob: -13.261364936828613
    10. '*u' → logprob: -13.511364936828613

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00862131267786026
    2. ',v' → logprob: -4.7586212158203125
    3. 'v' → logprob: -12.133621215820312
    4. ' ,' → logprob: -14.008621215820312
    5. '_,' → logprob: -15.883621215820312
    6. '```' → logprob: -16.008621215820312
    7. 'in' → logprob: -16.383621215820312
    8. ',
' → logprob: -17.383621215820312
    9. ',_' → logprob: -17.633621215820312
    10. '‌,' → logprob: -18.008621215820312

Token 207: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0006648990092799067
    2. ' v' → logprob: -7.375664710998535
    3. 'extra' → logprob: -10.750664710998535
    4. ',v' → logprob: -11.125664710998535
    5. ' extra' → logprob: -13.750664710998535
    6. '(v' → logprob: -15.125664710998535
    7. '(extra' → logprob: -16.12566566467285
    8. '
' → logprob: -16.50066566467285
    9. ')v' → logprob: -16.50066566467285
    10. 'w' → logprob: -16.62566566467285

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038056522607803345
    2. 'in' → logprob: -3.2880566120147705
    3. ')' → logprob: -11.288056373596191
    4. 's' → logprob: -14.788056373596191
    5. 'In' → logprob: -15.038056373596191
    6. '   ' → logprob: -15.038056373596191
    7. ' ' → logprob: -15.788056373596191
    8. '
' → logprob: -15.913056373596191
    9. 'import' → logprob: -16.038057327270508
    10. 'extra' → logprob: -16.038057327270508

Token 209: ' extra' (ID: 5018)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -0.023248156532645226
    2. ' extra' → logprob: -3.7732481956481934
    3. '(extra' → logprob: -13.023247718811035
    4. 'extras' → logprob: -15.648247718811035
    5. '_extra' → logprob: -16.52324867248535
    6. 'Extra' → logprob: -17.39824867248535
    7. '.extra' → logprob: -17.39824867248535
    8. ')' → logprob: -17.64824867248535
    9. '   ' → logprob: -18.14824867248535
    10. ' extras' → logprob: -18.52324867248535

Token 210: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.5048530030981055e-06
    2. 'edges' → logprob: -13.500001907348633
    3. '_extra' → logprob: -17.125001907348633
    4. '```' → logprob: -17.625001907348633
    5. 'Edges' → logprob: -18.000001907348633
    6. '_edge' → logprob: -18.875001907348633
    7. '_' → logprob: -19.375001907348633
    8. '_lines' → logprob: -19.500001907348633
    9. '_ed' → logprob: -19.500001907348633
    10. ')' → logprob: -19.625001907348633

Token 211: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00152009935118258
    2. '()' → logprob: -6.501520156860352
    3. '())
' → logprob: -12.001520156860352
    4. ')' → logprob: -12.626520156860352
    5. ' ())' → logprob: -12.751520156860352
    6. '()))' → logprob: -12.876520156860352
    7. '()
' → logprob: -14.126520156860352
    8. '();)' → logprob: -14.251520156860352
    9. '()]' → logprob: -14.501520156860352
    10. '())

' → logprob: -14.751520156860352

Token 212: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007475420832633972
    2. '<|end|>' → logprob: -5.75747537612915
    3. '\n' → logprob: -6.25747537612915
    4. '
' → logprob: -6.88247537612915
    5. '```' → logprob: -7.50747537612915
    6. ' if' → logprob: -7.50747537612915
    7. 'main' → logprob: -9.757475852966309
    8. '#' → logprob: -9.882475852966309
    9. '\' → logprob: -10.257475852966309
    10. '    
' → logprob: -10.382475852966309

Token 213: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005234952084720135
    2. '__' → logprob: -5.255234718322754
    3. '_' → logprob: -14.755234718322754
    4. ' ' → logprob: -15.505234718322754
    5. ' ' → logprob: -15.755234718322754
    6. ' _' → logprob: -15.880234718322754
    7. '_name' → logprob: -16.25523567199707
    8. 'name' → logprob: -17.13023567199707
    9. ' ___' → logprob: -17.25523567199707
    10. ' name' → logprob: -17.38023567199707

Token 214: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008569537661969662
    2. '==' → logprob: -5.133569717407227
    3. ' ==' → logprob: -6.008569717407227
    4. ' __' → logprob: -9.383569717407227
    5. '__.__' → logprob: -10.008569717407227
    6. '=="' → logprob: -10.758569717407227
    7. '__.' → logprob: -11.258569717407227
    8. '.__' → logprob: -12.133569717407227
    9. '_' → logprob: -12.758569717407227
    10. 'name' → logprob: -12.883569717407227

Token 215: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003662020608317107
    2. '==' → logprob: -8.3753662109375
    3. '__.__' → logprob: -9.0003662109375
    4. '=="' → logprob: -11.8753662109375
    5. ' ==' → logprob: -13.7503662109375
    6. '__.' → logprob: -14.0003662109375
    7. '__["' → logprob: -14.0003662109375
    8. '___' → logprob: -15.2503662109375
    9. '__[' → logprob: -15.3753662109375
    10. '__
' → logprob: -15.5003662109375

Token 216: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4484524428844452
    2. '==' → logprob: -1.0734524726867676
    3. '=="' → logprob: -4.198452472686768
    4. '__' → logprob: -5.698452472686768
    5. '=='' → logprob: -6.823452472686768
    6. ' =="' → logprob: -9.94845199584961
    7. '=' → logprob: -11.19845199584961
    8. '==
' → logprob: -11.94845199584961
    9. '[' → logprob: -12.19845199584961
    10. '===' → logprob: -12.44845199584961

Token 217: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00034237600630149245
    2. ''' → logprob: -8.00034236907959
    3. ' "__' → logprob: -12.12534236907959
    4. '__' → logprob: -14.00034236907959
    5. '"user' → logprob: -14.87534236907959
    6. '"name' → logprob: -16.125343322753906
    7. ''"' → logprob: -17.500343322753906
    8. '"_' → logprob: -17.500343322753906
    9. '("__' → logprob: -18.000343322753906
    10. '"type' → logprob: -18.125343322753906

Token 218: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0003078142472077161
    2. '__' → logprob: -8.7503080368042
    3. 'name' → logprob: -9.1253080368042
    4. '"' → logprob: -10.2503080368042
    5. ''' → logprob: -13.2503080368042
    6. '_main' → logprob: -13.6253080368042
    7. ' main' → logprob: -14.0003080368042
    8. '__":
' → logprob: -15.2503080368042
    9. '(main' → logprob: -15.5003080368042
    10. '('__' → logprob: -15.6253080368042

Token 219: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06221628561615944
    2. '__' → logprob: -2.812216281890869
    3. '__':
' → logprob: -8.937216758728027
    4. '__.' → logprob: -9.437216758728027
    5. '__.__' → logprob: -10.812216758728027
    6. '__["' → logprob: -11.187216758728027
    7. '__:' → logprob: -13.562216758728027
    8. '__
' → logprob: -14.437216758728027
    9. '__[' → logprob: -14.812216758728027
    10. '__",' → logprob: -14.812216758728027

Token 220: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6943733096122742
    2. '   ' → logprob: -0.9443733096122742
    3. '	main' → logprob: -2.319373369216919
    4. ' main' → logprob: -4.31937313079834
    5. '    
' → logprob: -11.44437313079834
    6. ' ' → logprob: -11.44437313079834
    7. '_main' → logprob: -12.06937313079834
    8. '(main' → logprob: -12.06937313079834
    9. '  ' → logprob: -12.31937313079834
    10. '   ' → logprob: -13.44437313079834

Token 221: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -18.875
    4. '   ' → logprob: -22.125
    5. '(main' → logprob: -22.875
    6. '.main' → logprob: -23.75
    7. '_main' → logprob: -23.875
    8. 'mainwindow' → logprob: -25.75
    9. 'Main' → logprob: -26.125
    10. '    
' → logprob: -27.125

Token 222: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005792465526610613
    2. '()
' → logprob: -8.000578880310059
    3. '(' → logprob: -8.500578880310059
    4. '()\' → logprob: -11.125578880310059
    5. '(
' → logprob: -11.500578880310059
    6. '
' → logprob: -12.625578880310059
    7. '```' → logprob: -12.750578880310059
    8. ' ()' → logprob: -13.250578880310059
    9. '<|end|>' → logprob: -13.250578880310059
    10. '();' → logprob: -13.750578880310059


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 220
Tokens correctement prédits (1ère position, stricte): 107
Tokens correctement prédits (1ère position, avec adaptation): 113
Tokens correctement prédits (top 10): 194
Précision stricte (1ère position): 48.64%
Précision adaptée (1ère position): 51.36%
Précision (top 10): 88.18%
================================================================================
