================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import groupby
x = input()
if x[0] == ">":
    x = "<" + x
if x[-1] == "<":
    x += ">"
l = []
for k, g in groupby(x):
    l.append(len(list(g)))
ans = 0
i = 0
while i < len(l) - 1:
    a = l[i]
    b = l[i+1]
    if a > b:
        M = a
        m = b
    else:
        M = b
        m = a
    ans += M * (M + 1) // 2 + m * (m - 1) // 2
    i += 2
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' group' (ID: 3566)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.7455320358276367
    2. 'product' → logprob: -1.6205320358276367
    3. 'count' → logprob: -2.2455320358276367
    4. 'per' → logprob: -2.3705320358276367
    5. 'group' → logprob: -2.8705320358276367
    6. 'cycle' → logprob: -3.1205320358276367
    7. 'chain' → logprob: -4.745532035827637
    8. ' product' → logprob: -5.370532035827637
    9. ' permutations' → logprob: -5.620532035827637
    10. ' cycle' → logprob: -5.745532035827637

Token 4: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.00032068457221612334
    2. 's' → logprob: -8.500320434570312
    3. 'y' → logprob: -9.500320434570312
    4. 'b' → logprob: -11.250320434570312
    5. 'tools' → logprob: -11.375320434570312
    6. 'ertools' → logprob: -11.875320434570312
    7. 'by's' → logprob: -12.875320434570312
    8. 'ers' → logprob: -13.125320434570312
    9. 'it' → logprob: -13.125320434570312
    10. 'byt' → logprob: -13.500320434570312

Token 5: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000610690622124821
    2. '.' → logprob: -7.875610828399658
    3. '(
' → logprob: -9.0006103515625
    4. '\(' → logprob: -9.5006103515625
    5. ',' → logprob: -11.6256103515625
    6. 'def' → logprob: -12.5006103515625
    7. ''' → logprob: -12.6256103515625
    8. ' (' → logprob: -12.8756103515625
    9. '`' → logprob: -13.5006103515625
    10. '#' → logprob: -13.6256103515625

Token 6: 'x' (ID: 87)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023097654338926077
    2. '(
' → logprob: -6.252309799194336
    3. 'def' → logprob: -9.252309799194336
    4. '\(' → logprob: -9.377309799194336
    5. '.' → logprob: -10.252309799194336
    6. '\' → logprob: -10.377309799194336
    7. ',' → logprob: -10.752309799194336
    8. '#' → logprob: -11.002309799194336
    9. '```' → logprob: -11.002309799194336
    10. '\n' → logprob: -11.127309799194336

Token 7: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.35353711247444153
    2. '[' → logprob: -1.3535370826721191
    3. 's' → logprob: -4.228537082672119
    4. '=' → logprob: -4.978537082672119
    5. '(' → logprob: -5.103537082672119
    6. ',' → logprob: -5.353537082672119
    7. ')' → logprob: -5.853537082672119
    8. ' =' → logprob: -6.853537082672119
    9. '_' → logprob: -6.853537082672119
    10. '[:]' → logprob: -7.728537082672119

Token 8: ' input' (ID: 3422)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.05732572823762894
    2. '[' → logprob: -2.932325839996338
    3. ' []' → logprob: -6.932325839996338
    4. ' ' → logprob: -7.307325839996338
    5. ' [('' → logprob: -8.93232536315918
    6. ' [[' → logprob: -9.43232536315918
    7. 'range' → logprob: -9.43232536315918
    8. ' ['' → logprob: -9.43232536315918
    9. ' [(' → logprob: -9.55732536315918
    10. '[int' → logprob: -9.55732536315918

Token 9: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001287736464291811
    2. '('' → logprob: -7.126287937164307
    3. ''' → logprob: -8.126287460327148
    4. '("("' → logprob: -9.751287460327148
    5. '(
' → logprob: -10.001287460327148
    6. '```' → logprob: -11.001287460327148
    7. '"' → logprob: -11.126287460327148
    8. '`' → logprob: -11.501287460327148
    9. ')' → logprob: -11.751287460327148
    10. '()' → logprob: -11.876287460327148

Token 10: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07806606590747833
    2. ' for' → logprob: -4.328065872192383
    3. '.groupby' → logprob: -4.328065872192383
    4. 'group' → logprob: -4.453065872192383
    5. 'groups' → logprob: -4.953065872192383
    6. '.' → logprob: -4.953065872192383
    7. 's' → logprob: -4.953065872192383
    8. '[' → logprob: -5.578065872192383
    9. 'result' → logprob: -6.078065872192383
    10. 'sorted' → logprob: -6.203065872192383

Token 11: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05405445024371147
    2. ' x' → logprob: -3.0540544986724854
    3. 'x' → logprob: -5.429054260253906
    4. ''' → logprob: -7.679054260253906
    5. ' not' → logprob: -8.054054260253906
    6. '  ' → logprob: -8.554054260253906
    7. '"' → logprob: -10.304054260253906
    8. ' len' → logprob: -11.054054260253906
    9. 'not' → logprob: -11.304054260253906
    10. ' '' → logprob: -11.554054260253906

Token 12: '[' (ID: 58)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8379448056221008
    2. '.' → logprob: -1.462944746017456
    3. '[' → logprob: -1.587944746017456
    4. ' ' → logprob: -2.462944746017456
    5. ' .' → logprob: -3.837944746017456
    6. '==' → logprob: -4.212944984436035
    7. ' !=' → logprob: -6.712944984436035
    8. ' in' → logprob: -6.837944984436035
    9. '.strip' → logprob: -6.837944984436035
    10. '[:]' → logprob: -6.837944984436035

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008648726157844067
    2. ' ' → logprob: -4.883648872375488
    3. '1' → logprob: -7.133648872375488
    4. ':' → logprob: -8.758648872375488
    5. ' :' → logprob: -10.258648872375488
    6. ']' → logprob: -11.383648872375488
    7. '-' → logprob: -12.008648872375488
    8. '2' → logprob: -12.258648872375488
    9. '   ' → logprob: -12.383648872375488
    10. '==' → logprob: -12.383648872375488

Token 14: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1978844702243805
    2. '==' → logprob: -2.5728845596313477
    3. ' ==' → logprob: -3.1978845596313477
    4. ' ]' → logprob: -3.4478845596313477
    5. '=' → logprob: -4.572884559631348
    6. '[' → logprob: -4.822884559631348
    7. ']==' → logprob: -5.197884559631348
    8. ':' → logprob: -6.572884559631348
    9. ' ' → logprob: -6.697884559631348
    10. ' in' → logprob: -7.197884559631348

Token 15: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4626196622848511
    2. '==' → logprob: -1.087619662284851
    3. ' in' → logprob: -4.712619781494141
    4. ' ' → logprob: -5.087619781494141
    5. '!=' → logprob: -5.087619781494141
    6. ' !=' → logprob: -5.712619781494141
    7. '=' → logprob: -5.962619781494141
    8. ':' → logprob: -6.587619781494141
    9. '.' → logprob: -6.587619781494141
    10. ' not' → logprob: -7.212619781494141

Token 16: ' ">' (ID: 65561)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00826006568968296
    2. ''' → logprob: -5.883260250091553
    3. ''x' → logprob: -5.883260250091553
    4. ' x' → logprob: -6.008260250091553
    5. '"x' → logprob: -9.133259773254395
    6. '"' → logprob: -10.133259773254395
    7. ' '' → logprob: -11.008259773254395
    8. ' ' → logprob: -11.508259773254395
    9. '   ' → logprob: -12.758259773254395
    10. '  ' → logprob: -13.008259773254395

Token 17: '":
' (ID: 9213)
  Prédit: '">'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '">' → logprob: -0.8058858513832092
    2. ''' → logprob: -1.8058857917785645
    3. '=' → logprob: -2.0558857917785645
    4. '"' → logprob: -2.4308857917785645
    5. '>' → logprob: -2.9308857917785645
    6. '<' → logprob: -3.3058857917785645
    7. ''>' → logprob: -3.3058857917785645
    8. 'x' → logprob: -3.8058857917785645
    9. '":' → logprob: -5.4308857917785645
    10. '"<' → logprob: -5.6808857917785645

Token 18: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1792169213294983
    2. '=' → logprob: -3.0542168617248535
    3. ':' → logprob: -3.3042168617248535
    4. '"' → logprob: -3.9292168617248535
    5. ' x' → logprob: -4.0542168617248535
    6. ' "' → logprob: -4.4292168617248535
    7. ' :' → logprob: -5.0542168617248535
    8. ''' → logprob: -5.4292168617248535
    9. '>' → logprob: -5.5542168617248535
    10. 'x' → logprob: -5.6792168617248535

Token 19: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5420433282852173
    2. ' print' → logprob: -1.5420433282852173
    3. ' x' → logprob: -1.6670433282852173
    4. ' for' → logprob: -2.6670432090759277
    5. 'x' (adapté à ' x') → logprob: -2.9170432090759277
    6. 'print' → logprob: -3.4170432090759277
    7. '"' → logprob: -3.4170432090759277
    8. ' "' → logprob: -3.4170432090759277
    9. ' pass' → logprob: -3.7920432090759277
    10. ':' → logprob: -4.667043209075928

Token 20: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08160271495580673
    2. '=' → logprob: -3.3316028118133545
    3. ' =' → logprob: -3.8316028118133545
    4. '.' → logprob: -4.581602573394775
    5. ' ' → logprob: -5.331602573394775
    6. ':' → logprob: -6.331602573394775
    7. '+' → logprob: -7.081602573394775
    8. '[:]' → logprob: -7.581602573394775
    9. '.split' → logprob: -8.081603050231934
    10. ',' → logprob: -8.206603050231934

Token 21: ' "<' (ID: 8817)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20224833488464355
    2. ' x' → logprob: -1.7022483348846436
    3. '"x' → logprob: -7.577248573303223
    4. '"' → logprob: -8.452248573303223
    5. ' "' → logprob: -10.577248573303223
    6. ''' → logprob: -10.702248573303223
    7. ''x' → logprob: -10.827248573303223
    8. '">' → logprob: -11.202248573303223
    9. ' ' → logprob: -11.577248573303223
    10. ' '' → logprob: -12.452248573303223

Token 22: '"' (ID: 1)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5933073163032532
    2. '/' → logprob: -1.7183072566986084
    3. '"' → logprob: -2.0933072566986084
    4. '>' → logprob: -3.2183072566986084
    5. 'x' → logprob: -3.5933072566986084
    6. '!' → logprob: -4.7183074951171875
    7. 'code' → logprob: -4.7183074951171875
    8. '">' → logprob: -4.7183074951171875
    9. '+' → logprob: -4.9683074951171875
    10. '```' → logprob: -5.8433074951171875

Token 23: ' +' (ID: 659)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4549309313297272
    2. 'else' → logprob: -1.7049309015274048
    3. 'elif' → logprob: -2.7049310207366943
    4. '<|end|>' → logprob: -3.7049310207366943
    5. ' else' → logprob: -3.8299310207366943
    6. '+' → logprob: -4.204930782318115
    7. ' or' → logprob: -4.204930782318115
    8. '=' → logprob: -4.329930782318115
    9. '|' → logprob: -4.954930782318115
    10. 'x' → logprob: -5.579930782318115

Token 24: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029809731990098953
    2. ' x' → logprob: -3.5298097133636475
    3. '"x' → logprob: -10.404809951782227
    4. '>x' → logprob: -11.279809951782227
    5. '>' → logprob: -13.154809951782227
    6. '+' → logprob: -13.154809951782227
    7. '(x' → logprob: -13.279809951782227
    8. '=' → logprob: -13.404809951782227
    9. '	x' → logprob: -13.404809951782227
    10. '=x' → logprob: -13.779809951782227

Token 25: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3902033970225602e-05
    2. '[len' → logprob: -12.250014305114746
    3. '[:-' → logprob: -12.875014305114746
    4. '```' → logprob: -13.500014305114746
    5. ' [' → logprob: -14.625014305114746
    6. '1' → logprob: -14.625014305114746
    7. '>' → logprob: -14.625014305114746
    8. 'from' → logprob: -14.875014305114746
    9. 'x' → logprob: -15.000014305114746
    10. ' ' → logprob: -15.125014305114746

Token 26: 'if' (ID: 366)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03148679435253143
    2. '<|end|>' → logprob: -3.906486749649048
    3. '+' → logprob: -5.781486988067627
    4. '>' → logprob: -6.531486988067627
    5. '.' → logprob: -6.656486988067627
    6. 'x' → logprob: -7.031486988067627
    7. 'elif' → logprob: -7.406486988067627
    8. '[len' → logprob: -7.656486988067627
    9. '.replace' → logprob: -7.656486988067627
    10. '<|end|>' → logprob: -7.781486988067627

Token 27: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2373395413160324
    2. ' ' → logprob: -2.612339496612549
    3. ' len' → logprob: -2.612339496612549
    4. 'x' → logprob: -3.237339496612549
    5. ' not' → logprob: -4.862339496612549
    6. '"' → logprob: -4.862339496612549
    7. 'len' → logprob: -5.612339496612549
    8. ' "' → logprob: -6.112339496612549
    9. ''' → logprob: -6.237339496612549
    10. '  ' → logprob: -7.737339496612549

Token 28: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003272660542279482
    2. '[-' → logprob: -5.878272533416748
    3. '==' → logprob: -9.128273010253906
    4. ' ==' → logprob: -9.753273010253906
    5. '.' → logprob: -10.003273010253906
    6. '[]' → logprob: -10.128273010253906
    7. '[:' → logprob: -10.253273010253906
    8. '.startswith' → logprob: -10.878273010253906
    9. '!=' → logprob: -10.878273010253906
    10. '.count' → logprob: -11.128273010253906

Token 29: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3511142432689667
    2. '1' → logprob: -1.351114273071289
    3. '">' → logprob: -4.476114273071289
    4. '0' → logprob: -4.601114273071289
    5. '"]' → logprob: -4.726114273071289
    6. '"' → logprob: -5.726114273071289
    7. '-' → logprob: -7.351114273071289
    8. ']>' → logprob: -7.726114273071289
    9. ':]' → logprob: -8.101114273071289
    10. '2' → logprob: -8.101114273071289

Token 30: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04776681959629059
    2. '==' → logprob: -3.297766923904419
    3. ' ==' → logprob: -5.42276668548584
    4. ']==' → logprob: -6.04776668548584
    5. '!=' → logprob: -7.04776668548584
    6. ' !=' → logprob: -7.79776668548584
    7. ' ]' → logprob: -7.92276668548584
    8. ' ' → logprob: -8.04776668548584
    9. '=' → logprob: -8.92276668548584
    10. ')' → logprob: -9.04776668548584

Token 31: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6264306306838989
    2. '==' → logprob: -0.8764306306838989
    3. ' !=' → logprob: -3.5014305114746094
    4. '!=' → logprob: -4.251430511474609
    5. ' ' → logprob: -6.501430511474609
    6. '=' → logprob: -6.626430511474609
    7. '[' → logprob: -6.751430511474609
    8. '  ' → logprob: -8.50143051147461
    9. '   ' → logprob: -9.37643051147461
    10. '+' → logprob: -9.62643051147461

Token 32: ' "<' (ID: 8817)
  Prédit: '">'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '">' → logprob: -0.017395194619894028
    2. '"<' → logprob: -5.01739501953125
    3. '"' → logprob: -5.64239501953125
    4. '>' → logprob: -5.76739501953125
    5. ' ">' → logprob: -6.26739501953125
    6. '<' → logprob: -7.76739501953125
    7. ' "' → logprob: -7.89239501953125
    8. ' "<' → logprob: -8.14239501953125
    9. ''' → logprob: -8.26739501953125
    10. '"><' → logprob: -8.51739501953125

Token 33: '":
' (ID: 9213)
  Prédit: '">'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '">' → logprob: -0.6942822933197021
    2. '>' → logprob: -1.4442822933197021
    3. '":' → logprob: -1.5692822933197021
    4. ':' → logprob: -3.319282293319702
    5. '"' → logprob: -4.069282531738281
    6. ' ">' → logprob: -6.944282531738281
    7. '>:' → logprob: -7.444282531738281
    8. ' >' → logprob: -8.069282531738281
    9. '<' → logprob: -8.569282531738281
    10. '+' → logprob: -8.569282531738281

Token 34: '   ' (ID: 271)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6059114336967468
    2. '   ' → logprob: -1.7309114933013916
    3. ' x' → logprob: -1.8559114933013916
    4. '">' → logprob: -3.2309114933013916
    5. ' >' → logprob: -3.3559114933013916
    6. '"' → logprob: -4.3559112548828125
    7. 'x' → logprob: -4.6059112548828125
    8. ' ' → logprob: -4.9809112548828125
    9. '    ' → logprob: -5.7309112548828125
    10. '       ' → logprob: -6.6059112548828125

Token 35: ' x' (ID: 1215)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11015656590461731
    2. '">' → logprob: -2.360156536102295
    3. 'x' (adapté à ' x') → logprob: -4.860156536102295
    4. '>x' → logprob: -6.860156536102295
    5. ' x' → logprob: -8.735157012939453
    6. ' >' → logprob: -8.735157012939453
    7. '&gt' → logprob: -8.860157012939453
    8. '   ' → logprob: -8.985157012939453
    9. '"' → logprob: -9.235157012939453
    10. '<' → logprob: -9.735157012939453

Token 36: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48398125171661377
    2. ' =' → logprob: -0.9839812517166138
    3. '+' → logprob: -5.483981132507324
    4. ' +=' → logprob: -5.858981132507324
    5. '+=' → logprob: -6.483981132507324
    6. ' +' → logprob: -7.733981132507324
    7. '>' → logprob: -7.858981132507324
    8. '<' → logprob: -8.358981132507324
    9. ' ' → logprob: -9.608981132507324
    10. ')' → logprob: -9.858981132507324

Token 37: ' "' (ID: 392)
  Prédit: '">'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '">' → logprob: -0.005404507741332054
    2. '"' → logprob: -5.755404472351074
    3. '>' → logprob: -6.130404472351074
    4. ' "' → logprob: -10.880404472351074
    5. '(">' → logprob: -12.505404472351074
    6. '>"' → logprob: -12.880404472351074
    7. ''' → logprob: -13.005404472351074
    8. '_' → logprob: -13.505404472351074
    9. ''>' → logprob: -13.630404472351074
    10. ' ">' → logprob: -13.630404472351074

Token 38: '>"
' (ID: 48119)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.24467000365257263
    2. '>"' → logprob: -1.994670033454895
    3. '">' → logprob: -2.8696699142456055
    4. '"' → logprob: -3.7446699142456055
    5. ' "' → logprob: -9.494669914245605
    6. '(">' → logprob: -9.494669914245605
    7. '+' → logprob: -9.869669914245605
    8. '>";' → logprob: -9.994669914245605
    9. '_' → logprob: -10.494669914245605
    10. ' ">' → logprob: -10.744669914245605

Token 39: 'l' (ID: 75)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -1.4155759811401367
    2. 'res' → logprob: -1.7905759811401367
    3. 'for' → logprob: -1.7905759811401367
    4. 'result' → logprob: -2.0405759811401367
    5. 's' → logprob: -3.1655759811401367
    6. 'pairs' → logprob: -3.2905759811401367
    7. 'ans' → logprob: -3.4155759811401367
    8. 'answer' → logprob: -4.165575981140137
    9. 'y' → logprob: -4.165575981140137
    10. 'a' → logprob: -4.415575981140137

Token 40: ' =' (ID: 314)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.3546278178691864
    2. 'ast' → logprob: -2.104627847671509
    3. 'e' → logprob: -2.229627847671509
    4. 'ength' → logprob: -3.479627847671509
    5. 'x' → logprob: -4.97962760925293
    6. 'eft' → logprob: -5.10462760925293
    7. 'ist' → logprob: -5.35462760925293
    8. 'i' → logprob: -5.60462760925293
    9. 'et' → logprob: -6.10462760925293
    10. 'ine' → logprob: -6.35462760925293

Token 41: ' []
' (ID: 8911)
  Prédit: '[group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[group' → logprob: -0.6103190183639526
    2. '[list' → logprob: -1.1103190183639526
    3. '[len' → logprob: -2.610319137573242
    4. ' [' → logprob: -4.110319137573242
    5. '[(' → logprob: -4.360319137573242
    6. '[' → logprob: -4.610319137573242
    7. '[x' → logprob: -5.235319137573242
    8. '[key' → logprob: -6.235319137573242
    9. 'list' → logprob: -6.235319137573242
    10. '[int' → logprob: -6.735319137573242

Token 42: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.055249180644750595
    2. ' for' → logprob: -2.9302492141723633
    3. '```' → logprob: -8.680249214172363
    4. 'group' → logprob: -9.055249214172363
    5. 'current' → logprob: -10.930249214172363
    6. 'groups' → logprob: -11.555249214172363
    7. ' group' → logprob: -11.930249214172363
    8. 'prev' → logprob: -12.180249214172363
    9. 'g' → logprob: -12.305249214172363
    10. 'i' → logprob: -12.555249214172363

Token 43: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.26424458622932434
    2. 'key' → logprob: -2.139244556427002
    3. ' k' → logprob: -3.014244556427002
    4. ' key' → logprob: -3.264244556427002
    5. '_,' → logprob: -4.139244556427002
    6. 'char' → logprob: -5.389244556427002
    7. 'c' → logprob: -6.264244556427002
    8. '_' → logprob: -7.014244556427002
    9. '   ' → logprob: -7.514244556427002
    10. ' char' → logprob: -7.639244556427002

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004822697374038398
    2. ',v' → logprob: -7.875482082366943
    3. ' ,' → logprob: -9.375482559204102
    4. ',g' → logprob: -12.000482559204102
    5. ',c' → logprob: -13.375482559204102
    6. ',l' → logprob: -13.625482559204102
    7. ',value' → logprob: -13.625482559204102
    8. ',_' → logprob: -13.875482559204102
    9. ',val' → logprob: -13.875482559204102
    10. ',key' → logprob: -14.250482559204102

Token 45: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.35596373677253723
    2. ' g' → logprob: -1.2309637069702148
    3. '_' → logprob: -5.605963706970215
    4. 'v' → logprob: -6.730963706970215
    5. ' _' → logprob: -6.980963706970215
    6. ' v' → logprob: -7.480963706970215
    7. 'group' → logprob: -7.730963706970215
    8. '_g' → logprob: -7.730963706970215
    9. ' group' → logprob: -9.230963706970215
    10. '	g' → logprob: -9.480963706970215

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07897725701332092
    2. 'in' → logprob: -2.578977346420288
    3. ' ' → logprob: -10.078977584838867
    4. ',' → logprob: -10.703977584838867
    5. '	in' → logprob: -12.328977584838867
    6. 's' → logprob: -12.578977584838867
    7. 'group' → logprob: -13.203977584838867
    8. '  ' → logprob: -13.578977584838867
    9. 'n' → logprob: -13.703977584838867
    10. '_' → logprob: -13.828977584838867

Token 47: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.10022003948688507
    2. ' group' → logprob: -2.350219964981079
    3. 'roup' → logprob: -11.9752197265625
    4. '	group' → logprob: -12.7252197265625
    5. '"group' → logprob: -13.1002197265625
    6. '.groupby' → logprob: -13.7252197265625
    7. ' ' → logprob: -14.8502197265625
    8. '(group' → logprob: -15.3502197265625
    9. '[group' → logprob: -15.7252197265625
    10. 'Group' → logprob: -15.9752197265625

Token 48: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.00014799882774241269
    2. 'y' → logprob: -8.875147819519043
    3. 'b' → logprob: -12.125147819519043
    4. ' ' → logprob: -14.500147819519043
    5. '```' → logprob: -14.625147819519043
    6. 'ed' → logprob: -15.625147819519043
    7. ')' → logprob: -15.750147819519043
    8. 'ing' → logprob: -15.875147819519043
    9. 'py' → logprob: -15.875147819519043
    10. ' by' → logprob: -16.00014877319336

Token 49: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0029567815363407135
    2. '(' → logprob: -5.877956867218018
    3. ' (' → logprob: -8.87795639038086
    4. 'x' → logprob: -12.50295639038086
    5. '(s' → logprob: -12.75295639038086
    6. '(
' → logprob: -13.75295639038086
    7. ' x' → logprob: -13.87795639038086
    8. '(range' → logprob: -14.25295639038086
    9. '(lambda' → logprob: -14.37795639038086
    10. '((' → logprob: -14.50295639038086

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10300282388925552
    2. ',' → logprob: -2.3530027866363525
    3. ')' → logprob: -7.103003025054932
    4. '(lambda' → logprob: -7.103003025054932
    5. ',k' → logprob: -8.103002548217773
    6. ' ):' → logprob: -8.478002548217773
    7. ',key' → logprob: -8.728002548217773
    8. ' ,' → logprob: -9.103002548217773
    9. 'lambda' → logprob: -9.103002548217773
    10. '):
' → logprob: -9.103002548217773

Token 51: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3573369085788727
    2. ' l' → logprob: -1.3573368787765503
    3. '   ' → logprob: -3.35733699798584
    4. '[' → logprob: -5.98233699798584
    5. ' [' → logprob: -6.10733699798584
    6. ' ' → logprob: -6.73233699798584
    7. '[l' → logprob: -7.10733699798584
    8. '    ' → logprob: -7.85733699798584
    9. '	l' → logprob: -8.73233699798584
    10. ' ['' → logprob: -8.85733699798584

Token 52: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.05048897862434387
    2. ' l' → logprob: -3.0504889488220215
    3. '   ' → logprob: -7.4254889488220215
    4. 'if' → logprob: -7.6754889488220215
    5. ' if' → logprob: -7.9254889488220215
    6. ' ' → logprob: -8.17548942565918
    7. 'len' → logprob: -9.55048942565918
    8. 'length' → logprob: -10.80048942565918
    9. 'count' → logprob: -10.80048942565918
    10. '    ' → logprob: -11.05048942565918

Token 53: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3869069814682007
    2. '.append' → logprob: -1.1369069814682007
    3. '.extend' → logprob: -10.886906623840332
    4. ' .' → logprob: -11.511906623840332
    5. '.Append' → logprob: -13.511906623840332
    6. '.ap' → logprob: -13.636906623840332
    7. '.app' → logprob: -13.761906623840332
    8. 'append' → logprob: -14.136906623840332
    9. '_append' → logprob: -14.511906623840332
    10. '.push' → logprob: -15.011906623840332

Token 54: '(len' (ID: 14990)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.04442177712917328
    2. '(len' → logprob: -3.294421672821045
    3. '(' → logprob: -5.544421672821045
    4. '(k' → logprob: -6.294421672821045
    5. '([' → logprob: -7.919421672821045
    6. '(g' → logprob: -9.044422149658203
    7. '(sum' → logprob: -10.294422149658203
    8. '(str' → logprob: -10.669422149658203
    9. '(list' → logprob: -10.794422149658203
    10. '(tuple' → logprob: -11.294422149658203

Token 55: '(list' (ID: 13116)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.01659049466252327
    2. '(' → logprob: -4.266590595245361
    3. '(list' → logprob: -6.141590595245361
    4. ' (' → logprob: -8.391590118408203
    5. '(s' → logprob: -10.266590118408203
    6. ')' → logprob: -12.516590118408203
    7. '(group' → logprob: -12.891590118408203
    8. '(k' → logprob: -13.391590118408203
    9. '(
' → logprob: -14.141590118408203
    10. '(

' → logprob: -14.766590118408203

Token 56: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -12.87500286102295
    3. 'g' → logprob: -15.75000286102295
    4. '(group' → logprob: -17.125001907348633
    5. ' (' → logprob: -18.000001907348633
    6. ')' → logprob: -18.750001907348633
    7. '	g' → logprob: -18.875001907348633
    8. '(s' → logprob: -19.125001907348633
    9. '(
' → logprob: -19.750001907348633
    10. ')(' → logprob: -20.250001907348633

Token 57: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.022018281742930412
    2. ')))' → logprob: -3.8970181941986084
    3. ')' → logprob: -7.0220184326171875
    4. '()))' → logprob: -7.5220184326171875
    5. ' ))' → logprob: -11.147018432617188
    6. '))
' → logprob: -11.272018432617188
    7. ' ' → logprob: -13.022018432617188
    8. '()' → logprob: -13.022018432617188
    9. '())))' → logprob: -13.022018432617188
    10. '),' → logprob: -13.272018432617188

Token 58: 'ans' (ID: 616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3160159587860107
    2. '[' → logprob: -1.3160159587860107
    3. '\n' → logprob: -2.0660159587860107
    4. ')' → logprob: -2.9410159587860107
    5. '<|end|>' → logprob: -3.1910159587860107
    6. '+' → logprob: -3.1910159587860107
    7. '\' → logprob: -3.5660159587860107
    8. '(' → logprob: -3.8160159587860107
    9. '-' → logprob: -3.8160159587860107
    10. '*' → logprob: -3.8160159587860107

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05511820316314697
    2. '=' → logprob: -2.9301180839538574
    3. '_' → logprob: -9.430118560791016
    4. 's' → logprob: -9.555118560791016
    5. '.' → logprob: -10.805118560791016
    6. '.append' → logprob: -10.930118560791016
    7. '[:]' → logprob: -11.430118560791016
    8. ':' → logprob: -12.055118560791016
    9. '=[]' → logprob: -12.680118560791016
    10. ')' → logprob: -12.680118560791016

Token 60: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4718925952911377
    2. ' max' → logprob: -1.8468925952911377
    3. 'min' → logprob: -1.9718925952911377
    4. ' min' → logprob: -3.7218925952911377
    5. 'l' → logprob: -4.346892356872559
    6. '"' → logprob: -4.471892356872559
    7. 'len' → logprob: -4.846892356872559
    8. 'sum' → logprob: -4.846892356872559
    9. ' l' → logprob: -5.471892356872559
    10. ' sum' → logprob: -6.346892356872559

Token 61: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.37416911125183105
    2. 'min' → logprob: -1.374169111251831
    3. 'sum' → logprob: -3.499169111251831
    4. 'str' → logprob: -4.24916934967041
    5. 'l' → logprob: -4.74916934967041
    6. 'len' → logprob: -5.62416934967041
    7. '"' → logprob: -7.62416934967041
    8. 'abs' → logprob: -7.99916934967041
    9. '(max' → logprob: -8.24916934967041
    10. 'x' → logprob: -8.62416934967041

Token 62: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22040098905563354
    2. ' for' → logprob: -1.7204010486602783
    3. '
' → logprob: -4.470400810241699
    4. '<|end|>' → logprob: -5.220400810241699
    5. 'i' → logprob: -7.845400810241699
    6. '\n' → logprob: -8.0954008102417
    7. '```' → logprob: -8.3454008102417
    8. 'n' → logprob: -8.7204008102417
    9. ',' → logprob: -8.8454008102417
    10. '+' → logprob: -8.8454008102417

Token 63: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018886705860495567
    2. ' for' → logprob: -4.518886566162109
    3. 'i' → logprob: -5.268886566162109
    4. 'prev' → logprob: -6.643886566162109
    5. 'current' → logprob: -7.768886566162109
    6. 'count' → logprob: -8.26888656616211
    7. 'cnt' → logprob: -9.14388656616211
    8. 's' → logprob: -9.39388656616211
    9. 'n' → logprob: -9.39388656616211
    10. 'cur' → logprob: -9.76888656616211

Token 64: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5644745230674744
    2. '+=' → logprob: -1.8144745826721191
    3. '+' → logprob: -2.064474582672119
    4. '=' → logprob: -2.689474582672119
    5. ' =' → logprob: -2.939474582672119
    6. ' ' → logprob: -4.189474582672119
    7. 'n' → logprob: -5.689474582672119
    8. ' +' → logprob: -6.939474582672119
    9. 's' → logprob: -8.314474105834961
    10. '<|end|>' → logprob: -8.564474105834961

Token 65: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7328351736068726
    2. ' ' → logprob: -0.8578351736068726
    3. '1' → logprob: -2.357835292816162
    4. '2' → logprob: -7.982835292816162
    5. 'len' → logprob: -8.482834815979004
    6. ' len' → logprob: -8.982834815979004
    7. ' -' → logprob: -10.482834815979004
    8. '-' → logprob: -10.607834815979004
    9. ' l' → logprob: -12.107834815979004
    10. '3' → logprob: -12.232834815979004

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16706235706806183
    2. '1' → logprob: -1.9170624017715454
    3. ' ' → logprob: -5.792062282562256
    4. 'len' → logprob: -5.792062282562256
    5. '-' → logprob: -7.542062282562256
    6. '2' → logprob: -9.292062759399414
    7. 'l' → logprob: -10.042062759399414
    8. ' len' → logprob: -10.667062759399414
    9. ' -' → logprob: -11.667062759399414
    10. '(len' → logprob: -13.042062759399414

Token 67: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.23318292200565338
    2. ' while' → logprob: -1.7331829071044922
    3. '<|end|>' → logprob: -3.858182907104492
    4. '
' → logprob: -4.608182907104492
    5. '<|end|>' → logprob: -10.108182907104492
    6. '```' → logprob: -10.108182907104492
    7. 'While' → logprob: -10.358182907104492
    8. '	while' → logprob: -10.733182907104492
    9. ' While' → logprob: -11.233182907104492
    10. ' ' → logprob: -11.358182907104492

Token 69: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011068098247051239
    2. 'i' → logprob: -4.511067867279053
    3. ' ' → logprob: -11.386068344116211
    4. ' len' → logprob: -13.136068344116211
    5. '	i' → logprob: -13.136068344116211
    6. ' True' → logprob: -13.386068344116211
    7. 'True' → logprob: -14.136068344116211
    8. ' ' → logprob: -14.261068344116211
    9. ' ans' → logprob: -14.511068344116211
    10. 'len' → logprob: -14.636068344116211

Token 70: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5413707494735718
    2. '<' → logprob: -0.9163707494735718
    3. '<len' → logprob: -4.041370868682861
    4. '+' → logprob: -7.666370868682861
    5. ' +' → logprob: -11.416370391845703
    6. ' ' → logprob: -11.666370391845703
    7. '<n' → logprob: -11.791370391845703
    8. '<size' → logprob: -12.041370391845703
    9. 'len' → logprob: -13.041370391845703
    10. '<=' → logprob: -13.916370391845703

Token 71: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3132677972316742
    2. ' len' → logprob: -1.3132678270339966
    3. ' ' → logprob: -12.188267707824707
    4. '(len' → logprob: -14.188267707824707
    5. '  ' → logprob: -16.313268661499023
    6. '	len' → logprob: -16.313268661499023
    7. '   ' → logprob: -16.688268661499023
    8. 'l' → logprob: -18.563268661499023
    9. ' ' → logprob: -18.688268661499023
    10. '<len' → logprob: -18.813268661499023

Token 72: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.750001907348633
    3. 'l' → logprob: -14.750001907348633
    4. '(x' → logprob: -16.875001907348633
    5. '(s' → logprob: -17.125001907348633
    6. ' (' → logprob: -18.375001907348633
    7. ' l' → logprob: -18.750001907348633
    8. '(a' → logprob: -19.125001907348633
    9. '	l' → logprob: -19.500001907348633
    10. '(i' → logprob: -19.625001907348633

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2117110788822174
    2. '):' → logprob: -1.961711049079895
    3. ')-' → logprob: -3.9617111682891846
    4. '):
' → logprob: -4.0867109298706055
    5. '-' → logprob: -4.5867109298706055
    6. 'and' → logprob: -6.5867109298706055
    7. ' and' → logprob: -6.5867109298706055
    8. ' )' → logprob: -7.5867109298706055
    9. ' -' → logprob: -7.7117109298706055
    10. ' ):' → logprob: -8.336710929870605

Token 74: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.015567134134471416
    2. ' -' → logprob: -4.765567302703857
    3. ':' → logprob: -5.015567302703857
    4. 'and' → logprob: -8.7655668258667
    5. ' and' → logprob: -9.7655668258667
    6. ':
' → logprob: -9.7655668258667
    7. ' ' → logprob: -11.7655668258667
    8. '()-' → logprob: -11.8905668258667
    9. '1' → logprob: -12.3905668258667
    10. '>' → logprob: -13.8905668258667

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10079110413789749
    2. '2' → logprob: -2.3507912158966064
    3. ' ' → logprob: -7.475790977478027
    4. '3' → logprob: -11.225790977478027
    5. '   ' → logprob: -13.600790977478027
    6. '```' → logprob: -14.100790977478027
    7. '  ' → logprob: -14.225790977478027
    8. '4' → logprob: -14.475790977478027
    9. '	' → logprob: -15.538290977478027
    10. '１' → logprob: -15.913290977478027

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0052392068319022655
    2. '2' → logprob: -5.255239009857178
    3. '3' → logprob: -12.505239486694336
    4. ' ' → logprob: -14.380239486694336
    5. '```' → logprob: -15.130239486694336
    6. '１' → logprob: -15.630239486694336
    7. '

' → logprob: -15.630239486694336
    8. '	' → logprob: -16.067739486694336
    9. '4' → logprob: -16.067739486694336
    10. '   ' → logprob: -16.255239486694336

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0161441620439291
    2. ' and' → logprob: -4.266144275665283
    3. ':
' → logprob: -6.516144275665283
    4. ' :' → logprob: -8.016143798828125
    5. 'and' → logprob: -9.016143798828125
    6. '   ' → logprob: -10.391143798828125
    7. ' ' → logprob: -11.891143798828125
    8. ' :
' → logprob: -13.016143798828125
    9. ' or' → logprob: -13.391143798828125
    10. '-' → logprob: -13.766143798828125

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053106579929590225
    2. ' ' → logprob: -3.5531065464019775
    3. ':' → logprob: -4.053106784820557
    4. ' and' → logprob: -6.678106784820557
    5. ':
' → logprob: -7.053106784820557
    6. ' if' → logprob: -7.053106784820557
    7. '  ' → logprob: -7.053106784820557
    8. '    ' → logprob: -7.553106784820557
    9. ',' → logprob: -8.053106307983398
    10. ' :' → logprob: -8.553106307983398

Token 79: ' a' (ID: 261)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0403878688812256
    2. 'if' → logprob: -1.2903878688812256
    3. ' if' → logprob: -1.6653878688812256
    4. ' ans' → logprob: -2.1653878688812256
    5. '   ' → logprob: -2.7903878688812256
    6. ' ' → logprob: -6.165388107299805
    7. '	ans' → logprob: -6.665388107299805
    8. '```' → logprob: -7.165388107299805
    9. '    
' → logprob: -7.415388107299805
    10. 'i' → logprob: -7.665388107299805

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46170705556869507
    2. '=' → logprob: -1.3367071151733398
    3. '[i' → logprob: -2.58670711517334
    4. '[' → logprob: -4.33670711517334
    5. ' ' → logprob: -5.08670711517334
    6. ',' → logprob: -5.71170711517334
    7. 's' → logprob: -5.71170711517334
    8. '+' → logprob: -6.58670711517334
    9. ' +=' → logprob: -6.58670711517334
    10. 'i' → logprob: -7.21170711517334

Token 81: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1298774629831314
    2. ' l' → logprob: -2.1298775672912598
    3. 'min' → logprob: -6.50487756729126
    4. ' min' → logprob: -6.62987756729126
    5. '   ' → logprob: -9.379877090454102
    6. 'max' → logprob: -11.379877090454102
    7. ' ' → logprob: -11.879877090454102
    8. 'i' → logprob: -11.879877090454102
    9. '	l' → logprob: -12.129877090454102
    10. ' i' → logprob: -12.504877090454102

Token 82: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.44312788406387e-05
    2. '[' → logprob: -9.875054359436035
    3. 'i' → logprob: -13.500054359436035
    4. '   ' → logprob: -15.250054359436035
    5. '[a' → logprob: -15.250054359436035
    6. ' [' → logprob: -15.625054359436035
    7. '[
' → logprob: -16.12505531311035
    8. '[s' → logprob: -16.12505531311035
    9. '[l' → logprob: -16.37505531311035
    10. 's' → logprob: -16.37505531311035

Token 83: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23766310513019562
    2. ']
' → logprob: -1.8626631498336792
    3. ']+' → logprob: -3.3626630306243896
    4. '+' → logprob: -3.8626630306243896
    5. ']
' → logprob: -8.237663269042969
    6. ' ]' → logprob: -8.612663269042969
    7. ' ]
' → logprob: -9.362663269042969
    8. ' +' → logprob: -9.862663269042969
    9. ' ' → logprob: -12.112663269042969
    10. ']

' → logprob: -12.362663269042969

Token 84: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3810373544692993
    2. 'b' → logprob: -1.3810373544692993
    3. ' +' → logprob: -3.3810372352600098
    4. '   ' → logprob: -4.13103723526001
    5. '+b' → logprob: -5.13103723526001
    6. ' ' → logprob: -6.13103723526001
    7. 's' → logprob: -6.38103723526001
    8. ' b' → logprob: -6.63103723526001
    9. '<|end|>' → logprob: -6.88103723526001
    10. ' if' → logprob: -7.13103723526001

Token 85: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.07232820987701416
    2. ' b' → logprob: -2.8223280906677246
    3. ' ' → logprob: -5.197328090667725
    4. '+' → logprob: -5.947328090667725
    5. '   ' → logprob: -7.197328090667725
    6. ' +' → logprob: -7.322328090667725
    7. '+b' → logprob: -8.072328567504883
    8. ',b' → logprob: -8.322328567504883
    9. ' =' → logprob: -10.072328567504883
    10. '  ' → logprob: -10.197328567504883

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1276838183403015
    2. '=' → logprob: -2.1276838779449463
    3. '+' → logprob: -8.002683639526367
    4. ' ' → logprob: -8.377683639526367
    5. ' +' → logprob: -9.627683639526367
    6. '[' → logprob: -10.002683639526367
    7. '[i' → logprob: -10.252683639526367
    8. '   ' → logprob: -10.752683639526367
    9. ',' → logprob: -11.752683639526367
    10. 's' → logprob: -13.252683639526367

Token 87: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.06197172403335571
    2. 'l' → logprob: -2.811971664428711
    3. ' ' → logprob: -12.686971664428711
    4. '	l' → logprob: -14.936971664428711
    5. ' ' → logprob: -15.311971664428711
    6. '   ' → logprob: -15.561971664428711
    7. '    ' → logprob: -16.56197166442871
    8. ' `' → logprob: -16.93697166442871
    9. '`' → logprob: -17.06197166442871
    10. ' л' → logprob: -17.56197166442871

Token 88: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.000006675720215
    3. '[
' → logprob: -15.000006675720215
    4. '[++' → logprob: -15.500006675720215
    5. '+' → logprob: -17.50000762939453
    6. '[j' → logprob: -18.62500762939453
    7. 'i' → logprob: -18.62500762939453
    8. '```' → logprob: -18.87500762939453
    9. '[idx' → logprob: -19.25000762939453
    10. ' [' → logprob: -19.25000762939453

Token 89: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004225847311317921
    2. ' +' → logprob: -5.504225730895996
    3. ']' → logprob: -9.004225730895996
    4. '+]' → logprob: -11.004225730895996
    5. ']+' → logprob: -12.004225730895996
    6. '+i' → logprob: -14.504225730895996
    7. '+"]' → logprob: -15.004225730895996
    8. '1' → logprob: -15.004225730895996
    9. '   ' → logprob: -15.504225730895996
    10. '+
' → logprob: -15.504225730895996

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '0' → logprob: -17.6250057220459
    4. ']' → logprob: -19.3750057220459
    5. '   ' → logprob: -20.2500057220459
    6. '```' → logprob: -20.2500057220459
    7. '2' → logprob: -20.3750057220459
    8. '１' → logprob: -20.5000057220459
    9. '  ' → logprob: -21.7500057220459
    10. '१' → logprob: -21.8750057220459

Token 91: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004084574058651924
    2. ']
' → logprob: -5.504084587097168
    3. ' ]' → logprob: -12.879084587097168
    4. ']
' → logprob: -14.379084587097168
    5. ']

' → logprob: -14.504084587097168
    6. '']' → logprob: -14.754084587097168
    7. ' ' → logprob: -14.879084587097168
    8. '   ' → logprob: -14.879084587097168
    9. '"]' → logprob: -15.379084587097168
    10. ']+' → logprob: -15.504084587097168

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5516917705535889
    2. '
' → logprob: -0.9266917705535889
    3. ' if' → logprob: -4.426692008972168
    4. '    
' → logprob: -5.426692008972168
    5. ' ' → logprob: -5.801692008972168
    6. 'if' → logprob: -6.051692008972168
    7. '   
' → logprob: -6.801692008972168
    8. ' 
' → logprob: -6.926692008972168
    9. '  
' → logprob: -7.051692008972168
    10. 'ans' → logprob: -7.301692008972168

Token 93: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.25755518674850464
    2. 'if' (adapté à ' if') → logprob: -1.6325552463531494
    3. '
' → logprob: -3.7575552463531494
    4. ' ans' → logprob: -6.00755500793457
    5. ' if' → logprob: -6.13255500793457
    6. 'i' → logprob: -6.13255500793457
    7. 'c' → logprob: -7.25755500793457
    8. '	ans' → logprob: -8.50755500793457
    9. 'a' → logprob: -9.13255500793457
    10. '   ' → logprob: -9.25755500793457

Token 94: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08998240530490875
    2. ' a' → logprob: -2.464982509613037
    3. 'b' → logprob: -7.714982509613037
    4. ' min' → logprob: -8.839982032775879
    5. ' b' → logprob: -8.964982032775879
    6. 'min' → logprob: -9.589982032775879
    7. '(a' → logprob: -9.589982032775879
    8. '   ' → logprob: -9.714982032775879
    9. ' ' → logprob: -10.589982032775879
    10. 'i' → logprob: -10.589982032775879

Token 95: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.26648834347724915
    2. '>' → logprob: -1.6414883136749268
    3. ' <' → logprob: -3.8914883136749268
    4. ' ==' → logprob: -5.016488552093506
    5. '==' → logprob: -5.016488552093506
    6. '<' → logprob: -5.766488552093506
    7. ' ' → logprob: -6.516488552093506
    8. ' <=' → logprob: -7.391488552093506
    9. ' >=' → logprob: -7.891488552093506
    10. '>=' → logprob: -8.266488075256348

Token 96: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16703279316425323
    2. ' b' → logprob: -1.9170328378677368
    3. ' ' → logprob: -5.792032718658447
    4. '1' → logprob: -5.917032718658447
    5. '=' → logprob: -7.292032718658447
    6. '0' → logprob: -8.542033195495605
    7. '2' → logprob: -10.042033195495605
    8. '=b' → logprob: -10.417033195495605
    9. '6' → logprob: -11.292033195495605
    10. '3' → logprob: -11.667033195495605

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026751309633255005
    2. ':
' → logprob: -3.6517512798309326
    3. ' and' → logprob: -8.151751518249512
    4. '   ' → logprob: -9.901751518249512
    5. '       ' → logprob: -10.026751518249512
    6. '+' → logprob: -11.276751518249512
    7. ' or' → logprob: -11.526751518249512
    8. '):' → logprob: -11.651751518249512
    9. '):
' → logprob: -12.026751518249512
    10. '>' → logprob: -12.651751518249512

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5473344922065735
    2. '   ' → logprob: -1.6723344326019287
    3. 'ans' → logprob: -2.0473344326019287
    4. 'i' → logprob: -2.4223344326019287
    5. '
' → logprob: -5.797334671020508
    6. ' i' → logprob: -6.047334671020508
    7. '	ans' → logprob: -6.047334671020508
    8. 'a' → logprob: -6.547334671020508
    9. ' ans' → logprob: -6.797334671020508
    10. ':
' → logprob: -7.047334671020508

Token 99: ' M' (ID: 391)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11199504882097244
    2. '   ' → logprob: -2.361994981765747
    3. ' ans' → logprob: -5.361995220184326
    4. '       ' → logprob: -6.111995220184326
    5. '	ans' → logprob: -6.361995220184326
    6. 'i' → logprob: -6.486995220184326
    7. '
' → logprob: -7.486995220184326
    8. 'a' → logprob: -7.986995220184326
    9. '```' → logprob: -7.986995220184326
    10. '``' → logprob: -9.861994743347168

Token 100: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1548670530319214
    2. 'ax' → logprob: -1.6548670530319214
    3. ' =' → logprob: -1.7798670530319214
    4. 'i' → logprob: -2.154867172241211
    5. 'in' → logprob: -2.279867172241211
    6. '=' → logprob: -2.529867172241211
    7. '   ' → logprob: -4.404867172241211
    8. '  ' → logprob: -6.154867172241211
    9. 'M' → logprob: -6.154867172241211
    10. '=M' → logprob: -6.154867172241211

Token 101: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4023715853691101
    2. ' b' → logprob: -1.4023716449737549
    3. 'a' → logprob: -2.777371644973755
    4. ' a' → logprob: -3.902371644973755
    5. ' min' → logprob: -6.777371406555176
    6. ' ' → logprob: -7.527371406555176
    7. 'min' → logprob: -8.027371406555176
    8. ' (' → logprob: -8.402371406555176
    9. '(a' → logprob: -8.777371406555176
    10. ' max' → logprob: -9.152371406555176

Token 102: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.48809587955474854
    2. '+' → logprob: -1.6130958795547485
    3. ' -' → logprob: -2.113095760345459
    4. '-b' → logprob: -3.613095760345459
    5. ' +' → logprob: -4.613095760345459
    6. '-m' → logprob: -5.363095760345459
    7. '-M' → logprob: -5.488095760345459
    8. '//' → logprob: -5.738095760345459
    9. '+b' → logprob: -6.238095760345459
    10. '-i' → logprob: -6.363095760345459

Token 103: '       ' (ID: 309)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2116541713476181
    2. '+' → logprob: -2.7116541862487793
    3. ' -' → logprob: -3.0866541862487793
    4. '-b' → logprob: -3.5866541862487793
    5. '   ' → logprob: -3.9616541862487793
    6. '-m' → logprob: -5.086654186248779
    7. '
' → logprob: -5.711654186248779
    8. 'ax' → logprob: -5.836654186248779
    9. '-M' → logprob: -5.961654186248779
    10. '       ' → logprob: -6.211654186248779

Token 104: ' m' (ID: 284)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.29638445377349854
    2. 'i' → logprob: -2.671384334564209
    3. 'else' → logprob: -2.796384334564209
    4. '+' → logprob: -3.671384334564209
    5. '   ' → logprob: -4.296384334564209
    6. '-i' → logprob: -4.296384334564209
    7. 'b' → logprob: -4.421384334564209
    8. ' -' → logprob: -4.421384334564209
    9. ' else' → logprob: -4.546384334564209
    10. 'a' → logprob: -4.921384334564209

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22551937401294708
    2. '=' → logprob: -1.6005194187164307
    3. '=b' → logprob: -9.975519180297852
    4. ' ' → logprob: -10.225519180297852
    5. '=m' → logprob: -11.850519180297852
    6. ',' → logprob: -11.975519180297852
    7. 'b' → logprob: -13.475519180297852
    8. '=a' → logprob: -13.475519180297852
    9. '<|end|>' → logprob: -13.600519180297852
    10. 'a' → logprob: -13.600519180297852

Token 106: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0181526318192482
    2. ' b' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.268152236938477
    4. 'a' → logprob: -14.018152236938477
    5. '   ' → logprob: -16.393152236938477
    6. ' a' → logprob: -16.643152236938477
    7. '	b' → logprob: -17.393152236938477
    8. ' ' → logprob: -17.768152236938477
    9. '  ' → logprob: -18.393152236938477
    10. '0' → logprob: -18.393152236938477

Token 107: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06023747846484184
    2. '   ' → logprob: -3.435237407684326
    3. '<|end|>' → logprob: -4.060237407684326
    4. 'else' → logprob: -5.435237407684326
    5. ' else' → logprob: -7.060237407684326
    6. ' 
' → logprob: -7.560237407684326
    7. '
' → logprob: -7.560237407684326
    8. '  
' → logprob: -7.560237407684326
    9. '<|end|>' → logprob: -7.810237407684326
    10. '       ' → logprob: -7.810237407684326

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22492970526218414
    2. '
' → logprob: -2.9749298095703125
    3. '<|end|>' → logprob: -3.2249298095703125
    4. 'else' → logprob: -3.3499298095703125
    5. ' else' → logprob: -3.4749298095703125
    6. '       ' → logprob: -3.4749298095703125
    7. 'elif' → logprob: -5.9749298095703125
    8. '    
' → logprob: -6.7249298095703125
    9. '  
' → logprob: -6.8499298095703125
    10. '+' → logprob: -6.9749298095703125

Token 109: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3755793869495392
    2. ' else' → logprob: -1.2505793571472168
    3. '   ' → logprob: -3.625579357147217
    4. '	else' → logprob: -9.875579833984375
    5. 'elif' → logprob: -10.375579833984375
    6. ':
' → logprob: -10.625579833984375
    7. ' elif' → logprob: -11.875579833984375
    8. '<|end|>' → logprob: -12.000579833984375
    9. '```' → logprob: -12.750579833984375
    10. '  ' → logprob: -12.875579833984375

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20345057547092438
    2. ' ' → logprob: -2.3284506797790527
    3. '<|end|>' → logprob: -3.4534506797790527
    4. ' M' → logprob: -4.328450679779053
    5. '   ' → logprob: -4.578450679779053
    6. ':
' → logprob: -4.703450679779053
    7. ' m' → logprob: -4.953450679779053
    8. '    ' → logprob: -5.828450679779053
    9. ' a' → logprob: -5.828450679779053
    10. '       ' → logprob: -6.328450679779053

Token 111: '       ' (ID: 309)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5345978140830994
    2. '       ' → logprob: -1.6595978736877441
    3. 'b' → logprob: -1.9095978736877441
    4. ' m' → logprob: -3.659597873687744
    5. ' M' → logprob: -4.284597873687744
    6. ' a' → logprob: -4.409597873687744
    7. '   ' → logprob: -4.409597873687744
    8. 'a' → logprob: -5.284597873687744
    9. 'm' → logprob: -6.034597873687744
    10. '    ' → logprob: -6.034597873687744

Token 112: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.04025815427303314
    2. 'M' (adapté à ' M') → logprob: -3.5402581691741943
    3. ' m' → logprob: -5.540257930755615
    4. 'm' → logprob: -6.290257930755615
    5. ' b' → logprob: -6.665257930755615
    6. 'b' → logprob: -6.915257930755615
    7. '    ' → logprob: -7.040257930755615
    8. '   ' → logprob: -7.165257930755615
    9. 'a' → logprob: -8.165258407592773
    10. ' a' → logprob: -8.290258407592773

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689425587654114
    2. '=' → logprob: -1.1368942260742188
    3. ',' → logprob: -10.761894226074219
    4. ' ' → logprob: -13.636894226074219
    5. '=m' → logprob: -15.886894226074219
    6. '=b' → logprob: -16.13689422607422
    7. '=M' → logprob: -16.13689422607422
    8. ' ,' → logprob: -16.51189422607422
    9. '   ' → logprob: -16.63689422607422
    10. ')' → logprob: -16.88689422607422

Token 114: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889749854803085
    2. ' b' → logprob: -2.578897476196289
    3. '<|end|>' → logprob: -12.703897476196289
    4. 'a' → logprob: -12.953897476196289
    5. ' a' → logprob: -13.828897476196289
    6. ' ' → logprob: -14.078897476196289
    7. '   ' → logprob: -14.453897476196289
    8. '    ' → logprob: -16.57889747619629
    9. '	b' → logprob: -17.20389747619629
    10. 'm' → logprob: -17.82889747619629

Token 115: '
' (ID: 198)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7246508002281189
    2. '   ' → logprob: -1.0996508598327637
    3. '
' → logprob: -2.3496508598327637
    4. ' m' → logprob: -3.0996508598327637
    5. '<|end|>' → logprob: -3.8496508598327637
    6. ',' → logprob: -4.474650859832764
    7. ',m' → logprob: -5.099650859832764
    8. ' ' → logprob: -7.099650859832764
    9. ',
' → logprob: -7.349650859832764
    10. '    
' → logprob: -7.974650859832764

Token 116: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05764278024435043
    2. 'm' → logprob: -3.057642698287964
    3. ',' → logprob: -5.057642936706543
    4. ' m' → logprob: -6.432642936706543
    5. '
' → logprob: -8.307642936706543
    6. '<|end|>' → logprob: -8.432642936706543
    7. ',m' → logprob: -8.807642936706543
    8. ',
' → logprob: -9.182642936706543
    9. '       ' → logprob: -9.307642936706543
    10. '    
' → logprob: -9.682642936706543

Token 117: ' m' (ID: 284)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018150178715586662
    2. ' a' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.643150329589844
    4. '	a' → logprob: -16.893150329589844
    5. '   ' → logprob: -17.643150329589844
    6. 'm' (adapté à ' m') → logprob: -17.643150329589844
    7. ' m' → logprob: -18.143150329589844
    8. '>a' → logprob: -19.018150329589844
    9. '```' → logprob: -19.518150329589844
    10. '    ' → logprob: -19.768150329589844

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20160122215747833
    2. ' =' → logprob: -1.701601266860962
    3. ' ' → logprob: -9.201601028442383
    4. '<|end|>' → logprob: -9.576601028442383
    5. '   ' → logprob: -12.076601028442383
    6. ',' → logprob: -12.826601028442383
    7. ')' → logprob: -12.951601028442383
    8. '<|end|>' → logprob: -13.451601028442383
    9. '  ' → logprob: -14.326601028442383
    10. '=
' → logprob: -14.701601028442383

Token 119: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -8.494741632603109e-05
    2. ' a' → logprob: -9.37508487701416
    3. '	a' → logprob: -18.875085830688477
    4. ' ' → logprob: -19.000085830688477
    5. '   ' → logprob: -19.625085830688477
    6. '```' → logprob: -21.625085830688477
    7. '<|end|>' → logprob: -21.750085830688477
    8. 'а' → logprob: -21.875085830688477
    9. '>a' → logprob: -22.125085830688477
    10. '  ' → logprob: -22.250085830688477

Token 120: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2928083837032318
    2. 'ans' → logprob: -1.7928084135055542
    3. ' ans' → logprob: -3.5428082942962646
    4. '
' → logprob: -3.7928082942962646
    5. '<|end|>' → logprob: -4.292808532714844
    6. 'i' → logprob: -4.792808532714844
    7. '	ans' → logprob: -5.292808532714844
    8. ' ' → logprob: -6.292808532714844
    9. ',' → logprob: -6.417808532714844
    10. '    
' → logprob: -7.167808532714844

Token 121: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10497286915779114
    2. 'if' → logprob: -2.8549728393554688
    3. '   ' → logprob: -3.3549728393554688
    4. 'i' → logprob: -5.979972839355469
    5. ' ans' → logprob: -6.229972839355469
    6. '	ans' → logprob: -7.229972839355469
    7. ' if' → logprob: -7.354972839355469
    8. '
' → logprob: -7.729972839355469
    9. ',' → logprob: -8.354972839355469
    10. '```' → logprob: -8.854972839355469

Token 122: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.09412787109613419
    2. 'if' → logprob: -3.344127893447876
    3. ' ans' → logprob: -3.594127893447876
    4. 'i' → logprob: -4.219127655029297
    5. '
' → logprob: -5.719127655029297
    6. ' if' → logprob: -6.344127655029297
    7. '   ' → logprob: -6.469127655029297
    8. ',' → logprob: -6.844127655029297
    9. '	ans' → logprob: -7.094127655029297
    10. '(ans' → logprob: -7.594127655029297

Token 123: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.018256472423672676
    2. '+=' → logprob: -4.018256664276123
    3. ' =' → logprob: -9.268256187438965
    4. '=' → logprob: -12.268256187438965
    5. ' -=' → logprob: -13.518256187438965
    6. '+=(' → logprob: -13.518256187438965
    7. '+' → logprob: -13.768256187438965
    8. '   ' → logprob: -14.143256187438965
    9. ' ^=' → logprob: -14.643256187438965
    10. ']+=' → logprob: -14.643256187438965

Token 124: ' M' (ID: 391)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6576335430145264
    2. 'm' → logprob: -0.7826335430145264
    3. ' m' → logprob: -4.5326337814331055
    4. 'min' → logprob: -5.5326337814331055
    5. ' ' → logprob: -5.7826337814331055
    6. '   ' → logprob: -6.5326337814331055
    7. '4' → logprob: -6.6576337814331055
    8. '10' → logprob: -6.7826337814331055
    9. '1' → logprob: -7.2826337814331055
    10. '3' → logprob: -7.4076337814331055

Token 125: ' *' (ID: 425)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1713089793920517
    2. '-m' → logprob: -3.046308994293213
    3. '*' → logprob: -3.171308994293213
    4. ' -' → logprob: -3.671308994293213
    5. 'm' → logprob: -4.296308994293213
    6. 'if' → logprob: -4.796308994293213
    7. '   ' → logprob: -5.171308994293213
    8. 'i' → logprob: -5.296308994293213
    9. '+' → logprob: -5.296308994293213
    10. '-i' → logprob: -6.546308994293213

Token 126: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0026985935401171446
    2. ' m' → logprob: -6.0026984214782715
    3. '2' → logprob: -9.12769889831543
    4. '(m' → logprob: -9.50269889831543
    5. '(' → logprob: -11.00269889831543
    6. ' (' → logprob: -11.75269889831543
    7. ' ' → logprob: -12.00269889831543
    8. '	m' → logprob: -13.75269889831543
    9. '   ' → logprob: -14.12769889831543
    10. '*m' → logprob: -14.12769889831543

Token 127: 'M' (ID: 44)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005249768029898405
    2. 'M' → logprob: -5.380249977111816
    3. '(m' → logprob: -7.880249977111816
    4. ' m' → logprob: -8.880249977111816
    5. '2' → logprob: -10.005249977111816
    6. '(M' → logprob: -10.130249977111816
    7. '(' → logprob: -12.005249977111816
    8. '1' → logprob: -12.505249977111816
    9. ' M' → logprob: -12.755249977111816
    10. ' (' → logprob: -12.880249977111816

Token 128: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18142421543598175
    2. ' -' → logprob: -1.8064242601394653
    3. '-m' → logprob: -7.181424140930176
    4. '+' → logprob: -7.431424140930176
    5. ' +' → logprob: -8.681424140930176
    6. 'm' → logprob: -9.806424140930176
    7. ')' → logprob: -10.181424140930176
    8. '<|end|>' → logprob: -11.056424140930176
    9. ' ' → logprob: -11.181424140930176
    10. '+m' → logprob: -11.931424140930176

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003397535183466971
    2. ')' → logprob: -8.75033950805664
    3. ' ' → logprob: -8.75033950805664
    4. '`' → logprob: -11.75033950805664
    5. '-' → logprob: -12.50033950805664
    6. '
' → logprob: -12.87533950805664
    7. '   ' → logprob: -13.00033950805664
    8. ' -' → logprob: -13.12533950805664
    9. 'm' → logprob: -13.62533950805664
    10. '<|end|>' → logprob: -14.25033950805664

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010127831774298102
    2. ' ' → logprob: -9.625101089477539
    3. ')' → logprob: -10.875101089477539
    4. 'm' → logprob: -11.875101089477539
    5. '
' → logprob: -12.500101089477539
    6. '   ' → logprob: -13.125101089477539
    7. '-' → logprob: -13.750101089477539
    8. '`' → logprob: -15.000101089477539
    9. ' -' → logprob: -15.125101089477539
    10. '<|end|>' → logprob: -15.125101089477539

Token 131: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13349534571170807
    2. ')//' → logprob: -2.133495330810547
    3. ' )' → logprob: -5.258495330810547
    4. '//' → logprob: -6.758495330810547
    5. ' //' → logprob: -8.633495330810547
    6. ')/' → logprob: -13.508495330810547
    7. ')
' → logprob: -14.633495330810547
    8. ')`' → logprob: -14.758495330810547
    9. '")' → logprob: -15.008495330810547
    10. '`)' → logprob: -15.633495330810547

Token 132: ' //' (ID: 602)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08507993817329407
    2. '//' → logprob: -3.8350799083709717
    3. '
' → logprob: -4.085080146789551
    4. '-' → logprob: -4.710080146789551
    5. ' ' → logprob: -4.835080146789551
    6. ' //' → logprob: -5.335080146789551
    7. ' -' → logprob: -5.460080146789551
    8. '    
' → logprob: -5.585080146789551
    9. '+' → logprob: -5.960080146789551
    10. 'i' → logprob: -6.335080146789551

Token 133: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -18.12500762939453
    4. '
' → logprob: -18.25000762939453
    5. '   ' → logprob: -18.75000762939453
    6. '202' → logprob: -18.87500762939453
    7. '1' → logprob: -19.00000762939453
    8. '۲' → logprob: -20.00000762939453
    9. '  ' → logprob: -20.31250762939453
    10. '20' → logprob: -20.50000762939453

Token 134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '1' → logprob: -16.125001907348633
    4. '22' → logprob: -17.875001907348633
    5. '202' → logprob: -18.000001907348633
    6. '
' → logprob: -18.000001907348633
    7. '```' → logprob: -18.000001907348633
    8. '21' → logprob: -18.625001907348633
    9. '۲' → logprob: -18.687501907348633
    10. '212' → logprob: -18.812501907348633

Token 135: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04488666355609894
    2. '
' → logprob: -4.044886589050293
    3. '    
' → logprob: -4.419886589050293
    4. ' i' → logprob: -4.794886589050293
    5. 'i' → logprob: -5.794886589050293
    6. '  
' → logprob: -6.544886589050293
    7. ' 
' → logprob: -7.294886589050293
    8. '   
' → logprob: -8.294886589050293
    9. '  ' → logprob: -8.794886589050293
    10. '	i' → logprob: -8.919886589050293

Token 136: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.143071249127388
    2. 'm' → logprob: -2.018071174621582
    3. ' (' → logprob: -8.643071174621582
    4. ' ' → logprob: -9.018071174621582
    5. '(m' → logprob: -10.018071174621582
    6. '(' → logprob: -10.518071174621582
    7. '1' → logprob: -11.643071174621582
    8. '   ' → logprob: -12.643071174621582
    9. ' ' → logprob: -12.893071174621582
    10. '2' → logprob: -13.455571174621582

Token 137: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13961629569530487
    2. '
' → logprob: -2.1396162509918213
    3. '    
' → logprob: -5.3896164894104
    4. ' i' → logprob: -5.5146164894104
    5. 'i' → logprob: -6.3896164894104
    6. '  
' → logprob: -7.5146164894104
    7. ' 
' → logprob: -8.014616012573242
    8. '+' → logprob: -8.014616012573242
    9. '
' → logprob: -8.264616012573242
    10. ' ' → logprob: -8.639616012573242

Token 138: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0590975247323513
    2. ' (' → logprob: -2.9340975284576416
    3. '(' → logprob: -5.6840972900390625
    4. '(M' → logprob: -7.6840972900390625
    5. 'm' → logprob: -8.309097290039062
    6. '1' → logprob: -10.184097290039062
    7. '(min' → logprob: -11.434097290039062
    8. ' ' → logprob: -11.559097290039062
    9. ' m' → logprob: -11.559097290039062
    10. '(n' → logprob: -12.309097290039062

Token 139: 'm' (ID: 76)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.014582294970750809
    2. 'm' → logprob: -4.63958215713501
    3. '1' → logprob: -6.01458215713501
    4. ' (' → logprob: -6.51458215713501
    5. '(' → logprob: -7.51458215713501
    6. '2' → logprob: -8.264582633972168
    7. ' m' → logprob: -10.514582633972168
    8. ' ' → logprob: -11.139582633972168
    9. ')' → logprob: -11.389582633972168
    10. ')m' → logprob: -12.139582633972168

Token 140: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7580726146697998
    2. '-' → logprob: -0.7580726146697998
    3. ' -' → logprob: -3.3830726146698
    4. ' +' → logprob: -4.008072853088379
    5. '1' → logprob: -4.758072853088379
    6. ' ' → logprob: -6.633072853088379
    7. '   ' → logprob: -7.383072853088379
    8. '  ' → logprob: -9.508072853088379
    9. ')' → logprob: -10.383072853088379
    10. '```' → logprob: -10.508072853088379

Token 141: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000919200771022588
    2. ' ' → logprob: -7.000919342041016
    3. ')' → logprob: -13.000919342041016
    4. '0' → logprob: -13.250919342041016
    5. '   ' → logprob: -13.250919342041016
    6. '2' → logprob: -14.000919342041016
    7. '
' → logprob: -15.125919342041016
    8. '<|end|>' → logprob: -15.500919342041016
    9. '  ' → logprob: -16.000919342041016
    10. '3' → logprob: -16.000919342041016

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004317420825827867
    2. ' ' → logprob: -7.750431537628174
    3. '0' → logprob: -14.750432014465332
    4. '2' → logprob: -15.250432014465332
    5. '   ' → logprob: -15.625432014465332
    6. '
' → logprob: -16.750431060791016
    7. '...' → logprob: -17.125431060791016
    8. '  ' → logprob: -17.125431060791016
    9. ')' → logprob: -17.750431060791016
    10. '100' → logprob: -18.000431060791016

Token 143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038419945631176233
    2. ')//' → logprob: -5.628841876983643
    3. ' )' → logprob: -8.3788423538208
    4. '//' → logprob: -11.5038423538208
    5. ')
' → logprob: -14.2538423538208
    6. '")' → logprob: -14.7538423538208
    7. '）' → logprob: -15.3788423538208
    8. ' //' → logprob: -15.3788423538208
    9. '   ' → logprob: -15.6288423538208
    10. '```' → logprob: -16.253841400146484

Token 144: ' //' (ID: 602)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3931160271167755
    2. '
' → logprob: -1.3931159973144531
    3. ' 
' → logprob: -3.893115997314453
    4. '    
' → logprob: -4.018115997314453
    5. '  
' → logprob: -4.393115997314453
    6. ' i' → logprob: -4.893115997314453
    7. ' ' → logprob: -5.518115997314453
    8. '  ' → logprob: -5.768115997314453
    9. '+' → logprob: -6.143115997314453
    10. 'i' → logprob: -6.268115997314453

Token 145: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -10.500052452087402
    3. '1' → logprob: -10.625052452087402
    4. '   ' → logprob: -17.375051498413086
    5. ' ' → logprob: -18.187551498413086
    6. '202' → logprob: -18.500051498413086
    7. '.' → logprob: -18.500051498413086
    8. '  ' → logprob: -18.562551498413086
    9. '
' → logprob: -18.687551498413086
    10. '```' → logprob: -18.875051498413086

Token 146: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001657565007917583
    2. '1' → logprob: -8.750165939331055
    3. ' ' → logprob: -11.875165939331055
    4. '
' → logprob: -16.625165939331055
    5. '   ' → logprob: -17.000165939331055
    6. '```' → logprob: -17.625165939331055
    7. '  ' → logprob: -17.812665939331055
    8. '}' → logprob: -17.937665939331055
    9. '	' → logprob: -18.062665939331055
    10. '0' → logprob: -18.187665939331055

Token 147: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5831549763679504
    2. '
' → logprob: -0.8331549763679504
    3. '    
' → logprob: -5.333155155181885
    4. '\n' → logprob: -7.333155155181885
    5. '  
' → logprob: -7.583155155181885
    6. 'i' → logprob: -7.958155155181885
    7. ' i' → logprob: -7.958155155181885
    8. '
' → logprob: -8.708154678344727
    9. ' 
' → logprob: -9.083154678344727
    10. '```' → logprob: -9.208154678344727

Token 148: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3763817548751831
    2. '   ' → logprob: -1.626381754875183
    3. 'i' → logprob: -2.8763818740844727
    4. ' i' → logprob: -3.2513818740844727
    5. '\n' → logprob: -4.626381874084473
    6. '    
' → logprob: -5.251381874084473
    7. '
' → logprob: -6.251381874084473
    8. '	i' → logprob: -6.376381874084473
    9. ' 
' → logprob: -6.876381874084473
    10. '  
' → logprob: -7.251381874084473

Token 149: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0001307142956648022
    2. ' i' → logprob: -9.000130653381348
    3. '   ' → logprob: -11.875130653381348
    4. '
' → logprob: -15.375130653381348
    5. '```' → logprob: -17.125131607055664
    6. '	i' → logprob: -17.750131607055664
    7. ' ' → logprob: -17.750131607055664
    8. '  ' → logprob: -18.250131607055664
    9. 'if' → logprob: -18.250131607055664
    10. '[i' → logprob: -19.750131607055664

Token 150: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02381882630288601
    2. ' +=' → logprob: -3.7738187313079834
    3. '+' → logprob: -7.5238189697265625
    4. '=' → logprob: -10.523818969726562
    5. '+="' → logprob: -13.148818969726562
    6. '+='' → logprob: -13.273818969726562
    7. '++' → logprob: -13.398818969726562
    8. ']+=' → logprob: -14.273818969726562
    9. '<|end|>' → logprob: -15.398818969726562
    10. '+=(' → logprob: -16.523818969726562

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3486294150352478
    2. '2' → logprob: -1.2236294746398926
    3. ' ' → logprob: -8.598628997802734
    4. '   ' → logprob: -15.598628997802734
    5. '3' → logprob: -16.036128997802734
    6. '  ' → logprob: -16.911128997802734
    7. '```' → logprob: -18.161128997802734
    8. '１' → logprob: -18.286128997802734
    9. '0' → logprob: -18.661128997802734
    10. '4' → logprob: -19.036128997802734

Token 152: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10023298859596252
    2. '1' → logprob: -2.3502330780029297
    3. ' ' → logprob: -10.60023307800293
    4. '3' → logprob: -15.03773307800293
    5. '   ' → logprob: -15.10023307800293
    6. '  ' → logprob: -16.35023307800293
    7. '```' → logprob: -16.41273307800293
    8. '22' → logprob: -16.72523307800293
    9. '۲' → logprob: -17.10023307800293
    10. '２' → logprob: -17.16273307800293

Token 153: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00035631912760436535
    2. '
' → logprob: -8.000356674194336
    3. '```' → logprob: -11.500356674194336
    4. 'return' → logprob: -12.375356674194336
    5. 'if' → logprob: -12.750356674194336
    6. ' print' → logprob: -13.375356674194336
    7. ')' → logprob: -15.375356674194336
    8. '  
' → logprob: -15.375356674194336
    9. '#' → logprob: -15.500356674194336
    10. 'i' → logprob: -15.625356674194336

Token 154: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1875571544806007e-05
    2. 'return' → logprob: -12.500011444091797
    3. '
' → logprob: -12.875011444091797
    4. 'if' → logprob: -12.875011444091797
    5. '```' → logprob: -13.000011444091797
    6. ' print' → logprob: -14.625011444091797
    7. '<|end|>' → logprob: -16.125011444091797
    8. '#' → logprob: -17.625011444091797
    9. '``' → logprob: -18.000011444091797
    10. 'for' → logprob: -18.500011444091797

Token 155: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.023248156532645226
    2. '(' → logprob: -3.7732481956481934
    3. '(answer' → logprob: -14.273247718811035
    4. '('' → logprob: -14.648247718811035
    5. '(
' → logprob: -15.023247718811035
    6. '("("' → logprob: -15.148247718811035
    7. '(len' → logprob: -15.648247718811035
    8. ' (' → logprob: -15.773247718811035
    9. '(abs' → logprob: -15.898247718811035
    10. '(a' → logprob: -16.27324867248535

Token 156: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.875000953674316
    3. ')`' → logprob: -16.0
    4. '`)' → logprob: -16.25
    5. '')' → logprob: -16.5
    6. '()' → logprob: -16.625
    7. '")' → logprob: -17.125
    8. '+' → logprob: -17.875
    9. '))' → logprob: -17.875
    10. '(' → logprob: -18.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 154
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 54
Tokens correctement prédits (top 10): 122
Précision stricte (1ère position): 31.82%
Précision adaptée (1ère position): 35.06%
Précision (top 10): 79.22%
================================================================================
