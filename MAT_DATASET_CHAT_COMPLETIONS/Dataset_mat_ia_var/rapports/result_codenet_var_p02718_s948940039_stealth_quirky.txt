================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

get = lambda: list(map(int, input().split()))
n, m = get()
arr = get()
total = reduce(lambda x, y: x + y, arr)
f = lambda x: x * 4 * m >= total
res = [*filter(f, arr)]
print(["No", "Yes"][len(res) >= m])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6194254755973816
    2. 'wrap' → logprob: -0.8694254755973816
    3. 'reduce' → logprob: -3.3694255352020264
    4. ' wraps' → logprob: -5.369425296783447
    5. 'l' → logprob: -6.119425296783447
    6. 'cached' → logprob: -7.869425296783447
    7. ' partial' → logprob: -8.119425773620605
    8. 'cache' → logprob: -8.494425773620605
    9. '```' → logprob: -8.869425773620605
    10. 'cmp' → logprob: -8.994425773620605

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020837202668190002
    2. '(lambda' → logprob: -4.270837306976318
    3. '.' → logprob: -5.145837306976318
    4. ',' → logprob: -8.02083683013916
    5. ' (' → logprob: -8.52083683013916
    6. '```' → logprob: -9.52083683013916
    7. '(
' → logprob: -10.14583683013916
    8. '\(' → logprob: -10.27083683013916
    9. '\' → logprob: -10.39583683013916
    10. 'lambda' → logprob: -11.02083683013916

Token 5: 'get' (ID: 522)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024840226396918297
    2. '(lambda' → logprob: -3.8998401165008545
    3. '.' → logprob: -6.024840354919434
    4. '```' → logprob: -7.399840354919434
    5. ',' → logprob: -8.024840354919434
    6. '\' → logprob: -8.274840354919434
    7. '\(' → logprob: -8.649840354919434
    8. '(
' → logprob: -9.024840354919434
    9. 'def' → logprob: -9.149840354919434
    10. ' (' → logprob: -9.774840354919434

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20549418032169342
    2. 'attr' → logprob: -1.7054941654205322
    3. '_user' → logprob: -6.455494403839111
    4. '_attr' → logprob: -7.080494403839111
    5. '_item' → logprob: -7.580494403839111
    6. ' _' → logprob: -8.205493927001953
    7. '_sum' → logprob: -8.205493927001953
    8. 'ter' → logprob: -9.080493927001953
    9. '_total' → logprob: -9.205493927001953
    10. '_data' → logprob: -9.580493927001953

Token 7: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.14989472925662994
    2. ' getattr' → logprob: -2.7748947143554688
    3. 'lambda' → logprob: -3.3998947143554688
    4. ' get' → logprob: -3.5248947143554688
    5. 'get' → logprob: -4.774894714355469
    6. ' dict' → logprob: -5.649894714355469
    7. 'dict' → logprob: -7.149894714355469
    8. 'getitem' → logprob: -8.149894714355469
    9. ' functools' → logprob: -8.399894714355469
    10. ' ' → logprob: -8.899894714355469

Token 8: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.09689104557037354
    2. ' obj' → logprob: -2.846890926361084
    3. ' s' → logprob: -4.471890926361084
    4. ' f' → logprob: -5.096890926361084
    5. ' ' → logprob: -5.346890926361084
    6. ' lambda' → logprob: -5.346890926361084
    7. ' a' → logprob: -6.471890926361084
    8. ' lst' → logprob: -6.971890926361084
    9. ' data' → logprob: -7.221890926361084
    10. ' item' → logprob: -7.596890926361084

Token 9: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4651670455932617
    2. 'input' → logprob: -2.0901670455932617
    3. ' reduce' → logprob: -2.2151670455932617
    4. 'reduce' → logprob: -2.5901670455932617
    5. ' int' → logprob: -4.340167045593262
    6. ' ' → logprob: -5.465167045593262
    7. ' lambda' → logprob: -5.465167045593262
    8. ' []' → logprob: -5.590167045593262
    9. 'lambda' → logprob: -5.590167045593262
    10. ' None' → logprob: -5.840167045593262

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4916609823703766
    2. '(map' → logprob: -1.3666609525680542
    3. '(filter' → logprob: -2.9916610717773438
    4. '(range' → logprob: -3.2416610717773438
    5. '()' → logprob: -3.3666610717773438
    6. '(int' → logprob: -6.241661071777344
    7. '(get' → logprob: -6.366661071777344
    8. '(
' → logprob: -6.991661071777344
    9. '([]' → logprob: -6.991661071777344
    10. '(eval' → logprob: -7.491661071777344

Token 11: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.527718722820282
    2. '(' → logprob: -1.2777187824249268
    3. '(str' → logprob: -2.4027187824249268
    4. '(int' → logprob: -3.5277187824249268
    5. ')' → logprob: -4.902718544006348
    6. '(eval' → logprob: -6.527718544006348
    7. '(abs' → logprob: -8.027718544006348
    8. '<|end|>' → logprob: -8.027718544006348
    9. '(
' → logprob: -8.152718544006348
    10. '(operator' → logprob: -8.402718544006348

Token 12: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23598019778728485
    2. '(get' → logprob: -2.610980272293091
    3. '))' → logprob: -3.360980272293091
    4. ')' → logprob: -3.485980272293091
    5. '(input' → logprob: -3.735980272293091
    6. '(user' → logprob: -4.985980033874512
    7. '(token' → logprob: -5.110980033874512
    8. '(fetch' → logprob: -5.110980033874512
    9. '<|end|>' → logprob: -5.235980033874512
    10. '(data' → logprob: -5.860980033874512

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10066995769739151
    2. ' input' → logprob: -2.3506698608398438
    3. '(input' → logprob: -7.850669860839844
    4. ',input' → logprob: -10.225669860839844
    5. ')' → logprob: -11.475669860839844
    6. 'open' → logprob: -12.100669860839844
    7. '))' → logprob: -12.725669860839844
    8. 'get' → logprob: -12.975669860839844
    9. '=input' → logprob: -13.100669860839844
    10. '```' → logprob: -13.225669860839844

Token 14: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.46950995922088623
    2. '()' → logprob: -1.7195099592208862
    3. '())' → logprob: -2.594510078430176
    4. '(' → logprob: -3.094510078430176
    5. '()));' → logprob: -3.469510078430176
    6. '(()' → logprob: -3.969510078430176
    7. '())))' → logprob: -4.219510078430176
    8. '());' → logprob: -5.844510078430176
    9. '(""))' → logprob: -6.219510078430176
    10. '().' → logprob: -6.469510078430176

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005314277950674295
    2. 'strip' → logprob: -5.255314350128174
    3. 'rstrip' → logprob: -9.505313873291016
    4. ' split' → logprob: -12.380313873291016
    5. 'read' → logprob: -13.505313873291016
    6. '(split' → logprob: -15.755313873291016
    7. ')' → logprob: -16.255313873291016
    8. 'spl' → logprob: -16.630313873291016
    9. ' strip' → logprob: -17.505313873291016
    10. 'replace' → logprob: -17.505313873291016

Token 16: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7787509560585022
    2. '))' → logprob: -1.6537508964538574
    3. '())' → logprob: -1.7787508964538574
    4. ')' → logprob: -2.2787508964538574
    5. ')))' → logprob: -2.9037508964538574
    6. '())))' → logprob: -4.528750896453857
    7. '(' → logprob: -5.028750896453857
    8. '()' → logprob: -5.153750896453857
    9. '('' → logprob: -9.653751373291016
    10. '()));' → logprob: -9.903751373291016

Token 17: 'n' (ID: 77)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40049704909324646
    2. 'x' → logprob: -2.7754969596862793
    3. 'n' → logprob: -2.7754969596862793
    4. '(' → logprob: -3.1504969596862793
    5. '(n' → logprob: -3.9004969596862793
    6. 'def' → logprob: -4.025496959686279
    7. 'nums' → logprob: -4.025496959686279
    8. 'data' → logprob: -4.275496959686279
    9. 'numbers' → logprob: -4.400496959686279
    10. '_' → logprob: -4.400496959686279

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.339250773191452
    2. '=' → logprob: -1.3392508029937744
    3. ')' → logprob: -4.464250564575195
    4. ',' → logprob: -4.714250564575195
    5. '[' → logprob: -6.339250564575195
    6. ' ' → logprob: -6.839250564575195
    7. '.' → logprob: -7.089250564575195
    8. '_' → logprob: -7.339250564575195
    9. ' )' → logprob: -8.839250564575195
    10. '=int' → logprob: -9.214250564575195

Token 19: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4576152265071869
    2. 'm' → logprob: -1.0826152563095093
    3. ' k' → logprob: -4.457615375518799
    4. 'a' → logprob: -5.332615375518799
    5. ' m' → logprob: -5.457615375518799
    6. '*k' → logprob: -6.582615375518799
    7. 'q' → logprob: -6.707615375518799
    8. 'd' → logprob: -7.207615375518799
    9. '*m' → logprob: -7.207615375518799
    10. 's' → logprob: -7.582615375518799

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16079390048980713
    2. '=' → logprob: -1.9107939004898071
    3. ',' → logprob: -7.660793781280518
    4. ' ,' → logprob: -9.660794258117676
    5. ' ' → logprob: -11.285794258117676
    6. ' =
' → logprob: -11.785794258117676
    7. '<|end|>' → logprob: -12.535794258117676
    8. ')' → logprob: -12.660794258117676
    9. '[' → logprob: -13.285794258117676
    10. ' =)' → logprob: -14.035794258117676

Token 21: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.10409529507160187
    2. 'get' → logprob: -2.354095220565796
    3. ' map' → logprob: -5.604095458984375
    4. 'map' → logprob: -8.604095458984375
    5. ' ' → logprob: -11.479095458984375
    6. '[get' → logprob: -13.854095458984375
    7. '	get' → logprob: -14.229095458984375
    8. ' list' → logprob: -14.854095458984375
    9. ' input' → logprob: -14.854095458984375
    10. '(get' → logprob: -14.854095458984375

Token 22: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0037070848047733307
    2. '[]' → logprob: -6.628706932067871
    3. '[' → logprob: -7.128706932067871
    4. '(' → logprob: -7.753706932067871
    5. ',' → logprob: -8.378706932067871
    6. '()\' → logprob: -8.378706932067871
    7. '(),' → logprob: -8.503706932067871
    8. '()
' → logprob: -9.253706932067871
    9. '()[' → logprob: -9.253706932067871
    10. '();' → logprob: -10.003706932067871

Token 23: 'arr' (ID: 1614)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1061311960220337
    2. 'matrix' → logprob: -1.8561311960220337
    3. 'graph' → logprob: -1.9811311960220337
    4. 'dp' → logprob: -2.231131076812744
    5. 'result' → logprob: -2.856131076812744
    6. 'arr' → logprob: -2.856131076812744
    7. 'res' → logprob: -3.356131076812744
    8. 'data' → logprob: -3.481131076812744
    9. 'd' → logprob: -3.856131076812744
    10. 'array' → logprob: -4.606131076812744

Token 24: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008151990361511707
    2. ' =' → logprob: -6.008152008056641
    3. '[:]' → logprob: -6.133152008056641
    4. '.' → logprob: -6.383152008056641
    5. '[]' → logprob: -7.633152008056641
    6. '[:' → logprob: -7.883152008056641
    7. '[n' → logprob: -8.13315200805664
    8. '=' → logprob: -8.38315200805664
    9. '\[' → logprob: -9.75815200805664
    10. '[arr' → logprob: -9.88315200805664

Token 25: ' get' (ID: 717)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -1.2048721313476562
    2. '[get' → logprob: -1.2048721313476562
    3. '[' → logprob: -1.7048721313476562
    4. ' [' → logprob: -1.9548721313476562
    5. '[]' → logprob: -3.2048721313476562
    6. ' []' → logprob: -4.454872131347656
    7. 'list' → logprob: -4.454872131347656
    8. ' list' → logprob: -4.579872131347656
    9. '[[' → logprob: -7.329872131347656
    10. '[input' → logprob: -7.704872131347656

Token 26: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00032378386822529137
    2. '(' → logprob: -8.125324249267578
    3. ' ()' → logprob: -11.625324249267578
    4. '()]' → logprob: -12.125324249267578
    5. '().' → logprob: -12.875324249267578
    6. '()
' → logprob: -12.875324249267578
    7. '()[' → logprob: -13.125324249267578
    8. '())' → logprob: -13.250324249267578
    9. '()

' → logprob: -13.625324249267578
    10. '()`' → logprob: -13.875324249267578

Token 27: 'total' (ID: 9577)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4335915148258209
    2. 'res' → logprob: -2.683591604232788
    3. 'result' → logprob: -2.933591604232788
    4. 'for' → logprob: -3.183591604232788
    5. 'ans' → logprob: -3.558591604232788
    6. 'count' → logprob: -3.808591604232788
    7. 's' → logprob: -3.933591604232788
    8. 'prefix' → logprob: -4.058591365814209
    9. 'b' → logprob: -4.183591365814209
    10. 'counts' → logprob: -4.183591365814209

Token 28: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08132844418287277
    2. ' =' → logprob: -3.2063283920288086
    3. '.' → logprob: -3.8313283920288086
    4. '=' → logprob: -5.081328392028809
    5. ' _' → logprob: -6.206328392028809
    6. ' ' → logprob: -6.206328392028809
    7. '_sum' → logprob: -6.456328392028809
    8. '_space' → logprob: -6.706328392028809
    9. '(' → logprob: -7.831328392028809
    10. '_count' → logprob: -8.331328392028809

Token 29: ' reduce' (ID: 10389)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.1846196949481964
    2. 'sum' → logprob: -2.434619665145874
    3. ' reduce' → logprob: -3.559619665145874
    4. '0' → logprob: -3.559619665145874
    5. ' ' → logprob: -4.434619903564453
    6. 'reduce' → logprob: -4.684619903564453
    7. ' m' → logprob: -6.809619903564453
    8. ' n' → logprob: -6.934619903564453
    9. 'arr' → logprob: -8.059619903564453
    10. ' arr' → logprob: -8.434619903564453

Token 30: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.005392057355493307
    2. '(' → logprob: -5.255392074584961
    3. '(operator' → logprob: -8.880392074584961
    4. '(sum' → logprob: -11.505392074584961
    5. 'lambda' → logprob: -12.880392074584961
    6. '((' → logprob: -13.005392074584961
    7. '```' → logprob: -13.130392074584961
    8. '(int' → logprob: -14.130392074584961
    9. '(+' → logprob: -14.380392074584961
    10. '(
' → logprob: -15.380392074584961

Token 31: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.23288282752037048
    2. ' a' → logprob: -1.9828828573226929
    3. 'x' → logprob: -2.9828827381134033
    4. 'a' → logprob: -4.107882976531982
    5. ' acc' → logprob: -6.482882976531982
    6. ' ' → logprob: -7.107882976531982
    7. ' total' → logprob: -7.857882976531982
    8. 'acc' → logprob: -8.857882499694824
    9. 'total' → logprob: -10.482882499694824
    10. ',' → logprob: -11.232882499694824

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2762428822461516e-05
    2. '+' → logprob: -10.750052452087402
    3. ',x' → logprob: -11.250052452087402
    4. ' ,' → logprob: -11.500052452087402
    5. '+,' → logprob: -13.125052452087402
    6. 'a' → logprob: -13.375052452087402
    7. ',a' → logprob: -14.125052452087402
    8. ',m' → logprob: -14.750052452087402
    9. ',y' → logprob: -14.875052452087402
    10. 'x' → logprob: -15.000052452087402

Token 33: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759419202804565
    2. 'y' → logprob: -0.8259419202804565
    3. ' ' → logprob: -13.575942039489746
    4. '	y' → logprob: -14.700942039489746
    5. 'x' → logprob: -15.325942039489746
    6. 'a' → logprob: -15.450942039489746
    7. '  ' → logprob: -16.32594108581543
    8. '   ' → logprob: -16.45094108581543
    9. '    ' → logprob: -17.45094108581543
    10. ' x' → logprob: -17.45094108581543

Token 34: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006858677952550352
    2. ',' → logprob: -8.125685691833496
    3. ' :' → logprob: -8.125685691833496
    4. ':x' → logprob: -9.750685691833496
    5. '+' → logprob: -11.500685691833496
    6. '+:' → logprob: -11.750685691833496
    7. ',:' → logprob: -12.625685691833496
    8. 'x' → logprob: -12.625685691833496
    9. ',x' → logprob: -13.000685691833496
    10. '=' → logprob: -13.875685691833496

Token 35: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2519535422325134
    2. 'x' → logprob: -1.5019536018371582
    3. ' ' → logprob: -11.001953125
    4. '	x' → logprob: -12.501953125
    5. '+' → logprob: -14.251953125
    6. '  ' → logprob: -14.251953125
    7. '(x' → logprob: -14.626953125
    8. '   ' → logprob: -14.751953125
    9. ' ' → logprob: -15.064453125
    10. ')x' → logprob: -15.251953125

Token 36: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03013608604669571
    2. ' +' → logprob: -3.9051361083984375
    3. '+y' → logprob: -4.6551361083984375
    4. '*' → logprob: -11.280136108398438
    5. '+x' → logprob: -11.780136108398438
    6. '-' → logprob: -12.030136108398438
    7. '+b' → logprob: -13.405136108398438
    8. '*y' → logprob: -13.655136108398438
    9. ' ' → logprob: -14.030136108398438
    10. '+m' → logprob: -14.155136108398438

Token 37: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.28118589520454407
    2. ' y' → logprob: -1.4061858654022217
    3. 'arr' → logprob: -11.2811861038208
    4. ' ' → logprob: -11.4061861038208
    5. 'x' → logprob: -12.5311861038208
    6. '  ' → logprob: -13.6561861038208
    7. '1' → logprob: -13.9061861038208
    8. '	y' → logprob: -13.9686861038208
    9. ' arr' → logprob: -14.1561861038208
    10. ' ' → logprob: -14.5311861038208

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006439788267016411
    2. ' ,' → logprob: -5.756439685821533
    3. 'arr' → logprob: -7.006439685821533
    4. '+' → logprob: -7.006439685821533
    5. ' +' → logprob: -7.006439685821533
    6. ' arr' → logprob: -7.756439685821533
    7. ')' → logprob: -10.381440162658691
    8. '[arr' → logprob: -10.381440162658691
    9. '(arr' → logprob: -11.006440162658691
    10. '+,' → logprob: -12.506440162658691

Token 39: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5759579539299011
    2. ' arr' → logprob: -0.8259579539299011
    3. '(arr' → logprob: -12.200958251953125
    4. '	arr' → logprob: -12.200958251953125
    5. '[arr' → logprob: -13.200958251953125
    6. '_arr' → logprob: -13.325958251953125
    7. ')' → logprob: -13.450958251953125
    8. ' ' → logprob: -14.450958251953125
    9. '$arr' → logprob: -14.575958251953125
    10. '.arr' → logprob: -14.825958251953125

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003266447747591883
    2. ' )' → logprob: -8.500327110290527
    3. ',' → logprob: -9.250327110290527
    4. '))' → logprob: -11.875327110290527
    5. ' ' → logprob: -12.500327110290527
    6. ')+' → logprob: -12.875327110290527
    7. ')))' → logprob: -12.875327110290527
    8. ')
' → logprob: -13.125327110290527
    9. '+' → logprob: -13.375327110290527
    10. '),' → logprob: -14.125327110290527

Token 41: 'f' (ID: 69)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4220499992370605
    2. '+' → logprob: -1.5470499992370605
    3. '%' → logprob: -1.7970499992370605
    4. 'print' → logprob: -2.9220499992370605
    5. '#' → logprob: -3.0470499992370605
    6. 'if' → logprob: -3.1720499992370605
    7. 'for' → logprob: -3.6720499992370605
    8. ' ' → logprob: -3.6720499992370605
    9. '\n' → logprob: -3.9220499992370605
    10. 'total' → logprob: -4.2970499992370605

Token 42: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.08091942220926285
    2. 'rom' → logprob: -3.4559195041656494
    3. 'r' → logprob: -4.08091926574707
    4. 'o' → logprob: -4.33091926574707
    5. 'l' → logprob: -5.95591926574707
    6. 'ro' → logprob: -6.33091926574707
    7. 'i' → logprob: -6.70591926574707
    8. '_' → logprob: -6.83091926574707
    9. '```' → logprob: -7.08091926574707
    10. 'inal' → logprob: -7.83091926574707

Token 43: ' lambda' (ID: 27871)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.130793809890747
    2. 'lambda' → logprob: -1.380793809890747
    3. 'total' → logprob: -1.880793809890747
    4. ' lambda' → logprob: -2.505793809890747
    5. '0' → logprob: -3.130793809890747
    6. ' [' → logprob: -3.380793809890747
    7. ' total' → logprob: -3.880793809890747
    8. 'n' → logprob: -3.880793809890747
    9. 'arr' → logprob: -4.130793571472168
    10. '[n' → logprob: -4.380793571472168

Token 44: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06607325375080109
    2. 'x' → logprob: -2.941073179244995
    3. ' a' → logprob: -5.441073417663574
    4. ' lambda' → logprob: -6.316073417663574
    5. ' i' → logprob: -6.441073417663574
    6. 'a' → logprob: -6.941073417663574
    7. ' s' → logprob: -7.441073417663574
    8. ' ' → logprob: -7.691073417663574
    9. ' n' → logprob: -7.941073417663574
    10. ' total' → logprob: -8.316073417663574

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005762407090514898
    2. ',' → logprob: -5.630762577056885
    3. ' :' → logprob: -6.255762577056885
    4. ',:' → logprob: -9.255762100219727
    5. ':x' → logprob: -9.505762100219727
    6. ',x' → logprob: -10.630762100219727
    7. ':,' → logprob: -11.255762100219727
    8. ' ,' → logprob: -12.130762100219727
    9. '=' → logprob: -12.380762100219727
    10. ',y' → logprob: -12.880762100219727

Token 46: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4654373526573181
    2. 'x' → logprob: -1.215437412261963
    3. 'total' → logprob: -3.465437412261963
    4. ' total' → logprob: -3.840437412261963
    5. ' max' → logprob: -5.715437412261963
    6. 'abs' → logprob: -5.840437412261963
    7. 'max' → logprob: -5.965437412261963
    8. ' (' → logprob: -5.965437412261963
    9. ' abs' → logprob: -5.965437412261963
    10. ' ' → logprob: -6.090437412261963

Token 47: ' *' (ID: 425)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.3060805797576904
    2. '+' → logprob: -2.1810805797576904
    3. ' /' → logprob: -2.5560805797576904
    4. '(x' → logprob: -2.6810805797576904
    5. ' +' → logprob: -2.8060805797576904
    6. '**' → logprob: -2.9310805797576904
    7. ' **' → logprob: -2.9310805797576904
    8. ' ' → logprob: -3.0560805797576904
    9. ' *' → logprob: -3.0560805797576904
    10. ' >=' → logprob: -3.5560805797576904

Token 48: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.29183247685432434
    2. 'x' → logprob: -2.041832447052002
    3. ' ' → logprob: -3.291832447052002
    4. '(' → logprob: -4.041832447052002
    5. 'm' → logprob: -4.416832447052002
    6. ' x' → logprob: -4.416832447052002
    7. '(x' → logprob: -4.916832447052002
    8. 'total' → logprob: -5.041832447052002
    9. ' (' → logprob: -5.291832447052002
    10. '1' → logprob: -5.416832447052002

Token 49: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.46263250708580017
    2. 'x' → logprob: -1.5876325368881226
    3. '(' → logprob: -2.962632417678833
    4. 'm' → logprob: -3.837632417678833
    5. '(n' → logprob: -3.962632417678833
    6. '(x' → logprob: -4.087632656097412
    7. 'total' → logprob: -4.462632656097412
    8. 'n' → logprob: -4.462632656097412
    9. '(m' → logprob: -5.212632656097412
    10. '(total' → logprob: -5.212632656097412

Token 50: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4120253920555115
    2. 'n' → logprob: -2.2870254516601562
    3. ' m' → logprob: -2.6620254516601562
    4. '7' → logprob: -3.4120254516601562
    5. 'x' → logprob: -3.4120254516601562
    6. ' n' → logprob: -4.162025451660156
    7. '2' → logprob: -4.412025451660156
    8. '3' → logprob: -4.787025451660156
    9. '*' → logprob: -4.787025451660156
    10. '5' → logprob: -4.912025451660156

Token 52: ' >=' (ID: 5064)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9307554960250854
    2. 'for' → logprob: -1.4307554960250854
    3. '
' → logprob: -1.6807554960250854
    4. '+' → logprob: -3.555755615234375
    5. '<|end|>' → logprob: -3.805755615234375
    6. '\n' → logprob: -4.055755615234375
    7. '*' → logprob: -4.305755615234375
    8. ' 
' → logprob: -4.430755615234375
    9. ' for' → logprob: -4.430755615234375
    10. 'n' → logprob: -4.805755615234375

Token 53: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.12694144248962402
    2. ' total' → logprob: -2.126941442489624
    3. ' ' → logprob: -12.001941680908203
    4. 'n' → logprob: -13.251941680908203
    5. ' n' → logprob: -13.501941680908203
    6. '(total' → logprob: -13.626941680908203
    7. '100' → logprob: -14.126941680908203
    8. '   ' → logprob: -14.251941680908203
    9. '	total' → logprob: -15.376941680908203
    10. '  ' → logprob: -15.501941680908203

Token 54: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12211648374795914
    2. '<|end|>' → logprob: -3.4971165657043457
    3. '\n' → logprob: -3.4971165657043457
    4. ':' → logprob: -3.6221165657043457
    5. '\' → logprob: -5.122116565704346
    6. ')' → logprob: -5.622116565704346
    7. ' 
' → logprob: -5.747116565704346
    8. '
' → logprob: -5.997116565704346
    9. '.' → logprob: -6.122116565704346
    10. 'n' → logprob: -6.497116565704346

Token 55: 'res' (ID: 430)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2728680372238159
    2. '<|end|>' → logprob: -2.6478681564331055
    3. 'n' → logprob: -3.2728681564331055
    4. ')' → logprob: -3.8978681564331055
    5. '0' → logprob: -3.8978681564331055
    6. '?' → logprob: -4.1478681564331055
    7. 'if' → logprob: -4.5228681564331055
    8. '(' → logprob: -4.6478681564331055
    9. '.' → logprob: -5.1478681564331055
    10. '\n' → logprob: -5.2728681564331055

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11513283848762512
    2. '=' → logprob: -2.3651328086853027
    3. 's' → logprob: -4.240132808685303
    4. 'ult' → logprob: -8.240133285522461
    5. ' ' → logprob: -9.865133285522461
    6. 'ults' → logprob: -10.240133285522461
    7. ',' → logprob: -10.365133285522461
    8. '=[]' → logprob: -11.990133285522461
    9. 't' → logprob: -12.490133285522461
    10. '  ' → logprob: -12.865133285522461

Token 57: ' [' (ID: 723)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2301769256591797
    2. ' max' → logprob: -2.2301769256591797
    3. ' next' → logprob: -2.3551769256591797
    4. 'next' → logprob: -2.3551769256591797
    5. 'min' → logprob: -2.4801769256591797
    6. 'arr' → logprob: -2.4801769256591797
    7. '0' → logprob: -2.7301769256591797
    8. 'reduce' → logprob: -3.2301769256591797
    9. 'n' → logprob: -3.4801769256591797
    10. ' n' → logprob: -3.6051769256591797

Token 58: '*' (ID: 9)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17524953186511993
    2. 'i' → logprob: -1.9252495765686035
    3. 'arr' → logprob: -4.5502495765686035
    4. 'a' → logprob: -6.6752495765686035
    5. '1' → logprob: -7.6752495765686035
    6. '(i' → logprob: -7.6752495765686035
    7. 'num' → logprob: -8.050249099731445
    8. 'f' → logprob: -8.175249099731445
    9. '(x' → logprob: -8.300249099731445
    10. ' x' → logprob: -8.550249099731445

Token 59: 'filter' (ID: 9875)
  Prédit: 'filter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filter' → logprob: -0.003331114538013935
    2. 'range' → logprob: -6.503331184387207
    3. 'map' → logprob: -7.128331184387207
    4. 'arr' → logprob: -7.878331184387207
    5. '(filter' → logprob: -8.003331184387207
    6. ' filter' → logprob: -8.253331184387207
    7. '{' → logprob: -11.378331184387207
    8. 'i' → logprob: -12.253331184387207
    9. '   ' → logprob: -12.503331184387207
    10. 'sorted' → logprob: -12.628331184387207

Token 60: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0002491807099431753
    2. '(' → logprob: -8.375248908996582
    3. ' (' → logprob: -11.750248908996582
    4. 'f' → logprob: -12.125248908996582
    5. '(lambda' → logprob: -12.250248908996582
    6. '(
' → logprob: -15.125248908996582
    7. ' f' → logprob: -15.625248908996582
    8. '(s' → logprob: -17.8752498626709
    9. '((' → logprob: -18.1252498626709
    10. '(F' → logprob: -19.0002498626709

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.856408536899835e-05
    2. ' ,' → logprob: -10.625028610229492
    3. 'arr' → logprob: -12.875028610229492
    4. '(arr' → logprob: -15.125028610229492
    5. '‌,' → logprob: -15.250028610229492
    6. ',
' → logprob: -15.375028610229492
    7. ',res' → logprob: -15.750028610229492
    8. ')' → logprob: -16.250028610229492
    9. ',array' → logprob: -16.875028610229492
    10. ',n' → logprob: -17.000028610229492

Token 62: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.38181614875793457
    2. ' arr' → logprob: -1.8818161487579346
    3. 'range' → logprob: -2.3818161487579346
    4. ' range' → logprob: -2.6318161487579346
    5. '[arr' → logprob: -9.006815910339355
    6. '[' → logprob: -9.131815910339355
    7. '   ' → logprob: -9.381815910339355
    8. ' ' → logprob: -9.506815910339355
    9. '(arr' → logprob: -10.069315910339355
    10. 'list' → logprob: -10.319315910339355

Token 63: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.9504606825648807e-05
    2. ')' → logprob: -11.375019073486328
    3. ']' → logprob: -12.875019073486328
    4. ')]
' → logprob: -13.000019073486328
    5. '))' → logprob: -13.500019073486328
    6. ')}' → logprob: -14.375019073486328
    7. '}]' → logprob: -15.500019073486328
    8. '])]' → logprob: -15.625019073486328
    9. ')])' → logprob: -15.625019073486328
    10. ' )' → logprob: -15.750019073486328

Token 64: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9205980896949768
    2. ']' → logprob: -1.420598030090332
    3. '<|end|>' → logprob: -1.420598030090332
    4. '\n' → logprob: -2.920598030090332
    5. '[' → logprob: -3.795598030090332
    6. '
' → logprob: -4.045598030090332
    7. ' ' → logprob: -4.795598030090332
    8. 'print' → logprob: -5.670598030090332
    9. '[
' → logprob: -6.045598030090332
    10. '```' → logprob: -6.545598030090332

Token 65: '(["' (ID: 41418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7216671705245972
    2. '(len' → logprob: -0.7216671705245972
    3. '(res' → logprob: -3.5966672897338867
    4. '(*' → logprob: -8.221667289733887
    5. '(sum' → logprob: -9.346667289733887
    6. '(list' → logprob: -9.471667289733887
    7. '()' → logprob: -10.096667289733887
    8. '(max' → logprob: -10.221667289733887
    9. '((' → logprob: -10.596667289733887
    10. '("("' → logprob: -10.596667289733887

Token 66: 'No' (ID: 3160)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -1.5930778980255127
    2. 'No' → logprob: -1.7180778980255127
    3. 'YES' → logprob: -2.0930778980255127
    4. '"' → logprob: -2.0930778980255127
    5. 'Yes' → logprob: -2.5930778980255127
    6. '-' → logprob: -2.9680778980255127
    7. 'Impossible' → logprob: -3.3430778980255127
    8. '"No' → logprob: -3.4680778980255127
    9. 'min' → logprob: -3.8430778980255127
    10. 'res' → logprob: -3.9680778980255127

Token 67: '",' (ID: 672)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -1.9649873971939087
    2. 't' → logprob: -2.089987277984619
    3. '","' → logprob: -2.214987277984619
    4. '",' → logprob: -2.214987277984619
    5. ' ' → logprob: -2.964987277984619
    6. ' Data' → logprob: -2.964987277984619
    7. '"' → logprob: -2.964987277984619
    8. 'pe' → logprob: -3.214987277984619
    9. ' Solution' → logprob: -3.464987277984619
    10. 'Solution' → logprob: -3.589987277984619

Token 68: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5787423253059387
    2. 'res' → logprob: -1.828742265701294
    3. 'max' → logprob: -1.828742265701294
    4. '*' → logprob: -3.578742265701294
    5. 'min' → logprob: -3.703742265701294
    6. ' max' → logprob: -3.703742265701294
    7. 'len' → logprob: -4.578742504119873
    8. ' res' → logprob: -4.703742504119873
    9. ' "' → logprob: -4.953742504119873
    10. 'str' → logprob: -5.453742504119873

Token 69: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.010146774351596832
    2. ' Yes' → logprob: -4.635146617889404
    3. '"' → logprob: -8.135147094726562
    4. 'Ye' → logprob: -10.385147094726562
    5. 'YES' → logprob: -10.885147094726562
    6. ' yes' → logprob: -11.385147094726562
    7. ' "' → logprob: -11.635147094726562
    8. '"]' → logprob: -12.135147094726562
    9. 'No' → logprob: -12.760147094726562
    10. 'K' → logprob: -12.760147094726562

Token 70: '"][' (ID: 40438)
  Prédit: '"]['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"][' → logprob: -0.00031890018726699054
    2. '"]' → logprob: -8.12531852722168
    3. '"[' → logprob: -11.62531852722168
    4. '"]["' → logprob: -11.75031852722168
    5. '")[' → logprob: -13.00031852722168
    6. '][' → logprob: -13.25031852722168
    7. '"' → logprob: -13.75031852722168
    8. '"])' → logprob: -14.12531852722168
    9. ''][' → logprob: -16.12531852722168
    10. '"].' → logprob: -17.50031852722168

Token 71: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.162789985537529
    2. 'bool' → logprob: -2.162790060043335
    3. ' len' → logprob: -3.662790060043335
    4. ' bool' → logprob: -4.787789821624756
    5. 'res' → logprob: -6.912789821624756
    6. ' res' → logprob: -8.662790298461914
    7. 'any' → logprob: -10.537790298461914
    8. '(len' → logprob: -10.662790298461914
    9. '(bool' → logprob: -12.412790298461914
    10. '1' → logprob: -13.037790298461914

Token 72: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -6.420598219847307e-05
    2. ' (' → logprob: -10.5000638961792
    3. 'res' → logprob: -10.5000638961792
    4. '(' → logprob: -11.6250638961792
    5. ' res' → logprob: -16.875064849853516
    6. '=res' → logprob: -17.625064849853516
    7. ')' → logprob: -18.000064849853516
    8. '(
' → logprob: -18.875064849853516
    9. '$res' → logprob: -18.875064849853516
    10. ',res' → logprob: -19.000064849853516

Token 73: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.15320058166980743
    2. ')' → logprob: -2.153200626373291
    3. ')>' → logprob: -4.028200626373291
    4. ' >' → logprob: -5.903200626373291
    5. ')])' → logprob: -6.778200626373291
    6. ']>' → logprob: -7.153200626373291
    7. ']' → logprob: -7.278200626373291
    8. '==' → logprob: -7.528200626373291
    9. '>)' → logprob: -7.653200626373291
    10. '()>' → logprob: -7.778200626373291

Token 74: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.010542729869484901
    2. ')' → logprob: -5.510542869567871
    3. ' >' → logprob: -5.885542869567871
    4. '==' → logprob: -6.135542869567871
    5. ')>' → logprob: -7.385542869567871
    6. '>)' → logprob: -7.760542869567871
    7. ' ==' → logprob: -9.260542869567871
    8. '!=' → logprob: -9.510542869567871
    9. '>=' → logprob: -9.760542869567871
    10. ')])' → logprob: -10.135542869567871

Token 75: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9267739057540894
    2. '1' → logprob: -1.3017739057540894
    3. ' n' → logprob: -1.3017739057540894
    4. ' ' → logprob: -3.801774024963379
    5. '2' → logprob: -4.301774024963379
    6. 'm' → logprob: -4.926774024963379
    7. '3' → logprob: -4.926774024963379
    8. '4' → logprob: -5.551774024963379
    9. ' m' → logprob: -5.926774024963379
    10. 'k' → logprob: -6.176774024963379

Token 76: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07941536605358124
    2. ')])' → logprob: -3.0794153213500977
    3. ')' → logprob: -3.7044153213500977
    4. ')]' → logprob: -5.204415321350098
    5. '))' → logprob: -8.829415321350098
    6. ' ])' → logprob: -10.454415321350098
    7. '])]' → logprob: -10.704415321350098
    8. ']' → logprob: -11.579415321350098
    9. '])
' → logprob: -11.954415321350098
    10. ' )' → logprob: -11.954415321350098


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 74
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 54
Précision stricte (1ère position): 31.08%
Précision adaptée (1ère position): 31.08%
Précision (top 10): 72.97%
================================================================================
