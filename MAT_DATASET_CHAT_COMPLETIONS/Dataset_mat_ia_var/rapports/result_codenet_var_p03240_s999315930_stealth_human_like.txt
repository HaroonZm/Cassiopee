================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# input, je fais comme ça pour éviter d'utiliser input en direct
def input():
    return sys.stdin.readline().strip()

# 2d list utils, inspiration d'un vieux code
def list2d(a, b, c):
    return [[c]*b for _ in range(a)]

# jamais utilisé 3d mais on sait jamais
def list3d(a, b, c, d):
    return [[[d]*c for __ in range(b)] for _ in range(a)]

# approximation de ceil, mais je crois que ça marche
def ceil(x, y=1):
    return int(-(-x//y))

def INT():
    return int(input())

def MAP():
    return map(int, input().split())

def LIST():
    return list(map(int, input().split()))

# Je préfère Yes/No majuscule et minuscule
def Yes():
    print("Yes")
def No():
    print("No")
def YES():
    print("YES")
def NO():
    print("NO")

# Pour les recursions à la japonaise, on sait jamais
sys.setrecursionlimit(1000000000)
INF = float('inf')
MOD = 10**9+7  # Je mets ce modulo partout au cas où ;)

N = INT()
XYH = []
for _ in range(N):
    xs, ys, hs = MAP()
    XYH.append( (xs, ys, hs))

# Bon, on va tester tous les centres, pas super opti mais passable
for cy in range(101): # 101 parce que c'est max selon l'énoncé
    for cx in range(101):
        possH = set()
        for x, y, h in XYH:
            tmpH = abs(cx-x)+abs(cy-y)+h  # peut-être inversé, à checker
            if h > 0:
                possH.add(tmpH)
        # Normalement, le vrai H doit être unique
        if len(possH)==1:
            vh = list(possH)[0]
            for x, y, h in XYH:
                expect = vh - abs(cx-x) - abs(cy-y)
                if expect < 0:
                    expect = 0  # au cas où, je force à 0, mais est-ce nécessaire ?
                if expect != h:
                    break
            else:
                print(cx, cy, vh)
                exit()
# Si on arrive là, c'est qu'il y a un souci. On verra bien!
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2402934730052948
    2. ' This' → logprob: -2.865293502807617
    3. ' The' → logprob: -3.740293502807617
    4. ' argparse' → logprob: -3.990293502807617
    5. ' is' → logprob: -4.615293502807617
    6. 'def' → logprob: -4.615293502807617
    7. ' argv' → logprob: -4.865293502807617
    8. ' def' → logprob: -4.990293502807617
    9. 'argv' → logprob: -4.990293502807617
    10. 'This' → logprob: -4.990293502807617

Token 5: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06922522187232971
    2. '=' → logprob: -3.694225311279297
    3. '_' → logprob: -4.069225311279297
    4. '.' → logprob: -4.569225311279297
    5. ' =' → logprob: -5.194225311279297
    6. '()' → logprob: -5.569225311279297
    7. ',' → logprob: -6.444225311279297
    8. 's' → logprob: -6.944225311279297
    9. ')' → logprob: -7.069225311279297
    10. '(
' → logprob: -8.194225311279297

Token 6: ' je' (ID: 1264)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -1.0093438625335693
    2. ' =' → logprob: -1.8843438625335693
    3. '()' → logprob: -2.1343438625335693
    4. ' output' → logprob: -2.2593438625335693
    5. ' sys' → logprob: -2.3843438625335693
    6. ' ' → logprob: -3.1343438625335693
    7. 'sys' → logprob: -3.7593438625335693
    8. ')' → logprob: -3.8843438625335693
    9. 'print' → logprob: -4.634344100952148
    10. ',' → logprob: -4.759344100952148

Token 7: ' fais' (ID: 24376)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.0031111687421798706
    2. 'c' → logprob: -6.753111362457275
    3. 't' → logprob: -7.503111362457275
    4. 'cts' → logprob: -8.128110885620117
    5. 'ction' → logprob: -8.628110885620117
    6. 'cture' → logprob: -8.878110885620117
    7. 'r' → logprob: -9.003110885620117
    8. 'g' → logprob: -9.128110885620117
    9. 'st' → logprob: -9.753110885620117
    10. 'm' → logprob: -10.003110885620117

Token 8: ' comme' (ID: 7971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4304693043231964
    2. '_' → logprob: -2.055469274520874
    3. '(' → logprob: -2.430469274520874
    4. '=' → logprob: -2.805469274520874
    5. ':' → logprob: -3.930469274520874
    6. ' =' → logprob: -4.180469512939453
    7. 's' → logprob: -4.305469512939453
    8. '.' → logprob: -4.680469512939453
    9. ',' → logprob: -5.180469512939453
    10. ')' → logprob: -5.930469512939453

Token 9: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1905537843704224
    2. '=' → logprob: -1.9405537843704224
    3. 'input' → logprob: -2.065553665161133
    4. 'sys' → logprob: -2.190553665161133
    5. ' =' → logprob: -2.440553665161133
    6. ' sys' → logprob: -2.815553665161133
    7. ' input' → logprob: -3.440553665161133
    8. '=sys' → logprob: -3.940553665161133
    9. '=input' → logprob: -3.940553665161133
    10. '```' → logprob: -4.190553665161133

Token 10: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0394657850265503
    2. ',' → logprob: -1.2894657850265503
    3. '=' → logprob: -1.9144657850265503
    4. '.' → logprob: -2.53946590423584
    5. '_' → logprob: -2.66446590423584
    6. '#' → logprob: -3.53946590423584
    7. 'input' → logprob: -4.66446590423584
    8. '(' → logprob: -4.91446590423584
    9. ' =' → logprob: -4.91446590423584
    10. ' ' → logprob: -5.03946590423584

Token 11: ' éviter' (ID: 64013)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6742141842842102
    2. 'l' → logprob: -1.4242141246795654
    3. 'la' → logprob: -3.9242141246795654
    4. 'avoir' → logprob: -3.9242141246795654
    5. ' lire' → logprob: -4.2992143630981445
    6. 'p' → logprob: -4.4242143630981445
    7. ' l' → logprob: -4.6742143630981445
    8. ' tester' → logprob: -4.7992143630981445
    9. 'faire' → logprob: -4.7992143630981445
    10. ' test' → logprob: -4.9242143630981445

Token 12: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.41310060024261475
    2. ' les' → logprob: -1.9131006002426147
    3. ' ' → logprob: -2.7881007194519043
    4. ' l' → logprob: -3.0381007194519043
    5. 'les' → logprob: -3.9131007194519043
    6. 'l' → logprob: -4.163100719451904
    7. ' de' → logprob: -4.288100719451904
    8. 'le' → logprob: -4.538100719451904
    9. ' la' → logprob: -5.038100719451904
    10. ' le' → logprob: -5.288100719451904

Token 13: ''utiliser' (ID: 133355)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7693371772766113
    2. 'e' → logprob: -1.5193371772766113
    3. ''avoir' → logprob: -1.7693371772766113
    4. 'é' → logprob: -3.5193371772766113
    5. 'u' → logprob: -3.6443371772766113
    6. ''import' → logprob: -4.019337177276611
    7. ''é' → logprob: -4.519337177276611
    8. ''aller' → logprob: -5.019337177276611
    9. ''être' → logprob: -5.144337177276611
    10. ''utiliser' → logprob: -5.269337177276611

Token 14: ' input' (ID: 3422)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2679593861103058
    2. 'sys' → logprob: -3.0179593563079834
    3. ' ' → logprob: -3.5179593563079834
    4. ' la' → logprob: -3.6429593563079834
    5. ' input' → logprob: -3.6429593563079834
    6. ' des' → logprob: -3.8929593563079834
    7. ' ' → logprob: -4.2679595947265625
    8. 'input' → logprob: -4.6429595947265625
    9. 'le' → logprob: -5.1429595947265625
    10. ' les' → logprob: -5.1429595947265625

Token 15: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1391170769929886
    2. '(' → logprob: -2.3891170024871826
    3. ' =' → logprob: -4.764117240905762
    4. '()' → logprob: -4.889117240905762
    5. '=' → logprob: -5.639117240905762
    6. ' ' → logprob: -5.764117240905762
    7. 'sys' → logprob: -5.764117240905762
    8. '#' → logprob: -6.389117240905762
    9. '\' → logprob: -6.639117240905762
    10. ' _' → logprob: -6.764117240905762

Token 16: ' direct' (ID: 2823)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.8783327341079712
    2. 'python' → logprob: -2.1283326148986816
    3. 'cas' → logprob: -2.8783326148986816
    4. 're' → logprob: -3.0033326148986816
    5. ' ligne' → logprob: -3.0033326148986816
    6. ' script' → logprob: -3.2533326148986816
    7. '```' → logprob: -3.6283326148986816
    8. 'Python' → logprob: -4.003332614898682
    9. 'inter' → logprob: -4.378332614898682
    10. 'mode' → logprob: -4.503332614898682

Token 17: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6069492101669312
    2. '#' → logprob: -1.2319492101669312
    3. ' ' → logprob: -2.2319493293762207
    4. ',' → logprob: -4.481949329376221
    5. '=' → logprob: -4.481949329376221
    6. ' =' → logprob: -4.481949329376221
    7. '\' → logprob: -4.606949329376221
    8. 'sys' → logprob: -6.231949329376221
    9. '(' → logprob: -6.356949329376221
    10. ' #' → logprob: -6.606949329376221

Token 18: 'def' (ID: 1314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07382962852716446
    2. '(' → logprob: -3.8238296508789062
    3. '=' → logprob: -4.698829650878906
    4. ' ' → logprob: -4.823829650878906
    5. ',' → logprob: -4.948829650878906
    6. ' =' → logprob: -5.198829650878906
    7. '.' → logprob: -5.323829650878906
    8. ':' → logprob: -5.573829650878906
    9. '()' → logprob: -5.823829650878906
    10. '#' → logprob: -6.323829650878906

Token 19: ' input' (ID: 3422)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.006098747253418
    2. ' get' → logprob: -1.131098747253418
    3. ' read' → logprob: -1.881098747253418
    4. ' lire' → logprob: -3.006098747253418
    5. ' saisir' → logprob: -3.506098747253418
    6. ' input' → logprob: -4.131098747253418
    7. ' ' → logprob: -4.631098747253418
    8. ' ma' → logprob: -4.756098747253418
    9. ' my' → logprob: -5.006098747253418
    10. ' readline' → logprob: -5.131098747253418

Token 20: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028058594092726707
    2. '_' → logprob: -4.4030585289001465
    3. '():' → logprob: -4.4030585289001465
    4. '(prompt' → logprob: -6.5280585289001465
    5. '_str' → logprob: -8.153059005737305
    6. '_string' → logprob: -8.278059005737305
    7. '_text' → logprob: -9.028059005737305
    8. '_input' → logprob: -9.153059005737305
    9. '(_' → logprob: -9.403059005737305
    10. 's' → logprob: -9.403059005737305

Token 21: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19338513910770416
    2. ' return' → logprob: -2.693385124206543
    3. '()' → logprob: -2.943385124206543
    4. '   ' → logprob: -3.818385124206543
    5. ' sys' → logprob: -4.193385124206543
    6. 'return' → logprob: -5.068385124206543
    7. ' ()' → logprob: -5.193385124206543
    8. '    ' → logprob: -5.818385124206543
    9. '  ' → logprob: -7.318385124206543
    10. 'sys' → logprob: -7.318385124206543

Token 22: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.49779245257377625
    2. ' sys' → logprob: -1.4977924823760986
    3. 'return' (adapté à ' return') → logprob: -1.8727924823760986
    4. 'sys' → logprob: -4.4977922439575195
    5. '   ' → logprob: -5.7477922439575195
    6. ' try' → logprob: -8.62279224395752
    7. ' ' → logprob: -8.99779224395752
    8. 'try' → logprob: -9.74779224395752
    9. 'pass' → logprob: -10.99779224395752
    10. ' line' → logprob: -10.99779224395752

Token 23: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16045066714286804
    2. 'sys' → logprob: -1.9104506969451904
    3. 'input' → logprob: -10.03545093536377
    4. ' next' → logprob: -10.16045093536377
    5. ' ' → logprob: -10.28545093536377
    6. ' input' → logprob: -10.53545093536377
    7. ' None' → logprob: -10.78545093536377
    8. 'next' → logprob: -11.16045093536377
    9. '"' → logprob: -11.66045093536377
    10. '	sys' → logprob: -11.78545093536377

Token 24: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0028684698045253754
    2. '.' → logprob: -6.37786865234375
    3. '.stdout' → logprob: -7.00286865234375
    4. '.argv' → logprob: -8.50286865234375
    5. '.readline' → logprob: -11.00286865234375
    6. '._' → logprob: -11.50286865234375
    7. '.stderr' → logprob: -11.75286865234375
    8. '.__' → logprob: -12.00286865234375
    9. 'stdin' → logprob: -12.62786865234375
    10. '.std' → logprob: -12.75286865234375

Token 25: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0001443035143893212
    2. '.read' → logprob: -9.500144004821777
    3. '.' → logprob: -9.625144004821777
    4. '.readlines' → logprob: -12.875144004821777
    5. ' readline' → logprob: -14.375144004821777
    6. 'read' → logprob: -16.125144958496094
    7. '.Read' → logprob: -16.500144958496094
    8. '.buffer' → logprob: -18.875144958496094
    9. '.write' → logprob: -19.000144958496094
    10. '.READ' → logprob: -19.750144958496094

Token 26: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3869730532169342
    2. '().' → logprob: -1.1369730234146118
    3. '()
' → logprob: -10.01197338104248
    4. '()\' → logprob: -10.26197338104248
    5. '(' → logprob: -12.38697338104248
    6. '()<' → logprob: -12.63697338104248
    7. ' ()' → logprob: -13.01197338104248
    8. '()

' → logprob: -13.13697338104248
    9. '())' → logprob: -13.26197338104248
    10. ' ().' → logprob: -13.76197338104248

Token 27: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0031825865153223276
    2. 'rstrip' → logprob: -5.753182411193848
    3. ' strip' → logprob: -12.253182411193848
    4. '_strip' → logprob: -17.128183364868164
    5. 'r' → logprob: -17.378183364868164
    6. 'str' → logprob: -17.503183364868164
    7. '-strip' → logprob: -17.878183364868164
    8. '(strip' → logprob: -18.753183364868164
    9. 'rst' → logprob: -19.003183364868164
    10. '.strip' → logprob: -19.378183364868164

Token 28: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011472448240965605
    2. '(' → logprob: -7.126147270202637
    3. '()
' → logprob: -8.126147270202637
    4. '()

' → logprob: -10.501147270202637
    5. '()\' → logprob: -11.501147270202637
    6. '(
' → logprob: -12.626147270202637
    7. ' ()' → logprob: -13.501147270202637
    8. '()`' → logprob: -13.876147270202637
    9. '()<' → logprob: -14.501147270202637
    10. '<|end|>' → logprob: -14.626147270202637

Token 29: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4239315688610077
    2. '#' → logprob: -1.42393159866333
    3. '\' → logprob: -3.04893159866333
    4. '
' → logprob: -3.54893159866333
    5. '(' → logprob: -4.42393159866333
    6. '\n' → logprob: -5.04893159866333
    7. '

' → logprob: -6.04893159866333
    8. 'x' → logprob: -6.92393159866333
    9. '```' → logprob: -7.29893159866333
    10. '(
' → logprob: -7.42393159866333

Token 30: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5230869650840759
    2. 'def' → logprob: -1.3980870246887207
    3. 'n' → logprob: -2.3980870246887207
    4. 'd' → logprob: -3.2730870246887207
    5. 'a' → logprob: -4.523087024688721
    6. '
' → logprob: -5.273087024688721
    7. '(' → logprob: -6.398087024688721
    8. ' ' → logprob: -6.523087024688721
    9. 'i' → logprob: -6.648087024688721
    10. '<|end|>' → logprob: -7.023087024688721

Token 31: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33127328753471375
    2. 'def' → logprob: -1.3312733173370361
    3. '#' → logprob: -4.831273078918457
    4. 'N' → logprob: -6.206273078918457
    5. 'data' → logprob: -6.331273078918457
    6. 'a' → logprob: -6.581273078918457
    7. 'for' → logprob: -7.081273078918457
    8. 'num' → logprob: -7.206273078918457
    9. 't' → logprob: -7.581273078918457
    10. 'number' → logprob: -7.706273078918457

Token 32: 'd' (ID: 67)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4615531861782074
    2. '+' → logprob: -2.0865530967712402
    3. '*' → logprob: -2.2115530967712402
    4. ' *' → logprob: -2.7115530967712402
    5. ' +' → logprob: -4.08655309677124
    6. '0' → logprob: -4.46155309677124
    7. '#' → logprob: -4.71155309677124
    8. ' **' → logprob: -4.83655309677124
    9. ' #' → logprob: -5.71155309677124
    10. '**' → logprob: -5.83655309677124

Token 33: ' list' (ID: 1562)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0414819717407227
    2. 'array' → logprob: -1.2914819717407227
    3. ' array' → logprob: -2.9164819717407227
    4. 'def' → logprob: -3.0414819717407227
    5. 'list' → logprob: -3.0414819717407227
    6. 'dp' → logprob: -3.2914819717407227
    7. '_list' → logprob: -3.4164819717407227
    8. 'matrix' → logprob: -3.5414819717407227
    9. '-' → logprob: -3.7914819717407227
    10. ' list' → logprob: -4.166481971740723

Token 34: ' utils' (ID: 24706)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -1.0088974237442017
    2. ' =' → logprob: -1.8838974237442017
    3. '[' → logprob: -2.383897304534912
    4. '<|end|>' → logprob: -2.633897304534912
    5. 'def' → logprob: -2.883897304534912
    6. '[]' → logprob: -3.258897304534912
    7. 'data' → logprob: -3.383897304534912
    8. ' matrix' → logprob: -3.383897304534912
    9. '[
' → logprob: -3.883897304534912
    10. '[][]' → logprob: -4.258897304534912

Token 35: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027850056067109108
    2. '
' → logprob: -3.9028501510620117
    3. '_' → logprob: -5.902850151062012
    4. ' def' → logprob: -6.152850151062012
    5. 'd' → logprob: -7.277850151062012
    6. '\' → logprob: -7.402850151062012
    7. 'de' → logprob: -8.277850151062012
    8. '```' → logprob: -8.652850151062012
    9. '#' → logprob: -8.777850151062012
    10. '

' → logprob: -9.027850151062012

Token 36: ' inspiration' (ID: 21907)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03893289715051651
    2. ' def' → logprob: -3.2889328002929688
    3. ' for' → logprob: -8.538932800292969
    4. 'import' → logprob: -9.163932800292969
    5. '#' → logprob: -9.788932800292969
    6. ' ' → logprob: -9.788932800292969
    7. 'class' → logprob: -9.913932800292969
    8. ' len' → logprob: -10.288932800292969
    9. ' to' → logprob: -10.413932800292969
    10. 'for' → logprob: -10.788932800292969

Token 37: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23309530317783356
    2. ' from' → logprob: -2.358095407485962
    3. 'from' → logprob: -2.983095407485962
    4. ' =' → logprob: -3.108095407485962
    5. ' :' → logprob: -5.483095169067383
    6. '=' → logprob: -6.108095169067383
    7. 'def' → logprob: -6.108095169067383
    8. ' for' → logprob: -6.233095169067383
    9. ' ' → logprob: -6.483095169067383
    10. '#' → logprob: -6.483095169067383

Token 38: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04322115331888199
    2. ''une' → logprob: -4.1682209968566895
    3. 'u' → logprob: -4.7932209968566895
    4. ''' → logprob: -4.7932209968566895
    5. ''un' → logprob: -5.4182209968566895
    6. 'eux' → logprob: -6.9182209968566895
    7. 'es' → logprob: -7.0432209968566895
    8. 'une' → logprob: -7.4182209968566895
    9. 'a' → logprob: -7.9182209968566895
    10. ''e' → logprob: -8.293221473693848

Token 39: ' vieux' (ID: 83754)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0989513397216797
    2. ' site' → logprob: -1.9739513397216797
    3. 'stackoverflow' → logprob: -2.4739513397216797
    4. ' stack' → logprob: -2.7239513397216797
    5. 'site' → logprob: -2.9739513397216797
    6. 'stack' → logprob: -3.3489513397216797
    7. 'e' → logprob: -3.4739513397216797
    8. '```' → logprob: -3.8489513397216797
    9. ' article' → logprob: -3.9739513397216797
    10. ' code' → logprob: -4.09895133972168

Token 40: ' code' (ID: 3490)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.9544147253036499
    2. ' projet' → logprob: -1.32941472530365
    3. ' code' → logprob: -2.0794148445129395
    4. 'code' → logprob: -2.4544148445129395
    5. '```' → logprob: -3.4544148445129395
    6. 'jeu' → logprob: -4.2044148445129395
    7. 'con' → logprob: -4.4544148445129395
    8. 'script' → logprob: -4.9544148445129395
    9. 's' → logprob: -4.9544148445129395
    10. 'def' → logprob: -5.3294148445129395

Token 41: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006984725594520569
    2. '#' → logprob: -6.131984710693359
    3. '```' → logprob: -6.631984710693359
    4. '\' → logprob: -6.756984710693359
    5. '
' → logprob: -7.381984710693359
    6. 's' → logprob: -8.00698471069336
    7. ':' → logprob: -8.25698471069336
    8. '[' → logprob: -8.50698471069336
    9. 'd' → logprob: -8.75698471069336
    10. 'de' → logprob: -8.75698471069336

Token 42: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010871129343286157
    2. '```' → logprob: -7.376087188720703
    3. ' def' → logprob: -8.751087188720703
    4. 'class' → logprob: -9.376087188720703
    5. '
' → logprob: -9.876087188720703
    6. '#' → logprob: -10.126087188720703
    7. '[' → logprob: -10.251087188720703
    8. 'de' → logprob: -10.626087188720703
    9. 'import' → logprob: -11.126087188720703
    10. '\' → logprob: -11.126087188720703

Token 43: ' list' (ID: 1562)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -1.1071128845214844
    2. ' flatten' → logprob: -1.2321128845214844
    3. ' read' → logprob: -2.1071128845214844
    4. ' create' → logprob: -2.3571128845214844
    5. ' def' → logprob: -3.1071128845214844
    6. ' deep' → logprob: -3.9821128845214844
    7. ' matrix' → logprob: -4.107112884521484
    8. ' is' → logprob: -4.357112884521484
    9. ' transpose' → logprob: -4.357112884521484
    10. ' split' → logprob: -4.982112884521484

Token 44: '2' (ID: 17)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.2288463115692139
    2. '_append' → logprob: -1.2288463115692139
    3. '_get' → logprob: -2.478846311569214
    4. '_' → logprob: -2.603846311569214
    5. '_of' → logprob: -2.603846311569214
    6. '_copy' → logprob: -3.228846311569214
    7. '_sum' → logprob: -4.228846549987793
    8. '_index' → logprob: -4.353846549987793
    9. '_extend' → logprob: -4.353846549987793
    10. '_flat' → logprob: -4.478846549987793

Token 45: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10420894622802734
    2. 'D' → logprob: -2.7292089462280273
    3. '_to' → logprob: -3.7292089462280273
    4. '_d' → logprob: -5.229208946228027
    5. 'to' → logprob: -7.229208946228027
    6. '_append' → logprob: -7.354208946228027
    7. 'append' → logprob: -7.729208946228027
    8. 'dim' → logprob: -8.104208946228027
    9. '_dim' → logprob: -8.229208946228027
    10. 'To' → logprob: -8.729208946228027

Token 46: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5718391537666321
    2. '(size' → logprob: -1.1968390941619873
    3. '(n' → logprob: -2.5718390941619873
    4. '(rows' → logprob: -3.3218390941619873
    5. ' (' → logprob: -4.571839332580566
    6. '(length' → logprob: -5.821839332580566
    7. '(len' → logprob: -5.946839332580566
    8. '(width' → logprob: -7.321839332580566
    9. '(dim' → logprob: -7.321839332580566
    10. '(depth' → logprob: -7.571839332580566

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00910033006221056
    2. ',n' → logprob: -5.384100437164307
    3. ' ,' → logprob: -5.634100437164307
    4. ',b' → logprob: -7.884100437164307
    5. ',size' → logprob: -8.884099960327148
    6. '):' → logprob: -9.009099960327148
    7. ',a' → logprob: -9.759099960327148
    8. ',l' → logprob: -9.884099960327148
    9. 'size' → logprob: -11.009099960327148
    10. ',w' → logprob: -11.134099960327148

Token 48: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015381926205009222
    2. ' b' → logprob: -6.501538276672363
    3. ' ' → logprob: -10.876538276672363
    4. '	b' → logprob: -11.876538276672363
    5. 'rows' → logprob: -12.501538276672363
    6. 'n' → logprob: -13.251538276672363
    7. '   ' → logprob: -13.876538276672363
    8. 'h' → logprob: -14.126538276672363
    9. 'r' → logprob: -14.376538276672363
    10. '  ' → logprob: -14.876538276672363

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.953082341467962e-05
    2. ' ,' → logprob: -10.750039100646973
    3. '):' → logprob: -11.000039100646973
    4. ',a' → logprob: -14.375039100646973
    5. '   ' → logprob: -16.25004005432129
    6. ',b' → logprob: -16.62504005432129
    7. '=' → logprob: -16.75004005432129
    8. ')' → logprob: -17.00004005432129
    9. ',size' → logprob: -17.12504005432129
    10. ',int' → logprob: -17.37504005432129

Token 50: ' c' (ID: 274)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.795511782169342
    2. 'c' → logprob: -1.4205117225646973
    3. ' v' → logprob: -2.5455117225646973
    4. ' c' → logprob: -2.9205117225646973
    5. ' ' → logprob: -3.6705117225646973
    6. 'None' → logprob: -3.6705117225646973
    7. 'init' → logprob: -3.9205117225646973
    8. '   ' → logprob: -4.170511722564697
    9. ' val' → logprob: -4.420511722564697
    10. 'k' → logprob: -4.545511722564697

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008747059851884842
    2. '=' → logprob: -4.758747100830078
    3. '=None' → logprob: -9.633747100830078
    4. ')' → logprob: -9.883747100830078
    5. ' ):' → logprob: -11.758747100830078
    6. '):
' → logprob: -12.508747100830078
    7. '=[]' → logprob: -13.133747100830078
    8. ' =' → logprob: -13.883747100830078
    9. '):
' → logprob: -14.883747100830078
    10. ')=' → logprob: -15.258747100830078

Token 52: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09267127513885498
    2. '=' → logprob: -2.5926713943481445
    3. '):' → logprob: -5.5926713943481445
    4. ' =' → logprob: -6.0926713943481445
    5. ' :' → logprob: -6.2176713943481445
    6. ',' → logprob: -6.3426713943481445
    7. '   ' → logprob: -6.5926713943481445
    8. '=[]' → logprob: -6.8426713943481445
    9. ' return' → logprob: -7.7176713943481445
    10. ':return' → logprob: -8.467671394348145

Token 53: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.48019856214523315
    2. ' return' → logprob: -0.9801985621452332
    3. '   ' → logprob: -5.105198383331299
    4. '[' → logprob: -11.105198860168457
    5. ' ' → logprob: -11.480198860168457
    6. '	return' → logprob: -11.980198860168457
    7. '[]' → logprob: -13.480198860168457
    8. '[
' → logprob: -13.855198860168457
    9. '[[' → logprob: -14.105198860168457
    10. ' [' → logprob: -14.605198860168457

Token 54: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00026205103495158255
    2. ' [[' → logprob: -8.500262260437012
    3. '[' → logprob: -9.750262260437012
    4. ' [' → logprob: -15.875262260437012
    5. '[
' → logprob: -17.125261306762695
    6. '[a' → logprob: -17.625261306762695
    7. '[]' → logprob: -17.625261306762695
    8. '[['' → logprob: -18.125261306762695
    9. ' ' → logprob: -19.125261306762695
    10. '[c' → logprob: -19.500261306762695

Token 55: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.088346359931165e-07
    2. ' c' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.625
    4. '	c' → logprob: -19.625
    5. '0' → logprob: -22.125
    6. '_c' → logprob: -22.25
    7. ')c' → logprob: -22.375
    8. 'с' → logprob: -22.75
    9. '%c' → logprob: -22.875
    10. 'copy' → logprob: -23.0

Token 56: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1271597146987915
    2. 'for' → logprob: -2.127159595489502
    3. ']' → logprob: -8.62716007232666
    4. '   ' → logprob: -10.75216007232666
    5. ' ' → logprob: -11.50216007232666
    6. '	for' → logprob: -11.50216007232666
    7. ')' → logprob: -12.62716007232666
    8. '()' → logprob: -12.87716007232666
    9. '  ' → logprob: -13.25216007232666
    10. ' ]' → logprob: -14.00216007232666

Token 57: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0032630343921482563
    2. 'a' → logprob: -5.753262996673584
    3. ' b' → logprob: -9.378263473510742
    4. ' a' → logprob: -14.378263473510742
    5. ' ' → logprob: -15.878263473510742
    6. '   ' → logprob: -16.503263473510742
    7. '(b' → logprob: -17.253263473510742
    8. 'c' → logprob: -17.378263473510742
    9. 'int' → logprob: -17.503263473510742
    10. '	b' → logprob: -18.753263473510742

Token 58: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931728720664978
    2. 'for' → logprob: -0.6931728720664978
    3. '	for' → logprob: -11.068172454833984
    4. '   ' → logprob: -11.943172454833984
    5. ']' → logprob: -13.443172454833984
    6. 'a' → logprob: -14.068172454833984
    7. ' ]' → logprob: -15.068172454833984
    8. ' ' → logprob: -15.068172454833984
    9. '  ' → logprob: -16.193172454833984
    10. ')' → logprob: -16.193172454833984

Token 59: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0403798818588257
    2. 'a' → logprob: -1.1653798818588257
    3. ' range' → logprob: -1.1653798818588257
    4. '_' → logprob: -4.040380001068115
    5. ' a' → logprob: -5.915380001068115
    6. '	range' → logprob: -6.790380001068115
    7. '_a' → logprob: -7.415380001068115
    8. '_range' → logprob: -8.290379524230957
    9. ' ' → logprob: -8.290379524230957
    10. ' xrange' → logprob: -8.915379524230957

Token 60: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008134396048262715
    2. ' range' → logprob: -7.2508134841918945
    3. 'in' → logprob: -10.125813484191895
    4. 'a' → logprob: -10.250813484191895
    5. '(range' → logprob: -11.250813484191895
    6. ' in' → logprob: -11.750813484191895
    7. '	range' → logprob: -13.250813484191895
    8. '<|end|>' → logprob: -13.250813484191895
    9. ' ' → logprob: -14.000813484191895
    10. ' xrange' → logprob: -14.125813484191895

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015718759968876839
    2. ' range' → logprob: -6.5015716552734375
    3. 'a' → logprob: -9.626571655273438
    4. '	range' → logprob: -13.501571655273438
    5. '(range' → logprob: -14.001571655273438
    6. ' xrange' → logprob: -14.126571655273438
    7. 'x' → logprob: -15.376571655273438
    8. ' ' → logprob: -16.126571655273438
    9. '[' → logprob: -16.751571655273438
    10. 'rang' → logprob: -17.001571655273438

Token 62: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.659005157416686e-05
    2. '(' → logprob: -9.625066757202148
    3. 'a' → logprob: -15.250066757202148
    4. ' (' → logprob: -15.500066757202148
    5. '/a' → logprob: -16.50006675720215
    6. '(
' → logprob: -17.37506675720215
    7. ')a' → logprob: -18.62506675720215
    8. '(A' → logprob: -18.87506675720215
    9. '(ai' → logprob: -19.75006675720215
    10. ')' → logprob: -19.87506675720215

Token 63: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.6405310816480778e-05
    2. ')' → logprob: -11.625016212463379
    3. ']' → logprob: -12.250016212463379
    4. ' )' → logprob: -13.000016212463379
    5. ')]
' → logprob: -16.250017166137695
    6. ' ]' → logprob: -16.250017166137695
    7. ')],' → logprob: -17.125017166137695
    8. '])' → logprob: -17.375017166137695
    9. '')]' → logprob: -17.625017166137695
    10. ')])' → logprob: -17.750017166137695

Token 64: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3789791464805603
    2. '<|end|>' → logprob: -1.503979206085205
    3. ')' → logprob: -3.378979206085205
    4. '(' → logprob: -4.378979206085205
    5. '<|end|>' → logprob: -4.628979206085205
    6. 'def' → logprob: -4.878979206085205
    7. '#' → logprob: -5.128979206085205
    8. '(
' → logprob: -5.128979206085205
    9. '\n' → logprob: -5.878979206085205
    10. 'newline' → logprob: -5.878979206085205

Token 65: ' jamais' (ID: 23077)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5595457553863525
    2. '#' → logprob: -1.0595457553863525
    3. '\' → logprob: -4.059545516967773
    4. 'd' → logprob: -4.184545516967773
    5. ' 
' → logprob: -4.684545516967773
    6. '
' → logprob: -4.809545516967773
    7. '\n' → logprob: -4.809545516967773
    8. ' ' → logprob: -5.059545516967773
    9. ' def' → logprob: -5.184545516967773
    10. '(' → logprob: -5.684545516967773

Token 66: ' utilisé' (ID: 53138)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8208948373794556
    2. 'util' → logprob: -0.9458948373794556
    3. 'used' → logprob: -3.070894718170166
    4. '_' → logprob: -3.695894718170166
    5. '.' → logprob: -4.695894718170166
    6. ' utilisé' → logprob: -4.695894718170166
    7. 'return' → logprob: -4.945894718170166
    8. 'f' → logprob: -5.070894718170166
    9. ' utilisée' → logprob: -5.195894718170166
    10. '```' → logprob: -5.445894718170166

Token 67: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32877907156944275
    2. '<|end|>' → logprob: -2.0787789821624756
    3. '
' → logprob: -2.2037789821624756
    4. '<|end|>' → logprob: -4.203779220581055
    5. 'def' → logprob: -4.953779220581055
    6. ':' → logprob: -4.953779220581055
    7. '\n' → logprob: -5.453779220581055
    8. '.' → logprob: -5.578779220581055
    9. '\' → logprob: -6.703779220581055
    10. '```' → logprob: -6.953779220581055

Token 68: '3' (ID: 18)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20259281992912292
    2. '<|end|>' → logprob: -2.4525928497314453
    3. '#' → logprob: -2.8275928497314453
    4. '
' → logprob: -4.327592849731445
    5. '<|end|>' → logprob: -5.577592849731445
    6. '\' → logprob: -5.702592849731445
    7. '\n' → logprob: -5.952592849731445
    8. ':' → logprob: -6.452592849731445
    9. '```' → logprob: -6.452592849731445
    10. '_' → logprob: -6.577592849731445

Token 69: 'd' (ID: 67)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21823032200336456
    2. '#' → logprob: -2.5932302474975586
    3. '<|end|>' → logprob: -2.7182302474975586
    4. 'def' → logprob: -4.343230247497559
    5. '<|end|>' → logprob: -4.468230247497559
    6. ']' → logprob: -5.093230247497559
    7. '0' → logprob: -5.718230247497559
    8. '*' → logprob: -5.968230247497559
    9. '.' → logprob: -5.968230247497559
    10. '```' → logprob: -6.093230247497559

Token 70: ' mais' (ID: 2899)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2949438989162445
    2. ' def' → logprob: -1.919943928718567
    3. '<|end|>' → logprob: -2.2949438095092773
    4. 'list' → logprob: -6.044943809509277
    5. ' list' → logprob: -6.169943809509277
    6. '_list' → logprob: -7.169943809509277
    7. '```' → logprob: -7.169943809509277
    8. '<|end|>' → logprob: -7.169943809509277
    9. ')' → logprob: -7.919943809509277
    10. ' lists' → logprob: -8.669943809509277

Token 71: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014327568002045155
    2. ' def' → logprob: -4.889327526092529
    3. '<|end|>' → logprob: -5.139327526092529
    4. '<|end|>' → logprob: -8.139328002929688
    5. '```' → logprob: -9.139328002929688
    6. ' ' → logprob: -9.764328002929688
    7. '...' → logprob: -9.889328002929688
    8. 's' → logprob: -10.264328002929688
    9. 'd' → logprob: -10.264328002929688
    10. ' déf' → logprob: -10.639328002929688

Token 72: ' sait' (ID: 52101)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43613946437835693
    2. ' continue' → logprob: -2.8111395835876465
    3. '<|end|>' → logprob: -2.8111395835876465
    4. ' peux' → logprob: -2.9361395835876465
    5. 's' → logprob: -3.9361395835876465
    6. 'contin' → logprob: -4.0611395835876465
    7. '#' → logprob: -4.3111395835876465
    8. 'continue' → logprob: -4.4361395835876465
    9. ' peut' → logprob: -4.6861395835876465
    10. ''ll' → logprob: -4.8111395835876465

Token 73: ' jamais' (ID: 23077)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.8665465116500854
    2. ' faire' → logprob: -2.116546630859375
    3. '```' → logprob: -2.116546630859375
    4. ' qu' → logprob: -2.491546630859375
    5. ' jamais' → logprob: -2.616546630859375
    6. 'def' → logprob: -2.991546630859375
    7. 'faire' → logprob: -3.866546630859375
    8. '-faire' → logprob: -4.241546630859375
    9. ' ' → logprob: -4.366546630859375
    10. ' pas' → logprob: -4.991546630859375

Token 74: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0030652955174446106
    2. '
' → logprob: -6.00306510925293
    3. ' def' → logprob: -7.87806510925293
    4. '<|end|>' → logprob: -8.75306510925293
    5. '```' → logprob: -10.25306510925293
    6. '  
' → logprob: -12.37806510925293
    7. '<|end|>' → logprob: -12.75306510925293
    8. '\' → logprob: -12.75306510925293
    9. 'ndef' → logprob: -13.62806510925293
    10. ':def' → logprob: -13.87806510925293

Token 75: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.983476436696947e-05
    2. '
' → logprob: -9.875089645385742
    3. ' def' → logprob: -10.250089645385742
    4. '```' → logprob: -13.375089645385742
    5. 'ndef' → logprob: -14.375089645385742
    6. '<|end|>' → logprob: -14.500089645385742
    7. 'd' → logprob: -16.250089645385742
    8. ':def' → logprob: -16.750089645385742
    9. '``' → logprob: -17.000089645385742
    10. '_def' → logprob: -17.250089645385742

Token 76: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.0024957526475191116
    2. 'list' → logprob: -6.002495765686035
    3. ' ' → logprob: -11.877495765686035
    4. '_list' → logprob: -12.627495765686035
    5. '```' → logprob: -12.877495765686035
    6. ' def' → logprob: -13.127495765686035
    7. 'def' → logprob: -13.502495765686035
    8. '3' → logprob: -14.002495765686035
    9. 'List' → logprob: -14.127495765686035
    10. '	list' → logprob: -14.252495765686035

Token 77: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '```' → logprob: -18.0
    3. '³' → logprob: -19.375
    4. ' ' → logprob: -19.5
    5. '３' → logprob: -20.875
    6. '2' → logprob: -21.125
    7. '۳' → logprob: -21.125
    8. '_' → logprob: -21.125
    9. '٣' → logprob: -21.5
    10. '   ' → logprob: -21.75

Token 78: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.128163257315464e-07
    2. '(d' → logprob: -16.25
    3. '	d' → logprob: -16.625
    4. '_d' → logprob: -17.125
    5. ' d' → logprob: -17.875
    6. '>d' → logprob: -18.0
    7. 'def' → logprob: -18.375
    8. ')d' → logprob: -18.625
    9. 'D' → logprob: -19.0
    10. '```' → logprob: -19.125

Token 79: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00150390958879143
    2. '(' → logprob: -6.501503944396973
    3. ' (' → logprob: -14.126503944396973
    4. '(ai' → logprob: -15.001503944396973
    5. '(
' → logprob: -15.626503944396973
    6. '(A' → logprob: -16.501502990722656
    7. 'def' → logprob: -17.126502990722656
    8. 'a' → logprob: -17.126502990722656
    9. '((' → logprob: -17.376502990722656
    10. '```' → logprob: -17.626502990722656

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003063838230445981
    2. ',b' → logprob: -8.375306129455566
    3. ' ,' → logprob: -9.500306129455566
    4. ' b' → logprob: -15.250306129455566
    5. 'b' → logprob: -15.875306129455566
    6. '(b' → logprob: -16.000307083129883
    7. ')' → logprob: -16.250307083129883
    8. ',a' → logprob: -16.250307083129883
    9. '):' → logprob: -16.375307083129883
    10. '(),' → logprob: -17.625307083129883

Token 81: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004622491542249918
    2. ' b' → logprob: -5.379622459411621
    3. '   ' → logprob: -13.754622459411621
    4. ' ' → logprob: -14.129622459411621
    5. '  ' → logprob: -14.879622459411621
    6. '    ' → logprob: -16.004623413085938
    7. '	b' → logprob: -16.879623413085938
    8. ',' → logprob: -17.129623413085938
    9. '     ' → logprob: -18.629623413085938
    10. '```' → logprob: -18.629623413085938

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1080467781284824e-05
    2. ',c' → logprob: -10.250041007995605
    3. ' ,' → logprob: -12.250041007995605
    4. 'c' → logprob: -14.250041007995605
    5. ' c' → logprob: -16.250041961669922
    6. '),' → logprob: -18.125041961669922
    7. '<|end|>' → logprob: -18.125041961669922
    8. '`,' → logprob: -18.375041961669922
    9. '```' → logprob: -18.375041961669922
    10. ')' → logprob: -18.500041961669922

Token 83: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0067156096920371056
    2. ' c' → logprob: -5.006715774536133
    3. '	c' → logprob: -15.881715774536133
    4. ' ' → logprob: -17.506715774536133
    5. '  ' → logprob: -17.631715774536133
    6. '<|end|>' → logprob: -18.256715774536133
    7. ')c' → logprob: -18.381715774536133
    8. '   ' → logprob: -18.506715774536133
    9. '```' → logprob: -18.881715774536133
    10. ',' → logprob: -19.506715774536133

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5577775128767826e-06
    2. ' ,' → logprob: -12.375005722045898
    3. ',d' → logprob: -13.625005722045898
    4. '‌,' → logprob: -17.6250057220459
    5. '<|end|>' → logprob: -18.6250057220459
    6. 'd' → logprob: -18.7500057220459
    7. ',
' → logprob: -18.8750057220459
    8. ',c' → logprob: -19.1250057220459
    9. '،' → logprob: -19.1250057220459
    10. 's' → logprob: -19.3750057220459

Token 85: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02324594371020794
    2. ' d' → logprob: -3.7732460498809814
    3. 'c' → logprob: -15.523245811462402
    4. ' ' → logprob: -16.02324676513672
    5. '	d' → logprob: -16.39824676513672
    6. ')d' → logprob: -17.64824676513672
    7. ')' → logprob: -17.77324676513672
    8. '```' → logprob: -18.02324676513672
    9. '  ' → logprob: -18.27324676513672
    10. 'def' → logprob: -18.52324676513672

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.7954958821064793e-05
    2. '):
' → logprob: -12.000018119812012
    3. ')' → logprob: -12.125018119812012
    4. ' ):' → logprob: -12.125018119812012
    5. ':' → logprob: -14.375018119812012
    6. '=' → logprob: -15.500018119812012
    7. ']:' → logprob: -16.500017166137695
    8. '):
' → logprob: -17.375017166137695
    9. '）：' → logprob: -17.875017166137695
    10. '():' → logprob: -18.375017166137695

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05594053119421005
    2. ' return' → logprob: -3.055940628051758
    3. 'return' → logprob: -4.930940628051758
    4. '	return' → logprob: -10.430940628051758
    5. ' ' → logprob: -10.930940628051758
    6. '[' → logprob: -11.180940628051758
    7. '  ' → logprob: -11.180940628051758
    8. '[]' → logprob: -12.180940628051758
    9. ')' → logprob: -12.305940628051758
    10. ':return' → logprob: -12.430940628051758

Token 88: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31371816992759705
    2. ' return' → logprob: -1.3137181997299194
    3. '   ' → logprob: -8.18871784210205
    4. '[[' → logprob: -8.68871784210205
    5. ' ' → logprob: -12.93871784210205
    6. ' [[' → logprob: -12.93871784210205
    7. ' [[[' → logprob: -12.93871784210205
    8. '[
' → logprob: -14.31371784210205
    9. 'eturn' → logprob: -14.68871784210205
    10. '	return' → logprob: -14.68871784210205

Token 89: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0002096197713399306
    2. ' [[[' → logprob: -8.50020980834961
    3. ' [[' → logprob: -12.12520980834961
    4. '[list' → logprob: -14.75020980834961
    5. '[' → logprob: -15.00020980834961
    6. ' ' → logprob: -19.00020980834961
    7. '```' → logprob: -19.12520980834961
    8. '[['' → logprob: -19.25020980834961
    9. ' [' → logprob: -19.75020980834961
    10. 'list' → logprob: -19.87520980834961

Token 90: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.463036435074173e-05
    2. 'c' → logprob: -11.250024795532227
    3. ' d' → logprob: -11.375024795532227
    4. '	d' → logprob: -16.125024795532227
    5. '
' → logprob: -17.375024795532227
    6. '```' → logprob: -17.625024795532227
    7. '0' → logprob: -18.625024795532227
    8. 'д' → logprob: -19.250024795532227
    9. ')d' → logprob: -19.250024795532227
    10. '   ' → logprob: -20.000024795532227

Token 91: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.13124382495880127
    2. ' for' → logprob: -2.3812437057495117
    3. 'for' → logprob: -3.5062437057495117
    4. ']' → logprob: -7.631243705749512
    5. '	for' → logprob: -11.006243705749512
    6. '*' → logprob: -11.256243705749512
    7. ']*(' → logprob: -11.506243705749512
    8. ')*' → logprob: -11.631243705749512
    9. ' ]' → logprob: -12.131243705749512
    10. '   ' → logprob: -12.256243705749512

Token 92: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002222516923211515
    2. ' c' → logprob: -8.625222206115723
    3. 'd' → logprob: -10.500222206115723
    4. '	c' → logprob: -11.875222206115723
    5. '   ' → logprob: -12.375222206115723
    6. ' ' → logprob: -12.750222206115723
    7. '  ' → logprob: -15.000222206115723
    8. '```' → logprob: -15.875222206115723
    9. '
' → logprob: -16.00022315979004
    10. ')c' → logprob: -16.87522315979004

Token 93: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38706323504447937
    2. ' for' → logprob: -1.1370632648468018
    3. '	for' → logprob: -8.637063026428223
    4. ']' → logprob: -12.137063026428223
    5. '   ' → logprob: -12.637063026428223
    6. ' ' → logprob: -12.762063026428223
    7. ')' → logprob: -13.512063026428223
    8. ']*' → logprob: -14.262063026428223
    9. '```' → logprob: -15.137063026428223
    10. '  ' → logprob: -15.262063026428223

Token 94: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3872476816177368
    2. ' _' → logprob: -1.1372476816177368
    3. ' in' → logprob: -8.012248039245605
    4. ' range' → logprob: -10.762248039245605
    5. ' ' → logprob: -11.762248039245605
    6. '_in' → logprob: -11.887248039245605
    7. 'range' → logprob: -12.387248039245605
    8. '_range' → logprob: -13.012248039245605
    9. 'in' → logprob: -13.137248039245605
    10. '_j' → logprob: -15.887248039245605

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2642814815044403
    2. 'range' → logprob: -2.2642815113067627
    3. 'in' → logprob: -2.8892815113067627
    4. '_' → logprob: -3.0142815113067627
    5. ' range' → logprob: -4.014281272888184
    6. ' ' → logprob: -5.264281272888184
    7. '_range' → logprob: -8.514281272888184
    8. ' _' → logprob: -9.014281272888184
    9. '<|end|>' → logprob: -10.139281272888184
    10. '_in' → logprob: -11.014281272888184

Token 96: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931518912315369
    2. 'range' → logprob: -0.6931518912315369
    3. 'ran' → logprob: -13.443151473999023
    4. ' ' → logprob: -13.568151473999023
    5. '	range' → logprob: -14.193151473999023
    6. 'rang' → logprob: -14.568151473999023
    7. ' ran' → logprob: -15.193151473999023
    8. '(range' → logprob: -16.068151473999023
    9. ' rang' → logprob: -16.193151473999023
    10. 'r' → logprob: -16.443151473999023

Token 97: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0003062646137550473
    2. 'b' → logprob: -8.125306129455566
    3. '	b' → logprob: -12.750306129455566
    4. '(' → logprob: -12.750306129455566
    5. ')b' → logprob: -13.125306129455566
    6. ' b' → logprob: -13.625306129455566
    7. ' (' → logprob: -13.875306129455566
    8. '>b' → logprob: -17.125307083129883
    9. ')' → logprob: -17.375307083129883
    10. '(
' → logprob: -17.875307083129883

Token 98: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011075058951973915
    2. ')' → logprob: -4.636075019836426
    3. ']' → logprob: -6.636075019836426
    4. ' )' → logprob: -12.886075019836426
    5. ' ]' → logprob: -13.761075019836426
    6. ')])' → logprob: -14.886075019836426
    7. ')]
' → logprob: -15.261075019836426
    8. ']]' → logprob: -15.261075019836426
    9. '   ' → logprob: -15.261075019836426
    10. ')],' → logprob: -15.386075019836426

Token 99: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4744039475917816
    2. 'for' → logprob: -0.974403977394104
    3. ' in' → logprob: -8.099404335021973
    4. 'in' → logprob: -11.474404335021973
    5. ']' → logprob: -11.974404335021973
    6. '	for' → logprob: -12.474404335021973
    7. '   ' → logprob: -13.224404335021973
    8. ')' → logprob: -14.349404335021973
    9. ' ' → logprob: -15.724404335021973
    10. '  ' → logprob: -17.224403381347656

Token 100: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012502702884376049
    2. ' range' → logprob: -4.762502670288086
    3. 'range' → logprob: -5.762502670288086
    4. ' _' → logprob: -7.387502670288086
    5. '_range' → logprob: -9.137502670288086
    6. '_a' → logprob: -12.012502670288086
    7. ' in' → logprob: -13.387502670288086
    8. '(range' → logprob: -13.387502670288086
    9. '_in' → logprob: -14.137502670288086
    10. '	range' → logprob: -15.262502670288086

Token 101: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931697130203247
    2. ' in' → logprob: -0.6931697130203247
    3. 'range' → logprob: -11.318169593811035
    4. '_' → logprob: -12.318169593811035
    5. ' ' → logprob: -12.443169593811035
    6. 'n' → logprob: -14.568169593811035
    7. 'i' → logprob: -14.693169593811035
    8. '<|end|>' → logprob: -15.318169593811035
    9. '_in' → logprob: -15.568169593811035
    10. 'import' → logprob: -15.818169593811035

Token 102: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026288547087460756
    2. ' range' → logprob: -8.250263214111328
    3. '(range' → logprob: -13.375263214111328
    4. 'a' → logprob: -17.750263214111328
    5. '	range' → logprob: -18.750263214111328
    6. 'in' → logprob: -20.250263214111328
    7. 'rang' → logprob: -20.500263214111328
    8. ' ' → logprob: -20.625263214111328
    9. '_range' → logprob: -21.000263214111328
    10. '(a' → logprob: -21.250263214111328

Token 103: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.662937372922897e-05
    2. 'a' → logprob: -9.250096321105957
    3. '(' → logprob: -14.750096321105957
    4. ' (' → logprob: -18.875097274780273
    5. ')a' → logprob: -19.625097274780273
    6. '   ' → logprob: -19.750097274780273
    7. '/a' → logprob: -20.000097274780273
    8. '(
' → logprob: -21.375097274780273
    9. '<a' → logprob: -21.375097274780273
    10. ' a' → logprob: -21.375097274780273

Token 104: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008656765334308147
    2. ']' → logprob: -4.758656978607178
    3. ')' → logprob: -10.13365650177002
    4. '])' → logprob: -13.88365650177002
    5. ']}' → logprob: -15.00865650177002
    6. ']]' → logprob: -15.00865650177002
    7. '])]' → logprob: -15.38365650177002
    8. ' ]' → logprob: -15.50865650177002
    9. ')])' → logprob: -15.75865650177002
    10. '}]' → logprob: -15.75865650177002

Token 105: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3694511651992798
    2. '<|end|>' → logprob: -1.4944511651992798
    3. 'def' → logprob: -2.9944510459899902
    4. '
' → logprob: -3.4944510459899902
    5. ')' → logprob: -6.11945104598999
    6. '```' → logprob: -7.24445104598999
    7. '<|end|>' → logprob: -8.369451522827148
    8. ' 
' → logprob: -9.119451522827148
    9. '\' → logprob: -9.244451522827148
    10. '#
' → logprob: -9.369451522827148

Token 106: ' approximation' (ID: 112838)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9991283416748047
    2. '#' → logprob: -1.1241283416748047
    3. 'def' → logprob: -1.8741283416748047
    4. '<|end|>' → logprob: -2.8741283416748047
    5. ' 
' → logprob: -3.4991283416748047
    6. 'd' → logprob: -4.249128341674805
    7. '(' → logprob: -4.374128341674805
    8. '\' → logprob: -4.874128341674805
    9. ')' → logprob: -5.249128341674805
    10. ':' → logprob: -5.874128341674805

Token 107: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008998962119221687
    2. 'import' → logprob: -4.883998870849609
    3. '#' → logprob: -7.883998870849609
    4. 's' → logprob: -8.38399887084961
    5. ' def' → logprob: -8.63399887084961
    6. '=' → logprob: -9.13399887084961
    7. 'e' → logprob: -9.25899887084961
    8. ' of' → logprob: -9.63399887084961
    9. '(' → logprob: -9.88399887084961
    10. 'd' → logprob: -10.50899887084961

Token 108: ' ceil' (ID: 35964)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.482158899307251
    2. 'pi' → logprob: -1.607158899307251
    3. 'math' → logprob: -2.107158899307251
    4. 'e' → logprob: -2.607158899307251
    5. ' la' → logprob: -2.607158899307251
    6. ' float' → logprob: -2.732158899307251
    7. 'la' → logprob: -2.982158899307251
    8. ' math' → logprob: -2.982158899307251
    9. ' e' → logprob: -3.857158899307251
    10. 'log' → logprob: -4.107158660888672

Token 109: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005897291121073067
    2. 'import' → logprob: -7.750589847564697
    3. '(' → logprob: -9.000589370727539
    4. '(
' → logprob: -11.000589370727539
    5. ' def' → logprob: -11.375589370727539
    6. 'from' → logprob: -12.125589370727539
    7. '(def' → logprob: -14.000589370727539
    8. 'div' → logprob: -14.750589370727539
    9. ')' → logprob: -15.000589370727539
    10. '#' → logprob: -15.875589370727539

Token 110: ' mais' (ID: 2899)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002962607890367508
    2. '#' → logprob: -6.252962589263916
    3. ' def' → logprob: -7.127962589263916
    4. 'div' → logprob: -9.002963066101074
    5. 'import' → logprob: -10.377963066101074
    6. 'division' → logprob: -10.877963066101074
    7. '
' → logprob: -11.127963066101074
    8. ' #' → logprob: -11.502963066101074
    9. 'a' → logprob: -12.252963066101074
    10. 'lambda' → logprob: -12.502963066101074

Token 111: ' je' (ID: 1264)
  Prédit: 'sans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sans' → logprob: -0.6949970126152039
    2. 'def' → logprob: -2.1949970722198486
    3. ' sans' → logprob: -2.9449970722198486
    4. 'pas' → logprob: -2.9449970722198486
    5. 'qui' → logprob: -3.4449970722198486
    6. ' pas' → logprob: -3.5699970722198486
    7. 'moins' → logprob: -3.9449970722198486
    8. 'int' → logprob: -3.9449970722198486
    9. 'on' → logprob: -4.0699968338012695
    10. 'en' → logprob: -4.1949968338012695

Token 112: ' crois' (ID: 65485)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.15144476294517517
    2. 'veux' → logprob: -2.901444673538208
    3. 'n' → logprob: -3.276444673538208
    4. ' fais' → logprob: -4.901444911956787
    5. 'vais' → logprob: -5.026444911956787
    6. 'ne' → logprob: -5.401444911956787
    7. 'pr' → logprob: -5.651444911956787
    8. ' n' → logprob: -5.776444911956787
    9. ' veux' → logprob: -5.776444911956787
    10. 'voud' → logprob: -5.776444911956787

Token 113: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.4994414746761322
    2. 'def' → logprob: -0.9994415044784546
    3. 'que' → logprob: -4.124441623687744
    4. ' def' → logprob: -5.624441623687744
    5. '#' → logprob: -6.999441623687744
    6. ' qu' → logprob: -7.249441623687744
    7. 'pas' → logprob: -7.249441623687744
    8. ' ' → logprob: -7.374441623687744
    9. ' pas' → logprob: -7.874441623687744
    10. ':' → logprob: -8.374441146850586

Token 114: ' ça' (ID: 13590)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5251895189285278
    2. ' c' → logprob: -1.6501895189285278
    3. ' ça' → logprob: -2.7751893997192383
    4. 'ce' → logprob: -4.025189399719238
    5. 'a' → logprob: -4.025189399719238
    6. 'int' → logprob: -4.275189399719238
    7. 'ça' → logprob: -4.525189399719238
    8. ' ce' → logprob: -4.650189399719238
    9. ' je' → logprob: -4.900189399719238
    10. 'python' → logprob: -4.900189399719238

Token 115: ' marche' (ID: 58191)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6528763175010681
    2. 's' → logprob: -1.652876377105713
    3. 'n' → logprob: -2.402876377105713
    4. ' s' → logprob: -3.777876377105713
    5. ' fonctionne' → logprob: -3.777876377105713
    6. ' marche' → logprob: -4.152876377105713
    7. ' ne' → logprob: -4.277876377105713
    8. 'fonction' → logprob: -4.527876377105713
    9. ' manque' → logprob: -5.027876377105713
    10. 'a' → logprob: -5.027876377105713

Token 116: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015300170343834907
    2. ' def' → logprob: -9.375152587890625
    3. '(' → logprob: -11.000152587890625
    4. '
' → logprob: -11.375152587890625
    5. '(
' → logprob: -11.375152587890625
    6. '(def' → logprob: -11.500152587890625
    7. ':' → logprob: -12.125152587890625
    8. ':def' → logprob: -12.750152587890625
    9. ')' → logprob: -13.250152587890625
    10. '#' → logprob: -13.625152587890625

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.100059156073257e-05
    2. ' def' → logprob: -9.875070571899414
    3. '
' → logprob: -12.000070571899414
    4. '(' → logprob: -12.750070571899414
    5. '(def' → logprob: -12.875070571899414
    6. ':def' → logprob: -13.250070571899414
    7. '#' → logprob: -13.500070571899414
    8. ')' → logprob: -13.625070571899414
    9. '(
' → logprob: -13.875070571899414
    10. ':' → logprob: -14.250070571899414

Token 118: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.25687193870544434
    2. ' ceil' → logprob: -1.5068719387054443
    3. 'approx' → logprob: -6.381872177124023
    4. ' my' → logprob: -7.006872177124023
    5. 'div' → logprob: -7.506872177124023
    6. '```' → logprob: -8.131872177124023
    7. ' ce' → logprob: -8.506872177124023
    8. ' approx' → logprob: -8.631872177124023
    9. 'ce' → logprob: -8.631872177124023
    10. ' div' → logprob: -8.756872177124023

Token 119: '(x' (ID: 4061)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.7696087956428528
    2. '(a' → logprob: -1.019608736038208
    3. '(' → logprob: -2.394608736038208
    4. 'div' → logprob: -3.019608736038208
    5. '(x' → logprob: -3.894608736038208
    6. '((' → logprob: -5.269608974456787
    7. '(n' → logprob: -5.394608974456787
    8. '(div' → logprob: -5.644608974456787
    9. '_(' → logprob: -6.644608974456787
    10. '(num' → logprob: -7.519608974456787

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05661461874842644
    2. '):' → logprob: -2.931614637374878
    3. ' ,' → logprob: -7.181614398956299
    4. '   ' → logprob: -7.681614398956299
    5. ')' → logprob: -8.306614875793457
    6. ',x' → logprob: -9.931614875793457
    7. '):
' → logprob: -10.056614875793457
    8. ' ):' → logprob: -10.181614875793457
    9. ':' → logprob: -10.306614875793457
    10. '(x' → logprob: -11.181614875793457

Token 121: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.029829857870936394
    2. ' y' → logprob: -3.529829740524292
    3. ' ' → logprob: -10.154829978942871
    4. 'div' → logprob: -10.779829978942871
    5. 'n' → logprob: -12.279829978942871
    6. 'm' → logprob: -12.529829978942871
    7. 'd' → logprob: -12.654829978942871
    8. '	y' → logprob: -13.404829978942871
    9. 'q' → logprob: -13.529829978942871
    10. 'a' → logprob: -13.529829978942871

Token 122: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009505256894044578
    2. '):
' → logprob: -7.000950336456299
    3. ':' → logprob: -10.500950813293457
    4. ')' → logprob: -12.000950813293457
    5. ' ):' → logprob: -12.625950813293457
    6. '=' → logprob: -13.375950813293457
    7. '():' → logprob: -16.00094985961914
    8. '   ' → logprob: -16.00094985961914
    9. '):
' → logprob: -16.25094985961914
    10. '>:' → logprob: -17.12594985961914

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19691191613674164
    2. '):' → logprob: -2.0719118118286133
    3. '):
' → logprob: -3.5719118118286133
    4. ')' → logprob: -4.321911811828613
    5. '0' → logprob: -4.821911811828613
    6. '   ' → logprob: -6.821911811828613
    7. ' ' → logprob: -7.571911811828613
    8. 'None' → logprob: -7.696911811828613
    9. ' ):' → logprob: -7.821911811828613
    10. '100' → logprob: -8.696911811828613

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.317247167928144e-05
    2. '):
' → logprob: -9.500093460083008
    3. ')' → logprob: -11.250093460083008
    4. ' ):' → logprob: -12.500093460083008
    5. ':' → logprob: -13.625093460083008
    6. '   ' → logprob: -16.250093460083008
    7. '):
' → logprob: -16.500093460083008
    8. ',' → logprob: -17.000093460083008
    9. '*' → logprob: -17.625093460083008
    10. ')：' → logprob: -17.750093460083008

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.828512363834307e-05
    2. 'return' → logprob: -10.000088691711426
    3. ' return' → logprob: -10.125088691711426
    4. '	return' → logprob: -13.375088691711426
    5. '   ' → logprob: -14.750088691711426
    6. '    ' → logprob: -15.375088691711426
    7. '  ' → logprob: -15.750088691711426
    8. '       ' → logprob: -15.875088691711426
    9. ':return' → logprob: -15.875088691711426
    10. ' ' → logprob: -16.75008773803711

Token 126: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0031014233827590942
    2. '   ' → logprob: -6.253101348876953
    3. ' return' → logprob: -6.753101348876953
    4. 'if' → logprob: -12.878101348876953
    5. '	return' → logprob: -13.128101348876953
    6. ' ' → logprob: -16.003101348876953
    7. '```' → logprob: -16.128101348876953
    8. 'ret' → logprob: -16.878101348876953
    9. '  ' → logprob: -17.253101348876953
    10. ':return' → logprob: -17.753101348876953

Token 127: ' int' (ID: 677)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0033631932456046343
    2. ' (' → logprob: -6.378363132476807
    3. '-' → logprob: -6.628363132476807
    4. '-(' → logprob: -8.253363609313965
    5. ' -' → logprob: -9.753363609313965
    6. '((' → logprob: -11.753363609313965
    7. '-x' → logprob: -12.503363609313965
    8. '(' → logprob: -12.878363609313965
    9. '(X' → logprob: -13.753363609313965
    10. '(y' → logprob: -14.128363609313965

Token 128: '(-' (ID: 8087)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.09228578954935074
    2. '(-' → logprob: -3.0922858715057373
    3. '(' → logprob: -3.2172858715057373
    4. '(x' → logprob: -6.092285633087158
    5. '-' → logprob: -8.217286109924316
    6. '((-' → logprob: -9.342286109924316
    7. '(((' → logprob: -10.217286109924316
    8. '(-(' → logprob: -10.342286109924316
    9. '(abs' → logprob: -13.217286109924316
    10. '(
' → logprob: -13.342286109924316

Token 129: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.946243405342102
    2. '-x' → logprob: -0.946243405342102
    3. '(-' → logprob: -2.1962432861328125
    4. '-(' → logprob: -2.6962432861328125
    5. 'x' → logprob: -3.8212432861328125
    6. '(x' → logprob: -3.9462432861328125
    7. '(' → logprob: -5.9462432861328125
    8. '(-(' → logprob: -7.0712432861328125
    9. ' -' → logprob: -8.946243286132812
    10. '1' → logprob: -10.446243286132812

Token 130: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.630610641877865e-06
    2. 'int' → logprob: -12.250006675720215
    3. ' x' → logprob: -13.250006675720215
    4. '(x' → logprob: -20.2500057220459
    5. ' int' → logprob: -21.7500057220459
    6. '	x' → logprob: -22.1250057220459
    7. ')x' → logprob: -22.3750057220459
    8. 'float' → logprob: -22.5000057220459
    9. '{x' → logprob: -23.2500057220459
    10. 'div' → logprob: -23.3750057220459

Token 131: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.04351998493075371
    2. ' //' → logprob: -3.168519973754883
    3. '/' → logprob: -7.918519973754883
    4. '/y' → logprob: -9.043519973754883
    5. ' /' → logprob: -10.668519973754883
    6. 'y' → logprob: -11.293519973754883
    7. ' ' → logprob: -14.043519973754883
    8. '```' → logprob: -14.668519973754883
    9. '//
' → logprob: -15.043519973754883
    10. '
' → logprob: -15.043519973754883

Token 132: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00020389800192788243
    2. ' y' → logprob: -8.500204086303711
    3. '-y' → logprob: -15.375204086303711
    4. ' ' → logprob: -17.12520408630371
    5. '-' → logprob: -17.50020408630371
    6. '	y' → logprob: -17.62520408630371
    7. ' -' → logprob: -17.62520408630371
    8. '
' → logprob: -18.37520408630371
    9. ')y' → logprob: -19.12520408630371
    10. '   ' → logprob: -19.37520408630371

Token 133: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0013333364622667432
    2. ')' → logprob: -6.626333236694336
    3. ')))' → logprob: -12.251333236694336
    4. '))
' → logprob: -13.501333236694336
    5. ' ))' → logprob: -13.876333236694336
    6. ')
' → logprob: -16.876333236694336
    7. '),' → logprob: -17.251333236694336
    8. '))

' → logprob: -17.251333236694336
    9. '()))' → logprob: -17.876333236694336
    10. '))-' → logprob: -18.001333236694336

Token 134: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3622173070907593
    2. '
' → logprob: -1.9872173070907593
    3. 'def' → logprob: -2.487217426300049
    4. '<|end|>' → logprob: -2.862217426300049
    5. '#' → logprob: -4.862217426300049
    6. ')
' → logprob: -5.862217426300049
    7. ' def' → logprob: -5.987217426300049
    8. '\n' → logprob: -6.112217426300049
    9. ':' → logprob: -6.112217426300049
    10. '(
' → logprob: -6.862217426300049

Token 135: ' INT' (ID: 20104)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0009203928639180958
    2. ' solve' → logprob: -8.000920295715332
    3. 'main' → logprob: -8.750920295715332
    4. ' ' → logprob: -9.000920295715332
    5. ' max' → logprob: -9.625920295715332
    6. ' __' → logprob: -9.750920295715332
    7. '_' → logprob: -10.125920295715332
    8. ' test' → logprob: -10.625920295715332
    9. ' solution' → logprob: -10.875920295715332
    10. '_main' → logprob: -11.375920295715332

Token 136: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0011387886479496956
    2. '()' → logprob: -6.876138687133789
    3. '():
' → logprob: -9.626138687133789
    4. '(' → logprob: -10.626138687133789
    5. ' ():' → logprob: -12.126138687133789
    6. '();' → logprob: -12.501138687133789
    7. '(x' → logprob: -12.876138687133789
    8. ' ()' → logprob: -14.126138687133789
    9. ':' → logprob: -14.376138687133789
    10. '().' → logprob: -14.501138687133789

Token 137: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.32602089643478394
    2. '   ' → logprob: -1.4510209560394287
    3. ' return' → logprob: -3.2010209560394287
    4. 'int' → logprob: -6.07602071762085
    5. '(int' → logprob: -8.326021194458008
    6. '	return' → logprob: -8.451021194458008
    7. '()' → logprob: -8.451021194458008
    8. '{return' → logprob: -10.326021194458008
    9. ' ' → logprob: -10.451021194458008
    10. '(return' → logprob: -10.576021194458008

Token 138: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31329333782196045
    2. 'int' → logprob: -1.3132933378219604
    3. ' return' → logprob: -10.43829345703125
    4. '   ' → logprob: -13.31329345703125
    5. ' int' → logprob: -14.56329345703125
    6. '(int' → logprob: -16.06329345703125
    7. '  ' → logprob: -17.68829345703125
    8. '[int' → logprob: -17.81329345703125
    9. '=int' → logprob: -18.18829345703125
    10. '	return' → logprob: -18.43829345703125

Token 139: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.52919222577475e-05
    2. ' int' → logprob: -9.500075340270996
    3. '(int' → logprob: -14.875075340270996
    4. '[int' → logprob: -19.87507438659668
    5. '=int' → logprob: -20.00007438659668
    6. '	int' → logprob: -20.00007438659668
    7. '<int' → logprob: -20.62507438659668
    8. '  ' → logprob: -20.75007438659668
    9. '   ' → logprob: -21.12507438659668
    10. 'ints' → logprob: -21.25007438659668

Token 140: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.051066520740278e-05
    2. '(' → logprob: -9.750060081481934
    3. 'input' → logprob: -13.250060081481934
    4. '(
' → logprob: -15.500060081481934
    5. '()' → logprob: -17.12506103515625
    6. '=input' → logprob: -17.87506103515625
    7. ',input' → logprob: -18.12506103515625
    8. '(inp' → logprob: -18.12506103515625
    9. '(int' → logprob: -18.62506103515625
    10. ' (' → logprob: -18.62506103515625

Token 141: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00018506382184568793
    2. '()' → logprob: -9.000185012817383
    3. '()))' → logprob: -9.875185012817383
    4. '().' → logprob: -12.625185012817383
    5. '())
' → logprob: -12.875185012817383
    6. ' ())' → logprob: -13.125185012817383
    7. ')' → logprob: -13.500185012817383
    8. '();)' → logprob: -14.625185012817383
    9. '(' → logprob: -16.375185012817383
    10. '()
' → logprob: -16.500185012817383

Token 142: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06335384398698807
    2. '<|end|>' → logprob: -2.9383537769317627
    3. '#' → logprob: -5.813354015350342
    4. '<|end|>' → logprob: -6.313354015350342
    5. '[]' → logprob: -6.688354015350342
    6. '()' → logprob: -6.688354015350342
    7. '```' → logprob: -8.563353538513184
    8. ' def' → logprob: -8.688353538513184
    9. '
' → logprob: -8.938353538513184
    10. '(s' → logprob: -9.313353538513184

Token 143: ' MAP' (ID: 53455)
  Prédit: 'STR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'STR' → logprob: -0.12250752747058868
    2. 'LIST' → logprob: -2.3725075721740723
    3. 'MAP' → logprob: -4.372507572174072
    4. ' STR' → logprob: -5.747507572174072
    5. 'print' → logprob: -6.497507572174072
    6. 'list' → logprob: -6.872507572174072
    7. 'ST' → logprob: -7.122507572174072
    8. ' LIST' → logprob: -7.497507572174072
    9. 'INT' → logprob: -7.622507572174072
    10. 'map' → logprob: -8.247507095336914

Token 144: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.024166464805603027
    2. '()' → logprob: -3.8991665840148926
    3. '():
' → logprob: -5.774166584014893
    4. '():

' → logprob: -8.774166107177734
    5. '(lambda' → logprob: -8.774166107177734
    6. '(){' → logprob: -10.149166107177734
    7. '()>' → logprob: -10.149166107177734
    8. '()=>' → logprob: -10.774166107177734
    9. '()(' → logprob: -11.274166107177734
    10. '();' → logprob: -11.524166107177734

Token 145: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.010318933054804802
    2. 'map' → logprob: -5.260318756103516
    3. ' return' → logprob: -6.510318756103516
    4. '   ' → logprob: -6.510318756103516
    5. '()' → logprob: -6.885318756103516
    6. 'list' → logprob: -7.010318756103516
    7. '()
' → logprob: -9.760318756103516
    8. '():
' → logprob: -10.135318756103516
    9. 'def' → logprob: -10.260318756103516
    10. ' map' → logprob: -11.885318756103516

Token 146: ' return' (ID: 622)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1857723891735077
    2. 'map' → logprob: -1.93577241897583
    3. 'list' → logprob: -3.68577241897583
    4. 'return' (adapté à ' return') → logprob: -8.935771942138672
    5. 'int' → logprob: -11.685771942138672
    6. '(lambda' → logprob: -12.810771942138672
    7. '   ' → logprob: -13.435771942138672
    8. ' lambda' → logprob: -13.560771942138672
    9. 'lam' → logprob: -14.685771942138672
    10. '  ' → logprob: -15.310771942138672

Token 147: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.02324722334742546
    2. 'list' → logprob: -3.773247241973877
    3. 'lambda' → logprob: -13.273246765136719
    4. 'int' → logprob: -18.64824676513672
    5. ' map' → logprob: -18.77324676513672
    6. 'tuple' → logprob: -19.89824676513672
    7. '(map' → logprob: -20.02324676513672
    8. '.map' → logprob: -20.77324676513672
    9. '	map' → logprob: -21.02324676513672
    10. '[' → logprob: -21.89824676513672

Token 148: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023253746330738068
    2. 'int' → logprob: -3.7732536792755127
    3. '(' → logprob: -12.773253440856934
    4. '<int' → logprob: -12.773253440856934
    5. '=int' → logprob: -13.898253440856934
    6. '[int' → logprob: -14.648253440856934
    7. ':int' → logprob: -14.773253440856934
    8. ']int' → logprob: -15.273253440856934
    9. ',int' → logprob: -15.398253440856934
    10. ' int' → logprob: -15.773253440856934

Token 149: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6088123917579651
    2. ',input' → logprob: -1.3588123321533203
    3. ',' → logprob: -1.9838123321533203
    4. 'input' → logprob: -3.3588123321533203
    5. ' (' → logprob: -4.23381233215332
    6. '(' → logprob: -4.98381233215332
    7. '(),' → logprob: -6.10881233215332
    8. ' input' → logprob: -6.23381233215332
    9. ')' → logprob: -7.60881233215332
    10. '   ' → logprob: -8.48381233215332

Token 150: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.7729658540920354e-05
    2. ' input' → logprob: -10.500027656555176
    3. 'sys' → logprob: -16.375028610229492
    4. '(input' → logprob: -19.500028610229492
    5. ' ' → logprob: -20.750028610229492
    6. '	input' → logprob: -20.875028610229492
    7. '.input' → logprob: -21.750028610229492
    8. '   ' → logprob: -21.750028610229492
    9. '<input' → logprob: -21.750028610229492
    10. '  ' → logprob: -22.250028610229492

Token 151: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.4868770196917467e-05
    2. '()' → logprob: -10.625024795532227
    3. ' ().' → logprob: -14.625024795532227
    4. '(' → logprob: -17.625024795532227
    5. ')' → logprob: -18.500024795532227
    6. '()
' → logprob: -19.375024795532227
    7. '.' → logprob: -20.375024795532227
    8. ' ()' → logprob: -20.750024795532227
    9. '())' → logprob: -20.750024795532227
    10. 'split' → logprob: -21.000024795532227

Token 152: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.829823102336377e-05
    2. 'strip' → logprob: -9.25009822845459
    3. ' split' → logprob: -13.25009822845459
    4. '(split' → logprob: -15.50009822845459
    5. 'rstrip' → logprob: -16.125099182128906
    6. 'spl' → logprob: -17.250099182128906
    7. '.split' → logprob: -18.250099182128906
    8. '_split' → logprob: -18.250099182128906
    9. 'plit' → logprob: -20.000099182128906
    10. ')' → logprob: -20.500099182128906

Token 153: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012241550721228123
    2. '()' → logprob: -7.001224040985107
    3. '()))' → logprob: -8.376224517822266
    4. ')' → logprob: -9.501224517822266
    5. '())
' → logprob: -13.001224517822266
    6. '(' → logprob: -13.126224517822266
    7. ' ())' → logprob: -13.376224517822266
    8. '))' → logprob: -13.751224517822266
    9. '();)' → logprob: -15.876224517822266
    10. '()]' → logprob: -15.876224517822266

Token 154: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002549024939071387
    2. '#' → logprob: -8.37525463104248
    3. '<|end|>' → logprob: -12.37525463104248
    4. 'from' → logprob: -12.50025463104248
    5. '```' → logprob: -12.62525463104248
    6. '@' → logprob: -13.00025463104248
    7. '[]' → logprob: -13.00025463104248
    8. 'class' → logprob: -13.12525463104248
    9. '\' → logprob: -13.37525463104248
    10. ' def' → logprob: -14.12525463104248

Token 155: ' LIST' (ID: 49854)
  Prédit: 'LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.021002046763896942
    2. 'list' → logprob: -5.271001815795898
    3. 'LS' → logprob: -5.646001815795898
    4. 'LI' → logprob: -5.646001815795898
    5. 'S' → logprob: -6.021001815795898
    6. 'STR' → logprob: -6.521001815795898
    7. 'L' → logprob: -6.646001815795898
    8. 'print' → logprob: -6.771001815795898
    9. 'INT' → logprob: -7.896001815795898
    10. 'LIN' → logprob: -7.896001815795898

Token 156: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006340435356833041
    2. '()' → logprob: -7.62563419342041
    3. '():
' → logprob: -8.87563419342041
    4. '():

' → logprob: -13.25063419342041
    5. '()">' → logprob: -13.62563419342041
    6. '()>' → logprob: -14.25063419342041
    7. '(' → logprob: -14.37563419342041
    8. '()[' → logprob: -15.00063419342041
    9. ' ():' → logprob: -15.12563419342041
    10. '():
' → logprob: -15.12563419342041

Token 157: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009616662748157978
    2. 'list' → logprob: -5.009616851806641
    3. ' return' → logprob: -6.634616851806641
    4. '   ' → logprob: -7.009616851806641
    5. 'map' → logprob: -8.63461685180664
    6. '():
' → logprob: -8.88461685180664
    7. '=list' → logprob: -9.88461685180664
    8. ':return' → logprob: -9.88461685180664
    9. 'def' → logprob: -10.00961685180664
    10. '()' → logprob: -10.38461685180664

Token 158: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005855670664459467
    2. 'map' → logprob: -5.255855560302734
    3. 'return' (adapté à ' return') → logprob: -7.505855560302734
    4. ' list' → logprob: -10.255855560302734
    5. 'lambda' → logprob: -10.255855560302734
    6. '   ' → logprob: -14.130855560302734
    7. 'int' → logprob: -15.005855560302734
    8. ' map' → logprob: -15.380855560302734
    9. ' return' → logprob: -15.630855560302734
    10. '  ' → logprob: -17.005855560302734

Token 159: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.8325677703833207e-05
    2. '[list' → logprob: -10.500028610229492
    3. ' list' → logprob: -14.250028610229492
    4. '[int' → logprob: -16.000028610229492
    5. '(list' → logprob: -19.125028610229492
    6. '[' → logprob: -19.500028610229492
    7. ':list' → logprob: -20.750028610229492
    8. '[]' → logprob: -21.125028610229492
    9. '=list' → logprob: -21.250028610229492
    10. '[List' → logprob: -21.375028610229492

Token 160: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.759651243686676
    2. '(M' → logprob: -0.884651243686676
    3. '(input' → logprob: -2.3846511840820312
    4. '()' → logprob: -4.509651184082031
    5. '(' → logprob: -4.634651184082031
    6. '(int' → logprob: -5.384651184082031
    7. '(L' → logprob: -6.634651184082031
    8. 'input' → logprob: -7.884651184082031
    9. '((' → logprob: -10.009651184082031
    10. '(INPUT' → logprob: -10.009651184082031

Token 161: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003528622619342059
    2. 'int' → logprob: -8.62535285949707
    3. '(' → logprob: -8.75035285949707
    4. '<int' → logprob: -11.62535285949707
    5. '[int' → logprob: -13.25035285949707
    6. '=int' → logprob: -13.75035285949707
    7. ')' → logprob: -13.75035285949707
    8. ',int' → logprob: -14.00035285949707
    9. ']int' → logprob: -14.37535285949707
    10. '<|end|>' → logprob: -16.00035285949707

Token 162: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13214750587940216
    2. ',input' → logprob: -2.7571475505828857
    3. ',' → logprob: -2.8821475505828857
    4. '(' → logprob: -5.632147312164307
    5. '(),' → logprob: -7.882147312164307
    6. 'input' → logprob: -8.632147789001465
    7. '))' → logprob: -9.007147789001465
    8. ')' → logprob: -11.257147789001465
    9. '()))' → logprob: -12.007147789001465
    10. '()' → logprob: -12.007147789001465

Token 163: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10021249949932098
    2. ' input' → logprob: -2.350212574005127
    3. '(input' → logprob: -12.100212097167969
    4. ')' → logprob: -16.22521209716797
    5. ',input' → logprob: -16.22521209716797
    6. '	input' → logprob: -16.85021209716797
    7. 'list' → logprob: -17.10021209716797
    8. '=input' → logprob: -17.72521209716797
    9. 'split' → logprob: -18.10021209716797
    10. '<input' → logprob: -18.35021209716797

Token 164: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0280383548888494e-06
    2. '()' → logprob: -13.875000953674316
    3. '()))' → logprob: -16.625001907348633
    4. ' ().' → logprob: -18.125001907348633
    5. '.' → logprob: -19.250001907348633
    6. '().__' → logprob: -20.250001907348633
    7. '()
' → logprob: -20.375001907348633
    8. '(' → logprob: -20.500001907348633
    9. '()[' → logprob: -20.625001907348633
    10. '()));' → logprob: -20.625001907348633

Token 165: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.13388703338569e-06
    2. ')' → logprob: -12.000009536743164
    3. 'strip' → logprob: -13.125009536743164
    4. ' split' → logprob: -14.500009536743164
    5. '))' → logprob: -15.250009536743164
    6. 'spl' → logprob: -16.250009536743164
    7. '(split' → logprob: -16.625009536743164
    8. 'plit' → logprob: -17.125009536743164
    9. 'rstrip' → logprob: -17.625009536743164
    10. '.split' → logprob: -17.875009536743164

Token 166: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.13089993596076965
    2. '))' → logprob: -2.1308999061584473
    3. '()' → logprob: -6.130899906158447
    4. '())' → logprob: -6.380899906158447
    5. ')' → logprob: -9.380900382995605
    6. '()))
' → logprob: -12.005900382995605
    7. '(' → logprob: -13.130900382995605
    8. '()));' → logprob: -13.630900382995605
    9. '())))' → logprob: -14.255900382995605
    10. ')))' → logprob: -14.505900382995605

Token 167: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11669159680604935
    2. '#' → logprob: -2.2416915893554688
    3. 'class' → logprob: -6.116691589355469
    4. 'from' → logprob: -7.241691589355469
    5. '<|end|>' → logprob: -7.741691589355469
    6. 'import' → logprob: -8.491691589355469
    7. 'for' → logprob: -9.366691589355469
    8. '#!/' → logprob: -9.741691589355469
    9. ' ' → logprob: -10.866691589355469
    10. 'n' → logprob: -11.116691589355469

Token 168: ' Je' (ID: 4678)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.036723390221595764
    2. '#' → logprob: -4.286723613739014
    3. 'class' → logprob: -4.911723613739014
    4. 'from' → logprob: -4.911723613739014
    5. 'import' → logprob: -5.411723613739014
    6. 'N' → logprob: -6.786723613739014
    7. 'n' → logprob: -7.161723613739014
    8. 'for' → logprob: -8.411723136901855
    9. 's' → logprob: -8.786723136901855
    10. 'T' → logprob: -8.911723136901855

Token 169: ' préfère' (ID: 141784)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7652497291564941
    2. '#' → logprob: -1.7652497291564941
    3. ' continue' → logprob: -2.265249729156494
    4. ' def' → logprob: -2.765249729156494
    5. ' vais' → logprob: -3.015249729156494
    6. ' #' → logprob: -3.765249729156494
    7. ' suis' → logprob: -4.140249729156494
    8. 's' → logprob: -4.265249729156494
    9. 'continue' → logprob: -4.640249729156494
    10. ' souhaite' → logprob: -4.765249729156494

Token 170: ' Yes' (ID: 11377)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8318541646003723
    2. 'def' → logprob: -0.9568541646003723
    3. 'int' → logprob: -3.0818541049957275
    4. 'la' → logprob: -3.5818541049957275
    5. 'list' → logprob: -4.081854343414307
    6. 'for' → logprob: -4.206854343414307
    7. 'les' → logprob: -4.331854343414307
    8. 'contin' → logprob: -4.831854343414307
    9. 'util' → logprob: -4.956854343414307
    10. 'le' → logprob: -5.081854343414307

Token 171: '/' (ID: 14)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014550806023180485
    2. '()' → logprob: -4.389550685882568
    3. 'print' → logprob: -7.639550685882568
    4. ',' → logprob: -8.264551162719727
    5. '()
' → logprob: -8.389551162719727
    6. '
' → logprob: -8.389551162719727
    7. '#' → logprob: -8.639551162719727
    8. ' =' → logprob: -8.639551162719727
    9. ' or' → logprob: -9.389551162719727
    10. ' def' → logprob: -10.014551162719727

Token 172: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0005280109471641481
    2. ' No' → logprob: -7.875527858734131
    3. 'Non' → logprob: -9.250528335571289
    4. 'NO' → logprob: -10.125528335571289
    5. 'Yes' → logprob: -11.750528335571289
    6. 'print' → logprob: -14.000528335571289
    7. 'Oui' → logprob: -14.000528335571289
    8. ' Non' → logprob: -14.500528335571289
    9. 'no' → logprob: -15.125528335571289
    10. '\n' → logprob: -15.250528335571289

Token 173: ' maj' (ID: 15575)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00041732576210051775
    2. '
' → logprob: -7.875417232513428
    3. ' def' → logprob: -11.750417709350586
    4. '```' → logprob: -12.000417709350586
    5. 'ndef' → logprob: -12.125417709350586
    6. '#' → logprob: -12.125417709350586
    7. '\' → logprob: -12.500417709350586
    8. ',' → logprob: -13.500417709350586
    9. 's' → logprob: -13.750417709350586
    10. '_def' → logprob: -14.500417709350586

Token 174: 'usc' (ID: 30081)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.76628842484206e-05
    2. '#' → logprob: -10.000067710876465
    3. 'DEF' → logprob: -11.625067710876465
    4. '```' → logprob: -12.375067710876465
    5. ' def' → logprob: -12.875067710876465
    6. '
' → logprob: -14.500067710876465
    7. '``' → logprob: -14.625067710876465
    8. 'YES' → logprob: -14.750067710876465
    9. 'es' → logprob: -14.875067710876465
    10. '/' → logprob: -14.875067710876465

Token 175: 'ule' (ID: 1601)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10060829669237137
    2. 'def' → logprob: -3.1006083488464355
    3. 'ea' → logprob: -4.3506083488464355
    4. 'é' → logprob: -4.6006083488464355
    5. 'as' → logprob: -4.9756083488464355
    6. 'e' → logprob: -5.3506083488464355
    7. 'ale' → logprob: -5.8506083488464355
    8. 'es' → logprob: -6.3506083488464355
    9. 'u' → logprob: -6.4756083488464355
    10. '#' → logprob: -6.9756083488464355

Token 176: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00048644188791513443
    2. '
' → logprob: -8.000486373901367
    3. 'DEF' → logprob: -9.500486373901367
    4. 'YES' → logprob: -9.750486373901367
    5. 'Yes' → logprob: -11.500486373901367
    6. 'D' → logprob: -13.125486373901367
    7. '  
' → logprob: -14.000486373901367
    8. ' def' → logprob: -14.250486373901367
    9. 'Y' → logprob: -14.500486373901367
    10. '```' → logprob: -14.625486373901367

Token 177: ' min' (ID: 1349)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0005766240647062659
    2. ' No' → logprob: -8.000576972961426
    3. 'Non' → logprob: -8.625576972961426
    4. 'NO' → logprob: -9.750576972961426
    5. 'no' → logprob: -13.875576972961426
    6. 'Pas' → logprob: -13.875576972961426
    7. 'non' → logprob: -14.875576972961426
    8. 'False' → logprob: -15.375576972961426
    9. 'N' → logprob: -15.625576972961426
    10. ' Non' → logprob: -15.875576972961426

Token 178: 'usc' (ID: 30081)
  Prédit: 'usc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usc' → logprob: -0.35482993721961975
    2. 'us' → logprob: -1.2298299074172974
    3. 'def' → logprob: -5.229829788208008
    4. 'e' → logprob: -8.354829788208008
    5. 'case' → logprob: -8.854829788208008
    6. 'sc' → logprob: -8.979829788208008
    7. 'u' → logprob: -9.229829788208008
    8. '```' → logprob: -9.229829788208008
    9. 'es' → logprob: -9.479829788208008
    10. 'úsc' → logprob: -9.979829788208008

Token 179: 'ule' (ID: 1601)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6076862812042236
    2. 'le' → logprob: -1.9826862812042236
    3. 'ule' → logprob: -2.3576862812042236
    4. 'ale' → logprob: -2.4826862812042236
    5. 'ase' → logprob: -2.9826862812042236
    6. '#' → logprob: -3.3576862812042236
    7. 'def' → logprob: -3.6076862812042236
    8. 'as' → logprob: -4.7326860427856445
    9. 'ode' → logprob: -5.8576860427856445
    10. 'case' → logprob: -5.9826860427856445

Token 180: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9981420336989686e-05
    2. '#' → logprob: -11.625020027160645
    3. 'YES' → logprob: -12.000020027160645
    4. ' def' → logprob: -13.000020027160645
    5. 'DEF' → logprob: -14.750020027160645
    6. 'Yes' → logprob: -14.875020027160645
    7. 'Y' → logprob: -15.000020027160645
    8. '\' → logprob: -15.125020027160645
    9. 's' → logprob: -15.250020027160645
    10. '
' → logprob: -15.250020027160645

Token 181: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.248469718324486e-05
    2. 'YES' → logprob: -11.000022888183594
    3. 'Y' → logprob: -12.500022888183594
    4. 'Yes' → logprob: -13.500022888183594
    5. '#' → logprob: -15.250022888183594
    6. 'DEF' → logprob: -15.500022888183594
    7. ' def' → logprob: -16.500022888183594
    8. 'YN' → logprob: -17.375022888183594
    9. 'UP' → logprob: -18.125022888183594
    10. 'yes' → logprob: -18.125022888183594

Token 182: ' Yes' (ID: 11377)
  Prédit: 'YN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YN' → logprob: -0.5329826474189758
    2. ' yes' → logprob: -2.032982587814331
    3. 'Yes' → logprob: -2.532982587814331
    4. ' print' → logprob: -3.157982587814331
    5. ' yn' → logprob: -3.282982587814331
    6. 'YES' → logprob: -3.407982587814331
    7. 'yes' → logprob: -3.657982587814331
    8. 'print' → logprob: -3.657982587814331
    9. ' YES' → logprob: -4.53298282623291
    10. ' Yes' → logprob: -4.53298282623291

Token 183: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004647641908377409
    2. '():
' → logprob: -5.504647731781006
    3. '()' → logprob: -7.504647731781006
    4. ' ():' → logprob: -11.754647254943848
    5. 'No' → logprob: -12.004647254943848
    6. '():
' → logprob: -13.379647254943848
    7. '(' → logprob: -13.879647254943848
    8. 'Or' → logprob: -14.629647254943848
    9. 'NO' → logprob: -15.129647254943848
    10. '():

' → logprob: -15.254647254943848

Token 184: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.8627960681915283
    2. 'print' → logprob: -1.1127960681915283
    3. '():' → logprob: -1.9877960681915283
    4. '   ' → logprob: -2.4877960681915283
    5. '()' → logprob: -3.6127960681915283
    6. ' print' → logprob: -6.612795829772949
    7. '()
' → logprob: -7.487795829772949
    8. '	print' → logprob: -9.73779582977295
    9. '#print' → logprob: -9.86279582977295
    10. 'return' → logprob: -9.98779582977295

Token 185: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0033052158541977406
    2. '   ' → logprob: -5.753305435180664
    3. ' print' → logprob: -9.253305435180664
    4. 'return' → logprob: -10.378305435180664
    5. '	print' → logprob: -15.253305435180664
    6. ' ' → logprob: -16.253305435180664
    7. ' return' → logprob: -16.253305435180664
    8. 'import' → logprob: -16.878305435180664
    9. '  ' → logprob: -17.128305435180664
    10. '#print' → logprob: -17.878305435180664

Token 186: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00021188464597798884
    2. '('' → logprob: -8.500211715698242
    3. '(' → logprob: -11.750211715698242
    4. ' ("' → logprob: -15.250211715698242
    5. '"' → logprob: -15.375211715698242
    6. '()' → logprob: -18.250211715698242
    7. '(("' → logprob: -18.750211715698242
    8. '(
' → logprob: -19.125211715698242
    9. '(\"' → logprob: -20.375211715698242
    10. ''' → logprob: -20.625211715698242

Token 187: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.002477200934663415
    2. 'YES' → logprob: -6.002477169036865
    3. ' Yes' → logprob: -13.502477645874023
    4. 'Oui' → logprob: -16.002477645874023
    5. '"' → logprob: -17.502477645874023
    6. 'Y' → logprob: -18.002477645874023
    7. ' YES' → logprob: -18.252477645874023
    8. 'True' → logprob: -19.127477645874023
    9. 'Ye' → logprob: -19.252477645874023
    10. 'OK' → logprob: -19.252477645874023

Token 188: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00015502817404922098
    2. '")
' → logprob: -9.000155448913574
    3. '")

' → logprob: -10.375155448913574
    4. '")
' → logprob: -16.125154495239258
    5. '()' → logprob: -16.500154495239258
    6. ')' → logprob: -16.750154495239258
    7. '")

' → logprob: -17.250154495239258
    8. '")


' → logprob: -17.375154495239258
    9. '");' → logprob: -17.625154495239258
    10. '"' → logprob: -17.750154495239258

Token 189: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002128382766386494
    2. '()' → logprob: -9.500212669372559
    3. '   ' → logprob: -9.750212669372559
    4. '
' → logprob: -10.125212669372559
    5. ')' → logprob: -11.375212669372559
    6. ' def' → logprob: -11.875212669372559
    7. '()
' → logprob: -11.875212669372559
    8. '(
' → logprob: -12.250212669372559
    9. '    
' → logprob: -13.000212669372559
    10. '  
' → logprob: -13.375212669372559

Token 190: ' No' (ID: 3004)
  Prédit: ' No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' No' → logprob: -0.38706907629966736
    2. 'No' → logprob: -1.1370691061019897
    3. ' ' → logprob: -8.637068748474121
    4. ' no' → logprob: -11.762068748474121
    5. ' NO' → logprob: -12.262068748474121
    6. 'NO' → logprob: -12.762068748474121
    7. 'def' → logprob: -13.512068748474121
    8. '  ' → logprob: -14.012068748474121
    9. '   ' → logprob: -14.262068748474121
    10. 'no' → logprob: -14.387068748474121

Token 191: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.018235279247164726
    2. '():
' → logprob: -4.018235206604004
    3. '()' → logprob: -9.393235206604004
    4. ' ():' → logprob: -13.893235206604004
    5. '():
' → logprob: -14.018235206604004
    6. ':' → logprob: -15.518235206604004
    7. '():

' → logprob: -15.768235206604004
    8. '(' → logprob: -16.64323616027832
    9. '()
' → logprob: -18.14323616027832
    10. '();' → logprob: -18.64323616027832

Token 192: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.2502425014972687
    2. '():' → logprob: -2.2502424716949463
    3. '()' → logprob: -2.8752424716949463
    4. '   ' → logprob: -3.0002424716949463
    5. '()
' → logprob: -4.750242710113525
    6. 'print' → logprob: -7.125242710113525
    7. ':
' → logprob: -9.000242233276367
    8. ':' → logprob: -9.250242233276367
    9. '():
' → logprob: -10.375242233276367
    10. 'def' → logprob: -10.625242233276367

Token 193: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.5048530030981055e-06
    2. ' print' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.750001907348633
    4. '```' → logprob: -19.250001907348633
    5. '	print' → logprob: -20.375001907348633
    6. ' ' → logprob: -21.125001907348633
    7. '(print' → logprob: -21.750001907348633
    8. '  ' → logprob: -22.000001907348633
    9. '
' → logprob: -22.750001907348633
    10. 'pass' → logprob: -23.000001907348633

Token 194: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002546641044318676
    2. '()' → logprob: -8.37525463104248
    3. '(' → logprob: -10.87525463104248
    4. '("")' → logprob: -12.37525463104248
    5. '('' → logprob: -14.50025463104248
    6. ' ("' → logprob: -16.375255584716797
    7. '("("' → logprob: -16.500255584716797
    8. '()
' → logprob: -16.625255584716797
    9. '"' → logprob: -17.000255584716797
    10. '("\' → logprob: -17.125255584716797

Token 195: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.029750952497124672
    2. '"No' → logprob: -3.5297510623931885
    3. ' No' → logprob: -15.52975082397461
    4. '"' → logprob: -16.02975082397461
    5. '“No' → logprob: -16.15475082397461
    6. 'NO' → logprob: -18.40475082397461
    7. '>No' → logprob: -19.27975082397461
    8. 'no' → logprob: -19.27975082397461
    9. '(No' → logprob: -19.77975082397461
    10. '@No' → logprob: -19.90475082397461

Token 196: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.004094308707863092
    2. '()' → logprob: -5.504094123840332
    3. ')")' → logprob: -11.504094123840332
    4. '")
' → logprob: -12.254094123840332
    5. ')' → logprob: -13.879094123840332
    6. '("' → logprob: -16.62909507751465
    7. '())' → logprob: -17.62909507751465
    8. '"' → logprob: -17.62909507751465
    9. '")

' → logprob: -17.87909507751465
    10. '}")' → logprob: -18.37909507751465

Token 197: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20161643624305725
    2. '#' → logprob: -1.7016164064407349
    3. 'a' → logprob: -10.326616287231445
    4. 'Yes' → logprob: -10.701616287231445
    5. '<|end|>' → logprob: -10.701616287231445
    6. 'if' → logprob: -10.951616287231445
    7. '
' → logprob: -11.076616287231445
    8. 'class' → logprob: -11.701616287231445
    9. 'A' → logprob: -11.951616287231445
    10. 'print' → logprob: -12.076616287231445

Token 198: ' YES' (ID: 32968)
  Prédit: 'Maybe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Maybe' → logprob: -0.733384907245636
    2. 'Yes' → logprob: -1.6083848476409912
    3. 'YES' → logprob: -2.108384847640991
    4. 'y' → logprob: -2.358384847640991
    5. ' Maybe' → logprob: -3.483384847640991
    6. 'yes' → logprob: -3.858384847640991
    7. 'Y' → logprob: -4.60838508605957
    8. 'No' → logprob: -5.48338508605957
    9. 'def' → logprob: -5.60838508605957
    10. ' Nope' → logprob: -5.60838508605957

Token 199: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03808555379509926
    2. '():
' → logprob: -3.288085460662842
    3. '()' → logprob: -10.1630859375
    4. '():
' → logprob: -12.1630859375
    5. ' ():' → logprob: -15.0380859375
    6. '():

' → logprob: -16.9130859375
    7. '(' → logprob: -19.1630859375
    8. '()):
' → logprob: -19.2880859375
    9. '()
' → logprob: -20.0380859375
    10. '):' → logprob: -20.1630859375

Token 200: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003326595760881901
    2. '   ' → logprob: -5.753326416015625
    3. ' print' → logprob: -8.878326416015625
    4. '	print' → logprob: -12.253326416015625
    5. '(print' → logprob: -13.128326416015625
    6. '```' → logprob: -13.628326416015625
    7. 'def' → logprob: -14.503326416015625
    8. '()' → logprob: -14.628326416015625
    9. ' ' → logprob: -15.878326416015625
    10. '():
' → logprob: -16.253326416015625

Token 201: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -17.0
    3. '   ' → logprob: -19.25
    4. 'def' → logprob: -20.625
    5. '	print' → logprob: -22.0
    6. '```' → logprob: -22.25
    7. '(print' → logprob: -24.375
    8. 'pr' → logprob: -25.75
    9. 'printf' → logprob: -26.0
    10. '.print' → logprob: -26.625

Token 202: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. '"' → logprob: -16.625
    4. '('' → logprob: -19.5
    5. '()' → logprob: -21.875
    6. '(
' → logprob: -23.0
    7. '("""' → logprob: -23.75
    8. ' ("' → logprob: -24.125
    9. '("")' → logprob: -24.125
    10. '(("' → logprob: -24.375

Token 203: 'YES' (ID: 31958)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.5048530030981055e-06
    2. 'YES' → logprob: -14.125001907348633
    3. '("' → logprob: -14.500001907348633
    4. ''' → logprob: -15.625001907348633
    5. '"No' → logprob: -16.375001907348633
    6. 'Yes' → logprob: -18.875001907348633
    7. ' "' → logprob: -19.750001907348633
    8. '\"' → logprob: -19.750001907348633
    9. '"I' → logprob: -19.875001907348633
    10. '```' → logprob: -19.875001907348633

Token 204: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0015146232908591628
    2. '()' → logprob: -6.501514434814453
    3. '")
' → logprob: -11.501514434814453
    4. ')")' → logprob: -13.251514434814453
    5. ')' → logprob: -15.251514434814453
    6. '())' → logprob: -16.376514434814453
    7. '("' → logprob: -16.876514434814453
    8. '")
' → logprob: -17.001514434814453
    9. '"' → logprob: -18.501514434814453
    10. '”)' → logprob: -19.251514434814453

Token 205: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1756367712223437e-05
    2. '<|end|>' → logprob: -12.125011444091797
    3. ' def' → logprob: -12.875011444091797
    4. '#' → logprob: -13.125011444091797
    5. '```' → logprob: -13.875011444091797
    6. '()' → logprob: -14.875011444091797
    7. '(def' → logprob: -17.000011444091797
    8. ')' → logprob: -17.125011444091797
    9. '
' → logprob: -17.250011444091797
    10. '(' → logprob: -17.250011444091797

Token 206: ' NO' (ID: 9319)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.0007117166533134878
    2. 'No' → logprob: -7.250711917877197
    3. 'print' → logprob: -14.000711441040039
    4. ' NO' → logprob: -14.625711441040039
    5. '"No' → logprob: -15.750711441040039
    6. 'no' → logprob: -15.875711441040039
    7. '_NO' → logprob: -16.12571144104004
    8. '
' → logprob: -17.37571144104004
    9. '"' → logprob: -18.12571144104004
    10. '```' → logprob: -18.25071144104004

Token 207: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005941832438111305
    2. '()' → logprob: -5.255941867828369
    3. '():
' → logprob: -7.255941867828369
    4. '()
' → logprob: -14.005941390991211
    5. '():
' → logprob: -14.880941390991211
    6. '():

' → logprob: -15.755941390991211
    7. ' ():' → logprob: -15.755941390991211
    8. ':' → logprob: -16.75594139099121
    9. '(' → logprob: -17.13094139099121
    10. '()>' → logprob: -17.38094139099121

Token 208: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.186122770188376e-05
    2. '   ' → logprob: -9.500091552734375
    3. ' print' → logprob: -11.500091552734375
    4. '()' → logprob: -12.000091552734375
    5. 'def' → logprob: -15.250091552734375
    6. '	print' → logprob: -15.875091552734375
    7. '("' → logprob: -16.000091552734375
    8. '()
' → logprob: -16.625091552734375
    9. '(print' → logprob: -17.500091552734375
    10. '```' → logprob: -18.000091552734375

Token 209: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.75
    3. '(print' → logprob: -20.25
    4. '   ' → logprob: -20.75
    5. '	print' → logprob: -21.625
    6. 'pass' → logprob: -21.75
    7. '```' → logprob: -23.25
    8. '#print' → logprob: -24.625
    9. 'pr' → logprob: -24.625
    10. '.print' → logprob: -24.75

Token 210: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0014180884463712573
    2. '()' → logprob: -6.626418113708496
    3. '(' → logprob: -9.501418113708496
    4. '("")' → logprob: -11.876418113708496
    5. '"' → logprob: -12.751418113708496
    6. '()
' → logprob: -13.001418113708496
    7. '(
' → logprob: -13.126418113708496
    8. '('' → logprob: -13.376418113708496
    9. '("("' → logprob: -14.501418113708496
    10. '()"' → logprob: -15.251418113708496

Token 211: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.00048048171447589993
    2. 'No' → logprob: -8.000480651855469
    3. '"No' → logprob: -9.500480651855469
    4. '"' → logprob: -9.750480651855469
    5. '")' → logprob: -11.500480651855469
    6. 'N' → logprob: -13.750480651855469
    7. '"N' → logprob: -14.250480651855469
    8. ' NO' → logprob: -16.87548065185547
    9. '")
' → logprob: -17.50048065185547
    10. 'NOS' → logprob: -17.75048065185547

Token 212: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07746952027082443
    2. '()' → logprob: -3.07746958732605
    3. '")' → logprob: -3.57746958732605
    4. '())' → logprob: -7.952469348907471
    5. ')
' → logprob: -9.327469825744629
    6. '')' → logprob: -10.452469825744629
    7. 'def' → logprob: -10.452469825744629
    8. '()
' → logprob: -11.952469825744629
    9. '`)' → logprob: -12.327469825744629
    10. '```' → logprob: -12.452469825744629

Token 213: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003014310961589217
    2. '#' → logprob: -5.878014087677002
    3. 'class' → logprob: -8.87801456451416
    4. 'n' → logprob: -10.50301456451416
    5. 'import' → logprob: -11.37801456451416
    6. 'a' → logprob: -12.00301456451416
    7. '```' → logprob: -12.37801456451416
    8. 'from' → logprob: -12.62801456451416
    9. '<|end|>' → logprob: -12.62801456451416
    10. ' def' → logprob: -12.75301456451416

Token 214: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002140505239367485
    2. 'N' → logprob: -7.127140522003174
    3. 'T' → logprob: -7.752140522003174
    4. '#' → logprob: -8.002140045166016
    5. 'n' → logprob: -8.127140045166016
    6. 'from' → logprob: -9.377140045166016
    7. 'import' → logprob: -9.877140045166016
    8. 'class' → logprob: -10.127140045166016
    9. 't' → logprob: -10.252140045166016
    10. 'A' → logprob: -10.627140045166016

Token 215: ' les' (ID: 1341)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.3126050233840942
    2. ' la' → logprob: -1.5626050233840942
    3. ' résoudre' → logprob: -2.3126049041748047
    4. ' l' → logprob: -2.5626049041748047
    5. 'l' → logprob: -3.0626049041748047
    6. ' sys' → logprob: -3.3126049041748047
    7. 'i' → logprob: -3.3126049041748047
    8. ' continuer' → logprob: -3.4376049041748047
    9. 'a' → logprob: -3.6876049041748047
    10. '_' → logprob: -3.6876049041748047

Token 216: ' rec' (ID: 1369)
  Prédit: 'tests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tests' → logprob: -0.9360185861587524
    2. ' tests' → logprob: -2.061018466949463
    3. 'gr' → logprob: -2.561018466949463
    4. ' calcul' → logprob: -3.186018466949463
    5. ' graph' → logprob: -3.436018466949463
    6. 'graph' → logprob: -3.561018466949463
    7. 'calcul' → logprob: -3.561018466949463
    8. 'ch' → logprob: -3.811018466949463
    9. ' commentaires' → logprob: -3.811018466949463
    10. '#' → logprob: -3.811018466949463

Token 217: 'urs' (ID: 1628)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.687505304813385
    2. 'uper' → logprob: -2.1875052452087402
    3. 'urs' → logprob: -2.1875052452087402
    4. 'ur' → logprob: -2.9375052452087402
    5. 'ol' → logprob: -3.1875052452087402
    6. 'ursive' → logprob: -3.3125052452087402
    7. 'ursion' → logprob: -3.8125052452087402
    8. '#' → logprob: -4.06250524520874
    9. 'op' → logprob: -4.31250524520874
    10. 'urent' → logprob: -5.06250524520874

Token 218: 'ions' (ID: 756)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.015697048977017403
    2. 'ions' → logprob: -4.890697002410889
    3. 'ive' → logprob: -5.015697002410889
    4. 's' → logprob: -7.390697002410889
    5. 'ivité' → logprob: -8.015697479248047
    6. 'ives' → logprob: -8.765697479248047
    7. '#' → logprob: -8.890697479248047
    8. 'ivement' → logprob: -9.640697479248047
    9. 'iv' → logprob: -10.390697479248047
    10. 'ionn' → logprob: -10.515697479248047

Token 219: ' à' (ID: 1221)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.038044244050979614
    2. 'import' → logprob: -3.2880442142486572
    3. ' sys' → logprob: -13.663043975830078
    4. '#' → logprob: -14.288043975830078
    5. 'def' → logprob: -15.163043975830078
    6. '(sys' → logprob: -15.163043975830078
    7. '=sys' → logprob: -15.413043975830078
    8. '	sys' → logprob: -15.538043975830078
    9. 'from' → logprob: -17.038043975830078
    10. '
' → logprob: -17.038043975830078

Token 220: ' la' (ID: 557)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.9048725366592407
    2. '100' → logprob: -1.6548725366592407
    3. 'python' → logprob: -2.654872417449951
    4. 'Python' → logprob: -3.154872417449951
    5. 'lim' → logprob: -3.279872417449951
    6. 'long' → logprob: -3.404872417449951
    7. 'ha' → logprob: -3.529872417449951
    8. 'limit' → logprob: -3.904872417449951
    9. 'a' → logprob: -4.279872417449951
    10. 'import' → logprob: -4.404872417449951

Token 221: ' jap' (ID: 59677)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2698887884616852
    2. 'import' → logprob: -2.1448888778686523
    3. 'limit' → logprob: -3.2698888778686523
    4. 'lim' → logprob: -3.3948888778686523
    5. 'max' → logprob: -4.144888877868652
    6. 'python' → logprob: -4.519888877868652
    7. 'maximum' → logprob: -5.269888877868652
    8. 'stack' → logprob: -5.519888877868652
    9. 'tail' → logprob: -5.644888877868652
    10. 'pile' → logprob: -6.519888877868652

Token 222: 'onaise' (ID: 172855)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.05367886647582054
    2. 'ursive' → logprob: -3.4286787509918213
    3. 'urs' → logprob: -4.0536789894104
    4. 'ur' → logprob: -6.4286789894104
    5. 'def' → logprob: -8.178678512573242
    6. '```' → logprob: -8.428678512573242
    7. 'python' → logprob: -9.053678512573242
    8. 'sys' → logprob: -10.053678512573242
    9. 'ursor' → logprob: -10.428678512573242
    10. 'import' → logprob: -10.428678512573242

Token 223: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.04859895631670952
    2. 'sys' → logprob: -3.0485990047454834
    3. ' sys' → logprob: -12.423599243164062
    4. '#' → logprob: -12.673599243164062
    5. '#import' → logprob: -13.423599243164062
    6. '=sys' → logprob: -13.923599243164062
    7. ' import' → logprob: -14.173599243164062
    8. 'def' → logprob: -14.548599243164062
    9. '	sys' → logprob: -15.173599243164062
    10. '(sys' → logprob: -15.423599243164062

Token 224: ' on' (ID: 402)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.38701045513153076
    2. 'sys' → logprob: -1.1370104551315308
    3. '#' → logprob: -9.26201057434082
    4. ' sys' → logprob: -10.63701057434082
    5. 'def' → logprob: -11.26201057434082
    6. '#import' → logprob: -12.13701057434082
    7. '=sys' → logprob: -13.88701057434082
    8. '	sys' → logprob: -14.88701057434082
    9. ' import' → logprob: -15.13701057434082
    10. 'from' → logprob: -15.88701057434082

Token 225: ' sait' (ID: 52101)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.005980934947729111
    2. ' import' → logprob: -5.505980968475342
    3. '#' → logprob: -6.630980968475342
    4. 'def' → logprob: -8.380980491638184
    5. 'importe' → logprob: -9.005980491638184
    6. '...' → logprob: -10.005980491638184
    7. ' importe' → logprob: -10.130980491638184
    8. ''import' → logprob: -10.380980491638184
    9. 'sys' → logprob: -11.380980491638184
    10. 'f' → logprob: -11.380980491638184

Token 226: ' jamais' (ID: 23077)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06463686376810074
    2. 'sys' → logprob: -2.8146369457244873
    3. ' sys' → logprob: -6.564636707305908
    4. '```' → logprob: -8.314637184143066
    5. 'def' → logprob: -8.814637184143066
    6. '...' → logprob: -9.064637184143066
    7. '=sys' → logprob: -9.439637184143066
    8. '!' → logprob: -9.439637184143066
    9. ' import' → logprob: -9.564637184143066
    10. 'qu' → logprob: -9.689637184143066

Token 227: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.20144608616828918
    2. 'sys' → logprob: -1.7014460563659668
    3. 'def' → logprob: -10.951446533203125
    4. ' sys' → logprob: -11.951446533203125
    5. '
' → logprob: -12.576446533203125
    6. '#' → logprob: -13.076446533203125
    7. '=sys' → logprob: -13.951446533203125
    8. ' import' → logprob: -14.326446533203125
    9. '(sys' → logprob: -14.576446533203125
    10. '#import' → logprob: -14.826446533203125

Token 228: 'sys' (ID: 17324)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5759484171867371
    2. 'sys' → logprob: -0.8259484171867371
    3. ' sys' → logprob: -12.075948715209961
    4. '#' → logprob: -13.575948715209961
    5. 'def' → logprob: -14.200948715209961
    6. '	sys' → logprob: -14.950948715209961
    7. '=sys' → logprob: -14.950948715209961
    8. ' import' → logprob: -15.450948715209961
    9. '#import' → logprob: -15.575948715209961
    10. '(sys' → logprob: -15.950948715209961

Token 229: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -9.729906196298543e-06
    2. '.setdefault' → logprob: -11.625009536743164
    3. '#set' → logprob: -15.375009536743164
    4. '.' → logprob: -15.500009536743164
    5. 'set' → logprob: -15.750009536743164
    6. '.stdin' → logprob: -16.625009536743164
    7. 'import' → logprob: -17.375009536743164
    8. '.stdout' → logprob: -17.500009536743164
    9. '.get' → logprob: -18.500009536743164
    10. ' .' → logprob: -18.500009536743164

Token 230: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -5.319370302458992e-06
    2. 'set' → logprob: -13.250005722045898
    3. 'limit' → logprob: -13.250005722045898
    4. 're' → logprob: -14.625005722045898
    5. '_rec' → logprob: -14.625005722045898
    6. ' recursion' → logprob: -14.875005722045898
    7. 'ursion' → logprob: -16.2500057220459
    8. 'Rec' → logprob: -16.2500057220459
    9. 'r' → logprob: -16.6250057220459
    10. 'recursive' → logprob: -17.2500057220459

Token 231: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -4.370294846012257e-05
    2. 'ur' → logprob: -10.500043869018555
    3. 'urs' → logprob: -11.375043869018555
    4. 'ursive' → logprob: -12.875043869018555
    5. 'limit' → logprob: -13.625043869018555
    6. 'ursor' → logprob: -14.875043869018555
    7. 'urst' → logprob: -15.500043869018555
    8. 'usion' → logprob: -15.750043869018555
    9. 'urse' → logprob: -16.500043869018555
    10. 'ursively' → logprob: -16.875043869018555

Token 232: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.00032867121626622975
    2. 'ursion' → logprob: -8.25032901763916
    3. '_limit' → logprob: -10.25032901763916
    4. 'lim' → logprob: -11.12532901763916
    5. 't' → logprob: -12.25032901763916
    6. ' limit' → logprob: -12.62532901763916
    7. 'imit' → logprob: -13.25032901763916
    8. 'rl' → logprob: -13.75032901763916
    9. 'it' → logprob: -13.75032901763916
    10. '(limit' → logprob: -13.87532901763916

Token 233: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '((' → logprob: -15.125
    3. ' (' → logprob: -16.875
    4. '(
' → logprob: -17.375
    5. '(int' → logprob: -17.75
    6. '100' → logprob: -19.625
    7. '(

' → logprob: -20.625
    8. '(pow' → logprob: -21.25
    9. '()' → logprob: -21.625
    10. '=' → logprob: -21.75

Token 234: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.825890159234405e-05
    2. '100' → logprob: -9.625068664550781
    3. '200' → logprob: -14.250068664550781
    4. '410' → logprob: -14.625068664550781
    5. '500' → logprob: -15.375068664550781
    6. '300' → logprob: -15.375068664550781
    7. '１０' → logprob: -16.00006866455078
    8. '999' → logprob: -16.25006866455078
    9. '250' → logprob: -16.37506866455078
    10. '150' → logprob: -16.37506866455078

Token 235: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.036144182085990906
    2. '010' → logprob: -3.661144256591797
    3. '00' → logprob: -5.036144256591797
    4. '001' → logprob: -5.911144256591797
    5. '_' → logprob: -8.536144256591797
    6. '10' → logprob: -8.661144256591797
    7. '007' → logprob: -9.286144256591797
    8. '100' → logprob: -10.161144256591797
    9. '009' → logprob: -10.661144256591797
    10. '0' → logprob: -11.036144256591797

Token 236: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009118211455643177
    2. ')' → logprob: -7.000911712646484
    3. '00' → logprob: -15.000911712646484
    4. ')
' → logprob: -18.125911712646484
    5. '000' → logprob: -18.375911712646484
    6. ' ' → logprob: -19.500911712646484
    7. '1' → logprob: -19.625911712646484
    8. '+' → logprob: -19.750911712646484
    9. ' )' → logprob: -19.875911712646484
    10. '```' → logprob: -19.875911712646484

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38687145709991455
    2. ')' → logprob: -1.1368714570999146
    3. ' )' → logprob: -15.636871337890625
    4. ')
' → logprob: -16.511871337890625
    5. '7' → logprob: -17.011871337890625
    6. '1' → logprob: -17.386871337890625
    7. '00' → logprob: -17.511871337890625
    8. '()' → logprob: -17.886871337890625
    9. '))' → logprob: -18.011871337890625
    10. '9' → logprob: -18.386871337890625

Token 238: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -16.875
    4. ')

' → logprob: -18.25
    5. '))' → logprob: -18.5
    6. '0' → logprob: -19.875
    7. '),' → logprob: -20.25
    8. '
' → logprob: -20.5
    9. ')#' → logprob: -20.5
    10. ');' → logprob: -20.75

Token 239: 'INF' (ID: 64358)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20347507297992706
    2. '<|end|>' → logprob: -2.203474998474121
    3. 'def' → logprob: -2.828474998474121
    4. '<|end|>' → logprob: -5.328474998474121
    5. 'import' → logprob: -6.203474998474121
    6. '```' → logprob: -6.328474998474121
    7. 'n' → logprob: -6.328474998474121
    8. '
' → logprob: -6.953474998474121
    9. ')' → logprob: -7.453474998474121
    10. 'from' → logprob: -7.703474998474121

Token 240: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6048142313957214
    2. ' =' → logprob: -1.1048142910003662
    3. '=int' → logprob: -2.104814291000366
    4. '=float' → logprob: -7.354814052581787
    5. '=sys' → logprob: -10.229814529418945
    6. '＝' → logprob: -12.229814529418945
    7. '=(' → logprob: -14.729814529418945
    8. '=max' → logprob: -15.229814529418945
    9. '=

' → logprob: -15.354814529418945
    10. '=Integer' → logprob: -15.354814529418945

Token 241: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004115323536098003
    2. '100' → logprob: -5.754115104675293
    3. 'float' → logprob: -7.004115104675293
    4. '1' → logprob: -10.879115104675293
    5. 'int' → logprob: -12.004115104675293
    6. '999' → logprob: -13.254115104675293
    7. ' float' → logprob: -14.254115104675293
    8. ' ' → logprob: -14.254115104675293
    9. '(' → logprob: -15.254115104675293
    10. 'pow' → logprob: -15.504115104675293

Token 242: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0015078396536409855
    2. '("' → logprob: -6.501507759094238
    3. '(' → logprob: -12.501507759094238
    4. ''in' → logprob: -13.876507759094238
    5. ''' → logprob: -14.751507759094238
    6. '('-' → logprob: -15.501507759094238
    7. '"' → logprob: -16.501508712768555
    8. '('+' → logprob: -16.876508712768555
    9. ''a' → logprob: -17.876508712768555
    10. '(
' → logprob: -18.626508712768555

Token 243: 'inf' (ID: 22226)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6865378618240356
    2. ''in' → logprob: -1.3115378618240356
    3. 'inf' → logprob: -2.061537742614746
    4. ''' → logprob: -2.311537742614746
    5. '"in' → logprob: -8.561537742614746
    6. ''ex' → logprob: -8.686537742614746
    7. ''im' → logprob: -9.061537742614746
    8. ''inc' → logprob: -9.811537742614746
    9. ''ins' → logprob: -10.061537742614746
    10. ''i' → logprob: -10.436537742614746

Token 244: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038047801703214645
    2. '')' → logprob: -3.2880477905273438
    3. '")' → logprob: -12.663047790527344
    4. ' )' → logprob: -13.413047790527344
    5. ')
' → logprob: -14.663047790527344
    6. '.')' → logprob: -15.413047790527344
    7. '()' → logprob: -15.538047790527344
    8. '')
' → logprob: -15.538047790527344
    9. '+')' → logprob: -16.288047790527344
    10. ')'' → logprob: -16.538047790527344

Token 245: 'MOD' (ID: 52135)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18966470658779144
    2. 'def' → logprob: -2.064664602279663
    3. 'n' → logprob: -3.939664602279663
    4. 'from' → logprob: -4.939664840698242
    5. 'class' → logprob: -5.064664840698242
    6. '<|end|>' → logprob: -5.564664840698242
    7. 'import' → logprob: -6.814664840698242
    8. 'a' → logprob: -6.939664840698242
    9. '<|end|>' → logprob: -7.064664840698242
    10. 'N' → logprob: -7.064664840698242

Token 246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868924081325531
    2. ' =' → logprob: -1.1368924379348755
    3. ',' → logprob: -10.886892318725586
    4. ')' → logprob: -14.136892318725586
    5. '=int' → logprob: -14.136892318725586
    6. ' =)' → logprob: -15.261892318725586
    7. '=

' → logprob: -15.511892318725586
    8. ' =
' → logprob: -15.761892318725586
    9. ')=' → logprob: -16.261892318725586
    10. '.' → logprob: -16.386892318725586

Token 247: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.13690616190433502
    2. '100' → logprob: -2.136906147003174
    3. '998' → logprob: -4.636906147003174
    4. ' ' → logprob: -8.386906623840332
    5. '1' → logprob: -11.511906623840332
    6. 'int' → logprob: -13.386906623840332
    7. '(' → logprob: -14.261906623840332
    8. '999' → logprob: -14.886906623840332
    9. '123' → logprob: -16.136905670166016
    10. '```' → logprob: -16.511905670166016

Token 248: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6210940480232239
    2. '100' → logprob: -0.8710940480232239
    3. '998' → logprob: -3.121093988418579
    4. '(' → logprob: -11.12109375
    5. '1' → logprob: -11.12109375
    6. 'int' → logprob: -11.74609375
    7. ' ' → logprob: -13.24609375
    8. '999' → logprob: -14.62109375
    9. '１００' → logprob: -15.24609375
    10. '(int' → logprob: -15.37109375

Token 249: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.004228697158396244
    2. '09' → logprob: -5.504228591918945
    3. '**' → logprob: -8.879228591918945
    4. '```' → logprob: -12.004228591918945
    5. '009' → logprob: -13.004228591918945
    6. '+' → logprob: -13.504228591918945
    7. '000' → logprob: -14.379228591918945
    8. ' ' → logprob: -15.379228591918945
    9. '``' → logprob: -15.879228591918945
    10. '99' → logprob: -15.879228591918945

Token 250: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '09' → logprob: -14.75
    3. '+' → logprob: -18.25
    4. '```' → logprob: -19.25
    5. '９' → logprob: -22.5
    6. '10' → logprob: -22.75
    7. ' ' → logprob: -22.875
    8. '19' → logprob: -22.875
    9. '
' → logprob: -23.0
    10. '99' → logprob: -23.125

Token 251: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.274932143744081e-05
    2. ' +' → logprob: -10.125042915344238
    3. '7' → logprob: -12.875042915344238
    4. '+
' → logprob: -16.375041961669922
    5. '＋' → logprob: -16.750041961669922
    6. ' plus' → logprob: -17.875041961669922
    7. '9' → logprob: -18.125041961669922
    8. '```' → logprob: -18.500041961669922
    9. 'plus' → logprob: -18.625041961669922
    10. ' ' → logprob: -20.875041961669922

Token 252: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.4121114822482923e-06
    2. '+' → logprob: -12.625003814697266
    3. '```' → logprob: -18.000003814697266
    4. '   ' → logprob: -19.875003814697266
    5. '07' → logprob: -19.875003814697266
    6. '9' → logprob: -21.000003814697266
    7. ' ' → logprob: -21.250003814697266
    8. ' +' → logprob: -21.625003814697266
    9. '007' → logprob: -21.750003814697266
    10. '
' → logprob: -22.500003814697266

Token 253: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: ' Je' (ID: 4678)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03210551291704178
    2. 'MOD' → logprob: -4.782105445861816
    3. '10' → logprob: -4.907105445861816
    4. '100' → logprob: -5.907105445861816
    5. '998' → logprob: -5.907105445861816
    6. 'def' → logprob: -6.407105445861816
    7. ' ' → logprob: -6.532105445861816
    8. 'import' → logprob: -6.907105445861816
    9. '```' → logprob: -7.032105445861816
    10. '<|end|>' → logprob: -7.032105445861816

Token 256: ' mets' (ID: 87155)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5748963356018066
    2. 's' → logprob: -1.6998963356018066
    3. 'continue' → logprob: -2.0748963356018066
    4. ' continue' → logprob: -2.1998963356018066
    5. 'n' → logprob: -2.6998963356018066
    6. 'vais' → logprob: -2.8248963356018066
    7. ' pense' → logprob: -2.8248963356018066
    8. 'pens' → logprob: -2.8248963356018066
    9. '```' → logprob: -3.4498963356018066
    10. '#' → logprob: -3.6998963356018066

Token 257: ' ce' (ID: 2357)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0336112342774868
    2. 'à' → logprob: -3.908611297607422
    3. '10' → logprob: -6.033611297607422
    4. 'un' → logprob: -6.158611297607422
    5. 'au' → logprob: -6.158611297607422
    6. '0' → logprob: -7.033611297607422
    7. 'MOD' → logprob: -7.033611297607422
    8. 'une' → logprob: -7.283611297607422
    9. '1' → logprob: -7.658611297607422
    10. 'ça' → logprob: -7.783611297607422

Token 258: ' modulo' (ID: 112372)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.6590906381607056
    2. 'mod' → logprob: -2.409090518951416
    3. ' mod' → logprob: -2.534090518951416
    4. ' que' → logprob: -3.284090518951416
    5. '#' → logprob: -3.409090518951416
    6. '```' → logprob: -3.409090518951416
    7. ' modulo' → logprob: -3.534090518951416
    8. 'code' → logprob: -3.534090518951416
    9. 'MOD' → logprob: -4.159090518951416
    10. ' commentaire' → logprob: -4.284090518951416

Token 259: ' partout' (ID: 70478)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18690241873264313
    2. '
' → logprob: -2.1869025230407715
    3. '<|end|>' → logprob: -3.5619025230407715
    4. '.' → logprob: -4.5619025230407715
    5. ',' → logprob: -4.8119025230407715
    6. ' ' → logprob: -6.4369025230407715
    7. '<|end|>' → logprob: -6.4369025230407715
    8. '\n' → logprob: -6.4369025230407715
    9. '

' → logprob: -6.6869025230407715
    10. 'MOD' → logprob: -7.0619025230407715

Token 260: ' au' (ID: 2791)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.00505586015060544
    2. 'final' → logprob: -6.880055904388428
    3. 'pass' → logprob: -7.130055904388428
    4. 'par' → logprob: -7.255055904388428
    5. 'case' → logprob: -8.63005542755127
    6. 'dé' → logprob: -8.63005542755127
    7. 'pas' → logprob: -8.75505542755127
    8. 'finish' → logprob: -8.75505542755127
    9. 'python' → logprob: -9.00505542755127
    10. 'code' → logprob: -9.13005542755127

Token 262: ' où' (ID: 15113)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0021338483784347773
    2. 'où' → logprob: -7.502133846282959
    3. 'qu' → logprob: -7.877133846282959
    4. '```' → logprob: -8.002134323120117
    5. 'de' → logprob: -8.252134323120117
    6. ' que' → logprob: -8.502134323120117
    7. 'quoi' → logprob: -9.627134323120117
    8. 'fois' → logprob: -9.752134323120117
    9. 'ce' → logprob: -10.002134323120117
    10. '``' → logprob: -10.127134323120117

Token 263: ' ;)

' (ID: 77314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08032522350549698
    2. 'n' → logprob: -2.580325126647949
    3. 'X' → logprob: -7.830325126647949
    4. 'T' → logprob: -8.20532512664795
    5. 'def' → logprob: -8.20532512664795
    6. 'A' → logprob: -8.95532512664795
    7. 'H' → logprob: -9.33032512664795
    8. 'Q' → logprob: -9.45532512664795
    9. 't' → logprob: -9.45532512664795
    10. 'S' → logprob: -10.20532512664795

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.495776891708374
    2. '=' → logprob: -1.120776891708374
    3. ',' → logprob: -2.745776891708374
    4. '=int' → logprob: -7.370777130126953
    5. ' ,' → logprob: -11.495777130126953
    6. '=input' → logprob: -11.620777130126953
    7. ',N' → logprob: -11.745777130126953
    8. ',M' → logprob: -12.245777130126953
    9. ',Q' → logprob: -12.995777130126953
    10. '=N' → logprob: -13.120777130126953

Token 266: ' INT' (ID: 20104)
  Prédit: 'INT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INT' → logprob: -0.005998474545776844
    2. ' INT' → logprob: -5.380998611450195
    3. 'int' → logprob: -6.755998611450195
    4. ' int' → logprob: -9.130998611450195
    5. ' ' → logprob: -10.255998611450195
    6. '10' → logprob: -10.380998611450195
    7. 'LIST' → logprob: -11.380998611450195
    8. '0' → logprob: -11.880998611450195
    9. '_INT' → logprob: -12.255998611450195
    10. '100' → logprob: -12.630998611450195

Token 267: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012392755597829819
    2. ')' → logprob: -7.12623929977417
    3. '(' → logprob: -8.251238822937012
    4. '()
' → logprob: -9.001238822937012
    5. '())' → logprob: -11.126238822937012
    6. ' ()' → logprob: -11.751238822937012
    7. '(N' → logprob: -12.001238822937012
    8. '<|end|>' → logprob: -12.126238822937012
    9. ',' → logprob: -12.876238822937012
    10. ' ' → logprob: -13.251238822937012

Token 268: 'XY' (ID: 27825)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08434982597827911
    2. 'a' → logprob: -2.9593498706817627
    3. 'S' → logprob: -3.7093498706817627
    4. 'H' → logprob: -5.959349632263184
    5. 'arr' → logprob: -7.209349632263184
    6. 'lst' → logprob: -7.834349632263184
    7. 's' → logprob: -8.334349632263184
    8. 'data' → logprob: -9.084349632263184
    9. 'h' → logprob: -9.459349632263184
    10. 'L' → logprob: -9.834349632263184

Token 269: 'H' (ID: 39)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01438750047236681
    2. ' =' → logprob: -4.264387607574463
    3. '=[]' → logprob: -8.514387130737305
    4. '()' → logprob: -11.639387130737305
    5. '_' → logprob: -12.139387130737305
    6. '[]' → logprob: -12.264387130737305
    7. 's' → logprob: -14.389387130737305
    8. ',' → logprob: -14.514387130737305
    9. '=[' → logprob: -14.514387130737305
    10. '_list' → logprob: -14.889387130737305

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43376925587654114
    2. '=' → logprob: -1.0587692260742188
    3. '=[]' → logprob: -5.308769226074219
    4. '[]' → logprob: -10.183769226074219
    5. '=[' → logprob: -10.933769226074219
    6. '=list' → logprob: -11.183769226074219
    7. 'Y' → logprob: -11.808769226074219
    8. 'L' → logprob: -12.058769226074219
    9. '=[]
' → logprob: -12.433769226074219
    10. '_list' → logprob: -12.933769226074219

Token 271: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009388997219502926
    2. '[List' → logprob: -4.7593889236450195
    3. '[list' → logprob: -7.2593889236450195
    4. '[L' → logprob: -9.75938892364502
    5. 'LIST' → logprob: -11.50938892364502
    6. ' [' → logprob: -14.00938892364502
    7. '[l' → logprob: -14.38438892364502
    8. 'list' → logprob: -14.50938892364502
    9. '[]' → logprob: -14.75938892364502
    10. '[n' → logprob: -16.384389877319336

Token 272: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.512236498361744e-07
    2. ' for' → logprob: -14.500000953674316
    3. '	for' → logprob: -22.125
    4. '[' → logprob: -23.5
    5. '
' → logprob: -24.25
    6. 'For' → logprob: -25.125
    7. 'from' → logprob: -25.375
    8. 'FOR' → logprob: -25.375
    9. 'fo' → logprob: -25.75
    10. 'f' → logprob: -26.0

Token 273: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00012737659562844783
    2. '_i' → logprob: -9.000127792358398
    3. ' _' → logprob: -12.625127792358398
    4. '_in' → logprob: -15.250127792358398
    5. '_=' → logprob: -15.750127792358398
    6. '_x' → logprob: -16.5001277923584
    7. '_range' → logprob: -17.5001277923584
    8. '_n' → logprob: -18.0001277923584
    9. '_name' → logprob: -19.0001277923584
    10. '_id' → logprob: -19.2501277923584

Token 274: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3489775061607361
    2. ' in' → logprob: -1.2239775657653809
    3. 'range' → logprob: -7.723977565765381
    4. 'i' → logprob: -10.348977088928223
    5. ' ' → logprob: -10.598977088928223
    6. '_' → logprob: -10.973977088928223
    7. 'n' → logprob: -11.848977088928223
    8. ' range' → logprob: -12.973977088928223
    9. '  ' → logprob: -13.723977088928223
    10. 'ine' → logprob: -14.098977088928223

Token 275: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.566264295950532e-05
    2. ' range' → logprob: -9.375085830688477
    3. 'rang' → logprob: -15.500085830688477
    4. 'r' → logprob: -16.250085830688477
    5. 'ran' → logprob: -16.500085830688477
    6. '(range' → logprob: -16.625085830688477
    7. '  ' → logprob: -17.250085830688477
    8. '	range' → logprob: -17.250085830688477
    9. ' ' → logprob: -17.500085830688477
    10. '   ' → logprob: -17.750085830688477

Token 276: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00012415809032972902
    2. 'N' → logprob: -9.000123977661133
    3. '(' → logprob: -14.250123977661133
    4. '	N' → logprob: -17.500123977661133
    5. ' N' → logprob: -18.375123977661133
    6. '(
' → logprob: -19.000123977661133
    7. '(n' → logprob: -19.375123977661133
    8. '  ' → logprob: -19.750123977661133
    9. '[N' → logprob: -19.750123977661133
    10. ' (' → logprob: -20.000123977661133

Token 277: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5780245661735535
    2. '):
' → logprob: -0.8280245661735535
    3. ')' → logprob: -6.328024387359619
    4. '):
' → logprob: -8.578024864196777
    5. ':' → logprob: -9.703024864196777
    6. ' ):
' → logprob: -11.078024864196777
    7. ' ):' → logprob: -11.203024864196777
    8. '():
' → logprob: -11.453024864196777
    9. ':
' → logprob: -12.703024864196777
    10. '   ' → logprob: -13.578024864196777

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007785954512655735
    2. 'XY' → logprob: -4.882785797119141
    3. 'X' → logprob: -9.50778579711914
    4. 'x' → logprob: -9.75778579711914
    5. ' XY' → logprob: -10.50778579711914
    6. 'xy' → logprob: -11.50778579711914
    7. '	' → logprob: -12.75778579711914
    8. '  ' → logprob: -13.00778579711914
    9. ' ' → logprob: -13.25778579711914
    10. 'XYZ' → logprob: -14.00778579711914

Token 279: ' xs' (ID: 26642)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0016057939501479268
    2. 'X' → logprob: -6.626605987548828
    3. 'XY' → logprob: -8.501605987548828
    4. 'xy' → logprob: -9.501605987548828
    5. ' x' → logprob: -13.876605987548828
    6. '

' → logprob: -15.501605987548828
    7. 'XYZ' → logprob: -15.751605987548828
    8. '``' → logprob: -16.001605987548828
    9. '```' → logprob: -16.126605987548828
    10. '(x' → logprob: -16.126605987548828

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01975514180958271
    2. ',y' → logprob: -4.1447553634643555
    3. 'y' → logprob: -6.0197553634643555
    4. ' ,' → logprob: -7.3947553634643555
    5. ',Y' → logprob: -7.7697553634643555
    6. 'Y' → logprob: -8.769755363464355
    7. '=' → logprob: -10.394755363464355
    8. '_,' → logprob: -10.769755363464355
    9. ' =' → logprob: -11.144755363464355
    10. 'x' → logprob: -11.769755363464355

Token 281: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.0002967320033349097
    2. ' ys' → logprob: -8.125296592712402
    3. 'y' → logprob: -15.125296592712402
    4. '*' → logprob: -16.12529754638672
    5. 'ym' → logprob: -17.00029754638672
    6. 'Ys' → logprob: -17.00029754638672
    7. 'ysi' → logprob: -17.37529754638672
    8. 'ysin' → logprob: -17.50029754638672
    9. 'ysk' → logprob: -17.50029754638672
    10. 'ysm' → logprob: -17.62529754638672

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024275471514556557
    2. '=' → logprob: -9.500243186950684
    3. ' ,' → logprob: -9.875243186950684
    4. ',h' → logprob: -9.875243186950684
    5. 'h' → logprob: -10.625243186950684
    6. 'hs' → logprob: -10.750243186950684
    7. 's' → logprob: -11.375243186950684
    8. ' =' → logprob: -11.875243186950684
    9. ',s' → logprob: -15.500243186950684
    10. '_,' → logprob: -15.875243186950684

Token 283: ' hs' (ID: 59089)
  Prédit: 'hs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hs' → logprob: -0.0010465048253536224
    2. ' hs' → logprob: -6.876046657562256
    3. 'h' → logprob: -11.376046180725098
    4. 'Hs' → logprob: -13.376046180725098
    5. 'zs' → logprob: -15.376046180725098
    6. ' h' → logprob: -16.251047134399414
    7. '.hs' → logprob: -16.626047134399414
    8. 'HS' → logprob: -16.751047134399414
    9. 'hz' → logprob: -17.001047134399414
    10. 'hh' → logprob: -17.501047134399414

Token 284: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019291093340143561
    2. ' =' → logprob: -6.25192928314209
    3. '=input' → logprob: -15.75192928314209
    4. 's' → logprob: -15.87692928314209
    5. '＝' → logprob: -16.751928329467773
    6. ',' → logprob: -16.751928329467773
    7. '=list' → logprob: -17.001928329467773
    8. '=s' → logprob: -17.876928329467773
    9. ')=' → logprob: -18.001928329467773
    10. '=sys' → logprob: -18.001928329467773

Token 285: ' MAP' (ID: 53455)
  Prédit: 'LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.16042082011699677
    2. 'MAP' → logprob: -1.9104207754135132
    3. 'map' → logprob: -9.410420417785645
    4. ' LIST' → logprob: -9.660420417785645
    5. ' MAP' → logprob: -10.285420417785645
    6. 'list' → logprob: -11.285420417785645
    7. ' map' → logprob: -12.535420417785645
    8. ' ' → logprob: -15.035420417785645
    9. 'L' → logprob: -16.03542137145996
    10. '   ' → logprob: -16.16042137145996

Token 286: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.12736596167087555
    2. '()' → logprob: -2.127366065979004
    3. '()
' → logprob: -7.752366065979004
    4. ')' → logprob: -13.002366065979004
    5. '(' → logprob: -13.627366065979004
    6. ')
' → logprob: -14.002366065979004
    7. '()

' → logprob: -14.127366065979004
    8. '())
' → logprob: -14.252366065979004
    9. '   ' → logprob: -14.377366065979004
    10. '())' → logprob: -14.752366065979004

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015284325927495956
    2. 'XY' → logprob: -6.501528263092041
    3. ' XY' → logprob: -11.0015287399292
    4. '  ' → logprob: -12.0015287399292
    5. '    
' → logprob: -13.5015287399292
    6. ' ' → logprob: -13.7515287399292
    7. '    ' → logprob: -15.3765287399292
    8. '       ' → logprob: -15.5015287399292
    9. '
' → logprob: -16.251527786254883
    10. '	' → logprob: -16.376527786254883

Token 288: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' (adapté à ' XY') → logprob: -0.004086116328835487
    2. '   ' → logprob: -5.504086017608643
    3. ' XY' → logprob: -11.8790864944458
    4. 'XYZ' → logprob: -15.3790864944458
    5. ' ' → logprob: -15.6290864944458
    6. 'X' → logprob: -15.7540864944458
    7. 'if' → logprob: -15.8790864944458
    8. '  ' → logprob: -17.254085540771484
    9. 'xy' → logprob: -18.004085540771484
    10. '    
' → logprob: -19.004085540771484

Token 289: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.318681188422488e-05
    2. '.append' → logprob: -11.25001335144043
    3. ' H' → logprob: -16.37501335144043
    4. ' =' → logprob: -18.12501335144043
    5. '   ' → logprob: -19.00001335144043
    6. '=' → logprob: -19.12501335144043
    7. 's' → logprob: -19.12501335144043
    8. 'Hs' → logprob: -19.62501335144043
    9. '.' → logprob: -20.12501335144043
    10. 'S' → logprob: -20.37501335144043

Token 290: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.7994282795116305e-05
    2. '.' → logprob: -10.00004768371582
    3. '.app' → logprob: -13.50004768371582
    4. '.ap' → logprob: -14.12504768371582
    5. 'append' → logprob: -15.75004768371582
    6. ').' → logprob: -16.12504768371582
    7. ' .' → logprob: -16.50004768371582
    8. '].' → logprob: -17.00004768371582
    9. '.add' → logprob: -18.12504768371582
    10. '.py' → logprob: -18.12504768371582

Token 291: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.9795445849886164e-05
    2. '(' → logprob: -9.750060081481934
    3. '([' → logprob: -13.500060081481934
    4. '(
' → logprob: -18.125059127807617
    5. '((_' → logprob: -20.250059127807617
    6. ' ((' → logprob: -20.875059127807617
    7. '(((' → logprob: -21.125059127807617
    8. '(([' → logprob: -21.875059127807617
    9. '[(' → logprob: -23.000059127807617
    10. '   ' → logprob: -23.000059127807617

Token 292: ' (' (ID: 350)
  Prédit: '(xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.00872105173766613
    2. '(x' → logprob: -4.758720874786377
    3. ' (' → logprob: -9.258721351623535
    4. '(' → logprob: -11.883721351623535
    5. '[x' → logprob: -12.633721351623535
    6. '   ' → logprob: -15.133721351623535
    7. '[' → logprob: -15.633721351623535
    8. ')' → logprob: -15.633721351623535
    9. '(rs' → logprob: -16.25872039794922
    10. '((' → logprob: -16.50872039794922

Token 293: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -3.774276774493046e-05
    2. ' xs' → logprob: -10.250038146972656
    3. '(xs' → logprob: -13.000038146972656
    4. 'x' → logprob: -16.375038146972656
    5. ' ' → logprob: -18.875038146972656
    6. '   ' → logprob: -19.000038146972656
    7. 'int' → logprob: -19.000038146972656
    8. '  ' → logprob: -20.250038146972656
    9. '_x' → logprob: -20.500038146972656
    10. 'xi' → logprob: -20.750038146972656

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013263145228847861
    2. ' ,' → logprob: -6.626326084136963
    3. '   ' → logprob: -16.126325607299805
    4. ',
' → logprob: -16.751325607299805
    5. ')' → logprob: -17.001325607299805
    6. '‌,' → logprob: -17.376325607299805
    7. ' ' → logprob: -17.501325607299805
    8. ',y' → logprob: -18.126325607299805
    9. ' ys' → logprob: -18.251325607299805
    10. '```' → logprob: -18.501325607299805

Token 295: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.0024764856789261103
    2. ' ys' → logprob: -6.002476692199707
    3. 'ysi' → logprob: -14.877476692199707
    4. 'yses' → logprob: -14.877476692199707
    5. ' ' → logprob: -17.37747573852539
    6. 'ysa' → logprob: -17.87747573852539
    7. 'ysin' → logprob: -18.00247573852539
    8. 'Ys' → logprob: -18.12747573852539
    9. 'ysk' → logprob: -18.37747573852539
    10. 'ysg' → logprob: -18.50247573852539

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.697387966094539e-05
    2. ' ,' → logprob: -9.375086784362793
    3. 's' → logprob: -13.750086784362793
    4. 'hs' → logprob: -14.875086784362793
    5. ')' → logprob: -15.375086784362793
    6. ',h' → logprob: -15.500086784362793
    7. ',
' → logprob: -16.25008773803711
    8. '),' → logprob: -16.75008773803711
    9. ' hs' → logprob: -17.37508773803711
    10. ',)' → logprob: -18.12508773803711

Token 297: ' hs' (ID: 59089)
  Prédit: 'hs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hs' → logprob: -0.0010329303331673145
    2. ' hs' → logprob: -6.876032829284668
    3. ' ' → logprob: -16.751033782958984
    4. '   ' → logprob: -17.626033782958984
    5. 'h' → logprob: -18.626033782958984
    6. '  ' → logprob: -18.751033782958984
    7. 'Hs' → logprob: -19.001033782958984
    8. '.hs' → logprob: -19.001033782958984
    9. 'hos' → logprob: -19.376033782958984
    10. ')' → logprob: -19.501033782958984

Token 298: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.306760805164231e-05
    2. '))' → logprob: -11.50001335144043
    3. ' )' → logprob: -12.75001335144043
    4. ')
' → logprob: -19.12501335144043
    5. '   ' → logprob: -20.00001335144043
    6. '}' → logprob: -20.12501335144043
    7. ' ))' → logprob: -20.12501335144043
    8. ' ' → logprob: -21.00001335144043
    9. ')`' → logprob: -21.12501335144043
    10. '),' → logprob: -21.87501335144043

Token 299: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006584516726434231
    2. 'found' → logprob: -6.006584644317627
    3. '#' → logprob: -6.631584644317627
    4. 'x' → logprob: -6.631584644317627
    5. 'cx' → logprob: -7.631584644317627
    6. 'C' → logprob: -8.131584167480469
    7. 'ans' → logprob: -8.756584167480469
    8. ' for' → logprob: -9.006584167480469
    9. 'H' → logprob: -9.506584167480469
    10. 'possible' → logprob: -9.631584167480469

Token 300: ' Bon' (ID: 12658)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.059997718781232834
    2. 'x' → logprob: -3.684997797012329
    3. 'cx' → logprob: -4.05999755859375
    4. 'X' → logprob: -5.43499755859375
    5. 'Cx' → logprob: -5.43499755859375
    6. 'C' → logprob: -6.18499755859375
    7. 'def' → logprob: -6.68499755859375
    8. 'ans' → logprob: -6.80999755859375
    9. 'px' → logprob: -7.55999755859375
    10. '#' → logprob: -7.55999755859375

Token 301: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4290120601654053
    2. 'found' → logprob: -1.1790120601654053
    3. 'x' → logprob: -3.9290120601654053
    4. 'cx' → logprob: -4.679012298583984
    5. 'possible' → logprob: -6.054012298583984
    6. 'ans' → logprob: -6.179012298583984
    7. '#' → logprob: -6.304012298583984
    8. 'answer' → logprob: -6.554012298583984
    9. ' for' → logprob: -7.054012298583984
    10. 'center' → logprob: -7.679012298583984

Token 302: ' on' (ID: 402)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.9012635946273804
    2. 'x' → logprob: -1.4012635946273804
    3. 'for' → logprob: -1.9012635946273804
    4. '#' → logprob: -2.40126371383667
    5. 'X' → logprob: -3.65126371383667
    6. ' cx' → logprob: -4.02626371383667
    7. 'Cx' → logprob: -4.02626371383667
    8. 'found' → logprob: -4.65126371383667
    9. 'xc' → logprob: -5.52626371383667
    10. ' for' → logprob: -5.65126371383667

Token 303: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4803812801837921
    2. ' for' → logprob: -1.8553812503814697
    3. ' va' → logprob: -2.2303812503814697
    4. '#' → logprob: -2.8553812503814697
    5. ' cherche' → logprob: -3.7303812503814697
    6. 'def' → logprob: -4.480381488800049
    7. ' continue' → logprob: -5.355381488800049
    8. 'cherche' → logprob: -5.855381488800049
    9. 'range' → logprob: -5.980381488800049
    10. ' #' → logprob: -5.980381488800049

Token 304: ' tester' (ID: 51819)
  Prédit: ' essayer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' essayer' → logprob: -0.9519825577735901
    2. 'for' → logprob: -1.0769824981689453
    3. ' chercher' → logprob: -2.5769824981689453
    4. 'try' → logprob: -2.7019824981689453
    5. ' for' → logprob: -2.9519824981689453
    6. ' try' → logprob: -3.0769824981689453
    7. 'chercher' → logprob: -4.951982498168945
    8. '#' → logprob: -5.326982498168945
    9. 't' → logprob: -5.826982498168945
    10. ' tenter' → logprob: -6.326982498168945

Token 305: ' tous' (ID: 10688)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013654236681759357
    2. ' for' → logprob: -4.5136542320251465
    3. 'found' → logprob: -6.1386542320251465
    4. 'x' → logprob: -8.638654708862305
    5. 'ans' → logprob: -9.138654708862305
    6. 'cx' → logprob: -10.263654708862305
    7. ' found' → logprob: -10.763654708862305
    8. ' ans' → logprob: -11.013654708862305
    9. 'X' → logprob: -11.138654708862305
    10. 'C' → logprob: -11.388654708862305

Token 306: ' les' (ID: 1341)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4881000816822052
    2. '(x' → logprob: -1.7381000518798828
    3. '(' → logprob: -2.863100051879883
    4. 'X' → logprob: -3.238100051879883
    5. '(cx' → logprob: -3.238100051879883
    6. 'for' → logprob: -3.488100051879883
    7. '(X' → logprob: -4.738100051879883
    8. '((' → logprob: -5.363100051879883
    9. 'i' → logprob: -5.613100051879883
    10. 'possible' → logprob: -5.863100051879883

Token 307: ' centres' (ID: 43504)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4036194384098053
    2. 'X' → logprob: -1.278619408607483
    3. 'Cx' → logprob: -3.9036195278167725
    4. '0' → logprob: -4.653619289398193
    5. 'cx' → logprob: -4.653619289398193
    6. 'C' → logprob: -5.403619289398193
    7. 'c' → logprob: -6.153619289398193
    8. 'possible' → logprob: -6.528619289398193
    9. 'px' → logprob: -7.153619289398193
    10. 'CX' → logprob: -7.153619289398193

Token 308: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.227250610711053e-05
    2. 'found' → logprob: -10.875041961669922
    3. 'x' → logprob: -11.750041961669922
    4. ' for' → logprob: -11.875041961669922
    5. 'possible' → logprob: -12.500041961669922
    6. 'X' → logprob: -13.750041961669922
    7. 'ans' → logprob: -14.000041961669922
    8. 'C' → logprob: -14.250041961669922
    9. 'H' → logprob: -14.625041961669922
    10. '0' → logprob: -15.125041961669922

Token 309: ' pas' (ID: 2173)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009490952361375093
    2. '#' → logprob: -7.000948905944824
    3. 'found' → logprob: -10.750948905944824
    4. 'x' → logprob: -11.625948905944824
    5. ' for' → logprob: -12.500948905944824
    6. 'cx' → logprob: -14.125948905944824
    7. 'Cx' → logprob: -14.125948905944824
    8. 'ans' → logprob: -14.875948905944824
    9. 'C' → logprob: -15.375948905944824
    10. 'from' → logprob: -15.625948905944824

Token 310: ' super' (ID: 2539)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03999842330813408
    2. 'range' → logprob: -3.5399985313415527
    3. ' for' → logprob: -5.789998531341553
    4. '#' → logprob: -6.289998531341553
    5. '   ' → logprob: -6.289998531341553
    6. 'pour' → logprob: -7.289998531341553
    7. ' range' → logprob: -7.789998531341553
    8. ' seulement' → logprob: -7.914998531341553
    9. '(range' → logprob: -8.414998054504395
    10. 'import' → logprob: -8.414998054504395

Token 311: ' opt' (ID: 1832)
  Prédit: 'optim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'optim' → logprob: -0.9670553207397461
    2. 'optimal' → logprob: -1.217055320739746
    3. 'efficient' → logprob: -1.592055320739746
    4. 'for' → logprob: -3.342055320739746
    5. 'eff' → logprob: -3.967055320739746
    6. 'import' → logprob: -4.092055320739746
    7. 'e' → logprob: -4.342055320739746
    8. 'pro' → logprob: -4.842055320739746
    9. 'com' → logprob: -5.967055320739746
    10. 'opt' → logprob: -5.967055320739746

Token 312: 'i' (ID: 72)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.5456151366233826
    2. 'imal' → logprob: -1.0456151962280273
    3. 'imum' → logprob: -3.2956151962280273
    4. 'imes' → logprob: -4.545615196228027
    5. '```' → logprob: -5.295615196228027
    6. 'imized' → logprob: -5.545615196228027
    7. 'imis' → logprob: -5.795615196228027
    8. 'ims' → logprob: -6.420615196228027
    9. 'ime' → logprob: -6.420615196228027
    10. 'i' → logprob: -7.045615196228027

Token 313: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013254113495349884
    2. '
' → logprob: -5.138254165649414
    3. ' for' → logprob: -5.263254165649414
    4. 'x' → logprob: -6.888254165649414
    5. 'X' → logprob: -7.138254165649414
    6. '#' → logprob: -9.138254165649414
    7. ',' → logprob: -9.638254165649414
    8. '

' → logprob: -10.513254165649414
    9. 'C' → logprob: -11.263254165649414
    10. ',
' → logprob: -11.388254165649414

Token 314: ' pass' (ID: 1853)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8549726009368896
    2. 'ok' → logprob: -1.8549726009368896
    3. 'OK' → logprob: -2.7299726009368896
    4. 'possible' → logprob: -2.7299726009368896
    5. '0' → logprob: -3.2299726009368896
    6. ' ok' → logprob: -3.3549726009368896
    7. 'N' → logprob: -3.6049726009368896
    8. ' for' → logprob: -3.8549726009368896
    9. 'okay' → logprob: -4.104972839355469
    10. ' possible' → logprob: -4.104972839355469

Token 315: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.017844950780272484
    2. 'ables' → logprob: -4.767845153808594
    3. 'ible' → logprob: -4.767845153808594
    4. 'ablement' → logprob: -8.517845153808594
    5. 'es' → logprob: -8.767845153808594
    6. 'ent' → logprob: -9.392845153808594
    7. '
' → logprob: -9.517845153808594
    8. 'for' → logprob: -10.392845153808594
    9. '#' → logprob: -10.642845153808594
    10. 'ble' → logprob: -11.017845153808594

Token 316: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017533883452415466
    2. '
' → logprob: -4.267533779144287
    3. ' for' → logprob: -6.142533779144287
    4. 'X' → logprob: -8.267534255981445
    5. 'x' → logprob: -8.392534255981445
    6. 'ans' → logprob: -8.892534255981445
    7. '

' → logprob: -8.892534255981445
    8. 'cx' → logprob: -9.017534255981445
    9. 'H' → logprob: -9.392534255981445
    10. 'possible' → logprob: -9.892534255981445

Token 317: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00158056674990803
    2. 'found' → logprob: -7.501580715179443
    3. 'ans' → logprob: -7.876580715179443
    4. 'C' → logprob: -8.626580238342285
    5. 'cx' → logprob: -8.751580238342285
    6. 'x' → logprob: -9.376580238342285
    7. 'possible' → logprob: -9.876580238342285
    8. ' for' → logprob: -10.001580238342285
    9. 'Cx' → logprob: -10.251580238342285
    10. 'X' → logprob: -11.001580238342285

Token 318: ' cy' (ID: 5504)
  Prédit: ' cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cx' → logprob: -0.8208411335945129
    2. 'cx' → logprob: -1.3208410739898682
    3. 'x' → logprob: -1.6958410739898682
    4. ' x' → logprob: -3.320841073989868
    5. 'Cx' → logprob: -3.945841073989868
    6. '(cx' → logprob: -4.320841312408447
    7. 'i' → logprob: -4.820841312408447
    8. 'X' → logprob: -4.945841312408447
    9. 'c' → logprob: -5.320841312408447
    10. ' i' → logprob: -5.570841312408447

Token 319: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016761429607868195
    2. 'in' → logprob: -4.266761302947998
    3. 'x' → logprob: -6.641761302947998
    4. 'y' → logprob: -7.766761302947998
    5. 'range' → logprob: -8.516761779785156
    6. '0' → logprob: -9.391761779785156
    7. ' ' → logprob: -9.516761779785156
    8. 'r' → logprob: -9.516761779785156
    9. 's' → logprob: -9.641761779785156
    10. 't' → logprob: -9.766761779785156

Token 320: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4741261899471283
    2. 'range' → logprob: -0.9741262197494507
    3. '[' → logprob: -11.224125862121582
    4. ' ' → logprob: -11.224125862121582
    5. '   ' → logprob: -11.474125862121582
    6. '  ' → logprob: -12.724125862121582
    7. '(range' → logprob: -12.724125862121582
    8. ' in' → logprob: -13.974125862121582
    9. '	range' → logprob: -14.224125862121582
    10. 'ran' → logprob: -14.474125862121582

Token 321: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00044663884909823537
    2. '101' → logprob: -7.750446796417236
    3. '```' → logprob: -12.125446319580078
    4. '=' → logprob: -12.625446319580078
    5. '+' → logprob: -13.750446319580078
    6. '(-' → logprob: -14.000446319580078
    7. '[' → logprob: -14.125446319580078
    8. ' (' → logprob: -14.250446319580078
    9. '``' → logprob: -14.375446319580078
    10. '   ' → logprob: -14.375446319580078

Token 322: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -1.3856492842023727e-06
    2. '0' → logprob: -15.125000953674316
    3. '``' → logprob: -15.375000953674316
    4. '```' → logprob: -15.625000953674316
    5. '   ' → logprob: -16.000001907348633
    6. '+' → logprob: -16.000001907348633
    7. 'max' → logprob: -16.750001907348633
    8. '(' → logprob: -17.000001907348633
    9. ' ' → logprob: -17.000001907348633
    10. '  ' → logprob: -17.125001907348633

Token 323: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0620805099606514
    2. '):
' → logprob: -2.8120806217193604
    3. '+' → logprob: -10.187080383300781
    4. '):
' → logprob: -10.687080383300781
    5. ')' → logprob: -11.062080383300781
    6. '0' → logprob: -11.312080383300781
    7. ' ):' → logprob: -11.562080383300781
    8. ':' → logprob: -12.312080383300781
    9. '   ' → logprob: -12.437080383300781
    10. '1' → logprob: -13.187080383300781

Token 324: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052273426204919815
    2. ' for' → logprob: -3.0522735118865967
    3. '<|end|>' → logprob: -6.052273273468018
    4. '	for' → logprob: -7.052273273468018
    5. 'for' → logprob: -8.677273750305176
    6. '    
' → logprob: -9.552273750305176
    7. '   ' → logprob: -9.677273750305176
    8. '    ' → logprob: -9.802273750305176
    9. ' ' → logprob: -10.177273750305176
    10. ',' → logprob: -10.802273750305176

Token 325: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8131320476531982
    2. '   ' → logprob: -1.1881320476531982
    3. ' for' → logprob: -1.4381320476531982
    4. '0' → logprob: -4.688132286071777
    5. '101' → logprob: -5.813132286071777
    6. ' ' → logprob: -6.813132286071777
    7. '100' → logprob: -6.938132286071777
    8. '  ' → logprob: -10.688132286071777
    9. ' range' → logprob: -10.938132286071777
    10. '    ' → logprob: -11.438132286071777

Token 326: '101' (ID: 7959)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.440492182970047
    2. '101' → logprob: -1.4404921531677246
    3. '0' → logprob: -2.4404921531677246
    4. 'cy' → logprob: -3.8154921531677246
    5. '100' → logprob: -5.315492153167725
    6. '   ' → logprob: -5.940492153167725
    7. ' for' → logprob: -6.815492153167725
    8. ' ' → logprob: -6.940492153167725
    9. ' cy' → logprob: -7.690492153167725
    10. 'if' → logprob: -9.690492630004883

Token 327: ' parce' (ID: 27146)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038643311709165573
    2. ':
' → logprob: -5.628864288330078
    3. ' :' → logprob: -8.878864288330078
    4. '):' → logprob: -9.878864288330078
    5. ' for' → logprob: -10.753864288330078
    6. 'for' → logprob: -11.378864288330078
    7. '0' → logprob: -11.628864288330078
    8. ',' → logprob: -11.628864288330078
    9. '):
' → logprob: -11.753864288330078
    10. ')' → logprob: -12.503864288330078

Token 328: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5048187971115112
    2. '   ' → logprob: -2.379818916320801
    3. ')' → logprob: -2.504818916320801
    4. ' que' → logprob: -3.504818916320801
    5. '):' → logprob: -3.629818916320801
    6. '101' → logprob: -4.129818916320801
    7. 'c' → logprob: -4.254818916320801
    8. '0' → logprob: -4.379818916320801
    9. '100' → logprob: -4.504818916320801
    10. ' de' → logprob: -4.629818916320801

Token 329: ' c' (ID: 274)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.21298231184482574
    2. ' ' → logprob: -1.8379822969436646
    3. '0' → logprob: -3.712982416152954
    4. '101' → logprob: -5.587982177734375
    5. '102' → logprob: -6.962982177734375
    6. 'range' → logprob: -7.087982177734375
    7. '   ' → logprob: -7.212982177734375
    8. 'c' → logprob: -7.712982177734375
    9. ' range' → logprob: -8.587982177734375
    10. '10' → logprob: -8.712982177734375

Token 330: ''est' (ID: 6616)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4313735365867615
    2. 'y' → logprob: -2.4313735961914062
    3. ')' → logprob: -2.8063735961914062
    4. '101' → logprob: -3.6813735961914062
    5. '```' → logprob: -4.056373596191406
    6. 'ont' → logprob: -4.056373596191406
    7. '100' → logprob: -4.181373596191406
    8. '   ' → logprob: -4.306373596191406
    9. ' in' → logprob: -4.431373596191406
    10. 'range' → logprob: -4.431373596191406

Token 331: ' max' (ID: 2999)
  Prédit: '101'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '101' → logprob: -0.5920530557632446
    2. '100' → logprob: -1.3420530557632446
    3. ' la' → logprob: -2.842052936553955
    4. ' ' → logprob: -3.342052936553955
    5. 'la' → logprob: -3.967052936553955
    6. 'le' → logprob: -3.967052936553955
    7. '0' → logprob: -4.217052936553955
    8. ' le' → logprob: -5.342052936553955
    9. 'range' → logprob: -5.467052936553955
    10. ' l' → logprob: -5.842052936553955

Token 332: ' selon' (ID: 27571)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.366668701171875
    2. '100' → logprob: -1.866668701171875
    3. '+' → logprob: -1.991668701171875
    4. '101' → logprob: -2.741668701171875
    5. ')' → logprob: -2.866668701171875
    6. '<|end|>' → logprob: -3.116668701171875
    7. 'range' → logprob: -3.241668701171875
    8. '_range' → logprob: -3.616668701171875
    9. '   ' → logprob: -3.866668701171875
    10. 'y' → logprob: -3.866668701171875

Token 333: ' l' (ID: 305)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.7129637598991394
    2. '100' → logprob: -1.8379638195037842
    3. 'the' → logprob: -2.337963819503784
    4. ' the' → logprob: -2.587963819503784
    5. ' problem' → logprob: -2.712963819503784
    6. 'XY' → logprob: -3.087963819503784
    7. ' le' → logprob: -3.837963819503784
    8. ' XY' → logprob: -4.462963581085205
    9. 'le' → logprob: -4.962963581085205
    10. 'xy' → logprob: -5.462963581085205

Token 334: ''' (ID: 6)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0309070348739624
    2. 'problem' → logprob: -1.5309070348739624
    3. 'e' → logprob: -1.6559070348739624
    4. 'en' → logprob: -2.405907154083252
    5. 'es' → logprob: -4.280907154083252
    6. 'ex' → logprob: -4.530907154083252
    7. ''' → logprob: -4.780907154083252
    8. 'spec' → logprob: -4.905907154083252
    9. 'ange' → logprob: -5.030907154083252
    10. ' problem' → logprob: -5.030907154083252

Token 335: 'én' (ID: 3289)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.16454237699508667
    2. 'range' → logprob: -2.7895424365997314
    3. 'prompt' → logprob: -3.4145424365997314
    4. '100' → logprob: -3.5395424365997314
    5. 'statement' → logprob: -4.789542198181152
    6. 'prob' → logprob: -5.164542198181152
    7. 'en' → logprob: -5.914542198181152
    8. 'code' → logprob: -6.664542198181152
    9. 'constraint' → logprob: -6.789542198181152
    10. 'sys' → logprob: -7.289542198181152

Token 336: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.0631115734577179
    2. 'once' → logprob: -3.4381115436553955
    3. 'um' → logprob: -4.063111782073975
    4. 'ig' → logprob: -4.813111782073975
    5. 'onc' → logprob: -6.563111782073975
    6. 'on' → logprob: -6.563111782073975
    7. 'cé' → logprob: -7.563111782073975
    8. 'non' → logprob: -9.688111305236816
    9. 'oncer' → logprob: -9.688111305236816
    10. 't' → logprob: -9.938111305236816

Token 337: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3522320091724396
    2. '   ' → logprob: -1.9772319793701172
    3. ':' → logprob: -2.227231979370117
    4. 'for' → logprob: -3.102231979370117
    5. ',' → logprob: -5.602231979370117
    6. ':
' → logprob: -6.477231979370117
    7. ' ' → logprob: -9.477231979370117
    8. '):' → logprob: -9.602231979370117
    9. '):
' → logprob: -9.977231979370117
    10. '	for' → logprob: -9.977231979370117

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42916831374168396
    2. ' for' → logprob: -1.1791683435440063
    3. ':' → logprob: -3.429168224334717
    4. 'for' → logprob: -4.929168224334717
    5. ' ' → logprob: -7.054168224334717
    6. ':
' → logprob: -7.929168224334717
    7. ' :' → logprob: -8.429168701171875
    8. '  ' → logprob: -9.054168701171875
    9. '	for' → logprob: -10.179168701171875
    10. ',' → logprob: -10.679168701171875

Token 339: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002306196605786681
    2. ' for' → logprob: -6.50230598449707
    3. '   ' → logprob: -7.12730598449707
    4. ' ' → logprob: -15.25230598449707
    5. '100' → logprob: -15.37730598449707
    6. '	for' → logprob: -16.12730598449707
    7. '101' → logprob: -17.12730598449707
    8. '  ' → logprob: -17.50230598449707
    9. 'x' → logprob: -17.87730598449707
    10. '    
' → logprob: -18.50230598449707

Token 340: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.038062259554862976
    2. ' cx' → logprob: -3.288062334060669
    3. '(cx' → logprob: -11.03806209564209
    4. '.cx' → logprob: -12.28806209564209
    5. '`' → logprob: -17.163063049316406
    6. '   ' → logprob: -18.163063049316406
    7. '```' → logprob: -18.163063049316406
    8. '
' → logprob: -18.288063049316406
    9. 'c' → logprob: -18.288063049316406
    10. 'Cx' → logprob: -18.413063049316406

Token 341: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47447657585144043
    2. ' in' → logprob: -0.9744765758514404
    3. 'range' → logprob: -7.8494768142700195
    4. ' ' → logprob: -12.59947681427002
    5. ' range' → logprob: -12.84947681427002
    6. '   ' → logprob: -13.97447681427002
    7. ',' → logprob: -14.59947681427002
    8. 'ange' → logprob: -14.97447681427002
    9. ')' → logprob: -15.09947681427002
    10. 'n' → logprob: -15.34947681427002

Token 342: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '(range' → logprob: -19.000036239624023
    4. '	range' → logprob: -23.125036239624023
    5. '
' → logprob: -23.875036239624023
    6. '(' → logprob: -24.000036239624023
    7. ' ' → logprob: -24.375036239624023
    8. '   ' → logprob: -24.625036239624023
    9. '100' → logprob: -25.875036239624023
    10. '

' → logprob: -26.125036239624023

Token 343: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -16.5
    3. 'range' → logprob: -19.375
    4. '(range' → logprob: -19.75
    5. '(
' → logprob: -20.125
    6. '((' → logprob: -21.375
    7. 'in' → logprob: -22.625
    8. '
' → logprob: -22.875
    9. ' range' → logprob: -23.125
    10. 'for' → logprob: -23.25

Token 344: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -12.12501049041748
    3. ' ' → logprob: -12.25001049041748
    4. '   ' → logprob: -15.87501049041748
    5. '0' → logprob: -17.625009536743164
    6. '1' → logprob: -18.625009536743164
    7. '111' → logprob: -19.375009536743164
    8. '
' → logprob: -19.750009536743164
    9. ')' → logprob: -20.000009536743164
    10. '[' → logprob: -20.000009536743164

Token 345: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021712594025302678
    2. ':' → logprob: -8.62521743774414
    3. '):
' → logprob: -10.75021743774414
    4. ')' → logprob: -12.00021743774414
    5. ' ):' → logprob: -12.37521743774414
    6. '+' → logprob: -13.00021743774414
    7. '   ' → logprob: -14.25021743774414
    8. ',' → logprob: -14.37521743774414
    9. ']:' → logprob: -14.37521743774414
    10. '():' → logprob: -14.75021743774414

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022916549642104656
    2. '   ' → logprob: -8.625228881835938
    3. '#' → logprob: -11.750228881835938
    4. ' if' → logprob: -11.875228881835938
    5. 'found' → logprob: -11.875228881835938
    6. 'if' → logprob: -12.750228881835938
    7. 'possible' → logprob: -13.125228881835938
    8. '           ' → logprob: -13.125228881835938
    9. '	   ' → logprob: -13.250228881835938
    10. ' found' → logprob: -13.375228881835938

Token 347: ' poss' (ID: 2456)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.35641416907310486
    2. 'H' → logprob: -1.8564141988754272
    3. 'ok' → logprob: -2.2314140796661377
    4. 'ch' → logprob: -4.731414318084717
    5. 'height' → logprob: -5.106414318084717
    6. '#' → logprob: -5.481414318084717
    7. 'found' → logprob: -5.856414318084717
    8. 'C' → logprob: -6.231414318084717
    9. 'for' → logprob: -6.481414318084717
    10. 'cand' → logprob: -6.981414318084717

Token 348: 'H' (ID: 39)
  Prédit: 'ible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.0006377388490363955
    2. '=' → logprob: -7.875637531280518
    3. 'ib' → logprob: -9.375638008117676
    4. ' =' → logprob: -10.125638008117676
    5. 'ibe' → logprob: -10.250638008117676
    6. 'ibl' → logprob: -10.750638008117676
    7. '```' → logprob: -11.000638008117676
    8. 'ibile' → logprob: -11.500638008117676
    9. 'iable' → logprob: -11.875638008117676
    10. 'ibel' → logprob: -12.125638008117676

Token 349: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017056517535820603
    2. ' =' → logprob: -6.376705646514893
    3. '=None' → logprob: -13.75170612335205
    4. '=True' → logprob: -14.00170612335205
    5. '_=' → logprob: -15.00170612335205
    6. '=[]' → logprob: -15.25170612335205
    7. '0' → logprob: -16.126705169677734
    8. ',' → logprob: -16.126705169677734
    9. '=False' → logprob: -16.251705169677734
    10. '_' → logprob: -16.251705169677734

Token 350: ' set' (ID: 920)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0793038159608841
    2. 'None' → logprob: -2.579303741455078
    3. '0' → logprob: -8.329303741455078
    4. 'INF' → logprob: -9.454303741455078
    5. '[' → logprob: -10.079303741455078
    6. ' -' → logprob: -10.704303741455078
    7. ' None' → logprob: -11.454303741455078
    8. 'next' → logprob: -11.954303741455078
    9. '-INF' → logprob: -12.204303741455078
    10. '[-' → logprob: -13.454303741455078

Token 351: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0029075853526592255
    2. '()
' → logprob: -5.877907752990723
    3. '([' → logprob: -9.627907752990723
    4. '([]' → logprob: -10.752907752990723
    5. '()

' → logprob: -12.002907752990723
    6. '(' → logprob: -12.502907752990723
    7. '()
' → logprob: -13.377907752990723
    8. '();' → logprob: -14.252907752990723
    9. '(x' → logprob: -14.877907752990723
    10. '([])
' → logprob: -14.877907752990723

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002410254208371043
    2. 'for' → logprob: -6.127410411834717
    3. ' for' → logprob: -9.127409934997559
    4. '   ' → logprob: -9.627409934997559
    5. 'valid' → logprob: -10.877409934997559
    6. 'ok' → logprob: -11.252409934997559
    7. 'possible' → logprob: -12.002409934997559
    8. ' ok' → logprob: -12.377409934997559
    9. 'correct' → logprob: -13.252409934997559
    10. '           ' → logprob: -13.627409934997559

Token 353: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004684664774686098
    2. 'ok' → logprob: -6.2546844482421875
    3. 'valid' → logprob: -6.5046844482421875
    4. '       ' → logprob: -7.0046844482421875
    5. 'possible' → logprob: -8.504684448242188
    6. '   ' → logprob: -9.254684448242188
    7. 'flag' → logprob: -10.504684448242188
    8. 'fail' → logprob: -11.629684448242188
    9. 'can' → logprob: -13.004684448242188
    10. 'good' → logprob: -13.129684448242188

Token 354: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1824137270450592
    2. '(x' → logprob: -1.8074136972427368
    3. 'xs' → logprob: -6.182413578033447
    4. '(xs' → logprob: -8.182414054870605
    5. '(' → logprob: -8.682414054870605
    6. ' (' → logprob: -10.307414054870605
    7. ' x' → logprob: -10.307414054870605
    8. 'i' → logprob: -11.182414054870605
    9. 'X' → logprob: -11.682414054870605
    10. 'xx' → logprob: -11.807414054870605

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046725376159884036
    2. ',y' → logprob: -7.750467300415039
    3. 'y' → logprob: -10.750467300415039
    4. 's' → logprob: -12.250467300415039
    5. ' ,' → logprob: -12.500467300415039
    6. '_,' → logprob: -13.000467300415039
    7. 'x' → logprob: -13.500467300415039
    8. ',x' → logprob: -13.500467300415039
    9. ',s' → logprob: -14.375467300415039
    10. ',
' → logprob: -15.750467300415039

Token 356: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0006285638664849102
    2. ' y' → logprob: -7.375628471374512
    3. ',' → logprob: -13.375628471374512
    4. ',y' → logprob: -14.875628471374512
    5. '	y' → logprob: -17.250629425048828
    6. ' ' → logprob: -17.375629425048828
    7. '   ' → logprob: -17.500629425048828
    8. '    ' → logprob: -18.750629425048828
    9. '  ' → logprob: -18.875629425048828
    10. 'Y' → logprob: -18.875629425048828

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.951771421066951e-05
    2. ',h' → logprob: -11.000029563903809
    3. 's' → logprob: -12.375029563903809
    4. ' ,' → logprob: -12.500029563903809
    5. 'h' → logprob: -12.625029563903809
    6. 'H' → logprob: -14.125029563903809
    7. '_,' → logprob: -15.625029563903809
    8. 't' → logprob: -16.875028610229492
    9. ',s' → logprob: -17.125028610229492
    10. 'I' → logprob: -17.125028610229492

Token 358: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0004341261519584805
    2. ' h' → logprob: -7.750433921813965
    3. 'H' → logprob: -13.375433921813965
    4. '	h' → logprob: -14.625433921813965
    5. ',h' → logprob: -14.750433921813965
    6. ' ' → logprob: -15.000433921813965
    7. ',' → logprob: -15.375433921813965
    8. '_h' → logprob: -15.750433921813965
    9. 'hs' → logprob: -15.750433921813965
    10. '```' → logprob: -16.62543487548828

Token 359: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.005948117468506098
    2. ' in' → logprob: -5.130948066711426
    3. 's' → logprob: -11.380948066711426
    4. '   ' → logprob: -12.755948066711426
    5. ',' → logprob: -13.130948066711426
    6. ' ' → logprob: -13.630948066711426
    7. '
' → logprob: -14.755948066711426
    8. '  ' → logprob: -15.005948066711426
    9. 'i' → logprob: -15.630948066711426
    10. ')' → logprob: -16.005949020385742

Token 360: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.0002614550176076591
    2. ' XY' → logprob: -8.250261306762695
    3. ' ' → logprob: -16.625261306762695
    4. 'X' → logprob: -17.375261306762695
    5. 'XYZ' → logprob: -18.000261306762695
    6. 'Y' → logprob: -18.125261306762695
    7. '   ' → logprob: -18.250261306762695
    8. '  ' → logprob: -18.625261306762695
    9. '[' → logprob: -18.875261306762695
    10. '(X' → logprob: -19.250261306762695

Token 361: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00013405199570115656
    2. 'h' → logprob: -9.000134468078613
    3. ':' → logprob: -12.125134468078613
    4. 'if' → logprob: -13.750134468078613
    5. '   ' → logprob: -14.125134468078613
    6. '```' → logprob: -14.375134468078613
    7. ' H' → logprob: -14.500134468078613
    8. ':
' → logprob: -15.000134468078613
    9. ',' → logprob: -15.125134468078613
    10. ' in' → logprob: -15.375134468078613

Token 362: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1604282259941101
    2. ':' → logprob: -1.9104282855987549
    3. '           ' → logprob: -8.910428047180176
    4. ':
' → logprob: -10.535428047180176
    5. '   ' → logprob: -11.285428047180176
    6. 'if' → logprob: -11.410428047180176
    7. '):
' → logprob: -11.910428047180176
    8. '():
' → logprob: -12.535428047180176
    9. ':

' → logprob: -12.660428047180176
    10. '       ' → logprob: -13.160428047180176

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002380761317908764
    2. ' if' → logprob: -6.252380847930908
    3. 'if' → logprob: -7.752380847930908
    4. '       ' → logprob: -11.37738037109375
    5. '	       ' → logprob: -12.87738037109375
    6. ',' → logprob: -13.12738037109375
    7. '               ' → logprob: -13.62738037109375
    8. '          ' → logprob: -13.75238037109375
    9. '   ' → logprob: -14.12738037109375
    10. '            
' → logprob: -14.12738037109375

Token 364: ' tmp' (ID: 8919)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.029092328622937202
    2. '           ' → logprob: -3.904092311859131
    3. ' if' → logprob: -4.779092311859131
    4. '               ' → logprob: -9.279092788696289
    5. '   ' → logprob: -11.779092788696289
    6. '	if' → logprob: -13.154092788696289
    7. 'h' → logprob: -13.279092788696289
    8. '       ' → logprob: -13.904092788696289
    9. ' ' → logprob: -13.904092788696289
    10. 'poss' → logprob: -14.029092788696289

Token 365: 'H' (ID: 39)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18124254047870636
    2. ' =' → logprob: -1.80624258518219
    3. 'h' → logprob: -6.9312424659729
    4. 'H' → logprob: -7.6812424659729
    5. '_h' → logprob: -10.306242942810059
    6. '=max' → logprob: -12.431242942810059
    7. '_' → logprob: -12.556242942810059
    8. '=h' → logprob: -13.056242942810059
    9. 'if' → logprob: -13.181242942810059
    10. '   ' → logprob: -13.431242942810059

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018178271129727364
    2. ' =' → logprob: -4.018178462982178
    3. '=max' → logprob: -10.51817798614502
    4. '+=' → logprob: -14.51817798614502
    5. 'max' → logprob: -14.64317798614502
    6. 'if' → logprob: -16.018178939819336
    7. '=int' → logprob: -17.143178939819336
    8. '＝' → logprob: -17.268178939819336
    9. ' max' → logprob: -17.393178939819336
    10. ' ' → logprob: -17.518178939819336

Token 367: ' abs' (ID: 8443)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5915045738220215
    2. 'max' → logprob: -0.8415045738220215
    3. '0' → logprob: -4.9665045738220215
    4. 'hs' → logprob: -5.3415045738220215
    5. 'abs' → logprob: -6.0915045738220215
    6. 'None' → logprob: -6.8415045738220215
    7. '(max' → logprob: -8.96650505065918
    8. ' max' → logprob: -9.71650505065918
    9. '(h' → logprob: -9.96650505065918
    10. 'MAX' → logprob: -9.96650505065918

Token 368: '(cx' (ID: 116103)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2542514503002167
    2. '(cx' → logprob: -2.129251480102539
    3. '(h' → logprob: -2.254251480102539
    4. '(c' → logprob: -8.004251480102539
    5. '(xs' → logprob: -8.379251480102539
    6. '(y' → logprob: -10.754251480102539
    7. 'x' → logprob: -11.629251480102539
    8. '(' → logprob: -11.754251480102539
    9. '(nx' → logprob: -12.004251480102539
    10. 'h' → logprob: -12.254251480102539

Token 369: '-x' (ID: 12651)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5788872241973877
    2. '-' → logprob: -0.8288872241973877
    3. '-x' → logprob: -5.828886985778809
    4. 'x' → logprob: -14.328886985778809
    5. ',' → logprob: -14.828886985778809
    6. ' ' → logprob: -14.953886985778809
    7. '−' → logprob: -16.453887939453125
    8. '-xl' → logprob: -16.453887939453125
    9. '-xs' → logprob: -16.578887939453125
    10. '<|end|>' → logprob: -16.578887939453125

Token 370: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014165391214191914
    2. ')+' → logprob: -4.26416540145874
    3. ' )' → logprob: -13.389164924621582
    4. '```' → logprob: -16.1391658782959
    5. ')+(' → logprob: -16.8891658782959
    6. 'abs' → logprob: -17.1391658782959
    7. '）' → logprob: -17.3891658782959
    8. ')
' → logprob: -17.5141658782959
    9. '")+' → logprob: -17.5141658782959
    10. '+' → logprob: -17.5141658782959

Token 371: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00012415809032972902
    2. ' abs' → logprob: -9.000123977661133
    3. '(abs' → logprob: -14.500123977661133
    4. '<|end|>' → logprob: -15.500123977661133
    5. '.abs' → logprob: -16.750123977661133
    6. '_abs' → logprob: -20.250123977661133
    7. 'y' → logprob: -20.375123977661133
    8. 'ans' → logprob: -20.500123977661133
    9. 'aby' → logprob: -20.625123977661133
    10. ' ' → logprob: -20.625123977661133

Token 372: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.08825619518756866
    2. 'cy' → logprob: -2.9632561206817627
    3. '(y' → logprob: -3.4632561206817627
    4. '(' → logprob: -7.213256359100342
    5. '<|end|>' → logprob: -7.588256359100342
    6. '(cx' → logprob: -9.213255882263184
    7. ' cy' → logprob: -9.463255882263184
    8. 'y' → logprob: -10.463255882263184
    9. '(py' → logprob: -11.088255882263184
    10. '.cy' → logprob: -11.838255882263184

Token 373: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011360443197190762
    2. 'cy' → logprob: -4.7613606452941895
    3. '-y' → logprob: -6.1363606452941895
    4. 'ys' → logprob: -8.011360168457031
    5. 'yc' → logprob: -10.136360168457031
    6. '-' → logprob: -10.261360168457031
    7. '<|end|>' → logprob: -10.261360168457031
    8. ' cy' → logprob: -11.136360168457031
    9. ' y' → logprob: -11.386360168457031
    10. 'py' → logprob: -11.511360168457031

Token 374: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.010109718888998032
    2. ' -' → logprob: -4.885109901428223
    3. '-' → logprob: -6.010109901428223
    4. 'y' → logprob: -10.135109901428223
    5. '-yyyy' → logprob: -13.760109901428223
    6. '-c' → logprob: -14.135109901428223
    7. '-Y' → logprob: -14.510109901428223
    8. '‌' → logprob: -14.635109901428223
    9. ')-' → logprob: -14.635109901428223
    10. '	y' → logprob: -14.885109901428223

Token 375: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.639026403427124
    2. ')' → logprob: -1.139026403427124
    3. ')+' → logprob: -2.264026403427124
    4. '+h' → logprob: -3.764026403427124
    5. ' +' → logprob: -4.389026641845703
    6. ' if' → logprob: -5.139026641845703
    7. 'if' → logprob: -5.389026641845703
    8. ')
' → logprob: -6.639026641845703
    9. '>' → logprob: -9.014026641845703
    10. ' )' → logprob: -9.139026641845703

Token 376: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.012843471020460129
    2. 'hs' → logprob: -4.387843608856201
    3. ' h' → logprob: -8.137843132019043
    4. ' hs' → logprob: -11.387843132019043
    5. '1' → logprob: -11.512843132019043
    6. '[h' → logprob: -12.387843132019043
    7. ' ' → logprob: -12.762843132019043
    8. 'hst' → logprob: -13.137843132019043
    9. '0' → logprob: -13.262843132019043
    10. '(h' → logprob: -13.887843132019043

Token 377: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.872496485710144
    2. ' if' → logprob: -1.122496485710144
    3. '<|end|>' → logprob: -2.2474966049194336
    4. '           ' → logprob: -2.6224966049194336
    5. '-' → logprob: -3.3724966049194336
    6. '            
' → logprob: -4.497496604919434
    7. '
' → logprob: -4.747496604919434
    8. ')' → logprob: -4.872496604919434
    9. '<|end|>' → logprob: -5.747496604919434
    10. '       ' → logprob: -5.747496604919434

Token 378: ' #' (ID: 1069)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5523732304573059
    2. 'if' → logprob: -1.5523731708526611
    3. ' if' → logprob: -2.802373170852661
    4. '
' → logprob: -3.177373170852661
    5. '           ' → logprob: -3.427373170852661
    6. '       ' → logprob: -3.552373170852661
    7. ' ' → logprob: -4.42737340927124
    8. ' -' → logprob: -4.80237340927124
    9. '            
' → logprob: -5.05237340927124
    10. '<|end|>' → logprob: -5.17737340927124

Token 379: ' peut' (ID: 9216)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: '-être' (ID: 33599)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1774097681045532
    2. 'H' → logprob: -1.3024097681045532
    3. 'if' → logprob: -2.4274096488952637
    4. '<|end|>' → logprob: -3.0524096488952637
    5. ')' → logprob: -3.3024096488952637
    6. '           ' → logprob: -3.8024096488952637
    7. '   ' → logprob: -3.9274096488952637
    8. '       ' → logprob: -4.177409648895264
    9. '=' → logprob: -4.177409648895264
    10. '?' → logprob: -4.302409648895264

Token 381: ' invers' (ID: 38721)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.097227692604065
    2. '0' → logprob: -1.097227692604065
    3. '1' → logprob: -1.972227692604065
    4. '-' → logprob: -2.5972275733947754
    5. ' ' → logprob: -3.2222275733947754
    6. '<|end|>' → logprob: -3.2222275733947754
    7. ' -' → logprob: -4.097227573394775
    8. 'if' → logprob: -6.097227573394775
    9. '+' → logprob: -6.097227573394775
    10. '),' → logprob: -6.597227573394775

Token 382: 'é' (ID: 377)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6530646681785583
    2. 'ate' → logprob: -1.4030647277832031
    3. 'ent' → logprob: -2.403064727783203
    4. 'é' → logprob: -2.778064727783203
    5. 'es' → logprob: -4.153064727783203
    6. '-' → logprob: -4.653064727783203
    7. 'et' → logprob: -5.028064727783203
    8. 'e' → logprob: -5.278064727783203
    9. 'ed' → logprob: -5.278064727783203
    10. 'if' → logprob: -5.403064727783203

Token 383: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0700170174241066
    2. 'if' → logprob: -3.070017099380493
    3. ' -' → logprob: -5.195016860961914
    4. ' ' → logprob: -5.320016860961914
    5. '<|end|>' → logprob: -5.445016860961914
    6. '-' → logprob: -5.570016860961914
    7. '
' → logprob: -7.320016860961914
    8. ')' → logprob: -7.820016860961914
    9. '<|end|>' → logprob: -8.070016860961914
    10. '   ' → logprob: -8.570016860961914

Token 384: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3498573303222656
    2. ')' → logprob: -1.4748573303222656
    3. '<|end|>' → logprob: -1.4748573303222656
    4. '-' → logprob: -2.2248573303222656
    5. ' if' → logprob: -2.4748573303222656
    6. ' -' → logprob: -3.0998573303222656
    7. 'if' → logprob: -4.474857330322266
    8. '<|end|>' → logprob: -5.224857330322266
    9. ' not' → logprob: -5.349857330322266
    10. '1' → logprob: -5.724857330322266

Token 385: ' checker' (ID: 75924)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5507157444953918
    2. 'voir' → logprob: -1.925715684890747
    3. '+' → logprob: -2.425715684890747
    4. 'rev' → logprob: -3.675715684890747
    5. '-' → logprob: -3.925715684890747
    6. 'part' → logprob: -4.300715923309326
    7. ' vérifier' → logprob: -4.425715923309326
    8. 'vous' → logprob: -4.800715923309326
    9. ' revoir' → logprob: -4.800715923309326
    10. 'penser' → logprob: -4.925715923309326

Token 386: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012799927033483982
    2. '<|end|>' → logprob: -5.5127997398376465
    3. '       ' → logprob: -6.0127997398376465
    4. '            
' → logprob: -6.7627997398376465
    5. '               ' → logprob: -6.8877997398376465
    6. ' if' → logprob: -7.0127997398376465
    7. '		' → logprob: -7.3877997398376465
    8. ')' → logprob: -7.7627997398376465
    9. '            ' → logprob: -8.137800216674805
    10. '          ' → logprob: -8.512800216674805

Token 387: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.768284797668457
    2. '
' → logprob: -1.268284797668457
    3. 'if' → logprob: -1.393284797668457
    4. ' 
' → logprob: -5.393284797668457
    5. '       ' → logprob: -8.268284797668457
    6. '
' → logprob: -8.268284797668457
    7. ' ' → logprob: -8.518284797668457
    8. '            
' → logprob: -8.518284797668457
    9. '  
' → logprob: -8.518284797668457
    10. '<|end|>' → logprob: -8.643284797668457

Token 388: ' if' (ID: 538)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.435137540102005
    2. 'if' (adapté à ' if') → logprob: -1.0601375102996826
    3. 'pos' → logprob: -5.185137748718262
    4. ' if' → logprob: -8.685137748718262
    5. ' poss' → logprob: -9.060137748718262
    6. ')' → logprob: -9.185137748718262
    7. 'possible' → logprob: -9.185137748718262
    8. '.' → logprob: -9.560137748718262
    9. '       ' → logprob: -9.935137748718262
    10. '
' → logprob: -10.185137748718262

Token 389: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.030853940173983574
    2. ' h' → logprob: -3.5308539867401123
    3. 'tmp' → logprob: -7.030853748321533
    4. ' tmp' → logprob: -8.780854225158691
    5. 'H' → logprob: -10.655854225158691
    6. 'hs' → logprob: -11.530854225158691
    7. '(h' → logprob: -12.093354225158691
    8. ' ' → logprob: -12.718354225158691
    9. 'temp' → logprob: -12.780854225158691
    10. '(tmp' → logprob: -12.905854225158691

Token 390: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0164931770414114
    2. ' >' → logprob: -4.766493320465088
    3. '!=' → logprob: -5.016493320465088
    4. '==' → logprob: -7.141493320465088
    5. ' !=' → logprob: -8.14149284362793
    6. ':' → logprob: -9.89149284362793
    7. ')>' → logprob: -10.64149284362793
    8. '0' → logprob: -10.76649284362793
    9. ' ==' → logprob: -11.89149284362793
    10. '">' → logprob: -12.14149284362793

Token 391: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '>' → logprob: -17.250123977661133
    4. '   ' → logprob: -17.875123977661133
    5. '۰' → logprob: -18.500123977661133
    6. '=' → logprob: -18.625123977661133
    7. '```' → logprob: -19.375123977661133
    8. '０' → logprob: -19.625123977661133
    9. '==' → logprob: -19.875123977661133
    10. '1' → logprob: -20.062623977661133

Token 392: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.875015258789062
    4. '۰' → logprob: -16.250015258789062
    5. '
' → logprob: -16.500015258789062
    6. '０' → logprob: -17.125015258789062
    7. '```' → logprob: -17.312515258789062
    8. 'tmp' → logprob: -17.437515258789062
    9. ' ' → logprob: -17.625015258789062
    10. '>' → logprob: -17.875015258789062

Token 393: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4749012589454651
    2. ':
' → logprob: -0.9749012589454651
    3. '           ' → logprob: -8.34990119934082
    4. '               ' → logprob: -8.47490119934082
    5. ' and' → logprob: -8.84990119934082
    6. 'and' → logprob: -9.84990119934082
    7. ':
' → logprob: -9.84990119934082
    8. ':

' → logprob: -10.34990119934082
    9. '):
' → logprob: -10.59990119934082
    10. ')' → logprob: -11.09990119934082

Token 394: '               ' (ID: 506)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.02089860662817955
    2. ' poss' → logprob: -4.770898818969727
    3. 'pos' → logprob: -5.145898818969727
    4. '               ' → logprob: -5.770898818969727
    5. '           ' → logprob: -5.895898818969727
    6. '
' → logprob: -7.895898818969727
    7. '                
' → logprob: -10.520898818969727
    8. '                   ' → logprob: -10.645898818969727
    9. '            
' → logprob: -10.770898818969727
    10. 'tmp' → logprob: -10.770898818969727

Token 395: ' poss' (ID: 2456)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poss' (adapté à ' poss') → logprob: -0.0003217574267182499
    2. 'pos' → logprob: -8.375321388244629
    3. ' poss' → logprob: -9.875321388244629
    4. '               ' → logprob: -10.375321388244629
    5. '           ' → logprob: -12.375321388244629
    6. '
' → logprob: -13.375321388244629
    7. '                
' → logprob: -13.750321388244629
    8. '            
' → logprob: -14.250321388244629
    9. 'possible' → logprob: -15.250321388244629
    10. '                   ' → logprob: -15.625321388244629

Token 396: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -4.320199877838604e-07
    2. 'oss' → logprob: -14.875
    3. 'poss' → logprob: -17.25
    4. 's' → logprob: -17.75
    5. 'h' → logprob: -18.75
    6. ' H' → logprob: -19.0
    7. 'o' → logprob: -19.375
    8. 'r' → logprob: -19.875
    9. '_H' → logprob: -20.375
    10. 'e' → logprob: -20.375

Token 397: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00033581978641450405
    2. '.' → logprob: -8.000335693359375
    3. ' .' → logprob: -15.375335693359375
    4. 'add' → logprob: -15.625335693359375
    5. '=' → logprob: -17.750335693359375
    6. '.append' → logprob: -17.875335693359375
    7. '.update' → logprob: -18.625335693359375
    8. '.=' → logprob: -19.250335693359375
    9. '.Add' → logprob: -19.500335693359375
    10. '   ' → logprob: -19.625335693359375

Token 398: '(tmp' (ID: 22623)
  Prédit: '(tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.002485288307070732
    2. 'tmp' → logprob: -6.002485275268555
    3. '(' → logprob: -12.252485275268555
    4. ' tmp' → logprob: -13.877485275268555
    5. '[tmp' → logprob: -14.377485275268555
    6. '	tmp' → logprob: -14.627485275268555
    7. '(tm' → logprob: -14.752485275268555
    8. '(temp' → logprob: -14.752485275268555
    9. '(h' → logprob: -14.752485275268555
    10. '$tmp' → logprob: -14.877485275268555

Token 399: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -7.896309739408025e-07
    2. ')' → logprob: -14.625000953674316
    3. '_H' → logprob: -15.625000953674316
    4. '-H' → logprob: -18.125
    5. '-' → logprob: -18.75
    6. 'h' → logprob: -19.375
    7. '[' → logprob: -19.375
    8. '(H' → logprob: -19.5
    9. '(' → logprob: -19.625
    10. ' H' → logprob: -19.75

Token 400: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008849500678479671
    2. '       ' → logprob: -4.883849620819092
    3. ')
' → logprob: -7.383849620819092
    4. '<|end|>' → logprob: -7.883849620819092
    5. ' )' → logprob: -9.883849143981934
    6. '               ' → logprob: -10.133849143981934
    7. ')return' → logprob: -10.133849143981934
    8. '           ' → logprob: -10.383849143981934
    9. '<|end|>' → logprob: -10.758849143981934
    10. 'if' → logprob: -11.508849143981934

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00297223380766809
    2. 'if' → logprob: -6.25297212600708
    3. '
' → logprob: -7.50297212600708
    4. ' if' → logprob: -8.377972602844238
    5. '        
' → logprob: -8.502972602844238
    6. '      ' → logprob: -11.627972602844238
    7. '           ' → logprob: -11.627972602844238
    8. ' ' → logprob: -11.752972602844238
    9. '   ' → logprob: -12.002972602844238
    10. '  
' → logprob: -12.252972602844238

Token 402: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03366955742239952
    2. 'if' → logprob: -3.6586694717407227
    3. ' if' → logprob: -5.033669471740723
    4. '<|end|>' → logprob: -8.158669471740723
    5. ')' → logprob: -8.283669471740723
    6. ' ' → logprob: -9.158669471740723
    7. '   ' → logprob: -9.158669471740723
    8. '        
' → logprob: -11.158669471740723
    9. '#' (adapté à ' #') → logprob: -11.783669471740723
    10. '.' → logprob: -11.908669471740723

Token 403: ' Normal' (ID: 29591)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0016581593081355095
    2. '       ' → logprob: -6.751657962799072
    3. ' if' → logprob: -7.626657962799072
    4. '   ' → logprob: -15.87665843963623
    5. '	if' → logprob: -16.376657485961914
    6. '           ' → logprob: -16.626657485961914
    7. ';if' → logprob: -16.751657485961914
    8. '        
' → logprob: -16.876657485961914
    9. 'If' → logprob: -17.376657485961914
    10. ' ' → logprob: -17.501657485961914

Token 404: 'ement' (ID: 962)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06482859700918198
    2. '       ' → logprob: -3.314828634262085
    3. ' if' → logprob: -3.814828634262085
    4. '<|end|>' → logprob: -6.439828395843506
    5. '        ' → logprob: -6.939828395843506
    6. '           ' → logprob: -7.814828395843506
    7. '        
' → logprob: -8.439828872680664
    8. '    ' → logprob: -8.689828872680664
    9. '<|end|>' → logprob: -9.189828872680664
    10. '   ' → logprob: -9.314828872680664

Token 405: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.022157272323966026
    2. '       ' → logprob: -4.022157192230225
    3. ' if' → logprob: -5.522157192230225
    4. '   ' → logprob: -14.522157669067383
    5. '	if' → logprob: -14.647157669067383
    6. 'len' → logprob: -14.772157669067383
    7. '           ' → logprob: -14.897157669067383
    8. ';if' → logprob: -15.772157669067383
    9. ' ' → logprob: -17.022157669067383
    10. 'If' → logprob: -17.397157669067383

Token 406: ' le' (ID: 505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0013628548476845026
    2. ' if' → logprob: -6.7513628005981445
    3. '       ' → logprob: -8.626362800598145
    4. 'len' → logprob: -11.251362800598145
    5. '           ' → logprob: -15.376362800598145
    6. 'poss' → logprob: -17.12636375427246
    7. '   ' → logprob: -17.62636375427246
    8. ' len' → logprob: -18.00136375427246
    9. '	if' → logprob: -18.00136375427246
    10. '#' → logprob: -18.12636375427246

Token 407: ' vrai' (ID: 42682)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030254634097218513
    2. 'len' → logprob: -3.530254602432251
    3. ' if' → logprob: -7.65525484085083
    4. ' len' → logprob: -11.655254364013672
    5. '       ' → logprob: -12.155254364013672
    6. 'poss' → logprob: -12.280254364013672
    7. '           ' → logprob: -12.655254364013672
    8. 'elif' → logprob: -12.905254364013672
    9. '#' → logprob: -13.280254364013672
    10. '
' → logprob: -14.155254364013672

Token 408: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.057544201612472534
    2. 'if' → logprob: -2.932544231414795
    3. 'h' → logprob: -7.307544231414795
    4. 'poss' → logprob: -7.432544231414795
    5. 'height' → logprob: -7.557544231414795
    6. ' if' → logprob: -8.432543754577637
    7. 'center' → logprob: -9.432543754577637
    8. ' H' → logprob: -9.557543754577637
    9. 'possible' → logprob: -9.932543754577637
    10. 'Hx' → logprob: -10.057543754577637

Token 409: ' doit' (ID: 21822)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16166634857654572
    2. ' =' → logprob: -1.9116663932800293
    3. '=len' → logprob: -7.036666393280029
    4. 'if' → logprob: -7.786666393280029
    5. '       ' → logprob: -10.036665916442871
    6. '   ' → logprob: -10.161665916442871
    7. 's' → logprob: -10.911665916442871
    8. '=max' → logprob: -11.786665916442871
    9. 'len' → logprob: -11.786665916442871
    10. ' if' → logprob: -12.411665916442871

Token 410: ' être' (ID: 9104)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6506781578063965
    2. '=' → logprob: -1.2756781578063965
    3. '=len' → logprob: -1.7756781578063965
    4. ' =' → logprob: -3.9006781578063965
    5. 'if' → logprob: -5.1506781578063965
    6. ' len' → logprob: -6.4006781578063965
    7. ' be' → logprob: -7.4006781578063965
    8. '(len' → logprob: -7.9006781578063965
    9. 'be' → logprob: -8.275678634643555
    10. '==' → logprob: -8.775678634643555

Token 411: ' unique' (ID: 5746)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.034438636153936386
    2. '1' → logprob: -4.034438610076904
    3. 'list' → logprob: -5.159438610076904
    4. 'max' → logprob: -5.284438610076904
    5. 'pos' → logprob: -5.784438610076904
    6. 'poss' → logprob: -6.784438610076904
    7. 'min' → logprob: -7.784438610076904
    8. 'tmp' → logprob: -8.534439086914062
    9. 'int' → logprob: -8.784439086914062
    10. 'next' → logprob: -9.159439086914062

Token 412: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00042173630208708346
    2. ' if' → logprob: -8.000421524047852
    3. 'if' → logprob: -9.750421524047852
    4. '   ' → logprob: -10.625421524047852
    5. '<|end|>' → logprob: -13.875421524047852
    6. '           ' → logprob: -14.000421524047852
    7. ' ' → logprob: -14.625421524047852
    8. '      ' → logprob: -14.750421524047852
    9. ',' → logprob: -14.875421524047852
    10. ')' → logprob: -15.875421524047852

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000193527273950167
    2. ' if' → logprob: -9.00019359588623
    3. 'if' → logprob: -9.87519359588623
    4. '<|end|>' → logprob: -11.62519359588623
    5. '   ' → logprob: -12.50019359588623
    6. '	' → logprob: -12.62519359588623
    7. '      ' → logprob: -14.25019359588623
    8. '           ' → logprob: -14.37519359588623
    9. ',' → logprob: -15.37519359588623
    10. '	   ' → logprob: -15.50019359588623

Token 414: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7287545204162598
    2. 'if' (adapté à ' if') → logprob: -0.7287545204162598
    3. ' if' → logprob: -3.3537545204162598
    4. '   ' → logprob: -10.728754043579102
    5. '	if' → logprob: -12.728754043579102
    6. '           ' → logprob: -13.478754043579102
    7. ' ' → logprob: -13.978754043579102
    8. '	' → logprob: -15.353754043579102
    9. '      ' → logprob: -15.478754043579102
    10. 'If' → logprob: -16.2287540435791

Token 415: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04859759286046028
    2. ' len' → logprob: -3.048597574234009
    3. '(len' → logprob: -11.79859733581543
    4. ' ' → logprob: -13.67359733581543
    5. '   ' → logprob: -13.67359733581543
    6. '  ' → logprob: -15.92359733581543
    7. '	len' → logprob: -16.04859733581543
    8. '1' → logprob: -16.17359733581543
    9. 'poss' → logprob: -16.92359733581543
    10. '0' → logprob: -17.67359733581543

Token 416: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. 'pos' → logprob: -16.875003814697266
    4. '[pos' → logprob: -17.500003814697266
    5. '(po' → logprob: -18.125003814697266
    6. '	pos' → logprob: -18.625003814697266
    7. '(pass' → logprob: -19.500003814697266
    8. ' (' → logprob: -19.750003814697266
    9. '(
' → logprob: -19.875003814697266
    10. '(p' → logprob: -19.875003814697266

Token 417: 's' (ID: 82)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1484086662530899
    2. 's' → logprob: -2.2734086513519287
    3. 'sible' → logprob: -3.3984086513519287
    4. 'ss' → logprob: -6.648408889770508
    5. 'h' → logprob: -9.023408889770508
    6. 'poss' → logprob: -10.523408889770508
    7. 'sib' → logprob: -11.398408889770508
    8. 'ible' → logprob: -11.398408889770508
    9. '(' → logprob: -11.773408889770508
    10. '_H' → logprob: -11.898408889770508

Token 418: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -6.704273118884885e-07
    2. ' H' → logprob: -15.125000953674316
    3. ')' → logprob: -16.625
    4. '```' → logprob: -16.75
    5. '   ' → logprob: -17.125
    6. '_H' → logprob: -17.5
    7. '(' → logprob: -17.75
    8. '1' → logprob: -17.875
    9. '
' → logprob: -18.125
    10. '``' → logprob: -18.25

Token 419: ')==' (ID: 35269)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6282046437263489
    2. '!=' → logprob: -0.8782046437263489
    3. ' !=' → logprob: -3.878204584121704
    4. ' ==' → logprob: -4.378204822540283
    5. ')' → logprob: -4.503204822540283
    6. ')==' → logprob: -5.753204822540283
    7. ')!=' → logprob: -5.878204822540283
    8. '()!=' → logprob: -8.253204345703125
    9. '()==' → logprob: -9.378204345703125
    10. ']==' → logprob: -9.503204345703125

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4498052223643754e-05
    2. ' ' → logprob: -11.375014305114746
    3. '0' → logprob: -12.875014305114746
    4. '   ' → logprob: -16.812515258789062
    5. '```' → logprob: -16.812515258789062
    6. 'exact' → logprob: -17.125015258789062
    7. '  ' → logprob: -17.312515258789062
    8. '==' → logprob: -17.625015258789062
    9. '(' → logprob: -17.812515258789062
    10. ')' → logprob: -17.812515258789062

Token 421: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013210702687501907
    2. ' and' → logprob: -4.513210773468018
    3. ':
' → logprob: -6.263210773468018
    4. '):' → logprob: -9.01321029663086
    5. 'and' → logprob: -9.38821029663086
    6. '       ' → logprob: -10.63821029663086
    7. ')' → logprob: -12.01321029663086
    8. '           ' → logprob: -12.26321029663086
    9. ',' → logprob: -12.63821029663086
    10. '):
' → logprob: -13.01321029663086

Token 422: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009331366163678467
    2. 'H' → logprob: -7.2509331703186035
    3. 'h' → logprob: -8.625932693481445
    4. ' H' → logprob: -11.375932693481445
    5. 'true' → logprob: -11.875932693481445
    6. '               ' → logprob: -12.250932693481445
    7. '		' → logprob: -12.625932693481445
    8. 'possible' → logprob: -12.625932693481445
    9. ',' → logprob: -13.125932693481445
    10. '       ' → logprob: -13.500932693481445

Token 423: ' vh' (ID: 65178)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07505521178245544
    2. 'h' → logprob: -2.8250551223754883
    3. 'ch' → logprob: -4.700055122375488
    4. 'CH' → logprob: -7.325055122375488
    5. '       ' → logprob: -7.450055122375488
    6. 'poss' → logprob: -7.700055122375488
    7. 'for' → logprob: -7.825055122375488
    8. '   ' → logprob: -8.200055122375488
    9. 'ans' → logprob: -8.325055122375488
    10. 'C' → logprob: -8.825055122375488

Token 424: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08038341999053955
    2. '=' → logprob: -2.58038330078125
    3. 'H' → logprob: -6.95538330078125
    4. '   ' → logprob: -8.70538330078125
    5. 'al' → logprob: -9.20538330078125
    6. ',' → logprob: -9.20538330078125
    7. ' ' → logprob: -9.58038330078125
    8. 'alue' → logprob: -10.58038330078125
    9. '=list' → logprob: -11.08038330078125
    10. 'alid' → logprob: -11.20538330078125

Token 425: ' list' (ID: 1562)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.02334459312260151
    2. 'list' → logprob: -4.14834451675415
    3. 'pos' → logprob: -5.02334451675415
    4. 'next' → logprob: -7.39834451675415
    5. 'possible' → logprob: -9.898344993591309
    6. ' poss' → logprob: -11.148344993591309
    7. '   ' → logprob: -11.398344993591309
    8. ' list' → logprob: -12.398344993591309
    9. 'min' → logprob: -12.773344993591309
    10. '(pos' → logprob: -13.648344993591309

Token 426: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.000000953674316
    3. '[pos' → logprob: -14.875000953674316
    4. 'poss' → logprob: -16.375001907348633
    5. 'pos' → logprob: -17.250001907348633
    6. '(pass' → logprob: -18.875001907348633
    7. '(p' → logprob: -19.125001907348633
    8. '(
' → logprob: -19.375001907348633
    9. '	pos' → logprob: -19.750001907348633
    10. '1' → logprob: -20.000001907348633

Token 427: 's' (ID: 82)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.0012020161375403404
    2. 'oss' → logprob: -7.75120210647583
    3. '(pos' → logprob: -8.001201629638672
    4. ' poss' → logprob: -8.376201629638672
    5. 'pos' → logprob: -9.501201629638672
    6. 's' → logprob: -9.626201629638672
    7. 'ss' → logprob: -10.126201629638672
    8. '[pos' → logprob: -11.751201629638672
    9. 'sess' → logprob: -11.751201629638672
    10. 'H' → logprob: -12.751201629638672

Token 428: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -3.173704271830502e-06
    2. 'h' → logprob: -13.00000286102295
    3. ' H' → logprob: -15.12500286102295
    4. '(' → logprob: -15.25000286102295
    5. '(pos' → logprob: -15.37500286102295
    6. 'poss' → logprob: -16.250003814697266
    7. 'able' → logprob: -17.625003814697266
    8. '
' → logprob: -18.125003814697266
    9. '_H' → logprob: -18.125003814697266
    10. '[' → logprob: -18.125003814697266

Token 429: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -1.981667537620524e-06
    2. ' )[' → logprob: -14.250001907348633
    3. '())[' → logprob: -14.250001907348633
    4. ')' → logprob: -15.500001907348633
    5. ').' → logprob: -15.500001907348633
    6. '.pop' → logprob: -16.250001907348633
    7. '")[' → logprob: -16.875001907348633
    8. '')[' → logprob: -17.625001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '0' → logprob: -18.250001907348633

Token 430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '000' → logprob: -18.25
    4. '۰' → logprob: -18.875
    5. '   ' → logprob: -19.5
    6. '00' → logprob: -20.0
    7. '```' → logprob: -20.25
    8. '
' → logprob: -20.5
    9. '[' → logprob: -20.875
    10. '０' → logprob: -21.0

Token 431: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4174473285675049
    2. ']' → logprob: -1.5424473285675049
    3. '           ' → logprob: -2.792447328567505
    4. ')
' → logprob: -3.167447328567505
    5. ']
' → logprob: -4.292447090148926
    6. '       ' → logprob: -5.417447090148926
    7. 'if' → logprob: -6.292447090148926
    8. '<|end|>' → logprob: -6.417447090148926
    9. '               ' → logprob: -7.042447090148926
    10. '
' → logprob: -7.667447090148926

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010254278313368559
    2. '       ' → logprob: -7.126025199890137
    3. 'valid' → logprob: -9.376025199890137
    4. '   ' → logprob: -9.626025199890137
    5. 'if' → logprob: -10.251025199890137
    6. 'for' → logprob: -11.501025199890137
    7. ' for' → logprob: -11.876025199890137
    8. ' if' → logprob: -12.251025199890137
    9. '               ' → logprob: -12.376025199890137
    10. ' valid' → logprob: -12.876025199890137

Token 433: ' for' (ID: 395)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.716310977935791
    2. 'valid' → logprob: -1.091310977935791
    3. 'for' (adapté à ' for') → logprob: -2.091310977935791
    4. '           ' → logprob: -3.341310977935791
    5. 'flag' → logprob: -4.841310977935791
    6. 'if' → logprob: -5.216310977935791
    7. 'good' → logprob: -6.841310977935791
    8. 'correct' → logprob: -7.091310977935791
    9. ' ok' → logprob: -7.841310977935791
    10. 'is' → logprob: -7.841310977935791

Token 434: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14294499158859253
    2. ' x' → logprob: -2.0179450511932373
    3. 'xx' → logprob: -8.642945289611816
    4. '_x' → logprob: -9.892945289611816
    5. '(x' → logprob: -11.392945289611816
    6. ' xx' → logprob: -11.892945289611816
    7. '```' → logprob: -12.017945289611816
    8. ' ' → logprob: -12.392945289611816
    9. 'X' → logprob: -12.392945289611816
    10. 'cx' → logprob: -13.517945289611816

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3451433409936726e-05
    2. ',y' → logprob: -10.625033378601074
    3. ' ,' → logprob: -11.750033378601074
    4. 'y' → logprob: -14.875033378601074
    5. '_,' → logprob: -15.125033378601074
    6. '<|end|>' → logprob: -15.625033378601074
    7. ' in' → logprob: -15.750033378601074
    8. '‌,' → logprob: -16.75003433227539
    9. '<|end|>' → logprob: -16.87503433227539
    10. ',
' → logprob: -17.43753433227539

Token 436: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00023250321100931615
    2. ' y' → logprob: -8.375232696533203
    3. ',' → logprob: -13.625232696533203
    4. ',y' → logprob: -14.125232696533203
    5. '	y' → logprob: -18.625232696533203
    6. '<|end|>' → logprob: -18.750232696533203
    7. ' ' → logprob: -19.875232696533203
    8. 'Y' → logprob: -19.875232696533203
    9. ''y' → logprob: -20.000232696533203
    10. '   ' → logprob: -20.250232696533203

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ' ,' → logprob: -13.000007629394531
    3. ' in' → logprob: -13.250007629394531
    4. ',y' → logprob: -13.625007629394531
    5. ',h' → logprob: -13.625007629394531
    6. 'in' → logprob: -14.375007629394531
    7. ',H' → logprob: -14.875007629394531
    8. ',v' → logprob: -16.12500762939453
    9. ',user' → logprob: -16.87500762939453
    10. '<|end|>' → logprob: -17.00000762939453

Token 438: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0003003081073984504
    2. ' h' → logprob: -8.125300407409668
    3. '_h' → logprob: -13.500300407409668
    4. 'H' → logprob: -14.250300407409668
    5. ',' → logprob: -14.625300407409668
    6. ',h' → logprob: -14.875300407409668
    7. '	h' → logprob: -14.875300407409668
    8. 'hs' → logprob: -15.625300407409668
    9. '   ' → logprob: -15.875300407409668
    10. 'hh' → logprob: -16.25029945373535

Token 439: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16023418307304382
    2. ' in' → logprob: -1.9102342128753662
    3. ' ' → logprob: -12.785234451293945
    4. 'inthe' → logprob: -13.285234451293945
    5. 'inth' → logprob: -14.660234451293945
    6. '   ' → logprob: -14.660234451293945
    7. ',' → logprob: -14.785234451293945
    8. '	in' → logprob: -14.972734451293945
    9. 'inal' → logprob: -15.035234451293945
    10. '  ' → logprob: -15.160234451293945

Token 440: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.0024756586644798517
    2. ' XY' → logprob: -6.002475738525391
    3. 'X' → logprob: -17.62747573852539
    4. 'XYZ' → logprob: -17.62747573852539
    5. '
' → logprob: -18.87747573852539
    6. ' ' → logprob: -19.00247573852539
    7. '  ' → logprob: -20.00247573852539
    8. '   ' → logprob: -20.25247573852539
    9. 'xy' → logprob: -20.25247573852539
    10. 'ZY' → logprob: -20.25247573852539

Token 441: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -9.491498531133402e-06
    2. 'XY' → logprob: -12.000009536743164
    3. 'h' → logprob: -13.875009536743164
    4. 'X' → logprob: -14.250009536743164
    5. '[' → logprob: -15.125009536743164
    6. '```' → logprob: -15.437509536743164
    7. '
' → logprob: -16.187509536743164
    8. '   ' → logprob: -16.187509536743164
    9. '``' → logprob: -16.812509536743164
    10. 'HX' → logprob: -16.937509536743164

Token 442: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3344403803348541
    2. ':' → logprob: -1.3344403505325317
    3. ':
' → logprob: -4.084440231323242
    4. '           ' → logprob: -6.459440231323242
    5. ',' → logprob: -7.209440231323242
    6. '<|end|>' → logprob: -7.584440231323242
    7. '       ' → logprob: -8.209440231323242
    8. '	           ' → logprob: -8.709440231323242
    9. '<|end|>' → logprob: -9.209440231323242
    10. '):
' → logprob: -9.334440231323242

Token 443: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4748157858848572
    2. '               ' → logprob: -0.9748157858848572
    3. ' if' → logprob: -7.974815845489502
    4. '	           ' → logprob: -9.349815368652344
    5. '<|end|>' → logprob: -9.474815368652344
    6. '       ' → logprob: -9.724815368652344
    7. '	       ' → logprob: -10.224815368652344
    8. 'if' → logprob: -10.349815368652344
    9. '<|end|>' → logprob: -10.599815368652344
    10. ',' → logprob: -10.849815368652344

Token 444: ' expect' (ID: 2665)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11457160115242004
    2. ' if' → logprob: -2.6145715713500977
    3. '               ' → logprob: -3.3645715713500977
    4. '           ' → logprob: -8.114571571350098
    5. 'assert' → logprob: -9.239571571350098
    6. '                   ' → logprob: -10.989571571350098
    7. 't' → logprob: -11.614571571350098
    8. 'tmp' → logprob: -11.739571571350098
    9. '	if' → logprob: -11.989571571350098
    10. '                
' → logprob: -12.239571571350098

Token 445: ' =' (ID: 314)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0006856293766759336
    2. ' =' → logprob: -8.000685691833496
    3. '=' → logprob: -8.500685691833496
    4. 'H' → logprob: -9.500685691833496
    5. 'e' → logprob: -10.125685691833496
    6. 'd' → logprob: -10.750685691833496
    7. '_h' → logprob: -12.375685691833496
    8. '_' → logprob: -12.750685691833496
    9. '_H' → logprob: -13.875685691833496
    10. 'h' → logprob: -14.500685691833496

Token 446: ' vh' (ID: 65178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -5.526570384972729e-05
    2. 'vh' → logprob: -9.875055313110352
    3. ' max' → logprob: -12.750055313110352
    4. '   ' → logprob: -14.625055313110352
    5. '	max' → logprob: -15.500055313110352
    6. 'MAX' → logprob: -16.87505531311035
    7. '=max' → logprob: -17.12505531311035
    8. '(max' → logprob: -17.62505531311035
    9. '  ' → logprob: -18.50005531311035
    10. 'pos' → logprob: -18.87505531311035

Token 447: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.031206296756863594
    2. ' -' → logprob: -3.5312063694000244
    3. '-max' → logprob: -6.656206130981445
    4. 'max' → logprob: -9.531206130981445
    5. '-if' → logprob: -9.531206130981445
    6. '=max' → logprob: -12.156206130981445
    7. ' max' → logprob: -12.281206130981445
    8. '-s' → logprob: -13.531206130981445
    9. '-=' → logprob: -13.656206130981445
    10. 'if' → logprob: -13.781206130981445

Token 448: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.014230499044060707
    2. '(abs' → logprob: -4.264230728149414
    3. ' abs' → logprob: -9.639230728149414
    4. '(' → logprob: -13.264230728149414
    5. '.abs' → logprob: -16.764230728149414
    6. ' (' → logprob: -16.889230728149414
    7. '_abs' → logprob: -18.389230728149414
    8. '   ' → logprob: -18.764230728149414
    9. '```' → logprob: -19.014230728149414
    10. 'ab' → logprob: -19.389230728149414

Token 449: '(cx' (ID: 116103)
  Prédit: '(cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -5.931863051955588e-05
    2. '(x' → logprob: -9.750059127807617
    3. '(' → logprob: -14.000059127807617
    4. 'cx' → logprob: -16.125059127807617
    5. '(c' → logprob: -18.750059127807617
    6. '.cx' → logprob: -19.000059127807617
    7. '(nx' → logprob: -20.000059127807617
    8. 'x' → logprob: -20.375059127807617
    9. '((' → logprob: -21.125059127807617
    10. ' cx' → logprob: -21.875059127807617

Token 450: '-x' (ID: 12651)
  Prédit: '-x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.08936154842376709
    2. ' -' → logprob: -2.7143616676330566
    3. '-' → logprob: -3.9643616676330566
    4. '(x' → logprob: -9.089361190795898
    5. 'x' → logprob: -9.339361190795898
    6. '-c' → logprob: -10.589361190795898
    7. '<|end|>' → logprob: -11.214361190795898
    8. '[x' → logprob: -12.339361190795898
    9. '-python' → logprob: -13.339361190795898
    10. '-xs' → logprob: -13.339361190795898

Token 451: ')' (ID: 8)
  Prédit: ')-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.3900243043899536
    2. ')' → logprob: -1.1400243043899536
    3. ')+' → logprob: -5.765024185180664
    4. ' )' → logprob: -11.765024185180664
    5. ')-(' → logprob: -12.515024185180664
    6. '+' → logprob: -15.015024185180664
    7. ' -' → logprob: -15.515024185180664
    8. ',' → logprob: -15.890024185180664
    9. ')
' → logprob: -15.890024185180664
    10. ')—' → logprob: -16.140024185180664

Token 452: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6996870040893555
    2. ' -' → logprob: -0.6996870040893555
    3. '-c' → logprob: -5.3246870040893555
    4. '+' → logprob: -8.199687004089355
    5. '-y' → logprob: -8.199687004089355
    6. '-ay' → logprob: -8.324687004089355
    7. '<|end|>' → logprob: -8.449687004089355
    8. '()-' → logprob: -8.699687004089355
    9. '-js' → logprob: -9.699687004089355
    10. ')' → logprob: -10.449687004089355

Token 453: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.030381495133042336
    2. 'cy' → logprob: -3.530381441116333
    3. '(c' → logprob: -8.155381202697754
    4. '(abs' → logprob: -8.405381202697754
    5. ' abs' → logprob: -9.030381202697754
    6. '|' → logprob: -16.28038215637207
    7. '.abs' → logprob: -16.53038215637207
    8. ' cy' → logprob: -17.28038215637207
    9. '(y' → logprob: -17.65538215637207
    10. '_abs' → logprob: -18.28038215637207

Token 454: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.9981420336989686e-05
    2. 'cy' → logprob: -11.125020027160645
    3. 'abs' → logprob: -13.000020027160645
    4. '(abs' → logprob: -13.750020027160645
    5. ' (' → logprob: -13.875020027160645
    6. '(C' → logprob: -15.250020027160645
    7. '(cx' → logprob: -15.250020027160645
    8. '((' → logprob: -16.250019073486328
    9. '(' → logprob: -16.750019073486328
    10. '(y' → logprob: -16.875019073486328

Token 455: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.084206375409849e-05
    2. 'cy' → logprob: -10.250041007995605
    3. '(y' → logprob: -13.375041007995605
    4. 'x' → logprob: -14.000041007995605
    5. '-y' → logprob: -14.375041007995605
    6. '_y' → logprob: -14.500041007995605
    7. 'ay' → logprob: -15.125041007995605
    8. ',y' → logprob: -15.375041007995605
    9. 'yc' → logprob: -15.750041007995605
    10. '[y' → logprob: -15.750041007995605

Token 456: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.023352744057774544
    2. 'y' → logprob: -3.773352861404419
    3. 'cy' → logprob: -10.14835262298584
    4. '-' → logprob: -10.27335262298584
    5. '```' → logprob: -12.02335262298584
    6. '[y' → logprob: -12.39835262298584
    7. '	y' → logprob: -12.52335262298584
    8. '(y' → logprob: -12.52335262298584
    9. ' -' → logprob: -12.52335262298584
    10. '-c' → logprob: -12.77335262298584

Token 457: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3870413899421692
    2. ')' → logprob: -1.1370413303375244
    3. ')
' → logprob: -9.762041091918945
    4. '               ' → logprob: -11.012041091918945
    5. '<|end|>' → logprob: -11.137041091918945
    6. ')

' → logprob: -11.262041091918945
    7. ')return' → logprob: -11.262041091918945
    8. 'if' → logprob: -11.262041091918945
    9. '           ' → logprob: -11.887041091918945
    10. ' )
' → logprob: -12.012041091918945

Token 458: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001293808571062982
    2. '<|end|>' → logprob: -7.376293659210205
    3. '	           ' → logprob: -9.001294136047363
    4. '			' → logprob: -9.001294136047363
    5. '           ' → logprob: -9.126294136047363
    6. '		       ' → logprob: -9.126294136047363
    7. ' if' → logprob: -9.876294136047363
    8. '<|end|>' → logprob: -10.126294136047363
    9. '	       ' → logprob: -10.501294136047363
    10. '       ' → logprob: -11.251294136047363

Token 459: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04209210351109505
    2. '               ' → logprob: -3.2920920848846436
    3. ' if' → logprob: -5.542092323303223
    4. '           ' → logprob: -9.042092323303223
    5. '       ' → logprob: -13.292092323303223
    6. '	if' → logprob: -13.417092323303223
    7. '   ' → logprob: -14.167092323303223
    8. ';if' → logprob: -14.292092323303223
    9. '	           ' → logprob: -15.417092323303223
    10. ' ' → logprob: -15.417092323303223

Token 460: ' expect' (ID: 2665)
  Prédit: ' expect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expect' → logprob: -0.29894983768463135
    2. 'expect' → logprob: -1.4239498376846313
    3. '(expect' → logprob: -4.173949718475342
    4. 'h' → logprob: -6.673949718475342
    5. ' h' → logprob: -7.298949718475342
    6. ' not' → logprob: -8.4239501953125
    7. ' (' → logprob: -10.5489501953125
    8. 'not' → logprob: -11.0489501953125
    9. '	expect' → logprob: -11.2989501953125
    10. '(h' → logprob: -11.4239501953125

Token 461: ' <' (ID: 464)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.11900707334280014
    2. ' !=' → logprob: -2.244007110595703
    3. '<' → logprob: -5.119007110595703
    4. ' <' → logprob: -9.369007110595703
    5. '==' → logprob: -10.369007110595703
    6. '>=' → logprob: -10.869007110595703
    7. '<=' → logprob: -11.369007110595703
    8. '()!=' → logprob: -12.119007110595703
    9. '<int' → logprob: -12.369007110595703
    10. '!=(' → logprob: -12.869007110595703

Token 462: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023107275774236768
    2. ' ' → logprob: -8.37523078918457
    3. '=' → logprob: -15.12523078918457
    4. '۰' → logprob: -16.25023078918457
    5. '1' → logprob: -17.50023078918457
    6. '-' → logprob: -18.50023078918457
    7. '０' → logprob: -19.00023078918457
    8. 'zero' → logprob: -19.18773078918457
    9. '   ' → logprob: -19.56273078918457
    10. '>' → logprob: -19.56273078918457

Token 463: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1398757123970427e-05
    2. 'h' → logprob: -11.750011444091797
    3. ' ' → logprob: -12.875011444091797
    4. '-' → logprob: -14.375011444091797
    5. '۰' → logprob: -16.125011444091797
    6. '=' → logprob: -16.250011444091797
    7. '1' → logprob: -17.000011444091797
    8. ' h' → logprob: -17.875011444091797
    9. '   ' → logprob: -18.500011444091797
    10. '
' → logprob: -18.562511444091797

Token 464: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.02550516277551651
    2. '                   ' → logprob: -4.275505065917969
    3. 'or' → logprob: -5.150505065917969
    4. '               ' → logprob: -5.400505065917969
    5. '	or' → logprob: -8.150505065917969
    6. '                       ' → logprob: -8.275505065917969
    7. '<|end|>' → logprob: -9.525505065917969
    8. '           ' → logprob: -9.525505065917969
    9. '              ' → logprob: -10.025505065917969
    10. '                  ' → logprob: -10.025505065917969

Token 465: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013315484393388033
    2. '               ' → logprob: -7.251331329345703
    3. '                       ' → logprob: -7.751331329345703
    4. 'break' → logprob: -9.126331329345703
    5. '                  ' → logprob: -10.376331329345703
    6. '                           ' → logprob: -11.251331329345703
    7. ' break' → logprob: -11.626331329345703
    8. '                 ' → logprob: -11.751331329345703
    9. '           ' → logprob: -12.001331329345703
    10. '                    ' → logprob: -12.751331329345703

Token 466: ' expect' (ID: 2665)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.00038288687937892973
    2. ' break' → logprob: -8.000382423400879
    3. '                   ' → logprob: -10.000382423400879
    4. '                       ' → logprob: -13.375382423400879
    5. '	break' → logprob: -15.500382423400879
    6. '               ' → logprob: -15.750382423400879
    7. '   ' → logprob: -17.750383377075195
    8. '           ' → logprob: -19.000383377075195
    9. 'Break' → logprob: -19.375383377075195
    10. '       ' → logprob: -19.500383377075195

Token 467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10446926206350327
    2. ' =' → logprob: -3.2294692993164062
    3. '==' → logprob: -3.9794692993164062
    4. '<|end|>' → logprob: -4.104469299316406
    5. '	break' → logprob: -5.229469299316406
    6. 'break' → logprob: -5.229469299316406
    7. '!=' → logprob: -5.604469299316406
    8. ' ==' → logprob: -5.854469299316406
    9. '=False' → logprob: -5.979469299316406
    10. ' ' → logprob: -6.854469299316406

Token 468: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06343585252761841
    2. '-' → logprob: -2.8134357929229736
    3. 'None' → logprob: -7.313436031341553
    4. ' ' → logprob: -7.688436031341553
    5. ' -' → logprob: -9.188435554504395
    6. '-inf' → logprob: -9.313435554504395
    7. 'False' → logprob: -10.188435554504395
    8. 'INF' → logprob: -10.438435554504395
    9. '   ' → logprob: -10.938435554504395
    10. '-INF' → logprob: -11.313435554504395

Token 469: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001394161517964676
    2. '-' → logprob: -9.000139236450195
    3. 'None' → logprob: -11.875139236450195
    4. ' ' → logprob: -12.625139236450195
    5. 'float' → logprob: -12.750139236450195
    6. 'INF' → logprob: -13.500139236450195
    7. 'False' → logprob: -14.875139236450195
    8. ' -' → logprob: -15.375139236450195
    9. '-inf' → logprob: -16.125139236450195
    10. '-INF' → logprob: -16.250139236450195

Token 470: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004427051462698728
    2. '                   ' → logprob: -8.000442504882812
    3. '           ' → logprob: -10.500442504882812
    4. '<|end|>' → logprob: -10.500442504882812
    5. '                
' → logprob: -11.125442504882812
    6. '                ' → logprob: -11.125442504882812
    7. '              ' → logprob: -11.625442504882812
    8. '       ' → logprob: -13.500442504882812
    9. '                    
' → logprob: -13.625442504882812
    10. '                       ' → logprob: -13.750442504882812

Token 471: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018744789122138172
    2. '                   ' → logprob: -9.000187873840332
    3. '           ' → logprob: -10.125187873840332
    4. '              ' → logprob: -12.250187873840332
    5. '<|end|>' → logprob: -12.375187873840332
    6. 'else' → logprob: -12.750187873840332
    7. '                
' → logprob: -12.875187873840332
    8. '       ' → logprob: -13.250187873840332
    9. '                ' → logprob: -13.500187873840332
    10. '                       ' → logprob: -14.125187873840332

Token 472: ' au' (ID: 2791)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15438467264175415
    2. '                   ' → logprob: -2.0293846130371094
    3. 'break' → logprob: -5.404384613037109
    4. ' break' → logprob: -6.029384613037109
    5. 'continue' → logprob: -6.404384613037109
    6. '           ' → logprob: -6.904384613037109
    7. ' continue' → logprob: -7.404384613037109
    8. '                       ' → logprob: -7.529384613037109
    9. 'if' → logprob: -8.27938461303711
    10. '                ' → logprob: -8.90438461303711

Token 473: ' cas' (ID: 2108)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.20618349313735962
    2. 'break' → logprob: -2.956183433532715
    3. 'contin' → logprob: -2.956183433532715
    4. 'pass' → logprob: -3.331183433532715
    5. '               ' → logprob: -4.331183433532715
    6. '           ' → logprob: -4.956183433532715
    7. '```' → logprob: -5.081183433532715
    8. '                   ' → logprob: -5.456183433532715
    9. 'continu' → logprob: -5.456183433532715
    10. ' continue' → logprob: -5.831183433532715

Token 474: ' où' (ID: 15113)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09775476157665253
    2. '                   ' → logprob: -2.597754716873169
    3. '           ' → logprob: -5.472754955291748
    4. 'où' → logprob: -5.597754955291748
    5. 'd' → logprob: -6.472754955291748
    6. '                ' → logprob: -6.722754955291748
    7. ' où' → logprob: -6.847754955291748
    8. '                       ' → logprob: -7.222754955291748
    9. '                    
' → logprob: -7.347754955291748
    10. 'elif' → logprob: -7.347754955291748

Token 475: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015794939827173948
    2. '<|end|>' → logprob: -6.876579284667969
    3. '           ' → logprob: -8.501579284667969
    4. '                   ' → logprob: -8.501579284667969
    5. ')' → logprob: -10.251579284667969
    6. '              ' → logprob: -10.626579284667969
    7. '<|end|>' → logprob: -11.376579284667969
    8. '                
' → logprob: -11.501579284667969
    9. 'else' → logprob: -11.501579284667969
    10. ' else' → logprob: -11.751579284667969

Token 476: ' je' (ID: 1264)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7010324597358704
    2. '                   ' → logprob: -0.7010324597358704
    3. '           ' → logprob: -5.701032638549805
    4. '       ' → logprob: -6.576032638549805
    5. '                       ' → logprob: -6.701032638549805
    6. '<|end|>' → logprob: -6.951032638549805
    7. ' continue' → logprob: -8.326032638549805
    8. 'continue' → logprob: -8.576032638549805
    9. '                ' → logprob: -9.201032638549805
    10. '                    ' → logprob: -10.076032638549805

Token 477: ' force' (ID: 9578)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7030664682388306
    2. '                   ' → logprob: -1.2030664682388306
    3. ' continue' → logprob: -2.078066349029541
    4. '               ' → logprob: -2.953066349029541
    5. '                       ' → logprob: -5.078066349029541
    6. 'break' → logprob: -5.078066349029541
    7. '           ' → logprob: -5.328066349029541
    8. 'contin' → logprob: -6.703066349029541
    9. '#' → logprob: -6.828066349029541
    10. 's' → logprob: -7.078066349029541

Token 478: ' à' (ID: 1221)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12731000781059265
    2. '                   ' → logprob: -2.252310037612915
    3. '                ' → logprob: -5.627309799194336
    4. ' else' → logprob: -6.002309799194336
    5. '           ' → logprob: -6.127309799194336
    6. 'else' → logprob: -6.252309799194336
    7. '<|end|>' → logprob: -7.127309799194336
    8. '                       ' → logprob: -7.377309799194336
    9. '                    ' → logprob: -8.002309799194336
    10. '       ' → logprob: -8.002309799194336

Token 479: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000968987587839365
    2. 'z' → logprob: -8.625968933105469
    3. 'zero' → logprob: -8.625968933105469
    4. '```' → logprob: -8.625968933105469
    5. 'contin' → logprob: -8.875968933105469
    6. '<|end|>' → logprob: -9.250968933105469
    7. 'continue' → logprob: -9.500968933105469
    8. ' ' → logprob: -10.375968933105469
    9. 'max' → logprob: -11.000968933105469
    10. 'expect' → logprob: -12.000968933105469

Token 480: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011291404953226447
    2. 'expect' → logprob: -7.626129150390625
    3. 'zero' → logprob: -8.626129150390625
    4. '```' → logprob: -8.876129150390625
    5. 'max' → logprob: -9.376129150390625
    6. 'continue' → logprob: -9.876129150390625
    7. ' ' → logprob: -9.876129150390625
    8. 'z' → logprob: -10.751129150390625
    9. 'contin' → logprob: -10.876129150390625
    10. 'att' → logprob: -11.376129150390625

Token 481: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.302704761968926e-05
    2. '           ' → logprob: -10.375073432922363
    3. '<|end|>' → logprob: -10.625073432922363
    4. '              ' → logprob: -12.375073432922363
    5. 'elif' → logprob: -13.000073432922363
    6. 'if' → logprob: -13.000073432922363
    7. '```' → logprob: -13.250073432922363
    8. '                   ' → logprob: -13.250073432922363
    9. 'else' → logprob: -13.500073432922363
    10. '<|end|>' → logprob: -14.125073432922363

Token 482: ' mais' (ID: 2899)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25468364357948303
    2. '                   ' → logprob: -1.5046836137771606
    3. '           ' → logprob: -6.254683494567871
    4. '                       ' → logprob: -8.504683494567871
    5. '       ' → logprob: -8.754683494567871
    6. '                    
' → logprob: -9.129683494567871
    7. '                ' → logprob: -9.629683494567871
    8. 'continue' → logprob: -9.754683494567871
    9. ' continue' → logprob: -9.879683494567871
    10. '                
' → logprob: -10.379683494567871

Token 483: ' est' (ID: 893)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.15842889249324799
    2. 'continue' → logprob: -2.033428907394409
    3. ' break' → logprob: -5.53342866897583
    4. '                   ' → logprob: -5.53342866897583
    5. '               ' → logprob: -5.90842866897583
    6. '#' → logprob: -6.03342866897583
    7. ' continue' → logprob: -6.90842866897583
    8. '           ' → logprob: -7.78342866897583
    9. '...' → logprob: -8.283429145812988
    10. 'pass' → logprob: -8.533429145812988

Token 484: '-ce' (ID: 35404)
  Prédit: '-ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ce' → logprob: -0.11022018641233444
    2. ' ce' → logprob: -2.485220193862915
    3. '               ' → logprob: -5.110219955444336
    4. '                   ' → logprob: -5.985219955444336
    5. 'elif' → logprob: -5.985219955444336
    6. '-' → logprob: -5.985219955444336
    7. 'ce' → logprob: -6.110219955444336
    8. '                ' → logprob: -6.610219955444336
    9. ' not' → logprob: -7.235219955444336
    10. '                    ' → logprob: -7.485219955444336

Token 485: ' nécessaire' (ID: 43098)
  Prédit: '-ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-ce' → logprob: -0.28754618763923645
    2. '-il' → logprob: -2.162546157836914
    3. 'ce' → logprob: -2.412546157836914
    4. '               ' → logprob: -4.162546157836914
    5. '           ' → logprob: -5.412546157836914
    6. 't' → logprob: -5.412546157836914
    7. '                   ' → logprob: -5.662546157836914
    8. '-' → logprob: -5.912546157836914
    9. 'just' → logprob: -6.037546157836914
    10. '   ' → logprob: -6.412546157836914

Token 486: ' ?
' (ID: 19740)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030551888048648834
    2. '<|end|>' → logprob: -6.378055095672607
    3. '                   ' → logprob: -6.753055095672607
    4. '           ' → logprob: -9.378055572509766
    5. '<|end|>' → logprob: -10.878055572509766
    6. '              ' → logprob: -11.253055572509766
    7. '                ' → logprob: -11.378055572509766
    8. '       ' → logprob: -12.003055572509766
    9. 'elif' → logprob: -12.128055572509766
    10. 'else' → logprob: -12.253055572509766

Token 487: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015637811738997698
    2. '                   ' → logprob: -6.751563549041748
    3. '           ' → logprob: -8.501564025878906
    4. '                
' → logprob: -10.126564025878906
    5. ' else' → logprob: -10.626564025878906
    6. 'else' → logprob: -10.876564025878906
    7. '<|end|>' → logprob: -11.001564025878906
    8. '                       ' → logprob: -11.501564025878906
    9. '       ' → logprob: -11.501564025878906
    10. '                ' → logprob: -11.501564025878906

Token 488: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0823582261800766
    2. 'if' (adapté à ' if') → logprob: -2.7073581218719482
    3. ' if' → logprob: -4.582358360290527
    4. '           ' → logprob: -6.207358360290527
    5. ' ' → logprob: -10.582358360290527
    6. '       ' → logprob: -10.832358360290527
    7. '   ' → logprob: -11.707358360290527
    8. '	if' → logprob: -11.832358360290527
    9. '                   ' → logprob: -12.082358360290527
    10. '	           ' → logprob: -12.082358360290527

Token 489: ' expect' (ID: 2665)
  Prédit: 'expect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expect' → logprob: -0.3870496153831482
    2. ' expect' → logprob: -1.137049674987793
    3. 'h' → logprob: -9.137049674987793
    4. ' h' → logprob: -10.262049674987793
    5. '(expect' → logprob: -10.637049674987793
    6. '	expect' → logprob: -11.762049674987793
    7. ' ' → logprob: -13.387049674987793
    8. '   ' → logprob: -13.762049674987793
    9. '  ' → logprob: -14.637049674987793
    10. 'expected' → logprob: -15.887049674987793

Token 490: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.002190829487517476
    2. ' !=' → logprob: -6.127191066741943
    3. '()!=' → logprob: -13.377190589904785
    4. ']!=' → logprob: -13.627190589904785
    5. '!==' → logprob: -14.252190589904785
    6. '!=(' → logprob: -14.377190589904785
    7. '!=-' → logprob: -14.502190589904785
    8. ')!=' → logprob: -14.502190589904785
    9. '==' → logprob: -14.627190589904785
    10. '!' → logprob: -15.502190589904785

Token 491: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -5.836499985889532e-05
    2. ' h' → logprob: -9.7500581741333
    3. '	h' → logprob: -17.250059127807617
    4. '   ' → logprob: -19.250059127807617
    5. 'int' → logprob: -19.250059127807617
    6. 'hs' → logprob: -19.375059127807617
    7. '
' → logprob: -19.375059127807617
    8. '<h' → logprob: -20.375059127807617
    9. '(h' → logprob: -20.500059127807617
    10. '[h' → logprob: -20.500059127807617

Token 492: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.024545514956116676
    2. ':
' → logprob: -4.649545669555664
    3. ':' → logprob: -4.774545669555664
    4. '               ' → logprob: -5.274545669555664
    5. '           ' → logprob: -7.649545669555664
    6. '                       ' → logprob: -8.024545669555664
    7. ',' → logprob: -9.649545669555664
    8. '<|end|>' → logprob: -10.024545669555664
    9. '<|end|>' → logprob: -10.149545669555664
    10. '		           ' → logprob: -10.149545669555664

Token 493: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001375710591673851
    2. 'break' → logprob: -6.751375675201416
    3. '                       ' → logprob: -9.251376152038574
    4. ' break' → logprob: -10.001376152038574
    5. '		           ' → logprob: -10.876376152038574
    6. '               ' → logprob: -11.251376152038574
    7. '	break' → logprob: -11.376376152038574
    8. '	               ' → logprob: -12.501376152038574
    9. '   ' → logprob: -12.626376152038574
    10. '			       ' → logprob: -12.876376152038574

Token 494: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0015481874579563737
    2. '                   ' → logprob: -6.5015482902526855
    3. '	break' → logprob: -11.001547813415527
    4. ' break' → logprob: -11.001547813415527
    5. '                       ' → logprob: -11.376547813415527
    6. '   ' → logprob: -14.626547813415527
    7. '               ' → logprob: -14.876547813415527
    8. 'Break' → logprob: -16.626548767089844
    9. '           ' → logprob: -17.001548767089844
    10. '       ' → logprob: -17.251548767089844

Token 495: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3521140217781067
    2. '       ' → logprob: -1.602113962173462
    3. 'else' → logprob: -2.352113962173462
    4. '   ' → logprob: -9.477113723754883
    5. ' else' → logprob: -10.477113723754883
    6. '               ' → logprob: -11.352113723754883
    7. '```' → logprob: -11.852113723754883
    8. 'None' → logprob: -12.852113723754883
    9. '          ' → logprob: -12.852113723754883
    10. '​' → logprob: -12.977113723754883

Token 496: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7642534375190735
    2. '       ' → logprob: -1.0142533779144287
    3. 'else' → logprob: -1.7642533779144287
    4. '   ' → logprob: -9.014253616333008
    5. ' else' → logprob: -9.389253616333008
    6. '               ' → logprob: -10.014253616333008
    7. '```' → logprob: -10.764253616333008
    8. '#else' → logprob: -11.889253616333008
    9. 'None' → logprob: -12.014253616333008
    10. '          ' → logprob: -12.139253616333008

Token 497: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.576382577419281
    2. 'else' (adapté à ' else') → logprob: -0.826382577419281
    3. ' else' → logprob: -7.951382637023926
    4. '   ' → logprob: -9.701382637023926
    5. '           ' → logprob: -11.076382637023926
    6. '	else' → logprob: -12.326382637023926
    7. '}else' → logprob: -12.826382637023926
    8. '#else' → logprob: -13.326382637023926
    9. '```' → logprob: -13.826382637023926
    10. '_else' → logprob: -14.576382637023926

Token 498: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31453782320022583
    2. ':
' → logprob: -1.314537763595581
    3. '           ' → logprob: -6.93953800201416
    4. '               ' → logprob: -9.18953800201416
    5. ' :' → logprob: -9.18953800201416
    6. ' :
' → logprob: -9.81453800201416
    7. '):
' → logprob: -11.31453800201416
    8. '       ' → logprob: -11.56453800201416
    9. '{' → logprob: -11.93953800201416
    10. '```' → logprob: -12.56453800201416

Token 499: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7445791959762573
    2. 'print' → logprob: -0.7445791959762573
    3. ' print' → logprob: -2.994579315185547
    4. '           ' → logprob: -9.869579315185547
    5. '```' → logprob: -11.244579315185547
    6. '                   ' → logprob: -12.994579315185547
    7. '#print' → logprob: -13.244579315185547
    8. '       ' → logprob: -13.244579315185547
    9. '                       ' → logprob: -14.244579315185547
    10. '#' → logprob: -14.369579315185547

Token 500: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.7432603272027336e-06
    2. ' print' → logprob: -13.500001907348633
    3. '           ' → logprob: -15.500001907348633
    4. '               ' → logprob: -18.500001907348633
    5. '       ' → logprob: -20.500001907348633
    6. '   ' → logprob: -20.875001907348633
    7. '	print' → logprob: -22.875001907348633
    8. '#print' → logprob: -23.750001907348633
    9. '```' → logprob: -24.375001907348633
    10. ' ' → logprob: -25.000001907348633

Token 501: '(cx' (ID: 116103)
  Prédit: '(cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -1.259079363080673e-05
    2. 'cx' → logprob: -11.750012397766113
    3. '(' → logprob: -13.000012397766113
    4. '(f' → logprob: -13.000012397766113
    5. 'f' → logprob: -16.62501335144043
    6. '((' → logprob: -17.62501335144043
    7. '(x' → logprob: -18.00001335144043
    8. '.cx' → logprob: -18.25001335144043
    9. ' (' → logprob: -18.50001335144043
    10. ' cx' → logprob: -18.75001335144043

Token 502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016635251813568175
    2. ' ,' → logprob: -8.750165939331055
    3. ',end' → logprob: -12.125165939331055
    4. ',c' → logprob: -13.875165939331055
    5. ',
' → logprob: -14.375165939331055
    6. ',y' → logprob: -14.625165939331055
    7. ',v' → logprob: -16.125165939331055
    8. ' ' → logprob: -16.500165939331055
    9. '_,' → logprob: -17.000165939331055
    10. 'end' → logprob: -17.500165939331055

Token 503: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -5.512236498361744e-07
    2. ' cy' → logprob: -14.500000953674316
    3. 'cyj' → logprob: -18.625
    4. '.cy' → logprob: -20.25
    5. 'Cy' → logprob: -22.25
    6. ' ' → logprob: -23.0
    7. '   ' → logprob: -23.0
    8. 'cycl' → logprob: -24.125
    9. 'cych' → logprob: -24.5
    10. 'cyan' → logprob: -24.5

Token 504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004934602184221148
    2. ',v' → logprob: -8.000493049621582
    3. ' ,' → logprob: -9.375493049621582
    4. 'vh' → logprob: -9.875493049621582
    5. ' vh' → logprob: -10.750493049621582
    6. ' VH' → logprob: -15.625493049621582
    7. ',int' → logprob: -16.0004940032959
    8. ',end' → logprob: -18.0004940032959
    9. 'VH' → logprob: -18.1254940032959
    10. ',
' → logprob: -18.1254940032959

Token 505: ' vh' (ID: 65178)
  Prédit: 'vh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vh' → logprob: -4.4849443838757e-06
    2. ' vh' → logprob: -12.500004768371582
    3. 'poss' → logprob: -14.125004768371582
    4. 'pos' → logprob: -18.000003814697266
    5. 'vw' → logprob: -18.875003814697266
    6. 'int' → logprob: -19.125003814697266
    7. 'vk' → logprob: -19.125003814697266
    8. '   ' → logprob: -19.500003814697266
    9. 'vx' → logprob: -19.500003814697266
    10. 'v' → logprob: -19.625003814697266

Token 506: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02380683459341526
    2. ')
' → logprob: -3.7738068103790283
    3. '               ' → logprob: -7.648807048797607
    4. '           ' → logprob: -10.52380657196045
    5. ')return' → logprob: -10.64880657196045
    6. '                   ' → logprob: -11.27380657196045
    7. '<|end|>' → logprob: -12.27380657196045
    8. ')
' → logprob: -12.52380657196045
    9. '                       ' → logprob: -13.14880657196045
    10. '),' → logprob: -13.39880657196045

Token 507: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.08707976341247559
    2. 'break' → logprob: -2.5870797634124756
    3. '               ' → logprob: -4.837080001831055
    4. 'import' → logprob: -9.337080001831055
    5. ' exit' → logprob: -9.462080001831055
    6. 'sys' → logprob: -10.587080001831055
    7. 'quit' → logprob: -11.087080001831055
    8. ' break' → logprob: -11.337080001831055
    9. 'return' → logprob: -12.587080001831055
    10. '	exit' → logprob: -13.962080001831055

Token 509: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 510: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 511: ' Si' (ID: 7832)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: ' on' (ID: 402)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5888127684593201
    2. '#' → logprob: -1.2138128280639648
    3. 'None' → logprob: -2.838812828063965
    4. ' True' → logprob: -3.213812828063965
    5. '__' → logprob: -4.463812828063965
    6. 'No' → logprob: -4.588812828063965
    7. 'not' → logprob: -5.088812828063965
    8. 'False' → logprob: -5.588812828063965
    9. 'no' → logprob: -6.088812828063965
    10. 'v' → logprob: -6.088812828063965

Token 513: ' arrive' (ID: 18338)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4809225797653198
    2. 'arr' → logprob: -1.8559225797653198
    3. 'else' → logprob: -1.9809225797653198
    4. '#' → logprob: -2.1059226989746094
    5. '...' → logprob: -2.6059226989746094
    6. 'reach' → logprob: -3.1059226989746094
    7. ''arrive' → logprob: -3.2309226989746094
    8. 'print' → logprob: -3.3559226989746094
    9. 'vient' → logprob: -3.7309226989746094
    10. ' arrive' → logprob: -3.8559226989746094

Token 514: ' là' (ID: 8052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7482705116271973
    2. 'au' → logprob: -1.9982705116271973
    3. 'à' → logprob: -2.6232705116271973
    4. 'ici' → logprob: -2.6232705116271973
    5. 'pas' → logprob: -2.7482705116271973
    6. 'auc' → logprob: -3.1232705116271973
    7. '#' → logprob: -3.4982705116271973
    8. 'jus' → logprob: -4.373270511627197
    9. 'v' → logprob: -4.498270511627197
    10. '()' → logprob: -4.623270511627197

Token 515: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04863709583878517
    2. '#' → logprob: -4.1736369132995605
    3. 'NO' → logprob: -4.6736369132995605
    4. 'No' → logprob: -5.2986369132995605
    5. ' NO' → logprob: -5.2986369132995605
    6. ',' → logprob: -5.6736369132995605
    7. 'pass' → logprob: -5.9236369132995605
    8. ':' → logprob: -6.1736369132995605
    9. ' print' → logprob: -6.7986369132995605
    10. 'raise' → logprob: -7.4236369132995605

Token 516: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4883749485015869
    2. 'pass' → logprob: -0.9883749485015869
    3. '#' → logprob: -5.238374710083008
    4. 'No' → logprob: -5.363374710083008
    5. 'NO' → logprob: -6.363374710083008
    6. ' pass' → logprob: -6.488374710083008
    7. '   ' → logprob: -7.863374710083008
    8. ' print' → logprob: -8.988374710083008
    9. 'raise' → logprob: -9.113374710083008
    10. ' No' → logprob: -9.238374710083008

Token 517: ''est' (ID: 6616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5240954160690308
    2. '#' → logprob: -1.1490954160690308
    3. 'n' → logprob: -3.7740955352783203
    4. 'est' → logprob: -4.27409553527832
    5. '```' → logprob: -4.27409553527832
    6. ' print' → logprob: -4.52409553527832
    7. 'st' → logprob: -4.77409553527832
    8. ''est' → logprob: -5.52409553527832
    9. ' n' → logprob: -5.64909553527832
    10. '#print' → logprob: -6.52409553527832

Token 518: ' qu' (ID: 474)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.15333148837089539
    2. 'que' → logprob: -2.0283315181732178
    3. '#' → logprob: -5.403331279754639
    4. 'qu' → logprob: -6.028331279754639
    5. 'pas' → logprob: -6.778331279754639
    6. 'pass' → logprob: -7.278331279754639
    7. 'Impossible' → logprob: -7.403331279754639
    8. 'inut' → logprob: -8.403331756591797
    9. 'quel' → logprob: -9.278331756591797
    10. 'print' → logprob: -9.403331756591797

Token 519: ''il' (ID: 14683)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.4329792261123657
    2. 'on' → logprob: -1.6829792261123657
    3. 'qu' → logprob: -2.182979106903076
    4. ''il' → logprob: -4.307979106903076
    5. 'il' → logprob: -4.932979106903076
    6. 'im' → logprob: -5.057979106903076
    7. 'auc' → logprob: -5.182979106903076
    8. ''on' → logprob: -5.307979106903076
    9. 'e' → logprob: -5.557979106903076
    10. '#' → logprob: -5.682979106903076

Token 520: ' y' (ID: 342)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0926104187965393
    2. ' n' → logprob: -2.4676103591918945
    3. 'a' → logprob: -6.2176103591918945
    4. 'y' → logprob: -6.8426103591918945
    5. ' y' → logprob: -9.342610359191895
    6. 'n't' → logprob: -9.717610359191895
    7. 'na' → logprob: -9.717610359191895
    8. 'ny' → logprob: -9.842610359191895
    9. 'est' → logprob: -10.217610359191895
    10. '```' → logprob: -10.342610359191895

Token 521: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04506900534033775
    2. ' a' → logprob: -3.6700689792633057
    3. 'avait' → logprob: -4.795069217681885
    4. ' avait' → logprob: -4.920069217681885
    5. 'n' → logprob: -6.045069217681885
    6. ''avait' → logprob: -8.420068740844727
    7. ''a' → logprob: -8.545068740844727
    8. '```' → logprob: -9.795068740844727
    9. 'n't' → logprob: -10.170068740844727
    10. ' n' → logprob: -10.170068740844727

Token 522: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.12534146010875702
    2. 'un' → logprob: -2.3753414154052734
    3. 'auc' → logprob: -4.000341415405273
    4. 'eu' → logprob: -6.500341415405273
    5. 'pas' → logprob: -6.625341415405273
    6. ' une' → logprob: -6.625341415405273
    7. 'er' → logprob: -6.875341415405273
    8. ' un' → logprob: -8.000341415405273
    9. 'prob' → logprob: -8.750341415405273
    10. '```' → logprob: -9.000341415405273

Token 523: ' souci' (ID: 126951)
  Prédit: ' problème'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problème' → logprob: -1.2085269689559937
    2. 'pro' → logprob: -1.3335269689559937
    3. 'bug' → logprob: -1.9585269689559937
    4. 'proble' → logprob: -1.9585269689559937
    5. 'problem' → logprob: -2.583527088165283
    6. 'pb' → logprob: -2.708527088165283
    7. ' bug' → logprob: -5.458527088165283
    8. ' probleme' → logprob: -6.208527088165283
    9. ' pb' → logprob: -6.458527088165283
    10. 'no' → logprob: -6.958527088165283

Token 524: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 525: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 526: ' verra' (ID: 159395)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6216139197349548
    2. 'print' → logprob: -0.8716139197349548
    3. '#print' → logprob: -3.8716139793395996
    4. ' print' → logprob: -4.9966139793396
    5. '   ' → logprob: -4.9966139793396
    6. 'pass' → logprob: -5.7466139793396
    7. 'raise' → logprob: -6.6216139793396
    8. 'exit' → logprob: -6.6216139793396
    9. ' #' → logprob: -6.7466139793396
    10. '```' → logprob: -7.8716139793396

Token 527: ' bien' (ID: 5340)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 528: '!' (ID: 0)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 526
Tokens correctement prédits (1ère position, stricte): 155
Tokens correctement prédits (1ère position, avec adaptation): 171
Tokens correctement prédits (top 10): 358
Précision stricte (1ère position): 29.47%
Précision adaptée (1ère position): 32.51%
Précision (top 10): 68.06%
================================================================================
