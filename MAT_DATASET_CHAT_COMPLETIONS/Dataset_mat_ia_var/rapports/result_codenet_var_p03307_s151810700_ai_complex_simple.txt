================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
exec((lambda f: f'f=({f});f({f})')(lambda f:eval(f"print(({N:=int(input())})if {N}%2==0 else {N}*2)")))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'exec' (ID: 31592)
  → Token d'amorce (pas de prédiction)

Token 1: '((' (ID: 2054)
  → Token d'amorce (pas de prédiction)

Token 2: 'lambda' (ID: 35280)
  → Token d'amorce (pas de prédiction)

Token 3: ' f' (ID: 285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39175236225128174
    2. ' (' → logprob: -1.8917523622512817
    3. ' )' → logprob: -3.141752243041992
    4. '(' → logprob: -3.516752243041992
    5. ' :' → logprob: -3.641752243041992
    6. ':' → logprob: -4.391752243041992
    7. ')' → logprob: -4.391752243041992
    8. ' x' → logprob: -5.016752243041992
    9. ' f' → logprob: -5.016752243041992
    10. ''' → logprob: -5.766752243041992

Token 4: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3803747892379761
    2. ')' → logprob: -2.2553749084472656
    3. ':' → logprob: -2.6303749084472656
    4. ' (' → logprob: -3.1303749084472656
    5. ' ' → logprob: -3.6303749084472656
    6. '(lambda' → logprob: -3.8803749084472656
    7. ' :' → logprob: -4.005374908447266
    8. ' )' → logprob: -4.380374908447266
    9. ''' → logprob: -5.005374908447266
    10. '"' → logprob: -5.130374908447266

Token 5: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.02421615831553936
    2. ' f' → logprob: -3.8992161750793457
    3. '(' → logprob: -6.649216175079346
    4. ' (' → logprob: -8.024215698242188
    5. '(lambda' → logprob: -8.024215698242188
    6. '(f' → logprob: -8.274215698242188
    7. 'compile' → logprob: -8.399215698242188
    8. ' ' → logprob: -8.524215698242188
    9. 'lambda' → logprob: -8.649215698242188
    10. ')' → logprob: -8.899215698242188

Token 6: ''f' (ID: 180856)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38023263216018677
    2. '(lambda' → logprob: -1.255232572555542
    3. '((' → logprob: -4.130232810974121
    4. ' (' → logprob: -5.255232810974121
    5. ')' → logprob: -5.380232810974121
    6. '(f' → logprob: -6.630232810974121
    7. '(
' → logprob: -7.130232810974121
    8. ')(' → logprob: -7.255232810974121
    9. '))' → logprob: -8.005232810974121
    10. '(print' → logprob: -8.380232810974121

Token 7: '=' (ID: 28)
  Prédit: ''{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''{' → logprob: -1.1461920738220215
    2. ''' → logprob: -2.1461920738220215
    3. 'r' → logprob: -2.1461920738220215
    4. ''ex' → logprob: -2.5211920738220215
    5. ''''' → logprob: -2.6461920738220215
    6. ''s' → logprob: -2.8961920738220215
    7. '"' → logprob: -3.3961920738220215
    8. ''r' → logprob: -3.6461920738220215
    9. '''' → logprob: -3.7711920738220215
    10. 'exec' → logprob: -3.7711920738220215

Token 8: '({' (ID: 3972)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.39395710825920105
    2. '(lambda' → logprob: -1.1439571380615234
    3. 'exec' → logprob: -5.893957138061523
    4. ' lambda' → logprob: -6.393957138061523
    5. 'open' → logprob: -7.643957138061523
    6. '(' → logprob: -8.018957138061523
    7. '{' → logprob: -8.393957138061523
    8. ''' → logprob: -8.518957138061523
    9. 'eval' → logprob: -8.643957138061523
    10. '_lambda' → logprob: -8.768957138061523

Token 9: 'f' (ID: 69)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.005226647946983576
    2. 'f' → logprob: -6.1302266120910645
    3. '(lambda' → logprob: -6.1302266120910645
    4. '"' → logprob: -8.255227088928223
    5. ''' → logprob: -8.880227088928223
    6. 'code' → logprob: -10.005227088928223
    7. '}' → logprob: -10.005227088928223
    8. '_lambda' → logprob: -10.005227088928223
    9. ' lambda' → logprob: -10.130227088928223
    10. 'input' → logprob: -10.380227088928223

Token 10: '});' (ID: 27820)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6450243592262268
    2. '}))' → logprob: -1.645024299621582
    3. '(lambda' → logprob: -2.145024299621582
    4. 'f' → logprob: -2.520024299621582
    5. '})' → logprob: -2.895024299621582
    6. '}' → logprob: -3.895024299621582
    7. 'exec' → logprob: -6.145024299621582
    8. '})(' → logprob: -6.520024299621582
    9. '})();' → logprob: -6.895024299621582
    10. ''})' → logprob: -7.770024299621582

Token 11: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.025236336514353752
    2. 'exec' → logprob: -4.775236129760742
    3. ')' → logprob: -5.150236129760742
    4. 'lambda' → logprob: -5.775236129760742
    5. ''f' → logprob: -6.025236129760742
    6. '(lambda' → logprob: -7.025236129760742
    7. '))' → logprob: -7.150236129760742
    8. '(f' → logprob: -7.900236129760742
    9. '{' → logprob: -7.900236129760742
    10. ' f' → logprob: -8.025236129760742

Token 12: '({' (ID: 3972)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.9618638753890991
    2. '(' → logprob: -1.4618638753890991
    3. ')' → logprob: -1.8368638753890991
    4. '(f' → logprob: -2.0868639945983887
    5. '('' → logprob: -3.2118639945983887
    6. ')((' → logprob: -3.9618639945983887
    7. ''' → logprob: -4.961863994598389
    8. '((' → logprob: -5.336863994598389
    9. '(lambda' → logprob: -5.586863994598389
    10. '))' → logprob: -5.711863994598389

Token 13: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2632589042186737
    2. ''f' → logprob: -1.763258934020996
    3. 'lambda' → logprob: -3.138258934020996
    4. ''' → logprob: -5.388258934020996
    5. '"' → logprob: -6.388258934020996
    6. ''d' → logprob: -6.638258934020996
    7. ''}' → logprob: -7.013258934020996
    8. '0' → logprob: -7.263258934020996
    9. '')' → logprob: -7.388258934020996
    10. '1' → logprob: -7.388258934020996

Token 14: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.608784019947052
    2. '}))' → logprob: -0.858784019947052
    3. '))' → logprob: -3.8587839603424072
    4. ')' → logprob: -4.733784198760986
    5. '}' → logprob: -6.733784198760986
    6. ')))' → logprob: -7.983784198760986
    7. '});' → logprob: -8.233783721923828
    8. ')}' → logprob: -8.358783721923828
    9. ''))' → logprob: -9.358783721923828
    10. ''})' → logprob: -10.108783721923828

Token 15: '')(' (ID: 65372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05184170603752136
    2. '')' → logprob: -3.3018417358398438
    3. '))' → logprob: -4.426841735839844
    4. ''))' → logprob: -7.551841735839844
    5. ')))' → logprob: -7.801841735839844
    6. '})' → logprob: -8.551841735839844
    7. ')'' → logprob: -8.676841735839844
    8. '")' → logprob: -8.676841735839844
    9. ')")' → logprob: -9.676841735839844
    10. '}' → logprob: -10.801841735839844

Token 16: 'lambda' (ID: 35280)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6284037828445435
    2. 'lambda' → logprob: -1.3784037828445435
    3. '(lambda' → logprob: -2.128403663635254
    4. '"' → logprob: -3.128403663635254
    5. ''d' → logprob: -4.378403663635254
    6. ''f' → logprob: -5.003403663635254
    7. ''l' → logprob: -5.003403663635254
    8. ''''' → logprob: -5.628403663635254
    9. ''r' → logprob: -5.878403663635254
    10. ''s' → logprob: -6.003403663635254

Token 17: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.24596001207828522
    2. ' lambda' → logprob: -1.620959997177124
    3. ' x' → logprob: -4.995960235595703
    4. ' s' → logprob: -5.370960235595703
    5. 'f' → logprob: -5.995960235595703
    6. ' a' → logprob: -6.245960235595703
    7. 'lambda' → logprob: -6.995960235595703
    8. 's' → logprob: -7.120960235595703
    9. ' n' → logprob: -7.495960235595703
    10. ' l' → logprob: -7.870960235595703

Token 18: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11580173671245575
    2. ' :' → logprob: -2.2408018112182617
    3. ':f' → logprob: -6.240801811218262
    4. '):' → logprob: -8.490801811218262
    5. ':'' → logprob: -8.740801811218262
    6. ')' → logprob: -9.240801811218262
    7. ' )' → logprob: -9.615801811218262
    8. ':
' → logprob: -10.240801811218262
    9. '(lambda' → logprob: -10.240801811218262
    10. 'lambda' → logprob: -10.240801811218262

Token 19: 'eval' (ID: 37679)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.27683424949645996
    2. '"' → logprob: -2.27683424949646
    3. ''f' → logprob: -2.27683424949646
    4. ' f' → logprob: -4.401834487915039
    5. ''ex' → logprob: -5.026834487915039
    6. 'f' → logprob: -5.151834487915039
    7. ''d' → logprob: -6.026834487915039
    8. 'lambda' → logprob: -6.526834487915039
    9. '"""' → logprob: -6.901834487915039
    10. ' '' → logprob: -7.026834487915039

Token 20: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4349448084831238
    2. '('' → logprob: -1.5599448680877686
    3. '(input' → logprob: -2.4349448680877686
    4. '("("' → logprob: -4.0599446296691895
    5. 'input' → logprob: -4.6849446296691895
    6. '<|end|>' → logprob: -5.0599446296691895
    7. '(open' → logprob: -5.4349446296691895
    8. '('(' → logprob: -5.9349446296691895
    9. '(('' → logprob: -6.3099446296691895
    10. ')' → logprob: -6.4349446296691895

Token 21: '"' (ID: 1)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6307913661003113
    2. '(f' → logprob: -1.255791425704956
    3. '('' → logprob: -3.255791425704956
    4. '))' → logprob: -3.505791425704956
    5. ''' → logprob: -3.880791425704956
    6. '(chr' → logprob: -4.005791187286377
    7. ')))' → logprob: -4.130791187286377
    8. '(eval' → logprob: -4.755791187286377
    9. '(re' → logprob: -4.880791187286377
    10. '"' → logprob: -5.005791187286377

Token 22: 'print' (ID: 1598)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5167372822761536
    2. '__' → logprob: -1.6417372226715088
    3. ''f' → logprob: -2.266737222671509
    4. ''' → logprob: -3.391737222671509
    5. 'chr' → logprob: -3.891737222671509
    6. '"' → logprob: -4.516737461090088
    7. 'exec' → logprob: -4.766737461090088
    8. 'lambda' → logprob: -4.891737461090088
    9. ''))' → logprob: -6.141737461090088
    10. '))' → logprob: -6.266737461090088

Token 23: '(({' (ID: 66373)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.29257380962371826
    2. '('' → logprob: -1.7925738096237183
    3. '(eval' → logprob: -3.542573928833008
    4. '(' → logprob: -3.667573928833008
    5. '(chr' → logprob: -3.917573928833008
    6. '("' → logprob: -5.792573928833008
    7. '(re' → logprob: -6.417573928833008
    8. '(lambda' → logprob: -6.417573928833008
    9. '(input' → logprob: -6.792573928833008
    10. '((' → logprob: -7.167573928833008

Token 24: 'N' (ID: 45)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3336961567401886
    2. 'lambda' → logprob: -1.3336961269378662
    3. ''f' → logprob: -5.208696365356445
    4. 'len' → logprob: -5.333696365356445
    5. 'chr' → logprob: -6.333696365356445
    6. '(lambda' → logprob: -6.458696365356445
    7. ''' → logprob: -6.458696365356445
    8. '''.' → logprob: -6.708696365356445
    9. '__' → logprob: -6.958696365356445
    10. 'repr' → logprob: -7.958696365356445

Token 25: ':=' (ID: 33860)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5339186787605286
    2. 'lambda' → logprob: -1.6589186191558838
    3. 'N' → logprob: -2.658918619155884
    4. ''' → logprob: -3.158918619155884
    5. ''))' → logprob: -4.783918857574463
    6. ''N' → logprob: -4.783918857574463
    7. '))' → logprob: -5.408918857574463
    8. '(lambda' → logprob: -5.408918857574463
    9. '_lambda' → logprob: -5.408918857574463
    10. '1' → logprob: -5.408918857574463

Token 26: 'int' (ID: 491)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.47450876235961914
    2. 'lambda' → logprob: -2.599508762359619
    3. 'len' → logprob: -2.724508762359619
    4. ''f' → logprob: -2.724508762359619
    5. 'N' → logprob: -2.974508762359619
    6. ''' → logprob: -3.849508762359619
    7. ''N' → logprob: -3.849508762359619
    8. 'input' → logprob: -3.974508762359619
    9. '1' → logprob: -4.349508762359619
    10. 'repr' → logprob: -4.974508762359619

Token 27: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09971877187490463
    2. '(input' → logprob: -3.0997188091278076
    3. ' input' → logprob: -3.0997188091278076
    4. ''' → logprob: -6.4747185707092285
    5. 'f' → logprob: -6.8497185707092285
    6. ')' → logprob: -8.099719047546387
    7. '"' → logprob: -8.099719047546387
    8. ' f' → logprob: -8.224719047546387
    9. ' ' → logprob: -8.724719047546387
    10. '')' → logprob: -9.224719047546387

Token 28: '())' (ID: 3516)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.21334189176559448
    2. '())' → logprob: -2.0883419513702393
    3. '()))' → logprob: -3.5883419513702393
    4. '()' → logprob: -4.58834171295166
    5. '())))' → logprob: -4.96334171295166
    6. '')' → logprob: -5.46334171295166
    7. '()),' → logprob: -5.58834171295166
    8. ''' → logprob: -6.08834171295166
    9. '()}' → logprob: -6.21334171295166
    10. '(' → logprob: -6.21334171295166

Token 29: '})' (ID: 9263)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -1.4992711544036865
    2. ''}' → logprob: -2.2492711544036865
    3. '')}' → logprob: -2.3742711544036865
    4. 'input' → logprob: -2.4992711544036865
    5. '}))' → logprob: -2.4992711544036865
    6. ''*' → logprob: -2.8742711544036865
    7. 'N' → logprob: -2.9992711544036865
    8. ''))' → logprob: -3.3742711544036865
    9. ''' → logprob: -3.3742711544036865
    10. 'f' → logprob: -3.4992711544036865

Token 30: 'if' (ID: 366)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4852612316608429
    2. '*' → logprob: -2.7352612018585205
    3. ')**' → logprob: -3.1102612018585205
    4. '*f' → logprob: -3.3602612018585205
    5. '*N' → logprob: -3.6102612018585205
    6. '))' → logprob: -3.6102612018585205
    7. ')' → logprob: -3.9852612018585205
    8. '"))' → logprob: -4.1102614402771
    9. ''))' → logprob: -4.1102614402771
    10. ')*' → logprob: -4.2352614402771

Token 31: ' {' (ID: 354)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.31946951150894165
    2. ' N' → logprob: -1.3194694519042969
    3. ' ' → logprob: -6.069469451904297
    4. '(N' → logprob: -7.319469451904297
    5. ' f' → logprob: -7.819469451904297
    6. 'f' → logprob: -7.944469451904297
    7. ' True' → logprob: -8.069469451904297
    8. 'True' → logprob: -8.194469451904297
    9. ''' → logprob: -8.444469451904297
    10. '  ' → logprob: -8.569469451904297

Token 32: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.015169989317655563
    2. 'f' → logprob: -5.390170097351074
    3. ' N' → logprob: -5.515170097351074
    4. ''N' → logprob: -6.515170097351074
    5. '0' → logprob: -6.640170097351074
    6. 'True' → logprob: -7.390170097351074
    7. ''' → logprob: -7.515170097351074
    8. 'int' → logprob: -7.640170097351074
    9. 'False' → logprob: -7.765170097351074
    10. '1' → logprob: -7.890170097351074

Token 33: '}%' (ID: 93414)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3886314332485199
    2. '==' → logprob: -2.2636313438415527
    3. '>=' → logprob: -2.8886313438415527
    4. '<' → logprob: -3.1386313438415527
    5. ' else' → logprob: -3.8886313438415527
    6. '<=' → logprob: -3.8886313438415527
    7. '%' → logprob: -4.263631343841553
    8. '!=' → logprob: -4.388631343841553
    9. 'else' → logprob: -4.888631343841553
    10. ' >' → logprob: -5.138631343841553

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5970878005027771
    2. 'N' → logprob: -0.9720878005027771
    3. ' N' → logprob: -4.097087860107422
    4. ' ' → logprob: -4.097087860107422
    5. '(N' → logprob: -4.097087860107422
    6. '{' → logprob: -4.722087860107422
    7. '(' → logprob: -5.472087860107422
    8. ' (' → logprob: -5.597087860107422
    9. '3' → logprob: -6.097087860107422
    10. '1' → logprob: -8.097087860107422

Token 35: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11415352672338486
    2. '1' → logprob: -3.4891536235809326
    3. '0' → logprob: -4.1141533851623535
    4. ' ' → logprob: -4.2391533851623535
    5. '2' → logprob: -4.3641533851623535
    6. '!=' → logprob: -4.3641533851623535
    7. ' ==' → logprob: -4.6141533851623535
    8. '```' → logprob: -5.6141533851623535
    9. 'else' → logprob: -5.9891533851623535
    10. ')' → logprob: -6.6141533851623535

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11626740545034409
    2. '2' → logprob: -2.366267442703247
    3. ' ' → logprob: -4.241267204284668
    4. '1' → logprob: -6.491267204284668
    5. '3' → logprob: -12.178767204284668
    6. '4' → logprob: -12.678767204284668
    7. '```' → logprob: -12.991267204284668
    8. '==' → logprob: -13.491267204284668
    9. '10' → logprob: -13.616267204284668
    10. '(' → logprob: -14.116267204284668

Token 37: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.38699087500572205
    2. 'else' → logprob: -1.1369909048080444
    3. ' ' → logprob: -9.386990547180176
    4. ')' → logprob: -10.886990547180176
    5. '```' → logprob: -13.011990547180176
    6. '  ' → logprob: -13.511990547180176
    7. '	else' → logprob: -13.511990547180176
    8. '_else' → logprob: -13.636990547180176
    9. '   ' → logprob: -13.886990547180176
    10. ' )' → logprob: -14.261990547180176

Token 38: ' {' (ID: 354)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7444589734077454
    2. ' N' → logprob: -1.8694589138031006
    3. 'f' → logprob: -2.1194589138031006
    4. ''N' → logprob: -2.6194589138031006
    5. ''' → logprob: -2.9944589138031006
    6. ' f' → logprob: -3.3694589138031006
    7. 'input' → logprob: -4.24445915222168
    8. ' ' → logprob: -4.61945915222168
    9. '(N' → logprob: -4.86945915222168
    10. 'str' → logprob: -5.11945915222168

Token 39: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8090540170669556
    2. ''N' → logprob: -0.9340540170669556
    3. 'f' → logprob: -2.809053897857666
    4. ''' → logprob: -3.559053897857666
    5. '"N' → logprob: -3.684053897857666
    6. ''f' → logprob: -4.309053897857666
    7. 'input' → logprob: -4.684053897857666
    8. '"' → logprob: -5.059053897857666
    9. 'str' → logprob: -5.809053897857666
    10. ' ' → logprob: -6.434053897857666

Token 40: '}' (ID: 92)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.35686179995536804
    2. '))' → logprob: -2.4818618297576904
    3. '**' → logprob: -2.8568618297576904
    4. '}))' → logprob: -3.1068618297576904
    5. ')))' → logprob: -3.3568618297576904
    6. '*' → logprob: -3.3568618297576904
    7. ')' → logprob: -4.356861591339111
    8. '-' → logprob: -4.481861591339111
    9. '}' → logprob: -5.106861591339111
    10. ')}' → logprob: -6.356861591339111

Token 41: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7300658226013184
    2. '+' → logprob: -0.9800658226013184
    3. '))' → logprob: -2.9800658226013184
    4. '**' → logprob: -3.3550658226013184
    5. ')))' → logprob: -4.230065822601318
    6. '*' → logprob: -4.980065822601318
    7. '"))' → logprob: -5.355065822601318
    8. '")' → logprob: -5.355065822601318
    9. ')")' → logprob: -5.980065822601318
    10. '```' → logprob: -6.105065822601318

Token 42: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2344302088022232
    2. '2' → logprob: -1.734430193901062
    3. '(N' → logprob: -4.109430313110352
    4. '3' → logprob: -4.609430313110352
    5. ' N' → logprob: -6.234430313110352
    6. '(' → logprob: -6.359430313110352
    7. 'f' → logprob: -6.859430313110352
    8. ' ' → logprob: -7.859430313110352
    9. '{' → logprob: -8.734430313110352
    10. '*N' → logprob: -9.859430313110352

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03184457868337631
    2. ')")' → logprob: -3.9068446159362793
    3. '))' → logprob: -5.406844615936279
    4. '")' → logprob: -6.031844615936279
    5. '**' → logprob: -7.281844615936279
    6. '')' → logprob: -7.531844615936279
    7. ')))' → logprob: -7.531844615936279
    8. ')**' → logprob: -7.781844615936279
    9. '**)' → logprob: -7.906844615936279
    10. '})' → logprob: -8.031844139099121

Token 44: '")))' (ID: 81885)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026878856122493744
    2. ')")' → logprob: -4.901878833770752
    3. '))' → logprob: -5.026878833770752
    4. '")' → logprob: -5.151878833770752
    5. '"))' → logprob: -5.526878833770752
    6. ')))' → logprob: -6.901878833770752
    7. ' )' → logprob: -7.526878833770752
    8. '")))' → logprob: -8.15187931060791
    9. '')' → logprob: -8.40187931060791
    10. ')"' → logprob: -8.77687931060791


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 12
Tokens correctement prédits (1ère position, avec adaptation): 12
Tokens correctement prédits (top 10): 24
Précision stricte (1ère position): 28.57%
Précision adaptée (1ère position): 28.57%
Précision (top 10): 57.14%
================================================================================
