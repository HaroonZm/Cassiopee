================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, mul
H, N = map(int, input().split())
A = list(map(int, input().split()))
result = ('Yes', 'No')[
    (lambda x, y: (y - x) > 0)(
        reduce(add, A, 0), H
    )
]
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013039158657193184
    2. '.' → logprob: -5.5130391120910645
    3. ' (' → logprob: -6.1380391120910645
    4. '\' → logprob: -6.6380391120910645
    5. '(lambda' → logprob: -6.7630391120910645
    6. '```' → logprob: -6.8880391120910645
    7. ',' → logprob: -7.2630391120910645
    8. ' ' → logprob: -7.3880391120910645
    9. 'def' → logprob: -7.7630391120910645
    10. '(space' → logprob: -8.513039588928223

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0243254154920578
    2. 'import' → logprob: -3.899325370788574
    3. '.' → logprob: -5.774325370788574
    4. ' ' → logprob: -7.399325370788574
    5. ' .' → logprob: -10.149325370788574
    6. '	import' → logprob: -11.899325370788574
    7. '.import' → logprob: -12.774325370788574
    8. '<|end|>' → logprob: -13.274325370788574
    9. ' Import' → logprob: -13.649325370788574
    10. '_import' → logprob: -13.774325370788574

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.30121177434921265
    2. ' import' → logprob: -1.8012118339538574
    3. ' mul' → logprob: -3.0512118339538574
    4. 'add' → logprob: -3.8012118339538574
    5. ' ' → logprob: -4.051211833953857
    6. 'import' → logprob: -5.426211833953857
    7. 'mul' → logprob: -6.301211833953857
    8. ' item' → logprob: -7.051211833953857
    9. ' icon' → logprob: -8.4262113571167
    10. '```' → logprob: -9.3012113571167

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011845800094306469
    2. '\' → logprob: -5.511845588684082
    3. '(
' → logprob: -5.511845588684082
    4. '\n' → logprob: -6.386845588684082
    5. '\(' → logprob: -7.261845588684082
    6. ',' → logprob: -7.386845588684082
    7. '```' → logprob: -8.761845588684082
    8. '`' → logprob: -9.386845588684082
    9. '(

' → logprob: -9.636845588684082
    10. '#' → logprob: -9.761845588684082

Token 10: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.597747802734375
    2. 'mul' → logprob: -0.847747802734375
    3. ' sub' → logprob: -4.597747802734375
    4. 'sub' → logprob: -4.597747802734375
    5. ' i' → logprob: -7.722747802734375
    6. '```' → logprob: -8.347747802734375
    7. 'getitem' → logprob: -8.472747802734375
    8. 'i' → logprob: -8.472747802734375
    9. ' ' → logprob: -9.597747802734375
    10. 'item' → logprob: -9.972747802734375

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005602734163403511
    2. '(
' → logprob: -5.630602836608887
    3. ',' → logprob: -7.505602836608887
    4. '\' → logprob: -7.755602836608887
    5. '#' → logprob: -8.130602836608887
    6. '\(' → logprob: -8.505602836608887
    7. 'def' → logprob: -9.630602836608887
    8. '\n' → logprob: -9.630602836608887
    9. '`' → logprob: -9.755602836608887
    10. '```' → logprob: -9.755602836608887

Token 12: 'H' (ID: 39)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05619446933269501
    2. '(
' → logprob: -3.681194543838501
    3. ',' → logprob: -4.681194305419922
    4. '#' → logprob: -5.306194305419922
    5. 'def' → logprob: -5.556194305419922
    6. '\' → logprob: -5.931194305419922
    7. '[' → logprob: -6.181194305419922
    8. 'a' → logprob: -6.306194305419922
    9. '`' → logprob: -7.056194305419922
    10. '(

' → logprob: -7.181194305419922

Token 13: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.30608755350112915
    2. '=' → logprob: -1.4310874938964844
    3. ' =' → logprob: -4.556087493896484
    4. '_' → logprob: -5.681087493896484
    5. 'i' → logprob: -6.056087493896484
    6. ',' → logprob: -6.556087493896484
    7. 'H' → logprob: -6.556087493896484
    8. 'a' → logprob: -6.556087493896484
    9. 'ello' → logprob: -6.931087493896484
    10. '(' → logprob: -7.431087493896484

Token 14: ' N' (ID: 478)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.42706403136253357
    2. ' W' → logprob: -1.302064061164856
    3. 'L' → logprob: -3.5520639419555664
    4. 'T' → logprob: -4.552063941955566
    5. 'w' → logprob: -4.802063941955566
    6. ' L' → logprob: -5.052063941955566
    7. ' =' → logprob: -5.802063941955566
    8. 'N' → logprob: -5.802063941955566
    9. ' w' → logprob: -6.302063941955566
    10. ' T' → logprob: -6.427063941955566

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11284934729337692
    2. '=' → logprob: -2.237849235534668
    3. ',' → logprob: -10.862849235534668
    4. ' ' → logprob: -12.612849235534668
    5. ' =
' → logprob: -14.112849235534668
    6. ')' → logprob: -14.112849235534668
    7. ' =[' → logprob: -14.362849235534668
    8. ' ,' → logprob: -14.612849235534668
    9. ' =
' → logprob: -14.737849235534668
    10. '=int' → logprob: -14.987849235534668

Token 16: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.40021583437919617
    2. 'map' → logprob: -1.1502158641815186
    3. ' ' → logprob: -5.1502156257629395
    4. '5' → logprob: -5.5252156257629395
    5. '10' → logprob: -7.0252156257629395
    6. '0' → logprob: -7.4002156257629395
    7. ' list' → logprob: -7.6502156257629395
    8. 'list' → logprob: -7.7752156257629395
    9. '3' → logprob: -8.150216102600098
    10. 'int' → logprob: -8.400216102600098

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009739677421748638
    2. '(' → logprob: -4.759739875793457
    3. 'int' → logprob: -7.384739875793457
    4. '(input' → logprob: -7.884739875793457
    5. '(lambda' → logprob: -9.759739875793457
    6. 'input' → logprob: -10.634739875793457
    7. '(str' → logprob: -11.384739875793457
    8. '(list' → logprob: -11.509739875793457
    9. 'list' → logprob: -11.759739875793457
    10. '(map' → logprob: -12.759739875793457

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7090645432472229
    2. ',input' → logprob: -0.8340645432472229
    3. 'input' → logprob: -3.209064483642578
    4. '(input' → logprob: -3.459064483642578
    5. '(' → logprob: -6.709064483642578
    6. ' input' → logprob: -8.459064483642578
    7. ' ,' → logprob: -8.834064483642578
    8. ')' → logprob: -9.084064483642578
    9. '=input' → logprob: -11.084064483642578
    10. ',int' → logprob: -11.209064483642578

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3869098722934723
    2. ' input' → logprob: -1.13690984249115
    3. ' ' → logprob: -10.636909484863281
    4. ',input' → logprob: -12.011909484863281
    5. '(input' → logprob: -12.636909484863281
    6. 'list' → logprob: -13.261909484863281
    7. ')' → logprob: -13.511909484863281
    8. '	input' → logprob: -14.386909484863281
    9. '[input' → logprob: -15.136909484863281
    10. '=input' → logprob: -15.261909484863281

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5735259056091309
    2. '())' → logprob: -1.1985259056091309
    3. ')' → logprob: -2.448525905609131
    4. '()' → logprob: -3.073525905609131
    5. '(' → logprob: -7.448525905609131
    6. '());' → logprob: -7.573525905609131
    7. '(),' → logprob: -8.198526382446289
    8. '()))' → logprob: -8.948526382446289
    9. '()),' → logprob: -9.073526382446289
    10. '))' → logprob: -9.573526382446289

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011343709047650918
    2. 'strip' → logprob: -9.125113487243652
    3. 'rstrip' → logprob: -12.750113487243652
    4. ' split' → logprob: -14.125113487243652
    5. '(split' → logprob: -14.625113487243652
    6. 'spl' → logprob: -15.750113487243652
    7. 'read' → logprob: -16.625112533569336
    8. ')' → logprob: -16.875112533569336
    9. 's' → logprob: -18.750112533569336
    10. '```' → logprob: -19.000112533569336

Token 22: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012914669699966908
    2. '))' → logprob: -4.387914657592773
    3. '),' → logprob: -8.012914657592773
    4. '())' → logprob: -10.887914657592773
    5. '`)' → logprob: -11.262914657592773
    6. '')' → logprob: -11.887914657592773
    7. '()' → logprob: -12.012914657592773
    8. '(' → logprob: -12.137914657592773
    9. ')`' → logprob: -12.137914657592773
    10. ')))' → logprob: -13.012914657592773

Token 23: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.571658194065094
    2. 'a' → logprob: -0.946658194065094
    3. 'arr' → logprob: -4.446658134460449
    4. 'lst' → logprob: -4.946658134460449
    5. 'numbers' → logprob: -5.571658134460449
    6. 'dp' → logprob: -5.821658134460449
    7. 'nums' → logprob: -5.946658134460449
    8. 'cards' → logprob: -6.071658134460449
    9. 'data' → logprob: -6.446658134460449
    10. 'S' → logprob: -6.571658134460449

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8193545937538147
    2. 's' → logprob: -0.9443545937538147
    3. '=' → logprob: -2.06935453414917
    4. ',' → logprob: -3.44435453414917
    5. '[' → logprob: -5.06935453414917
    6. ' ' → logprob: -6.06935453414917
    7. '_list' → logprob: -6.94435453414917
    8. ')' → logprob: -7.31935453414917
    9. '[]' → logprob: -7.56935453414917
    10. '.' → logprob: -8.069355010986328

Token 25: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.24838995933532715
    2. ' list' → logprob: -1.8733899593353271
    3. '[' → logprob: -3.498389959335327
    4. '[list' → logprob: -3.748389959335327
    5. ' [' → logprob: -5.248390197753906
    6. '[]' → logprob: -5.623390197753906
    7. '[int' → logprob: -5.998390197753906
    8. '[input' → logprob: -7.248390197753906
    9. ' []' → logprob: -8.623390197753906
    10. 'map' → logprob: -9.873390197753906

Token 26: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.26987433433532715
    2. '(' → logprob: -1.5198743343353271
    3. '(int' → logprob: -4.269874572753906
    4. '(input' → logprob: -5.894874572753906
    5. '(range' → logprob: -7.394874572753906
    6. '(eval' → logprob: -8.519874572753906
    7. '()' → logprob: -10.144874572753906
    8. '(list' → logprob: -10.394874572753906
    9. '(filter' → logprob: -10.519874572753906
    10. '((' → logprob: -11.269874572753906

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011266445508226752
    2. '(' → logprob: -7.126126766204834
    3. 'int' → logprob: -8.126126289367676
    4. '[int' → logprob: -11.501126289367676
    5. '<int' → logprob: -12.001126289367676
    6. '(input' → logprob: -12.501126289367676
    7. '=int' → logprob: -12.501126289367676
    8. ',int' → logprob: -14.251126289367676
    9. '```' → logprob: -14.376126289367676
    10. '(lambda' → logprob: -15.126126289367676

Token 28: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6854193210601807
    2. '(input' → logprob: -1.0604193210601807
    3. ',' → logprob: -1.9354193210601807
    4. '(' → logprob: -5.435419082641602
    5. ' ,' → logprob: -7.185419082641602
    6. 'input' → logprob: -9.060419082641602
    7. ' (' → logprob: -9.685419082641602
    8. '(),' → logprob: -9.685419082641602
    9. '```' → logprob: -10.810419082641602
    10. ',(' → logprob: -10.935419082641602

Token 29: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00869422685354948
    2. ' input' → logprob: -4.758694171905518
    3. '(input' → logprob: -9.758694648742676
    4. ',input' → logprob: -10.883694648742676
    5. '=input' → logprob: -13.633694648742676
    6. '	input' → logprob: -14.258694648742676
    7. ')' → logprob: -14.758694648742676
    8. '_input' → logprob: -15.383694648742676
    9. ',' → logprob: -15.508694648742676
    10. ' ' → logprob: -15.508694648742676

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3663626305060461e-05
    2. '()' → logprob: -11.75001335144043
    3. ' ().' → logprob: -13.12501335144043
    4. '()))' → logprob: -14.00001335144043
    5. '(' → logprob: -14.25001335144043
    6. ')' → logprob: -14.50001335144043
    7. '(),' → logprob: -14.62501335144043
    8. '())' → logprob: -15.12501335144043
    9. '.' → logprob: -15.50001335144043
    10. '()));' → logprob: -15.87501335144043

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.339278580620885e-06
    2. 'strip' → logprob: -13.125001907348633
    3. ' split' → logprob: -15.875001907348633
    4. 'spl' → logprob: -16.125001907348633
    5. '(split' → logprob: -17.250001907348633
    6. 'rstrip' → logprob: -17.750001907348633
    7. ')' → logprob: -19.000001907348633
    8. 'plit' → logprob: -19.750001907348633
    9. '.split' → logprob: -21.000001907348633
    10. 's' → logprob: -21.625001907348633

Token 32: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06687792390584946
    2. ')' → logprob: -2.941877841949463
    3. '()))' → logprob: -4.566877841949463
    4. '(' → logprob: -7.066877841949463
    5. '())' → logprob: -7.566877841949463
    6. '()' → logprob: -9.066878318786621
    7. '),' → logprob: -10.816878318786621
    8. ')))' → logprob: -11.191878318786621
    9. ' ))' → logprob: -12.566878318786621
    10. '))
' → logprob: -13.066878318786621

Token 33: 'result' (ID: 2521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17651142179965973
    2. '*' → logprob: -3.176511526107788
    3. 'a' → logprob: -3.676511526107788
    4. 'print' → logprob: -4.051511287689209
    5. 'result' → logprob: -4.176511287689209
    6. '+' → logprob: -4.301511287689209
    7. '[' → logprob: -4.676511287689209
    8. '=' → logprob: -5.051511287689209
    9. ',' → logprob: -5.426511287689209
    10. 'A' → logprob: -5.676511287689209

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27460068464279175
    2. '=' → logprob: -2.0246007442474365
    3. '(' → logprob: -2.2746007442474365
    4. '_' → logprob: -5.899600505828857
    5. ' ' → logprob: -7.274600505828857
    6. '[' → logprob: -7.399600505828857
    7. 's' → logprob: -7.649600505828857
    8. '.' → logprob: -8.149600982666016
    9. ':' → logprob: -9.149600982666016
    10. ' (' → logprob: -9.149600982666016

Token 35: ' ('' (ID: 9906)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.4179801344871521
    2. 'reduce' → logprob: -1.9179801940917969
    3. ' sum' → logprob: -2.417980194091797
    4. ' max' → logprob: -3.542980194091797
    5. ' min' → logprob: -3.792980194091797
    6. ' add' → logprob: -4.542980194091797
    7. 'sum' → logprob: -4.667980194091797
    8. ' H' → logprob: -4.792980194091797
    9. ' ' → logprob: -5.042980194091797
    10. '"' → logprob: -6.042980194091797

Token 36: 'Yes' (ID: 13022)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.6186510920524597
    2. 'max' → logprob: -1.8686511516571045
    3. 'min' → logprob: -2.3686511516571045
    4. 'sum' → logprob: -2.7436511516571045
    5. '('' → logprob: -3.7436511516571045
    6. '0' → logprob: -3.7436511516571045
    7. ''' → logprob: -4.368650913238525
    8. '')' → logprob: -4.618650913238525
    9. 'H' → logprob: -4.743650913238525
    10. '1' → logprob: -4.993650913238525

Token 37: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01185040082782507
    2. 'if' → logprob: -5.386850357055664
    3. ' if' → logprob: -5.761850357055664
    4. '')' → logprob: -5.761850357055664
    5. '',' → logprob: -7.511850357055664
    6. '\n' → logprob: -8.386850357055664
    7. ' '' → logprob: -9.261850357055664
    8. '"' → logprob: -11.636850357055664
    9. ' ' → logprob: -12.136850357055664
    10. '','' → logprob: -12.636850357055664

Token 38: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009841437451541424
    2. ' '' → logprob: -4.634841442108154
    3. ')' → logprob: -10.134840965270996
    4. ' ' → logprob: -11.259840965270996
    5. '')' → logprob: -11.634840965270996
    6. '"No' → logprob: -11.759840965270996
    7. ''S' → logprob: -12.509840965270996
    8. '('' → logprob: -13.134840965270996
    9. '"' → logprob: -13.759840965270996
    10. ''\' → logprob: -14.009840965270996

Token 39: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0053184316493570805
    2. ' No' → logprob: -5.630318641662598
    3. ''' → logprob: -6.380318641662598
    4. ' ' → logprob: -11.005318641662598
    5. '')' → logprob: -13.255318641662598
    6. ' '' → logprob: -13.630318641662598
    7. 'NO' → logprob: -14.505318641662598
    8. '_No' → logprob: -14.630318641662598
    9. '"No' → logprob: -14.630318641662598
    10. 'Yes' → logprob: -15.005318641662598

Token 40: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.04610244184732437
    2. ')' → logprob: -3.796102523803711
    3. '')[' → logprob: -3.796102523803711
    4. ''' → logprob: -9.546102523803711
    5. ')[' → logprob: -11.046102523803711
    6. '')['' → logprob: -11.046102523803711
    7. ')['' → logprob: -11.546102523803711
    8. '['' → logprob: -11.796102523803711
    9. '[' → logprob: -12.046102523803711
    10. ']' → logprob: -12.796102523803711

Token 41: '[
' (ID: 20070)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018459996208548546
    2. '[result' → logprob: -4.268459796905518
    3. '[
' → logprob: -5.643459796905518
    4. '[len' → logprob: -8.768460273742676
    5. '[min' → logprob: -9.143460273742676
    6. '\[' → logprob: -9.518460273742676
    7. '[m' → logprob: -9.518460273742676
    8. '[max' → logprob: -10.143460273742676
    9. '[int' → logprob: -10.143460273742676
    10. 'result' → logprob: -10.393460273742676

Token 42: '   ' (ID: 271)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.1629844605922699
    2. 'sum' → logprob: -2.1629843711853027
    3. 'H' → logprob: -4.037984371185303
    4. ' reduce' → logprob: -4.537984371185303
    5. ' sum' → logprob: -5.537984371185303
    6. 'not' → logprob: -7.037984371185303
    7. ' not' → logprob: -8.162984848022461
    8. ' H' → logprob: -8.287984848022461
    9. 'max' → logprob: -8.287984848022461
    10. '(sum' → logprob: -8.662984848022461

Token 43: ' (' (ID: 350)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.1433270275592804
    2. 'sum' → logprob: -2.268326997756958
    3. ' reduce' → logprob: -4.018327236175537
    4. 'H' → logprob: -5.018327236175537
    5. ' sum' → logprob: -5.518327236175537
    6. '   ' → logprob: -8.268326759338379
    7. 're' → logprob: -8.393326759338379
    8. 'max' → logprob: -8.893326759338379
    9. ' H' → logprob: -8.893326759338379
    10. 'not' → logprob: -9.268326759338379

Token 44: 'lambda' (ID: 35280)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.21447747945785522
    2. 'sum' → logprob: -1.7144775390625
    3. 'H' → logprob: -4.5894775390625
    4. ' reduce' → logprob: -7.2144775390625
    5. ' sum' → logprob: -7.9644775390625
    6. 'all' → logprob: -8.2144775390625
    7. 'max' → logprob: -8.2144775390625
    8. 'any' → logprob: -8.3394775390625
    9. 'A' → logprob: -8.5894775390625
    10. '   ' → logprob: -8.8394775390625

Token 45: ' x' (ID: 1215)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.1560856103897095
    2. ' reduce' → logprob: -1.9060856103897095
    3. 'reduce' → logprob: -2.15608549118042
    4. ' lambda' → logprob: -2.90608549118042
    5. ' not' → logprob: -3.28108549118042
    6. 'sum' → logprob: -3.28108549118042
    7. ' H' → logprob: -3.40608549118042
    8. 'H' → logprob: -3.65608549118042
    9. ' all' → logprob: -3.65608549118042
    10. ' x' → logprob: -3.65608549118042

Token 46: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39598503708839417
    2. ' :' → logprob: -1.1459850072860718
    3. ' x' → logprob: -6.020985126495361
    4. '=' → logprob: -6.645985126495361
    5. ',' → logprob: -6.770985126495361
    6. ':x' → logprob: -7.020985126495361
    7. 'x' → logprob: -7.145985126495361
    8. ' ' → logprob: -8.520984649658203
    9. '):' → logprob: -8.770984649658203
    10. ' len' → logprob: -9.020984649658203

Token 47: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.13178594410419464
    2. ' y' → logprob: -3.5067858695983887
    3. 'H' → logprob: -4.256785869598389
    4. 'a' → logprob: -4.256785869598389
    5. 'x' → logprob: -4.381785869598389
    6. 'h' → logprob: -4.631785869598389
    7. 'n' → logprob: -5.006785869598389
    8. 'lambda' → logprob: -5.256785869598389
    9. 'i' → logprob: -5.631785869598389
    10. 'A' → logprob: -6.006785869598389

Token 48: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017169060185551643
    2. ' :' → logprob: -4.392168998718262
    3. ',' → logprob: -6.017168998718262
    4. ':x' → logprob: -7.017168998718262
    5. '=' → logprob: -7.767168998718262
    6. ':not' → logprob: -8.892168998718262
    7. ':(' → logprob: -9.017168998718262
    8. ':
' → logprob: -9.642168998718262
    9. ',:' → logprob: -9.767168998718262
    10. ':y' → logprob: -10.517168998718262

Token 49: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.49639540910720825
    2. 'y' → logprob: -2.1213953495025635
    3. ' x' → logprob: -2.1213953495025635
    4. ' y' → logprob: -3.1213953495025635
    5. 'reduce' → logprob: -3.6213953495025635
    6. 'all' → logprob: -4.246395587921143
    7. 'sum' → logprob: -4.871395587921143
    8. 'any' → logprob: -4.871395587921143
    9. ' all' → logprob: -5.246395587921143
    10. '(x' → logprob: -5.371395587921143

Token 50: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7709553241729736
    2. 'reduce' → logprob: -1.0209553241729736
    3. 'y' → logprob: -2.2709553241729736
    4. 'sum' → logprob: -4.6459550857543945
    5. 'H' → logprob: -4.7709550857543945
    6. ' y' → logprob: -4.7709550857543945
    7. ' x' → logprob: -4.8959550857543945
    8. ' reduce' → logprob: -5.0209550857543945
    9. 'mul' → logprob: -5.2709550857543945
    10. 'False' → logprob: -5.3959550857543945

Token 51: ' -' (ID: 533)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8549001812934875
    2. '>' → logprob: -1.8549001216888428
    3. ' not' → logprob: -1.8549001216888428
    4. ' <' → logprob: -2.2299001216888428
    5. '<' → logprob: -3.8549001216888428
    6. '==' → logprob: -3.9799001216888428
    7. ' >=' → logprob: -4.104900360107422
    8. ' in' → logprob: -4.604900360107422
    9. ' <=' → logprob: -4.604900360107422
    10. '>=' → logprob: -4.729900360107422

Token 52: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47135284543037415
    2. ' x' → logprob: -1.8463528156280518
    3. 'sum' → logprob: -2.3463528156280518
    4. ' sum' → logprob: -3.4713528156280518
    5. 'reduce' → logprob: -3.4713528156280518
    6. '1' → logprob: -4.221353054046631
    7. 'H' → logprob: -4.346353054046631
    8. ' reduce' → logprob: -4.596353054046631
    9. 'min' → logprob: -5.596353054046631
    10. ' (' → logprob: -5.971353054046631

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029516026377677917
    2. '[' → logprob: -4.529516220092773
    3. '*' → logprob: -5.279516220092773
    4. ')%' → logprob: -5.904516220092773
    5. '**' → logprob: -6.904516220092773
    6. '+' → logprob: -7.029516220092773
    7. ')**' → logprob: -7.154516220092773
    8. ' +' → logprob: -7.154516220092773
    9. ' )' → logprob: -7.279516220092773
    10. ' <' → logprob: -7.279516220092773

Token 54: ' >' (ID: 1424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8811070919036865
    2. ' >' → logprob: -1.3811070919036865
    3. '>' → logprob: -2.3811070919036865
    4. ' >=' → logprob: -3.2561070919036865
    5. '(' → logprob: -3.3811070919036865
    6. ' <=' → logprob: -4.131107330322266
    7. ' <' → logprob: -4.131107330322266
    8. ' %' → logprob: -4.256107330322266
    9. '%' → logprob: -4.506107330322266
    10. ' ' → logprob: -4.506107330322266

Token 55: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6163586974143982
    2. ' ' → logprob: -1.866358757019043
    3. 'H' → logprob: -2.241358757019043
    4. ' sum' → logprob: -2.866358757019043
    5. ' H' → logprob: -2.991358757019043
    6. 'sum' → logprob: -3.241358757019043
    7. ' y' → logprob: -4.491358757019043
    8. '1' → logprob: -4.616358757019043
    9. 'y' → logprob: -4.991358757019043
    10. ' reduce' → logprob: -5.741358757019043

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21620313823223114
    2. 'H' → logprob: -2.216203212738037
    3. ' ' → logprob: -3.341203212738037
    4. 'sum' → logprob: -4.091203212738037
    5. '1' → logprob: -5.091203212738037
    6. ' H' → logprob: -5.341203212738037
    7. ' sum' → logprob: -5.466203212738037
    8. 'A' → logprob: -5.716203212738037
    9. 'x' → logprob: -5.841203212738037
    10. 'y' → logprob: -6.091203212738037

Token 57: ')(
' (ID: 180976)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.028788797557353973
    2. ')' → logprob: -4.6537885665893555
    3. '(H' → logprob: -5.0287885665893555
    4. ' )(' → logprob: -6.0287885665893555
    5. ')((' → logprob: -6.1537885665893555
    6. ')(
' → logprob: -6.5287885665893555
    7. '   ' → logprob: -6.7787885665893555
    8. '(A' → logprob: -7.0287885665893555
    9. '(' → logprob: -7.2787885665893555
    10. ' ' → logprob: -7.4037885665893555

Token 58: '       ' (ID: 309)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.41344428062438965
    2. 'H' → logprob: -2.1634442806243896
    3. 'sum' → logprob: -2.4134442806243896
    4. ' reduce' → logprob: -2.6634442806243896
    5. '0' → logprob: -3.4134442806243896
    6. ' sum' → logprob: -4.538444519042969
    7. ' H' → logprob: -5.413444519042969
    8. 'A' → logprob: -5.538444519042969
    9. 'result' → logprob: -6.163444519042969
    10. '   ' → logprob: -6.288444519042969

Token 59: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' (adapté à ' reduce') → logprob: -0.3251456916332245
    2. 'H' → logprob: -1.4501457214355469
    3. '0' → logprob: -3.700145721435547
    4. 'sum' → logprob: -4.950145721435547
    5. 'max' → logprob: -5.825145721435547
    6. 'A' → logprob: -6.200145721435547
    7. '   ' → logprob: -6.700145721435547
    8. 'min' → logprob: -6.700145721435547
    9. ' reduce' → logprob: -7.075145721435547
    10. 'N' → logprob: -7.325145721435547

Token 60: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.4144771099090576
    2. '(m' → logprob: -1.1644771099090576
    3. '(' → logprob: -4.039477348327637
    4. '(lambda' → logprob: -4.914477348327637
    5. ')' → logprob: -7.289477348327637
    6. 'mul' → logprob: -7.664477348327637
    7. 'add' → logprob: -8.164477348327637
    8. '(operator' → logprob: -8.914477348327637
    9. ' add' → logprob: -9.039477348327637
    10. ' (' → logprob: -9.164477348327637

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02059829980134964
    2. ',A' → logprob: -4.020598411560059
    3. '(A' → logprob: -6.645598411560059
    4. ' ,' → logprob: -7.395598411560059
    5. 'A' → logprob: -8.145598411560059
    6. ')' → logprob: -9.645598411560059
    7. '(' → logprob: -10.020598411560059
    8. ',m' → logprob: -11.020598411560059
    9. '   ' → logprob: -11.145598411560059
    10. ' A' → logprob: -11.270598411560059

Token 62: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4289989173412323
    2. ' A' → logprob: -1.0539989471435547
    3. '[A' → logprob: -9.178998947143555
    4. ')' → logprob: -10.303998947143555
    5. ' [' → logprob: -10.303998947143555
    6. '(A' → logprob: -10.553998947143555
    7. '[' → logprob: -10.803998947143555
    8. '	A' → logprob: -10.803998947143555
    9. ' ' → logprob: -11.178998947143555
    10. '   ' → logprob: -11.553998947143555

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16398361325263977
    2. '),' → logprob: -2.0389835834503174
    3. ')' → logprob: -4.1639838218688965
    4. ' ,' → logprob: -5.5389838218688965
    5. ',H' → logprob: -7.5389838218688965
    6. ' ),' → logprob: -7.9139838218688965
    7. 'H' → logprob: -8.538983345031738
    8. '))' → logprob: -9.288983345031738
    9. ',),' → logprob: -9.413983345031738
    10. ' )' → logprob: -9.913983345031738

Token 64: ' ' (ID: 220)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.14496305584907532
    2. ' H' → logprob: -2.394963026046753
    3. '0' → logprob: -3.269963026046753
    4. ' ' → logprob: -5.269963264465332
    5. ' -' → logprob: -8.144963264465332
    6. ')' → logprob: -9.019963264465332
    7. '-' → logprob: -9.519963264465332
    8. '-H' → logprob: -9.769963264465332
    9. '10' → logprob: -11.707463264465332
    10. '   ' → logprob: -11.832463264465332

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003545543644577265
    2. 'H' → logprob: -5.878545761108398
    3. ' ' → logprob: -7.253545761108398
    4. ')' → logprob: -11.003545761108398
    5. ' H' → logprob: -11.628545761108398
    6. '   ' → logprob: -13.003545761108398
    7. '-' → logprob: -14.066045761108398
    8. '1' → logprob: -14.316045761108398
    9. '  ' → logprob: -14.316045761108398
    10. '))' → logprob: -14.753545761108398

Token 66: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06966561824083328
    2. '),' → logprob: -3.4446656703948975
    3. '))' → logprob: -4.069665431976318
    4. ',' → logprob: -4.569665431976318
    5. ')))' → logprob: -5.194665431976318
    6. ' )' → logprob: -6.819665431976318
    7. ')
' → logprob: -7.694665431976318
    8. ' ,' → logprob: -8.944665908813477
    9. ')+' → logprob: -9.194665908813477
    10. ' ' → logprob: -9.319665908813477

Token 67: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.055112339556217194
    2. ' H' → logprob: -2.930112361907959
    3. ' ' → logprob: -9.5551118850708
    4. 'N' → logprob: -9.9301118850708
    5. '   ' → logprob: -11.0551118850708
    6. ')' → logprob: -11.0551118850708
    7. '100' → logprob: -11.1801118850708
    8. 'mul' → logprob: -11.1801118850708
    9. '    ' → logprob: -11.6801118850708
    10. ' N' → logprob: -11.8051118850708

Token 68: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1892787367105484
    2. ')]' → logprob: -1.8142787218093872
    3. '))' → logprob: -4.814278602600098
    4. ')
' → logprob: -7.314278602600098
    5. ')])' → logprob: -8.064278602600098
    6. ' )' → logprob: -8.314278602600098
    7. ')>' → logprob: -9.939278602600098
    8. ')))' → logprob: -10.689278602600098
    9. ' ' → logprob: -11.189278602600098
    10. '   ' → logprob: -11.439278602600098

Token 69: '   ' (ID: 271)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5242005586624146
    2. ')' → logprob: -0.8992005586624146
    3. ')
' → logprob: -7.399200439453125
    4. '))' → logprob: -8.274200439453125
    5. ')])' → logprob: -9.149200439453125
    6. ']' → logprob: -10.399200439453125
    7. ' )' → logprob: -10.524200439453125
    8. ')]
' → logprob: -11.399200439453125
    9. '   ' → logprob: -11.899200439453125
    10. ')}' → logprob: -12.524200439453125

Token 70: ' )
' (ID: 3270)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06281785666942596
    2. ')' → logprob: -2.8128178119659424
    3. ')
' (adapté à ' )
') → logprob: -7.5628180503845215
    4. ']' → logprob: -8.562817573547363
    5. '))' → logprob: -10.187817573547363
    6. ')]
' → logprob: -10.687817573547363
    7. ' )' → logprob: -10.687817573547363
    8. ')])' → logprob: -11.062817573547363
    9. ')][' → logprob: -12.187817573547363
    10. ')]

' → logprob: -12.437817573547363

Token 71: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6498257517814636
    2. ')' → logprob: -0.8998257517814636
    3. ')]' → logprob: -2.6498258113861084
    4. '])' → logprob: -7.774825572967529
    5. ')])' → logprob: -10.149826049804688
    6. ']
' → logprob: -10.399826049804688
    7. ')
' → logprob: -10.774826049804688
    8. '))' → logprob: -11.774826049804688
    9. '-' → logprob: -12.274826049804688
    10. '])]' → logprob: -12.274826049804688

Token 72: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00022094044834375381
    2. '-' → logprob: -9.625221252441406
    3. ')' → logprob: -9.875221252441406
    4. '[' → logprob: -10.875221252441406
    5. '-print' → logprob: -10.875221252441406
    6. ')
' → logprob: -11.375221252441406
    7. '```' → logprob: -12.000221252441406
    8. ' print' → logprob: -12.000221252441406
    9. '+' → logprob: -12.125221252441406
    10. '0' → logprob: -12.125221252441406

Token 73: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1271345168352127
    2. '(result' → logprob: -2.1271345615386963
    3. '('' → logprob: -8.627134323120117
    4. 'result' → logprob: -11.502134323120117
    5. '(
' → logprob: -12.752134323120117
    6. '("("' → logprob: -12.877134323120117
    7. '(

' → logprob: -13.002134323120117
    8. ' (' → logprob: -13.127134323120117
    9. '()' → logprob: -13.502134323120117
    10. '(f' → logprob: -13.627134323120117

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -13.50000286102295
    3. '))' → logprob: -13.87500286102295
    4. ')
' → logprob: -15.00000286102295
    5. ')`' → logprob: -16.375003814697266
    6. '`)' → logprob: -17.375003814697266
    7. '）' → logprob: -17.500003814697266
    8. '),' → logprob: -18.500003814697266
    9. '')' → logprob: -18.500003814697266
    10. ').' → logprob: -18.625003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 72
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 38.89%
Précision adaptée (1ère position): 40.28%
Précision (top 10): 76.39%
================================================================================
