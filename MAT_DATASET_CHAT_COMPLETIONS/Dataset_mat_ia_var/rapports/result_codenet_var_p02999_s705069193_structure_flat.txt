================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x_a = input().split()
x = int(x_a[0])
a = int(x_a[1])
if x < a:
    print(0)
else:
    print(10)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: '_a' (ID: 10852)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4428943991661072
    2. ' x' → logprob: -2.442894458770752
    3. '0' → logprob: -2.567894458770752
    4. '1' → logprob: -2.692894458770752
    5. ' []' → logprob: -3.317894458770752
    6. 'x' → logprob: -3.317894458770752
    7. 'y' → logprob: -4.442894458770752
    8. ' [' → logprob: -4.817894458770752
    9. ' y' → logprob: -4.817894458770752
    10. '[' → logprob: -5.192894458770752

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004015476442873478
    2. ''' → logprob: -6.3790154457092285
    3. '('' → logprob: -6.5040154457092285
    4. '"' → logprob: -8.004015922546387
    5. '(
' → logprob: -8.379015922546387
    6. '("("' → logprob: -8.879015922546387
    7. '[' → logprob: -10.629015922546387
    8. '()' → logprob: -10.629015922546387
    9. '`' → logprob: -11.129015922546387
    10. '```' → logprob: -11.504015922546387

Token 5: 'split' (ID: 13627)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47885000705718994
    2. '.' → logprob: -1.10385000705719
    3. '(' → logprob: -4.7288498878479
    4. '*' → logprob: -4.9788498878479
    5. '()' → logprob: -4.9788498878479
    6. '_' → logprob: -5.2288498878479
    7. '.strip' → logprob: -5.3538498878479
    8. ')' → logprob: -6.1038498878479
    9. '[' → logprob: -6.1038498878479
    10. '=' → logprob: -6.1038498878479

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002470350591465831
    2. '()' → logprob: -9.00024700164795
    3. '(
' → logprob: -10.25024700164795
    4. '('' → logprob: -10.62524700164795
    5. '("("' → logprob: -10.87524700164795
    6. '(

' → logprob: -11.12524700164795
    7. '"' → logprob: -11.37524700164795
    8. '`' → logprob: -12.25024700164795
    9. ' (' → logprob: -12.62524700164795
    10. '((' → logprob: -13.00024700164795

Token 7: 'x' (ID: 87)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018512539565563202
    2. '=' → logprob: -4.893512725830078
    3. '+' → logprob: -5.643512725830078
    4. '[int' → logprob: -6.393512725830078
    5. '```' → logprob: -6.643512725830078
    6. 'x' → logprob: -7.018512725830078
    7. '.' → logprob: -7.393512725830078
    8. '\[' → logprob: -7.643512725830078
    9. '[:]' → logprob: -7.768512725830078
    10. '[
' → logprob: -7.893512725830078

Token 8: ' =' (ID: 314)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.3356917202472687
    2. '_' → logprob: -1.3356916904449463
    3. '[' → logprob: -3.8356916904449463
    4. '[_' → logprob: -8.335691452026367
    5. '_[' → logprob: -9.335691452026367
    6. '_x' → logprob: -9.585691452026367
    7. '_b' → logprob: -10.085691452026367
    8. '```' → logprob: -10.335691452026367
    9. '[a' → logprob: -10.710691452026367
    10. 'a' → logprob: -10.960691452026367

Token 9: ' int' (ID: 677)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1092238500714302
    2. '[int' → logprob: -3.1092238426208496
    3. ' list' → logprob: -3.7342238426208496
    4. 'int' → logprob: -4.10922384262085
    5. 'x' → logprob: -4.60922384262085
    6. '[x' → logprob: -5.23422384262085
    7. '[' → logprob: -6.85922384262085
    8. '[list' → logprob: -6.85922384262085
    9. ' [' → logprob: -7.73422384262085
    10. 'map' → logprob: -8.484224319458008

Token 10: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12695394456386566
    2. '(x' → logprob: -2.1269538402557373
    3. '('' → logprob: -12.501954078674316
    4. '(
' → logprob: -12.751954078674316
    5. ' (' → logprob: -12.751954078674316
    6. '("("' → logprob: -12.751954078674316
    7. 'x' → logprob: -12.876954078674316
    8. '()' → logprob: -13.251954078674316
    9. '(`' → logprob: -13.376954078674316
    10. '(

' → logprob: -13.501954078674316

Token 11: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.005573098547756672
    2. '[' → logprob: -5.255573272705078
    3. ')_' → logprob: -8.755573272705078
    4. '[_' → logprob: -10.255573272705078
    5. ')' → logprob: -10.380573272705078
    6. '[a' → logprob: -10.505573272705078
    7. 'a' → logprob: -10.630573272705078
    8. '_' → logprob: -10.880573272705078
    9. '_x' → logprob: -11.630573272705078
    10. '"_' → logprob: -12.255573272705078

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018339496455155313
    2. '[x' → logprob: -8.62518310546875
    3. ')' → logprob: -13.50018310546875
    4. '[a' → logprob: -13.62518310546875
    5. '[
' → logprob: -14.25018310546875
    6. ' [' → logprob: -15.50018310546875
    7. '['' → logprob: -15.87518310546875
    8. '\[' → logprob: -16.62518310546875
    9. 'x' → logprob: -17.00018310546875
    10. '```' → logprob: -17.12518310546875

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. '1' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.000001907348633
    4. ''' → logprob: -19.375001907348633
    5. ')' → logprob: -19.500001907348633
    6. '```' → logprob: -19.875001907348633
    7. '۰' → logprob: -20.500001907348633
    8. '`' → logprob: -20.750001907348633
    9. '2' → logprob: -20.875001907348633
    10. '])' → logprob: -20.875001907348633

Token 14: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3158898949623108
    2. '])' → logprob: -1.315889835357666
    3. ']' → logprob: -6.065889835357666
    4. ')]' → logprob: -8.690890312194824
    5. ')])' → logprob: -9.815890312194824
    6. ''])' → logprob: -10.565890312194824
    7. '+' → logprob: -11.690890312194824
    8. ')
' → logprob: -11.940890312194824
    9. ' ])' → logprob: -12.065890312194824
    10. '))' → logprob: -12.065890312194824

Token 15: 'a' (ID: 64)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8751466870307922
    2. ')' → logprob: -1.2501466274261475
    3. '_' → logprob: -2.5001466274261475
    4. '=' → logprob: -3.0001466274261475
    5. ' ' → logprob: -3.1251466274261475
    6. ' =' → logprob: -4.000146865844727
    7. '-' → logprob: -4.375146865844727
    8. '*' → logprob: -4.375146865844727
    9. '[' → logprob: -4.500146865844727
    10. '>' → logprob: -4.500146865844727

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5760806798934937
    2. ' int' → logprob: -0.8260806798934937
    3. ' x' → logprob: -9.076080322265625
    4. 'x' → logprob: -10.576080322265625
    5. ' ' → logprob: -15.076080322265625
    6. 'input' → logprob: -15.326080322265625
    7. ' input' → logprob: -15.576080322265625
    8. '=int' → logprob: -15.701080322265625
    9. '(int' → logprob: -16.076080322265625
    10. '0' → logprob: -16.326080322265625

Token 18: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08272186666727066
    2. '(x' → logprob: -2.5827219486236572
    3. '(a' → logprob: -5.582721710205078
    4. '("("' → logprob: -11.332721710205078
    5. '((' → logprob: -12.082721710205078
    6. ' (' → logprob: -12.207721710205078
    7. '(ord' → logprob: -12.582721710205078
    8. 'a' → logprob: -12.582721710205078
    9. '()' → logprob: -12.832721710205078
    10. 'x' → logprob: -12.957721710205078

Token 19: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0012560649774968624
    2. '[' → logprob: -6.751255989074707
    3. 'a' → logprob: -10.751255989074707
    4. ')' → logprob: -11.001255989074707
    5. '_' → logprob: -11.126255989074707
    6. '```' → logprob: -11.876255989074707
    7. '])' → logprob: -12.126255989074707
    8. ')_' → logprob: -12.626255989074707
    9. ')]' → logprob: -12.876255989074707
    10. ']_' → logprob: -13.001255989074707

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. ' [' → logprob: -13.25000286102295
    3. '1' → logprob: -14.12500286102295
    4. ')' → logprob: -15.87500286102295
    5. '```' → logprob: -16.375003814697266
    6. '[
' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.250003814697266
    8. '\[' → logprob: -17.500003814697266
    9. 'a' → logprob: -17.750003814697266
    10. ')[' → logprob: -17.750003814697266

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.875003814697266
    3. '0' → logprob: -14.625003814697266
    4. '])' → logprob: -15.500003814697266
    5. '   ' → logprob: -16.312503814697266
    6. ']' → logprob: -16.562503814697266
    7. ')' → logprob: -16.937503814697266
    8. '' → logprob: -17.000003814697266
    9. '2' → logprob: -17.125003814697266
    10. '１' → logprob: -17.187503814697266

Token 22: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.204720582696609e-05
    2. '])' → logprob: -10.000052452087402
    3. '))' → logprob: -13.125052452087402
    4. '）' → logprob: -13.750052452087402
    5. ')])' → logprob: -14.375052452087402
    6. ']' → logprob: -14.750052452087402
    7. '`)' → logprob: -14.750052452087402
    8. ')]' → logprob: -14.875052452087402
    9. ')
' → logprob: -14.875052452087402
    10. '})' → logprob: -15.125052452087402

Token 23: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09623253345489502
    2. ' if' → logprob: -3.0962324142456055
    3. '\n' → logprob: -4.4712324142456055
    4. '+
' → logprob: -4.5962324142456055
    5. '+' → logprob: -4.9712324142456055
    6. '```' → logprob: -5.3462324142456055
    7. '\' → logprob: -5.7212324142456055
    8. 'i' → logprob: -6.0962324142456055
    9. 'print' → logprob: -6.8462324142456055
    10. '``' → logprob: -6.9712324142456055

Token 24: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07146988809108734
    2. 'x' → logprob: -2.696469783782959
    3. ' a' → logprob: -7.196469783782959
    4. ' ' → logprob: -7.321469783782959
    5. 'a' → logprob: -9.696470260620117
    6. ' ' → logprob: -11.071470260620117
    7. '(' → logprob: -11.071470260620117
    8. ' (' → logprob: -11.821470260620117
    9. ' abs' → logprob: -11.946470260620117
    10. '  ' → logprob: -12.571470260620117

Token 25: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.49775615334510803
    2. '>' → logprob: -1.8727561235427856
    3. ' <' → logprob: -2.122756242752075
    4. ' >' → logprob: -2.622756242752075
    5. '>=' → logprob: -3.997756242752075
    6. '<=' → logprob: -4.497756004333496
    7. ' <=' → logprob: -4.747756004333496
    8. ' >=' → logprob: -5.122756004333496
    9. ' ' → logprob: -7.247756004333496
    10. '%' → logprob: -7.747756004333496

Token 26: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01607777364552021
    2. ' a' → logprob: -4.141077995300293
    3. '10' → logprob: -11.516077995300293
    4. ' ' → logprob: -11.766077995300293
    5. '0' → logprob: -12.141077995300293
    6. '5' → logprob: -12.891077995300293
    7. '20' → logprob: -13.016077995300293
    8. '32' → logprob: -13.391077995300293
    9. '100' → logprob: -13.641077995300293
    10. '3' → logprob: -14.016077995300293

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00045795587357133627
    2. ' :' → logprob: -7.750457763671875
    3. '':' → logprob: -11.250457763671875
    4. ':
' → logprob: -11.750457763671875
    5. '':'' → logprob: -13.250457763671875
    6. '":' → logprob: -13.375457763671875
    7. ':return' → logprob: -14.375457763671875
    8. '+:' → logprob: -15.000457763671875
    9. ':**' → logprob: -15.000457763671875
    10. '):' → logprob: -15.125457763671875

Token 28: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.039504989981651306
    2. ' print' → logprob: -3.4145050048828125
    3. '"' → logprob: -5.5395050048828125
    4. ''' → logprob: -6.5395050048828125
    5. '   ' → logprob: -8.164505004882812
    6. ' ' → logprob: -9.914505004882812
    7. '\n' → logprob: -10.914505004882812
    8. '"\' → logprob: -11.039505004882812
    9. ''\' → logprob: -11.289505004882812
    10. '	print' → logprob: -11.539505004882812

Token 29: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010133992182090878
    2. ' print' → logprob: -7.251013278961182
    3. '"' → logprob: -8.50101375579834
    4. ''' → logprob: -10.37601375579834
    5. 'pr' → logprob: -11.00101375579834
    6. 'pri' → logprob: -11.37601375579834
    7. 'prin' → logprob: -11.50101375579834
    8. '#print' → logprob: -12.87601375579834
    9. 'prit' → logprob: -13.00101375579834
    10. 'import' → logprob: -13.00101375579834

Token 30: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5246307253837585
    2. '(' → logprob: -1.0246307849884033
    3. '("("' → logprob: -3.6496307849884033
    4. '('' → logprob: -4.399630546569824
    5. '(x' → logprob: -5.274630546569824
    6. '("<' → logprob: -5.399630546569824
    7. '("(' → logprob: -7.774630546569824
    8. '(a' → logprob: -8.024630546569824
    9. '(":' → logprob: -8.899630546569824
    10. '('<' → logprob: -9.274630546569824

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002071394817903638
    2. '"' → logprob: -6.252071380615234
    3. ''' → logprob: -10.627071380615234
    4. '-' → logprob: -11.002071380615234
    5. 'print' → logprob: -11.252071380615234
    6. '"W' → logprob: -11.377071380615234
    7. '"a' → logprob: -11.377071380615234
    8. '"x' → logprob: -11.627071380615234
    9. '```' → logprob: -11.752071380615234
    10. '#' → logprob: -12.252071380615234

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003945688367821276
    2. ')
' → logprob: -7.875394344329834
    3. 'else' → logprob: -11.750394821166992
    4. ' )' → logprob: -13.500394821166992
    5. '))' → logprob: -14.375394821166992
    6. '()' → logprob: -14.375394821166992
    7. '())' → logprob: -14.375394821166992
    8. '   ' → logprob: -14.500394821166992
    9. ' else' → logprob: -14.625394821166992
    10. '')' → logprob: -14.875394821166992

Token 33: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07810785621404648
    2. 'elif' → logprob: -2.9531078338623047
    3. ' else' → logprob: -3.8281078338623047
    4. ' elif' → logprob: -7.828107833862305
    5. '\n' → logprob: -8.203107833862305
    6. '```' → logprob: -8.453107833862305
    7. '<|end|>' → logprob: -9.078107833862305
    8. '#else' → logprob: -10.203107833862305
    9. 'x' → logprob: -10.578107833862305
    10. '    
' → logprob: -10.828107833862305

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005320638883858919
    2. ':
' → logprob: -7.750532150268555
    3. '   ' → logprob: -9.375532150268555
    4. ' :' → logprob: -11.125532150268555
    5. ':
' → logprob: -14.125532150268555
    6. '```' → logprob: -15.000532150268555
    7. ' :
' → logprob: -15.750532150268555
    8. '.' → logprob: -16.375532150268555
    9. ':

' → logprob: -16.625532150268555
    10. '    ' → logprob: -16.625532150268555

Token 35: '   ' (ID: 271)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6831194758415222
    2. '   ' → logprob: -0.9331194758415222
    3. 'print' → logprob: -2.683119535446167
    4. '10' → logprob: -3.683119535446167
    5. ' ' → logprob: -5.433119297027588
    6. ' print' → logprob: -6.558119297027588
    7. '25' → logprob: -7.558119297027588
    8. '2' → logprob: -7.933119297027588
    9. '20' → logprob: -7.933119297027588
    10. '100' → logprob: -7.933119297027588

Token 36: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0026752992998808622
    2. '1' → logprob: -7.002675533294678
    3. '   ' → logprob: -7.002675533294678
    4. ' print' → logprob: -7.502675533294678
    5. '10' → logprob: -9.00267505645752
    6. 'x' → logprob: -9.62767505645752
    7. '100' → logprob: -9.87767505645752
    8. ' ' → logprob: -10.75267505645752
    9. 'pr' → logprob: -12.37767505645752
    10. '(' → logprob: -12.37767505645752

Token 37: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8385415077209473
    2. '(x' → logprob: -1.2135415077209473
    3. '1' → logprob: -1.8385415077209473
    4. 'x' → logprob: -2.9635415077209473
    5. '(abs' → logprob: -3.2135415077209473
    6. 'abs' → logprob: -4.463541507720947
    7. '((' → logprob: -5.713541507720947
    8. ' (' → logprob: -6.713541507720947
    9. ' ' → logprob: -7.088541507720947
    10. ' x' → logprob: -7.588541507720947

Token 38: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0018269078573212028
    2. '(' → logprob: -7.126826763153076
    3. '1' → logprob: -7.626826763153076
    4. '(x' → logprob: -8.251827239990234
    5. 'x' → logprob: -9.251827239990234
    6. '((' → logprob: -9.626827239990234
    7. '(abs' → logprob: -10.251827239990234
    8. '(int' → logprob: -10.751827239990234
    9. 'abs' → logprob: -11.251827239990234
    10. 'int' → logprob: -11.626827239990234

Token 39: ')' (ID: 8)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012868782505393028
    2. ')' → logprob: -9.000128746032715
    3. '*' → logprob: -13.125128746032715
    4. ' ' → logprob: -13.375128746032715
    5. '1' → logprob: -15.000128746032715
    6. '00' → logprob: -15.125128746032715
    7. '5' → logprob: -15.500128746032715
    8. '**' → logprob: -15.750128746032715
    9. ' )' → logprob: -15.750128746032715
    10. '   ' → logprob: -16.1251277923584


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 37
Tokens correctement prédits (1ère position, stricte): 12
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 32.43%
Précision adaptée (1ère position): 37.84%
Précision (top 10): 75.68%
================================================================================
