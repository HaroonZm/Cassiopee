================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys as _sys
_set_rec = _sys.setrecursionlimit
_set_rec(10 ** 9)
_INFINITY = float('inf')
MODULO = 10**9 + 7
__stdin = _sys.stdin

sc = lambda: __stdin.readline().strip()
_YN = lambda cond: (lambda x: x if cond else None)(print("Yes") if cond else print("No"))
_YESNO = lambda cond: (lambda x: x if cond else None)(print("YES") if cond else print("NO"))
int0 = lambda x: int(x) - 1

def anti_flatten(x, *shape):
    if not shape:
        return x
    sz = shape[0]
    return [anti_flatten(x[i*len(x)//sz : (i+1)*len(x)//sz], *shape[1:]) for i in range(sz)]

def _main_():
    # Reading inputs in weird order for no reason
    M, N = reversed(tuple(map(int, sc().split())))
    S = tuple(map(int, sc().split()))
    T = tuple(map(int, sc().split()))
    # Non-standard initialization
    dp = [[None] * (M+1) for _ in [0]*(N+1)]
    SUM = [[None]*(M+2) for _ in range(N+2)]
    for i in range(N+1):
        for j in range(M+1):
            dp[i][j] = 0
    for i in range(N+2):
        for j in range(M+2):
            SUM[i][j] = 0

    favorite_answer_number = 1
    idx = lambda x,y: (x+2,y+2)
    # Loops index from custom enumeration for fun
    for alpha, s in enumerate(S):
        for beta, t in enumerate(T):
            i, j = alpha+1, beta+1
            if s == t:
                dp[i][j] = SUM[i][j] + 1
                favorite_answer_number += dp[i][j]
                favorite_answer_number %= MODULO
            else:
                dp[i][j] = 0
            xi, yj = idx(alpha, beta)
            SUM[xi][yj] = SUM[xi-1][yj] + SUM[xi][yj-1] - SUM[xi-1][yj-1] + dp[i][j]
            SUM[xi][yj] %= MODULO

    print(favorite_answer_number)


if __name__ == '__main__':
    (lambda f: f())(_main_)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' _' (ID: 1175)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.28970158100128174
    2. ' sys' → logprob: -1.6647015810012817
    3. ' ' → logprob: -3.289701461791992
    4. 'sy' → logprob: -4.664701461791992
    5. '   ' → logprob: -4.914701461791992
    6. 's' → logprob: -6.789701461791992
    7. '```' → logprob: -7.039701461791992
    8. ' sy' → logprob: -7.414701461791992
    9. 'system' → logprob: -7.539701461791992
    10. '__' → logprob: -7.539701461791992

Token 4: 'sys' (ID: 17324)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3239760100841522
    2. 'sys' → logprob: -1.3239760398864746
    3. '_s' → logprob: -5.448976039886475
    4. '_' → logprob: -6.073976039886475
    5. 'sy' → logprob: -6.073976039886475
    6. 'm' → logprob: -7.323976039886475
    7. 'is' → logprob: -8.323975563049316
    8. 'i' → logprob: -8.823975563049316
    9. 'sx' → logprob: -9.448975563049316
    10. 'ys' → logprob: -9.573975563049316

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011884682811796665
    2. '
' → logprob: -5.011884689331055
    3. 'newline' → logprob: -6.386884689331055
    4. 'import' → logprob: -7.136884689331055
    5. '\n' → logprob: -7.386884689331055
    6. '

' → logprob: -7.511884689331055
    7. '<|end|>' → logprob: -7.886884689331055
    8. '.import' → logprob: -8.511884689331055
    9. '' → logprob: -8.761884689331055
    10. '```' → logprob: -8.761884689331055

Token 6: '_set' (ID: 5451)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13751620054244995
    2. '
' → logprob: -3.0125162601470947
    3. '\n' → logprob: -3.3875162601470947
    4. '<|end|>' → logprob: -4.012516021728516
    5. 'newline' → logprob: -4.887516021728516
    6. '

' → logprob: -5.137516021728516
    7. 'import' → logprob: -5.262516021728516
    8. '' → logprob: -6.137516021728516
    9. '<|end|>' → logprob: -6.262516021728516
    10. ',' → logprob: -6.637516021728516

Token 7: '_rec' (ID: 35314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2701853513717651
    2. 'attr' → logprob: -1.3951853513717651
    3. '_set' → logprob: -1.7701853513717651
    4. '_attr' → logprob: -2.2701854705810547
    5. 'set' → logprob: -3.1451854705810547
    6. '(' → logprob: -3.3951854705810547
    7. ' _' → logprob: -3.8951854705810547
    8. 's' → logprob: -4.645185470581055
    9. '_sys' → logprob: -4.895185470581055
    10. 'uptools' → logprob: -4.895185470581055

Token 8: ' =' (ID: 314)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.005631893407553434
    2. 'ursive' → logprob: -5.380631923675537
    3. 'ur' → logprob: -7.880631923675537
    4. '_' → logprob: -8.005631446838379
    5. 'urs' → logprob: -8.380631446838379
    6. 'ursor' → logprob: -10.380631446838379
    7. 'ursively' → logprob: -11.755631446838379
    8. 'u' → logprob: -12.130631446838379
    9. '_limit' → logprob: -12.630631446838379
    10. '_set' → logprob: -12.630631446838379

Token 9: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7441186308860779
    2. '_set' → logprob: -1.6191186904907227
    3. '_sys' → logprob: -1.8691186904907227
    4. ' sys' → logprob: -2.4941186904907227
    5. ' ' → logprob: -2.9941186904907227
    6. 'sys' → logprob: -4.869118690490723
    7. ' getattr' → logprob: -4.994118690490723
    8. ' None' → logprob: -4.994118690490723
    9. 'set' → logprob: -6.119118690490723
    10. ' setattr' → logprob: -6.119118690490723

Token 10: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0064691598527133465
    2. 'set' → logprob: -5.256469249725342
    3. '_sys' → logprob: -6.756469249725342
    4. '_set' → logprob: -9.631468772888184
    5. ' sys' → logprob: -12.756468772888184
    6. 'sets' → logprob: -13.381468772888184
    7. '=sys' → logprob: -15.131468772888184
    8. '_s' → logprob: -15.756468772888184
    9. '(sys' → logprob: -15.881468772888184
    10. 's' → logprob: -15.881468772888184

Token 11: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.015294435434043407
    2. '.setdefault' → logprob: -4.265294551849365
    3. '.' → logprob: -7.140294551849365
    4. ' .' → logprob: -8.515294075012207
    5. '._' → logprob: -9.515294075012207
    6. '.get' → logprob: -11.265294075012207
    7. '.stdout' → logprob: -11.390294075012207
    8. '.stderr' → logprob: -11.890294075012207
    9. '.stdin' → logprob: -12.265294075012207
    10. ' ' → logprob: -12.765294075012207

Token 12: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.16757655143737793
    2. '_rec' → logprob: -1.917576551437378
    3. '_' → logprob: -6.667576789855957
    4. '_execution' → logprob: -6.667576789855957
    5. 'ecution' → logprob: -7.042576789855957
    6. '_trace' → logprob: -7.667576789855957
    7. '_recursive' → logprob: -7.917576789855957
    8. 'execution' → logprob: -7.917576789855957
    9. 'ex' → logprob: -8.417576789855957
    10. '_exc' → logprob: -8.542576789855957

Token 13: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0024930182844400406
    2. 'ursive' → logprob: -7.252492904663086
    3. 'urs' → logprob: -7.502492904663086
    4. '_' → logprob: -7.502492904663086
    5. 'ur' → logprob: -8.252492904663086
    6. 'ursor' → logprob: -9.252492904663086
    7. 'limit' → logprob: -9.502492904663086
    8. '_limit' → logprob: -9.627492904663086
    9. 'urse' → logprob: -9.752492904663086
    10. 'ut' → logprob: -11.127492904663086

Token 14: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -4.978233846486546e-05
    2. 'lim' → logprob: -10.125049591064453
    3. 'imit' → logprob: -11.750049591064453
    4. '_limit' → logprob: -14.250049591064453
    5. 'Limit' → logprob: -14.750049591064453
    6. ' limit' → logprob: -15.250049591064453
    7. 'depth' → logprob: -15.375049591064453
    8. 'ursion' → logprob: -16.250049591064453
    9. 't' → logprob: -17.000049591064453
    10. 'l' → logprob: -17.125049591064453

Token 15: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00385517836548388
    2. '(
' → logprob: -5.628855228424072
    3. '40' → logprob: -9.628854751586914
    4. '_' → logprob: -9.753854751586914
    5. ' (' → logprob: -10.628854751586914
    6. '(

' → logprob: -10.628854751586914
    7. '(_' → logprob: -10.878854751586914
    8. '"' → logprob: -11.378854751586914
    9. '("("' → logprob: -11.753854751586914
    10. '('' → logprob: -11.878854751586914

Token 16: '_set' (ID: 5451)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023838533088564873
    2. '(
' → logprob: -6.127383708953857
    3. '_' → logprob: -9.752384185791016
    4. '(_' → logprob: -10.627384185791016
    5. '40' → logprob: -10.752384185791016
    6. '(

' → logprob: -10.752384185791016
    7. '(\' → logprob: -11.627384185791016
    8. '(_)' → logprob: -11.627384185791016
    9. '()' → logprob: -11.877384185791016
    10. ' (' → logprob: -12.002384185791016

Token 17: '_rec' (ID: 35314)
  Prédit: '_rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.00030161935137584805
    2. '_' → logprob: -8.500301361083984
    3. '_re' → logprob: -9.500301361083984
    4. ' _' → logprob: -11.875301361083984
    5. '_set' → logprob: -12.500301361083984
    6. '_recv' → logprob: -13.000301361083984
    7. '_rc' → logprob: -13.250301361083984
    8. '_ref' → logprob: -13.375301361083984
    9. '_recursive' → logprob: -13.500301361083984
    10. '_r' → logprob: -14.250301361083984

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.707997428951785e-05
    2. '(
' → logprob: -10.125077247619629
    3. ' (' → logprob: -11.375077247619629
    4. '()' → logprob: -12.125077247619629
    5. '('' → logprob: -12.375077247619629
    6. '(

' → logprob: -12.375077247619629
    7. '((' → logprob: -12.500077247619629
    8. '(()' → logprob: -13.125077247619629
    9. '("("' → logprob: -14.000077247619629
    10. ' ' → logprob: -14.125077247619629

Token 19: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.21369144320487976
    2. '300' → logprob: -2.213691473007202
    3. '10' → logprob: -3.463691473007202
    4. '500' → logprob: -3.588691473007202
    5. '250' → logprob: -4.213691234588623
    6. '200' → logprob: -5.213691234588623
    7. '150' → logprob: -6.713691234588623
    8. ' ' → logprob: -7.088691234588623
    9. '400' → logprob: -7.213691234588623
    10. '999' → logprob: -8.213691711425781

Token 20: ' **' (ID: 6240)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '00' → logprob: -0.055667705833911896
    2. '0' → logprob: -3.5556676387786865
    3. '24' → logprob: -3.8056676387786865
    4. '000' → logprob: -6.555667877197266
    5. '**' → logprob: -7.055667877197266
    6. '2' → logprob: -7.430667877197266
    7. '48' → logprob: -8.805667877197266
    8. '_' → logprob: -9.680667877197266
    9. '29' → logprob: -10.055667877197266
    10. ')' → logprob: -10.555667877197266

Token 21: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.13324101269245148
    2. '6' → logprob: -2.3832409381866455
    3. '9' → logprob: -3.5082409381866455
    4. '8' → logprob: -6.008241176605225
    5. '4' → logprob: -9.758240699768066
    6. '5' → logprob: -10.758240699768066
    7. '**' → logprob: -12.633240699768066
    8. ' ' → logprob: -12.883240699768066
    9. '```' → logprob: -13.883240699768066
    10. '  ' → logprob: -15.508240699768066

Token 22: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.2724214792251587
    2. '6' → logprob: -1.6474214792251587
    3. '9' → logprob: -3.397421360015869
    4. '8' → logprob: -4.397421360015869
    5. '5' → logprob: -9.147421836853027
    6. '4' → logprob: -10.147421836853027
    7. '10' → logprob: -13.272421836853027
    8. ' ' → logprob: -13.397421836853027
    9. '**' → logprob: -13.772421836853027
    10. '```' → logprob: -14.147421836853027

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ' )' → logprob: -12.625005722045898
    3. ')
' → logprob: -13.750005722045898
    4. '))' → logprob: -14.000005722045898
    5. ')

' → logprob: -17.1250057220459
    6. ')`' → logprob: -17.3750057220459
    7. ')#' → logprob: -17.8750057220459
    8. '```' → logprob: -17.8750057220459
    9. '),' → logprob: -18.1250057220459
    10. ')
' → logprob: -18.3750057220459

Token 24: '_INFINITY' (ID: 188542)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35834717750549316
    2. ')' → logprob: -1.8583471775054932
    3. '#' → logprob: -3.358347177505493
    4. '

' → logprob: -3.733347177505493
    5. '\n' → logprob: -3.858347177505493
    6. '_' → logprob: -3.983347177505493
    7. '' → logprob: -4.358346939086914
    8. ' ' → logprob: -5.108346939086914
    9. 'newline' → logprob: -5.483346939086914
    10. ' 
' → logprob: -5.608346939086914

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029137829318642616
    2. '=' → logprob: -3.6541378498077393
    3. '_' → logprob: -6.02913761138916
    4. ' ' → logprob: -8.52913761138916
    5. '<|end|>' → logprob: -9.27913761138916
    6. ')' → logprob: -10.40413761138916
    7. ':' → logprob: -11.02913761138916
    8. ' _' → logprob: -11.27913761138916
    9. '_FULL' → logprob: -12.15413761138916
    10. ',' → logprob: -12.15413761138916

Token 26: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.43467333912849426
    2. ' float' → logprob: -1.1846733093261719
    3. ' ' → logprob: -3.434673309326172
    4. '10' → logprob: -4.309673309326172
    5. '1' → logprob: -7.684673309326172
    6. 'inf' → logprob: -9.184673309326172
    7. '100' → logprob: -9.434673309326172
    8. 'int' → logprob: -9.684673309326172
    9. ' inf' → logprob: -9.684673309326172
    10. '	float' → logprob: -9.809673309326172

Token 27: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.011962306685745716
    2. ''' → logprob: -4.761962413787842
    3. '(' → logprob: -6.386962413787842
    4. ''in' → logprob: -6.761962413787842
    5. '("' → logprob: -9.136961936950684
    6. ''a' → logprob: -9.636961936950684
    7. '"' → logprob: -9.761961936950684
    8. ''s' → logprob: -11.011961936950684
    9. '<|end|>' → logprob: -11.011961936950684
    10. '```' → logprob: -11.261961936950684

Token 28: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.050480250269174576
    2. ''in' → logprob: -3.050480365753174
    3. 'in' → logprob: -6.550480365753174
    4. ''' → logprob: -7.925480365753174
    5. 'info' → logprob: -9.925479888916016
    6. 'INF' → logprob: -11.175479888916016
    7. ''i' → logprob: -12.050479888916016
    8. 'i' → logprob: -12.175479888916016
    9. '"' → logprob: -12.425479888916016
    10. '-inf' → logprob: -12.425479888916016

Token 29: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.01815415732562542
    2. ')' → logprob: -4.018154144287109
    3. '')
' → logprob: -13.26815414428711
    4. '")' → logprob: -14.51815414428711
    5. ')'' → logprob: -14.89315414428711
    6. '')
' → logprob: -15.01815414428711
    7. ''' → logprob: -15.14315414428711
    8. '}')' → logprob: -15.39315414428711
    9. ' ')' → logprob: -15.64315414428711
    10. ''))' → logprob: -15.76815414428711

Token 30: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0910063236951828
    2. '_' → logprob: -3.591006278991699
    3. '

' → logprob: -3.591006278991699
    4. 'def' → logprob: -4.591006278991699
    5. '\n' → logprob: -5.216006278991699
    6. '#' → logprob: -5.841006278991699
    7. '' → logprob: -5.966006278991699
    8. ')' → logprob: -5.966006278991699
    9. '_
' → logprob: -6.466006278991699
    10. '
' → logprob: -6.591006278991699

Token 31: 'ULO' (ID: 63916)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27654799818992615
    2. '=' → logprob: -1.6515480279922485
    3. '_' → logprob: -3.026547908782959
    4. ' ' → logprob: -7.276547908782959
    5. ')' → logprob: -8.401548385620117
    6. '<|end|>' → logprob: -9.026548385620117
    7. ',' → logprob: -9.526548385620117
    8. '.' → logprob: -9.901548385620117
    9. '_MOD' → logprob: -10.901548385620117
    10. '_=' → logprob: -11.026548385620117

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07656580209732056
    2. '=' → logprob: -3.076565742492676
    3. '_' → logprob: -3.826565742492676
    4. ' ' → logprob: -5.201565742492676
    5. ' _' → logprob: -8.826565742492676
    6. '<|end|>' → logprob: -9.576565742492676
    7. ',' → logprob: -11.201565742492676
    8. '_=' → logprob: -11.201565742492676
    9. ')' → logprob: -11.201565742492676
    10. ' =)' → logprob: -11.576565742492676

Token 33: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.47833091020584106
    2. ' ' → logprob: -0.9783309102058411
    3. '100' → logprob: -5.478331089019775
    4. '1' → logprob: -9.978330612182617
    5. '998' → logprob: -10.978330612182617
    6. '2' → logprob: -13.353330612182617
    7. 'int' → logprob: -13.978330612182617
    8. ' int' → logprob: -14.728330612182617
    9. '(' → logprob: -14.728330612182617
    10. ' (' → logprob: -14.853330612182617

Token 34: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.012127915397286415
    2. '100' → logprob: -4.512127876281738
    3. ' ' → logprob: -7.637127876281738
    4. '998' → logprob: -7.637127876281738
    5. '1' → logprob: -9.137127876281738
    6. 'int' → logprob: -13.012127876281738
    7. '(' → logprob: -13.012127876281738
    8. '2' → logprob: -13.262127876281738
    9. '109' → logprob: -15.512127876281738
    10. 'pow' → logprob: -15.762127876281738

Token 35: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.34943413734436035
    2. '9' → logprob: -1.2244341373443604
    3. ' **' → logprob: -7.474433898925781
    4. '09' → logprob: -8.474433898925781
    5. '7' → logprob: -9.474433898925781
    6. '0' → logprob: -10.099433898925781
    7. '```' → logprob: -10.224433898925781
    8. ' ' → logprob: -10.474433898925781
    9. '000' → logprob: -11.724433898925781
    10. '^' → logprob: -12.349433898925781

Token 36: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.8889261304575484e-06
    2. '09' → logprob: -12.500003814697266
    3. '+' → logprob: -16.500003814697266
    4. ' ' → logprob: -17.625003814697266
    5. '10' → logprob: -19.125003814697266
    6. '```' → logprob: -20.250003814697266
    7. '0' → logprob: -20.750003814697266
    8. '18' → logprob: -21.000003814697266
    9. '19' → logprob: -21.375003814697266
    10. '９' → logprob: -21.625003814697266

Token 37: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009166952222585678
    2. ' +' → logprob: -4.759166717529297
    3. '7' → logprob: -7.509166717529297
    4. '+
' → logprob: -13.384166717529297
    5. '9' → logprob: -14.009166717529297
    6. ' plus' → logprob: -14.634166717529297
    7. ' +
' → logprob: -14.759166717529297
    8. '＋' → logprob: -14.884166717529297
    9. '+

' → logprob: -15.134166717529297
    10. ' ' → logprob: -16.134166717529297

Token 38: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. '+' → logprob: -14.62500286102295
    4. '07' → logprob: -17.125003814697266
    5. '```' → logprob: -17.250003814697266
    6. '   ' → logprob: -17.750003814697266
    7. '9' → logprob: -18.500003814697266
    8. '  ' → logprob: -18.500003814697266
    9. '1' → logprob: -18.875003814697266
    10. ' ' → logprob: -18.937503814697266

Token 39: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '+' → logprob: -19.25
    4. '```' → logprob: -19.75
    5. '07' → logprob: -19.875
    6. '７' → logprob: -20.375
    7. '   ' → logprob: -20.5
    8. '9' → logprob: -20.875
    9. '

' → logprob: -21.25
    10. '79' → logprob: -21.4375

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.703013002872467
    2. '_' → logprob: -1.3280129432678223
    3. '\n' → logprob: -2.7030129432678223
    4. 'newline' → logprob: -3.0780129432678223
    5. '#' → logprob: -3.2030129432678223
    6. '\' → logprob: -3.7030129432678223
    7. '<|end|>' → logprob: -4.453012943267822
    8. '' → logprob: -4.578012943267822
    9. ' 
' → logprob: -4.828012943267822
    10. 'def' → logprob: -5.078012943267822

Token 41: '__' (ID: 771)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34670260548591614
    2. 'def' → logprob: -1.5967025756835938
    3. '

' → logprob: -2.7217025756835938
    4. '\n' → logprob: -4.721702575683594
    5. '' → logprob: -5.471702575683594
    6. '_' → logprob: -5.721702575683594
    7. '#' → logprob: -5.846702575683594
    8. '\' → logprob: -6.721702575683594
    9. '
' → logprob: -7.471702575683594
    10. 'n' → logprob: -7.596702575683594

Token 42: 'stdin' (ID: 132953)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6702122092247009
    2. 'name' → logprob: -0.9202122092247009
    3. 'version' → logprob: -2.9202122688293457
    4. 'import' → logprob: -3.4202122688293457
    5. 'annotations' → logprob: -7.420212268829346
    6. 'author' → logprob: -7.545212268829346
    7. 'doc' → logprob: -8.045211791992188
    8. 'def' → logprob: -8.295211791992188
    9. 'next' → logprob: -8.295211791992188
    10. 'a' → logprob: -8.670211791992188

Token 43: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08079704642295837
    2. '__.' → logprob: -2.580796957015991
    3. '__.__' → logprob: -7.20579719543457
    4. ' =' → logprob: -7.33079719543457
    5. '___' → logprob: -9.08079719543457
    6. '=' → logprob: -9.58079719543457
    7. '.read' → logprob: -9.70579719543457
    8. '_read' → logprob: -9.83079719543457
    9. 'read' → logprob: -9.95579719543457
    10. '.' → logprob: -10.20579719543457

Token 44: ' _' (ID: 1175)
  Prédit: '_sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sys' → logprob: -0.01220622193068266
    2. ' _' → logprob: -5.387206077575684
    3. '__' → logprob: -6.012206077575684
    4. ' sys' → logprob: -6.512206077575684
    5. '_S' → logprob: -6.887206077575684
    6. 'sys' → logprob: -7.012206077575684
    7. '_input' → logprob: -8.012206077575684
    8. 'open' → logprob: -8.262206077575684
    9. '_s' → logprob: -8.512206077575684
    10. ' __' → logprob: -8.762206077575684

Token 45: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.6789137084269896e-05
    2. '_sys' → logprob: -10.25003719329834
    3. ' sys' → logprob: -13.75003719329834
    4. '=sys' → logprob: -16.000036239624023
    5. '	sys' → logprob: -16.000036239624023
    6. 'stdin' → logprob: -17.000036239624023
    7. '__' → logprob: -17.000036239624023
    8. 'ys' → logprob: -17.500036239624023
    9. '(sys' → logprob: -17.750036239624023
    10. 'sy' → logprob: -18.000036239624023

Token 46: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.006891792640089989
    2. '.' → logprob: -5.13189172744751
    3. '.stdout' → logprob: -7.88189172744751
    4. '.__' → logprob: -8.131892204284668
    5. '.argv' → logprob: -9.006892204284668
    6. '.std' → logprob: -9.756892204284668
    7. '._' → logprob: -10.131892204284668
    8. '.stderr' → logprob: -10.506892204284668
    9. ' .' → logprob: -11.256892204284668
    10. '.version' → logprob: -11.506892204284668

Token 47: '

' (ID: 279)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.264365017414093
    2. '.' → logprob: -1.8893649578094482
    3. '
' → logprob: -2.8893649578094482
    4. 'def' → logprob: -5.014365196228027
    5. '.read' → logprob: -5.139365196228027
    6. '\n' → logprob: -5.639365196228027
    7. 'read' → logprob: -5.764365196228027
    8. 'import' → logprob: -7.264365196228027
    9. '' → logprob: -7.389365196228027
    10. '.readlines' → logprob: -7.639365196228027

Token 48: 'sc' (ID: 2786)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3062114119529724
    2. '
' → logprob: -2.181211471557617
    3. '\n' → logprob: -3.181211471557617
    4. '_' → logprob: -3.431211471557617
    5. 'import' → logprob: -3.806211471557617
    6. '__' → logprob: -4.056211471557617
    7. '#' → logprob: -4.931211471557617
    8. '\' → logprob: -5.181211471557617
    9. 'class' → logprob: -5.681211471557617
    10. 'input' → logprob: -5.931211471557617

Token 49: ' =' (ID: 314)
  Prédit: 'anner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anner' → logprob: -0.6761155128479004
    2. 'an' → logprob: -1.4261155128479004
    3. '.readline' → logprob: -2.4261155128479004
    4. 'r' → logprob: -2.8011155128479004
    5. ' =' → logprob: -3.3011155128479004
    6. 'anf' → logprob: -3.4261155128479004
    7. 'canf' → logprob: -4.4261155128479
    8. '=' → logprob: -5.8011155128479
    9. '_' → logprob: -6.0511155128479
    10. 'affold' → logprob: -6.1761155128479

Token 50: ' lambda' (ID: 27871)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2542725205421448
    2. ' __' → logprob: -1.7542724609375
    3. 'input' → logprob: -3.8792724609375
    4. '.__' → logprob: -3.8792724609375
    5. ' input' → logprob: -5.3792724609375
    6. '.readline' → logprob: -5.6292724609375
    7. '_input' → logprob: -8.2542724609375
    8. '=input' → logprob: -8.5042724609375
    9. 'lambda' → logprob: -8.7542724609375
    10. '/__' → logprob: -8.8792724609375

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6292932033538818
    2. ' :' → logprob: -1.2542932033538818
    3. ' x' → logprob: -2.504293203353882
    4. ' input' → logprob: -3.129293203353882
    5. 'input' → logprob: -4.004293441772461
    6. 's' → logprob: -4.379293441772461
    7. ' s' → logprob: -4.754293441772461
    8. ' f' → logprob: -5.629293441772461
    9. 'x' → logprob: -5.879293441772461
    10. 'f' → logprob: -5.879293441772461

Token 52: ' __' (ID: 2516)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4332163333892822
    2. '__' → logprob: -1.8082163333892822
    3. 'input' → logprob: -2.3082163333892822
    4. ' input' → logprob: -3.5582163333892822
    5. ' int' → logprob: -3.6832163333892822
    6. ' __' → logprob: -3.8082163333892822
    7. 'map' → logprob: -5.433216094970703
    8. ' map' → logprob: -6.433216094970703
    9. '_int' → logprob: -6.433216094970703
    10. '_input' → logprob: -6.433216094970703

Token 53: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -1.2113979209971149e-05
    2. '.stdin' → logprob: -11.375012397766113
    3. '(stdin' → logprob: -14.625012397766113
    4. '_st' → logprob: -16.625011444091797
    5. ' stdin' → logprob: -17.875011444091797
    6. 'std' → logprob: -18.375011444091797
    7. 'stin' → logprob: -18.750011444091797
    8. 'stdout' → logprob: -18.875011444091797
    9. 'st' → logprob: -19.000011444091797
    10. 'stdio' → logprob: -19.000011444091797

Token 54: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.3795937522663735e-05
    2. '.' → logprob: -11.37502384185791
    3. '.read' → logprob: -11.37502384185791
    4. ' readline' → logprob: -14.75002384185791
    5. '.buffer' → logprob: -15.25002384185791
    6. '.readlines' → logprob: -16.375022888183594
    7. 'read' → logprob: -16.875022888183594
    8. '.__' → logprob: -17.250022888183594
    9. '.write' → logprob: -19.750022888183594
    10. 'buffer' → logprob: -20.250022888183594

Token 55: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014165983535349369
    2. '()' → logprob: -4.264165878295898
    3. '(' → logprob: -14.014165878295898
    4. ' ().' → logprob: -14.889165878295898
    5. '.rstrip' → logprob: -15.014165878295898
    6. '()
' → logprob: -15.264165878295898
    7. '()\' → logprob: -15.264165878295898
    8. '()

' → logprob: -16.1391658782959
    9. '.strip' → logprob: -16.1391658782959
    10. '().__' → logprob: -16.2641658782959

Token 56: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.048587825149297714
    2. 'rstrip' → logprob: -3.0485877990722656
    3. 'read' → logprob: -15.923587799072266
    4. 'str' → logprob: -16.048587799072266
    5. '_strip' → logprob: -16.548587799072266
    6. 'rst' → logprob: -17.048587799072266
    7. ' strip' → logprob: -17.298587799072266
    8. 'split' → logprob: -18.548587799072266
    9. '-strip' → logprob: -18.673587799072266
    10. 'decode' → logprob: -19.048587799072266

Token 57: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000719222822226584
    2. '()
' → logprob: -7.37571907043457
    3. '(' → logprob: -10.37571907043457
    4. '()\' → logprob: -10.50071907043457
    5. ')' → logprob: -11.75071907043457
    6. '()

' → logprob: -11.87571907043457
    7. '<|end|>' → logprob: -12.37571907043457
    8. ' ()' → logprob: -13.00071907043457
    9. '()]' → logprob: -13.12571907043457
    10. '())' → logprob: -13.12571907043457

Token 58: '_Y' (ID: 22477)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029232647269964218
    2. '
' → logprob: -4.779232501983643
    3. '\n' → logprob: -4.904232501983643
    4. '()' → logprob: -5.904232501983643
    5. 'n' → logprob: -5.904232501983643
    6. '\' → logprob: -6.654232501983643
    7. '_' → logprob: -6.654232501983643
    8. '_n' → logprob: -7.529232501983643
    9. '__' → logprob: -7.654232501983643
    10. 'd' → logprob: -7.779232501983643

Token 59: 'N' (ID: 45)
  Prédit: 'IELD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IELD' → logprob: -1.505753993988037
    2. '=' → logprob: -1.630753993988037
    3. 'ield' → logprob: -1.755753993988037
    4. ' =' → logprob: -2.255753993988037
    5. 'Y' → logprob: -2.380753993988037
    6. 'A' → logprob: -2.880753993988037
    7. '_' → logprob: -3.380753993988037
    8. 'O' → logprob: -3.880753993988037
    9. 'es' → logprob: -4.255753993988037
    10. 'E' → logprob: -4.255753993988037

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24085421860218048
    2. '=' → logprob: -1.990854263305664
    3. '_' → logprob: -2.615854263305664
    4. ' ' → logprob: -7.865854263305664
    5. 's' → logprob: -7.990854263305664
    6. 'O' → logprob: -8.115854263305664
    7. 'S' → logprob: -8.240854263305664
    8. '[]' → logprob: -8.365854263305664
    9. '_=' → logprob: -8.490854263305664
    10. '=lambda' → logprob: -8.615854263305664

Token 61: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.25822797417640686
    2. ' lambda' → logprob: -2.633228063583374
    3. 'int' → logprob: -3.633228063583374
    4. '['' → logprob: -3.758228063583374
    5. '(lambda' → logprob: -4.008227825164795
    6. '[]' → logprob: -4.508227825164795
    7. 'input' → logprob: -4.883227825164795
    8. ''' → logprob: -4.883227825164795
    9. ''s' → logprob: -5.008227825164795
    10. '{}' → logprob: -5.133227825164795

Token 62: ' cond' (ID: 4664)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7082056999206543
    2. ':' → logprob: -1.5832056999206543
    3. ' x' → logprob: -1.9582056999206543
    4. ' :' → logprob: -2.3332056999206543
    5. 's' → logprob: -3.3332056999206543
    6. 'x' → logprob: -4.333205699920654
    7. ' y' → logprob: -6.083205699920654
    8. ' ' → logprob: -6.083205699920654
    9. ' input' → logprob: -6.458205699920654
    10. ' lambda' → logprob: -6.458205699920654

Token 63: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03852394223213196
    2. ' :' → logprob: -3.2885239124298096
    3. ':"' → logprob: -8.28852367401123
    4. ':'' → logprob: -9.66352367401123
    5. ' :'' → logprob: -10.41352367401123
    6. ' ' → logprob: -10.53852367401123
    7. ':['' → logprob: -10.66352367401123
    8. '"' → logprob: -11.53852367401123
    9. ' and' → logprob: -11.66352367401123
    10. ':return' → logprob: -11.66352367401123

Token 64: ' (' (ID: 350)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5901845097541809
    2. '"' → logprob: -1.0901844501495361
    3. ' "' → logprob: -2.840184450149536
    4. ' '' → logprob: -3.090184450149536
    5. '("' → logprob: -6.465184688568115
    6. '('' → logprob: -6.715184688568115
    7. ' ("' → logprob: -7.215184688568115
    8. ' ' → logprob: -7.715184688568115
    9. '(' → logprob: -8.340184211730957
    10. ' ('' → logprob: -8.465184211730957

Token 65: 'lambda' (ID: 35280)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.29963648319244385
    2. '"' → logprob: -1.4246364831924438
    3. ' '' → logprob: -4.674636363983154
    4. ' "' → logprob: -6.299636363983154
    5. ''A' → logprob: -6.549636363983154
    6. '   ' → logprob: -7.049636363983154
    7. '('' → logprob: -7.549636363983154
    8. ''ok' → logprob: -7.674636363983154
    9. ''"' → logprob: -7.924636363983154
    10. '"B' → logprob: -8.049636840820312

Token 66: ' x' (ID: 1215)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2336976528167725
    2. '"' → logprob: -1.4836976528167725
    3. ' "' → logprob: -1.4836976528167725
    4. ' '' → logprob: -1.6086976528167725
    5. ':' → logprob: -3.2336976528167725
    6. ' ' → logprob: -5.733697891235352
    7. '[' → logprob: -6.483697891235352
    8. ' x' → logprob: -6.733697891235352
    9. ' ['' → logprob: -7.233697891235352
    10. '['' → logprob: -7.233697891235352

Token 67: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006603460758924484
    2. ' :' → logprob: -6.381603240966797
    3. ':(' → logprob: -7.006603240966797
    4. ':['' → logprob: -7.006603240966797
    5. '='' → logprob: -7.631603240966797
    6. ':'' → logprob: -7.631603240966797
    7. '=' → logprob: -7.756603240966797
    8. '=('' → logprob: -7.881603240966797
    9. ':x' → logprob: -8.006603240966797
    10. ':"' → logprob: -8.756603240966797

Token 68: ' x' (ID: 1215)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5014280080795288
    2. '"' → logprob: -1.5014280080795288
    3. ' '' → logprob: -2.3764281272888184
    4. ' "' → logprob: -2.7514281272888184
    5. '('' → logprob: -5.751428127288818
    6. '("' → logprob: -6.626428127288818
    7. '"x' → logprob: -6.751428127288818
    8. ''x' → logprob: -7.001428127288818
    9. '['' → logprob: -7.251428127288818
    10. '["' → logprob: -7.251428127288818

Token 69: ' if' (ID: 538)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6844722032546997
    2. 'and' → logprob: -1.0594722032546997
    3. ' if' → logprob: -2.43447208404541
    4. '[' → logprob: -3.18447208404541
    5. 'if' → logprob: -4.18447208404541
    6. '"' → logprob: -7.05947208404541
    7. ':' → logprob: -7.05947208404541
    8. '+' → logprob: -7.80947208404541
    9. '[-' → logprob: -8.05947208404541
    10. ')' → logprob: -8.43447208404541

Token 70: ' cond' (ID: 4664)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6630775332450867
    2. ''' → logprob: -1.0380775928497314
    3. ' "' → logprob: -3.2880775928497314
    4. ' '' → logprob: -3.7880775928497314
    5. '["' → logprob: -4.288077354431152
    6. '['' → logprob: -4.413077354431152
    7. '[' → logprob: -5.163077354431152
    8. '('' → logprob: -5.413077354431152
    9. '_' → logprob: -5.538077354431152
    10. ' ' → logprob: -5.663077354431152

Token 71: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.34861990809440613
    2. 'else' → logprob: -1.2236199378967285
    3. '	else' → logprob: -9.84861946105957
    4. 'and' → logprob: -10.22361946105957
    5. ' ' → logprob: -10.34861946105957
    6. '()' → logprob: -11.34861946105957
    7. '==' → logprob: -11.59861946105957
    8. '_else' → logprob: -12.09861946105957
    9. ' and' → logprob: -12.47361946105957
    10. '(' → logprob: -12.72361946105957

Token 72: ' None' (ID: 4662)
  Prédit: ' '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '')' → logprob: -1.8695704936981201
    2. ' (' → logprob: -2.24457049369812
    3. ' lambda' → logprob: -2.36957049369812
    4. ''' → logprob: -2.36957049369812
    5. ' '' → logprob: -2.61957049369812
    6. ' not' → logprob: -2.61957049369812
    7. '('' → logprob: -2.99457049369812
    8. '"' → logprob: -3.11957049369812
    9. ' "")' → logprob: -3.36957049369812
    10. ' ('' → logprob: -3.49457049369812

Token 73: ')(' (ID: 4898)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2034028172492981
    2. ')(' → logprob: -1.8284027576446533
    3. ' )' → logprob: -4.453402996063232
    4. '(True' → logprob: -6.328402996063232
    5. ')(_' → logprob: -6.328402996063232
    6. '(' → logprob: -6.453402996063232
    7. '(x' → logprob: -6.453402996063232
    8. '(lambda' → logprob: -7.078402996063232
    9. ')(
' → logprob: -7.328402996063232
    10. ',' → logprob: -7.578402996063232

Token 74: 'print' (ID: 1598)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13261251151561737
    2. '"' → logprob: -2.757612466812134
    3. '['' → logprob: -3.757612466812134
    4. '('' → logprob: -4.132612705230713
    5. ' '' → logprob: -5.007612705230713
    6. 'True' → logprob: -5.507612705230713
    7. '["' → logprob: -6.382612705230713
    8. ')' → logprob: -7.007612705230713
    9. '[' → logprob: -7.257612705230713
    10. '("' → logprob: -7.632612705230713

Token 75: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.24238541722297668
    2. '("' → logprob: -1.6173853874206543
    3. '(' → logprob: -4.492385387420654
    4. ')' → logprob: -5.492385387420654
    5. '(('' → logprob: -7.492385387420654
    6. '(*' → logprob: -8.367385864257812
    7. '(['' → logprob: -8.492385864257812
    8. '((' → logprob: -8.867385864257812
    9. '(("' → logprob: -9.242385864257812
    10. '())' → logprob: -10.367385864257812

Token 76: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.6478888392448425
    2. 'Yes' → logprob: -1.1478888988494873
    3. '"' → logprob: -3.1478888988494873
    4. 'NO' → logprob: -3.2728888988494873
    5. 'No' → logprob: -3.3978888988494873
    6. 'Y' → logprob: -5.022888660430908
    7. ' Yes' → logprob: -5.022888660430908
    8. '")' → logprob: -5.272888660430908
    9. 'OK' → logprob: -5.272888660430908
    10. ' YES' → logprob: -5.647888660430908

Token 77: '")' (ID: 1405)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7285860180854797
    2. '")' → logprob: -1.478585958480835
    3. '"))' → logprob: -1.728585958480835
    4. '\n' → logprob: -2.228585958480835
    5. '"));' → logprob: -6.978586196899414
    6. 'Yes' → logprob: -7.603586196899414
    7. '",' → logprob: -7.728586196899414
    8. 'No' → logprob: -7.728586196899414
    9. '"No' → logprob: -8.228586196899414
    10. '/no' → logprob: -8.228586196899414

Token 78: ' if' (ID: 538)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7061067223548889
    2. ' if' → logprob: -1.8311066627502441
    3. ' else' → logprob: -2.206106662750244
    4. ')' → logprob: -2.456106662750244
    5. 'if' → logprob: -2.706106662750244
    6. '()' → logprob: -3.206106662750244
    7. '"' → logprob: -3.456106662750244
    8. '("' → logprob: -5.206106662750244
    9. ' or' → logprob: -6.456106662750244
    10. ' ' → logprob: -6.706106662750244

Token 79: ' cond' (ID: 4664)
  Prédit: ' cond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cond' → logprob: -0.016548756510019302
    2. 'cond' → logprob: -4.1415486335754395
    3. ' not' → logprob: -8.016549110412598
    4. '(cond' → logprob: -9.141549110412598
    5. ' True' → logprob: -10.641549110412598
    6. 'not' → logprob: -10.641549110412598
    7. 'True' → logprob: -10.891549110412598
    8. ' condition' → logprob: -12.516549110412598
    9. ' False' → logprob: -13.391549110412598
    10. 'False' → logprob: -13.641549110412598

Token 80: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.008619893342256546
    2. 'else' → logprob: -4.758619785308838
    3. '	else' → logprob: -12.633620262145996
    4. ' ' → logprob: -14.258620262145996
    5. '()' → logprob: -14.633620262145996
    6. ')' → logprob: -15.008620262145996
    7. ' els' → logprob: -16.13361930847168
    8. ' ' → logprob: -16.63361930847168
    9. '_else' → logprob: -16.75861930847168
    10. '==' → logprob: -16.82111930847168

Token 81: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.022148413583636284
    2. ' print' → logprob: -4.147148609161377
    3. '"' → logprob: -5.147148609161377
    4. ' "' → logprob: -9.397148132324219
    5. '(print' → logprob: -9.522148132324219
    6. ' ' → logprob: -10.022148132324219
    7. 'None' → logprob: -10.772148132324219
    8. 'lambda' → logprob: -11.772148132324219
    9. 'False' → logprob: -11.897148132324219
    10. '("' → logprob: -11.897148132324219

Token 82: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.7491250875755213e-05
    2. ' ("' → logprob: -11.375027656555176
    3. '(' → logprob: -11.625027656555176
    4. '"' → logprob: -13.000027656555176
    5. '('' → logprob: -13.250027656555176
    6. ')' → logprob: -14.000027656555176
    7. '"No' → logprob: -14.625027656555176
    8. '(""))' → logprob: -14.875027656555176
    9. '("")' → logprob: -15.000027656555176
    10. ' ' → logprob: -15.000027656555176

Token 83: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0011034219060093164
    2. ' No' → logprob: -7.001103401184082
    3. '"' → logprob: -9.251103401184082
    4. '"No' → logprob: -9.501103401184082
    5. '")' → logprob: -12.126103401184082
    6. ' no' → logprob: -12.376103401184082
    7. ' ' → logprob: -12.626103401184082
    8. ')' → logprob: -13.376103401184082
    9. '(No' → logprob: -13.626103401184082
    10. '_No' → logprob: -14.126103401184082

Token 84: '"))
' (ID: 10990)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0263673048466444
    2. '))' → logprob: -3.6513671875
    3. ')")' → logprob: -10.6513671875
    4. '")' → logprob: -10.9013671875
    5. '"))' → logprob: -11.5263671875
    6. ')))' → logprob: -11.5263671875
    7. ' )' → logprob: -13.5263671875
    8. ')
' → logprob: -13.7763671875
    9. '`)' → logprob: -14.0263671875
    10. ''))' → logprob: -14.9013671875

Token 85: '_Y' (ID: 22477)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6567001938819885
    2. 'def' → logprob: -2.5317001342773438
    3. ' ' → logprob: -2.7817001342773438
    4. '(
' → logprob: -2.9067001342773438
    5. '<|end|>' → logprob: -2.9067001342773438
    6. '_' → logprob: -3.0317001342773438
    7. '(' → logprob: -3.0317001342773438
    8. ')' → logprob: -3.2817001342773438
    9. ' 
' → logprob: -3.7817001342773438
    10. '#' → logprob: -4.156700134277344

Token 86: 'ES' (ID: 1759)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.001375710591673851
    2. '_' → logprob: -6.876375675201416
    3. '=' → logprob: -9.251376152038574
    4. ' =' → logprob: -9.251376152038574
    5. '_N' → logprob: -10.376376152038574
    6. 'M' → logprob: -10.376376152038574
    7. '(' → logprob: -10.876376152038574
    8. '_=' → logprob: -12.313876152038574
    9. '[' → logprob: -12.688876152038574
    10. ' N' → logprob: -12.938876152038574

Token 87: 'NO' (ID: 14695)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08294682204723358
    2. '=' → logprob: -2.70794677734375
    3. 'N' → logprob: -4.45794677734375
    4. '_' → logprob: -6.95794677734375
    5. ',' → logprob: -9.08294677734375
    6. ' ' → logprob: -9.70794677734375
    7. '_=' → logprob: -10.33294677734375
    8. '_N' → logprob: -10.58294677734375
    9. '  ' → logprob: -11.08294677734375
    10. 'NO' → logprob: -11.20794677734375

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11615268141031265
    2. '=' → logprob: -2.241152763366699
    3. '_' → logprob: -5.866152763366699
    4. ' ' → logprob: -8.6161527633667
    5. '=lambda' → logprob: -8.8661527633667
    6. '_=' → logprob: -9.8661527633667
    7. '(' → logprob: -10.6161527633667
    8. ' =)' → logprob: -10.7411527633667
    9. ',' → logprob: -11.7411527633667
    10. ' _' → logprob: -11.8661527633667

Token 89: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4448656439781189
    2. ' lambda' → logprob: -1.0698657035827637
    3. '(lambda' → logprob: -4.319865703582764
    4. '_lambda' → logprob: -6.569865703582764
    5. '=lambda' → logprob: -7.694865703582764
    6. ' _' → logprob: -8.069865226745605
    7. '_Y' → logprob: -8.194865226745605
    8. '_' → logprob: -9.819865226745605
    9. ' =' → logprob: -9.944865226745605
    10. '[]' → logprob: -10.882365226745605

Token 90: ' cond' (ID: 4664)
  Prédit: ' cond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cond' → logprob: -0.12616509199142456
    2. 'cond' → logprob: -2.6261651515960693
    3. ' lambda' → logprob: -3.6261651515960693
    4. 'lambda' → logprob: -4.00116491317749
    5. '(cond' → logprob: -7.25116491317749
    6. '(lambda' → logprob: -8.626165390014648
    7. 'condition' → logprob: -8.876165390014648
    8. ' condition' → logprob: -9.126165390014648
    9. 'x' → logprob: -11.251165390014648
    10. 'bool' → logprob: -11.376165390014648

Token 91: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026382848620414734
    2. ' :' → logprob: -3.6513829231262207
    3. ',' → logprob: -11.276382446289062
    4. ':
' → logprob: -11.401382446289062
    5. 'lambda' → logprob: -11.526382446289062
    6. '=' → logprob: -12.026382446289062
    7. ' lambda' → logprob: -12.151382446289062
    8. 'print' → logprob: -12.151382446289062
    9. '=lambda' → logprob: -12.151382446289062
    10. '_:' → logprob: -12.651382446289062

Token 92: ' (' (ID: 350)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4759087562561035
    2. ' "' → logprob: -1.4759087562561035
    3. 'print' → logprob: -2.8509087562561035
    4. '("' → logprob: -3.1009087562561035
    5. ''' → logprob: -4.3509087562561035
    6. ' ("' → logprob: -4.4759087562561035
    7. ' print' → logprob: -4.7259087562561035
    8. '(' → logprob: -5.9759087562561035
    9. '('' → logprob: -5.9759087562561035
    10. ' '' → logprob: -5.9759087562561035

Token 93: 'lambda' (ID: 35280)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.33818963170051575
    2. 'print' → logprob: -2.0881896018981934
    3. ' "' → logprob: -2.4631896018981934
    4. ''' → logprob: -3.4631896018981934
    5. 'lambda' → logprob: -3.9631896018981934
    6. ' lambda' → logprob: -5.088189601898193
    7. ' print' → logprob: -5.463189601898193
    8. ' '' → logprob: -5.713189601898193
    9. '"x' → logprob: -5.963189601898193
    10. '("' → logprob: -6.088189601898193

Token 94: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.297983855009079
    2. 'x' → logprob: -1.6729838848114014
    3. '"' → logprob: -3.9229838848114014
    4. ' "' → logprob: -4.172983646392822
    5. 'print' → logprob: -4.547983646392822
    6. ' print' → logprob: -5.172983646392822
    7. '"x' → logprob: -5.297983646392822
    8. ' lambda' → logprob: -5.797983646392822
    9. 'lambda' → logprob: -6.172983646392822
    10. '("' → logprob: -6.422983646392822

Token 95: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016504127415828407
    2. ' :' → logprob: -9.500164985656738
    3. ':x' → logprob: -10.125164985656738
    4. 'print' → logprob: -10.625164985656738
    5. 'x' → logprob: -11.250164985656738
    6. ' x' → logprob: -12.250164985656738
    7. ':
' → logprob: -12.875164985656738
    8. '=' → logprob: -13.125164985656738
    9. ' if' → logprob: -15.125164985656738
    10. 's' → logprob: -15.250164985656738

Token 96: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8588708639144897
    2. 'print' → logprob: -1.1088708639144897
    3. '"' → logprob: -1.8588708639144897
    4. ' x' → logprob: -2.7338709831237793
    5. '"x' → logprob: -4.608870983123779
    6. ' print' → logprob: -5.233870983123779
    7. ' "' → logprob: -5.483870983123779
    8. '("' → logprob: -6.108870983123779
    9. '["' → logprob: -6.733870983123779
    10. ''' → logprob: -6.858870983123779

Token 97: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28549453616142273
    2. 'if' → logprob: -1.4104945659637451
    3. ')' → logprob: -6.910494327545166
    4. ':' → logprob: -7.285494327545166
    5. ' and' → logprob: -7.285494327545166
    6. 'print' → logprob: -7.660494327545166
    7. 'and' → logprob: -7.785494327545166
    8. '(' → logprob: -8.410494804382324
    9. '(print' → logprob: -8.410494804382324
    10. '[' → logprob: -8.910494804382324

Token 98: ' cond' (ID: 4664)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3787894546985626
    2. ' print' → logprob: -2.1287894248962402
    3. '"' → logprob: -2.5037894248962402
    4. ' x' → logprob: -3.7537894248962402
    5. ' cond' → logprob: -3.8787894248962402
    6. 'cond' → logprob: -4.25378942489624
    7. 'x' → logprob: -4.50378942489624
    8. '["' → logprob: -4.87878942489624
    9. ' "' → logprob: -5.62878942489624
    10. '(print' → logprob: -5.62878942489624

Token 99: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.04315311089158058
    2. 'else' → logprob: -3.1681530475616455
    3. ' ' → logprob: -9.043152809143066
    4. '	else' → logprob: -11.418152809143066
    5. '()' → logprob: -11.793152809143066
    6. ' is' → logprob: -12.293152809143066
    7. ' in' → logprob: -13.043152809143066
    8. '  ' → logprob: -13.293152809143066
    9. ' and' → logprob: -13.918152809143066
    10. '_else' → logprob: -13.918152809143066

Token 100: ' None' (ID: 4662)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5285801887512207
    2. ' print' → logprob: -1.0285801887512207
    3. ' None' → logprob: -3.7785801887512207
    4. 'None' → logprob: -4.278580188751221
    5. '(print' → logprob: -5.278580188751221
    6. ' (' → logprob: -6.153580188751221
    7. ' lambda' → logprob: -6.278580188751221
    8. '"' → logprob: -7.028580188751221
    9. '(lambda' → logprob: -7.153580188751221
    10. ' sys' → logprob: -7.153580188751221

Token 101: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.00126059097237885
    2. '(print' → logprob: -6.876260757446289
    3. ')' → logprob: -9.126260757446289
    4. '(' → logprob: -10.251260757446289
    5. ')((' → logprob: -10.501260757446289
    6. ' )(' → logprob: -11.126260757446289
    7. ')(
' → logprob: -11.626260757446289
    8. 'print' → logprob: -11.751260757446289
    9. ')(_' → logprob: -12.251260757446289
    10. ')(__' → logprob: -12.376260757446289

Token 102: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011304517975077033
    2. '"' → logprob: -7.7511305809021
    3. '("' → logprob: -8.251130104064941
    4. ' print' → logprob: -9.001130104064941
    5. '(print' → logprob: -9.501130104064941
    6. 'sys' → logprob: -10.001130104064941
    7. '["' → logprob: -10.126130104064941
    8. '(lambda' → logprob: -10.376130104064941
    9. 'lambda' → logprob: -10.626130104064941
    10. '('' → logprob: -11.251130104064941

Token 103: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011063982965424657
    2. '(' → logprob: -7.001106262207031
    3. '(("' → logprob: -8.751106262207031
    4. '(
' → logprob: -11.251106262207031
    5. '('' → logprob: -11.376106262207031
    6. '((' → logprob: -12.251106262207031
    7. '(["' → logprob: -12.626106262207031
    8. '(

' → logprob: -14.126106262207031
    9. '"' → logprob: -14.251106262207031
    10. '(""' → logprob: -14.626106262207031

Token 104: 'YES' (ID: 31958)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5008304119110107
    2. 'Yes' → logprob: -1.0008304119110107
    3. '("' → logprob: -3.8758304119110107
    4. 'YES' → logprob: -5.87583065032959
    5. '"No' → logprob: -6.50083065032959
    6. ''' → logprob: -7.50083065032959
    7. '“Yes' → logprob: -8.75083065032959
    8. 'No' → logprob: -8.75083065032959
    9. '(' → logprob: -9.25083065032959
    10. '('' → logprob: -9.37583065032959

Token 105: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -9.491498531133402e-06
    2. ')' → logprob: -11.625009536743164
    3. '"' → logprob: -15.000009536743164
    4. '')' → logprob: -15.750009536743164
    5. ')")' → logprob: -16.875009536743164
    6. '"))' → logprob: -17.125009536743164
    7. ' ")' → logprob: -18.125009536743164
    8. '”)' → logprob: -18.500009536743164
    9. '");' → logprob: -18.750009536743164
    10. '")
' → logprob: -18.750009536743164

Token 106: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019541697576642036
    2. ' if' → logprob: -4.2695417404174805
    3. '()' → logprob: -5.6445417404174805
    4. 'if' → logprob: -6.3945417404174805
    5. ' else' → logprob: -9.64454174041748
    6. ' )' → logprob: -10.14454174041748
    7. 'else' → logprob: -10.26954174041748
    8. '())' → logprob: -11.76954174041748
    9. '")' → logprob: -11.89454174041748
    10. ' ' → logprob: -13.51954174041748

Token 107: ' cond' (ID: 4664)
  Prédit: ' cond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cond' → logprob: -0.12697219848632812
    2. 'cond' → logprob: -2.126972198486328
    3. ' not' → logprob: -10.751972198486328
    4. 'not' → logprob: -11.751972198486328
    5. '(cond' → logprob: -11.751972198486328
    6. '_cond' → logprob: -12.626972198486328
    7. 'conds' → logprob: -14.001972198486328
    8. 'condition' → logprob: -14.626972198486328
    9. ' condition' → logprob: -14.626972198486328
    10. ' condi' → logprob: -15.126972198486328

Token 108: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.11282581090927124
    2. 'else' → logprob: -2.237825870513916
    3. '	else' → logprob: -13.487825393676758
    4. ' ' → logprob: -13.987825393676758
    5. '_else' → logprob: -14.737825393676758
    6. ' not' → logprob: -15.362825393676758
    7. ' ' → logprob: -16.112825393676758
    8. '    ' → logprob: -16.737825393676758
    9. '<|end|>' → logprob: -16.737825393676758
    10. 'not' → logprob: -16.737825393676758

Token 109: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.07889595627784729
    2. 'print' → logprob: -2.5788960456848145
    3. '(print' → logprob: -12.328895568847656
    4. ' ' → logprob: -13.953895568847656
    5. ' ' → logprob: -15.453895568847656
    6. '.print' → logprob: -15.453895568847656
    7. 'None' → logprob: -16.578895568847656
    8. '	print' → logprob: -16.578895568847656
    9. '#print' → logprob: -16.578895568847656
    10. ' None' → logprob: -16.703895568847656

Token 110: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002986392646562308
    2. '(' → logprob: -8.125298500061035
    3. '(
' → logprob: -13.750298500061035
    4. '('' → logprob: -14.250298500061035
    5. ' ("' → logprob: -14.875298500061035
    6. '"' → logprob: -15.250298500061035
    7. ' ' → logprob: -16.62529945373535
    8. ')' → logprob: -17.00029945373535
    9. '(

' → logprob: -17.00029945373535
    10. '(""))' → logprob: -17.75029945373535

Token 111: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -9.729906196298543e-06
    2. '"' → logprob: -12.125009536743164
    3. '"No' → logprob: -13.125009536743164
    4. ' NO' → logprob: -13.375009536743164
    5. 'No' → logprob: -15.000009536743164
    6. ''' → logprob: -15.250009536743164
    7. '_NO' → logprob: -15.625009536743164
    8. '.NO' → logprob: -17.625009536743164
    9. '(NO' → logprob: -18.375009536743164
    10. '"N' → logprob: -18.875009536743164

Token 112: '"))
' (ID: 10990)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7465890049934387
    2. '"))' → logprob: -0.7465890049934387
    3. ')' → logprob: -2.996588945388794
    4. ''))' → logprob: -6.496589183807373
    5. '")' → logprob: -7.621589183807373
    6. ')")' → logprob: -10.121588706970215
    7. ' "))' → logprob: -11.746588706970215
    8. '"' → logprob: -12.121588706970215
    9. ' ))' → logprob: -12.246588706970215
    10. ')))' → logprob: -12.371588706970215

Token 113: 'int' (ID: 491)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15848147869110107
    2. 'def' → logprob: -3.0334815979003906
    3. ')' → logprob: -3.6584815979003906
    4. '(' → logprob: -4.033481597900391
    5. '_
' → logprob: -4.158481597900391
    6. '#' → logprob: -4.783481597900391
    7. '
' → logprob: -5.283481597900391
    8. '\' → logprob: -5.533481597900391
    9. ' 
' → logprob: -6.033481597900391
    10. ' ' → logprob: -6.283481597900391

Token 114: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06586333364248276
    2. '<|end|>' → logprob: -2.8158633708953857
    3. '()' → logprob: -6.815863132476807
    4. '32' → logprob: -6.940863132476807
    5. '<|end|>' → logprob: -7.565863132476807
    6. '('' → logprob: -8.065863609313965
    7. '(
' → logprob: -9.065863609313965
    8. '("")' → logprob: -9.565863609313965
    9. '```' → logprob: -9.815863609313965
    10. '("' → logprob: -9.815863609313965

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6034537553787231
    2. '=' → logprob: -0.8534537553787231
    3. '()' → logprob: -4.728453636169434
    4. '_' → logprob: -5.228453636169434
    5. '=lambda' → logprob: -5.228453636169434
    6. ' ' → logprob: -6.978453636169434
    7. '_=' → logprob: -7.103453636169434
    8. 'input' → logprob: -7.353453636169434
    9. '32' → logprob: -7.353453636169434
    10. '=int' → logprob: -7.603453636169434

Token 116: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.31578731536865234
    2. ' lambda' → logprob: -1.4407873153686523
    3. '(lambda' → logprob: -4.065787315368652
    4. 'int' → logprob: -4.190787315368652
    5. ' int' → logprob: -7.815787315368652
    6. '=lambda' → logprob: -7.940787315368652
    7. '_lambda' → logprob: -8.065787315368652
    8. '0' → logprob: -8.190787315368652
    9. '(int' → logprob: -9.815787315368652
    10. 'lam' → logprob: -9.815787315368652

Token 117: ' x' (ID: 1215)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7110165953636169
    2. 'x' → logprob: -2.2110166549682617
    3. 'int' → logprob: -2.3360166549682617
    4. 's' → logprob: -2.4610166549682617
    5. ' :' → logprob: -3.4610166549682617
    6. ':int' → logprob: -3.5860166549682617
    7. ' s' → logprob: -3.8360166549682617
    8. '_' → logprob: -3.9610166549682617
    9. 'lambda' → logprob: -4.086016654968262
    10. ' x' → logprob: -4.086016654968262

Token 118: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20788225531578064
    2. '=int' → logprob: -2.2078821659088135
    3. '=' → logprob: -3.0828821659088135
    4. ':int' → logprob: -3.9578821659088135
    5. ' :' → logprob: -5.082882404327393
    6. '=x' → logprob: -5.957882404327393
    7. '(int' → logprob: -6.457882404327393
    8. ':x' → logprob: -6.832882404327393
    9. ':=' → logprob: -7.832882404327393
    10. 'int' → logprob: -7.957882404327393

Token 119: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12868329882621765
    2. ' int' → logprob: -2.62868332862854
    3. '0' → logprob: -3.12868332862854
    4. '(int' → logprob: -5.878683090209961
    5. 'x' → logprob: -7.128683090209961
    6. ' ' → logprob: -7.753683090209961
    7. '[int' → logprob: -7.878683090209961
    8. ' x' → logprob: -8.753683090209961
    9. ' (' → logprob: -10.253683090209961
    10. 'max' → logprob: -10.503683090209961

Token 120: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00044783088378608227
    2. '(' → logprob: -7.750447750091553
    3. '((' → logprob: -12.500448226928711
    4. 'x' → logprob: -12.500448226928711
    5. '0' → logprob: -13.125448226928711
    6. ' (' → logprob: -13.250448226928711
    7. '32' → logprob: -13.500448226928711
    8. '(str' → logprob: -13.875448226928711
    9. '()' → logprob: -14.375448226928711
    10. '(
' → logprob: -14.750448226928711

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09844609349966049
    2. ')-' → logprob: -3.2234461307525635
    3. '.strip' → logprob: -3.3484461307525635
    4. ' or' → logprob: -4.348445892333984
    5. ',' → logprob: -5.598445892333984
    6. '())' → logprob: -6.723445892333984
    7. ' )' → logprob: -8.348445892333984
    8. '()' → logprob: -8.473445892333984
    9. '-' → logprob: -9.223445892333984
    10. 'or' → logprob: -9.473445892333984

Token 122: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005950602237135172
    2. ' ' → logprob: -5.130950450897217
    3. '0' → logprob: -10.755950927734375
    4. 'int' → logprob: -15.630950927734375
    5. '(' → logprob: -16.505950927734375
    6. '<|end|>' → logprob: -16.505950927734375
    7. '  ' → logprob: -16.630950927734375
    8. ' ' → logprob: -17.505950927734375
    9. '１' → logprob: -17.630950927734375
    10. '48' → logprob: -17.630950927734375

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.126521035796031e-05
    2. ' ' → logprob: -9.375091552734375
    3. '0' → logprob: -12.000091552734375
    4. 'int' → logprob: -16.750091552734375
    5. '(' → logprob: -16.875091552734375
    6. '<|end|>' → logprob: -17.125091552734375
    7. '  ' → logprob: -17.750091552734375
    8. '48' → logprob: -18.000091552734375
    9. '2' → logprob: -18.125091552734375
    10. '[' → logprob: -18.375091552734375

Token 125: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7087745070457458
    2. 'def' → logprob: -1.2087745666503906
    3. '<|end|>' → logprob: -2.4587745666503906
    4. 'int' → logprob: -3.9587745666503906
    5. ')' → logprob: -3.9587745666503906
    6. '
' → logprob: -4.583774566650391
    7. 'newline' → logprob: -4.583774566650391
    8. '#' → logprob: -4.708774566650391
    9. '_
' → logprob: -4.958774566650391
    10. '\n' → logprob: -5.333774566650391

Token 126: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.058938395231962204
    2. '#' → logprob: -4.308938503265381
    3. '\n' → logprob: -4.558938503265381
    4. '\' → logprob: -4.683938503265381
    5. 'import' → logprob: -5.183938503265381
    6. 'd' → logprob: -5.308938503265381
    7. '_' → logprob: -5.808938503265381
    8. 'n' → logprob: -6.058938503265381
    9. '
' → logprob: -6.308938503265381
    10. 'a' → logprob: -7.183938503265381

Token 127: ' anti' (ID: 10329)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.15711809694766998
    2. ' _' → logprob: -2.532118082046509
    3. ' ' → logprob: -3.157118082046509
    4. ' solve' → logprob: -4.157118320465088
    5. ' read' → logprob: -6.282118320465088
    6. '_' → logprob: -6.407118320465088
    7. ' parse' → logprob: -6.532118320465088
    8. ' input' → logprob: -7.657118320465088
    9. '_main' → logprob: -8.40711784362793
    10. ' add' → logprob: -8.65711784362793

Token 128: '_flat' (ID: 103794)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8632329702377319
    2. '_pal' → logprob: -1.988232970237732
    3. '_re' → logprob: -3.2382330894470215
    4. '_c' → logprob: -3.3632330894470215
    5. 'pal' → logprob: -3.3632330894470215
    6. 'cip' → logprob: -3.3632330894470215
    7. 'c' → logprob: -3.4882330894470215
    8. 'd' → logprob: -3.6132330894470215
    9. '_loop' → logprob: -3.6132330894470215
    10. '_repeat' → logprob: -3.8632330894470215

Token 129: 'ten' (ID: 1305)
  Prédit: 'ten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.007959827780723572
    2. 'tern' → logprob: -5.007959842681885
    3. '_map' → logprob: -8.007959365844727
    4. 'teren' → logprob: -9.132959365844727
    5. '_t' → logprob: -9.382959365844727
    6. '_' → logprob: -9.382959365844727
    7. 'ter' → logprob: -9.632959365844727
    8. 't' → logprob: -9.757959365844727
    9. 'map' → logprob: -9.757959365844727
    10. '_list' → logprob: -10.132959365844727

Token 130: '(x' (ID: 4061)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.332282692193985
    2. '(' → logprob: -1.7072826623916626
    3. '(arr' → logprob: -3.332282781600952
    4. '(array' → logprob: -3.832282781600952
    5. '(list' → logprob: -4.582282543182373
    6. '(iter' → logprob: -5.707282543182373
    7. '(line' → logprob: -5.707282543182373
    8. '(indices' → logprob: -6.082282543182373
    9. '(s' → logprob: -6.332282543182373
    10. '(ls' → logprob: -6.332282543182373

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0801393985748291
    2. '):' → logprob: -2.580139398574829
    3. ':' → logprob: -7.95513916015625
    4. ' ,' → logprob: -8.08013916015625
    5. '):
' → logprob: -8.33013916015625
    6. ')' → logprob: -10.33013916015625
    7. 's' → logprob: -10.45513916015625
    8. ',index' → logprob: -10.45513916015625
    9. '[]):' → logprob: -10.58013916015625
    10. ',array' → logprob: -10.58013916015625

Token 132: ' *' (ID: 425)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.278904914855957
    2. 'w' → logprob: -1.778904914855957
    3. 'h' → logprob: -2.153904914855957
    4. 'shape' → logprob: -2.653904914855957
    5. 'dims' → logprob: -3.028904914855957
    6. 'width' → logprob: -3.028904914855957
    7. 'rows' → logprob: -3.403904914855957
    8. ' n' → logprob: -3.403904914855957
    9. 'd' → logprob: -3.778904914855957
    10. 'dim' → logprob: -4.028904914855957

Token 133: 'shape' (ID: 25343)
  Prédit: 'dims'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dims' → logprob: -0.4781763255596161
    2. 'shape' → logprob: -2.3531763553619385
    3. 'sizes' → logprob: -2.6031763553619385
    4. 'd' → logprob: -3.2281763553619385
    5. 'args' → logprob: -3.4781763553619385
    6. 'dim' → logprob: -3.6031763553619385
    7. 'n' → logprob: -4.228176116943359
    8. 'a' → logprob: -4.478176116943359
    9. 'L' → logprob: -4.853176116943359
    10. 'N' → logprob: -4.978176116943359

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004133372567594051
    2. '):
' → logprob: -5.504133224487305
    3. 's' → logprob: -10.754133224487305
    4. ':' → logprob: -11.504133224487305
    5. '):
' → logprob: -11.504133224487305
    6. ',' → logprob: -12.254133224487305
    7. ' ):' → logprob: -12.379133224487305
    8. ')' → logprob: -13.254133224487305
    9. '):

' → logprob: -13.629133224487305
    10. '():' → logprob: -14.254133224487305

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05126325786113739
    2. ':' → logprob: -3.0512633323669434
    3. ':
' → logprob: -7.176263332366943
    4. '	return' → logprob: -8.176262855529785
    5. ' return' → logprob: -8.301262855529785
    6. ' :' → logprob: -8.551262855529785
    7. ':return' → logprob: -8.676262855529785
    8. '    
' → logprob: -8.801262855529785
    9. ',' → logprob: -8.926262855529785
    10. 'return' → logprob: -9.301262855529785

Token 136: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7848470211029053
    2. ' res' → logprob: -2.0348470211029053
    3. 'if' (adapté à ' if') → logprob: -2.1598470211029053
    4. '   ' → logprob: -2.6598470211029053
    5. 'result' → logprob: -2.6598470211029053
    6. 'ret' → logprob: -3.2848470211029053
    7. 'return' → logprob: -3.4098470211029053
    8. 'out' → logprob: -3.9098470211029053
    9. 'from' → logprob: -4.534847259521484
    10. 'r' → logprob: -4.909847259521484

Token 137: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.553361177444458
    2. ' len' → logprob: -1.053361177444458
    3. ' not' → logprob: -2.678361177444458
    4. 'not' → logprob: -4.928360939025879
    5. '(len' → logprob: -8.553360939025879
    6. 'shape' → logprob: -10.053360939025879
    7. 'x' → logprob: -10.803360939025879
    8. ' isinstance' → logprob: -10.928360939025879
    9. ' x' → logprob: -11.428360939025879
    10. ' shape' → logprob: -11.553360939025879

Token 138: ' shape' (ID: 9591)
  Prédit: ' shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shape' → logprob: -0.1004086285829544
    2. 'shape' → logprob: -2.3504085540771484
    3. '(shape' → logprob: -8.850408554077148
    4. ' isinstance' → logprob: -10.850408554077148
    5. ' len' → logprob: -11.725408554077148
    6. '_shape' → logprob: -11.725408554077148
    7. '.shape' → logprob: -11.850408554077148
    8. 'len' → logprob: -12.225408554077148
    9. ' hasattr' → logprob: -12.225408554077148
    10. 'x' → logprob: -13.350408554077148

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20528236031532288
    2. ':
' → logprob: -2.08028244972229
    3. ':return' → logprob: -2.83028244972229
    4. ' or' → logprob: -6.455282211303711
    5. '[' → logprob: -10.205282211303711
    6. '   ' → logprob: -10.330282211303711
    7. 'or' → logprob: -10.580282211303711
    8. 'return' → logprob: -11.330282211303711
    9. ':
' → logprob: -12.830282211303711
    10. ' :' → logprob: -13.455282211303711

Token 140: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13909508287906647
    2. ':
' → logprob: -2.5140950679779053
    3. ':return' → logprob: -3.1390950679779053
    4. '       ' → logprob: -6.014095306396484
    5. '   ' → logprob: -6.139095306396484
    6. 'return' → logprob: -8.014095306396484
    7. ' return' → logprob: -8.264095306396484
    8. ' or' → logprob: -8.389095306396484
    9. ' :' → logprob: -9.514095306396484
    10. '	return' → logprob: -10.514095306396484

Token 141: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11372121423482895
    2. ' return' → logprob: -2.2387211322784424
    3. '   ' → logprob: -7.7387213706970215
    4. 'yield' → logprob: -8.363720893859863
    5. '       ' → logprob: -9.363720893859863
    6. '
' → logprob: -9.863720893859863
    7. '	return' → logprob: -10.488720893859863
    8. ' yield' → logprob: -10.613720893859863
    9. 'raise' → logprob: -11.238720893859863
    10. ' ' → logprob: -11.488720893859863

Token 142: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005592783447355032
    2. ' x' → logprob: -5.3805928230285645
    3. '[x' → logprob: -7.1305928230285645
    4. '[' → logprob: -8.880592346191406
    5. ' [' → logprob: -11.255592346191406
    6. '[]' → logprob: -11.505592346191406
    7. 'list' → logprob: -12.255592346191406
    8. 'None' → logprob: -13.505592346191406
    9. '(x' → logprob: -13.630592346191406
    10. 'iter' → logprob: -14.505592346191406

Token 143: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025424053892493248
    2. '
' → logprob: -4.275424003601074
    3. ' if' → logprob: -5.775424003601074
    4. '[' → logprob: -6.025424003601074
    5. 'if' → logprob: -6.025424003601074
    6. '    
' → logprob: -6.650424003601074
    7. 'return' → logprob: -7.525424003601074
    8. 'def' → logprob: -8.275424003601074
    9. 'import' → logprob: -8.525424003601074
    10. ' for' → logprob: -8.525424003601074

Token 144: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1871848106384277
    2. '
' → logprob: -1.3121848106384277
    3. ' if' → logprob: -1.9371848106384277
    4. 'idx' → logprob: -2.5621848106384277
    5. '   ' → logprob: -3.3121848106384277
    6. '    
' → logprob: -3.4371848106384277
    7. 'res' → logprob: -3.5621848106384277
    8. ' idx' → logprob: -4.437184810638428
    9. 'def' → logprob: -4.687184810638428
    10. 'lst' → logprob: -4.937184810638428

Token 145: ' sz' (ID: 8515)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.5401723384857178
    2. 'res' → logprob: -1.9151723384857178
    3. ' size' → logprob: -2.1651723384857178
    4. 'size' → logprob: -2.5401723384857178
    5. 'ret' → logprob: -2.9151723384857178
    6. ' ret' → logprob: -3.1651723384857178
    7. 'n' → logprob: -3.2901723384857178
    8. ' n' → logprob: -3.5401723384857178
    9. ' step' → logprob: -3.6651723384857178
    10. 'result' → logprob: -3.7901723384857178

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5247170925140381
    2. ' =' → logprob: -0.8997170925140381
    3. 'ape' → logprob: -7.524717330932617
    4. 'e' → logprob: -8.274717330932617
    5. '_' → logprob: -8.524717330932617
    6. '=[]' → logprob: -8.899717330932617
    7. ',' → logprob: -9.399717330932617
    8. '=int' → logprob: -9.649717330932617
    9. 's' → logprob: -9.774717330932617
    10. '=e' → logprob: -10.274717330932617

Token 147: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.19093483686447144
    2. '1' → logprob: -1.8159348964691162
    3. ' shape' → logprob: -4.815934658050537
    4. ' ' → logprob: -6.190934658050537
    5. '_shape' → logprob: -7.440934658050537
    6. 'int' → logprob: -8.940935134887695
    7. 'len' → logprob: -9.190935134887695
    8. '(shape' → logprob: -9.815935134887695
    9. 'x' → logprob: -10.315935134887695
    10. '.shape' → logprob: -10.940935134887695

Token 148: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.372916686814278e-05
    2. '0' → logprob: -10.2500638961792
    3. '[-' → logprob: -11.1250638961792
    4. '=' → logprob: -12.7500638961792
    5. '[
' → logprob: -13.1250638961792
    6. '__[' → logprob: -13.3750638961792
    7. 'def' → logprob: -13.5000638961792
    8. 'and' → logprob: -13.6250638961792
    9. 'import' → logprob: -14.2500638961792
    10. '=[' → logprob: -14.2500638961792

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.431207682704553e-05
    2. '[' → logprob: -10.375054359436035
    3. ' ' → logprob: -10.875054359436035
    4. '-' → logprob: -13.812554359436035
    5. '1' → logprob: -14.437554359436035
    6. '   ' → logprob: -14.875054359436035
    7. ']' → logprob: -15.125054359436035
    8. '(' → logprob: -15.250054359436035
    9. '```' → logprob: -15.437554359436035
    10. ' ' → logprob: -16.00005340576172

Token 150: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04862642660737038
    2. ']
' → logprob: -3.04862642288208
    3. ']

' → logprob: -11.423626899719238
    4. ']*' → logprob: -11.923626899719238
    5. ' ]' → logprob: -12.173626899719238
    6. ']
' → logprob: -12.173626899719238
    7. 'def' → logprob: -12.798626899719238
    8. '<|end|>' → logprob: -13.048626899719238
    9. '];' → logprob: -14.298626899719238
    10. ']int' → logprob: -14.423626899719238

Token 151: '   ' (ID: 271)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.1079615354537964
    2. 'res' → logprob: -1.3579615354537964
    3. ' rest' → logprob: -2.482961654663086
    4. ' n' → logprob: -2.607961654663086
    5. ' res' → logprob: -2.607961654663086
    6. 'ret' → logprob: -2.732961654663086
    7. 'n' → logprob: -3.232961654663086
    8. ' ret' → logprob: -4.357961654663086
    9. '_rest' → logprob: -4.607961654663086
    10. 'lst' → logprob: -4.982961654663086

Token 152: ' return' (ID: 622)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8016656041145325
    2. 'return' (adapté à ' return') → logprob: -1.5516655445098877
    3. 'rest' → logprob: -1.9266655445098877
    4. 'res' → logprob: -3.0516655445098877
    5. 'l' → logprob: -3.4266655445098877
    6. 'rem' → logprob: -3.6766655445098877
    7. 'lst' → logprob: -4.051665782928467
    8. 'ret' → logprob: -4.551665782928467
    9. 'out' → logprob: -4.551665782928467
    10. 'if' → logprob: -5.301665782928467

Token 153: ' [' (ID: 723)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.3106839656829834
    2. ' [' → logprob: -1.5606839656829834
    3. '[' → logprob: -3.0606839656829834
    4. '[
' → logprob: -4.6856842041015625
    5. '[array' → logprob: -8.685684204101562
    6. ' [
' → logprob: -9.060684204101562
    7. '[start' → logprob: -9.060684204101562
    8. '[list' → logprob: -9.060684204101562
    9. '[np' → logprob: -9.935684204101562
    10. '[y' → logprob: -9.935684204101562

Token 154: 'anti' (ID: 9590)
  Prédit: 'anti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anti' → logprob: -0.0017796645406633615
    2. ' anti' → logprob: -6.376779556274414
    3. 'x' → logprob: -9.751779556274414
    4. 'ant' → logprob: -11.501779556274414
    5. ' x' → logprob: -12.251779556274414
    6. '
' → logprob: -13.751779556274414
    7. '[' → logprob: -13.751779556274414
    8. ' ' → logprob: -14.751779556274414
    9. 'antic' → logprob: -15.126779556274414
    10. '   ' → logprob: -15.126779556274414

Token 155: '_flat' (ID: 103794)
  Prédit: '_flat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flat' → logprob: -1.5048530030981055e-06
    2. 'flatten' → logprob: -13.500001907348633
    3. 'flat' → logprob: -17.125001907348633
    4. '_fl' → logprob: -18.250001907348633
    5. '_flush' → logprob: -19.250001907348633
    6. '(flat' → logprob: -19.750001907348633
    7. '_fold' → logprob: -20.000001907348633
    8. '_float' → logprob: -20.500001907348633
    9. '_' → logprob: -20.625001907348633
    10. '_floor' → logprob: -20.750001907348633

Token 156: 'ten' (ID: 1305)
  Prédit: 'ten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.005241583567112684
    2. 'atten' → logprob: -5.880241394042969
    3. 'en' → logprob: -6.505241394042969
    4. '(x' → logprob: -8.130241394042969
    5. 'tten' → logprob: -8.630241394042969
    6. '[' → logprob: -8.630241394042969
    7. 'len' → logprob: -9.255241394042969
    8. 'at' → logprob: -10.255241394042969
    9. 't' → logprob: -10.255241394042969
    10. '(' → logprob: -11.005241394042969

Token 157: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004072820767760277
    2. 'x' → logprob: -5.629072666168213
    3. '(' → logprob: -7.754072666168213
    4. ' x' → logprob: -11.004073143005371
    5. '(
' → logprob: -11.129073143005371
    6. ' (' → logprob: -11.879073143005371
    7. '[x' → logprob: -13.129073143005371
    8. '((' → logprob: -14.129073143005371
    9. '
' → logprob: -14.629073143005371
    10. '([' → logprob: -14.754073143005371

Token 158: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11365875601768494
    2. '[i' → logprob: -2.2386586666107178
    3. '[:' → logprob: -7.738658905029297
    4. '[x' → logprob: -8.738658905029297
    5. '[
' → logprob: -9.988658905029297
    6. '[(' → logprob: -10.613658905029297
    7. '[idx' → logprob: -10.738658905029297
    8. '[_' → logprob: -10.988658905029297
    9. '[cnt' → logprob: -10.988658905029297
    10. '[j' → logprob: -11.113658905029297

Token 159: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.014201114885509014
    2. ' *' → logprob: -4.2642011642456055
    3. '*(' → logprob: -10.264201164245605
    4. '*i' → logprob: -13.514201164245605
    5. ' ' → logprob: -15.014201164245605
    6. ']' → logprob: -15.264201164245605
    7. ':' → logprob: -15.639201164245605
    8. '   ' → logprob: -16.01420021057129
    9. '*s' → logprob: -16.13920021057129
    10. '(sz' → logprob: -16.38920021057129

Token 160: 'len' (ID: 3303)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.6938619017601013
    2. '(sz' → logprob: -0.6938619017601013
    3. '(' → logprob: -7.818861961364746
    4. '(s' → logprob: -8.943861961364746
    5. '(shape' → logprob: -9.818861961364746
    6. 'shape' → logprob: -9.818861961364746
    7. '_sz' → logprob: -11.193861961364746
    8. '(len' → logprob: -11.318861961364746
    9. 'len' → logprob: -11.818861961364746
    10. '((' → logprob: -11.818861961364746

Token 161: '(x' (ID: 4061)
  Prédit: '(shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shape' → logprob: -0.4608269929885864
    2. '(x' → logprob: -1.4608269929885864
    3. 'shape' → logprob: -2.085826873779297
    4. 'x' → logprob: -5.085826873779297
    5. '=' → logprob: -6.585826873779297
    6. '(' → logprob: -6.585826873779297
    7. ' shape' → logprob: -7.335826873779297
    8. 'e' → logprob: -7.585826873779297
    9. 'hape' → logprob: -7.585826873779297
    10. '_shape' → logprob: -7.710826873779297

Token 162: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.018078649416565895
    2. ')//' → logprob: -4.893078804016113
    3. ' //' → logprob: -5.018078804016113
    4. ')' → logprob: -6.393078804016113
    5. 'shape' → logprob: -7.143078804016113
    6. '(shape' → logprob: -7.393078804016113
    7. 'x' → logprob: -8.768078804016113
    8. '.shape' → logprob: -8.893078804016113
    9. ' ' → logprob: -9.018078804016113
    10. ']' → logprob: -9.768078804016113

Token 163: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.00036406738217920065
    2. '(sz' → logprob: -8.500364303588867
    3. ' sz' → logprob: -8.750364303588867
    4. ' ' → logprob: -13.875364303588867
    5. '   ' → logprob: -14.500364303588867
    6. '_sz' → logprob: -15.000364303588867
    7. '  ' → logprob: -16.250364303588867
    8. '.sz' → logprob: -16.375364303588867
    9. 'shape' → logprob: -16.500364303588867
    10. 'size' → logprob: -16.750364303588867

Token 164: ' :' (ID: 712)
  Prédit: ':('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':(' → logprob: -0.6405936479568481
    2. ':i' → logprob: -1.2655936479568481
    3. '//' → logprob: -1.8905936479568481
    4. ' //' → logprob: -3.7655935287475586
    5. ' :' → logprob: -5.265593528747559
    6. ':' → logprob: -5.515593528747559
    7. '(i' → logprob: -5.765593528747559
    8. 'sz' → logprob: -6.140593528747559
    9. '[i' → logprob: -7.640593528747559
    10. ' :(' → logprob: -7.765593528747559

Token 165: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03876582533121109
    2. ' (' → logprob: -3.2887659072875977
    3. '(' → logprob: -7.538765907287598
    4. ' ' → logprob: -8.913765907287598
    5. '   ' → logprob: -10.413765907287598
    6. '  ' → logprob: -11.413765907287598
    7. 'i' → logprob: -12.288765907287598
    8. '(n' → logprob: -13.288765907287598
    9. '(I' → logprob: -13.288765907287598
    10. '((' → logprob: -13.538765907287598

Token 166: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008637377060949802
    2. '(i' → logprob: -4.758637428283691
    3. ' i' → logprob: -11.508637428283691
    4. ' (' → logprob: -12.008637428283691
    5. '   ' → logprob: -12.758637428283691
    6. '{i' → logprob: -13.758637428283691
    7. ' ' → logprob: -14.008637428283691
    8. '	i' → logprob: -14.883637428283691
    9. '```' → logprob: -15.383637428283691
    10. '[i' → logprob: -15.508637428283691

Token 167: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003812217037193477
    2. ' +' → logprob: -7.875380992889404
    3. '1' → logprob: -14.750381469726562
    4. '+i' → logprob: -16.000381469726562
    5. '+
' → logprob: -16.000381469726562
    6. '+(' → logprob: -16.000381469726562
    7. '*' → logprob: -16.125381469726562
    8. ' ' → logprob: -16.125381469726562
    9. 'sz' → logprob: -16.875381469726562
    10. '(i' → logprob: -17.250381469726562

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014507099986076355
    2. 'sz' → logprob: -6.751450538635254
    3. '(sz' → logprob: -8.626450538635254
    4. '(i' → logprob: -10.126450538635254
    5. 'i' → logprob: -10.376450538635254
    6. ' ' → logprob: -10.876450538635254
    7. '```' → logprob: -12.251450538635254
    8. '(' → logprob: -13.626450538635254
    9. '   ' → logprob: -13.626450538635254
    10. '
' → logprob: -13.876450538635254

Token 169: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.31385883688926697
    2. '*' → logprob: -1.3138588666915894
    3. ']*' → logprob: -8.313858985900879
    4. ')*(' → logprob: -8.688858985900879
    5. ')' → logprob: -9.188858985900879
    6. '*i' → logprob: -10.063858985900879
    7. 'sz' → logprob: -12.313858985900879
    8. '*j' → logprob: -12.313858985900879
    9. '*(' → logprob: -12.813858985900879
    10. '*)' → logprob: -12.938858985900879

Token 170: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.088346359931165e-07
    2. ' len' → logprob: -14.625000953674316
    3. '(len' → logprob: -14.750000953674316
    4. '	len' → logprob: -19.875
    5. '[len' → logprob: -20.375
    6. 'sz' → logprob: -20.5
    7. '_len' → logprob: -20.5
    8. ' ' → logprob: -22.25
    9. '=len' → logprob: -22.875
    10. '
' → logprob: -23.0

Token 171: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.029753385111689568
    2. 'x' → logprob: -3.5297534465789795
    3. '(' → logprob: -13.279753684997559
    4. ' x' → logprob: -14.029753684997559
    5. '{x' → logprob: -16.279752731323242
    6. ' ' → logprob: -16.279752731323242
    7. '```' → logprob: -16.279752731323242
    8. ')x' → logprob: -16.529752731323242
    9. '	x' → logprob: -17.154752731323242
    10. 'a' → logprob: -18.404752731323242

Token 172: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -9.758300438988954e-05
    2. ')' → logprob: -9.875097274780273
    3. '//' → logprob: -10.000097274780273
    4. ' )' → logprob: -14.875097274780273
    5. '}//' → logprob: -15.375097274780273
    6. ' ' → logprob: -17.375097274780273
    7. ')#' → logprob: -17.375097274780273
    8. '){//' → logprob: -18.000097274780273
    9. ')]' → logprob: -18.375097274780273
    10. ')])' → logprob: -18.500097274780273

Token 173: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -1.9862216504407115e-05
    2. ' sz' → logprob: -11.000020027160645
    3. ' ' → logprob: -13.500020027160645
    4. '   ' → logprob: -14.125020027160645
    5. '(sz' → logprob: -14.875020027160645
    6. '  ' → logprob: -15.375020027160645
    7. '_sz' → logprob: -16.125019073486328
    8. '    ' → logprob: -16.125019073486328
    9. '.sz' → logprob: -16.750019073486328
    10. '       ' → logprob: -17.500019073486328

Token 174: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.001971577061340213
    2. '])' → logprob: -6.25197172164917
    3. ' ],' → logprob: -10.876971244812012
    4. ']' → logprob: -11.251971244812012
    5. ' ' → logprob: -12.501971244812012
    6. ',' → logprob: -13.126971244812012
    7. '   ' → logprob: -13.251971244812012
    8. '),' → logprob: -13.626971244812012
    9. '  ' → logprob: -14.001971244812012
    10. '    ' → logprob: -15.376971244812012

Token 175: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0052597299218177795
    2. '   ' → logprob: -6.3802595138549805
    3. ' *' → logprob: -7.1302595138549805
    4. '*s' → logprob: -7.1302595138549805
    5. '*(' → logprob: -7.6302595138549805
    6. '*k' → logprob: -8.75525951385498
    7. '*m' → logprob: -9.00525951385498
    8. '  ' → logprob: -9.13025951385498
    9. '*[' → logprob: -9.25525951385498
    10. '*i' → logprob: -9.50525951385498

Token 176: 'shape' (ID: 25343)
  Prédit: 'shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.0007294706883840263
    2. ' shape' → logprob: -7.250729560852051
    3. '(shape' → logprob: -10.87572956085205
    4. '.shape' → logprob: -15.62572956085205
    5. '_shape' → logprob: -16.375728607177734
    6. '   ' → logprob: -16.750728607177734
    7. ' ' → logprob: -17.125728607177734
    8. 's' → logprob: -17.875728607177734
    9. 'hape' → logprob: -18.000728607177734
    10. '  ' → logprob: -18.375728607177734

Token 177: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.729906196298543e-06
    2. '1' → logprob: -11.875009536743164
    3. '   ' → logprob: -13.750009536743164
    4. ')' → logprob: -14.000009536743164
    5. '```' → logprob: -15.375009536743164
    6. ' [' → logprob: -15.500009536743164
    7. '[i' → logprob: -15.750009536743164
    8. '
' → logprob: -16.750009536743164
    9. '(' → logprob: -16.875009536743164
    10. '2' → logprob: -16.875009536743164

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043054912239313126
    2. '[' → logprob: -3.1680548191070557
    3. '   ' → logprob: -11.168054580688477
    4. '```' → logprob: -11.418054580688477
    5. ' ' → logprob: -11.918054580688477
    6. '
' → logprob: -12.043054580688477
    7. 'from' → logprob: -12.043054580688477
    8. '[i' → logprob: -12.793054580688477
    9. ' [' → logprob: -12.918054580688477
    10. '(' → logprob: -14.105554580688477

Token 179: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7705106139183044
    2. '[' → logprob: -0.7705106139183044
    3. ')]' → logprob: -3.020510673522949
    4. '])' → logprob: -3.770510673522949
    5. '1' → logprob: -7.020510673522949
    6. ')])' → logprob: -7.770510673522949
    7. '   ' → logprob: -7.895510673522949
    8. ')]
' → logprob: -8.52051067352295
    9. ' )' → logprob: -8.64551067352295
    10. ')
' → logprob: -8.89551067352295

Token 180: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.08944896562025e-05
    2. ')
' → logprob: -10.000081062316895
    3. '))' → logprob: -10.625081062316895
    4. ' )' → logprob: -11.875081062316895
    5. ')`' → logprob: -13.750081062316895
    6. '   ' → logprob: -13.875081062316895
    7. ' ' → logprob: -14.125081062316895
    8. '）' → logprob: -15.500081062316895
    9. '  ' → logprob: -15.500081062316895
    10. '])' → logprob: -15.750081062316895

Token 181: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25526851415634155
    2. 'for' → logprob: -1.5052685737609863
    3. ')' → logprob: -5.880268573760986
    4. '   ' → logprob: -8.255268096923828
    5. '	for' → logprob: -8.255268096923828
    6. ' ' → logprob: -11.380268096923828
    7. '[i' → logprob: -13.005268096923828
    8. ']' → logprob: -13.505268096923828
    9. '    ' → logprob: -13.880268096923828
    10. '  ' → logprob: -13.880268096923828

Token 182: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20168328285217285
    2. 'i' → logprob: -1.7016832828521729
    3. ' range' → logprob: -8.576683044433594
    4. 'range' → logprob: -9.451683044433594
    5. '	i' → logprob: -13.451683044433594
    6. ' ' → logprob: -14.451683044433594
    7. '_i' → logprob: -14.951683044433594
    8. ' in' → logprob: -15.576683044433594
    9. ' ' → logprob: -16.076683044433594
    10. '  ' → logprob: -16.451683044433594

Token 183: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14269912242889404
    2. 'in' → logprob: -2.0176992416381836
    3. 'range' → logprob: -11.517699241638184
    4. ' ' → logprob: -12.392699241638184
    5. ' range' → logprob: -12.642699241638184
    6. '<|end|>' → logprob: -12.767699241638184
    7. '_' → logprob: -13.892699241638184
    8. ')' → logprob: -14.767699241638184
    9. 'import' → logprob: -15.267699241638184
    10. '	in' → logprob: -15.267699241638184

Token 184: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006715370807796717
    2. ' range' → logprob: -5.006715297698975
    3. '	range' → logprob: -17.506715774536133
    4. '(range' → logprob: -18.756715774536133
    5. ' ' → logprob: -18.881715774536133
    6. ' xrange' → logprob: -19.506715774536133
    7. '   ' → logprob: -20.381715774536133
    8. '  ' → logprob: -21.631715774536133
    9. 'rang' → logprob: -21.756715774536133
    10. '
' → logprob: -21.881715774536133

Token 185: '(sz' (ID: 80788)
  Prédit: '(sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sz' → logprob: -0.000158842682139948
    2. 'sz' → logprob: -8.75015926361084
    3. ' sz' → logprob: -15.12515926361084
    4. '(' → logprob: -17.000158309936523
    5. '_sz' → logprob: -18.500158309936523
    6. '(s' → logprob: -19.875158309936523
    7. 'Sz' → logprob: -19.875158309936523
    8. 's' → logprob: -20.250158309936523
    9. '   ' → logprob: -20.375158309936523
    10. '.sz' → logprob: -20.500158309936523

Token 186: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00622644042596221
    2. ')' → logprob: -5.131226539611816
    3. ']' → logprob: -8.131226539611816
    4. ')])' → logprob: -13.506226539611816
    5. '])' → logprob: -14.506226539611816
    6. ' )' → logprob: -14.756226539611816
    7. ')],' → logprob: -15.006226539611816
    8. '))' → logprob: -15.381226539611816
    9. ')}' → logprob: -15.881226539611816
    10. ')]
' → logprob: -16.0062255859375

Token 187: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008970375172793865
    2. ')' → logprob: -6.133970260620117
    3. '_' → logprob: -6.258970260620117
    4. '#' → logprob: -7.133970260620117
    5. ' def' → logprob: -7.133970260620117
    6. '<|end|>' → logprob: -7.383970260620117
    7. ':' → logprob: -7.758970260620117
    8. '(' → logprob: -7.883970260620117
    9. 'import' → logprob: -8.258970260620117
    10. '[' → logprob: -8.383970260620117

Token 188: ' _' (ID: 1175)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.21618056297302246
    2. ' solve' → logprob: -2.4661805629730225
    3. ' dfs' → logprob: -3.9661805629730225
    4. ' factorial' → logprob: -4.091180801391602
    5. ' _' → logprob: -4.341180801391602
    6. ' gcd' → logprob: -4.716180801391602
    7. ' pow' → logprob: -5.091180801391602
    8. 'main' → logprob: -5.716180801391602
    9. ' input' → logprob: -5.716180801391602
    10. ' mod' → logprob: -5.716180801391602

Token 189: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.96135413646698
    2. 'input' → logprob: -1.83635413646698
    3. 'pow' → logprob: -2.2113542556762695
    4. 'dfs' → logprob: -3.0863542556762695
    5. 'g' → logprob: -3.3363542556762695
    6. 'set' → logprob: -3.4613542556762695
    7. 'read' → logprob: -3.5863542556762695
    8. 'mod' → logprob: -3.7113542556762695
    9. 'get' → logprob: -3.8363542556762695
    10. 'solve' → logprob: -4.0863542556762695

Token 190: '_' (ID: 62)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -1.5094070477061905e-05
    2. ' ():' → logprob: -11.500015258789062
    3. '(' → logprob: -13.250015258789062
    4. '()' → logprob: -13.375015258789062
    5. '():
' → logprob: -13.500015258789062
    6. '(:' → logprob: -15.750015258789062
    7. '()>' → logprob: -17.000015258789062
    8. ':' → logprob: -17.625015258789062
    9. '(":' → logprob: -18.000015258789062
    10. '(*' → logprob: -18.125015258789062

Token 191: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0087516784551553e-05
    2. ' ():' → logprob: -11.62501049041748
    3. '():
' → logprob: -14.00001049041748
    4. '()' → logprob: -15.12501049041748
    5. '(' → logprob: -17.500009536743164
    6. ':' → logprob: -18.000009536743164
    7. '():
' → logprob: -19.750009536743164
    8. '(:' → logprob: -19.875009536743164
    9. '(*' → logprob: -20.125009536743164
    10. '(":' → logprob: -20.500009536743164

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025670863687992096
    2. ' n' → logprob: -3.7756707668304443
    3. 'n' → logprob: -6.150671005249023
    4. '	n' → logprob: -8.900671005249023
    5. '    ' → logprob: -9.650671005249023
    6. ' line' → logprob: -11.025671005249023
    7. '    
' → logprob: -11.275671005249023
    8. ' pass' → logprob: -11.650671005249023
    9. '_n' → logprob: -12.025671005249023
    10. ' input' → logprob: -12.650671005249023

Token 193: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2023315131664276
    2. 'N' → logprob: -1.95233154296875
    3. '   ' → logprob: -3.57733154296875
    4. ' n' → logprob: -4.82733154296875
    5. 't' → logprob: -5.70233154296875
    6. ' N' → logprob: -7.45233154296875
    7. '_n' → logprob: -8.20233154296875
    8. 'q' → logprob: -8.82733154296875
    9. 'h' → logprob: -8.95233154296875
    10. 'import' → logprob: -9.32733154296875

Token 194: ' Reading' (ID: 23353)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17116513848304749
    2. 'N' → logprob: -2.1711652278900146
    3. 't' → logprob: -3.9211652278900146
    4. 'h' → logprob: -5.9211649894714355
    5. 'pass' → logprob: -5.9211649894714355
    6. ' n' → logprob: -6.0461649894714355
    7. '   ' → logprob: -6.0461649894714355
    8. 'from' → logprob: -6.2961649894714355
    9. '#' → logprob: -6.5461649894714355
    10. 'import' → logprob: -6.5461649894714355

Token 195: ' inputs' (ID: 21963)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5390793681144714
    2. 'n' → logprob: -0.9140793681144714
    3. '   ' → logprob: -5.164079189300537
    4. 'N' → logprob: -5.664079189300537
    5. ' N' → logprob: -5.664079189300537
    6. ' t' → logprob: -7.164079189300537
    7. ' ' → logprob: -7.664079189300537
    8. 't' → logprob: -7.914079189300537
    9. ' q' → logprob: -7.914079189300537
    10. 'q' → logprob: -8.289079666137695

Token 196: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004270834848284721
    2. 'n' → logprob: -6.129271030426025
    3. ' n' → logprob: -7.004271030426025
    4. '    ' → logprob: -8.504270553588867
    5. '(n' → logprob: -8.629270553588867
    6. '    
' → logprob: -8.879270553588867
    7. 'a' → logprob: -9.254270553588867
    8. 'x' → logprob: -9.879270553588867
    9. ',' → logprob: -10.129270553588867
    10. 'N' → logprob: -10.254270553588867

Token 197: ' weird' (ID: 28783)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.153188705444336
    2. ' =' → logprob: -2.278188705444336
    3. 'py' → logprob: -2.528188705444336
    4. 'the' → logprob: -2.778188705444336
    5. 'python' → logprob: -2.778188705444336
    6. 'sc' → logprob: -2.778188705444336
    7. 't' → logprob: -2.903188705444336
    8. 'a' → logprob: -2.903188705444336
    9. 'one' → logprob: -3.278188705444336
    10. 'Python' → logprob: -3.278188705444336

Token 198: ' order' (ID: 2569)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.9683560132980347
    2. 'ways' → logprob: -1.4683560132980347
    3. ' way' → logprob: -1.7183560132980347
    4. 'format' → logprob: -2.843356132507324
    5. 'formats' → logprob: -3.093356132507324
    6. 'way' → logprob: -3.593356132507324
    7. ' manner' → logprob: -4.343356132507324
    8. ' format' → logprob: -4.468356132507324
    9. 'fashion' → logprob: -4.593356132507324
    10. ' style' → logprob: -4.968356132507324

Token 199: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12276904284954071
    2. '<|end|>' → logprob: -2.8727691173553467
    3. ',' → logprob: -3.3727691173553467
    4. '<|end|>' → logprob: -5.122768878936768
    5. '    
' → logprob: -5.997768878936768
    6. ')' → logprob: -6.122768878936768
    7. '
' → logprob: -6.122768878936768
    8. '...' → logprob: -6.247768878936768
    9. ':' → logprob: -6.247768878936768
    10. '    ' → logprob: -6.622768878936768

Token 200: ' no' (ID: 860)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6083439588546753
    2. 'compat' → logprob: -2.108344078063965
    3. 'n' → logprob: -3.233344078063965
    4. ' compatibility' → logprob: -3.608344078063965
    5. 'some' → logprob: -3.733344078063965
    6. 'performance' → logprob: -3.858344078063965
    7. ' convenience' → logprob: -4.233344078063965
    8. 'i' → logprob: -4.358344078063965
    9. 'testing' → logprob: -4.358344078063965
    10. ' performance' → logprob: -4.358344078063965

Token 201: ' reason' (ID: 5207)
  Prédit: 'reason'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reason' → logprob: -1.3953980207443237
    2. '_reason' → logprob: -1.6453980207443237
    3. ' reason' → logprob: -1.8953980207443237
    4. ' apparent' → logprob: -1.8953980207443237
    5. 't' → logprob: -2.5203981399536133
    6. 'r' → logprob: -2.6453981399536133
    7. 'w' → logprob: -4.145398139953613
    8. ' particular' → logprob: -4.145398139953613
    9. '_' → logprob: -4.270398139953613
    10. ')' → logprob: -4.770398139953613

Token 202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1408117115497589
    2. '<|end|>' → logprob: -2.2658116817474365
    3. '    
' → logprob: -5.015811920166016
    4. '<|end|>' → logprob: -5.265811920166016
    5. ',' → logprob: -5.390811920166016
    6. '
' → logprob: -5.390811920166016
    7. ':' → logprob: -6.390811920166016
    8. '    ' → logprob: -6.890811920166016
    9. '...' → logprob: -8.015811920166016
    10. '#' → logprob: -8.015811920166016

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.231356680393219
    2. ':' → logprob: -2.231356620788574
    3. ',' → logprob: -3.981356620788574
    4. ' ' → logprob: -4.356356620788574
    5. '    ' → logprob: -4.481356620788574
    6. '    
' → logprob: -4.856356620788574
    7. '<|end|>' → logprob: -5.231356620788574
    8. '(' → logprob: -5.606356620788574
    9. '\t' → logprob: -5.606356620788574
    10. 'n' → logprob: -5.856356620788574

Token 204: ' M' (ID: 391)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.774084210395813
    2. 'N' → logprob: -0.899084210395813
    3. 'a' → logprob: -3.5240840911865234
    4. '   ' → logprob: -3.7740840911865234
    5. 'h' → logprob: -3.8990840911865234
    6. 'H' → logprob: -4.024084091186523
    7. ' n' → logprob: -4.899084091186523
    8. 'A' → logprob: -5.399084091186523
    9. '_n' → logprob: -5.649084091186523
    10. ' N' → logprob: -5.774084091186523

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17777633666992188
    2. ' =' → logprob: -2.302776336669922
    3. '=' → logprob: -2.802776336669922
    4. ' ,' → logprob: -6.552776336669922
    5. '=int' → logprob: -7.802776336669922
    6. ')' → logprob: -9.552776336669922
    7. ',M' → logprob: -10.052776336669922
    8. ',K' → logprob: -10.052776336669922
    9. ',N' → logprob: -10.302776336669922
    10. ',int' → logprob: -10.302776336669922

Token 206: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.058532942086458206
    2. ' N' → logprob: -3.308532953262329
    3. 'K' → logprob: -4.55853271484375
    4. 'Q' → logprob: -6.30853271484375
    5. ' K' → logprob: -6.30853271484375
    6. 'D' → logprob: -7.05853271484375
    7. 'R' → logprob: -7.05853271484375
    8. 'H' → logprob: -7.55853271484375
    9. 'T' → logprob: -7.55853271484375
    10. 'L' → logprob: -7.93353271484375

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3539048731327057
    2. ' =' → logprob: -1.2289048433303833
    3. ',' → logprob: -5.228904724121094
    4. '=sc' → logprob: -9.728904724121094
    5. ' ' → logprob: -11.353904724121094
    6. '=int' → logprob: -12.228904724121094
    7. ' ,' → logprob: -13.728904724121094
    8. '=input' → logprob: -13.853904724121094
    9. ')' → logprob: -14.103904724121094
    10. '=line' → logprob: -14.228904724121094

Token 208: ' reversed' (ID: 57184)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6935552954673767
    2. ' map' → logprob: -0.6935552954673767
    3. 'int' → logprob: -7.9435553550720215
    4. 'list' → logprob: -11.068554878234863
    5. '[' → logprob: -11.443554878234863
    6. ' int' → logprob: -11.568554878234863
    7. ' ' → logprob: -12.818554878234863
    8. '_map' → logprob: -12.943554878234863
    9. '   ' → logprob: -13.193554878234863
    10. ' [' → logprob: -13.193554878234863

Token 209: '(tuple' (ID: 133029)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.5547497272491455
    2. '(map' → logprob: -1.3047497272491455
    3. '(tuple' → logprob: -2.1797497272491455
    4. '(sc' → logprob: -3.6797497272491455
    5. 'map' → logprob: -5.304749488830566
    6. 'tuple' → logprob: -5.429749488830566
    7. 'list' → logprob: -5.679749488830566
    8. '(range' → logprob: -6.054749488830566
    9. '(' → logprob: -7.804749488830566
    10. '(iter' → logprob: -8.929749488830566

Token 210: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002021901309490204
    2. '(int' → logprob: -6.377021789550781
    3. 'map' → logprob: -8.377021789550781
    4. '(' → logprob: -9.502021789550781
    5. 'int' → logprob: -12.127021789550781
    6. '(sorted' → logprob: -12.502021789550781
    7. ' map' → logprob: -12.752021789550781
    8. '([' → logprob: -14.377021789550781
    9. '(
' → logprob: -14.502021789550781
    10. '[int' → logprob: -14.627021789550781

Token 211: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006827967241406441
    2. 'int' → logprob: -5.0068278312683105
    3. '(' → logprob: -9.506828308105469
    4. ' int' → logprob: -10.631828308105469
    5. '   ' → logprob: -12.131828308105469
    6. '=int' → logprob: -13.256828308105469
    7. ',int' → logprob: -13.381828308105469
    8. '(
' → logprob: -13.756828308105469
    9. '[int' → logprob: -13.881828308105469
    10. ')' → logprob: -14.131828308105469

Token 212: ',' (ID: 11)
  Prédit: '(sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sc' → logprob: -0.04687872529029846
    2. '(__' → logprob: -3.9218788146972656
    3. '(_' → logprob: -4.171878814697266
    4. 'sc' → logprob: -4.796878814697266
    5. '(sys' → logprob: -6.921878814697266
    6. '(s' → logprob: -7.921878814697266
    7. '(' → logprob: -8.296878814697266
    8. ')(__' → logprob: -9.171878814697266
    9. '_sc' → logprob: -9.421878814697266
    10. ',' → logprob: -9.546878814697266

Token 213: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.012813813984394073
    2. ' sc' → logprob: -4.387814044952393
    3. '(sc' → logprob: -9.262813568115234
    4. '_sc' → logprob: -9.762813568115234
    5. '__' → logprob: -10.012813568115234
    6. '   ' → logprob: -10.512813568115234
    7. 'sys' → logprob: -11.262813568115234
    8. ' ' → logprob: -11.387813568115234
    9. '	sc' → logprob: -11.637813568115234
    10. ')' → logprob: -11.887813568115234

Token 214: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00015383612480945885
    2. '())))' → logprob: -9.375153541564941
    3. '()' → logprob: -9.750153541564941
    4. '()))' → logprob: -12.625153541564941
    5. '()
' → logprob: -12.875153541564941
    6. ')))' → logprob: -13.000153541564941
    7. ' ().' → logprob: -14.125153541564941
    8. '))))' → logprob: -14.625153541564941
    9. '(' → logprob: -14.750153541564941
    10. '   ' → logprob: -15.750153541564941

Token 215: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00036799011286348104
    2. 'strip' → logprob: -8.000368118286133
    3. 'rstrip' → logprob: -10.625368118286133
    4. '(split' → logprob: -12.250368118286133
    5. ' split' → logprob: -12.875368118286133
    6. ')' → logprob: -15.250368118286133
    7. '().' → logprob: -15.250368118286133
    8. '.split' → logprob: -16.375368118286133
    9. 'spl' → logprob: -16.625368118286133
    10. '_split' → logprob: -16.750368118286133

Token 216: '())))
' (ID: 129187)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.5770931839942932
    2. '()))' → logprob: -1.7020931243896484
    3. ')))' → logprob: -2.2020931243896484
    4. '))))' → logprob: -2.5770931243896484
    5. '()' → logprob: -2.7020931243896484
    6. '())))
' → logprob: -6.577093124389648
    7. '))' → logprob: -7.577093124389648
    8. '())' → logprob: -8.702093124389648
    9. '(' → logprob: -9.077093124389648
    10. '))))
' → logprob: -9.327093124389648

Token 217: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051616545766592026
    2. ')' → logprob: -3.6766164302825928
    3. '   ' → logprob: -4.676616668701172
    4. '[:]' → logprob: -4.926616668701172
    5. '<|end|>' → logprob: -6.051616668701172
    6. '):' → logprob: -6.176616668701172
    7. ' :' → logprob: -6.926616668701172
    8. ' ' → logprob: -6.926616668701172
    9. ':
' → logprob: -8.176616668701172
    10. '[]' → logprob: -8.301616668701172

Token 218: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9973024725914001
    2. '   ' → logprob: -1.372302532196045
    3. '<|end|>' → logprob: -2.247302532196045
    4. '
' → logprob: -2.622302532196045
    5. '    
' → logprob: -3.497302532196045
    6. ' 
' → logprob: -3.747302532196045
    7. '    ' → logprob: -3.747302532196045
    8. ')' → logprob: -4.122302532196045
    9. '\n' → logprob: -4.497302532196045
    10. '[]' → logprob: -4.622302532196045

Token 219: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34856152534484863
    2. ' =' → logprob: -1.2235615253448486
    3. ',' → logprob: -9.34856128692627
    4. '_' → logprob: -11.97356128692627
    5. 's' → logprob: -12.22356128692627
    6. '=int' → logprob: -13.22356128692627
    7. '  ' → logprob: -13.47356128692627
    8. ' ' → logprob: -13.47356128692627
    9. '=}' → logprob: -13.59856128692627
    10. '=input' → logprob: -13.59856128692627

Token 220: ' tuple' (ID: 31311)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.056654270738363266
    2. ' sc' → logprob: -2.931654214859009
    3. 'list' → logprob: -6.931654453277588
    4. '_sc' → logprob: -7.806654453277588
    5. ' list' → logprob: -9.43165397644043
    6. 'str' → logprob: -9.80665397644043
    7. 's' → logprob: -10.30665397644043
    8. '[]' → logprob: -10.43165397644043
    9. '_list' → logprob: -10.55665397644043
    10. '_s' → logprob: -10.68165397644043

Token 221: '(map' (ID: 16946)
  Prédit: '(sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sc' → logprob: -0.08234263211488724
    2. '(map' → logprob: -2.5823426246643066
    3. '(int' → logprob: -5.957342624664307
    4. '(_' → logprob: -8.332343101501465
    5. '(ord' → logprob: -8.457343101501465
    6. 'map' → logprob: -8.582343101501465
    7. 'sc' → logprob: -9.332343101501465
    8. '(' → logprob: -10.207343101501465
    9. 'int' → logprob: -10.582343101501465
    10. '(s' → logprob: -10.707343101501465

Token 222: '(int' (ID: 2742)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.48212334513664246
    2. '(int' → logprob: -0.9821233749389648
    3. 'str' → logprob: -5.982123374938965
    4. 'int' → logprob: -6.107123374938965
    5. '(ord' → logprob: -6.357123374938965
    6. '(' → logprob: -6.732123374938965
    7. '(chr' → logprob: -8.732123374938965
    8. '(list' → logprob: -10.232123374938965
    9. 'list' → logprob: -10.982123374938965
    10. '(sc' → logprob: -11.107123374938965

Token 223: ',' (ID: 11)
  Prédit: '(sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sc' → logprob: -0.014561140909790993
    2. ',' → logprob: -4.264561176300049
    3. '(' → logprob: -8.26456069946289
    4. 'sc' → logprob: -9.88956069946289
    5. '(s' → logprob: -10.13956069946289
    6. ')' → logprob: -11.13956069946289
    7. ' sc' → logprob: -11.38956069946289
    8. ' (' → logprob: -12.01456069946289
    9. ' ,' → logprob: -13.01456069946289
    10. ')(' → logprob: -13.26456069946289

Token 224: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.07024962455034256
    2. ' sc' → logprob: -2.695249557495117
    3. '(sc' → logprob: -8.320249557495117
    4. '_sc' → logprob: -10.695249557495117
    5. ' ' → logprob: -11.445249557495117
    6. '   ' → logprob: -11.570249557495117
    7. '	sc' → logprob: -12.195249557495117
    8. 'sys' → logprob: -12.820249557495117
    9. 's' → logprob: -13.320249557495117
    10. '
' → logprob: -13.445249557495117

Token 225: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.2729995988775045e-06
    2. '()' → logprob: -12.000006675720215
    3. ' ().' → logprob: -18.3750057220459
    4. '().__' → logprob: -18.8750057220459
    5. '().'' → logprob: -18.8750057220459
    6. '.' → logprob: -19.5000057220459
    7. ')' → logprob: -19.6250057220459
    8. '()
' → logprob: -19.7500057220459
    9. '()[' → logprob: -19.7500057220459
    10. '>().' → logprob: -20.7500057220459

Token 226: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011343709047650918
    2. 'strip' → logprob: -9.125113487243652
    3. ' split' → logprob: -13.000113487243652
    4. '().' → logprob: -14.000113487243652
    5. 'rstrip' → logprob: -14.750113487243652
    6. 'read' → logprob: -14.875113487243652
    7. '(split' → logprob: -15.000113487243652
    8. '.split' → logprob: -15.750113487243652
    9. ')' → logprob: -16.875112533569336
    10. 'decode' → logprob: -17.125112533569336

Token 227: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.008981600403785706
    2. '()' → logprob: -5.258981704711914
    3. '))' → logprob: -5.758981704711914
    4. '())' → logprob: -8.258981704711914
    5. '()))
' → logprob: -8.758981704711914
    6. '()));' → logprob: -9.133981704711914
    7. '())))' → logprob: -10.383981704711914
    8. '(' → logprob: -11.633981704711914
    9. '()))

' → logprob: -12.133981704711914
    10. '());' → logprob: -12.758981704711914

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08280044794082642
    2. '<|end|>' → logprob: -2.9578003883361816
    3. '    
' → logprob: -4.332800388336182
    4. ')' → logprob: -5.332800388336182
    5. '[' → logprob: -6.582800388336182
    6. '    ' → logprob: -6.832800388336182
    7. ' ' → logprob: -6.957800388336182
    8. ',' → logprob: -7.207800388336182
    9. '[]' → logprob: -7.457800388336182
    10. '.' → logprob: -7.832800388336182

Token 229: ' T' (ID: 353)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.218274712562561
    2. 'A' → logprob: -1.843274712562561
    3. '   ' → logprob: -2.3432745933532715
    4. 'DP' → logprob: -3.0932745933532715
    5. 'T' (adapté à ' T') → logprob: -3.3432745933532715
    6. 'D' → logprob: -3.4682745933532715
    7. 'grid' → logprob: -3.4682745933532715
    8. 'R' → logprob: -3.5932745933532715
    9. 'G' → logprob: -4.2807745933532715
    10. 'X' → logprob: -4.5307745933532715

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198001280426979
    2. '=' → logprob: -2.8119800090789795
    3. ',' → logprob: -11.811980247497559
    4. ')' → logprob: -13.061980247497559
    5. '(' → logprob: -14.061980247497559
    6. 's' → logprob: -14.561980247497559
    7. ' ' → logprob: -14.811980247497559
    8. '_' → logprob: -15.436980247497559
    9. ' =
' → logprob: -15.686980247497559
    10. '   ' → logprob: -15.811980247497559

Token 231: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.3135937750339508
    2. ' tuple' → logprob: -1.3135937452316284
    3. '(tuple' → logprob: -8.063593864440918
    4. 'list' → logprob: -12.313593864440918
    5. '   ' → logprob: -12.563593864440918
    6. 'set' → logprob: -12.688593864440918
    7. '_tuple' → logprob: -13.063593864440918
    8. 'uple' → logprob: -13.688593864440918
    9. ' list' → logprob: -14.563593864440918
    10. ' ' → logprob: -14.938593864440918

Token 232: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0001749351795297116
    2. 'map' → logprob: -9.000174522399902
    3. '(int' → logprob: -10.375174522399902
    4. '(' → logprob: -11.750174522399902
    5. '(sc' → logprob: -11.750174522399902
    6. 'int' → logprob: -13.375174522399902
    7. '(list' → logprob: -14.000174522399902
    8. '   ' → logprob: -14.500174522399902
    9. ' map' → logprob: -15.125174522399902
    10. '(s' → logprob: -15.750174522399902

Token 233: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001717166742309928
    2. 'int' → logprob: -8.750171661376953
    3. '[int' → logprob: -12.000171661376953
    4. ',int' → logprob: -12.875171661376953
    5. '=int' → logprob: -13.375171661376953
    6. '(' → logprob: -13.625171661376953
    7. ' int' → logprob: -14.250171661376953
    8. ']int' → logprob: -14.500171661376953
    9. '<int' → logprob: -14.750171661376953
    10. ')' → logprob: -16.375171661376953

Token 234: ',' (ID: 11)
  Prédit: '(sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sc' → logprob: -0.1187249943614006
    2. ',' → logprob: -2.868725061416626
    3. '(int' → logprob: -3.243725061416626
    4. 'int' → logprob: -4.618724822998047
    5. '(s' → logprob: -5.868724822998047
    6. '(' → logprob: -6.743724822998047
    7. '   ' → logprob: -7.368724822998047
    8. '=sc' → logprob: -7.618724822998047
    9. 'sc' → logprob: -7.868724822998047
    10. ',int' → logprob: -8.118724822998047

Token 235: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.062110643833875656
    2. ' sc' → logprob: -2.812110662460327
    3. '(sc' → logprob: -9.437110900878906
    4. 'int' → logprob: -10.437110900878906
    5. '_sc' → logprob: -10.562110900878906
    6. 'sys' → logprob: -12.937110900878906
    7. '	sc' → logprob: -13.812110900878906
    8. 's' → logprob: -13.812110900878906
    9. ' ' → logprob: -14.062110900878906
    10. ' int' → logprob: -14.812110900878906

Token 236: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.935296834039036e-06
    2. '()' → logprob: -14.00000286102295
    3. ').' → logprob: -14.62500286102295
    4. '.' → logprob: -14.75000286102295
    5. '.sc' → logprob: -14.87500286102295
    6. '().__' → logprob: -15.12500286102295
    7. '()).' → logprob: -15.37500286102295
    8. '()[' → logprob: -16.500003814697266
    9. ' ().' → logprob: -16.750003814697266
    10. '].' → logprob: -17.375003814697266

Token 237: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.173704271830502e-06
    2. 'sys' → logprob: -13.50000286102295
    3. 'sc' → logprob: -14.12500286102295
    4. 'strip' → logprob: -15.00000286102295
    5. '(split' → logprob: -15.25000286102295
    6. ' split' → logprob: -15.87500286102295
    7. 'read' → logprob: -16.000003814697266
    8. '.split' → logprob: -16.125003814697266
    9. '_split' → logprob: -17.000003814697266
    10. '().' → logprob: -17.125003814697266

Token 238: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.010220286436378956
    2. '()' → logprob: -5.385220050811768
    3. '())' → logprob: -5.510220050811768
    4. '()))
' → logprob: -7.135220050811768
    5. '))' → logprob: -7.510220050811768
    6. '()));' → logprob: -9.260220527648926
    7. '())))' → logprob: -9.635220527648926
    8. '()))

' → logprob: -11.635220527648926
    9. '())).' → logprob: -12.385220527648926
    10. ')' → logprob: -12.510220527648926

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36080285906791687
    2. '    
' → logprob: -1.3608028888702393
    3. '
' → logprob: -3.3608028888702393
    4. '<|end|>' → logprob: -4.61080265045166
    5. '    
    
' → logprob: -7.61080265045166
    6. '<|end|>' → logprob: -8.23580265045166
    7. '    ' → logprob: -8.36080265045166
    8. '```' → logprob: -8.61080265045166
    9. '        
' → logprob: -8.98580265045166
    10. 'def' → logprob: -9.98580265045166

Token 240: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16807930171489716
    2. '   ' → logprob: -3.793079376220703
    3. 'DP' → logprob: -3.918079376220703
    4. 'd' → logprob: -4.168079376220703
    5. 'def' → logprob: -4.168079376220703
    6. 'for' → logprob: -4.793079376220703
    7. 'res' → logprob: -4.918079376220703
    8. 'result' → logprob: -5.043079376220703
    9. '_dp' → logprob: -5.168079376220703
    10. 'ans' → logprob: -5.418079376220703

Token 241: ' Non' (ID: 13763)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.44983986020088196
    2. 'ans' → logprob: -2.5748398303985596
    3. '#' → logprob: -3.0748398303985596
    4. 'for' → logprob: -3.8248398303985596
    5. 'DP' → logprob: -3.9498398303985596
    6. 'from' → logprob: -3.9498398303985596
    7. 'res' → logprob: -4.324840068817139
    8. 'A' → logprob: -4.449840068817139
    9. 'd' → logprob: -4.449840068817139
    10. 'def' → logprob: -4.949840068817139

Token 242: '-standard' (ID: 108271)
  Prédit: 'local'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.03968396782875061
    2. 'def' → logprob: -3.6646840572357178
    3. 'de' → logprob: -5.414683818817139
    4. 'e' → logprob: -5.789683818817139
    5. 'tr' → logprob: -7.039683818817139
    6. 'etype' → logprob: -7.789683818817139
    7. '_' → logprob: -7.789683818817139
    8. 'empty' → logprob: -7.789683818817139
    9. '   ' → logprob: -7.914683818817139
    10. '#' → logprob: -8.039684295654297

Token 243: ' initialization' (ID: 41684)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1602509021759033
    2. 'for' → logprob: -2.0352509021759033
    3. '#' → logprob: -2.1602509021759033
    4. ' indentation' → logprob: -2.4102509021759033
    5. 'def' → logprob: -3.1602509021759033
    6. '
' → logprob: -3.6602509021759033
    7. ' indexing' → logprob: -3.6602509021759033
    8. ' #' → logprob: -3.6602509021759033
    9. ' loop' → logprob: -4.035250663757324
    10. ' return' → logprob: -4.535250663757324

Token 244: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3735571801662445
    2. '   ' → logprob: -1.748557209968567
    3. 'DP' → logprob: -3.4985570907592773
    4. '_dp' → logprob: -3.9985570907592773
    5. ' dp' → logprob: -4.123557090759277
    6. 'visited' → logprob: -4.248557090759277
    7. 'D' → logprob: -4.873557090759277
    8. 'A' → logprob: -4.873557090759277
    9. 'dist' → logprob: -5.373557090759277
    10. '_DP' → logprob: -5.623557090759277

Token 245: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4420921504497528
    2. '   ' → logprob: -1.4420921802520752
    3. ' dp' → logprob: -3.567092180252075
    4. '_dp' → logprob: -3.567092180252075
    5. 'DP' → logprob: -4.067091941833496
    6. '_DP' → logprob: -4.817091941833496
    7. 'graph' → logprob: -5.317091941833496
    8. 'visited' → logprob: -5.317091941833496
    9. ' graph' → logprob: -5.692091941833496
    10. ' DP' → logprob: -5.942091941833496

Token 246: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.09955918788909912
    2. 'dist' → logprob: -4.724559307098389
    3. 'DP' → logprob: -4.849559307098389
    4. 'visited' → logprob: -4.849559307098389
    5. 'A' → logprob: -4.974559307098389
    6. 'ans' → logprob: -5.099559307098389
    7. '_dp' → logprob: -5.224559307098389
    8. 'D' → logprob: -5.224559307098389
    9. 'd' → logprob: -5.724559307098389
    10. 'from' → logprob: -6.349559307098389

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005952260922640562
    2. '=' → logprob: -5.13095235824585
    3. ' =[' → logprob: -11.880951881408691
    4. '=[' → logprob: -12.505951881408691
    5. ' ' → logprob: -12.755951881408691
    6. '=[[' → logprob: -13.255951881408691
    7. '[' → logprob: -13.505951881408691
    8. ',' → logprob: -13.505951881408691
    9. '=[]' → logprob: -13.755951881408691
    10. '0' → logprob: -14.255951881408691

Token 248: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.25645074248313904
    2. '[' → logprob: -1.7564507722854614
    3. '[_' → logprob: -3.881450653076172
    4. ' [[' → logprob: -4.131450653076172
    5. '[-' → logprob: -4.631450653076172
    6. '[(' → logprob: -6.256450653076172
    7. ' [' → logprob: -6.256450653076172
    8. '{' → logprob: -6.381450653076172
    9. '[{' → logprob: -8.006450653076172
    10. 'anti' → logprob: -8.506450653076172

Token 249: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12106320261955261
    2. '_INFINITY' → logprob: -2.246063232421875
    3. '-' → logprob: -5.871063232421875
    4. '_IN' → logprob: -6.121063232421875
    5. '_FALSE' → logprob: -6.621063232421875
    6. 'False' → logprob: -8.121063232421875
    7. '_INF' → logprob: -8.246063232421875
    8. '_MOD' → logprob: -8.746063232421875
    9. '(' → logprob: -8.996063232421875
    10. ' ' → logprob: -9.121063232421875

Token 250: ']' (ID: 60)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -1.0398790836334229
    2. 'for' → logprob: -1.1648790836334229
    3. ']' → logprob: -1.5398790836334229
    4. ' for' → logprob: -2.289879083633423
    5. ']*' → logprob: -4.164878845214844
    6. ']+' → logprob: -6.414878845214844
    7. 'if' → logprob: -6.664878845214844
    8. ' if' → logprob: -8.289878845214844
    9. '   ' → logprob: -9.664878845214844
    10. ',' → logprob: -10.789878845214844

Token 251: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3907219171524048
    2. 'for' → logprob: -1.1407219171524048
    3. ']*(' → logprob: -6.140721797943115
    4. ']' → logprob: -7.140721797943115
    5. ']*' → logprob: -7.140721797943115
    6. '   ' → logprob: -9.515722274780273
    7. 'if' → logprob: -11.890722274780273
    8. ']+' → logprob: -12.015722274780273
    9. '	for' → logprob: -12.140722274780273
    10. ' if' → logprob: -12.640722274780273

Token 252: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4374067485332489
    2. '(M' → logprob: -1.0624067783355713
    3. '(' → logprob: -5.312406539916992
    4. 'N' → logprob: -6.312406539916992
    5. ' (' → logprob: -7.062406539916992
    6. 'M' → logprob: -8.062406539916992
    7. '(S' → logprob: -8.437406539916992
    8. '   ' → logprob: -8.812406539916992
    9. '(T' → logprob: -9.187406539916992
    10. '
' → logprob: -10.187406539916992

Token 253: 'M' (ID: 44)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06459260731935501
    2. 'M' → logprob: -2.8145925998687744
    3. '(N' → logprob: -6.5645928382873535
    4. '(M' → logprob: -6.9395928382873535
    5. ' N' → logprob: -9.189592361450195
    6. '   ' → logprob: -10.189592361450195
    7. 'len' → logprob: -10.314592361450195
    8. '(' → logprob: -10.439592361450195
    9. ' M' → logprob: -11.439592361450195
    10. ' (' → logprob: -12.502092361450195

Token 254: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11283029615879059
    2. ' +' → logprob: -2.237830400466919
    3. '+
' → logprob: -12.48783016204834
    4. ')' → logprob: -13.36283016204834
    5. ' +
' → logprob: -14.36283016204834
    6. '   ' → logprob: -14.61283016204834
    7. ' ' → logprob: -14.86283016204834
    8. '+)' → logprob: -15.23783016204834
    9. '
' → logprob: -15.36283016204834
    10. 'for' → logprob: -16.237831115722656

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.250041007995605
    3. '2' → logprob: -12.625041007995605
    4. '   ' → logprob: -13.375041007995605
    5. '
' → logprob: -15.000041007995605
    6. 'N' → logprob: -15.750041007995605
    7. '     ' → logprob: -16.250041961669922
    8. '```' → logprob: -16.437541961669922
    9. '  ' → logprob: -16.687541961669922
    10. '       ' → logprob: -16.750041961669922

Token 256: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005245577194727957
    2. 'for' → logprob: -8.375524520874023
    3. ' for' → logprob: -8.500524520874023
    4. ' )' → logprob: -9.500524520874023
    5. ')]' → logprob: -11.375524520874023
    6. ']' → logprob: -13.500524520874023
    7. ' ' → logprob: -14.250524520874023
    8. '   ' → logprob: -14.250524520874023
    9. ')
' → logprob: -14.500524520874023
    10. '))' → logprob: -15.750524520874023

Token 257: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10025348514318466
    2. 'for' → logprob: -2.3502535820007324
    3. '   ' → logprob: -10.100253105163574
    4. ' ' → logprob: -13.225253105163574
    5. '	for' → logprob: -13.350253105163574
    6. '    ' → logprob: -13.600253105163574
    7. ']' → logprob: -14.350253105163574
    8. '  ' → logprob: -15.600253105163574
    9. ')' → logprob: -16.47525405883789
    10. '        ' → logprob: -17.22525405883789

Token 258: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4834505617618561
    2. ' _' → logprob: -0.9834505319595337
    3. ' range' → logprob: -4.983450412750244
    4. ' i' → logprob: -6.108450412750244
    5. ' in' → logprob: -8.858450889587402
    6. 'range' → logprob: -9.983450889587402
    7. '_i' → logprob: -10.108450889587402
    8. '_range' → logprob: -11.358450889587402
    9. 'i' → logprob: -11.983450889587402
    10. ' ' → logprob: -12.858450889587402

Token 259: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.346217542886734
    2. 'range' → logprob: -1.3462175130844116
    3. 'in' → logprob: -3.721217632293701
    4. ' range' → logprob: -4.846217632293701
    5. ' ' → logprob: -8.596217155456543
    6. '(range' → logprob: -9.721217155456543
    7. '_' → logprob: -10.346217155456543
    8. 'i' → logprob: -10.971217155456543
    9. '	range' → logprob: -11.471217155456543
    10. 'ange' → logprob: -11.471217155456543

Token 260: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008615042082965374
    2. ' range' → logprob: -4.758615016937256
    3. '[' → logprob: -15.383615493774414
    4. '(range' → logprob: -15.383615493774414
    5. '_' → logprob: -17.258615493774414
    6. '	range' → logprob: -17.633615493774414
    7. '_range' → logprob: -18.633615493774414
    8. ' ' → logprob: -18.883615493774414
    9. 'ran' → logprob: -20.258615493774414
    10. 'r' → logprob: -21.008615493774414

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6649549603462219
    2. 'None' → logprob: -1.1649549007415771
    3. 'range' → logprob: -1.7899549007415771
    4. '_' → logprob: -5.414955139160156
    5. '...' → logprob: -7.039955139160156
    6. ' range' → logprob: -7.039955139160156
    7. '[' → logprob: -8.414955139160156
    8. '_None' → logprob: -8.664955139160156
    9. ' None' → logprob: -9.664955139160156
    10. '1' → logprob: -10.414955139160156

Token 262: ']*(' (ID: 92627)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.10233963280916214
    2. ']' → logprob: -2.477339744567871
    3. ']*(' → logprob: -4.602339744567871
    4. ']+' → logprob: -7.352339744567871
    5. 'for' → logprob: -7.477339744567871
    6. 'in' → logprob: -7.477339744567871
    7. 'range' → logprob: -7.727339744567871
    8. ' for' → logprob: -8.352339744567871
    9. ' in' → logprob: -8.727339744567871
    10. ']]' → logprob: -8.852339744567871

Token 263: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00017517358355689794
    2. ' N' → logprob: -9.000175476074219
    3. '(N' → logprob: -10.250175476074219
    4. '   ' → logprob: -11.625175476074219
    5. ' ' → logprob: -14.125175476074219
    6. '(' → logprob: -14.125175476074219
    7. '_N' → logprob: -14.250175476074219
    8. 'M' → logprob: -14.500175476074219
    9. 'len' → logprob: -14.500175476074219
    10. '
' → logprob: -14.625175476074219

Token 264: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003752615302801132
    2. ')]' → logprob: -8.250374794006348
    3. ')])' → logprob: -9.375374794006348
    4. ' +' → logprob: -11.375374794006348
    5. '+
' → logprob: -11.500374794006348
    6. ')' → logprob: -12.625374794006348
    7. '+)' → logprob: -13.375374794006348
    8. '1' → logprob: -14.125374794006348
    9. '])]' → logprob: -14.500374794006348
    10. ')][' → logprob: -15.125374794006348

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018697108316700906
    2. ' ' → logprob: -8.625186920166016
    3. '+' → logprob: -12.875186920166016
    4. '   ' → logprob: -13.500186920166016
    5. '```' → logprob: -14.062686920166016
    6. ')' → logprob: -14.312686920166016
    7. '0' → logprob: -14.375186920166016
    8. '2' → logprob: -15.375186920166016
    9. '  ' → logprob: -15.687686920166016
    10. 'M' → logprob: -15.937686920166016

Token 266: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.1782583391759545e-05
    2. ')]
' → logprob: -10.625031471252441
    3. ')' → logprob: -13.250031471252441
    4. ' )' → logprob: -13.500031471252441
    5. ')])' → logprob: -13.750031471252441
    6. '   ' → logprob: -14.250031471252441
    7. ')]

' → logprob: -14.375031471252441
    8. ')]
' → logprob: -14.625031471252441
    9. ']' → logprob: -14.875031471252441
    10. '])]' → logprob: -15.000031471252441

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02206900343298912
    2. '<|end|>' → logprob: -4.147068977355957
    3. ' for' → logprob: -5.772068977355957
    4. 'for' → logprob: -6.397068977355957
    5. ')' → logprob: -7.022068977355957
    6. 'dp' → logprob: -9.647068977355957
    7. '<|end|>' → logprob: -9.772068977355957
    8. '    
' → logprob: -9.772068977355957
    9. '	for' → logprob: -10.022068977355957
    10. ',' → logprob: -10.772068977355957

Token 268: ' SUM' (ID: 52418)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08626484870910645
    2. 'dp' → logprob: -2.9612648487091064
    3. ' for' → logprob: -3.9612648487091064
    4. '   ' → logprob: -4.586264610290527
    5. 'def' → logprob: -6.461264610290527
    6. '	for' → logprob: -10.711264610290527
    7. ')' → logprob: -10.711264610290527
    8. 'from' → logprob: -10.961264610290527
    9. ' dp' → logprob: -11.836264610290527
    10. '#' → logprob: -12.086264610290527

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05527264252305031
    2. '=' → logprob: -2.9302725791931152
    3. 'dp' → logprob: -9.055273056030273
    4. 'p' → logprob: -9.430273056030273
    5. ' ' → logprob: -10.680273056030273
    6. '   ' → logprob: -10.805273056030273
    7. 'S' → logprob: -10.805273056030273
    8. '_' → logprob: -11.180273056030273
    9. '_dp' → logprob: -11.305273056030273
    10. 'sum' → logprob: -11.430273056030273

Token 270: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.009032395668327808
    2. '0' → logprob: -5.634032249450684
    3. '[' → logprob: -6.134032249450684
    4. ' [[' → logprob: -6.509032249450684
    5. '[M' → logprob: -6.759032249450684
    6. '[N' → logprob: -8.009032249450684
    7. '([[' → logprob: -10.259032249450684
    8. ' ' → logprob: -10.759032249450684
    9. '1' → logprob: -10.884032249450684
    10. '[(' → logprob: -10.884032249450684

Token 271: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00506878737360239
    2. 'None' → logprob: -5.630068778991699
    3. 'False' → logprob: -6.880068778991699
    4. '-' → logprob: -9.1300687789917
    5. '(' → logprob: -9.2550687789917
    6. '[' → logprob: -9.5050687789917
    7. ' ' → logprob: -10.6300687789917
    8. '_INF' → logprob: -11.0050687789917
    9. 'INF' → logprob: -11.1300687789917
    10. '_NONE' → logprob: -11.2550687789917

Token 272: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13610577583312988
    2. ']*(' → logprob: -2.26110577583313
    3. ' *' → logprob: -4.636105537414551
    4. '*(' → logprob: -5.261105537414551
    5. ']*' → logprob: -5.761105537414551
    6. ' for' → logprob: -7.011105537414551
    7. ' (' → logprob: -7.011105537414551
    8. '*' → logprob: -7.011105537414551
    9. '(' → logprob: -7.136105537414551
    10. ')' → logprob: -7.886105537414551

Token 273: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.002148238942027092
    2. '(M' → logprob: -6.377148151397705
    3. 'N' → logprob: -8.627148628234863
    4. ' M' → logprob: -8.752148628234863
    5. '   ' → logprob: -9.377148628234863
    6. 'len' → logprob: -12.377148628234863
    7. '_M' → logprob: -12.627148628234863
    8. ' ' → logprob: -13.002148628234863
    9. 'S' → logprob: -13.377148628234863
    10. '2' → logprob: -14.002148628234863

Token 274: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003022153687197715
    2. ' +' → logprob: -8.1253023147583
    3. '+
' → logprob: -12.7503023147583
    4. '1' → logprob: -13.6253023147583
    5. '   ' → logprob: -14.3753023147583
    6. '2' → logprob: -15.3753023147583
    7. ')' → logprob: -15.5003023147583
    8. '```' → logprob: -15.6253023147583
    9. 'plus' → logprob: -15.7503023147583
    10. ')+' → logprob: -16.125301361083984

Token 275: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8444881536415778e-05
    2. ' ' → logprob: -10.875028610229492
    3. '2' → logprob: -12.000028610229492
    4. '   ' → logprob: -13.625028610229492
    5. '```' → logprob: -14.562528610229492
    6. '+' → logprob: -15.062528610229492
    7. '
' → logprob: -15.312528610229492
    8. ')' → logprob: -16.062528610229492
    9. '     ' → logprob: -16.437528610229492
    10. '  ' → logprob: -16.437528610229492

Token 276: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011963568249484524
    2. 'for' → logprob: -10.12511920928955
    3. ' )' → logprob: -10.25011920928955
    4. ')]' → logprob: -10.37511920928955
    5. ']' → logprob: -12.50011920928955
    6. ' for' → logprob: -12.87511920928955
    7. '   ' → logprob: -13.25011920928955
    8. '[' → logprob: -14.00011920928955
    9. '+' → logprob: -14.12511920928955
    10. ')
' → logprob: -14.62511920928955

Token 277: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20150592923164368
    2. 'for' → logprob: -1.7015058994293213
    3. '   ' → logprob: -9.451505661010742
    4. '    ' → logprob: -12.326505661010742
    5. '	for' → logprob: -12.451505661010742
    6. ' ' → logprob: -13.201505661010742
    7. '        ' → logprob: -14.076505661010742
    8. '  ' → logprob: -14.576505661010742
    9. '         ' → logprob: -14.951505661010742
    10. ')' → logprob: -15.451505661010742

Token 278: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023207273334264755
    2. ' _' → logprob: -3.898207187652588
    3. ' in' → logprob: -6.398207187652588
    4. '[' → logprob: -7.023207187652588
    5. ' [' → logprob: -9.773207664489746
    6. '_[' → logprob: -10.398207664489746
    7. ' ' → logprob: -11.898207664489746
    8. '__' → logprob: -12.898207664489746
    9. ' range' → logprob: -13.273207664489746
    10. 'in' → logprob: -13.773207664489746

Token 279: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013003509491682053
    2. ' in' → logprob: -5.388003349304199
    3. ' [' → logprob: -5.513003349304199
    4. '_' → logprob: -6.013003349304199
    5. 'range' → logprob: -6.888003349304199
    6. ' _' → logprob: -8.0130033493042
    7. ' range' → logprob: -8.1380033493042
    8. 'in' → logprob: -9.5130033493042
    9. '_range' → logprob: -9.7630033493042
    10. '_[' → logprob: -9.7630033493042

Token 280: ' range' (ID: 3352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005913154222071171
    2. ' [' → logprob: -5.755913257598877
    3. ' range' → logprob: -6.630913257598877
    4. 'range' → logprob: -6.630913257598877
    5. '_' → logprob: -9.630912780761719
    6. '_range' → logprob: -11.255912780761719
    7. '_[' → logprob: -11.505912780761719
    8. ' _' → logprob: -12.505912780761719
    9. '[[' → logprob: -14.380912780761719
    10. '[_' → logprob: -15.505912780761719

Token 281: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00011617878044489771
    2. '(' → logprob: -9.875116348266602
    3. 'N' → logprob: -10.625116348266602
    4. '   ' → logprob: -11.000116348266602
    5. '((' → logprob: -11.125116348266602
    6. ' (' → logprob: -12.625116348266602
    7. '(len' → logprob: -12.875116348266602
    8. 'len' → logprob: -14.375116348266602
    9. '       ' → logprob: -14.875116348266602
    10. '(M' → logprob: -14.875116348266602

Token 282: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.514650183613412e-05
    2. ' +' → logprob: -10.250055313110352
    3. '()+' → logprob: -11.125055313110352
    4. '1' → logprob: -13.250055313110352
    5. '   ' → logprob: -13.750055313110352
    6. '(' → logprob: -14.375055313110352
    7. '+
' → logprob: -14.625055313110352
    8. ')+' → logprob: -15.000055313110352
    9. '[' → logprob: -16.12505531311035
    10. '+[' → logprob: -16.50005531311035

Token 283: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03481932729482651
    2. '2' → logprob: -3.4098193645477295
    3. '+' → logprob: -6.78481912612915
    4. ' ' → logprob: -10.409819602966309
    5. '   ' → logprob: -12.034819602966309
    6. '```' → logprob: -13.784819602966309
    7. ' +' → logprob: -14.097319602966309
    8. '
' → logprob: -14.159819602966309
    9. ')' → logprob: -14.472319602966309
    10. '[' → logprob: -15.347319602966309

Token 284: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.2352385965641588e-05
    2. ')]
' → logprob: -11.750012397766113
    3. ')' → logprob: -12.750012397766113
    4. ')])' → logprob: -14.750012397766113
    5. ']' → logprob: -14.875012397766113
    6. ')]

' → logprob: -15.125012397766113
    7. ' )' → logprob: -15.875012397766113
    8. ')][' → logprob: -16.375011444091797
    9. '])]' → logprob: -16.500011444091797
    10. '   ' → logprob: -16.875011444091797

Token 285: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3339851498603821
    2. 'for' (adapté à ' for') → logprob: -1.3339850902557373
    3. ' for' → logprob: -4.083985328674316
    4. 'def' → logprob: -6.833985328674316
    5. '#' → logprob: -7.083985328674316
    6. '<|end|>' → logprob: -7.583985328674316
    7. 'dp' → logprob: -7.833985328674316
    8. ')' → logprob: -7.958985328674316
    9. '    
' → logprob: -9.333985328674316
    10. '
' → logprob: -9.958985328674316

Token 287: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.058930523693561554
    2. ' i' → logprob: -3.1839306354522705
    3. 'y' → logprob: -5.058930397033691
    4. 'j' → logprob: -5.808930397033691
    5. 'n' → logprob: -6.058930397033691
    6. '_i' → logprob: -6.683930397033691
    7. 'r' → logprob: -7.183930397033691
    8. ' y' → logprob: -7.558930397033691
    9. 'x' → logprob: -8.433930397033691
    10. ' j' → logprob: -8.558930397033691

Token 288: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14315885305404663
    2. 'in' → logprob: -2.0181589126586914
    3. '   ' → logprob: -9.143158912658691
    4. '_' → logprob: -9.268158912658691
    5. ' ' → logprob: -9.643158912658691
    6. ',' → logprob: -10.143158912658691
    7. '0' → logprob: -10.268158912658691
    8. '1' → logprob: -10.893158912658691
    9. 'range' → logprob: -11.018158912658691
    10. 'n' → logprob: -11.143158912658691

Token 289: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031837786082178354
    2. ' range' → logprob: -5.753183841705322
    3. '(range' → logprob: -13.003183364868164
    4. '   ' → logprob: -13.878183364868164
    5. '0' → logprob: -14.503183364868164
    6. '[' → logprob: -14.503183364868164
    7. ' ' → logprob: -14.503183364868164
    8. '	range' → logprob: -14.628183364868164
    9. 'r' → logprob: -15.628183364868164
    10. 'rang' → logprob: -15.753183364868164

Token 290: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.016110852360725403
    2. '(' → logprob: -4.141110897064209
    3. '1' → logprob: -10.01611042022705
    4. '(n' → logprob: -11.39111042022705
    5. 'N' → logprob: -11.51611042022705
    6. '(_' → logprob: -12.51611042022705
    7. '0' → logprob: -12.89111042022705
    8. '(len' → logprob: -13.64111042022705
    9. '((' → logprob: -14.14111042022705
    10. '(
' → logprob: -14.51611042022705

Token 291: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0028148628771305084
    2. ' +' → logprob: -5.877814769744873
    3. '   ' → logprob: -12.252815246582031
    4. '):
' → logprob: -13.502815246582031
    5. '+
' → logprob: -13.752815246582031
    6. '()+' → logprob: -14.002815246582031
    7. '):' → logprob: -14.377815246582031
    8. '2' → logprob: -14.627815246582031
    9. '
' → logprob: -15.127815246582031
    10. '1' → logprob: -15.127815246582031

Token 292: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16138426959514618
    2. '1' → logprob: -1.9113842248916626
    3. '+' → logprob: -7.036384105682373
    4. '3' → logprob: -9.036384582519531
    5. ' ' → logprob: -9.036384582519531
    6. '   ' → logprob: -10.536384582519531
    7. '
' → logprob: -11.661384582519531
    8. '```' → logprob: -13.161384582519531
    9. '0' → logprob: -14.036384582519531
    10. ')' → logprob: -14.161384582519531

Token 293: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08923792839050293
    2. '):
' → logprob: -2.464237928390503
    3. '+' → logprob: -8.839238166809082
    4. ':' → logprob: -9.339238166809082
    5. '   ' → logprob: -10.589238166809082
    6. '):
' → logprob: -11.089238166809082
    7. ')' → logprob: -11.214238166809082
    8. ',' → logprob: -12.589238166809082
    9. '):

' → logprob: -13.589238166809082
    10. ']:' → logprob: -13.589238166809082

Token 294: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010222644545137882
    2. '       ' → logprob: -4.885222434997559
    3. ' for' → logprob: -6.010222434997559
    4. 'for' → logprob: -8.760222434997559
    5. ' dp' → logprob: -13.635222434997559
    6. '	for' → logprob: -14.510222434997559
    7. 'dp' → logprob: -15.010222434997559
    8. '<|end|>' → logprob: -15.885222434997559
    9. '   ' → logprob: -16.260223388671875
    10. ' ' → logprob: -16.385223388671875

Token 295: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.19823962450027466
    2. '   ' → logprob: -2.32323956489563
    3. ' for' → logprob: -2.82323956489563
    4. 'SUM' → logprob: -4.323239803314209
    5. 'dp' → logprob: -4.948239803314209
    6. '       ' → logprob: -6.573239803314209
    7. ' SUM' → logprob: -8.07323932647705
    8. ' dp' → logprob: -8.82323932647705
    9. 'DP' → logprob: -9.57323932647705
    10. ' ' → logprob: -9.69823932647705

Token 296: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.016035424545407295
    2. ' j' → logprob: -4.141035556793213
    3. '0' → logprob: -14.266035079956055
    4. ' ' → logprob: -15.266035079956055
    5. '_j' → logprob: -15.766035079956055
    6. '   ' → logprob: -16.891035079956055
    7. '```' → logprob: -17.016035079956055
    8. 'm' → logprob: -17.141035079956055
    9. ' ' → logprob: -17.141035079956055
    10. '	j' → logprob: -17.141035079956055

Token 297: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10036162286996841
    2. 'in' → logprob: -2.3503615856170654
    3. '(' → logprob: -9.100361824035645
    4. 'range' → logprob: -11.600361824035645
    5. ' ' → logprob: -11.725361824035645
    6. '   ' → logprob: -11.850361824035645
    7. '<|end|>' → logprob: -12.350361824035645
    8. '0' → logprob: -12.600361824035645
    9. '       ' → logprob: -13.225361824035645
    10. '=' → logprob: -13.475361824035645

Token 298: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014191479422152042
    2. ' range' → logprob: -4.264191627502441
    3. '(range' → logprob: -10.514191627502441
    4. '(M' → logprob: -14.264191627502441
    5. 'in' → logprob: -16.514190673828125
    6. '   ' → logprob: -17.014190673828125
    7. ' in' → logprob: -17.139190673828125
    8. '0' → logprob: -17.764190673828125
    9. '	range' → logprob: -18.014190673828125
    10. 'M' → logprob: -18.139190673828125

Token 299: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0005611348897218704
    2. 'M' → logprob: -7.625561237335205
    3. '(' → logprob: -10.625560760498047
    4. 'range' → logprob: -11.125560760498047
    5. '   ' → logprob: -11.250560760498047
    6. '1' → logprob: -11.250560760498047
    7. '       ' → logprob: -13.125560760498047
    8. '(i' → logprob: -13.750560760498047
    9. '0' → logprob: -14.125560760498047
    10. ' (' → logprob: -14.250560760498047

Token 300: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003261679667048156
    2. '1' → logprob: -8.250326156616211
    3. ' +' → logprob: -9.875326156616211
    4. '0' → logprob: -12.500326156616211
    5. '```' → logprob: -12.875326156616211
    6. '   ' → logprob: -13.375326156616211
    7. '()+' → logprob: -14.000326156616211
    8. ')+' → logprob: -14.250326156616211
    9. '+
' → logprob: -14.375326156616211
    10. ',' → logprob: -14.500326156616211

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. '2' → logprob: -12.000009536743164
    3. ' ' → logprob: -13.000009536743164
    4. '0' → logprob: -15.125009536743164
    5. '
' → logprob: -15.312509536743164
    6. '   ' → logprob: -15.500009536743164
    7. '+' → logprob: -15.625009536743164
    8. '```' → logprob: -15.750009536743164
    9. ')' → logprob: -17.312509536743164
    10. '11' → logprob: -17.375009536743164

Token 302: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21499335765838623
    2. ':' → logprob: -2.339993476867676
    3. '):
' → logprob: -2.339993476867676
    4. '():
' → logprob: -8.214993476867676
    5. ':
' → logprob: -8.714993476867676
    6. '():' → logprob: -9.089993476867676
    7. '   ' → logprob: -10.089993476867676
    8. ']:' → logprob: -10.214993476867676
    9. '<|end|>' → logprob: -10.214993476867676
    10. '):
' → logprob: -10.589993476867676

Token 303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008049230091273785
    2. 'dp' → logprob: -5.508049011230469
    3. ' dp' → logprob: -5.883049011230469
    4. '       ' → logprob: -7.633049011230469
    5. '<|end|>' → logprob: -8.383049011230469
    6. '	       ' → logprob: -9.258049011230469
    7. ',' → logprob: -9.508049011230469
    8. '(dp' → logprob: -9.633049011230469
    9. '_dp' → logprob: -10.008049011230469
    10. '	dp' → logprob: -10.258049011230469

Token 304: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.6548970937728882
    2. ' dp' → logprob: -1.1548970937728882
    3. 'SUM' → logprob: -2.7798972129821777
    4. ' if' → logprob: -2.9048972129821777
    5. '               ' → logprob: -3.9048972129821777
    6. 'if' → logprob: -4.529897212982178
    7. ' SUM' → logprob: -4.779897212982178
    8. 'DP' → logprob: -5.404897212982178
    9. '           ' → logprob: -6.029897212982178
    10. '	dp' → logprob: -7.154897212982178

Token 305: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.539801688631997e-05
    2. '[j' → logprob: -9.875065803527832
    3. ' [' → logprob: -12.000065803527832
    4. '[I' → logprob: -13.000065803527832
    5. '[' → logprob: -13.250065803527832
    6. '][' → logprob: -14.125065803527832
    7. '   ' → logprob: -14.750065803527832
    8. ')[' → logprob: -14.875065803527832
    9. '
' → logprob: -14.875065803527832
    10. '\[' → logprob: -15.125065803527832

Token 306: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008500635623931885
    2. ']' → logprob: -5.633500576019287
    3. '[j' → logprob: -5.758500576019287
    4. '[i' → logprob: -7.383500576019287
    5. ' ][' → logprob: -7.508500576019287
    6. ']=' → logprob: -8.508501052856445
    7. '[' → logprob: -8.758501052856445
    8. 'j' → logprob: -9.758501052856445
    9. '=' → logprob: -11.258501052856445
    10. '"][' → logprob: -11.321001052856445

Token 307: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.214019307051785e-05
    2. ' j' → logprob: -10.750032424926758
    3. '0' → logprob: -12.125032424926758
    4. 'None' → logprob: -12.500032424926758
    5. ']' → logprob: -14.500032424926758
    6. ' ' → logprob: -15.500032424926758
    7. '
' → logprob: -16.000032424926758
    8. '   ' → logprob: -16.125032424926758
    9. '	j' → logprob: -16.125032424926758
    10. '```' → logprob: -16.375032424926758

Token 308: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024122826755046844
    2. ']=' → logprob: -4.024122714996338
    3. '=' → logprob: -5.149122714996338
    4. ' =' → logprob: -9.649123191833496
    5. ' ]' → logprob: -9.649123191833496
    6. 'if' → logprob: -11.774123191833496
    7. '0' → logprob: -12.649123191833496
    8. ']=(' → logprob: -13.274123191833496
    9. ')' → logprob: -13.399123191833496
    10. ' ' → logprob: -13.649123191833496

Token 309: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009760101325809956
    2. ' =' → logprob: -4.634759902954102
    3. '=None' → logprob: -13.884759902954102
    4. '=False' → logprob: -14.134759902954102
    5. 'if' → logprob: -14.509759902954102
    6. ' ' → logprob: -14.759759902954102
    7. '=True' → logprob: -15.134759902954102
    8. '0' → logprob: -15.259759902954102
    9. ',' → logprob: -15.384759902954102
    10. '=
' → logprob: -15.759759902954102

Token 310: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013330348767340183
    2. '_INFINITY' → logprob: -4.638330459594727
    3. ' ' → logprob: -6.513330459594727
    4. '-' → logprob: -7.263330459594727
    5. '_IN' → logprob: -7.263330459594727
    6. '(' → logprob: -8.763330459594727
    7. '_FALSE' → logprob: -9.513330459594727
    8. '_INF' → logprob: -9.638330459594727
    9. '-IN' → logprob: -10.263330459594727
    10. 'float' → logprob: -10.513330459594727

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.035656437277793884
    2. '_INFINITY' → logprob: -3.660656452178955
    3. '-' → logprob: -5.160656452178955
    4. '_IN' → logprob: -7.035656452178955
    5. ' ' → logprob: -7.660656452178955
    6. '(' → logprob: -7.660656452178955
    7. '_FALSE' → logprob: -8.160655975341797
    8. '-IN' → logprob: -8.285655975341797
    9. '(-' → logprob: -8.410655975341797
    10. '[]' → logprob: -8.910655975341797

Token 312: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7552240490913391
    2. 'for' (adapté à ' for') → logprob: -1.0052239894866943
    3. ' for' → logprob: -1.8802239894866943
    4. 'dp' → logprob: -4.505224227905273
    5. '<|end|>' → logprob: -8.755224227905273
    6. ' dp' → logprob: -9.755224227905273
    7. 'SUM' → logprob: -9.880224227905273
    8. '       ' → logprob: -10.255224227905273
    9. '	for' → logprob: -10.255224227905273
    10. '```' → logprob: -10.255224227905273

Token 315: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10173295438289642
    2. ' i' → logprob: -2.7267329692840576
    3. 'j' → logprob: -3.7267329692840576
    4. ' j' → logprob: -4.9767327308654785
    5. 'range' → logprob: -9.351733207702637
    6. '_i' → logprob: -9.601733207702637
    7. ' range' → logprob: -9.726733207702637
    8. ' in' → logprob: -10.601733207702637
    9. '_j' → logprob: -10.851733207702637
    10. '_' → logprob: -11.101733207702637

Token 316: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02996406890451908
    2. 'in' → logprob: -3.529963970184326
    3. '(' → logprob: -8.779964447021484
    4. ' ' → logprob: -10.529964447021484
    5. '   ' → logprob: -11.529964447021484
    6. '	in' → logprob: -12.279964447021484
    7. '0' → logprob: -12.779964447021484
    8. ' (' → logprob: -13.029964447021484
    9. ',' → logprob: -13.154964447021484
    10. '_' → logprob: -13.529964447021484

Token 317: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023317918181419373
    2. ' range' → logprob: -3.773317813873291
    3. '(range' → logprob: -10.14831829071045
    4. 'in' → logprob: -10.64831829071045
    5. ' in' → logprob: -12.14831829071045
    6. '0' → logprob: -13.52331829071045
    7. '   ' → logprob: -14.52331829071045
    8. ' ' → logprob: -14.52331829071045
    9. '	range' → logprob: -14.52331829071045
    10. '1' → logprob: -14.77331829071045

Token 318: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.05772717669606209
    2. '(' → logprob: -2.932727098464966
    3. 'N' → logprob: -6.057727336883545
    4. '1' → logprob: -7.682727336883545
    5. '(M' → logprob: -10.557726860046387
    6. '(n' → logprob: -12.557726860046387
    7. '(-' → logprob: -13.057726860046387
    8. '2' → logprob: -13.307726860046387
    9. 'range' → logprob: -13.307726860046387
    10. '((' → logprob: -13.557726860046387

Token 319: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003663212701212615
    2. ' +' → logprob: -8.1253662109375
    3. '1' → logprob: -10.2503662109375
    4. '   ' → logprob: -11.2503662109375
    5. '):
' → logprob: -11.7503662109375
    6. '):' → logprob: -12.0003662109375
    7. '
' → logprob: -13.0003662109375
    8. '+
' → logprob: -13.2503662109375
    9. '()+' → logprob: -14.5003662109375
    10. ',' → logprob: -15.1253662109375

Token 320: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011779663618654013
    2. '2' → logprob: -6.876177787780762
    3. '+' → logprob: -9.001177787780762
    4. ' ' → logprob: -11.251177787780762
    5. '0' → logprob: -12.751177787780762
    6. '   ' → logprob: -13.876177787780762
    7. 'M' → logprob: -14.001177787780762
    8. '
' → logprob: -14.001177787780762
    9. '```' → logprob: -14.188677787780762
    10. 'N' → logprob: -15.001177787780762

Token 321: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17986123263835907
    2. '):' → logprob: -1.8048611879348755
    3. '):
' → logprob: -9.929861068725586
    4. ':' → logprob: -10.554861068725586
    5. '   ' → logprob: -10.804861068725586
    6. ':
' → logprob: -12.179861068725586
    7. ')' → logprob: -12.304861068725586
    8. '):

' → logprob: -12.679861068725586
    9. '       ' → logprob: -13.054861068725586
    10. '():
' → logprob: -13.429861068725586

Token 322: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5237998366355896
    2. '       ' → logprob: -0.8987998366355896
    3. ' for' → logprob: -7.523799896240234
    4. 'for' → logprob: -9.398799896240234
    5. '<|end|>' → logprob: -10.148799896240234
    6. '```' → logprob: -12.023799896240234
    7. '	for' → logprob: -12.648799896240234
    8. ',' → logprob: -13.023799896240234
    9. '   ' → logprob: -14.398799896240234
    10. ' ' → logprob: -15.148799896240234

Token 323: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -8.304016228066757e-05
    2. '   ' → logprob: -9.500082969665527
    3. ' for' → logprob: -12.125082969665527
    4. '       ' → logprob: -12.875082969665527
    5. '           ' → logprob: -15.625082969665527
    6. '	for' → logprob: -17.125083923339844
    7. 'SUM' → logprob: -17.750083923339844
    8. ' ' → logprob: -18.125083923339844
    9. '```' → logprob: -18.875083923339844
    10. '  ' → logprob: -20.500083923339844

Token 324: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006717743817716837
    2. ' j' → logprob: -5.006717681884766
    3. '_j' → logprob: -14.131717681884766
    4. '   ' → logprob: -14.631717681884766
    5. '	j' → logprob: -14.756717681884766
    6. ' ' → logprob: -15.506717681884766
    7. ' ' → logprob: -16.131717681884766
    8. '  ' → logprob: -16.631717681884766
    9. '0' → logprob: -17.131717681884766
    10. '$j' → logprob: -17.256717681884766

Token 325: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023259572684764862
    2. 'in' → logprob: -3.7732596397399902
    3. '(' → logprob: -12.523259162902832
    4. ' ' → logprob: -12.523259162902832
    5. '   ' → logprob: -13.398259162902832
    6. '=' → logprob: -13.898259162902832
    7. '<|end|>' → logprob: -14.148259162902832
    8. '	in' → logprob: -14.273259162902832
    9. ' =' → logprob: -14.773259162902832
    10. '[' → logprob: -14.773259162902832

Token 326: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008764183148741722
    2. ' range' → logprob: -4.758764266967773
    3. '(M' → logprob: -8.883764266967773
    4. '(range' → logprob: -11.508764266967773
    5. 'in' → logprob: -14.508764266967773
    6. ' in' → logprob: -15.383764266967773
    7. '_range' → logprob: -16.258764266967773
    8. '   ' → logprob: -17.008764266967773
    9. 'Range' → logprob: -17.133764266967773
    10. 'M' → logprob: -17.258764266967773

Token 327: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -6.623244553338736e-05
    2. 'M' → logprob: -9.875065803527832
    3. '(' → logprob: -11.875065803527832
    4. '   ' → logprob: -12.875065803527832
    5. ' (' → logprob: -13.000065803527832
    6. 'range' → logprob: -13.625065803527832
    7. '       ' → logprob: -14.500065803527832
    8. '(N' → logprob: -15.625065803527832
    9. '((' → logprob: -15.875065803527832
    10. '           ' → logprob: -16.12506675720215

Token 328: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.531315314830863e-06
    2. ')+' → logprob: -14.000003814697266
    3. ' +' → logprob: -14.250003814697266
    4. '()+' → logprob: -14.375003814697266
    5. '2' → logprob: -15.000003814697266
    6. '(' → logprob: -15.625003814697266
    7. '+
' → logprob: -15.875003814697266
    8. '1' → logprob: -16.000003814697266
    9. '```' → logprob: -16.250003814697266
    10. '   ' → logprob: -16.500003814697266

Token 329: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4855663721391466e-05
    2. '+' → logprob: -11.250015258789062
    3. ' ' → logprob: -14.125015258789062
    4. '   ' → logprob: -14.375015258789062
    5. '1' → logprob: -15.375015258789062
    6. '```' → logprob: -16.750015258789062
    7. 'j' → logprob: -17.125015258789062
    8. '0' → logprob: -17.375015258789062
    9. '3' → logprob: -17.375015258789062
    10. '       ' → logprob: -17.750015258789062

Token 330: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5236315131187439
    2. '):
' → logprob: -0.8986315131187439
    3. ':' → logprob: -8.02363109588623
    4. '():
' → logprob: -10.02363109588623
    5. '):
' → logprob: -10.14863109588623
    6. ':
' → logprob: -10.89863109588623
    7. ']:' → logprob: -10.89863109588623
    8. '           ' → logprob: -11.27363109588623
    9. ')' → logprob: -11.64863109588623
    10. '       ' → logprob: -11.77363109588623

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005349028389900923
    2. '               ' → logprob: -5.255349159240723
    3. 'SUM' → logprob: -9.630349159240723
    4. '       ' → logprob: -10.880349159240723
    5. '   ' → logprob: -11.505349159240723
    6. ' SUM' → logprob: -11.880349159240723
    7. '	       ' → logprob: -12.005349159240723
    8. '_SUM' → logprob: -12.380349159240723
    9. '                   ' → logprob: -14.255349159240723
    10. '		' → logprob: -14.630349159240723

Token 332: ' SUM' (ID: 52418)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' (adapté à ' SUM') → logprob: -0.0009342094417661428
    2. '           ' → logprob: -7.50093412399292
    3. ' SUM' → logprob: -9.000934600830078
    4. '   ' → logprob: -9.250934600830078
    5. '_SUM' → logprob: -9.500934600830078
    6. '       ' → logprob: -10.000934600830078
    7. '               ' → logprob: -10.125934600830078
    8. ' ' → logprob: -14.000934600830078
    9. '  ' → logprob: -15.625934600830078
    10. '```' → logprob: -15.750934600830078

Token 333: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[j' → logprob: -14.000001907348633
    3. '[I' → logprob: -14.750001907348633
    4. ' [' → logprob: -15.875001907348633
    5. '=' → logprob: -16.375001907348633
    6. '[' → logprob: -17.125001907348633
    7. '```' → logprob: -17.250001907348633
    8. '\[' → logprob: -18.000001907348633
    9. '][' → logprob: -18.125001907348633
    10. ')[' → logprob: -19.250001907348633

Token 334: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00749115040525794
    2. '[j' → logprob: -5.007491111755371
    3. '[i' → logprob: -7.257491111755371
    4. ' ][' → logprob: -10.382491111755371
    5. ']' → logprob: -10.757491111755371
    6. ']][' → logprob: -12.882491111755371
    7. ')[' → logprob: -13.007491111755371
    8. 'j' → logprob: -13.257491111755371
    9. '"][' → logprob: -13.382491111755371
    10. '   ' → logprob: -13.632491111755371

Token 335: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.4987974029500037e-05
    2. '[j' → logprob: -11.375024795532227
    3. ' j' → logprob: -11.750024795532227
    4. ']' → logprob: -12.500024795532227
    5. '0' → logprob: -14.500024795532227
    6. '```' → logprob: -15.500024795532227
    7. '<|end|>' → logprob: -15.750024795532227
    8. '_j' → logprob: -15.875024795532227
    9. ')' → logprob: -15.875024795532227
    10. 'None' → logprob: -16.125024795532227

Token 336: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14251947402954102
    2. ']' → logprob: -2.142519474029541
    3. ']=' → logprob: -4.517519474029541
    4. ' =' → logprob: -5.392519474029541
    5. ' ]' → logprob: -13.517518997192383
    6. ')' → logprob: -13.642518997192383
    7. ')=' → logprob: -14.642518997192383
    8. ']+=' → logprob: -14.767518997192383
    9. '0' → logprob: -16.267518997192383
    10. '']=' → logprob: -16.642518997192383

Token 337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0040785204619169235
    2. ' =' → logprob: -5.504078388214111
    3. '0' → logprob: -18.254077911376953
    4. '＝' → logprob: -19.129077911376953
    5. '=
' → logprob: -19.129077911376953
    6. '=int' → logprob: -19.379077911376953
    7. ' ' → logprob: -19.379077911376953
    8. '=None' → logprob: -20.004077911376953
    9. '.=' → logprob: -20.004077911376953
    10. ',' → logprob: -20.129077911376953

Token 338: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.337155355140567e-05
    2. ' ' → logprob: -9.750062942504883
    3. '-' → logprob: -13.000062942504883
    4. '(' → logprob: -14.875062942504883
    5. '_MOD' → logprob: -14.875062942504883
    6. 'int' → logprob: -15.000062942504883
    7. 'float' → logprob: -15.500062942504883
    8. 'None' → logprob: -15.750062942504883
    9. '۰' → logprob: -15.812562942504883
    10. '_' → logprob: -16.000062942504883

Token 339: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3080716346157715e-05
    2. ' ' → logprob: -11.000022888183594
    3. '_INFINITY' → logprob: -13.125022888183594
    4. '(' → logprob: -13.875022888183594
    5. '-' → logprob: -14.750022888183594
    6. 'int' → logprob: -14.875022888183594
    7. 'float' → logprob: -15.000022888183594
    8. 'None' → logprob: -15.000022888183594
    9. '_INF' → logprob: -15.750022888183594
    10. '۰' → logprob: -15.750022888183594

Token 340: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23156000673770905
    2. ' for' → logprob: -2.231559991836548
    3. 'for' → logprob: -2.481559991836548
    4. 'dp' → logprob: -4.606560230255127
    5. '<|end|>' → logprob: -5.481560230255127
    6. 'def' → logprob: -7.731560230255127
    7. '	for' → logprob: -8.106559753417969
    8. '<|end|>' → logprob: -8.106559753417969
    9. '	dp' → logprob: -9.481559753417969
    10. ' dp' → logprob: -9.606559753417969

Token 342: ' favorite' (ID: 8340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4709993600845337
    2. '   ' → logprob: -1.0959993600845337
    3. ' for' → logprob: -3.220999240875244
    4. 'dp' → logprob: -6.595999240875244
    5. '#' → logprob: -9.845999717712402
    6. '	for' → logprob: -10.220999717712402
    7. '    
' → logprob: -11.970999717712402
    8. ')' → logprob: -11.970999717712402
    9. '```' → logprob: -11.970999717712402
    10. '.' → logprob: -12.470999717712402

Token 343: '_answer' (ID: 65702)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1370439976453781
    2. 's' → logprob: -3.1370439529418945
    3. '_count' → logprob: -3.8870439529418945
    4. '_counts' → logprob: -4.1370439529418945
    5. '=' → logprob: -4.3870439529418945
    6. '_set' → logprob: -5.6370439529418945
    7. '_indices' → logprob: -5.7620439529418945
    8. '_positions' → logprob: -5.8870439529418945
    9. '_sum' → logprob: -6.0120439529418945
    10. '_lengths' → logprob: -6.1370439529418945

Token 344: '_number' (ID: 11733)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16008120775222778
    2. 's' → logprob: -2.785081148147583
    3. '=' → logprob: -2.910081148147583
    4. '<|end|>' → logprob: -4.785081386566162
    5. '_count' → logprob: -5.785081386566162
    6. '_length' → logprob: -5.910081386566162
    7. 'dp' → logprob: -5.910081386566162
    8. '   ' → logprob: -6.035081386566162
    9. '<|end|>' → logprob: -6.535081386566162
    10. '_dp' → logprob: -6.785081386566162

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07543876767158508
    2. '=' → logprob: -3.0754387378692627
    3. 's' → logprob: -3.7004387378692627
    4. ',' → logprob: -7.575438976287842
    5. '   ' → logprob: -8.075438499450684
    6. 'dp' → logprob: -8.325438499450684
    7. '_' → logprob: -9.575438499450684
    8. ' ' → logprob: -9.700438499450684
    9. '_count' → logprob: -9.950438499450684
    10. '_idx' → logprob: -9.950438499450684

Token 346: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0701686218380928
    2. ' ' → logprob: -3.1951687335968018
    3. 'dp' → logprob: -4.070168495178223
    4. '1' → logprob: -5.695168495178223
    5. 'int' → logprob: -6.820168495178223
    6. ' dp' → logprob: -6.945168495178223
    7. '-' → logprob: -7.445168495178223
    8. 'sum' → logprob: -7.820168495178223
    9. 'max' → logprob: -8.070168495178223
    10. 'M' → logprob: -8.195168495178223

Token 347: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13514408469200134
    2. 'dp' → logprob: -3.010143995285034
    3. '1' → logprob: -4.260144233703613
    4. 'int' → logprob: -4.760144233703613
    5. 'N' → logprob: -5.010144233703613
    6. 'M' → logprob: -5.260144233703613
    7. '-' → logprob: -5.385144233703613
    8. '3' → logprob: -5.635144233703613
    9. 'max' → logprob: -5.760144233703613
    10. 'sum' → logprob: -5.885144233703613

Token 348: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13573886454105377
    2. 'for' → logprob: -2.1357388496398926
    3. ' for' → logprob: -4.760738849639893
    4. '	for' → logprob: -9.51073932647705
    5. '<|end|>' → logprob: -9.88573932647705
    6. '#' → logprob: -10.63573932647705
    7. 'def' → logprob: -10.76073932647705
    8. '    ' → logprob: -11.38573932647705
    9. '
' → logprob: -11.63573932647705
    10. '    
' → logprob: -12.01073932647705

Token 351: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20559348165988922
    2. '=' → logprob: -1.705593466758728
    3. '_' → logprob: -5.955593585968018
    4. ',' → logprob: -7.455593585968018
    5. 'i' → logprob: -8.33059310913086
    6. '_i' → logprob: -8.58059310913086
    7. '_f' → logprob: -9.20559310913086
    8. 'f' → logprob: -9.58059310913086
    9. ' ' → logprob: -9.70559310913086
    10. 's' → logprob: -9.83059310913086

Token 352: ' lambda' (ID: 27871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018257156480103731
    2. ' ' → logprob: -6.50182580947876
    3. '1' → logprob: -8.251825332641602
    4. '-' → logprob: -10.126825332641602
    5. '(' → logprob: -12.376825332641602
    6. '2' → logprob: -12.501825332641602
    7. 'N' → logprob: -12.751825332641602
    8. '[' → logprob: -13.001825332641602
    9. '```' → logprob: -13.751825332641602
    10. ' -' → logprob: -14.126825332641602

Token 353: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6707670092582703
    2. 'i' → logprob: -1.170767068862915
    3. ' j' → logprob: -3.045767068862915
    4. ' x' → logprob: -3.045767068862915
    5. 'x' → logprob: -3.295767068862915
    6. 'j' → logprob: -3.670767068862915
    7. 'k' → logprob: -5.670766830444336
    8. ' k' → logprob: -5.795766830444336
    9. 'pos' → logprob: -5.795766830444336
    10. ' pos' → logprob: -6.045766830444336

Token 354: ',y' (ID: 16103)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005468063056468964
    2. ' :' → logprob: -5.880467891693115
    3. ',' → logprob: -6.505467891693115
    4. 'x' → logprob: -7.130467891693115
    5. ':x' → logprob: -8.880468368530273
    6. ' x' → logprob: -9.130468368530273
    7. '(x' → logprob: -10.755468368530273
    8. ',x' → logprob: -11.005468368530273
    9. '0' → logprob: -11.380468368530273
    10. 'j' → logprob: -11.755468368530273

Token 355: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005605389014817774
    2. ' :' → logprob: -7.750560760498047
    3. '_:' → logprob: -9.750560760498047
    4. ':x' → logprob: -10.375560760498047
    5. ':(' → logprob: -11.000560760498047
    6. ',' → logprob: -12.500560760498047
    7. ':j' → logprob: -12.625560760498047
    8. ':y' → logprob: -12.625560760498047
    9. ':i' → logprob: -12.875560760498047
    10. ':[' → logprob: -13.375560760498047

Token 356: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3384769856929779
    2. ' x' → logprob: -1.3384770154953003
    3. ' y' → logprob: -4.58847713470459
    4. 'y' → logprob: -4.71347713470459
    5. ' (' → logprob: -6.33847713470459
    6. '   ' → logprob: -6.46347713470459
    7. '(x' → logprob: -7.08847713470459
    8. '    ' → logprob: -7.46347713470459
    9. ' ' → logprob: -7.83847713470459
    10. '(' → logprob: -8.08847713470459

Token 357: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.019344806671142578
    2. 'y' → logprob: -4.894344806671143
    3. '(x' → logprob: -5.144344806671143
    4. ' x' → logprob: -5.769344806671143
    5. ' (' → logprob: -7.769344806671143
    6. '   ' → logprob: -7.769344806671143
    7. '(y' → logprob: -8.269344329833984
    8. 'i' → logprob: -8.269344329833984
    9. '0' → logprob: -8.394344329833984
    10. '(' → logprob: -8.519344329833984

Token 358: '+' (ID: 10)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.5395081043243408
    2. ',' → logprob: -1.2895081043243408
    3. ',j' → logprob: -2.289508104324341
    4. '*' → logprob: -4.664507865905762
    5. '+' → logprob: -4.664507865905762
    6. ' *' → logprob: -5.289507865905762
    7. ')*' → logprob: -5.539507865905762
    8. '*y' → logprob: -5.664507865905762
    9. ')' → logprob: -5.789507865905762
    10. ' ,' → logprob: -6.664507865905762

Token 359: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011563740670681
    2. 'y' → logprob: -4.511563777923584
    3. ' ' → logprob: -8.136563301086426
    4. ' y' → logprob: -9.136563301086426
    5. '   ' → logprob: -10.511563301086426
    6. '0' → logprob: -10.636563301086426
    7. '2' → logprob: -10.886563301086426
    8. 'j' → logprob: -12.136563301086426
    9. ')' → logprob: -12.511563301086426
    10. '5' → logprob: -12.574063301086426

Token 360: ',y' (ID: 16103)
  Prédit: ')*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.22988557815551758
    2. ',y' → logprob: -2.3548855781555176
    3. ',' → logprob: -2.7298855781555176
    4. ')*' → logprob: -3.6048855781555176
    5. ')' → logprob: -4.604885578155518
    6. '*y' → logprob: -5.604885578155518
    7. '*(' → logprob: -5.854885578155518
    8. ' ,' → logprob: -8.10488510131836
    9. ')+(' → logprob: -8.22988510131836
    10. '   ' → logprob: -8.60488510131836

Token 361: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03944963961839676
    2. '-' → logprob: -3.289449691772461
    3. ' -' → logprob: -7.039449691772461
    4. '+' → logprob: -8.164449691772461
    5. '[' → logprob: -9.664449691772461
    6. ' )' → logprob: -9.914449691772461
    7. '<|end|>' → logprob: -9.914449691772461
    8. ')[' → logprob: -10.539449691772461
    9. '   ' → logprob: -11.039449691772461
    10. ')
' → logprob: -11.539449691772461

Token 362: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6043093204498291
    2. '1' → logprob: -1.104309320449829
    3. '3' → logprob: -2.104309320449829
    4. ' ' → logprob: -8.97930908203125
    5. ')' → logprob: -10.35430908203125
    6. '   ' → logprob: -11.72930908203125
    7. '4' → logprob: -12.72930908203125
    8. '0' → logprob: -12.72930908203125
    9. '```' → logprob: -13.91680908203125
    10. '  ' → logprob: -14.04180908203125

Token 363: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.35706390615087e-05
    2. ')
' → logprob: -11.875033378601074
    3. '<|end|>' → logprob: -11.875033378601074
    4. ' )' → logprob: -12.000033378601074
    5. '   ' → logprob: -12.125033378601074
    6. ')[' → logprob: -12.625033378601074
    7. '-' → logprob: -13.500033378601074
    8. ')return' → logprob: -14.125033378601074
    9. '[' → logprob: -15.250033378601074
    10. ')#' → logprob: -15.250033378601074

Token 364: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1742975413799286
    2. '<|end|>' → logprob: -1.924297571182251
    3. ' for' → logprob: -5.549297332763672
    4. 'def' → logprob: -5.924297332763672
    5. 'for' → logprob: -6.174297332763672
    6. '
' → logprob: -7.049297332763672
    7. '    
' → logprob: -7.049297332763672
    8. ' ' → logprob: -7.549297332763672
    9. ')' → logprob: -7.799297332763672
    10. '	for' → logprob: -7.799297332763672

Token 366: ' Lo' (ID: 8786)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4037318527698517
    2. ' for' → logprob: -1.4037318229675293
    3. 'for' → logprob: -2.9037318229675293
    4. '<|end|>' → logprob: -3.7787318229675293
    5. '    ' → logprob: -6.153731822967529
    6. 'def' → logprob: -6.528731822967529
    7. '<|end|>' → logprob: -7.153731822967529
    8. ' ' → logprob: -7.653731822967529
    9. '	for' → logprob: -7.653731822967529
    10. ' i' → logprob: -7.903731822967529

Token 367: 'ops' (ID: 4645)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.11744795739650726
    2. '   ' → logprob: -2.617447853088379
    3. 'ops' → logprob: -3.617447853088379
    4. 'ok' → logprob: -6.117447853088379
    5. 'for' → logprob: -6.242447853088379
    6. 'oping' → logprob: -7.117447853088379
    7. '       ' → logprob: -7.242447853088379
    8. 'opping' → logprob: -7.617447853088379
    9. 'oops' → logprob: -7.617447853088379
    10. '#' → logprob: -7.867447853088379

Token 368: ' index' (ID: 3472)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7740838527679443
    2. '<|end|>' → logprob: -1.0240838527679443
    3. '   ' → logprob: -1.8990838527679443
    4. 'for' → logprob: -3.7740838527679443
    5. '
' → logprob: -5.899084091186523
    6. '<|end|>' → logprob: -6.024084091186523
    7. '    
' → logprob: -7.399084091186523
    8. ' ' → logprob: -8.399084091186523
    9. ':' → logprob: -8.399084091186523
    10. ',' → logprob: -8.649084091186523

Token 369: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.570393979549408
    2. 'for' → logprob: -1.6953940391540527
    3. ' =' → logprob: -2.3203940391540527
    4. '   ' → logprob: -3.3203940391540527
    5. '<|end|>' → logprob: -3.4453940391540527
    6. ' i' → logprob: -4.070394039154053
    7. 'i' → logprob: -4.320394039154053
    8. '=' → logprob: -4.570394039154053
    9. 's' → logprob: -4.820394039154053
    10. '<|end|>' → logprob: -5.195394039154053

Token 370: ' custom' (ID: 2602)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14454635977745056
    2. '1' → logprob: -2.5195462703704834
    3. ' ' → logprob: -3.1445462703704834
    4. 'i' → logprob: -6.0195465087890625
    5. '   ' → logprob: -6.1445465087890625
    6. '2' → logprob: -6.1445465087890625
    7. '-' → logprob: -6.8945465087890625
    8. 'range' → logprob: -7.1445465087890625
    9. 'for' → logprob: -7.7695465087890625
    10. '_' → logprob: -7.7695465087890625

Token 371: ' enumeration' (ID: 120596)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7456516623497009
    2. '<|end|>' → logprob: -2.2456517219543457
    3. ' ' → logprob: -2.7456517219543457
    4. ' for' → logprob: -2.8706517219543457
    5. 'def' → logprob: -2.9956517219543457
    6. ' i' → logprob: -3.1206517219543457
    7. 'for' → logprob: -3.7456517219543457
    8. 'i' → logprob: -3.7456517219543457
    9. '   ' → logprob: -3.7456517219543457
    10. '_' → logprob: -4.120651721954346

Token 372: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1825210005044937
    2. '<|end|>' → logprob: -2.307521104812622
    3. '
' → logprob: -3.557521104812622
    4. ' for' → logprob: -3.682521104812622
    5. '    
' → logprob: -5.682520866394043
    6. 'for' → logprob: -5.807520866394043
    7. '<|end|>' → logprob: -6.182520866394043
    8. ':' → logprob: -6.932520866394043
    9. ',' → logprob: -7.182520866394043
    10. '  
' → logprob: -7.182520866394043

Token 373: ' fun' (ID: 2827)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6546390652656555
    2. ' i' → logprob: -0.9046390652656555
    3. 'dp' → logprob: -4.65463924407959
    4. '_' → logprob: -5.15463924407959
    5. 'range' → logprob: -5.27963924407959
    6. ' range' → logprob: -5.40463924407959
    7. ' dp' → logprob: -5.40463924407959
    8. 'x' → logprob: -5.52963924407959
    9. ' _' → logprob: -5.52963924407959
    10. '0' → logprob: -5.52963924407959

Token 374: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05920223891735077
    2. '<|end|>' → logprob: -2.934202194213867
    3. ' for' → logprob: -6.184202194213867
    4. '
' → logprob: -6.559202194213867
    5. '<|end|>' → logprob: -7.559202194213867
    6. 'for' → logprob: -9.309202194213867
    7. '    
' → logprob: -9.434202194213867
    8. ',' → logprob: -9.934202194213867
    9. '	for' → logprob: -11.434202194213867
    10. '  ' → logprob: -11.684202194213867

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006162586156278849
    2. ' for' → logprob: -5.381162643432617
    3. 'for' → logprob: -6.506162643432617
    4. '<|end|>' → logprob: -11.256162643432617
    5. '```' → logprob: -11.756162643432617
    6. '
' → logprob: -11.756162643432617
    7. '    
' → logprob: -11.881162643432617
    8. '	for' → logprob: -12.506162643432617
    9. 'def' → logprob: -13.381162643432617
    10. ',' → logprob: -13.506162643432617

Token 376: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5712093710899353
    2. 'for' (adapté à ' for') → logprob: -0.9462093710899353
    3. '   ' → logprob: -3.07120943069458
    4. '
' → logprob: -8.446208953857422
    5. '	for' → logprob: -8.696208953857422
    6. '```' → logprob: -10.071208953857422
    7. ' ' → logprob: -10.571208953857422
    8. '    
' → logprob: -10.696208953857422
    9. ' i' → logprob: -11.196208953857422
    10. '    ' → logprob: -11.196208953857422

Token 377: ' alpha' (ID: 17406)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.042989831417798996
    2. 'i' → logprob: -3.292989730834961
    3. ' j' → logprob: -6.542989730834961
    4. ' y' → logprob: -7.042989730834961
    5. ' x' → logprob: -7.292989730834961
    6. '_i' → logprob: -7.417989730834961
    7. ' ' → logprob: -8.667989730834961
    8. 'j' → logprob: -8.730489730834961
    9. ' _' → logprob: -8.980489730834961
    10. '   ' → logprob: -9.105489730834961

Token 378: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3129066824913025
    2. 'in' → logprob: -1.6879067420959473
    3. ',' → logprob: -3.0629067420959473
    4. 'i' → logprob: -3.5629067420959473
    5. '_i' → logprob: -5.312906742095947
    6. ' i' → logprob: -7.062906742095947
    7. '0' → logprob: -7.812906742095947
    8. '1' → logprob: -7.812906742095947
    9. ' ' → logprob: -7.812906742095947
    10. '   ' → logprob: -8.062906265258789

Token 379: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8666044473648071
    2. ' i' → logprob: -1.1166044473648071
    3. ' beta' → logprob: -2.6166043281555176
    4. 'x' → logprob: -2.9916043281555176
    5. 'beta' → logprob: -2.9916043281555176
    6. ' x' → logprob: -3.3666043281555176
    7. ' (' → logprob: -4.991604328155518
    8. ' s' → logprob: -5.241604328155518
    9. 's' → logprob: -5.554104328155518
    10. 'a' → logprob: -5.866604328155518

Token 380: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1320645809173584
    2. '_i' → logprob: -1.1320645809173584
    3. ',' → logprob: -1.7570645809173584
    4. 'i' → logprob: -2.6320645809173584
    5. '_idx' → logprob: -3.1320645809173584
    6. 'in' → logprob: -4.1320648193359375
    7. ',i' → logprob: -4.2570648193359375
    8. ',_' → logprob: -5.0070648193359375
    9. 'um' → logprob: -5.3820648193359375
    10. 'ize' → logprob: -5.5070648193359375

Token 381: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.38721606135368347
    2. ' enumerate' → logprob: -1.1372160911560059
    3. 'zip' → logprob: -8.387215614318848
    4. ' zip' → logprob: -9.637215614318848
    5. 'en' → logprob: -10.887215614318848
    6. '(en' → logprob: -12.012215614318848
    7. 'enum' → logprob: -12.262215614318848
    8. '_' → logprob: -12.637215614318848
    9. 'range' → logprob: -12.887215614318848
    10. '   ' → logprob: -13.137215614318848

Token 382: '(S' (ID: 6181)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.13785794377326965
    2. '(S' → logprob: -2.1378579139709473
    3. 'range' → logprob: -4.887857913970947
    4. 'T' → logprob: -6.762857913970947
    5. '(range' → logprob: -7.262857913970947
    6. '(T' → logprob: -7.512857913970947
    7. 'enumer' → logprob: -8.262858390808105
    8. ' S' → logprob: -8.637858390808105
    9. '_S' → logprob: -9.512858390808105
    10. 'zip' → logprob: -9.762858390808105

Token 383: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11451557278633118
    2. '):
' → logprob: -2.239515542984009
    3. ',' → logprob: -6.614515781402588
    4. '   ' → logprob: -8.36451530456543
    5. ':' → logprob: -9.73951530456543
    6. '():' → logprob: -11.11451530456543
    7. '):
' → logprob: -11.48951530456543
    8. ' ):' → logprob: -11.86451530456543
    9. '       ' → logprob: -12.11451530456543
    10. '):

' → logprob: -12.23951530456543

Token 384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02558894455432892
    2. ' for' → logprob: -4.6505889892578125
    3. ':' → logprob: -4.7755889892578125
    4. '<|end|>' → logprob: -5.4005889892578125
    5. ',' → logprob: -6.7755889892578125
    6. '   ' → logprob: -7.0255889892578125
    7. '<|end|>' → logprob: -8.150588989257812
    8. ':
' → logprob: -9.150588989257812
    9. '	for' → logprob: -9.150588989257812
    10. 'for' → logprob: -10.025588989257812

Token 385: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5059539675712585
    2. 'for' (adapté à ' for') → logprob: -1.0059540271759033
    3. '   ' → logprob: -3.5059540271759033
    4. '       ' → logprob: -7.005953788757324
    5. '	for' → logprob: -8.130953788757324
    6. ' ' → logprob: -9.880953788757324
    7. '    ' → logprob: -9.880953788757324
    8. '	   ' → logprob: -11.755953788757324
    9. '   ' → logprob: -12.255953788757324
    10. '    
' → logprob: -12.505953788757324

Token 386: ' beta' (ID: 21306)
  Prédit: 'beta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beta' → logprob: -0.013266348280012608
    2. ' beta' → logprob: -4.388266563415527
    3. 'alpha' → logprob: -8.763266563415527
    4. '_beta' → logprob: -8.763266563415527
    5. 'bet' → logprob: -9.388266563415527
    6. 'br' → logprob: -9.388266563415527
    7. 'omega' → logprob: -9.763266563415527
    8. '(beta' → logprob: -10.513266563415527
    9. 'bt' → logprob: -10.888266563415527
    10. 'idx' → logprob: -10.888266563415527

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013760293833911419
    2. ' in' → logprob: -4.388760089874268
    3. ' ,' → logprob: -7.138760089874268
    4. ',b' → logprob: -8.513760566711426
    5. 'in' → logprob: -9.013760566711426
    6. ' ' → logprob: -11.138760566711426
    7. '_,' → logprob: -11.388760566711426
    8. '0' → logprob: -11.513760566711426
    9. ',y' → logprob: -11.513760566711426
    10. 'range' → logprob: -11.638760566711426

Token 388: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10025250166654587
    2. ' t' → logprob: -2.350252389907837
    3. '   ' → logprob: -11.350252151489258
    4. ' ' → logprob: -11.600252151489258
    5. '(t' → logprob: -11.725252151489258
    6. '_t' → logprob: -12.225252151489258
    7. '  ' → logprob: -13.350252151489258
    8. '	t' → logprob: -13.350252151489258
    9. '    ' → logprob: -13.600252151489258
    10. '_' → logprob: -13.850252151489258

Token 389: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043301861733198166
    2. 'in' → logprob: -3.168301820755005
    3. ')' → logprob: -8.793301582336426
    4. ' ' → logprob: -9.293301582336426
    5. ',' → logprob: -10.543301582336426
    6. '   ' → logprob: -11.793301582336426
    7. '  ' → logprob: -12.418301582336426
    8. '    ' → logprob: -12.418301582336426
    9. ' )' → logprob: -13.293301582336426
    10. '        ' → logprob: -13.855801582336426

Token 390: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0006299942615441978
    2. ' enumerate' → logprob: -7.375629901885986
    3. 'en' → logprob: -13.750630378723145
    4. 'enum' → logprob: -14.500630378723145
    5. 'range' → logprob: -15.250630378723145
    6. ' ' → logprob: -15.250630378723145
    7. '(en' → logprob: -15.625630378723145
    8. '_' → logprob: -15.750630378723145
    9. '   ' → logprob: -15.875630378723145
    10. 'enqueue' → logprob: -16.375629425048828

Token 391: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.04866582900285721
    2. 'T' → logprob: -3.048665761947632
    3. '(' → logprob: -10.548666000366211
    4. ' (' → logprob: -10.923666000366211
    5. ' T' → logprob: -11.048666000366211
    6. '   ' → logprob: -12.423666000366211
    7. '_T' → logprob: -13.298666000366211
    8. '	T' → logprob: -13.423666000366211
    9. 't' → logprob: -13.548666000366211
    10. '(
' → logprob: -13.673666000366211

Token 392: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4292338788509369
    2. '):
' → logprob: -1.0542339086532593
    3. '       ' → logprob: -8.92923355102539
    4. ':' → logprob: -9.05423355102539
    5. '):
' → logprob: -9.30423355102539
    6. '():
' → logprob: -9.80423355102539
    7. '           ' → logprob: -10.17923355102539
    8. '():' → logprob: -10.67923355102539
    9. '):

' → logprob: -10.92923355102539
    10. '   ' → logprob: -12.05423355102539

Token 393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02821100503206253
    2. ':' → logprob: -3.9032111167907715
    3. '<|end|>' → logprob: -5.1532111167907715
    4. ':
' → logprob: -7.9032111167907715
    5. '               ' → logprob: -8.028210639953613
    6. ',' → logprob: -8.403210639953613
    7. '            
' → logprob: -8.653210639953613
    8. '<|end|>' → logprob: -8.903210639953613
    9. '            ' → logprob: -9.028210639953613
    10. '[' → logprob: -9.528210639953613

Token 394: ' i' (ID: 575)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22897674143314362
    2. '               ' → logprob: -1.8539767265319824
    3. ' dp' → logprob: -3.4789767265319824
    4. 'if' → logprob: -5.103976726531982
    5. '           ' → logprob: -5.353976726531982
    6. 'dp' → logprob: -5.978976726531982
    7. '[' → logprob: -6.978976726531982
    8. '            ' → logprob: -7.728976726531982
    9. '                
' → logprob: -7.853976726531982
    10. ' ' → logprob: -8.10397720336914

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09710905700922012
    2. ',j' → logprob: -2.722109079360962
    3. '=' → logprob: -3.722109079360962
    4. ' =' → logprob: -6.222108840942383
    5. ' ,' → logprob: -8.097108840942383
    6. 'j' → logprob: -9.472108840942383
    7. ',i' → logprob: -9.597108840942383
    8. '=j' → logprob: -9.847108840942383
    9. ' j' → logprob: -10.222108840942383
    10. '=i' → logprob: -10.722108840942383

Token 396: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002090423135086894
    2. ' j' → logprob: -6.5020904541015625
    3. 'idx' → logprob: -8.252090454101562
    4. '   ' → logprob: -9.377090454101562
    5. 'i' → logprob: -9.752090454101562
    6. '_j' → logprob: -9.877090454101562
    7. 'alpha' → logprob: -10.627090454101562
    8. ' ' → logprob: -11.002090454101562
    9. 'k' → logprob: -11.377090454101562
    10. '    ' → logprob: -11.502090454101562

Token 397: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2016308456659317
    2. ' =' → logprob: -1.7016308307647705
    3. ',' → logprob: -9.076630592346191
    4. '=i' → logprob: -9.326630592346191
    5. '           ' → logprob: -12.826630592346191
    6. ')' → logprob: -13.826630592346191
    7. '=
' → logprob: -13.826630592346191
    8. '=index' → logprob: -13.826630592346191
    9. '=lambda' → logprob: -13.951630592346191
    10. '<|end|>' → logprob: -14.076630592346191

Token 398: ' alpha' (ID: 17406)
  Prédit: 'alpha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.3995080888271332
    2. 'idx' → logprob: -1.3995081186294556
    3. ' idx' → logprob: -3.149507999420166
    4. ' alpha' → logprob: -3.274507999420166
    5. '_alpha' → logprob: -7.399507999420166
    6. '   ' → logprob: -8.024508476257324
    7. '_idx' → logprob: -8.274508476257324
    8. '(alpha' → logprob: -9.024508476257324
    9. '(idx' → logprob: -9.774508476257324
    10. '_' → logprob: -9.899508476257324

Token 399: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18136046826839447
    2. ',j' → logprob: -2.3063604831695557
    3. '+' → logprob: -2.8063604831695557
    4. ' +' → logprob: -5.306360244750977
    5. ',b' → logprob: -7.931360244750977
    6. ' ,' → logprob: -8.306360244750977
    7. 'beta' → logprob: -9.181360244750977
    8. '+j' → logprob: -9.806360244750977
    9. '           ' → logprob: -11.306360244750977
    10. 'j' → logprob: -11.806360244750977

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030936971306800842
    2. '0' → logprob: -6.003093719482422
    3. ' ' → logprob: -7.878093719482422
    4. '2' → logprob: -8.503093719482422
    5. '   ' → logprob: -11.253093719482422
    6. 's' → logprob: -12.128093719482422
    7. 'i' → logprob: -12.628093719482422
    8. 'idx' → logprob: -13.440593719482422
    9. 'alpha' → logprob: -13.628093719482422
    10. '
' → logprob: -13.753093719482422

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004251931968610734
    2. ' ,' → logprob: -8.125425338745117
    3. ',j' → logprob: -9.125425338745117
    4. '           ' → logprob: -11.500425338745117
    5. ',b' → logprob: -12.375425338745117
    6. ',
' → logprob: -12.875425338745117
    7. '<|end|>' → logprob: -13.875425338745117
    8. ',k' → logprob: -14.500425338745117
    9. ' ' → logprob: -15.625425338745117
    10. '‌,' → logprob: -16.125425338745117

Token 402: ' beta' (ID: 21306)
  Prédit: 'beta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beta' → logprob: -0.008618000894784927
    2. ' beta' → logprob: -4.758617877960205
    3. 'bet' → logprob: -13.508618354797363
    4. '   ' → logprob: -14.258618354797363
    5. '.beta' → logprob: -15.133618354797363
    6. '                   ' → logprob: -15.383618354797363
    7. ' ' → logprob: -15.383618354797363
    8. '           ' → logprob: -15.883618354797363
    9. '(beta' → logprob: -16.383617401123047
    10. 'b' → logprob: -16.633617401123047

Token 403: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.030290380120277405
    2. '1' → logprob: -3.530290365219116
    3. ' +' → logprob: -7.530290603637695
    4. ' ' → logprob: -13.905290603637695
    5. '+
' → logprob: -14.530290603637695
    6. '2' → logprob: -14.905290603637695
    7. '<|end|>' → logprob: -15.030290603637695
    8. '0' → logprob: -15.655290603637695
    9. '=' → logprob: -15.905290603637695
    10. 'def' → logprob: -16.030290603637695

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.250005722045898
    3. '<|end|>' → logprob: -15.625005722045898
    4. '2' → logprob: -15.750005722045898
    5. '0' → logprob: -16.5000057220459
    6. '+' → logprob: -16.7500057220459
    7. '```' → logprob: -17.1250057220459
    8. '   ' → logprob: -17.8750057220459
    9. '
' → logprob: -18.1250057220459
    10. 'def' → logprob: -18.3750057220459

Token 405: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09226752817630768
    2. '<|end|>' → logprob: -2.4672675132751465
    3. '<|end|>' → logprob: -5.9672675132751465
    4. ',' → logprob: -8.092267990112305
    5. '            
' → logprob: -8.967267990112305
    6. '            ' → logprob: -9.717267990112305
    7. ')' → logprob: -10.592267990112305
    8. '
' → logprob: -10.592267990112305
    9. '       ' → logprob: -10.592267990112305
    10. '          ' → logprob: -10.592267990112305

Token 406: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14626450836658478
    2. '<|end|>' → logprob: -2.2712645530700684
    3. '            ' → logprob: -3.8962645530700684
    4. ' ' → logprob: -4.896264553070068
    5. '[' → logprob: -6.521264553070068
    6. '            
' → logprob: -7.021264553070068
    7. '<|end|>' → logprob: -7.396264553070068
    8. '               ' → logprob: -7.896264553070068
    9. ' if' → logprob: -8.14626407623291
    10. ',' → logprob: -8.27126407623291

Token 407: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.017668338492512703
    2. '           ' → logprob: -4.6426682472229
    3. 'dp' → logprob: -4.8926682472229
    4. ' if' → logprob: -7.8926682472229
    5. '       ' → logprob: -13.517668724060059
    6. '   ' → logprob: -14.017668724060059
    7. '               ' → logprob: -14.142668724060059
    8. ' dp' → logprob: -14.392668724060059
    9. '#' → logprob: -14.767668724060059
    10. '```' → logprob: -15.017668724060059

Token 408: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6331455707550049
    2. ' s' → logprob: -0.7581455707550049
    3. '(s' → logprob: -8.633145332336426
    4. 'dp' → logprob: -9.258145332336426
    5. 'S' → logprob: -9.383145332336426
    6. ' dp' → logprob: -9.758145332336426
    7. '_s' → logprob: -10.258145332336426
    8. '   ' → logprob: -10.633145332336426
    9. ' ' → logprob: -10.883145332336426
    10. ' S' → logprob: -11.258145332336426

Token 409: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17990197241306305
    2. ' ==' → logprob: -1.8049019575119019
    3. '=' → logprob: -9.179902076721191
    4. '[' → logprob: -10.929902076721191
    5. '!=' → logprob: -10.929902076721191
    6. ' !=' → logprob: -12.304902076721191
    7. 's' → logprob: -13.179902076721191
    8. ' =' → logprob: -13.304902076721191
    9. '==
' → logprob: -13.429902076721191
    10. '<|end|>' → logprob: -13.679902076721191

Token 410: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00023178798437584192
    2. ' t' → logprob: -8.375231742858887
    3. '_t' → logprob: -15.000231742858887
    4. ' ' → logprob: -15.375231742858887
    5. '	t' → logprob: -15.750231742858887
    6. '   ' → logprob: -15.875231742858887
    7. '           ' → logprob: -16.250232696533203
    8. '_' → logprob: -16.750232696533203
    9. 'T' → logprob: -17.250232696533203
    10. '`t' → logprob: -17.375232696533203

Token 411: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6334986686706543
    2. ':' → logprob: -0.7584986686706543
    3. '               ' → logprob: -7.508498668670654
    4. '):
' → logprob: -8.383499145507812
    5. ' and' → logprob: -9.883499145507812
    6. '):' → logprob: -10.883499145507812
    7. ':
' → logprob: -11.008499145507812
    8. '           ' → logprob: -11.883499145507812
    9. 'and' → logprob: -12.133499145507812
    10. ' :
' → logprob: -12.258499145507812

Token 412: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008879510685801506
    2. ':' → logprob: -5.258879661560059
    3. ':
' → logprob: -6.508879661560059
    4. ' dp' → logprob: -7.383879661560059
    5. 'dp' → logprob: -7.883879661560059
    6. ',' → logprob: -8.258879661560059
    7. '):
' → logprob: -8.383879661560059
    8. '<|end|>' → logprob: -8.758879661560059
    9. '                       ' → logprob: -9.633879661560059
    10. '):' → logprob: -9.758879661560059

Token 413: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.16190677881240845
    2. ' dp' → logprob: -1.9119067192077637
    3. '               ' → logprob: -6.536906719207764
    4. '                   ' → logprob: -8.661907196044922
    5. '	dp' → logprob: -10.411907196044922
    6. '(dp' → logprob: -12.161907196044922
    7. '   ' → logprob: -12.161907196044922
    8. '_dp' → logprob: -12.286907196044922
    9. '                       ' → logprob: -12.536907196044922
    10. ' ' → logprob: -12.911907196044922

Token 414: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.625007629394531
    3. 'i' → logprob: -12.875007629394531
    4. 'alpha' → logprob: -14.250007629394531
    5. '[I' → logprob: -15.625007629394531
    6. '][' → logprob: -16.50000762939453
    7. '[ip' → logprob: -16.50000762939453
    8. '[j' → logprob: -16.62500762939453
    9. ' [' → logprob: -16.62500762939453
    10. '_i' → logprob: -16.75000762939453

Token 415: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11973092705011368
    2. '[j' → logprob: -2.4947309494018555
    3. '-' → logprob: -3.6197309494018555
    4. '[' → logprob: -6.6197309494018555
    5. '[i' → logprob: -6.8697309494018555
    6. ' -' → logprob: -7.9947309494018555
    7. 'j' → logprob: -8.244730949401855
    8. ' ][' → logprob: -9.244730949401855
    9. ']' → logprob: -9.494730949401855
    10. '"][' → logprob: -9.619730949401855

Token 416: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.954393079970032e-05
    2. 'alpha' → logprob: -11.000049591064453
    3. ' j' → logprob: -11.500049591064453
    4. '   ' → logprob: -11.750049591064453
    5. 'beta' → logprob: -12.250049591064453
    6. '_j' → logprob: -13.625049591064453
    7. '[j' → logprob: -13.625049591064453
    8. ']' → logprob: -13.750049591064453
    9. '	j' → logprob: -14.125049591064453
    10. '1' → logprob: -14.250049591064453

Token 417: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032296369317919016
    2. '=' → logprob: -6.75322961807251
    3. ' =' → logprob: -7.00322961807251
    4. ']=' → logprob: -7.62822961807251
    5. ']+=' → logprob: -7.62822961807251
    6. ' ]' → logprob: -9.503230094909668
    7. ')' → logprob: -10.503230094909668
    8. '   ' → logprob: -11.253230094909668
    9. 'dp' → logprob: -11.378230094909668
    10. '           ' → logprob: -11.378230094909668

Token 418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31332793831825256
    2. ' =' → logprob: -1.3133279085159302
    3. '+=' → logprob: -10.31332778930664
    4. ' +=' → logprob: -10.56332778930664
    5. 'dp' → logprob: -12.31332778930664
    6. '=max' → logprob: -14.93832778930664
    7. ' ' → logprob: -15.06332778930664
    8. '               ' → logprob: -15.43832778930664
    9. '1' → logprob: -15.81332778930664
    10. ')' → logprob: -15.81332778930664

Token 419: ' SUM' (ID: 52418)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1276232749223709
    2. '(dp' → logprob: -2.3776233196258545
    3. '(' → logprob: -3.8776233196258545
    4. '1' → logprob: -6.127623081207275
    5. 'max' → logprob: -6.252623081207275
    6. '(max' → logprob: -7.252623081207275
    7. 'SUM' → logprob: -8.002623558044434
    8. '(S' → logprob: -8.002623558044434
    9. '((' → logprob: -8.752623558044434
    10. ' dp' → logprob: -9.252623558044434

Token 420: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002253387589007616
    2. 'i' → logprob: -6.252253532409668
    3. '[' → logprob: -9.002253532409668
    4. '[idx' → logprob: -9.002253532409668
    5. 'alpha' → logprob: -10.002253532409668
    6. ' i' → logprob: -11.877253532409668
    7. '(i' → logprob: -11.877253532409668
    8. '   ' → logprob: -11.877253532409668
    9. 'idx' → logprob: -12.377253532409668
    10. '_i' → logprob: -13.877253532409668

Token 421: '][' (ID: 2696)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1753619760274887
    2. '][' → logprob: -2.3003618717193604
    3. 'i' → logprob: -3.5503618717193604
    4. ' -' → logprob: -4.0503621101379395
    5. '1' → logprob: -5.6753621101379395
    6. '[i' → logprob: -5.8003621101379395
    7. '[' → logprob: -6.1753621101379395
    8. 'j' → logprob: -6.4253621101379395
    9. '   ' → logprob: -6.6753621101379395
    10. '[j' → logprob: -6.8003621101379395

Token 422: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0006042646709829569
    2. ' j' → logprob: -8.625604629516602
    3. '-' → logprob: -9.000604629516602
    4. '   ' → logprob: -9.125604629516602
    5. ' ' → logprob: -9.750604629516602
    6. '  ' → logprob: -10.875604629516602
    7. 'beta' → logprob: -11.125604629516602
    8. '           ' → logprob: -11.375604629516602
    9. '[j' → logprob: -11.375604629516602
    10. '
' → logprob: -11.375604629516602

Token 423: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1038988009095192
    2. ']' → logprob: -2.478898763656616
    3. ' -' → logprob: -4.603899002075195
    4. ']+' → logprob: -5.478899002075195
    5. '   ' → logprob: -8.603899002075195
    6. '[i' → logprob: -9.103899002075195
    7. 'i' → logprob: -9.603899002075195
    8. '1' → logprob: -10.103899002075195
    9. '])' → logprob: -10.228899002075195
    10. '[' → logprob: -10.228899002075195

Token 424: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.164265975356102
    2. ' +' → logprob: -1.9142659902572632
    3. '           ' → logprob: -6.039266109466553
    4. '               ' → logprob: -6.914266109466553
    5. '
' → logprob: -8.414265632629395
    6. 'dp' → logprob: -8.664265632629395
    7. '                   ' → logprob: -10.289265632629395
    8. '   ' → logprob: -10.914265632629395
    9. '                ' → logprob: -10.914265632629395
    10. ' ' → logprob: -10.914265632629395

Token 425: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05138760805130005
    2. 'dp' → logprob: -3.1763875484466553
    3. 'favorite' → logprob: -4.801387786865234
    4. 'fav' → logprob: -10.301387786865234
    5. ' ' → logprob: -10.426387786865234
    6. '   ' → logprob: -11.176387786865234
    7. ' dp' → logprob: -11.926387786865234
    8. 'f' → logprob: -11.926387786865234
    9. '(' → logprob: -12.426387786865234
    10. '(dp' → logprob: -12.426387786865234

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5384398102760315
    2. 'dp' → logprob: -1.0384397506713867
    3. 'favorite' → logprob: -2.7884397506713867
    4. 'fav' → logprob: -8.288439750671387
    5. '   ' → logprob: -9.163439750671387
    6. ' ' → logprob: -9.163439750671387
    7. 'f' → logprob: -9.413439750671387
    8. ' dp' → logprob: -9.413439750671387
    9. ' favorite' → logprob: -10.788439750671387
    10. '(dp' → logprob: -11.038439750671387

Token 427: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5802385807037354
    2. '
' → logprob: -0.9552385807037354
    3. '               ' → logprob: -3.4552385807037354
    4. '<|end|>' → logprob: -4.705238342285156
    5. '            
' → logprob: -5.455238342285156
    6. '		' → logprob: -5.705238342285156
    7. '                   ' → logprob: -6.455238342285156
    8. '
' → logprob: -7.455238342285156
    9. '                
' → logprob: -7.580238342285156
    10. ' 
' → logprob: -7.830238342285156

Token 428: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01544633787125349
    2. '               ' → logprob: -4.640446186065674
    3. '<|end|>' → logprob: -6.140446186065674
    4. '            ' → logprob: -7.015446186065674
    5. '		' → logprob: -7.640446186065674
    6. '
' → logprob: -7.765446186065674
    7. '                   ' → logprob: -8.140446662902832
    8. '          ' → logprob: -8.390446662902832
    9. '            
' → logprob: -8.640446662902832
    10. 'else' → logprob: -8.890446662902832

Token 429: ' favorite' (ID: 8340)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.11472509056329727
    2. '               ' → logprob: -2.739725112915039
    3. '           ' → logprob: -3.989725112915039
    4. 'MOD' → logprob: -4.489725112915039
    5. 'if' → logprob: -5.364725112915039
    6. '                   ' → logprob: -5.864725112915039
    7. ' SUM' → logprob: -5.989725112915039
    8. '_SUM' → logprob: -6.114725112915039
    9. ' if' → logprob: -7.489725112915039
    10. 'dp' → logprob: -7.739725112915039

Token 430: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -4.0484450437361374e-05
    2. 'answer' → logprob: -10.250040054321289
    3. 'Answer' → logprob: -12.625040054321289
    4. '_number' → logprob: -14.250040054321289
    5. '_ans' → logprob: -14.250040054321289
    6. '_' → logprob: -16.37504005432129
    7. '_token' → logprob: -16.50004005432129
    8. '_code' → logprob: -16.75004005432129
    9. 'ANSWER' → logprob: -17.12504005432129
    10. '	answer' → logprob: -17.37504005432129

Token 431: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -8.065608562901616e-05
    2. 'number' → logprob: -9.500081062316895
    3. '_' → logprob: -13.000081062316895
    4. '=' → logprob: -13.750081062316895
    5. ' =' → logprob: -14.125081062316895
    6. '_num' → logprob: -14.875081062316895
    7. '_numbers' → logprob: -15.375081062316895
    8. '_n' → logprob: -15.625081062316895
    9. '+=' → logprob: -15.750081062316895
    10. 'Number' → logprob: -15.875081062316895

Token 432: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17424376308918
    2. '+=' → logprob: -2.424243688583374
    3. ' =' → logprob: -2.924243688583374
    4. '*=' → logprob: -4.674243927001953
    5. '%=' → logprob: -5.424243927001953
    6. '=max' → logprob: -5.924243927001953
    7. ' +=' → logprob: -6.924243927001953
    8. ' *=' → logprob: -8.424243927001953
    9. 'max' → logprob: -10.924243927001953
    10. ' %=' → logprob: -12.174243927001953

Token 433: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0013815441634505987
    2. ' dp' → logprob: -6.6263813972473145
    3. '1' → logprob: -10.001381874084473
    4. '	dp' → logprob: -12.251381874084473
    5. '(dp' → logprob: -13.376381874084473
    6. 'SUM' → logprob: -14.001381874084473
    7. ' ' → logprob: -14.126381874084473
    8. '   ' → logprob: -14.751381874084473
    9. '_dp' → logprob: -14.876381874084473
    10. 'int' → logprob: -15.376381874084473

Token 434: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.246537173457909e-06
    2. 'i' → logprob: -12.500003814697266
    3. '[' → logprob: -15.125003814697266
    4. '```' → logprob: -16.000003814697266
    5. '[I' → logprob: -17.125003814697266
    6. '_i' → logprob: -17.375003814697266
    7. '][' → logprob: -18.000003814697266
    8. '[
' → logprob: -18.375003814697266
    9. '[token' → logprob: -18.375003814697266
    10. '[int' → logprob: -18.625003814697266

Token 435: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.28196173906326294
    2. '[i' → logprob: -1.4069616794586182
    3. '[j' → logprob: -8.156961441040039
    4. 'i' → logprob: -8.406961441040039
    5. '[' → logprob: -9.531961441040039
    6. ')[' → logprob: -9.656961441040039
    7. ' ][' → logprob: -10.406961441040039
    8. '-' → logprob: -10.906961441040039
    9. ']' → logprob: -11.156961441040039
    10. '           ' → logprob: -11.281961441040039

Token 436: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.027225754223764e-05
    2. ' j' → logprob: -10.500060081481934
    3. '1' → logprob: -10.875060081481934
    4. ',j' → logprob: -12.125060081481934
    5. '[j' → logprob: -13.000060081481934
    6. ' ' → logprob: -13.500060081481934
    7. '```' → logprob: -13.750060081481934
    8. '	j' → logprob: -13.875060081481934
    9. '   ' → logprob: -14.375060081481934
    10. '_j' → logprob: -14.500060081481934

Token 437: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26434826850891113
    2. '<|end|>' → logprob: -2.014348268508911
    3. '               ' → logprob: -2.764348268508911
    4. 'return' → logprob: -5.014348030090332
    5. '            ' → logprob: -5.639348030090332
    6. '```' → logprob: -5.764348030090332
    7. ')' → logprob: -6.389348030090332
    8. '#' → logprob: -6.514348030090332
    9. '.' → logprob: -6.514348030090332
    10. '<|end|>' → logprob: -6.514348030090332

Token 439: ' favorite' (ID: 8340)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8209417462348938
    2. '           ' → logprob: -0.9459417462348938
    3. 'SUM' → logprob: -2.070941686630249
    4. 'dp' → logprob: -3.695941686630249
    5. ' SUM' → logprob: -5.320941925048828
    6. 'else' → logprob: -5.820941925048828
    7. '_SUM' → logprob: -5.820941925048828
    8. 'favorite' (adapté à ' favorite') → logprob: -6.195941925048828
    9. '   ' → logprob: -6.320941925048828
    10. ' dp' → logprob: -6.695941925048828

Token 440: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -0.0003242607053834945
    2. 'answer' → logprob: -8.375324249267578
    3. 'Answer' → logprob: -9.375324249267578
    4. '_' → logprob: -12.625324249267578
    5. '_number' → logprob: -13.875324249267578
    6. ' =' → logprob: -14.250324249267578
    7. '=' → logprob: -14.375324249267578
    8. '_answers' → logprob: -14.625324249267578
    9. '<|end|>' → logprob: -14.625324249267578
    10. 'ANSWER' → logprob: -14.750324249267578

Token 441: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0002043748099822551
    2. 'number' → logprob: -8.500204086303711
    3. '_numbers' → logprob: -15.250204086303711
    4. ' =' → logprob: -16.00020408630371
    5. '_NUMBER' → logprob: -16.00020408630371
    6. '=' → logprob: -16.25020408630371
    7. '_answer' → logprob: -16.37520408630371
    8. 'umber' → logprob: -17.12520408630371
    9. 'Number' → logprob: -17.25020408630371
    10. ' number' → logprob: -17.50020408630371

Token 442: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.026776036247611046
    2. ' %=' → logprob: -3.651776075363159
    3. '%' → logprob: -8.151776313781738
    4. '+=' → logprob: -8.651776313781738
    5. '=' → logprob: -12.526776313781738
    6. ' ' → logprob: -12.651776313781738
    7. '//=' → logprob: -13.901776313781738
    8. ')' → logprob: -14.026776313781738
    9. ' %' → logprob: -14.276776313781738
    10. ')%' → logprob: -14.276776313781738

Token 443: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.941850526549388e-06
    2. ' MOD' → logprob: -11.750007629394531
    3. '_MOD' → logprob: -19.00000762939453
    4. 'MO' → logprob: -20.87500762939453
    5. '.MOD' → logprob: -21.12500762939453
    6. '(M' → logprob: -21.62500762939453
    7. ' ' → logprob: -23.00000762939453
    8. '   ' → logprob: -23.00000762939453
    9. '10' → logprob: -23.75000762939453
    10. '100' → logprob: -23.87500762939453

Token 444: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: 0.0
    2. 'UL' → logprob: -16.75
    3. 'ULAR' → logprob: -17.75
    4. '```' → logprob: -17.875
    5. 'ULE' → logprob: -18.625
    6. 'ulo' → logprob: -19.625
    7. 'MOD' → logprob: -20.0
    8. 'O' → logprob: -20.0
    9. '0' → logprob: -21.0
    10. 'LO' → logprob: -21.125

Token 445: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34906822443008423
    2. '<|end|>' → logprob: -1.3490681648254395
    3. '           ' → logprob: -3.8490681648254395
    4. '<|end|>' → logprob: -5.9740681648254395
    5. 'return' → logprob: -6.2240681648254395
    6. '\n' → logprob: -6.5990681648254395
    7. ' ' → logprob: -6.7240681648254395
    8. ')' → logprob: -7.0990681648254395
    9. ' return' → logprob: -7.3490681648254395
    10. '```' → logprob: -7.5990681648254395

Token 446: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 447: ' else' (ID: 1203)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9328388571739197
    2. '_' → logprob: -1.3078389167785645
    3. '\n' → logprob: -2.6828389167785645
    4. ')' → logprob: -2.8078389167785645
    5. '<|end|>' → logprob: -2.9328389167785645
    6. '\' → logprob: -3.5578389167785645
    7. '[' → logprob: -3.8078389167785645
    8. ' )' → logprob: -4.4328389167785645
    9. ' 
' → logprob: -4.5578389167785645
    10. '0' → logprob: -4.9328389167785645

Token 448: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30592551827430725
    2. ':
' → logprob: -1.6809254884719849
    3. ':' → logprob: -2.6809256076812744
    4. 'dp' → logprob: -5.305925369262695
    5. ' dp' → logprob: -6.055925369262695
    6. ' :
' → logprob: -8.180925369262695
    7. ',' → logprob: -8.555925369262695
    8. '):
' → logprob: -8.680925369262695
    9. '```' → logprob: -8.805925369262695
    10. 'favorite' → logprob: -9.055925369262695

Token 449: '               ' (ID: 506)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.49523887038230896
    2. '               ' → logprob: -0.9952389001846313
    3. ' dp' → logprob: -3.870238780975342
    4. 'favorite' → logprob: -10.1202392578125
    5. '	dp' → logprob: -10.7452392578125
    6. '           ' → logprob: -12.3702392578125
    7. 'pass' → logprob: -12.6202392578125
    8. '   ' → logprob: -12.7452392578125
    9. '_dp' → logprob: -13.2452392578125
    10. '```' → logprob: -13.3702392578125

Token 450: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -2.5822400857578032e-05
    2. ' dp' → logprob: -11.125025749206543
    3. '               ' → logprob: -11.875025749206543
    4. '           ' → logprob: -12.500025749206543
    5. '	dp' → logprob: -15.500025749206543
    6. 'favorite' → logprob: -17.25002670288086
    7. '   ' → logprob: -17.37502670288086
    8. 'pass' → logprob: -17.50002670288086
    9. '0' → logprob: -18.50002670288086
    10. ' ' → logprob: -19.12502670288086

Token 451: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.869017852295656e-06
    2. '[' → logprob: -12.375006675720215
    3. 'i' → logprob: -14.375006675720215
    4. '[I' → logprob: -14.500006675720215
    5. '][' → logprob: -14.750006675720215
    6. '<|end|>' → logprob: -15.375006675720215
    7. '[int' → logprob: -16.12500762939453
    8. ' [' → logprob: -16.25000762939453
    9. '[j' → logprob: -16.50000762939453
    10. '           ' → logprob: -16.87500762939453

Token 452: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.038199398666620255
    2. '[i' → logprob: -3.2881994247436523
    3. ']' → logprob: -9.788199424743652
    4. ' ][' → logprob: -10.788199424743652
    5. '"][' → logprob: -11.163199424743652
    6. 'i' → logprob: -11.288199424743652
    7. '[' → logprob: -11.413199424743652
    8. ')[' → logprob: -11.663199424743652
    9. '[j' → logprob: -11.788199424743652
    10. '           ' → logprob: -12.413199424743652

Token 453: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.102680633077398e-05
    2. 'i' → logprob: -9.375090599060059
    3. ' j' → logprob: -12.625090599060059
    4. '[j' → logprob: -13.750090599060059
    5. '][' → logprob: -14.500090599060059
    6. '```' → logprob: -14.500090599060059
    7. ',j' → logprob: -15.125090599060059
    8. '	j' → logprob: -16.250091552734375
    9. '0' → logprob: -16.500091552734375
    10. '   ' → logprob: -17.000091552734375

Token 454: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0070052058435976505
    2. ']=' → logprob: -5.132005214691162
    3. '=' → logprob: -6.882005214691162
    4. ' ]' → logprob: -10.882004737854004
    5. ' =' → logprob: -10.882004737854004
    6. ')' → logprob: -12.257004737854004
    7. '           ' → logprob: -12.882004737854004
    8. '[' → logprob: -12.882004737854004
    9. '   ' → logprob: -14.882004737854004
    10. '       ' → logprob: -15.007004737854004

Token 455: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005536287208087742
    2. ' =' → logprob: -7.500553607940674
    3. '+=' → logprob: -15.500554084777832
    4. '%=' → logprob: -15.500554084777832
    5. '.=' → logprob: -16.125553131103516
    6. '0' → logprob: -16.125553131103516
    7. '   ' → logprob: -17.875553131103516
    8. '-=' → logprob: -18.375553131103516
    9. '[' → logprob: -18.500553131103516
    10. '＝' → logprob: -18.625553131103516

Token 456: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021750046871602535
    2. 'max' → logprob: -6.8771748542785645
    3. '(' → logprob: -7.2521748542785645
    4. '(max' → logprob: -9.127175331115723
    5. 'favorite' → logprob: -9.127175331115723
    6. 'dp' → logprob: -9.877175331115723
    7. '(dp' → logprob: -10.252175331115723
    8. 'MAX' → logprob: -11.127175331115723
    9. ' ' → logprob: -11.127175331115723
    10. '((' → logprob: -11.252175331115723

Token 457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002646286739036441
    2. 'max' → logprob: -6.002646446228027
    3. '(' → logprob: -9.752646446228027
    4. 'favorite' → logprob: -10.627646446228027
    5. '_MAX' → logprob: -11.002646446228027
    6. 'dp' → logprob: -11.127646446228027
    7. ' ' → logprob: -11.377646446228027
    8. 'MAX' → logprob: -11.752646446228027
    9. '_MOD' → logprob: -12.252646446228027
    10. '(max' → logprob: -12.377646446228027

Token 458: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001035787514410913
    2. '		' → logprob: -8.251035690307617
    3. '
' → logprob: -8.876035690307617
    4. '<|end|>' → logprob: -8.876035690307617
    5. '       ' → logprob: -9.001035690307617
    6. '            
' → logprob: -9.376035690307617
    7. '	       ' → logprob: -9.501035690307617
    8. '          ' → logprob: -10.376035690307617
    9. 'for' → logprob: -10.501035690307617
    10. '               ' → logprob: -10.626035690307617

Token 459: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026824220549315214
    2. '<|end|>' → logprob: -6.627682209014893
    3. '```' → logprob: -7.252682209014893
    4. '            
' → logprob: -9.12768268585205
    5. 'for' → logprob: -9.37768268585205
    6. '		' → logprob: -9.50268268585205
    7. '          ' → logprob: -9.50268268585205
    8. ' for' → logprob: -9.75268268585205
    9. '               ' → logprob: -10.25268268585205
    10. '       ' → logprob: -10.62768268585205

Token 460: ' xi' (ID: 26869)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009594115428626537
    2. 'SUM' → logprob: -5.634593963623047
    3. 'for' → logprob: -5.759593963623047
    4. '       ' → logprob: -6.009593963623047
    5. '   ' → logprob: -8.384593963623047
    6. ' for' → logprob: -9.634593963623047
    7. '#' → logprob: -10.634593963623047
    8. '_SUM' → logprob: -11.134593963623047
    9. '               ' → logprob: -11.634593963623047
    10. ' SUM' → logprob: -11.759593963623047

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5750118494033813
    2. ' =' → logprob: -0.9500118494033813
    3. '=' → logprob: -3.825011730194092
    4. ',i' → logprob: -4.700011730194092
    5. ',j' → logprob: -4.825011730194092
    6. 'i' → logprob: -5.950011730194092
    7. '   ' → logprob: -5.950011730194092
    8. '=i' → logprob: -6.825011730194092
    9. 'j' → logprob: -7.075011730194092
    10. ' ,' → logprob: -7.200011730194092

Token 462: ' y' (ID: 342)
  Prédit: 'yj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yj' → logprob: -0.6393923163414001
    2. 'x' → logprob: -1.139392375946045
    3. 'j' → logprob: -2.014392375946045
    4. 'yi' → logprob: -4.514392375946045
    5. ' y' → logprob: -6.389392375946045
    6. 'xi' → logprob: -6.514392375946045
    7. ' =' → logprob: -6.639392375946045
    8. '=' → logprob: -6.764392375946045
    9. 'eta' → logprob: -7.139392375946045
    10. '   ' → logprob: -7.639392375946045

Token 463: 'j' (ID: 73)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7548565864562988
    2. '=' → logprob: -1.2548565864562988
    3. ' =' → logprob: -1.5048565864562988
    4. ',j' → logprob: -3.879856586456299
    5. 'j' → logprob: -6.504856586456299
    6. '=j' → logprob: -8.25485610961914
    7. 'x' → logprob: -9.50485610961914
    8. '```' → logprob: -10.25485610961914
    9. ' ,' → logprob: -10.62985610961914
    10. '+' → logprob: -10.87985610961914

Token 464: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00868288241326809
    2. ' =' → logprob: -4.758682727813721
    3. ',' → logprob: -10.258683204650879
    4. '=i' → logprob: -10.383683204650879
    5. 'xi' → logprob: -13.508683204650879
    6. '=int' → logprob: -15.508683204650879
    7. ')' → logprob: -15.883683204650879
    8. ',i' → logprob: -16.133682250976562
    9. ' xi' → logprob: -16.133682250976562
    10. '=x' → logprob: -16.508682250976562

Token 465: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2115522027015686
    2. 'alpha' → logprob: -1.8365521430969238
    3. 'idx' → logprob: -3.836552143096924
    4. ' i' → logprob: -5.711552143096924
    5. ' alpha' → logprob: -6.336552143096924
    6. '(i' → logprob: -6.461552143096924
    7. '   ' → logprob: -6.961552143096924
    8. '(alpha' → logprob: -7.086552143096924
    9. ' idx' → logprob: -7.461552143096924
    10. ' (' → logprob: -8.836552619934082

Token 466: '(alpha' (ID: 82669)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00680098682641983
    2. '(alpha' → logprob: -5.006801128387451
    3. 'i' → logprob: -10.006800651550293
    4. 'alpha' → logprob: -10.256800651550293
    5. ' (' → logprob: -13.006800651550293
    6. '(' → logprob: -13.381800651550293
    7. '(beta' → logprob: -13.631800651550293
    8. ' i' → logprob: -16.00680160522461
    9. '((' → logprob: -16.13180160522461
    10. '(
' → logprob: -17.25680160522461

Token 467: ',' (ID: 11)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.14445485174655914
    2. ',' → logprob: -2.0194549560546875
    3. ' ,' → logprob: -7.3944549560546875
    4. ',j' → logprob: -7.7694549560546875
    5. ',y' → logprob: -8.769454956054688
    6. '   ' → logprob: -8.894454956054688
    7. 'beta' → logprob: -9.644454956054688
    8. '       ' → logprob: -9.894454956054688
    9. ',B' → logprob: -9.894454956054688
    10. '           ' → logprob: -10.144454956054688

Token 468: ' beta' (ID: 21306)
  Prédit: 'beta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beta' → logprob: -0.0009315869538113475
    2. ' beta' → logprob: -7.000931739807129
    3. '   ' → logprob: -11.875931739807129
    4. 'i' → logprob: -13.000931739807129
    5. '    ' → logprob: -13.125931739807129
    6. ' ' → logprob: -13.250931739807129
    7. '(beta' → logprob: -13.500931739807129
    8. '  ' → logprob: -13.750931739807129
    9. '     ' → logprob: -13.750931739807129
    10. 'bet' → logprob: -14.250931739807129

Token 469: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5765336751937866
    2. ')' → logprob: -0.8265336751937866
    3. ')
' → logprob: -7.451533794403076
    4. ')`
' → logprob: -12.576533317565918
    5. ')

' → logprob: -12.701533317565918
    6. '):
' → logprob: -13.701533317565918
    7. ')[' → logprob: -13.826533317565918
    8. '):' → logprob: -14.326533317565918
    9. ')`' → logprob: -14.326533317565918
    10. ' )
' → logprob: -14.451533317565918

Token 470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005470762262120843
    2. 'SUM' → logprob: -7.625546932220459
    3. '_SUM' → logprob: -10.625547409057617
    4. '   ' → logprob: -11.250547409057617
    5. '               ' → logprob: -11.625547409057617
    6. '       ' → logprob: -12.500547409057617
    7. ' SUM' → logprob: -12.875547409057617
    8. '```' → logprob: -13.125547409057617
    9. '            
' → logprob: -13.875547409057617
    10. '_S' → logprob: -14.375547409057617

Token 471: ' SUM' (ID: 52418)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' (adapté à ' SUM') → logprob: -2.1008713702030946e-06
    2. ' SUM' → logprob: -14.000001907348633
    3. '_SUM' → logprob: -14.500001907348633
    4. 'if' → logprob: -15.625001907348633
    5. '   ' → logprob: -15.875001907348633
    6. 'for' → logprob: -15.875001907348633
    7. '           ' → logprob: -16.000001907348633
    8. '#' → logprob: -17.000001907348633
    9. 'sum' → logprob: -17.125001907348633
    10. '```' → logprob: -18.250001907348633

Token 472: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.11822975426912308
    2. '[i' → logprob: -2.243229866027832
    3. '[' → logprob: -5.243229866027832
    4. '           ' → logprob: -11.118229866027832
    5. '[ii' → logprob: -11.118229866027832
    6. '[ix' → logprob: -11.118229866027832
    7. '   ' → logprob: -11.243229866027832
    8. 'xi' → logprob: -11.743229866027832
    9. '=' → logprob: -11.868229866027832
    10. ' [' → logprob: -12.243229866027832

Token 473: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.277553620748222e-05
    2. '[i' → logprob: -10.000062942504883
    3. '_i' → logprob: -11.625062942504883
    4. 'xi' → logprob: -13.750062942504883
    5. 'alpha' → logprob: -14.125062942504883
    6. '][' → logprob: -14.250062942504883
    7. '{i' → logprob: -14.375062942504883
    8. '[' → logprob: -14.500062942504883
    9. '   ' → logprob: -14.625062942504883
    10. ')i' → logprob: -14.625062942504883

Token 474: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010665126610547304
    2. '-' → logprob: -7.5010666847229
    3. '[y' → logprob: -8.876066207885742
    4. '[' → logprob: -9.251066207885742
    5. '[j' → logprob: -9.376066207885742
    6. '+' → logprob: -9.876066207885742
    7. ' ][' → logprob: -10.001066207885742
    8. ']' → logprob: -11.251066207885742
    9. '           ' → logprob: -11.251066207885742
    10. '   ' → logprob: -11.251066207885742

Token 475: 'yj' (ID: 150491)
  Prédit: 'yj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yj' → logprob: -0.0021616832818835974
    2. ' y' → logprob: -6.252161502838135
    3. '   ' → logprob: -8.502161979675293
    4. ' ' → logprob: -11.627161979675293
    5. '
' → logprob: -12.002161979675293
    6. '    ' → logprob: -12.502161979675293
    7. '     ' → logprob: -13.002161979675293
    8. 'y' → logprob: -13.252161979675293
    9. '       ' → logprob: -13.502161979675293
    10. '  ' → logprob: -13.627161979675293

Token 476: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03385857492685318
    2. ']=' → logprob: -3.53385853767395
    3. ']+=' → logprob: -5.658858776092529
    4. '=' → logprob: -7.783858776092529
    5. ' ]' → logprob: -9.408858299255371
    6. ' =' → logprob: -9.408858299255371
    7. '+=' → logprob: -11.158858299255371
    8. ']=(' → logprob: -12.033858299255371
    9. ' +=' → logprob: -13.033858299255371
    10. ')' → logprob: -13.533858299255371

Token 477: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0018858035327866673
    2. ' =' → logprob: -6.751885890960693
    3. '+=' → logprob: -7.251885890960693
    4. ' +=' → logprob: -12.501885414123535
    5. '=sum' → logprob: -14.501885414123535
    6. '=(' → logprob: -14.876885414123535
    7. '=max' → logprob: -15.001885414123535
    8. '=s' → logprob: -15.501885414123535
    9. '   ' → logprob: -15.751885414123535
    10. '.=' → logprob: -15.751885414123535

Token 478: ' SUM' (ID: 52418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8872093558311462
    2. '(S' → logprob: -1.012209415435791
    3. '(dp' → logprob: -1.637209415435791
    4. 'SUM' → logprob: -4.512209415435791
    5. '((' → logprob: -5.262209415435791
    6. '(f' → logprob: -5.512209415435791
    7. 'dp' → logprob: -5.512209415435791
    8. '(
' → logprob: -5.762209415435791
    9. '(M' → logprob: -7.512209415435791
    10. '(sum' → logprob: -7.637209415435791

Token 479: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0017514610663056374
    2. 'xi' → logprob: -6.37675142288208
    3. 'x' → logprob: -10.876751899719238
    4. '[i' → logprob: -11.501751899719238
    5. '_x' → logprob: -11.501751899719238
    6. '(x' → logprob: -12.001751899719238
    7. '[' → logprob: -13.876751899719238
    8. '   ' → logprob: -14.126751899719238
    9. 'alpha' → logprob: -14.501751899719238
    10. ' xi' → logprob: -14.876751899719238

Token 480: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.12127808178775e-05
    2. '[i' → logprob: -10.125051498413086
    3. 'xi' → logprob: -12.250051498413086
    4. '[x' → logprob: -12.500051498413086
    5. '_i' → logprob: -14.125051498413086
    6. '[' → logprob: -14.250051498413086
    7. '-' → logprob: -15.625051498413086
    8. '   ' → logprob: -16.000051498413086
    9. 'I' → logprob: -16.250051498413086
    10. '         ' → logprob: -16.500051498413086

Token 481: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8257200121879578
    2. '[x' → logprob: -1.2007200717926025
    3. '][' → logprob: -1.5757200717926025
    4. '[' → logprob: -3.8257200717926025
    5. 'alpha' → logprob: -4.075719833374023
    6. '[y' → logprob: -5.200719833374023
    7. 'xi' → logprob: -5.200719833374023
    8. 'x' → logprob: -7.200719833374023
    9. '-alpha' → logprob: -7.200719833374023
    10. ' -' → logprob: -7.325719833374023

Token 482: '1' (ID: 16)
  Prédit: 'yj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yj' → logprob: -0.0007623416022397578
    2. ' y' → logprob: -7.250762462615967
    3. '   ' → logprob: -10.875761985778809
    4. '1' → logprob: -10.875761985778809
    5. ' ' → logprob: -13.250761985778809
    6. '    ' → logprob: -13.250761985778809
    7. '[y' → logprob: -13.250761985778809
    8. 'y' → logprob: -13.250761985778809
    9. '(y' → logprob: -13.625761985778809
    10. ',y' → logprob: -13.750761985778809

Token 483: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.31772053241729736
    2. '[y' → logprob: -1.3177205324172974
    3. '   ' → logprob: -6.192720413208008
    4. ' ][' → logprob: -7.942720413208008
    5. '[' → logprob: -8.067720413208008
    6. ',y' → logprob: -8.067720413208008
    7. '       ' → logprob: -8.067720413208008
    8. ''][' → logprob: -8.192720413208008
    9. '	y' → logprob: -8.817720413208008
    10. ')][' → logprob: -9.442720413208008

Token 484: 'yj' (ID: 150491)
  Prédit: 'yj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yj' → logprob: -0.007717124652117491
    2. ' y' → logprob: -4.882717132568359
    3. '   ' → logprob: -9.50771713256836
    4. '
' → logprob: -11.75771713256836
    5. ' ' → logprob: -11.88271713256836
    6. ',y' → logprob: -12.50771713256836
    7. '  ' → logprob: -12.75771713256836
    8. '[y' → logprob: -12.75771713256836
    9. '    ' → logprob: -13.00771713256836
    10. '(y' → logprob: -13.25771713256836

Token 485: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008708410896360874
    2. ']+' → logprob: -4.758708477020264
    3. '+' → logprob: -9.383708000183105
    4. ' ]' → logprob: -12.258708000183105
    5. ']
' → logprob: -13.258708000183105
    6. ' +' → logprob: -13.883708000183105
    7. '   ' → logprob: -14.008708000183105
    8. '           ' → logprob: -15.133708000183105
    9. ']+=' → logprob: -15.633708000183105
    10. ' ' → logprob: -15.633708000183105

Token 486: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061975862830877304
    2. ' +' → logprob: -2.8119759559631348
    3. '           ' → logprob: -12.061975479125977
    4. '   ' → logprob: -13.936975479125977
    5. ' ' → logprob: -14.686975479125977
    6. '               ' → logprob: -15.436975479125977
    7. '          ' → logprob: -15.686975479125977
    8. '            ' → logprob: -15.936975479125977
    9. '()+' → logprob: -16.311975479125977
    10. '＋' → logprob: -16.436975479125977

Token 487: ' SUM' (ID: 52418)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -1.0445127372804563e-05
    2. 'dp' → logprob: -11.75001049041748
    3. ' SUM' → logprob: -13.50001049041748
    4. '   ' → logprob: -14.00001049041748
    5. '_SUM' → logprob: -16.125009536743164
    6. '  ' → logprob: -16.875009536743164
    7. ' ' → logprob: -17.250009536743164
    8. '    ' → logprob: -17.375009536743164
    9. '     ' → logprob: -17.625009536743164
    10. '           ' → logprob: -17.875009536743164

Token 488: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.12934130430221558
    2. 'xi' → logprob: -2.1293413639068604
    3. '(x' → logprob: -6.129341125488281
    4. 'x' → logprob: -9.129341125488281
    5. '_x' → logprob: -9.879341125488281
    6. '```' → logprob: -10.379341125488281
    7. '\x' → logprob: -11.004341125488281
    8. ' xi' → logprob: -11.629341125488281
    9. '   ' → logprob: -11.879341125488281
    10. '	x' → logprob: -13.129341125488281

Token 489: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026865271851420403
    2. 'xi' → logprob: -3.901865243911743
    3. '[x' → logprob: -5.526865482330322
    4. '[i' → logprob: -6.276865482330322
    5. 'x' → logprob: -8.401865005493164
    6. '][' → logprob: -9.026865005493164
    7. 'ix' → logprob: -11.026865005493164
    8. '[' → logprob: -11.026865005493164
    9. ' xi' → logprob: -11.401865005493164
    10. '\x' → logprob: -11.526865005493164

Token 490: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.7019606828689575
    2. '][' → logprob: -1.3269606828689575
    3. '[j' → logprob: -2.451960563659668
    4. 'yj' → logprob: -2.951960563659668
    5. '[x' → logprob: -3.076960563659668
    6. '[' → logprob: -3.701960563659668
    7. '-' → logprob: -3.951960563659668
    8. '
' → logprob: -6.201960563659668
    9. '   ' → logprob: -6.451960563659668
    10. '1' → logprob: -6.576960563659668

Token 491: 'yj' (ID: 150491)
  Prédit: 'yj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yj' → logprob: -8.220573363360018e-05
    2. ' y' → logprob: -9.500082015991211
    3. '   ' → logprob: -12.750082015991211
    4. '[y' → logprob: -13.000082015991211
    5. ' ' → logprob: -14.125082015991211
    6. 'y' → logprob: -14.875082015991211
    7. '{' → logprob: -15.250082015991211
    8. ',y' → logprob: -15.750082015991211
    9. '(y' → logprob: -15.875082015991211
    10. '
' → logprob: -16.12508201599121

Token 492: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.935296834039036e-06
    2. ' -' → logprob: -12.75000286102295
    3. '1' → logprob: -17.500003814697266
    4. '```' → logprob: -19.125003814697266
    5. ']-' → logprob: -19.500003814697266
    6. ']' → logprob: -20.125003814697266
    7. '[' → logprob: -20.750003814697266
    8. '−' → logprob: -21.375003814697266
    9. '   ' → logprob: -21.375003814697266
    10. '-
' → logprob: -22.000003814697266

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. '-' → logprob: -11.750008583068848
    3. '```' → logprob: -14.750008583068848
    4. ' ' → logprob: -15.375008583068848
    5. '   ' → logprob: -16.875009536743164
    6. '[' → logprob: -19.000009536743164
    7. ']' → logprob: -19.250009536743164
    8. '' → logprob: -19.312509536743164
    9. '  ' → logprob: -19.437509536743164
    10. '`' → logprob: -19.437509536743164

Token 494: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026325615122914314
    2. '-' → logprob: -3.6513257026672363
    3. '-S' → logprob: -10.776325225830078
    4. ' ' → logprob: -12.651325225830078
    5. ')' → logprob: -14.776325225830078
    6. '           ' → logprob: -15.526325225830078
    7. '```' → logprob: -15.901325225830078
    8. ' ' → logprob: -16.901325225830078
    9. '...' → logprob: -17.151325225830078
    10. ' -
' → logprob: -17.151325225830078

Token 495: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03216831386089325
    2. '-' → logprob: -3.532168388366699
    3. '-S' → logprob: -6.032168388366699
    4. '-INF' → logprob: -12.7821683883667
    5. '```' → logprob: -13.4071683883667
    6. '_MINUS' → logprob: -13.5321683883667
    7. '-BEGIN' → logprob: -14.0321683883667
    8. '-M' → logprob: -14.1571683883667
    9. '           ' → logprob: -14.2821683883667
    10. '-LAST' → logprob: -14.2821683883667

Token 496: ' SUM' (ID: 52418)
  Prédit: 'SUM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUM' → logprob: -0.00011486753646750003
    2. '_SUM' → logprob: -9.125114440917969
    3. ' SUM' → logprob: -12.125114440917969
    4. '   ' → logprob: -15.500114440917969
    5. '
' → logprob: -16.50011444091797
    6. ' ' → logprob: -17.25011444091797
    7. '           ' → logprob: -17.37511444091797
    8. '_S' → logprob: -17.50011444091797
    9. 'SUMMARY' → logprob: -17.87511444091797
    10. '       ' → logprob: -18.37511444091797

Token 497: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00020711649267468601
    2. 'xi' → logprob: -8.62520694732666
    3. '(x' → logprob: -10.75020694732666
    4. '```' → logprob: -13.00020694732666
    5. '\x' → logprob: -13.50020694732666
    6. '_x' → logprob: -14.00020694732666
    7. '[
' → logprob: -14.50020694732666
    8. '[' → logprob: -15.25020694732666
    9. '   ' → logprob: -15.50020694732666
    10. ' xi' → logprob: -16.125207901000977

Token 498: 'i' (ID: 72)
  Prédit: 'xi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xi' → logprob: -0.0526844821870327
    2. '[x' → logprob: -3.0526845455169678
    3. 'i' → logprob: -5.552684307098389
    4. 'x' → logprob: -9.677684783935547
    5. '[i' → logprob: -10.302684783935547
    6. ' xi' → logprob: -10.427684783935547
    7. '\x' → logprob: -10.552684783935547
    8. '(x' → logprob: -10.802684783935547
    9. '```' → logprob: -10.927684783935547
    10. '_x' → logprob: -11.302684783935547

Token 499: '-' (ID: 12)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.023424476385116577
    2. 'xi' → logprob: -3.7734243869781494
    3. '(x' → logprob: -9.39842414855957
    4. '-' → logprob: -10.64842414855957
    5. '[i' → logprob: -11.14842414855957
    6. ' xi' → logprob: -11.27342414855957
    7. '][' → logprob: -11.77342414855957
    8. 'x' → logprob: -11.77342414855957
    9. '```' → logprob: -11.77342414855957
    10. '\x' → logprob: -12.27342414855957

Token 500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8074162653647363e-05
    2. '2' → logprob: -11.000018119812012
    3. '-' → logprob: -14.500018119812012
    4. '```' → logprob: -14.625018119812012
    5. '   ' → logprob: -16.000017166137695
    6. '
' → logprob: -16.125017166137695
    7. ' ' → logprob: -16.625017166137695
    8. '11' → logprob: -17.125017166137695
    9. '``' → logprob: -18.375017166137695
    10. '{
' → logprob: -18.937517166137695

Token 501: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0014511867193505168
    2. '[y' → logprob: -6.626451015472412
    3. '[' → logprob: -9.25145149230957
    4. '[j' → logprob: -11.37645149230957
    5. ' ][' → logprob: -12.00145149230957
    6. ']' → logprob: -12.37645149230957
    7. '"][' → logprob: -13.37645149230957
    8. '```' → logprob: -13.87645149230957
    9. '   ' → logprob: -14.00145149230957
    10. '}[' → logprob: -14.00145149230957

Token 502: 'yj' (ID: 150491)
  Prédit: 'yj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yj' → logprob: -0.0010216168593615294
    2. '(y' → logprob: -7.626021385192871
    3. ' y' → logprob: -7.751021385192871
    4. 'y' → logprob: -10.001021385192871
    5. '[y' → logprob: -10.126021385192871
    6. '(' → logprob: -11.876021385192871
    7. ',y' → logprob: -12.751021385192871
    8. '   ' → logprob: -13.501021385192871
    9. '{' → logprob: -13.626021385192871
    10. ' (' → logprob: -13.626021385192871

Token 503: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00039373442996293306
    2. '1' → logprob: -8.500393867492676
    3. '[' → logprob: -8.750393867492676
    4. ' -' → logprob: -10.500393867492676
    5. '```' → logprob: -13.750393867492676
    6. '[-' → logprob: -14.000393867492676
    7. '[j' → logprob: -14.250393867492676
    8. ']' → logprob: -14.625393867492676
    9. '−' → logprob: -15.000393867492676
    10. 'y' → logprob: -15.250393867492676

Token 504: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.875000953674316
    3. ']' → logprob: -16.25
    4. ' ' → logprob: -16.5
    5. '-' → logprob: -16.75
    6. '   ' → logprob: -17.625
    7. '۱' → logprob: -18.6875
    8. '...' → logprob: -19.3125
    9. '১' → logprob: -19.75
    10. '
' → logprob: -20.0625

Token 505: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013284464366734028
    2. ']+' → logprob: -4.638284683227539
    3. '+' → logprob: -6.263284683227539
    4. ' +' → logprob: -6.888284683227539
    5. ' ]' → logprob: -8.138284683227539
    6. '<|end|>' → logprob: -8.263284683227539
    7. ')' → logprob: -11.013284683227539
    8. ']
' → logprob: -11.763284683227539
    9. '<|end|>' → logprob: -12.763284683227539
    10. '[' → logprob: -13.013284683227539

Token 506: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5232016444206238
    2. ' +' → logprob: -0.8982016444206238
    3. '           ' → logprob: -10.648201942443848
    4. '+
' → logprob: -11.023201942443848
    5. 'import' → logprob: -11.148201942443848
    6. ' ' → logprob: -12.273201942443848
    7. '
' → logprob: -12.523201942443848
    8. ' +
' → logprob: -12.773201942443848
    9. ' ' → logprob: -13.148201942443848
    10. '	' → logprob: -13.273201942443848

Token 507: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00012558852904476225
    2. '(dp' → logprob: -9.625125885009766
    3. ' dp' → logprob: -10.625125885009766
    4. '(' → logprob: -11.500125885009766
    5. 'int' → logprob: -11.875125885009766
    6. 'favorite' → logprob: -12.625125885009766
    7. '   ' → logprob: -12.625125885009766
    8. 'max' → logprob: -12.750125885009766
    9. '0' → logprob: -13.250125885009766
    10. '1' → logprob: -13.375125885009766

Token 508: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004897649050690234
    2. '[' → logprob: -8.125490188598633
    3. 'i' → logprob: -8.625490188598633
    4. 'alpha' → logprob: -11.500490188598633
    5. '[x' → logprob: -12.875490188598633
    6. '_i' → logprob: -15.250490188598633
    7. '```' → logprob: -15.250490188598633
    8. '   ' → logprob: -15.375490188598633
    9. '{i' → logprob: -15.750490188598633
    10. '(i' → logprob: -15.750490188598633

Token 509: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.016635049134492874
    2. '[i' → logprob: -4.141634941101074
    3. '[j' → logprob: -7.766634941101074
    4. ']' → logprob: -9.141634941101074
    5. '[' → logprob: -10.141634941101074
    6. '"][' → logprob: -11.391634941101074
    7. 'i' → logprob: -12.391634941101074
    8. ' ][' → logprob: -12.391634941101074
    9. ''][' → logprob: -13.266634941101074
    10. ')[' → logprob: -13.391634941101074

Token 510: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.339278580620885e-06
    2. ' j' → logprob: -13.500001907348633
    3. '][' → logprob: -14.875001907348633
    4. '[j' → logprob: -15.000001907348633
    5. ',j' → logprob: -15.750001907348633
    6. '	j' → logprob: -17.250001907348633
    7. '```' → logprob: -17.750001907348633
    8. 'i' → logprob: -17.875001907348633
    9. ']' → logprob: -17.875001907348633
    10. '[' → logprob: -18.500001907348633

Token 511: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004336475860327482
    2. '<|end|>' → logprob: -6.254336357116699
    3. '}' → logprob: -6.754336357116699
    4. ']' → logprob: -7.004336357116699
    5. ')
' → logprob: -8.8793363571167
    6. '```' → logprob: -9.5043363571167
    7. '<|end|>' → logprob: -9.7543363571167
    8. '           ' → logprob: -11.0043363571167
    9. '   ' → logprob: -11.8793363571167
    10. ')return' → logprob: -12.1293363571167

Token 512: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 513: ' SUM' (ID: 52418)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 514: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.01663633994758129
    2. '[i' → logprob: -4.141636371612549
    3. '][' → logprob: -7.891636371612549
    4. '[ix' → logprob: -8.89163589477539
    5. ')[' → logprob: -10.76663589477539
    6. '[' → logprob: -11.01663589477539
    7. '```' → logprob: -11.14163589477539
    8. 'xi' → logprob: -11.89163589477539
    9. ']' → logprob: -12.39163589477539
    10. '(x' → logprob: -12.51663589477539

Token 515: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006522706826217473
    2. '[i' → logprob: -7.625652313232422
    3. '][' → logprob: -8.875652313232422
    4. '[x' → logprob: -11.250652313232422
    5. '[' → logprob: -12.125652313232422
    6. '_i' → logprob: -12.625652313232422
    7. '-' → logprob: -14.625652313232422
    8. 'x' → logprob: -14.750652313232422
    9. ' i' → logprob: -15.000652313232422
    10. ')[' → logprob: -15.375652313232422

Token 516: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0387837179005146
    2. '-' → logprob: -3.2887837886810303
    3. '[x' → logprob: -8.66378402709961
    4. '+' → logprob: -9.03878402709961
    5. ' -' → logprob: -9.03878402709961
    6. '[i' → logprob: -9.78878402709961
    7. ' ][' → logprob: -9.78878402709961
    8. '[' → logprob: -10.28878402709961
    9. '[y' → logprob: -10.28878402709961
    10. '[j' → logprob: -10.28878402709961

Token 517: 'yj' (ID: 150491)
  Prédit: 'yj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yj' → logprob: -9.269565634895116e-05
    2. ' y' → logprob: -10.125092506408691
    3. 'y' → logprob: -10.625092506408691
    4. '(y' → logprob: -11.125092506408691
    5. '   ' → logprob: -11.875092506408691
    6. '{' → logprob: -13.625092506408691
    7. '(' → logprob: -14.000092506408691
    8. '1' → logprob: -14.500092506408691
    9. '[y' → logprob: -14.500092506408691
    10. '
' → logprob: -14.625092506408691

Token 518: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5744284987449646
    2. '%=' → logprob: -1.0744285583496094
    3. ' %=' → logprob: -2.9494285583496094
    4. '%' → logprob: -3.6994285583496094
    5. '=' → logprob: -4.949428558349609
    6. ']=' → logprob: -5.074428558349609
    7. ']+=' → logprob: -5.699428558349609
    8. ']%' → logprob: -6.699428558349609
    9. ')' → logprob: -8.19942855834961
    10. '+=' → logprob: -10.44942855834961

Token 519: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.015179156325757504
    2. '%' → logprob: -4.51517915725708
    3. '=' → logprob: -6.01517915725708
    4. ' %=' → logprob: -6.39017915725708
    5. '=%' → logprob: -13.640178680419922
    6. '+=' → logprob: -14.015178680419922
    7. '%
' → logprob: -14.890178680419922
    8. ' %' → logprob: -15.140178680419922
    9. ')' → logprob: -16.140178680419922
    10. '%)' → logprob: -16.140178680419922

Token 520: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.320199877838604e-07
    2. ' MOD' → logprob: -15.0
    3. '_MOD' → logprob: -18.625
    4. 'MO' → logprob: -21.375
    5. '.MOD' → logprob: -21.5
    6. 'MODE' → logprob: -22.25
    7. 'MD' → logprob: -23.25
    8. 'MODULE' → logprob: -23.875
    9. '100' → logprob: -24.75
    10. '   ' → logprob: -24.75

Token 521: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -2.570319702499546e-05
    2. 'O' → logprob: -10.625025749206543
    3. 'ULE' → logprob: -14.125025749206543
    4. 'UL' → logprob: -15.375025749206543
    5. 'U' → logprob: -16.125024795532227
    6. 'MOD' → logprob: -16.375024795532227
    7. 'ulo' → logprob: -16.750024795532227
    8. 'LO' → logprob: -17.250024795532227
    9. '0' → logprob: -17.625024795532227
    10. 'UTO' → logprob: -18.000024795532227

Token 522: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 523: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004852192010730505
    2. '<|end|>' → logprob: -5.504852294921875
    3. '```' → logprob: -8.504852294921875
    4. '
' → logprob: -8.879852294921875
    5. ' if' → logprob: -9.254852294921875
    6. '_main' → logprob: -9.504852294921875
    7. '__' → logprob: -10.004852294921875
    8. '#' → logprob: -10.004852294921875
    9. '_set' → logprob: -10.504852294921875
    10. 'return' → logprob: -10.879852294921875

Token 524: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06374841183423996
    2. 'if' → logprob: -3.313748359680176
    3. 'return' → logprob: -4.063748359680176
    4. '   ' → logprob: -5.188748359680176
    5. '_Y' → logprob: -6.063748359680176
    6. ' print' → logprob: -9.438748359680176
    7. '	print' → logprob: -9.688748359680176
    8. '```' → logprob: -10.438748359680176
    9. 'def' → logprob: -10.563748359680176
    10. '	return' → logprob: -10.563748359680176

Token 525: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00010926496179308742
    2. '(' → logprob: -9.125109672546387
    3. 'favorite' → logprob: -15.500109672546387
    4. '((' → logprob: -17.00010871887207
    5. '()' → logprob: -17.25010871887207
    6. 'f' → logprob: -18.12510871887207
    7. '(F' → logprob: -18.25010871887207
    8. '('' → logprob: -18.37510871887207
    9. ' (' → logprob: -18.50010871887207
    10. '("' → logprob: -18.62510871887207

Token 526: 'avorite' (ID: 20787)
  Prédit: 'avorite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avorite' → logprob: -4.008129963040119e-06
    2. 'favorite' → logprob: -12.500003814697266
    3. 'avourite' → logprob: -16.000003814697266
    4. 'avor' → logprob: -16.375003814697266
    5. 'avorites' → logprob: -17.250003814697266
    6. 'avorable' → logprob: -18.000003814697266
    7. 'AVOR' → logprob: -20.500003814697266
    8. 'avior' → logprob: -20.875003814697266
    9. '.favorite' → logprob: -20.875003814697266
    10. 'av' → logprob: -21.375003814697266

Token 527: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -3.128163257315464e-07
    2. 'answer' → logprob: -15.625
    3. 'Answer' → logprob: -16.625
    4. '_ans' → logprob: -18.0
    5. '_' → logprob: -18.375
    6. ')' → logprob: -19.875
    7. '_answers' → logprob: -19.875
    8. 'ANSWER' → logprob: -20.5
    9. '_question' → logprob: -21.125
    10. '```' → logprob: -21.625

Token 528: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -3.7697225252486533e-06
    2. 'number' → logprob: -12.500003814697266
    3. '_NUMBER' → logprob: -19.250003814697266
    4. 'Number' → logprob: -19.375003814697266
    5. '_' → logprob: -19.750003814697266
    6. 'umber' → logprob: -19.875003814697266
    7. '_numbers' → logprob: -20.375003814697266
    8. ' number' → logprob: -20.625003814697266
    9. '_num' → logprob: -20.625003814697266
    10. '_n' → logprob: -21.250003814697266

Token 529: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.023293538717553e-05
    2. '()' → logprob: -11.500030517578125
    3. '%' → logprob: -11.875030517578125
    4. ' )' → logprob: -12.250030517578125
    5. '())' → logprob: -12.375030517578125
    6. ')
' → logprob: -13.375030517578125
    7. ')%' → logprob: -14.000030517578125
    8. '%)' → logprob: -14.125030517578125
    9. '+' → logprob: -15.375030517578125
    10. ' %' → logprob: -15.500030517578125

Token 530: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0032718260772526264
    2. '_main' → logprob: -6.25327205657959
    3. '_set' → logprob: -6.62827205657959
    4. 'def' → logprob: -12.50327205657959
    5. 'print' → logprob: -12.75327205657959
    6. 'main' → logprob: -13.00327205657959
    7. '```' → logprob: -13.00327205657959
    8. 'set' → logprob: -13.12827205657959
    9. '
' → logprob: -13.37827205657959
    10. '#' → logprob: -13.87827205657959

Token 531: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04306438937783241
    2. '__' → logprob: -3.1680643558502197
    3. '_name' → logprob: -11.41806411743164
    4. ' ' → logprob: -11.54306411743164
    5. ' ' → logprob: -11.54306411743164
    6. 'name' → logprob: -11.54306411743164
    7. '___' → logprob: -12.29306411743164
    8. '  ' → logprob: -12.41806411743164
    9. '_' → logprob: -12.54306411743164
    10. 'Name' → logprob: -12.79306411743164

Token 532: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.24425429105758667
    2. ' ==' → logprob: -1.7442543506622314
    3. '==' → logprob: -3.3692543506622314
    4. '=="' → logprob: -5.619254112243652
    5. 'name' → logprob: -6.494254112243652
    6. '=='' → logprob: -6.869254112243652
    7. ' __' → logprob: -7.244254112243652
    8. 'main' → logprob: -8.744254112243652
    9. 'if' → logprob: -8.869254112243652
    10. '_name' → logprob: -9.744254112243652

Token 533: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.2113979209971149e-05
    2. '==' → logprob: -11.750012397766113
    3. '__.__' → logprob: -12.875012397766113
    4. ' ==' → logprob: -14.500012397766113
    5. '=="' → logprob: -15.000012397766113
    6. '__('' → logprob: -15.625012397766113
    7. '____' → logprob: -16.000011444091797
    8. '___' → logprob: -16.375011444091797
    9. 'name' → logprob: -16.500011444091797
    10. '__
' → logprob: -17.000011444091797

Token 534: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.46117764711380005
    2. '==' → logprob: -1.2111775875091553
    3. ' ==' → logprob: -3.0861775875091553
    4. '=="' → logprob: -3.7111775875091553
    5. '=='' → logprob: -6.586177825927734
    6. '__.__' → logprob: -10.836177825927734
    7. '==
' → logprob: -10.961177825927734
    8. '=' → logprob: -11.211177825927734
    9. '_' → logprob: -11.211177825927734
    10. '"' → logprob: -11.961177825927734

Token 535: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31328898668289185
    2. ''' → logprob: -1.313288927078247
    3. '__' → logprob: -10.688288688659668
    4. ' "__' → logprob: -12.563288688659668
    5. ' '__' → logprob: -14.688288688659668
    6. '"_' → logprob: -16.188289642333984
    7. ''"' → logprob: -16.438289642333984
    8. '"'' → logprob: -16.438289642333984
    9. ''_' → logprob: -16.438289642333984
    10. '   ' → logprob: -16.688289642333984

Token 536: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006778842769563198
    2. '__' → logprob: -5.006778717041016
    3. '_main' → logprob: -10.506778717041016
    4. 'name' → logprob: -10.881778717041016
    5. ''' → logprob: -11.256778717041016
    6. '"' → logprob: -12.506778717041016
    7. ' main' → logprob: -15.381778717041016
    8. ''name' → logprob: -16.256778717041016
    9. '_MAIN' → logprob: -16.381778717041016
    10. '__':
' → logprob: -16.381778717041016

Token 537: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.005243479739874601
    2. '__' → logprob: -5.255243301391602
    3. '__":
' → logprob: -11.630243301391602
    4. '__:' → logprob: -14.505243301391602
    5. '_' → logprob: -15.005243301391602
    6. '':' → logprob: -17.8802433013916
    7. '':
' → logprob: -18.3802433013916
    8. '___' → logprob: -18.6302433013916
    9. '__
' → logprob: -19.0052433013916
    10. '__('' → logprob: -19.2552433013916

Token 538: '   ' (ID: 271)
  Prédit: '_main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_main' → logprob: -0.2857668697834015
    2. '   ' → logprob: -1.410766839981079
    3. '	' → logprob: -6.410767078399658
    4. ' _' → logprob: -7.285767078399658
    5. '	main' → logprob: -7.285767078399658
    6. '__' → logprob: -8.0357666015625
    7. '```' → logprob: -8.1607666015625
    8. '_MAIN' → logprob: -8.2857666015625
    9. '    
' → logprob: -8.4107666015625
    10. '_' → logprob: -9.0357666015625

Token 539: ' (' (ID: 350)
  Prédit: '_main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_main' → logprob: 0.0
    2. 'main' → logprob: -18.0
    3. '_Main' → logprob: -18.125
    4. '_MAIN' → logprob: -19.25
    5. 'Main' → logprob: -19.5
    6. '_sys' → logprob: -19.875
    7. '   ' → logprob: -20.75
    8. ' _' → logprob: -22.125
    9. '\' → logprob: -23.0
    10. '```' → logprob: -23.0

Token 540: 'lambda' (ID: 35280)
  Prédit: '_main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_main' → logprob: -7.896309739408025e-07
    2. '_Main' → logprob: -14.375000953674316
    3. '_MAIN' → logprob: -16.125
    4. ')_' → logprob: -16.625
    5. 'main' → logprob: -17.25
    6. ' _' → logprob: -18.5
    7. '   ' → logprob: -18.75
    8. ')' → logprob: -19.0
    9. '_' → logprob: -20.0
    10. 'Main' → logprob: -20.25

Token 541: ' f' (ID: 285)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07043318450450897
    2. ' :' → logprob: -3.3204331398010254
    3. ':_' → logprob: -3.6954331398010254
    4. '():' → logprob: -6.320433139801025
    5. ':int' → logprob: -6.445433139801025
    6. '_:' → logprob: -6.695433139801025
    7. '_main' → logprob: -7.195433139801025
    8. '_' → logprob: -7.195433139801025
    9. ':void' → logprob: -8.445433616638184
    10. '):' → logprob: -8.445433616638184

Token 542: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10554724186658859
    2. ':f' → logprob: -2.3555471897125244
    3. ' :' → logprob: -5.3555474281311035
    4. '=f' → logprob: -8.105546951293945
    5. '(f' → logprob: -9.230546951293945
    6. ' f' → logprob: -9.730546951293945
    7. '_:' → logprob: -10.230546951293945
    8. ':(' → logprob: -10.730546951293945
    9. 'f' → logprob: -10.855546951293945
    10. '():' → logprob: -11.230546951293945

Token 543: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.013512528501451015
    2. ' f' → logprob: -4.38851261138916
    3. '   ' → logprob: -7.26351261138916
    4. 'sys' → logprob: -9.38851261138916
    5. 'print' → logprob: -10.26351261138916
    6. ' ' → logprob: -10.26351261138916
    7. 'set' → logprob: -10.51351261138916
    8. '__' → logprob: -10.63851261138916
    9. '_f' → logprob: -10.76351261138916
    10. 'lambda' → logprob: -10.76351261138916

Token 544: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4206025004386902
    2. '(f' → logprob: -1.170602560043335
    3. '(_' → logprob: -4.170602321624756
    4. '()' → logprob: -4.295602321624756
    5. '(__' → logprob: -6.920602321624756
    6. ')' → logprob: -6.920602321624756
    7. '(' → logprob: -7.670602321624756
    8. ')(' → logprob: -7.795602321624756
    9. '():' → logprob: -8.545602798461914
    10. ')(_' → logprob: -8.670602798461914

Token 545: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.00013834332639817148
    2. '(lambda' → logprob: -9.625138282775879
    3. '_main' → logprob: -9.875138282775879
    4. ')(_' → logprob: -11.500138282775879
    5. '(' → logprob: -12.500138282775879
    6. '(__' → logprob: -12.625138282775879
    7. '((_' → logprob: -13.625138282775879
    8. '(Main' → logprob: -14.000138282775879
    9. ' (_' → logprob: -14.375138282775879
    10. '(
' → logprob: -14.750138282775879

Token 546: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.842555426876061e-06
    2. '_main' → logprob: -12.250004768371582
    3. ' main' → logprob: -21.5000057220459
    4. '_MAIN' → logprob: -22.6250057220459
    5. 'Main' → logprob: -22.8750057220459
    6. 'MAIN' → logprob: -23.1250057220459
    7. '.main' → logprob: -23.5000057220459
    8. '	main' → logprob: -23.6250057220459
    9. '-main' → logprob: -23.7500057220459
    10. 'emain' → logprob: -24.1250057220459

Token 547: '_)' (ID: 35080)
  Prédit: '_)'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_)' → logprob: -0.0022815766278654337
    2. '_' → logprob: -6.252281665802002
    3. ')' → logprob: -8.002281188964844
    4. '_)
' → logprob: -11.127281188964844
    5. '__)' → logprob: -12.752281188964844
    6. '_),' → logprob: -15.127281188964844
    7. ')_' → logprob: -17.002281188964844
    8. '())' → logprob: -17.127281188964844
    9. ' _)' → logprob: -17.127281188964844
    10. '_]' → logprob: -17.377281188964844


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 545
Tokens correctement prédits (1ère position, stricte): 239
Tokens correctement prédits (1ère position, avec adaptation): 250
Tokens correctement prédits (top 10): 443
Précision stricte (1ère position): 43.85%
Précision adaptée (1ère position): 45.87%
Précision (top 10): 81.28%
================================================================================
