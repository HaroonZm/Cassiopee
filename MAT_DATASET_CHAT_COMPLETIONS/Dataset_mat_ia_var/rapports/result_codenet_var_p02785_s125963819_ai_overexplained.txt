================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lecture de deux entiers à partir de l'entrée standard (habituellement le clavier)
# La fonction input() lit une ligne de texte sous forme de chaîne de caractères
# split() divise cette chaîne en une liste de sous-chaînes, en séparant là où il y a des espaces
# map(int, ...) applique la fonction int à chaque sous-chaîne pour obtenir une liste d'entiers
# La fonction map() retourne un itérable ; l'utilisation de la syntaxe 'N, K = ...' affecte les deux premiers éléments du résultat à N et K
N, K = map(int, input().split())

# Lire une autre ligne d'entrée utilisateur contenant des entiers séparés par des espaces
# map(int, ...) convertit chaque chaîne en entier, créant un itérable d'entiers
# list(...) convertit cet itérable en une liste Python stockée dans la variable H
H = list(map(int, input().split()))

# Trier la liste H par ordre décroissant (du plus grand au plus petit)
# La méthode sort() modifie la liste en place
# reverse=True indique que le tri doit être fait en ordre inverse (décroissant)
H.sort(reverse=True)

# Exclure (enlever) les K premiers éléments de la liste H
# L'opération de découpage H[K:] prend tous les éléments de H à partir de l'indice K (en incluant K, car l'indice commence à zéro),
# c'est-à-dire qu'elle ignore les K premiers éléments les plus grands grâce au tri précédent
# Le résultat du découpage est réaffecté à H lui-même (H prend une nouvelle valeur qui est la liste tronquée)
H = H[K:]

# Calculer la somme totale de tous les éléments de la liste H (c'est-à-dire la somme des entiers restants après découpage)
# sum(H) retourne la somme des valeurs de la liste H
# print(...) affiche le résultat calculé (la somme) à la sortie standard (habituellement l'écran)
print(sum(H))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lecture' (ID: 106534)
  → Token d'amorce (pas de prédiction)

Token 2: ' de' (ID: 334)
  → Token d'amorce (pas de prédiction)

Token 3: ' deux' (ID: 10301)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8615431189537048
    2. ' ' → logprob: -0.8615431189537048
    3. ' fichier' → logprob: -1.9865431785583496
    4. ' f' → logprob: -4.98654317855835
    5. ' fichiers' → logprob: -5.36154317855835
    6. 'd' → logprob: -6.48654317855835
    7. 'l' → logprob: -6.61154317855835
    8. 's' → logprob: -6.73654317855835
    9. ' données' → logprob: -7.86154317855835
    10. ' la' → logprob: -8.111542701721191

Token 4: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24440357089042664
    2. '_' → logprob: -2.619403600692749
    3. '\' → logprob: -3.369403600692749
    4. 'l' → logprob: -3.869403600692749
    5. ' \' → logprob: -4.24440336227417
    6. '\n' → logprob: -4.36940336227417
    7. ' lignes' → logprob: -5.24440336227417
    8. 'n' → logprob: -5.36940336227417
    9. ' espaces' → logprob: -5.36940336227417
    10. 'space' → logprob: -5.49440336227417

Token 5: 'iers' (ID: 11012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7548559308052063
    2. 'iers' → logprob: -0.7548559308052063
    3. 'ières' → logprob: -3.6298558712005615
    4. 'ités' → logprob: -4.004856109619141
    5. 'i' → logprob: -5.379856109619141
    6. 't' → logprob: -5.629856109619141
    7. 'êtes' → logprob: -6.504856109619141
    8. 'ri' → logprob: -6.629856109619141
    9. 'ité' → logprob: -6.754856109619141
    10. 'it' → logprob: -7.129856109619141

Token 6: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12446977198123932
    2. 'n' → logprob: -2.749469757080078
    3. 'x' → logprob: -3.124469757080078
    4. 'i' → logprob: -5.624469757080078
    5. 'e' → logprob: -5.999469757080078
    6. '```' → logprob: -6.499469757080078
    7. '\n' → logprob: -7.874469757080078
    8. '#' → logprob: -8.374469757080078
    9. '`' → logprob: -8.374469757080078
    10. ':' → logprob: -8.999469757080078

Token 7: ' partir' (ID: 12100)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0890028327703476
    2. 'part' → logprob: -3.464002847671509
    3. ' partir' → logprob: -3.964002847671509
    4. 'la' → logprob: -4.21400260925293
    5. '```' → logprob: -4.58900260925293
    6. ' l' → logprob: -5.58900260925293
    7. 's' → logprob: -5.83900260925293
    8. ' ' → logprob: -7.58900260925293
    9. '#' → logprob: -7.58900260925293
    10. ' ' → logprob: -8.33900260925293

Token 8: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06822001934051514
    2. 'd' → logprob: -3.6932201385498047
    3. ' de' → logprob: -4.318220138549805
    4. ' ' → logprob: -4.443220138549805
    5. '_' → logprob: -5.068220138549805
    6. 's' → logprob: -5.318220138549805
    7. ''' → logprob: -6.193220138549805
    8. ' du' → logprob: -7.318220138549805
    9. '`' → logprob: -8.318220138549805
    10. 'de' → logprob: -8.318220138549805

Token 9: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.027804728597402573
    2. ' l' → logprob: -4.402804851531982
    3. 'input' → logprob: -5.277804851531982
    4. 'la' → logprob: -5.652804851531982
    5. 'une' → logprob: -5.777804851531982
    6. ' input' → logprob: -7.152804851531982
    7. '_' → logprob: -7.527804851531982
    8. '```' → logprob: -7.527804851531982
    9. ' ' → logprob: -8.152804374694824
    10. ' la' → logprob: -8.527804374694824

Token 10: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.23057015240192413
    2. ''' → logprob: -2.980570077896118
    3. 'i' → logprob: -2.980570077896118
    4. 'a' → logprob: -2.980570077896118
    5. ''entrée' → logprob: -4.730570316314697
    6. 'ignes' → logprob: -4.980570316314697
    7. 'es' → logprob: -5.355570316314697
    8. 'u' → logprob: -5.355570316314697
    9. 'input' → logprob: -5.480570316314697
    10. 'n' → logprob: -5.730570316314697

Token 11: ' standard' (ID: 7024)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08069566637277603
    2. 'x' → logprob: -2.955695629119873
    3. 'n' → logprob: -3.705695629119873
    4. '```' → logprob: -8.205696105957031
    5. 'e' → logprob: -8.455696105957031
    6. '`' → logprob: -9.205696105957031
    7. 'i' → logprob: -9.205696105957031
    8. ',' → logprob: -9.455696105957031
    9. 'ent' → logprob: -9.705696105957031
    10. '#' → logprob: -10.955696105957031

Token 12: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.039409756660461426
    2. 'x' → logprob: -3.539409637451172
    3. 'n' → logprob: -4.664409637451172
    4. '```' → logprob: -9.664409637451172
    5. 'ent' → logprob: -10.539409637451172
    6. ',' → logprob: -10.664409637451172
    7. 'i' → logprob: -10.789409637451172
    8. 'e' → logprob: -11.039409637451172
    9. '`' → logprob: -11.414409637451172
    10. ' a' → logprob: -11.789409637451172

Token 13: 'habit' (ID: 183262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33097368478775024
    2. 'a' → logprob: -2.2059736251831055
    3. 'n' → logprob: -2.4559736251831055
    4. 'x' → logprob: -3.4559736251831055
    5. 'ent' → logprob: -3.8309736251831055
    6. ' )' → logprob: -3.8309736251831055
    7. '`)' → logprob: -6.0809736251831055
    8. '#' → logprob: -6.5809736251831055
    9. '):' → logprob: -7.0809736251831055
    10. ',' → logprob: -7.0809736251831055

Token 14: 'uellement' (ID: 36026)
  Prédit: 'elle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elle' → logprob: -0.43260931968688965
    2. 'el' → logprob: -1.6826093196868896
    3. 'uelle' → logprob: -2.6826093196868896
    4. 'uel' → logprob: -2.8076093196868896
    5. 'uellement' → logprob: -4.557609558105469
    6. '#' → logprob: -5.307609558105469
    7. 'uels' → logprob: -5.307609558105469
    8. 'ue' → logprob: -6.182609558105469
    9. 'ele' → logprob: -6.182609558105469
    10. '```' → logprob: -6.307609558105469

Token 15: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44725051522254944
    2. ' )' → logprob: -1.447250485420227
    3. ' ' → logprob: -2.4472506046295166
    4. ''' → logprob: -4.0722503662109375
    5. ' de' → logprob: -4.9472503662109375
    6. 's' → logprob: -5.6972503662109375
    7. 'space' → logprob: -5.9472503662109375
    8. 'de' → logprob: -6.4472503662109375
    9. ',' → logprob: -7.4472503662109375
    10. ' :' → logprob: -7.4472503662109375

Token 16: ' clavier' (ID: 187878)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.43408095836639404
    2. ' ' → logprob: -2.0590810775756836
    3. 's' → logprob: -2.6840810775756836
    4. '\' → logprob: -3.1840810775756836
    5. ')' → logprob: -3.3090810775756836
    6. ' \' → logprob: -4.184081077575684
    7. ' )' → logprob: -4.309081077575684
    8. ''' → logprob: -4.809081077575684
    9. 'r' → logprob: -5.309081077575684
    10. '`' → logprob: -5.684081077575684

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033340873196721077
    2. '`)' → logprob: -6.878334045410156
    3. '#' → logprob: -7.253334045410156
    4. ')
' → logprob: -8.003334045410156
    5. '\n' → logprob: -8.003334045410156
    6. '')' → logprob: -8.128334045410156
    7. 's' → logprob: -8.753334045410156
    8. ' )' → logprob: -9.253334045410156
    9. ')#' → logprob: -9.628334045410156
    10. ',' → logprob: -9.878334045410156

Token 18: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.022249028086662292
    2. 'x' → logprob: -4.147249221801758
    3. 'n' → logprob: -5.397249221801758
    4. ' a' → logprob: -6.522249221801758
    5. 'i' → logprob: -9.522249221801758
    6. '```' → logprob: -10.147249221801758
    7. ',' → logprob: -11.022249221801758
    8. 'ent' → logprob: -11.397249221801758
    9. ' x' → logprob: -11.522249221801758
    10. 'v' → logprob: -11.647249221801758

Token 19: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.035410694777965546
    2. 'x' → logprob: -3.5354106426239014
    3. 'n' → logprob: -5.7854108810424805
    4. ' a' → logprob: -6.2854108810424805
    5. 'ent' → logprob: -7.9104108810424805
    6. 'i' → logprob: -9.28541088104248
    7. '#' → logprob: -9.41041088104248
    8. ' x' → logprob: -9.41041088104248
    9. 'num' → logprob: -10.78541088104248
    10. '```' → logprob: -11.16041088104248

Token 20: ' fonction' (ID: 17610)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3057017922401428
    2. ' a' → logprob: -2.305701732635498
    3. 'a' → logprob: -2.805701732635498
    4. ' ' → logprob: -3.180701732635498
    5. ' valeur' → logprob: -4.305701732635498
    6. 'n' → logprob: -4.930701732635498
    7. ' n' → logprob: -5.680701732635498
    8. ' =' → logprob: -5.805701732635498
    9. ' première' → logprob: -5.805701732635498
    10. 'prem' → logprob: -5.805701732635498

Token 21: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3519992530345917
    2. 'input' → logprob: -1.226999282836914
    3. 'def' → logprob: -5.851999282836914
    4. 'int' → logprob: -8.726999282836914
    5. 'read' → logprob: -8.976999282836914
    6. ' def' → logprob: -9.101999282836914
    7. ' int' → logprob: -9.226999282836914
    8. ' read' → logprob: -9.851999282836914
    9. '=input' → logprob: -10.476999282836914
    10. ' ' → logprob: -10.601999282836914

Token 22: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12871013581752777
    2. '()' → logprob: -2.1287100315093994
    3. 's' → logprob: -6.8787102699279785
    4. '(
' → logprob: -8.37870979309082
    5. '#' → logprob: -9.12870979309082
    6. ' (' → logprob: -9.62870979309082
    7. '_' → logprob: -10.12870979309082
    8. '('' → logprob: -10.25370979309082
    9. ' ()' → logprob: -10.37870979309082
    10. '=' → logprob: -10.50370979309082

Token 23: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006939382757991552
    2. '()' → logprob: -5.50693941116333
    3. ' (' → logprob: -6.25693941116333
    4. 's' → logprob: -8.381938934326172
    5. ' ' → logprob: -8.756938934326172
    6. '(
' → logprob: -8.756938934326172
    7. '('' → logprob: -9.631938934326172
    8. ')' → logprob: -9.881938934326172
    9. ' ()' → logprob: -9.881938934326172
    10. '("' → logprob: -10.256938934326172

Token 24: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.44092053174972534
    2. '()' → logprob: -1.5659205913543701
    3. 'une' → logprob: -2.44092059135437
    4. '(' → logprob: -3.69092059135437
    5. ' la' → logprob: -3.69092059135437
    6. ' ' → logprob: -5.815920352935791
    7. 'la' → logprob: -6.065920352935791
    8. 'l' → logprob: -6.190920352935791
    9. 's' → logprob: -7.315920352935791
    10. ' ()' → logprob: -7.940920352935791

Token 25: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -1.0088895559310913
    2. ' ligne' → logprob: -1.1338895559310913
    3. ' ' → logprob: -1.6338895559310913
    4. 'ligne' → logprob: -2.883889675140381
    5. 'chaine' → logprob: -3.383889675140381
    6. ' chaine' → logprob: -4.633889675140381
    7. '  ' → logprob: -5.508889675140381
    8. 's' → logprob: -6.133889675140381
    9. '\n' → logprob: -6.133889675140381
    10. 'entrée' → logprob: -6.508889675140381

Token 26: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2993755340576172
    2. ' ' → logprob: -1.2993755340576172
    3. ' =' → logprob: -1.9243755340576172
    4. 's' → logprob: -2.174375534057617
    5. ' ,' → logprob: -2.549375534057617
    6. '_' → logprob: -3.549375534057617
    7. '.' → logprob: -3.924375534057617
    8. ' )' → logprob: -4.049375534057617
    9. ')' → logprob: -5.049375534057617
    10. 'n' → logprob: -5.299375534057617

Token 27: ' texte' (ID: 53492)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.5732356309890747
    2. ' texte' → logprob: -1.0732356309890747
    3. 'code' → logprob: -2.698235511779785
    4. ' code' → logprob: -4.073235511779785
    5. 'l' → logprob: -5.698235511779785
    6. ' l' → logprob: -6.073235511779785
    7. 'entrée' → logprob: -7.073235511779785
    8. 'chaine' → logprob: -7.698235511779785
    9. 's' → logprob: -7.823235511779785
    10. 'text' → logprob: -7.823235511779785

Token 28: ' sous' (ID: 14487)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6496679782867432
    2. 'x' → logprob: -1.1496679782867432
    3. 'n' → logprob: -2.149667978286743
    4. ',' → logprob: -4.024667739868164
    5. 'ent' → logprob: -4.524667739868164
    6. 'e' → logprob: -5.024667739868164
    7. 'val' → logprob: -6.024667739868164
    8. ' a' → logprob: -6.524667739868164
    9. 'v' → logprob: -6.899667739868164
    10. '#' → logprob: -7.149667739868164

Token 29: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.02890854887664318
    2. 'forme' → logprob: -3.6539084911346436
    3. 'chaine' → logprob: -6.903908729553223
    4. 'ent' → logprob: -7.278908729553223
    5. 'form' → logprob: -7.403908729553223
    6. 'la' → logprob: -9.278908729553223
    7. 'forma' → logprob: -10.403908729553223
    8. 'format' → logprob: -10.403908729553223
    9. 'une' → logprob: -10.778908729553223
    10. ' la' → logprob: -10.903908729553223

Token 30: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.396026074886322
    2. ' de' → logprob: -1.1460261344909668
    3. 'de' → logprob: -5.021026134490967
    4. 'd' → logprob: -6.146026134490967
    5. 's' → logprob: -8.771025657653809
    6. 'str' → logprob: -9.646025657653809
    7. 'chaine' → logprob: -10.646025657653809
    8. 'string' → logprob: -11.021025657653809
    9. ')' → logprob: -11.146025657653809
    10. ' =' → logprob: -11.396025657653809

Token 31: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.31432193517684937
    2. 'cha' → logprob: -1.8143219947814941
    3. ' chaîne' → logprob: -2.314321994781494
    4. ' chaine' → logprob: -5.564321994781494
    5. 'str' → logprob: -5.939321994781494
    6. 'string' → logprob: -6.814321994781494
    7. 's' → logprob: -9.064321517944336
    8. 'une' → logprob: -9.439321517944336
    9. 'texte' → logprob: -9.939321517944336
    10. ' chaînes' → logprob: -10.189321517944336

Token 32: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9617977738380432
    2. 'a' → logprob: -1.2117977142333984
    3. 's' → logprob: -1.8367977142333984
    4. 'x' → logprob: -2.8367977142333984
    5. ',' → logprob: -3.2117977142333984
    6. 'e' → logprob: -3.9617977142333984
    7. 'ent' → logprob: -4.211797714233398
    8. ' a' → logprob: -5.086797714233398
    9. ' ,' → logprob: -6.211797714233398
    10. ' x' → logprob: -6.336797714233398

Token 33: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.20263944566249847
    2. ' caractères' → logprob: -1.7026394605636597
    3. ' caracteres' → logprob: -7.452639579772949
    4. 'texte' → logprob: -8.07763957977295
    5. ' caract' → logprob: -9.20263957977295
    6. '#' → logprob: -9.70263957977295
    7. ' caractère' → logprob: -9.95263957977295
    8. 'chars' → logprob: -10.20263957977295
    9. 'str' → logprob: -11.07763957977295
    10. 'char' → logprob: -11.20263957977295

Token 34: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9898022413253784
    2. 'e' → logprob: -1.1148022413253784
    3. 'x' → logprob: -2.114802360534668
    4. ',' → logprob: -2.739802360534668
    5. 'a' → logprob: -2.989802360534668
    6. '#' → logprob: -3.489802360534668
    7. 'ent' → logprob: -3.864802360534668
    8. 's' → logprob: -6.114802360534668
    9. 'i' → logprob: -6.239802360534668
    10. '\n' → logprob: -6.989802360534668

Token 35: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12784579396247864
    2. 'x' → logprob: -2.6278457641601562
    3. 'n' → logprob: -3.2528457641601562
    4. 'ent' → logprob: -5.002845764160156
    5. 'e' → logprob: -6.627845764160156
    6. '```' → logprob: -8.252845764160156
    7. 'v' → logprob: -8.752845764160156
    8. 'val' → logprob: -8.877845764160156
    9. 'nombre' → logprob: -9.252845764160156
    10. '#' → logprob: -9.252845764160156

Token 36: ' split' (ID: 12648)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18858584761619568
    2. 'x' → logprob: -2.0635857582092285
    3. 'n' → logprob: -3.1885857582092285
    4. 'ent' → logprob: -6.6885857582092285
    5. 'v' → logprob: -6.8135857582092285
    6. '#' → logprob: -7.6885857582092285
    7. 'e' → logprob: -7.6885857582092285
    8. 'val' → logprob: -8.938586235046387
    9. 'i' → logprob: -9.688586235046387
    10. 'b' → logprob: -10.313586235046387

Token 37: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06348173320293427
    2. '(' → logprob: -2.9384818077087402
    3. '('' → logprob: -4.81348180770874
    4. '("' → logprob: -8.813481330871582
    5. '("("' → logprob: -9.563481330871582
    6. ' ()' → logprob: -10.063481330871582
    7. '().' → logprob: -10.313481330871582
    8. '('.')' → logprob: -10.688481330871582
    9. '()

' → logprob: -11.063481330871582
    10. ')' → logprob: -11.063481330871582

Token 38: ' div' (ID: 4223)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04671469330787659
    2. '(' → logprob: -3.7967147827148438
    3. '().' → logprob: -4.296714782714844
    4. ')' → logprob: -5.421714782714844
    5. '('' → logprob: -6.796714782714844
    6. '.' → logprob: -6.921714782714844
    7. ' ()' → logprob: -7.296714782714844
    8. '.split' → logprob: -7.671714782714844
    9. ',' → logprob: -8.171714782714844
    10. ' )' → logprob: -8.296714782714844

Token 39: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0006016458501107991
    2. 'erse' → logprob: -9.125601768493652
    3. '```' → logprob: -9.750601768493652
    4. 'iser' → logprob: -9.875601768493652
    5. 'ide' → logprob: -9.875601768493652
    6. '#' → logprob: -10.125601768493652
    7. 'ose' → logprob: -10.250601768493652
    8. '()' → logprob: -10.375601768493652
    9. ' ise' → logprob: -10.375601768493652
    10. '

' → logprob: -11.125601768493652

Token 40: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34234777092933655
    2. ' la' → logprob: -1.8423477411270142
    3. 'la' → logprob: -2.3423478603363037
    4. '('' → logprob: -4.342347621917725
    5. 'le' → logprob: -5.717347621917725
    6. ' ' → logprob: -5.842347621917725
    7. '(' → logprob: -6.092347621917725
    8. 'au' → logprob: -6.092347621917725
    9. 'l' → logprob: -6.217347621917725
    10. ' ()' → logprob: -6.217347621917725

Token 41: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.04695243760943413
    2. ' ligne' → logprob: -3.546952486038208
    3. ' chaine' → logprob: -4.921952247619629
    4. 'chaine' → logprob: -5.171952247619629
    5. 'cha' → logprob: -6.921952247619629
    6. ' phrase' → logprob: -7.046952247619629
    7. 'ligne' → logprob: -7.421952247619629
    8. ' string' → logprob: -7.421952247619629
    9. ' ' → logprob: -7.546952247619629
    10. ' chaînes' → logprob: -9.171952247619629

Token 42: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.804607629776001
    2. ')' → logprob: -1.679607629776001
    3. ' en' → logprob: -1.804607629776001
    4. '[]' → logprob: -2.929607629776001
    5. ' )' → logprob: -3.179607629776001
    6. ' ' → logprob: -3.679607629776001
    7. ' par' → logprob: -4.304607391357422
    8. '[' → logprob: -5.054607391357422
    9. 's' → logprob: -5.429607391357422
    10. '_' → logprob: -5.554607391357422

Token 43: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.39887529611587524
    2. 'une' → logprob: -2.0238752365112305
    3. ' des' → logprob: -2.2738752365112305
    4. '['' → logprob: -3.6488752365112305
    5. 'des' → logprob: -4.3988752365112305
    6. ' espaces' → logprob: -4.5238752365112305
    7. ' ['' → logprob: -4.7738752365112305
    8. 'tokens' → logprob: -5.0238752365112305
    9. ' un' → logprob: -5.3988752365112305
    10. 'un' → logprob: -5.7738752365112305

Token 44: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.18127328157424927
    2. 'liste' → logprob: -1.8062732219696045
    3. 's' → logprob: -7.056273460388184
    4. 'list' → logprob: -7.806273460388184
    5. 'Liste' → logprob: -9.556273460388184
    6. ' ou' → logprob: -9.681273460388184
    7. 'ou' → logprob: -9.806273460388184
    8. ' list' → logprob: -10.931273460388184
    9. ' ' → logprob: -11.931273460388184
    10. ' Liste' → logprob: -12.056273460388184

Token 45: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7941214442253113
    2. 'tokens' → logprob: -1.669121503829956
    3. 'input' → logprob: -2.044121503829956
    4. '()' → logprob: -2.419121503829956
    5. '[]' → logprob: -3.419121503829956
    6. 's' → logprob: -3.669121503829956
    7. '.' → logprob: -4.294121265411377
    8. '(' → logprob: -4.544121265411377
    9. '```' → logprob: -4.794121265411377
    10. '[:]' → logprob: -5.544121265411377

Token 46: ' sous' (ID: 14487)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.6197587847709656
    2. ' chaînes' → logprob: -0.8697587847709656
    3. 'chain' → logprob: -4.119758605957031
    4. 'm' → logprob: -4.494758605957031
    5. 'tokens' → logprob: -5.244758605957031
    6. 'str' → logprob: -6.244758605957031
    7. 'strings' → logprob: -6.244758605957031
    8. 'chaine' → logprob: -6.494758605957031
    9. ' mots' → logprob: -7.119758605957031
    10. 'esp' → logprob: -7.369758605957031

Token 47: '-cha' (ID: 163177)
  Prédit: '-cha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-cha' → logprob: -0.6089476943016052
    2. ' chaînes' → logprob: -1.35894775390625
    3. 'cha' → logprob: -2.48394775390625
    4. '-' → logprob: -3.10894775390625
    5. '-chain' → logprob: -3.48394775390625
    6. 'chain' → logprob: -4.10894775390625
    7. '_' → logprob: -4.23394775390625
    8. '   ' → logprob: -5.85894775390625
    9. '\' → logprob: -6.60894775390625
    10. '```' → logprob: -7.48394775390625

Token 48: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.2529900372028351
    2. 'î' → logprob: -1.5029900074005127
    3. 'Î' → logprob: -8.127989768981934
    4. 'nes' → logprob: -8.377989768981934
    5. 'îne' → logprob: -8.877989768981934
    6. 'ines' → logprob: -9.127989768981934
    7. 'ì' → logprob: -9.627989768981934
    8. 'í' → logprob: -10.252989768981934
    9. 'ı' → logprob: -10.252989768981934
    10. 'r' → logprob: -10.377989768981934

Token 49: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5536300539970398
    2. 'ent' → logprob: -1.8036301136016846
    3. 'e' → logprob: -2.4286301136016846
    4. 'a' → logprob: -2.5536301136016846
    5. 'x' → logprob: -3.1786301136016846
    6. '#' → logprob: -3.8036301136016846
    7. 'i' → logprob: -4.8036298751831055
    8. 'numbers' → logprob: -4.8036298751831055
    9. 'inte' → logprob: -6.3036298751831055
    10. ',' → logprob: -6.4286298751831055

Token 50: ' en' (ID: 469)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6882792115211487
    2. ' #' → logprob: -1.313279151916504
    3. ' puis' → logprob: -2.688279151916504
    4. ' et' → logprob: -3.438279151916504
    5. ' en' → logprob: -3.563279151916504
    6. ' par' → logprob: -3.938279151916504
    7. ' sépar' → logprob: -4.688279151916504
    8. 'et' → logprob: -4.938279151916504
    9. ' qui' → logprob: -5.063279151916504
    10. 'e' → logprob: -5.313279151916504

Token 51: ' sépar' (ID: 97160)
  Prédit: ' fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -1.1152119636535645
    2. ' utilisant' → logprob: -1.4902119636535645
    3. 'fonction' → logprob: -1.6152119636535645
    4. 'util' → logprob: -2.3652119636535645
    5. 's' → logprob: -3.1152119636535645
    6. 'g' → logprob: -3.2402119636535645
    7. ' sépar' → logprob: -3.4902119636535645
    8. 'sé' → logprob: -4.4902119636535645
    9. '```' → logprob: -5.6152119636535645
    10. ' supprim' → logprob: -6.1152119636535645

Token 52: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.36124810576438904
    2. 'issant' → logprob: -1.2362481355667114
    3. 'çant' → logprob: -4.861248016357422
    4. 't' → logprob: -6.736248016357422
    5. 'a' → logprob: -7.486248016357422
    6. '```' → logprob: -7.611248016357422
    7. 'ar' → logprob: -8.236248016357422
    8. 'par' → logprob: -8.361248016357422
    9. 'at' → logprob: -8.486248016357422
    10. 'à' → logprob: -8.736248016357422

Token 53: ' là' (ID: 8052)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.1095800399780273
    2. 'par' → logprob: -1.1095800399780273
    3. 'sur' → logprob: -2.1095800399780273
    4. ' sur' → logprob: -2.2345800399780273
    5. 'au' → logprob: -3.6095800399780273
    6. ' au' → logprob: -3.7345800399780273
    7. 'l' → logprob: -4.109580039978027
    8. ' les' → logprob: -4.109580039978027
    9. '()' → logprob: -5.234580039978027
    10. ' l' → logprob: -5.484580039978027

Token 54: ' où' (ID: 15113)
  Prédit: 'où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'où' → logprob: -0.4323193430900574
    2. ' où' → logprob: -1.0573194026947021
    3. 'au' → logprob: -6.807319164276123
    4. ' where' → logprob: -7.557319164276123
    5. 'sur' → logprob: -7.682319164276123
    6. ' ' → logprob: -7.682319164276123
    7. ' Où' → logprob: -7.807319164276123
    8. '-' → logprob: -8.307319641113281
    9. 'par' → logprob: -8.557319641113281
    10. '-dessus' → logprob: -9.932319641113281

Token 55: ' il' (ID: 1793)
  Prédit: ' il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.22814135253429413
    2. 'il' → logprob: -1.7281413078308105
    3. ''il' → logprob: -3.7281413078308105
    4. 'l' → logprob: -7.2281413078308105
    5. 'ils' → logprob: -7.9781413078308105
    6. ' there' → logprob: -8.228141784667969
    7. ' ' → logprob: -8.478141784667969
    8. ' l' → logprob: -8.728141784667969
    9. 'le' → logprob: -9.228141784667969
    10. ' la' → logprob: -9.228141784667969

Token 56: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.11419554054737091
    2. 'y' → logprob: -2.2391955852508545
    3. 'ya' → logprob: -7.114195346832275
    4. ' a' → logprob: -8.114195823669434
    5. 'a' → logprob: -9.489195823669434
    6. ''y' → logprob: -9.489195823669434
    7. ' ' → logprob: -9.989195823669434
    8. '	y' → logprob: -10.864195823669434
    9. '‘y' → logprob: -11.114195823669434
    10. ' ya' → logprob: -11.864195823669434

Token 57: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6334540843963623
    2. ' a' → logprob: -0.7584540843963623
    3. ''a' → logprob: -7.883454322814941
    4. ' ' → logprob: -8.508454322814941
    5. 'space' → logprob: -9.508454322814941
    6. 't' → logprob: -9.883454322814941
    7. '#a' → logprob: -9.883454322814941
    8. '#' → logprob: -10.758454322814941
    9. ''s' → logprob: -11.508454322814941
    10. '	a' → logprob: -11.633454322814941

Token 58: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.24976979196071625
    2. 'des' → logprob: -2.374769687652588
    3. ' un' → logprob: -2.624769687652588
    4. 'un' → logprob: -2.999769687652588
    5. ' espaces' → logprob: -6.249769687652588
    6. ''un' → logprob: -6.749769687652588
    7. 's' → logprob: -7.124769687652588
    8. ' ' → logprob: -7.624769687652588
    9. 'space' → logprob: -8.249770164489746
    10. ' espace' → logprob: -8.374770164489746

Token 59: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.008079977706074715
    2. 'esp' → logprob: -4.883080005645752
    3. ' espace' → logprob: -8.758079528808594
    4. 'spaces' → logprob: -9.133079528808594
    5. 'es' → logprob: -9.258079528808594
    6. ''esp' → logprob: -10.258079528808594
    7. ' esp' → logprob: -10.883079528808594
    8. ' spaces' → logprob: -11.133079528808594
    9. ' espacios' → logprob: -11.508079528808594
    10. ' blancs' → logprob: -11.633079528808594

Token 60: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8594087958335876
    2. 'n' → logprob: -0.8594087958335876
    3. '#' → logprob: -2.9844088554382324
    4. 'e' → logprob: -2.9844088554382324
    5. 'x' → logprob: -3.9844088554382324
    6. 'i' → logprob: -4.109408855438232
    7. 'ent' → logprob: -4.484408855438232
    8. 'numbers' → logprob: -6.484408855438232
    9. 'm' → logprob: -6.859408855438232
    10. ',' → logprob: -7.734408855438232

Token 61: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17131781578063965
    2. 'n' → logprob: -2.4213178157806396
    3. 'x' → logprob: -2.9213178157806396
    4. 'ent' → logprob: -4.671318054199219
    5. 'e' → logprob: -5.796318054199219
    6. '#' → logprob: -7.546318054199219
    7. ',' → logprob: -8.046318054199219
    8. 'numbers' → logprob: -8.296318054199219
    9. '```' → logprob: -8.421318054199219
    10. 'b' → logprob: -8.546318054199219

Token 62: ' map' (ID: 4014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1601393222808838
    2. 'ent' → logprob: -2.410139322280884
    3. 'n' → logprob: -3.285139322280884
    4. 'x' → logprob: -4.410139083862305
    5. ' a' → logprob: -5.660139083862305
    6. 'numbers' → logprob: -6.285139083862305
    7. '#' → logprob: -7.535139083862305
    8. 'val' → logprob: -7.785139083862305
    9. ' ent' → logprob: -7.910139083862305
    10. 'nums' → logprob: -7.910139083862305

Token 63: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.28211143612861633
    2. '(' → logprob: -1.407111406326294
    3. '(lambda' → logprob: -7.407111644744873
    4. 'int' → logprob: -8.407111167907715
    5. '(str' → logprob: -9.782111167907715
    6. '<int' → logprob: -10.532111167907715
    7. '[int' → logprob: -10.907111167907715
    8. '(
' → logprob: -11.407111167907715
    9. '=int' → logprob: -11.782111167907715
    10. ' int' → logprob: -13.157111167907715

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02157655544579029
    2. ')' → logprob: -3.8965766429901123
    3. ',input' → logprob: -7.021576404571533
    4. ',)' → logprob: -9.771576881408691
    5. ' ,' → logprob: -10.146576881408691
    6. ',int' → logprob: -11.021576881408691
    7. ' )' → logprob: -12.271576881408691
    8. ',user' → logprob: -12.396576881408691
    9. ',s' → logprob: -13.146576881408691
    10. '),' → logprob: -13.146576881408691

Token 65: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.18039844930171967
    2. ' input' → logprob: -1.8053984642028809
    3. ')' → logprob: -7.430398464202881
    4. '(input' → logprob: -10.805397987365723
    5. ' )' → logprob: -10.930397987365723
    6. '<input' → logprob: -12.055397987365723
    7. '=input' → logprob: -12.930397987365723
    8. '[input' → logprob: -13.180397987365723
    9. ',input' → logprob: -13.555397987365723
    10. '	input' → logprob: -13.680397987365723

Token 66: ' applique' (ID: 180579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007695002015680075
    2. '(input' → logprob: -5.632695198059082
    3. 'input' → logprob: -7.007695198059082
    4. '(' → logprob: -7.132695198059082
    5. ' )' → logprob: -7.757695198059082
    6. '))' → logprob: -8.257695198059082
    7. 'def' → logprob: -8.382695198059082
    8. '(int' → logprob: -8.507695198059082
    9. ' permet' → logprob: -8.507695198059082
    10. 'convert' → logprob: -8.632695198059082

Token 67: ' la' (ID: 557)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.605457603931427
    2. 'int' → logprob: -0.855457603931427
    3. ' la' → logprob: -3.7304575443267822
    4. '(int' → logprob: -5.730457782745361
    5. ' ' → logprob: -7.230457782745361
    6. ' à' → logprob: -7.355457782745361
    7. 'la' → logprob: -8.605457305908203
    8. '<int' → logprob: -9.855457305908203
    9. '=int' → logprob: -9.855457305908203
    10. '	int' → logprob: -10.355457305908203

Token 68: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -1.038569450378418
    2. ' fonction' → logprob: -1.163569450378418
    3. 'int' → logprob: -1.413569450378418
    4. ' conversion' → logprob: -2.913569450378418
    5. ' int' → logprob: -3.413569450378418
    6. 'conversion' → logprob: -6.038569450378418
    7. ' function' → logprob: -8.038569450378418
    8. ' transformation' → logprob: -8.913569450378418
    9. 'function' → logprob: -9.288569450378418
    10. 'fon' → logprob: -10.413569450378418

Token 69: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0032409359700977802
    2. 'int' → logprob: -5.753241062164307
    3. '(int' → logprob: -10.378240585327148
    4. ' ' → logprob: -11.628240585327148
    5. '=int' → logprob: -11.628240585327148
    6. '<int' → logprob: -12.378240585327148
    7. '	int' → logprob: -12.878240585327148
    8. ' integer' → logprob: -13.628240585327148
    9. ' `' → logprob: -13.753240585327148
    10. ' aux' → logprob: -14.253240585327148

Token 70: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.468723326921463
    2. ')' → logprob: -1.0937232971191406
    3. '()' → logprob: -4.343723297119141
    4. '(s' → logprob: -5.218723297119141
    5. 's' → logprob: -5.843723297119141
    6. ' à' → logprob: -5.968723297119141
    7. ' aux' → logprob: -6.093723297119141
    8. '(aux' → logprob: -6.093723297119141
    9. 'sur' → logprob: -6.218723297119141
    10. '(
' → logprob: -6.593723297119141

Token 71: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.37933585047721863
    2. 'cha' → logprob: -1.379335880279541
    3. 't' → logprob: -3.504335880279541
    4. ' chacune' → logprob: -4.004335880279541
    5. ' chacun' → logprob: -5.129335880279541
    6. 'ch' → logprob: -5.379335880279541
    7. ' tous' → logprob: -6.004335880279541
    8. ' cha' → logprob: -6.879335880279541
    9. ' toutes' → logprob: -7.879335880279541
    10. ' each' → logprob: -8.254335403442383

Token 72: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.06204095482826233
    2. ' élément' → logprob: -2.8120410442352295
    3. 'element' → logprob: -10.812041282653809
    4. ' element' → logprob: -11.437041282653809
    5. ' éléments' → logprob: -11.562041282653809
    6. 'él' → logprob: -11.687041282653809
    7. 'é' → logprob: -11.937041282653809
    8. ' ' → logprob: -12.937041282653809
    9. ' él' → logprob: -13.062041282653809
    10. ' chaîne' → logprob: -13.062041282653809

Token 73: '-cha' (ID: 163177)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.8501180410385132
    2. '-cha' → logprob: -0.9751180410385132
    3. ' chaîne' → logprob: -1.8501180410385132
    4. 'cha' → logprob: -3.7251181602478027
    5. '-' → logprob: -4.350118160247803
    6. 'élé' → logprob: -7.725118160247803
    7. ' chaine' → logprob: -8.225117683410645
    8. '-chain' → logprob: -8.975117683410645
    9. '```' → logprob: -9.725117683410645
    10. ' chaînes' → logprob: -9.850117683410645

Token 74: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.09929962456226349
    2. 'î' → logprob: -2.599299669265747
    3. 'ne' → logprob: -4.099299430847168
    4. 'ïne' → logprob: -6.724299430847168
    5. 'înes' → logprob: -6.724299430847168
    6. 'ine' → logprob: -7.349299430847168
    7. 'ı' → logprob: -9.099299430847168
    8. 'în' → logprob: -9.099299430847168
    9. 'îner' → logprob: -9.849299430847168
    10. 'Î' → logprob: -9.974299430847168

Token 75: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09230197221040726
    2. ' )' → logprob: -3.967302083969116
    3. 'n' → logprob: -4.092301845550537
    4. '(' → logprob: -4.592301845550537
    5. 'a' → logprob: -5.217301845550537
    6. 'ent' → logprob: -5.217301845550537
    7. 'e' → logprob: -5.342301845550537
    8. 's' → logprob: -5.467301845550537
    9. 'x' → logprob: -5.467301845550537
    10. ',' → logprob: -5.717301845550537

Token 76: ' obtenir' (ID: 54423)
  Prédit: ' convertir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.8080426454544067
    2. 'transform' → logprob: -1.8080426454544067
    3. 'convert' → logprob: -2.058042526245117
    4. ' transformer' → logprob: -2.558042526245117
    5. 'ob' → logprob: -2.808042526245117
    6. ' les' → logprob: -2.808042526245117
    7. 'les' → logprob: -3.058042526245117
    8. ' obtenir' → logprob: -4.433042526245117
    9. ' convert' → logprob: -5.683042526245117
    10. 'con' → logprob: -7.308042526245117

Token 77: ' une' (ID: 2463)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.40506088733673096
    2. ' une' → logprob: -1.280060887336731
    3. ' les' → logprob: -3.4050607681274414
    4. 'des' → logprob: -4.280060768127441
    5. 'les' → logprob: -5.530060768127441
    6. ' deux' → logprob: -6.405060768127441
    7. 'une' → logprob: -7.030060768127441
    8. ' la' → logprob: -7.280060768127441
    9. ' un' → logprob: -7.655060768127441
    10. 'la' → logprob: -9.530060768127441

Token 78: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.026641860604286194
    2. 'liste' → logprob: -3.651641845703125
    3. 's' → logprob: -8.526641845703125
    4. 'list' → logprob: -10.276641845703125
    5. ' list' → logprob: -10.401641845703125
    6. ' ' → logprob: -11.026641845703125
    7. ' nouvelle' → logprob: -11.401641845703125
    8. ' tuple' → logprob: -12.026641845703125
    9. 'int' → logprob: -12.276641845703125
    10. ' listes' → logprob: -12.401641845703125

Token 79: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9108665585517883
    2. ' de' → logprob: -1.5358664989471436
    3. ' des' → logprob: -2.0358664989471436
    4. 'd' → logprob: -2.6608664989471436
    5. ' integers' → logprob: -3.2858664989471436
    6. '<int' → logprob: -3.4108664989471436
    7. 'int' → logprob: -3.4108664989471436
    8. ' of' → logprob: -4.160866737365723
    9. 'inte' → logprob: -4.535866737365723
    10. 'des' → logprob: -4.660866737365723

Token 80: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.005713223479688168
    2. '’ent' → logprob: -5.755712985992432
    3. ' ent' → logprob: -6.130712985992432
    4. 'ent' → logprob: -8.75571346282959
    5. ''' → logprob: -10.13071346282959
    6. ''ex' → logprob: -10.13071346282959
    7. 'e' → logprob: -10.25571346282959
    8. ''esp' → logprob: -10.88071346282959
    9. ''int' → logprob: -11.38071346282959
    10. '	ent' → logprob: -11.38071346282959

Token 81: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0001640876434976235
    2. 'ières' → logprob: -9.375164031982422
    3. 'i' → logprob: -9.500164031982422
    4. 'ier' → logprob: -13.375164031982422
    5. '```' → logprob: -13.500164031982422
    6. '#' → logprob: -14.875164031982422
    7. '   ' → logprob: -15.375164031982422
    8. 'ers' → logprob: -16.000164031982422
    9. 'ié' → logprob: -16.000164031982422
    10. 'ires' → logprob: -16.125164031982422

Token 82: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8815024495124817
    2. 'x' → logprob: -1.131502389907837
    3. 'n' → logprob: -1.381502389907837
    4. '#' → logprob: -5.756502628326416
    5. 'e' → logprob: -5.756502628326416
    6. ',' → logprob: -6.006502628326416
    7. 'ent' → logprob: -7.006502628326416
    8. 'i' → logprob: -7.506502628326416
    9. '```' → logprob: -7.881502628326416
    10. ':' → logprob: -8.256502151489258

Token 83: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09129830449819565
    2. 'x' → logprob: -2.5912983417510986
    3. 'n' → logprob: -4.7162981033325195
    4. 'ent' → logprob: -6.2162981033325195
    5. '```' → logprob: -6.8412981033325195
    6. 'val' → logprob: -9.59129810333252
    7. ' a' → logprob: -9.84129810333252
    8. 'b' → logprob: -9.96629810333252
    9. 'e' → logprob: -11.09129810333252
    10. 'v' → logprob: -11.34129810333252

Token 84: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.033866867423057556
    2. 'x' → logprob: -3.5338668823242188
    3. ' a' → logprob: -5.783866882324219
    4. 'ent' → logprob: -7.283866882324219
    5. ' x' → logprob: -8.783866882324219
    6. 'n' → logprob: -9.533866882324219
    7. '#' → logprob: -9.908866882324219
    8. 'val' → logprob: -10.533866882324219
    9. 'values' → logprob: -11.408866882324219
    10. 'numbers' → logprob: -12.033866882324219

Token 85: ' fonction' (ID: 17610)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06074902042746544
    2. ' a' → logprob: -3.310749053955078
    3. 'x' → logprob: -4.185749053955078
    4. 'ent' → logprob: -6.810749053955078
    5. 'n' → logprob: -6.935749053955078
    6. '#' → logprob: -6.935749053955078
    7. ' x' → logprob: -7.060749053955078
    8. 'e' → logprob: -7.435749053955078
    9. 's' → logprob: -7.435749053955078
    10. ' ligne' → logprob: -7.685749053955078

Token 86: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5726192593574524
    2. 'list' → logprob: -1.8226191997528076
    3. 'int' → logprob: -2.1976191997528076
    4. 'print' → logprob: -2.3226191997528076
    5. ' print' → logprob: -3.0726191997528076
    6. ' int' → logprob: -4.197619438171387
    7. ' input' → logprob: -6.572619438171387
    8. 'input' → logprob: -7.447619438171387
    9. 'tuple' → logprob: -7.697619438171387
    10. 'range' → logprob: -8.197619438171387

Token 87: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0336184948682785
    2. '<|end|>' → logprob: -4.033618450164795
    3. '()' → logprob: -4.908618450164795
    4. '(
' → logprob: -5.783618450164795
    5. '(int' → logprob: -5.908618450164795
    6. ')' → logprob: -7.783618450164795
    7. '<|end|>' → logprob: -8.158618927001953
    8. '```' → logprob: -8.533618927001953
    9. '(

' → logprob: -9.033618927001953
    10. 's' → logprob: -9.033618927001953

Token 88: ' retourne' (ID: 178818)
  Prédit: ' retourne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.19513726234436035
    2. ' est' → logprob: -2.9451372623443604
    3. ' ' → logprob: -3.6951372623443604
    4. ' transforme' → logprob: -4.445137023925781
    5. 'return' → logprob: -4.570137023925781
    6. ' return' → logprob: -4.695137023925781
    7. ')' → logprob: -5.070137023925781
    8. ' ren' → logprob: -5.070137023925781
    9. 's' → logprob: -5.195137023925781
    10. ' peut' → logprob: -5.320137023925781

Token 89: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3487250506877899
    2. 'un' → logprob: -1.2237250804901123
    3. ''un' → logprob: -8.848725318908691
    4. ' ' → logprob: -10.598725318908691
    5. 'objet' → logprob: -10.848725318908691
    6. 'iter' → logprob: -10.973725318908691
    7. ' ' → logprob: -11.098725318908691
    8. 'it' → logprob: -11.473725318908691
    9. 'une' → logprob: -11.723725318908691
    10. 'obj' → logprob: -11.723725318908691

Token 90: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.42233243584632874
    2. ' it' → logprob: -1.7973324060440063
    3. 'iter' → logprob: -2.172332525253296
    4. 'objet' → logprob: -3.047332525253296
    5. ' objet' → logprob: -4.922332286834717
    6. ' iter' → logprob: -5.547332286834717
    7. 'iterator' → logprob: -6.547332286834717
    8. 'obj' → logprob: -6.922332286834717
    9. ''objet' → logprob: -7.172332286834717
    10. 'ité' → logprob: -7.672332286834717

Token 91: 'ér' (ID: 2156)
  Prédit: 'érateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.023494118824601173
    2. 'ér' → logprob: -4.273494243621826
    3. 'er' → logprob: -5.023494243621826
    4. 'é' → logprob: -6.398494243621826
    5. 'érant' → logprob: -7.398494243621826
    6. 'r' → logprob: -9.023493766784668
    7. 'able' → logprob: -10.398493766784668
    8. 'éraire' → logprob: -10.523493766784668
    9. '#' → logprob: -10.648493766784668
    10. '>' → logprob: -10.898493766784668

Token 92: 'able' (ID: 562)
  Prédit: 'ateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.0829986035823822
    2. 'able' → logprob: -2.582998514175415
    3. 'ator' → logprob: -5.707998752593994
    4. 'acteur' → logprob: -7.957998752593994
    5. 'teur' → logprob: -8.332998275756836
    6. 'er' → logprob: -9.957998275756836
    7. 'ate' → logprob: -10.207998275756836
    8. '```' → logprob: -11.082998275756836
    9. 'eur' → logprob: -11.332998275756836
    10. 'a' → logprob: -11.582998275756836

Token 93: ' ;' (ID: 4605)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9067369103431702
    2. 'ent' → logprob: -0.9067369103431702
    3. 'n' → logprob: -2.9067368507385254
    4. 'e' → logprob: -3.4067368507385254
    5. 'x' → logprob: -3.4067368507385254
    6. 'i' → logprob: -4.406736850738525
    7. 'r' → logprob: -5.031736850738525
    8. 'numbers' → logprob: -5.406736850738525
    9. 'values' → logprob: -5.656736850738525
    10. '#' → logprob: -5.906736850738525

Token 94: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0139598846435547
    2. 'ent' → logprob: -1.3889598846435547
    3. ' a' → logprob: -1.8889598846435547
    4. ' on' → logprob: -2.2639598846435547
    5. 'x' → logprob: -3.2639598846435547
    6. ' x' → logprob: -3.5139598846435547
    7. ' ent' → logprob: -4.138959884643555
    8. ' ce' → logprob: -4.763959884643555
    9. '#' → logprob: -5.013959884643555
    10. ' les' → logprob: -5.138959884643555

Token 95: ''utilisation' (ID: 73991)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.685208261013031
    2. 'a' → logprob: -1.0602083206176758
    3. 'es' → logprob: -2.185208320617676
    4. 's' → logprob: -4.185208320617676
    5. ' a' → logprob: -4.810208320617676
    6. ' =' → logprob: -6.060208320617676
    7. ''ent' → logprob: -6.685208320617676
    8. 'i' → logprob: -6.810208320617676
    9. 'ent' → logprob: -7.435208320617676
    10. ' est' → logprob: -7.435208320617676

Token 96: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.35337892174720764
    2. ' list' → logprob: -2.103379011154175
    3. ' next' → logprob: -2.728379011154175
    4. 'list' → logprob: -3.478379011154175
    5. 'next' → logprob: -3.853379011154175
    6. 'de' → logprob: -4.478378772735596
    7. ' suivante' → logprob: -4.728378772735596
    8. ' des' → logprob: -4.853378772735596
    9. ' prochaine' → logprob: -5.603378772735596
    10. ' tuple' → logprob: -5.603378772735596

Token 97: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07778046280145645
    2. ' list' → logprob: -3.0777804851531982
    3. ' la' → logprob: -4.577780246734619
    4. 'la' → logprob: -4.827780246734619
    5. 'l' → logprob: -5.327780246734619
    6. 'tuple' → logprob: -6.202780246734619
    7. ' tuple' → logprob: -6.702780246734619
    8. '`' → logprob: -7.202780246734619
    9. 'liste' → logprob: -8.327780723571777
    10. '```' → logprob: -8.327780723571777

Token 98: ' syntax' (ID: 45440)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.040702108293771744
    2. 'liste' → logprob: -3.5407021045684814
    3. '`' → logprob: -6.1657023429870605
    4. 'li' → logprob: -6.2907023429870605
    5. 'l' → logprob: -6.2907023429870605
    6. 'tuple' → logprob: -7.0407023429870605
    7. 'lst' → logprob: -7.2907023429870605
    8. 'next' → logprob: -7.2907023429870605
    9. 'un' → logprob: -7.5407023429870605
    10. ' list' → logprob: -7.5407023429870605

Token 99: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0002929174806922674
    2. '```' → logprob: -9.250292778015137
    3. 'a' → logprob: -9.500292778015137
    4. '`' → logprob: -10.000292778015137
    5. ' e' → logprob: -10.750292778015137
    6. 'le' → logprob: -11.750292778015137
    7. 'е' → logprob: -12.125292778015137
    8. '``' → logprob: -12.250292778015137
    9. 'r' → logprob: -12.625292778015137
    10. 'è' → logprob: -12.625292778015137

Token 100: ' '' (ID: 461)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -0.988562822341919
    2. '"' → logprob: -1.488562822341919
    3. 'un' → logprob: -2.363562822341919
    4. '*' → logprob: -2.863562822341919
    5. 'n' → logprob: -2.863562822341919
    6. 'x' → logprob: -3.738562822341919
    7. 'tuple' → logprob: -3.738562822341919
    8. 's' → logprob: -3.988562822341919
    9. 'list' → logprob: -4.11356258392334
    10. 'int' → logprob: -4.11356258392334

Token 101: 'N' (ID: 45)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13562051951885223
    2. 'x' → logprob: -2.635620594024658
    3. '*' → logprob: -3.760620594024658
    4. 'i' → logprob: -4.760620594024658
    5. 'n' → logprob: -4.885620594024658
    6. '*a' → logprob: -5.385620594024658
    7. ' a' → logprob: -6.135620594024658
    8. 'int' → logprob: -6.760620594024658
    9. 'input' → logprob: -7.010620594024658
    10. 'list' → logprob: -7.260620594024658

Token 102: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.770932137966156
    2. ',' → logprob: -1.1459321975708008
    3. '=' → logprob: -2.270932197570801
    4. ' =' → logprob: -2.395932197570801
    5. 'b' → logprob: -4.895932197570801
    6. 'ombres' → logprob: -6.020932197570801
    7. ' ,' → logprob: -6.395932197570801
    8. 'ombre' → logprob: -6.770932197570801
    9. 'a' → logprob: -6.895932197570801
    10. ',b' → logprob: -7.145932197570801

Token 103: ' K' (ID: 658)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.6933797597885132
    2. ' M' → logprob: -0.6933797597885132
    3. 'K' → logprob: -8.943379402160645
    4. ' K' → logprob: -9.818379402160645
    5. 'P' → logprob: -11.193379402160645
    6. 'B' → logprob: -11.818379402160645
    7. ' P' → logprob: -12.568379402160645
    8. 'S' → logprob: -12.818379402160645
    9. 'm' → logprob: -12.943379402160645
    10. 'T' → logprob: -13.068379402160645

Token 104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932966709136963
    2. ' =' → logprob: -0.6932966709136963
    3. ')' → logprob: -9.068296432495117
    4. ')=' → logprob: -11.193296432495117
    5. ',' → logprob: -11.693296432495117
    6. '=input' → logprob: -12.443296432495117
    7. '=N' → logprob: -12.818296432495117
    8. ' )' → logprob: -13.943296432495117
    9. ' ' → logprob: -14.193296432495117
    10. ' ' → logprob: -14.568296432495117

Token 105: ' ...' (ID: 2550)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3180789649486542
    2. ' map' → logprob: -1.3180789947509766
    3. 'input' → logprob: -6.193078994750977
    4. 'list' → logprob: -6.818078994750977
    5. ' input' → logprob: -6.818078994750977
    6. ' list' → logprob: -8.193078994750977
    7. ' tuple' → logprob: -8.568078994750977
    8. 'tuple' → logprob: -9.193078994750977
    9. 'm' → logprob: -13.818078994750977
    10. '(map' → logprob: -14.318078994750977

Token 106: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002692651702091098
    2. ' )' → logprob: -6.252692699432373
    3. '()' → logprob: -7.877692699432373
    4. '')' → logprob: -9.377692222595215
    5. 'input' → logprob: -9.627692222595215
    6. ')`' → logprob: -9.877692222595215
    7. '(' → logprob: -10.502692222595215
    8. ')**' → logprob: -11.002692222595215
    9. '")' → logprob: -12.002692222595215
    10. '),' → logprob: -12.002692222595215

Token 107: ' affect' (ID: 7902)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.40824148058891296
    2. ' N' → logprob: -1.2832415103912354
    3. 'N' → logprob: -3.5332415103912354
    4. 'per' → logprob: -5.158241271972656
    5. ' pour' → logprob: -5.908241271972656
    6. ' ' → logprob: -6.033241271972656
    7. ',' → logprob: -6.033241271972656
    8. ' extrait' → logprob: -6.658241271972656
    9. 'pour' → logprob: -6.908241271972656
    10. ':' → logprob: -6.908241271972656

Token 108: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0010883049108088017
    2. 'é' → logprob: -7.8760881423950195
    3. 'era' → logprob: -8.12608814239502
    4. 'ation' → logprob: -9.12608814239502
    5. 'er' → logprob: -9.12608814239502
    6. 'a' → logprob: -10.37608814239502
    7. 'ant' → logprob: -10.37608814239502
    8. 'ent' → logprob: -10.50108814239502
    9. 'ue' → logprob: -10.75108814239502
    10. 'ée' → logprob: -10.87608814239502

Token 109: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6803131103515625
    2. 'les' → logprob: -1.3053131103515625
    3. ' directement' → logprob: -2.5553131103515625
    4. 'de' → logprob: -3.4303131103515625
    5. 'direct' → logprob: -3.6803131103515625
    6. ' deux' → logprob: -3.6803131103515625
    7. ' ces' → logprob: -3.9303131103515625
    8. 'ces' → logprob: -5.3053131103515625
    9. ' each' → logprob: -5.4303131103515625
    10. ' chaque' → logprob: -5.8053131103515625

Token 110: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.12262573838233948
    2. 'val' → logprob: -3.2476258277893066
    3. ' deux' → logprob: -3.4976258277893066
    4. ' valeurs' → logprob: -3.4976258277893066
    5. 'ent' → logprob: -5.122625827789307
    6. 'prem' → logprob: -5.122625827789307
    7. ' ' → logprob: -6.997625827789307
    8. 'élé' → logprob: -7.497625827789307
    9. ' premiers' → logprob: -7.622625827789307
    10. ' premier' → logprob: -7.997625827789307

Token 111: ' premiers' (ID: 59140)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.4169699549674988
    2. 'ent' → logprob: -2.2919700145721436
    3. ' nombres' → logprob: -2.6669700145721436
    4. ' integers' → logprob: -3.0419700145721436
    5. ' ' → logprob: -3.0419700145721436
    6. ' N' → logprob: -3.7919700145721436
    7. 'n' → logprob: -4.5419697761535645
    8. '_ent' → logprob: -5.1669697761535645
    9. ' entier' → logprob: -5.2919697761535645
    10. 'inte' → logprob: -5.4169697761535645

Token 112: ' éléments' (ID: 57375)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ent' → logprob: -1.3000495433807373
    2. ' tokens' → logprob: -1.4250495433807373
    3. 'ent' → logprob: -1.5500495433807373
    4. 'tokens' → logprob: -1.8000495433807373
    5. '=' → logprob: -3.3000495433807373
    6. ' nombres' → logprob: -3.8000495433807373
    7. ' N' → logprob: -4.425049781799316
    8. ' variables' → logprob: -5.175049781799316
    9. ' caractères' → logprob: -5.800049781799316
    10. ' integers' → logprob: -5.925049781799316

Token 113: ' du' (ID: 1462)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002595872851088643
    2. 'n' → logprob: -6.627595901489258
    3. ',' → logprob: -7.127595901489258
    4. '#' → logprob: -9.377595901489258
    5. ' N' → logprob: -9.752595901489258
    6. ')' → logprob: -9.752595901489258
    7. ':' → logprob: -10.377595901489258
    8. '
' → logprob: -10.502595901489258
    9. '```' → logprob: -10.502595901489258
    10. ' ' → logprob: -10.627595901489258

Token 114: ' résultat' (ID: 62556)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6676959991455078
    2. 'map' → logprob: -0.9176959991455078
    3. ' input' → logprob: -2.792695999145508
    4. 'split' → logprob: -4.292695999145508
    5. ' map' → logprob: -4.792695999145508
    6. 'iter' → logprob: -6.542695999145508
    7. ' split' → logprob: -6.542695999145508
    8. 'result' → logprob: -7.542695999145508
    9. 'ent' → logprob: -8.417695999145508
    10. 'list' → logprob: -8.667695999145508

Token 115: ' à' (ID: 1221)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0027782509569078684
    2. 'n' → logprob: -6.127778053283691
    3. '
' → logprob: -8.752778053283691
    4. ',' → logprob: -9.377778053283691
    5. ' N' → logprob: -9.877778053283691
    6. 'x' → logprob: -10.127778053283691
    7. ' 
' → logprob: -10.127778053283691
    8. '```' → logprob: -10.127778053283691
    9. '#' → logprob: -10.252778053283691
    10. '  
' → logprob: -10.627778053283691

Token 116: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03364904224872589
    2. ' N' → logprob: -3.40864896774292
    3. ' ' → logprob: -13.408649444580078
    4. ' la' → logprob: -14.658649444580078
    5. '(N' → logprob: -15.283649444580078
    6. 'K' → logprob: -15.908649444580078
    7. '#' → logprob: -16.033649444580078
    8. 'n' → logprob: -16.158649444580078
    9. '`' → logprob: -16.283649444580078
    10. 'l' → logprob: -16.408649444580078

Token 117: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011649841908365488
    2. ',K' → logprob: -7.12616491317749
    3. ' ,' → logprob: -8.501165390014648
    4. ',N' → logprob: -9.251165390014648
    5. 'K' → logprob: -10.751165390014648
    6. ',k' → logprob: -12.126165390014648
    7. '=' → logprob: -12.438665390014648
    8. 's' → logprob: -12.688665390014648
    9. ' =' → logprob: -12.813665390014648
    10. 'N' → logprob: -12.813665390014648

Token 118: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.17979571223258972
    2. ' K' → logprob: -1.804795742034912
    3. ' ' → logprob: -9.929795265197754
    4. ' ' → logprob: -13.679795265197754
    5. '  ' → logprob: -15.304795265197754
    6. 'k' → logprob: -15.929795265197754
    7. ' à' → logprob: -16.11729621887207
    8. '	K' → logprob: -16.17979621887207
    9. '
' → logprob: -16.55479621887207
    10. '' → logprob: -16.61729621887207

Token 119: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.003095719963312149
    2. 'n' → logprob: -6.878095626831055
    3. '
' → logprob: -7.003095626831055
    4. ',' → logprob: -7.753095626831055
    5. '#' → logprob: -9.003095626831055
    6. 'x' → logprob: -9.378095626831055
    7. ' 
' → logprob: -9.503095626831055
    8. '\n' → logprob: -9.628095626831055
    9. '[' → logprob: -9.753095626831055
    10. '

' → logprob: -10.128095626831055

Token 120: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0033984826877713203
    2. 'n' → logprob: -6.378398418426514
    3. '
' → logprob: -6.753398418426514
    4. 'x' → logprob: -9.003398895263672
    5. ',' → logprob: -9.503398895263672
    6. '```' → logprob: -9.628398895263672
    7. ' N' → logprob: -10.128398895263672
    8. ' 
' → logprob: -10.253398895263672
    9. '  
' → logprob: -10.378398895263672
    10. '#' → logprob: -10.503398895263672

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.791440293658525e-05
    2. ' ,' → logprob: -10.125078201293945
    3. ',K' → logprob: -10.250078201293945
    4. ',N' → logprob: -13.625078201293945
    5. ',
' → logprob: -14.500078201293945
    6. '=' → logprob: -15.875078201293945
    7. ' K' → logprob: -16.000078201293945
    8. ',k' → logprob: -16.250078201293945
    9. 'K' → logprob: -16.750078201293945
    10. 's' → logprob: -17.250078201293945

Token 122: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.011464868672192097
    2. 'K' → logprob: -5.011465072631836
    3. ' ' → logprob: -5.636465072631836
    4. ' ' → logprob: -7.261465072631836
    5. '<|end|>' → logprob: -7.761465072631836
    6. '  ' → logprob: -10.761465072631836
    7. 'space' → logprob: -11.886465072631836
    8. ' ' → logprob: -12.511465072631836
    9. ')' → logprob: -13.011465072631836
    10. 's' → logprob: -13.511465072631836

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.428706556558609
    2. '=' → logprob: -1.0537065267562866
    3. ',' → logprob: -13.053706169128418
    4. ' ' → logprob: -14.053706169128418
    5. ')' → logprob: -14.303706169128418
    6. '=input' → logprob: -14.678706169128418
    7. ' =
' → logprob: -14.803706169128418
    8. ' ' → logprob: -14.928706169128418
    9. '<|end|>' → logprob: -15.428706169128418
    10. '=int' → logprob: -15.428706169128418

Token 124: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10020828247070312
    2. ' map' → logprob: -2.350208282470703
    3. '	map' → logprob: -14.475208282470703
    4. 'm' → logprob: -14.600208282470703
    5. ' ' → logprob: -15.475208282470703
    6. ' ' → logprob: -15.725208282470703
    7. 'list' → logprob: -16.225208282470703
    8. '(map' → logprob: -16.350208282470703
    9. 'int' → logprob: -16.725208282470703
    10. 'ma' → logprob: -17.100208282470703

Token 125: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07895632833242416
    2. '(' → logprob: -2.578956365585327
    3. '(
' → logprob: -10.953956604003906
    4. '(lambda' → logprob: -10.953956604003906
    5. ' (' → logprob: -11.328956604003906
    6. '<int' → logprob: -11.578956604003906
    7. '(input' → logprob: -13.078956604003906
    8. 'int' → logprob: -13.203956604003906
    9. '(str' → logprob: -13.578956604003906
    10. '(in' → logprob: -13.578956604003906

Token 126: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005831626243889332
    2. 'input' → logprob: -5.255831718444824
    3. ',input' → logprob: -8.130831718444824
    4. '(' → logprob: -8.380831718444824
    5. ' (' → logprob: -10.380831718444824
    6. ')' → logprob: -10.755831718444824
    7. ' input' → logprob: -11.130831718444824
    8. '=input' → logprob: -12.380831718444824
    9. ',' → logprob: -13.255831718444824
    10. '```' → logprob: -15.255831718444824

Token 127: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019288709154352546
    2. ' input' → logprob: -6.251928806304932
    3. '(input' → logprob: -16.126928329467773
    4. ' ' → logprob: -17.251928329467773
    5. '   ' → logprob: -17.626928329467773
    6. ')' → logprob: -17.751928329467773
    7. '=input' → logprob: -18.126928329467773
    8. '<input' → logprob: -18.501928329467773
    9. '	input' → logprob: -18.626928329467773
    10. '```' → logprob: -19.626928329467773

Token 128: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00673905061557889
    2. '()' → logprob: -5.006739139556885
    3. '())' → logprob: -10.881738662719727
    4. ' ().' → logprob: -12.756738662719727
    5. '()
' → logprob: -14.006738662719727
    6. ' ()' → logprob: -15.256738662719727
    7. '("' → logprob: -15.756738662719727
    8. '(' → logprob: -15.756738662719727
    9. ')' → logprob: -15.881738662719727
    10. '()`' → logprob: -16.131738662719727

Token 129: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011714138090610504
    2. 'strip' → logprob: -6.751171588897705
    3. ' split' → logprob: -14.126171112060547
    4. ')' → logprob: -15.501171112060547
    5. 'rstrip' → logprob: -15.501171112060547
    6. '(split' → logprob: -16.376171112060547
    7. 'spl' → logprob: -17.376171112060547
    8. 'plit' → logprob: -18.126171112060547
    9. '_split' → logprob: -18.376171112060547
    10. '()' → logprob: -18.876171112060547

Token 130: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005516307894140482
    2. '()' → logprob: -5.630516529083252
    3. '()))' → logprob: -6.505516529083252
    4. ')' → logprob: -7.880516529083252
    5. '(' → logprob: -11.130516052246094
    6. '))' → logprob: -11.380516052246094
    7. ' ())' → logprob: -11.630516052246094
    8. '('' → logprob: -12.880516052246094
    9. '())
' → logprob: -13.130516052246094
    10. '());' → logprob: -15.005516052246094

Token 131: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6894809603691101
    2. '<|end|>' → logprob: -1.4394810199737549
    3. ' ' → logprob: -2.314481019973755
    4. '#' → logprob: -2.314481019973755
    5. ' 
' → logprob: -4.189480781555176
    6. ')' → logprob: -4.189480781555176
    7. ':' → logprob: -5.064480781555176
    8. '  
' → logprob: -5.314480781555176
    9. 'print' → logprob: -5.564480781555176
    10. 'for' → logprob: -5.939480781555176

Token 132: ' Lire' (ID: 57624)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.33352333307266235
    2. '#' → logprob: -2.4585232734680176
    3. 'for' → logprob: -2.7085232734680176
    4. 's' → logprob: -3.2085232734680176
    5. 'print' → logprob: -3.3335232734680176
    6. 'lst' → logprob: -4.458523273468018
    7. 'numbers' → logprob: -4.833523273468018
    8. 'if' → logprob: -5.208523273468018
    9. 'results' → logprob: -5.458523273468018
    10. 'a' → logprob: -5.708523273468018

Token 133: ' une' (ID: 2463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3958827555179596
    2. '()' → logprob: -2.2708828449249268
    3. 'les' → logprob: -2.8958828449249268
    4. ' la' → logprob: -3.5208828449249268
    5. 's' → logprob: -3.6458828449249268
    6. 'la' → logprob: -3.7708828449249268
    7. '(' → logprob: -3.7708828449249268
    8. 'a' → logprob: -4.145882606506348
    9. 'l' → logprob: -4.770882606506348
    10. 'A' → logprob: -4.895882606506348

Token 134: ' autre' (ID: 20278)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.24310211837291718
    2. ' liste' → logprob: -1.6181020736694336
    3. 'ligne' → logprob: -4.868102073669434
    4. '#' → logprob: -5.743102073669434
    5. ' ligne' → logprob: -6.993102073669434
    6. 's' → logprob: -6.993102073669434
    7. 'se' → logprob: -7.493102073669434
    8. ' ' → logprob: -7.493102073669434
    9. 'chaine' → logprob: -7.868102073669434
    10. ' deuxième' → logprob: -7.868102073669434

Token 135: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.48646703362464905
    2. 'ligne' → logprob: -0.9864670038223267
    3. 'fois' → logprob: -5.486466884613037
    4. ' ' → logprob: -6.361466884613037
    5. 'l' → logprob: -6.861466884613037
    6. 'int' → logprob: -7.111466884613037
    7. '#' → logprob: -7.611466884613037
    8. '_' → logprob: -7.736466884613037
    9. 'line' → logprob: -7.861466884613037
    10. ' fois' → logprob: -7.861466884613037

Token 136: ' d' (ID: 272)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5010842680931091
    2. 'd' → logprob: -2.251084327697754
    3. ' N' → logprob: -2.376084327697754
    4. '()' → logprob: -3.501084327697754
    5. ' d' → logprob: -3.876084327697754
    6. ' de' → logprob: -4.126084327697754
    7. 'A' → logprob: -4.126084327697754
    8. 'n' → logprob: -4.126084327697754
    9. 'a' → logprob: -4.376084327697754
    10. '#' → logprob: -4.376084327697754

Token 137: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.8459840416908264
    2. 'ent' → logprob: -1.2209839820861816
    3. ''entrée' → logprob: -2.0959839820861816
    4. 'e' → logprob: -2.3459839820861816
    5. ''ent' → logprob: -3.3459839820861816
    6. ' ent' → logprob: -4.970983982086182
    7. 'es' → logprob: -5.345983982086182
    8. 'input' → logprob: -6.345983982086182
    9. ' input' → logprob: -6.345983982086182
    10. 'inte' → logprob: -6.470983982086182

Token 138: ' utilisateur' (ID: 115595)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0809159055352211
    2. 'a' → logprob: -3.580915927886963
    3. 's' → logprob: -4.955915927886963
    4. 'arr' → logprob: -5.205915927886963
    5. ' A' → logprob: -5.330915927886963
    6. ',' → logprob: -5.455915927886963
    7. 'values' → logprob: -5.580915927886963
    8. 'val' → logprob: -5.580915927886963
    9. 'numbers' → logprob: -5.705915927886963
    10. 'd' → logprob: -6.205915927886963

Token 139: ' contenant' (ID: 131049)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3551377058029175
    2. 'a' → logprob: -1.8551377058029175
    3. 'arr' → logprob: -3.605137825012207
    4. 'L' → logprob: -4.230137825012207
    5. 's' → logprob: -4.230137825012207
    6. ',' → logprob: -4.355137825012207
    7. ' A' → logprob: -4.355137825012207
    8. 'values' → logprob: -4.980137825012207
    9. 'lst' → logprob: -4.980137825012207
    10. 'numbers' → logprob: -5.105137825012207

Token 140: ' des' (ID: 731)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.2702118456363678
    2. 'N' → logprob: -2.270211935043335
    3. 'une' → logprob: -3.270211935043335
    4. ' K' → logprob: -3.395211935043335
    5. ' une' → logprob: -3.895211935043335
    6. 'la' → logprob: -4.270211696624756
    7. 'les' → logprob: -4.395211696624756
    8. 'a' → logprob: -5.395211696624756
    9. ' la' → logprob: -5.395211696624756
    10. ' N' → logprob: -6.770211696624756

Token 141: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6566279530525208
    2. ' ent' → logprob: -1.031627893447876
    3. 'N' → logprob: -3.531627893447876
    4. ' espaces' → logprob: -3.656627893447876
    5. ' nombres' → logprob: -4.281628131866455
    6. 'K' → logprob: -4.406628131866455
    7. ' N' → logprob: -4.406628131866455
    8. ' K' → logprob: -4.781628131866455
    9. 'inte' → logprob: -5.156628131866455
    10. ' valeurs' → logprob: -5.781628131866455

Token 142: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.009535547345876694
    2. 'ières' → logprob: -4.884535312652588
    3. 'i' → logprob: -7.009535312652588
    4. 't' → logprob: -7.009535312652588
    5. 'ti' → logprob: -10.259535789489746
    6. 'ier' → logprob: -11.134535789489746
    7. 'ière' → logprob: -11.134535789489746
    8. 'ités' → logprob: -11.134535789489746
    9. 'tiers' → logprob: -11.134535789489746
    10. 'ers' → logprob: -12.134535789489746

Token 143: ' sépar' (ID: 97160)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3012617826461792
    2. 'a' → logprob: -2.0512619018554688
    3. 'numbers' → logprob: -3.4262619018554688
    4. ' A' → logprob: -3.5512619018554688
    5. 'arr' → logprob: -3.5512619018554688
    6. 'L' → logprob: -4.051261901855469
    7. 'lst' → logprob: -5.176261901855469
    8. 'values' → logprob: -5.426261901855469
    9. 'nums' → logprob: -6.426261901855469
    10. ' a' → logprob: -6.426261901855469

Token 144: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.01135277934372425
    2. 'é' → logprob: -4.636353015899658
    3. 'ées' → logprob: -7.761353015899658
    4. 'ée' → logprob: -7.761353015899658
    5. 'es' → logprob: -8.0113525390625
    6. ' par' → logprob: -8.5113525390625
    7. 'par' → logprob: -9.7613525390625
    8. 'ément' → logprob: -10.0113525390625
    9. 's' → logprob: -10.1363525390625
    10. 'e' → logprob: -10.5113525390625

Token 145: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.09694590419530869
    2. ' par' → logprob: -2.5969460010528564
    3. '=' → logprob: -5.721945762634277
    4. 'A' → logprob: -5.846945762634277
    5. 'a' → logprob: -6.221945762634277
    6. 'p' → logprob: -6.346945762634277
    7. ' =' → logprob: -6.846945762634277
    8. 'N' → logprob: -7.221945762634277
    9. 's' → logprob: -7.221945762634277
    10. 'L' → logprob: -7.721945762634277

Token 146: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.16225649416446686
    2. 'un' → logprob: -2.9122564792633057
    3. ' des' → logprob: -3.0372564792633057
    4. 'esp' → logprob: -3.1622564792633057
    5. 'es' → logprob: -6.162256717681885
    6. ' espaces' → logprob: -6.787256717681885
    7. 'spaces' → logprob: -7.287256717681885
    8. ''esp' → logprob: -7.662256717681885
    9. '```' → logprob: -8.412256240844727
    10. ' un' → logprob: -9.037256240844727

Token 147: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.010938282124698162
    2. ' espaces' → logprob: -5.5109381675720215
    3. ''esp' → logprob: -5.6359381675720215
    4. 'es' → logprob: -6.3859381675720215
    5. 'spaces' → logprob: -6.5109381675720215
    6. ''espace' → logprob: -10.13593864440918
    7. '’esp' → logprob: -10.88593864440918
    8. '```' → logprob: -11.63593864440918
    9. 'space' → logprob: -12.01093864440918
    10. 'paces' → logprob: -12.38593864440918

Token 148: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06370657682418823
    2. 'a' → logprob: -3.438706636428833
    3. 'arr' → logprob: -5.063706398010254
    4. ' A' → logprob: -5.188706398010254
    5. 'numbers' → logprob: -5.188706398010254
    6. 'L' → logprob: -6.438706398010254
    7. 's' → logprob: -6.438706398010254
    8. 'lst' → logprob: -6.688706398010254
    9. 'values' → logprob: -7.188706398010254
    10. 'p' → logprob: -7.188706398010254

Token 149: '#' (ID: 2)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.30118778347969055
    2. 'arr' → logprob: -2.176187753677368
    3. 'a' → logprob: -2.676187753677368
    4. 'numbers' → logprob: -3.301187753677368
    5. 'values' → logprob: -4.676187992095947
    6. ' A' → logprob: -4.926187992095947
    7. 'nums' → logprob: -5.676187992095947
    8. 'lst' → logprob: -5.801187992095947
    9. 'array' → logprob: -5.801187992095947
    10. 'L' → logprob: -6.301187992095947

Token 150: ' map' (ID: 4014)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5930551886558533
    2. 'arr' → logprob: -1.593055248260498
    3. 'a' → logprob: -2.718055248260498
    4. 'numbers' → logprob: -2.718055248260498
    5. 'values' → logprob: -3.468055248260498
    6. 'lst' → logprob: -4.218055248260498
    7. ' A' → logprob: -4.718055248260498
    8. 'nums' → logprob: -4.843055248260498
    9. 'array' → logprob: -5.218055248260498
    10. 'L' → logprob: -5.343055248260498

Token 151: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004615014884620905
    2. '(' → logprob: -5.50461483001709
    3. '=int' → logprob: -8.12961483001709
    4. 'int' → logprob: -8.87961483001709
    5. '<int' → logprob: -10.50461483001709
    6. '[int' → logprob: -10.62961483001709
    7. ',int' → logprob: -11.00461483001709
    8. '(in' → logprob: -11.87961483001709
    9. ' (' → logprob: -12.25461483001709
    10. '(
' → logprob: -12.37961483001709

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013536872575059533
    2. ',input' → logprob: -6.626353740692139
    3. ')' → logprob: -11.37635326385498
    4. ' ,' → logprob: -11.87635326385498
    5. 'input' → logprob: -12.62635326385498
    6. '(input' → logprob: -13.12635326385498
    7. ',
' → logprob: -13.25135326385498
    8. '(' → logprob: -14.87635326385498
    9. ',user' → logprob: -14.87635326385498
    10. ',)' → logprob: -15.50135326385498

Token 153: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6338619589805603
    2. 'input' → logprob: -0.7588619589805603
    3. ')' → logprob: -6.883862018585205
    4. '...)' → logprob: -8.883861541748047
    5. '(input' → logprob: -10.508861541748047
    6. '...' → logprob: -10.633861541748047
    7. ' )' → logprob: -11.508861541748047
    8. '	input' → logprob: -11.883861541748047
    9. ' ' → logprob: -12.258861541748047
    10. ',input' → logprob: -12.258861541748047

Token 154: ' convert' (ID: 8452)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5716673731803894
    2. 'a' → logprob: -1.6966674327850342
    3. 'A' → logprob: -2.571667432785034
    4. 'numbers' → logprob: -3.071667432785034
    5. 'scores' → logprob: -3.696667432785034
    6. 'values' → logprob: -4.071667194366455
    7. 'lst' → logprob: -4.696667194366455
    8. 'L' → logprob: -5.196667194366455
    9. 'liste' → logprob: -5.196667194366455
    10. 'l' → logprob: -5.321667194366455

Token 155: 'it' (ID: 278)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.249901533126831
    2. '=int' → logprob: -1.374901533126831
    3. 'int' → logprob: -2.249901533126831
    4. '(int' → logprob: -2.499901533126831
    5. 'e' → logprob: -2.874901533126831
    6. '=' → logprob: -3.499901533126831
    7. 'ant' → logprob: -3.624901533126831
    8. '=lambda' → logprob: -3.749901533126831
    9. '()' → logprob: -3.874901533126831
    10. 'era' → logprob: -3.999901533126831

Token 156: ' chaque' (ID: 21194)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.060018256306648254
    2. '(input' → logprob: -3.435018301010132
    3. ' input' → logprob: -4.310018062591553
    4. 'la' → logprob: -5.060018062591553
    5. ' la' → logprob: -6.185018062591553
    6. 'les' → logprob: -6.185018062591553
    7. 'l' → logprob: -6.685018062591553
    8. '=input' → logprob: -8.435018539428711
    9. ' les' → logprob: -8.685018539428711
    10. 'int' → logprob: -9.810018539428711

Token 157: ' chaîne' (ID: 89288)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.20179063081741333
    2. 'val' → logprob: -2.2017905712127686
    3. 'ent' → logprob: -3.7017905712127686
    4. 'element' → logprob: -4.326790809631348
    5. 'input' → logprob: -4.951790809631348
    6. 's' → logprob: -5.076790809631348
    7. ' élément' → logprob: -5.201790809631348
    8. 'int' → logprob: -5.576790809631348
    9. 'entrée' → logprob: -5.576790809631348
    10. 'nombre' → logprob: -6.826790809631348

Token 158: ' en' (ID: 469)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3741826117038727
    2. '(' → logprob: -1.6241825819015503
    3. ')' → logprob: -2.74918270111084
    4. ',' → logprob: -3.62418270111084
    5. '(int' → logprob: -4.99918270111084
    6. 'input' → logprob: -5.37418270111084
    7. '(en' → logprob: -6.62418270111084
    8. 's' → logprob: -6.62418270111084
    9. '(
' → logprob: -6.62418270111084
    10. 'N' → logprob: -7.12418270111084

Token 159: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38071635365486145
    2. ' des' → logprob: -2.380716323852539
    3. ' int' → logprob: -2.380716323852539
    4. 'ent' → logprob: -2.630716323852539
    5. ' une' → logprob: -3.505716323852539
    6. ' un' → logprob: -4.755716323852539
    7. 'une' → logprob: -4.880716323852539
    8. 'des' → logprob: -5.255716323852539
    9. 'ints' → logprob: -6.380716323852539
    10. 'un' → logprob: -6.505716323852539

Token 160: ',' (ID: 11)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.22185185551643372
    2. 'arr' → logprob: -2.5968518257141113
    3. ' A' → logprob: -3.8468518257141113
    4. 'a' → logprob: -3.8468518257141113
    5. 'numbers' → logprob: -3.8468518257141113
    6. 'values' → logprob: -4.221851825714111
    7. 'L' → logprob: -4.596851825714111
    8. 'lst' → logprob: -4.846851825714111
    9. 'p' → logprob: -6.096851825714111
    10. 'ap' → logprob: -6.221851825714111

Token 161: ' cré' (ID: 12201)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5433675646781921
    2. 'arr' → logprob: -2.168367624282837
    3. 'numbers' → logprob: -2.543367624282837
    4. ' A' → logprob: -2.668367624282837
    5. 'a' → logprob: -2.793367624282837
    6. 'lst' → logprob: -3.668367624282837
    7. 'L' → logprob: -4.543367385864258
    8. 'nums' → logprob: -4.793367385864258
    9. 'data' → logprob: -5.043367385864258
    10. 'values' → logprob: -5.293367385864258

Token 162: 'ant' (ID: 493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03514429181814194
    2. 'ant' → logprob: -4.160144329071045
    3. 'er' → logprob: -4.285144329071045
    4. 'ate' → logprob: -6.410144329071045
    5. 'es' → logprob: -7.410144329071045
    6. '#' → logprob: -7.535144329071045
    7. 'ent' → logprob: -7.535144329071045
    8. 'ates' → logprob: -7.785144329071045
    9. 'é' → logprob: -8.410143852233887
    10. 'era' → logprob: -8.535143852233887

Token 163: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.2021910846233368
    2. 'une' → logprob: -1.7021911144256592
    3. 'un' → logprob: -8.702191352844238
    4. 'a' → logprob: -8.827191352844238
    5. ' un' → logprob: -8.952191352844238
    6. 'la' → logprob: -9.202191352844238
    7. 'liste' → logprob: -10.202191352844238
    8. ' la' → logprob: -10.577191352844238
    9. ' ' → logprob: -10.577191352844238
    10. 's' → logprob: -10.702191352844238

Token 164: ' it' (ID: 480)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.460908442735672
    2. 'list' → logprob: -1.0859084129333496
    3. 'ent' → logprob: -4.83590841293335
    4. 'iter' → logprob: -5.33590841293335
    5. 's' → logprob: -5.33590841293335
    6. ' liste' → logprob: -6.08590841293335
    7. 'a' → logprob: -6.21090841293335
    8. 'map' → logprob: -6.21090841293335
    9. ' iterable' → logprob: -6.21090841293335
    10. 'n' → logprob: -6.96090841293335

Token 165: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.20089411735534668
    2. 'ér' → logprob: -2.9508941173553467
    3. 'r' → logprob: -4.075894355773926
    4. 't' → logprob: -4.200894355773926
    5. 'ritable' → logprob: -4.825894355773926
    6. 'list' → logprob: -4.950894355773926
    7. 'table' → logprob: -4.950894355773926
    8. 'able' → logprob: -5.075894355773926
    9. 'N' → logprob: -5.200894355773926
    10. 'liste' → logprob: -5.325894355773926

Token 166: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -3.292907877039397e-06
    2. 'er' → logprob: -13.62500286102295
    3. 'ble' → logprob: -14.12500286102295
    4. ' iterable' → logprob: -14.50000286102295
    5. 'map' → logprob: -15.62500286102295
    6. 'nable' → logprob: -15.87500286102295
    7. '```' → logprob: -16.250003814697266
    8. 'table' → logprob: -16.500003814697266
    9. '   ' → logprob: -17.000003814697266
    10. '#' → logprob: -17.375003814697266

Token 167: ' d' (ID: 272)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.15912790596485138
    2. 'arr' → logprob: -3.034127950668335
    3. 'a' → logprob: -3.284127950668335
    4. 'lst' → logprob: -3.409127950668335
    5. ' A' → logprob: -5.159127712249756
    6. 'numbers' → logprob: -5.409127712249756
    7. 'values' → logprob: -5.659127712249756
    8. 'L' → logprob: -6.409127712249756
    9. 'd' → logprob: -6.534127712249756
    10. 'liste' → logprob: -6.659127712249756

Token 168: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6047465205192566
    2. 'int' → logprob: -1.2297465801239014
    3. 'inte' → logprob: -2.4797465801239014
    4. 'ints' → logprob: -2.7297465801239014
    5. 'N' → logprob: -5.729746341705322
    6. 'K' → logprob: -5.979746341705322
    7. ' ent' → logprob: -6.104746341705322
    8. 's' → logprob: -6.979746341705322
    9. ''ent' → logprob: -7.354746341705322
    10. 'val' → logprob: -7.604746341705322

Token 169: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -2.2200749754119897e-06
    2. 'ières' → logprob: -13.375001907348633
    3. 'i' → logprob: -14.500001907348633
    4. 'ier' → logprob: -17.250001907348633
    5. 'ieurs' → logprob: -17.750001907348633
    6. 'eurs' → logprob: -18.000001907348633
    7. 'ers' → logprob: -18.125001907348633
    8. '#' → logprob: -18.375001907348633
    9. '```' → logprob: -18.375001907348633
    10. 'ière' → logprob: -18.875001907348633

Token 170: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.21247562766075134
    2. 'arr' → logprob: -2.462475538253784
    3. 'a' → logprob: -2.837475538253784
    4. 'numbers' → logprob: -4.212475776672363
    5. ' A' → logprob: -4.462475776672363
    6. 'lst' → logprob: -5.587475776672363
    7. 'values' → logprob: -5.962475776672363
    8. 'data' → logprob: -6.462475776672363
    9. 'nums' → logprob: -6.587475776672363
    10. 'd' → logprob: -6.712475776672363

Token 171: '#' (ID: 2)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4647325873374939
    2. 'arr' → logprob: -1.5897326469421387
    3. 'a' → logprob: -2.7147326469421387
    4. 'numbers' → logprob: -3.5897326469421387
    5. 'lst' → logprob: -3.9647326469421387
    6. ' A' → logprob: -4.089732646942139
    7. 'values' → logprob: -4.964732646942139
    8. 'nums' → logprob: -5.464732646942139
    9. 'data' → logprob: -5.464732646942139
    10. 'L' → logprob: -5.839732646942139

Token 172: ' list' (ID: 1562)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7133334875106812
    2. 'arr' → logprob: -1.3383334875106812
    3. 'numbers' → logprob: -2.3383336067199707
    4. 'a' → logprob: -3.4633336067199707
    5. 'lst' → logprob: -3.7133336067199707
    6. 'values' → logprob: -3.8383336067199707
    7. 'nums' → logprob: -4.213333606719971
    8. ' A' → logprob: -4.463333606719971
    9. 'data' → logprob: -5.088333606719971
    10. 'L' → logprob: -5.588333606719971

Token 173: '(...)' (ID: 96375)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7440698742866516
    2. 's' → logprob: -2.119069814682007
    3. '_a' → logprob: -2.369069814682007
    4. '_values' → logprob: -2.994069814682007
    5. '_scores' → logprob: -3.119069814682007
    6. '_items' → logprob: -3.869069814682007
    7. '_p' → logprob: -4.119070053100586
    8. '_numbers' → logprob: -4.119070053100586
    9. '_points' → logprob: -4.244070053100586
    10. '_s' → logprob: -4.369070053100586

Token 174: ' convert' (ID: 8452)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8046952486038208
    2. 'A' → logprob: -2.0546951293945312
    3. 'scores' → logprob: -2.5546951293945312
    4. ' =' → logprob: -2.6796951293945312
    5. 'a' → logprob: -2.8046951293945312
    6. 'arr' → logprob: -3.5546951293945312
    7. 'values' → logprob: -4.179695129394531
    8. 'd' → logprob: -4.429695129394531
    9. 'numbers' → logprob: -4.554695129394531
    10. 's' → logprob: -4.679695129394531

Token 175: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.11287374794483185
    2. 'ir' → logprob: -2.7378737926483154
    3. '(' → logprob: -4.487873554229736
    4. 'e' → logprob: -5.112873554229736
    5. '(it' → logprob: -5.112873554229736
    6. '()' → logprob: -5.362873554229736
    7. 'issez' → logprob: -5.737873554229736
    8. 'irt' → logprob: -6.612873554229736
    9. '(list' → logprob: -6.862873554229736
    10. 'ie' → logprob: -6.862873554229736

Token 176: ' cet' (ID: 19505)
  Prédit: 'cet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cet' → logprob: -0.8229447603225708
    2. ' cet' → logprob: -1.1979447603225708
    3. 'l' → logprob: -2.6979446411132812
    4. 'ces' → logprob: -2.6979446411132812
    5. ' cette' → logprob: -3.1979446411132812
    6. '(map' → logprob: -3.6979446411132812
    7. 'ce' → logprob: -4.322944641113281
    8. ' l' → logprob: -4.447944641113281
    9. 'map' → logprob: -4.572944641113281
    10. 'la' → logprob: -5.072944641113281

Token 177: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.28348207473754883
    2. 'it' → logprob: -1.4084820747375488
    3. ' iterable' → logprob: -6.908482074737549
    4. 'iter' → logprob: -7.908482074737549
    5. '(it' → logprob: -7.908482074737549
    6. 'ité' → logprob: -8.40848159790039
    7. '[it' → logprob: -10.15848159790039
    8. ' iter' → logprob: -10.15848159790039
    9. '	it' → logprob: -10.28348159790039
    10. '_it' → logprob: -10.40848159790039

Token 178: 'ér' (ID: 2156)
  Prédit: 'able'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.11410842835903168
    2. 'er' → logprob: -3.6141083240509033
    3. 'utable' → logprob: -4.364108562469482
    4. 'ière' → logprob: -4.489108562469482
    5. 'ér' → logprob: -4.739108562469482
    6. 'e' → logprob: -4.864108562469482
    7. 'ensible' → logprob: -5.364108562469482
    8. 'itable' → logprob: -6.114108562469482
    9. '(list' → logprob: -6.489108562469482
    10. 'éré' → logprob: -6.614108562469482

Token 179: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.000344640837283805
    2. 'er' → logprob: -9.375344276428223
    3. 'table' → logprob: -9.500344276428223
    4. 'ble' → logprob: -9.625344276428223
    5. 'r' → logprob: -10.000344276428223
    6. 'ables' → logprob: -10.625344276428223
    7. 't' → logprob: -10.875344276428223
    8. 'al' → logprob: -11.875344276428223
    9. 'nable' → logprob: -12.125344276428223
    10. ' able' → logprob: -12.250344276428223

Token 180: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0544247068464756
    2. 'des' → logprob: -4.05442476272583
    3. ')' → logprob: -5.17942476272583
    4. 'd' → logprob: -5.30442476272583
    5. ' en' → logprob: -5.67942476272583
    6. '(en' → logprob: -6.42942476272583
    7. '()' → logprob: -6.55442476272583
    8. 'a' → logprob: -6.80442476272583
    9. 'arr' → logprob: -6.80442476272583
    10. 'de' → logprob: -7.05442476272583

Token 181: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.01830632984638214
    2. 'une' → logprob: -4.018306255340576
    3. ' liste' → logprob: -9.018306732177734
    4. 'liste' → logprob: -10.768306732177734
    5. '[]' → logprob: -12.393306732177734
    6. 'a' → logprob: -12.518306732177734
    7. ''une' → logprob: -13.143306732177734
    8. ' a' → logprob: -13.268306732177734
    9. 'Une' → logprob: -14.143306732177734
    10. ' un' → logprob: -14.893306732177734

Token 182: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.1654440015554428
    2. ' liste' → logprob: -1.915444016456604
    3. 'list' → logprob: -5.2904438972473145
    4. ' list' → logprob: -10.040444374084473
    5. '#' → logprob: -10.415444374084473
    6. 'Liste' → logprob: -10.665444374084473
    7. 'a' → logprob: -11.040444374084473
    8. 'table' → logprob: -11.790444374084473
    9. '[' → logprob: -11.790444374084473
    10. '```' → logprob: -11.915444374084473

Token 183: ' Python' (ID: 26534)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0358475036919117
    2. 'a' → logprob: -4.4108476638793945
    3. 'arr' → logprob: -4.7858476638793945
    4. 'numbers' → logprob: -5.5358476638793945
    5. ' A' → logprob: -6.2858476638793945
    6. 'values' → logprob: -6.4108476638793945
    7. 'lst' → logprob: -6.5358476638793945
    8. 'L' → logprob: -7.7858476638793945
    9. 'scores' → logprob: -7.9108476638793945
    10. '```' → logprob: -7.9108476638793945

Token 184: ' stock' (ID: 6546)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09356718510389328
    2. 'a' → logprob: -3.468567132949829
    3. 'arr' → logprob: -3.718567132949829
    4. 'numbers' → logprob: -4.218567371368408
    5. ' A' → logprob: -5.593567371368408
    6. 'lst' → logprob: -5.718567371368408
    7. 'values' → logprob: -5.718567371368408
    8. 'nums' → logprob: -7.093567371368408
    9. 'array' → logprob: -7.218567371368408
    10. 'cards' → logprob: -7.468567371368408

Token 185: 'ée' (ID: 2894)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.0816402435302734
    2. 'age' → logprob: -1.5816402435302734
    3. 'ée' → logprob: -1.7066402435302734
    4. 'e' → logprob: -2.5816402435302734
    5. 'ages' → logprob: -2.7066402435302734
    6. 'es' → logprob: -2.9566402435302734
    7. 'er' → logprob: -3.8316402435302734
    8. ' =' → logprob: -4.581640243530273
    9. 'a' → logprob: -4.706640243530273
    10. 'ent' → logprob: -5.081640243530273

Token 186: ' dans' (ID: 2671)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.30842602252960205
    2. 'a' → logprob: -1.558426022529602
    3. 'arr' → logprob: -4.4334259033203125
    4. 'en' → logprob: -4.8084259033203125
    5. 's' → logprob: -5.1834259033203125
    6. 'd' → logprob: -5.6834259033203125
    7. 'lst' → logprob: -6.1834259033203125
    8. 't' → logprob: -6.5584259033203125
    9. 'liste' → logprob: -6.5584259033203125
    10. 'scores' → logprob: -6.5584259033203125

Token 187: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.46604374051094055
    2. 'lst' → logprob: -1.8410437107086182
    3. 'arr' → logprob: -2.591043710708618
    4. 'a' → logprob: -3.341043710708618
    5. 'numbers' → logprob: -3.716043710708618
    6. 'liste' → logprob: -3.966043710708618
    7. 'L' → logprob: -4.341043949127197
    8. 'values' → logprob: -5.216043949127197
    9. 'data' → logprob: -5.341043949127197
    10. '```' → logprob: -5.341043949127197

Token 188: ' variable' (ID: 11076)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.4132228493690491
    2. 'A' → logprob: -2.2882227897644043
    3. 'lst' → logprob: -2.6632227897644043
    4. 'variable' → logprob: -3.1632227897644043
    5. 'array' → logprob: -3.4132227897644043
    6. 'list' → logprob: -3.6632227897644043
    7. 'variables' → logprob: -4.538222789764404
    8. 'data' → logprob: -5.038222789764404
    9. 'arr' → logprob: -5.038222789764404
    10. 'a' → logprob: -5.538222789764404

Token 189: ' H' (ID: 487)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1902923732995987
    2. 'numbers' → logprob: -2.6902923583984375
    3. 'arr' → logprob: -2.9402923583984375
    4. 'a' → logprob: -4.1902923583984375
    5. 'lst' → logprob: -4.6902923583984375
    6. 'L' → logprob: -5.3152923583984375
    7. 'values' → logprob: -5.4402923583984375
    8. ' A' → logprob: -5.9402923583984375
    9. '```' → logprob: -6.1902923583984375
    10. '`' → logprob: -6.3152923583984375

Token 190: '
' (ID: 198)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.007184410933405161
    2. ' =' → logprob: -5.5071845054626465
    3. '=' → logprob: -6.0071845054626465
    4. ' H' → logprob: -7.6321845054626465
    5. 's' → logprob: -9.882184028625488
    6. 'Hs' → logprob: -10.257184028625488
    7. '
' → logprob: -11.132184028625488
    8. ' 
' → logprob: -11.507184028625488
    9. '=
' → logprob: -11.632184028625488
    10. '[' → logprob: -12.007184028625488

Token 191: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.5776860184123507e-06
    2. '
' → logprob: -13.37500286102295
    3. ' H' → logprob: -14.00000286102295
    4. '```' → logprob: -16.625001907348633
    5. 's' → logprob: -18.625001907348633
    6. '
' → logprob: -18.750001907348633
    7. ' 
' → logprob: -19.000001907348633
    8. '  
' → logprob: -19.125001907348633
    9. '`' → logprob: -19.500001907348633
    10. 'h' → logprob: -19.750001907348633

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020763427019119
    2. ' =' → logprob: -2.350207567214966
    3. ',' → logprob: -14.225207328796387
    4. ' ' → logprob: -16.600208282470703
    5. '=[]' → logprob: -16.725208282470703
    6. '=list' → logprob: -16.725208282470703
    7. ' ' → logprob: -16.850208282470703
    8. '＝' → logprob: -17.225208282470703
    9. 's' → logprob: -17.475208282470703
    10. '=int' → logprob: -18.100208282470703

Token 193: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00861456897109747
    2. ' list' → logprob: -4.758614540100098
    3. 'map' → logprob: -18.133615493774414
    4. 'List' → logprob: -20.508615493774414
    5. '	list' → logprob: -20.883615493774414
    6. '=list' → logprob: -21.008615493774414
    7. '(list' → logprob: -22.008615493774414
    8. '[list' → logprob: -22.258615493774414
    9. 'li' → logprob: -22.883615493774414
    10. 'lst' → logprob: -23.008615493774414

Token 194: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002540109446272254
    2. '(' → logprob: -6.002540111541748
    3. '(int' → logprob: -9.75253963470459
    4. ' (' → logprob: -12.50253963470459
    5. '(
' → logprob: -13.12753963470459
    6. '(m' → logprob: -15.25253963470459
    7. 'map' → logprob: -16.252540588378906
    8. ',map' → logprob: -16.502540588378906
    9. '(ma' → logprob: -17.127540588378906
    10. '(mapping' → logprob: -17.252540588378906

Token 195: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011830847943201661
    2. '(' → logprob: -6.751183032989502
    3. 'int' → logprob: -11.87618350982666
    4. '<int' → logprob: -12.50118350982666
    5. '[int' → logprob: -13.87618350982666
    6. ' (' → logprob: -14.87618350982666
    7. '(
' → logprob: -14.87618350982666
    8. ',int' → logprob: -15.37618350982666
    9. '=int' → logprob: -15.62618350982666
    10. ' int' → logprob: -17.126182556152344

Token 196: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007356609217822552
    2. ',input' → logprob: -5.007356643676758
    3. ',' → logprob: -7.757356643676758
    4. '(' → logprob: -8.507356643676758
    5. ' (' → logprob: -12.007356643676758
    6. '=input' → logprob: -13.007356643676758
    7. 'input' → logprob: -13.132356643676758
    8. '(),' → logprob: -14.882356643676758
    9. ' ,' → logprob: -15.257356643676758
    10. ' input' → logprob: -15.632356643676758

Token 197: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0005567280459217727
    2. ' input' → logprob: -7.500556945800781
    3. '(input' → logprob: -12.500556945800781
    4. '<input' → logprob: -20.00055694580078
    5. '	input' → logprob: -20.37555694580078
    6. ',input' → logprob: -20.50055694580078
    7. ' ' → logprob: -20.87555694580078
    8. '=input' → logprob: -20.87555694580078
    9. '_input' → logprob: -20.87555694580078
    10. '[input' → logprob: -22.25055694580078

Token 198: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.1888679839321412e-05
    2. '()' → logprob: -10.750021934509277
    3. ' ().' → logprob: -14.750021934509277
    4. '()
' → logprob: -19.25002098083496
    5. '().'' → logprob: -20.25002098083496
    6. '().__' → logprob: -20.37502098083496
    7. '()).' → logprob: -20.50002098083496
    8. '()].' → logprob: -20.62502098083496
    9. '.' → logprob: -20.75002098083496
    10. '(' → logprob: -20.87502098083496

Token 199: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.246537173457909e-06
    2. ' split' → logprob: -12.500003814697266
    3. 'strip' → logprob: -15.625003814697266
    4. ')' → logprob: -15.875003814697266
    5. '(split' → logprob: -16.000003814697266
    6. '.split' → logprob: -16.875003814697266
    7. '().' → logprob: -18.125003814697266
    8. ').' → logprob: -18.125003814697266
    9. 'rstrip' → logprob: -18.625003814697266
    10. 'spl' → logprob: -18.750003814697266

Token 200: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0060057020746171474
    2. '()' → logprob: -5.256005764007568
    3. '())' → logprob: -7.506005764007568
    4. '))' → logprob: -8.50600528717041
    5. '()))
' → logprob: -12.00600528717041
    6. '(' → logprob: -12.00600528717041
    7. '()));' → logprob: -12.50600528717041
    8. '())))' → logprob: -13.63100528717041
    9. '())).' → logprob: -13.75600528717041
    10. '()))

' → logprob: -14.50600528717041

Token 201: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.0955369472503662
    2. 'result' → logprob: -1.2205369472503662
    3. 'max' → logprob: -1.8455369472503662
    4. 'count' → logprob: -2.595536947250366
    5. '#' → logprob: -3.345536947250366
    6. 'dp' → logprob: -3.345536947250366
    7. 'answer' → logprob: -4.345537185668945
    8. 'res' → logprob: -4.345537185668945
    9. 'total' → logprob: -4.720537185668945
    10. 'sorted' → logprob: -5.095537185668945

Token 202: ' Trier' (ID: 191551)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.4532465934753418
    2. 'dp' → logprob: -1.4532465934753418
    3. 'H' → logprob: -1.8282465934753418
    4. 'result' → logprob: -2.078246593475342
    5. 'count' → logprob: -2.328246593475342
    6. '#' → logprob: -2.703246593475342
    7. 'answer' → logprob: -3.828246593475342
    8. 'sorted' → logprob: -3.953246593475342
    9. 'ans' → logprob: -4.203246593475342
    10. 'for' → logprob: -5.453246593475342

Token 203: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0016486376989632845
    2. '(H' → logprob: -7.251648426055908
    3. '()' → logprob: -7.501648426055908
    4. '(' → logprob: -8.001648902893066
    5. '#' → logprob: -11.001648902893066
    6. ' H' → logprob: -11.001648902893066
    7. 's' → logprob: -11.751648902893066
    8. '(
' → logprob: -12.001648902893066
    9. ')' → logprob: -14.001648902893066
    10. '()
' → logprob: -14.751648902893066

Token 204: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.004647045861929655
    2. 'liste' → logprob: -5.879647254943848
    3. ' H' → logprob: -6.379647254943848
    4. ' liste' → logprob: -9.004647254943848
    5. 'list' → logprob: -11.379647254943848
    6. 's' → logprob: -12.254647254943848
    7. 'l' → logprob: -14.004647254943848
    8. 'lista' → logprob: -14.129647254943848
    9. '```' → logprob: -14.254647254943848
    10. 'lis' → logprob: -14.254647254943848

Token 205: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.2113979209971149e-05
    2. '(
' → logprob: -13.000012397766113
    3. ' H' → logprob: -13.250012397766113
    4. '(' → logprob: -13.750012397766113
    5. '()' → logprob: -13.750012397766113
    6. '.' → logprob: -14.000012397766113
    7. ',' → logprob: -14.250012397766113
    8. 's' → logprob: -14.250012397766113
    9. '.sort' → logprob: -14.250012397766113
    10. '(H' → logprob: -14.250012397766113

Token 206: ' par' (ID: 686)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0282526183873415
    2. '.sort' → logprob: -3.653252601623535
    3. '.' → logprob: -6.278252601623535
    4. '=' → logprob: -10.778252601623535
    5. 'sort' → logprob: -11.153252601623535
    6. '.H' → logprob: -11.903252601623535
    7. ')' → logprob: -12.528252601623535
    8. ' H' → logprob: -12.528252601623535
    9. '(H' → logprob: -12.528252601623535
    10. 'sorted' → logprob: -12.653252601623535

Token 207: ' ordre' (ID: 103061)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.4579331874847412
    2. ' ordre' → logprob: -1.4579331874847412
    3. 'd' → logprob: -2.582933187484741
    4. ' défaut' → logprob: -3.957933187484741
    5. 'H' → logprob: -4.45793342590332
    6. 'dé' → logprob: -4.83293342590332
    7. 'descending' → logprob: -5.33293342590332
    8. 'ord' → logprob: -6.33293342590332
    9. ''ordre' → logprob: -6.33293342590332
    10. 'val' → logprob: -6.45793342590332

Token 208: ' décro' (ID: 176854)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.008116872049868107
    2. ' cro' → logprob: -5.008116722106934
    3. 'asc' → logprob: -7.008116722106934
    4. ' décro' → logprob: -8.758116722106934
    5. 'cres' → logprob: -9.008116722106934
    6. 'd' → logprob: -9.883116722106934
    7. 'de' → logprob: -10.133116722106934
    8. 'Cro' → logprob: -10.383116722106934
    9. '#' → logprob: -11.008116722106934
    10. 'c' → logprob: -11.133116722106934

Token 209: 'issant' (ID: 31359)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2230243682861328
    2. 'sent' → logprob: -1.2230243682861328
    3. 'dent' → logprob: -1.2230243682861328
    4. 'desc' → logprob: -3.473024368286133
    5. 'issant' → logprob: -3.473024368286133
    6. 's' → logprob: -3.973024368286133
    7. 'de' → logprob: -3.973024368286133
    8. 'des' → logprob: -5.348024368286133
    9. 'ss' → logprob: -5.723024368286133
    10. '#' → logprob: -6.973024368286133

Token 210: ' (' (ID: 350)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.5776860184123507e-06
    2. '#' → logprob: -14.00000286102295
    3. ',' → logprob: -14.12500286102295
    4. ',
' → logprob: -15.62500286102295
    5. 's' → logprob: -15.75000286102295
    6. ')' → logprob: -15.87500286102295
    7. '
' → logprob: -16.125001907348633
    8. '.' → logprob: -16.250001907348633
    9. ' H' → logprob: -16.375001907348633
    10. ':
' → logprob: -16.875001907348633

Token 211: 'du' (ID: 698)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4857342541217804
    2. ')' → logprob: -0.985734224319458
    3. 'reverse' → logprob: -4.485734462738037
    4. ' H' → logprob: -8.860733985900879
    5. ' )' → logprob: -9.860733985900879
    6. ')
' → logprob: -10.110733985900879
    7. ' reverse' → logprob: -10.360733985900879
    8. ',' → logprob: -11.360733985900879
    9. '))' → logprob: -11.735733985900879
    10. '),' → logprob: -11.735733985900879

Token 212: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.8610312342643738
    2. 'plus' → logprob: -0.8610312342643738
    3. 'reverse' → logprob: -2.6110312938690186
    4. ' reverse' → logprob: -3.3610312938690186
    5. '=' → logprob: -4.2360310554504395
    6. ')' → logprob: -4.9860310554504395
    7. 'H' → logprob: -5.2360310554504395
    8. ' =' → logprob: -5.7360310554504395
    9. 'r' → logprob: -6.4860310554504395
    10. '#' → logprob: -6.7360310554504395

Token 213: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.08702502399682999
    2. ' grand' → logprob: -3.3370249271392822
    3. ' =' → logprob: -4.087025165557861
    4. '=' → logprob: -4.712025165557861
    5. 'gr' → logprob: -4.962025165557861
    6. ',' → logprob: -4.962025165557861
    7. 'à' → logprob: -6.337025165557861
    8. 'large' → logprob: -6.462025165557861
    9. ')' → logprob: -6.962025165557861
    10. 'd' → logprob: -7.087025165557861

Token 214: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4438725709915161
    2. 'au' → logprob: -1.5688725709915161
    3. ' au' → logprob: -2.0688724517822266
    4. 'à' → logprob: -4.318872451782227
    5. ' à' → logprob: -5.443872451782227
    6. ',' → logprob: -5.443872451782227
    7. ' )' → logprob: -7.443872451782227
    8. 'aux' → logprob: -8.568872451782227
    9. 'Au' → logprob: -8.693872451782227
    10. 'to' → logprob: -8.818872451782227

Token 215: ' plus' (ID: 2932)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.4851359724998474
    2. 'plus' → logprob: -0.9851359724998474
    3. 'H' → logprob: -5.610136032104492
    4. '#' → logprob: -5.860136032104492
    5. 'gr' → logprob: -6.360136032104492
    6. 'à' → logprob: -7.485136032104492
    7. '```' → logprob: -8.110136032104492
    8. 'large' → logprob: -8.235136032104492
    9. 'pet' → logprob: -8.485136032104492
    10. ' grand' → logprob: -8.610136032104492

Token 216: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.05798177793622017
    2. 'grand' → logprob: -2.9329817295074463
    3. 'plus' → logprob: -6.682981967926025
    4. ' petit' → logprob: -7.057981967926025
    5. '```' → logprob: -8.182981491088867
    6. '#' → logprob: -9.057981491088867
    7. 'pe' → logprob: -9.307981491088867
    8. 'prem' → logprob: -9.682981491088867
    9. 'p' → logprob: -9.932981491088867
    10. 'pu' → logprob: -10.182981491088867

Token 217: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033390238881111145
    2. ',' → logprob: -3.7833902835845947
    3. ')
' → logprob: -5.408390045166016
    4. 'H' → logprob: -5.533390045166016
    5. '))' → logprob: -6.658390045166016
    6. ' )' → logprob: -8.908390045166016
    7. ',H' → logprob: -9.908390045166016
    8. '))
' → logprob: -10.283390045166016
    9. ' ,' → logprob: -10.408390045166016
    10. '),' → logprob: -10.533390045166016

Token 218: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: 0.0
    2. ' H' → logprob: -17.25
    3. '#' → logprob: -18.0
    4. ')' → logprob: -19.25
    5. '
' → logprob: -20.25
    6. '	H' → logprob: -20.25
    7. ',' → logprob: -20.375
    8. '```' → logprob: -20.375
    9. '

' → logprob: -21.0
    10. 'sorted' → logprob: -21.125

Token 219: ' La' (ID: 3038)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -7.465036105713807e-06
    2. ' H' → logprob: -11.875007629394531
    3. '#' → logprob: -15.250007629394531
    4. 'Hs' → logprob: -16.62500762939453
    5. '
' → logprob: -17.50000762939453
    6. 'HS' → logprob: -17.62500762939453
    7. '	H' → logprob: -18.00000762939453
    8. '```' → logprob: -18.62500762939453
    9. 'sorted' → logprob: -18.75000762939453
    10. 'HT' → logprob: -19.37500762939453

Token 220: ' méthode' (ID: 71490)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0007113590254448354
    2. ' H' → logprob: -7.375711441040039
    3. '#' → logprob: -10.500711441040039
    4. 's' → logprob: -11.125711441040039
    5. 'sort' → logprob: -11.375711441040039
    6. 'reverse' → logprob: -11.375711441040039
    7. 'sorted' → logprob: -12.375711441040039
    8. 'liste' → logprob: -12.375711441040039
    9. 'list' → logprob: -13.625711441040039
    10. 'key' → logprob: -13.750711441040039

Token 221: ' sort' (ID: 4506)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4796808362007141
    2. ' H' → logprob: -1.7296807765960693
    3. 'sort' → logprob: -1.7296807765960693
    4. '.sort' → logprob: -3.8546807765960693
    5. ' sort' → logprob: -5.354681015014648
    6. '.' → logprob: -10.104681015014648
    7. '=' → logprob: -10.229681015014648
    8. ' .' → logprob: -10.229681015014648
    9. '().' → logprob: -10.229681015014648
    10. 'reverse' → logprob: -10.229681015014648

Token 222: '()' (ID: 416)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.00368368998169899
    2. 'reverse' → logprob: -6.628683567047119
    3. '(' → logprob: -6.753683567047119
    4. '()' → logprob: -7.378683567047119
    5. '(key' → logprob: -8.003684043884277
    6. '_reverse' → logprob: -9.253684043884277
    7. '(inplace' → logprob: -9.628684043884277
    8. '(sort' → logprob: -10.628684043884277
    9. '(H' → logprob: -11.753684043884277
    10. 'H' → logprob: -11.878684043884277

Token 223: ' mod' (ID: 1812)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.017565270885825157
    2. 'reverse' → logprob: -4.5175652503967285
    3. '(' → logprob: -6.1425652503967285
    4. '(inplace' → logprob: -6.8925652503967285
    5. '(key' → logprob: -7.1425652503967285
    6. 'H' → logprob: -7.2675652503967285
    7. '(H' → logprob: -7.3925652503967285
    8. '(sort' → logprob: -7.3925652503967285
    9. '(indent' → logprob: -8.267565727233887
    10. '(re' → logprob: -9.017565727233887

Token 224: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.042592134326696396
    2. 'e' → logprob: -3.6675920486450195
    3. 'if' → logprob: -4.4175920486450195
    4. 'ify' → logprob: -5.6675920486450195
    5. 'ifies' → logprob: -8.66759204864502
    6. 'ifier' → logprob: -9.04259204864502
    7. 'ifié' → logprob: -9.91759204864502
    8. 'èle' → logprob: -10.16759204864502
    9. 'è' → logprob: -10.29259204864502
    10. '()' → logprob: -10.41759204864502

Token 225: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6040932536125183
    2. 'H' → logprob: -0.9790932536125183
    3. ' la' → logprob: -3.229093313217163
    4. '(H' → logprob: -4.479093074798584
    5. 'la' → logprob: -4.604093074798584
    6. ' H' → logprob: -4.854093074798584
    7. '(' → logprob: -4.979093074798584
    8. '(reverse' → logprob: -7.479093074798584
    9. 'l' → logprob: -8.479093551635742
    10. ' ()' → logprob: -8.479093551635742

Token 226: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.03219082951545715
    2. ' liste' → logprob: -3.6571907997131348
    3. 'H' → logprob: -5.407190799713135
    4. 'list' → logprob: -6.782190799713135
    5. ' H' → logprob: -8.532191276550293
    6. 'lista' → logprob: -10.782191276550293
    7. ' list' → logprob: -12.032191276550293
    8. 'lis' → logprob: -12.157191276550293
    9. '#' → logprob: -12.282191276550293
    10. 'la' → logprob: -12.532191276550293

Token 227: ' en' (ID: 469)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4111355245113373
    2. '(H' → logprob: -1.6611355543136597
    3. '(reverse' → logprob: -2.03613543510437
    4. '(inplace' → logprob: -5.036135673522949
    5. 'reverse' → logprob: -5.786135673522949
    6. ' H' → logprob: -5.786135673522949
    7. '(' → logprob: -6.286135673522949
    8. ' (' → logprob: -7.786135673522949
    9. '(key' → logprob: -8.28613567352295
    10. 'inverse' → logprob: -8.53613567352295

Token 228: ' place' (ID: 2475)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.0035280867014080286
    2. ' place' → logprob: -5.753528118133545
    3. '-place' → logprob: -8.253527641296387
    4. 'plac' → logprob: -9.503527641296387
    5. 'pla' → logprob: -12.753527641296387
    6. ' ' → logprob: -12.753527641296387
    7. '_place' → logprob: -12.753527641296387
    8. 'Place' → logprob: -13.253527641296387
    9. 'pl' → logprob: -13.253527641296387
    10. 'lie' → logprob: -13.753527641296387

Token 229: '
' (ID: 198)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.12665097415447235
    2. '(H' → logprob: -2.7516510486602783
    3. '(reverse' → logprob: -3.0016510486602783
    4. 'reverse' → logprob: -5.876650810241699
    5. ' H' → logprob: -6.876650810241699
    6. '(key' → logprob: -7.501650810241699
    7. '(' → logprob: -7.876650810241699
    8. ',' → logprob: -8.3766508102417
    9. ' (' → logprob: -9.1266508102417
    10. '(sort' → logprob: -9.2516508102417

Token 230: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -7.896309739408025e-07
    2. ' H' → logprob: -14.500000953674316
    3. '
' → logprob: -15.875000953674316
    4. '```' → logprob: -16.75
    5. ',' → logprob: -17.125
    6. ')' → logprob: -17.5
    7. ')
' → logprob: -17.875
    8. ',
' → logprob: -18.625
    9. '(H' → logprob: -18.625
    10. '#' → logprob: -18.75

Token 231: ' reverse' (ID: 18199)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -5.5577775128767826e-06
    2. ' H' → logprob: -12.125005722045898
    3. '#' → logprob: -18.2500057220459
    4. '
' → logprob: -20.0000057220459
    5. '```' → logprob: -20.1250057220459
    6. '   ' → logprob: -20.7500057220459
    7. '	H' → logprob: -21.2500057220459
    8. ' ' → logprob: -21.3750057220459
    9. '_H' → logprob: -22.0000057220459
    10. ' ' → logprob: -22.1250057220459

Token 232: '=True' (ID: 7827)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47410884499549866
    2. '=True' → logprob: -0.9741088151931763
    3. ' =' → logprob: -10.724108695983887
    4. '=T' → logprob: -11.724108695983887
    5. '=
' → logprob: -14.099108695983887
    6. '=False' → logprob: -15.349108695983887
    7. '=

' → logprob: -15.349108695983887
    8. ')' → logprob: -16.224109649658203
    9. '=B' → logprob: -16.849109649658203
    10. '   ' → logprob: -16.974109649658203

Token 233: ' indique' (ID: 97324)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07168684154748917
    2. ')
' → logprob: -3.1966867446899414
    3. 'H' → logprob: -3.5716867446899414
    4. ',' → logprob: -9.446686744689941
    5. ')

' → logprob: -10.821686744689941
    6. '=' → logprob: -11.071686744689941
    7. ',H' → logprob: -11.321686744689941
    8. '(H' → logprob: -11.946686744689941
    9. ')
' → logprob: -12.071686744689941
    10. ' H' → logprob: -12.321686744689941

Token 234: ' que' (ID: 661)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.43166255950927734
    2. ' que' → logprob: -1.1816625595092773
    3. '=' → logprob: -3.3066625595092773
    4. 'que' → logprob: -6.431662559509277
    5. 'True' → logprob: -6.556662559509277
    6. ' that' → logprob: -7.181662559509277
    7. ' True' → logprob: -7.181662559509277
    8. ')' → logprob: -7.181662559509277
    9. ',' → logprob: -7.806662559509277
    10. ' la' → logprob: -8.306662559509277

Token 235: ' le' (ID: 505)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.017757000401616096
    2. ' H' → logprob: -4.142756938934326
    3. ' la' → logprob: -7.392756938934326
    4. 'l' → logprob: -8.017757415771484
    5. 'la' → logprob: -8.017757415771484
    6. 'True' → logprob: -8.642757415771484
    7. '#' → logprob: -8.767757415771484
    8. ' l' → logprob: -10.767757415771484
    9. ' True' → logprob: -10.767757415771484
    10. 'le' → logprob: -11.142757415771484

Token 236: ' tri' (ID: 12665)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.26842597126960754
    2. ' tri' → logprob: -1.7684259414672852
    3. 'ordre' → logprob: -3.393425941467285
    4. 'liste' → logprob: -4.393425941467285
    5. 'sort' → logprob: -5.018425941467285
    6. 'sens' → logprob: -5.768425941467285
    7. 'list' → logprob: -6.018425941467285
    8. 'H' → logprob: -6.018425941467285
    9. '#' → logprob: -6.643425941467285
    10. 'tr' → logprob: -7.143425941467285

Token 237: ' doit' (ID: 21822)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46608343720436096
    2. '=True' → logprob: -1.7160834074020386
    3. ')' → logprob: -2.091083526611328
    4. 's' → logprob: -3.841083526611328
    5. ',' → logprob: -5.216083526611328
    6. ' est' → logprob: -5.591083526611328
    7. ' permet' → logprob: -5.591083526611328
    8. ' doit' → logprob: -5.591083526611328
    9. 'H' → logprob: -5.841083526611328
    10. ' s' → logprob: -6.216083526611328

Token 238: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.7182496190071106
    2. ' se' → logprob: -1.3432495594024658
    3. ' être' → logprob: -2.093249559402466
    4. 's' → logprob: -2.468249559402466
    5. ' s' → logprob: -3.968249559402466
    6. 'se' → logprob: -4.093249797821045
    7. '#' → logprob: -6.968249797821045
    8. 'ê' → logprob: -7.343249797821045
    9. 'êtres' → logprob: -7.343249797821045
    10. ' ' → logprob: -7.593249797821045

Token 239: ' fait' (ID: 7473)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2822819948196411
    2. ' True' → logprob: -1.6572819948196411
    3. ' effectué' → logprob: -3.7822818756103516
    4. 'dans' → logprob: -4.032281875610352
    5. 'effect' → logprob: -4.782281875610352
    6. 'fait' → logprob: -5.907281875610352
    7. ' effectu' → logprob: -7.157281875610352
    8. ' effect' → logprob: -7.782281875610352
    9. '=True' → logprob: -7.907281875610352
    10. 'd' → logprob: -8.157281875610352

Token 240: ' en' (ID: 469)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.9758362174034119
    2. ',' → logprob: -1.1008362770080566
    3. ' dans' → logprob: -2.2258362770080566
    4. 'H' → logprob: -2.6008362770080566
    5. 'en' → logprob: -2.8508362770080566
    6. ' en' → logprob: -3.7258362770080566
    7. 'reverse' → logprob: -4.850836277008057
    8. ' H' → logprob: -5.600836277008057
    9. ' reverse' → logprob: -6.100836277008057
    10. ' à' → logprob: -6.225836277008057

Token 241: ' ordre' (ID: 103061)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.041777294129133224
    2. 'reverse' → logprob: -3.7917773723602295
    3. 'ordre' → logprob: -4.16677713394165
    4. '-place' → logprob: -6.29177713394165
    5. 'True' → logprob: -7.41677713394165
    6. ' place' → logprob: -9.291777610778809
    7. '```' → logprob: -10.041777610778809
    8. 'H' → logprob: -10.291777610778809
    9. 'd' → logprob: -10.541777610778809
    10. 'order' → logprob: -10.541777610778809

Token 242: ' inverse' (ID: 53743)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -1.2531626224517822
    2. 'd' → logprob: -1.8781626224517822
    3. '=' → logprob: -2.1281626224517822
    4. 'desc' → logprob: -2.3781626224517822
    5. 'inverse' → logprob: -2.3781626224517822
    6. 'de' → logprob: -2.7531626224517822
    7. 'dec' → logprob: -2.8781626224517822
    8. 'descending' → logprob: -3.0031626224517822
    9. '=True' → logprob: -3.2531626224517822
    10. ' décro' → logprob: -3.6281626224517822

Token 243: ' (' (ID: 350)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00013953536108601838
    2. ')
' → logprob: -9.875139236450195
    3. '
' → logprob: -10.125139236450195
    4. ',' → logprob: -11.125139236450195
    5. ' H' → logprob: -11.125139236450195
    6. ')' → logprob: -11.500139236450195
    7. ',
' → logprob: -12.250139236450195
    8. '#' → logprob: -14.125139236450195
    9. '```' → logprob: -14.625139236450195
    10. ').' → logprob: -15.625139236450195

Token 244: 'd' (ID: 67)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11922379583120346
    2. 'True' → logprob: -2.3692238330841064
    3. '))' → logprob: -4.744223594665527
    4. '=True' → logprob: -5.369223594665527
    5. ' True' → logprob: -5.494223594665527
    6. 'ordre' → logprob: -7.619223594665527
    7. ' )' → logprob: -8.744223594665527
    8. ')
' → logprob: -9.119223594665527
    9. '(True' → logprob: -9.119223594665527
    10. 'de' → logprob: -9.244223594665527

Token 245: 'éc' (ID: 5675)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -1.313729166984558
    2. ''ordre' → logprob: -1.313729166984558
    3. '=' → logprob: -1.938729166984558
    4. 'e' → logprob: -2.8137292861938477
    5. '=True' → logprob: -2.8137292861938477
    6. 'place' → logprob: -3.3137292861938477
    7. 'é' → logprob: -3.4387292861938477
    8. ')' → logprob: -3.5637292861938477
    9. '’ordre' → logprob: -4.313729286193848
    10. '```' → logprob: -4.438729286193848

Token 246: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -1.1825731992721558
    2. 'endant' → logprob: -1.3075731992721558
    3. 'sent' → logprob: -1.9325731992721558
    4. 'end' → logprob: -2.9325733184814453
    5. ')' → logprob: -3.4325733184814453
    6. 'ending' → logprob: -3.4325733184814453
    7. 'res' → logprob: -3.5575733184814453
    8. 'r' → logprob: -4.307573318481445
    9. 'al' → logprob: -4.432573318481445
    10. 'rend' → logprob: -4.432573318481445

Token 247: 'issant' (ID: 31359)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -1.0638662576675415
    2. 's' → logprob: -1.4388662576675415
    3. 'issant' → logprob: -1.9388662576675415
    4. 'd' → logprob: -2.563866138458252
    5. 'sent' → logprob: -2.688866138458252
    6. 'sc' → logprob: -3.688866138458252
    7. 'asant' → logprob: -3.938866138458252
    8. 'nd' → logprob: -4.063866138458252
    9. 'ding' → logprob: -4.063866138458252
    10. 'sd' → logprob: -4.313866138458252

Token 248: ')
' (ID: 446)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3139384388923645
    2. ')' → logprob: -1.3139383792877197
    3. '))
' → logprob: -7.813938617706299
    4. ')
' → logprob: -8.68893814086914
    5. '#' → logprob: -9.93893814086914
    6. 'H' → logprob: -10.93893814086914
    7. ')))' → logprob: -11.68893814086914
    8. '));' → logprob: -11.93893814086914
    9. ',' → logprob: -12.56393814086914
    10. ')#' → logprob: -12.68893814086914

Token 249: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: 0.0
    2. ' H' → logprob: -18.375
    3. '```' → logprob: -20.5
    4. '
' → logprob: -21.625
    5. '	H' → logprob: -22.75
    6. '#' → logprob: -23.125
    7. '_H' → logprob: -23.75
    8. '   ' → logprob: -24.25
    9. '(H' → logprob: -24.25
    10. '  
' → logprob: -24.75

Token 250: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.004080301150679588
    2. '.' → logprob: -5.504080295562744
    3. '.reverse' → logprob: -14.004080772399902
    4. ' .' → logprob: -14.129080772399902
    5. '.sorted' → logprob: -16.504079818725586
    6. '.s' → logprob: -16.879079818725586
    7. ').' → logprob: -17.504079818725586
    8. '.
' → logprob: -18.004079818725586
    9. '.Sort' → logprob: -18.254079818725586
    10. 'sort' → logprob: -18.379079818725586

Token 251: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -3.79811754100956e-05
    2. '(' → logprob: -10.500038146972656
    3. 'reverse' → logprob: -11.500038146972656
    4. '(re' → logprob: -16.500038146972656
    5. ' reverse' → logprob: -16.625038146972656
    6. '()' → logprob: -17.000038146972656
    7. '.reverse' → logprob: -17.125038146972656
    8. '_reverse' → logprob: -17.500038146972656
    9. '(key' → logprob: -17.750038146972656
    10. '(
' → logprob: -17.875038146972656

Token 252: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.003178071230649948
    2. '=' → logprob: -5.753178119659424
    3. ')' → logprob: -16.003177642822266
    4. '=T' → logprob: -16.003177642822266
    5. ')=' → logprob: -16.628177642822266
    6. '=
' → logprob: -18.128177642822266
    7. ' =' → logprob: -18.503177642822266
    8. 'True' → logprob: -19.128177642822266
    9. '=False' → logprob: -20.003177642822266
    10. '(True' → logprob: -20.003177642822266

Token 253: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -16.125
    4. '))' → logprob: -17.125
    5. ')#' → logprob: -18.0
    6. ')

' → logprob: -18.875
    7. '),' → logprob: -19.0
    8. ')`' → logprob: -19.5
    9. '())' → logprob: -20.0
    10. '#' → logprob: -20.375

Token 254: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8772909045219421
    2. 'result' → logprob: -1.877290964126587
    3. 'sum' → logprob: -2.127290964126587
    4. 'total' → logprob: -2.252290964126587
    5. 'print' → logprob: -2.877290964126587
    6. 'count' → logprob: -3.252290964126587
    7. 'ans' → logprob: -4.252290725708008
    8. 's' → logprob: -4.252290725708008
    9. 'answer' → logprob: -4.252290725708008
    10. '#' → logprob: -4.752290725708008

Token 255: ' Ex' (ID: 1771)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5269001722335815
    2. 'result' → logprob: -1.6519001722335815
    3. 'count' → logprob: -1.7769001722335815
    4. 'total' → logprob: -2.151900291442871
    5. 'sum' → logprob: -2.276900291442871
    6. '#' → logprob: -2.776900291442871
    7. 's' → logprob: -2.901900291442871
    8. 'answer' → logprob: -3.901900291442871
    9. 'som' → logprob: -4.276900291442871
    10. 'print' → logprob: -4.651900291442871

Token 256: 'cl' (ID: 565)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0620566606521606
    2. 'ceed' → logprob: -1.3120566606521606
    3. 'cess' → logprob: -2.687056541442871
    4. 'p' → logprob: -2.937056541442871
    5. 'counter' → logprob: -2.937056541442871
    6. 'c' → logprob: -3.187056541442871
    7. 'sum' → logprob: -3.687056541442871
    8. 'count' → logprob: -3.937056541442871
    9. 't' → logprob: -4.187056541442871
    10. 'result' → logprob: -4.312056541442871

Token 257: 'ure' (ID: 627)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7814468145370483
    2. 'lude' → logprob: -1.9064468145370483
    3. 'act' → logprob: -2.156446933746338
    4. 'clude' → logprob: -3.406446933746338
    5. 'ur' → logprob: -3.781446933746338
    6. 'amine' → logprob: -3.906446933746338
    7. 'cl' → logprob: -4.156446933746338
    8. 'er' → logprob: -4.156446933746338
    9. 'for' → logprob: -4.281446933746338
    10. 'cept' → logprob: -4.281446933746338

Token 258: ' (' (ID: 350)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0950134992599487
    2. ' la' → logprob: -1.5950134992599487
    3. 's' → logprob: -2.0950136184692383
    4. 'K' → logprob: -2.2200136184692383
    5. ' K' → logprob: -2.7200136184692383
    6. 'les' → logprob: -2.8450136184692383
    7. 'H' → logprob: -3.7200136184692383
    8. ' le' → logprob: -3.7200136184692383
    9. '<|end|>' → logprob: -3.9700136184692383
    10. 'le' → logprob: -4.095013618469238

Token 259: 'en' (ID: 262)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4104959964752197
    2. 'les' → logprob: -1.4104959964752197
    3. ')' → logprob: -3.2854959964752197
    4. 'H' → logprob: -3.9104959964752197
    5. ' la' → logprob: -4.535495758056641
    6. 'la' → logprob: -5.285495758056641
    7. 'le' → logprob: -5.410495758056641
    8. 'K' → logprob: -5.535495758056641
    9. ' H' → logprob: -5.660495758056641
    10. 's' → logprob: -6.035495758056641

Token 260: 'lever' (ID: 43558)
  Prédit: 'lever'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -1.319200038909912
    2. 's' → logprob: -1.819200038909912
    3. 'slice' → logprob: -2.194200038909912
    4. ' garder' → logprob: -2.319200038909912
    5. 'H' → logprob: -2.694200038909912
    6. ' prendre' → logprob: -3.069200038909912
    7. ' prenant' → logprob: -3.319200038909912
    8. 'tr' → logprob: -3.444200038909912
    9. 'prendre' → logprob: -3.944200038909912
    10. ')' → logprob: -4.569200038909912

Token 261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19134704768657684
    2. ' les' → logprob: -2.066347122192383
    3. 'les' → logprob: -3.816347122192383
    4. ' la' → logprob: -4.691347122192383
    5. 'le' → logprob: -5.691347122192383
    6. 's' → logprob: -5.816347122192383
    7. 'K' → logprob: -5.941347122192383
    8. 'H' → logprob: -6.316347122192383
    9. ' K' → logprob: -6.441347122192383
    10. ' )' → logprob: -6.566347122192383

Token 262: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.15332791209220886
    2. 'les' → logprob: -2.5283279418945312
    3. 'K' → logprob: -4.028327941894531
    4. 'le' → logprob: -4.403327941894531
    5. ' la' → logprob: -4.403327941894531
    6. ' K' → logprob: -4.903327941894531
    7. ' le' → logprob: -4.903327941894531
    8. 's' → logprob: -6.403327941894531
    9. 'la' → logprob: -6.403327941894531
    10. 'H' → logprob: -7.778327941894531

Token 263: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.06233512610197067
    2. ' K' → logprob: -2.9373350143432617
    3. 'prem' → logprob: -5.187335014343262
    4. ' premiers' → logprob: -7.312335014343262
    5. 'plus' → logprob: -7.437335014343262
    6. 'k' → logprob: -8.812335014343262
    7. 'N' → logprob: -9.187335014343262
    8. ' plus' → logprob: -9.312335014343262
    9. 'first' → logprob: -10.437335014343262
    10. ' premières' → logprob: -10.437335014343262

Token 264: ' premiers' (ID: 59140)
  Prédit: ' premiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -1.071438193321228
    2. 'plus' → logprob: -1.446438193321228
    3. 'prem' → logprob: -1.571438193321228
    4. ' premières' → logprob: -2.1964383125305176
    5. ' plus' → logprob: -3.3214383125305176
    6. ' éléments' → logprob: -3.6964383125305176
    7. '+' → logprob: -4.446438312530518
    8. 'largest' → logprob: -5.446438312530518
    9. ' premier' → logprob: -5.696438312530518
    10. 'élé' → logprob: -5.821438312530518

Token 265: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.011035447008907795
    2. ' éléments' → logprob: -4.886035442352295
    3. 'elements' → logprob: -6.511035442352295
    4. 'H' → logprob: -7.011035442352295
    5. 'é' → logprob: -8.011035919189453
    6. '#' → logprob: -9.136035919189453
    7. 'él' → logprob: -9.636035919189453
    8. ' H' → logprob: -9.636035919189453
    9. ' ' → logprob: -9.761035919189453
    10. 'elem' → logprob: -10.011035919189453

Token 266: ' de' (ID: 334)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.15342208743095398
    2. 'del' → logprob: -2.0284221172332764
    3. 'de' → logprob: -5.278421878814697
    4. 'for' → logprob: -6.528421878814697
    5. 'd' → logprob: -7.278421878814697
    6. 'rest' → logprob: -7.278421878814697
    7. '=' → logprob: -7.278421878814697
    8. ' del' → logprob: -7.653421878814697
    9. ' H' → logprob: -7.653421878814697
    10. 's' → logprob: -7.778421878814697

Token 267: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0032513891346752644
    2. ' H' → logprob: -5.753251552581787
    3. 'la' → logprob: -10.253251075744629
    4. ' la' → logprob: -10.253251075744629
    5. ' ' → logprob: -13.628251075744629
    6. 'l' → logprob: -13.878251075744629
    7. '`' → logprob: -15.253251075744629
    8. ' ' → logprob: -15.378251075744629
    9. ''H' → logprob: -15.503251075744629
    10. 'the' → logprob: -16.503252029418945

Token 268: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.005103779956698418
    2. 'liste' → logprob: -5.380103588104248
    3. ' H' → logprob: -8.380104064941406
    4. 'list' → logprob: -8.505104064941406
    5. ' liste' → logprob: -10.505104064941406
    6. '#' → logprob: -11.630104064941406
    7. 'lista' → logprob: -13.005104064941406
    8. '```' → logprob: -13.630104064941406
    9. 'Hs' → logprob: -13.880104064941406
    10. 'l' → logprob: -14.005104064941406

Token 269: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.002187256934121251
    2. ' H' → logprob: -6.502187252044678
    3. 'rest' → logprob: -8.127187728881836
    4. '=' → logprob: -8.877187728881836
    5. ' =' → logprob: -9.127187728881836
    6. ',' → logprob: -10.002187728881836
    7. 'del' → logprob: -10.877187728881836
    8. 's' → logprob: -11.002187728881836
    9. 'de' → logprob: -11.877187728881836
    10. ':' → logprob: -11.877187728881836

Token 270: '
' (ID: 198)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.013141527771949768
    2. '=' → logprob: -4.513141632080078
    3. ' =' → logprob: -6.263141632080078
    4. 'remaining' → logprob: -9.388141632080078
    5. 'rest' → logprob: -10.638141632080078
    6. ' H' → logprob: -10.763141632080078
    7. 'del' → logprob: -10.888141632080078
    8. '#' → logprob: -11.638141632080078
    9. 'result' → logprob: -12.138141632080078
    10. ',' → logprob: -12.388141632080078

Token 271: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.01938982494175434
    2. ' =' → logprob: -5.019389629364014
    3. '=' → logprob: -5.144389629364014
    4. 'remaining' → logprob: -5.769389629364014
    5. ' H' → logprob: -6.394389629364014
    6. 'rest' → logprob: -7.644389629364014
    7. 'ans' → logprob: -7.894389629364014
    8. 'for' → logprob: -8.144390106201172
    9. 'del' → logprob: -8.644390106201172
    10. 'result' → logprob: -9.269390106201172

Token 272: ' L' (ID: 451)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06736817955970764
    2. 'remaining' → logprob: -3.567368268966675
    3. ' H' → logprob: -3.817368268966675
    4. 'rest' → logprob: -5.317368030548096
    5. '=' → logprob: -6.567368030548096
    6. ' remaining' → logprob: -6.567368030548096
    7. 'for' → logprob: -6.817368030548096
    8. ' =' → logprob: -6.942368030548096
    9. 'ans' → logprob: -7.067368030548096
    10. 'res' → logprob: -7.192368030548096

Token 273: ''op' (ID: 70747)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.037545252591371536
    2. ' =' → logprob: -4.412545204162598
    3. 'e' → logprob: -5.162545204162598
    4. '=' → logprob: -5.537545204162598
    5. 'ist' → logprob: -6.162545204162598
    6. 'est' → logprob: -6.162545204162598
    7. '#' → logprob: -6.662545204162598
    8. 'ex' → logprob: -6.912545204162598
    9. 'et' → logprob: -6.912545204162598
    10. ' H' → logprob: -7.037545204162598

Token 274: 'ération' (ID: 24977)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.23024454712867737
    2. 'us' → logprob: -2.2302446365356445
    3. 'ération' → logprob: -2.8552446365356445
    4. '=' → logprob: -5.2302446365356445
    5. 'slice' → logprob: -5.2302446365356445
    6. 'age' → logprob: -5.4802446365356445
    7. 'code' → logprob: -6.1052446365356445
    8. 'érateur' → logprob: -6.2302446365356445
    9. 's' → logprob: -6.3552446365356445
    10. 'lus' → logprob: -6.4802446365356445

Token 275: ' de' (ID: 334)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.8066993355751038
    2. ' =' → logprob: -0.9316993355751038
    3. '=' → logprob: -2.306699275970459
    4. ' H' → logprob: -3.306699275970459
    5. 'rest' → logprob: -4.806699275970459
    6. ' restante' → logprob: -5.431699275970459
    7. 'remaining' → logprob: -5.556699275970459
    8. ' rest' → logprob: -6.181699275970459
    9. 's' → logprob: -6.806699275970459
    10. ' remaining' → logprob: -7.556699275970459

Token 276: ' décou' (ID: 68302)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.9576912522315979
    2. 's' → logprob: -0.9576912522315979
    3. ' slicing' → logprob: -2.332691192626953
    4. 'tr' → logprob: -2.707691192626953
    5. ' tr' → logprob: -3.957691192626953
    6. 'slice' → logprob: -4.207691192626953
    7. ' H' → logprob: -4.207691192626953
    8. ' décou' → logprob: -5.082691192626953
    9. 'liste' → logprob: -5.707691192626953
    10. '=' → logprob: -5.707691192626953

Token 277: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.00016599490481894463
    2. 'pe' → logprob: -8.750165939331055
    3. 'Page' → logprob: -12.500165939331055
    4. 'p' → logprob: -12.750165939331055
    5. ' page' → logprob: -14.500165939331055
    6. 'PAGE' → logprob: -16.000165939331055
    7. '_page' → logprob: -16.500165939331055
    8. 'pages' → logprob: -16.750165939331055
    9. 'pag' → logprob: -16.875165939331055
    10. '.page' → logprob: -17.250165939331055

Token 278: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07386515289545059
    2. ' H' → logprob: -2.6988651752471924
    3. '[' → logprob: -6.323864936828613
    4. 's' → logprob: -7.448864936828613
    5. ' =' → logprob: -8.073864936828613
    6. ' de' → logprob: -8.073864936828613
    7. '=' → logprob: -8.573864936828613
    8. '[:]' → logprob: -8.698864936828613
    9. 'de' → logprob: -8.948864936828613
    10. ' sur' → logprob: -9.698864936828613

Token 279: '[K' (ID: 137571)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.252076119184494
    2. ' =' → logprob: -1.5020761489868164
    3. '[K' → logprob: -9.252076148986816
    4. 'H' → logprob: -10.877076148986816
    5. 'K' → logprob: -11.877076148986816
    6. '＝' → logprob: -12.252076148986816
    7. '[' → logprob: -12.502076148986816
    8. '=
' → logprob: -13.002076148986816
    9. 's' → logprob: -13.502076148986816
    10. '=k' → logprob: -13.627076148986816

Token 280: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -4.060365608893335e-05
    2. ' :]' → logprob: -10.750041007995605
    3. ':' → logprob: -11.375041007995605
    4. ':],' → logprob: -12.250041007995605
    5. ']' → logprob: -13.250041007995605
    6. ':]
' → logprob: -14.625041007995605
    7. ':].' → logprob: -15.125041007995605
    8. ':]

' → logprob: -15.500041007995605
    9. '[' → logprob: -15.750041007995605
    10. '[:]' → logprob: -17.25004005432129

Token 281: ' prend' (ID: 37463)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 282: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.45226389169692993
    2. 'la' → logprob: -1.3272638320922852
    3. 'les' → logprob: -2.827263832092285
    4. 'une' → logprob: -4.077263832092285
    5. 'tout' → logprob: -4.702263832092285
    6. ' la' → logprob: -5.202263832092285
    7. ' tous' → logprob: -5.702263832092285
    8. 'le' → logprob: -5.827263832092285
    9. ' les' → logprob: -7.452263832092285
    10. ' une' → logprob: -8.327263832092285

Token 283: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.483526349067688
    2. ' les' → logprob: -0.983526349067688
    3. 'élé' → logprob: -4.983526229858398
    4. 'H' → logprob: -7.233526229858398
    5. ' éléments' → logprob: -7.858526229858398
    6. ' ' → logprob: -8.108526229858398
    7. ' ' → logprob: -8.358526229858398
    8. ' H' → logprob: -8.858526229858398
    9. 'le' → logprob: -8.983526229858398
    10. '<|end|>' → logprob: -9.233526229858398

Token 284: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.006845495663583279
    2. ' éléments' → logprob: -5.006845474243164
    3. 'él' → logprob: -9.631845474243164
    4. 'elements' → logprob: -10.256845474243164
    5. 'é' → logprob: -11.006845474243164
    6. 'el' → logprob: -12.756845474243164
    7. 'H' → logprob: -13.256845474243164
    8. '#' → logprob: -13.631845474243164
    9. ' ' → logprob: -13.756845474243164
    10. ' ' → logprob: -13.756845474243164

Token 285: ' de' (ID: 334)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.21155846118927002
    2. 'de' → logprob: -1.96155846118927
    3. 'ap' → logprob: -3.7115583419799805
    4. ' à' → logprob: -4.0865583419799805
    5. ' de' → logprob: -5.7115583419799805
    6. ' après' → logprob: -6.2115583419799805
    7. ' ' → logprob: -6.8365583419799805
    8. 'dep' → logprob: -7.2115583419799805
    9. '#' → logprob: -8.08655834197998
    10. 'H' → logprob: -8.71155834197998

Token 286: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.19268092513084412
    2. ' la' → logprob: -2.192680835723877
    3. 'la' → logprob: -3.067680835723877
    4. ' H' → logprob: -4.192680835723877
    5. 'l' → logprob: -6.317680835723877
    6. ' ' → logprob: -10.067681312561035
    7. 'liste' → logprob: -10.692681312561035
    8. ' l' → logprob: -10.817681312561035
    9. ' ' → logprob: -10.942681312561035
    10. 'the' → logprob: -11.067681312561035

Token 287: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.026712315157055855
    2. ' à' → logprob: -4.026712417602539
    3. 'ap' → logprob: -5.901712417602539
    4. 'dep' → logprob: -5.901712417602539
    5. ',' → logprob: -6.401712417602539
    6. ' après' → logprob: -7.401712417602539
    7. '```' → logprob: -9.026712417602539
    8. 'de' → logprob: -9.026712417602539
    9. ' ' → logprob: -9.526712417602539
    10. 'au' → logprob: -9.776712417602539

Token 288: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.25812989473342896
    2. 'part' → logprob: -1.5081298351287842
    3. 'l' → logprob: -5.133130073547363
    4. 'index' → logprob: -9.383130073547363
    5. 'par' → logprob: -9.758130073547363
    6. ' ' → logprob: -10.258130073547363
    7. ' l' → logprob: -10.383130073547363
    8. 'la' → logprob: -11.383130073547363
    9. 'indice' → logprob: -11.508130073547363
    10. ' partire' → logprob: -11.633130073547363

Token 289: ' de' (ID: 334)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.20732355117797852
    2. 'l' → logprob: -2.2073235511779785
    3. 'de' → logprob: -3.5823235511779785
    4. ' de' → logprob: -3.9573235511779785
    5. ' K' → logprob: -4.2073235511779785
    6. 'index' → logprob: -4.7073235511779785
    7. 'H' → logprob: -6.0823235511779785
    8. ' index' → logprob: -6.3323235511779785
    9. ' l' → logprob: -6.7073235511779785
    10. 'indice' → logprob: -7.4573235511779785

Token 290: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.051911305636167526
    2. 'K' → logprob: -3.0519113540649414
    3. ' l' → logprob: -6.176911354064941
    4. 'index' → logprob: -7.426911354064941
    5. ' K' → logprob: -7.676911354064941
    6. 'indice' → logprob: -9.301911354064941
    7. 'H' → logprob: -10.051911354064941
    8. 'la' → logprob: -10.676911354064941
    9. ' index' → logprob: -11.051911354064941
    10. ' indice' → logprob: -13.426911354064941

Token 291: ''ind' (ID: 82245)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.011838377453386784
    2. 'indice' → logprob: -4.886838436126709
    3. 'index' → logprob: -6.136838436126709
    4. 'k' → logprob: -7.011838436126709
    5. ' K' → logprob: -7.636838436126709
    6. 'ind' → logprob: -8.51183795928955
    7. '[' → logprob: -10.13683795928955
    8. '[K' → logprob: -10.26183795928955
    9. 'élé' → logprob: -10.38683795928955
    10. 'indices' → logprob: -10.51183795928955

Token 292: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.00672804145142436
    2. 'ice' → logprob: -5.006728172302246
    3. 'e' → logprob: -11.631728172302246
    4. 'ices' → logprob: -12.881728172302246
    5. 'ce' → logprob: -15.631728172302246
    6. 'exe' → logprob: -15.631728172302246
    7. 'index' → logprob: -15.756728172302246
    8. '#' → logprob: -15.881728172302246
    9. 'dex' → logprob: -16.00672721862793
    10. '```' → logprob: -16.25672721862793

Token 293: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.01603730209171772
    2. ' K' → logprob: -4.141037464141846
    3. ' ' → logprob: -14.016036987304688
    4. '  ' → logprob: -14.141036987304688
    5. ' ' → logprob: -14.266036987304688
    6. '   ' → logprob: -15.016036987304688
    7. '`' → logprob: -15.016036987304688
    8. '[K' → logprob: -16.141036987304688
    9. '	K' → logprob: -16.391036987304688
    10. '```' → logprob: -16.516036987304688

Token 294: ' (' (ID: 350)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.4179447889328003
    2. '[:]' → logprob: -1.4179447889328003
    3. ':' → logprob: -1.5429447889328003
    4. ']' → logprob: -1.9179447889328003
    5. '=' → logprob: -3.29294490814209
    6. '#' → logprob: -3.29294490814209
    7. '[' → logprob: -3.91794490814209
    8. ',' → logprob: -3.91794490814209
    9. '.' → logprob: -5.04294490814209
    10. 'K' → logprob: -5.29294490814209

Token 295: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12292888015508652
    2. ':' → logprob: -2.9979288578033447
    3. '])' → logprob: -3.3729288578033447
    4. ' )' → logprob: -3.8729288578033447
    5. ' ])' → logprob: -6.122929096221924
    6. ']' → logprob: -6.622929096221924
    7. ':)' → logprob: -6.622929096221924
    8. ' jusqu' → logprob: -6.997929096221924
    9. ':]' → logprob: -7.372929096221924
    10. ' :' → logprob: -7.372929096221924

Token 296: ' inclu' (ID: 24013)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8348727226257324
    2. 'python' → logprob: -1.9598727226257324
    3. '```' → logprob: -2.3348727226257324
    4. 'avance' → logprob: -2.4598727226257324
    5. 'avant' → logprob: -2.9598727226257324
    6. 'H' → logprob: -3.0848727226257324
    7. '0' → logprob: -3.5848727226257324
    8. 'N' → logprob: -4.209872722625732
    9. 'indice' → logprob: -4.334872722625732
    10. 'part' → logprob: -4.334872722625732

Token 297: 'ant' (ID: 493)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1840401291847229
    2. 'quant' → logprob: -2.809040069580078
    3. 'que' → logprob: -3.684040069580078
    4. 't' → logprob: -4.309040069580078
    5. 're' → logprob: -4.559040069580078
    6. '#' → logprob: -4.684040069580078
    7. 'ce' → logprob: -4.934040069580078
    8. 'te' → logprob: -5.184040069580078
    9. 'vant' → logprob: -5.434040069580078
    10. 'ant' → logprob: -5.809040069580078

Token 298: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3629786968231201
    2. ')' → logprob: -1.4879786968231201
    3. ' K' → logprob: -2.73797869682312
    4. 'le' → logprob: -4.737978935241699
    5. ' )' → logprob: -5.737978935241699
    6. ' la' → logprob: -7.987978935241699
    7. ' celui' → logprob: -8.1129789352417
    8. 'l' → logprob: -8.4879789352417
    9. ' le' → logprob: -8.6129789352417
    10. '0' → logprob: -8.8629789352417

Token 299: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2391631305217743
    2. ']' → logprob: -1.9891631603240967
    3. '])' → logprob: -3.6141631603240967
    4. ':' → logprob: -3.7391631603240967
    5. ':]' → logprob: -3.8641631603240967
    6. ':)' → logprob: -5.989162921905518
    7. ' )' → logprob: -7.489162921905518
    8. ' :]' → logprob: -7.989162921905518
    9. ')]' → logprob: -8.864163398742676
    10. ' ])' → logprob: -9.239163398742676

Token 300: ' car' (ID: 1669)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.6633194088935852
    2. ')' → logprob: -0.7883194088935852
    3. 'jus' → logprob: -4.0383195877075195
    4. ' )' → logprob: -4.6633195877075195
    5. ' jusque' → logprob: -7.0383195877075195
    6. ':' → logprob: -7.4133195877075195
    7. ' donc' → logprob: -7.9133195877075195
    8. '0' → logprob: -8.91331958770752
    9. 'c' → logprob: -8.91331958770752
    10. ' ' → logprob: -8.91331958770752

Token 301: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12004507333040237
    2. 'K' → logprob: -3.6200451850891113
    3. 'l' → logprob: -4.120045185089111
    4. ' K' → logprob: -4.245045185089111
    5. 'H' → logprob: -4.620045185089111
    6. 'python' → logprob: -5.120045185089111
    7. ' ' → logprob: -5.370045185089111
    8. 'le' → logprob: -5.495045185089111
    9. ')' → logprob: -5.495045185089111
    10. ' l' → logprob: -5.495045185089111

Token 302: ''ind' (ID: 82245)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.13445089757442474
    2. 'index' → logprob: -3.259450912475586
    3. '[' → logprob: -4.009450912475586
    4. 'e' → logprob: -4.134450912475586
    5. 'K' → logprob: -4.884450912475586
    6. 'a' → logprob: -5.009450912475586
    7. 'slice' → logprob: -5.509450912475586
    8. 'ind' → logprob: -5.634450912475586
    9. ' indice' → logprob: -5.759450912475586
    10. ')' → logprob: -5.884450912475586

Token 303: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.46587756276130676
    2. 'ex' → logprob: -1.0908775329589844
    3. 'ce' → logprob: -3.4658775329589844
    4. 'ices' → logprob: -6.090877532958984
    5. 'exe' → logprob: -6.590877532958984
    6. 'ces' → logprob: -7.090877532958984
    7. 'index' → logprob: -8.590877532958984
    8. '```' → logprob: -8.840877532958984
    9. 'exc' → logprob: -9.465877532958984
    10. '`' → logprob: -10.278377532958984

Token 304: ' commence' (ID: 44755)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7315385937690735
    2. ' est' → logprob: -0.8565385937690735
    3. 'est' → logprob: -2.4815385341644287
    4. '0' → logprob: -5.731538772583008
    5. ' )' → logprob: -5.731538772583008
    6. 'comm' → logprob: -7.481538772583008
    7. ' commence' → logprob: -7.606538772583008
    8. ' is' → logprob: -7.606538772583008
    9. 's' → logprob: -7.731538772583008
    10. 'start' → logprob: -7.731538772583008

Token 305: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.5537436604499817
    2. ' à' → logprob: -1.178743600845337
    3. '=' → logprob: -2.303743600845337
    4. '0' → logprob: -4.678743839263916
    5. 'par' → logprob: -5.553743839263916
    6. ')' → logprob: -6.053743839263916
    7. ' par' → logprob: -6.553743839263916
    8. ' =' → logprob: -8.303743362426758
    9. 'au' → logprob: -9.178743362426758
    10. 'at' → logprob: -9.553743362426758

Token 306: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002246357616968453
    2. ' ' → logprob: -9.000225067138672
    3. 'z' → logprob: -9.250225067138672
    4. ' zéro' → logprob: -12.875225067138672
    5. ' ' → logprob: -13.875225067138672
    6. 'zero' → logprob: -14.375225067138672
    7. ' z' → logprob: -14.500225067138672
    8. '1' → logprob: -15.625225067138672
    9. 'K' → logprob: -16.000225067138672
    10. '   ' → logprob: -16.500225067138672

Token 307: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014422386884689331
    2. '])' → logprob: -4.264422416687012
    3. ']' → logprob: -8.889422416687012
    4. ' )' → logprob: -9.764422416687012
    5. ').' → logprob: -11.264422416687012
    6. 'H' → logprob: -11.264422416687012
    7. ')
' → logprob: -11.764422416687012
    8. '#' → logprob: -12.014422416687012
    9. '),' → logprob: -12.764422416687012
    10. ')])' → logprob: -12.764422416687012

Token 308: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2953709363937378
    2. ' H' → logprob: -1.5453709363937378
    3. '#' → logprob: -4.045371055603027
    4. ')' → logprob: -4.295371055603027
    5. ':' → logprob: -6.170371055603027
    6. ']' → logprob: -6.920371055603027
    7. '[:]' → logprob: -7.170371055603027
    8. ' rest' → logprob: -7.295371055603027
    9. 'rest' → logprob: -7.295371055603027
    10. ' )' → logprob: -7.295371055603027

Token 309: ' c' (ID: 274)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.5142172574996948
    2. ' H' → logprob: -1.2642172574996948
    3. ' ' → logprob: -2.5142173767089844
    4. '#' → logprob: -4.514217376708984
    5. ' 
' → logprob: -6.264217376708984
    6. ' ce' → logprob: -6.264217376708984
    7. '<|end|>' → logprob: -6.264217376708984
    8. ' ' → logprob: -6.389217376708984
    9. ')' → logprob: -6.639217376708984
    10. ' rest' → logprob: -6.889217376708984

Token 310: ''est' (ID: 6616)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.29341259598731995
    2. '#' → logprob: -2.168412685394287
    3. 'est' → logprob: -2.668412685394287
    4. ' H' → logprob: -3.793412685394287
    5. 'ont' → logprob: -4.668412685394287
    6. 'es' → logprob: -4.668412685394287
    7. 'e' → logprob: -5.543412685394287
    8. 's' → logprob: -6.043412685394287
    9. '=' → logprob: -6.168412685394287
    10. ' est' → logprob: -6.418412685394287

Token 311: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -1.551617980003357
    2. 'ce' → logprob: -1.801617980003357
    3. 'la' → logprob: -2.0516180992126465
    4. '#' → logprob: -2.0516180992126465
    5. 'à' → logprob: -2.1766180992126465
    6. 'une' → logprob: -3.5516180992126465
    7. ' donc' → logprob: -3.5516180992126465
    8. ' ce' → logprob: -3.5516180992126465
    9. 'tout' → logprob: -3.5516180992126465
    10. 'cela' → logprob: -3.6766180992126465

Token 312: '-dire' (ID: 76064)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.02226640284061432
    2. 'la' → logprob: -4.647266387939453
    3. 'H' → logprob: -5.022266387939453
    4. ' dire' → logprob: -6.397266387939453
    5. '-dire' → logprob: -7.022266387939453
    6. 'ce' → logprob: -7.272266387939453
    7. '#' → logprob: -7.272266387939453
    8. 'part' → logprob: -7.897266387939453
    9. 'à' → logprob: -8.522266387939453
    10. 'len' → logprob: -8.772266387939453

Token 313: ' qu' (ID: 474)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1401050090789795
    2. ' H' → logprob: -1.5151050090789795
    3. 'la' → logprob: -2.2651050090789795
    4. 'H' → logprob: -2.5151050090789795
    5. ' les' → logprob: -2.5151050090789795
    6. ' ceux' → logprob: -2.7651050090789795
    7. ' tous' → logprob: -3.3901050090789795
    8. 't' → logprob: -3.6401050090789795
    9. 'les' → logprob: -3.8901050090789795
    10. 'tout' → logprob: -4.265105247497559

Token 314: ''elle' (ID: 36421)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -1.1378586292266846
    2. '#' → logprob: -1.2628586292266846
    3. ' la' → logprob: -2.1378586292266846
    4. 'H' → logprob: -2.1378586292266846
    5. ' ce' → logprob: -3.6378586292266846
    6. 'la' → logprob: -3.8878586292266846
    7. 'a' → logprob: -4.2628583908081055
    8. 'l' → logprob: -4.5128583908081055
    9. ' on' → logprob: -4.7628583908081055
    10. 'on' → logprob: -4.8878583908081055

Token 315: ' ignore' (ID: 17887)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.7579210996627808
    2. 'g' → logprob: -1.3829210996627808
    3. 'ex' → logprob: -2.3829212188720703
    4. 'cr' → logprob: -3.2579212188720703
    5. 'pr' → logprob: -3.5079212188720703
    6. 'con' → logprob: -4.00792121887207
    7. ' crée' → logprob: -4.00792121887207
    8. 'en' → logprob: -4.13292121887207
    9. 'don' → logprob: -4.25792121887207
    10. 'sup' → logprob: -4.88292121887207

Token 316: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.38459041714668274
    2. 'les' → logprob: -1.5095903873443604
    3. 'K' → logprob: -3.2595903873443604
    4. ' la' → logprob: -4.0095906257629395
    5. ' K' → logprob: -4.3845906257629395
    6. 'le' → logprob: -4.5095906257629395
    7. 'H' → logprob: -4.6345906257629395
    8. 'la' → logprob: -5.8845906257629395
    9. ' le' → logprob: -6.1345906257629395
    10. ' H' → logprob: -6.7595906257629395

Token 317: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.09600459784269333
    2. 'prem' → logprob: -2.8460044860839844
    3. ' K' → logprob: -3.8460044860839844
    4. ' premiers' → logprob: -5.096004486083984
    5. 'élé' → logprob: -6.346004486083984
    6. 'indices' → logprob: -6.596004486083984
    7. 'plus' → logprob: -6.971004486083984
    8. 'k' → logprob: -7.846004486083984
    9. '0' → logprob: -7.971004486083984
    10. 'H' → logprob: -8.346004486083984

Token 318: ' premiers' (ID: 59140)
  Prédit: ' premiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.4764717221260071
    2. 'prem' → logprob: -0.9764717221260071
    3. ' premières' → logprob: -6.226471900939941
    4. ' ' → logprob: -8.976471900939941
    5. ' premier' → logprob: -9.351471900939941
    6. ' first' → logprob: -9.351471900939941
    7. 'first' → logprob: -10.726471900939941
    8. ' premi' → logprob: -10.976471900939941
    9. '#' → logprob: -11.226471900939941
    10. ' ' → logprob: -11.601471900939941

Token 319: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.01265585795044899
    2. ' éléments' → logprob: -4.387655735015869
    3. 'elements' → logprob: -9.387656211853027
    4. 'H' → logprob: -10.512656211853027
    5. 'él' → logprob: -11.512656211853027
    6. 'é' → logprob: -11.637656211853027
    7. ' elements' → logprob: -12.762656211853027
    8. ' H' → logprob: -12.887656211853027
    9. 'indices' → logprob: -13.012656211853027
    10. 'element' → logprob: -13.387656211853027

Token 320: ' les' (ID: 1341)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.19318684935569763
    2. 'remaining' → logprob: -2.0681867599487305
    3. 'result' → logprob: -3.6931867599487305
    4. 'rest' → logprob: -4.4431867599487305
    5. 'ans' → logprob: -5.6931867599487305
    6. 'res' → logprob: -6.3181867599487305
    7. 'answer' → logprob: -6.8181867599487305
    8. 'filtered' → logprob: -7.6931867599487305
    9. 'selected' → logprob: -7.8181867599487305
    10. 'reste' → logprob: -7.8181867599487305

Token 321: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.005029171239584684
    2. '[' → logprob: -6.630029201507568
    3. ' plus' → logprob: -7.005029201507568
    4. 'moins' → logprob: -7.005029201507568
    5. 'H' → logprob: -7.630029201507568
    6. 'prem' → logprob: -7.755029201507568
    7. 'K' → logprob: -8.38002872467041
    8. 'se' → logprob: -9.00502872467041
    9. '+' → logprob: -9.13002872467041
    10. '```' → logprob: -9.25502872467041

Token 322: ' grands' (ID: 43085)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.005266484338790178
    2. ' grands' → logprob: -6.0052666664123535
    3. 'grand' → logprob: -6.0052666664123535
    4. 'g' → logprob: -9.005266189575195
    5. '_gr' → logprob: -9.505266189575195
    6. 'import' → logprob: -9.630266189575195
    7. 'élé' → logprob: -11.755266189575195
    8. 'é' → logprob: -12.130266189575195
    9. 'gras' → logprob: -12.255266189575195
    10. '-gr' → logprob: -12.255266189575195

Token 323: ' grâce' (ID: 31589)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.9669966697692871
    2. 'remaining' → logprob: -0.9669966697692871
    3. 'result' → logprob: -2.091996669769287
    4. 'answer' → logprob: -3.341996669769287
    5. 'ans' → logprob: -3.466996669769287
    6. 'rest' → logprob: -3.841996669769287
    7. 'res' → logprob: -5.716996669769287
    8. 'sum' → logprob: -5.841996669769287
    9. 'S' → logprob: -6.216996669769287
    10. 'selected' → logprob: -6.466996669769287

Token 324: ' au' (ID: 2791)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.022550486028194427
    2. 'au' → logprob: -4.397550582885742
    3. ' à' → logprob: -4.772550582885742
    4. '#' → logprob: -7.397550582885742
    5. '=' → logprob: -7.897550582885742
    6. ''à' → logprob: -8.647550582885742
    7. 'a' → logprob: -8.772550582885742
    8. 'aux' → logprob: -8.772550582885742
    9. ' au' → logprob: -11.022550582885742
    10. 'H' → logprob: -11.522550582885742

Token 325: ' tri' (ID: 12665)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.11399781703948975
    2. ' tri' → logprob: -3.1139979362487793
    3. 'sort' → logprob: -3.8639979362487793
    4. ' slicing' → logprob: -4.363997936248779
    5. 's' → logprob: -4.738997936248779
    6. 'tr' → logprob: -4.988997936248779
    7. 'K' → logprob: -4.988997936248779
    8. 'slice' → logprob: -6.238997936248779
    9. 'trim' → logprob: -6.863997936248779
    10. 'H' → logprob: -7.238997936248779

Token 326: ' précédent' (ID: 128462)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1259815692901611
    2. 'H' → logprob: -1.3759815692901611
    3. 'remaining' → logprob: -1.3759815692901611
    4. 'ans' → logprob: -2.625981569290161
    5. 'answer' → logprob: -3.500981569290161
    6. 'rest' → logprob: -3.750981569290161
    7. 'res' → logprob: -4.125981330871582
    8. 'print' → logprob: -4.875981330871582
    9. 'reste' → logprob: -6.125981330871582
    10. 'count' → logprob: -6.500981330871582

Token 327: '
' (ID: 198)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.42684799432754517
    2. 'remaining' → logprob: -1.9268479347229004
    3. 'result' → logprob: -2.1768479347229004
    4. 'ans' → logprob: -2.9268479347229004
    5. 'answer' → logprob: -4.4268479347229
    6. 'rest' → logprob: -4.6768479347229
    7. 'res' → logprob: -5.4268479347229
    8. 'remain' → logprob: -7.1768479347229
    9. 'count' → logprob: -7.4268479347229
    10. 'h' → logprob: -7.4268479347229

Token 328: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.0164555311203003
    2. 'result' → logprob: -1.1414555311203003
    3. 'ans' → logprob: -2.01645565032959
    4. 'answer' → logprob: -2.39145565032959
    5. 'remaining' → logprob: -2.64145565032959
    6. 'print' → logprob: -4.89145565032959
    7. 'res' → logprob: -5.51645565032959
    8. 'rest' → logprob: -5.64145565032959
    9. 'answers' → logprob: -6.51645565032959
    10. 'sum' → logprob: -7.26645565032959

Token 329: ' Le' (ID: 2018)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.5608400106430054
    2. 'remaining' → logprob: -1.4358400106430054
    3. 'result' → logprob: -2.185840129852295
    4. 'ans' → logprob: -3.685840129852295
    5. 'rest' → logprob: -3.935840129852295
    6. 'answer' → logprob: -4.060840129852295
    7. 'res' → logprob: -4.560840129852295
    8. 'reste' → logprob: -7.060840129852295
    9. 'answers' → logprob: -7.310840129852295
    10. 'print' → logprob: -7.435840129852295

Token 330: ' résultat' (ID: 62556)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.39172884821891785
    2. 'result' → logprob: -1.7667288780212402
    3. 'rest' → logprob: -2.8917288780212402
    4. 'remaining' → logprob: -3.2667288780212402
    5. ' H' → logprob: -4.26672887802124
    6. 'res' → logprob: -4.64172887802124
    7. 'ans' → logprob: -5.01672887802124
    8. 'answer' → logprob: -5.39172887802124
    9. ' result' → logprob: -5.39172887802124
    10. ' remaining' → logprob: -6.01672887802124

Token 331: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4750154912471771
    2. '=' → logprob: -0.9750155210494995
    3. 'H' → logprob: -7.725015640258789
    4. 'final' → logprob: -8.475015640258789
    5. 's' → logprob: -8.850015640258789
    6. ' H' → logprob: -9.850015640258789
    7. ' final' → logprob: -10.100015640258789
    8. 'est' → logprob: -11.225015640258789
    9. ' ' → logprob: -11.975015640258789
    10. ' est' → logprob: -12.100015640258789

Token 332: ' décou' (ID: 68302)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.026701757684350014
    2. '=' → logprob: -3.9017016887664795
    3. '#' → logprob: -6.776701927185059
    4. ' =' → logprob: -6.776701927185059
    5. 'code' → logprob: -7.276701927185059
    6. 's' → logprob: -7.526701927185059
    7. ' H' → logprob: -7.651701927185059
    8. 'remaining' → logprob: -8.776701927185059
    9. 'new' → logprob: -9.026701927185059
    10. ' code' → logprob: -9.026701927185059

Token 333: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -2.339278580620885e-06
    2. 'p' → logprob: -14.000001907348633
    3. 'pag' → logprob: -14.500001907348633
    4. 'PAGE' → logprob: -14.625001907348633
    5. 'Page' → logprob: -15.125001907348633
    6. ' page' → logprob: -17.000001907348633
    7. 'pa' → logprob: -17.250001907348633
    8. 'mage' → logprob: -17.625001907348633
    9. 'lage' → logprob: -17.625001907348633
    10. 'pe' → logprob: -18.000001907348633

Token 334: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6346749663352966
    2. ' =' → logprob: -0.7596749663352966
    3. 'H' → logprob: -6.384675025939941
    4. ' H' → logprob: -8.634675025939941
    5. 's' → logprob: -8.884675025939941
    6. ' ' → logprob: -10.884675025939941
    7. 'final' → logprob: -11.134675025939941
    8. 'est' → logprob: -11.259675025939941
    9. ' est' → logprob: -12.134675025939941
    10. ' final' → logprob: -12.259675025939941

Token 335: ' ré' (ID: 3146)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.5232741236686707
    2. 'H' → logprob: -0.8982741236686707
    3. ' ' → logprob: -8.898274421691895
    4. ' ' → logprob: -11.648274421691895
    5. ' sum' → logprob: -14.085774421691895
    6. '   ' → logprob: -14.460774421691895
    7. '  ' → logprob: -14.585774421691895
    8. ' la' → logprob: -14.585774421691895
    9. '	H' → logprob: -14.835774421691895
    10. 'sum' → logprob: -15.273274421691895

Token 336: 'aff' (ID: 2857)
  Prédit: 'aff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.08921850472688675
    2. 'assign' → logprob: -2.5892186164855957
    3. 'attrib' → logprob: -5.214218616485596
    4. 'assigned' → logprob: -6.464218616485596
    5. 'ass' → logprob: -6.589218616485596
    6. 'serv' → logprob: -7.214218616485596
    7. 'at' → logprob: -8.214218139648438
    8. 'H' → logprob: -8.839218139648438
    9. 'em' → logprob: -9.089218139648438
    10. 'é' → logprob: -9.214218139648438

Token 337: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.17457078397274017
    2. 'attrib' → logprob: -2.7995707988739014
    3. 'aff' → logprob: -3.4245707988739014
    4. 'H' → logprob: -3.4245707988739014
    5. 'é' → logprob: -4.549570560455322
    6. 'fect' → logprob: -5.424570560455322
    7. 'et' → logprob: -5.924570560455322
    8. 'a' → logprob: -6.299570560455322
    9. 'at' → logprob: -6.674570560455322
    10. 'erm' → logprob: -6.924570560455322

Token 338: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.13793252408504486
    2. 'H' → logprob: -2.387932538986206
    3. '=' → logprob: -3.637932538986206
    4. 'ation' → logprob: -5.637932300567627
    5. 'er' → logprob: -5.887932300567627
    6. ' =' → logprob: -6.512932300567627
    7. 'ié' → logprob: -7.012932300567627
    8. 'éré' → logprob: -7.762932300567627
    9. 'ée' → logprob: -8.137932777404785
    10. 'iqué' → logprob: -8.762932777404785

Token 339: ' à' (ID: 1221)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07795017957687378
    2. ' à' → logprob: -2.9529502391815186
    3. ' H' → logprob: -4.2029500007629395
    4. '=' → logprob: -5.5779500007629395
    5. 'à' → logprob: -6.0779500007629395
    6. ' =' → logprob: -6.5779500007629395
    7. '(H' → logprob: -8.702950477600098
    8. 'a' → logprob: -10.452950477600098
    9. ' to' → logprob: -10.452950477600098
    10. 'to' → logprob: -10.702950477600098

Token 340: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.005236479919403791
    2. ' H' → logprob: -5.255236625671387
    3. ' ' → logprob: -13.505236625671387
    4. '`' → logprob: -14.755236625671387
    5. ' la' → logprob: -15.130236625671387
    6. ' ' → logprob: -15.380236625671387
    7. '```' → logprob: -15.630236625671387
    8. 'la' → logprob: -16.25523567199707
    9. '_H' → logprob: -17.25523567199707
    10. '   ' → logprob: -17.25523567199707

Token 341: ' lui' (ID: 10623)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06537099927663803
    2. ' =' → logprob: -2.815371036529541
    3. 'H' → logprob: -5.690371036529541
    4. '=
' → logprob: -11.565370559692383
    5. ' H' → logprob: -11.690370559692383
    6. '[' → logprob: -14.440370559692383
    7. ' =
' → logprob: -15.440370559692383
    8. '=[' → logprob: -15.940370559692383
    9. '```' → logprob: -15.940370559692383
    10. 'K' → logprob: -16.065370559692383

Token 342: '-même' (ID: 41085)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005122988484799862
    2. '-même' → logprob: -5.755123138427734
    3. 'H' → logprob: -6.755123138427734
    4. '[' → logprob: -7.755123138427734
    5. 'self' → logprob: -8.130123138427734
    6. '[K' → logprob: -11.380123138427734
    7. ' =' → logprob: -11.380123138427734
    8. '-mêmes' → logprob: -12.255123138427734
    9. '[]' → logprob: -12.255123138427734
    10. '[:]' → logprob: -12.505123138427734

Token 343: ' (' (ID: 350)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.012679282575845718
    2. '=' → logprob: -4.387679100036621
    3. ' =' → logprob: -8.887679100036621
    4. ' H' → logprob: -10.762679100036621
    5. '=
' → logprob: -11.762679100036621
    6. '#' → logprob: -14.012679100036621
    7. '```' → logprob: -14.262679100036621
    8. '
' → logprob: -15.012679100036621
    9. 'K' → logprob: -15.137679100036621
    10. '[' → logprob: -15.637679100036621

Token 344: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04204661771655083
    2. ')' → logprob: -3.417046546936035
    3. ' H' → logprob: -4.917046546936035
    4. ' )' → logprob: -7.542046546936035
    5. ']' → logprob: -8.667046546936035
    6. '=' → logprob: -8.792046546936035
    7. ' =' → logprob: -9.167046546936035
    8. ')
' → logprob: -10.542046546936035
    9. ' ' → logprob: -11.917046546936035
    10. ' ' → logprob: -12.042046546936035

Token 345: ' prend' (ID: 37463)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026373684406280518
    2. ' =' → logprob: -3.6513736248016357
    3. ')' → logprob: -9.776373863220215
    4. 'H' → logprob: -11.651373863220215
    5. '=
' → logprob: -13.276373863220215
    6. 'K' → logprob: -13.651373863220215
    7. '=

' → logprob: -13.651373863220215
    8. '[' → logprob: -13.901373863220215
    9. '＝' → logprob: -14.526373863220215
    10. ')=' → logprob: -14.526373863220215

Token 346: ' une' (ID: 2463)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.005482875742018223
    2. 'la' → logprob: -5.6304826736450195
    3. '=' → logprob: -7.1304826736450195
    4. ' la' → logprob: -7.2554826736450195
    5. ' H' → logprob: -8.50548267364502
    6. 'l' → logprob: -9.88048267364502
    7. ' =' → logprob: -10.38048267364502
    8. 'une' → logprob: -10.50548267364502
    9. 'le' → logprob: -10.75548267364502
    10. 's' → logprob: -11.13048267364502

Token 347: ' nouvelle' (ID: 24562)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5939858555793762
    2. 'cop' → logprob: -2.4689857959747314
    3. 's' → logprob: -2.5939857959747314
    4. 'portion' → logprob: -3.0939857959747314
    5. 'copy' → logprob: -3.3439857959747314
    6. 'new' → logprob: -3.3439857959747314
    7. ' =' → logprob: -3.4689857959747314
    8. 'nou' → logprob: -3.4689857959747314
    9. 'part' → logprob: -3.4689857959747314
    10. 'slice' → logprob: -4.0939860343933105

Token 348: ' valeur' (ID: 41664)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023520438000559807
    2. ' =' → logprob: -3.8985204696655273
    3. 'aff' → logprob: -6.773520469665527
    4. ' affect' → logprob: -7.148520469665527
    5. '=[]' → logprob: -8.273520469665527
    6. 'val' → logprob: -9.398520469665527
    7. 'assign' → logprob: -9.523520469665527
    8. 'space' → logprob: -9.773520469665527
    9. '_' → logprob: -9.898520469665527
    10. '[' → logprob: -9.898520469665527

Token 349: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18514040112495422
    2. '=' → logprob: -1.8101403713226318
    3. ')' → logprob: -5.435140609741211
    4. 'H' → logprob: -7.310140609741211
    5. '[' → logprob: -8.435140609741211
    6. ']' → logprob: -10.310140609741211
    7. ' )' → logprob: -10.435140609741211
    8. ' H' → logprob: -10.560140609741211
    9. ' =
' → logprob: -11.935140609741211
    10. '[K' → logprob: -11.935140609741211

Token 350: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23822689056396484
    2. ' =' → logprob: -1.6132268905639648
    3. ' est' → logprob: -4.488226890563965
    4. '<|end|>' → logprob: -8.238226890563965
    5. 'est' → logprob: -8.363226890563965
    6. ' contient' → logprob: -8.488226890563965
    7. '=
' → logprob: -8.863226890563965
    8. ')' → logprob: -9.238226890563965
    9. ' correspond' → logprob: -9.738226890563965
    10. 'H' → logprob: -10.113226890563965

Token 351: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07051161676645279
    2. ' H' → logprob: -2.69551157951355
    3. ' la' → logprob: -7.570511817932129
    4. 'la' → logprob: -10.445511817932129
    5. ' ' → logprob: -11.195511817932129
    6. 'l' → logprob: -12.320511817932129
    7. '   ' → logprob: -12.945511817932129
    8. ' ' → logprob: -13.070511817932129
    9. 'une' → logprob: -13.070511817932129
    10. ' une' → logprob: -13.570511817932129

Token 352: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.004070328548550606
    2. ' H' → logprob: -5.879070281982422
    3. 'liste' → logprob: -7.504070281982422
    4. 's' → logprob: -8.504070281982422
    5. ' liste' → logprob: -8.879070281982422
    6. 'copy' → logprob: -9.379070281982422
    7. 'slice' → logprob: -10.004070281982422
    8. 'list' → logprob: -10.004070281982422
    9. 'portion' → logprob: -10.129070281982422
    10. '[' → logprob: -10.504070281982422

Token 353: ' tron' (ID: 94018)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.22228394448757172
    2. ' des' → logprob: -2.2222838401794434
    3. ' H' → logprob: -3.0972838401794434
    4. 'des' → logprob: -3.5972838401794434
    5. ' contenant' → logprob: -5.097283840179443
    6. 'sans' → logprob: -5.972283840179443
    7. 'de' → logprob: -5.972283840179443
    8. ' de' → logprob: -6.472283840179443
    9. 'cont' → logprob: -6.847283840179443
    10. '[' → logprob: -6.972283840179443

Token 354: 'quée' (ID: 63772)
  Prédit: 'quée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quée' → logprob: -0.6882228255271912
    2. 'cée' → logprob: -0.9382228255271912
    3. 'c' → logprob: -3.813222885131836
    4. 'ée' → logprob: -4.188222885131836
    5. 'née' → logprob: -4.813222885131836
    6. 'H' → logprob: -4.938222885131836
    7. 'ancée' → logprob: -5.063222885131836
    8. 'ç' → logprob: -5.188222885131836
    9. '[' → logprob: -5.188222885131836
    10. 'ch' → logprob: -5.188222885131836

Token 355: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002126468578353524
    2. 'H' → logprob: -6.752126693725586
    3. '[' → logprob: -7.252126693725586
    4. ' )' → logprob: -9.252126693725586
    5. '[K' → logprob: -9.752126693725586
    6. ')
' → logprob: -10.627126693725586
    7. ').' → logprob: -11.127126693725586
    8. ']' → logprob: -11.377126693725586
    9. '(H' → logprob: -11.877126693725586
    10. '#' → logprob: -12.127126693725586

Token 356: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.0280383548888494e-06
    2. '#' → logprob: -14.750000953674316
    3. ' H' → logprob: -15.000000953674316
    4. '```' → logprob: -15.375000953674316
    5. '  
' → logprob: -18.250001907348633
    6. '
' → logprob: -18.500001907348633
    7. ' 
' → logprob: -18.625001907348633
    8. '=' → logprob: -18.750001907348633
    9. '[' → logprob: -19.125001907348633
    10. ' =' → logprob: -19.500001907348633

Token 357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009757270105183125
    2. ' =' → logprob: -4.634757041931152
    3. '[' → logprob: -13.884757041931152
    4. '[K' → logprob: -15.759757041931152
    5. '=
' → logprob: -16.13475799560547
    6. 'H' → logprob: -16.63475799560547
    7. '=

' → logprob: -16.75975799560547
    8. '＝' → logprob: -16.75975799560547
    9. '```' → logprob: -16.75975799560547
    10. '=[' → logprob: -18.13475799560547

Token 358: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.10020720958709717
    2. ' H' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.225207328796387
    4. '	H' → logprob: -15.725207328796387
    5. '   ' → logprob: -16.22520637512207
    6. ' ' → logprob: -16.35020637512207
    7. '  ' → logprob: -17.60020637512207
    8. '_H' → logprob: -18.72520637512207
    9. '```' → logprob: -19.22520637512207
    10. '[' → logprob: -19.53770637512207

Token 359: '[K' (ID: 137571)
  Prédit: '[K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[K' → logprob: -8.602024900028482e-05
    2. '[' → logprob: -9.375085830688477
    3. ' [' → logprob: -15.000085830688477
    4. 'K' → logprob: -15.125085830688477
    5. '[
' → logprob: -15.500085830688477
    6. '[k' → logprob: -15.625085830688477
    7. '[:' → logprob: -17.375085830688477
    8. '<K' → logprob: -17.750085830688477
    9. '```' → logprob: -17.875085830688477
    10. '\[' → logprob: -18.125085830688477

Token 360: ':]

' (ID: 170549)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -1.8312570318812504e-05
    2. ':' → logprob: -11.500018119812012
    3. ' :]' → logprob: -12.375018119812012
    4. ']' → logprob: -12.875018119812012
    5. ':]

' → logprob: -14.500018119812012
    6. ':].' → logprob: -14.875018119812012
    7. ':]
' → logprob: -15.125018119812012
    8. ':],' → logprob: -15.750018119812012
    9. '[:]' → logprob: -17.375019073486328
    10. '[' → logprob: -18.375019073486328

Token 361: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020497082732617855
    2. 'result' → logprob: -8.750205039978027
    3. 'sum' → logprob: -10.625205039978027
    4. 'answer' → logprob: -11.750205039978027
    5. 'prin' → logprob: -12.250205039978027
    6. 'pr' → logprob: -12.375205039978027
    7. 's' → logprob: -13.500205039978027
    8. 'total' → logprob: -13.625205039978027
    9. ' print' → logprob: -14.250205039978027
    10. '#' → logprob: -14.250205039978027

Token 362: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006070063100196421
    2. 'result' → logprob: -7.625607013702393
    3. 'sum' → logprob: -10.250606536865234
    4. 'answer' → logprob: -10.500606536865234
    5. 's' → logprob: -10.625606536865234
    6. 'if' → logprob: -11.375606536865234
    7. 'prin' → logprob: -11.875606536865234
    8. 'total' → logprob: -12.125606536865234
    9. 'pr' → logprob: -13.000606536865234
    10. '#' → logprob: -13.375606536865234

Token 363: 'er' (ID: 259)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.40191003680229187
    2. 'print' → logprob: -1.9019100666046143
    3. 's' → logprob: -2.6519100666046143
    4. 'total' → logprob: -3.0269100666046143
    5. 'sum' → logprob: -3.1519100666046143
    6. 'answer' → logprob: -4.151909828186035
    7. 'ans' → logprob: -6.151909828186035
    8. 'res' → logprob: -6.651909828186035
    9. 'r' → logprob: -9.026909828186035
    10. 'summ' → logprob: -9.026909828186035

Token 364: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.024482695385813713
    2. 'print' → logprob: -4.524482727050781
    3. 'result' → logprob: -4.774482727050781
    4. 'ans' → logprob: -6.149482727050781
    5. 'answer' → logprob: -6.149482727050781
    6. 's' → logprob: -7.524482727050781
    7. ' sum' → logprob: -10.649482727050781
    8. 'total' → logprob: -10.899482727050781
    9. 'som' → logprob: -11.149482727050781
    10. 'max' → logprob: -11.399482727050781

Token 365: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5560497641563416
    2. 'sum' → logprob: -1.4310498237609863
    3. 'print' → logprob: -2.0560498237609863
    4. 'result' → logprob: -2.9310498237609863
    5. 'som' → logprob: -6.056049823760986
    6. 'answer' → logprob: -6.431049823760986
    7. 'total' → logprob: -6.806049823760986
    8. 'ans' → logprob: -8.431049346923828
    9. 'res' → logprob: -8.681049346923828
    10. '#' → logprob: -8.681049346923828

Token 366: ' totale' (ID: 52898)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1921122074127197
    2. 'total' → logprob: -1.3171122074127197
    3. 'H' → logprob: -1.8171122074127197
    4. 'sum' → logprob: -1.9421122074127197
    5. 's' → logprob: -3.1921122074127197
    6. 'res' → logprob: -3.4421122074127197
    7. 'remaining' → logprob: -3.8171122074127197
    8. 'ans' → logprob: -4.317111968994141
    9. 'answer' → logprob: -5.192111968994141
    10. 'rest' → logprob: -6.067111968994141

Token 367: ' de' (ID: 334)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6466127038002014
    2. 'result' → logprob: -1.1466126441955566
    3. 'sum' → logprob: -2.8966126441955566
    4. 'ans' → logprob: -3.0216126441955566
    5. 'answer' → logprob: -3.8966126441955566
    6. 'H' → logprob: -4.271612644195557
    7. 's' → logprob: -4.896612644195557
    8. 'res' → logprob: -5.146612644195557
    9. 'remaining' → logprob: -5.396612644195557
    10. 'print' → logprob: -7.021612644195557

Token 368: ' tous' (ID: 10688)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0003410647332202643
    2. ' H' → logprob: -8.125341415405273
    3. 'la' → logprob: -10.125341415405273
    4. ' la' → logprob: -12.500341415405273
    5. 'l' → logprob: -14.000341415405273
    6. 'h' → logprob: -15.625341415405273
    7. ' ' → logprob: -16.875341415405273
    8. 'the' → logprob: -17.125341415405273
    9. 'les' → logprob: -17.125341415405273
    10. '(H' → logprob: -17.375341415405273

Token 369: ' les' (ID: 1341)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.005288311280310154
    2. ' H' → logprob: -5.255288124084473
    3. 'l' → logprob: -11.255288124084473
    4. '(H' → logprob: -11.380288124084473
    5. ' ' → logprob: -12.005288124084473
    6. 'les' → logprob: -12.130288124084473
    7. 'la' → logprob: -12.255288124084473
    8. ' la' → logprob: -12.880288124084473
    9. 'elements' → logprob: -13.505288124084473
    10. ' les' → logprob: -13.505288124084473

Token 370: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.08011694997549057
    2. 'H' → logprob: -2.5801169872283936
    3. 'elements' → logprob: -7.3301167488098145
    4. 'é' → logprob: -8.705117225646973
    5. ' éléments' → logprob: -9.205117225646973
    6. 'él' → logprob: -9.330117225646973
    7. 'elem' → logprob: -9.455117225646973
    8. 'val' → logprob: -9.705117225646973
    9. 'rest' → logprob: -10.830117225646973
    10. 'el' → logprob: -11.205117225646973

Token 371: ' de' (ID: 334)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.02536616660654545
    2. 'total' → logprob: -4.400366306304932
    3. '(H' → logprob: -4.775366306304932
    4. 'remaining' → logprob: -6.400366306304932
    5. 'sum' → logprob: -6.775366306304932
    6. 'rest' → logprob: -7.775366306304932
    7. 'result' → logprob: -7.900366306304932
    8. 's' → logprob: -8.150365829467773
    9. 'tot' → logprob: -9.275365829467773
    10. 'res' → logprob: -9.650365829467773

Token 372: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.014164921827614307
    2. ' H' → logprob: -4.264164924621582
    3. ' la' → logprob: -13.639164924621582
    4. ' ' → logprob: -16.264163970947266
    5. 'la' → logprob: -16.264163970947266
    6. 'h' → logprob: -18.139163970947266
    7. '	H' → logprob: -18.264163970947266
    8. ' ' → logprob: -18.639163970947266
    9. 'l' → logprob: -19.139163970947266
    10. '`' → logprob: -19.264163970947266

Token 373: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00017958412354346365
    2. ' H' → logprob: -8.625179290771484
    3. 'h' → logprob: -17.250179290771484
    4. 's' → logprob: -17.750179290771484
    5. ' ' → logprob: -18.750179290771484
    6. 'liste' → logprob: -19.000179290771484
    7. 'remaining' → logprob: -19.500179290771484
    8. 'list' → logprob: -19.875179290771484
    9. ' ' → logprob: -20.000179290771484
    10. '	H' → logprob: -20.000179290771484

Token 374: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.003783212276175618
    2. 'sum' → logprob: -6.128783226013184
    3. 'total' → logprob: -7.003783226013184
    4. 'result' → logprob: -7.753783226013184
    5. 'ans' → logprob: -9.503783226013184
    6. 'answer' → logprob: -10.003783226013184
    7. '(H' → logprob: -10.128783226013184
    8. 'remaining' → logprob: -10.253783226013184
    9. 'res' → logprob: -11.128783226013184
    10. 's' → logprob: -11.253783226013184

Token 375: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0114471912384033
    2. 'total' → logprob: -1.0114471912384033
    3. 'result' → logprob: -1.3864471912384033
    4. 'sum' → logprob: -4.011446952819824
    5. 's' → logprob: -5.761446952819824
    6. 'answer' → logprob: -7.386446952819824
    7. 'remaining' → logprob: -7.886446952819824
    8. 'res' → logprob: -8.761446952819824
    9. 'ans' → logprob: -9.261446952819824
    10. 'som' → logprob: -9.511446952819824

Token 376: 'c' (ID: 66)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.02657894231379032
    2. 'total' → logprob: -4.151578903198242
    3. 'print' → logprob: -5.651578903198242
    4. 'result' → logprob: -5.651578903198242
    5. ')' → logprob: -6.026578903198242
    6. 'remaining' → logprob: -7.526578903198242
    7. ' sum' → logprob: -8.526578903198242
    8. 's' → logprob: -9.151578903198242
    9. 'ans' → logprob: -9.526578903198242
    10. 'answer' → logprob: -10.026578903198242

Token 377: ''est' (ID: 6616)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6336809396743774
    2. 'umsum' → logprob: -1.5086809396743774
    3. 'um' → logprob: -3.133680820465088
    4. 'on' → logprob: -3.758680820465088
    5. '=sum' → logprob: -3.883680820465088
    6. 'ont' → logprob: -4.008680820465088
    7. 'urrent' → logprob: -4.133680820465088
    8. ')' → logprob: -4.258680820465088
    9. '#' → logprob: -4.383680820465088
    10. 'umul' → logprob: -4.508680820465088

Token 378: '-à' (ID: 56297)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0043085841462016106
    2. ' sum' → logprob: -5.629308700561523
    3. '=sum' → logprob: -8.254308700561523
    4. ')' → logprob: -9.004308700561523
    5. '(sum' → logprob: -9.004308700561523
    6. '   ' → logprob: -9.254308700561523
    7. ' ' → logprob: -10.504308700561523
    8. '  ' → logprob: -10.629308700561523
    9. 'la' → logprob: -10.754308700561523
    10. '	sum' → logprob: -11.629308700561523

Token 379: '-dire' (ID: 76064)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.2871793508529663
    2. '-à' → logprob: -2.287179470062256
    3. 'la' → logprob: -2.787179470062256
    4. 'sum' → logprob: -3.162179470062256
    5. 'H' → logprob: -3.912179470062256
    6. 'a' → logprob: -4.412179470062256
    7. 's' → logprob: -5.037179470062256
    8. 't' → logprob: -6.037179470062256
    9. '#' → logprob: -7.162179470062256
    10. 'tout' → logprob: -7.412179470062256

Token 380: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.12703026831150055
    2. ' sum' → logprob: -2.127030372619629
    3. ' la' → logprob: -9.502030372619629
    4. 'la' → logprob: -10.877030372619629
    5. '=sum' → logprob: -12.752030372619629
    6. '	sum' → logprob: -13.502030372619629
    7. '(sum' → logprob: -13.752030372619629
    8. ' somme' → logprob: -14.502030372619629
    9. ')' → logprob: -14.752030372619629
    10. '   ' → logprob: -15.002030372619629

Token 381: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7044645547866821
    2. 'sum' → logprob: -0.7044645547866821
    3. 'part' → logprob: -5.454464435577393
    4. '#' → logprob: -5.954464435577393
    5. ' somme' → logprob: -6.704464435577393
    6. 'som' → logprob: -6.829464435577393
    7. 'val' → logprob: -6.829464435577393
    8. '
' → logprob: -8.45446491241455
    9. 'nombre' → logprob: -8.82946491241455
    10. '```' → logprob: -9.32946491241455

Token 382: ' des' (ID: 731)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.1619003713130951
    2. '(' → logprob: -1.9119004011154175
    3. ')' → logprob: -7.161900520324707
    4. '(
' → logprob: -8.036900520324707
    5. 'rest' → logprob: -8.286900520324707
    6. 'H' → logprob: -9.411900520324707
    7. 'de' → logprob: -9.786900520324707
    8. 'remaining' → logprob: -9.911900520324707
    9. ' restante' → logprob: -10.911900520324707
    10. '(rest' → logprob: -11.036900520324707

Token 383: ' ent' (ID: 1121)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.42041486501693726
    2. 'H' → logprob: -1.170414924621582
    3. ' éléments' → logprob: -4.045414924621582
    4. 'val' → logprob: -4.920414924621582
    5. ' H' → logprob: -5.420414924621582
    6. 'elements' → logprob: -6.795414924621582
    7. 'rest' → logprob: -7.170414924621582
    8. 'ent' → logprob: -8.420414924621582
    9. 'é' → logprob: -8.670414924621582
    10. ' rest' → logprob: -8.670414924621582

Token 384: 'iers' (ID: 11012)
  Prédit: 'ements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -0.922236979007721
    2. 't' → logprob: -1.6722369194030762
    3. 'ents' → logprob: -1.7972369194030762
    4. 'éments' → logprob: -1.9222369194030762
    5. 'H' → logprob: -3.422236919403076
    6. 'iers' → logprob: -3.797236919403076
    7. 'ts' → logprob: -4.047236919403076
    8. 'fants' → logprob: -5.172236919403076
    9. 'ém' → logprob: -5.172236919403076
    10. 'lements' → logprob: -5.297236919403076

Token 385: ' rest' (ID: 2867)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.3530595600605011
    2. 'rest' → logprob: -1.9780595302581787
    3. ')' → logprob: -2.1030595302581787
    4. 'H' → logprob: -3.6030595302581787
    5. 'remaining' → logprob: -5.728059768676758
    6. '(rest' → logprob: -6.353059768676758
    7. 'de' → logprob: -6.978059768676758
    8. ' rest' → logprob: -6.978059768676758
    9. 'reste' → logprob: -7.603059768676758
    10. '()' → logprob: -7.603059768676758

Token 386: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.15656934678554535
    2. 'H' → logprob: -2.656569242477417
    3. 'ents' → logprob: -2.906569242477417
    4. 'ant' → logprob: -5.031569480895996
    5. 'nants' → logprob: -5.031569480895996
    6. 'aux' → logprob: -6.031569480895996
    7. '   ' → logprob: -6.031569480895996
    8. 'enant' → logprob: -7.906569480895996
    9. 'ent' → logprob: -8.406569480895996
    10. 'enants' → logprob: -8.656569480895996

Token 387: ' après' (ID: 16460)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0511219501495361
    2. '(H' → logprob: -1.1761219501495361
    3. '()' → logprob: -1.3011219501495361
    4. '(' → logprob: -2.926121950149536
    5. 'H' → logprob: -4.301121711730957
    6. 'sum' → logprob: -6.676121711730957
    7. 'print' → logprob: -8.176121711730957
    8. 's' → logprob: -8.551121711730957
    9. '(
' → logprob: -8.551121711730957
    10. '())' → logprob: -8.676121711730957

Token 388: ' décou' (ID: 68302)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.29016974568367004
    2. 'la' → logprob: -2.1651697158813477
    3. 'ex' → logprob: -3.0401697158813477
    4. 'H' → logprob: -3.1651697158813477
    5. '#' → logprob: -4.415169715881348
    6. 'le' → logprob: -4.540169715881348
    7. 'les' → logprob: -5.165169715881348
    8. 'tr' → logprob: -5.540169715881348
    9. 's' → logprob: -5.915169715881348
    10. ' l' → logprob: -6.290169715881348

Token 389: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.04614194482564926
    2. 'pe' → logprob: -3.2961418628692627
    3. 'per' → logprob: -5.171142101287842
    4. 'aper' → logprob: -7.421142101287842
    5. 'up' → logprob: -8.046141624450684
    6. 'p' → logprob: -8.171141624450684
    7. 'upe' → logprob: -8.296141624450684
    8. '#' → logprob: -9.171141624450684
    9. 'age' → logprob: -9.171141624450684
    10. 'ep' → logprob: -9.296141624450684

Token 390: ')
' (ID: 446)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06926849484443665
    2. 'sum' → logprob: -3.5692684650421143
    3. ')' → logprob: -3.6942684650421143
    4. '(H' → logprob: -5.069268703460693
    5. '(' → logprob: -5.819268703460693
    6. '(sum' → logprob: -6.694268703460693
    7. '()' → logprob: -6.944268703460693
    8. 's' → logprob: -7.319268703460693
    9. 'H' → logprob: -7.444268703460693
    10. 'result' → logprob: -7.444268703460693

Token 391: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7803907990455627
    2. 'total' → logprob: -1.030390739440918
    3. 'result' → logprob: -1.780390739440918
    4. 'sum' → logprob: -4.280390739440918
    5. 'answer' → logprob: -6.905390739440918
    6. 's' → logprob: -7.155390739440918
    7. 'remaining' → logprob: -7.780390739440918
    8. 'res' → logprob: -9.155390739440918
    9. 'ans' → logprob: -9.280390739440918
    10. 'som' → logprob: -10.155390739440918

Token 392: ' sum' (ID: 4215)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7365323305130005
    2. 'total' → logprob: -1.3615323305130005
    3. 'result' → logprob: -1.3615323305130005
    4. 'sum' → logprob: -5.486532211303711
    5. 'answer' → logprob: -5.986532211303711
    6. 'remaining' → logprob: -6.986532211303711
    7. 'ans' → logprob: -7.861532211303711
    8. 's' → logprob: -8.111532211303711
    9. 'res' → logprob: -8.111532211303711
    10. 're' → logprob: -10.736532211303711

Token 393: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.005577367730438709
    2. '(' → logprob: -5.380577564239502
    3. 'H' → logprob: -7.630577564239502
    4. '_total' → logprob: -9.130577087402344
    5. '=' → logprob: -9.755577087402344
    6. '()' → logprob: -9.755577087402344
    7. '_' → logprob: -9.880577087402344
    8. '_sum' → logprob: -10.005577087402344
    9. '_value' → logprob: -10.380577087402344
    10. '_val' → logprob: -10.880577087402344

Token 394: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05046054348349571
    2. '())' → logprob: -3.0504605770111084
    3. '()' → logprob: -6.300460338592529
    4. '(H' → logprob: -11.175460815429688
    5. '(' → logprob: -11.425460815429688
    6. ' )' → logprob: -11.925460815429688
    7. '))' → logprob: -13.425460815429688
    8. ' ())' → logprob: -13.925460815429688
    9. ')#' → logprob: -14.800460815429688
    10. ')
' → logprob: -14.800460815429688

Token 395: ' retourne' (ID: 178818)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06758268177509308
    2. 'total' → logprob: -3.192582607269287
    3. 'result' → logprob: -3.942582607269287
    4. 'sum' → logprob: -6.067582607269287
    5. ')' → logprob: -6.942582607269287
    6. '=' → logprob: -7.317582607269287
    7. 's' → logprob: -7.567582607269287
    8. 'res' → logprob: -9.692583084106445
    9. 'answer' → logprob: -9.942583084106445
    10. 'remaining' → logprob: -9.942583084106445

Token 396: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.09341377764940262
    2. ' la' → logprob: -3.218413829803467
    3. 'un' → logprob: -3.968413829803467
    4. 'l' → logprob: -4.093413829803467
    5. 'sum' → logprob: -5.093413829803467
    6. ' un' → logprob: -5.343413829803467
    7. 'une' → logprob: -6.968413829803467
    8. '0' → logprob: -7.343413829803467
    9. 'le' → logprob: -7.843413829803467
    10. 'the' → logprob: -8.343413352966309

Token 397: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7455214262008667
    2. 'total' → logprob: -0.9955214262008667
    3. 'sum' → logprob: -2.6205215454101562
    4. 'nombre' → logprob: -3.2455215454101562
    5. ' total' → logprob: -4.245521545410156
    6. 'som' → logprob: -4.370521545410156
    7. ' somme' → logprob: -5.495521545410156
    8. 'int' → logprob: -5.870521545410156
    9. 'val' → logprob: -6.120521545410156
    10. ' résultat' → logprob: -6.245521545410156

Token 398: ' des' (ID: 731)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39127761125564575
    2. 'result' → logprob: -1.766277551651001
    3. 'total' → logprob: -2.641277551651001
    4. '(' → logprob: -3.516277551651001
    5. '(H' → logprob: -3.766277551651001
    6. 'rest' → logprob: -5.14127779006958
    7. 'remaining' → logprob: -5.64127779006958
    8. 'reste' → logprob: -6.01627779006958
    9. '=' → logprob: -6.14127779006958
    10. 'res' → logprob: -6.39127779006958

Token 399: ' valeurs' (ID: 73668)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03372650593519211
    2. ' H' → logprob: -3.533726453781128
    3. 'élé' → logprob: -6.033726692199707
    4. 'elements' → logprob: -7.158726692199707
    5. ' elements' → logprob: -7.533726692199707
    6. ' éléments' → logprob: -8.408726692199707
    7. 'ent' → logprob: -11.658726692199707
    8. 'val' → logprob: -12.158726692199707
    9. 'elem' → logprob: -12.283726692199707
    10. '(H' → logprob: -13.283726692199707

Token 400: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2985485792160034
    2. 'print' → logprob: -1.5485485792160034
    3. 'total' → logprob: -1.6735485792160034
    4. 'rest' → logprob: -1.7985485792160034
    5. 'remaining' → logprob: -3.173548698425293
    6. '(H' → logprob: -3.798548698425293
    7. 'reste' → logprob: -3.923548698425293
    8. '=' → logprob: -4.423548698425293
    9. '_' → logprob: -4.673548698425293
    10. 'H' → logprob: -4.798548698425293

Token 401: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.024690212681889534
    2. ' H' → logprob: -3.8996901512145996
    3. ' la' → logprob: -6.0246901512146
    4. 'la' → logprob: -6.3996901512146
    5. 'l' → logprob: -10.024690628051758
    6. ')' → logprob: -12.149690628051758
    7. ' ' → logprob: -13.149690628051758
    8. '(H' → logprob: -13.524690628051758
    9. 'liste' → logprob: -13.649690628051758
    10. ' ' → logprob: -14.524690628051758

Token 402: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.10566522181034088
    2. 'liste' → logprob: -2.3556652069091797
    3. ' liste' → logprob: -6.35566520690918
    4. 'list' → logprob: -6.73066520690918
    5. ' H' → logprob: -6.73066520690918
    6. 'élé' → logprob: -6.98066520690918
    7. '```' → logprob: -9.10566520690918
    8. 'elements' → logprob: -9.98066520690918
    9. 'la' → logprob: -9.98066520690918
    10. '#' → logprob: -10.60566520690918

Token 403: ' H' (ID: 487)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05443215370178223
    2. 'result' → logprob: -3.3044321537017822
    3. 'total' → logprob: -4.429431915283203
    4. 'answer' → logprob: -6.179431915283203
    5. 'remaining' → logprob: -7.304431915283203
    6. 'ans' → logprob: -7.429431915283203
    7. 'res' → logprob: -7.804431915283203
    8. 'sum' → logprob: -9.054431915283203
    9. 'pr' → logprob: -9.304431915283203
    10. 'rest' → logprob: -9.679431915283203

Token 404: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029406992718577385
    2. 'result' → logprob: -4.029407024383545
    3. 'total' → logprob: -4.529407024383545
    4. 'answer' → logprob: -8.654406547546387
    5. 's' → logprob: -9.529406547546387
    6. 'res' → logprob: -10.029406547546387
    7. 'sum' → logprob: -10.654406547546387
    8. 'pr' → logprob: -10.654406547546387
    9. 'prin' → logprob: -10.779406547546387
    10. 'r' → logprob: -11.154406547546387

Token 405: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003543643979355693
    2. 'result' → logprob: -6.003543853759766
    3. 'total' → logprob: -6.878543853759766
    4. 'answer' → logprob: -10.503543853759766
    5. 'sum' → logprob: -12.503543853759766
    6. 'remaining' → logprob: -13.503543853759766
    7. 'res' → logprob: -13.753543853759766
    8. 'ans' → logprob: -14.003543853759766
    9. 'prin' → logprob: -14.003543853759766
    10. 's' → logprob: -14.003543853759766

Token 406: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016241880075540394
    2. 'result' → logprob: -8.875162124633789
    3. 'total' → logprob: -11.500162124633789
    4. 'answer' → logprob: -11.875162124633789
    5. 'prin' → logprob: -13.500162124633789
    6. ' print' → logprob: -13.625162124633789
    7. 'pr' → logprob: -13.875162124633789
    8. 'ans' → logprob: -14.000162124633789
    9. '```' → logprob: -14.875162124633789
    10. 'res' → logprob: -15.250162124633789

Token 407: '(...)' (ID: 96375)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.006750424392521381
    2. '(' → logprob: -5.006750583648682
    3. '()' → logprob: -10.881750106811523
    4. '(print' → logprob: -11.881750106811523
    5. 'sum' → logprob: -12.506750106811523
    6. '(s' → logprob: -13.131750106811523
    7. '((' → logprob: -14.006750106811523
    8. ' (' → logprob: -14.131750106811523
    9. '(H' → logprob: -14.506750106811523
    10. '(len' → logprob: -14.881750106811523

Token 408: ' affiche' (ID: 127479)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.5981626510620117
    2. '(sum' → logprob: -0.8481626510620117
    3. 'print' → logprob: -3.8481626510620117
    4. '(' → logprob: -7.473162651062012
    5. 'sum' → logprob: -9.473162651062012
    6. ' print' → logprob: -11.973162651062012
    7. '()' → logprob: -12.598162651062012
    8. ' (' → logprob: -13.473162651062012
    9. '(H' → logprob: -13.598162651062012
    10. '(s' → logprob: -14.473162651062012

Token 409: ' le' (ID: 505)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.011135892942547798
    2. 'sum' → logprob: -4.511136054992676
    3. '(' → logprob: -9.386136054992676
    4. ' sum' → logprob: -12.886136054992676
    5. '(
' → logprob: -14.511136054992676
    6. 'the' → logprob: -14.761136054992676
    7. '=sum' → logprob: -14.886136054992676
    8. ' (' → logprob: -15.386136054992676
    9. ',sum' → logprob: -16.88613510131836
    10. '(print' → logprob: -17.38613510131836

Token 410: ' résultat' (ID: 62556)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0005486258305609226
    2. '(sum' → logprob: -7.875548839569092
    3. ' sum' → logprob: -8.750548362731934
    4. 'result' → logprob: -11.750548362731934
    5. 's' → logprob: -13.750548362731934
    6. 'total' → logprob: -14.250548362731934
    7. 'som' → logprob: -15.125548362731934
    8. '=sum' → logprob: -15.500548362731934
    9. ' somme' → logprob: -17.00054931640625
    10. 'su' → logprob: -17.37554931640625

Token 411: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6361058354377747
    2. '(print' → logprob: -0.8861058354377747
    3. '(sum' → logprob: -2.88610577583313
    4. '(' → logprob: -6.386106014251709
    5. 'sum' → logprob: -7.011106014251709
    6. ' print' → logprob: -11.88610553741455
    7. '(
' → logprob: -12.88610553741455
    8. '()' → logprob: -13.26110553741455
    9. '(s' → logprob: -14.26110553741455
    10. ' (' → logprob: -16.386106491088867

Token 412: 'é' (ID: 377)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6800764799118042
    2. 'print' → logprob: -1.3050764799118042
    3. '(print' → logprob: -1.9300764799118042
    4. '(sum' → logprob: -2.6800765991210938
    5. 'sum' → logprob: -5.805076599121094
    6. '(H' → logprob: -5.805076599121094
    7. '(
' → logprob: -6.555076599121094
    8. ')' → logprob: -7.055076599121094
    9. ' print' → logprob: -9.555076599121094
    10. '(

' → logprob: -9.805076599121094

Token 413: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.5649528298527e-05
    2. '(print' → logprob: -9.500075340270996
    3. ' print' → logprob: -14.250075340270996
    4. 'sum' → logprob: -16.000076293945312
    5. '(sum' → logprob: -17.500076293945312
    6. '```' → logprob: -18.750076293945312
    7. '(' → logprob: -18.875076293945312
    8. '-print' → logprob: -19.875076293945312
    9. 'Print' → logprob: -21.000076293945312
    10. 'pr' → logprob: -21.375076293945312

Token 414: 'la' (ID: 1675)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.009569316171109676
    2. ')' → logprob: -5.00956916809082
    3. ' sum' → logprob: -5.88456916809082
    4. '(sum' → logprob: -9.75956916809082
    5. ')
' → logprob: -12.25956916809082
    6. ' )' → logprob: -12.75956916809082
    7. '=sum' → logprob: -14.25956916809082
    8. '   ' → logprob: -14.63456916809082
    9. '	sum' → logprob: -15.13456916809082
    10. ' ' → logprob: -15.25956916809082

Token 415: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.11833767592906952
    2. ' somme' → logprob: -2.618337631225586
    3. ' sum' → logprob: -3.368337631225586
    4. 's' → logprob: -5.743337631225586
    5. 'som' → logprob: -8.118337631225586
    6. ')' → logprob: -8.243337631225586
    7. 'result' → logprob: -8.743337631225586
    8. 'val' → logprob: -9.493337631225586
    9. 'total' → logprob: -9.618337631225586
    10. ' som' → logprob: -9.618337631225586

Token 416: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04939782992005348
    2. '(sum' → logprob: -3.0493979454040527
    3. '(' → logprob: -7.674397945404053
    4. '(H' → logprob: -9.049397468566895
    5. 'sum' → logprob: -9.174397468566895
    6. ')
' → logprob: -10.049397468566895
    7. ' )' → logprob: -10.924397468566895
    8. '())' → logprob: -11.174397468566895
    9. '()' → logprob: -11.549397468566895
    10. '=sum' → logprob: -11.549397468566895

Token 417: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. '(print' → logprob: -15.375000953674316
    3. ' print' → logprob: -15.500000953674316
    4. '```' → logprob: -17.125
    5. '
' → logprob: -20.75
    6. 'pr' → logprob: -21.0
    7. '(' → logprob: -21.25
    8. '#print' → logprob: -21.5
    9. '``' → logprob: -22.375
    10. 'prin' → logprob: -22.375

Token 418: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.056740887463092804
    2. 'l' → logprob: -2.9317409992218018
    3. 'print' → logprob: -6.681740760803223
    4. ' la' → logprob: -8.056740760803223
    5. 'standard' → logprob: -9.556740760803223
    6. 'len' → logprob: -10.431740760803223
    7. 'output' → logprob: -10.556740760803223
    8. 'une' → logprob: -10.931740760803223
    9. 'stdout' → logprob: -11.056740760803223
    10. ' l' → logprob: -11.056740760803223

Token 419: ' sortie' (ID: 52761)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.40153589844703674
    2. 'console' → logprob: -1.2765358686447144
    3. 'sort' → logprob: -4.151535987854004
    4. 'é' → logprob: -4.401535987854004
    5. 'stdout' → logprob: -4.776535987854004
    6. 'stand' → logprob: -5.276535987854004
    7. 'screen' → logprob: -5.401535987854004
    8. 'terminal' → logprob: -6.401535987854004
    9. 'std' → logprob: -7.276535987854004
    10. 'fin' → logprob: -7.401535987854004

Token 420: ' standard' (ID: 7024)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.47101184725761414
    2. 'print' → logprob: -1.2210118770599365
    3. '(sum' → logprob: -2.7210118770599365
    4. '(' → logprob: -4.221011638641357
    5. 'sum' → logprob: -8.721012115478516
    6. '(
' → logprob: -11.096012115478516
    7. ' print' → logprob: -11.221012115478516
    8. '()' → logprob: -11.471012115478516
    9. ' (' → logprob: -14.221012115478516
    10. '```' → logprob: -14.346012115478516

Token 421: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.25
    3. ' print' → logprob: -18.75
    4. '(print' → logprob: -22.0
    5. '``' → logprob: -23.25
    6. 'pr' → logprob: -23.75
    7. '
' → logprob: -24.5
    8. 'prin' → logprob: -24.5
    9. '.print' → logprob: -25.625
    10. '`' → logprob: -25.875

Token 422: 'habit' (ID: 183262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004597218707203865
    2. ' )' → logprob: -5.754597187042236
    3. 'sum' → logprob: -6.629597187042236
    4. ' sum' → logprob: -10.254597663879395
    5. '(sum' → logprob: -10.379597663879395
    6. 'print' → logprob: -11.379597663879395
    7. ')
' → logprob: -11.504597663879395
    8. ').' → logprob: -13.254597663879395
    9. ',sum' → logprob: -13.254597663879395
    10. '=sum' → logprob: -13.504597663879395

Token 423: 'uellement' (ID: 36026)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11904020607471466
    2. 'al' → logprob: -2.6190402507781982
    3. 'ale' → logprob: -3.7440402507781982
    4. 'out' → logprob: -4.869040012359619
    5. 'standard' → logprob: -5.744040012359619
    6. 'e' → logprob: -6.869040012359619
    7. 'ent' → logprob: -7.119040012359619
    8. '")' → logprob: -7.994040012359619
    9. 'é' → logprob: -8.619040489196777
    10. ').' → logprob: -8.744040489196777

Token 424: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7672841548919678
    2. 'la' → logprob: -1.2672841548919678
    3. ' l' → logprob: -2.0172841548919678
    4. ' la' → logprob: -2.5172841548919678
    5. ')' → logprob: -3.8922841548919678
    6. 'le' → logprob: -4.517284393310547
    7. 'console' → logprob: -5.892284393310547
    8. ' le' → logprob: -6.142284393310547
    9. 'print' → logprob: -6.642284393310547
    10. 'au' → logprob: -8.017284393310547

Token 425: ''écran' (ID: 147901)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3457022905349731
    2. 'console' → logprob: -1.3457022905349731
    3. 'print' → logprob: -1.7207022905349731
    4. 'é' → logprob: -2.3457021713256836
    5. 'stdout' → logprob: -2.3457021713256836
    6. ')' → logprob: -4.220702171325684
    7. 'terminal' → logprob: -4.220702171325684
    8. ' console' → logprob: -4.845702171325684
    9. ' terminal' → logprob: -5.095702171325684
    10. 'ent' → logprob: -5.220702171325684

Token 426: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005352786974981427
    2. ')
' → logprob: -8.000535011291504
    3. 'print' → logprob: -9.250535011291504
    4. '(' → logprob: -9.750535011291504
    5. '(H' → logprob: -11.000535011291504
    6. '()' → logprob: -11.625535011291504
    7. '(print' → logprob: -12.000535011291504
    8. ' )' → logprob: -12.500535011291504
    9. ')`' → logprob: -12.625535011291504
    10. ')#' → logprob: -13.125535011291504

Token 427: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.0
    3. ' print' → logprob: -18.75
    4. 'pr' → logprob: -23.625
    5. '``' → logprob: -23.625
    6. 'prin' → logprob: -24.5
    7. '(print' → logprob: -24.625
    8. '-print' → logprob: -25.75
    9. '.print' → logprob: -26.375
    10. '	print' → logprob: -26.375

Token 428: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.061972957104444504
    2. '(' → logprob: -2.8119728565216064
    3. 'sum' → logprob: -13.061972618103027
    4. ' (' → logprob: -13.561972618103027
    5. '(print' → logprob: -14.561972618103027
    6. '(s' → logprob: -14.686972618103027
    7. '(
' → logprob: -14.811972618103027
    8. '()' → logprob: -15.686972618103027
    9. '(

' → logprob: -15.936972618103027
    10. '(H' → logprob: -16.561973571777344

Token 429: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -5.872261317563243e-05
    2. '(' → logprob: -9.750059127807617
    3. ')' → logprob: -14.875059127807617
    4. ' (' → logprob: -16.875059127807617
    5. ')(' → logprob: -19.125059127807617
    6. '(
' → logprob: -19.500059127807617
    7. '(h' → logprob: -19.500059127807617
    8. 'H' → logprob: -19.750059127807617
    9. '((' → logprob: -20.125059127807617
    10. '(

' → logprob: -20.625059127807617

Token 430: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002644351334311068
    2. ')' → logprob: -8.500264167785645
    3. '()))' → logprob: -9.750264167785645
    4. '())' → logprob: -14.000264167785645
    5. '()' → logprob: -14.250264167785645
    6. '))
' → logprob: -14.500264167785645
    7. ' ))' → logprob: -15.250264167785645
    8. '(' → logprob: -15.500264167785645
    9. ')))' → logprob: -15.625264167785645
    10. '(H' → logprob: -17.75026512145996


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 428
Tokens correctement prédits (1ère position, stricte): 88
Tokens correctement prédits (1ère position, avec adaptation): 88
Tokens correctement prédits (top 10): 240
Précision stricte (1ère position): 20.56%
Précision adaptée (1ère position): 20.56%
Précision (top 10): 56.07%
================================================================================
