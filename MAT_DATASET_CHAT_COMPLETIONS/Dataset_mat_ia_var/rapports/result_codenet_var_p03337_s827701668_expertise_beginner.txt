================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A_B = input().split()
A = int(A_B[0])
B = int(A_B[1])

a = A + B
b = A - B
c = A * B

if a >= b and a >= c:
    print(a)
elif b >= a and b >= c:
    print(b)
else:
    print(c)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: '_B' (ID: 3201)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3732784390449524
    2. ' []' → logprob: -1.7482783794403076
    3. ' "' → logprob: -3.4982783794403076
    4. '"' → logprob: -3.7482783794403076
    5. ' {}' → logprob: -3.9982783794403076
    6. '[' → logprob: -4.498278617858887
    7. '1' → logprob: -4.498278617858887
    8. ' [' → logprob: -4.623278617858887
    9. '0' → logprob: -4.873278617858887
    10. ''' → logprob: -4.873278617858887

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003050796454772353
    2. ''' → logprob: -6.253050804138184
    3. '('' → logprob: -8.128050804138184
    4. '"' → logprob: -8.253050804138184
    5. '.' → logprob: -8.628050804138184
    6. '[' → logprob: -9.003050804138184
    7. '(
' → logprob: -9.253050804138184
    8. '()' → logprob: -9.878050804138184
    9. '("("' → logprob: -10.003050804138184
    10. ')' → logprob: -11.253050804138184

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3758464455604553
    2. '+' → logprob: -1.2508463859558105
    3. '.strip' → logprob: -4.8758463859558105
    4. ' ' → logprob: -5.5008463859558105
    5. '*' → logprob: -5.6258463859558105
    6. '[' → logprob: -5.7508463859558105
    7. '.split' → logprob: -6.3758463859558105
    8. '_' → logprob: -6.5008463859558105
    9. '(' → logprob: -6.6258463859558105
    10. '=' → logprob: -7.3758463859558105

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000627610192168504
    2. '()' → logprob: -7.625627517700195
    3. '("("' → logprob: -10.125627517700195
    4. '('' → logprob: -10.375627517700195
    5. '(

' → logprob: -10.500627517700195
    6. '(
' → logprob: -10.750627517700195
    7. '((' → logprob: -12.250627517700195
    8. '`' → logprob: -12.875627517700195
    9. '(`' → logprob: -12.875627517700195
    10. '```' → logprob: -13.125627517700195

Token 7: 'A' (ID: 32)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009145800955593586
    2. 'print' → logprob: -5.384145736694336
    3. '#' → logprob: -6.634145736694336
    4. 'for' → logprob: -7.009145736694336
    5. '=' → logprob: -7.759145736694336
    6. 'a' → logprob: -7.884145736694336
    7. '.' → logprob: -8.009145736694336
    8. '(' → logprob: -8.384145736694336
    9. 'A' → logprob: -8.759145736694336
    10. 'if' → logprob: -8.884145736694336

Token 8: ' =' (ID: 314)
  Prédit: '_B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.24296945333480835
    2. '[' → logprob: -1.6179695129394531
    3. '_' → logprob: -4.117969512939453
    4. '[_' → logprob: -6.992969512939453
    5. '_[' → logprob: -9.242969512939453
    6. '_A' → logprob: -10.742969512939453
    7. '[]' → logprob: -11.117969512939453
    8. '\[' → logprob: -11.117969512939453
    9. '```' → logprob: -11.617969512939453
    10. '[B' → logprob: -11.617969512939453

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.027339108288288116
    2. ' int' → logprob: -3.652339220046997
    3. 'A' → logprob: -7.027338981628418
    4. ' A' → logprob: -9.277338981628418
    5. 'float' → logprob: -10.402338981628418
    6. 'input' → logprob: -11.402338981628418
    7. '[int' → logprob: -11.777338981628418
    8. 'list' → logprob: -13.027338981628418
    9. ' ' → logprob: -13.277338981628418
    10. '(int' → logprob: -13.652338981628418

Token 10: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.5763596296310425
    2. '(' → logprob: -0.8263596296310425
    3. '('' → logprob: -8.076359748840332
    4. '("("' → logprob: -10.076359748840332
    5. 'A' → logprob: -11.201359748840332
    6. '((' → logprob: -11.701359748840332
    7. '(
' → logprob: -11.701359748840332
    8. '()' → logprob: -11.826359748840332
    9. '(a' → logprob: -12.076359748840332
    10. '(B' → logprob: -12.201359748840332

Token 11: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.01846468076109886
    2. '[' → logprob: -4.0184645652771
    3. ')' → logprob: -9.018465042114258
    4. 'B' → logprob: -9.143465042114258
    5. '_A' → logprob: -10.268465042114258
    6. '(' → logprob: -10.393465042114258
    7. '[_' → logprob: -12.643465042114258
    8. '[B' → logprob: -12.643465042114258
    9. '(B' → logprob: -12.768465042114258
    10. '[
' → logprob: -13.393465042114258

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. ')' → logprob: -13.625001907348633
    3. ' [' → logprob: -15.875001907348633
    4. '\[' → logprob: -16.000001907348633
    5. '[A' → logprob: -16.000001907348633
    6. '0' → logprob: -17.000001907348633
    7. '[
' → logprob: -17.625001907348633
    8. '   ' → logprob: -17.750001907348633
    9. '```' → logprob: -17.875001907348633
    10. '1' → logprob: -18.125001907348633

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.319370302458992e-06
    2. '1' → logprob: -12.375005722045898
    3. ' ' → logprob: -13.875005722045898
    4. ''' → logprob: -17.8750057220459
    5. ')' → logprob: -18.2500057220459
    6. '`' → logprob: -18.8750057220459
    7. '```' → logprob: -18.8750057220459
    8. '"' → logprob: -19.1250057220459
    9. '   ' → logprob: -19.3750057220459
    10. '۰' → logprob: -19.5000057220459

Token 14: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5781887173652649
    2. ')' → logprob: -0.8281887173652649
    3. ']' → logprob: -6.328188896179199
    4. ')]' → logprob: -8.4531888961792
    5. ')])' → logprob: -8.5781888961792
    6. ' ])' → logprob: -10.8281888961792
    7. ''])' → logprob: -11.4531888961792
    8. '))' → logprob: -11.5781888961792
    9. ' )' → logprob: -12.9531888961792
    10. ')
' → logprob: -13.2031888961792

Token 15: 'B' (ID: 33)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6456947922706604
    2. '<|end|>' → logprob: -0.7706947922706604
    3. ')' → logprob: -5.520694732666016
    4. '_' → logprob: -6.145694732666016
    5. ''' → logprob: -6.645694732666016
    6. ' )' → logprob: -6.895694732666016
    7. '  ' → logprob: -7.145694732666016
    8. ' ,' → logprob: -7.395694732666016
    9. '<|end|>' → logprob: -7.520694732666016
    10. '```' → logprob: -7.645694732666016

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.290116548538208
    2. ')' → logprob: -1.415116548538208
    3. ' =' → logprob: -1.415116548538208
    4. '_' → logprob: -1.915116548538208
    5. '[' → logprob: -2.540116548538208
    6. '<|end|>' → logprob: -5.415116310119629
    7. ' ' → logprob: -6.040116310119629
    8. '_space' → logprob: -7.165116310119629
    9. '(' → logprob: -7.415116310119629
    10. '.' → logprob: -7.915116310119629

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0040801819413900375
    2. ' int' → logprob: -5.504080295562744
    3. 'A' → logprob: -14.004079818725586
    4. ' ' → logprob: -15.379079818725586
    5. 'input' → logprob: -15.379079818725586
    6. ' A' → logprob: -15.504079818725586
    7. '(int' → logprob: -15.754079818725586
    8. '  ' → logprob: -17.004079818725586
    9. '=int' → logprob: -17.254079818725586
    10. '   ' → logprob: -17.379079818725586

Token 18: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1606159657239914
    2. '(A' → logprob: -2.160615921020508
    3. '(B' → logprob: -3.410615921020508
    4. '('' → logprob: -9.910615921020508
    5. '((' → logprob: -11.035615921020508
    6. ' (' → logprob: -11.410615921020508
    7. '(

' → logprob: -12.410615921020508
    8. '("("' → logprob: -12.410615921020508
    9. '(
' → logprob: -12.785615921020508
    10. ''' → logprob: -12.785615921020508

Token 19: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -8.08944896562025e-05
    2. '[' → logprob: -10.000081062316895
    3. '_' → logprob: -11.500081062316895
    4. ')' → logprob: -11.625081062316895
    5. '+' → logprob: -11.750081062316895
    6. '[_' → logprob: -13.375081062316895
    7. '_)' → logprob: -13.750081062316895
    8. ' )' → logprob: -13.875081062316895
    9. '])' → logprob: -14.500081062316895
    10. ' ' → logprob: -14.500081062316895

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.580929347255733e-05
    2. ' [' → logprob: -11.625016212463379
    3. '1' → logprob: -12.625016212463379
    4. ')' → logprob: -13.250016212463379
    5. ')[' → logprob: -14.875016212463379
    6. '][' → logprob: -15.000016212463379
    7. '```' → logprob: -15.250016212463379
    8. '   ' → logprob: -15.375016212463379
    9. ']' → logprob: -15.375016212463379
    10. '[
' → logprob: -16.125015258789062

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.857719275401905e-05
    2. '])' → logprob: -10.500038146972656
    3. '0' → logprob: -11.500038146972656
    4. ' ' → logprob: -14.250038146972656
    5. ']' → logprob: -17.125038146972656
    6. '```' → logprob: -17.125038146972656
    7. ')' → logprob: -17.250038146972656
    8. '   ' → logprob: -18.000038146972656
    9. '])-' → logprob: -18.125038146972656
    10. '])]' → logprob: -18.250038146972656

Token 22: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ']' → logprob: -16.125
    3. '))' → logprob: -16.125
    4. ' )' → logprob: -16.25
    5. '')' → logprob: -17.0
    6. '）' → logprob: -17.75
    7. '`)' → logprob: -17.75
    8. ')
' → logprob: -18.0
    9. '}' → logprob: -18.625
    10. '+' → logprob: -18.75

Token 23: 'a' (ID: 64)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09870534390211105
    2. 'i' → logprob: -2.723705291748047
    3. 'if' → logprob: -3.973705291748047
    4. '*' → logprob: -5.723705291748047
    5. 'c' → logprob: -6.473705291748047
    6. '+
' → logprob: -6.973705291748047
    7. '=' → logprob: -7.098705291748047
    8. '#' → logprob: -7.473705291748047
    9. 'C' → logprob: -7.598705291748047
    10. 'a' → logprob: -8.098705291748047

Token 24: ' =' (ID: 314)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.7943125367164612
    2. '+' → logprob: -1.1693124771118164
    3. 'd' → logprob: -1.5443124771118164
    4. '%' → logprob: -5.044312477111816
    5. '*' → logprob: -5.169312477111816
    6. ' +' → logprob: -5.294312477111816
    7. '=' → logprob: -7.044312477111816
    8. 'r' → logprob: -7.294312477111816
    9. '_' → logprob: -7.294312477111816
    10. '+B' → logprob: -7.794312477111816

Token 25: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05004424601793289
    2. ' A' → logprob: -3.300044298171997
    3. 'a' → logprob: -6.425044059753418
    4. 'B' → logprob: -6.550044059753418
    5. 'int' → logprob: -6.675044059753418
    6. '0' → logprob: -6.675044059753418
    7. 'max' → logprob: -6.800044059753418
    8. 'min' → logprob: -6.925044059753418
    9. '(' → logprob: -7.300044059753418
    10. '(A' → logprob: -7.800044059753418

Token 26: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3316885828971863
    2. '%' → logprob: -1.831688642501831
    3. '*' → logprob: -3.081688642501831
    4. ' +' → logprob: -3.081688642501831
    5. '**' → logprob: -4.081688404083252
    6. ' %' → logprob: -5.581688404083252
    7. ' *' → logprob: -5.831688404083252
    8. '-' → logprob: -6.456688404083252
    9. ' **' → logprob: -6.581688404083252
    10. '+B' → logprob: -7.331688404083252

Token 27: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1608467847108841
    2. ' B' → logprob: -1.9108468294143677
    3. '1' → logprob: -7.410846710205078
    4. ' ' → logprob: -11.035846710205078
    5. ''' → logprob: -15.035846710205078
    6. 'b' → logprob: -15.410846710205078
    7. '0' → logprob: -15.410846710205078
    8. '`' → logprob: -15.910846710205078
    9. '	B' → logprob: -16.285846710205078
    10. '_B' → logprob: -16.660846710205078

Token 28: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7155648469924927
    2. '\n' → logprob: -2.090564727783203
    3. '
' → logprob: -2.340564727783203
    4. '\' → logprob: -2.840564727783203
    5. '%' → logprob: -2.840564727783203
    6. '<|end|>' → logprob: -3.215564727783203
    7. '#' → logprob: -3.340564727783203
    8. '**' → logprob: -3.840564727783203
    9. '+' → logprob: -3.965564727783203
    10. '```' → logprob: -4.715564727783203

Token 29: 'b' (ID: 65)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2952922284603119
    2. '*' → logprob: -2.4202921390533447
    3. '\n' → logprob: -2.9202921390533447
    4. '#' → logprob: -3.5452921390533447
    5. '+' → logprob: -4.295292377471924
    6. '-' → logprob: -4.295292377471924
    7. '\' → logprob: -4.795292377471924
    8. ' ' → logprob: -4.795292377471924
    9. '<|end|>' → logprob: -4.920292377471924
    10. 'p' → logprob: -5.420292377471924

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018448181450366974
    2. '=' → logprob: -4.143448352813721
    3. '_' → logprob: -6.393448352813721
    4. ' ' → logprob: -7.643448352813721
    5. ' _' → logprob: -9.893447875976562
    6. ' ==' → logprob: -10.393447875976562
    7. 'a' → logprob: -10.393447875976562
    8. '*' → logprob: -10.768447875976562
    9. '-' → logprob: -11.018447875976562
    10. ' +' → logprob: -11.518447875976562

Token 31: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.007932743057608604
    2. ' A' → logprob: -5.007932662963867
    3. 'abs' → logprob: -7.507932662963867
    4. 'a' → logprob: -8.132932662963867
    5. 'max' → logprob: -9.132932662963867
    6. '10' → logprob: -10.007932662963867
    7. ' ' → logprob: -10.007932662963867
    8. 'int' → logprob: -10.132932662963867
    9. 'B' → logprob: -10.507932662963867
    10. '0' → logprob: -10.882932662963867

Token 32: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5421025156974792
    2. '*' → logprob: -1.042102575302124
    3. ' -' → logprob: -3.167102575302124
    4. '-' → logprob: -3.917102575302124
    5. '_' → logprob: -6.292102336883545
    6. ' ' → logprob: -6.667102336883545
    7. ' +' → logprob: -8.917102813720703
    8. '<|end|>' → logprob: -9.542102813720703
    9. '+' → logprob: -9.667102813720703
    10. ' **' → logprob: -9.792102813720703

Token 33: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0004306692280806601
    2. ' B' → logprob: -7.750430583953857
    3. ' ' → logprob: -18.375431060791016
    4. '>B' → logprob: -18.375431060791016
    5. '<|end|>' → logprob: -19.000431060791016
    6. '	B' → logprob: -19.375431060791016
    7. '1' → logprob: -19.500431060791016
    8. 'b' → logprob: -19.875431060791016
    9. '_B' → logprob: -20.125431060791016
    10. '=B' → logprob: -22.250431060791016

Token 34: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3071218729019165
    2. '
' → logprob: -2.057121753692627
    3. '<|end|>' → logprob: -2.682121753692627
    4. '*' → logprob: -3.807121753692627
    5. '\' → logprob: -4.057121753692627
    6. 'c' → logprob: -4.432121753692627
    7. '#' → logprob: -5.932121753692627
    8. 'n' → logprob: -6.057121753692627
    9. '```' → logprob: -6.057121753692627
    10. '+' → logprob: -6.682121753692627

Token 35: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.04324209690094
    2. '
' → logprob: -1.29324209690094
    3. '\n' → logprob: -1.66824209690094
    4. '*' → logprob: -2.7932419776916504
    5. '<|end|>' → logprob: -3.0432419776916504
    6. '#' → logprob: -4.16824197769165
    7. '\' → logprob: -4.54324197769165
    8. 'if' → logprob: -4.79324197769165
    9. 'print' → logprob: -5.29324197769165
    10. '' → logprob: -5.29324197769165

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016548169776797295
    2. '=' → logprob: -4.141548156738281
    3. '_' → logprob: -7.766548156738281
    4. ' ' → logprob: -9.641548156738281
    5. 'a' → logprob: -12.266548156738281
    6. ')' → logprob: -12.391548156738281
    7. '[' → logprob: -13.391548156738281
    8. ' ==' → logprob: -13.516548156738281
    9. 'space' → logprob: -13.516548156738281
    10. ' +=' → logprob: -13.641548156738281

Token 37: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.033678434789180756
    2. ' A' → logprob: -3.4086785316467285
    3. 'B' → logprob: -10.90867805480957
    4. ' ' → logprob: -11.90867805480957
    5. 'a' → logprob: -13.28367805480957
    6. 'abs' → logprob: -13.90867805480957
    7. '*A' → logprob: -14.03367805480957
    8. ' B' → logprob: -14.40867805480957
    9. '2' → logprob: -14.65867805480957
    10. 'AB' → logprob: -14.78367805480957

Token 38: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.252315878868103
    2. '*' → logprob: -1.502315878868103
    3. '**' → logprob: -8.502315521240234
    4. ' **' → logprob: -10.127315521240234
    5. '%' → logprob: -10.502315521240234
    6. ' /' → logprob: -11.127315521240234
    7. ' +' → logprob: -11.127315521240234
    8. ' ' → logprob: -11.377315521240234
    9. '+' → logprob: -11.502315521240234
    10. '*b' → logprob: -11.502315521240234

Token 39: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.023248042911291122
    2. ' B' → logprob: -3.7732479572296143
    3. ' ' → logprob: -13.148247718811035
    4. '<|end|>' → logprob: -14.523247718811035
    5. '	B' → logprob: -16.89824867248535
    6. '_B' → logprob: -18.02324867248535
    7. 'b' → logprob: -18.89824867248535
    8. ' ' → logprob: -19.02324867248535
    9. '```' → logprob: -19.39824867248535
    10. '  ' → logprob: -19.39824867248535

Token 40: '

' (ID: 279)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2791597247123718
    2. '<|end|>' → logprob: -1.6541597843170166
    3. '
' → logprob: -3.4041597843170166
    4. '\n' → logprob: -5.1541595458984375
    5. ' ' → logprob: -5.5291595458984375
    6. ' d' → logprob: -6.1541595458984375
    7. 'n' → logprob: -6.4041595458984375
    8. '\' → logprob: -7.0291595458984375
    9. '```' → logprob: -7.0291595458984375
    10. '#' → logprob: -7.0291595458984375

Token 41: 'if' (ID: 366)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5987138152122498
    2. '
' → logprob: -1.0987138748168945
    3. 'if' → logprob: -2.7237138748168945
    4. 'print' → logprob: -3.7237138748168945
    5. '#' → logprob: -4.4737138748168945
    6. '\n' → logprob: -5.4737138748168945
    7. 'i' → logprob: -5.7237138748168945
    8. ' 
' → logprob: -6.5987138748168945
    9. 'n' → logprob: -6.5987138748168945
    10. '' → logprob: -6.7237138748168945

Token 42: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.14310605823993683
    2. 'a' → logprob: -2.018105983734131
    3. ' ' → logprob: -8.643106460571289
    4. ' A' → logprob: -8.893106460571289
    5. ' ' → logprob: -9.893106460571289
    6. 'A' → logprob: -10.143106460571289
    7. ' (' → logprob: -12.143106460571289
    8. '_a' → logprob: -12.268106460571289
    9. '(' → logprob: -12.518106460571289
    10. ' c' → logprob: -12.893106460571289

Token 43: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.01406360138207674
    2. '>' → logprob: -5.014063835144043
    3. ' >=' → logprob: -6.139063835144043
    4. ' ==' → logprob: -6.514063835144043
    5. ' ' → logprob: -6.514063835144043
    6. ' <' → logprob: -6.889063835144043
    7. ' <=' → logprob: -6.889063835144043
    8. ' !=' → logprob: -10.139063835144043
    9. '==' → logprob: -10.889063835144043
    10. ' %' → logprob: -10.889063835144043

Token 44: ' b' (ID: 287)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0438087023794651
    2. 'b' → logprob: -3.668808698654175
    3. ' ' → logprob: -4.168808937072754
    4. ' b' → logprob: -7.043808937072754
    5. '10' → logprob: -7.418808937072754
    6. 'B' → logprob: -8.668808937072754
    7. '100' → logprob: -9.543808937072754
    8. 'c' → logprob: -9.793808937072754
    9. '20' → logprob: -9.793808937072754
    10. '1' → logprob: -10.793808937072754

Token 45: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2909691631793976
    2. ' :' → logprob: -1.5409691333770752
    3. ' and' → logprob: -3.290969133377075
    4. 'and' → logprob: -7.040969371795654
    5. ' ' → logprob: -9.665968894958496
    6. ' :
' → logprob: -10.540968894958496
    7. ':
' → logprob: -10.540968894958496
    8. '+:' → logprob: -10.915968894958496
    9. '>:' → logprob: -11.040968894958496
    10. '>' → logprob: -11.540968894958496

Token 46: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12967266142368317
    2. 'a' → logprob: -2.3796727657318115
    3. ' c' → logprob: -3.6296727657318115
    4. 'c' → logprob: -6.004672527313232
    5. ' b' → logprob: -10.50467300415039
    6. ' ' → logprob: -12.12967300415039
    7. 'b' → logprob: -12.50467300415039
    8. '	a' → logprob: -13.37967300415039
    9. ' and' → logprob: -13.62967300415039
    10. ' ' → logprob: -13.62967300415039

Token 47: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.18885256350040436
    2. '>=' → logprob: -1.8138525485992432
    3. ' >' → logprob: -4.938852787017822
    4. '>' → logprob: -6.313852787017822
    5. ' ' → logprob: -9.938852310180664
    6. '<|end|>' → logprob: -11.313852310180664
    7. ' <=' → logprob: -11.688852310180664
    8. ' and' → logprob: -12.188852310180664
    9. '<=' → logprob: -13.063852310180664
    10. '   ' → logprob: -13.063852310180664

Token 48: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026300877332687378
    2. ' c' → logprob: -3.6513009071350098
    3. '	c' → logprob: -14.776300430297852
    4. ' ' → logprob: -15.776300430297852
    5. '_c' → logprob: -17.02630043029785
    6. '   ' → logprob: -18.15130043029785
    7. ')c' → logprob: -18.27630043029785
    8. '```' → logprob: -18.40130043029785
    9. 'с' → logprob: -18.52630043029785
    10. ' ' → logprob: -18.52630043029785

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.309382373117842e-05
    2. ':
' → logprob: -11.000033378601074
    3. ' :' → logprob: -11.125033378601074
    4. '):' → logprob: -14.375033378601074
    5. ':**' → logprob: -15.000033378601074
    6. '>:' → logprob: -15.500033378601074
    7. ' and' → logprob: -15.875033378601074
    8. ':

' → logprob: -16.250032424926758
    9. '：' → logprob: -16.625032424926758
    10. '':' → logprob: -17.500032424926758

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8976295590400696
    2. 'print' → logprob: -1.0226294994354248
    3. '\n' → logprob: -1.8976294994354248
    4. ' print' → logprob: -3.022629499435425
    5. ':' → logprob: -4.022629737854004
    6. '
' → logprob: -5.522629737854004
    7. '    
' → logprob: -5.897629737854004
    8. '\' → logprob: -6.522629737854004
    9. ' 
' → logprob: -6.772629737854004
    10. ':
' → logprob: -7.022629737854004

Token 51: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00018077615823131055
    2. ' print' → logprob: -9.125181198120117
    3. '   ' → logprob: -9.875181198120117
    4. 'pr' → logprob: -11.125181198120117
    5. 'prin' → logprob: -13.500181198120117
    6. 'result' → logprob: -14.000181198120117
    7. 'pri' → logprob: -14.250181198120117
    8. 'a' → logprob: -14.375181198120117
    9. '```' → logprob: -14.375181198120117
    10. ' ' → logprob: -14.500181198120117

Token 52: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10046415776014328
    2. '(' → logprob: -2.350464105606079
    3. 'a' → logprob: -8.3504638671875
    4. '('' → logprob: -11.3504638671875
    5. '("' → logprob: -12.6004638671875
    6. '(A' → logprob: -12.8504638671875
    7. ' (' → logprob: -13.6004638671875
    8. '()' → logprob: -13.7254638671875
    9. '(
' → logprob: -14.9754638671875
    10. '((' → logprob: -15.1004638671875

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.125000953674316
    4. '')' → logprob: -16.875
    5. '）' → logprob: -17.625
    6. '")' → logprob: -18.375
    7. '}' → logprob: -18.625
    8. '))' → logprob: -18.875
    9. '`)' → logprob: -19.125
    10. '   ' → logprob: -19.375

Token 54: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.11945369094610214
    2. 'e' → logprob: -3.3694536685943604
    3. 'else' → logprob: -3.3694536685943604
    4. '\n' → logprob: -3.8694536685943604
    5. '
' → logprob: -3.9944536685943604
    6. ' elif' → logprob: -7.2444539070129395
    7. ' 
' → logprob: -7.3694539070129395
    8. '<|end|>' → logprob: -7.6194539070129395
    9. 'el' → logprob: -7.7444539070129395
    10. ')' → logprob: -7.8694539070129395

Token 55: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04923147335648537
    2. 'b' → logprob: -3.04923152923584
    3. ' a' → logprob: -8.04923152923584
    4. ' c' → logprob: -8.92423152923584
    5. 'a' → logprob: -9.17423152923584
    6. ' ' → logprob: -9.67423152923584
    7. ' ' → logprob: -11.67423152923584
    8. 'c' → logprob: -11.67423152923584
    9. '	b' → logprob: -12.79923152923584
    10. '   ' → logprob: -13.67423152923584

Token 56: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6358126401901245
    2. ' >=' → logprob: -0.7608126401901245
    3. '>' → logprob: -6.010812759399414
    4. '>=' → logprob: -7.510812759399414
    5. ' ' → logprob: -8.635812759399414
    6. ' <=' → logprob: -11.385812759399414
    7. ' <' → logprob: -11.635812759399414
    8. ' ' → logprob: -12.760812759399414
    9. ' ≥' → logprob: -13.010812759399414
    10. '   ' → logprob: -13.135812759399414

Token 57: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.18867065012454987
    2. 'a' → logprob: -1.8136706352233887
    3. ' c' → logprob: -4.813670635223389
    4. ' a' → logprob: -7.188670635223389
    5. ' ' → logprob: -12.188671112060547
    6. '	c' → logprob: -12.813671112060547
    7. '   ' → logprob: -13.063671112060547
    8. '_c' → logprob: -14.563671112060547
    9. '	a' → logprob: -14.563671112060547
    10. 'b' → logprob: -14.688671112060547

Token 58: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20141790807247162
    2. 'and' → logprob: -1.7014179229736328
    3. ' ' → logprob: -12.451417922973633
    4. ' a' → logprob: -15.201417922973633
    5. ' ' → logprob: -15.826417922973633
    6. ' an' → logprob: -16.201417922973633
    7. '   ' → logprob: -16.701417922973633
    8. '	and' → logprob: -17.076417922973633
    9. 'a' → logprob: -17.576417922973633
    10. 'an' → logprob: -17.826417922973633

Token 59: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.28115394711494446
    2. 'b' → logprob: -1.406153917312622
    3. ' ' → logprob: -13.406153678894043
    4. '    ' → logprob: -14.531153678894043
    5. '   ' → logprob: -14.906153678894043
    6. 'c' → logprob: -14.906153678894043
    7. '	b' → logprob: -15.031153678894043
    8. ' c' → logprob: -15.281153678894043
    9. ' ' → logprob: -15.406153678894043
    10. '```' → logprob: -16.28115463256836

Token 60: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.05494830012321472
    2. '>=' → logprob: -2.929948329925537
    3. ' >' → logprob: -10.054947853088379
    4. '>' → logprob: -11.179947853088379
    5. ' ' → logprob: -11.929947853088379
    6. 'and' → logprob: -14.429947853088379
    7. ' and' → logprob: -14.804947853088379
    8. ')>=' → logprob: -14.804947853088379
    9. ']>=' → logprob: -15.054947853088379
    10. '   ' → logprob: -15.429947853088379

Token 61: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023246990516781807
    2. ' c' → logprob: -3.773247003555298
    3. '	c' → logprob: -14.148246765136719
    4. '   ' → logprob: -15.148246765136719
    5. '_c' → logprob: -15.398246765136719
    6. ' ' → logprob: -15.648246765136719
    7. '<|end|>' → logprob: -16.02324676513672
    8. '  ' → logprob: -16.89824676513672
    9. ')c' → logprob: -17.02324676513672
    10. '    ' → logprob: -17.77324676513672

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.794061770662665e-05
    2. ':
' → logprob: -9.25009822845459
    3. '):' → logprob: -13.50009822845459
    4. ' :' → logprob: -15.25009822845459
    5. ':**' → logprob: -16.500097274780273
    6. ':

' → logprob: -17.625097274780273
    7. ':
' → logprob: -18.125097274780273
    8. '   ' → logprob: -18.250097274780273
    9. '>:' → logprob: -18.250097274780273
    10. ')' → logprob: -18.250097274780273

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013770407065749168
    2. 'print' → logprob: -4.513770580291748
    3. ' print' → logprob: -6.138770580291748
    4. '       ' → logprob: -8.13877010345459
    5. '    
' → logprob: -9.26377010345459
    6. '    ' → logprob: -9.51377010345459
    7. ':' → logprob: -10.26377010345459
    8. '  ' → logprob: -10.76377010345459
    9. ' ' → logprob: -11.51377010345459
    10. '	print' → logprob: -12.01377010345459

Token 64: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007265966385602951
    2. ' print' → logprob: -5.007266044616699
    3. '   ' → logprob: -7.507266044616699
    4. '```' → logprob: -13.7572660446167
    5. '	print' → logprob: -15.3822660446167
    6. ' ' → logprob: -17.257265090942383
    7. '``' → logprob: -17.382265090942383
    8. '  ' → logprob: -17.632265090942383
    9. '.print' → logprob: -17.757265090942383
    10. '    ' → logprob: -18.007265090942383

Token 65: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -9.817902173381299e-05
    2. '(' → logprob: -9.25009822845459
    3. 'b' → logprob: -13.12509822845459
    4. '(B' → logprob: -18.000097274780273
    5. ' (' → logprob: -18.875097274780273
    6. '((' → logprob: -19.250097274780273
    7. ' b' → logprob: -19.375097274780273
    8. '(
' → logprob: -19.750097274780273
    9. ')b' → logprob: -21.000097274780273
    10. '(s' → logprob: -21.250097274780273

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47412803769111633
    2. ')
' → logprob: -0.974128007888794
    3. 'else' → logprob: -10.974127769470215
    4. 'elif' → logprob: -10.974127769470215
    5. ')
' → logprob: -11.099127769470215
    6. '   ' → logprob: -15.099127769470215
    7. ')

' → logprob: -15.224127769470215
    8. ')`
' → logprob: -15.349127769470215
    9. ' )
' → logprob: -15.724127769470215
    10. '')
' → logprob: -16.09912872314453

Token 67: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0015273597091436386
    2. 'elif' → logprob: -6.501527309417725
    3. ' else' → logprob: -10.626527786254883
    4. 'el' → logprob: -15.251527786254883
    5. 'elses' → logprob: -15.751527786254883
    6. 'els' → logprob: -15.751527786254883
    7. '```' → logprob: -16.626527786254883
    8. '    
' → logprob: -17.001527786254883
    9. 'elser' → logprob: -17.001527786254883
    10. '#else' → logprob: -17.126527786254883

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013381359167397022
    2. ':
' → logprob: -9.000133514404297
    3. ' :' → logprob: -11.875133514404297
    4. '   ' → logprob: -12.750133514404297
    5. ':
' → logprob: -16.375133514404297
    6. '():' → logprob: -16.500133514404297
    7. ':

' → logprob: -17.000133514404297
    8. ':return' → logprob: -17.000133514404297
    9. 'print' → logprob: -17.125133514404297
    10. '):' → logprob: -17.375133514404297

Token 69: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005101172253489494
    2. '   ' → logprob: -5.755101203918457
    3. ' print' → logprob: -6.255101203918457
    4. '(print' → logprob: -15.005101203918457
    5. '  ' → logprob: -15.630101203918457
    6. '	print' → logprob: -15.755101203918457
    7. ' ' → logprob: -16.38010025024414
    8. '.print' → logprob: -16.50510025024414
    9. '    ' → logprob: -16.75510025024414
    10. '    
' → logprob: -17.25510025024414

Token 70: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. 'c' → logprob: -15.0
    3. ' print' → logprob: -16.375
    4. '   ' → logprob: -20.625
    5. '(print' → logprob: -21.125
    6. '```' → logprob: -21.75
    7. 'pr' → logprob: -22.5
    8. 'prin' → logprob: -22.5
    9. 'printf' → logprob: -22.75
    10. '.print' → logprob: -23.125

Token 71: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.011048054322600365
    2. '(' → logprob: -4.511047840118408
    3. '(C' → logprob: -15.886048316955566
    4. 'c' → logprob: -16.13604736328125
    5. ' (' → logprob: -18.38604736328125
    6. '(
' → logprob: -18.51104736328125
    7. '('' → logprob: -18.63604736328125
    8. '((' → logprob: -18.76104736328125
    9. '(max' → logprob: -18.76104736328125
    10. '(s' → logprob: -19.13604736328125

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -17.25
    3. '))' → logprob: -17.25
    4. ' )' → logprob: -17.5
    5. ')`' → logprob: -18.5
    6. '')' → logprob: -20.375
    7. ')}' → logprob: -20.875
    8. '）' → logprob: -21.375
    9. ')**' → logprob: -21.5
    10. '()' → logprob: -21.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 70
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 59
Précision stricte (1ère position): 37.14%
Précision adaptée (1ère position): 41.43%
Précision (top 10): 84.29%
================================================================================
