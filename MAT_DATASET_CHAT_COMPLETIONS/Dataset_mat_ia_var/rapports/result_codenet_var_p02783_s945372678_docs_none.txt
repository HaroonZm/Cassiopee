================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H,A=map(int,input().split())
HP=H
count=0
while HP>0:
    count+=1
    HP-=A
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ',A' (ID: 59196)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8097522854804993
    2. '[]' → logprob: -1.4347522258758545
    3. '0' → logprob: -2.1847522258758545
    4. '{}' → logprob: -2.9347522258758545
    5. '10' → logprob: -3.1847522258758545
    6. '(' → logprob: -3.1847522258758545
    7. 'range' → logprob: -4.684752464294434
    8. 'map' → logprob: -4.684752464294434
    9. '1' → logprob: -5.059752464294434
    10. '[],' → logprob: -5.059752464294434

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016243625432252884
    2. '(lambda' → logprob: -4.5162434577941895
    3. '(int' → logprob: -5.5162434577941895
    4. '(input' → logprob: -8.391243934631348
    5. '(str' → logprob: -8.516243934631348
    6. '<|end|>' → logprob: -8.641243934631348
    7. '```' → logprob: -9.266243934631348
    8. '(user' → logprob: -9.266243934631348
    9. '(open' → logprob: -9.891243934631348
    10. '[int' → logprob: -10.141243934631348

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1824728548526764
    2. ')' → logprob: -1.807472825050354
    3. '(' → logprob: -6.8074727058410645
    4. 'input' → logprob: -7.4324727058410645
    5. '=input' → logprob: -8.057473182678223
    6. ',input' → logprob: -8.432473182678223
    7. '(user' → logprob: -8.807473182678223
    8. '`)' → logprob: -10.057473182678223
    9. '())' → logprob: -10.057473182678223
    10. ' input' → logprob: -10.557473182678223

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4030423164367676
    2. '()' → logprob: -1.1530423164367676
    3. ')' → logprob: -5.028042316436768
    4. '(' → logprob: -5.403042316436768
    5. '();)' → logprob: -6.903042316436768
    6. '().' → logprob: -7.153042316436768
    7. '());' → logprob: -7.278042316436768
    8. '(()' → logprob: -8.02804183959961
    9. '(""))' → logprob: -8.02804183959961
    10. '()>' → logprob: -8.52804183959961

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.9186317482963204e-05
    2. 'strip' → logprob: -10.500049591064453
    3. ')' → logprob: -11.250049591064453
    4. ' split' → logprob: -12.375049591064453
    5. 'rstrip' → logprob: -12.875049591064453
    6. '(split' → logprob: -13.750049591064453
    7. 'read' → logprob: -14.750049591064453
    8. 'spl' → logprob: -15.875049591064453
    9. '```' → logprob: -16.500049591064453
    10. 'startswith' → logprob: -16.875049591064453

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004489462357014418
    2. '())' → logprob: -5.629489421844482
    3. '))' → logprob: -7.504489421844482
    4. '`)' → logprob: -8.37948989868164
    5. '()' → logprob: -9.50448989868164
    6. '(' → logprob: -11.37948989868164
    7. ')`' → logprob: -12.25448989868164
    8. ' )' → logprob: -12.37948989868164
    9. '')' → logprob: -12.75448989868164
    10. '),' → logprob: -13.50448989868164

Token 9: 'HP' (ID: 11269)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28348907828330994
    2. 'while' → logprob: -3.1584889888763428
    3. 'if' → logprob: -3.4084889888763428
    4. 'n' → logprob: -3.5334889888763428
    5. 'x' → logprob: -3.6584889888763428
    6. 'd' → logprob: -4.033489227294922
    7. 'r' → logprob: -4.283489227294922
    8. ')' → logprob: -4.408489227294922
    9. '#' → logprob: -4.533489227294922
    10. '
' → logprob: -4.658489227294922

Token 10: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.039103612303733826
    2. ',' → logprob: -4.0391035079956055
    3. ' =' → logprob: -5.1641035079956055
    4. 'A' → logprob: -6.0391035079956055
    5. '[' → logprob: -6.1641035079956055
    6. '_' → logprob: -6.7891035079956055
    7. '.' → logprob: -7.0391035079956055
    8. '%' → logprob: -7.0391035079956055
    9. '%=' → logprob: -7.0391035079956055
    10. '+=' → logprob: -7.1641035079956055

Token 11: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.01874515414237976
    2. '[' → logprob: -4.268744945526123
    3. '100' → logprob: -6.518744945526123
    4. 'A' → logprob: -6.768744945526123
    5. '[A' → logprob: -7.768744945526123
    6. ' H' → logprob: -7.893744945526123
    7. '10' → logprob: -7.893744945526123
    8. '[]' → logprob: -9.018745422363281
    9. ' [' → logprob: -9.393745422363281
    10. '0' → logprob: -9.393745422363281

Token 12: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.48327863216400146
    2. '-' → logprob: -1.7332786321640015
    3. '>' → logprob: -2.358278751373291
    4. '<|end|>' → logprob: -3.608278751373291
    5. ')' → logprob: -3.858278751373291
    6. '#' → logprob: -4.233278751373291
    7. ' ' → logprob: -5.108278751373291
    8. '+' → logprob: -5.108278751373291
    9. 'for' → logprob: -5.233278751373291
    10. 'while' → logprob: -5.608278751373291

Token 13: 'count' (ID: 5420)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6914559006690979
    2. '-' → logprob: -0.8164559006690979
    3. ',' → logprob: -4.066455841064453
    4. '#' → logprob: -4.441455841064453
    5. ')' → logprob: -5.441455841064453
    6. '+' → logprob: -5.691455841064453
    7. ' ' → logprob: -5.691455841064453
    8. '=' → logprob: -5.941455841064453
    9. '>' → logprob: -6.066455841064453
    10. '//' → logprob: -6.191455841064453

Token 14: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017397409304976463
    2. ' =' → logprob: -4.517397403717041
    3. '_' → logprob: -5.142397403717041
    4. '_=' → logprob: -8.3923978805542
    5. ' ' → logprob: -9.2673978805542
    6. '+=' → logprob: -9.7673978805542
    7. ' +=' → logprob: -10.3923978805542
    8. '(' → logprob: -10.6423978805542
    9. '+' → logprob: -11.3923978805542
    10. '_space' → logprob: -11.8923978805542

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.12127808178775e-05
    2. ' ' → logprob: -10.000051498413086
    3. '1' → logprob: -12.125051498413086
    4. '(' → logprob: -16.375051498413086
    5. '-' → logprob: -16.875051498413086
    6. '`' → logprob: -17.250051498413086
    7. '```' → logprob: -17.375051498413086
    8. '=' → logprob: -17.750051498413086
    9. '10' → logprob: -17.812551498413086
    10. '3' → logprob: -17.875051498413086

Token 16: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8413016200065613
    2. '
' → logprob: -1.341301679611206
    3. ' 
' → logprob: -1.591301679611206
    4. '\n' → logprob: -3.216301679611206
    5. ':' → logprob: -3.841301679611206
    6. 'while' → logprob: -4.091301441192627
    7. '```' → logprob: -5.341301441192627
    8. '  
' → logprob: -5.466301441192627
    9. '<|end|>' → logprob: -5.466301441192627
    10. '' → logprob: -5.716301441192627

Token 17: 'while' (ID: 7032)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6957599520683289
    2. 'while' → logprob: -0.6957599520683289
    3. 'if' → logprob: -7.3207597732543945
    4. 'for' → logprob: -7.4457597732543945
    5. '>' → logprob: -8.070759773254395
    6. ')' → logprob: -8.445759773254395
    7. ' for' → logprob: -8.695759773254395
    8. ' if' → logprob: -9.195759773254395
    9. '=' → logprob: -9.320759773254395
    10. ':' → logprob: -9.445759773254395

Token 18: ' HP' (ID: 21979)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.30824756622314453
    2. ' HP' → logprob: -1.6832475662231445
    3. ' count' → logprob: -2.6832475662231445
    4. 'count' → logprob: -5.4332475662231445
    5. 'H' → logprob: -5.5582475662231445
    6. 'HP' → logprob: -5.9332475662231445
    7. ' ' → logprob: -9.058247566223145
    8. ' True' → logprob: -9.433247566223145
    9. ' A' → logprob: -11.183247566223145
    10. '(count' → logprob: -11.183247566223145

Token 19: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20146548748016357
    2. '>' → logprob: -1.7014654874801636
    3. ' >=' → logprob: -10.451465606689453
    4. '>=' → logprob: -11.201465606689453
    5. '">' → logprob: -13.201465606689453
    6. ' ' → logprob: -13.451465606689453
    7. '```' → logprob: -13.576465606689453
    8. ' <=' → logprob: -13.951465606689453
    9. '-' → logprob: -14.326465606689453
    10. ' ' → logprob: -15.076465606689453

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011028258595615625
    2. ' ' → logprob: -6.876102924346924
    3. 'A' → logprob: -10.876102447509766
    4. '1' → logprob: -10.876102447509766
    5. '10' → logprob: -11.626102447509766
    6. '100' → logprob: -12.126102447509766
    7. '20' → logprob: -12.251102447509766
    8. '=' → logprob: -13.001102447509766
    9. '50' → logprob: -13.001102447509766
    10. '9' → logprob: -13.563602447509766

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010778261348605156
    2. ':
' → logprob: -6.876077651977539
    3. ' :' → logprob: -10.376077651977539
    4. ':

' → logprob: -13.001077651977539
    5. ',' → logprob: -13.126077651977539
    6. ':def' → logprob: -13.626077651977539
    7. '>' → logprob: -14.001077651977539
    8. ' :
' → logprob: -14.001077651977539
    9. '=' → logprob: -14.126077651977539
    10. '-' → logprob: -14.376077651977539

Token 22: '   ' (ID: 271)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.5180939435958862
    2. ' HP' → logprob: -1.3930939435958862
    3. '   ' → logprob: -2.518094062805176
    4. 'count' → logprob: -3.518094062805176
    5. ' count' → logprob: -4.393094062805176
    6. ' ' → logprob: -4.768094062805176
    7. '+' → logprob: -5.393094062805176
    8. ' ' → logprob: -5.768094062805176
    9. '```' → logprob: -6.393094062805176
    10. '    ' → logprob: -6.643094062805176

Token 23: ' count' (ID: 3605)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.8496426343917847
    2. ' HP' → logprob: -1.7246426343917847
    3. 'A' → logprob: -2.099642753601074
    4. 'H' → logprob: -2.974642753601074
    5. ' A' → logprob: -2.974642753601074
    6. ' ' → logprob: -3.724642753601074
    7. ' H' → logprob: -3.849642753601074
    8. '   ' → logprob: -3.974642753601074
    9. ' 
' → logprob: -4.474642753601074
    10. 'count' (adapté à ' count') → logprob: -4.599642753601074

Token 24: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2535593509674072
    2. ' +=' → logprob: -1.5035593509674072
    3. '+' → logprob: -6.628559112548828
    4. ' -=' → logprob: -9.378559112548828
    5. '-=' → logprob: -9.628559112548828
    6. '+=(' → logprob: -10.128559112548828
    7. '+="' → logprob: -10.378559112548828
    8. '=' → logprob: -10.628559112548828
    9. '+='' → logprob: -10.753559112548828
    10. ' +' → logprob: -11.628559112548828

Token 25: '1' (ID: 16)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.13131093978881836
    2. '1' → logprob: -2.1313109397888184
    3. 'H' → logprob: -5.881310939788818
    4. '2' → logprob: -7.756310939788818
    5. '10' → logprob: -8.256311416625977
    6. '5' → logprob: -8.631311416625977
    7. '100' → logprob: -9.131311416625977
    8. ' A' → logprob: -9.256311416625977
    9. '50' → logprob: -9.756311416625977
    10. '(A' → logprob: -9.756311416625977

Token 26: '
' (ID: 198)
  Prédit: ' HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.09682038426399231
    2. 'HP' → logprob: -2.47182035446167
    3. ' 
' → logprob: -5.97182035446167
    4. '   ' → logprob: -6.22182035446167
    5. ' ' → logprob: -7.22182035446167
    6. ' ' → logprob: -7.34682035446167
    7. '    
' → logprob: -7.97182035446167
    8. '  
' → logprob: -8.221820831298828
    9. ' H' → logprob: -8.846820831298828
    10. '\n' → logprob: -9.221820831298828

Token 27: '   ' (ID: 271)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'HP' → logprob: -1.2588527202606201
    2. ' HP' → logprob: -1.3838527202606201
    3. '
' → logprob: -1.6338527202606201
    4. ' 
' → logprob: -2.88385272026062
    5. 'A' → logprob: -3.50885272026062
    6. '    
' → logprob: -3.63385272026062
    7. ' A' → logprob: -4.008852958679199
    8. ' ' → logprob: -4.133852958679199
    9. ',' → logprob: -4.383852958679199
    10. '`' → logprob: -4.508852958679199

Token 28: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' (adapté à ' HP') → logprob: -0.00011224505578866228
    2. ' HP' → logprob: -9.875112533569336
    3. 'H' → logprob: -10.625112533569336
    4. 'A' → logprob: -10.875112533569336
    5. '   ' → logprob: -12.500112533569336
    6. 'if' → logprob: -12.625112533569336
    7. 'hp' → logprob: -12.875112533569336
    8. '```' → logprob: -13.250112533569336
    9. 'Hp' → logprob: -13.375112533569336
    10. '_HP' → logprob: -13.500112533569336

Token 29: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.041825201362371445
    2. '-' → logprob: -3.291825294494629
    3. ' -=' → logprob: -5.916825294494629
    4. '-H' → logprob: -7.291825294494629
    5. ' -' → logprob: -8.541825294494629
    6. '=' → logprob: -9.291825294494629
    7. '-A' → logprob: -9.291825294494629
    8. '=-' → logprob: -11.791825294494629
    9. '=A' → logprob: -12.166825294494629
    10. '+=' → logprob: -12.416825294494629

Token 30: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.129266067640856e-05
    2. 'max' → logprob: -12.000020980834961
    3. '-A' → logprob: -12.625020980834961
    4. ' A' → logprob: -12.750020980834961
    5. ' ' → logprob: -13.500020980834961
    6. 'a' → logprob: -13.750020980834961
    7. '   ' → logprob: -14.000020980834961
    8. 'H' → logprob: -14.000020980834961
    9. 'B' → logprob: -14.125020980834961
    10. '1' → logprob: -14.250020980834961

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7506471276283264
    2. 'print' → logprob: -0.7506471276283264
    3. '\n' → logprob: -3.3756470680236816
    4. '<|end|>' → logprob: -4.375647068023682
    5. ' print' → logprob: -6.000647068023682
    6. '\' → logprob: -7.000647068023682
    7. '*' → logprob: -7.250647068023682
    8. 'if' → logprob: -7.375647068023682
    9. '#' → logprob: -7.625647068023682
    10. '+' → logprob: -7.875647068023682

Token 32: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05022827163338661
    2. '
' → logprob: -3.5502283573150635
    3. '\n' → logprob: -4.050228118896484
    4. ' print' → logprob: -6.675228118896484
    5. '
' → logprob: -8.175228118896484
    6. '```' → logprob: -8.675228118896484
    7. '\' → logprob: -8.800228118896484
    8. ' 
' → logprob: -8.925228118896484
    9. 'if' → logprob: -9.050228118896484
    10. '<|end|>' → logprob: -9.300228118896484

Token 33: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023262951523065567
    2. '(count' → logprob: -3.7732629776000977
    3. '()' → logprob: -11.523262977600098
    4. '("("' → logprob: -12.773262977600098
    5. '('' → logprob: -13.648262977600098
    6. '((' → logprob: -13.773262977600098
    7. '(max' → logprob: -14.398262977600098
    8. '(
' → logprob: -15.023262977600098
    9. '(`' → logprob: -15.148262977600098
    10. '(sum' → logprob: -15.398262977600098

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.0
    3. ')
' → logprob: -17.75
    4. ')`' → logprob: -18.0
    5. '))' → logprob: -19.0
    6. '`)' → logprob: -19.125
    7. '）' → logprob: -19.5
    8. '')' → logprob: -19.5
    9. ')**' → logprob: -20.375
    10. '```' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 32
Tokens correctement prédits (1ère position, stricte): 12
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 26
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 40.62%
Précision (top 10): 81.25%
================================================================================
