================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir une valeur via le clavier
# La fonction input() affiche un champ de saisie et récupère le texte entré par l'utilisateur sous forme de chaîne de caractères (str)
# int() convertit la chaîne de caractères obtenue en un nombre entier (int)
a = int(input())

# Calcule le tiers (1/3) de la valeur entière saisie et stocke ce résultat dans la variable b
# L'opérateur '/' effectue une division flottante (retourne un float même si les deux opérandes sont des entiers)
b = a / 3

# Calcule la puissance de b élevé à 3 (c'est-à-dire b multiplié par lui-même deux fois : b * b * b, soit b^3)
# L'opérateur '**' est utilisé pour l'exponentiation en Python
resultat = b ** 3

# Affiche le résultat du calcul précédent
# La fonction print() envoie la valeur de resultat dans le flux de sortie standard (console)
print(resultat)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7432820796966553
    2. ' ' → logprob: -1.6182820796966553
    3. ':' → logprob: -1.8682820796966553
    4. '_' → logprob: -2.2432820796966553
    5. ' de' → logprob: -4.243282318115234
    6. ' :' → logprob: -4.243282318115234
    7. '```' → logprob: -4.868282318115234
    8. ' =' → logprob: -5.243282318115234
    9. ' d' → logprob: -5.243282318115234
    10. ''' → logprob: -5.368282318115234

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.013280224055051804
    2. ' l' → logprob: -4.388280391693115
    3. 'user' → logprob: -8.388279914855957
    4. '#' → logprob: -8.638279914855957
    5. 'util' → logprob: -9.513279914855957
    6. ''' → logprob: -10.263279914855957
    7. '`' → logprob: -10.263279914855957
    8. '```' → logprob: -10.638279914855957
    9. ' ' → logprob: -10.888279914855957
    10. 'la' → logprob: -11.013279914855957

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.6533088684082031
    2. 'util' → logprob: -1.4033088684082031
    3. 'u' → logprob: -1.6533088684082031
    4. ' utilisateur' → logprob: -4.278308868408203
    5. 'a' → logprob: -4.528308868408203
    6. ''' → logprob: -4.903308868408203
    7. '’utilisateur' → logprob: -5.028308868408203
    8. 'us' → logprob: -6.778308868408203
    9. '_util' → logprob: -7.528308868408203
    10. 'Utilisateur' → logprob: -7.778308868408203

Token 6: ' de' (ID: 334)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.8802700638771057
    2. 'nom' → logprob: -0.8802700638771057
    3. 'n' → logprob: -2.255270004272461
    4. 'user' → logprob: -3.755270004272461
    5. 'print' → logprob: -4.755270004272461
    6. 's' → logprob: -4.880270004272461
    7. 'input' → logprob: -5.005270004272461
    8. 'username' → logprob: -5.255270004272461
    9. '`' → logprob: -5.880270004272461
    10. 'prenom' → logprob: -6.005270004272461

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02055169641971588
    2. 'entr' → logprob: -4.770551681518555
    3. 'r' → logprob: -4.895551681518555
    4. '```' → logprob: -6.520551681518555
    5. ' saisir' → logprob: -6.895551681518555
    6. '#' → logprob: -7.645551681518555
    7. 'sa' → logprob: -8.395551681518555
    8. 'entrée' → logprob: -8.645551681518555
    9. 'don' → logprob: -8.895551681518555
    10. 'input' → logprob: -9.020551681518555

Token 8: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018289826810359955
    2. ' un' → logprob: -5.018290042877197
    3. ''' → logprob: -5.268290042877197
    4. '_' → logprob: -6.143290042877197
    5. ' une' → logprob: -6.643290042877197
    6. 's' → logprob: -7.518290042877197
    7. 'u' → logprob: -8.018289566040039
    8. '```' → logprob: -8.018289566040039
    9. 'r' → logprob: -8.518289566040039
    10. ''un' → logprob: -8.643289566040039

Token 9: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01728341355919838
    2. ' chaîne' → logprob: -4.7672834396362305
    3. ' phrase' → logprob: -6.1422834396362305
    4. 'chaine' → logprob: -6.6422834396362305
    5. ' ligne' → logprob: -6.8922834396362305
    6. ' espace' → logprob: -7.3922834396362305
    7. 'space' → logprob: -7.3922834396362305
    8. ' valeur' → logprob: -7.6422834396362305
    9. ' chaine' → logprob: -7.8922834396362305
    10. 'phrase' → logprob: -8.14228343963623

Token 10: ' via' (ID: 4493)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.15453767776489258
    2. '_' → logprob: -2.7795376777648926
    3. 'value' → logprob: -3.7795376777648926
    4. 'val' → logprob: -4.154537677764893
    5. 'i' → logprob: -5.029537677764893
    6. 'input' → logprob: -5.029537677764893
    7. '\' → logprob: -5.154537677764893
    8. 's' → logprob: -5.154537677764893
    9. 'x' → logprob: -5.404537677764893
    10. 'n' → logprob: -5.904537677764893

Token 11: ' le' (ID: 505)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.43446213006973267
    2. ' input' → logprob: -1.059462070465088
    3. '=input' → logprob: -6.184462070465088
    4. 'l' → logprob: -6.684462070465088
    5. '(input' → logprob: -7.559462070465088
    6. ' l' → logprob: -7.934462070465088
    7. '_' → logprob: -8.309462547302246
    8. '<input' → logprob: -8.559462547302246
    9. ' ' → logprob: -8.559462547302246
    10. '_input' → logprob: -8.809462547302246

Token 12: ' clavier' (ID: 187878)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04578856751322746
    2. ' input' → logprob: -3.170788526535034
    3. '=input' → logprob: -6.045788764953613
    4. 's' → logprob: -8.920788764953613
    5. 'n' → logprob: -9.545788764953613
    6. 'prompt' → logprob: -10.045788764953613
    7. 't' → logprob: -10.545788764953613
    8. '(input' → logprob: -11.170788764953613
    9. ' clavier' → logprob: -11.170788764953613
    10. 'print' → logprob: -11.420788764953613

Token 13: '
' (ID: 198)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9228036403656006
    2. 'v' → logprob: -1.1728036403656006
    3. 'val' → logprob: -2.2978036403656006
    4. 'value' → logprob: -2.5478036403656006
    5. 's' → logprob: -3.2978036403656006
    6. 'user' → logprob: -4.17280387878418
    7. 'x' → logprob: -4.29780387878418
    8. 'i' → logprob: -4.54780387878418
    9. '`' → logprob: -4.92280387878418
    10. '_' → logprob: -5.04780387878418

Token 14: '#' (ID: 2)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7999840378761292
    2. 'v' → logprob: -1.2999839782714844
    3. 'input' → logprob: -2.1749839782714844
    4. 's' → logprob: -2.7999839782714844
    5. 'value' → logprob: -3.1749839782714844
    6. 'x' → logprob: -4.049983978271484
    7. 'n' → logprob: -5.049983978271484
    8. '_' → logprob: -5.049983978271484
    9. 'entrée' → logprob: -5.049983978271484
    10. 'i' → logprob: -5.299983978271484

Token 15: ' La' (ID: 3038)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.15987418591976166
    2. 'value' → logprob: -2.034874200820923
    3. 'user' → logprob: -4.909873962402344
    4. 'input' → logprob: -5.659873962402344
    5. 's' → logprob: -6.284873962402344
    6. ' valeur' → logprob: -6.284873962402344
    7. 'v' → logprob: -7.159873962402344
    8. ' value' → logprob: -7.534873962402344
    9. 'x' → logprob: -8.034873962402344
    10. 'print' → logprob: -9.034873962402344

Token 16: ' fonction' (ID: 17610)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.22124943137168884
    2. ' valeur' → logprob: -1.7212494611740112
    3. ' val' → logprob: -4.971249580383301
    4. 's' → logprob: -5.346249580383301
    5. 'value' → logprob: -5.596249580383301
    6. ' ' → logprob: -6.846249580383301
    7. ' value' → logprob: -7.471249580383301
    8. '#' → logprob: -8.0962495803833
    9. ' sais' → logprob: -8.0962495803833
    10. 'v' → logprob: -8.3462495803833

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06495685875415802
    2. ' input' → logprob: -3.3149569034576416
    3. 'def' → logprob: -3.6899569034576416
    4. 's' → logprob: -6.9399566650390625
    5. '=input' → logprob: -7.8149566650390625
    6. '(input' → logprob: -9.439956665039062
    7. 'd' → logprob: -10.439956665039062
    8. 'print' → logprob: -11.064956665039062
    9. ' def' → logprob: -11.064956665039062
    10. 'i' → logprob: -11.439956665039062

Token 18: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00021057340200059116
    2. ' (' → logprob: -9.625210762023926
    3. '()' → logprob: -9.875210762023926
    4. '('' → logprob: -10.000210762023926
    5. '("' → logprob: -11.000210762023926
    6. '(
' → logprob: -11.750210762023926
    7. ' ' → logprob: -12.500210762023926
    8. '#' → logprob: -12.750210762023926
    9. '_' → logprob: -12.750210762023926
    10. '("""' → logprob: -12.875210762023926

Token 19: ' affiche' (ID: 127479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006586643401533365
    2. ' ' → logprob: -5.88158655166626
    3. ' (' → logprob: -6.13158655166626
    4. '()' → logprob: -8.381587028503418
    5. ',' → logprob: -8.506587028503418
    6. '('' → logprob: -8.631587028503418
    7. ')' → logprob: -8.631587028503418
    8. '.' → logprob: -8.756587028503418
    9. '(
' → logprob: -8.881587028503418
    10. 's' → logprob: -9.006587028503418

Token 20: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.44424518942832947
    2. ' un' → logprob: -1.5692452192306519
    3. ' la' → logprob: -3.3192451000213623
    4. ''' → logprob: -3.6942451000213623
    5. ' ' → logprob: -3.6942451000213623
    6. '"' → logprob: -3.8192451000213623
    7. '()' → logprob: -5.069245338439941
    8. ''une' → logprob: -5.319245338439941
    9. 'l' → logprob: -5.569245338439941
    10. ' ' → logprob: -5.569245338439941

Token 21: ' champ' (ID: 13341)
  Prédit: ' message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' message' → logprob: -0.5741356611251831
    2. 'message' → logprob: -0.9491356611251831
    3. ' prompt' → logprob: -3.4491357803344727
    4. 'prompt' → logprob: -4.699135780334473
    5. 'texte' → logprob: -5.324135780334473
    6. 'e' → logprob: -7.074135780334473
    7. ' texte' → logprob: -7.324135780334473
    8. '_' → logprob: -7.949135780334473
    9. 'rompt' → logprob: -8.449135780334473
    10. 'string' → logprob: -8.699135780334473

Token 22: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.043188728392124176
    2. ' ' → logprob: -3.4181888103485107
    3. 'de' → logprob: -5.668188571929932
    4. 's' → logprob: -5.668188571929932
    5. ' pour' → logprob: -7.293188571929932
    6. ' texte' → logprob: -7.918188571929932
    7. ' d' → logprob: -8.04318904876709
    8. 'texte' → logprob: -8.41818904876709
    9. ' input' → logprob: -9.04318904876709
    10. '  ' → logprob: -9.29318904876709

Token 23: ' sais' (ID: 30010)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.542550265789032
    2. 'texte' → logprob: -0.917550265789032
    3. ' sais' → logprob: -4.292550086975098
    4. ' texte' → logprob: -5.917550086975098
    5. 'text' → logprob: -6.417550086975098
    6. 'input' → logprob: -7.042550086975098
    7. 'sa' → logprob: -9.792550086975098
    8. 'S' → logprob: -10.167550086975098
    9. '>' → logprob: -10.167550086975098
    10. '```' → logprob: -10.292550086975098

Token 24: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004252677317708731
    2. 'ie' → logprob: -5.629252910614014
    3. 's' → logprob: -8.129252433776855
    4. 'es' → logprob: -8.379252433776855
    5. 'sie' → logprob: -9.254252433776855
    6. '```' → logprob: -11.129252433776855
    7. '#' → logprob: -11.629252433776855
    8. 'i' → logprob: -13.129252433776855
    9. 'se' → logprob: -14.129252433776855
    10. '   ' → logprob: -14.941752433776855

Token 25: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.629300594329834
    2. 'v' → logprob: -2.379300594329834
    3. '_' → logprob: -2.754300594329834
    4. 's' → logprob: -2.879300594329834
    5. 'user' → logprob: -3.254300594329834
    6. '.' → logprob: -3.379300594329834
    7. ',' → logprob: -3.504300594329834
    8. 'i' → logprob: -3.629300594329834
    9. 'u' → logprob: -4.004300594329834
    10. '(' → logprob: -4.004300594329834

Token 26: ' récup' (ID: 62856)
  Prédit: ' récup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' récup' → logprob: -1.211869239807129
    2. 'ren' → logprob: -1.586869239807129
    3. 'att' → logprob: -1.586869239807129
    4. ' retourne' → logprob: -2.461869239807129
    5. 'r' → logprob: -2.586869239807129
    6. ' attend' → logprob: -2.961869239807129
    7. 'ret' → logprob: -3.836869239807129
    8. ' ren' → logprob: -4.086869239807129
    9. 'lit' → logprob: -4.086869239807129
    10. ' lit' → logprob: -4.711869239807129

Token 27: 'ère' (ID: 4346)
  Prédit: 'è'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'è' → logprob: -0.5798971056938171
    2. 'ère' → logprob: -0.8298971056938171
    3. 'é' → logprob: -5.704896926879883
    4. 'èr' → logprob: -8.579896926879883
    5. 'ére' → logprob: -9.454896926879883
    6. 'e' → logprob: -10.204896926879883
    7. 'ë' → logprob: -10.204896926879883
    8. '&e' → logprob: -10.329896926879883
    9. '�' → logprob: -10.579896926879883
    10. '#' → logprob: -10.579896926879883

Token 28: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0507614612579346
    2. ' l' → logprob: -1.1757614612579346
    3. ' ' → logprob: -1.4257614612579346
    4. ' une' → logprob: -2.6757614612579346
    5. 'l' → logprob: -4.3007612228393555
    6. 'la' → logprob: -5.3007612228393555
    7. ' un' → logprob: -5.8007612228393555
    8. ' ' → logprob: -5.9257612228393555
    9. 'une' → logprob: -6.5507612228393555
    10. 'le' → logprob: -6.5507612228393555

Token 29: ' texte' (ID: 53492)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.9268261790275574
    2. ' texte' → logprob: -1.3018262386322021
    3. 's' → logprob: -2.176826238632202
    4. 'val' → logprob: -2.301826238632202
    5. 'entrée' → logprob: -4.051826000213623
    6. 'chaine' → logprob: -4.176826000213623
    7. '_' → logprob: -4.926826000213623
    8. 'l' → logprob: -5.176826000213623
    9. ' l' → logprob: -5.301826000213623
    10. 'la' → logprob: -5.426826000213623

Token 30: ' entr' (ID: 7072)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8068754076957703
    2. '#' → logprob: -2.056875467300415
    3. 'user' → logprob: -2.306875467300415
    4. '.' → logprob: -2.556875467300415
    5. 'v' → logprob: -3.431875467300415
    6. '_' → logprob: -3.431875467300415
    7. 'u' → logprob: -3.556875467300415
    8. 'n' → logprob: -4.181875228881836
    9. 'val' → logprob: -4.181875228881836
    10. 'entrée' → logprob: -4.181875228881836

Token 31: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.020990371704101562
    2. 'ée' → logprob: -3.8959903717041016
    3. 'er' → logprob: -8.020990371704102
    4. 'e' → logprob: -9.270990371704102
    5. 'ées' → logprob: -11.395990371704102
    6. 'y' → logprob: -12.145990371704102
    7. 'è' → logprob: -14.020990371704102
    8. 'ié' → logprob: -14.020990371704102
    9. '&eacute' → logprob: -14.270990371704102
    10. 'ér' → logprob: -14.270990371704102

Token 32: ' par' (ID: 686)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7969719171524048
    2. 'val' → logprob: -1.6719719171524048
    3. '#' → logprob: -2.5469717979431152
    4. 'user' → logprob: -3.0469717979431152
    5. 's' → logprob: -3.1719717979431152
    6. 'u' → logprob: -3.4219717979431152
    7. 'value' → logprob: -3.5469717979431152
    8. 'n' → logprob: -3.6719717979431152
    9. 'x' → logprob: -3.9219717979431152
    10. '_' → logprob: -4.296971797943115

Token 33: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03880595788359642
    2. ' l' → logprob: -3.2888059616088867
    3. '	l' → logprob: -7.788805961608887
    4. ' ' → logprob: -8.663805961608887
    5. 'util' → logprob: -9.913805961608887
    6. 'la' → logprob: -10.788805961608887
    7. 'def' → logprob: -10.913805961608887
    8. '#' → logprob: -11.163805961608887
    9. ' défaut' → logprob: -11.288805961608887
    10. ' ' → logprob: -11.288805961608887

Token 34: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.0359000600874424
    2. ''' → logprob: -4.285900115966797
    3. 'u' → logprob: -4.660900115966797
    4. ''u' → logprob: -4.785900115966797
    5. ''util' → logprob: -6.035900115966797
    6. ''us' → logprob: -7.285900115966797
    7. '’utilisateur' → logprob: -8.160900115966797
    8. ''user' → logprob: -9.035900115966797
    9. ''a' → logprob: -9.160900115966797
    10. ''use' → logprob: -10.535900115966797

Token 35: ' sous' (ID: 14487)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5315853357315063
    2. 'val' → logprob: -2.031585216522217
    3. '#' → logprob: -2.406585216522217
    4. 'n' → logprob: -2.781585216522217
    5. 's' → logprob: -3.656585216522217
    6. 'u' → logprob: -3.656585216522217
    7. 'value' → logprob: -4.156585216522217
    8. '\n' → logprob: -4.406585216522217
    9. 'user' → logprob: -4.656585216522217
    10. 'x' → logprob: -4.781585216522217

Token 36: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.03778807073831558
    2. 'forme' → logprob: -3.412788152694702
    3. 'form' → logprob: -5.662787914276123
    4. ' form' → logprob: -7.787787914276123
    5. 'forma' → logprob: -9.537788391113281
    6. 'chaine' → logprob: -10.162788391113281
    7. ' la' → logprob: -10.287788391113281
    8. 'la' → logprob: -10.412788391113281
    9. ' ' → logprob: -10.537788391113281
    10. ' forma' → logprob: -12.037788391113281

Token 37: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.04364769905805588
    2. 'd' → logprob: -3.2936477661132812
    3. ' de' → logprob: -6.043647766113281
    4. 'de' → logprob: -6.168647766113281
    5. 's' → logprob: -7.043647766113281
    6. ''' → logprob: -9.543647766113281
    7. ''d' → logprob: -9.918647766113281
    8. ' ' → logprob: -10.918647766113281
    9. 'space' → logprob: -11.293647766113281
    10. 'e' → logprob: -11.543647766113281

Token 38: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.2931385040283203
    2. 'cha' → logprob: -1.5431385040283203
    3. ' chaîne' → logprob: -3.2931385040283203
    4. 'string' → logprob: -6.41813850402832
    5. 'str' → logprob: -7.04313850402832
    6. ' chaine' → logprob: -7.91813850402832
    7. 'texte' → logprob: -8.91813850402832
    8. 'chain' → logprob: -9.16813850402832
    9. 's' → logprob: -10.04313850402832
    10. 'une' → logprob: -10.41813850402832

Token 39: ' de' (ID: 334)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5318981409072876
    2. '#' → logprob: -2.031898021697998
    3. ',' → logprob: -3.156898021697998
    4. '\n' → logprob: -3.281898021697998
    5. '\' → logprob: -3.531898021697998
    6. '.' → logprob: -3.531898021697998
    7. 'n' → logprob: -3.656898021697998
    8. 's' → logprob: -3.781898021697998
    9. '```' → logprob: -4.156898021697998
    10. 'val' → logprob: -4.156898021697998

Token 40: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.04908154904842377
    2. ' caractères' → logprob: -3.049081563949585
    3. 'texte' → logprob: -7.799081325531006
    4. ' caracteres' → logprob: -10.299081802368164
    5. ' caract' → logprob: -10.799081802368164
    6. ' caractère' → logprob: -11.924081802368164
    7. '#' → logprob: -12.174081802368164
    8. ' ' → logprob: -12.424081802368164
    9. 'c' → logprob: -12.549081802368164
    10. '	' → logprob: -13.799081802368164

Token 41: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3363041579723358
    2. 'n' → logprob: -1.9613041877746582
    3. '\n' → logprob: -3.086304187774658
    4. '#' → logprob: -3.336304187774658
    5. 'val' → logprob: -4.461304187774658
    6. 'u' → logprob: -4.461304187774658
    7. '\' → logprob: -4.961304187774658
    8. 's' → logprob: -5.211304187774658
    9. '```' → logprob: -5.211304187774658
    10. 'i' → logprob: -5.961304187774658

Token 42: 'str' (ID: 689)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045247984235174954
    2. ').' → logprob: -8.375452041625977
    3. ' )' → logprob: -9.000452041625977
    4. '#' → logprob: -10.500452041625977
    5. '')' → logprob: -11.625452041625977
    6. ')#' → logprob: -12.000452041625977
    7. '`)' → logprob: -12.125452041625977
    8. '()' → logprob: -12.125452041625977
    9. '))' → logprob: -12.375452041625977
    10. '),' → logprob: -12.375452041625977

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007028992986306548
    2. 'e' → logprob: -7.500702857971191
    3. '#' → logprob: -10.125702857971191
    4. '`)' → logprob: -10.375702857971191
    5. ' )' → logprob: -11.000702857971191
    6. ')`' → logprob: -11.250702857971191
    7. ')#' → logprob: -11.375702857971191
    8. '')' → logprob: -11.375702857971191
    9. '))' → logprob: -12.375702857971191
    10. '")' → logprob: -12.500702857971191

Token 44: '#' (ID: 2)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.48361217975616455
    2. 'val' → logprob: -1.9836121797561646
    3. 'n' → logprob: -2.858612060546875
    4. '#' → logprob: -3.108612060546875
    5. 'x' → logprob: -3.358612060546875
    6. 's' → logprob: -3.483612060546875
    7. 'u' → logprob: -3.733612060546875
    8. 'value' → logprob: -3.983612060546875
    9. '\' → logprob: -4.608612060546875
    10. '\n' → logprob: -4.858612060546875

Token 45: ' int' (ID: 677)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8907797336578369
    2. 'val' → logprob: -1.390779733657837
    3. 'n' → logprob: -1.765779733657837
    4. '#' → logprob: -2.890779733657837
    5. 'value' → logprob: -3.390779733657837
    6. 'u' → logprob: -4.140779495239258
    7. 's' → logprob: -4.265779495239258
    8. 'x' → logprob: -4.515779495239258
    9. 'a' → logprob: -4.765779495239258
    10. 'user' → logprob: -4.765779495239258

Token 46: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002353640884393826
    2. '()' → logprob: -8.750235557556152
    3. '(
' → logprob: -10.125235557556152
    4. ')' → logprob: -11.625235557556152
    5. '(convert' → logprob: -13.000235557556152
    6. '('' → logprob: -13.000235557556152
    7. '(

' → logprob: -13.125235557556152
    8. ',' → logprob: -13.375235557556152
    9. '(int' → logprob: -13.500235557556152
    10. '#' → logprob: -13.500235557556152

Token 47: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5928495486150496e-05
    2. '(
' → logprob: -11.875016212463379
    3. ' (' → logprob: -12.875016212463379
    4. ')' → logprob: -13.375016212463379
    5. '()' → logprob: -13.375016212463379
    6. ' ' → logprob: -14.500016212463379
    7. ',' → logprob: -14.750016212463379
    8. '#' → logprob: -15.000016212463379
    9. '('' → logprob: -15.000016212463379
    10. '(

' → logprob: -15.500016212463379

Token 48: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1500149816274643
    2. 'e' → logprob: -2.275014877319336
    3. 'er' → logprob: -3.525014877319336
    4. '()' → logprob: -6.150014877319336
    5. 'ère' → logprob: -6.400014877319336
    6. '(e' → logprob: -7.400014877319336
    7. 'é' → logprob: -7.775014877319336
    8. 'ise' → logprob: -7.900014877319336
    9. 'ert' → logprob: -8.025014877319336
    10. 'ation' → logprob: -8.400014877319336

Token 49: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13481734693050385
    2. ' la' → logprob: -2.509817361831665
    3. ' ' → logprob: -4.634817123413086
    4. 'l' → logprob: -5.134817123413086
    5. ' une' → logprob: -5.134817123413086
    6. ' (' → logprob: -5.384817123413086
    7. '()' → logprob: -5.509817123413086
    8. ' l' → logprob: -5.509817123413086
    9. 'la' → logprob: -5.884817123413086
    10. 's' → logprob: -6.884817123413086

Token 50: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.0971856340765953
    2. ' ' → logprob: -2.8471856117248535
    3. ' valeur' → logprob: -3.5971856117248535
    4. ' chaine' → logprob: -5.4721856117248535
    5. 'chaine' → logprob: -6.4721856117248535
    6. ' ' → logprob: -7.7221856117248535
    7. 's' → logprob: -8.347186088562012
    8. 'cha' → logprob: -8.472186088562012
    9. '  ' → logprob: -9.472186088562012
    10. ' string' → logprob: -9.597186088562012

Token 51: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007462600478902459
    2. 's' → logprob: -8.875746726989746
    3. '('' → logprob: -9.125746726989746
    4. '```' → logprob: -9.125746726989746
    5. ',' → logprob: -10.250746726989746
    6. 'a' → logprob: -10.375746726989746
    7. ' (' → logprob: -10.375746726989746
    8. ')' → logprob: -10.500746726989746
    9. '(
' → logprob: -10.875746726989746
    10. 'def' → logprob: -10.875746726989746

Token 52: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.055281102657318115
    2. 'car' → logprob: -3.055281162261963
    3. ' l' → logprob: -6.180281162261963
    4. ' caracteres' → logprob: -6.555281162261963
    5. ' caract' → logprob: -6.805281162261963
    6. ' caractère' → logprob: -7.305281162261963
    7. ' car' → logprob: -7.555281162261963
    8. 'l' → logprob: -7.930281162261963
    9. ' la' → logprob: -8.680280685424805
    10. ' ' → logprob: -9.180280685424805

Token 53: ' obten' (ID: 28150)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026352662593126297
    2. 'v' → logprob: -4.026352882385254
    3. 'a' → logprob: -6.151352882385254
    4. 'n' → logprob: -6.651352882385254
    5. 's' → logprob: -6.776352882385254
    6. 'val' → logprob: -7.651352882385254
    7. 'd' → logprob: -7.776352882385254
    8. 'u' → logprob: -8.026352882385254
    9. ')' → logprob: -8.276352882385254
    10. 'i' → logprob: -8.526352882385254

Token 54: 'ue' (ID: 466)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8005236387252808
    2. 'ue' → logprob: -0.8005236387252808
    3. 'e' → logprob: -2.4255237579345703
    4. 'i' → logprob: -5.05052375793457
    5. 'ie' → logprob: -5.42552375793457
    6. ''' → logprob: -7.55052375793457
    7. 'a' → logprob: -7.80052375793457
    8. 'r' → logprob: -7.80052375793457
    9. 't' → logprob: -8.80052375793457
    10. 'enue' → logprob: -8.92552375793457

Token 55: ' en' (ID: 469)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4037773907184601
    2. 'v' → logprob: -1.9037773609161377
    3. 'x' → logprob: -3.1537773609161377
    4. 'a' → logprob: -3.4037773609161377
    5. 'i' → logprob: -4.153777599334717
    6. '(' → logprob: -4.153777599334717
    7. 'nombre' → logprob: -4.403777599334717
    8. 'u' → logprob: -4.528777599334717
    9. 'val' → logprob: -4.528777599334717
    10. 's' → logprob: -5.153777599334717

Token 56: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.06720144301652908
    2. ' ' → logprob: -3.1922013759613037
    3. 'un' → logprob: -4.442201614379883
    4. ' entier' → logprob: -5.317201614379883
    5. ' int' → logprob: -5.817201614379883
    6. ' espace' → logprob: -6.317201614379883
    7. ' nombre' → logprob: -7.942201614379883
    8. 'ent' → logprob: -7.942201614379883
    9. ' ' → logprob: -8.067201614379883
    10. ' une' → logprob: -8.192201614379883

Token 57: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.6085397601127625
    2. ' entier' → logprob: -1.2335398197174072
    3. ' espace' → logprob: -2.2335398197174072
    4. ' ' → logprob: -3.1085398197174072
    5. 'nombre' → logprob: -5.108539581298828
    6. 'ent' → logprob: -5.733539581298828
    7. ' ent' → logprob: -6.608539581298828
    8. ' ' → logprob: -7.983539581298828
    9. 'e' → logprob: -8.233539581298828
    10. ' int' → logprob: -8.608539581298828

Token 58: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3479229807853699
    2. 'v' → logprob: -2.3479230403900146
    3. 'x' → logprob: -2.7229230403900146
    4. '\n' → logprob: -2.7229230403900146
    5. '\' → logprob: -4.0979228019714355
    6. '#' → logprob: -4.5979228019714355
    7. '```' → logprob: -4.9729228019714355
    8. 'val' → logprob: -4.9729228019714355
    9. '' → logprob: -5.0979228019714355
    10. 'nombre' → logprob: -5.0979228019714355

Token 59: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18859700858592987
    2. 'v' → logprob: -2.3135969638824463
    3. 'x' → logprob: -3.6885969638824463
    4. '\n' → logprob: -4.188597202301025
    5. '#' → logprob: -4.438597202301025
    6. 'a' → logprob: -5.563597202301025
    7. '\' → logprob: -5.688597202301025
    8. 'nombre' → logprob: -5.688597202301025
    9. '```' → logprob: -6.438597202301025
    10. '' → logprob: -6.438597202301025

Token 60: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07930711656808853
    2. ' )' → logprob: -3.0793070793151855
    3. 'int' → logprob: -3.7043070793151855
    4. ' int' → logprob: -5.3293070793151855
    5. 'ent' → logprob: -8.079307556152344
    6. ' entier' → logprob: -8.704307556152344
    7. ' integer' → logprob: -9.829307556152344
    8. ' ' → logprob: -10.079307556152344
    9. 'integer' → logprob: -10.079307556152344
    10. ' ent' → logprob: -10.454307556152344

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. ' )' → logprob: -11.750014305114746
    3. '#' → logprob: -13.375014305114746
    4. ')#' → logprob: -13.875014305114746
    5. ')`' → logprob: -14.125014305114746
    6. ')
' → logprob: -14.375014305114746
    7. ')>' → logprob: -14.750014305114746
    8. '```' → logprob: -14.875014305114746
    9. 'a' → logprob: -15.375014305114746
    10. '')' → logprob: -15.375014305114746

Token 62: 'a' (ID: 64)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42777934670448303
    2. 'x' → logprob: -1.4277793169021606
    3. 'v' → logprob: -3.42777943611145
    4. 'nombre' → logprob: -3.67777943611145
    5. 'val' → logprob: -3.92777943611145
    6. '#' → logprob: -4.802779197692871
    7. '\n' → logprob: -5.052779197692871
    8. 'a' → logprob: -5.302779197692871
    9. 'value' → logprob: -5.552779197692871
    10. '```' → logprob: -6.552779197692871

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07969478517770767
    2. '=' → logprob: -3.2046947479248047
    3. ' ' → logprob: -3.3296947479248047
    4. '  ' → logprob: -9.204694747924805
    5. 'u' → logprob: -11.079694747924805
    6. ' )' → logprob: -11.204694747924805
    7. '   ' → logprob: -11.329694747924805
    8. '=input' → logprob: -11.329694747924805
    9. ',' → logprob: -11.579694747924805
    10. 'n' → logprob: -11.704694747924805

Token 64: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07505841553211212
    2. ' input' → logprob: -3.0750584602355957
    3. 'int' → logprob: -3.7000584602355957
    4. 'input' → logprob: -6.575058460235596
    5. ' ' → logprob: -12.450057983398438
    6. ' ' → logprob: -13.075057983398438
    7. '=int' → logprob: -15.325057983398438
    8. ' in' → logprob: -15.575057983398438
    9. '<int' → logprob: -15.575057983398438
    10. '[int' → logprob: -16.325057983398438

Token 65: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20149511098861694
    2. '(' → logprob: -1.7014951705932617
    3. ' (' → logprob: -9.576495170593262
    4. 'input' → logprob: -11.951495170593262
    5. '(
' → logprob: -12.826495170593262
    6. '('' → logprob: -13.326495170593262
    7. '(

' → logprob: -14.201495170593262
    8. '()' → logprob: -14.951495170593262
    9. ' ' → logprob: -15.951495170593262
    10. '(in' → logprob: -16.326494216918945

Token 66: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03325556591153145
    2. '('' → logprob: -3.9082555770874023
    3. '("("' → logprob: -4.783255577087402
    4. '()' → logprob: -5.783255577087402
    5. '("' → logprob: -7.783255577087402
    6. '())' → logprob: -8.033255577087402
    7. '(""))' → logprob: -8.533255577087402
    8. '("")' → logprob: -9.408255577087402
    9. '(">' → logprob: -10.408255577087402
    10. '(()' → logprob: -10.408255577087402

Token 67: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8218796253204346
    2. ' ' → logprob: -1.1968796253204346
    3. '*' → logprob: -2.3218796253204346
    4. ')' → logprob: -2.4468796253204346
    5. '\' → logprob: -4.0718793869018555
    6. '<|end|>' → logprob: -4.5718793869018555
    7. '\n' → logprob: -4.8218793869018555
    8. '```' → logprob: -5.0718793869018555
    9. '(' → logprob: -5.5718793869018555
    10. '+
' → logprob: -5.8218793869018555

Token 68: ' Cal' (ID: 4453)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10311400145292282
    2. 'b' → logprob: -3.353113889694214
    3. ' b' → logprob: -3.728113889694214
    4. ''' → logprob: -4.353114128112793
    5. ' if' → logprob: -4.478114128112793
    6. 'print' → logprob: -5.103114128112793
    7. ' print' → logprob: -6.603114128112793
    8. '_' → logprob: -6.853114128112793
    9. 'if' → logprob: -6.853114128112793
    10. 'a' → logprob: -6.978114128112793

Token 69: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.02549424022436142
    2. 'cule' → logprob: -4.15049409866333
    3. 'c' → logprob: -5.27549409866333
    4. 'culate' → logprob: -6.27549409866333
    5. ' cul' → logprob: -7.27549409866333
    6. 'culator' → logprob: -7.90049409866333
    7. ' c' → logprob: -8.150494575500488
    8. 'cula' → logprob: -8.150494575500488
    9. 'cules' → logprob: -9.025494575500488
    10. '```' → logprob: -9.275494575500488

Token 70: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5961320996284485
    2. 'a' → logprob: -1.7211320400238037
    3. ' ' → logprob: -1.8461320400238037
    4. ' (' → logprob: -3.4711320400238037
    5. ' a' → logprob: -3.8461320400238037
    6. 's' → logprob: -4.596132278442383
    7. '_' → logprob: -4.721132278442383
    8. '*' → logprob: -4.971132278442383
    9. 'e' → logprob: -5.346132278442383
    10. '()' → logprob: -5.596132278442383

Token 71: ' tiers' (ID: 72536)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6297615766525269
    2. ' carré' → logprob: -2.0047616958618164
    3. 'a' → logprob: -2.5047616958618164
    4. '+' → logprob: -2.5047616958618164
    5. ' a' → logprob: -3.0047616958618164
    6. ' carre' → logprob: -3.7547616958618164
    7. ' +' → logprob: -4.004761695861816
    8. 's' → logprob: -4.129761695861816
    9. ' *' → logprob: -4.879761695861816
    10. ' facteur' → logprob: -5.004761695861816

Token 72: ' (' (ID: 350)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2142656296491623
    2. 'a' → logprob: -2.0892655849456787
    3. 'de' → logprob: -3.8392655849456787
    4. '*' → logprob: -3.9642655849456787
    5. ' ' → logprob: -4.464265823364258
    6. ' a' → logprob: -5.214265823364258
    7. ' *' → logprob: -5.714265823364258
    8. 's' → logprob: -6.214265823364258
    9. '_' → logprob: -6.589265823364258
    10. '3' → logprob: -7.714265823364258

Token 73: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16922667622566223
    2. ')' → logprob: -2.41922664642334
    3. ' )' → logprob: -3.41922664642334
    4. ' de' → logprob: -3.66922664642334
    5. 'de' → logprob: -5.29422664642334
    6. ' a' → logprob: -5.91922664642334
    7. ' ' → logprob: -8.16922664642334
    8. '*' → logprob: -8.91922664642334
    9. ')a' → logprob: -9.16922664642334
    10. ' *' → logprob: -9.29422664642334

Token 74: '/' (ID: 14)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7979470491409302
    2. ')' → logprob: -1.4229470491409302
    3. '/' → logprob: -2.0479469299316406
    4. ' *' → logprob: -2.2979469299316406
    5. ' /' → logprob: -3.1729469299316406
    6. ' )' → logprob: -4.297946929931641
    7. '*)' → logprob: -4.797946929931641
    8. ' de' → logprob: -5.047946929931641
    9. 'de' → logprob: -5.797946929931641
    10. '3' → logprob: -6.547946929931641

Token 75: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.875024795532227
    3. ')' → logprob: -12.375024795532227
    4. '  ' → logprob: -15.000024795532227
    5. '   ' → logprob: -15.000024795532227
    6. '³' → logprob: -15.625024795532227
    7. ' ' → logprob: -16.875024795532227
    8. '-' → logprob: -17.000024795532227
    9. '```' → logprob: -17.000024795532227
    10. '    ' → logprob: -17.000024795532227

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20463214814662933
    2. ' )' → logprob: -1.7046321630477905
    3. '*' → logprob: -6.32963228225708
    4. ' de' → logprob: -7.45463228225708
    5. ' *' → logprob: -8.079631805419922
    6. '*)' → logprob: -8.454631805419922
    7. 'de' → logprob: -8.954631805419922
    8. ')*' → logprob: -9.454631805419922
    9. ' ' → logprob: -9.954631805419922
    10. ' ' → logprob: -10.329631805419922

Token 77: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6026371121406555
    2. 'de' → logprob: -0.8526371121406555
    3. 'a' → logprob: -4.35263729095459
    4. '*' → logprob: -4.47763729095459
    5. ' *' → logprob: -6.72763729095459
    6. 'd' → logprob: -8.72763729095459
    7. ' a' → logprob: -8.85263729095459
    8. 'du' → logprob: -9.10263729095459
    9. '*a' → logprob: -9.35263729095459
    10. 'del' → logprob: -9.60263729095459

Token 78: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.389561265707016
    2. ' a' → logprob: -1.1395612955093384
    3. 'l' → logprob: -6.889561176300049
    4. ' la' → logprob: -6.889561176300049
    5. ' l' → logprob: -8.014561653137207
    6. 'la' → logprob: -8.764561653137207
    7. ' ' → logprob: -8.889561653137207
    8. ' ' → logprob: -12.014561653137207
    9. '	a' → logprob: -12.264561653137207
    10. '#a' → logprob: -12.764561653137207

Token 79: ' valeur' (ID: 41664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006920796353369951
    2. ' a' → logprob: -5.00692081451416
    3. 'val' → logprob: -8.88192081451416
    4. 'nombre' → logprob: -9.88192081451416
    5. ' ' → logprob: -12.00692081451416
    6. ' valeur' → logprob: -12.13192081451416
    7. ' nombre' → logprob: -13.63192081451416
    8. 'value' → logprob: -13.88192081451416
    9. '`' → logprob: -14.88192081451416
    10. 'variable' → logprob: -15.75692081451416

Token 80: ' entière' (ID: 61583)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07816826552152634
    2. '*' → logprob: -2.8281681537628174
    3. ' ' → logprob: -4.9531683921813965
    4. ' *' → logprob: -5.4531683921813965
    5. ' a' → logprob: -6.4531683921813965
    6. '_' → logprob: -7.5781683921813965
    7. ')' → logprob: -7.5781683921813965
    8. 't' → logprob: -8.203167915344238
    9. 's' → logprob: -8.453167915344238
    10. ' )' → logprob: -8.453167915344238

Token 81: ' sais' (ID: 30010)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12884217500686646
    2. '*' → logprob: -2.2538421154022217
    3. ' ' → logprob: -4.878842353820801
    4. ' *' → logprob: -5.628842353820801
    5. ' a' → logprob: -6.753842353820801
    6. ')' → logprob: -7.753842353820801
    7. 't' → logprob: -7.878842353820801
    8. ',' → logprob: -7.878842353820801
    9. '_' → logprob: -8.1288423538208
    10. 's' → logprob: -8.5038423538208

Token 82: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.004033637698739767
    2. 'rie' → logprob: -6.37903356552124
    3. 'i' → logprob: -6.75403356552124
    4. 'sie' → logprob: -8.254034042358398
    5. '   ' → logprob: -8.379034042358398
    6. 'e' → logprob: -8.879034042358398
    7. 'isie' → logprob: -9.129034042358398
    8. 'a' → logprob: -9.504034042358398
    9. '

' → logprob: -10.254034042358398
    10. '#' → logprob: -10.254034042358398

Token 83: ' et' (ID: 859)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5298241376876831
    2. '*' → logprob: -1.154824137687683
    3. '```' → logprob: -4.154824256896973
    4. 't' → logprob: -4.279824256896973
    5. ' ' → logprob: -4.279824256896973
    6. '  
' → logprob: -4.654824256896973
    7. ' *' → logprob: -4.904824256896973
    8. ' 
' → logprob: -4.904824256896973
    9. ' a' → logprob: -5.279824256896973
    10. 'b' → logprob: -5.904824256896973

Token 84: ' stock' (ID: 6546)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6534947752952576
    2. ' stock' → logprob: -1.7784948348999023
    3. 'aff' → logprob: -2.4034948348999023
    4. 'l' → logprob: -2.9034948348999023
    5. 'le' → logprob: -3.1534948348999023
    6. ' le' → logprob: -3.2784948348999023
    7. 'stock' → logprob: -3.6534948348999023
    8. 'print' → logprob: -3.6534948348999023
    9. ' affiche' → logprob: -3.9034948348999023
    10. ' print' → logprob: -5.403494834899902

Token 85: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4121624231338501
    2. 'é' → logprob: -1.78716242313385
    3. 'ée' → logprob: -1.78716242313385
    4. ' e' → logprob: -6.0371623039245605
    5. ' ' → logprob: -8.662162780761719
    6. ' é' → logprob: -8.787162780761719
    7. '  ' → logprob: -9.662162780761719
    8. '	e' → logprob: -10.912162780761719
    9. '   ' → logprob: -11.037162780761719
    10. 'r' → logprob: -11.287162780761719

Token 86: ' ce' (ID: 2357)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7240222096443176
    2. 'a' → logprob: -1.4740221500396729
    3. ' dans' → logprob: -1.7240221500396729
    4. ' la' → logprob: -2.724022150039673
    5. ' ' → logprob: -3.474022150039673
    6. 'dans' → logprob: -5.849022388458252
    7. ' le' → logprob: -6.224022388458252
    8. 'la' → logprob: -6.599022388458252
    9. '_' → logprob: -6.599022388458252
    10. '  ' → logprob: -7.849022388458252

Token 87: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.044462937861680984
    2. ' dans' → logprob: -4.544463157653809
    3. 'rés' → logprob: -5.044463157653809
    4. 'result' → logprob: -5.169463157653809
    5. ' resultat' → logprob: -5.294463157653809
    6. 'a' → logprob: -5.544463157653809
    7. ' result' → logprob: -5.794463157653809
    8. ' 
' → logprob: -6.419463157653809
    9. '_' → logprob: -7.044463157653809
    10. '_result' → logprob: -7.294463157653809

Token 88: ' dans' (ID: 2671)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.036606062203645706
    2. ' a' → logprob: -4.2866058349609375
    3. 'b' → logprob: -4.7866058349609375
    4. ' ' → logprob: -5.2866058349609375
    5. '```' → logprob: -6.0366058349609375
    6. ' =' → logprob: -6.5366058349609375
    7. '*' → logprob: -7.4116058349609375
    8. 't' → logprob: -7.5366058349609375
    9. 'result' → logprob: -7.5366058349609375
    10. ' ' → logprob: -7.6616058349609375

Token 89: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3738098740577698
    2. 'a' → logprob: -1.623809814453125
    3. ' la' → logprob: -2.623809814453125
    4. ' ' → logprob: -3.248809814453125
    5. ' l' → logprob: -6.373809814453125
    6. 'la' → logprob: -8.123809814453125
    7. ' une' → logprob: -8.123809814453125
    8. '  ' → logprob: -8.498809814453125
    9. ' ' → logprob: -8.498809814453125
    10. '_' → logprob: -8.623809814453125

Token 90: ' variable' (ID: 11076)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09970293194055557
    2. 'variable' → logprob: -2.849702835083008
    3. ' variable' → logprob: -4.724702835083008
    4. 'result' → logprob: -4.724702835083008
    5. ' a' → logprob: -5.099702835083008
    6. ' résultat' → logprob: -5.724702835083008
    7. 'b' → logprob: -5.974702835083008
    8. 't' → logprob: -6.349702835083008
    9. ' ' → logprob: -7.349702835083008
    10. 'e' → logprob: -7.474702835083008

Token 91: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09733306616544724
    2. 'a' → logprob: -3.2223329544067383
    3. ' b' → logprob: -3.4723329544067383
    4. 't' → logprob: -4.847332954406738
    5. 'c' → logprob: -5.722332954406738
    6. '```' → logprob: -5.972332954406738
    7. 'result' → logprob: -6.347332954406738
    8. ' a' → logprob: -6.347332954406738
    9. 'tiers' → logprob: -6.347332954406738
    10. '`' → logprob: -7.347332954406738

Token 92: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0008726324886083603
    2. ' b' → logprob: -7.250872611999512
    3. ' 
' → logprob: -9.500872611999512
    4. '
' → logprob: -10.125872611999512
    5. '  
' → logprob: -11.500872611999512
    6. '*' → logprob: -11.625872611999512
    7. ' ' → logprob: -11.750872611999512
    8. '```' → logprob: -11.875872611999512
    9. '*b' → logprob: -12.750872611999512
    10. 'a' → logprob: -13.000872611999512

Token 93: '#' (ID: 2)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007741317385807633
    2. ' b' → logprob: -7.250773906707764
    3. '
' → logprob: -10.375774383544922
    4. '```' → logprob: -11.375774383544922
    5. ' 
' → logprob: -11.875774383544922
    6. '  
' → logprob: -12.125774383544922
    7. '' → logprob: -13.375774383544922
    8. ' ' → logprob: -13.375774383544922
    9. '\n' → logprob: -13.875774383544922
    10. 'a' → logprob: -14.000774383544922

Token 94: ' L' (ID: 451)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0046681687235832214
    2. ' b' → logprob: -5.379668235778809
    3. ' 
' → logprob: -10.504668235778809
    4. ' ' → logprob: -11.879668235778809
    5. '  
' → logprob: -12.254668235778809
    6. '
' → logprob: -12.879668235778809
    7. '```' → logprob: -12.879668235778809
    8. ' 

' → logprob: -14.129668235778809
    9. '\n' → logprob: -14.754668235778809
    10. ' ' → logprob: -15.004668235778809

Token 95: ''op' (ID: 70747)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9607419371604919
    2. 'e' → logprob: -1.2107419967651367
    3. 'a' → logprob: -1.2107419967651367
    4. '#' → logprob: -4.835741996765137
    5. 'i' → logprob: -5.460741996765137
    6. ' b' → logprob: -5.460741996765137
    7. ''' → logprob: -6.085741996765137
    8. '_' → logprob: -7.835741996765137
    9. ' a' → logprob: -7.835741996765137
    10. 'es' → logprob: -8.460741996765137

Token 96: 'érateur' (ID: 108528)
  Prédit: 'ération'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.3941883146762848
    2. 'er' → logprob: -2.269188404083252
    3. 'é' → logprob: -2.519188404083252
    4. 'ér' → logprob: -2.644188404083252
    5. 'érateur' → logprob: -3.519188404083252
    6. 'e' → logprob: -4.519188404083252
    7. 'éra' → logprob: -5.269188404083252
    8. 't' → logprob: -5.519188404083252
    9. '#' → logprob: -5.769188404083252
    10. 'a' → logprob: -5.894188404083252

Token 97: ' '/'' (ID: 39443)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2167365550994873
    2. ' /' → logprob: -1.8417365550994873
    3. ' ' → logprob: -3.7167365550994873
    4. '*' → logprob: -5.841736793518066
    5. '_' → logprob: -5.966736793518066
    6. ' b' → logprob: -6.466736793518066
    7. 'b' → logprob: -6.966736793518066
    8. '=' → logprob: -7.466736793518066
    9. ' *' → logprob: -7.716736793518066
    10. ' =' → logprob: -7.716736793518066

Token 98: ' effect' (ID: 3159)
  Prédit: ' réalise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réalise' → logprob: -1.2493489980697632
    2. '<|end|>' → logprob: -1.3743489980697632
    3. ' ' → logprob: -1.7493489980697632
    4. ' effect' → logprob: -2.1243491172790527
    5. ' ren' → logprob: -3.7493491172790527
    6. ' effectu' → logprob: -3.8743491172790527
    7. ' (' → logprob: -4.624349117279053
    8. '=' → logprob: -4.624349117279053
    9. ' est' → logprob: -4.749349117279053
    10. ' permet' → logprob: -4.874349117279053

Token 99: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.00020866614067927003
    2. 'u' → logprob: -8.500208854675293
    3. 'uera' → logprob: -13.250208854675293
    4. 'ué' → logprob: -13.750208854675293
    5. 'uer' → logprob: -14.250208854675293
    6. 'e' → logprob: -14.875208854675293
    7. '```' → logprob: -15.250208854675293
    8. 'ute' → logprob: -15.875208854675293
    9. 'uant' → logprob: -16.000207901000977
    10. 'uent' → logprob: -16.000207901000977

Token 100: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.06913799792528152
    2. ' la' → logprob: -3.3191380500793457
    3. 'une' → logprob: -3.5691380500793457
    4. 'la' → logprob: -6.944138050079346
    5. ' ' → logprob: -7.444138050079346
    6. ''une' → logprob: -8.694137573242188
    7. 'division' → logprob: -8.819137573242188
    8. '```' → logprob: -8.944137573242188
    9. 'a' → logprob: -9.319137573242188
    10. ' toujours' → logprob: -9.444137573242188

Token 101: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.23246434330940247
    2. ' division' → logprob: -1.60746431350708
    3. 'div' → logprob: -4.98246431350708
    4. ' ' → logprob: -9.732464790344238
    5. ' div' → logprob: -10.482464790344238
    6. ' /' → logprob: -10.482464790344238
    7. '_div' → logprob: -10.982464790344238
    8. '/' → logprob: -11.732464790344238
    9. 'd' → logprob: -11.982464790344238
    10. 'Division' → logprob: -12.357464790344238

Token 102: ' flott' (ID: 108700)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11799640953540802
    2. ' b' → logprob: -2.2429964542388916
    3. '<|end|>' → logprob: -6.3679962158203125
    4. ' ```' → logprob: -6.7429962158203125
    5. ' ' → logprob: -7.3679962158203125
    6. 'a' → logprob: -7.8679962158203125
    7. ' =' → logprob: -8.117996215820312
    8. ' a' → logprob: -8.367996215820312
    9. '```' → logprob: -8.742996215820312
    10. ' 
' → logprob: -8.992996215820312

Token 103: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.0010572222527116537
    2. 'ée' → logprob: -7.001057147979736
    3. 'ant' → logprob: -10.001057624816895
    4. '/' → logprob: -10.251057624816895
    5. 'e' → logprob: -11.126057624816895
    6. '-point' → logprob: -11.251057624816895
    7. 'u' → logprob: -12.001057624816895
    8. 'é' → logprob: -12.751057624816895
    9. 'atoire' → logprob: -12.876057624816895
    10. 'antee' → logprob: -12.876057624816895

Token 104: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0076959445141255856
    2. ' b' → logprob: -4.882696151733398
    3. ' 
' → logprob: -9.507696151733398
    4. '
' → logprob: -12.132696151733398
    5. '  
' → logprob: -12.382696151733398
    6. ' ' → logprob: -13.507696151733398
    7. ' 

' → logprob: -14.382696151733398
    8. ' ' → logprob: -14.382696151733398
    9. '' → logprob: -14.507696151733398
    10. ',' → logprob: -14.507696151733398

Token 105: 'ret' (ID: 3431)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6146188974380493
    2. ' a' → logprob: -1.3646188974380493
    3. ')' → logprob: -2.2396187782287598
    4. ' )' → logprob: -2.3646187782287598
    5. ' ' → logprob: -6.36461877822876
    6. 'b' → logprob: -7.86461877822876
    7. ' b' → logprob: -8.239619255065918
    8. '<|end|>' → logprob: -8.864619255065918
    9. ' la' → logprob: -9.364619255065918
    10. ' ),' → logprob: -9.489619255065918

Token 106: 'our' (ID: 401)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.11188153922557831
    2. 'u' → logprob: -2.6118814945220947
    3. 'e' → logprob: -4.236881732940674
    4. 'ur' → logprob: -5.236881732940674
    5. 'urne' → logprob: -5.861881732940674
    6. 'our' → logprob: -5.986881732940674
    7. 'ourn' → logprob: -6.361881732940674
    8. ')' → logprob: -6.736881732940674
    9. 'urning' → logprob: -6.986881732940674
    10. 'a' → logprob: -6.986881732940674

Token 107: 'ne' (ID: 611)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3400781750679016
    2. 'urn' → logprob: -2.465078115463257
    3. 'ant' → logprob: -3.215078115463257
    4. 'n' → logprob: -3.215078115463257
    5. 'er' → logprob: -3.340078115463257
    6. 'ée' → logprob: -3.590078115463257
    7. 'ern' → logprob: -3.840078115463257
    8. 'a' → logprob: -4.090078353881836
    9. 'ne' → logprob: -4.965078353881836
    10. 'nant' → logprob: -5.590078353881836

Token 108: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.03157781437039375
    2. 'un' → logprob: -3.6565778255462646
    3. ' une' → logprob: -5.7815775871276855
    4. 'une' → logprob: -6.9065775871276855
    5. 'a' → logprob: -7.0315775871276855
    6. ' a' → logprob: -9.031578063964844
    7. ' ' → logprob: -10.031578063964844
    8. ' toujours' → logprob: -10.031578063964844
    9. 'float' → logprob: -10.281578063964844
    10. ' float' → logprob: -10.656578063964844

Token 109: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.18361450731754303
    2. 'float' → logprob: -2.058614492416382
    3. ' nombre' → logprob: -3.933614492416382
    4. ' flott' → logprob: -4.808614730834961
    5. 'nombre' → logprob: -5.308614730834961
    6. 'e' → logprob: -5.558614730834961
    7. ' résultat' → logprob: -6.558614730834961
    8. ' ' → logprob: -7.183614730834961
    9. 'a' → logprob: -7.808614730834961
    10. ' floating' → logprob: -8.433614730834961

Token 110: ' même' (ID: 9679)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01750096306204796
    2. ' )' → logprob: -4.142500877380371
    3. 'a' → logprob: -7.017500877380371
    4. 'b' → logprob: -8.392500877380371
    5. '')' → logprob: -9.017500877380371
    6. ')
' → logprob: -9.017500877380371
    7. ' a' → logprob: -11.017500877380371
    8. ' ' → logprob: -11.517500877380371
    9. ' )
' → logprob: -11.517500877380371
    10. ')b' → logprob: -11.642500877380371

Token 111: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.24875040352344513
    2. 'si' → logprob: -2.1237504482269287
    3. 's' → logprob: -3.8737504482269287
    4. '<|end|>' → logprob: -3.8737504482269287
    5. ' s' → logprob: -4.62375020980835
    6. ' ' → logprob: -4.99875020980835
    7. ' entre' → logprob: -5.24875020980835
    8. ' if' → logprob: -5.24875020980835
    9. 'a' → logprob: -5.24875020980835
    10. ')' → logprob: -5.37375020980835

Token 112: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12376313656568527
    2. ' a' → logprob: -2.873763084411621
    3. ' les' → logprob: -3.123763084411621
    4. ' l' → logprob: -4.873763084411621
    5. ' ' → logprob: -6.498763084411621
    6. ' le' → logprob: -6.748763084411621
    7. ' on' → logprob: -6.748763084411621
    8. ' la' → logprob: -6.873763084411621
    9. 'l' → logprob: -7.373763084411621
    10. 'les' → logprob: -7.498763084411621

Token 113: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3140677809715271
    2. 'de' → logprob: -2.564067840576172
    3. 'oper' → logprob: -2.814067840576172
    4. ' operands' → logprob: -3.814067840576172
    5. ' nombres' → logprob: -3.939067840576172
    6. 'div' → logprob: -3.939067840576172
    7. ' deux' → logprob: -4.314067840576172
    8. ' opér' → logprob: -4.439067840576172
    9. ' a' → logprob: -4.814067840576172
    10. 'ent' → logprob: -4.814067840576172

Token 114: ' opér' (ID: 65915)
  Prédit: ' operands'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operands' → logprob: -0.7808602452278137
    2. 'oper' → logprob: -1.530860185623169
    3. ' opér' → logprob: -1.905860185623169
    4. 'a' → logprob: -2.155860185623169
    5. ' oper' → logprob: -3.155860185623169
    6. ' a' → logprob: -4.905860424041748
    7. 'operand' → logprob: -6.030860424041748
    8. 'ent' → logprob: -6.405860424041748
    9. '_oper' → logprob: -6.405860424041748
    10. ' nombres' → logprob: -6.905860424041748

Token 115: 'andes' (ID: 55549)
  Prédit: 'ateurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateurs' → logprob: -0.324461430311203
    2. 'a' → logprob: -1.6994614601135254
    3. 'ande' → logprob: -3.3244614601135254
    4. 'andes' → logprob: -3.8244614601135254
    5. 'ateur' → logprob: -4.449461460113525
    6. 'ate' → logprob: -4.449461460113525
    7. 'and' → logprob: -5.449461460113525
    8. '```' → logprob: -5.824461460113525
    9. 'at' → logprob: -7.199461460113525
    10. '#' → logprob: -7.824461460113525

Token 116: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.6001644134521484
    2. 's' → logprob: -1.2251644134521484
    3. ' are' → logprob: -2.3501644134521484
    4. '<|end|>' → logprob: -2.9751644134521484
    5. 'a' → logprob: -5.475164413452148
    6. '#' → logprob: -5.975164413452148
    7. ' ' → logprob: -7.100164413452148
    8. 'are' → logprob: -7.475164413452148
    9. ' a' → logprob: -7.850164413452148
    10. ')' → logprob: -8.100164413452148

Token 117: ' des' (ID: 731)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2706424593925476
    2. ' des' → logprob: -2.1456425189971924
    3. 'des' → logprob: -2.6456425189971924
    4. ' ent' → logprob: -3.2706425189971924
    5. 'int' → logprob: -5.020642280578613
    6. 'enti' → logprob: -5.770642280578613
    7. 'de' → logprob: -7.270642280578613
    8. ' de' → logprob: -8.520642280578613
    9. ' ' → logprob: -9.145642280578613
    10. 'ints' → logprob: -9.270642280578613

Token 118: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18609409034252167
    2. 'ent' → logprob: -2.061094045639038
    3. ' ent' → logprob: -3.561094045639038
    4. ' int' → logprob: -4.936094284057617
    5. 'ints' → logprob: -5.811094284057617
    6. 'inte' → logprob: -6.186094284057617
    7. ' integers' → logprob: -6.436094284057617
    8. 'a' → logprob: -9.561094284057617
    9. ' nombres' → logprob: -10.186094284057617
    10. 'enti' → logprob: -10.436094284057617

Token 119: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.1660863608121872
    2. 'i' → logprob: -1.9160863161087036
    3. 'ier' → logprob: -5.791086196899414
    4. 'ières' → logprob: -6.666086196899414
    5. '```' → logprob: -7.791086196899414
    6. '#' → logprob: -8.166086196899414
    7. '   ' → logprob: -8.791086196899414
    8. 'ière' → logprob: -8.791086196899414
    9. ' i' → logprob: -9.541086196899414
    10. 'a' → logprob: -9.916086196899414

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.197514608502388
    2. ' )' → logprob: -1.8225146532058716
    3. 'b' → logprob: -4.197514533996582
    4. ' )
' → logprob: -7.322514533996582
    5. ')
' → logprob: -7.447514533996582
    6. 'a' → logprob: -7.572514533996582
    7. '')' → logprob: -8.197514533996582
    8. ' b' → logprob: -8.322514533996582
    9. ')b' → logprob: -9.697514533996582
    10. ')

' → logprob: -10.072514533996582

Token 121: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008629118092358112
    2. ' b' → logprob: -4.758629322052002
    3. '
' → logprob: -11.758628845214844
    4. ' 
' → logprob: -12.133628845214844
    5. '```' → logprob: -14.508628845214844
    6. '  
' → logprob: -14.883628845214844
    7. ' ' → logprob: -15.758628845214844
    8. '
' → logprob: -16.133628845214844
    9. '' → logprob: -16.758628845214844
    10. '\n' → logprob: -16.758628845214844

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006764279678463936
    2. '=' → logprob: -5.0067644119262695
    3. ' ' → logprob: -10.00676441192627
    4. ' ' → logprob: -13.50676441192627
    5. '=b' → logprob: -14.13176441192627
    6. ' =
' → logprob: -14.50676441192627
    7. ')' → logprob: -15.00676441192627
    8. 's' → logprob: -15.88176441192627
    9. ' b' → logprob: -16.006763458251953
    10. 'b' → logprob: -16.131763458251953

Token 123: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0485946387052536
    2. 'a' → logprob: -3.0485947132110596
    3. ' ' → logprob: -12.17359447479248
    4. ' ' → logprob: -13.29859447479248
    5. '	a' → logprob: -14.79859447479248
    6. ' /' → logprob: -17.673595428466797
    7. '  ' → logprob: -17.923595428466797
    8. '   ' → logprob: -18.048595428466797
    9. '(a' → logprob: -18.673595428466797
    10. '3' → logprob: -18.673595428466797

Token 124: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.08896705508232117
    2. '/' → logprob: -2.4639670848846436
    3. ' ' → logprob: -10.838967323303223
    4. ' ' → logprob: -11.838967323303223
    5. ' /
' → logprob: -15.838967323303223
    6. '3' → logprob: -15.963967323303223
    7. ' *' → logprob: -16.088966369628906
    8. '  ' → logprob: -16.213966369628906
    9. ')' → logprob: -16.463966369628906
    10. '*' → logprob: -16.588966369628906

Token 125: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.75010871887207
    4. '  ' → logprob: -17.25010871887207
    5. '```' → logprob: -17.50010871887207
    6. ' ' → logprob: -17.75010871887207
    7. '    ' → logprob: -19.50010871887207
    8. '３' → logprob: -19.50010871887207
    9. '۳' → logprob: -19.62510871887207
    10. '	' → logprob: -20.00010871887207

Token 126: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.875
    4. '   ' → logprob: -18.75
    5. '  ' → logprob: -19.375
    6. '۳' → logprob: -20.125
    7. '３' → logprob: -20.375
    8. '
' → logprob: -21.1875
    9. '٣' → logprob: -21.1875
    10. '৩' → logprob: -21.3125

Token 127: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26178452372550964
    2. '
' → logprob: -1.761784553527832
    3. '#' → logprob: -3.636784553527832
    4. '*' → logprob: -4.386784553527832
    5. '<|end|>' → logprob: -4.386784553527832
    6. '.' → logprob: -6.636784553527832
    7. '' → logprob: -6.886784553527832
    8. '```' → logprob: -7.136784553527832
    9. ')' → logprob: -7.511784553527832
    10. '+' → logprob: -7.636784553527832

Token 128: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0013248840114101768
    2. '#' → logprob: -6.751324653625488
    3. '
' → logprob: -10.001324653625488
    4. 'c' → logprob: -10.001324653625488
    5. 'b' → logprob: -10.376324653625488
    6. ' print' → logprob: -11.376324653625488
    7. ')' → logprob: -12.751324653625488
    8. '  
' → logprob: -12.876324653625488
    9. '#print' → logprob: -13.001324653625488
    10. 'p' → logprob: -13.126324653625488

Token 129: ' Cal' (ID: 4453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005423080874606967
    2. '#' → logprob: -7.625542163848877
    3. 'c' → logprob: -10.375542640686035
    4. 'if' → logprob: -11.375542640686035
    5. 'result' → logprob: -12.500542640686035
    6. '#print' → logprob: -12.750542640686035
    7. 'b' → logprob: -12.875542640686035
    8. ' print' → logprob: -13.375542640686035
    9. 'Print' → logprob: -14.750542640686035
    10. 'aff' → logprob: -15.750542640686035

Token 130: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.002963792532682419
    2. '#' → logprob: -6.502964019775391
    3. 'cul' → logprob: -6.752964019775391
    4. 'cules' → logprob: -9.25296401977539
    5. 'culate' → logprob: -9.50296401977539
    6. 'c' → logprob: -9.75296401977539
    7. 'ule' → logprob: -10.25296401977539
    8. '```' → logprob: -11.75296401977539
    9. '#print' → logprob: -12.50296401977539
    10. '
' → logprob: -12.87796401977539

Token 131: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.21880318224430084
    2. ' c' → logprob: -1.7188031673431396
    3. ' la' → logprob: -4.593803405761719
    4. 'b' → logprob: -5.343803405761719
    5. ' b' → logprob: -7.343803405761719
    6. 'a' → logprob: -7.968803405761719
    7. 'le' → logprob: -8.093803405761719
    8. '#' → logprob: -8.218803405761719
    9. ' le' → logprob: -8.218803405761719
    10. 'print' → logprob: -9.093803405761719

Token 132: ' puissance' (ID: 63494)
  Prédit: ' partie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' partie' → logprob: -0.67037433385849
    2. 'part' → logprob: -1.0453743934631348
    3. 'c' → logprob: -2.9203743934631348
    4. 'b' → logprob: -3.0453743934631348
    5. 's' → logprob: -4.295374393463135
    6. 'fraction' → logprob: -5.295374393463135
    7. ' part' → logprob: -5.545374393463135
    8. 're' → logprob: -6.420374393463135
    9. '#' → logprob: -6.670374393463135
    10. 'val' → logprob: -6.795374393463135

Token 133: ' de' (ID: 334)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6903368830680847
    2. 'a' → logprob: -1.8153369426727295
    3. '3' → logprob: -2.1903369426727295
    4. '2' → logprob: -2.5653369426727295
    5. ' b' → logprob: -2.8153369426727295
    6. ' ' → logprob: -3.0653369426727295
    7. ' a' → logprob: -3.8153369426727295
    8. ' (' → logprob: -4.81533670425415
    9. 'c' → logprob: -5.56533670425415
    10. '(' → logprob: -5.69033670425415

Token 134: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38849741220474243
    2. ' a' → logprob: -2.0134973526000977
    3. ' ' → logprob: -2.0134973526000977
    4. 'b' → logprob: -3.8884973526000977
    5. '2' → logprob: -4.138497352600098
    6. ' b' → logprob: -4.638497352600098
    7. '3' → logprob: -4.763497352600098
    8. '  ' → logprob: -10.263497352600098
    9. ' la' → logprob: -10.638497352600098
    10. ' ' → logprob: -10.763497352600098

Token 135: ' élevé' (ID: 95488)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3023553490638733
    2. '**' → logprob: -1.9273552894592285
    3. ' b' → logprob: -2.6773552894592285
    4. '2' → logprob: -3.4273552894592285
    5. ' **' → logprob: -5.0523552894592285
    6. '3' → logprob: -5.5523552894592285
    7. ' ' → logprob: -5.8023552894592285
    8. 'a' → logprob: -7.9273552894592285
    9. ' (' → logprob: -9.177355766296387
    10. ',' → logprob: -9.302355766296387

Token 136: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.21384209394454956
    2. ' ' → logprob: -2.0888421535491943
    3. ' au' → logprob: -3.9638421535491943
    4. '2' → logprob: -4.213841915130615
    5. '3' → logprob: -4.838841915130615
    6. 'à' → logprob: -5.088841915130615
    7. ' a' → logprob: -5.338841915130615
    8. 'au' → logprob: -5.588841915130615
    9. 'e' → logprob: -5.588841915130615
    10. ' b' → logprob: -5.713841915130615

Token 137: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3714234530925751
    2. ' ' → logprob: -1.7464234828948975
    3. '3' → logprob: -1.9964234828948975
    4. ' ' → logprob: -11.121423721313477
    5. '  ' → logprob: -11.871423721313477
    6. '6' → logprob: -12.996423721313477
    7. '```' → logprob: -13.621423721313477
    8. '1' → logprob: -13.871423721313477
    9. 'b' → logprob: -14.246423721313477
    10. ' b' → logprob: -14.496423721313477

Token 138: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21581009030342102
    2. '3' → logprob: -1.8408100605010986
    3. ' ' → logprob: -3.3408100605010986
    4. '  ' → logprob: -12.46580982208252
    5. ' ' → logprob: -12.71580982208252
    6. '```' → logprob: -12.96580982208252
    7. '1' → logprob: -13.59080982208252
    8. '6' → logprob: -14.34080982208252
    9. '0' → logprob: -14.59080982208252
    10. 'b' → logprob: -14.71580982208252

Token 139: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05049419403076172
    2. '**' → logprob: -3.3004941940307617
    3. ' b' → logprob: -4.675494194030762
    4. ' **' → logprob: -6.675494194030762
    5. '
' → logprob: -7.800494194030762
    6. ' ' → logprob: -8.175494194030762
    7. ' (' → logprob: -8.175494194030762
    8. '3' → logprob: -8.675494194030762
    9. '```' → logprob: -8.800494194030762
    10. ',' → logprob: -8.925494194030762

Token 140: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6077830791473389
    2. '3' → logprob: -1.4827830791473389
    3. 'b' → logprob: -1.8577830791473389
    4. ' b' → logprob: -3.482783079147339
    5. ' ' → logprob: -3.857783079147339
    6. ' )' → logprob: -4.482783317565918
    7. '**' → logprob: -5.607783317565918
    8. ')b' → logprob: -6.357783317565918
    9. '2' → logprob: -6.857783317565918
    10. ')**' → logprob: -7.232783317565918

Token 141: ''est' (ID: 6616)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.46598976850509644
    2. ')' → logprob: -1.0909898281097412
    3. ' **' → logprob: -3.590989828109741
    4. ' )' → logprob: -5.840989589691162
    5. ')**' → logprob: -6.340989589691162
    6. '3' → logprob: -6.965989589691162
    7. '**)' → logprob: -7.465989589691162
    8. '')' → logprob: -7.715989589691162
    9. 'b' → logprob: -7.715989589691162
    10. ' ' → logprob: -7.715989589691162

Token 142: '-à' (ID: 56297)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -1.1044634580612183
    2. ' ' → logprob: -1.6044634580612183
    3. ' b' → logprob: -2.104463577270508
    4. ' )' → logprob: -2.354463577270508
    5. ')' → logprob: -2.604463577270508
    6. '3' → logprob: -2.979463577270508
    7. '**' → logprob: -3.229463577270508
    8. 'b' → logprob: -3.229463577270508
    9. ' ' → logprob: -4.604463577270508
    10. ' ```' → logprob: -4.854463577270508

Token 143: '-dire' (ID: 76064)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0915842056274414
    2. 'b' → logprob: -1.3415842056274414
    3. ' la' → logprob: -2.4665842056274414
    4. 'la' → logprob: -2.4665842056274414
    5. ' b' → logprob: -2.5915842056274414
    6. 'a' → logprob: -2.7165842056274414
    7. '-à' → logprob: -2.8415842056274414
    8. ' ' → logprob: -4.216584205627441
    9. 'à' → logprob: -5.466584205627441
    10. '```' → logprob: -5.966584205627441

Token 144: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.22647641599178314
    2. 'b' → logprob: -1.6014764308929443
    3. ' ' → logprob: -7.351476192474365
    4. ' )' → logprob: -9.101476669311523
    5. ' ' → logprob: -9.476476669311523
    6. ')' → logprob: -9.601476669311523
    7. ' la' → logprob: -9.851476669311523
    8. ' `' → logprob: -10.476476669311523
    9. '```' → logprob: -10.976476669311523
    10. '3' → logprob: -11.101476669311523

Token 145: ' multip' (ID: 17524)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2519918978214264
    2. ' **' → logprob: -1.501991868019104
    3. ' *' → logprob: -11.126992225646973
    4. '3' → logprob: -11.251992225646973
    5. '*' → logprob: -11.626992225646973
    6. ')' → logprob: -11.876992225646973
    7. ')**' → logprob: -12.126992225646973
    8. ' ' → logprob: -12.626992225646973
    9. ' ' → logprob: -12.876992225646973
    10. '```' → logprob: -13.251992225646973

Token 146: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.00862320140004158
    2. 'li' → logprob: -4.883623123168945
    3. 'lic' → logprob: -7.758623123168945
    4. 'l' → logprob: -9.008623123168945
    5. 'lé' → logprob: -9.008623123168945
    6. 'lication' → logprob: -9.133623123168945
    7. 'iqué' → logprob: -9.258623123168945
    8. 'lique' → logprob: -10.633623123168945
    9. 'lie' → logprob: -10.633623123168945
    10. '  ' → logprob: -11.258623123168945

Token 147: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.02285837195813656
    2. ' b' → logprob: -4.647858142852783
    3. 'par' → logprob: -5.147858142852783
    4. 'b' → logprob: -6.022858142852783
    5. ' trois' → logprob: -6.272858142852783
    6. ' ' → logprob: -7.022858142852783
    7. ' *' → logprob: -7.397858142852783
    8. ' fois' → logprob: -7.772858142852783
    9. '<|end|>' → logprob: -7.897858142852783
    10. '```' → logprob: -9.272858619689941

Token 148: ' lui' (ID: 10623)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.31575915217399597
    2. 'b' → logprob: -1.3157591819763184
    3. ' itself' → logprob: -7.190759181976318
    4. ' ' → logprob: -7.190759181976318
    5. ' lui' → logprob: -7.690759181976318
    6. ' ' → logprob: -7.940759181976318
    7. '  ' → logprob: -9.81575870513916
    8. '	b' → logprob: -10.19075870513916
    9. '3' → logprob: -10.44075870513916
    10. '```' → logprob: -11.31575870513916

Token 149: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -0.001556163071654737
    2. 'self' → logprob: -7.876556396484375
    3. ' même' → logprob: -7.876556396484375
    4. '-' → logprob: -8.251556396484375
    5. '-m' → logprob: -8.251556396484375
    6. 'm' → logprob: -9.126556396484375
    7. '-mêmes' → logprob: -9.751556396484375
    8. '```' → logprob: -10.376556396484375
    9. ' ' → logprob: -10.876556396484375
    10. '**' → logprob: -10.876556396484375

Token 150: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6003618240356445
    2. '**' → logprob: -1.8503618240356445
    3. ' **' → logprob: -2.2253618240356445
    4. '3' → logprob: -2.9753618240356445
    5. ')' → logprob: -3.1003618240356445
    6. ' trois' → logprob: -3.3503618240356445
    7. ' )' → logprob: -3.4753618240356445
    8. ')**' → logprob: -4.6003618240356445
    9. 'b' → logprob: -5.9753618240356445
    10. ' b' → logprob: -6.4753618240356445

Token 151: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.5279561877250671
    2. ' *' → logprob: -1.152956247329712
    3. ' ' → logprob: -3.027956247329712
    4. '*' → logprob: -3.902956247329712
    5. 'fois' → logprob: -4.277956008911133
    6. ' ' → logprob: -5.527956008911133
    7. '**' → logprob: -5.652956008911133
    8. ' **' → logprob: -5.902956008911133
    9. 'multip' → logprob: -7.777956008911133
    10. ' deux' → logprob: -8.277956008911133

Token 152: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0815107524394989
    2. ' )' → logprob: -2.8315107822418213
    3. '**' → logprob: -4.581510543823242
    4. 'b' → logprob: -5.581510543823242
    5. ')**' → logprob: -5.831510543823242
    6. ' **' → logprob: -7.081510543823242
    7. ' b' → logprob: -7.706510543823242
    8. '**)' → logprob: -7.956510543823242
    9. '3' → logprob: -8.831510543823242
    10. ' **)' → logprob: -9.331510543823242

Token 153: ' b' (ID: 287)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8042769432067871
    2. 'b' → logprob: -1.429276943206787
    3. ' b' → logprob: -1.679276943206787
    4. ' ' → logprob: -2.179276943206787
    5. ')' → logprob: -5.179276943206787
    6. '**' → logprob: -5.429276943206787
    7. ' **' → logprob: -6.429276943206787
    8. ' )' → logprob: -7.429276943206787
    9. '2' → logprob: -8.054277420043945
    10. '*b' → logprob: -8.804277420043945

Token 154: ' *' (ID: 425)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.39128074049949646
    2. '**' → logprob: -1.1412807703018188
    3. ' *' → logprob: -5.516280651092529
    4. '*' → logprob: -8.391281127929688
    5. ' ' → logprob: -10.141281127929688
    6. ')' → logprob: -10.641281127929688
    7. ')**' → logprob: -10.891281127929688
    8. '3' → logprob: -11.016281127929688
    9. ' )' → logprob: -11.391281127929688
    10. '```' → logprob: -11.516281127929688

Token 155: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38692033290863037
    2. ' b' → logprob: -1.1369203329086304
    3. ' ' → logprob: -10.761919975280762
    4. '3' → logprob: -10.886919975280762
    5. '2' → logprob: -11.761919975280762
    6. '	b' → logprob: -14.636919975280762
    7. ' б' → logprob: -15.136919975280762
    8. ')b' → logprob: -15.386919975280762
    9. ' ' → logprob: -16.011920928955078
    10. '*b' → logprob: -16.011920928955078

Token 156: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0042036441154778
    2. '*' → logprob: -5.504203796386719
    3. ')' → logprob: -9.504203796386719
    4. ' ' → logprob: -10.254203796386719
    5. '**' → logprob: -12.629203796386719
    6. ' **' → logprob: -12.629203796386719
    7. ' ' → logprob: -12.629203796386719
    8. ' )' → logprob: -12.879203796386719
    9. ' *)' → logprob: -14.004203796386719
    10. '*b' → logprob: -14.754203796386719

Token 157: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03365134820342064
    2. ' b' → logprob: -3.408651351928711
    3. ' ' → logprob: -12.283651351928711
    4. '3' → logprob: -14.908651351928711
    5. ' б' → logprob: -15.533651351928711
    6. '  ' → logprob: -15.658651351928711
    7. ')' → logprob: -16.28365135192871
    8. '	b' → logprob: -16.53365135192871
    9. '2' → logprob: -16.78365135192871
    10. ')b' → logprob: -16.90865135192871

Token 158: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011918948730453849
    2. ' )' → logprob: -7.876192092895508
    3. 'b' → logprob: -8.376192092895508
    4. '**' → logprob: -8.501192092895508
    5. ')**' → logprob: -8.626192092895508
    6. ')
' → logprob: -9.376192092895508
    7. ')b' → logprob: -9.751192092895508
    8. '**)' → logprob: -11.501192092895508
    9. '')' → logprob: -12.001192092895508
    10. ')
' → logprob: -12.001192092895508

Token 159: ' soit' (ID: 17293)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23757174611091614
    2. ' )' → logprob: -1.6125717163085938
    3. ' b' → logprob: -4.862571716308594
    4. ' ' → logprob: -6.362571716308594
    5. 'b' → logprob: -6.362571716308594
    6. '3' → logprob: -7.987571716308594
    7. '**' → logprob: -9.737571716308594
    8. ')**' → logprob: -9.987571716308594
    9. '')' → logprob: -10.112571716308594
    10. '")' → logprob: -10.112571716308594

Token 160: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.18502052128314972
    2. 'b' → logprob: -1.8100205659866333
    3. ' (' → logprob: -6.685020446777344
    4. ')' → logprob: -6.685020446777344
    5. ' ' → logprob: -6.810020446777344
    6. ' )' → logprob: -6.810020446777344
    7. '3' → logprob: -8.685020446777344
    8. ' pow' → logprob: -9.435020446777344
    9. 'pow' → logprob: -9.435020446777344
    10. '(' → logprob: -9.685020446777344

Token 161: '^' (ID: 61)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.4299929440021515
    2. '**' → logprob: -1.054992914199829
    3. ')' → logprob: -7.304993152618408
    4. ')**' → logprob: -8.42999267578125
    5. ' *' → logprob: -8.55499267578125
    6. ' )' → logprob: -9.42999267578125
    7. '*' → logprob: -9.92999267578125
    8. ' ' → logprob: -10.55499267578125
    9. '```' → logprob: -11.55499267578125
    10. ' **)' → logprob: -11.55499267578125

Token 162: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.000913370808120817
    2. ' ' → logprob: -7.000913143157959
    3. ')' → logprob: -13.625913619995117
    4. '  ' → logprob: -15.500913619995117
    5. '(' → logprob: -16.500913619995117
    6. '**' → logprob: -16.625913619995117
    7. '```' → logprob: -16.750913619995117
    8. '³' → logprob: -17.000913619995117
    9. ' )' → logprob: -17.500913619995117
    10. ' ' → logprob: -17.750913619995117

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1417398303747177
    2. ')
' → logprob: -2.141739845275879
    3. 'b' → logprob: -4.391739845275879
    4. ' )' → logprob: -7.266739845275879
    5. ')b' → logprob: -7.516739845275879
    6. ')
' → logprob: -7.641739845275879
    7. ')**' → logprob: -8.641739845275879
    8. ' )
' → logprob: -8.766739845275879
    9. '**' → logprob: -8.891739845275879
    10. ')

' → logprob: -9.641739845275879

Token 164: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01672367751598358
    2. 'b' → logprob: -4.2667236328125
    3. ' c' → logprob: -6.2667236328125
    4. '
' → logprob: -7.3917236328125
    5. ' b' → logprob: -10.8917236328125
    6. 'result' → logprob: -11.7667236328125
    7. '

' → logprob: -12.3917236328125
    8. '```' → logprob: -12.3917236328125
    9. '
' → logprob: -13.5167236328125
    10. ' 
' → logprob: -13.7667236328125

Token 165: ' L' (ID: 451)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0013332172529771924
    2. ' c' → logprob: -6.626333236694336
    3. 'b' → logprob: -12.376333236694336
    4. 'cub' → logprob: -13.751333236694336
    5. 'cube' → logprob: -13.751333236694336
    6. '```' → logprob: -15.001333236694336
    7. '#' → logprob: -15.126333236694336
    8. 'result' → logprob: -15.501333236694336
    9. '
' → logprob: -16.876333236694336
    10. 'pow' → logprob: -17.001333236694336

Token 166: ''op' (ID: 70747)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.32025983929634094
    2. ' c' → logprob: -2.1952598094940186
    3. ' =' → logprob: -2.8202598094940186
    4. 'b' → logprob: -3.6952598094940186
    5. '**' → logprob: -3.8202598094940186
    6. '_' → logprob: -4.070260047912598
    7. '^' → logprob: -4.320260047912598
    8. ' **' → logprob: -4.570260047912598
    9. '=' → logprob: -5.695260047912598
    10. ' ' → logprob: -6.070260047912598

Token 167: 'érateur' (ID: 108528)
  Prédit: 'érateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.17309802770614624
    2. 'é' → logprob: -1.923098087310791
    3. 'ér' → logprob: -5.048098087310791
    4. 'er' → logprob: -5.923098087310791
    5. '#' → logprob: -6.173098087310791
    6. 'ération' → logprob: -7.798098087310791
    7. 'e' → logprob: -9.173097610473633
    8. 'éra' → logprob: -9.423097610473633
    9. 'èr' → logprob: -9.673097610473633
    10. 'és' → logprob: -9.923097610473633

Token 168: ' '**' (ID: 188301)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.02336590550839901
    2. ' **' → logprob: -3.7733659744262695
    3. '*' → logprob: -9.14836597442627
    4. '=' → logprob: -11.89836597442627
    5. ' =' → logprob: -13.14836597442627
    6. ' *' → logprob: -14.02336597442627
    7. ' ' → logprob: -14.02336597442627
    8. ' **)' → logprob: -14.14836597442627
    9. '`' → logprob: -14.27336597442627
    10. '**
' → logprob: -14.39836597442627

Token 169: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9606065154075623
    2. '**' → logprob: -1.585606575012207
    3. ' **' → logprob: -1.960606575012207
    4. ' ' → logprob: -2.335606575012207
    5. '3' → logprob: -2.710606575012207
    6. ' )' → logprob: -2.835606575012207
    7. '')' → logprob: -3.960606575012207
    8. ')**' → logprob: -4.210606575012207
    9. ' b' → logprob: -5.585606575012207
    10. ''' → logprob: -5.585606575012207

Token 170: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.047224801033735275
    2. ' )' → logprob: -4.797224998474121
    3. ' **' → logprob: -4.922224998474121
    4. ' est' → logprob: -5.547224998474121
    5. ' ' → logprob: -5.797224998474121
    6. ' effect' → logprob: -5.797224998474121
    7. '**' → logprob: -5.922224998474121
    8. ' continue' → logprob: -5.922224998474121
    9. ')' → logprob: -6.047224998474121
    10. '<|end|>' → logprob: -6.297224998474121

Token 171: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.21288280189037323
    2. '**' → logprob: -2.3378827571868896
    3. ' l' → logprob: -2.9628827571868896
    4. ' un' → logprob: -4.462882995605469
    5. 'ex' → logprob: -5.087882995605469
    6. ' exponent' → logprob: -5.212882995605469
    7. ' **' → logprob: -5.837882995605469
    8. ' utilisée' → logprob: -5.837882995605469
    9. 'util' → logprob: -6.337882995605469
    10. 'l' → logprob: -6.337882995605469

Token 172: ' pour' (ID: 1930)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.42840448021888733
    2. ' b' → logprob: -1.178404450416565
    3. ' pour' → logprob: -3.3034045696258545
    4. 'pour' → logprob: -6.428404331207275
    5. ' ' → logprob: -6.678404331207275
    6. ' for' → logprob: -7.678404331207275
    7. ')' → logprob: -9.053404808044434
    8. 'for' → logprob: -9.303404808044434
    9. '=' → logprob: -9.553404808044434
    10. '#' → logprob: -9.803404808044434

Token 173: ' l' (ID: 305)
  Prédit: ' effectuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -0.6794725060462952
    2. ' é' → logprob: -1.3044724464416504
    3. ' calcul' → logprob: -2.5544724464416504
    4. 'é' → logprob: -2.5544724464416504
    5. ' faire' → logprob: -3.8044724464416504
    6. ' exponent' → logprob: -4.55447244644165
    7. ' réaliser' → logprob: -4.80447244644165
    8. 'calcul' → logprob: -4.92947244644165
    9. 'élé' → logprob: -5.42947244644165
    10. '**' → logprob: -5.42947244644165

Token 174: ''ex' (ID: 23472)
  Prédit: ''ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ex' → logprob: -1.456569790840149
    2. ''é' → logprob: -1.581569790840149
    3. 'ève' → logprob: -1.581569790840149
    4. 'év' → logprob: -2.0815696716308594
    5. 'é' → logprob: -3.2065696716308594
    6. ''' → logprob: -3.3315696716308594
    7. 'e' → logprob: -3.3315696716308594
    8. 'élé' → logprob: -3.7065696716308594
    9. ''él' → logprob: -4.331569671630859
    10. 'èvement' → logprob: -4.456569671630859

Token 175: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.008293279446661472
    2. 'p' → logprob: -5.633293151855469
    3. 'pon' → logprob: -5.758293151855469
    4. 'ponential' → logprob: -7.383293151855469
    5. 'pression' → logprob: -8.508293151855469
    6. 'pos' → logprob: -8.758293151855469
    7. 'écution' → logprob: -8.758293151855469
    8. '**' → logprob: -8.883293151855469
    9. 'ponente' → logprob: -10.133293151855469
    10. 'é' → logprob: -10.383293151855469

Token 176: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -7.600714161526412e-05
    2. 'i' → logprob: -10.375076293945312
    3. 'ia' → logprob: -10.750076293945312
    4. 'ation' → logprob: -11.875076293945312
    5. 'enti' → logprob: -12.375076293945312
    6. 'ient' → logprob: -12.750076293945312
    7. 'ielle' → logprob: -13.500076293945312
    8. 'entation' → logprob: -13.500076293945312
    9. 'a' → logprob: -14.000076293945312
    10. 'ention' → logprob: -14.250076293945312

Token 177: ' en' (ID: 469)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.010712807066738605
    2. '
' → logprob: -5.010712623596191
    3. 'b' → logprob: -6.010712623596191
    4. ' c' → logprob: -6.510712623596191
    5. '```' → logprob: -10.885712623596191
    6. '
' → logprob: -11.385712623596191
    7. ' b' → logprob: -12.510712623596191
    8. '

' → logprob: -12.635712623596191
    9. ' 
' → logprob: -13.260712623596191
    10. '  
' → logprob: -13.385712623596191

Token 178: ' Python' (ID: 26534)
  Prédit: ' Python'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Python' → logprob: -0.26961228251457214
    2. 'Python' → logprob: -1.6446123123168945
    3. 'python' → logprob: -3.3946123123168945
    4. ' python' → logprob: -4.6446123123168945
    5. ' ' → logprob: -10.894612312316895
    6. 'py' → logprob: -11.394612312316895
    7. 'ython' → logprob: -11.519612312316895
    8. 'b' → logprob: -11.769612312316895
    9. '_python' → logprob: -11.769612312316895
    10. 'a' → logprob: -12.019612312316895

Token 179: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0050842068158090115
    2. 'b' → logprob: -5.630084037780762
    3. ' c' → logprob: -6.880084037780762
    4. '
' → logprob: -7.755084037780762
    5. 'result' → logprob: -12.005084037780762
    6. '
' → logprob: -12.380084037780762
    7. 'cub' → logprob: -12.505084037780762
    8. ' b' → logprob: -12.755084037780762
    9. 'cube' → logprob: -13.255084037780762
    10. '

' → logprob: -13.755084037780762

Token 180: 'result' (ID: 2521)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0011602196609601378
    2. '
' → logprob: -7.376160144805908
    3. 'b' → logprob: -8.001160621643066
    4. ' c' → logprob: -8.626160621643066
    5. '```' → logprob: -11.251160621643066
    6. '
' → logprob: -13.001160621643066
    7. 'result' → logprob: -13.751160621643066
    8. '

' → logprob: -14.376160621643066
    9. 'cub' → logprob: -14.376160621643066
    10. 'cube' → logprob: -14.626160621643066

Token 181: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10246542096138
    2. '=' → logprob: -2.7274653911590576
    3. 'at' → logprob: -3.4774653911590576
    4. 's' → logprob: -7.352465629577637
    5. ' ' → logprob: -7.977465629577637
    6. '_' → logprob: -9.477465629577637
    7. 'a' → logprob: -10.477465629577637
    8. ' ' → logprob: -10.977465629577637
    9. 'ats' → logprob: -12.227465629577637
    10. 't' → logprob: -12.727465629577637

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01257121842354536
    2. '=' → logprob: -4.387571334838867
    3. ' ' → logprob: -9.887571334838867
    4. 's' → logprob: -11.887571334838867
    5. ' ' → logprob: -13.887571334838867
    6. '  ' → logprob: -13.887571334838867
    7. '_' → logprob: -14.012571334838867
    8. ')' → logprob: -14.387571334838867
    9. '3' → logprob: -15.762571334838867
    10. '1' → logprob: -16.137571334838867

Token 183: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759396553039551
    2. 'b' → logprob: -0.8259396553039551
    3. '(b' → logprob: -16.450939178466797
    4. ' ' → logprob: -16.450939178466797
    5. ' ' → logprob: -16.575939178466797
    6. '	b' → logprob: -16.950939178466797
    7. '_b' → logprob: -17.700939178466797
    8. '   ' → logprob: -18.825939178466797
    9. ' (' → logprob: -19.200939178466797
    10. ' б' → logprob: -19.325939178466797

Token 184: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1602250337600708
    2. ' **' → logprob: -1.9102250337600708
    3. ' ' → logprob: -14.660224914550781
    4. '*' → logprob: -15.285224914550781
    5. ' *' → logprob: -15.785224914550781
    6. '3' → logprob: -16.28522491455078
    7. ' ' → logprob: -17.78522491455078
    8. '***' → logprob: -18.28522491455078
    9. '³' → logprob: -18.41022491455078
    10. '```' → logprob: -18.41022491455078

Token 185: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -19.875003814697266
    4. '  ' → logprob: -21.000003814697266
    5. '۳' → logprob: -21.000003814697266
    6. '   ' → logprob: -22.000003814697266
    7. '³' → logprob: -22.000003814697266
    8. '' → logprob: -22.750003814697266
    9. '٣' → logprob: -22.875003814697266
    10. '３' → logprob: -23.125003814697266

Token 186: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -20.125
    4. '۳' → logprob: -20.875
    5. '³' → logprob: -22.125
    6. '٣' → logprob: -22.375
    7. '３' → logprob: -23.0
    8. '' → logprob: -23.0
    9. '   ' → logprob: -23.125
    10. '  ' → logprob: -23.375

Token 187: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009811456315219402
    2. '
' → logprob: -4.8848114013671875
    3. '<|end|>' → logprob: -6.6348114013671875
    4. ')' → logprob: -7.6348114013671875
    5. '#' → logprob: -8.384811401367188
    6. ' print' → logprob: -9.634811401367188
    7. '```' → logprob: -10.384811401367188
    8. '#print' → logprob: -10.884811401367188
    9. '\n' → logprob: -11.134811401367188
    10. '  
' → logprob: -11.384811401367188

Token 188: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.41866585687967e-06
    2. '#' → logprob: -12.500008583068848
    3. '
' → logprob: -13.000008583068848
    4. '#print' → logprob: -13.875008583068848
    5. 'result' → logprob: -14.250008583068848
    6. ' print' → logprob: -14.625008583068848
    7. '```' → logprob: -15.375008583068848
    8. '<|end|>' → logprob: -16.62500762939453
    9. 'pr' → logprob: -17.37500762939453
    10. '(print' → logprob: -17.37500762939453

Token 189: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '#' → logprob: -17.5
    3. 'prin' → logprob: -17.625
    4. '#print' → logprob: -17.875
    5. 'pr' → logprob: -19.875
    6. ' print' → logprob: -19.875
    7. 'p' → logprob: -21.125
    8. 'pri' → logprob: -22.25
    9. 'Print' → logprob: -22.5
    10. '```' → logprob: -22.625

Token 190: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0728524699807167
    2. 'icher' → logprob: -3.072852373123169
    3. '#' → logprob: -3.822852373123169
    4. 'ichage' → logprob: -6.572852611541748
    5. 'ich' → logprob: -8.19785213470459
    6. 'ic' → logprob: -8.19785213470459
    7. 'print' → logprob: -9.44785213470459
    8. '```' → logprob: -10.94785213470459
    9. 'f' → logprob: -11.32285213470459
    10. '#print' → logprob: -11.69785213470459

Token 191: ' le' (ID: 505)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.004136699251830578
    2. '(' → logprob: -5.504136562347412
    3. 'result' → logprob: -10.50413703918457
    4. '("' → logprob: -11.00413703918457
    5. ' (' → logprob: -12.25413703918457
    6. '(print' → logprob: -12.62913703918457
    7. '()' → logprob: -13.12913703918457
    8. '(resultado' → logprob: -13.62913703918457
    9. '(res' → logprob: -14.50413703918457
    10. 'print' → logprob: -14.62913703918457

Token 192: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05750255659222603
    2. ' result' → logprob: -3.932502508163452
    3. ' resultat' → logprob: -4.182502746582031
    4. ' résultat' → logprob: -4.307502746582031
    5. 'rés' → logprob: -5.557502746582031
    6. '(result' → logprob: -5.932502746582031
    7. 'r' → logprob: -7.182502746582031
    8. ' ' → logprob: -9.057502746582031
    9. 's' → logprob: -9.557502746582031
    10. 'res' → logprob: -9.932502746582031

Token 193: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. '
' → logprob: -14.000000953674316
    3. ' print' → logprob: -15.750000953674316
    4. '```' → logprob: -16.250001907348633
    5. '(print' → logprob: -19.250001907348633
    6. ')
' → logprob: -19.875001907348633
    7. '
' → logprob: -21.375001907348633
    8. '#print' → logprob: -21.625001907348633
    9. '``' → logprob: -21.875001907348633
    10. '.print' → logprob: -21.875001907348633

Token 194: ' calcul' (ID: 7559)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09613161534070969
    2. 'print' → logprob: -2.8461315631866455
    3. 'rés' → logprob: -4.346131801605225
    4. 'calcul' → logprob: -4.471131801605225
    5. ' résultat' → logprob: -4.846131801605225
    6. ' calcul' → logprob: -7.721131801605225
    7. ' resultat' → logprob: -7.846131801605225
    8. ' result' → logprob: -8.596131324768066
    9. '#' → logprob: -9.721131324768066
    10. 'r' → logprob: -9.971131324768066

Token 195: ' précédent' (ID: 128462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.75
    3. ' print' → logprob: -18.25
    4. '
' → logprob: -19.75
    5. '(print' → logprob: -21.75
    6. 'result' → logprob: -22.0
    7. ')
' → logprob: -22.625
    8. ')' → logprob: -23.125
    9. '``' → logprob: -23.875
    10. '.print' → logprob: -24.25

Token 196: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.0
    3. '
' → logprob: -19.625
    4. '```' → logprob: -19.75
    5. '#print' → logprob: -23.875
    6. '(print' → logprob: -24.375
    7. '.print' → logprob: -24.625
    8. ')' → logprob: -25.25
    9. ')
' → logprob: -25.375
    10. 'prin' → logprob: -25.625

Token 197: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.25
    3. '```' → logprob: -21.875
    4. '
' → logprob: -23.625
    5. 'prin' → logprob: -23.75
    6. '#print' → logprob: -24.25
    7. 'result' → logprob: -25.125
    8. 'pr' → logprob: -25.5
    9. '(print' → logprob: -25.875
    10. 'Print' → logprob: -26.375

Token 198: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -20.0
    3. '```' → logprob: -21.375
    4. 'prin' → logprob: -23.75
    5. '#print' → logprob: -24.375
    6. 'pr' → logprob: -24.75
    7. 'Print' → logprob: -25.75
    8. '#' → logprob: -27.125
    9. 'prit' → logprob: -27.25
    10. '
' → logprob: -27.5

Token 199: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009145628428086638
    2. ' print' → logprob: -7.000914573669434
    3. 'fonction' → logprob: -13.625914573669434
    4. '#' → logprob: -13.875914573669434
    5. 'p' → logprob: -15.625914573669434
    6. ' ' → logprob: -15.750914573669434
    7. '#print' → logprob: -15.875914573669434
    8. 'pr' → logprob: -15.875914573669434
    9. 'prin' → logprob: -16.375913619995117
    10. ' fonction' → logprob: -16.500913619995117

Token 200: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.547789674485102e-05
    2. ' print' → logprob: -10.250035285949707
    3. 'prin' → logprob: -23.000036239624023
    4. '(print' → logprob: -23.250036239624023
    5. 'pr' → logprob: -23.375036239624023
    6. '#print' → logprob: -23.750036239624023
    7. '	print' → logprob: -24.875036239624023
    8. '```' → logprob: -24.875036239624023
    9. 'result' → logprob: -25.250036239624023
    10. 'printf' → logprob: -25.375036239624023

Token 201: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7587645649909973
    2. '()' → logprob: -0.7587645649909973
    3. '(result' → logprob: -2.7587645053863525
    4. '('' → logprob: -10.258764266967773
    5. '(print' → logprob: -10.258764266967773
    6. '("' → logprob: -10.633764266967773
    7. '(output' → logprob: -11.258764266967773
    8. '(resultado' → logprob: -12.008764266967773
    9. '(

' → logprob: -12.383764266967773
    10. '(
' → logprob: -12.508764266967773

Token 202: ' en' (ID: 469)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.08882702887058258
    2. '(' → logprob: -2.588827133178711
    3. '()' → logprob: -4.963827133178711
    4. '(print' → logprob: -5.963827133178711
    5. 'print' → logprob: -8.338827133178711
    6. 'result' → logprob: -10.213827133178711
    7. '(output' → logprob: -10.713827133178711
    8. '(results' → logprob: -11.463827133178711
    9. '(resultado' → logprob: -11.838827133178711
    10. '("' → logprob: -12.588827133178711

Token 203: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.3628736734390259
    2. 't' → logprob: -2.2378735542297363
    3. 'tr' → logprob: -3.2378735542297363
    4. ' affiche' → logprob: -3.4878735542297363
    5. 'tre' → logprob: -3.6128735542297363
    6. 'chaine' → logprob: -3.9878735542297363
    7. 'suite' → logprob: -4.362873554229736
    8. ' Python' → logprob: -5.112873554229736
    9. 'semble' → logprob: -5.362873554229736
    10. 'voy' → logprob: -5.612873554229736

Token 204: ' la' (ID: 557)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.03525339812040329
    2. '(' → logprob: -3.4102532863616943
    3. '()' → logprob: -6.535253524780273
    4. '("' → logprob: -9.910253524780273
    5. '("")' → logprob: -10.285253524780273
    6. 'result' → logprob: -10.535253524780273
    7. '(resultado' → logprob: -10.785253524780273
    8. ' (' → logprob: -12.660253524780273
    9. '('' → logprob: -13.035253524780273
    10. '(res' → logprob: -13.160253524780273

Token 205: ' valeur' (ID: 41664)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.5538205504417419
    2. 'result' → logprob: -1.4288206100463867
    3. 'val' → logprob: -1.8038206100463867
    4. '(result' → logprob: -4.053820610046387
    5. '()' → logprob: -6.428820610046387
    6. '(' → logprob: -7.428820610046387
    7. ' résultat' → logprob: -8.053820610046387
    8. 'fonction' → logprob: -8.428820610046387
    9. 'ré' → logprob: -8.553820610046387
    10. 'output' → logprob: -9.178820610046387

Token 206: ' de' (ID: 334)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.03613728657364845
    2. '(' → logprob: -3.411137342453003
    3. '()' → logprob: -6.411137104034424
    4. 'result' → logprob: -7.161137104034424
    5. '(
' → logprob: -10.161137580871582
    6. ')' → logprob: -12.036137580871582
    7. '(

' → logprob: -12.536137580871582
    8. '(resultado' → logprob: -12.786137580871582
    9. '(...)' → logprob: -12.911137580871582
    10. 'print' → logprob: -13.286137580871582

Token 207: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0007989077712409198
    2. ' result' → logprob: -7.62579870223999
    3. ' resultat' → logprob: -8.125799179077148
    4. '"' → logprob: -11.750799179077148
    5. ' résultat' → logprob: -12.875799179077148
    6. '(result' → logprob: -13.250799179077148
    7. '`' → logprob: -13.875799179077148
    8. 'la' → logprob: -14.375799179077148
    9. 'rés' → logprob: -14.875799179077148
    10. '$result' → logprob: -15.750799179077148

Token 208: ' dans' (ID: 2671)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0036626679357141256
    2. '(' → logprob: -6.003662586212158
    3. '(print' → logprob: -7.253662586212158
    4. '()' → logprob: -8.128663063049316
    5. 'print' → logprob: -9.003663063049316
    6. 'result' → logprob: -9.878663063049316
    7. '(resultado' → logprob: -12.378663063049316
    8. '(results' → logprob: -13.378663063049316
    9. '(
' → logprob: -14.253663063049316
    10. '(output' → logprob: -14.753663063049316

Token 209: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5227454304695129
    2. ' la' → logprob: -1.1477453708648682
    3. 'le' → logprob: -2.772745370864868
    4. 'l' → logprob: -4.147745609283447
    5. ' le' → logprob: -5.397745609283447
    6. 'console' → logprob: -5.397745609283447
    7. ' l' → logprob: -6.397745609283447
    8. ' console' → logprob: -8.772745132446289
    9. ' ' → logprob: -9.022745132446289
    10. ' ' → logprob: -10.147745132446289

Token 210: ' flux' (ID: 36547)
  Prédit: 'console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'console' → logprob: -0.6958417296409607
    2. 'terminal' → logprob: -0.6958417296409607
    3. ' terminal' → logprob: -6.0708417892456055
    4. 'con' → logprob: -9.070841789245605
    5. ' console' → logprob: -9.070841789245605
    6. 'flux' → logprob: -9.945841789245605
    7. 'print' → logprob: -10.445841789245605
    8. 'stdout' → logprob: -10.820841789245605
    9. 'term' → logprob: -11.070841789245605
    10. 'shell' → logprob: -11.195841789245605

Token 211: ' de' (ID: 334)
  Prédit: ' standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.5583206415176392
    2. 'standard' → logprob: -1.1833206415176392
    3. 'stdout' → logprob: -2.3083205223083496
    4. 'print' → logprob: -5.05832052230835
    5. ' stdout' → logprob: -5.43332052230835
    6. 'sort' → logprob: -6.05832052230835
    7. ' de' → logprob: -6.18332052230835
    8. 'output' → logprob: -6.30832052230835
    9. 'de' → logprob: -6.43332052230835
    10. ' output' → logprob: -6.68332052230835

Token 212: ' sortie' (ID: 52761)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.09962695091962814
    2. 'console' → logprob: -3.2246270179748535
    3. ' sortie' → logprob: -3.4746270179748535
    4. 'stdout' → logprob: -4.0996270179748535
    5. 'la' → logprob: -5.8496270179748535
    6. 's' → logprob: -5.9746270179748535
    7. 'print' → logprob: -7.0996270179748535
    8. 'output' → logprob: -7.4746270179748535
    9. 'texte' → logprob: -9.099626541137695
    10. 'aff' → logprob: -9.349626541137695

Token 213: ' standard' (ID: 7024)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19446276128292084
    2. '(result' → logprob: -1.944462776184082
    3. '(print' → logprob: -3.944462776184082
    4. 'result' → logprob: -4.569462776184082
    5. '()' → logprob: -6.069462776184082
    6. '(' → logprob: -6.444462776184082
    7. ')' → logprob: -11.569462776184082
    8. ' print' → logprob: -11.694462776184082
    9. '```' → logprob: -13.069462776184082
    10. '(resultado' → logprob: -13.194462776184082

Token 214: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00026205103495158255
    2. '(print' → logprob: -8.500262260437012
    3. '()' → logprob: -10.750262260437012
    4. '()
' → logprob: -11.250262260437012
    5. 'result' → logprob: -11.500262260437012
    6. ' print' → logprob: -12.125262260437012
    7. '(result' → logprob: -12.125262260437012
    8. '(' → logprob: -12.875262260437012
    9. '(
' → logprob: -15.375262260437012
    10. '```' → logprob: -16.000261306762695

Token 215: 'console' (ID: 9343)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01373701449483633
    2. 'console' → logprob: -4.888737201690674
    3. ' )' → logprob: -5.763737201690674
    4. 'la' → logprob: -6.513737201690674
    5. ' la' → logprob: -6.888737201690674
    6. ' console' → logprob: -8.888736724853516
    7. 'print' → logprob: -9.263736724853516
    8. 'stdout' → logprob: -9.763736724853516
    9. 'terminal' → logprob: -10.138736724853516
    10. ').' → logprob: -10.513736724853516

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016909420082811266
    2. '()' → logprob: -8.875168800354004
    3. ')
' → logprob: -11.750168800354004
    4. '())' → logprob: -12.000168800354004
    5. ' )' → logprob: -12.500168800354004
    6. 'print' → logprob: -12.875168800354004
    7. ',' → logprob: -13.500168800354004
    8. ')`' → logprob: -13.500168800354004
    9. ')#' → logprob: -13.625168800354004
    10. '(' → logprob: -14.125168800354004

Token 217: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.0
    3. '(print' → logprob: -21.625
    4. '```' → logprob: -22.25
    5. '.print' → logprob: -24.5
    6. 'prin' → logprob: -24.75
    7. 'pr' → logprob: -24.875
    8. '
' → logprob: -25.125
    9. '#print' → logprob: -25.125
    10. 'Print' → logprob: -25.5

Token 218: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.03809404745697975
    2. '(' → logprob: -3.2880940437316895
    3. '(resultado' → logprob: -10.663094520568848
    4. '()' → logprob: -11.538094520568848
    5. ' (' → logprob: -11.788094520568848
    6. '(res' → logprob: -12.163094520568848
    7. '(results' → logprob: -13.038094520568848
    8. '(print' → logprob: -13.538094520568848
    9. '(rest' → logprob: -13.913094520568848
    10. '(
' → logprob: -15.163094520568848

Token 219: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -3.531315314830863e-06
    2. 't' → logprob: -12.875003814697266
    3. 'ant' → logprob: -15.375003814697266
    4. 'ent' → logprob: -15.500003814697266
    5. ' at' → logprob: -16.000003814697266
    6. 'a' → logprob: -16.500003814697266
    7. 'ат' → logprob: -16.500003814697266
    8. ')' → logprob: -16.750003814697266
    9. '_at' → logprob: -17.125003814697266
    10. 'tat' → logprob: -17.750003814697266

Token 220: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.0
    3. ')
' → logprob: -17.75
    4. ')`' → logprob: -17.875
    5. '))' → logprob: -18.25
    6. '()' → logprob: -20.375
    7. '')' → logprob: -20.625
    8. ')}' → logprob: -21.25
    9. '())' → logprob: -21.375
    10. '）' → logprob: -21.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 218
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 135
Précision stricte (1ère position): 26.15%
Précision adaptée (1ère position): 26.15%
Précision (top 10): 61.93%
================================================================================
