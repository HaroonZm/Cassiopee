================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import product

def lire_entiers():
    return list(map(int, input().split()))

n = int(input())
L = []
compteur = 0

while compteur < n:
    a = int(input())
    sous = []
    [sous.append(list(map(lambda z: int(z)-1 if y == 0 else int(z), enumerate(input().split())))) for y in range(a) for _ in [0] for _ in [0] if not sous.append([int(input().split()[0])-1, int(input().split()[1])]) if False]
    # Ligne alternative :
    for _ in range(a):
        X, Y = map(int, input().split())
        sous += [[X-1, Y]]
    L.append(sous)
    compteur += 1

indices = 0
solution = None
found = False
soluce = None

for bundle in product([True, False], repeat=n):
    S = list(bundle)
    error = 0
    for idx in range(n):
        current = L[idx]
        for elem in current:
            x, y = elem
            if S[idx] and int(S[x]) != y:
                error = 1
    if error == 0:
        soluce = S
        break

if soluce is None:
    print(0)
else:
    print(sum(soluce))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' product' (ID: 1888)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.2127628326416016
    2. 'product' → logprob: -1.2127628326416016
    3. 'per' → logprob: -1.7127628326416016
    4. 'count' → logprob: -2.3377628326416016
    5. ' permutations' → logprob: -3.2127628326416016
    6. 'cycle' → logprob: -3.3377628326416016
    7. ' product' → logprob: -3.8377628326416016
    8. 'group' → logprob: -4.712762832641602
    9. 'chain' → logprob: -4.837762832641602
    10. ' cycle' → logprob: -4.962762832641602

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00045259902253746986
    2. '\(' → logprob: -8.125452995300293
    3. '```' → logprob: -9.375452995300293
    4. '`' → logprob: -10.625452995300293
    5. ' (' → logprob: -11.500452995300293
    6. '(
' → logprob: -11.750452995300293
    7. '.' → logprob: -11.875452995300293
    8. ''' → logprob: -12.625452995300293
    9. ',' → logprob: -12.875452995300293
    10. '"' → logprob: -13.125452995300293

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000573167169932276
    2. '\(' → logprob: -8.25057315826416
    3. '```' → logprob: -8.62557315826416
    4. '`' → logprob: -10.12557315826416
    5. '(
' → logprob: -10.12557315826416
    6. '.' → logprob: -11.50057315826416
    7. '((' → logprob: -12.12557315826416
    8. '()' → logprob: -12.37557315826416
    9. 'import' → logprob: -12.50057315826416
    10. '(**' → logprob: -12.62557315826416

Token 6: ' lire' (ID: 46082)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002906989073380828
    2. '_' → logprob: -6.877906799316406
    3. ' space' → logprob: -7.377906799316406
    4. ' ' → logprob: -8.252906799316406
    5. '_space' → logprob: -8.627906799316406
    6. ' _' → logprob: -9.127906799316406
    7. ' factorial' → logprob: -9.502906799316406
    8. ' f' → logprob: -9.752906799316406
    9. ' itertools' → logprob: -9.877906799316406
    10. ' process' → logprob: -10.127906799316406

Token 7: '_ent' (ID: 66249)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14335544407367706
    2. '_' → logprob: -2.018355369567871
    3. 's' → logprob: -8.393355369567871
    4. ' (' → logprob: -8.768355369567871
    5. '_l' → logprob: -10.018355369567871
    6. '_par' → logprob: -10.768355369567871
    7. '_m' → logprob: -11.268355369567871
    8. ' ' → logprob: -11.393355369567871
    9. '('' → logprob: -11.393355369567871
    10. '(
' → logprob: -11.393355369567871

Token 8: 'iers' (ID: 11012)
  Prédit: 'ree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.6771062016487122
    2. 'ete' → logprob: -1.4271061420440674
    3. 'ier' → logprob: -1.5521061420440674
    4. 'er' → logprob: -3.8021061420440674
    5. 'r' → logprob: -4.8021063804626465
    6. 'iere' → logprob: -6.0521063804626465
    7. 'ite' → logprob: -6.3021063804626465
    8. 'etes' → logprob: -6.6771063804626465
    9. 'e' → logprob: -7.0521063804626465
    10. 're' → logprob: -7.0521063804626465

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007229158189147711
    2. '_' → logprob: -5.007229328155518
    3. '```' → logprob: -9.00722885131836
    4. '("("' → logprob: -9.38222885131836
    5. '()' → logprob: -9.88222885131836
    6. '(
' → logprob: -10.63222885131836
    7. '<|end|>' → logprob: -10.75722885131836
    8. '('' → logprob: -10.88222885131836
    9. '_parent' → logprob: -11.13222885131836
    10. '(_' → logprob: -11.38222885131836

Token 10: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06997411698102951
    2. '   ' → logprob: -3.569974184036255
    3. ''' → logprob: -5.319973945617676
    4. '[' → logprob: -5.444973945617676
    5. '(
' → logprob: -5.569973945617676
    6. ' (' → logprob: -5.694973945617676
    7. ' ' → logprob: -5.694973945617676
    8. ':' → logprob: -5.694973945617676
    9. '()' → logprob: -5.819973945617676
    10. ' return' → logprob: -6.319973945617676

Token 11: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.34943607449531555
    2. 'return' (adapté à ' return') → logprob: -1.8494360446929932
    3. '   ' → logprob: -2.599436044692993
    4. ' ' → logprob: -3.474436044692993
    5. ' ' → logprob: -5.724436283111572
    6. 'n' → logprob: -5.849436283111572
    7. 'r' → logprob: -5.849436283111572
    8. ' n' → logprob: -5.974436283111572
    9. 'x' → logprob: -6.099436283111572
    10. '    ' → logprob: -6.224436283111572

Token 12: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2861078381538391
    2. ' map' → logprob: -1.5361077785491943
    3. 'list' → logprob: -4.161108016967773
    4. ' [' → logprob: -5.161108016967773
    5. 'map' → logprob: -5.286108016967773
    6. '[int' → logprob: -6.286108016967773
    7. '[' → logprob: -6.411108016967773
    8. ' int' → logprob: -6.536108016967773
    9. ' []' → logprob: -6.911108016967773
    10. '[]' → logprob: -7.536108016967773

Token 13: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018406983464956284
    2. '(product' → logprob: -4.018406867980957
    3. '(range' → logprob: -9.893406867980957
    4. '(int' → logprob: -10.018406867980957
    5. '((' → logprob: -10.268406867980957
    6. '<|end|>' → logprob: -10.643406867980957
    7. '(token' → logprob: -11.768406867980957
    8. '(Product' → logprob: -11.893406867980957
    9. ' (' → logprob: -12.018406867980957
    10. '(space' → logprob: -12.018406867980957

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014911731705069542
    2. '(' → logprob: -6.626491069793701
    3. 'int' → logprob: -8.75149154663086
    4. '<int' → logprob: -12.87649154663086
    5. ' int' → logprob: -13.50149154663086
    6. '(lambda' → logprob: -14.00149154663086
    7. '(
' → logprob: -14.12649154663086
    8. '=int' → logprob: -14.62649154663086
    9. '```' → logprob: -14.62649154663086
    10. ',int' → logprob: -15.50149154663086

Token 15: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07488720864057541
    2. ',input' → logprob: -3.449887275695801
    3. 'input' → logprob: -3.949887275695801
    4. '(' → logprob: -4.199887275695801
    5. ',' → logprob: -6.199887275695801
    6. '))' → logprob: -6.699887275695801
    7. ' input' → logprob: -7.199887275695801
    8. '(product' → logprob: -7.574887275695801
    9. ')' → logprob: -8.0748872756958
    10. '<|end|>' → logprob: -8.1998872756958

Token 16: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2016732394695282
    2. ' input' → logprob: -1.7016732692718506
    3. '(input' → logprob: -8.57667350769043
    4. '=input' → logprob: -11.07667350769043
    5. ',input' → logprob: -11.20167350769043
    6. '	input' → logprob: -11.45167350769043
    7. ')' → logprob: -11.45167350769043
    8. '))' → logprob: -11.82667350769043
    9. '```' → logprob: -12.95167350769043
    10. ')))' → logprob: -12.95167350769043

Token 17: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6984584331512451
    2. '()' → logprob: -0.9484584331512451
    3. '(' → logprob: -2.448458433151245
    4. '().' → logprob: -4.323458671569824
    5. '())' → logprob: -5.198458671569824
    6. '()));' → logprob: -5.323458671569824
    7. '(()' → logprob: -6.448458671569824
    8. '())))' → logprob: -6.948458671569824
    9. '()>' → logprob: -7.823458671569824
    10. '(""))' → logprob: -7.823458671569824

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011777279432862997
    2. 'strip' → logprob: -6.751177787780762
    3. 'rstrip' → logprob: -12.251177787780762
    4. ' split' → logprob: -12.876177787780762
    5. 'spl' → logprob: -16.251176834106445
    6. '(split' → logprob: -17.001176834106445
    7. 'read' → logprob: -18.126176834106445
    8. ' strip' → logprob: -18.751176834106445
    9. 's' → logprob: -19.376176834106445
    10. ')' → logprob: -20.126176834106445

Token 19: '()))

' (ID: 125972)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.17031089961528778
    2. ')' → logprob: -2.1703109741210938
    3. '))' → logprob: -3.2953109741210938
    4. '()))' → logprob: -6.170310974121094
    5. '())))' → logprob: -6.170310974121094
    6. '(' → logprob: -7.670310974121094
    7. '())' → logprob: -7.795310974121094
    8. '()' → logprob: -8.545310974121094
    9. '))))' → logprob: -10.170310974121094
    10. '')))' → logprob: -10.295310974121094

Token 20: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4466845691204071
    2. 'for' → logprob: -1.8216845989227295
    3. 'def' → logprob: -1.9466845989227295
    4. '\n' → logprob: -3.5716845989227295
    5. '
' → logprob: -4.44668436050415
    6. '\' → logprob: -4.82168436050415
    7. 'x' → logprob: -5.94668436050415
    8. 's' → logprob: -6.94668436050415
    9. '

' → logprob: -6.94668436050415
    10. '(n' → logprob: -7.44668436050415

Token 21: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3271729052066803
    2. ')' → logprob: -1.702172875404358
    3. ',' → logprob: -3.3271729946136475
    4. '=' → logprob: -3.5771729946136475
    5. ' =' → logprob: -4.452172756195068
    6. ' ' → logprob: -5.077172756195068
    7. ' )' → logprob: -5.827172756195068
    8. '_' → logprob: -6.077172756195068
    9. '[' → logprob: -6.452172756195068
    10. '()' → logprob: -6.577172756195068

Token 22: ' int' (ID: 677)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.46058982610702515
    2. ' int' → logprob: -1.71058988571167
    3. 'int' → logprob: -1.96058988571167
    4. ' l' → logprob: -3.58558988571167
    5. ' lire' → logprob: -4.83558988571167
    6. ' n' → logprob: -5.08558988571167
    7. 'n' → logprob: -5.58558988571167
    8. ' ' → logprob: -7.21058988571167
    9. '5' → logprob: -7.83558988571167
    10. '3' → logprob: -8.085589408874512

Token 23: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.061992447823286057
    2. '(' → logprob: -2.8119924068450928
    3. 'input' → logprob: -11.061992645263672
    4. '('' → logprob: -12.561992645263672
    5. '()' → logprob: -12.936992645263672
    6. ' (' → logprob: -13.311992645263672
    7. '(
' → logprob: -14.811992645263672
    8. '=input' → logprob: -15.561992645263672
    9. '(

' → logprob: -15.561992645263672
    10. '("' → logprob: -15.936992645263672

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05816253647208214
    2. '()' → logprob: -3.0581624507904053
    3. ')' → logprob: -4.808162689208984
    4. '(' → logprob: -7.183162689208984
    5. '()))' → logprob: -7.558162689208984
    6. '))' → logprob: -10.183162689208984
    7. ' ())' → logprob: -10.808162689208984
    8. '('' → logprob: -11.808162689208984
    9. '`)' → logprob: -12.683162689208984
    10. '();)' → logprob: -13.308162689208984

Token 25: 'L' (ID: 43)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6420403122901917
    2. 's' → logprob: -2.392040252685547
    3. 'm' → logprob: -2.642040252685547
    4. 'for' → logprob: -3.517040252685547
    5. 'numbers' → logprob: -3.767040252685547
    6. 'results' → logprob: -3.892040252685547
    7. 'data' → logprob: -4.017040252685547
    8. 'elements' → logprob: -4.142040252685547
    9. 'lst' → logprob: -4.142040252685547
    10. 'array' → logprob: -4.142040252685547

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10815581679344177
    2. 'ist' → logprob: -3.4831557273864746
    3. '=' → logprob: -3.6081557273864746
    4. 'es' → logprob: -4.733155727386475
    5. 'ines' → logprob: -4.858155727386475
    6. '[' → logprob: -4.858155727386475
    7. '_' → logprob: -5.108155727386475
    8. '=[]' → logprob: -5.983155727386475
    9. ')' → logprob: -6.233155727386475
    10. 'ine' → logprob: -6.358155727386475

Token 27: ' []
' (ID: 8911)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5499483346939087
    2. 'list' → logprob: -1.6749483346939087
    3. ' [' → logprob: -1.9249483346939087
    4. '[list' → logprob: -3.049948215484619
    5. ' lire' → logprob: -3.799948215484619
    6. '[' → logprob: -4.674948215484619
    7. 'l' → logprob: -5.299948215484619
    8. '[l' → logprob: -5.799948215484619
    9. ' []' → logprob: -7.174948215484619
    10. '[]' → logprob: -7.174948215484619

Token 28: 'comp' (ID: 3697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016027313540689647
    2. ' for' → logprob: -9.000160217285156
    3. '
' → logprob: -10.500160217285156
    4. '[' → logprob: -12.125160217285156
    5. '[n' → logprob: -13.875160217285156
    6. '```' → logprob: -13.875160217285156
    7. '\n' → logprob: -14.875160217285156
    8. 'n' → logprob: -15.125160217285156
    9. '[
' → logprob: -15.625160217285156
    10. '	for' → logprob: -15.750160217285156

Token 29: 'teur' (ID: 45262)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.18341349065303802
    2. '=' → logprob: -2.808413505554199
    3. 'ter' → logprob: -2.933413505554199
    4. 'teur' → logprob: -4.058413505554199
    5. 'te' → logprob: -4.183413505554199
    6. 'L' → logprob: -4.808413505554199
    7. ' =' → logprob: -5.808413505554199
    8. '=L' → logprob: -6.433413505554199
    9. 'lement' → logprob: -6.808413505554199
    10. 'té' → logprob: -6.933413505554199

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13661044836044312
    2. '=' → logprob: -2.386610507965088
    3. '_' → logprob: -3.386610507965088
    4. 's' → logprob: -7.011610507965088
    5. '[' → logprob: -8.13661003112793
    6. ' ' → logprob: -8.76161003112793
    7. ' +=' → logprob: -8.88661003112793
    8. '.' → logprob: -9.51161003112793
    9. '  ' → logprob: -9.51161003112793
    10. '[:]' → logprob: -9.88661003112793

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004779468290507793
    2. '{}' → logprob: -5.50477933883667
    3. ' ' → logprob: -7.37977933883667
    4. '{' → logprob: -9.879779815673828
    5. ' {}' → logprob: -11.004779815673828
    6. '[' → logprob: -12.754779815673828
    7. '1' → logprob: -13.004779815673828
    8. ' defaultdict' → logprob: -13.379779815673828
    9. '[]' → logprob: -14.254779815673828
    10. ' {' → logprob: -14.504779815673828

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008508780039846897
    2. '{}' → logprob: -4.883508682250977
    3. '{' → logprob: -7.133508682250977
    4. '[' → logprob: -10.008508682250977
    5. ' ' → logprob: -10.383508682250977
    6. 'dict' → logprob: -11.633508682250977
    7. '1' → logprob: -11.883508682250977
    8. 'n' → logprob: -12.133508682250977
    9. '[]' → logprob: -13.008508682250977
    10. ' {}' → logprob: -13.258508682250977

Token 33: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1773785650730133
    2. 'for' → logprob: -1.927378535270691
    3. ' for' → logprob: -4.6773786544799805
    4. ' 
' → logprob: -5.3023786544799805
    5. '<|end|>' → logprob: -6.8023786544799805
    6. '
' → logprob: -7.6773786544799805
    7. '\n' → logprob: -7.8023786544799805
    8. '  
' → logprob: -7.9273786544799805
    9. '

' → logprob: -8.67737865447998
    10. '' → logprob: -9.17737865447998

Token 34: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010568885772954673
    2. ' for' → logprob: -9.750105857849121
    3. '
' → logprob: -10.000105857849121
    4. 'while' → logprob: -13.500105857849121
    5. '```' → logprob: -15.125105857849121
    6. ' 
' → logprob: -16.750104904174805
    7. 'n' → logprob: -16.875104904174805
    8. 'if' → logprob: -17.000104904174805
    9. '\n' → logprob: -17.125104904174805
    10. '	for' → logprob: -17.375104904174805

Token 35: ' compteur' (ID: 163344)
  Prédit: ' compteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compteur' → logprob: -0.01640230603516102
    2. ' len' → logprob: -4.391402244567871
    3. ' True' → logprob: -6.266402244567871
    4. 'comp' → logprob: -6.891402244567871
    5. 'True' → logprob: -8.141402244567871
    6. ' n' → logprob: -8.141402244567871
    7. 'len' → logprob: -8.641402244567871
    8. ' compte' → logprob: -10.266402244567871
    9. 'n' → logprob: -10.641402244567871
    10. ' ' → logprob: -10.641402244567871

Token 36: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.13973115384578705
    2. '<' → logprob: -2.2647311687469482
    3. '<n' → logprob: -3.6397311687469482
    4. '<len' → logprob: -8.514731407165527
    5. ' n' → logprob: -9.889731407165527
    6. ' ' → logprob: -10.764731407165527
    7. '<num' → logprob: -12.514731407165527
    8. '<size' → logprob: -12.639731407165527
    9. 'n' → logprob: -12.764731407165527
    10. '<L' → logprob: -13.014731407165527

Token 37: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759829878807068
    2. 'n' → logprob: -0.8259829878807068
    3. ' ' → logprob: -10.450983047485352
    4. '	n' → logprob: -11.700983047485352
    5. '(n' → logprob: -13.200983047485352
    6. '<n' → logprob: -13.450983047485352
    7. '_n' → logprob: -14.075983047485352
    8. '10' → logprob: -14.575983047485352
    9. '=n' → logprob: -14.700983047485352
    10. ' ' → logprob: -14.950983047485352

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026979928952641785
    2. ':
' → logprob: -8.375269889831543
    3. ' :' → logprob: -10.250269889831543
    4. ' and' → logprob: -13.250269889831543
    5. '   ' → logprob: -13.875269889831543
    6. ':**' → logprob: -15.250269889831543
    7. '):' → logprob: -15.750269889831543
    8. ',' → logprob: -16.000268936157227
    9. ':
' → logprob: -16.875268936157227
    10. ':

' → logprob: -17.000268936157227

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07019895315170288
    2. '    
' → logprob: -3.1951990127563477
    3. '    ' → logprob: -4.320199012756348
    4. ' 
' → logprob: -4.820199012756348
    5. ' ' → logprob: -6.070199012756348
    6. '     
' → logprob: -6.695199012756348
    7. '<|end|>' → logprob: -7.445199012756348
    8. '   
' → logprob: -8.570199012756348
    9. '  
' → logprob: -8.695199012756348
    10. '  ' → logprob: -9.320199012756348

Token 40: ' a' (ID: 261)
  Prédit: '     
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '     
' → logprob: -0.580117404460907
    2. '    ' → logprob: -1.5801174640655518
    3. ' 
' → logprob: -2.7051174640655518
    4. ' ' → logprob: -2.9551174640655518
    5. '    
' → logprob: -3.2051174640655518
    6. ' L' → logprob: -3.3301174640655518
    7. '   ' → logprob: -3.7051174640655518
    8. ' ligne' → logprob: -5.955117225646973
    9. ' input' → logprob: -6.455117225646973
    10. ' lignes' → logprob: -6.705117225646973

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1586899310350418
    2. '=' → logprob: -2.7836899757385254
    3. ',' → logprob: -3.0336899757385254
    4. 'rray' → logprob: -3.9086899757385254
    5. ',b' → logprob: -4.783689975738525
    6. 'rg' → logprob: -5.783689975738525
    7. ' ' → logprob: -6.533689975738525
    8. 'rr' → logprob: -7.283689975738525
    9. '   ' → logprob: -7.658689975738525
    10. '=input' → logprob: -7.783689975738525

Token 42: ' int' (ID: 677)
  Prédit: ' lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.3687460124492645
    2. 'l' → logprob: -2.243746042251587
    3. 'int' → logprob: -2.368746042251587
    4. ' int' → logprob: -2.868746042251587
    5. ' input' → logprob: -3.993746042251587
    6. ' list' → logprob: -4.493745803833008
    7. 'list' → logprob: -4.618745803833008
    8. 'input' → logprob: -5.243745803833008
    9. ' ' → logprob: -6.493745803833008
    10. ' tuple' → logprob: -6.993745803833008

Token 43: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00038288687937892973
    2. '(' → logprob: -7.875382900238037
    3. 'input' → logprob: -13.000382423400879
    4. '()' → logprob: -14.625382423400879
    5. '(
' → logprob: -16.750383377075195
    6. '=input' → logprob: -16.875383377075195
    7. ' (' → logprob: -17.875383377075195
    8. ' input' → logprob: -18.125383377075195
    9. ',input' → logprob: -18.375383377075195
    10. '(raw' → logprob: -18.875383377075195

Token 44: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0035172796342521906
    2. '()' → logprob: -5.753517150878906
    3. ')' → logprob: -8.628517150878906
    4. '())
' → logprob: -9.378517150878906
    5. '()))' → logprob: -9.628517150878906
    6. '(' → logprob: -12.503517150878906
    7. ' ())' → logprob: -13.378517150878906
    8. '()
' → logprob: -13.628517150878906
    9. '())

' → logprob: -13.878517150878906
    10. '();)' → logprob: -14.253517150878906

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8897911906242371
    2. '<|end|>' → logprob: -1.0147912502288818
    3. ')' → logprob: -3.139791250228882
    4. '    
' → logprob: -3.264791250228882
    5. ' 
' → logprob: -3.514791250228882
    6. '
' → logprob: -3.889791250228882
    7. '<|end|>' → logprob: -3.889791250228882
    8. ' ' → logprob: -3.889791250228882
    9. ' L' → logprob: -4.514791011810303
    10. '    ' → logprob: -4.639791011810303

Token 46: ' sous' (ID: 14487)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.36968132853507996
    2. ' L' → logprob: -1.3696813583374023
    3. '   ' → logprob: -4.244681358337402
    4. ' if' → logprob: -4.494681358337402
    5. 'if' → logprob: -4.744681358337402
    6. '    
' → logprob: -4.994681358337402
    7. '_' → logprob: -5.494681358337402
    8. 'n' → logprob: -6.619681358337402
    9. ' ' → logprob: -6.619681358337402
    10. 's' → logprob: -7.119681358337402

Token 47: ' =' (ID: 314)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.783093273639679
    2. '_' → logprob: -0.908093273639679
    3. '_l' → logprob: -2.158093214035034
    4. '_li' → logprob: -5.408093452453613
    5. '_lst' → logprob: -5.533093452453613
    6. '_sequences' → logprob: -5.533093452453613
    7. 'ense' → logprob: -6.033093452453613
    8. '=' → logprob: -6.658093452453613
    9. 'list' → logprob: -7.033093452453613
    10. 's' → logprob: -7.283093452453613

Token 48: ' []
' (ID: 8911)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.1180299520492554
    2. '[]' → logprob: -1.4930299520492554
    3. 'list' → logprob: -1.7430299520492554
    4. '[' → logprob: -2.368030071258545
    5. '[l' → logprob: -2.868030071258545
    6. '[str' → logprob: -3.368030071258545
    7. ' [' → logprob: -4.243030071258545
    8. 'str' → logprob: -4.243030071258545
    9. 'a' → logprob: -4.493030071258545
    10. '[s' → logprob: -4.618030071258545

Token 49: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11197640001773834
    2. ' for' → logprob: -2.736976385116577
    3. '   ' → logprob: -3.486976385116577
    4. 'while' → logprob: -5.236976623535156
    5. '<|end|>' → logprob: -5.361976623535156
    6. '<|end|>' → logprob: -8.736976623535156
    7. ' while' → logprob: -9.111976623535156
    8. 's' → logprob: -9.361976623535156
    9. '    
' → logprob: -9.736976623535156
    10. ' ' → logprob: -10.611976623535156

Token 50: ' [' (ID: 723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006739526987075806
    2. ' for' → logprob: -5.506739616394043
    3. 'while' → logprob: -6.256739616394043
    4. 'i' → logprob: -8.256739616394043
    5. '   ' → logprob: -9.006739616394043
    6. 'count' → logprob: -9.756739616394043
    7. 'comp' → logprob: -9.756739616394043
    8. 'line' → logprob: -10.006739616394043
    9. '    
' → logprob: -10.381739616394043
    10. 's' → logprob: -10.381739616394043

Token 51: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16012510657310486
    2. 'for' → logprob: -2.4101250171661377
    3. '   ' → logprob: -3.2851250171661377
    4. '_' → logprob: -4.910125255584717
    5. 'a' → logprob: -5.410125255584717
    6. ' for' → logprob: -6.160125255584717
    7. ' sous' → logprob: -6.285125255584717
    8. 'print' → logprob: -6.660125255584717
    9. '```' → logprob: -6.660125255584717
    10. 'sou' → logprob: -8.285124778747559

Token 52: 'ous' (ID: 784)
  Prédit: 'ous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ous' → logprob: -0.0008058178937062621
    2. 's' → logprob: -7.250805854797363
    3. ']' → logprob: -11.750805854797363
    4. 'ou' → logprob: -11.750805854797363
    5. '   ' → logprob: -12.000805854797363
    6. 'us' → logprob: -12.125805854797363
    7. '.append' → logprob: -12.125805854797363
    8. '=s' → logprob: -12.250805854797363
    9. '=' → logprob: -12.500805854797363
    10. 'o' → logprob: -12.625805854797363

Token 53: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006490522064268589
    2. '.extend' → logprob: -8.000649452209473
    3. '.' → logprob: -8.125649452209473
    4. ' .' → logprob: -11.750649452209473
    5. 'append' → logprob: -12.625649452209473
    6. '.app' → logprob: -12.750649452209473
    7. 's' → logprob: -14.000649452209473
    8. '].' → logprob: -14.125649452209473
    9. '.s' → logprob: -14.250649452209473
    10. ' =' → logprob: -14.375649452209473

Token 54: '(list' (ID: 13116)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4156947135925293
    2. '(a' → logprob: -1.4156947135925293
    3. '(i' → logprob: -3.1656947135925293
    4. '(x' → logprob: -3.2906947135925293
    5. '(' → logprob: -5.415694713592529
    6. '(s' → logprob: -5.790694713592529
    7. '(l' → logprob: -6.165694713592529
    8. '(tuple' → logprob: -6.165694713592529
    9. '(*' → logprob: -6.540694713592529
    10. '(_)' → logprob: -6.915694713592529

Token 55: '(map' (ID: 16946)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.14421142637729645
    2. '(map' → logprob: -2.019211530685425
    3. '(l' → logprob: -7.019211292266846
    4. '(' → logprob: -7.894211292266846
    5. 'product' → logprob: -10.019211769104004
    6. '())' → logprob: -10.019211769104004
    7. ')' → logprob: -10.144211769104004
    8. '(input' → logprob: -10.769211769104004
    9. 'map' → logprob: -10.894211769104004
    10. '(read' → logprob: -11.019211769104004

Token 56: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006047414499334991
    2. ')' → logprob: -8.375604629516602
    3. '(' → logprob: -8.500604629516602
    4. ',int' → logprob: -9.750604629516602
    5. '<|end|>' → logprob: -10.000604629516602
    6. '<int' → logprob: -10.875604629516602
    7. 'int' → logprob: -11.125604629516602
    8. '=int' → logprob: -11.375604629516602
    9. '(lambda' → logprob: -11.625604629516602
    10. '(
' → logprob: -12.375604629516602

Token 57: ' z' (ID: 579)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08673955500125885
    2. ' x' → logprob: -2.8367395401000977
    3. 'int' → logprob: -3.8367395401000977
    4. 'y' → logprob: -7.586739540100098
    5. ' int' → logprob: -7.836739540100098
    6. 'lambda' → logprob: -7.836739540100098
    7. '(int' → logprob: -8.336739540100098
    8. 'f' → logprob: -8.586739540100098
    9. '<int' → logprob: -8.961739540100098
    10. 's' → logprob: -8.961739540100098

Token 58: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049183476716279984
    2. ':int' → logprob: -3.2991833686828613
    3. ' :' → logprob: -4.799183368682861
    4. ',' → logprob: -6.674183368682861
    5. 'int' → logprob: -7.674183368682861
    6. 's' → logprob: -7.799183368682861
    7. ':s' → logprob: -8.79918384552002
    8. ',int' → logprob: -9.04918384552002
    9. ':z' → logprob: -9.67418384552002
    10. 'z' → logprob: -9.92418384552002

Token 59: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09955121576786041
    2. ' int' → logprob: -2.974551200866699
    3. 'z' → logprob: -3.474551200866699
    4. 'str' → logprob: -5.724551200866699
    5. ' z' → logprob: -5.849551200866699
    6. 'ord' → logprob: -6.724551200866699
    7. 's' → logprob: -7.099551200866699
    8. '(int' → logprob: -7.224551200866699
    9. 'a' → logprob: -7.349551200866699
    10. 'lambda' → logprob: -7.599551200866699

Token 60: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.00377964717335999
    2. '(' → logprob: -5.753779411315918
    3. '(x' → logprob: -7.878779411315918
    4. '(s' → logprob: -9.503779411315918
    5. '(
' → logprob: -10.253779411315918
    6. 'z' → logprob: -10.628779411315918
    7. ' ' → logprob: -10.753779411315918
    8. ' (' → logprob: -10.753779411315918
    9. ',' → logprob: -11.003779411315918
    10. ':' → logprob: -12.378779411315918

Token 61: ')-' (ID: 14080)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6794690489768982
    2. '(z' → logprob: -0.8044690489768982
    3. '(s' → logprob: -3.554469108581543
    4. ',z' → logprob: -5.054469108581543
    5. '(x' → logprob: -5.304469108581543
    6. '),' → logprob: -5.554469108581543
    7. ' ,' → logprob: -7.679469108581543
    8. '[z' → logprob: -8.179469108581543
    9. '(),' → logprob: -8.304469108581543
    10. '**' → logprob: -8.554469108581543

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032189455814659595
    2. ' ' → logprob: -5.753219127655029
    3. '2' → logprob: -12.315718650817871
    4. '   ' → logprob: -12.378218650817871
    5. '0' → logprob: -12.503218650817871
    6. 's' → logprob: -12.503218650817871
    7. '  ' → logprob: -13.253218650817871
    8. ''' → logprob: -13.378218650817871
    9. '    ' → logprob: -13.565718650817871
    10. ')' → logprob: -13.940718650817871

Token 63: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002235662890598178
    2. ',input' → logprob: -6.7522358894348145
    3. ',s' → logprob: -7.5022358894348145
    4. ',x' → logprob: -9.127235412597656
    5. ',a' → logprob: -9.377235412597656
    6. ')))' → logprob: -9.502235412597656
    7. ',y' → logprob: -10.127235412597656
    8. ',list' → logprob: -10.377235412597656
    9. ' ,' → logprob: -10.502235412597656
    10. '   ' → logprob: -10.752235412597656

Token 64: ' y' (ID: 342)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.6383130550384521
    2. 'z' → logprob: -0.8883130550384521
    3. ' isinstance' → logprob: -3.263313055038452
    4. ' type' → logprob: -4.888313293457031
    5. ' ' → logprob: -5.888313293457031
    6. ' '' → logprob: -6.138313293457031
    7. ' True' → logprob: -6.763313293457031
    8. 'type' → logprob: -6.763313293457031
    9. '  ' → logprob: -6.888313293457031
    10. ' len' → logprob: -7.013313293457031

Token 65: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05283578857779503
    2. ' ==' → logprob: -3.177835702896118
    3. '!=' → logprob: -4.927835941314697
    4. ' !=' → logprob: -6.802835941314697
    5. ' else' → logprob: -7.552835941314697
    6. 'else' → logprob: -8.427835464477539
    7. '>' → logprob: -9.302835464477539
    8. 'y' → logprob: -9.302835464477539
    9. ' not' → logprob: -9.302835464477539
    10. ' ' → logprob: -9.552835464477539

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5428905487060547
    2. 'x' → logprob: -1.7928905487060547
    3. '1' → logprob: -2.1678905487060547
    4. ''x' → logprob: -3.0428905487060547
    5. ' ' → logprob: -3.5428905487060547
    6. '2' → logprob: -4.292890548706055
    7. ''a' → logprob: -5.042890548706055
    8. 'a' → logprob: -5.167890548706055
    9. '"x' → logprob: -5.417890548706055
    10. ''' → logprob: -5.417890548706055

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30556243658065796
    2. '1' → logprob: -1.8055624961853027
    3. 'x' → logprob: -3.3055624961853027
    4. ''x' → logprob: -4.180562496185303
    5. ''' → logprob: -5.180562496185303
    6. ''a' → logprob: -5.305562496185303
    7. ''s' → logprob: -5.430562496185303
    8. ''z' → logprob: -5.555562496185303
    9. 'z' → logprob: -5.805562496185303
    10. 's' → logprob: -5.805562496185303

Token 68: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2016778290271759
    2. 'else' → logprob: -1.7016777992248535
    3. ' and' → logprob: -9.451678276062012
    4. 'and' → logprob: -10.076678276062012
    5. '    ' → logprob: -10.201678276062012
    6. ' ' → logprob: -10.576678276062012
    7. '        ' → logprob: -11.076678276062012
    8. '  ' → logprob: -11.076678276062012
    9. '   ' → logprob: -11.201678276062012
    10. ' or' → logprob: -12.326678276062012

Token 69: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7657701373100281
    2. 'z' → logprob: -1.2657701969146729
    3. ' int' → logprob: -1.7657701969146729
    4. ' z' → logprob: -2.640770196914673
    5. '0' → logprob: -6.140769958496094
    6. ' ' → logprob: -6.640769958496094
    7. '1' → logprob: -7.140769958496094
    8. '(int' → logprob: -7.265769958496094
    9. 'y' → logprob: -7.390769958496094
    10. 'lambda' → logprob: -7.390769958496094

Token 70: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.0009691067971289158
    2. '(y' → logprob: -7.500968933105469
    3. '(' → logprob: -8.125968933105469
    4. '(s' → logprob: -9.875968933105469
    5. 'z' → logprob: -10.250968933105469
    6. '(x' → logprob: -11.125968933105469
    7. ' (' → logprob: -12.000968933105469
    8. ' ' → logprob: -13.375968933105469
    9. ')' → logprob: -13.375968933105469
    10. '	z' → logprob: -13.625968933105469

Token 71: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.03195059299469
    2. ')-' → logprob: -1.28195059299469
    3. '),' → logprob: -1.40695059299469
    4. ')' → logprob: -2.6569504737854004
    5. '-' → logprob: -4.0319504737854
    6. ',y' → logprob: -4.5319504737854
    7. ')y' → logprob: -5.2819504737854
    8. ')+' → logprob: -5.4069504737854
    9. '[y' → logprob: -5.7819504737854
    10. 'y' → logprob: -6.1569504737854

Token 72: ' enumerate' (ID: 29671)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3438977897167206
    2. ' x' → logprob: -1.593897819519043
    3. 's' → logprob: -3.718897819519043
    4. 'input' → logprob: -4.468897819519043
    5. ' s' → logprob: -4.843897819519043
    6. 'i' → logprob: -5.093897819519043
    7. 'a' → logprob: -5.468897819519043
    8. ' input' → logprob: -5.468897819519043
    9. 'product' → logprob: -5.468897819519043
    10. 'l' → logprob: -6.218897819519043

Token 73: '(input' (ID: 10054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.025645190849900246
    2. '(s' → logprob: -4.2756452560424805
    3. '(product' → logprob: -5.2756452560424805
    4. '(x' → logprob: -5.5256452560424805
    5. '(' → logprob: -6.5256452560424805
    6. '(
' → logprob: -8.65064525604248
    7. '(n' → logprob: -9.77564525604248
    8. '(list' → logprob: -9.90064525604248
    9. '(z' → logprob: -9.90064525604248
    10. '(input' → logprob: -9.90064525604248

Token 74: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010103991371579468
    2. '()' → logprob: -9.250101089477539
    3. ' ().' → logprob: -13.750101089477539
    4. '())))' → logprob: -13.750101089477539
    5. '()))' → logprob: -14.250101089477539
    6. '("").' → logprob: -14.625101089477539
    7. '('').' → logprob: -14.750101089477539
    8. '()[' → logprob: -15.125101089477539
    9. '()
' → logprob: -15.375101089477539
    10. 's' → logprob: -15.625101089477539

Token 75: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001470226445235312
    2. 'strip' → logprob: -7.00147008895874
    3. ' split' → logprob: -7.50147008895874
    4. '.split' → logprob: -13.251470565795898
    5. 'rstrip' → logprob: -13.626470565795898
    6. ' strip' → logprob: -13.751470565795898
    7. '(split' → logprob: -14.001470565795898
    8. ' ' → logprob: -14.626470565795898
    9. '().' → logprob: -14.751470565795898
    10. '   ' → logprob: -15.376470565795898

Token 76: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.30155742168426514
    2. '()' → logprob: -1.6765574216842651
    3. '())))' → logprob: -2.8015575408935547
    4. '()[' → logprob: -5.176557540893555
    5. '())' → logprob: -6.176557540893555
    6. '(),' → logprob: -6.551557540893555
    7. '))))' → logprob: -7.301557540893555
    8. '(' → logprob: -7.301557540893555
    9. ')))' → logprob: -7.301557540893555
    10. '())))
' → logprob: -7.676557540893555

Token 77: '))' (ID: 915)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.23323003947734833
    2. '[' → logprob: -2.6082301139831543
    3. '[y' → logprob: -2.6082301139831543
    4. '))' → logprob: -3.8582301139831543
    5. ',' → logprob: -4.733230113983154
    6. '()[' → logprob: -4.983230113983154
    7. ')[' → logprob: -5.108230113983154
    8. ' ' → logprob: -5.483230113983154
    9. ')' → logprob: -6.358230113983154
    10. '))))' → logprob: -6.608230113983154

Token 78: ' for' (ID: 395)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12250752747058868
    2. '[' → logprob: -2.9975075721740723
    3. ')' → logprob: -3.7475075721740723
    4. '[y' → logprob: -3.9975075721740723
    5. '   ' → logprob: -5.247507572174072
    6. '))
' → logprob: -5.872507572174072
    7. ')]' → logprob: -5.997507572174072
    8. ')))' → logprob: -6.747507572174072
    9. '       ' → logprob: -6.747507572174072
    10. ' ' → logprob: -7.122507572174072

Token 79: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.23916620016098022
    2. 'y' → logprob: -1.864166259765625
    3. '_' → logprob: -3.739166259765625
    4. ' _' → logprob: -3.989166259765625
    5. ' s' → logprob: -5.114166259765625
    6. ' z' → logprob: -5.864166259765625
    7. 's' → logprob: -5.989166259765625
    8. 'z' → logprob: -6.864166259765625
    9. 'x' → logprob: -7.364166259765625
    10. ' x' → logprob: -7.364166259765625

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024235756136476994
    2. '<|end|>' → logprob: -6.6274237632751465
    3. 'in' → logprob: -7.5024237632751465
    4. ',' → logprob: -7.7524237632751465
    5. ' ' → logprob: -9.752423286437988
    6. ' range' → logprob: -10.877423286437988
    7. '<|end|>' → logprob: -11.502423286437988
    8. 'range' → logprob: -11.877423286437988
    9. ')' → logprob: -12.002423286437988
    10. ' ,' → logprob: -12.252423286437988

Token 81: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4932745695114136
    2. 'range' → logprob: -0.9932745695114136
    3. '[' → logprob: -3.993274688720703
    4. '(' → logprob: -7.868274688720703
    5. ' [' → logprob: -9.243274688720703
    6. '0' → logprob: -10.618274688720703
    7. 'product' → logprob: -10.868274688720703
    8. '(range' → logprob: -10.993274688720703
    9. ' ' → logprob: -11.618274688720703
    10. ' (' → logprob: -11.993274688720703

Token 82: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014060820103622973
    2. '2' → logprob: -10.000140190124512
    3. '(len' → logprob: -10.125140190124512
    4. '(
' → logprob: -10.625140190124512
    5. '(n' → logprob: -11.625140190124512
    6. '(s' → logprob: -12.250140190124512
    7. ')' → logprob: -12.625140190124512
    8. ' (' → logprob: -12.875140190124512
    9. '(a' → logprob: -13.500140190124512
    10. '4' → logprob: -13.500140190124512

Token 83: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.003544001607224345
    2. ')])' → logprob: -6.378543853759766
    3. ')' → logprob: -6.753543853759766
    4. '))' → logprob: -7.753543853759766
    5. ' )' → logprob: -8.753543853759766
    6. ')]
' → logprob: -10.253543853759766
    7. '])]' → logprob: -11.378543853759766
    8. ')][' → logprob: -11.878543853759766
    9. ']' → logprob: -12.378543853759766
    10. '])' → logprob: -12.378543853759766

Token 84: ' for' (ID: 395)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1308988779783249
    2. ')' → logprob: -2.255898952484131
    3. ']' → logprob: -4.255898952484131
    4. ')])' → logprob: -6.380898952484131
    5. '])' → logprob: -6.755898952484131
    6. ')
' → logprob: -7.880898952484131
    7. '])]' → logprob: -8.505898475646973
    8. ' )' → logprob: -9.755898475646973
    9. '))' → logprob: -9.880898475646973
    10. ')]
' → logprob: -10.005898475646973

Token 85: ' _' (ID: 1175)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -1.0052348375320435
    2. ' _' → logprob: -1.1302348375320435
    3. ' product' → logprob: -2.255234718322754
    4. ' range' → logprob: -2.755234718322754
    5. '_' → logprob: -3.380234718322754
    6. ' input' → logprob: -3.755234718322754
    7. ' ' → logprob: -3.755234718322754
    8. ' x' → logprob: -4.505234718322754
    9. 'product' → logprob: -4.880234718322754
    10. ' s' → logprob: -4.880234718322754

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012592178769409657
    2. 'in' → logprob: -4.387592315673828
    3. ' ' → logprob: -10.512592315673828
    4. 'range' → logprob: -10.637592315673828
    5. 's' → logprob: -11.887592315673828
    6. '<|end|>' → logprob: -11.887592315673828
    7. ' range' → logprob: -12.387592315673828
    8. '  ' → logprob: -12.762592315673828
    9. '_' → logprob: -13.512592315673828
    10. 'input' → logprob: -13.512592315673828

Token 87: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31390970945358276
    2. ' range' → logprob: -1.3139097690582275
    3. '[' → logprob: -7.938909530639648
    4. 'input' → logprob: -9.813909530639648
    5. ' ' → logprob: -10.063909530639648
    6. 's' → logprob: -10.563909530639648
    7. '(range' → logprob: -10.688909530639648
    8. 'rang' → logprob: -10.688909530639648
    9. 'product' → logprob: -11.063909530639648
    10. '(' → logprob: -11.563909530639648

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005098087713122368
    2. 'range' → logprob: -6.38009786605835
    3. 'None' → logprob: -6.63009786605835
    4. ' ' → logprob: -7.38009786605835
    5. '_' → logprob: -7.50509786605835
    6. 's' → logprob: -8.380098342895508
    7. '1' → logprob: -8.630098342895508
    8. '_]' → logprob: -8.630098342895508
    9. '""' → logprob: -10.005098342895508
    10. '[]' → logprob: -10.255098342895508

Token 89: ']' (ID: 60)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.10547492653131485
    2. ']' → logprob: -2.4804749488830566
    3. ']]]' → logprob: -4.730474948883057
    4. ']])' → logprob: -5.855474948883057
    5. '])]' → logprob: -6.605474948883057
    6. ' ]]' → logprob: -6.605474948883057
    7. ']:' → logprob: -7.105474948883057
    8. '])' → logprob: -8.230474472045898
    9. ' ]' → logprob: -8.730474472045898
    10. ']>' → logprob: -8.730474472045898

Token 90: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02437438629567623
    2. ')]' → logprob: -4.274374485015869
    3. ']]' → logprob: -4.899374485015869
    4. '])' → logprob: -6.899374485015869
    5. '])]' → logprob: -7.149374485015869
    6. ' ]' → logprob: -8.899374008178711
    7. ']>' → logprob: -9.399374008178711
    8. '()]' → logprob: -9.399374008178711
    9. ']:' → logprob: -9.524374008178711
    10. ']])' → logprob: -9.774374008178711

Token 91: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27965906262397766
    2. ' range' → logprob: -2.4046590328216553
    3. ' _' → logprob: -3.6546590328216553
    4. 'range' → logprob: -3.6546590328216553
    5. 's' → logprob: -3.9046590328216553
    6. ' product' → logprob: -4.029659271240234
    7. ' input' → logprob: -4.529659271240234
    8. 'input' → logprob: -4.779659271240234
    9. 'product' → logprob: -5.029659271240234
    10. '[' → logprob: -5.154659271240234

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005262218415737152
    2. ' ' → logprob: -5.88026237487793
    3. 'in' → logprob: -6.50526237487793
    4. '<|end|>' → logprob: -7.75526237487793
    5. ' range' → logprob: -8.13026237487793
    6. 'range' → logprob: -9.50526237487793
    7. '[' → logprob: -10.75526237487793
    8. ']' → logprob: -11.13026237487793
    9. ')' → logprob: -11.25526237487793
    10. ' input' → logprob: -11.88026237487793

Token 93: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.48280400037765503
    2. 'range' → logprob: -0.982804000377655
    3. '[' → logprob: -5.482803821563721
    4. 'product' → logprob: -6.857803821563721
    5. 'input' → logprob: -7.232803821563721
    6. ' product' → logprob: -7.232803821563721
    7. 's' → logprob: -7.482803821563721
    8. ' input' → logprob: -8.232804298400879
    9. ' [' → logprob: -8.232804298400879
    10. '(' → logprob: -8.857804298400879

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004398309625685215
    2. '1' → logprob: -5.754398345947266
    3. ' ' → logprob: -7.379398345947266
    4. 'a' → logprob: -7.629398345947266
    5. '(' → logprob: -10.129398345947266
    6. '   ' → logprob: -11.379398345947266
    7. '_' → logprob: -11.629398345947266
    8. ']' → logprob: -11.941898345947266
    9. '[' → logprob: -12.129398345947266
    10. 's' → logprob: -12.754398345947266

Token 95: ']' (ID: 60)
  Prédit: '])]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])]' → logprob: -0.9900727868080139
    2. ']]' → logprob: -1.2400727272033691
    3. ']' → logprob: -1.6150727272033691
    4. ')]' → logprob: -2.865072727203369
    5. '])' → logprob: -3.240072727203369
    6. ']])' → logprob: -3.615072727203369
    7. ']]]' → logprob: -4.240072727203369
    8. ']:' → logprob: -6.990072727203369
    9. ')])' → logprob: -7.740072727203369
    10. ')' → logprob: -8.490073204040527

Token 96: ' if' (ID: 538)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4818612039089203
    2. ']' → logprob: -1.1068612337112427
    3. '])]' → logprob: -3.606861114501953
    4. '])' → logprob: -4.106861114501953
    5. ')' → logprob: -5.606861114501953
    6. ')])' → logprob: -5.981861114501953
    7. '()]' → logprob: -7.106861114501953
    8. ']
' → logprob: -8.231861114501953
    9. ')]
' → logprob: -8.731861114501953
    10. ' ]' → logprob: -9.231861114501953

Token 97: ' not' (ID: 625)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.046565055847168
    2. ' y' → logprob: -1.296565055847168
    3. 'True' → logprob: -2.421565055847168
    4. ' len' → logprob: -2.671565055847168
    5. ' False' → logprob: -3.046565055847168
    6. '_' → logprob: -3.546565055847168
    7. 'y' → logprob: -3.546565055847168
    8. ' _' → logprob: -3.546565055847168
    9. 'False' → logprob: -3.671565055847168
    10. ' a' → logprob: -4.046565055847168

Token 98: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.6874101161956787
    2. 's' → logprob: -2.1874101161956787
    3. '_' → logprob: -2.6874101161956787
    4. ' True' → logprob: -2.9374101161956787
    5. ' any' → logprob: -3.0624101161956787
    6. ' len' → logprob: -3.1874101161956787
    7. ' _' → logprob: -3.4374101161956787
    8. 'True' → logprob: -3.8124101161956787
    9. 'len' → logprob: -4.437410354614258
    10. ' y' → logprob: -4.687410354614258

Token 99: '.append' (ID: 3709)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10263228416442871
    2. ')]' → logprob: -2.6026322841644287
    3. '()]' → logprob: -4.602632522583008
    4. ':]' → logprob: -4.727632522583008
    5. ')' → logprob: -6.602632522583008
    6. '.append' → logprob: -6.977632522583008
    7. ' ]' → logprob: -7.477632522583008
    8. '[' → logprob: -8.352632522583008
    9. '])' → logprob: -8.352632522583008
    10. ']:' → logprob: -8.477632522583008

Token 100: '([' (ID: 5194)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.2019633650779724
    2. '(' → logprob: -2.076963424682617
    3. '(False' → logprob: -3.951963424682617
    4. ']' → logprob: -4.326963424682617
    5. '(True' → logprob: -4.576963424682617
    6. '(
' → logprob: -5.451963424682617
    7. '(None' → logprob: -6.076963424682617
    8. '([]' → logprob: -6.326963424682617
    9. '(a' → logprob: -6.701963424682617
    10. ')]' → logprob: -7.201963424682617

Token 101: 'int' (ID: 491)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3692745864391327
    2. '[int' → logprob: -2.494274616241455
    3. 'int' → logprob: -2.619274616241455
    4. ']' → logprob: -3.619274616241455
    5. '[s' → logprob: -3.869274616241455
    6. ']))' → logprob: -3.994274616241455
    7. '[]' → logprob: -3.994274616241455
    8. '])' → logprob: -4.244274616241455
    9. '])]' → logprob: -4.619274616241455
    10. 's' → logprob: -4.869274616241455

Token 102: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.546712338924408
    2. '(s' → logprob: -1.7967123985290527
    3. '(x' → logprob: -2.4217123985290527
    4. '(' → logprob: -2.5467123985290527
    5. '(z' → logprob: -3.4217123985290527
    6. '((' → logprob: -4.296712398529053
    7. '(
' → logprob: -4.296712398529053
    8. ']' → logprob: -5.171712398529053
    9. '(i' → logprob: -5.546712398529053
    10. '()]' → logprob: -5.921712398529053

Token 103: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.15841169655323029
    2. '()' → logprob: -2.033411741256714
    3. '().' → logprob: -4.783411502838135
    4. '()]' → logprob: -5.533411502838135
    5. '()))' → logprob: -6.408411502838135
    6. '())
' → logprob: -8.033411979675293
    7. '())))' → logprob: -8.033411979675293
    8. '()
' → logprob: -8.408411979675293
    9. ')])' → logprob: -8.408411979675293
    10. '()),' → logprob: -8.783411979675293

Token 104: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.23562189936637878
    2. 'strip' → logprob: -1.9856219291687012
    3. '())' → logprob: -3.735621929168701
    4. ')])' → logprob: -4.360621929168701
    5. ')' → logprob: -4.610621929168701
    6. '])' → logprob: -5.235621929168701
    7. 'rstrip' → logprob: -5.610621929168701
    8. ')]' → logprob: -5.610621929168701
    9. ']))' → logprob: -5.735621929168701
    10. '()' → logprob: -5.860621929168701

Token 105: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.10804346948862076
    2. '()' → logprob: -2.6080434322357178
    3. '())' → logprob: -3.7330434322357178
    4. '()))' → logprob: -5.983043670654297
    5. '[' → logprob: -7.108043670654297
    6. '()]' → logprob: -7.608043670654297
    7. ')])' → logprob: -8.233043670654297
    8. '())[' → logprob: -8.733043670654297
    9. '())))' → logprob: -8.858043670654297
    10. ')' → logprob: -9.233043670654297

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18445436656475067
    2. '()[' → logprob: -2.4344544410705566
    3. '()' → logprob: -3.1844544410705566
    4. '(' → logprob: -3.8094544410705566
    5. '[' → logprob: -4.684454441070557
    6. '()]' → logprob: -6.559454441070557
    7. '-' → logprob: -6.809454441070557
    8. '())' → logprob: -6.934454441070557
    9. '()-' → logprob: -7.309454441070557
    10. '])' → logprob: -7.434454441070557

Token 107: '])-' (ID: 160447)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.133665680885315
    2. '])' → logprob: -1.383665680885315
    3. '()[' → logprob: -1.508665680885315
    4. '())' → logprob: -2.2586655616760254
    5. '[' → logprob: -3.2586655616760254
    6. ')])' → logprob: -4.008665561676025
    7. ']))' → logprob: -4.133665561676025
    8. ')]' → logprob: -4.258665561676025
    9. '()]' → logprob: -5.258665561676025
    10. '])]' → logprob: -6.008665561676025

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01112492848187685
    2. '0' → logprob: -5.011125087738037
    3. ' ' → logprob: -5.636125087738037
    4. '-' → logprob: -8.136124610900879
    5. '])' → logprob: -8.511124610900879
    6. ']' → logprob: -8.636124610900879
    7. '2' → logprob: -10.136124610900879
    8. ']))' → logprob: -10.636124610900879
    9. ')' → logprob: -11.448624610900879
    10. '(' → logprob: -11.573624610900879

Token 109: ',' (ID: 11)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.41873693466186523
    2. ')])' → logprob: -2.0437369346618652
    3. ']))' → logprob: -2.1687369346618652
    4. ')' → logprob: -2.7937369346618652
    5. ')]' → logprob: -3.6687369346618652
    6. '])]' → logprob: -5.168736934661865
    7. ']' → logprob: -6.293736934661865
    8. '))' → logprob: -6.668736934661865
    9. '])))' → logprob: -7.918736934661865
    10. ' ])' → logprob: -8.168737411499023

Token 110: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.24018950760364532
    2. ' int' → logprob: -1.740189552307129
    3. '0' → logprob: -4.115189552307129
    4. '1' → logprob: -5.740189552307129
    5. '])' → logprob: -5.740189552307129
    6. ')])' → logprob: -6.240189552307129
    7. '[int' → logprob: -6.240189552307129
    8. ']))' → logprob: -6.365189552307129
    9. ' ]' → logprob: -6.490189552307129
    10. ')' → logprob: -6.740189552307129

Token 111: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0035782146733254194
    2. 'input' → logprob: -5.878578186035156
    3. '(' → logprob: -7.753578186035156
    4. '(s' → logprob: -9.003578186035156
    5. '<|end|>' → logprob: -9.503578186035156
    6. '()' → logprob: -10.003578186035156
    7. ',input' → logprob: -10.628578186035156
    8. ' input' → logprob: -11.378578186035156
    9. ' (' → logprob: -11.628578186035156
    10. '(
' → logprob: -11.878578186035156

Token 112: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000829759519547224
    2. '()' → logprob: -7.500829696655273
    3. '()].' → logprob: -9.250829696655273
    4. '()]' → logprob: -9.375829696655273
    5. '.split' → logprob: -10.750829696655273
    6. '()[' → logprob: -10.875829696655273
    7. 'split' → logprob: -11.250829696655273
    8. '].' → logprob: -11.375829696655273
    9. '()][' → logprob: -12.500829696655273
    10. '())' → logprob: -12.750829696655273

Token 113: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.15441757265944e-05
    2. ' split' → logprob: -11.500031471252441
    3. 'spl' → logprob: -12.250031471252441
    4. '(split' → logprob: -12.250031471252441
    5. ')' → logprob: -12.500031471252441
    6. '()' → logprob: -13.375031471252441
    7. '.split' → logprob: -13.750031471252441
    8. '0' → logprob: -14.000031471252441
    9. '(' → logprob: -14.750031471252441
    10. '1' → logprob: -15.000031471252441

Token 114: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.005530188791453838
    2. '()' → logprob: -5.50553035736084
    3. '())' → logprob: -7.50553035736084
    4. '[' → logprob: -7.88053035736084
    5. '()))' → logprob: -8.50553035736084
    6. '().' → logprob: -9.25553035736084
    7. '()][' → logprob: -9.38053035736084
    8. '())[' → logprob: -9.63053035736084
    9. '()]' → logprob: -10.75553035736084
    10. ')' → logprob: -11.63053035736084

Token 115: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23393936455249786
    2. '1' → logprob: -1.6089394092559814
    3. '-' → logprob: -5.108939170837402
    4. '[' → logprob: -7.108939170837402
    5. ']))' → logprob: -7.483939170837402
    6. ' ' → logprob: -8.108939170837402
    7. '])' → logprob: -8.233939170837402
    8. ']' → logprob: -9.608939170837402
    9. '(' → logprob: -9.608939170837402
    10. '2' → logprob: -9.921439170837402

Token 116: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.8189385533332825
    2. '])-' → logprob: -1.5689384937286377
    3. ')])' → logprob: -2.1939384937286377
    4. ')]' → logprob: -2.3189384937286377
    5. '())' → logprob: -2.6939384937286377
    6. '()' → logprob: -4.318938732147217
    7. ')' → logprob: -4.568938732147217
    8. '])]' → logprob: -4.568938732147217
    9. ']))' → logprob: -4.693938732147217
    10. '[' → logprob: -4.693938732147217

Token 117: '])' (ID: 4636)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.2811633050441742
    2. '])' → logprob: -1.9061633348464966
    3. '])]' → logprob: -2.781163215637207
    4. ')]' → logprob: -4.156163215637207
    5. ')])' → logprob: -4.656163215637207
    6. '])))' → logprob: -5.531163215637207
    7. ')' → logprob: -6.406163215637207
    8. ']' → logprob: -6.656163215637207
    9. '))' → logprob: -7.031163215637207
    10. ']])' → logprob: -8.031163215637207

Token 118: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7338882684707642
    2. '])' → logprob: -1.1088882684707642
    3. ')])' → logprob: -1.9838882684707642
    4. '])]' → logprob: -3.4838881492614746
    5. ']))' → logprob: -4.858888149261475
    6. ')]' → logprob: -4.983888149261475
    7. '))' → logprob: -6.358888149261475
    8. ']' → logprob: -6.358888149261475
    9. ']])' → logprob: -6.608888149261475
    10. ')
' → logprob: -7.733888149261475

Token 119: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6767268776893616
    2. 'False' → logprob: -1.0517268180847168
    3. ']' → logprob: -3.551726818084717
    4. ' True' → logprob: -3.676726818084717
    5. ' ' → logprob: -4.426726818084717
    6. 'True' → logprob: -4.551726818084717
    7. ')' → logprob: -4.801726818084717
    8. ' y' → logprob: -4.801726818084717
    9. '<|end|>' → logprob: -4.801726818084717
    10. ' not' → logprob: -5.176726818084717

Token 120: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6875240206718445
    2. '])' → logprob: -1.5625240802764893
    3. ')])' → logprob: -2.3125240802764893
    4. '):' → logprob: -2.9375240802764893
    5. '])]' → logprob: -2.9375240802764893
    6. ')]' → logprob: -3.5625240802764893
    7. ']' → logprob: -3.6875240802764893
    8. ':' → logprob: -4.56252384185791
    9. ']):' → logprob: -4.56252384185791
    10. ']))' → logprob: -5.56252384185791

Token 121: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1323264092206955
    2. ':' → logprob: -3.382326364517212
    3. '[' → logprob: -3.632326364517212
    4. ']' → logprob: -3.882326364517212
    5. '<|end|>' → logprob: -4.007326602935791
    6. ' ' → logprob: -4.632326602935791
    7. '   ' → logprob: -5.007326602935791
    8. '):' → logprob: -6.257326602935791
    9. ')]' → logprob: -6.882326602935791
    10. ' )' → logprob: -7.382326602935791

Token 122: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' Ligne' (ID: 127787)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' alternative' (ID: 13319)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7068356275558472
    2. '<|end|>' → logprob: -1.8318356275558472
    3. 'for' → logprob: -2.7068357467651367
    4. ' for' → logprob: -2.8318357467651367
    5. ':' → logprob: -3.2068357467651367
    6. '(s' → logprob: -3.3318357467651367
    7. 's' → logprob: -3.5818357467651367
    8. '[s' → logprob: -3.7068357467651367
    9. '[' → logprob: -3.8318357467651367
    10. ')' → logprob: -3.9568357467651367

Token 126: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8902561068534851
    2. 'for' → logprob: -1.5152561664581299
    3. ' for' → logprob: -1.6402561664581299
    4. '   ' → logprob: -1.8902561664581299
    5. '#' → logprob: -5.015255928039551
    6. ' sous' → logprob: -5.265255928039551
    7. '[s' → logprob: -6.015255928039551
    8. 'L' → logprob: -6.265255928039551
    9. ' L' → logprob: -6.390255928039551
    10. '[' → logprob: -6.890255928039551

Token 127: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5047480463981628
    2. 's' → logprob: -1.5047481060028076
    3. ' for' → logprob: -1.8797481060028076
    4. 'L' → logprob: -4.8797478675842285
    5. '   ' → logprob: -5.6297478675842285
    6. ' L' → logprob: -5.7547478675842285
    7. ' sous' → logprob: -6.5047478675842285
    8. '#' → logprob: -6.6297478675842285
    9. '[' → logprob: -7.1297478675842285
    10. '[s' → logprob: -7.2547478675842285

Token 128: ' _' (ID: 1175)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.7845171689987183
    2. ' _' → logprob: -0.7845171689987183
    3. ' i' → logprob: -2.909517288208008
    4. '_' → logprob: -3.784517288208008
    5. 'y' → logprob: -4.909517288208008
    6. 'i' → logprob: -7.534517288208008
    7. '_i' → logprob: -7.534517288208008
    8. '_y' → logprob: -7.659517288208008
    9. ' a' → logprob: -8.034517288208008
    10. ' x' → logprob: -8.534517288208008

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007786785252392292
    2. 'in' → logprob: -4.882786750793457
    3. 'range' → logprob: -9.632786750793457
    4. '_' → logprob: -10.382786750793457
    5. ' ' → logprob: -11.132786750793457
    6. ' ' → logprob: -11.382786750793457
    7. ',' → logprob: -11.507786750793457
    8. ' en' → logprob: -12.507786750793457
    9. 's' → logprob: -12.695286750793457
    10. '_in' → logprob: -12.695286750793457

Token 130: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3485777676105499
    2. 'range' → logprob: -1.2235777378082275
    3. '_' → logprob: -10.598577499389648
    4. '[' → logprob: -10.848577499389648
    5. 'a' → logprob: -11.098577499389648
    6. ' in' → logprob: -11.598577499389648
    7. 'in' → logprob: -11.973577499389648
    8. 'rang' → logprob: -11.973577499389648
    9. 's' → logprob: -12.098577499389648
    10. 'input' → logprob: -12.223577499389648

Token 131: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17197830975055695
    2. ' a' → logprob: -2.421978235244751
    3. '(a' → logprob: -2.671978235244751
    4. '(' → logprob: -9.546977996826172
    5. '_a' → logprob: -10.796977996826172
    6. '	a' → logprob: -11.171977996826172
    7. ' ' → logprob: -11.421977996826172
    8. ' (' → logprob: -11.921977996826172
    9. 'n' → logprob: -12.171977996826172
    10. '(n' → logprob: -13.296977996826172

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003380783833563328
    2. '):
' → logprob: -5.75338077545166
    3. ':' → logprob: -9.12838077545166
    4. ')' → logprob: -9.87838077545166
    5. ' ):' → logprob: -10.62838077545166
    6. '   ' → logprob: -12.00338077545166
    7. '():' → logprob: -12.25338077545166
    8. '+' → logprob: -12.75338077545166
    9. '):
' → logprob: -13.87838077545166
    10. '*' → logprob: -14.00338077545166

Token 133: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002963673323392868
    2. '       ' → logprob: -6.627963542938232
    3. '<|end|>' → logprob: -7.377963542938232
    4. 's' → logprob: -8.00296401977539
    5. '    
' → logprob: -9.00296401977539
    6. ' s' → logprob: -9.12796401977539
    7. ' input' → logprob: -9.75296401977539
    8. '    ' → logprob: -10.00296401977539
    9. 'input' → logprob: -10.37796401977539
    10. '   ' → logprob: -10.56546401977539

Token 134: ' X' (ID: 2127)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5124128460884094
    2. 'line' → logprob: -2.0124127864837646
    3. 'x' → logprob: -2.2624127864837646
    4. 'b' → logprob: -2.7624127864837646
    5. 'ligne' → logprob: -3.3874127864837646
    6. 'm' → logprob: -4.637413024902344
    7. 'n' → logprob: -4.637413024902344
    8. 's' → logprob: -4.887413024902344
    9. 'l' → logprob: -5.137413024902344
    10. ' line' → logprob: -5.262413024902344

Token 135: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1195339784026146
    2. ',' → logprob: -2.6195340156555176
    3. '=' → logprob: -3.2445340156555176
    4. '=input' → logprob: -8.86953353881836
    5. 'input' → logprob: -9.36953353881836
    6. '.append' → logprob: -9.61953353881836
    7. '   ' → logprob: -9.74453353881836
    8. ',X' → logprob: -9.74453353881836
    9. '<|end|>' → logprob: -9.99453353881836
    10. 's' → logprob: -9.99453353881836

Token 136: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.006774812005460262
    2. ' Y' → logprob: -5.00677490234375
    3. 'y' → logprob: -10.00677490234375
    4. 'Z' → logprob: -12.50677490234375
    5. 'X' → logprob: -12.63177490234375
    6. ',Y' → logprob: -13.88177490234375
    7. 's' → logprob: -14.13177490234375
    8. ' y' → logprob: -14.25677490234375
    9. '_Y' → logprob: -14.38177490234375
    10. '	Y' → logprob: -14.38177490234375

Token 137: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3484668731689453
    2. ' =' → logprob: -1.2234668731689453
    3. '=input' → logprob: -11.598466873168945
    4. '<|end|>' → logprob: -12.848466873168945
    5. '=int' → logprob: -12.973466873168945
    6. ' ' → logprob: -13.098466873168945
    7. ')' → logprob: -13.098466873168945
    8. '   ' → logprob: -13.598466873168945
    9. ',' → logprob: -14.598466873168945
    10. 'input' → logprob: -15.098466873168945

Token 138: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.44593286514282227
    2. 'map' → logprob: -1.0709328651428223
    3. ' lire' → logprob: -4.445932865142822
    4. 'l' → logprob: -5.320932865142822
    5. 'list' → logprob: -9.070932388305664
    6. ' list' → logprob: -9.570932388305664
    7. ' l' → logprob: -9.820932388305664
    8. ' [' → logprob: -9.820932388305664
    9. '[' → logprob: -10.070932388305664
    10. '(map' → logprob: -11.320932388305664

Token 139: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00021855637896806002
    2. '(input' → logprob: -9.750218391418457
    3. 'int' → logprob: -9.875218391418457
    4. '<|end|>' → logprob: -10.000218391418457
    5. '(lambda' → logprob: -10.250218391418457
    6. '(' → logprob: -11.250218391418457
    7. '<int' → logprob: -11.750218391418457
    8. '=int' → logprob: -12.875218391418457
    9. '[int' → logprob: -13.750218391418457
    10. 'input' → logprob: -14.000218391418457

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6091185212135315
    2. ',input' → logprob: -1.4841184616088867
    3. 'input' → logprob: -1.9841184616088867
    4. ')' → logprob: -2.6091184616088867
    5. '(input' → logprob: -4.734118461608887
    6. '<|end|>' → logprob: -5.484118461608887
    7. ' input' → logprob: -6.109118461608887
    8. '(' → logprob: -7.234118461608887
    9. '   ' → logprob: -7.359118461608887
    10. '()' → logprob: -7.859118461608887

Token 141: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00672804145142436
    2. ' input' → logprob: -5.006728172302246
    3. ')' → logprob: -11.756728172302246
    4. '(input' → logprob: -12.506728172302246
    5. ',input' → logprob: -14.756728172302246
    6. '=input' → logprob: -15.256728172302246
    7. '[input' → logprob: -15.881728172302246
    8. '	input' → logprob: -16.25672721862793
    9. '_input' → logprob: -16.50672721862793
    10. '<input' → logprob: -16.75672721862793

Token 142: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9385402993066236e-05
    2. '()' → logprob: -11.375019073486328
    3. ')' → logprob: -12.250019073486328
    4. '())' → logprob: -13.000019073486328
    5. '(' → logprob: -14.875019073486328
    6. '.split' → logprob: -16.125019073486328
    7. '.' → logprob: -16.375019073486328
    8. 'split' → logprob: -16.875019073486328
    9. ' ().' → logprob: -17.000019073486328
    10. '<|end|>' → logprob: -17.375019073486328

Token 143: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -15.125
    3. 'strip' → logprob: -17.75
    4. 'spl' → logprob: -18.375
    5. '(split' → logprob: -19.875
    6. '.split' → logprob: -20.125
    7. 'rstrip' → logprob: -20.875
    8. ')' → logprob: -21.25
    9. '().' → logprob: -21.375
    10. 'plit' → logprob: -22.0

Token 144: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04423384740948677
    2. ')' → logprob: -3.169233798980713
    3. '())
' → logprob: -6.919233798980713
    4. '()' → logprob: -8.544234275817871
    5. '());' → logprob: -11.044234275817871
    6. ')
' → logprob: -11.419234275817871
    7. ' ())' → logprob: -11.794234275817871
    8. '())
' → logprob: -12.669234275817871
    9. '   ' → logprob: -12.794234275817871
    10. '();)' → logprob: -13.044234275817871

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26430681347846985
    2. '<|end|>' → logprob: -1.5143067836761475
    3. ')' → logprob: -5.264307022094727
    4. ',' → logprob: -6.264307022094727
    5. '<|end|>' → logprob: -6.264307022094727
    6. '   ' → logprob: -6.389307022094727
    7. '
' → logprob: -7.014307022094727
    8. '#' → logprob: -8.639307022094727
    9. '        
' → logprob: -9.389307022094727
    10. ' ' → logprob: -9.639307022094727

Token 146: ' sous' (ID: 14487)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44400808215141296
    2. 's' → logprob: -1.3190081119537354
    3. ' sous' → logprob: -2.8190081119537354
    4. '   ' → logprob: -3.6940081119537354
    5. ' under' → logprob: -6.694007873535156
    6. 'sub' → logprob: -7.444007873535156
    7. '        
' → logprob: -7.631507873535156
    8. 'Sous' → logprob: -7.944007873535156
    9. '	s' → logprob: -8.131507873535156
    10. 'sou' → logprob: -8.319007873535156

Token 147: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019491063430905342
    2. '.' → logprob: -6.251949310302734
    3. '.app' → logprob: -12.001949310302734
    4. '.setdefault' → logprob: -12.501949310302734
    5. '.ap' → logprob: -13.001949310302734
    6. ' .' → logprob: -13.001949310302734
    7. '<|end|>' → logprob: -13.001949310302734
    8. '.add' → logprob: -13.626949310302734
    9. '.extend' → logprob: -14.001949310302734
    10. ').' → logprob: -15.126949310302734

Token 148: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.5415588617324829
    2. '[(' → logprob: -0.9165588617324829
    3. ' [[' → logprob: -4.416558742523193
    4. ' [(' → logprob: -5.166558742523193
    5. '[' → logprob: -7.916558742523193
    6. '[((' → logprob: -10.166559219360352
    7. ' [' → logprob: -10.291559219360352
    8. '   ' → logprob: -11.541559219360352
    9. '[s' → logprob: -11.791559219360352
    10. ' ' → logprob: -12.041559219360352

Token 149: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0006502442411147058
    2. 'int' → logprob: -8.875650405883789
    3. 'Y' → logprob: -9.000650405883789
    4. '[X' → logprob: -9.000650405883789
    5. 'x' → logprob: -9.375650405883789
    6. ' X' → logprob: -9.750650405883789
    7. '[' → logprob: -10.125650405883789
    8. '0' → logprob: -10.750650405883789
    9. '(X' → logprob: -10.750650405883789
    10. ' ' → logprob: -11.625650405883789

Token 150: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006728872191160917
    2. ' -' → logprob: -5.006728649139404
    3. ',' → logprob: -11.381729125976562
    4. '1' → logprob: -15.006729125976562
    5. '[' → logprob: -15.006729125976562
    6. '```' → logprob: -15.256729125976562
    7. ' ,' → logprob: -15.381729125976562
    8. ' ' → logprob: -15.381729125976562
    9. '()-' → logprob: -15.506729125976562
    10. '   ' → logprob: -16.256729125976562

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9875325708417222e-05
    2. ' ' → logprob: -10.500029563903809
    3. '<|end|>' → logprob: -14.250029563903809
    4. '```' → logprob: -15.250029563903809
    5. '2' → logprob: -16.312530517578125
    6. '
' → logprob: -16.375030517578125
    7. 'int' → logprob: -16.375030517578125
    8. 'to' → logprob: -16.375030517578125
    9. '   ' → logprob: -16.437530517578125
    10. '<|end|>' → logprob: -16.500030517578125

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002660077763721347
    2. ' ,' → logprob: -6.002660274505615
    3. ',Y' → logprob: -8.627659797668457
    4. ',
' → logprob: -13.252659797668457
    5. ',y' → logprob: -13.752659797668457
    6. ',X' → logprob: -14.127659797668457
    7. '<|end|>' → logprob: -14.627659797668457
    8. '-' → logprob: -15.127659797668457
    9. '       ' → logprob: -16.127660751342773
    10. ')]' → logprob: -16.502660751342773

Token 153: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0007101670489646494
    2. ' Y' → logprob: -7.2507100105285645
    3. '	Y' → logprob: -16.125709533691406
    4. '   ' → logprob: -18.250709533691406
    5. ' ' → logprob: -18.875709533691406
    6. ',Y' → logprob: -19.250709533691406
    7. 'y' → logprob: -19.250709533691406
    8. '    ' → logprob: -20.000709533691406
    9. ')' → logprob: -20.125709533691406
    10. '(Y' → logprob: -20.250709533691406

Token 154: ']]
' (ID: 29446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -4.668304245569743e-05
    2. ' -' → logprob: -10.000046730041504
    3. ')]' → logprob: -14.500046730041504
    4. ')' → logprob: -15.750046730041504
    5. '<|end|>' → logprob: -16.125045776367188
    6. ']' → logprob: -16.250045776367188
    7. ']-' → logprob: -16.375045776367188
    8. ')])' → logprob: -16.375045776367188
    9. ']]' → logprob: -17.125045776367188
    10. '1' → logprob: -17.250045776367188

Token 155: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5955685973167419
    2. '<|end|>' → logprob: -0.8455685973167419
    3. '<|end|>' → logprob: -5.220568656921387
    4. '       ' → logprob: -5.345568656921387
    5. '   ' → logprob: -5.970568656921387
    6. ')' → logprob: -6.345568656921387
    7. '[' → logprob: -6.845568656921387
    8. ')]' → logprob: -7.095568656921387
    9. ' ]' → logprob: -7.470568656921387
    10. '])' → logprob: -7.970568656921387

Token 156: ' L' (ID: 451)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.718606891809031e-05
    2. '.' → logprob: -9.875066757202148
    3. '.extend' → logprob: -11.875066757202148
    4. ' +=' → logprob: -12.375066757202148
    5. 'append' → logprob: -13.375066757202148
    6. '.app' → logprob: -14.125066757202148
    7. '+=' → logprob: -14.250066757202148
    8. '.Append' → logprob: -14.375066757202148
    9. '.add' → logprob: -15.500066757202148
    10. '+' → logprob: -15.750066757202148

Token 158: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00020056030189152807
    2. '(' → logprob: -8.750200271606445
    3. 's' → logprob: -10.125200271606445
    4. '(
' → logprob: -14.000200271606445
    5. ' (' → logprob: -14.250200271606445
    6. '(sub' → logprob: -15.375200271606445
    7. '((' → logprob: -16.750200271606445
    8. ' ' → logprob: -17.500200271606445
    9. '()' → logprob: -17.500200271606445
    10. '(a' → logprob: -17.500200271606445

Token 159: 'ous' (ID: 784)
  Prédit: 'ous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ous' → logprob: -0.12366149574518204
    2. 's' → logprob: -2.998661518096924
    3. 'ent' → logprob: -3.998661518096924
    4. '[' → logprob: -4.498661518096924
    5. ')' → logprob: -5.248661518096924
    6. '[i' → logprob: -5.373661518096924
    7. 'us' → logprob: -5.873661518096924
    8. 'ur' → logprob: -6.123661518096924
    9. 'a' → logprob: -6.373661518096924
    10. '[s' → logprob: -6.373661518096924

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ')
' → logprob: -12.125006675720215
    3. '))' → logprob: -15.000006675720215
    4. ' )' → logprob: -15.000006675720215
    5. ')`' → logprob: -15.375006675720215
    6. ']' → logprob: -16.00000762939453
    7. ')return' → logprob: -16.62500762939453
    8. ')]' → logprob: -16.87500762939453
    9. '   ' → logprob: -17.00000762939453
    10. ')

' → logprob: -17.37500762939453

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03876215219497681
    2. '<|end|>' → logprob: -3.413762092590332
    3. 'comp' → logprob: -5.538762092590332
    4. '<|end|>' → logprob: -8.038762092590332
    5. ')' → logprob: -8.538762092590332
    6. '	comp' → logprob: -8.788762092590332
    7. 'counter' → logprob: -9.288762092590332
    8. '
' → logprob: -9.538762092590332
    9. '    
' → logprob: -9.538762092590332
    10. '(comp' → logprob: -9.913762092590332

Token 162: ' compteur' (ID: 163344)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.04932792857289314
    2. '   ' → logprob: -3.049327850341797
    3. '    
' → logprob: -7.549327850341797
    4. '
' → logprob: -8.674327850341797
    5. '	comp' → logprob: -10.424327850341797
    6. ' compteur' → logprob: -12.924327850341797
    7. ' comp' → logprob: -13.424327850341797
    8. '\' → logprob: -13.549327850341797
    9. '\n' → logprob: -13.674327850341797
    10. 'counter' → logprob: -13.674327850341797

Token 163: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10026911646127701
    2. '+=' → logprob: -2.350269079208374
    3. '+' → logprob: -9.725269317626953
    4. '<|end|>' → logprob: -13.475269317626953
    5. '+="' → logprob: -15.100269317626953
    6. '+='' → logprob: -15.475269317626953
    7. '=' → logprob: -15.725269317626953
    8. ' +' → logprob: -15.725269317626953
    9. ']+=' → logprob: -15.850269317626953
    10. ' ' → logprob: -16.475269317626953

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602243334054947
    2. ' ' → logprob: -1.9102243185043335
    3. ' ' → logprob: -15.535223960876465
    4. ' n' → logprob: -19.53522491455078
    5. '```' → logprob: -20.53522491455078
    6. '   ' → logprob: -20.78522491455078
    7. 'n' → logprob: -21.16022491455078
    8. '+' → logprob: -22.03522491455078
    9. '１' → logprob: -22.09772491455078
    10. '  ' → logprob: -22.41022491455078

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -17.625
    4. '   ' → logprob: -18.875
    5. 'n' → logprob: -19.0
    6. 'a' → logprob: -20.25
    7. '１' → logprob: -20.875
    8. '
' → logprob: -21.0625
    9. '`' → logprob: -21.125
    10. '۱' → logprob: -21.875

Token 166: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: 'indices' (ID: 30992)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3027588725090027
    2. '=' → logprob: -1.4277589321136475
    3. '<|end|>' → logprob: -4.427758693695068
    4. '[:]' → logprob: -5.677758693695068
    5. '[' → logprob: -6.677758693695068
    6. '_' → logprob: -6.802758693695068
    7. '=[]' → logprob: -7.052758693695068
    8. ')' → logprob: -7.427758693695068
    9. ']' → logprob: -7.677758693695068
    10. '<|end|>' → logprob: -8.177759170532227

Token 169: ' ' (ID: 220)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.27315616607666016
    2. '[' → logprob: -1.6481561660766602
    3. 'product' → logprob: -3.89815616607666
    4. ' list' → logprob: -4.27315616607666
    5. 'range' → logprob: -5.27315616607666
    6. ' [' → logprob: -6.14815616607666
    7. '[list' → logprob: -6.39815616607666
    8. '[]' → logprob: -6.64815616607666
    9. '0' → logprob: -7.14815616607666
    10. ' product' → logprob: -7.39815616607666

Token 170: '0' (ID: 15)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4432249963283539
    2. '[' → logprob: -1.3182250261306763
    3. 'product' → logprob: -2.8182249069213867
    4. 'range' → logprob: -3.5682249069213867
    5. '[list' → logprob: -6.693224906921387
    6. '0' → logprob: -7.818224906921387
    7. ' list' → logprob: -8.318224906921387
    8. '[n' → logprob: -8.818224906921387
    9. '[]' → logprob: -9.318224906921387
    10. '[len' → logprob: -9.443224906921387

Token 171: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: 'solution' (ID: 84819)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2146468609571457
    2. '=' → logprob: -2.464646816253662
    3. 's' → logprob: -2.464646816253662
    4. '_indices' → logprob: -3.964646816253662
    5. '_' → logprob: -6.464646816253662
    6. '=[]' → logprob: -7.089646816253662
    7. 'indices' → logprob: -8.21464729309082
    8. ' ' → logprob: -8.83964729309082
    9. ',' → logprob: -8.83964729309082
    10. 'Indices' → logprob: -9.08964729309082

Token 174: ' None' (ID: 4662)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.26826173067092896
    2. ' []' → logprob: -1.6432616710662842
    3. 'None' → logprob: -3.643261671066284
    4. ' None' → logprob: -4.643261909484863
    5. '0' → logprob: -5.893261909484863
    6. ' ' → logprob: -7.268261909484863
    7. '[]
' → logprob: -7.393261909484863
    8. '[' → logprob: -7.518261909484863
    9. 'False' → logprob: -7.768261909484863
    10. ' [' → logprob: -7.893261909484863

Token 175: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: 'found' (ID: 26334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19072839617729187
    2. '<|end|>' → logprob: -2.5657284259796143
    3. ' for' → logprob: -2.9407284259796143
    4. '
' → logprob: -4.315728187561035
    5. 'while' → logprob: -5.065728187561035
    6. ' ' → logprob: -5.065728187561035
    7. ':' → logprob: -5.815728187561035
    8. 'indices' → logprob: -6.065728187561035
    9. 'range' → logprob: -6.190728187561035
    10. '<|end|>' → logprob: -6.315728187561035

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12227610498666763
    2. '=' → logprob: -2.2472760677337646
    3. ':' → logprob: -4.997276306152344
    4. '_' → logprob: -6.122276306152344
    5. '[:]' → logprob: -8.747276306152344
    6. ' ' → logprob: -8.997276306152344
    7. ',' → logprob: -9.497276306152344
    8. ' :' → logprob: -10.247276306152344
    9. '=True' → logprob: -11.372276306152344
    10. 'if' → logprob: -11.747276306152344

Token 178: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011053359135985374
    2. ' False' → logprob: -4.511053562164307
    3. 'True' → logprob: -12.261053085327148
    4. '(False' → logprob: -14.636053085327148
    5. '[]' → logprob: -15.761053085327148
    6. ' True' → logprob: -16.26105308532715
    7. '=False' → logprob: -16.63605308532715
    8. '0' → logprob: -17.01105308532715
    9. 'F' → logprob: -18.88605308532715
    10. '[' → logprob: -19.13605308532715

Token 179: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: 'sol' (ID: 4399)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: 'uce' (ID: 20747)
  Prédit: 'ution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ution' → logprob: -0.07300761342048645
    2. 'utions' → logprob: -2.698007583618164
    3. ' =' → logprob: -6.323007583618164
    4. '=' → logprob: -7.948007583618164
    5. 'ut' → logprob: -8.448007583618164
    6. 'uce' → logprob: -8.823007583618164
    7. 'indices' → logprob: -9.698007583618164
    8. 'ving' → logprob: -9.823007583618164
    9. 'ved' → logprob: -9.948007583618164
    10. 'uction' → logprob: -10.073007583618164

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2905134856700897
    2. 's' → logprob: -1.790513515472412
    3. '=' → logprob: -2.790513515472412
    4. 'n' → logprob: -4.540513515472412
    5. 'tion' → logprob: -5.665513515472412
    6. 'indices' → logprob: -6.165513515472412
    7. '=[]' → logprob: -6.165513515472412
    8. 'ion' → logprob: -6.415513515472412
    9. '_indices' → logprob: -7.165513515472412
    10. 'on' → logprob: -7.915513515472412

Token 183: ' None' (ID: 4662)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005228778813034296
    2. ' []' → logprob: -5.8802289962768555
    3. '0' → logprob: -7.0052289962768555
    4. 'None' → logprob: -7.5052289962768555
    5. '[' → logprob: -7.7552289962768555
    6. '[]
' → logprob: -8.630228996276855
    7. 'False' → logprob: -9.255228996276855
    8. '{}' → logprob: -9.505228996276855
    9. 'True' → logprob: -9.755228996276855
    10. '[]}' → logprob: -10.130228996276855

Token 184: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06273657083511353
    2. 'while' → logprob: -3.9377365112304688
    3. '#' → logprob: -4.562736511230469
    4. ' for' → logprob: -4.812736511230469
    5. 'indices' → logprob: -4.937736511230469
    6. '<|end|>' → logprob: -5.312736511230469
    7. 'choices' → logprob: -6.062736511230469
    8. 'ranges' → logprob: -6.437736511230469
    9. 'range' → logprob: -6.687736511230469
    10. 'possible' → logprob: -6.937736511230469

Token 186: ' bundle' (ID: 21739)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indices' → logprob: -1.0967096090316772
    2. 'indices' → logprob: -1.5967096090316772
    3. ' combination' → logprob: -2.596709728240967
    4. ' combo' → logprob: -2.721709728240967
    5. ' combinaison' → logprob: -2.971709728240967
    6. ' subset' → logprob: -3.096709728240967
    7. 'comb' → logprob: -3.346709728240967
    8. 'combo' → logprob: -3.596709728240967
    9. ' comb' → logprob: -3.846709728240967
    10. ' product' → logprob: -4.596709728240967

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1156105101108551
    2. 'in' → logprob: -2.2406105995178223
    3. 's' → logprob: -6.365610599517822
    4. '_indices' → logprob: -7.490610599517822
    5. 'indices' → logprob: -8.615610122680664
    6. '_in' → logprob: -8.990610122680664
    7. '_' → logprob: -9.365610122680664
    8. ',' → logprob: -10.490610122680664
    9. '_comb' → logprob: -11.365610122680664
    10. '<|end|>' → logprob: -11.740610122680664

Token 188: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.6134312152862549
    2. 'L' → logprob: -1.7384312152862549
    3. ' product' → logprob: -1.7384312152862549
    4. ' L' → logprob: -2.238431215286255
    5. 'range' → logprob: -9.238430976867676
    6. ' range' → logprob: -9.488430976867676
    7. 'Product' → logprob: -10.988430976867676
    8. ' itertools' → logprob: -11.363430976867676
    9. 'products' → logprob: -11.863430976867676
    10. ' ' → logprob: -11.863430976867676

Token 189: '([' (ID: 5194)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.16143549978733063
    2. '(*' → logprob: -1.9114354848861694
    3. '(*(' → logprob: -6.911435604095459
    4. '(' → logprob: -8.5364351272583
    5. '(*)' → logprob: -12.2864351272583
    6. '([' → logprob: -12.2864351272583
    7. 'range' → logprob: -12.4114351272583
    8. '(indices' → logprob: -13.0364351272583
    9. '((*' → logprob: -14.0364351272583
    10. '((' → logprob: -14.9114351272583

Token 190: 'True' (ID: 4710)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02126547135412693
    2. 'range' → logprob: -4.771265506744385
    3. 'True' → logprob: -5.271265506744385
    4. 'False' → logprob: -5.396265506744385
    5. '*' → logprob: -6.521265506744385
    6. 'i' → logprob: -7.146265506744385
    7. '[' → logprob: -8.396265029907227
    8. '1' → logprob: -8.771265029907227
    9. '(' → logprob: -10.021265029907227
    10. '-' → logprob: -10.021265029907227

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020473242329899222
    2. ' ,' → logprob: -8.625205039978027
    3. 'False' → logprob: -10.875205039978027
    4. '(False' → logprob: -13.375205039978027
    5. '],' → logprob: -13.875205039978027
    6. '<|end|>' → logprob: -14.125205039978027
    7. ',false' → logprob: -14.750205039978027
    8. ' False' → logprob: -14.750205039978027
    9. 'True' → logprob: -14.875205039978027
    10. ']' → logprob: -15.250205039978027

Token 192: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.34845882654190063
    2. ' False' → logprob: -1.2234587669372559
    3. '(False' → logprob: -11.473459243774414
    4. ' ' → logprob: -13.473459243774414
    5. '=False' → logprob: -13.598459243774414
    6. 'True' → logprob: -15.098459243774414
    7. '.False' → logprob: -15.348459243774414
    8. ' True' → logprob: -16.098459243774414
    9. ' ' → logprob: -16.098459243774414
    10. '   ' → logprob: -16.348459243774414

Token 193: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00010747690976131707
    2. ' ],' → logprob: -9.375107765197754
    3. ']' → logprob: -11.000107765197754
    4. '],[' → logprob: -13.375107765197754
    5. '),' → logprob: -14.000107765197754
    6. ',' → logprob: -14.125107765197754
    7. ''],' → logprob: -14.375107765197754
    8. ' ' → logprob: -14.750107765197754
    9. '   ' → logprob: -15.000107765197754
    10. '],
' → logprob: -15.375107765197754

Token 194: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.3132634460926056
    2. ' repeat' → logprob: -1.3132634162902832
    3. '[' → logprob: -14.188263893127441
    4. ')' → logprob: -15.563263893127441
    5. '_repeat' → logprob: -15.563263893127441
    6. ' ' → logprob: -16.063262939453125
    7. 'L' → logprob: -16.563262939453125
    8. '.repeat' → logprob: -16.563262939453125
    9. 'reverse' → logprob: -17.063262939453125
    10. 'r' → logprob: -17.063262939453125

Token 195: '=n' (ID: 47985)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4170228242874146
    2. ' n' → logprob: -1.4170228242874146
    3. '=n' → logprob: -1.7920228242874146
    4. '=len' → logprob: -1.7920228242874146
    5. ' len' → logprob: -2.417022705078125
    6. 'len' → logprob: -2.667022705078125
    7. '(len' → logprob: -4.542022705078125
    8. '(n' → logprob: -5.042022705078125
    9. '=' → logprob: -6.042022705078125
    10. ')n' → logprob: -6.042022705078125

Token 196: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001673061487963423
    2. '):
' → logprob: -8.875166893005371
    3. ')' → logprob: -11.125166893005371
    4. ' ):' → logprob: -11.875166893005371
    5. ':' → logprob: -13.000166893005371
    6. ']:' → logprob: -14.125166893005371
    7. '):
' → logprob: -14.250166893005371
    8. '[' → logprob: -15.125166893005371
    9. ']):' → logprob: -15.250166893005371
    10. '):

' → logprob: -15.250166893005371

Token 197: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07688387483358383
    2. '   ' → logprob: -2.8268837928771973
    3. '):' → logprob: -5.201883792877197
    4. '<|end|>' → logprob: -5.451883792877197
    5. ':
' → logprob: -6.076883792877197
    6. ' :' → logprob: -6.701883792877197
    7. ')' → logprob: -7.576883792877197
    8. '):
' → logprob: -8.201884269714355
    9. '
' → logprob: -8.951884269714355
    10. ',' → logprob: -8.951884269714355

Token 198: ' S' (ID: 336)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indices' → logprob: -1.0838552713394165
    2. '   ' → logprob: -1.7088552713394165
    3. 'indices' → logprob: -2.208855152130127
    4. ' pass' → logprob: -2.458855152130127
    5. ' valid' → logprob: -2.458855152130127
    6. ' if' → logprob: -2.958855152130127
    7. ' total' → logprob: -3.083855152130127
    8. 'valid' → logprob: -3.833855152130127
    9. 'pass' → logprob: -4.833855152130127
    10. ' sum' → logprob: -5.083855152130127

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08964961767196655
    2. '=' → logprob: -3.2146496772766113
    3. 'et' → logprob: -4.089649677276611
    4. 'um' → logprob: -4.839649677276611
    5. 'e' → logprob: -5.589649677276611
    6. '=set' → logprob: -5.589649677276611
    7. 'ets' → logprob: -5.714649677276611
    8. '_indices' → logprob: -7.089649677276611
    9. 'set' → logprob: -7.089649677276611
    10. '_' → logprob: -7.339649677276611

Token 200: ' list' (ID: 1562)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6742765307426453
    2. '[]' → logprob: -1.04927659034729
    3. '[' → logprob: -2.42427659034729
    4. '[]
' → logprob: -3.67427659034729
    5. '{' → logprob: -4.299276351928711
    6. 'sum' → logprob: -5.674276351928711
    7. ' []' → logprob: -5.799276351928711
    8. ' set' → logprob: -6.299276351928711
    9. '[i' → logprob: -7.049276351928711
    10. ' [' → logprob: -7.174276351928711

Token 201: '(bundle' (ID: 100657)
  Prédit: '(bundle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bundle' → logprob: -0.37634730339050293
    2. '(filter' → logprob: -2.001347303390503
    3. '(product' → logprob: -2.126347303390503
    4. '(range' → logprob: -3.626347303390503
    5. '(map' → logprob: -4.626347541809082
    6. '(indices' → logprob: -4.876347541809082
    7. '(zip' → logprob: -5.251347541809082
    8. '(i' → logprob: -5.876347541809082
    9. '(' → logprob: -6.126347541809082
    10. '(com' → logprob: -6.251347541809082

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025338062550872564
    2. ')
' → logprob: -6.002533912658691
    3. ' )' → logprob: -10.377533912658691
    4. '())' → logprob: -11.627533912658691
    5. ')

' → logprob: -12.252533912658691
    6. '))' → logprob: -12.627533912658691
    7. '   ' → logprob: -12.752533912658691
    8. ')
' → logprob: -14.252533912658691
    9. 'if' → logprob: -14.627533912658691
    10. '[' → logprob: -14.627533912658691

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060001421719789505
    2. '<|end|>' → logprob: -3.1850013732910156
    3. '
' → logprob: -4.435001373291016
    4. '    
' → logprob: -5.685001373291016
    5. ' if' → logprob: -7.560001373291016
    6. ')' → logprob: -7.560001373291016
    7. '<|end|>' → logprob: -8.685001373291016
    8. '    ' → logprob: -9.810001373291016
    9. '#' → logprob: -9.810001373291016
    10. '  
' → logprob: -10.560001373291016

Token 204: ' error' (ID: 2915)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.975473940372467
    2. ' if' → logprob: -1.2254738807678223
    3. 'indices' → logprob: -2.3504738807678223
    4. 'valid' → logprob: -2.8504738807678223
    5. '   ' → logprob: -3.6004738807678223
    6. ' indices' → logprob: -3.7254738807678223
    7. 'count' → logprob: -3.8504738807678223
    8. 'total' → logprob: -4.100473880767822
    9. 'sum' → logprob: -4.350473880767822
    10. ' valid' → logprob: -5.225473880767822

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5875681638717651
    2. ' =' → logprob: -0.9625681638717651
    3. ':' → logprob: -3.0875682830810547
    4. ' ' → logprob: -5.212568283081055
    5. '[:]' → logprob: -6.087568283081055
    6. 's' → logprob: -6.212568283081055
    7. '(' → logprob: -6.712568283081055
    8. '_' → logprob: -7.087568283081055
    9. '   ' → logprob: -7.212568283081055
    10. ',' → logprob: -7.212568283081055

Token 206: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.002623574109748006
    2. '0' → logprob: -6.127623558044434
    3. ' False' → logprob: -7.877623558044434
    4. 'sum' → logprob: -10.627623558044434
    5. 'True' → logprob: -10.752623558044434
    6. 'any' → logprob: -12.877623558044434
    7. 'float' → logprob: -13.127623558044434
    8. '[' → logprob: -13.252623558044434
    9. ' ' → logprob: -13.502623558044434
    10. 'len' → logprob: -13.627623558044434

Token 207: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0025668602902442217
    2. '0' → logprob: -6.002566814422607
    3. 'sum' → logprob: -10.127567291259766
    4. ' False' → logprob: -11.002567291259766
    5. '[' → logprob: -11.252567291259766
    6. 'True' → logprob: -11.627567291259766
    7. 'any' → logprob: -12.002567291259766
    8. 'len' → logprob: -13.377567291259766
    9. '[]' → logprob: -13.752567291259766
    10. 'None' → logprob: -13.877567291259766

Token 208: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4651212990283966
    2. '<|end|>' → logprob: -1.7151212692260742
    3. '
' → logprob: -2.090121269226074
    4. ' for' → logprob: -3.465121269226074
    5. ' if' → logprob: -3.590121269226074
    6. ' ' → logprob: -5.465121269226074
    7. ')' → logprob: -6.340121269226074
    8. 'for' → logprob: -6.840121269226074
    9. '<|end|>' → logprob: -7.090121269226074
    10. '    
' → logprob: -7.965121269226074

Token 210: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38389894366264343
    2. 'for' (adapté à ' for') → logprob: -1.2588989734649658
    3. '<|end|>' → logprob: -3.633898973464966
    4. '
' → logprob: -5.383898735046387
    5. '   ' → logprob: -6.008898735046387
    6. ' if' → logprob: -8.008898735046387
    7. ' ' → logprob: -8.258898735046387
    8. ')' → logprob: -8.758898735046387
    9. '<|end|>' → logprob: -8.758898735046387
    10. 'if' → logprob: -8.883898735046387

Token 211: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3934919536113739
    2. ' i' → logprob: -1.1434919834136963
    3. ' range' → logprob: -5.768491744995117
    4. ' idx' → logprob: -6.518491744995117
    5. 'range' → logprob: -7.143491744995117
    6. 'idx' → logprob: -7.268491744995117
    7. '_i' → logprob: -8.643491744995117
    8. 'j' → logprob: -9.768491744995117
    9. ' j' → logprob: -10.143491744995117
    10. 'k' → logprob: -10.143491744995117

Token 212: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05074566602706909
    2. ' in' → logprob: -3.050745725631714
    3. ' ,' → logprob: -6.550745487213135
    4. 'in' → logprob: -8.175745964050293
    5. ',s' → logprob: -8.300745964050293
    6. 's' → logprob: -9.550745964050293
    7. ',b' → logprob: -10.925745964050293
    8. ' ' → logprob: -11.050745964050293
    9. '_,' → logprob: -11.050745964050293
    10. 'range' → logprob: -11.175745964050293

Token 213: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003178901970386505
    2. ' range' → logprob: -5.75317907333374
    3. 'S' → logprob: -15.378178596496582
    4. ' ' → logprob: -15.753178596496582
    5. '   ' → logprob: -15.753178596496582
    6. '(range' → logprob: -16.0031795501709
    7. '[' → logprob: -16.3781795501709
    8. '	range' → logprob: -16.5031795501709
    9. 'enumer' → logprob: -16.7531795501709
    10. 'n' → logprob: -16.7531795501709

Token 214: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3137187063694
    2. '(n' → logprob: -1.3137186765670776
    3. '(len' → logprob: -8.438718795776367
    4. 'len' → logprob: -8.938718795776367
    5. ' n' → logprob: -9.563718795776367
    6. '   ' → logprob: -10.813718795776367
    7. '(' → logprob: -11.188718795776367
    8. '	n' → logprob: -12.938718795776367
    9. ',n' → logprob: -13.563718795776367
    10. ')n' → logprob: -15.063718795776367

Token 215: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3133494555950165
    2. '):' → logprob: -1.3133494853973389
    3. '   ' → logprob: -9.813349723815918
    4. '):
' → logprob: -11.438349723815918
    5. ')' → logprob: -11.938349723815918
    6. ' ):
' → logprob: -12.688349723815918
    7. '-' → logprob: -12.813349723815918
    8. ':' → logprob: -13.063349723815918
    9. '+' → logprob: -13.438349723815918
    10. ' ):' → logprob: -13.813349723815918

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01362753938883543
    2. ' if' → logprob: -5.263627529144287
    3. '   ' → logprob: -5.513627529144287
    4. '<|end|>' → logprob: -5.888627529144287
    5. '
' → logprob: -7.138627529144287
    6. ',' → logprob: -7.763627529144287
    7. 'if' → logprob: -9.013628005981445
    8. ':
' → logprob: -10.013628005981445
    9. '):
' → logprob: -10.263628005981445
    10. ':' → logprob: -10.763628005981445

Token 217: ' current' (ID: 2208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11137135326862335
    2. '   ' → logprob: -2.4863712787628174
    3. ' if' → logprob: -4.1113715171813965
    4. '       ' → logprob: -5.2363715171813965
    5. 'for' → logprob: -7.7363715171813965
    6. ' for' → logprob: -10.986371040344238
    7. '           ' → logprob: -11.361371040344238
    8. '	if' → logprob: -12.236371040344238
    9. ' ' → logprob: -12.986371040344238
    10. '
' → logprob: -13.986371040344238

Token 218: ' =' (ID: 314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6809817552566528
    2. ' if' → logprob: -1.1809817552566528
    3. ' =' → logprob: -2.4309816360473633
    4. '=' → logprob: -3.6809816360473633
    5. '   ' → logprob: -4.180981636047363
    6. ':' → logprob: -4.180981636047363
    7. '_s' → logprob: -4.555981636047363
    8. '):' → logprob: -5.805981636047363
    9. ' and' → logprob: -6.305981636047363
    10. ')' → logprob: -6.430981636047363

Token 219: ' L' (ID: 451)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5978865623474121
    2. 'L' → logprob: -0.8478865623474121
    3. '0' → logprob: -4.847886562347412
    4. 'indices' → logprob: -4.972886562347412
    5. ' L' → logprob: -6.472886562347412
    6. 's' → logprob: -6.597886562347412
    7. ' S' → logprob: -6.847886562347412
    8. '1' → logprob: -7.097886562347412
    9. 'sol' → logprob: -7.347886562347412
    10. 'None' → logprob: -8.47288703918457

Token 220: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0003977800370194018
    2. '[' → logprob: -7.875397682189941
    3. '][' → logprob: -11.875397682189941
    4. 'idx' → logprob: -12.625397682189941
    5. ' [' → logprob: -13.125397682189941
    6. '```' → logprob: -13.250397682189941
    7. '[ind' → logprob: -14.000397682189941
    8. '[index' → logprob: -14.750397682189941
    9. ')[' → logprob: -15.375397682189941
    10. 'indices' → logprob: -15.625397682189941

Token 221: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003144681453704834
    2. '[idx' → logprob: -6.62814474105835
    3. '])' → logprob: -7.25314474105835
    4. ')[' → logprob: -7.62814474105835
    5. ']' → logprob: -8.628144264221191
    6. '[' → logprob: -8.753144264221191
    7. '   ' → logprob: -9.253144264221191
    8. '])[' → logprob: -9.628144264221191
    9. ' ][' → logprob: -10.003144264221191
    10. ')][' → logprob: -10.628144264221191

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031594187021255493
    2. '<|end|>' → logprob: -6.253159523010254
    3. '   ' → logprob: -8.003159523010254
    4. '[' → logprob: -8.378159523010254
    5. '
' → logprob: -8.378159523010254
    6. ' for' → logprob: -8.628159523010254
    7. '        
' → logprob: -9.878159523010254
    8. 'for' → logprob: -9.878159523010254
    9. '<|end|>' → logprob: -10.253159523010254
    10. ',' → logprob: -10.878159523010254

Token 223: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6616656184196472
    2. 'for' (adapté à ' for') → logprob: -0.9116656184196472
    3. 'if' → logprob: -3.036665678024292
    4. ' if' → logprob: -3.411665678024292
    5. '       ' → logprob: -7.286665439605713
    6. '   ' → logprob: -7.661665439605713
    7. '
' → logprob: -12.036665916442871
    8. '           ' → logprob: -12.911665916442871
    9. '        
' → logprob: -13.161665916442871
    10. '	for' → logprob: -13.411665916442871

Token 224: ' elem' (ID: 23108)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8532535433769226
    2. 'i' → logprob: -1.6032536029815674
    3. 'x' → logprob: -2.2282536029815674
    4. 'pair' → logprob: -2.4782536029815674
    5. ' j' → logprob: -3.2282536029815674
    6. 'point' → logprob: -3.3532536029815674
    7. ' pair' → logprob: -4.478253364562988
    8. '(' → logprob: -4.728253364562988
    9. 'edge' → logprob: -4.853253364562988
    10. ' i' → logprob: -5.103253364562988

Token 225: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10121189057826996
    2. 'in' → logprob: -2.3512117862701416
    3. 's' → logprob: -7.726212024688721
    4. '[' → logprob: -7.851212024688721
    5. '   ' → logprob: -9.476211547851562
    6. '1' → logprob: -11.351211547851562
    7. '  ' → logprob: -11.351211547851562
    8. '_in' → logprob: -11.476211547851562
    9. ' ' → logprob: -11.601211547851562
    10. ',' → logprob: -12.226211547851562

Token 226: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.03239130601286888
    2. ' current' → logprob: -3.532391309738159
    3. 'S' → logprob: -6.15739107131958
    4. 'range' → logprob: -8.532391548156738
    5. '(current' → logprob: -8.657391548156738
    6. ' S' → logprob: -9.907391548156738
    7. ' range' → logprob: -10.657391548156738
    8. 'L' → logprob: -11.032391548156738
    9. '[current' → logprob: -11.157391548156738
    10. '(' → logprob: -11.282391548156738

Token 227: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04095936939120293
    2. ':' → logprob: -3.415959358215332
    3. '[' → logprob: -5.040959358215332
    4. '           ' → logprob: -7.665959358215332
    5. '       ' → logprob: -8.915959358215332
    6. '):
' → logprob: -9.290959358215332
    7. '[:' → logprob: -10.165959358215332
    8. '   ' → logprob: -10.915959358215332
    9. '[:-' → logprob: -10.915959358215332
    10. 'if' → logprob: -11.540959358215332

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02871420420706272
    2. '[' → logprob: -4.528714179992676
    3. ':' → logprob: -5.278714179992676
    4. '
' → logprob: -5.403714179992676
    5. ' if' → logprob: -5.778714179992676
    6. ':
' → logprob: -6.028714179992676
    7. '       ' → logprob: -6.778714179992676
    8. 'if' → logprob: -7.528714179992676
    9. ',' → logprob: -8.653714179992676
    10. '):
' → logprob: -9.028714179992676

Token 229: ' x' (ID: 1215)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09184522926807404
    2. 'if' → logprob: -3.0918452739715576
    3. '       ' → logprob: -3.5918452739715576
    4. '           ' → logprob: -4.5918450355529785
    5. '               ' → logprob: -5.5918450355529785
    6. '
' → logprob: -7.3418450355529785
    7. '   ' → logprob: -9.216845512390137
    8. '[' → logprob: -9.216845512390137
    9. '0' → logprob: -11.591845512390137
    10. ' ' → logprob: -12.216845512390137

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6174951791763306
    2. ' =' → logprob: -1.1174951791763306
    3. '=' → logprob: -2.492495059967041
    4. ' if' → logprob: -4.117495059967041
    5. 'if' → logprob: -4.117495059967041
    6. '[' → logprob: -4.867495059967041
    7. '_idx' → logprob: -5.117495059967041
    8. '           ' → logprob: -6.367495059967041
    9. ' ,' → logprob: -7.242495059967041
    10. '   ' → logprob: -8.1174955368042

Token 231: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03805847465991974
    2. ' y' → logprob: -3.2880585193634033
    3. '_' → logprob: -12.663058280944824
    4. ' ' → logprob: -13.163058280944824
    5. '   ' → logprob: -13.163058280944824
    6. '_y' → logprob: -13.288058280944824
    7. '    ' → logprob: -13.788058280944824
    8. '  ' → logprob: -14.413058280944824
    9. '_=' → logprob: -14.413058280944824
    10. 'val' → logprob: -14.663058280944824

Token 232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4287167489528656
    2. ' =' → logprob: -1.053716778755188
    3. '   ' → logprob: -12.303716659545898
    4. ',' → logprob: -12.303716659545898
    5. ')' → logprob: -13.178716659545898
    6. ' ' → logprob: -13.678716659545898
    7. '       ' → logprob: -14.053716659545898
    8. '    ' → logprob: -14.178716659545898
    9. '           ' → logprob: -14.303716659545898
    10. 'x' → logprob: -14.803716659545898

Token 233: ' elem' (ID: 23108)
  Prédit: 'elem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elem' → logprob: -0.0016041287453845143
    2. ' elem' → logprob: -6.751604080200195
    3. '0' → logprob: -8.126604080200195
    4. '(' → logprob: -9.626604080200195
    5. '(elem' → logprob: -10.001604080200195
    6. ' (' → logprob: -11.376604080200195
    7. ' ' → logprob: -12.626604080200195
    8. '   ' → logprob: -12.876604080200195
    9. '	elem' → logprob: -13.376604080200195
    10. 'tuple' → logprob: -13.876604080200195

Token 234: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3207125961780548
    2. '=' → logprob: -1.6957125663757324
    3. '
' → logprob: -3.0707125663757324
    4. '<|end|>' → logprob: -4.070712566375732
    5. '[' → logprob: -4.320712566375732
    6. ')' → logprob: -5.695712566375732
    7. '           ' → logprob: -5.695712566375732
    8. '               ' → logprob: -6.445712566375732
    9. ' if' → logprob: -6.570712566375732
    10. 'if' → logprob: -7.195712566375732

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02367749623954296
    2. '
' → logprob: -4.523677349090576
    3. '<|end|>' → logprob: -4.648677349090576
    4. ' if' → logprob: -6.398677349090576
    5. '            
' → logprob: -7.898677349090576
    6. '<|end|>' → logprob: -8.148677825927734
    7. ',' → logprob: -8.898677825927734
    8. ' =' → logprob: -9.398677825927734
    9. '               ' → logprob: -9.398677825927734
    10. ' 
' → logprob: -9.523677825927734

Token 236: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06477843225002289
    2. '           ' → logprob: -3.0647783279418945
    3. 'if' (adapté à ' if') → logprob: -4.5647783279418945
    4. ' 
' → logprob: -5.9397783279418945
    5. '
' → logprob: -6.3147783279418945
    6. ' ' → logprob: -8.314778327941895
    7. '<|end|>' → logprob: -8.314778327941895
    8. '   ' → logprob: -8.689778327941895
    9. '            
' → logprob: -8.814778327941895
    10. '       ' → logprob: -9.314778327941895

Token 237: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2127486765384674
    2. ' S' → logprob: -1.712748646736145
    3. ' not' → logprob: -5.0877485275268555
    4. 'x' → logprob: -6.3377485275268555
    5. 'not' → logprob: -6.9627485275268555
    6. ' (' → logprob: -7.3377485275268555
    7. '(S' → logprob: -7.5877485275268555
    8. ' x' → logprob: -7.7127485275268555
    9. '(not' → logprob: -8.462748527526855
    10. '(' → logprob: -8.587748527526855

Token 238: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.5012673139572144
    2. '[x' → logprob: -1.0012673139572144
    3. '[' → logprob: -3.626267433166504
    4. ' [' → logprob: -9.126267433166504
    5. '[
' → logprob: -11.126267433166504
    6. '[index' → logprob: -11.126267433166504
    7. 'x' → logprob: -11.376267433166504
    8. '[ix' → logprob: -11.876267433166504
    9. '```' → logprob: -12.126267433166504
    10. 'idx' → logprob: -12.376267433166504

Token 239: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0019397735595703
    2. ' and' → logprob: -1.2519397735595703
    3. 'and' → logprob: -2.0019397735595703
    4. ']==' → logprob: -2.1269397735595703
    5. '==' → logprob: -3.0019397735595703
    6. '[x' → logprob: -4.00193977355957
    7. '[' → logprob: -5.00193977355957
    8. ']:' → logprob: -5.37693977355957
    9. ' ==' → logprob: -5.62693977355957
    10. '][' → logprob: -6.37693977355957

Token 240: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7423558235168457
    2. '==' → logprob: -1.2423558235168457
    3. 'and' → logprob: -1.6173558235168457
    4. ' ==' → logprob: -3.3673558235168457
    5. ':' → logprob: -6.867355823516846
    6. '!=' → logprob: -7.367355823516846
    7. ' is' → logprob: -8.492355346679688
    8. ':
' → logprob: -9.117355346679688
    9. ' !=' → logprob: -9.242355346679688
    10. 'is' → logprob: -9.617355346679688

Token 241: ' int' (ID: 677)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -1.1591609716415405
    2. ' not' → logprob: -1.1591609716415405
    3. 'y' → logprob: -1.6591609716415405
    4. 'x' → logprob: -2.78416109085083
    5. 'not' → logprob: -3.15916109085083
    6. ' x' → logprob: -3.28416109085083
    7. ' (' → logprob: -4.40916109085083
    8. '(not' → logprob: -4.40916109085083
    9. '(x' → logprob: -4.90916109085083
    10. '(y' → logprob: -5.15916109085083

Token 242: '(S' (ID: 6181)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.04466040059924126
    2. '(x' → logprob: -3.1696603298187256
    3. 'y' → logprob: -7.044660568237305
    4. '(' → logprob: -7.794660568237305
    5. '(input' → logprob: -9.919660568237305
    6. '(not' → logprob: -10.044660568237305
    7. ')' → logprob: -10.169660568237305
    8. 'x' → logprob: -10.294660568237305
    9. ' y' → logprob: -10.544660568237305
    10. '(Y' → logprob: -10.669660568237305

Token 243: '[x' (ID: 17295)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.007688731886446476
    2. '[x' → logprob: -5.757688522338867
    3. '[idx' → logprob: -6.007688522338867
    4. '[' → logprob: -6.632688522338867
    5. ')' → logprob: -7.757688522338867
    6. 'y' → logprob: -8.757688522338867
    7. ' [' → logprob: -10.382688522338867
    8. '(y' → logprob: -10.882688522338867
    9. 'idx' → logprob: -10.882688522338867
    10. '[next' → logprob: -11.007688522338867

Token 244: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00958632118999958
    2. '[' → logprob: -5.759586334228516
    3. '[y' → logprob: -6.009586334228516
    4. ']==' → logprob: -6.634586334228516
    5. ']' → logprob: -6.884586334228516
    6. ']):
' → logprob: -7.634586334228516
    7. '][' → logprob: -7.634586334228516
    8. ']):' → logprob: -8.759586334228516
    9. '[x' → logprob: -8.884586334228516
    10. '==' → logprob: -9.509586334228516

Token 245: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.27022677659988403
    2. ' ==' → logprob: -1.5202267169952393
    3. ':' → logprob: -4.395226955413818
    4. ':
' → logprob: -6.270226955413818
    5. '!=' → logprob: -6.395226955413818
    6. ' !=' → logprob: -6.395226955413818
    7. ']==' → logprob: -8.89522647857666
    8. ' and' → logprob: -9.27022647857666
    9. ')==' → logprob: -9.39522647857666
    10. ')' → logprob: -9.64522647857666

Token 246: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16113479435443878
    2. ' y' → logprob: -1.9111348390579224
    3. '1' → logprob: -7.786134719848633
    4. 'int' → logprob: -8.661134719848633
    5. '0' → logprob: -9.286134719848633
    6. ' (' → logprob: -9.536134719848633
    7. ' int' → logprob: -10.036134719848633
    8. '	y' → logprob: -10.411134719848633
    9. ' ' → logprob: -10.911134719848633
    10. '(' → logprob: -10.911134719848633

Token 247: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6992489695549011
    2. ':
' → logprob: -0.6992489695549011
    3. '               ' → logprob: -5.574248790740967
    4. '):
' → logprob: -6.949248790740967
    5. '           ' → logprob: -7.324248790740967
    6. '):' → logprob: -8.199249267578125
    7. ':
' → logprob: -9.324249267578125
    8. '                   ' → logprob: -10.074249267578125
    9. ':return' → logprob: -10.074249267578125
    10. ')' → logprob: -10.074249267578125

Token 248: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8063840270042419
    2. ':' → logprob: -1.1813840866088867
    3. '               ' → logprob: -1.4313840866088867
    4. '           ' → logprob: -5.556384086608887
    5. '):
' → logprob: -6.681384086608887
    6. ' :
' → logprob: -7.306384086608887
    7. ' :' → logprob: -8.056384086608887
    8. '       ' → logprob: -8.431384086608887
    9. ':return' → logprob: -8.431384086608887
    10. '                   ' → logprob: -8.431384086608887

Token 249: ' error' (ID: 2915)
  Prédit: ' error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' error' → logprob: -0.7123851776123047
    2. 'error' (adapté à ' error') → logprob: -1.3373851776123047
    3. ' break' → logprob: -1.7123851776123047
    4. 'break' → logprob: -3.3373851776123047
    5. '   ' → logprob: -4.837385177612305
    6. '1' → logprob: -4.837385177612305
    7. '           ' → logprob: -5.462385177612305
    8. '               ' → logprob: -6.212385177612305
    9. '
' → logprob: -6.337385177612305
    10. '       ' → logprob: -6.337385177612305

Token 250: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5760071277618408
    2. '+=' → logprob: -0.8260071277618408
    3. '=' → logprob: -10.076006889343262
    4. '+' → logprob: -11.701006889343262
    5. ' =' → logprob: -11.826006889343262
    6. '   ' → logprob: -12.326006889343262
    7. '    ' → logprob: -13.076006889343262
    8. '1' → logprob: -14.576006889343262
    9. 's' → logprob: -14.576006889343262
    10. ']+=' → logprob: -14.701006889343262

Token 251: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001889137551188469
    2. ' ' → logprob: -6.501889228820801
    3. 'True' → logprob: -8.6268892288208
    4. ' True' → logprob: -9.1268892288208
    5. '   ' → logprob: -10.0018892288208
    6. 'error' → logprob: -10.7518892288208
    7. 'float' → logprob: -11.6268892288208
    8. 'n' → logprob: -12.3768892288208
    9. '+' → logprob: -12.5018892288208
    10. '           ' → logprob: -12.5018892288208

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005512446514330804
    2. 'True' → logprob: -7.625551223754883
    3. 'float' → logprob: -10.750551223754883
    4. ' ' → logprob: -11.250551223754883
    5. 'error' → logprob: -11.750551223754883
    6. 'n' → logprob: -12.375551223754883
    7. '+' → logprob: -12.875551223754883
    8. 'max' → logprob: -12.875551223754883
    9. ' True' → logprob: -13.125551223754883
    10. '100' → logprob: -13.125551223754883

Token 253: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002000130945816636
    2. '<|end|>' → logprob: -6.377000331878662
    3. '           ' → logprob: -9.001999855041504
    4. '                   ' → logprob: -9.376999855041504
    5. '<|end|>' → logprob: -11.001999855041504
    6. '              ' → logprob: -11.251999855041504
    7. '       ' → logprob: -11.501999855041504
    8. '                ' → logprob: -11.501999855041504
    9. '                
' → logprob: -11.626999855041504
    10. '                       ' → logprob: -11.876999855041504

Token 254: '   ' (ID: 271)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018664064118638635
    2. '<|end|>' → logprob: -6.626866340637207
    3. '           ' → logprob: -8.126866340637207
    4. '                   ' → logprob: -9.126866340637207
    5. '              ' → logprob: -10.001866340637207
    6. '                ' → logprob: -11.126866340637207
    7. '<|end|>' → logprob: -11.126866340637207
    8. '       ' → logprob: -11.126866340637207
    9. '                
' → logprob: -11.876866340637207
    10. ',' → logprob: -12.001866340637207

Token 255: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034322156570851803
    2. '           ' → logprob: -5.878432273864746
    3. '                   ' → logprob: -8.128432273864746
    4. '       ' → logprob: -8.878432273864746
    5. '              ' → logprob: -9.878432273864746
    6. '                       ' → logprob: -10.253432273864746
    7. '
' → logprob: -11.128432273864746
    8. '                ' → logprob: -11.128432273864746
    9. '<|end|>' → logprob: -11.128432273864746
    10. ' if' → logprob: -11.628432273864746

Token 256: ' error' (ID: 2915)
  Prédit: ' error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' error' → logprob: -0.008449088782072067
    2. ' not' → logprob: -5.258449077606201
    3. 'error' → logprob: -5.758449077606201
    4. ' ' → logprob: -10.75844955444336
    5. ' ' → logprob: -11.63344955444336
    6. 'not' → logprob: -11.88344955444336
    7. ' found' → logprob: -12.00844955444336
    8. '    ' → logprob: -12.63344955444336
    9. '   ' → logprob: -12.63344955444336
    10. '	error' → logprob: -13.25844955444336

Token 257: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35291507840156555
    2. ' ==' → logprob: -1.7279150485992432
    3. '==' → logprob: -2.227915048599243
    4. '   ' → logprob: -5.602915287017822
    5. ' !=' → logprob: -5.602915287017822
    6. ':
' → logprob: -6.602915287017822
    7. '=' → logprob: -6.602915287017822
    8. '!=' → logprob: -6.977915287017822
    9. ' :' → logprob: -8.477914810180664
    10. '       ' → logprob: -8.602914810180664

Token 258: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022713059559464455
    2. ' ' → logprob: -3.8977129459381104
    3. '1' → logprob: -6.1477131843566895
    4. '   ' → logprob: -10.522712707519531
    5. '       ' → logprob: -14.585212707519531
    6. '=' → logprob: -14.710212707519531
    7. '           ' → logprob: -14.960212707519531
    8. '```' → logprob: -15.147712707519531
    9. '  ' → logprob: -15.210212707519531
    10. '               ' → logprob: -15.272712707519531

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09003360569477081
    2. '1' → logprob: -2.465033531188965
    3. ' ' → logprob: -6.840033531188965
    4. '   ' → logprob: -10.840033531188965
    5. '       ' → logprob: -14.277533531188965
    6. '           ' → logprob: -14.840033531188965
    7. '=' → logprob: -14.840033531188965
    8. '```' → logprob: -15.152533531188965
    9. '  ' → logprob: -15.277533531188965
    10. '               ' → logprob: -15.340033531188965

Token 260: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44855812191963196
    2. '       ' → logprob: -1.4485580921173096
    3. ':
' → logprob: -2.0735580921173096
    4. ' and' → logprob: -7.823558330535889
    5. '   ' → logprob: -8.82355785369873
    6. ',' → logprob: -9.19855785369873
    7. '           ' → logprob: -9.57355785369873
    8. ' :' → logprob: -11.07355785369873
    9. ' :
' → logprob: -11.19855785369873
    10. '):
' → logprob: -11.44855785369873

Token 261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038539018714800477
    2. '   ' → logprob: -9.000385284423828
    3. '           ' → logprob: -9.125385284423828
    4. 'break' → logprob: -10.250385284423828
    5. ' solution' → logprob: -10.750385284423828
    6. ' break' → logprob: -10.750385284423828
    7. 'solution' → logprob: -11.250385284423828
    8. '        
' → logprob: -11.750385284423828
    9. ',' → logprob: -11.750385284423828
    10. '      ' → logprob: -11.875385284423828

Token 262: ' sol' (ID: 1887)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4897405505180359
    2. '   ' → logprob: -1.6147406101226807
    3. ' solution' → logprob: -2.1147406101226807
    4. 'solution' → logprob: -2.7397406101226807
    5. 'sol' (adapté à ' sol') → logprob: -6.614740371704102
    6. ' sol' → logprob: -7.239740371704102
    7. 'found' → logprob: -7.864740371704102
    8. '
' → logprob: -8.989740371704102
    9. ' found' → logprob: -9.114740371704102
    10. '           ' → logprob: -9.489740371704102

Token 263: 'uce' (ID: 20747)
  Prédit: 'uce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uce' → logprob: -0.0012741618556901813
    2. 'uc' → logprob: -7.626274108886719
    3. 'ution' → logprob: -8.001274108886719
    4. '   ' → logprob: -8.501274108886719
    5. '       ' → logprob: -9.376274108886719
    6. 'solution' → logprob: -10.251274108886719
    7. 'ucion' → logprob: -11.001274108886719
    8. 'uction' → logprob: -11.126274108886719
    9. 'u' → logprob: -11.376274108886719
    10. '```' → logprob: -11.876274108886719

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408124804496765
    2. ' =' → logprob: -0.97408127784729
    3. '   ' → logprob: -13.974081039428711
    4. '=None' → logprob: -14.224081039428711
    5. ' ' → logprob: -14.349081039428711
    6. '    ' → logprob: -14.724081039428711
    7. '       ' → logprob: -14.849081039428711
    8. 's' → logprob: -14.974081039428711
    9. ' ' → logprob: -15.224081039428711
    10. 'a' → logprob: -15.724081039428711

Token 265: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.002413703827187419
    2. ' S' → logprob: -7.002413749694824
    3. '[S' → logprob: -7.252413749694824
    4. 'list' → logprob: -8.252413749694824
    5. 'tuple' → logprob: -8.627413749694824
    6. 'bundle' → logprob: -8.627413749694824
    7. '[' → logprob: -9.127413749694824
    8. 's' → logprob: -11.752413749694824
    9. '[list' → logprob: -11.877413749694824
    10. 'True' → logprob: -12.002413749694824

Token 266: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1875571544806007e-05
    2. '<|end|>' → logprob: -12.250011444091797
    3. '   ' → logprob: -13.000011444091797
    4. '
' → logprob: -13.125011444091797
    5. '	' → logprob: -13.875011444091797
    6. '           ' → logprob: -14.750011444091797
    7. ',' → logprob: -14.875011444091797
    8. '               ' → logprob: -15.000011444091797
    9. '        
' → logprob: -15.750011444091797
    10. '	break' → logprob: -16.375011444091797

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.2961512513575144e-05
    2. '<|end|>' → logprob: -11.375022888183594
    3. '   ' → logprob: -11.875022888183594
    4. '           ' → logprob: -13.125022888183594
    5. '	' → logprob: -14.500022888183594
    6. '               ' → logprob: -14.625022888183594
    7. ',' → logprob: -15.250022888183594
    8. '      ' → logprob: -15.875022888183594
    9. '.' → logprob: -16.000022888183594
    10. '
' → logprob: -16.125022888183594

Token 268: ' break' (ID: 2338)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.31636208295822144
    2. 'break' (adapté à ' break') → logprob: -1.3163621425628662
    3. '   ' → logprob: -6.941361904144287
    4. ' found' → logprob: -7.066361904144287
    5. ' break' → logprob: -7.316361904144287
    6. '       ' → logprob: -7.441361904144287
    7. 'solution' → logprob: -12.441362380981445
    8. '	found' → logprob: -12.691362380981445
    9. '	break' → logprob: -12.816362380981445
    10. 'print' → logprob: -13.066362380981445

Token 269: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' sol' (ID: 1887)
  Prédit: ' sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sol' → logprob: -0.04550944268703461
    2. 'sol' → logprob: -3.1705093383789062
    3. ' not' → logprob: -6.295509338378906
    4. ' found' → logprob: -7.920509338378906
    5. ' solution' → logprob: -8.545509338378906
    6. 'found' → logprob: -10.170509338378906
    7. 'solution' → logprob: -10.670509338378906
    8. 'not' → logprob: -10.670509338378906
    9. ' __' → logprob: -11.170509338378906
    10. ' ' → logprob: -13.545509338378906

Token 272: 'uce' (ID: 20747)
  Prédit: 'uce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uce' → logprob: -0.000698972842656076
    2. 'oce' → logprob: -7.375699043273926
    3. 'u' → logprob: -9.875699043273926
    4. '```' → logprob: -12.500699043273926
    5. 'ace' → logprob: -12.625699043273926
    6. 'uc' → logprob: -13.000699043273926
    7. 'ution' → logprob: -13.000699043273926
    8. 'olution' → logprob: -13.125699043273926
    9. 'uco' → logprob: -13.875699043273926
    10. 'ence' → logprob: -13.875699043273926

Token 273: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.008802706375718117
    2. ':' → logprob: -4.758802890777588
    3. 'is' → logprob: -8.75880241394043
    4. ':
' → logprob: -11.00880241394043
    5. '==' → logprob: -11.63380241394043
    6. '!=' → logprob: -13.50880241394043
    7. ' ==' → logprob: -13.50880241394043
    8. '[' → logprob: -13.50880241394043
    9. '[:]' → logprob: -14.63380241394043
    10. '	is' → logprob: -14.88380241394043

Token 274: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.038773972541093826
    2. 'not' → logprob: -3.538774013519287
    3. ' None' → logprob: -5.288774013519287
    4. ' not' → logprob: -5.538774013519287
    5. 'Not' → logprob: -13.163773536682129
    6. '   ' → logprob: -14.163773536682129
    7. 'True' → logprob: -15.413773536682129
    8. 'none' → logprob: -15.663773536682129
    9. 'False' → logprob: -15.913773536682129
    10. '```' → logprob: -15.913773536682129

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2014842927455902
    2. ':
' → logprob: -1.7014843225479126
    3. '   ' → logprob: -10.701484680175781
    4. ' or' → logprob: -10.826484680175781
    5. 'print' → logprob: -10.951484680175781
    6. ' print' → logprob: -12.451484680175781
    7. ' :' → logprob: -13.201484680175781
    8. ':
' → logprob: -13.951484680175781
    9. ':

' → logprob: -14.076484680175781
    10. ' :
' → logprob: -14.076484680175781

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12886524200439453
    2. 'print' → logprob: -2.1288652420043945
    3. ' print' → logprob: -6.2538652420043945
    4. '	print' → logprob: -11.628865242004395
    5. '       ' → logprob: -14.003865242004395
    6. ' ' → logprob: -14.003865242004395
    7. '```' → logprob: -14.003865242004395
    8. '  ' → logprob: -15.628865242004395
    9. '#' → logprob: -16.253864288330078
    10. '#print' → logprob: -16.503864288330078

Token 277: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0008189192740246654
    2. '   ' → logprob: -7.125818729400635
    3. ' print' → logprob: -11.250819206237793
    4. '```' → logprob: -14.250819206237793
    5. '	print' → logprob: -14.625819206237793
    6. '    
' → logprob: -16.125818252563477
    7. '    ' → logprob: -16.750818252563477
    8. '  ' → logprob: -17.625818252563477
    9. ' ' → logprob: -17.750818252563477
    10. '       ' → logprob: -18.000818252563477

Token 278: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6962400674819946
    2. '(-' → logprob: -0.6962400674819946
    3. '("-' → logprob: -6.696239948272705
    4. '('' → logprob: -6.696239948272705
    5. '(' → logprob: -7.821239948272705
    6. '-' → logprob: -8.571240425109863
    7. '(":' → logprob: -11.571240425109863
    8. '(
' → logprob: -13.196240425109863
    9. '"' → logprob: -13.446240425109863
    10. '([-' → logprob: -13.571240425109863

Token 279: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0035892603918910027
    2. '"No' → logprob: -6.628589153289795
    3. '"' → logprob: -6.753589153289795
    4. '-im' → logprob: -7.878589153289795
    5. '-N' → logprob: -8.878589630126953
    6. '-No' → logprob: -9.003589630126953
    7. '"-' → logprob: -9.128589630126953
    8. 'im' → logprob: -9.253589630126953
    9. 'Impossible' → logprob: -9.628589630126953
    10. '(-' → logprob: -10.628589630126953

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0086202472448349
    2. ')
' → logprob: -4.758620262145996
    3. '())' → logprob: -12.758620262145996
    4. 'else' → logprob: -13.508620262145996
    5. '()' → logprob: -14.633620262145996
    6. ' )' → logprob: -15.133620262145996
    7. ')
' → logprob: -15.633620262145996
    8. '))' → logprob: -16.13361930847168
    9. '')' → logprob: -16.38361930847168
    10. '())
' → logprob: -16.63361930847168

Token 281: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -2.696889623621246e-06
    2. 'elif' → logprob: -13.37500286102295
    3. ' else' → logprob: -13.75000286102295
    4. '```' → logprob: -20.250001907348633
    5. '}else' → logprob: -20.500001907348633
    6. '_else' → logprob: -21.000001907348633
    7. ')' → logprob: -21.125001907348633
    8. '#else' → logprob: -21.375001907348633
    9. 'elser' → logprob: -21.375001907348633
    10. 'print' → logprob: -21.875001907348633

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2534805238246918
    2. ':
' → logprob: -1.5034805536270142
    3. '   ' → logprob: -6.503480434417725
    4. ' :' → logprob: -11.128480911254883
    5. 'print' → logprob: -11.128480911254883
    6. ' :
' → logprob: -11.378480911254883
    7. ' print' → logprob: -12.503480911254883
    8. ':
' → logprob: -12.753480911254883
    9. ':

' → logprob: -13.628480911254883
    10. '():
' → logprob: -14.003480911254883

Token 283: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39344242215156555
    2. ' print' → logprob: -1.3934423923492432
    3. '   ' → logprob: -2.643442392349243
    4. ' for' → logprob: -5.518442630767822
    5. 'for' → logprob: -6.268442630767822
    6. '	print' → logprob: -11.143442153930664
    7. ' ' → logprob: -12.518442153930664
    8. '```' → logprob: -13.268442153930664
    9. '  ' → logprob: -13.518442153930664
    10. '    
' → logprob: -13.768442153930664

Token 284: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0029743758495897055
    2. 'for' → logprob: -5.877974510192871
    3. ' print' → logprob: -9.002974510192871
    4. '   ' → logprob: -10.377974510192871
    5. 'result' → logprob: -12.127974510192871
    6. ' for' → logprob: -12.377974510192871
    7. 'count' → logprob: -12.752974510192871
    8. 'res' → logprob: -13.377974510192871
    9. '1' → logprob: -15.377974510192871
    10. 'r' → logprob: -15.627974510192871

Token 285: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15642447769641876
    2. '('' → logprob: -2.9064245223999023
    3. '1' → logprob: -3.4064245223999023
    4. '("' → logprob: -3.9064245223999023
    5. '(sum' → logprob: -3.9064245223999023
    6. '(*' → logprob: -4.531424522399902
    7. 'sum' → logprob: -6.031424522399902
    8. '(int' → logprob: -6.656424522399902
    9. '(sol' → logprob: -7.156424522399902
    10. '(
' → logprob: -7.281424522399902

Token 286: '(sol' (ID: 177378)
  Prédit: '(sol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sol' → logprob: -8.7689099018462e-05
    2. '(' → logprob: -9.50008773803711
    3. '(int' → logprob: -11.87508773803711
    4. '(i' → logprob: -13.12508773803711
    5. '([' → logprob: -13.25008773803711
    6. '(map' → logprob: -14.50008773803711
    7. '(s' → logprob: -14.62508773803711
    8. '(x' → logprob: -14.87508773803711
    9. '(solution' → logprob: -15.25008773803711
    10. '(sel' → logprob: -15.75008773803711

Token 287: 'uce' (ID: 20747)
  Prédit: 'uce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uce' → logprob: -0.06637638807296753
    2. 'oce' → logprob: -3.5663764476776123
    3. '(sol' → logprob: -3.5663764476776123
    4. '(' → logprob: -6.066376209259033
    5. 'uze' → logprob: -6.191376209259033
    6. 'oze' → logprob: -6.691376209259033
    7. '(s' → logprob: -8.441376686096191
    8. 'u' → logprob: -8.441376686096191
    9. 'ule' → logprob: -8.691376686096191
    10. 'ole' → logprob: -8.691376686096191

Token 288: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6695404052734375
    2. '))' → logprob: -0.9195404052734375
    3. '())' → logprob: -2.4195404052734375
    4. '()))' → logprob: -8.169540405273438
    5. ')))' → logprob: -9.294540405273438
    6. '()' → logprob: -12.794540405273438
    7. ' )' → logprob: -12.794540405273438
    8. '})' → logprob: -13.044540405273438
    9. ')}' → logprob: -13.294540405273438
    10. ')+' → logprob: -13.794540405273438


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 286
Tokens correctement prédits (1ère position, stricte): 107
Tokens correctement prédits (1ère position, avec adaptation): 110
Tokens correctement prédits (top 10): 217
Précision stricte (1ère position): 37.41%
Précision adaptée (1ère position): 38.46%
Précision (top 10): 75.87%
================================================================================
