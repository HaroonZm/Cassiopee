================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def count_specific_patterns(n, a):
    """
    Compte le nombre d'opérations nécessaires pour supprimer certains motifs consécutifs dans la liste 'a'.

    Le motif détecté est :
      - Un triplet de valeurs identiques consécutives (a[i-1] == a[i] == a[i+1]), ou
      - Un motif de deux valeurs consécutives égales (a[i] == a[i+1]), ou
      - Un motif de deux valeurs égales en occurance précédente (a[i-1] == a[i])

    La fonction parcourt la liste et incrémente un compteur lorsqu’un de ces motifs est trouvé, 
    en respectant la logique décrite dans le code original.

    Args:
        n (int): Taille de la liste d'entiers à analyser.
        a (list of int): Liste d'entiers à traiter.

    Returns:
        int: Nombre total de motifs trouvés correspondant aux critères ci-dessus.
    """

    counter = 0  # Initialise le compteur de motifs trouvés à zéro
    i = 1       # Commence l'analyse à partir du deuxième élément (indice 1)

    # Parcours la liste jusqu'à l'avant-dernier élément pour éviter les dépassements d'indice
    while i < n - 1:
        # Si l'élément courant est différent du précédent et du suivant, "saute" deux éléments
        if a[i-1] != a[i] and a[i] != a[i+1]:
            i += 2
        # Si trois éléments consécutifs sont identiques, incrémente le compteur et saute deux éléments
        elif a[i-1] == a[i] == a[i+1]:
            counter += 1
            i += 2
        # Si l'élément courant est identique au suivant, saute un élément
        elif a[i] == a[i+1]:
            i += 1
        # Si l'élément courant est identique au précédent (mais différent du suivant), incrémente le compteur et saute un élément
        elif a[i-1] == a[i]:
            i += 1
            counter += 1

    # Si la boucle termine à l'avant-dernier élément, vérifie un dernier motif pour la fin
    if i == n - 1:
        if a[i] == a[i-1]:
            counter += 1

    return counter

def main():
    """
    Fonction principale :
      - Lit la taille de la liste,
      - Lit la liste d'entiers à partir de l'entrée utilisateur,
      - Appelle la fonction de traitement,
      - Affiche le résultat.
    """
    n = int(input())  # Lit la taille de la liste
    a = list(map(int, input().split()))  # Convertit la ligne d'entrée en liste d'entiers
    result = count_specific_patterns(n, a)  # Calcule le nombre de motifs
    print(result)  # Affiche le résultat à l'écran

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' count' (ID: 3605)
  → Token d'amorce (pas de prédiction)

Token 2: '_specific' (ID: 146436)
  → Token d'amorce (pas de prédiction)

Token 3: '_patterns' (ID: 161400)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003635826986283064
    2. '(' → logprob: -5.878635883331299
    3. '```' → logprob: -8.25363540649414
    4. '_s' → logprob: -8.75363540649414
    5. '_a' → logprob: -9.87863540649414
    6. '_token' → logprob: -10.00363540649414
    7. '_specific' → logprob: -10.12863540649414
    8. '(_' → logprob: -10.37863540649414
    9. 's' → logprob: -10.75363540649414
    10. '_chars' → logprob: -10.87863540649414

Token 4: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007787733338773251
    2. '_' → logprob: -7.750778675079346
    3. '```' → logprob: -8.875779151916504
    4. '(_' → logprob: -9.625779151916504
    5. '(_:' → logprob: -10.375779151916504
    6. '(:' → logprob: -10.875779151916504
    7. ' (' → logprob: -11.000779151916504
    8. '('' → logprob: -11.250779151916504
    9. '("""' → logprob: -11.500779151916504
    10. ':' → logprob: -12.375779151916504

Token 5: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021313901990652084
    2. ')' → logprob: -4.021313667297363
    3. ',' → logprob: -6.521313667297363
    4. ':' → logprob: -6.646313667297363
    5. '_' → logprob: -8.021313667297363
    6. 's' → logprob: -11.146313667297363
    7. '=' → logprob: -11.896313667297363
    8. '):
' → logprob: -12.146313667297363
    9. '(' → logprob: -12.271313667297363
    10. '[' → logprob: -12.271313667297363

Token 6: ' a' (ID: 261)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7234905958175659
    2. ' pattern' → logprob: -1.098490595817566
    3. ' sequence' → logprob: -2.5984907150268555
    4. 's' → logprob: -3.4734907150268555
    5. ' patterns' → logprob: -3.9734907150268555
    6. 'pattern' → logprob: -3.9734907150268555
    7. ' text' → logprob: -4.2234907150268555
    8. ' p' → logprob: -5.4734907150268555
    9. 'sequence' → logprob: -5.8484907150268555
    10. ' n' → logprob: -6.4734907150268555

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.044105418026447296
    2. ')' → logprob: -3.6691055297851562
    3. ',' → logprob: -4.669105529785156
    4. '[' → logprob: -4.919105529785156
    5. 's' → logprob: -7.669105529785156
    6. ':' → logprob: -8.544105529785156
    7. '_' → logprob: -9.419105529785156
    8. '[]):' → logprob: -9.919105529785156
    9. '):
' → logprob: -10.419105529785156
    10. '```' → logprob: -10.919105529785156

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0041496302001178265
    2. '   ' → logprob: -5.879149436950684
    3. '```' → logprob: -6.879149436950684
    4. '():' → logprob: -9.379149436950684
    5. ':
' → logprob: -9.504149436950684
    6. '`:' → logprob: -10.379149436950684
    7. '':' → logprob: -10.504149436950684
    8. '_' → logprob: -11.004149436950684
    9. '_:' → logprob: -11.254149436950684
    10. '":' → logprob: -11.504149436950684

Token 9: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5326316952705383
    2. '```' → logprob: -1.2826316356658936
    3. '`' → logprob: -3.4076316356658936
    4. '    
' → logprob: -4.032631874084473
    5. '\n' → logprob: -4.157631874084473
    6. '\' → logprob: -4.157631874084473
    7. '
' → logprob: -4.532631874084473
    8. '"' → logprob: -5.157631874084473
    9. ''' → logprob: -5.157631874084473
    10. ' 
' → logprob: -5.282631874084473

Token 10: '   ' (ID: 271)
  Prédit: 'Count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Count' → logprob: -0.768427848815918
    2. 'C' → logprob: -1.143427848815918
    3. 'Counts' → logprob: -2.268427848815918
    4. '   ' → logprob: -3.143427848815918
    5. '"""' → logprob: -3.268427848815918
    6. 'Returns' → logprob: -5.393427848815918
    7. 'Calculate' → logprob: -5.643427848815918
    8. '"""
' → logprob: -5.643427848815918
    9. 'T' → logprob: -5.893427848815918
    10. ' Counts' → logprob: -5.893427848815918

Token 11: ' Comp' (ID: 5211)
  Prédit: 'Count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Count' → logprob: -0.17409001290798187
    2. 'Counts' → logprob: -2.5490899085998535
    3. 'C' → logprob: -2.9240899085998535
    4. '   ' → logprob: -4.2990899085998535
    5. 'Return' → logprob: -5.2990899085998535
    6. 'Returns' → logprob: -6.0490899085998535
    7. '"""' → logprob: -6.4240899085998535
    8. 'c' → logprob: -7.1740899085998535
    9. '       ' → logprob: -7.1740899085998535
    10. '"""
' → logprob: -7.1740899085998535

Token 12: 'te' (ID: 411)
  Prédit: 'ute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.06151772290468216
    2. 'utes' → logprob: -3.5615177154541016
    3. 'ut' → logprob: -3.9365177154541016
    4. 'lete' → logprob: -5.561517715454102
    5. 'ile' → logprob: -5.686517715454102
    6. 'u' → logprob: -5.811517715454102
    7. 'let' → logprob: -7.186517715454102
    8. '```' → logprob: -8.436517715454102
    9. 'le' → logprob: -9.061517715454102
    10. 'uted' → logprob: -9.936517715454102

Token 13: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002720706630498171
    2. ' ' → logprob: -6.502720832824707
    3. ' le' → logprob: -7.752720832824707
    4. ' r' → logprob: -8.502720832824707
    5. '_' → logprob: -8.752720832824707
    6. ' les' → logprob: -8.752720832824707
    7. 's' → logprob: -8.877720832824707
    8. ' the' → logprob: -10.002720832824707
    9. '  ' → logprob: -10.627720832824707
    10. '   ' → logprob: -10.877720832824707

Token 14: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.016384243965148926
    2. 'nombre' → logprob: -4.891384124755859
    3. ' ' → logprob: -5.516384124755859
    4. ' nombres' → logprob: -6.391384124755859
    5. '   ' → logprob: -6.891384124755859
    6. 'r' → logprob: -7.016384124755859
    7. 's' → logprob: -7.391384124755859
    8. 'n' → logprob: -8.26638412475586
    9. '  ' → logprob: -10.14138412475586
    10. ' n' → logprob: -10.76638412475586

Token 15: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9197919368743896
    2. ' de' → logprob: -1.0447919368743896
    3. '_' → logprob: -1.5447919368743896
    4. '_de' → logprob: -4.419792175292969
    5. ' d' → logprob: -4.794792175292969
    6. '  ' → logprob: -5.294792175292969
    7. 'de' → logprob: -5.419792175292969
    8. '    ' → logprob: -6.794792175292969
    9. '   ' → logprob: -7.169792175292969
    10. ')' → logprob: -7.419792175292969

Token 16: ''op' (ID: 70747)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25801369547843933
    2. ' ' → logprob: -2.1330137252807617
    3. 'e' → logprob: -3.7580137252807617
    4. ' occurrences' → logprob: -3.8830137252807617
    5. '   ' → logprob: -4.008013725280762
    6. ''' → logprob: -4.383013725280762
    7. ' espaces' → logprob: -4.883013725280762
    8. '  ' → logprob: -5.383013725280762
    9. ' '' → logprob: -5.633013725280762
    10. ' e' → logprob: -5.883013725280762

Token 17: 'érations' (ID: 152860)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.6869691610336304
    2. 'é' → logprob: -1.4369691610336304
    3. 'c' → logprob: -2.81196928024292
    4. 'érations' → logprob: -3.18696928024292
    5. 'occ' → logprob: -3.56196928024292
    6. '```' → logprob: -3.68696928024292
    7. 'éc' → logprob: -4.31196928024292
    8. 'cur' → logprob: -4.56196928024292
    9. 'u' → logprob: -4.56196928024292
    10. '\'' → logprob: -4.93696928024292

Token 18: ' nécessaires' (ID: 74402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8853299021720886
    2. ''' → logprob: -1.6353299617767334
    3. 's' → logprob: -1.7603299617767334
    4. '_' → logprob: -2.7603299617767334
    5. '"' → logprob: -3.6353299617767334
    6. ' nécessaires' → logprob: -4.010329723358154
    7. ' de' → logprob: -4.135329723358154
    8. '(' → logprob: -4.385329723358154
    9. '```' → logprob: -4.385329723358154
    10. '    ' → logprob: -4.385329723358154

Token 19: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.6962208151817322
    2. '   ' → logprob: -1.446220874786377
    3. ' ' → logprob: -1.696220874786377
    4. ' to' → logprob: -3.321220874786377
    5. 'pour' → logprob: -4.446220874786377
    6. '  ' → logprob: -4.821220874786377
    7. ' à' → logprob: -4.946220874786377
    8. ' for' → logprob: -5.321220874786377
    9. '    ' → logprob: -6.196220874786377
    10. ' (' → logprob: -6.446220874786377

Token 20: ' supprimer' (ID: 119553)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9921949505805969
    2. '   ' → logprob: -1.3671948909759521
    3. ' effectuer' → logprob: -2.867194890975952
    4. ' a' → logprob: -3.367194890975952
    5. ' réaliser' → logprob: -3.367194890975952
    6. ' traiter' → logprob: -3.867194890975952
    7. ' détect' → logprob: -4.117195129394531
    8. '_' → logprob: -4.117195129394531
    9. '    ' → logprob: -4.242195129394531
    10. ' transformer' → logprob: -4.492195129394531

Token 21: ' certains' (ID: 30681)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14180034399032593
    2. ' un' → logprob: -3.0168004035949707
    3. ' les' → logprob: -4.141800403594971
    4. ' la' → logprob: -4.516800403594971
    5. ' l' → logprob: -5.016800403594971
    6. ' chaque' → logprob: -5.016800403594971
    7. ' une' → logprob: -5.141800403594971
    8. ' des' → logprob: -5.266800403594971
    9. ' toutes' → logprob: -5.391800403594971
    10. ' a' → logprob: -5.391800403594971

Token 22: ' motifs' (ID: 89637)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1761869341135025
    2. ' espaces' → logprob: -2.301187038421631
    3. ' ' → logprob: -4.426187038421631
    4. ' _' → logprob: -4.551187038421631
    5. ' caractères' → logprob: -4.676187038421631
    6. ' types' → logprob: -4.926187038421631
    7. ' motifs' → logprob: -5.426187038421631
    8. ' éléments' → logprob: -5.801187038421631
    9. ' mots' → logprob: -6.051187038421631
    10. '  ' → logprob: -6.676187038421631

Token 23: ' cons' (ID: 1473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0038554668426514
    2. ' spécifiques' → logprob: -1.2538554668426514
    3. ' dans' → logprob: -2.6288554668426514
    4. ' de' → logprob: -3.0038554668426514
    5. '   ' → logprob: -3.2538554668426514
    6. ' ,' → logprob: -3.5038554668426514
    7. 's' → logprob: -3.7538554668426514
    8. ' d' → logprob: -3.8788554668426514
    9. '_' → logprob: -4.1288557052612305
    10. ' (' → logprob: -4.2538557052612305

Token 24: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0047272611409425735
    2. 'é' → logprob: -6.129727363586426
    3. 'ecut' → logprob: -6.379727363586426
    4. 'éc' → logprob: -8.504727363586426
    5. 't' → logprob: -8.754727363586426
    6. 'e' → logprob: -9.004727363586426
    7. 'équ' → logprob: -9.004727363586426
    8. '```' → logprob: -9.254727363586426
    9. 'tr' → logprob: -10.254727363586426
    10. 'ec' → logprob: -10.754727363586426

Token 25: 'ifs' (ID: 14119)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.09816117584705353
    2. 'ut' → logprob: -2.598161220550537
    3. 'uts' → logprob: -4.098161220550537
    4. 'utive' → logprob: -6.973161220550537
    5. 'e' → logprob: -7.598161220550537
    6. 'uti' → logprob: -8.723160743713379
    7. 'us' → logprob: -8.973160743713379
    8. 'i' → logprob: -9.348160743713379
    9. '   ' → logprob: -9.598160743713379
    10. '```' → logprob: -9.848160743713379

Token 26: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9736185073852539
    2. ' ' → logprob: -1.723618507385254
    3. ' de' → logprob: -2.223618507385254
    4. ' dans' → logprob: -2.973618507385254
    5. '"' → logprob: -3.098618507385254
    6. ''' → logprob: -3.223618507385254
    7. '.' → logprob: -3.848618507385254
    8. ',' → logprob: -3.848618507385254
    9. ' :' → logprob: -3.848618507385254
    10. ' '' → logprob: -4.098618507385254

Token 27: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.676712691783905
    2. ' ' → logprob: -1.3017127513885498
    3. ' a' → logprob: -2.30171275138855
    4. ' le' → logprob: -2.80171275138855
    5. ' l' → logprob: -4.051712512969971
    6. ' un' → logprob: -4.176712512969971
    7. ' une' → logprob: -4.301712512969971
    8. 'a' → logprob: -5.551712512969971
    9. 'l' → logprob: -6.301712512969971
    10. ' n' → logprob: -6.551712512969971

Token 28: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.046059750020504
    2. ' chaîne' → logprob: -3.2960598468780518
    3. '   ' → logprob: -5.921059608459473
    4. 'a' → logprob: -6.421059608459473
    5. ' chaine' → logprob: -6.921059608459473
    6. 'chaine' → logprob: -7.421059608459473
    7. ' a' → logprob: -7.546059608459473
    8. '  ' → logprob: -8.421059608459473
    9. '_' → logprob: -8.921059608459473
    10. ' chaînes' → logprob: -9.171059608459473

Token 29: ' '' (ID: 461)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9757372140884399
    2. '   ' → logprob: -1.72573721408844
    3. ' ' → logprob: -2.2257370948791504
    4. ''' → logprob: -3.1007370948791504
    5. ' a' → logprob: -3.3507370948791504
    6. ' de' → logprob: -3.4757370948791504
    7. ',' → logprob: -3.4757370948791504
    8. '"' → logprob: -3.6007370948791504
    9. ' :' → logprob: -3.7257370948791504
    10. 'a' → logprob: -3.8507370948791504

Token 30: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014201708137989044
    2. ' a' → logprob: -4.264201641082764
    3. 'n' → logprob: -10.764202117919922
    4. ' ' → logprob: -12.514202117919922
    5. ' n' → logprob: -13.014202117919922
    6. '```' → logprob: -13.264202117919922
    7. ' '' → logprob: -13.639202117919922
    8. ''a' → logprob: -13.764202117919922
    9. '   ' → logprob: -14.014202117919922
    10. '_a' → logprob: -14.389202117919922

Token 31: ''.

' (ID: 52121)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16905808448791504
    2. '.' → logprob: -3.044058084487915
    3. ')' → logprob: -3.669058084487915
    4. 'e' → logprob: -4.044057846069336
    5. '"' → logprob: -4.294057846069336
    6. ' '' → logprob: -4.294057846069336
    7. '   ' → logprob: -4.919057846069336
    8. '')' → logprob: -5.044057846069336
    9. '"""
' → logprob: -5.669057846069336
    10. ''''
' → logprob: -6.044057846069336

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05929042398929596
    2. ' 
' → logprob: -3.9342904090881348
    3. '"""' → logprob: -4.809290409088135
    4. '"""
' → logprob: -5.434290409088135
    5. '    
' → logprob: -5.559290409088135
    6. '    ' → logprob: -5.684290409088135
    7. '```' → logprob: -5.809290409088135
    8. ' """
' → logprob: -5.934290409088135
    9. '     
' → logprob: -5.934290409088135
    10. '
' → logprob: -6.309290409088135

Token 33: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11411629617214203
    2. ' 
' → logprob: -3.6141161918640137
    3. '"""' → logprob: -3.6141161918640137
    4. '\n' → logprob: -4.864116191864014
    5. '"""
' → logprob: -5.114116191864014
    6. '    
' → logprob: -5.239116191864014
    7. 'n' → logprob: -5.489116191864014
    8. '
' → logprob: -5.489116191864014
    9. '```' → logprob: -5.489116191864014
    10. ' """
' → logprob: -5.739116191864014

Token 34: ' motif' (ID: 72753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2564451694488525
    2. 'a' → logprob: -1.6314451694488525
    3. ' code' → logprob: -2.1314451694488525
    4. ' ' → logprob: -2.2564451694488525
    5. '    ' → logprob: -2.5064451694488525
    6. '  ' → logprob: -2.7564451694488525
    7. 's' → logprob: -3.8814451694488525
    8. 'def' → logprob: -3.8814451694488525
    9. '     ' → logprob: -4.131444931030273
    10. ' nombre' → logprob: -4.381444931030273

Token 35: ' détect' (ID: 118715)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.7237676978111267
    2. ' "' → logprob: -1.3487677574157715
    3. ' suivant' → logprob: -2.7237677574157715
    4. ' est' → logprob: -2.9737677574157715
    5. '"' → logprob: -3.4737677574157715
    6. ' à' → logprob: -3.7237677574157715
    7. ''' → logprob: -3.8487677574157715
    8. '   ' → logprob: -4.4737677574157715
    9. ' :' → logprob: -4.7237677574157715
    10. ' ' → logprob: -4.7237677574157715

Token 36: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.010394676588475704
    2. 'és' → logprob: -5.01039457321167
    3. 'e' → logprob: -5.63539457321167
    4. '"' → logprob: -10.135395050048828
    5. 'es' → logprob: -10.635395050048828
    6. 'ée' → logprob: -11.010395050048828
    7. '```' → logprob: -12.260395050048828
    8. 'er' → logprob: -12.510395050048828
    9. '   ' → logprob: -12.510395050048828
    10. 'ed' → logprob: -13.510395050048828

Token 37: ' est' (ID: 893)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.0097861289978027
    2. ' "' → logprob: -1.5097861289978027
    3. '"' → logprob: -2.1347861289978027
    4. ' est' → logprob: -2.3847861289978027
    5. '   ' → logprob: -2.5097861289978027
    6. ' ' → logprob: -2.8847861289978027
    7. ''' → logprob: -3.1347861289978027
    8. 'e' → logprob: -5.259786128997803
    9. ' :' → logprob: -5.759786128997803
    10. '  ' → logprob: -6.009786128997803

Token 38: ' :
' (ID: 10039)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.26408347487449646
    2. '[' → logprob: -2.0140833854675293
    3. ' :' → logprob: -3.5140833854675293
    4. ' "' → logprob: -3.7640833854675293
    5. ':' → logprob: -4.639083385467529
    6. ' ' → logprob: -4.764083385467529
    7. ' '' → logprob: -5.514083385467529
    8. ' (' → logprob: -5.639083385467529
    9. ' [(' → logprob: -5.639083385467529
    10. ' la' → logprob: -6.014083385467529

Token 39: '     ' (ID: 530)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.9578503370285034
    2. ' '' → logprob: -1.9578503370285034
    3. '   ' → logprob: -2.082850456237793
    4. '"' → logprob: -2.332850456237793
    5. ' (' → logprob: -2.457850456237793
    6. ' [' → logprob: -2.582850456237793
    7. ' "' → logprob: -2.832850456237793
    8. ' ```' → logprob: -3.082850456237793
    9. ' ' → logprob: -3.207850456237793
    10. '```' → logprob: -3.332850456237793

Token 40: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4000164270401001
    2. ' [' → logprob: -1.4000164270401
    3. '   ' → logprob: -4.4000163078308105
    4. '(' → logprob: -4.4000163078308105
    5. ' (' → logprob: -4.4000163078308105
    6. '1' → logprob: -4.7750163078308105
    7. ' ' → logprob: -5.1500163078308105
    8. '`' → logprob: -5.5250163078308105
    9. '[(' → logprob: -5.5250163078308105
    10. ' '' → logprob: -6.0250163078308105

Token 41: ' Un' (ID: 1367)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.719597578048706
    2. '[' → logprob: -0.844597578048706
    3. ' (' → logprob: -3.594597578048706
    4. 'a' → logprob: -4.094597816467285
    5. '(' → logprob: -4.719597816467285
    6. ' ' → logprob: -5.094597816467285
    7. ' a' → logprob: -5.219597816467285
    8. ' '' → logprob: -5.719597816467285
    9. '[a' → logprob: -5.844597816467285
    10. '1' → logprob: -6.219597816467285

Token 42: ' trip' (ID: 8831)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.31227344274520874
    2. ' ' → logprob: -1.8122735023498535
    3. ' e' → logprob: -3.8122735023498535
    4. 'a' → logprob: -3.9372735023498535
    5. '0' → logprob: -4.4372735023498535
    6. ' a' → logprob: -4.5622735023498535
    7. ' trip' → logprob: -4.8122735023498535
    8. ' espace' → logprob: -4.9372735023498535
    9. ' '' → logprob: -5.4372735023498535
    10. '1' → logprob: -5.5622735023498535

Token 43: 'let' (ID: 1347)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00822837557643652
    2. 'let' → logprob: -5.383228302001953
    3. 'le' → logprob: -5.758228302001953
    4. 'lé' → logprob: -9.133228302001953
    5. 'e' → logprob: -9.883228302001953
    6. 'p' → logprob: -10.008228302001953
    7. ')' → logprob: -10.258228302001953
    8. '```' → logprob: -11.133228302001953
    9. ' l' → logprob: -11.383228302001953
    10. 'lement' → logprob: -11.508228302001953

Token 44: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4788177013397217
    2. '  ' → logprob: -1.4788177013397217
    3. '   ' → logprob: -1.8538177013397217
    4. '_' → logprob: -2.9788177013397217
    5. ' ```' → logprob: -2.9788177013397217
    6. '    ' → logprob: -3.1038177013397217
    7. ' '' → logprob: -3.1038177013397217
    8. ' (' → logprob: -3.7288177013397217
    9. '```' → logprob: -3.8538177013397217
    10. ' )' → logprob: -4.228817939758301

Token 45: ' valeurs' (ID: 73668)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5270161628723145
    2. 'élé' → logprob: -1.9020161628723145
    3. '3' → logprob: -3.2770161628723145
    4. '1' → logprob: -3.2770161628723145
    5. ' trois' → logprob: -3.2770161628723145
    6. ' éléments' → logprob: -3.7770161628723145
    7. ' '' → logprob: -4.0270161628723145
    8. '0' → logprob: -4.4020161628723145
    9. ' z' → logprob: -4.6520161628723145
    10. ' nombres' → logprob: -4.6520161628723145

Token 46: ' ident' (ID: 3951)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1443911790847778
    2. '   ' → logprob: -1.6443911790847778
    3. ' ident' → logprob: -2.2693910598754883
    4. '  ' → logprob: -2.5193910598754883
    5. ' (' → logprob: -2.5193910598754883
    6. ' [' → logprob: -3.3943910598754883
    7. ' cons' → logprob: -3.3943910598754883
    8. ' ég' → logprob: -3.7693910598754883
    9. '[' → logprob: -3.8943910598754883
    10. '    ' → logprob: -4.269391059875488

Token 47: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.25048762559890747
    2. 'ques' → logprob: -2.0004875659942627
    3. 'q' → logprob: -3.3754875659942627
    4. 'que' → logprob: -4.500487804412842
    5. 'i' → logprob: -4.625487804412842
    6. 'ique' → logprob: -4.750487804412842
    7. '```' → logprob: -5.000487804412842
    8. '=' → logprob: -6.250487804412842
    9. 'qu' → logprob: -6.375487804412842
    10. '``' → logprob: -6.500487804412842

Token 48: ' cons' (ID: 1473)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7663251161575317
    2. ')' → logprob: -1.8913251161575317
    3. '   ' → logprob: -1.8913251161575317
    4. '  ' → logprob: -2.141324996948242
    5. '"""' → logprob: -3.266324996948242
    6. '```' → logprob: -3.766324996948242
    7. ''' → logprob: -4.766324996948242
    8. '\' → logprob: -4.891324996948242
    9. '}' → logprob: -5.266324996948242
    10. '\n' → logprob: -5.266324996948242

Token 49: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.027049429714679718
    2. 'ecut' → logprob: -3.9020495414733887
    3. 'é' → logprob: -5.902049541473389
    4. 'éc' → logprob: -6.527049541473389
    5. 'e' → logprob: -7.027049541473389
    6. 'ec' → logprob: -7.777049541473389
    7. 'ect' → logprob: -8.40204906463623
    8. '```' → logprob: -8.52704906463623
    9. 'ecute' → logprob: -9.02704906463623
    10. 'è' → logprob: -9.02704906463623

Token 50: 'ives' (ID: 2264)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1713266521692276
    2. 'e' → logprob: -2.6713266372680664
    3. 'écut' → logprob: -2.7963266372680664
    4. 'ut' → logprob: -4.671326637268066
    5. 'é' → logprob: -5.421326637268066
    6. 'ecut' → logprob: -5.796326637268066
    7. ' u' → logprob: -6.171326637268066
    8. 'uct' → logprob: -6.171326637268066
    9. '   ' → logprob: -6.796326637268066
    10. 'cut' → logprob: -7.171326637268066

Token 51: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4956390857696533
    2. '   ' → logprob: -1.6206390857696533
    3. ')' → logprob: -2.7456390857696533
    4. '  ' → logprob: -3.2456390857696533
    5. ':' → logprob: -3.9956390857696533
    6. '"""' → logprob: -3.9956390857696533
    7. '.' → logprob: -4.495638847351074
    8. '\' → logprob: -4.745638847351074
    9. ''' → logprob: -5.120638847351074
    10. '```' → logprob: -5.245638847351074

Token 52: 'a' (ID: 64)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029807886108756065
    2. ' )' → logprob: -4.279808044433594
    3. 'a' → logprob: -5.029808044433594
    4. ',' → logprob: -6.029808044433594
    5. ' ' → logprob: -6.154808044433594
    6. '   ' → logprob: -6.404808044433594
    7. ' a' → logprob: -7.154808044433594
    8. '),' → logprob: -7.654808044433594
    9. ' ,' → logprob: -8.529808044433594
    10. '')' → logprob: -8.779808044433594

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.18087998032569885
    2. '[' → logprob: -1.8058799505233765
    3. '[a' → logprob: -8.305879592895508
    4. '[j' → logprob: -8.430879592895508
    5. '[index' → logprob: -9.180879592895508
    6. ')' → logprob: -9.680879592895508
    7. '[count' → logprob: -9.680879592895508
    8. '[n' → logprob: -10.055879592895508
    9. '[pos' → logprob: -10.180879592895508
    10. 'i' → logprob: -10.430879592895508

Token 54: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04580133035778999
    2. ']==' → logprob: -3.7958014011383057
    3. '[i' → logprob: -4.920801162719727
    4. '-' → logprob: -4.920801162719727
    5. '+' → logprob: -5.795801162719727
    6. '[' → logprob: -6.295801162719727
    7. ':' → logprob: -7.420801162719727
    8. '],' → logprob: -7.920801162719727
    9. ':i' → logprob: -8.045801162719727
    10. '```' → logprob: -8.420801162719727

Token 55: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15425337851047516
    2. '2' → logprob: -3.0292534828186035
    3. 'i' → logprob: -3.6542534828186035
    4. ' ' → logprob: -3.7792534828186035
    5. '1' → logprob: -3.9042534828186035
    6. '+' → logprob: -4.7792534828186035
    7. ' ]' → logprob: -5.4042534828186035
    8. '0' → logprob: -6.1542534828186035
    9. ']==' → logprob: -6.2792534828186035
    10. ' i' → logprob: -6.4042534828186035

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07754343003034592
    2. ']==' → logprob: -3.4525434970855713
    3. '[' → logprob: -4.577543258666992
    4. '[i' → logprob: -4.827543258666992
    5. '],' → logprob: -5.077543258666992
    6. '==' → logprob: -5.452543258666992
    7. '-' → logprob: -5.827543258666992
    8. '+' → logprob: -6.202543258666992
    9. ' ]' → logprob: -6.202543258666992
    10. ':' → logprob: -7.202543258666992

Token 57: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7660098075866699
    2. ' ==' → logprob: -1.39100980758667
    3. ' and' → logprob: -1.89100980758667
    4. ')' → logprob: -2.64100980758667
    5. '=' → logprob: -4.51600980758667
    6. '[' → logprob: -4.64100980758667
    7. ',' → logprob: -4.76600980758667
    8. 'and' → logprob: -4.89100980758667
    9. ']' → logprob: -5.26600980758667
    10. ' ' → logprob: -5.64100980758667

Token 58: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38780662417411804
    2. ' a' → logprob: -1.1378066539764404
    3. ' ' → logprob: -7.012806415557861
    4. ' ' → logprob: -10.63780689239502
    5. '  ' → logprob: -12.63780689239502
    6. ')' → logprob: -14.51280689239502
    7. ')a' → logprob: -14.51280689239502
    8. 'ai' → logprob: -14.63780689239502
    9. '	a' → logprob: -14.70030689239502
    10. '   ' → logprob: -14.70030689239502

Token 59: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012495197588577867
    2. '[' → logprob: -6.751249313354492
    3. ' [' → logprob: -10.126249313354492
    4. ' ' → logprob: -11.126249313354492
    5. 'i' → logprob: -12.001249313354492
    6. ']' → logprob: -12.126249313354492
    7. '[
' → logprob: -12.501249313354492
    8. '[j' → logprob: -13.126249313354492
    9. ')' → logprob: -13.251249313354492
    10. '   ' → logprob: -13.876249313354492

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014195124618709087
    2. ']==' → logprob: -5.139194965362549
    3. '-' → logprob: -5.639194965362549
    4. '==' → logprob: -6.389194965362549
    5. ' ==' → logprob: -6.514194965362549
    6. ' ]' → logprob: -7.889194965362549
    7. ' and' → logprob: -8.389195442199707
    8. ')' → logprob: -9.014195442199707
    9. '    ' → logprob: -9.264195442199707
    10. '])' → logprob: -9.264195442199707

Token 61: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8264600038528442
    2. ' ==' → logprob: -1.2014600038528442
    3. ' and' → logprob: -1.5764600038528442
    4. 'and' → logprob: -3.8264598846435547
    5. ')' → logprob: -3.9514598846435547
    6. 'et' → logprob: -4.826459884643555
    7. ' et' → logprob: -5.576459884643555
    8. ' ' → logprob: -7.326459884643555
    9. '  ' → logprob: -7.451459884643555
    10. '    ' → logprob: -8.076459884643555

Token 62: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22636054456233978
    2. ' a' → logprob: -1.601360559463501
    3. ' ' → logprob: -6.976360321044922
    4. ' ' → logprob: -12.476360321044922
    5. '  ' → logprob: -12.976360321044922
    6. '   ' → logprob: -13.101360321044922
    7. ')' → logprob: -13.476360321044922
    8. '    ' → logprob: -13.913860321044922
    9. ')a' → logprob: -14.226360321044922
    10. '	a' → logprob: -14.976360321044922

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14346151053905487
    2. '+' → logprob: -2.2684614658355713
    3. '-' → logprob: -3.5184614658355713
    4. ']' → logprob: -8.268461227416992
    5. '[' → logprob: -8.643461227416992
    6. ' ' → logprob: -11.143461227416992
    7. '1' → logprob: -11.393461227416992
    8. '   ' → logprob: -11.518461227416992
    9. '[j' → logprob: -11.518461227416992
    10. '+i' → logprob: -11.643461227416992

Token 64: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6334807872772217
    2. '+' → logprob: -0.7584807872772217
    3. ' -' → logprob: -8.1334810256958
    4. ' +' → logprob: -8.5084810256958
    5. ' ' → logprob: -8.8834810256958
    6. '1' → logprob: -9.2584810256958
    7. '   ' → logprob: -9.5084810256958
    8. ']' → logprob: -9.8834810256958
    9. '  ' → logprob: -11.5084810256958
    10. '```' → logprob: -13.0084810256958

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038813185528852046
    2. ' ' → logprob: -8.500388145446777
    3. '+' → logprob: -9.000388145446777
    4. '2' → logprob: -10.750388145446777
    5. '   ' → logprob: -10.875388145446777
    6. '-' → logprob: -11.375388145446777
    7. ']' → logprob: -12.375388145446777
    8. '  ' → logprob: -13.375388145446777
    9. '```' → logprob: -13.625388145446777
    10. '    ' → logprob: -14.750388145446777

Token 66: ']),' (ID: 19560)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6683841943740845
    2. '])' → logprob: -1.1683841943740845
    3. ']' → logprob: -1.7933841943740845
    4. ' )' → logprob: -5.168384075164795
    5. ' ' → logprob: -7.418384075164795
    6. ' ]' → logprob: -7.668384075164795
    7. ']),' → logprob: -7.918384075164795
    8. '`)' → logprob: -8.168384552001953
    9. '')' → logprob: -8.418384552001953
    10. ' and' → logprob: -8.543384552001953

Token 67: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44104593992233276
    2. '   ' → logprob: -1.9410459995269775
    3. ' ' → logprob: -2.6910459995269775
    4. ' 
' → logprob: -3.3160459995269775
    5. '    ' → logprob: -3.9410459995269775
    6. ' )' → logprob: -4.066045761108398
    7. ')
' → logprob: -4.566045761108398
    8. ',' → logprob: -4.566045761108398
    9. '\n' → logprob: -4.941045761108398
    10. '     
' → logprob: -5.191045761108398

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1765047311782837
    2. '    ' → logprob: -1.5515047311782837
    3. '     ' → logprob: -1.6765047311782837
    4. ' ' → logprob: -1.6765047311782837
    5. ')' → logprob: -3.176504611968994
    6. '       ' → logprob: -4.551504611968994
    7. '  ' → logprob: -5.426504611968994
    8. ' ' → logprob: -5.551504611968994
    9. '
' → logprob: -5.676504611968994
    10. ',' → logprob: -5.676504611968994

Token 69: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.15625859797000885
    2. '   ' → logprob: -2.2812585830688477
    3. ' ' → logprob: -3.4062585830688477
    4. '       ' → logprob: -5.781258583068848
    5. '    ' → logprob: -6.156258583068848
    6. '         ' → logprob: -7.281258583068848
    7. ' ' → logprob: -7.281258583068848
    8. '```' → logprob: -7.281258583068848
    9. '#' → logprob: -7.906258583068848
    10. '      ' → logprob: -8.531258583068848

Token 70: ' -' (ID: 533)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.062838114798069
    2. ' ' → logprob: -3.687838077545166
    3. '   ' → logprob: -3.812838077545166
    4. '```' → logprob: -5.687838077545166
    5. '       ' → logprob: -5.812838077545166
    6. '    ' → logprob: -6.187838077545166
    7. '         ' → logprob: -6.687838077545166
    8. '      ' → logprob: -6.937838077545166
    9. ' ' → logprob: -6.937838077545166
    10. '#' → logprob: -7.062838077545166

Token 71: ' Un' (ID: 1367)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3439210057258606
    2. 'a' → logprob: -2.218920946121216
    3. ' a' → logprob: -2.718920946121216
    4. ' ' → logprob: -3.093920946121216
    5. 'un' → logprob: -3.468920946121216
    6. 'Un' → logprob: -4.593921184539795
    7. ' une' → logprob: -5.468921184539795
    8. '    ' → logprob: -5.593921184539795
    9. '     ' → logprob: -5.718921184539795
    10. 'une' → logprob: -5.718921184539795

Token 72: ' motif' (ID: 72753)
  Prédit: ' double'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' double' → logprob: -1.0779781341552734
    2. ' trip' → logprob: -1.0779781341552734
    3. ' quadru' → logprob: -2.2029781341552734
    4. ' couple' → logprob: -2.5779781341552734
    5. ' doubl' → logprob: -3.4529781341552734
    6. ' motif' → logprob: -3.9529781341552734
    7. 'double' → logprob: -4.202978134155273
    8. ' quint' → logprob: -4.515478134155273
    9. ' ' → logprob: -4.640478134155273
    10. 'trip' → logprob: -4.702978134155273

Token 73: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3771606385707855
    2. ' a' → logprob: -2.5021605491638184
    3. ' de' → logprob: -2.8771605491638184
    4. '  ' → logprob: -2.8771605491638184
    5. 'e' → logprob: -3.7521605491638184
    6. ' '' → logprob: -3.8771605491638184
    7. ' "' → logprob: -4.377160549163818
    8. '     ' → logprob: -4.627160549163818
    9. ''' → logprob: -5.127160549163818
    10. ' d' → logprob: -5.252160549163818

Token 74: ' deux' (ID: 10301)
  Prédit: ' type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.9363398551940918
    2. ' trois' → logprob: -1.4363398551940918
    3. ' a' → logprob: -1.9363398551940918
    4. 'a' → logprob: -2.311339855194092
    5. ' ' → logprob: -3.811339855194092
    6. 'type' → logprob: -3.811339855194092
    7. ' trip' → logprob: -4.186339855194092
    8. ' l' → logprob: -5.061339855194092
    9. ' valeur' → logprob: -5.311339855194092
    10. ' [' → logprob: -5.436339855194092

Token 75: ' valeurs' (ID: 73668)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11595131456851959
    2. ' espaces' → logprob: -3.1159512996673584
    3. 'a' → logprob: -3.7409512996673584
    4. ' a' → logprob: -4.1159515380859375
    5. 'esp' → logprob: -5.1159515380859375
    6. ' valeurs' → logprob: -5.3659515380859375
    7. 'val' → logprob: -5.6159515380859375
    8. '  ' → logprob: -6.6159515380859375
    9. '_' → logprob: -6.7409515380859375
    10. ' trip' → logprob: -6.7409515380859375

Token 76: ' cons' (ID: 1473)
  Prédit: ' cons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.32179906964302063
    2. ' ident' → logprob: -1.4467990398406982
    3. 'ident' → logprob: -4.446799278259277
    4. ' ég' → logprob: -5.071799278259277
    5. ' ' → logprob: -5.446799278259277
    6. 'a' → logprob: -5.946799278259277
    7. 'cons' → logprob: -6.196799278259277
    8. ' distinct' → logprob: -6.446799278259277
    9. '   ' → logprob: -6.571799278259277
    10. '  ' → logprob: -6.571799278259277

Token 77: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.1129821315407753
    2. 'é' → logprob: -2.4879820346832275
    3. 'éc' → logprob: -3.8629820346832275
    4. 'e' → logprob: -6.612982273101807
    5. 'ec' → logprob: -7.362982273101807
    6. 'ecut' → logprob: -7.612982273101807
    7. 'ect' → logprob: -9.362981796264648
    8. '```' → logprob: -10.487981796264648
    9. '{' → logprob: -10.612981796264648
    10. 'équ' → logprob: -11.112981796264648

Token 78: 'ives' (ID: 2264)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.007033854722976685
    2. 't' → logprob: -5.882033824920654
    3. 'entes' → logprob: -6.507033824920654
    4. 's' → logprob: -7.007033824920654
    5. 'tes' → logprob: -7.132033824920654
    6. 'e' → logprob: -7.632033824920654
    7. 'i' → logprob: -8.757034301757812
    8. 'ves' → logprob: -9.132034301757812
    9. 'ives' → logprob: -9.632034301757812
    10. 'n' → logprob: -9.882034301757812

Token 79: ' ég' (ID: 33150)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5056256055831909
    2. '_' → logprob: -1.130625605583191
    3. ' cons' → logprob: -2.8806257247924805
    4. 's' → logprob: -5.8806257247924805
    5. ',' → logprob: -5.8806257247924805
    6. ' ident' → logprob: -6.2556257247924805
    7. ' (' → logprob: -6.7556257247924805
    8. 'cons' → logprob: -6.7556257247924805
    9. 'c' → logprob: -7.1306257247924805
    10. '  ' → logprob: -7.1306257247924805

Token 80: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.03834061697125435
    2. 'al' → logprob: -3.2883405685424805
    3. 'a' → logprob: -8.53834056854248
    4. 'ale' → logprob: -9.28834056854248
    5. '```' → logprob: -12.03834056854248
    6. 'aux' → logprob: -12.78834056854248
    7. '   ' → logprob: -14.78834056854248
    8. '{' → logprob: -15.28834056854248
    9. 'als' → logprob: -15.78834056854248
    10. '

' → logprob: -16.038341522216797

Token 81: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6138939261436462
    2. ',' → logprob: -1.738893985748291
    3. ')' → logprob: -2.238893985748291
    4. '.' → logprob: -2.988893985748291
    5. '   ' → logprob: -2.988893985748291
    6. 'a' → logprob: -4.238893985748291
    7. ':' → logprob: -4.738893985748291
    8. '_' → logprob: -4.738893985748291
    9. '  ' → logprob: -5.488893985748291
    10. ' (' → logprob: -5.488893985748291

Token 82: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.043712057173252106
    2. ' a' → logprob: -3.1687121391296387
    3. ' ' → logprob: -7.793712139129639
    4. '   ' → logprob: -8.41871166229248
    5. ')' → logprob: -10.41871166229248
    6. '  ' → logprob: -11.16871166229248
    7. 'i' → logprob: -11.41871166229248
    8. '     ' → logprob: -12.41871166229248
    9. ' i' → logprob: -12.60621166229248
    10. '    ' → logprob: -12.85621166229248

Token 83: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0022837184369564056
    2. '[' → logprob: -6.127283573150635
    3. '[j' → logprob: -9.627284049987793
    4. 'i' → logprob: -11.377284049987793
    5. '   ' → logprob: -12.252284049987793
    6. ')' → logprob: -12.752284049987793
    7. '[a' → logprob: -12.877284049987793
    8. '[
' → logprob: -13.252284049987793
    9. '[n' → logprob: -13.502284049987793
    10. '[I' → logprob: -13.877284049987793

Token 84: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17444443702697754
    2. '-' → logprob: -1.9244444370269775
    3. '+' → logprob: -4.549444198608398
    4. ']==' → logprob: -6.549444198608398
    5. '   ' → logprob: -7.299444198608398
    6. '[i' → logprob: -7.299444198608398
    7. ' ' → logprob: -8.299444198608398
    8. '[' → logprob: -8.799444198608398
    9. ' ]' → logprob: -8.924444198608398
    10. ' -' → logprob: -9.299444198608398

Token 85: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4790043830871582
    2. '==' → logprob: -1.2290043830871582
    3. ')' → logprob: -3.479004383087158
    4. ' ' → logprob: -3.604004383087158
    5. ']' → logprob: -4.354004383087158
    6. '[' → logprob: -5.354004383087158
    7. '-' → logprob: -5.604004383087158
    8. ',' → logprob: -7.104004383087158
    9. 'a' → logprob: -7.104004383087158
    10. '#' → logprob: -7.104004383087158

Token 86: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25257641077041626
    2. 'a' → logprob: -1.5025763511657715
    3. ' ' → logprob: -7.3775763511657715
    4. ' ' → logprob: -11.00257682800293
    5. '	a' → logprob: -12.87757682800293
    6. ' ' → logprob: -14.94007682800293
    7. ''a' → logprob: -15.00257682800293
    8. '  ' → logprob: -15.00257682800293
    9. ')a' → logprob: -15.25257682800293
    10. '(a' → logprob: -15.69007682800293

Token 87: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.021938743069767952
    2. ']' → logprob: -4.521938800811768
    3. '+' → logprob: -5.021938800811768
    4. 'i' → logprob: -6.021938800811768
    5. '-' → logprob: -7.021938800811768
    6. '[' → logprob: -8.02193832397461
    7. 'a' → logprob: -8.39693832397461
    8. ' ' → logprob: -9.27193832397461
    9. ' [' → logprob: -9.27193832397461
    10. ' i' → logprob: -9.64693832397461

Token 88: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19879110157489777
    2. '-' → logprob: -2.198791027069092
    3. ']' → logprob: -2.698791027069092
    4. '])' → logprob: -6.698791027069092
    5. ' ' → logprob: -8.44879150390625
    6. ' +' → logprob: -8.82379150390625
    7. '   ' → logprob: -8.94879150390625
    8. ']+' → logprob: -8.94879150390625
    9. ')' → logprob: -10.19879150390625
    10. '```' → logprob: -10.57379150390625

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.400689305039123e-05
    2. ' ' → logprob: -9.375094413757324
    3. ']' → logprob: -13.250094413757324
    4. '-' → logprob: -13.375094413757324
    5. '2' → logprob: -13.500094413757324
    6. '   ' → logprob: -13.875094413757324
    7. 'i' → logprob: -14.312594413757324
    8. '```' → logprob: -14.750094413757324
    9. '])' → logprob: -14.937594413757324
    10. '+' → logprob: -15.062594413757324

Token 90: ']),' (ID: 19560)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04316692426800728
    2. '])' → logprob: -3.2931668758392334
    3. '),' → logprob: -6.0431671142578125
    4. ']' → logprob: -7.0431671142578125
    5. ')])' → logprob: -7.7931671142578125
    6. ' )' → logprob: -7.9181671142578125
    7. ')]' → logprob: -8.918167114257812
    8. ']),' → logprob: -9.043167114257812
    9. ' ' → logprob: -9.168167114257812
    10. '   ' → logprob: -9.418167114257812

Token 91: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.557431697845459
    2. ' ' → logprob: -1.682431697845459
    3. ' 
' → logprob: -2.557431697845459
    4. ')' → logprob: -2.932431697845459
    5. '    ' → logprob: -3.432431697845459
    6. '"' → logprob: -4.182431697845459
    7. '    
' → logprob: -4.557431697845459
    8. '     
' → logprob: -4.557431697845459
    9. ' )' → logprob: -5.057431697845459
    10. '  
' → logprob: -5.432431697845459

Token 92: '
' (ID: 198)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.15337638556957245
    2. '   ' → logprob: -2.278376340866089
    3. ' ' → logprob: -3.528376340866089
    4. '       ' → logprob: -5.903376579284668
    5. '    ' → logprob: -6.278376579284668
    6. '#' → logprob: -6.778376579284668
    7. '         ' → logprob: -6.903376579284668
    8. ')' → logprob: -7.528376579284668
    9. ' ' → logprob: -7.528376579284668
    10. '```' → logprob: -7.528376579284668

Token 93: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.14268536865711212
    2. '   ' → logprob: -2.3926854133605957
    3. ' ' → logprob: -3.3926854133605957
    4. '       ' → logprob: -5.642685413360596
    5. 'def' → logprob: -6.642685413360596
    6. '```' → logprob: -6.892685413360596
    7. '    ' → logprob: -7.767685413360596
    8. ')' → logprob: -8.267684936523438
    9. '         ' → logprob: -8.392684936523438
    10. ' ' → logprob: -8.392684936523438

Token 94: ' -' (ID: 533)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.1958850920200348
    2. ' ' → logprob: -1.9458850622177124
    3. '   ' → logprob: -3.570885181427002
    4. '#' → logprob: -5.945885181427002
    5. 'def' → logprob: -7.195885181427002
    6. '       ' → logprob: -7.195885181427002
    7. '-' (adapté à ' -') → logprob: -7.695885181427002
    8. '```' → logprob: -7.695885181427002
    9. ' ' → logprob: -7.695885181427002
    10. '         ' → logprob: -7.820885181427002

Token 95: ' Un' (ID: 1367)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7986816763877869
    2. ' a' → logprob: -1.0486817359924316
    3. ' ' → logprob: -2.2986817359924316
    4. '     ' → logprob: -3.6736817359924316
    5. ' (' → logprob: -3.6736817359924316
    6. '   ' → logprob: -3.9236817359924316
    7. ' un' → logprob: -4.798681735992432
    8. '(' → logprob: -5.173681735992432
    9. ' ' → logprob: -5.923681735992432
    10. 'def' → logprob: -6.173681735992432

Token 96: ' motif' (ID: 72753)
  Prédit: ' motif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' motif' → logprob: -0.41669154167175293
    2. ' quadru' → logprob: -2.416691541671753
    3. ' trip' → logprob: -2.541691541671753
    4. 'mot' → logprob: -2.791691541671753
    5. 'trip' → logprob: -3.416691541671753
    6. ' double' → logprob: -4.041691780090332
    7. 'double' → logprob: -4.791691780090332
    8. ' pattern' → logprob: -5.166691780090332
    9. 'pattern' → logprob: -5.166691780090332
    10. 'a' → logprob: -5.291691780090332

Token 97: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8147983551025391
    2. ' ' → logprob: -1.189798355102539
    3. 'de' → logprob: -2.189798355102539
    4. ' d' → logprob: -2.564798355102539
    5. 'd' → logprob: -3.439798355102539
    6. '  ' → logprob: -5.064798355102539
    7. ''' → logprob: -5.189798355102539
    8. ' ' → logprob: -6.064798355102539
    9. ' space' → logprob: -6.189798355102539
    10. ' a' → logprob: -6.314798355102539

Token 98: ' deux' (ID: 10301)
  Prédit: ' trois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trois' → logprob: -0.7892698645591736
    2. ' deux' → logprob: -1.1642699241638184
    3. 'a' → logprob: -2.5392699241638184
    4. ' a' → logprob: -2.9142699241638184
    5. 'de' → logprob: -3.1642699241638184
    6. ' trip' → logprob: -4.539269924163818
    7. 'tro' → logprob: -4.539269924163818
    8. ' ' → logprob: -5.164269924163818
    9. ' three' → logprob: -5.664269924163818
    10. ' i' → logprob: -5.664269924163818

Token 99: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.5004751682281494
    2. 'val' → logprob: -1.2504751682281494
    3. 'a' → logprob: -3.2504751682281494
    4. ' a' → logprob: -3.7504751682281494
    5. ' val' → logprob: -4.00047492980957
    6. ' espaces' → logprob: -4.37547492980957
    7. 'i' → logprob: -6.62547492980957
    8. ' values' → logprob: -6.62547492980957
    9. ' equal' → logprob: -6.75047492980957
    10. 'values' → logprob: -6.75047492980957

Token 100: ' ég' (ID: 33150)
  Prédit: ' cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.007861185818910599
    2. 'cons' → logprob: -5.132861137390137
    3. 'con' → logprob: -7.007861137390137
    4. ' ég' → logprob: -7.257861137390137
    5. '_con' → logprob: -9.632861137390137
    6. ' ident' → logprob: -10.757861137390137
    7. '_cons' → logprob: -10.757861137390137
    8. '_' → logprob: -10.882861137390137
    9. ' distinct' → logprob: -11.007861137390137
    10. ' ' → logprob: -11.132861137390137

Token 101: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.0030511466320604086
    2. 'al' → logprob: -5.878051280975342
    3. 'ale' → logprob: -9.003050804138184
    4. 'aux' → logprob: -9.503050804138184
    5. 'a' → logprob: -10.753050804138184
    6. '```' → logprob: -10.753050804138184
    7. 'als' → logprob: -14.003050804138184
    8. '

' → logprob: -14.378050804138184
    9. '{' → logprob: -14.503050804138184
    10. '``' → logprob: -14.628050804138184

Token 102: ' en' (ID: 469)
  Prédit: ' cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.011826365254819393
    2. 'cons' → logprob: -4.761826515197754
    3. ' (' → logprob: -6.511826515197754
    4. 'con' → logprob: -6.886826515197754
    5. ' consecutive' → logprob: -8.386826515197754
    6. '(cons' → logprob: -8.511826515197754
    7. 'adj' → logprob: -10.011826515197754
    8. ' ' → logprob: -10.386826515197754
    9. '(' → logprob: -10.511826515197754
    10. '_cons' → logprob: -10.636826515197754

Token 103: ' occ' (ID: 4138)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9787135124206543
    2. ' altern' → logprob: -1.8537135124206543
    3. ' a' → logprob: -2.1037135124206543
    4. 'a' → logprob: -2.1037135124206543
    5. ' ' → logprob: -2.6037135124206543
    6. 'i' → logprob: -3.2287135124206543
    7. 'altern' → logprob: -3.8537135124206543
    8. ' position' → logprob: -4.353713512420654
    9. '[i' → logprob: -4.478713512420654
    10. ' trip' → logprob: -4.853713512420654

Token 104: 'urance' (ID: 5674)
  Prédit: 'urrence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -0.31940123438835144
    2. 'ur' → logprob: -1.9444012641906738
    3. 'urrences' → logprob: -2.444401264190674
    4. 'urr' → logprob: -3.694401264190674
    5. 'rr' → logprob: -5.069401264190674
    6. 'curr' → logprob: -5.194401264190674
    7. 'u' → logprob: -5.944401264190674
    8. '```' → logprob: -6.694401264190674
    9. 'urrent' → logprob: -6.819401264190674
    10. 'rence' → logprob: -7.069401264190674

Token 105: ' précédente' (ID: 177319)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16499915719032288
    2. ' s' → logprob: -3.41499924659729
    3. ' suivante' → logprob: -3.41499924659729
    4. ' ' → logprob: -4.039999008178711
    5. ' suivantes' → logprob: -4.664999008178711
    6. '_' → logprob: -4.914999008178711
    7. ' a' → logprob: -5.039999008178711
    8. 'es' → logprob: -5.039999008178711
    9. ' i' → logprob: -5.789999008178711
    10. ')' → logprob: -5.789999008178711

Token 106: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13903605937957764
    2. ',' → logprob: -3.389036178588867
    3. '):' → logprob: -3.389036178588867
    4. ' ' → logprob: -4.389036178588867
    5. '   ' → logprob: -4.639036178588867
    6. ' )' → logprob: -4.639036178588867
    7. '.' → logprob: -4.764036178588867
    8. '):
' → logprob: -5.764036178588867
    9. '[i' → logprob: -5.889036178588867
    10. 'a' → logprob: -6.139036178588867

Token 107: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48155567049980164
    2. ' a' → logprob: -0.981555700302124
    3. ' ' → logprob: -5.981555461883545
    4. '   ' → logprob: -5.981555461883545
    5. ' i' → logprob: -6.856555461883545
    6. 'i' → logprob: -7.231555461883545
    7. ')' → logprob: -8.606555938720703
    8. '  ' → logprob: -8.856555938720703
    9. '    ' → logprob: -8.981555938720703
    10. '     ' → logprob: -10.106555938720703

Token 108: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002215680666267872
    2. '[' → logprob: -6.50221586227417
    3. '[j' → logprob: -8.127215385437012
    4. ')' → logprob: -8.627215385437012
    5. '   ' → logprob: -9.002215385437012
    6. ']' → logprob: -10.752215385437012
    7. 'i' → logprob: -10.752215385437012
    8. ' [' → logprob: -11.377215385437012
    9. '[a' → logprob: -11.752215385437012
    10. '[n' → logprob: -12.002215385437012

Token 109: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40497228503227234
    2. '-' → logprob: -1.4049723148345947
    3. '+' → logprob: -2.5299723148345947
    4. ']==' → logprob: -5.154972076416016
    5. '   ' → logprob: -8.154972076416016
    6. ')' → logprob: -8.404972076416016
    7. '==' → logprob: -8.529972076416016
    8. ' -' → logprob: -8.529972076416016
    9. ' ]' → logprob: -8.654972076416016
    10. '[' → logprob: -8.904972076416016

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012684219516813755
    2. '2' → logprob: -4.387684345245361
    3. ' ' → logprob: -9.262683868408203
    4. '```' → logprob: -10.762683868408203
    5. 'a' → logprob: -11.012683868408203
    6. '-' → logprob: -11.137683868408203
    7. '3' → logprob: -11.262683868408203
    8. ']' → logprob: -12.637683868408203
    9. '   ' → logprob: -13.137683868408203
    10. '+' → logprob: -13.137683868408203

Token 111: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032462780363857746
    2. ']==' → logprob: -6.003246307373047
    3. ')' → logprob: -7.503246307373047
    4. '])' → logprob: -9.753246307373047
    5. ' ]' → logprob: -10.378246307373047
    6. 'a' → logprob: -10.878246307373047
    7. '==' → logprob: -11.128246307373047
    8. '']' → logprob: -11.253246307373047
    9. '+' → logprob: -11.628246307373047
    10. ' ==' → logprob: -11.753246307373047

Token 112: ' ==' (ID: 951)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2565336525440216
    2. ')' → logprob: -2.006533622741699
    3. ' ==' → logprob: -3.131533622741699
    4. '==' → logprob: -3.881533622741699
    5. ']==' → logprob: -4.256533622741699
    6. ')]' → logprob: -6.131533622741699
    7. '[' → logprob: -6.381533622741699
    8. ' ]' → logprob: -6.506533622741699
    9. '])' → logprob: -6.506533622741699
    10. ' )' → logprob: -7.006533622741699

Token 113: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2014557421207428
    2. ' a' → logprob: -1.7014557123184204
    3. ' ' → logprob: -10.576456069946289
    4. ' ' → logprob: -12.326456069946289
    5. ')' → logprob: -12.701456069946289
    6. '   ' → logprob: -13.701456069946289
    7. 'i' → logprob: -13.763956069946289
    8. ')a' → logprob: -13.951456069946289
    9. '  ' → logprob: -14.138956069946289
    10. 'ai' → logprob: -14.263956069946289

Token 114: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003378164954483509
    2. 'a' → logprob: -7.003378391265869
    3. ']' → logprob: -7.503378391265869
    4. '[' → logprob: -7.503378391265869
    5. '[a' → logprob: -7.628378391265869
    6. 'i' → logprob: -7.878378391265869
    7. ' [' → logprob: -8.753377914428711
    8. ')' → logprob: -8.753377914428711
    9. ' a' → logprob: -9.878377914428711
    10. ' ' → logprob: -10.503377914428711

Token 115: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5294864177703857
    2. ']' → logprob: -1.6544864177703857
    3. '])' → logprob: -1.6544864177703857
    4. '+' → logprob: -4.404486656188965
    5. ']),' → logprob: -5.654486656188965
    6. '   ' → logprob: -6.529486656188965
    7. ']):' → logprob: -6.529486656188965
    8. '),' → logprob: -6.654486656188965
    9. ' )' → logprob: -6.779486656188965
    10. '[i' → logprob: -7.404486656188965

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36947140097618103
    2. ')' → logprob: -1.2444714307785034
    3. '):' → logprob: -4.869471549987793
    4. ' ' → logprob: -5.994471549987793
    5. ')
' → logprob: -6.119471549987793
    6. '):
' → logprob: -6.619471549987793
    7. ' )' → logprob: -6.744471549987793
    8. '"' → logprob: -6.994471549987793
    9. '```' → logprob: -6.994471549987793
    10. '"""' → logprob: -7.369471549987793

Token 117: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10530885308980942
    2. ')' → logprob: -2.730308771133423
    3. ':' → logprob: -4.355309009552002
    4. ' ' → logprob: -5.355309009552002
    5. '):' → logprob: -5.355309009552002
    6. ' 
' → logprob: -6.105309009552002
    7. '"""' → logprob: -6.730309009552002
    8. '
' → logprob: -6.730309009552002
    9. ' :' → logprob: -6.855309009552002
    10. '"' → logprob: -6.855309009552002

Token 118: ' fonction' (ID: 17610)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6214761137962341
    2. ' result' → logprob: -1.496476173400879
    3. ' ' → logprob: -1.996476173400879
    4. ' code' → logprob: -3.871476173400879
    5. 'i' → logprob: -4.246476173400879
    6. 'n' → logprob: -4.621476173400879
    7. ' for' → logprob: -4.871476173400879
    8. ' i' → logprob: -4.996476173400879
    9. 'result' → logprob: -4.996476173400879
    10. 'r' → logprob: -5.371476173400879

Token 119: ' parc' (ID: 22138)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15178629755973816
    2. ' ' → logprob: -2.2767863273620605
    3. ' :' → logprob: -4.4017863273620605
    4. '  ' → logprob: -4.9017863273620605
    5. ' :
' → logprob: -5.6517863273620605
    6. ' retourne' → logprob: -6.0267863273620605
    7. ' return' → logprob: -6.6517863273620605
    8. ' 
' → logprob: -6.6517863273620605
    9. '    ' → logprob: -6.6517863273620605
    10. ' """
' → logprob: -6.6517863273620605

Token 120: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.5453576445579529
    2. 'ours' → logprob: -0.9203576445579529
    3. 'oure' → logprob: -4.670357704162598
    4. 'ou' → logprob: -5.545357704162598
    5. 'o' → logprob: -5.795357704162598
    6. '
' → logprob: -6.795357704162598
    7. '_' → logprob: -6.795357704162598
    8. 'our' → logprob: -7.045357704162598
    9. 'c' → logprob: -7.170357704162598
    10. '

' → logprob: -7.670357704162598

Token 121: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8769627809524536
    2. ' la' → logprob: -1.3769627809524536
    3. '   ' → logprob: -2.626962661743164
    4. ' range' → logprob: -2.751962661743164
    5. ' n' → logprob: -3.501962661743164
    6. 'a' → logprob: -3.751962661743164
    7. ' i' → logprob: -3.751962661743164
    8. 'n' → logprob: -3.876962661743164
    9. ' le' → logprob: -4.126962661743164
    10. ' ' → logprob: -4.251962661743164

Token 122: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.5374777913093567
    2. ' a' → logprob: -1.662477731704712
    3. 'a' → logprob: -1.912477731704712
    4. ' range' → logprob: -4.037477970123291
    5. 'liste' → logprob: -4.037477970123291
    6. '   ' → logprob: -4.662477970123291
    7. 'range' → logprob: -4.787477970123291
    8. ' list' → logprob: -5.287477970123291
    9. ' for' → logprob: -5.537477970123291
    10. 'for' → logprob: -6.037477970123291

Token 123: ' et' (ID: 859)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9479566812515259
    2. '   ' → logprob: -1.0729566812515259
    3. ' ' → logprob: -2.0729565620422363
    4. '    ' → logprob: -3.0729565620422363
    5. '<|end|>' → logprob: -3.5729565620422363
    6. ' ,' → logprob: -4.322956562042236
    7. ',' → logprob: -4.822956562042236
    8. ')' → logprob: -4.947956562042236
    9. ' )' → logprob: -5.197956562042236
    10. 'a' → logprob: -5.322956562042236

Token 124: ' incr' (ID: 52395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5690609216690063
    2. ' continue' → logprob: -1.5690609216690063
    3. '    ' → logprob: -2.694060802459717
    4. ' ajoute' → logprob: -3.194060802459717
    5. ' retourne' → logprob: -3.694060802459717
    6. ' return' → logprob: -3.944060802459717
    7. ' compte' → logprob: -4.444060802459717
    8. ' augmente' → logprob: -5.194060802459717
    9. ' ' → logprob: -5.319060802459717
    10. 'continue' → logprob: -5.944060802459717

Token 125: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.010170499794185162
    2. 'ément' → logprob: -4.8851704597473145
    3. 'emente' → logprob: -7.0101704597473145
    4. 'mente' → logprob: -7.5101704597473145
    5. 'éments' → logprob: -8.510170936584473
    6. 'ém' → logprob: -8.635170936584473
    7. 'è' → logprob: -8.760170936584473
    8. 'ment' → logprob: -9.010170936584473
    9. 'ement' → logprob: -9.260170936584473
    10. '_' → logprob: -10.135170936584473

Token 126: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.015822602435946465
    2. 'ment' → logprob: -4.265822410583496
    3. 'mentation' → logprob: -7.890822410583496
    4. 'mete' → logprob: -8.390822410583496
    5. 'm' → logprob: -8.765822410583496
    6. '```' → logprob: -8.890822410583496
    7. 'me' → logprob: -9.265822410583496
    8. 'ments' → logprob: -9.265822410583496
    9. 'mental' → logprob: -9.265822410583496
    10. 'mented' → logprob: -9.765822410583496

Token 127: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3040679693222046
    2. ' le' → logprob: -2.554068088531494
    3. 'count' → logprob: -2.679068088531494
    4. ' count' → logprob: -3.929068088531494
    5. ' compteur' → logprob: -3.929068088531494
    6. ' l' → logprob: -4.429068088531494
    7. ' la' → logprob: -4.429068088531494
    8. ' counter' → logprob: -4.554068088531494
    9. ' un' → logprob: -4.929068088531494
    10. 'counter' → logprob: -5.179068088531494

Token 128: ' compteur' (ID: 163344)
  Prédit: ' compteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compteur' → logprob: -0.11695419996976852
    2. ' espace' → logprob: -2.8669540882110596
    3. 'es' → logprob: -4.241954326629639
    4. ' counter' → logprob: -4.616954326629639
    5. 'e' → logprob: -5.366954326629639
    6. ' count' → logprob: -5.616954326629639
    7. 'count' → logprob: -5.741954326629639
    8. ' ' → logprob: -5.741954326629639
    9. 'comp' → logprob: -5.866954326629639
    10. 'counter' → logprob: -5.866954326629639

Token 129: ' lorsqu' (ID: 57416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.514351487159729
    2. ',' → logprob: -1.639351487159729
    3. ' ' → logprob: -1.889351487159729
    4. '    ' → logprob: -4.3893513679504395
    5. ')' → logprob: -4.7643513679504395
    6. '<|end|>' → logprob: -5.0143513679504395
    7. '  ' → logprob: -5.1393513679504395
    8. ' ,' → logprob: -5.3893513679504395
    9. '.' → logprob: -5.5143513679504395
    10. '       ' → logprob: -5.8893513679504395

Token 130: '’un' (ID: 9073)
  Prédit: ''elle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''elle' → logprob: -0.0788717195391655
    2. ''un' → logprob: -3.203871726989746
    3. ' elle' → logprob: -4.703871726989746
    4. 'a' → logprob: -5.078871726989746
    5. ''il' → logprob: -5.203871726989746
    6. ''une' → logprob: -5.703871726989746
    7. ''' → logprob: -5.703871726989746
    8. 'e' → logprob: -6.203871726989746
    9. 'un' → logprob: -6.203871726989746
    10. '’elle' → logprob: -6.453871726989746

Token 131: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08553649485111237
    2. ' motif' → logprob: -3.210536479949951
    3. ' espace' → logprob: -3.585536479949951
    4. 'e' → logprob: -5.960536479949951
    5. '_' → logprob: -6.210536479949951
    6. ' pattern' → logprob: -6.210536479949951
    7. ' ```' → logprob: -6.710536479949951
    8. ' trip' → logprob: -7.210536479949951
    9. ' a' → logprob: -7.210536479949951
    10. ' space' → logprob: -7.460536479949951

Token 132: ' ces' (ID: 10532)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.44874924421310425
    2. ' ' → logprob: -1.573749303817749
    3. 'a' → logprob: -1.948749303817749
    4. 'i' → logprob: -6.32374906539917
    5. '   ' → logprob: -6.32374906539917
    6. '```' → logprob: -6.44874906539917
    7. ' i' → logprob: -6.57374906539917
    8. '  ' → logprob: -7.57374906539917
    9. ''' → logprob: -7.57374906539917
    10. '"' → logprob: -7.57374906539917

Token 133: ' motifs' (ID: 89637)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6818186640739441
    2. ' motifs' → logprob: -0.9318186640739441
    3. ' patterns' → logprob: -3.056818723678589
    4. ' conditions' → logprob: -4.43181848526001
    5. ' espaces' → logprob: -4.55681848526001
    6. ':' → logprob: -5.18181848526001
    7. ' :' → logprob: -5.30681848526001
    8. ' pattern' → logprob: -6.18181848526001
    9. '  ' → logprob: -6.18181848526001
    10. ' a' → logprob: -6.30681848526001

Token 134: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.07761546224355698
    2. ' ' → logprob: -2.70261549949646
    3. 'est' → logprob: -6.077615261077881
    4. '_' → logprob: -6.202615261077881
    5. ' is' → logprob: -6.702615261077881
    6. ' a' → logprob: -7.327615261077881
    7. 's' → logprob: -7.702615261077881
    8. ')' → logprob: -8.952615737915039
    9. ' )' → logprob: -9.077615737915039
    10. ',' → logprob: -9.452615737915039

Token 135: ' trouvé' (ID: 60081)
  Prédit: ' détect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' détect' → logprob: -0.3118375539779663
    2. ' rencontré' → logprob: -1.6868375539779663
    3. ' trouvé' → logprob: -3.186837673187256
    4. ' detected' → logprob: -4.311837673187256
    5. ' rencontr' → logprob: -4.311837673187256
    6. ' ' → logprob: -5.811837673187256
    7. ' detect' → logprob: -6.186837673187256
    8. ' found' → logprob: -6.186837673187256
    9. ' trouv' → logprob: -6.311837673187256
    10. ' présent' → logprob: -6.436837673187256

Token 136: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3611120879650116
    2. ',' → logprob: -1.861112117767334
    3. '.' → logprob: -2.111112117767334
    4. ':' → logprob: -3.736112117767334
    5. ')' → logprob: -7.736112117767334
    6. '    
' → logprob: -7.736112117767334
    7. '    ' → logprob: -8.236111640930176
    8. ',
' → logprob: -8.361111640930176
    9. ' ,' → logprob: -8.486111640930176
    10. ' :' → logprob: -8.861111640930176

Token 137: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06184946745634079
    2. ' ' → logprob: -3.186849355697632
    3. '    ' → logprob: -5.061849594116211
    4. ' 
' → logprob: -5.686849594116211
    5. '       ' → logprob: -6.061849594116211
    6. '    
' → logprob: -6.186849594116211
    7. '   
' → logprob: -7.061849594116211
    8. ')' → logprob: -7.436849594116211
    9. '  
' → logprob: -7.561849594116211
    10. '     
' → logprob: -7.686849594116211

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0289042629301548
    2. '       ' → logprob: -3.7789041996002197
    3. '    ' → logprob: -5.778904438018799
    4. ',' → logprob: -6.778904438018799
    5. ' ' → logprob: -8.27890396118164
    6. ' et' → logprob: -8.27890396118164
    7. '           ' → logprob: -8.90390396118164
    8. '.' → logprob: -9.27890396118164
    9. '    
' → logprob: -9.27890396118164
    10. ' puis' → logprob: -9.27890396118164

Token 139: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23860050737857819
    2. '       ' → logprob: -1.613600492477417
    3. '    ' → logprob: -4.613600730895996
    4. '    
' → logprob: -7.363600730895996
    5. '           ' → logprob: -7.613600730895996
    6. ' puis' → logprob: -7.988600730895996
    7. ' ' → logprob: -8.363600730895996
    8. ',' → logprob: -8.363600730895996
    9. ' 
' → logprob: -8.863600730895996
    10. ' et' → logprob: -8.863600730895996

Token 140: ' respect' (ID: 5618)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.3351357877254486
    2. '        ' → logprob: -1.585135817527771
    3. ' i' → logprob: -4.3351359367370605
    4. ' a' → logprob: -4.5851359367370605
    5. ' supprim' → logprob: -4.5851359367370605
    6. ' retir' → logprob: -4.8351359367370605
    7. ' continu' → logprob: -5.0851359367370605
    8. '       ' → logprob: -5.5851359367370605
    9. ' passant' → logprob: -5.7101359367370605
    10. 'n' → logprob: -5.9601359367370605

Token 141: 'ant' (ID: 493)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6537123918533325
    2. 'ant' → logprob: -0.7787123918533325
    3. 'ect' → logprob: -5.278712272644043
    4. 'e' → logprob: -6.028712272644043
    5. 'uant' → logprob: -6.153712272644043
    6. 'et' → logprob: -6.278712272644043
    7. 'ente' → logprob: -6.278712272644043
    8. 'é' → logprob: -6.278712272644043
    9. 'itant' → logprob: -6.403712272644043
    10. '```' → logprob: -7.778712272644043

Token 142: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.34765735268592834
    2. ' la' → logprob: -1.847657322883606
    3. ' ' → logprob: -2.3476574420928955
    4. ' le' → logprob: -4.347657203674316
    5. ' un' → logprob: -4.847657203674316
    6. ' indentation' → logprob: -4.847657203674316
    7. ' les' → logprob: -5.597657203674316
    8. ' une' → logprob: -5.597657203674316
    9. ' ' → logprob: -6.972657203674316
    10. '```' → logprob: -7.972657203674316

Token 143: ' logique' (ID: 115350)
  Prédit: ' indentation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indentation' → logprob: -0.7950217127799988
    2. '```' → logprob: -2.6700217723846436
    3. ' continue' → logprob: -2.9200217723846436
    4. ' spacing' → logprob: -2.9200217723846436
    5. ' condition' → logprob: -3.4200217723846436
    6. ' indent' → logprob: -3.5450217723846436
    7. ' espace' → logprob: -3.5450217723846436
    8. 'indent' → logprob: -3.6700217723846436
    9. ' strict' → logprob: -4.0450215339660645
    10. ' passage' → logprob: -4.1700215339660645

Token 144: ' décr' (ID: 123041)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20911215245723724
    2. ' d' → logprob: -1.8341121673583984
    3. ' des' → logprob: -4.334112167358398
    4. ' du' → logprob: -4.834112167358398
    5. 'de' → logprob: -5.459112167358398
    6. '   ' → logprob: -6.959112167358398
    7. ' complète' → logprob: -7.459112167358398
    8. ' of' → logprob: -7.584112167358398
    9. 'd' → logprob: -7.834112167358398
    10. ' strict' → logprob: -8.584112167358398

Token 145: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.3650769889354706
    2. 'ément' → logprob: -1.740077018737793
    3. 'it' → logprob: -2.615077018737793
    4. 'et' → logprob: -3.740077018737793
    5. 'êt' → logprob: -4.490077018737793
    6. 'ét' → logprob: -4.865077018737793
    7. 'ement' → logprob: -5.365077018737793
    8. 'ent' → logprob: -6.240077018737793
    9. 'été' → logprob: -6.990077018737793
    10. 'ité' → logprob: -7.240077018737793

Token 146: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016917560249567032
    2. '.' → logprob: -5.266917705535889
    3. ':' → logprob: -5.266917705535889
    4. ',' → logprob: -5.516917705535889
    5. 'def' → logprob: -7.766917705535889
    6. ' ' → logprob: -7.891917705535889
    7. ' :' → logprob: -7.891917705535889
    8. '       ' → logprob: -8.14191722869873
    9. '):' → logprob: -8.39191722869873
    10. '```' → logprob: -8.76691722869873

Token 147: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.27488598227500916
    2. 'la' → logprob: -2.149885892868042
    3. 'le' → logprob: -2.649885892868042
    4. ' le' → logprob: -3.274885892868042
    5. ' votre' → logprob: -5.274886131286621
    6. 'l' → logprob: -6.149886131286621
    7. '```' → logprob: -6.524886131286621
    8. 'les' → logprob: -6.649886131286621
    9. 'une' → logprob: -6.649886131286621
    10. 'len' → logprob: -7.024886131286621

Token 148: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.0011076927185059
    2. 'doc' → logprob: -1.1261076927185059
    3. 'code' → logprob: -1.8761076927185059
    4. ' doc' → logprob: -3.126107692718506
    5. ' commentaire' → logprob: -3.251107692718506
    6. 'comment' → logprob: -3.376107692718506
    7. 'def' → logprob: -4.501107692718506
    8. 'fonction' → logprob: -4.751107692718506
    9. '```' → logprob: -6.001107692718506
    10. 'texte' → logprob: -6.251107692718506

Token 149: ' original' (ID: 4756)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06875913590192795
    2. '   ' → logprob: -3.0687592029571533
    3. ':
' → logprob: -4.318758964538574
    4. ')' → logprob: -6.568758964538574
    5. ' :' → logprob: -6.568758964538574
    6. ',' → logprob: -7.193758964538574
    7. '):' → logprob: -7.318758964538574
    8. '\n' → logprob: -7.443758964538574
    9. '
' → logprob: -8.193758964538574
    10. 'def' → logprob: -8.318758964538574

Token 150: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3000799417495728
    2. ':
' → logprob: -1.3000799417495728
    3. ':' → logprob: -1.9250799417495728
    4. '
' → logprob: -2.050079822540283
    5. '\n' → logprob: -2.175079822540283
    6. '```' → logprob: -3.675079822540283
    7. '):
' → logprob: -4.925079822540283
    8. ' 
' → logprob: -5.050079822540283
    9. 'def' → logprob: -5.425079822540283
    10. '  
' → logprob: -5.550079822540283

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019081229344010353
    2. '"""' → logprob: -4.644081115722656
    3. '"""
' → logprob: -5.144081115722656
    4. ')' → logprob: -6.894081115722656
    5. ' """
' → logprob: -7.269081115722656
    6. '```' → logprob: -7.269081115722656
    7. 'def' → logprob: -8.269081115722656
    8. ' """' → logprob: -8.519081115722656
    9. ')
' → logprob: -9.019081115722656
    10. ' 
' → logprob: -9.269081115722656

Token 152: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009306679479777813
    2. ')' → logprob: -5.884306907653809
    3. '"""' → logprob: -5.884306907653809
    4. 'def' → logprob: -6.759306907653809
    5. 'n' → logprob: -7.384306907653809
    6. '"""
' → logprob: -7.634306907653809
    7. '
' → logprob: -8.259306907653809
    8. 'result' → logprob: -8.259306907653809
    9. '```' → logprob: -8.259306907653809
    10. '    
' → logprob: -8.384306907653809

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6044992208480835
    2. ',' → logprob: -0.8544992208480835
    3. '):' → logprob: -4.104499340057373
    4. ' :' → logprob: -5.229499340057373
    5. '   ' → logprob: -5.979499340057373
    6. '=' → logprob: -6.229499340057373
    7. ')' → logprob: -7.354499340057373
    8. '(n' → logprob: -8.104498863220215
    9. '):
' → logprob: -9.104498863220215
    10. ' ,' → logprob: -9.229498863220215

Token 154: '       ' (ID: 309)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.022538943216204643
    2. '    ' → logprob: -4.647539138793945
    3. 'n' → logprob: -4.772539138793945
    4. '   ' → logprob: -5.897539138793945
    5. ' ' → logprob: -7.272539138793945
    6. ' ' → logprob: -7.772539138793945
    7. ' 
' → logprob: -9.022539138793945
    8. ' def' → logprob: -9.897539138793945
    9. '   ' → logprob: -10.397539138793945
    10. '     
' → logprob: -10.397539138793945

Token 155: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.010570446029305458
    2. 'self' → logprob: -5.010570526123047
    3. '   ' → logprob: -5.760570526123047
    4. ' n' → logprob: -7.760570526123047
    5. 'int' → logprob: -8.385570526123047
    6. ' self' → logprob: -10.135570526123047
    7. '       ' → logprob: -12.760570526123047
    8. '
' → logprob: -14.760570526123047
    9. '	n' → logprob: -15.135570526123047
    10. '```' → logprob: -15.135570526123047

Token 156: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2526419460773468
    2. ':int' → logprob: -1.8776419162750244
    3. '):' → logprob: -2.7526419162750244
    4. ',' → logprob: -6.3776421546936035
    5. ')' → logprob: -7.0026421546936035
    6. ' int' → logprob: -7.0026421546936035
    7. 'int' → logprob: -7.1276421546936035
    8. '(int' → logprob: -7.2526421546936035
    9. '<|end|>' → logprob: -7.6276421546936035
    10. ' :' → logprob: -8.002641677856445

Token 157: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031808018684387207
    2. ' int' → logprob: -5.753180980682373
    3. ')' → logprob: -13.503180503845215
    4. '   ' → logprob: -14.003180503845215
    5. '[int' → logprob: -14.753180503845215
    6. '):' → logprob: -15.628180503845215
    7. ':int' → logprob: -16.25318145751953
    8. 'List' → logprob: -16.75318145751953
    9. '=int' → logprob: -17.37818145751953
    10. '```' → logprob: -18.12818145751953

Token 158: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47490742802619934
    2. ')' → logprob: -0.974907398223877
    3. ',' → logprob: -7.974907398223877
    4. '):
' → logprob: -8.474907875061035
    5. '),' → logprob: -8.599907875061035
    6. '<|end|>' → logprob: -10.349907875061035
    7. '   ' → logprob: -10.849907875061035
    8. ' ):' → logprob: -11.224907875061035
    9. '):

' → logprob: -12.224907875061035
    10. ':' → logprob: -12.349907875061035

Token 159: ' Taille' (ID: 174124)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.9812507033348083
    2. ' la' → logprob: -1.7312507629394531
    3. 'La' → logprob: -1.7312507629394531
    4. ' int' → logprob: -2.106250762939453
    5. ' Le' → logprob: -3.481250762939453
    6. ' nombre' → logprob: -3.731250762939453
    7. 'int' → logprob: -3.731250762939453
    8. ' Nombre' → logprob: -3.856250762939453
    9. 'Nombre' → logprob: -4.106250762939453
    10. '   ' → logprob: -4.981250762939453

Token 160: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2890776991844177
    2. '   ' → logprob: -1.7890777587890625
    3. ')' → logprob: -3.1640777587890625
    4. ',' → logprob: -4.6640777587890625
    5. '<|end|>' → logprob: -4.7890777587890625
    6. 'de' → logprob: -5.2890777587890625
    7. ' ' → logprob: -5.4140777587890625
    8. ' du' → logprob: -5.6640777587890625
    9. ' a' → logprob: -6.0390777587890625
    10. ' )' → logprob: -6.1640777587890625

Token 161: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.23652337491512299
    2. 'a' → logprob: -2.111523389816284
    3. ' a' → logprob: -2.486523389816284
    4. 'la' → logprob: -5.486523151397705
    5. ' l' → logprob: -6.611523151397705
    6. 'l' → logprob: -7.486523151397705
    7. ' ' → logprob: -8.986523628234863
    8. 'n' → logprob: -9.861523628234863
    9. ' n' → logprob: -9.986523628234863
    10. ')' → logprob: -10.361523628234863

Token 162: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06602470576763153
    2. 'liste' → logprob: -3.1910247802734375
    3. ' liste' → logprob: -4.6910247802734375
    4. ' a' → logprob: -4.6910247802734375
    5. 'list' → logprob: -5.9410247802734375
    6. ' tableau' → logprob: -7.0660247802734375
    7. ' list' → logprob: -7.8160247802734375
    8. 'array' → logprob: -9.191024780273438
    9. 'table' → logprob: -9.191024780273438
    10. ' ' → logprob: -9.566024780273438

Token 163: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0213477611541748
    2. ',' → logprob: -1.0213477611541748
    3. '   ' → logprob: -1.3963477611541748
    4. 'a' → logprob: -4.521347999572754
    5. '):' → logprob: -4.771347999572754
    6. '<|end|>' → logprob: -6.021347999572754
    7. ' a' → logprob: -6.146347999572754
    8. ' )' → logprob: -6.396347999572754
    9. ' ,' → logprob: -6.521347999572754
    10. '),' → logprob: -7.146347999572754

Token 164: ''ent' (ID: 53422)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6545924544334412
    2. ' a' → logprob: -1.154592514038086
    3. ''a' → logprob: -2.154592514038086
    4. 'e' → logprob: -3.779592514038086
    5. ''ent' → logprob: -4.529592514038086
    6. 'es' → logprob: -5.404592514038086
    7. ''' → logprob: -5.904592514038086
    8. ' '' → logprob: -6.154592514038086
    9. ')' → logprob: -6.904592514038086
    10. '   ' → logprob: -7.529592514038086

Token 165: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.06721939146518707
    2. 'r' → logprob: -3.5672194957733154
    3. 'ières' → logprob: -4.442219257354736
    4. 'rée' → logprob: -4.567219257354736
    5. 'rees' → logprob: -5.567219257354736
    6. 'ré' → logprob: -5.817219257354736
    7. '   ' → logprob: -5.942219257354736
    8. 'ier' → logprob: -6.567219257354736
    9. 'ités' → logprob: -6.567219257354736
    10. 'rés' → logprob: -7.317219257354736

Token 166: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25363048911094666
    2. ')' → logprob: -2.3786303997039795
    3. ',' → logprob: -2.7536303997039795
    4. '):' → logprob: -3.0036303997039795
    5. '):
' → logprob: -4.253630638122559
    6. ',
' → logprob: -6.378630638122559
    7. '),' → logprob: -7.003630638122559
    8. '```' → logprob: -8.003630638122559
    9. '
' → logprob: -8.128630638122559
    10. '       ' → logprob: -8.503630638122559

Token 167: ' analyser' (ID: 104487)
  Prédit: ' traiter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traiter' → logprob: -0.06233479082584381
    2. 'trait' → logprob: -3.5623347759246826
    3. ' analyser' → logprob: -3.8123347759246826
    4. 'tr' → logprob: -5.312335014343262
    5. 'an' → logprob: -6.437335014343262
    6. 'tra' → logprob: -7.437335014343262
    7. '   ' → logprob: -7.437335014343262
    8. ' parcour' → logprob: -7.562335014343262
    9. 'sup' → logprob: -8.312335014343262
    10. ' supprimer' → logprob: -8.562335014343262

Token 168: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10664473474025726
    2. '   ' → logprob: -2.856644630432129
    3. ',' → logprob: -3.231644630432129
    4. '):' → logprob: -6.481644630432129
    5. '),' → logprob: -6.731644630432129
    6. '```' → logprob: -7.606644630432129
    7. ')
' → logprob: -8.106644630432129
    8. '):
' → logprob: -8.356644630432129
    9. '<|end|>' → logprob: -8.856644630432129
    10. ',
' → logprob: -9.106644630432129

Token 169: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008100789040327072
    2. '       ' → logprob: -5.883100986480713
    3. ')' → logprob: -6.133100986480713
    4. '```' → logprob: -6.508100986480713
    5. '
' → logprob: -6.883100986480713
    6. 'a' → logprob: -8.633100509643555
    7. '    ' → logprob: -9.133100509643555
    8. '    
' → logprob: -9.258100509643555
    9. ' a' → logprob: -10.133100509643555
    10. ',' → logprob: -10.258100509643555

Token 170: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0003843173326458782
    2. '   ' → logprob: -8.500384330749512
    3. ' a' → logprob: -8.625384330749512
    4. '```' → logprob: -13.875384330749512
    5. '       ' → logprob: -15.125384330749512
    6. ' ' → logprob: -17.375383377075195
    7. '	a' → logprob: -17.500383377075195
    8. '
' → logprob: -17.625383377075195
    9. '    ' → logprob: -17.750383377075195
    10. '  ' → logprob: -17.875383377075195

Token 171: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024991851300001144
    2. '):' → logprob: -3.899991750717163
    3. ')' → logprob: -6.024991989135742
    4. ' :' → logprob: -6.774991989135742
    5. '):
' → logprob: -7.649991989135742
    6. ',' → logprob: -8.899991989135742
    7. '   ' → logprob: -9.899991989135742
    8. '[' → logprob: -9.899991989135742
    9. ' ):' → logprob: -10.149991989135742
    10. ':list' → logprob: -10.399991989135742

Token 172: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4817959666252136
    2. 'List' → logprob: -0.9817959666252136
    3. ' list' → logprob: -4.981795787811279
    4. ' List' → logprob: -7.231795787811279
    5. ')' → logprob: -9.856796264648438
    6. '   ' → logprob: -10.231796264648438
    7. ' )' → logprob: -11.981796264648438
    8. 'int' → logprob: -12.856796264648438
    9. '[List' → logprob: -12.856796264648438
    10. '```' → logprob: -13.481796264648438

Token 173: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.04377241060137749
    2. '):' → logprob: -3.1687724590301514
    3. '<int' → logprob: -8.16877269744873
    4. '):
' → logprob: -8.41877269744873
    5. ')' → logprob: -8.79377269744873
    6. '[' → logprob: -9.91877269744873
    7. '```' → logprob: -10.29377269744873
    8. ' of' → logprob: -11.29377269744873
    9. '(int' → logprob: -11.79377269744873
    10. '   ' → logprob: -12.66877269744873

Token 174: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011048882268369198
    2. ' int' → logprob: -4.511048793792725
    3. 'ints' → logprob: -14.761049270629883
    4. '[int' → logprob: -15.386049270629883
    5. ')' → logprob: -16.011049270629883
    6. '   ' → logprob: -16.386049270629883
    7. '```' → logprob: -16.886049270629883
    8. ' ints' → logprob: -17.136049270629883
    9. '<int' → logprob: -17.386049270629883
    10. ']int' → logprob: -17.636049270629883

Token 175: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15019194781780243
    2. ')' → logprob: -2.4001920223236084
    3. ']):' → logprob: -3.1501920223236084
    4. '>):' → logprob: -6.400191783905029
    5. ' ):' → logprob: -6.650191783905029
    6. '   ' → logprob: -7.525191783905029
    7. '[int' → logprob: -7.525191783905029
    8. '):
' → logprob: -8.150192260742188
    9. '>' → logprob: -8.150192260742188
    10. ''):' → logprob: -8.525192260742188

Token 176: ' Liste' (ID: 61030)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -1.2333329916000366
    2. 'List' → logprob: -1.4833329916000366
    3. ' List' → logprob: -1.6083329916000366
    4. '   ' → logprob: -1.7333329916000366
    5. 'La' → logprob: -2.858333110809326
    6. ' list' → logprob: -3.858333110809326
    7. ' Liste' → logprob: -4.858333110809326
    8. ')' → logprob: -4.858333110809326
    9. 'Liste' → logprob: -5.608333110809326
    10. ' la' → logprob: -5.858333110809326

Token 177: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.9015122056007385
    2. ' des' → logprob: -1.2765121459960938
    3. ' d' → logprob: -1.9015121459960938
    4. '):' → logprob: -2.9015121459960938
    5. ')' → logprob: -3.0265121459960938
    6. '   ' → logprob: -4.026512145996094
    7. ' de' → logprob: -4.651512145996094
    8. ' of' → logprob: -4.776512145996094
    9. ':' → logprob: -4.901512145996094
    10. '):
' → logprob: -5.276512145996094

Token 178: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.11351053416728973
    2. ''' → logprob: -2.4885106086730957
    3. ''int' → logprob: -5.488510608673096
    4. 'es' → logprob: -5.613510608673096
    5. ' integers' → logprob: -5.863510608673096
    6. ''esp' → logprob: -5.863510608673096
    7. ''espace' → logprob: -6.113510608673096
    8. '<int' → logprob: -7.113510608673096
    9. ''é' → logprob: -7.238510608673096
    10. '[int' → logprob: -7.363510608673096

Token 179: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0033021201379597187
    2. 'ières' → logprob: -5.878302097320557
    3. 'ier' → logprob: -8.128302574157715
    4. '   ' → logprob: -9.128302574157715
    5. 'i' → logprob: -10.378302574157715
    6. '```' → logprob: -10.503302574157715
    7. 'ière' → logprob: -11.253302574157715
    8. 't' → logprob: -11.878302574157715
    9. 'ieres' → logprob: -13.253302574157715
    10. 'ités' → logprob: -13.503302574157715

Token 180: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12035004049539566
    2. '   ' → logprob: -2.6203501224517822
    3. '):
' → logprob: -3.3703501224517822
    4. ')' → logprob: -5.370349884033203
    5. ' ):' → logprob: -7.120349884033203
    6. ',' → logprob: -8.245349884033203
    7. '):
' → logprob: -9.370349884033203
    8. ':' → logprob: -9.620349884033203
    9. '  ' → logprob: -9.620349884033203
    10. ' ):
' → logprob: -10.120349884033203

Token 181: ' traiter' (ID: 105852)
  Prédit: ' analyser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' analyser' → logprob: -0.3915539085865021
    2. 'an' → logprob: -1.3915538787841797
    3. 'sup' → logprob: -3.3915538787841797
    4. 'None' → logprob: -4.26655387878418
    5. ' supprimer' → logprob: -4.26655387878418
    6. ' None' → logprob: -4.89155387878418
    7. 'Analy' → logprob: -6.64155387878418
    8. 'len' → logprob: -7.01655387878418
    9. ' analys' → logprob: -7.26655387878418
    10. 'a' → logprob: -7.76655387878418

Token 182: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5417090058326721
    2. '   ' → logprob: -1.4167089462280273
    3. '):' → logprob: -1.7917089462280273
    4. ')' → logprob: -4.916708946228027
    5. '```' → logprob: -6.541708946228027
    6. '):
' → logprob: -9.041708946228027
    7. '
' → logprob: -10.166708946228027
    8. '"""
' → logprob: -10.541708946228027
    9. '"""' → logprob: -10.791708946228027
    10. ',' → logprob: -11.166708946228027

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019940264523029327
    2. ')' → logprob: -4.394940376281738
    3. '"""' → logprob: -5.394940376281738
    4. 'Returns' → logprob: -7.144940376281738
    5. '"""
' → logprob: -7.269940376281738
    6. ' """
' → logprob: -7.644940376281738
    7. ' """' → logprob: -8.144940376281738
    8. '
' → logprob: -9.394940376281738
    9. 'def' → logprob: -9.519940376281738
    10. '```' → logprob: -9.519940376281738

Token 184: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1203291118144989
    2. ')' → logprob: -2.6203291416168213
    3. '"""' → logprob: -3.9953291416168213
    4. '"""
' → logprob: -4.245328903198242
    5. 'def' → logprob: -5.995328903198242
    6. 'Returns' (adapté à ' Returns') → logprob: -6.495328903198242
    7. '```' → logprob: -7.370328903198242
    8. ')
' → logprob: -7.370328903198242
    9. ' """
' → logprob: -7.495328903198242
    10. '
' → logprob: -7.995328903198242

Token 185: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6981257796287537
    2. ' :' → logprob: -0.6981257796287537
    3. ' a' → logprob: -6.573125839233398
    4. ':int' → logprob: -6.948125839233398
    5. ' int' → logprob: -7.573125839233398
    6. 'a' → logprob: -7.823125839233398
    7. '<|end|>' → logprob: -7.948125839233398
    8. 'int' → logprob: -8.073125839233398
    9. ' ' → logprob: -8.823125839233398
    10. '  ' → logprob: -9.198125839233398

Token 186: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1793360710144043
    2. ' n' → logprob: -1.1793360710144043
    3. ' count' → logprob: -1.8043360710144043
    4. ' int' → logprob: -2.0543360710144043
    5. ' counter' → logprob: -3.0543360710144043
    6. 'n' → logprob: -4.054336071014404
    7. 'int' → logprob: -4.429336071014404
    8. 'count' → logprob: -4.929336071014404
    9. ' compteur' → logprob: -6.429336071014404
    10. ' result' → logprob: -6.554336071014404

Token 187: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.02335507422685623
    2. ' int' → logprob: -3.773355007171631
    3. '   ' → logprob: -9.148355484008789
    4. '(int' → logprob: -12.898355484008789
    5. '
' → logprob: -15.148355484008789
    6. 'count' → logprob: -15.898355484008789
    7. '[int' → logprob: -16.89835548400879
    8. 'tuple' → logprob: -17.39835548400879
    9. 'result' → logprob: -17.52335548400879
    10. 'n' → logprob: -17.52335548400879

Token 188: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.037657659500837326
    2. ' :' → logprob: -3.4126577377319336
    3. '   ' → logprob: -5.912657737731934
    4. '):' → logprob: -7.912657737731934
    5. ')' → logprob: -8.287657737731934
    6. ':return' → logprob: -8.912657737731934
    7. '<|end|>' → logprob: -9.412657737731934
    8. ':
' → logprob: -9.787657737731934
    9. ' ):' → logprob: -9.912657737731934
    10. ' )' → logprob: -9.912657737731934

Token 189: ' Nombre' (ID: 70208)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.2293881177902222
    2. ' nombre' → logprob: -1.2293881177902222
    3. ' Le' → logprob: -1.6043881177902222
    4. ' count' → logprob: -2.7293882369995117
    5. ' counter' → logprob: -2.9793882369995117
    6. ' compteur' → logprob: -3.3543882369995117
    7. ' res' → logprob: -4.104388236999512
    8. 'Le' → logprob: -4.479388236999512
    9. ' nb' → logprob: -4.854388236999512
    10. ' result' → logprob: -5.104388236999512

Token 190: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3811102509498596
    2. '_des' → logprob: -1.5061101913452148
    3. '_operations' → logprob: -2.756110191345215
    4. ' des' → logprob: -5.506110191345215
    5. '_ops' → logprob: -5.631110191345215
    6. '_d' → logprob: -5.756110191345215
    7. '_total' → logprob: -6.006110191345215
    8. ')' → logprob: -6.131110191345215
    9. ' _' → logprob: -6.256110191345215
    10. '_a' → logprob: -6.381110191345215

Token 191: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.17104285955429077
    2. ' des' → logprob: -2.9210429191589355
    3. '_des' → logprob: -3.0460429191589355
    4. ' de' → logprob: -4.0460429191589355
    5. '_' → logprob: -4.2960429191589355
    6. '_operations' → logprob: -4.5460429191589355
    7. '   ' → logprob: -5.6710429191589355
    8. '_d' → logprob: -5.6710429191589355
    9. ')' → logprob: -6.1710429191589355
    10. ' ' → logprob: -7.1710429191589355

Token 192: ' motifs' (ID: 89637)
  Prédit: ' suppress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suppress' → logprob: -0.6201689839363098
    2. ' opérations' → logprob: -0.8701689839363098
    3. ' operations' → logprob: -4.245169162750244
    4. 'operations' → logprob: -4.245169162750244
    5. 'op' → logprob: -4.995169162750244
    6. ' op' → logprob: -6.245169162750244
    7. ' ' → logprob: -6.745169162750244
    8. ' suppression' → logprob: -6.995169162750244
    9. 'supp' → logprob: -7.120169162750244
    10. '```' → logprob: -7.620169162750244

Token 193: ' trouv' (ID: 40254)
  Prédit: '_detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_detect' → logprob: -0.12376955896615982
    2. '_sup' → logprob: -3.373769521713257
    3. '_' → logprob: -3.498769521713257
    4. '_removed' → logprob: -4.248769760131836
    5. ' supprim' → logprob: -4.748769760131836
    6. '_s' → logprob: -4.748769760131836
    7. '_tr' → logprob: -5.373769760131836
    8. '   ' → logprob: -6.248769760131836
    9. '_remove' → logprob: -6.498769760131836
    10. '_ident' → logprob: -6.498769760131836

Token 194: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.000496436667162925
    2. 'é' → logprob: -8.125496864318848
    3. 'es' → logprob: -8.625496864318848
    4. 's' → logprob: -10.875496864318848
    5. 'e' → logprob: -13.750496864318848
    6. '```' → logprob: -14.375496864318848
    7. ')' → logprob: -16.37549591064453
    8. 'ées' → logprob: -16.62549591064453
    9. 'ÉS' → logprob: -17.00049591064453
    10. '=' → logprob: -17.00049591064453

Token 195: ' correspondant' (ID: 146058)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3133239150047302
    2. '   ' → logprob: -1.563323974609375
    3. '.' → logprob: -3.563323974609375
    4. '```' → logprob: -4.938323974609375
    5. ':' → logprob: -5.063323974609375
    6. ',' → logprob: -5.563323974609375
    7. ':
' → logprob: -5.938323974609375
    8. '\n' → logprob: -5.938323974609375
    9. '.
' → logprob: -6.063323974609375
    10. ')' → logprob: -6.313323974609375

Token 196: ' aux' (ID: 5850)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.12698626518249512
    2. ' aux' → logprob: -3.001986265182495
    3. ' au' → logprob: -3.251986265182495
    4. ' =' → logprob: -4.626986503601074
    5. ' to' → logprob: -5.876986503601074
    6. '   ' → logprob: -5.876986503601074
    7. ' a' → logprob: -5.876986503601074
    8. ')' → logprob: -6.126986503601074
    9. ' ' → logprob: -6.126986503601074
    10. '=' → logprob: -6.501986503601074

Token 197: ' critères' (ID: 105569)
  Prédit: ' suppress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suppress' → logprob: -0.31325384974479675
    2. ' motifs' → logprob: -1.4382538795471191
    3. ' patterns' → logprob: -4.063253879547119
    4. ' opérations' → logprob: -4.813253879547119
    5. ' suppression' → logprob: -6.438253879547119
    6. 'patterns' → logprob: -6.813253879547119
    7. 'supp' → logprob: -7.313253879547119
    8. ' éléments' → logprob: -7.813253879547119
    9. '"' → logprob: -7.938253879547119
    10. ' sup' → logprob: -8.063253402709961

Token 198: ' ci' (ID: 7405)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41007980704307556
    2. '
' → logprob: -1.535079836845398
    3. '.
' → logprob: -3.5350797176361084
    4. '):
' → logprob: -3.7850797176361084
    5. '```' → logprob: -3.9100797176361084
    6. '.' → logprob: -4.4100799560546875
    7. ':
' → logprob: -4.4100799560546875
    8. '    
' → logprob: -4.7850799560546875
    9. '"""
' → logprob: -5.7850799560546875
    10. '\n' → logprob: -6.4100799560546875

Token 199: '-dessus' (ID: 74812)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.10318883508443832
    2. 'n' → logprob: -3.3531887531280518
    3. 't' → logprob: -3.4781887531280518
    4. 'ts' → logprob: -5.853188991546631
    5. 's' → logprob: -6.103188991546631
    6. 'tr' → logprob: -6.228188991546631
    7. 'd' → logprob: -6.228188991546631
    8. 'r' → logprob: -6.478188991546631
    9. 'té' → logprob: -6.603188991546631
    10. '   ' → logprob: -6.728188991546631

Token 200: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8037099242210388
    2. '   ' → logprob: -1.4287099838256836
    3. ':
' → logprob: -1.4287099838256836
    4. '
' → logprob: -3.6787099838256836
    5. '):
' → logprob: -3.6787099838256836
    6. '):' → logprob: -4.303709983825684
    7. ',' → logprob: -5.803709983825684
    8. '.' → logprob: -5.928709983825684
    9. ')' → logprob: -6.428709983825684
    10. '```' → logprob: -7.303709983825684

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16885098814964294
    2. '
' → logprob: -2.043850898742676
    3. '"""' → logprob: -4.418850898742676
    4. '    
' → logprob: -5.668850898742676
    5. '\n' → logprob: -5.918850898742676
    6. '"""
' → logprob: -6.168850898742676
    7. '```' → logprob: -6.168850898742676
    8. ' 
' → logprob: -6.668850898742676
    9. '  
' → logprob: -6.918850898742676
    10. '   
' → logprob: -7.793850898742676

Token 202: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27196937799453735
    2. '"""' → logprob: -1.5219693183898926
    3. '"""
' → logprob: -4.771969318389893
    4. '
' → logprob: -4.896969318389893
    5. '```' → logprob: -6.646969318389893
    6. ')' → logprob: -7.146969318389893
    7. ' """' → logprob: -7.646969318389893
    8. '    
' → logprob: -8.02196979522705
    9. 'def' → logprob: -8.02196979522705
    10. ' """
' → logprob: -8.39696979522705

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004716703202575445
    2. 'count' → logprob: -5.879716873168945
    3. 'counter' → logprob: -7.879716873168945
    4. ' count' → logprob: -8.004716873168945
    5. ' counter' → logprob: -8.254716873168945
    6. 'result' → logprob: -8.504716873168945
    7. ' result' → logprob: -8.629716873168945
    8. '```' → logprob: -8.754716873168945
    9. ' compteur' → logprob: -8.754716873168945
    10. 'cnt' → logprob: -9.504716873168945

Token 204: ' counter' (ID: 9446)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.18863245844841003
    2. 'res' → logprob: -2.6886324882507324
    3. 'cnt' → logprob: -3.3136324882507324
    4. 'i' → logprob: -3.9386324882507324
    5. 'counter' (adapté à ' counter') → logprob: -4.313632488250732
    6. 'ops' → logprob: -4.938632488250732
    7. 'comp' → logprob: -5.188632488250732
    8. 'op' → logprob: -5.313632488250732
    9. 'ans' → logprob: -5.438632488250732
    10. 'result' → logprob: -5.438632488250732

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001670538098551333
    2. '=' → logprob: -7.0016703605651855
    3. ' +=' → logprob: -7.2516703605651855
    4. '   ' → logprob: -10.001670837402344
    5. ' ' → logprob: -13.001670837402344
    6. '    ' → logprob: -14.251670837402344
    7. ')' → logprob: -15.251670837402344
    8. '+=' → logprob: -15.626670837402344
    9. '  ' → logprob: -15.751670837402344
    10. ' -=' → logprob: -15.876670837402344

Token 206: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008061755215749145
    2. ' ' → logprob: -7.1258063316345215
    3. '   ' → logprob: -13.750805854797363
    4. '1' → logprob: -14.500805854797363
    5. ' ' → logprob: -17.00080680847168
    6. '2' → logprob: -17.68830680847168
    7. '```' → logprob: -17.68830680847168
    8. '  ' → logprob: -17.68830680847168
    9. '-' → logprob: -17.75080680847168
    10. 'int' → logprob: -18.68830680847168

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1186566047836095e-05
    2. ' ' → logprob: -11.000031471252441
    3. '1' → logprob: -11.500031471252441
    4. '2' → logprob: -14.562531471252441
    5. '   ' → logprob: -14.562531471252441
    6. 'n' → logprob: -14.687531471252441
    7. 'len' → logprob: -14.750031471252441
    8. 'int' → logprob: -15.000031471252441
    9. '-' → logprob: -15.062531471252441
    10. '3' → logprob: -15.437531471252441

Token 208: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5917396545410156
    2. '   ' → logprob: -0.8417396545410156
    3. ' for' → logprob: -4.966739654541016
    4. 'for' → logprob: -5.216739654541016
    5. '    
' → logprob: -6.341739654541016
    6. ' i' → logprob: -7.966739654541016
    7. 'i' → logprob: -7.966739654541016
    8. '\n' → logprob: -8.966739654541016
    9. ',' → logprob: -9.091739654541016
    10. '
' → logprob: -9.216739654541016

Token 209: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8279739618301392
    2. 'for' → logprob: -1.2029739618301392
    3. '   ' → logprob: -1.8279739618301392
    4. ' i' → logprob: -2.9529738426208496
    5. ' for' → logprob: -3.0779738426208496
    6. '
' → logprob: -5.82797384262085
    7. ',' → logprob: -8.577974319458008
    8. ',i' → logprob: -8.952974319458008
    9. '    
' → logprob: -9.077974319458008
    10. ' ' → logprob: -9.827974319458008

Token 210: ' Initialise' (ID: 179601)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5197529792785645
    2. ' i' → logprob: -1.1447529792785645
    3. ' for' → logprob: -3.2697529792785645
    4. 'for' → logprob: -3.5197529792785645
    5. '   ' → logprob: -5.1447529792785645
    6. ' ' → logprob: -5.7697529792785645
    7. '0' → logprob: -6.3947529792785645
    8. 'prev' → logprob: -6.6447529792785645
    9. ' n' → logprob: -7.0197529792785645
    10. 'n' → logprob: -7.2697529792785645

Token 211: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08249247074127197
    2. 'i' → logprob: -2.7074923515319824
    3. '   ' → logprob: -4.707492351531982
    4. 'counter' → logprob: -6.707492351531982
    5. ' counter' → logprob: -7.207492351531982
    6. ' ' → logprob: -8.33249282836914
    7. ' le' → logprob: -8.45749282836914
    8. ' for' → logprob: -8.83249282836914
    9. '    ' → logprob: -9.08249282836914
    10. ' l' → logprob: -9.20749282836914

Token 212: ' compteur' (ID: 163344)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.29494789242744446
    2. 'i' → logprob: -1.794947862625122
    3. ' compteur' → logprob: -3.169947862625122
    4. 'counter' → logprob: -3.544947862625122
    5. ' i' → logprob: -5.044948101043701
    6. '   ' → logprob: -5.794948101043701
    7. 'nombre' → logprob: -6.044948101043701
    8. 'c' → logprob: -6.294948101043701
    9. ' counter' → logprob: -6.794948101043701
    10. ' ' → logprob: -7.669948101043701

Token 213: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7634151577949524
    2. '   ' → logprob: -0.7634151577949524
    3. ' for' → logprob: -3.2634150981903076
    4. 'for' → logprob: -4.263415336608887
    5. ' i' → logprob: -4.763415336608887
    6. 'i' → logprob: -5.763415336608887
    7. '    
' → logprob: -6.263415336608887
    8. '\n' → logprob: -7.263415336608887
    9. '
' → logprob: -7.638415336608887
    10. '  
' → logprob: -8.513415336608887

Token 214: ' motifs' (ID: 89637)
  Prédit: ' motifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' motifs' → logprob: -0.8211010694503784
    2. 'i' → logprob: -0.9461010694503784
    3. 'mot' → logprob: -2.946101188659668
    4. ' i' → logprob: -3.571101188659668
    5. 'counter' → logprob: -3.696101188659668
    6. ' counter' → logprob: -4.196101188659668
    7. 'comp' → logprob: -4.321101188659668
    8. ' suppress' → logprob: -5.071101188659668
    9. ' opérations' → logprob: -5.446101188659668
    10. 'patterns' → logprob: -5.571101188659668

Token 215: ' trouv' (ID: 40254)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023847347125411034
    2. '   ' → logprob: -4.523847579956055
    3. '\n' → logprob: -5.273847579956055
    4. '    
' → logprob: -6.023847579956055
    5. '  
' → logprob: -6.398847579956055
    6. ' for' → logprob: -6.898847579956055
    7. 'for' → logprob: -7.023847579956055
    8. '
' → logprob: -7.398847579956055
    9. 'i' → logprob: -8.273847579956055
    10. 'n' → logprob: -8.898847579956055

Token 216: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.004225254990160465
    2. 'é' → logprob: -5.754225254058838
    3. 'es' → logprob: -6.879225254058838
    4. 'u' → logprob: -11.754225730895996
    5. 'us' → logprob: -12.754225730895996
    6. '   ' → logprob: -12.879225730895996
    7. 's' → logprob: -13.254225730895996
    8. '```' → logprob: -14.254225730895996
    9. 'ées' → logprob: -14.254225730895996
    10. '__' → logprob: -14.629225730895996

Token 217: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1422945111989975
    2. '   ' → logprob: -2.267294406890869
    3. 'for' → logprob: -4.142294406890869
    4. ' for' → logprob: -4.767294406890869
    5. '    
' → logprob: -6.267294406890869
    6. '\n' → logprob: -6.517294406890869
    7. '
' → logprob: -7.392294406890869
    8. 'i' → logprob: -8.392294883728027
    9. ' i' → logprob: -9.017294883728027
    10. '  
' → logprob: -9.267294883728027

Token 218: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03427105024456978
    2. ' ' → logprob: -3.409271001815796
    3. '   ' → logprob: -7.784271240234375
    4. '1' → logprob: -8.784271240234375
    5. ' zéro' → logprob: -10.534271240234375
    6. ' zero' → logprob: -11.409271240234375
    7. 'zero' → logprob: -12.409271240234375
    8. '  ' → logprob: -12.659271240234375
    9. 'z' → logprob: -12.909271240234375
    10. '    ' → logprob: -12.909271240234375

Token 219: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15450653433799744
    2. '
' → logprob: -2.1545064449310303
    3. 'for' → logprob: -4.779506683349609
    4. ' for' → logprob: -4.904506683349609
    5. 'i' → logprob: -5.279506683349609
    6. '    
' → logprob: -5.404506683349609
    7. ' i' → logprob: -6.654506683349609
    8. '\n' → logprob: -9.15450668334961
    9. ',' → logprob: -9.40450668334961
    10. '
' → logprob: -9.52950668334961

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05725627392530441
    2. ' for' → logprob: -3.4322562217712402
    3. 'for' → logprob: -4.30725622177124
    4. 'i' → logprob: -5.68225622177124
    5. ' i' → logprob: -5.80725622177124
    6. '
' → logprob: -5.80725622177124
    7. '    
' → logprob: -8.182256698608398
    8. '```' → logprob: -9.432256698608398
    9. '  ' → logprob: -11.057256698608398
    10. ' ' → logprob: -11.057256698608398

Token 221: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.1456328183412552
    2. 'for' → logprob: -2.020632743835449
    3. '   ' → logprob: -6.770632743835449
    4. ' i' → logprob: -7.270632743835449
    5. ' for' → logprob: -8.14563274383545
    6. 'last' → logprob: -8.52063274383545
    7. 'visited' → logprob: -8.89563274383545
    8. 'prev' → logprob: -9.27063274383545
    9. 'used' → logprob: -9.89563274383545
    10. 'previous' → logprob: -10.14563274383545

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012516127899289131
    2. '=' → logprob: -4.387516021728516
    3. ' ' → logprob: -12.637516021728516
    4. ' +=' → logprob: -12.887516021728516
    5. ' =
' → logprob: -15.887516021728516
    6. ' in' → logprob: -16.387516021728516
    7. ')' → logprob: -16.512516021728516
    8. ',' → logprob: -16.887516021728516
    9. ' ,' → logprob: -17.012516021728516
    10. ' =)' → logprob: -17.012516021728516

Token 223: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18762066960334778
    2. '0' → logprob: -2.0626206398010254
    3. ' ' → logprob: -3.1876206398010254
    4. '2' → logprob: -5.937620639801025
    5. 'n' → logprob: -10.687621116638184
    6. ' n' → logprob: -11.437621116638184
    7. '3' → logprob: -13.000121116638184
    8. '   ' → logprob: -13.687621116638184
    9. 'len' → logprob: -13.687621116638184
    10. ' len' → logprob: -14.625121116638184

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2541252672672272
    2. '0' → logprob: -1.5041252374649048
    3. '2' → logprob: -6.129125118255615
    4. ' ' → logprob: -11.879125595092773
    5. '3' → logprob: -12.879125595092773
    6. 'n' → logprob: -13.254125595092773
    7. 'len' → logprob: -13.379125595092773
    8. '```' → logprob: -13.879125595092773
    9. '-' → logprob: -14.191625595092773
    10. '   ' → logprob: -15.879125595092773

Token 225: '      ' (ID: 1699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00242262938991189
    2. '<|end|>' → logprob: -7.00242280960083
    3. '   ' → logprob: -7.50242280960083
    4. ' 
' → logprob: -8.252422332763672
    5. '    
' → logprob: -8.377422332763672
    6. '  
' → logprob: -8.752422332763672
    7. 'while' → logprob: -9.502422332763672
    8. ' while' → logprob: -9.877422332763672
    9. ' ' → logprob: -10.377422332763672
    10. '<|end|>' → logprob: -10.752422332763672

Token 226: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0019156687194481492
    2. 'while' → logprob: -6.376915454864502
    3. '<|end|>' → logprob: -8.87691593170166
    4. ' while' → logprob: -10.25191593170166
    5. '    
' → logprob: -11.62691593170166
    6. '  
' → logprob: -12.00191593170166
    7. '

' → logprob: -12.37691593170166
    8. ' 
' → logprob: -12.62691593170166
    9. '
' → logprob: -12.75191593170166
    10. ')' → logprob: -12.87691593170166

Token 227: ' Comm' (ID: 57464)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5584946274757385
    2. 'while' → logprob: -0.9334946274757385
    3. 'i' → logprob: -3.8084945678710938
    4. ' i' → logprob: -4.558494567871094
    5. 'While' → logprob: -6.808494567871094
    6. '0' → logprob: -7.558494567871094
    7. ' While' → logprob: -8.683494567871094
    8. '1' → logprob: -8.808494567871094
    9. ' ' → logprob: -9.933494567871094
    10. '2' → logprob: -10.683494567871094

Token 228: 'ence' (ID: 1082)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.03286367654800415
    2. 'ence' → logprob: -3.7828636169433594
    3. 'e' → logprob: -4.782863616943359
    4. 'ente' → logprob: -7.907863616943359
    5. 'enter' → logprob: -8.28286361694336
    6. 'en' → logprob: -8.90786361694336
    7. 'encer' → logprob: -9.28286361694336
    8. 'enç' → logprob: -9.90786361694336
    9. ' ent' → logprob: -10.15786361694336
    10. '=' → logprob: -10.78286361694336

Token 229: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5521107912063599
    2. ' à' → logprob: -1.6771107912063599
    3. ' ' → logprob: -1.9271107912063599
    4. ')' → logprob: -3.0521106719970703
    5. 'i' → logprob: -4.42711067199707
    6. ' a' → logprob: -4.55211067199707
    7. ' )' → logprob: -5.55211067199707
    8. '    ' → logprob: -6.05211067199707
    9. ' while' → logprob: -6.05211067199707
    10. '<|end|>' → logprob: -6.17711067199707

Token 230: ''analyse' (ID: 187692)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34901002049446106
    2. ' i' → logprob: -1.4740099906921387
    3. 'a' → logprob: -3.3490099906921387
    4. 'n' → logprob: -3.8490099906921387
    5. ' a' → logprob: -6.099009990692139
    6. ' ' → logprob: -6.474009990692139
    7. 'e' → logprob: -6.599009990692139
    8. ' n' → logprob: -6.849009990692139
    9. '`' → logprob: -7.599009990692139
    10. '=' → logprob: -7.599009990692139

Token 231: ' à' (ID: 1221)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8424261808395386
    2. ' while' → logprob: -1.4674261808395386
    3. '   ' → logprob: -1.7174261808395386
    4. '
' → logprob: -2.092426300048828
    5. '<|end|>' → logprob: -3.717426300048828
    6. '    
' → logprob: -5.717426300048828
    7. '  ' → logprob: -6.592426300048828
    8. '    ' → logprob: -6.842426300048828
    9. '	while' → logprob: -6.967426300048828
    10. ' ' → logprob: -6.967426300048828

Token 232: ' partir' (ID: 12100)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4678964614868164
    2. '1' → logprob: -1.8428964614868164
    3. 'i' → logprob: -1.8428964614868164
    4. ' ' → logprob: -3.3428964614868164
    5. '2' → logprob: -3.8428964614868164
    6. ' len' → logprob: -10.092896461486816
    7. '0' → logprob: -10.217896461486816
    8. '   ' → logprob: -10.467896461486816
    9. 'len' → logprob: -10.967896461486816
    10. ' while' → logprob: -11.092896461486816

Token 233: ' du' (ID: 1462)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03395214304327965
    2. '   ' → logprob: -4.033952236175537
    3. '    ' → logprob: -5.783952236175537
    4. 'i' → logprob: -5.783952236175537
    5. ' len' → logprob: -5.783952236175537
    6. ' de' → logprob: -6.533952236175537
    7. ' ' → logprob: -7.033952236175537
    8. ' la' → logprob: -7.158952236175537
    9. ' a' → logprob: -7.408952236175537
    10. '1' → logprob: -7.783952236175537

Token 234: ' deuxième' (ID: 51664)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24401362240314484
    2. 'i' → logprob: -2.369013547897339
    3. ' i' → logprob: -2.869013547897339
    4. '2' → logprob: -3.244013547897339
    5. ' second' → logprob: -4.244013786315918
    6. ' ' → logprob: -4.744013786315918
    7. 'second' → logprob: -6.994013786315918
    8. ' while' → logprob: -7.494013786315918
    9. 'de' → logprob: -7.869013786315918
    10. 'while' → logprob: -7.994013786315918

Token 235: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.0748614072799683
    2. 'i' → logprob: -1.4498614072799683
    3. ' i' → logprob: -2.324861526489258
    4. ' élément' → logprob: -2.449861526489258
    5. ' ' → logprob: -2.574861526489258
    6. ' token' → logprob: -2.824861526489258
    7. 'token' → logprob: -2.949861526489258
    8. 'element' → logprob: -3.949861526489258
    9. 'indice' → logprob: -4.699861526489258
    10. 'index' → logprob: -4.949861526489258

Token 236: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008121484890580177
    2. '   ' → logprob: -5.758121490478516
    3. '    
' → logprob: -6.758121490478516
    4. '<|end|>' → logprob: -7.008121490478516
    5. '\n' → logprob: -7.258121490478516
    6. 'while' → logprob: -7.633121490478516
    7. ' while' → logprob: -7.883121490478516
    8. ' 
' → logprob: -8.133121490478516
    9. '  
' → logprob: -8.133121490478516
    10. ')' → logprob: -9.258121490478516

Token 237: 'indice' (ID: 176697)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18785850703716278
    2. 'i' → logprob: -2.6878585815429688
    3. ' )' → logprob: -2.8128585815429688
    4. ' i' → logprob: -3.1878585815429688
    5. ' while' → logprob: -7.937858581542969
    6. 'n' → logprob: -8.187858581542969
    7. ' len' → logprob: -8.312858581542969
    8. 'while' → logprob: -8.687858581542969
    9. ')i' → logprob: -9.062858581542969
    10. 'len' → logprob: -9.187858581542969

Token 238: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5805696249008179
    2. ')' → logprob: -1.3305696249008179
    3. ' )' → logprob: -2.3305697441101074
    4. ' ' → logprob: -3.3305697441101074
    5. ' i' → logprob: -3.4555697441101074
    6. '0' → logprob: -5.080569744110107
    7. 'i' → logprob: -6.080569744110107
    8. ' =' → logprob: -6.705569744110107
    9. '=' → logprob: -6.955569744110107
    10. '   ' → logprob: -9.08056926727295

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000275040598353371
    2. 'i' → logprob: -9.000274658203125
    3. ')' → logprob: -9.375274658203125
    4. ' ' → logprob: -10.250274658203125
    5. '=' → logprob: -10.875274658203125
    6. ' i' → logprob: -11.875274658203125
    7. '```' → logprob: -12.625274658203125
    8. ' =' → logprob: -14.500274658203125
    9. '`' → logprob: -14.875274658203125
    10. '   ' → logprob: -15.000274658203125

Token 240: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026495016645640135
    2. ')
' → logprob: -6.127649307250977
    3. '   ' → logprob: -7.752649307250977
    4. ' )' → logprob: -10.752649307250977
    5. ' ' → logprob: -13.002649307250977
    6. '
' → logprob: -13.377649307250977
    7. ',' → logprob: -13.627649307250977
    8. ')

' → logprob: -13.627649307250977
    9. ')i' → logprob: -13.627649307250977
    10. '')' → logprob: -14.127649307250977

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3015601336956024
    2. 'while' → logprob: -1.5515601634979248
    3. ' while' → logprob: -3.051560163497925
    4. '
' → logprob: -7.051559925079346
    5. '```' → logprob: -8.926560401916504
    6. '    
' → logprob: -9.301560401916504
    7. '	while' → logprob: -10.676560401916504
    8. '    ' → logprob: -11.551560401916504
    9. 'n' → logprob: -13.051560401916504
    10. ' 
' → logprob: -13.301560401916504

Token 242: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -3.833878508885391e-05
    2. '   ' → logprob: -10.875038146972656
    3. ' while' → logprob: -10.875038146972656
    4. '```' → logprob: -15.000038146972656
    5. 'n' → logprob: -16.500038146972656
    6. 'wh' → logprob: -16.750038146972656
    7. '	while' → logprob: -16.875038146972656
    8. 'for' → logprob: -17.500038146972656
    9. 'While' → logprob: -18.000038146972656
    10. '
' → logprob: -18.125038146972656

Token 243: ' Parc' (ID: 68618)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.002527860691770911
    2. ' while' → logprob: -6.002527713775635
    3. '   ' → logprob: -9.877528190612793
    4. '```' → logprob: -14.627528190612793
    5. 'While' → logprob: -15.752528190612793
    6. '
' → logprob: -16.127527236938477
    7. '	while' → logprob: -16.627527236938477
    8. 'for' → logprob: -16.752527236938477
    9. '    ' → logprob: -17.377527236938477
    10. 'wh' → logprob: -17.627527236938477

Token 244: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.18600670993328094
    2. 'ours' → logprob: -1.9360066652297974
    3. 'ourt' → logprob: -3.686006784439087
    4. 'ou' → logprob: -8.686006546020508
    5. 'oure' → logprob: -8.936006546020508
    6. 'ourse' → logprob: -10.436006546020508
    7. 'or' → logprob: -10.686006546020508
    8. '```' → logprob: -11.811006546020508
    9. '   ' → logprob: -12.061006546020508
    10. 'cour' → logprob: -12.686006546020508

Token 245: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44147107005119324
    2. ' while' → logprob: -1.0664710998535156
    3. 'while' → logprob: -5.066471099853516
    4. ' de' → logprob: -6.066471099853516
    5. '    ' → logprob: -6.316471099853516
    6. ' du' → logprob: -7.941471099853516
    7. ' n' → logprob: -8.316471099853516
    8. ' len' → logprob: -8.441471099853516
    9. ' la' → logprob: -8.566471099853516
    10. ' i' → logprob: -8.691471099853516

Token 246: ' liste' (ID: 31719)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.17953874170780182
    2. ' while' → logprob: -1.9295387268066406
    3. 'n' → logprob: -4.554538726806641
    4. 'len' → logprob: -5.929538726806641
    5. 'i' → logprob: -6.304538726806641
    6. 'range' → logprob: -6.554538726806641
    7. ' n' → logprob: -6.804538726806641
    8. ' len' → logprob: -7.804538726806641
    9. ' i' → logprob: -8.17953872680664
    10. ' ' → logprob: -8.30453872680664

Token 247: ' jusqu' (ID: 21961)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6868486404418945
    2. '   ' → logprob: -0.8118486404418945
    3. 'while' → logprob: -3.1868486404418945
    4. ' jusqu' → logprob: -5.3118486404418945
    5. '    ' → logprob: -6.1868486404418945
    6. ' en' → logprob: -6.5618486404418945
    7. ' ' → logprob: -6.8118486404418945
    8. ' until' → logprob: -7.5618486404418945
    9. ' for' → logprob: -8.061848640441895
    10. ' i' → logprob: -8.811848640441895

Token 248: ''à' (ID: 33688)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2833974063396454
    2. ' à' → logprob: -2.0333974361419678
    3. ''à' → logprob: -3.1583974361419678
    4. ' a' → logprob: -3.4083974361419678
    5. '   ' → logprob: -4.283397197723389
    6. 'i' → logprob: -4.783397197723389
    7. '’à' → logprob: -5.283397197723389
    8. ' au' → logprob: -5.908397197723389
    9. ' len' → logprob: -5.908397197723389
    10. 'à' → logprob: -6.658397197723389

Token 249: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12880843877792358
    2. 'n' → logprob: -2.2538084983825684
    3. ' i' → logprob: -4.378808498382568
    4. 'i' → logprob: -6.003808498382568
    5. ' len' → logprob: -7.503808498382568
    6. 'len' → logprob: -8.50380802154541
    7. '   ' → logprob: -9.75380802154541
    8. ' ' → logprob: -11.00380802154541
    9. ' la' → logprob: -12.37880802154541
    10. ' while' → logprob: -12.50380802154541

Token 250: ''avant' (ID: 161711)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.8365975022315979
    2. 'a' → logprob: -1.3365974426269531
    3. 'e' → logprob: -1.7115974426269531
    4. 'n' → logprob: -2.836597442626953
    5. 'i' → logprob: -3.836597442626953
    6. 'ength' → logprob: -4.211597442626953
    7. ' n' → logprob: -4.711597442626953
    8. '   ' → logprob: -4.836597442626953
    9. ' i' → logprob: -5.961597442626953
    10. '=len' → logprob: -6.586597442626953

Token 251: '-' (ID: 12)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.05324403941631317
    2. '-' → logprob: -3.053244113922119
    3. 'der' → logprob: -5.553244113922119
    4. ' dernier' → logprob: -7.303244113922119
    5. ' ' → logprob: -11.178243637084961
    6. ' dernière' → logprob: -11.178243637084961
    7. ' -' → logprob: -11.428243637084961
    8. '   ' → logprob: -11.553243637084961
    9. ' der' → logprob: -11.553243637084961
    10. '```' → logprob: -11.803243637084961

Token 252: 'dern' (ID: 19098)
  Prédit: 'dern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.0023056005593389273
    2. 'der' → logprob: -6.127305507659912
    3. '-' → logprob: -9.50230598449707
    4. ' dernier' → logprob: -10.25230598449707
    5. '   ' → logprob: -12.25230598449707
    6. ' ' → logprob: -13.62730598449707
    7. 'avant' → logprob: -14.00230598449707
    8. '```' → logprob: -14.00230598449707
    9. 'den' → logprob: -14.50230598449707
    10. ' dernière' → logprob: -14.50230598449707

Token 253: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.0018185744993388653
    2. 'ière' → logprob: -7.001818656921387
    3. '-' → logprob: -7.501818656921387
    4. 'der' → logprob: -8.126818656921387
    5. 'i' → logprob: -10.376818656921387
    6. 'nier' → logprob: -11.251818656921387
    7. 'er' → logprob: -11.751818656921387
    8. 'dern' → logprob: -12.251818656921387
    9. 'iere' → logprob: -14.751818656921387
    10. 'ni' → logprob: -15.001818656921387

Token 254: ' élément' (ID: 99627)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9820165038108826
    2. ' ' → logprob: -1.3570165634155273
    3. ' élément' → logprob: -2.2320165634155273
    4. ' element' → logprob: -2.3570165634155273
    5. 'i' → logprob: -3.1070165634155273
    6. ' index' → logprob: -3.2320165634155273
    7. ' a' → logprob: -3.7320165634155273
    8. 'element' → logprob: -4.232016563415527
    9. 'élé' → logprob: -4.857016563415527
    10. 'a' → logprob: -5.107016563415527

Token 255: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04114975035190582
    2. ':' → logprob: -3.416149854660034
    3. ',' → logprob: -6.416149616241455
    4. ':
' → logprob: -6.791149616241455
    5. '
' → logprob: -6.916149616241455
    6. '    ' → logprob: -7.166149616241455
    7. ' :' → logprob: -7.291149616241455
    8. ' while' → logprob: -7.416149616241455
    9. '    
' → logprob: -8.166150093078613
    10. '  ' → logprob: -8.416150093078613

Token 256: ' éviter' (ID: 64013)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.24033136665821075
    2. 'i' → logprob: -2.2403314113616943
    3. ' n' → logprob: -2.8653314113616943
    4. 'n' → logprob: -3.3653314113616943
    5. ' while' → logprob: -4.865331172943115
    6. 'while' → logprob: -5.990331172943115
    7. ' len' → logprob: -5.990331172943115
    8. '   ' → logprob: -6.740331172943115
    9. 'len' → logprob: -6.740331172943115
    10. '    ' → logprob: -8.865331649780273

Token 257: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5338600873947144
    2. ' len' → logprob: -1.0338600873947144
    3. 'i' → logprob: -3.908860206604004
    4. 'len' → logprob: -4.158860206604004
    5. ' n' → logprob: -4.158860206604004
    6. 'n' → logprob: -6.033860206604004
    7. ' la' → logprob: -6.283860206604004
    8. '   ' → logprob: -7.033860206604004
    9. ' ' → logprob: -7.658860206604004
    10. ' le' → logprob: -8.408860206604004

Token 258: ' dépasse' (ID: 165701)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.6471190452575684
    2. ' i' → logprob: -1.5221190452575684
    3. 'len' → logprob: -1.7721190452575684
    4. 'i' → logprob: -3.1471190452575684
    5. ' range' → logprob: -4.022119045257568
    6. 'n' → logprob: -4.772119045257568
    7. ' ' → logprob: -5.147119045257568
    8. ' n' → logprob: -5.397119045257568
    9. ' index' → logprob: -5.772119045257568
    10. 'range' → logprob: -6.397119045257568

Token 259: 'ments' (ID: 1626)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.010259227827191353
    2. 'ments' → logprob: -5.01025915145874
    3. 'pas' → logprob: -6.76025915145874
    4. 'pass' → logprob: -6.88525915145874
    5. 'ement' → logprob: -7.13525915145874
    6. 'r' → logprob: -9.010259628295898
    7. 'p' → logprob: -9.635259628295898
    8. '   ' → logprob: -9.885259628295898
    9. 'de' → logprob: -9.885259628295898
    10. 'rement' → logprob: -10.135259628295898

Token 260: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012059006839990616
    2. ' while' → logprob: -4.887059211730957
    3. ':' → logprob: -6.637059211730957
    4. 'while' → logprob: -7.262059211730957
    5. '    ' → logprob: -7.637059211730957
    6. ' ' → logprob: -7.762059211730957
    7. '    
' → logprob: -8.887059211730957
    8. ',' → logprob: -8.887059211730957
    9. '  ' → logprob: -9.012059211730957
    10. ' en' → logprob: -9.137059211730957

Token 261: ''ind' (ID: 82245)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.8968796730041504
    2. 'indice' → logprob: -1.1468796730041504
    3. 'i' → logprob: -2.2718796730041504
    4. 'l' → logprob: -2.6468796730041504
    5. 'len' → logprob: -3.5218796730041504
    6. 'range' → logprob: -3.5218796730041504
    7. 'la' → logprob: -3.6468796730041504
    8. 'indices' → logprob: -5.89687967300415
    9. '   ' → logprob: -6.02187967300415
    10. ' ' → logprob: -6.27187967300415

Token 262: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.3350333571434021
    2. 'ices' → logprob: -1.9600334167480469
    3. 'ice' → logprob: -1.9600334167480469
    4. 'dex' → logprob: -6.210033416748047
    5. 'exe' → logprob: -8.460033416748047
    6. 'ces' → logprob: -8.960033416748047
    7. '```' → logprob: -9.335033416748047
    8. '
' → logprob: -9.585033416748047
    9. 'ce' → logprob: -10.210033416748047
    10. 'd' → logprob: -10.210033416748047

Token 263: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05678853392601013
    2. ' while' → logprob: -3.431788444519043
    3. 'while' → logprob: -4.181788444519043
    4. '
' → logprob: -5.181788444519043
    5. '    
' → logprob: -7.556788444519043
    6. ':' → logprob: -8.056788444519043
    7. '    ' → logprob: -8.806788444519043
    8. '	while' → logprob: -8.806788444519043
    9. '  ' → logprob: -9.056788444519043
    10. ' 
' → logprob: -9.181788444519043

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010746894404292107
    2. '
' → logprob: -5.385746955871582
    3. ' while' → logprob: -5.760746955871582
    4. '    
' → logprob: -6.260746955871582
    5. 'while' → logprob: -7.510746955871582
    6. '    ' → logprob: -8.635746955871582
    7. ' 
' → logprob: -9.510746955871582
    8. '```' → logprob: -9.635746955871582
    9. '  
' → logprob: -9.760746955871582
    10. ' ' → logprob: -10.885746955871582

Token 265: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4905551075935364
    2. 'while' (adapté à ' while') → logprob: -0.9905551075935364
    3. '   ' → logprob: -4.115555286407471
    4. '	while' → logprob: -11.740554809570312
    5. '    ' → logprob: -12.115554809570312
    6. '
' → logprob: -12.240554809570312
    7. '    
' → logprob: -12.740554809570312
    8. 'While' → logprob: -13.115554809570312
    9. '```' → logprob: -14.115554809570312
    10. 'for' → logprob: -14.740554809570312

Token 266: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00023691373644396663
    2. 'i' → logprob: -8.375236511230469
    3. ' ' → logprob: -12.125236511230469
    4. ' ' → logprob: -14.625236511230469
    5. '    ' → logprob: -15.750236511230469
    6. '	i' → logprob: -16.00023651123047
    7. '(i' → logprob: -16.12523651123047
    8. '   ' → logprob: -17.12523651123047
    9. '  ' → logprob: -18.00023651123047
    10. ' (' → logprob: -18.50023651123047

Token 267: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0326225608587265
    2. '<' → logprob: -3.5326225757598877
    3. ' <=' → logprob: -5.907622337341309
    4. '<=' → logprob: -9.407622337341309
    5. '<len' → logprob: -10.157622337341309
    6. ' ' → logprob: -11.532622337341309
    7. '<n' → logprob: -11.907622337341309
    8. '<size' → logprob: -12.282622337341309
    9. ' <
' → logprob: -13.032622337341309
    10. '   ' → logprob: -14.157622337341309

Token 268: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10032280534505844
    2. 'n' → logprob: -2.350322723388672
    3. ' len' → logprob: -9.850322723388672
    4. 'len' → logprob: -9.975322723388672
    5. ' ' → logprob: -11.475322723388672
    6. '   ' → logprob: -12.600322723388672
    7. '	n' → logprob: -12.975322723388672
    8. '(n' → logprob: -14.850322723388672
    9. '  ' → logprob: -15.100322723388672
    10. '    ' → logprob: -16.475322723388672

Token 269: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6447204947471619
    2. ':' → logprob: -1.3947205543518066
    3. '-' → logprob: -2.1447205543518066
    4. ' and' → logprob: -2.2697205543518066
    5. 'and' → logprob: -5.269720554351807
    6. ' :' → logprob: -6.894720554351807
    7. '   ' → logprob: -7.894720554351807
    8. ' ' → logprob: -8.894720077514648
    9. ':
' → logprob: -9.144720077514648
    10. '):' → logprob: -10.394720077514648

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3319124011322856e-05
    2. ' ' → logprob: -10.750022888183594
    3. '2' → logprob: -13.375022888183594
    4. '
' → logprob: -16.000022888183594
    5. '   ' → logprob: -16.500022888183594
    6. '１' → logprob: -18.125022888183594
    7. '۱' → logprob: -18.687522888183594
    8. '```' → logprob: -18.750022888183594
    9. '  ' → logprob: -18.875022888183594
    10. '

' → logprob: -19.062522888183594

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '2' → logprob: -15.750001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '
' → logprob: -18.625001907348633
    6. '１' → logprob: -19.250001907348633
    7. '۱' → logprob: -19.375001907348633
    8. '  ' → logprob: -20.000001907348633
    9. '```' → logprob: -20.250001907348633
    10. '

' → logprob: -21.000001907348633

Token 272: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007990269223228097
    2. ':
' → logprob: -7.250799179077148
    3. ' :' → logprob: -9.875799179077148
    4. '   ' → logprob: -10.625799179077148
    5. ' and' → logprob: -12.125799179077148
    6. '       ' → logprob: -12.875799179077148
    7. '):' → logprob: -13.250799179077148
    8. ':**' → logprob: -13.625799179077148
    9. '<|end|>' → logprob: -14.625799179077148
    10. 'and' → logprob: -14.625799179077148

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003432930912822485
    2. '   ' → logprob: -6.378432750701904
    3. '<|end|>' → logprob: -7.128432750701904
    4. '    ' → logprob: -7.628432750701904
    5. ' if' → logprob: -9.378433227539062
    6. ' ' → logprob: -9.503433227539062
    7. '        
' → logprob: -9.753433227539062
    8. ' 
' → logprob: -9.753433227539062
    9. ':' → logprob: -10.628433227539062
    10. '        ' → logprob: -10.628433227539062

Token 274: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16151483356952667
    2. '       ' → logprob: -2.5365147590637207
    3. ' if' → logprob: -2.6615147590637207
    4. '   ' → logprob: -9.036515235900879
    5. '```' → logprob: -10.786515235900879
    6. '        
' → logprob: -12.036515235900879
    7. '           ' → logprob: -12.661515235900879
    8. '        ' → logprob: -12.661515235900879
    9. '	if' → logprob: -12.786515235900879
    10. '    ' → logprob: -12.911515235900879

Token 275: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00011069540778407827
    2. ' if' → logprob: -9.625110626220703
    3. '   ' → logprob: -10.500110626220703
    4. '       ' → logprob: -11.125110626220703
    5. 'trip' → logprob: -14.250110626220703
    6. '```' → logprob: -14.375110626220703
    7. 'current' → logprob: -14.750110626220703
    8. 'If' → logprob: -15.500110626220703
    9. '	if' → logprob: -16.625110626220703
    10. '           ' → logprob: -16.750110626220703

Token 276: ' l' (ID: 305)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.006956900469958782
    2. 'a' → logprob: -5.006957054138184
    3. ' ' → logprob: -8.631957054138184
    4. ' (' → logprob: -10.006957054138184
    5. '(a' → logprob: -11.756957054138184
    6. ' i' → logprob: -13.131957054138184
    7. '  ' → logprob: -13.131957054138184
    8. ' ' → logprob: -13.256957054138184
    9. '   ' → logprob: -13.256957054138184
    10. '    ' → logprob: -13.506957054138184

Token 277: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31364333629608154
    2. ' a' → logprob: -1.3136433362960815
    3. '   ' → logprob: -8.938643455505371
    4. 'i' → logprob: -9.688643455505371
    5. 'e' → logprob: -9.688643455505371
    6. ' ' → logprob: -10.313643455505371
    7. '[a' → logprob: -10.813643455505371
    8. ''a' → logprob: -11.188643455505371
    9. '(a' → logprob: -11.688643455505371
    10. ' i' → logprob: -11.813643455505371

Token 278: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004633638076484203
    2. ' a' → logprob: -5.37963342666626
    3. 'i' → logprob: -11.379633903503418
    4. '(a' → logprob: -14.129633903503418
    5. ' i' → logprob: -14.629633903503418
    6. '   ' → logprob: -15.879633903503418
    7. '[a' → logprob: -15.879633903503418
    8. ' ' → logprob: -16.0046329498291
    9. 'ai' → logprob: -16.8796329498291
    10. '	a' → logprob: -17.1296329498291

Token 279: 'ment' (ID: 508)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6154376268386841
    2. 'ment' → logprob: -0.9904376268386841
    3. 'ement' → logprob: -3.3654375076293945
    4. '   ' → logprob: -4.2404375076293945
    5. 'if' → logprob: -4.8654375076293945
    6. 'ément' → logprob: -5.2404375076293945
    7. 'e' → logprob: -5.4904375076293945
    8. 't' → logprob: -5.7404375076293945
    9. ' a' → logprob: -5.7404375076293945
    10. 'm' → logprob: -5.9904375076293945

Token 280: ' courant' (ID: 74694)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.31422337889671326
    2. 'a' → logprob: -2.439223289489746
    3. ' a' → logprob: -2.564223289489746
    4. ' précédent' → logprob: -2.939223289489746
    5. '[' → logprob: -4.064223289489746
    6. 'preced' → logprob: -4.564223289489746
    7. 's' → logprob: -5.064223289489746
    8. ' [' → logprob: -5.689223289489746
    9. ' i' → logprob: -5.939223289489746
    10. '[a' → logprob: -6.189223289489746

Token 281: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8755047917366028
    2. '==' → logprob: -1.375504732131958
    3. ',' → logprob: -2.125504732131958
    4. 'a' → logprob: -2.250504732131958
    5. ' a' → logprob: -3.250504732131958
    6. ' et' → logprob: -3.625504732131958
    7. '[' → logprob: -4.625504970550537
    8. ']==' → logprob: -5.125504970550537
    9. ']' → logprob: -5.375504970550537
    10. ' ,' → logprob: -6.250504970550537

Token 282: ' différent' (ID: 114823)
  Prédit: ' égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.05823541432619095
    2. 'a' → logprob: -3.4332354068756104
    3. ' ég' → logprob: -4.9332356452941895
    4. ' equal' → logprob: -5.4332356452941895
    5. 'égal' → logprob: -5.4332356452941895
    6. ' ident' → logprob: -5.6832356452941895
    7. 'equal' → logprob: -6.4332356452941895
    8. 'ident' → logprob: -6.5582356452941895
    9. ' a' → logprob: -6.6832356452941895
    10. 'ég' → logprob: -8.683235168457031

Token 283: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.12118560075759888
    2. 'de' → logprob: -2.371185541152954
    3. 'from' → logprob: -4.746185779571533
    4. ' du' → logprob: -5.621185779571533
    5. ' from' → logprob: -5.996185779571533
    6. ' ' → logprob: -6.496185779571533
    7. ' a' → logprob: -6.746185779571533
    8. ' des' → logprob: -7.121185779571533
    9. '    ' → logprob: -7.496185779571533
    10. '   ' → logprob: -7.621185779571533

Token 284: ' précédent' (ID: 128462)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.035073623061180115
    2. 'élé' → logprob: -3.9100735187530518
    3. ' précédent' → logprob: -5.035073757171631
    4. ' a' → logprob: -5.035073757171631
    5. 'pr' → logprob: -7.660073757171631
    6. ' élément' → logprob: -8.035073280334473
    7. 'preced' → logprob: -9.035073280334473
    8. '0' → logprob: -9.410073280334473
    9. ' ' → logprob: -9.410073280334473
    10. 'i' → logprob: -9.535073280334473

Token 285: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11178090423345566
    2. 'and' → logprob: -2.611780881881714
    3. ' ' → logprob: -4.111781120300293
    4. '   ' → logprob: -5.486781120300293
    5. ':' → logprob: -5.986781120300293
    6. ' et' → logprob: -5.986781120300293
    7. ',' → logprob: -6.236781120300293
    8. '    ' → logprob: -6.236781120300293
    9. 'et' → logprob: -6.486781120300293
    10. ' or' → logprob: -7.486781120300293

Token 286: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.9406560659408569
    2. 'a' → logprob: -1.565656065940857
    3. 'du' → logprob: -1.815656065940857
    4. 'égal' → logprob: -2.8156561851501465
    5. ' égal' → logprob: -2.9406561851501465
    6. 'de' → logprob: -3.5656561851501465
    7. 'le' → logprob: -4.1906561851501465
    8. 'different' → logprob: -4.8156561851501465
    9. ' a' → logprob: -4.9406561851501465
    10. 'l' → logprob: -4.9406561851501465

Token 287: ' suivant' (ID: 68705)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.23157203197479248
    2. 'a' → logprob: -1.6065720319747925
    3. ' suivant' → logprob: -5.731572151184082
    4. 'succ' → logprob: -7.231572151184082
    5. 's' → logprob: -7.356572151184082
    6. 'next' → logprob: -7.856572151184082
    7. '```' → logprob: -8.106572151184082
    8. ' a' → logprob: -9.106572151184082
    9. '[' → logprob: -9.356572151184082
    10. ' su' → logprob: -9.481572151184082

Token 288: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47551459074020386
    2. ',' → logprob: -1.6005146503448486
    3. ':' → logprob: -2.8505146503448486
    4. '       ' → logprob: -3.2255146503448486
    5. '   ' → logprob: -3.3505146503448486
    6. 'and' → logprob: -3.9755146503448486
    7. ' ' → logprob: -4.6005144119262695
    8. ' :' → logprob: -5.8505144119262695
    9. '           ' → logprob: -5.8505144119262695
    10. ' ,' → logprob: -6.1005144119262695

Token 289: ' "' (ID: 392)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5002123117446899
    2. '       ' → logprob: -1.25021231174469
    3. ' i' → logprob: -3.5002121925354004
    4. ':' → logprob: -4.1252121925354
    5. ' and' → logprob: -4.2502121925354
    6. ' if' → logprob: -4.7502121925354
    7. ' or' → logprob: -5.0002121925354
    8. '        ' → logprob: -5.0002121925354
    9. 'i' → logprob: -5.5002121925354
    10. ',' → logprob: -5.7502121925354

Token 290: 'sa' (ID: 4578)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6970038414001465
    2. ' if' → logprob: -2.0720038414001465
    3. 'i' → logprob: -2.3220038414001465
    4. '       ' → logprob: -2.3220038414001465
    5. '   ' → logprob: -2.4470038414001465
    6. ' i' → logprob: -3.0720038414001465
    7. 'and' → logprob: -4.1970038414001465
    8. '           ' → logprob: -4.5720038414001465
    9. ' and' → logprob: -4.6970038414001465
    10. ':' → logprob: -5.9470038414001465

Token 291: 'ute' (ID: 1331)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5124430060386658
    2. 't' → logprob: -1.2624430656433105
    3. 'i' → logprob: -3.5124430656433105
    4. 'v' → logprob: -4.0124430656433105
    5. '   ' → logprob: -4.6374430656433105
    6. 'p' → logprob: -5.0124430656433105
    7. 'n' → logprob: -5.0124430656433105
    8. 'f' → logprob: -5.2624430656433105
    9. 'l' → logprob: -5.2624430656433105
    10. ' ' → logprob: -5.5124430656433105

Token 292: '"' (ID: 1)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27601128816604614
    2. '       ' → logprob: -1.7760112285614014
    3. 'i' → logprob: -3.7760112285614014
    4. ' ' → logprob: -4.2760114669799805
    5. '           ' → logprob: -4.5260114669799805
    6. '    ' → logprob: -5.6510114669799805
    7. ' i' → logprob: -5.6510114669799805
    8. '=' → logprob: -5.7760114669799805
    9. '  ' → logprob: -5.7760114669799805
    10. '               ' → logprob: -6.1510114669799805

Token 293: ' deux' (ID: 10301)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20151762664318085
    2. '   ' → logprob: -2.8265175819396973
    3. '       ' → logprob: -2.8265175819396973
    4. 'i' → logprob: -3.5765175819396973
    5. ' i' → logprob: -4.201517581939697
    6. ':' → logprob: -4.451517581939697
    7. ',' → logprob: -6.576517581939697
    8. '1' → logprob: -6.826517581939697
    9. ' ' → logprob: -6.951517581939697
    10. ' de' → logprob: -6.951517581939697

Token 294: ' éléments' (ID: 57375)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42913633584976196
    2. 'positions' → logprob: -2.304136276245117
    3. 'indices' → logprob: -2.554136276245117
    4. ' indices' → logprob: -2.929136276245117
    5. ' espaces' → logprob: -3.429136276245117
    6. ' i' → logprob: -3.554136276245117
    7. 'spaces' → logprob: -4.054136276245117
    8. ' positions' → logprob: -4.929136276245117
    9. ' spaces' → logprob: -5.179136276245117
    10. ' ' → logprob: -5.304136276245117

Token 295: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46944931149482727
    2. ':' → logprob: -1.8444492816925049
    3. ',' → logprob: -2.469449281692505
    4. '           ' → logprob: -2.469449281692505
    5. ' and' → logprob: -3.594449281692505
    6. ' or' → logprob: -4.719449520111084
    7. ':
' → logprob: -5.719449520111084
    8. '   ' → logprob: -6.094449520111084
    9. ' :' → logprob: -6.469449520111084
    10. '.' → logprob: -7.344449520111084

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1499571055173874
    2. ':' → logprob: -2.7749571800231934
    3. ',' → logprob: -3.1499571800231934
    4. '           ' → logprob: -4.399957180023193
    5. ' and' → logprob: -4.399957180023193
    6. ' or' → logprob: -5.274957180023193
    7. '   ' → logprob: -6.774957180023193
    8. ' :' → logprob: -6.899957180023193
    9. ' if' → logprob: -7.149957180023193
    10. ':
' → logprob: -7.899957180023193

Token 297: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26014646887779236
    2. ' if' → logprob: -1.7601464986801147
    3. 'if' (adapté à ' if') → logprob: -2.885146379470825
    4. '   ' → logprob: -7.260146617889404
    5. '           ' → logprob: -8.885146141052246
    6. '        
' → logprob: -9.885146141052246
    7. ',' → logprob: -10.135146141052246
    8. '    ' → logprob: -10.385146141052246
    9. 'If' → logprob: -10.635146141052246
    10. '
' → logprob: -10.760146141052246

Token 298: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02990078739821911
    2. ' a' → logprob: -3.5299007892608643
    3. '(a' → logprob: -9.404900550842285
    4. '   ' → logprob: -9.904900550842285
    5. ' (' → logprob: -11.529900550842285
    6. ' ' → logprob: -12.279900550842285
    7. '	a' → logprob: -13.529900550842285
    8. '    ' → logprob: -14.029900550842285
    9. '  ' → logprob: -14.404900550842285
    10. '(' → logprob: -14.904900550842285

Token 299: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.624555291840807e-05
    2. '[' → logprob: -10.125076293945312
    3. ' [' → logprob: -10.250076293945312
    4. '   ' → logprob: -15.000076293945312
    5. '[
' → logprob: -15.750076293945312
    6. 'i' → logprob: -15.875076293945312
    7. '[a' → logprob: -16.375076293945312
    8. ' i' → logprob: -17.375076293945312
    9. ' ' → logprob: -17.625076293945312
    10. '[j' → logprob: -17.750076293945312

Token 300: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005459405481815338
    2. '-' → logprob: -6.255459308624268
    3. ']!=' → logprob: -6.255459308624268
    4. ' ]' → logprob: -6.630459308624268
    5. '[' → logprob: -8.755459785461426
    6. '[i' → logprob: -10.005459785461426
    7. '   ' → logprob: -10.505459785461426
    8. ']==' → logprob: -10.755459785461426
    9. ' -' → logprob: -11.255459785461426
    10. '!=' → logprob: -12.255459785461426

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003912311512976885
    2. ' ' → logprob: -8.000391006469727
    3. '2' → logprob: -9.875391006469727
    4. ']' → logprob: -13.500391006469727
    5. '0' → logprob: -13.625391006469727
    6. '   ' → logprob: -14.750391006469727
    7. '```' → logprob: -15.062891006469727
    8. ')' → logprob: -15.625391006469727
    9. 'i' → logprob: -15.875391006469727
    10. '-' → logprob: -15.875391006469727

Token 302: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024708977434784174
    2. ' ]' → logprob: -6.127470970153809
    3. ']!=' → logprob: -8.252470970153809
    4. ']==' → logprob: -11.002470970153809
    5. '!=' → logprob: -12.877470970153809
    6. ' !=' → logprob: -13.002470970153809
    7. ')' → logprob: -14.252470970153809
    8. '   ' → logprob: -14.627470970153809
    9. ' ' → logprob: -14.752470970153809
    10. '']' → logprob: -14.877470970153809

Token 303: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4503954350948334
    2. '!=' → logprob: -1.0753954648971558
    3. ']' → logprob: -4.575395584106445
    4. '==' → logprob: -5.200395584106445
    5. ' ==' → logprob: -5.700395584106445
    6. ' ' → logprob: -6.325395584106445
    7. ' ]' → logprob: -8.700395584106445
    8. ']!=' → logprob: -8.825395584106445
    9. '   ' → logprob: -9.950395584106445
    10. '=' → logprob: -10.075395584106445

Token 304: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0699385479092598
    2. ' a' → logprob: -2.6949386596679688
    3. ' ' → logprob: -13.819938659667969
    4. '	a' → logprob: -15.069938659667969
    5. ''a' → logprob: -15.069938659667969
    6. 'i' → logprob: -15.444938659667969
    7. '   ' → logprob: -16.56993865966797
    8. ',' → logprob: -16.81993865966797
    9. '    ' → logprob: -16.94493865966797
    10. '_a' → logprob: -17.06993865966797

Token 305: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018268341955263168
    2. 'i' → logprob: -8.87518310546875
    3. 'a' → logprob: -10.37518310546875
    4. '[' → logprob: -12.00018310546875
    5. ']' → logprob: -13.50018310546875
    6. ' i' → logprob: -13.75018310546875
    7. ' [' → logprob: -13.75018310546875
    8. ' a' → logprob: -14.37518310546875
    9. '][' → logprob: -15.00018310546875
    10. '   ' → logprob: -15.37518310546875

Token 306: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.032927919179201126
    2. 'and' → logprob: -3.907927989959717
    3. ']' → logprob: -4.407927989959717
    4. ' ]' → logprob: -9.657927513122559
    5. ' ' → logprob: -10.407927513122559
    6. '    ' → logprob: -10.907927513122559
    7. '        ' → logprob: -11.907927513122559
    8. ')' → logprob: -12.657927513122559
    9. '   ' → logprob: -13.907927513122559
    10. ' и' → logprob: -14.157927513122559

Token 307: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03365318849682808
    2. 'and' → logprob: -3.4086532592773438
    3. ' ' → logprob: -12.283653259277344
    4. '    ' → logprob: -13.533653259277344
    5. '   ' → logprob: -15.033653259277344
    6. '        ' → logprob: -15.033653259277344
    7. 'et' → logprob: -15.408653259277344
    8. ' et' → logprob: -15.658653259277344
    9. ' ' → logprob: -16.033653259277344
    10. ' и' → logprob: -16.783653259277344

Token 308: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12694038450717926
    2. 'a' → logprob: -2.1269404888153076
    3. '    ' → logprob: -12.251940727233887
    4. ' ' → logprob: -13.001940727233887
    5. 'i' → logprob: -14.001940727233887
    6. ' not' → logprob: -14.001940727233887
    7. ' i' → logprob: -14.126940727233887
    8. '   ' → logprob: -14.376940727233887
    9. ' ' → logprob: -14.626940727233887
    10. '	a' → logprob: -14.751940727233887

Token 309: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.180879816180095e-05
    2. '[' → logprob: -10.875051498413086
    3. '+' → logprob: -11.250051498413086
    4. 'i' → logprob: -11.375051498413086
    5. '-' → logprob: -12.375051498413086
    6. '][' → logprob: -13.625051498413086
    7. ' [' → logprob: -13.750051498413086
    8. '   ' → logprob: -14.500051498413086
    9. ']' → logprob: -15.125051498413086
    10. ' i' → logprob: -15.375051498413086

Token 310: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1847570389509201
    2. '-' → logprob: -1.8097569942474365
    3. ']' → logprob: -5.434757232666016
    4. ']!=' → logprob: -7.559757232666016
    5. ']+' → logprob: -10.434757232666016
    6. ' +' → logprob: -10.559757232666016
    7. '[' → logprob: -10.559757232666016
    8. '+]' → logprob: -12.309757232666016
    9. ']==' → logprob: -12.434757232666016
    10. ' -' → logprob: -12.559757232666016

Token 311: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.029785899445414543
    2. '!=' → logprob: -3.5297858715057373
    3. ']!=' → logprob: -11.529786109924316
    4. ' ==' → logprob: -12.154786109924316
    5. ' ' → logprob: -12.529786109924316
    6. '=' → logprob: -12.654786109924316
    7. ']' → logprob: -12.904786109924316
    8. ')!=' → logprob: -13.029786109924316
    9. '==' → logprob: -13.404786109924316
    10. ')' → logprob: -13.654786109924316

Token 312: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.048587825149297714
    2. ' a' → logprob: -3.0485877990722656
    3. ' ' → logprob: -16.173587799072266
    4. 'i' → logprob: -16.423587799072266
    5. '	a' → logprob: -16.673587799072266
    6. '   ' → logprob: -18.173587799072266
    7. ' а' → logprob: -18.548587799072266
    8. ' ' → logprob: -18.673587799072266
    9. 'а' → logprob: -19.048587799072266
    10. ',' → logprob: -19.298587799072266

Token 313: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008837920613586903
    2. 'i' → logprob: -4.758837699890137
    3. '1' → logprob: -9.133837699890137
    4. '+' → logprob: -9.133837699890137
    5. ' i' → logprob: -13.258837699890137
    6. '(i' → logprob: -13.633837699890137
    7. '{i' → logprob: -13.633837699890137
    8. 'a' → logprob: -14.008837699890137
    9. ' ' → logprob: -14.258837699890137
    10. '[' → logprob: -14.258837699890137

Token 314: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004973778035491705
    2. '-' → logprob: -5.379973888397217
    3. ' +' → logprob: -8.629973411560059
    4. '1' → logprob: -9.254973411560059
    5. '[' → logprob: -10.129973411560059
    6. ']' → logprob: -11.254973411560059
    7. '   ' → logprob: -11.754973411560059
    8. ' -' → logprob: -12.504973411560059
    9. ' ' → logprob: -12.629973411560059
    10. ']+' → logprob: -12.629973411560059

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.082895273109898e-05
    2. ' ' → logprob: -10.500030517578125
    3. '+' → logprob: -13.125030517578125
    4. ']' → logprob: -14.125030517578125
    5. '   ' → logprob: -14.750030517578125
    6. '```' → logprob: -16.750030517578125
    7. '
' → logprob: -17.125030517578125
    8. '-' → logprob: -17.125030517578125
    9. '  ' → logprob: -17.375030517578125
    10. '2' → logprob: -17.875030517578125

Token 316: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5748137831687927
    2. ':' → logprob: -1.1998138427734375
    3. ']' → logprob: -3.1998138427734375
    4. ']:' → logprob: -3.1998138427734375
    5. '):' → logprob: -3.4498138427734375
    6. 'and' → logprob: -4.5748138427734375
    7. ')' → logprob: -5.1998138427734375
    8. '   ' → logprob: -6.1998138427734375
    9. ' :' → logprob: -7.0748138427734375
    10. '):
' → logprob: -7.0748138427734375

Token 317: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5275307893753052
    2. '           ' → logprob: -0.9025307893753052
    3. ':
' → logprob: -6.527530670166016
    4. ':' → logprob: -6.652530670166016
    5. '        
' → logprob: -7.777530670166016
    6. '
' → logprob: -8.652530670166016
    7. '```' → logprob: -8.652530670166016
    8. 'i' → logprob: -9.027530670166016
    9. '):
' → logprob: -9.152530670166016
    10. '   ' → logprob: -9.277530670166016

Token 318: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5117133855819702
    2. '           ' → logprob: -1.0117133855819702
    3. ' i' → logprob: -3.6367135047912598
    4. 'i' (adapté à ' i') → logprob: -4.63671350479126
    5. '   ' → logprob: -8.136713027954102
    6. '
' → logprob: -8.386713027954102
    7. '               ' → logprob: -9.136713027954102
    8. ' 
' → logprob: -9.386713027954102
    9. '        
' → logprob: -9.761713027954102
    10. '```' → logprob: -10.886713027954102

Token 319: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931844353675842
    2. '+=' → logprob: -0.6931844353675842
    3. '=' → logprob: -10.568184852600098
    4. '   ' → logprob: -11.943184852600098
    5. '    ' → logprob: -13.318184852600098
    6. '+' → logprob: -13.318184852600098
    7. ' =' → logprob: -14.068184852600098
    8. ' ' → logprob: -14.318184852600098
    9. '  ' → logprob: -16.31818389892578
    10. '	' → logprob: -16.56818389892578

Token 320: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002815217012539506
    2. '1' → logprob: -5.877815246582031
    3. ' ' → logprob: -12.127815246582031
    4. '3' → logprob: -12.252815246582031
    5. '   ' → logprob: -16.44031524658203
    6. '```' → logprob: -18.12781524658203
    7. '۲' → logprob: -18.25281524658203
    8. '２' → logprob: -18.37781524658203
    9. '	' → logprob: -18.62781524658203
    10. '  ' → logprob: -18.75281524658203

Token 321: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003546502848621458
    2. '1' → logprob: -8.000354766845703
    3. '3' → logprob: -11.125354766845703
    4. ' ' → logprob: -12.375354766845703
    5. '   ' → logprob: -16.687854766845703
    6. '```' → logprob: -17.125354766845703
    7. '
' → logprob: -17.562854766845703
    8. '۲' → logprob: -17.750354766845703
    9. '２' → logprob: -17.812854766845703
    10. '

' → logprob: -17.875354766845703

Token 322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001394284307025373
    2. '
' → logprob: -7.501394271850586
    3. '           ' → logprob: -8.001394271850586
    4. 'continue' → logprob: -8.001394271850586
    5. ' continue' → logprob: -10.126394271850586
    6. '<|end|>' → logprob: -10.251394271850586
    7. 'else' → logprob: -10.376394271850586
    8. '   ' → logprob: -10.626394271850586
    9. 'elif' → logprob: -11.501394271850586
    10. ' else' → logprob: -12.001394271850586

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002003218833124265
    2. '           ' → logprob: -8.750200271606445
    3. 'continue' → logprob: -11.000200271606445
    4. 'else' → logprob: -12.125200271606445
    5. '   ' → logprob: -12.250200271606445
    6. ' continue' → logprob: -12.750200271606445
    7. 'elif' → logprob: -12.750200271606445
    8. ' else' → logprob: -12.875200271606445
    9. '<|end|>' → logprob: -13.250200271606445
    10. ')' → logprob: -13.500200271606445

Token 324: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027981046587228775
    2. 'else' → logprob: -3.7779810428619385
    3. ' else' → logprob: -5.652981281280518
    4. 'elif' → logprob: -6.777981281280518
    5. ' elif' → logprob: -10.02798080444336
    6. '   ' → logprob: -11.40298080444336
    7. ':' → logprob: -11.52798080444336
    8. '           ' → logprob: -13.02798080444336
    9. ':
' → logprob: -13.15298080444336
    10. ')' → logprob: -13.15298080444336

Token 325: ' Si' (ID: 7832)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3638031780719757
    2. ' elif' → logprob: -1.2388031482696533
    3. '       ' → logprob: -4.488803386688232
    4. 'else' → logprob: -6.113803386688232
    5. ' else' → logprob: -6.363803386688232
    6. 'el' → logprob: -9.988802909851074
    7. '   ' → logprob: -11.738802909851074
    8. 'El' → logprob: -12.238802909851074
    9. '	elif' → logprob: -12.738802909851074
    10. ' El' → logprob: -13.113802909851074

Token 326: ' trois' (ID: 25564)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.04902446269989014
    2. 'a' → logprob: -3.0490245819091797
    3. ' ' → logprob: -7.92402458190918
    4. ' (' → logprob: -10.92402458190918
    5. '(a' → logprob: -11.42402458190918
    6. ' not' → logprob: -11.54902458190918
    7. '   ' → logprob: -11.54902458190918
    8. ' i' → logprob: -11.67402458190918
    9. '    ' → logprob: -12.29902458190918
    10. '  ' → logprob: -12.67402458190918

Token 327: ' éléments' (ID: 57375)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.23057600855827332
    2. 'a' → logprob: -1.6055760383605957
    3. '[i' → logprob: -5.855576038360596
    4. ' ' → logprob: -7.230576038360596
    5. 'i' → logprob: -7.730576038360596
    6. '[a' → logprob: -7.855576038360596
    7. ' i' → logprob: -7.980576038360596
    8. '   ' → logprob: -9.355575561523438
    9. '  ' → logprob: -9.480575561523438
    10. 'elif' → logprob: -9.980575561523438

Token 328: ' cons' (ID: 1473)
  Prédit: ' cons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.10619824379682541
    2. 'a' → logprob: -3.231198310852051
    3. 'cons' → logprob: -3.606198310852051
    4. 's' → logprob: -3.731198310852051
    5. ' sont' → logprob: -6.231198310852051
    6. 'success' → logprob: -6.606198310852051
    7. 'ident' → logprob: -6.731198310852051
    8. 'con' → logprob: -6.731198310852051
    9. '   ' → logprob: -7.356198310852051
    10. 'succ' → logprob: -7.606198310852051

Token 329: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0001347672223346308
    2. 'ecut' → logprob: -9.000134468078613
    3. 'éc' → logprob: -11.875134468078613
    4. 'é' → logprob: -13.625134468078613
    5. '   ' → logprob: -13.750134468078613
    6. 'cut' → logprob: -14.500134468078613
    7. '{' → logprob: -14.875134468078613
    8. 'secut' → logprob: -15.625134468078613
    9. '       ' → logprob: -15.750134468078613
    10. '```' → logprob: -16.25013542175293

Token 330: 'ifs' (ID: 14119)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.8161741495132446
    2. 'a' → logprob: -1.3161741495132446
    3. 'if' → logprob: -2.066174030303955
    4. 'ifs' → logprob: -2.691174030303955
    5. '   ' → logprob: -3.941174030303955
    6. 'i' → logprob: -4.191174030303955
    7. 's' → logprob: -4.316174030303955
    8. ' a' → logprob: -4.441174030303955
    9. 'ident' → logprob: -4.566174030303955
    10. '=' → logprob: -4.941174030303955

Token 331: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3948322832584381
    2. 'a' → logprob: -1.5198322534561157
    3. ' sont' → logprob: -2.3948323726654053
    4. ' a' → logprob: -4.894832134246826
    5. '   ' → logprob: -5.769832134246826
    6. ' ==' → logprob: -6.769832134246826
    7. 'ont' → logprob: -6.894832134246826
    8. '==' → logprob: -7.019832134246826
    9. ' ' → logprob: -7.519832134246826
    10. ' are' → logprob: -7.769832134246826

Token 332: ' ident' (ID: 3951)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.052502505481243134
    2. ' ident' → logprob: -3.677502393722534
    3. 'ident' → logprob: -4.052502632141113
    4. 'ég' → logprob: -4.802502632141113
    5. 'égal' → logprob: -9.177502632141113
    6. ' égal' → logprob: -9.552502632141113
    7. '   ' → logprob: -10.552502632141113
    8. 'a' → logprob: -11.302502632141113
    9. ' ' → logprob: -11.427502632141113
    10. ' eg' → logprob: -11.552502632141113

Token 333: 'iques' (ID: 11654)
  Prédit: 'ques'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.2937544584274292
    2. 'iques' → logprob: -1.4187544584274292
    3. 'aux' → logprob: -5.293754577636719
    4. 'que' → logprob: -6.043754577636719
    5. '```' → logprob: -6.668754577636719
    6. '   ' → logprob: -7.293754577636719
    7. '#' → logprob: -7.543754577636719
    8. '``' → logprob: -7.918754577636719
    9. 'cal' → logprob: -8.168754577636719
    10. '=' → logprob: -8.918754577636719

Token 334: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.021220197901129723
    2. ':' → logprob: -5.0212202072143555
    3. '   ' → logprob: -5.8962202072143555
    4. 'and' → logprob: -5.8962202072143555
    5. ' et' → logprob: -6.0212202072143555
    6. '       ' → logprob: -6.2712202072143555
    7. ' elif' → logprob: -6.6462202072143555
    8. 'elif' → logprob: -6.8962202072143555
    9. ' :' → logprob: -7.3962202072143555
    10. ',' → logprob: -7.5212202072143555

Token 335: ' incr' (ID: 52395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47087445855140686
    2. ' counter' → logprob: -1.2208744287490845
    3. 'counter' → logprob: -2.970874547958374
    4. '       ' → logprob: -3.595874547958374
    5. '   ' → logprob: -6.970874309539795
    6. '        ' → logprob: -8.970874786376953
    7. '               ' → logprob: -9.220874786376953
    8. '            ' → logprob: -9.470874786376953
    9. '    ' → logprob: -9.470874786376953
    10. ' compteur' → logprob: -9.470874786376953

Token 336: 'é' (ID: 377)
  Prédit: 'ément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.10844560712575912
    2. 'é' → logprob: -2.483445644378662
    3. 'counter' → logprob: -4.358445644378662
    4. 'ment' → logprob: -5.858445644378662
    5. 'mente' → logprob: -6.608445644378662
    6. 'éments' → logprob: -7.108445644378662
    7. '   ' → logprob: -8.358445167541504
    8. ' counter' → logprob: -8.358445167541504
    9. 'i' → logprob: -8.483445167541504
    10. 'emente' → logprob: -9.233445167541504

Token 337: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.01581321656703949
    2. 'mente' → logprob: -4.26581335067749
    3. 'mentar' → logprob: -6.89081335067749
    4. 'mental' → logprob: -8.390812873840332
    5. 'mentation' → logprob: -9.265812873840332
    6. 'mented' → logprob: -9.390812873840332
    7. 'ments' → logprob: -9.515812873840332
    8. '#' → logprob: -10.765812873840332
    9. 'm' → logprob: -11.015812873840332
    10. '   ' → logprob: -11.265812873840332

Token 338: ' le' (ID: 505)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.31583765149116516
    2. 'counter' → logprob: -1.3158376216888428
    3. '           ' → logprob: -6.190837860107422
    4. '       ' → logprob: -8.440837860107422
    5. '   ' → logprob: -8.940837860107422
    6. ' compteur' → logprob: -10.315837860107422
    7. '	counter' → logprob: -10.440837860107422
    8. '               ' → logprob: -10.940837860107422
    9. '(counter' → logprob: -11.065837860107422
    10. '_counter' → logprob: -11.565837860107422

Token 339: ' compteur' (ID: 163344)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.0025037210434675217
    2. ' counter' → logprob: -6.002503871917725
    3. '   ' → logprob: -10.877503395080566
    4. '	counter' → logprob: -13.752503395080566
    5. '           ' → logprob: -14.127503395080566
    6. ' ' → logprob: -14.127503395080566
    7. 'count' → logprob: -14.252503395080566
    8. '       ' → logprob: -14.502503395080566
    9. '_counter' → logprob: -14.502503395080566
    10. '  ' → logprob: -14.502503395080566

Token 340: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30052247643470764
    2. '           ' → logprob: -1.4255224466323853
    3. ',' → logprob: -4.550522327423096
    4. ' and' → logprob: -4.925522327423096
    5. ':' → logprob: -7.300522327423096
    6. ':
' → logprob: -8.675522804260254
    7. ' et' → logprob: -9.675522804260254
    8. 'and' → logprob: -9.675522804260254
    9. '               ' → logprob: -9.800522804260254
    10. '        ' → logprob: -10.050522804260254

Token 341: ' saute' (ID: 146395)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2843829393386841
    2. 'i' → logprob: -1.409382939338684
    3. '   ' → logprob: -6.6593828201293945
    4. ' counter' → logprob: -7.7843828201293945
    5. '       ' → logprob: -7.9093828201293945
    6. '           ' → logprob: -8.034382820129395
    7. 'counter' → logprob: -8.659382820129395
    8. ' skip' → logprob: -9.159382820129395
    9. ' remove' → logprob: -9.409382820129395
    10. '    ' → logprob: -9.659382820129395

Token 342: ' deux' (ID: 10301)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.42723244428634644
    2. '           ' → logprob: -1.3022325038909912
    3. ' ' → logprob: -3.427232503890991
    4. ' de' → logprob: -3.802232503890991
    5. ' trois' → logprob: -4.802232265472412
    6. '1' → logprob: -5.177232265472412
    7. 'i' → logprob: -6.177232265472412
    8. '2' → logprob: -6.802232265472412
    9. ' i' → logprob: -7.052232265472412
    10. 'de' → logprob: -7.177232265472412

Token 343: ' éléments' (ID: 57375)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6397069096565247
    2. ' i' → logprob: -1.5147068500518799
    3. ' tokens' → logprob: -2.51470685005188
    4. 'tokens' → logprob: -3.13970685005188
    5. '           ' → logprob: -3.26470685005188
    6. '   ' → logprob: -3.63970685005188
    7. '<|end|>' → logprob: -3.76470685005188
    8. '       ' → logprob: -4.514707088470459
    9. ' ' → logprob: -4.764707088470459
    10. ' indices' → logprob: -5.514707088470459

Token 344: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010333440266549587
    2. ':' → logprob: -5.01033353805542
    3. '           ' → logprob: -6.26033353805542
    4. ':
' → logprob: -6.76033353805542
    5. ',' → logprob: -9.135333061218262
    6. ' :' → logprob: -9.135333061218262
    7. ' and' → logprob: -9.260333061218262
    8. ' :
' → logprob: -10.260333061218262
    9. '   ' → logprob: -10.385333061218262
    10. ' elif' → logprob: -10.510333061218262

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010400813072919846
    2. ':' → logprob: -4.635400772094727
    3. ':
' → logprob: -8.260400772094727
    4. '           ' → logprob: -8.385400772094727
    5. '   ' → logprob: -10.260400772094727
    6. ',' → logprob: -10.260400772094727
    7. ' :' → logprob: -10.635400772094727
    8. ' elif' → logprob: -11.010400772094727
    9. 'elif' → logprob: -11.510400772094727
    10. ' and' → logprob: -11.510400772094727

Token 346: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0257881879806519
    2. 'elif' (adapté à ' elif') → logprob: -1.0257881879806519
    3. ' elif' → logprob: -1.2757881879806519
    4. 'if' → logprob: -6.150788307189941
    5. ' if' → logprob: -6.900788307189941
    6. 'else' → logprob: -8.275788307189941
    7. ' else' → logprob: -8.650788307189941
    8. '   ' → logprob: -9.275788307189941
    9. '           ' → logprob: -10.900788307189941
    10. '```' → logprob: -11.275788307189941

Token 347: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0036297659389674664
    2. 'a' → logprob: -5.628629684448242
    3. ' ' → logprob: -11.003629684448242
    4. ' i' → logprob: -12.378629684448242
    5. ' ' → logprob: -12.503629684448242
    6. ' (' → logprob: -13.253629684448242
    7. '(a' → logprob: -13.628629684448242
    8. '    ' → logprob: -14.128629684448242
    9. '   ' → logprob: -15.003629684448242
    10. 'i' → logprob: -15.003629684448242

Token 348: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -14.000001907348633
    3. ' [' → logprob: -14.000001907348633
    4. 'i' → logprob: -15.375001907348633
    5. '   ' → logprob: -15.875001907348633
    6. '[a' → logprob: -16.750001907348633
    7. '[I' → logprob: -18.750001907348633
    8. '```' → logprob: -19.000001907348633
    9. '[int' → logprob: -19.500001907348633
    10. 'a' → logprob: -19.625001907348633

Token 349: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.400145947933197
    2. ']==' → logprob: -1.7751460075378418
    3. '[i' → logprob: -2.025146007537842
    4. '[' → logprob: -3.900146007537842
    5. '-' → logprob: -5.275146007537842
    6. '==' → logprob: -6.900146007537842
    7. ' ==' → logprob: -7.400146007537842
    8. ' ]' → logprob: -7.525146007537842
    9. '][' → logprob: -7.650146007537842
    10. ' [' → logprob: -9.275145530700684

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015622020873706788
    2. ' ' → logprob: -9.12515640258789
    3. 'i' → logprob: -11.25015640258789
    4. '-' → logprob: -11.25015640258789
    5. '```' → logprob: -12.00015640258789
    6. ']' → logprob: -12.12515640258789
    7. ']==' → logprob: -12.87515640258789
    8. '   ' → logprob: -12.87515640258789
    9. '+' → logprob: -13.87515640258789
    10. 'a' → logprob: -14.12515640258789

Token 351: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005581548321060836
    2. ']==' → logprob: -7.625558376312256
    3. ' ]' → logprob: -9.750557899475098
    4. ' ==' → logprob: -11.750557899475098
    5. '==' → logprob: -12.625557899475098
    6. ')' → logprob: -15.000557899475098
    7. '```' → logprob: -16.500558853149414
    8. '']' → logprob: -17.000558853149414
    9. '   ' → logprob: -17.125558853149414
    10. ' ' → logprob: -17.250558853149414

Token 352: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04861677438020706
    2. '==' → logprob: -3.048616886138916
    3. ']==' → logprob: -10.923616409301758
    4. ']' → logprob: -12.048616409301758
    5. ' ' → logprob: -12.673616409301758
    6. ')==' → logprob: -14.423616409301758
    7. ')' → logprob: -14.423616409301758
    8. '=' → logprob: -14.673616409301758
    9. '```' → logprob: -15.548616409301758
    10. '===' → logprob: -15.923616409301758

Token 353: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006715967319905758
    2. ' a' → logprob: -5.006715774536133
    3. ' ' → logprob: -14.506715774536133
    4. '   ' → logprob: -17.131715774536133
    5. '	a' → logprob: -17.256715774536133
    6. '  ' → logprob: -17.506715774536133
    7. '    ' → logprob: -18.381715774536133
    8. '```' → logprob: -18.381715774536133
    9. ' ' → logprob: -18.506715774536133
    10. '#a' → logprob: -19.006715774536133

Token 354: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.591415437171236e-05
    2. 'a' → logprob: -9.875096321105957
    3. 'i' → logprob: -10.125096321105957
    4. ' [' → logprob: -13.375096321105957
    5. '[' → logprob: -13.875096321105957
    6. ' i' → logprob: -14.500096321105957
    7. '[a' → logprob: -14.625096321105957
    8. '   ' → logprob: -15.000096321105957
    9. ' a' → logprob: -15.625096321105957
    10. ']' → logprob: -16.62509536743164

Token 355: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4379289746284485
    2. ' and' → logprob: -2.0629289150238037
    3. 'and' → logprob: -2.1879289150238037
    4. ' ==' → logprob: -2.1879289150238037
    5. ']' → logprob: -5.937929153442383
    6. ']==' → logprob: -7.812929153442383
    7. ')' → logprob: -9.437929153442383
    8. '```' → logprob: -10.187929153442383
    9. '}' → logprob: -10.437929153442383
    10. 'a' → logprob: -11.312929153442383

Token 356: ' ==' (ID: 951)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.469007283449173
    2. 'and' → logprob: -1.2190072536468506
    3. '==' → logprob: -2.9690072536468506
    4. ' ==' → logprob: -3.5940072536468506
    5. ' ' → logprob: -12.84400749206543
    6. '           ' → logprob: -12.84400749206543
    7. '=' → logprob: -13.96900749206543
    8. ' ' → logprob: -14.09400749206543
    9. '          ' → logprob: -14.34400749206543
    10. '    ' → logprob: -14.46900749206543

Token 357: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07888978719711304
    2. ' a' → logprob: -2.578889846801758
    3. ' ' → logprob: -18.578889846801758
    4. '	a' → logprob: -18.578889846801758
    5. ' ' → logprob: -19.328889846801758
    6. 'i' → logprob: -19.453889846801758
    7. '   ' → logprob: -19.953889846801758
    8. ''a' → logprob: -20.078889846801758
    9. '[a' → logprob: -20.078889846801758
    10. '```' → logprob: -20.328889846801758

Token 358: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.625000953674316
    3. ' [' → logprob: -15.625000953674316
    4. 'a' → logprob: -17.375
    5. '[' → logprob: -19.0
    6. '+' → logprob: -19.25
    7. ' i' → logprob: -19.375
    8. '[a' → logprob: -19.5
    9. '   ' → logprob: -20.125
    10. '[
' → logprob: -20.5

Token 359: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.650518920039758e-06
    2. ' +' → logprob: -12.875003814697266
    3. '[' → logprob: -14.375003814697266
    4. '1' → logprob: -15.625003814697266
    5. '[i' → logprob: -16.500003814697266
    6. '   ' → logprob: -16.750003814697266
    7. '+i' → logprob: -17.000003814697266
    8. ']' → logprob: -17.500003814697266
    9. '+
' → logprob: -17.500003814697266
    10. '-' → logprob: -18.000003814697266

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. '+' → logprob: -12.375004768371582
    3. ' ' → logprob: -14.500004768371582
    4. '[' → logprob: -16.8750057220459
    5. '   ' → logprob: -17.3750057220459
    6. '```' → logprob: -17.7500057220459
    7. '[i' → logprob: -19.0000057220459
    8. '{' → logprob: -19.4375057220459
    9. '2' → logprob: -19.5000057220459
    10. '`' → logprob: -19.8125057220459

Token 361: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3218715488910675
    2. ':
' → logprob: -1.4468715190887451
    3. '           ' → logprob: -3.321871519088745
    4. '       ' → logprob: -6.446871757507324
    5. '):
' → logprob: -6.446871757507324
    6. ']:
' → logprob: -8.446871757507324
    7. '):' → logprob: -8.696871757507324
    8. ' and' → logprob: -9.446871757507324
    9. ']:' → logprob: -9.946871757507324
    10. '   ' → logprob: -10.571871757507324

Token 362: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6371464133262634
    2. '       ' → logprob: -0.7621464133262634
    3. '
' → logprob: -6.262146472930908
    4. ':
' → logprob: -6.262146472930908
    5. ' counter' → logprob: -8.13714599609375
    6. ':' → logprob: -8.63714599609375
    7. 'counter' → logprob: -9.13714599609375
    8. '):
' → logprob: -10.01214599609375
    9. ',' → logprob: -10.38714599609375
    10. '   ' → logprob: -10.88714599609375

Token 363: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.8146843314170837
    2. ' counter' → logprob: -0.9396843314170837
    3. '       ' → logprob: -1.9396843910217285
    4. '           ' → logprob: -3.8146843910217285
    5. '   ' → logprob: -8.43968391418457
    6. '
' → logprob: -8.93968391418457
    7. '	counter' → logprob: -8.93968391418457
    8. 'Counter' → logprob: -9.68968391418457
    9. '_counter' → logprob: -10.31468391418457
    10. '[counter' → logprob: -10.81468391418457

Token 364: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02975187823176384
    2. '+=' → logprob: -3.529751777648926
    3. '   ' → logprob: -13.529751777648926
    4. ']+=' → logprob: -17.029752731323242
    5. '=' → logprob: -17.279752731323242
    6. '    ' → logprob: -17.404752731323242
    7. '           ' → logprob: -18.404752731323242
    8. ' =' → logprob: -19.029752731323242
    9. '  ' → logprob: -19.154752731323242
    10. '+' → logprob: -19.404752731323242

Token 365: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006361891864798963
    2. ' ' → logprob: -7.375636100769043
    3. '2' → logprob: -11.625636100769043
    4. '3' → logprob: -14.625636100769043
    5. '   ' → logprob: -15.250636100769043
    6. '  ' → logprob: -18.31313705444336
    7. '4' → logprob: -18.37563705444336
    8. '10' → logprob: -18.68813705444336
    9. '+' → logprob: -18.87563705444336
    10. '           ' → logprob: -18.87563705444336

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.375032424926758
    3. '2' → logprob: -14.375032424926758
    4. '3' → logprob: -16.250032424926758
    5. '   ' → logprob: -17.375032424926758
    6. '+' → logprob: -18.625032424926758
    7. '4' → logprob: -18.937532424926758
    8. '```' → logprob: -19.062532424926758
    9. '10' → logprob: -19.375032424926758
    10. '  ' → logprob: -19.812532424926758

Token 367: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032487702555954456
    2. '
' → logprob: -6.253248691558838
    3. '       ' → logprob: -6.878248691558838
    4. 'i' → logprob: -8.378249168395996
    5. '               ' → logprob: -11.128249168395996
    6. '            
' → logprob: -11.628249168395996
    7. ',' → logprob: -11.878249168395996
    8. '   ' → logprob: -12.253249168395996
    9. '                   ' → logprob: -12.253249168395996
    10. '		' → logprob: -12.378249168395996

Token 368: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006807420286349952
    2. '       ' → logprob: -7.875680923461914
    3. 'i' → logprob: -8.625680923461914
    4. '
' → logprob: -9.375680923461914
    5. '   ' → logprob: -10.625680923461914
    6. '               ' → logprob: -12.500680923461914
    7. ' i' → logprob: -13.125680923461914
    8. '            
' → logprob: -13.875680923461914
    9. '                   ' → logprob: -14.125680923461914
    10. '\n' → logprob: -14.375680923461914

Token 369: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.38766196370124817
    2. '           ' → logprob: -1.3876619338989258
    3. ' i' → logprob: -2.637661933898926
    4. '   ' → logprob: -9.512661933898926
    5. '       ' → logprob: -9.637661933898926
    6. '               ' → logprob: -10.762661933898926
    7. '
' → logprob: -12.637661933898926
    8. ',i' → logprob: -13.887661933898926
    9. '                   ' → logprob: -14.012661933898926
    10. '          ' → logprob: -14.012661933898926

Token 370: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0052342405542731285
    2. ' +=' → logprob: -5.255234241485596
    3. '+' → logprob: -15.005233764648438
    4. ']+=' → logprob: -16.880233764648438
    5. '=' → logprob: -17.755233764648438
    6. '   ' → logprob: -18.630233764648438
    7. '+="' → logprob: -18.880233764648438
    8. '++' → logprob: -20.130233764648438
    9. '+='' → logprob: -20.255233764648438
    10. '```' → logprob: -20.255233764648438

Token 371: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22548045217990875
    2. '3' → logprob: -1.6004804372787476
    3. ' ' → logprob: -9.600480079650879
    4. '   ' → logprob: -17.100481033325195
    5. '1' → logprob: -17.787981033325195
    6. '```' → logprob: -17.850481033325195
    7. '4' → logprob: -18.350481033325195
    8. '  ' → logprob: -18.975481033325195
    9. '２' → logprob: -19.225481033325195
    10. '
' → logprob: -19.537981033325195

Token 372: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.42872777581214905
    2. '2' → logprob: -1.0537277460098267
    3. ' ' → logprob: -10.553728103637695
    4. '1' → logprob: -14.428728103637695
    5. '   ' → logprob: -15.553728103637695
    6. '4' → logprob: -16.741228103637695
    7. '  ' → logprob: -16.928728103637695
    8. '	' → logprob: -16.991228103637695
    9. '

' → logprob: -17.491228103637695
    10. '３' → logprob: -17.491228103637695

Token 373: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006999264587648213
    2. '<|end|>' → logprob: -8.250699996948242
    3. 'elif' → logprob: -8.375699996948242
    4. '   ' → logprob: -9.250699996948242
    5. 'else' → logprob: -10.000699996948242
    6. '```' → logprob: -10.625699996948242
    7. ' else' → logprob: -11.125699996948242
    8. ' elif' → logprob: -11.625699996948242
    9. ')' → logprob: -12.500699996948242
    10. '<|end|>' → logprob: -13.000699996948242

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045677117304876447
    2. '   ' → logprob: -8.875456809997559
    3. 'elif' → logprob: -8.875456809997559
    4. '```' → logprob: -9.375456809997559
    5. 'else' → logprob: -9.625456809997559
    6. '<|end|>' → logprob: -11.125456809997559
    7. ' else' → logprob: -12.125456809997559
    8. ' elif' → logprob: -13.375456809997559
    9. ')' → logprob: -13.875456809997559
    10. '...' → logprob: -14.125456809997559

Token 375: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008282400667667389
    2. 'else' → logprob: -5.75828218460083
    3. 'elif' → logprob: -6.00828218460083
    4. ' else' → logprob: -6.50828218460083
    5. '   ' → logprob: -7.00828218460083
    6. ' elif' → logprob: -8.383282661437988
    7. '```' → logprob: -12.508282661437988
    8. '           ' → logprob: -13.883282661437988
    9. ')' → logprob: -14.133282661437988
    10. '	elif' → logprob: -14.508282661437988

Token 376: ' Si' (ID: 7832)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.3579849898815155
    2. 'elif' → logprob: -1.357985019683838
    3. ' else' → logprob: -3.482985019683838
    4. 'else' → logprob: -4.357985019683838
    5. '   ' → logprob: -9.60798454284668
    6. '       ' → logprob: -9.60798454284668
    7. '    ' → logprob: -9.60798454284668
    8. ' ' → logprob: -12.23298454284668
    9. 'el' → logprob: -12.60798454284668
    10. ' if' → logprob: -13.23298454284668

Token 377: ' l' (ID: 305)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12739397585391998
    2. 'a' → logprob: -2.127393960952759
    3. ' i' → logprob: -8.25239372253418
    4. ' ' → logprob: -9.12739372253418
    5. 'i' → logprob: -9.62739372253418
    6. '   ' → logprob: -11.37739372253418
    7. '    ' → logprob: -11.87739372253418
    8. ' (' → logprob: -12.50239372253418
    9. '(a' → logprob: -12.75239372253418
    10. ' ' → logprob: -13.50239372253418

Token 378: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18165478110313416
    2. ' a' → logprob: -2.056654691696167
    3. '[i' → logprob: -3.306654691696167
    4. '[a' → logprob: -7.181654930114746
    5. 'i' → logprob: -7.556654930114746
    6. ' i' → logprob: -9.431654930114746
    7. '[' → logprob: -9.431654930114746
    8. ' ' → logprob: -10.056654930114746
    9. 'e' → logprob: -10.181654930114746
    10. ' [' → logprob: -11.181654930114746

Token 379: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00589466467499733
    2. ' a' → logprob: -5.505894660949707
    3. 'i' → logprob: -6.505894660949707
    4. '[i' → logprob: -8.255894660949707
    5. ' i' → logprob: -10.255894660949707
    6. 'ai' → logprob: -12.005894660949707
    7. '[a' → logprob: -12.005894660949707
    8. '   ' → logprob: -12.755894660949707
    9. ' ' → logprob: -12.880894660949707
    10. ']' → logprob: -13.505894660949707

Token 380: 'ment' (ID: 508)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015413717366755009
    2. '-' → logprob: -4.640413761138916
    3. '[i' → logprob: -6.390413761138916
    4. '   ' → logprob: -6.890413761138916
    5. '+' → logprob: -7.390413761138916
    6. 'elif' → logprob: -7.390413761138916
    7. '[' → logprob: -7.765413761138916
    8. ' i' → logprob: -7.765413761138916
    9. ']' → logprob: -8.140413284301758
    10. '[-' → logprob: -9.390413284301758

Token 381: ' courant' (ID: 74694)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006073639378882945
    2. 'i' → logprob: -8.37560749053955
    3. '+' → logprob: -8.75060749053955
    4. '==' → logprob: -9.37560749053955
    5. ' i' → logprob: -9.62560749053955
    6. ' ==' → logprob: -10.75060749053955
    7. '[' → logprob: -10.87560749053955
    8. ' [' → logprob: -11.75060749053955
    9. 'a' → logprob: -11.87560749053955
    10. '   ' → logprob: -13.12560749053955

Token 382: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026641974225640297
    2. '==' → logprob: -3.651642084121704
    3. '+' → logprob: -8.276641845703125
    4. '[i' → logprob: -10.526641845703125
    5. 'a' → logprob: -11.026641845703125
    6. ']' → logprob: -11.651641845703125
    7. '   ' → logprob: -11.651641845703125
    8. ']==' → logprob: -12.026641845703125
    9. ' a' → logprob: -12.401641845703125
    10. ' ' → logprob: -12.401641845703125

Token 383: ' ident' (ID: 3951)
  Prédit: ' égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.47898930311203003
    2. ' equal' → logprob: -1.3539893627166748
    3. ' ==' → logprob: -3.353989362716675
    4. 'égal' → logprob: -3.728989362716675
    5. 'equal' → logprob: -4.103989124298096
    6. 'a' → logprob: -4.103989124298096
    7. '==' → logprob: -4.603989124298096
    8. ' ég' → logprob: -4.603989124298096
    9. ' ' → logprob: -6.103989124298096
    10. ' a' → logprob: -6.103989124298096

Token 384: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.003661002730950713
    2. 'ical' → logprob: -5.628661155700684
    3. '#' → logprob: -11.378661155700684
    4. '==' → logprob: -11.378661155700684
    5. '```' → logprob: -11.628661155700684
    6. 'que' → logprob: -12.003661155700684
    7. '   ' → logprob: -13.003661155700684
    8. 't' → logprob: -13.003661155700684
    9. ' ==' → logprob: -13.003661155700684
    10. 'cal' → logprob: -13.128661155700684

Token 385: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.08977941423654556
    2. ' au' → logprob: -3.4647793769836426
    3. 'à' → logprob: -3.8397793769836426
    4. 'au' → logprob: -4.464779376983643
    5. ' a' → logprob: -4.964779376983643
    6. ' ==' → logprob: -5.464779376983643
    7. 'a' → logprob: -5.589779376983643
    8. '==' → logprob: -5.714779376983643
    9. ' to' → logprob: -6.714779376983643
    10. ' ' → logprob: -6.714779376983643

Token 386: ' suivant' (ID: 68705)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.3488534092903137
    2. 'pr' → logprob: -1.723853349685669
    3. 'a' → logprob: -2.473853349685669
    4. ' suivant' → logprob: -4.348853588104248
    5. ' précédent' → logprob: -4.848853588104248
    6. 'i' → logprob: -5.348853588104248
    7. 'succ' → logprob: -5.598853588104248
    8. 'preced' → logprob: -7.348853588104248
    9. '[i' → logprob: -7.473853588104248
    10. 'élé' → logprob: -8.09885311126709

Token 387: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.014749577268958092
    2. 'or' → logprob: -4.514749526977539
    3. ' ou' → logprob: -6.514749526977539
    4. ':' → logprob: -6.764749526977539
    5. ' and' → logprob: -8.139749526977539
    6. '   ' → logprob: -8.389749526977539
    7. ',' → logprob: -8.764749526977539
    8. '       ' → logprob: -8.764749526977539
    9. '           ' → logprob: -9.514749526977539
    10. 'ou' → logprob: -9.764749526977539

Token 388: ' saute' (ID: 146395)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.3016735315322876
    2. '           ' → logprob: -1.5516735315322876
    3. 'counter' → logprob: -3.926673412322998
    4. ' i' → logprob: -4.426673412322998
    5. '   ' → logprob: -4.551673412322998
    6. '       ' → logprob: -5.426673412322998
    7. 'i' → logprob: -7.301673412322998
    8. ' ' → logprob: -8.176673889160156
    9. '	counter' → logprob: -8.426673889160156
    10. '<|end|>' → logprob: -9.051673889160156

Token 389: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5279134511947632
    2. '1' → logprob: -1.1529134511947632
    3. '           ' → logprob: -2.7779135704040527
    4. '2' → logprob: -3.6529135704040527
    5. '   ' → logprob: -6.027913570404053
    6. ' deux' → logprob: -6.902913570404053
    7. '    ' → logprob: -7.277913570404053
    8. ' de' → logprob: -7.652913570404053
    9. ' one' → logprob: -8.777913093566895
    10. 'i' → logprob: -8.777913093566895

Token 390: ' élément' (ID: 99627)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3367499113082886
    2. ' i' → logprob: -1.9617499113082886
    3. ' +=' → logprob: -2.586750030517578
    4. 'i' → logprob: -3.961750030517578
    5. ' +' → logprob: -3.961750030517578
    6. '1' → logprob: -4.336750030517578
    7. '+=' → logprob: -4.836750030517578
    8. ' plus' → logprob: -5.836750030517578
    9. ' space' → logprob: -6.461750030517578
    10. ' ' → logprob: -6.711750030517578

Token 391: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06644398719072342
    2. '       ' → logprob: -3.191443920135498
    3. '   ' → logprob: -4.691443920135498
    4. ' and' → logprob: -5.566443920135498
    5. ',' → logprob: -5.691443920135498
    6. '+' → logprob: -6.691443920135498
    7. ' +' → logprob: -6.941443920135498
    8. ':' → logprob: -7.316443920135498
    9. ' i' → logprob: -7.316443920135498
    10. ':
' → logprob: -8.191444396972656

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001156889251433313
    2. '           ' → logprob: -7.626156806945801
    3. 'elif' → logprob: -8.5011568069458
    4. '   ' → logprob: -8.6261568069458
    5. ' and' → logprob: -9.6261568069458
    6. ':' → logprob: -9.6261568069458
    7. ' elif' → logprob: -9.6261568069458
    8. ',' → logprob: -10.3761568069458
    9. '<|end|>' → logprob: -10.7511568069458
    10. ' or' → logprob: -11.6261568069458

Token 393: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2071591168642044
    2. 'elif' (adapté à ' elif') → logprob: -2.3321590423583984
    3. ' elif' → logprob: -2.5821590423583984
    4. ' else' → logprob: -4.832159042358398
    5. 'else' → logprob: -5.582159042358398
    6. '   ' → logprob: -6.082159042358398
    7. ' i' → logprob: -9.457159042358398
    8. '           ' → logprob: -9.582159042358398
    9. 'i' → logprob: -9.957159042358398
    10. '    ' → logprob: -9.957159042358398

Token 394: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.01815848983824253
    2. 'a' → logprob: -4.018158435821533
    3. ' ' → logprob: -11.893158912658691
    4. ' ' → logprob: -14.643158912658691
    5. '   ' → logprob: -14.893158912658691
    6. '	a' → logprob: -15.018158912658691
    7. ' i' → logprob: -15.143158912658691
    8. '    ' → logprob: -15.518158912658691
    9. 'i' → logprob: -16.018157958984375
    10. '  ' → logprob: -17.518157958984375

Token 395: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. ' [' → logprob: -14.000001907348633
    3. '[' → logprob: -14.750001907348633
    4. 'i' → logprob: -15.875001907348633
    5. '   ' → logprob: -15.875001907348633
    6. '[I' → logprob: -17.875001907348633
    7. '[j' → logprob: -18.125001907348633
    8. '```' → logprob: -18.625001907348633
    9. ' i' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.625001907348633

Token 396: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.33748766779899597
    2. '+' → logprob: -1.4624876976013184
    3. ']==' → logprob: -3.3374876976013184
    4. '[i' → logprob: -4.087487697601318
    5. '   ' → logprob: -6.587487697601318
    6. '==' → logprob: -8.46248722076416
    7. '[' → logprob: -8.46248722076416
    8. ' +' → logprob: -8.71248722076416
    9. '][' → logprob: -8.83748722076416
    10. ' ]' → logprob: -9.21248722076416

Token 397: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17986741662025452
    2. '==' → logprob: -1.8048673868179321
    3. ']==' → logprob: -10.0548677444458
    4. '[' → logprob: -10.3048677444458
    5. '+' → logprob: -11.1798677444458
    6. '=' → logprob: -11.8048677444458
    7. ')==' → logprob: -12.1798677444458
    8. '==
' → logprob: -12.5548677444458
    9. ' ' → logprob: -12.6798677444458
    10. ' ' → logprob: -12.8048677444458

Token 398: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029752571135759354
    2. ' a' → logprob: -3.529752492904663
    3. '	a' → logprob: -13.779752731323242
    4. ' ' → logprob: -14.029752731323242
    5. '  ' → logprob: -16.154752731323242
    6. '   ' → logprob: -16.404752731323242
    7. ''a' → logprob: -17.404752731323242
    8. 'i' → logprob: -17.529752731323242
    9. '[a' → logprob: -17.654752731323242
    10. '(a' → logprob: -17.654752731323242

Token 399: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012487331696320325
    2. 'i' → logprob: -9.00012493133545
    3. '[' → logprob: -14.62512493133545
    4. '+' → logprob: -15.25012493133545
    5. '[
' → logprob: -15.75012493133545
    6. ' i' → logprob: -15.87512493133545
    7. ' [' → logprob: -15.87512493133545
    8. '1' → logprob: -16.750123977661133
    9. '
' → logprob: -16.875123977661133
    10. '(i' → logprob: -17.125123977661133

Token 400: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012415809032972902
    2. ' +' → logprob: -9.000123977661133
    3. '1' → logprob: -15.000123977661133
    4. '[' → logprob: -15.750123977661133
    5. '+i' → logprob: -16.750123977661133
    6. ']+' → logprob: -16.875123977661133
    7. '+
' → logprob: -17.375123977661133
    8. '+]' → logprob: -18.750123977661133
    9. ' ' → logprob: -18.875123977661133
    10. ']' → logprob: -19.000123977661133

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.011373155459296e-05
    2. ' ' → logprob: -10.500030517578125
    3. '+' → logprob: -13.000030517578125
    4. '   ' → logprob: -16.125030517578125
    5. '```' → logprob: -16.375030517578125
    6. '2' → logprob: -17.312530517578125
    7. '  ' → logprob: -17.750030517578125
    8. '۱' → logprob: -18.000030517578125
    9. ' +' → logprob: -18.125030517578125
    10. 'i' → logprob: -18.500030517578125

Token 402: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2427683174610138
    2. ':
' → logprob: -1.8677682876586914
    3. '       ' → logprob: -3.2427682876586914
    4. '   ' → logprob: -4.742768287658691
    5. '):
' → logprob: -4.992768287658691
    6. '           ' → logprob: -6.367768287658691
    7. '):' → logprob: -6.367768287658691
    8. ',' → logprob: -6.867768287658691
    9. ' and' → logprob: -7.242768287658691
    10. ' or' → logprob: -8.367768287658691

Token 403: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15168869495391846
    2. '   ' → logprob: -2.776688575744629
    3. ':' → logprob: -3.401688575744629
    4. ':
' → logprob: -3.526688575744629
    5. '           ' → logprob: -4.276688575744629
    6. '):
' → logprob: -7.026688575744629
    7. '<|end|>' → logprob: -8.026688575744629
    8. '```' → logprob: -8.526688575744629
    9. ',' → logprob: -9.401688575744629
    10. ' counter' → logprob: -9.526688575744629

Token 404: ' i' (ID: 575)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.48138368129730225
    2. ' counter' → logprob: -0.9813836812973022
    3. '           ' → logprob: -5.606383800506592
    4. '   ' → logprob: -5.731383800506592
    5. '	counter' → logprob: -8.731383323669434
    6. '       ' → logprob: -8.981383323669434
    7. '[counter' → logprob: -11.356383323669434
    8. 'i' (adapté à ' i') → logprob: -11.606383323669434
    9. 'count' → logprob: -11.731383323669434
    10. '```' → logprob: -11.731383323669434

Token 405: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.007611948065459728
    2. '+=' → logprob: -4.8826117515563965
    3. '+' → logprob: -12.632612228393555
    4. ' +' → logprob: -13.132612228393555
    5. '=' → logprob: -15.007612228393555
    6. ' =' → logprob: -16.382612228393555
    7. ']+=' → logprob: -16.757612228393555
    8. '    ' → logprob: -16.882612228393555
    9. ' ' → logprob: -17.507612228393555
    10. '   ' → logprob: -17.757612228393555

Token 406: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06206325441598892
    2. '2' → logprob: -2.812063217163086
    3. ' ' → logprob: -9.312063217163086
    4. '3' → logprob: -12.437063217163086
    5. '   ' → logprob: -14.124563217163086
    6. '
' → logprob: -16.499563217163086
    7. '  ' → logprob: -16.624563217163086
    8. '0' → logprob: -16.874563217163086
    9. '１' → logprob: -17.124563217163086
    10. '```' → logprob: -17.624563217163086

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16026292741298676
    2. '2' → logprob: -1.910262942314148
    3. '3' → logprob: -10.410263061523438
    4. ' ' → logprob: -11.910263061523438
    5. '   ' → logprob: -14.535263061523438
    6. '0' → logprob: -15.472763061523438
    7. '１' → logprob: -15.972763061523438
    8. '  ' → logprob: -16.097763061523438
    9. '```' → logprob: -16.222763061523438
    10. '`' → logprob: -16.222763061523438

Token 408: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011080671101808548
    2. 'else' → logprob: -7.626108169555664
    3. '<|end|>' → logprob: -7.751108169555664
    4. ' else' → logprob: -9.501108169555664
    5. '   ' → logprob: -9.876108169555664
    6. '           ' → logprob: -10.626108169555664
    7. ')' → logprob: -10.876108169555664
    8. ',' → logprob: -11.876108169555664
    9. 'elif' → logprob: -12.751108169555664
    10. '[' → logprob: -13.251108169555664

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.913265239447355e-05
    2. '   ' → logprob: -10.250099182128906
    3. '           ' → logprob: -10.750099182128906
    4. 'else' → logprob: -10.875099182128906
    5. ',' → logprob: -11.875099182128906
    6. 'counter' → logprob: -12.000099182128906
    7. '```' → logprob: -12.500099182128906
    8. '<|end|>' → logprob: -13.000099182128906
    9. ' else' → logprob: -14.000099182128906
    10. '[' → logprob: -14.125099182128906

Token 410: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017670096829533577
    2. 'else' → logprob: -4.142670154571533
    3. ' else' → logprob: -6.892670154571533
    4. 'elif' → logprob: -7.517670154571533
    5. '   ' → logprob: -9.892669677734375
    6. ' elif' → logprob: -11.267669677734375
    7. '```' → logprob: -12.767669677734375
    8. '           ' → logprob: -13.142669677734375
    9. '<|end|>' → logprob: -13.392669677734375
    10. ',' → logprob: -13.892669677734375

Token 411: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.28856828808784485
    2. 'elif' → logprob: -1.4135682582855225
    3. ' else' → logprob: -5.413568496704102
    4. '       ' → logprob: -6.663568496704102
    5. ' elif' → logprob: -7.038568496704102
    6. '   ' → logprob: -7.163568496704102
    7. '    ' → logprob: -13.163568496704102
    8. 'elseif' → logprob: -14.163568496704102
    9. '           ' → logprob: -14.288568496704102
    10. '#' → logprob: -14.288568496704102

Token 412: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6932421326637268
    2. ' a' → logprob: -0.6932421326637268
    3. ' ' → logprob: -9.818242073059082
    4. 'i' → logprob: -10.943242073059082
    5. ' i' → logprob: -12.068242073059082
    6. '   ' → logprob: -12.193242073059082
    7. '	a' → logprob: -13.068242073059082
    8. '    ' → logprob: -13.193242073059082
    9. ' ' → logprob: -13.318242073059082
    10. '  ' → logprob: -13.443242073059082

Token 413: ''' (ID: 6)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01896403543651104
    2. ' a' → logprob: -5.018963813781738
    3. ' i' → logprob: -5.518963813781738
    4. 'i' → logprob: -5.893963813781738
    5. ']' → logprob: -6.143963813781738
    6. 'a' → logprob: -6.143963813781738
    7. ' [' → logprob: -7.268963813781738
    8. '[a' → logprob: -8.768963813781738
    9. '[' → logprob: -9.143963813781738
    10. ' ]' → logprob: -10.518963813781738

Token 414: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8277543187141418
    2. '[i' → logprob: -0.8277543187141418
    3. 'i' → logprob: -2.702754259109497
    4. ' a' → logprob: -3.202754259109497
    5. ' i' → logprob: -4.077754497528076
    6. ']' → logprob: -7.952754497528076
    7. '[a' → logprob: -7.952754497528076
    8. ' [' → logprob: -9.202754020690918
    9. 'elif' → logprob: -9.327754020690918
    10. ' previous' → logprob: -9.327754020690918

Token 415: 'ment' (ID: 508)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06097716838121414
    2. '[i' → logprob: -3.5609772205352783
    3. ']' → logprob: -4.185976982116699
    4. '[' → logprob: -5.685976982116699
    5. 'ment' → logprob: -5.685976982116699
    6. '   ' → logprob: -6.060976982116699
    7. ' i' → logprob: -6.810976982116699
    8. 't' → logprob: -7.060976982116699
    9. 'm' → logprob: -7.810976982116699
    10. 'e' → logprob: -7.810976982116699

Token 416: ' courant' (ID: 74694)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0018172669224441051
    2. ']' → logprob: -6.376817226409912
    3. ' [' → logprob: -9.62681770324707
    4. ' i' → logprob: -11.00181770324707
    5. 'i' → logprob: -11.37681770324707
    6. '[' → logprob: -11.75181770324707
    7. '   ' → logprob: -12.87681770324707
    8. '][' → logprob: -13.12681770324707
    9. '```' → logprob: -13.50181770324707
    10. ')' → logprob: -13.62681770324707

Token 417: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01185558456927538
    2. '==' → logprob: -4.636855602264404
    3. ']' → logprob: -6.511855602264404
    4. ']==' → logprob: -7.511855602264404
    5. ')' → logprob: -10.511855125427246
    6. ' ]' → logprob: -11.511855125427246
    7. ' ' → logprob: -11.636855125427246
    8. ')==' → logprob: -12.011855125427246
    9. '   ' → logprob: -12.636855125427246
    10. '```' → logprob: -13.386855125427246

Token 418: ' ident' (ID: 3951)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3724478483200073
    2. ' égal' → logprob: -2.122447967529297
    3. '==' → logprob: -2.497447967529297
    4. ' equal' → logprob: -2.747447967529297
    5. ' ' → logprob: -4.747447967529297
    6. ' ég' → logprob: -4.747447967529297
    7. 'equal' → logprob: -5.247447967529297
    8. ')' → logprob: -5.622447967529297
    9. 'égal' → logprob: -5.997447967529297
    10. 'a' → logprob: -6.122447967529297

Token 419: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.000533136713784188
    2. 'que' → logprob: -8.750533103942871
    3. 't' → logprob: -9.500533103942871
    4. 'f' → logprob: -9.625533103942871
    5. 'i' → logprob: -9.625533103942871
    6. 'ical' → logprob: -10.250533103942871
    7. 'iqu' → logprob: -10.250533103942871
    8. 'if' → logprob: -10.250533103942871
    9. 'iqué' → logprob: -11.375533103942871
    10. 'iq' → logprob: -11.875533103942871

Token 420: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.33822694420814514
    2. 'au' → logprob: -1.7132269144058228
    3. ' à' → logprob: -2.8382270336151123
    4. '==' → logprob: -3.7132270336151123
    5. 'a' → logprob: -4.838226795196533
    6. ' ==' → logprob: -5.213226795196533
    7. 'à' → logprob: -5.588226795196533
    8. ' a' → logprob: -5.588226795196533
    9. 'to' → logprob: -7.588226795196533
    10. ' ' → logprob: -7.588226795196533

Token 421: ' précédent' (ID: 128462)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.4099375605583191
    2. 'i' → logprob: -1.7849376201629639
    3. '[i' → logprob: -1.9099376201629639
    4. 'a' → logprob: -4.534937381744385
    5. ' précédent' → logprob: -4.784937381744385
    6. 'preced' → logprob: -7.034937381744385
    7. '[' → logprob: -9.034937858581543
    8. '```' → logprob: -9.909937858581543
    9. 'previous' → logprob: -10.034937858581543
    10. 'Pr' → logprob: -10.034937858581543

Token 422: ' (' (ID: 350)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47906988859176636
    2. ':' → logprob: -1.1040699481964111
    3. '       ' → logprob: -3.354069948196411
    4. '           ' → logprob: -4.729069709777832
    5. '   ' → logprob: -5.479069709777832
    6. '):
' → logprob: -8.229069709777832
    7. ' and' → logprob: -8.479069709777832
    8. ',' → logprob: -8.729069709777832
    9. ' :
' → logprob: -9.104069709777832
    10. '```' → logprob: -9.479069709777832

Token 423: 'mais' (ID: 29170)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3711960017681122
    2. '           ' → logprob: -1.3711960315704346
    3. '       ' → logprob: -3.2461960315704346
    4. ':
' → logprob: -4.2461957931518555
    5. ':' → logprob: -7.1211957931518555
    6. '   ' → logprob: -7.6211957931518555
    7. ')' → logprob: -7.6211957931518555
    8. 'i' → logprob: -7.7461957931518555
    9. '):' → logprob: -7.8711957931518555
    10. '          ' → logprob: -9.371195793151855

Token 424: ' différent' (ID: 114823)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.21356694400310516
    2. 'not' → logprob: -1.7135668992996216
    3. ' pas' → logprob: -4.713566780090332
    4. '   ' → logprob: -7.213566780090332
    5. 'i' → logprob: -7.463566780090332
    6. ' i' → logprob: -7.588566780090332
    7. '    ' → logprob: -8.088566780090332
    8. '       ' → logprob: -8.213566780090332
    9. 'pas' → logprob: -8.213566780090332
    10. '           ' → logprob: -9.213566780090332

Token 425: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6498789191246033
    2. 'de' → logprob: -0.7748789191246033
    3. ' du' → logprob: -5.274878978729248
    4. '   ' → logprob: -5.899878978729248
    5. 'from' → logprob: -6.399878978729248
    6. '),' → logprob: -6.399878978729248
    7. ' des' → logprob: -6.899878978729248
    8. '):
' → logprob: -7.149878978729248
    9. '):' → logprob: -7.149878978729248
    10. ')' → logprob: -7.274878978729248

Token 426: ' suivant' (ID: 68705)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.10344094038009644
    2. ' suivant' → logprob: -2.728440999984741
    3. 'i' → logprob: -4.603440761566162
    4. 'a' → logprob: -4.853440761566162
    5. 'succ' → logprob: -4.978440761566162
    6. '[i' → logprob: -5.853440761566162
    7. 'next' → logprob: -6.103440761566162
    8. '+' → logprob: -6.978440761566162
    9. '```' → logprob: -7.228440761566162
    10. 'plus' → logprob: -7.978440761566162

Token 427: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.028166387230157852
    2. '):' → logprob: -3.6531662940979004
    3. ')' → logprob: -6.6531662940979
    4. '),' → logprob: -8.278166770935059
    5. '):

' → logprob: -9.653166770935059
    6. '           ' → logprob: -9.778166770935059
    7. '   ' → logprob: -9.778166770935059
    8. ' ):
' → logprob: -9.778166770935059
    9. '       ' → logprob: -10.403166770935059
    10. ':
' → logprob: -11.278166770935059

Token 428: ' incr' (ID: 52395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10088367760181427
    2. 'counter' → logprob: -3.350883722305298
    3. '       ' → logprob: -3.850883722305298
    4. ' counter' → logprob: -4.100883483886719
    5. ':
' → logprob: -4.350883483886719
    6. '   ' → logprob: -5.600883483886719
    7. ' i' → logprob: -5.725883483886719
    8. 'i' → logprob: -6.350883483886719
    9. '```' → logprob: -8.100883483886719
    10. '):
' → logprob: -8.225883483886719

Token 429: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.3148530125617981
    2. 'ément' → logprob: -1.3148529529571533
    3. 'éments' → logprob: -6.939853191375732
    4. 'counter' → logprob: -8.564852714538574
    5. 'ém' → logprob: -9.314852714538574
    6. ' counter' → logprob: -9.564852714538574
    7. 'ement' → logprob: -9.564852714538574
    8. '	counter' → logprob: -9.814852714538574
    9. '_counter' → logprob: -10.564852714538574
    10. '   ' → logprob: -10.564852714538574

Token 430: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.09456481784582138
    2. 'ment' → logprob: -2.469564914703369
    3. 'counter' → logprob: -5.969564914703369
    4. 'm' → logprob: -6.719564914703369
    5. 'mé' → logprob: -7.469564914703369
    6. 'nte' → logprob: -8.219564437866211
    7. 'mentation' → logprob: -8.594564437866211
    8. 'ments' → logprob: -8.719564437866211
    9. ' counter' → logprob: -9.094564437866211
    10. 'ément' → logprob: -9.719564437866211

Token 431: ' le' (ID: 505)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.05366158112883568
    2. 'counter' → logprob: -3.053661584854126
    3. '           ' → logprob: -5.303661346435547
    4. '	counter' → logprob: -11.303661346435547
    5. '(counter' → logprob: -11.553661346435547
    6. ' i' → logprob: -11.803661346435547
    7. ' le' → logprob: -11.928661346435547
    8. '            ' → logprob: -12.053661346435547
    9. '_counter' → logprob: -12.178661346435547
    10. ' ' → logprob: -12.178661346435547

Token 432: ' compteur' (ID: 163344)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.006732660811394453
    2. ' counter' → logprob: -5.00673246383667
    3. '   ' → logprob: -12.131732940673828
    4. 'i' → logprob: -12.506732940673828
    5. '
' → logprob: -12.881732940673828
    6. '	counter' → logprob: -13.631732940673828
    7. '```' → logprob: -14.131732940673828
    8. ' compteur' → logprob: -14.381732940673828
    9. ' ' → logprob: -14.631732940673828
    10. '[counter' → logprob: -14.631732940673828

Token 433: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018699290230870247
    2. '       ' → logprob: -4.2686991691589355
    3. ' and' → logprob: -5.7686991691589355
    4. ',' → logprob: -7.3936991691589355
    5. '   ' → logprob: -8.518699645996094
    6. ':
' → logprob: -9.018699645996094
    7. '               ' → logprob: -9.518699645996094
    8. '```' → logprob: -9.768699645996094
    9. '=' → logprob: -10.018699645996094
    10. ' =' → logprob: -10.143699645996094

Token 434: ' saute' (ID: 146395)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03906072676181793
    2. 'i' → logprob: -3.2890608310699463
    3. '           ' → logprob: -7.414060592651367
    4. '   ' → logprob: -8.664060592651367
    5. '       ' → logprob: -9.164060592651367
    6. '    ' → logprob: -10.039060592651367
    7. ' counter' → logprob: -10.289060592651367
    8. '```' → logprob: -11.039060592651367
    9. '	i' → logprob: -11.289060592651367
    10. 'counter' → logprob: -11.289060592651367

Token 435: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12208335846662521
    2. '2' → logprob: -2.7470834255218506
    3. '1' → logprob: -2.9970834255218506
    4. ' deux' → logprob: -7.6220831871032715
    5. '   ' → logprob: -8.62208366394043
    6. ' two' → logprob: -9.62208366394043
    7. ' i' → logprob: -10.37208366394043
    8. '    ' → logprob: -10.37208366394043
    9. ' une' → logprob: -10.99708366394043
    10. ' un' → logprob: -11.74708366394043

Token 436: ' élément' (ID: 99627)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24186484515666962
    2. ' i' → logprob: -1.741864800453186
    3. '1' → logprob: -3.2418649196624756
    4. ' ' → logprob: -8.616865158081055
    5. '   ' → logprob: -9.116865158081055
    6. 'élé' → logprob: -9.741865158081055
    7. '```' → logprob: -10.116865158081055
    8. '    ' → logprob: -10.491865158081055
    9. '+' → logprob: -10.616865158081055
    10. '  ' → logprob: -11.241865158081055

Token 437: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5379452109336853
    2. ':
' → logprob: -1.41294527053833
    3. ':' → logprob: -2.03794527053833
    4. '           ' → logprob: -3.41294527053833
    5. '   ' → logprob: -5.16294527053833
    6. '```' → logprob: -6.03794527053833
    7. '):
' → logprob: -8.162944793701172
    8. '<|end|>' → logprob: -8.287944793701172
    9. ' :
' → logprob: -8.412944793701172
    10. ',' → logprob: -9.412944793701172

Token 438: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4475931227207184
    2. '       ' → logprob: -1.072593092918396
    3. '   ' → logprob: -4.1975932121276855
    4. ':
' → logprob: -6.3225932121276855
    5. ':' → logprob: -6.5725932121276855
    6. '```' → logprob: -8.947592735290527
    7. '               ' → logprob: -9.947592735290527
    8. ' i' → logprob: -10.322592735290527
    9. '<|end|>' → logprob: -10.322592735290527
    10. 'i' → logprob: -10.572592735290527

Token 439: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6472525596618652
    2. '       ' → logprob: -1.0222525596618652
    3. ' else' → logprob: -2.7722525596618652
    4. 'elif' (adapté à ' elif') → logprob: -3.5222525596618652
    5. '   ' → logprob: -4.272252559661865
    6. 'counter' → logprob: -5.272252559661865
    7. ' counter' → logprob: -5.897252559661865
    8. ' elif' → logprob: -6.522252559661865
    9. '           ' → logprob: -6.772252559661865
    10. '```' → logprob: -10.022253036499023

Token 440: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931527256965637
    2. ' a' → logprob: -0.6931527256965637
    3. ' ' → logprob: -13.06815242767334
    4. '   ' → logprob: -13.44315242767334
    5. '	a' → logprob: -13.94315242767334
    6. '    ' → logprob: -14.81815242767334
    7. '(a' → logprob: -14.94315242767334
    8. ' ' → logprob: -16.193153381347656
    9. 'i' → logprob: -16.318153381347656
    10. '[a' → logprob: -16.443153381347656

Token 441: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.5
    3. ' [' → logprob: -16.625
    4. '   ' → logprob: -17.125
    5. '[' → logprob: -17.875
    6. '[
' → logprob: -19.125
    7. '(i' → logprob: -20.0
    8. '```' → logprob: -20.25
    9. '[I' → logprob: -20.25
    10. '[a' → logprob: -20.75

Token 442: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47876420617103577
    2. '-' → logprob: -0.9787641763687134
    3. ']==' → logprob: -5.478764057159424
    4. ' -' → logprob: -7.728764057159424
    5. ' ]' → logprob: -9.853764533996582
    6. '   ' → logprob: -12.853764533996582
    7. ' ' → logprob: -12.978764533996582
    8. '```' → logprob: -13.978764533996582
    9. ']
' → logprob: -14.603764533996582
    10. '-
' → logprob: -14.728764533996582

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '-' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.875001907348633
    4. '```' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '2' → logprob: -17.000001907348633
    7. ']' → logprob: -17.500001907348633
    8. '
' → logprob: -18.000001907348633
    9. '...' → logprob: -18.937501907348633
    10. '0' → logprob: -18.937501907348633

Token 444: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004716464783996344
    2. ']==' → logprob: -5.379716396331787
    3. ' ]' → logprob: -9.879716873168945
    4. '==' → logprob: -10.129716873168945
    5. ' ==' → logprob: -12.254716873168945
    6. ')' → logprob: -15.754716873168945
    7. ']=' → logprob: -16.504716873168945
    8. '']' → logprob: -16.879716873168945
    9. '```' → logprob: -17.004716873168945
    10. '}' → logprob: -17.254716873168945

Token 445: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47409749031066895
    2. ' ==' → logprob: -0.974097490310669
    3. ']==' → logprob: -11.34909725189209
    4. '=' → logprob: -12.22409725189209
    5. '==
' → logprob: -12.97409725189209
    6. ']' → logprob: -14.72409725189209
    7. ')==' → logprob: -14.97409725189209
    8. ' ' → logprob: -15.09909725189209
    9. '===' → logprob: -16.349098205566406
    10. ')' → logprob: -16.349098205566406

Token 446: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.048587486147880554
    2. ' a' → logprob: -3.0485875606536865
    3. '	a' → logprob: -16.423587799072266
    4. 'i' → logprob: -17.048587799072266
    5. ' ' → logprob: -18.173587799072266
    6. '[a' → logprob: -18.548587799072266
    7. '   ' → logprob: -18.923587799072266
    8. ' ' → logprob: -19.298587799072266
    9. '_a' → logprob: -19.673587799072266
    10. ''a' → logprob: -19.923587799072266

Token 447: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009159822366200387
    2. 'i' → logprob: -7.000916004180908
    3. ']' → logprob: -12.75091552734375
    4. ' i' → logprob: -14.37591552734375
    5. '][' → logprob: -15.00091552734375
    6. ' [' → logprob: -15.25091552734375
    7. '   ' → logprob: -15.37591552734375
    8. '[' → logprob: -15.50091552734375
    9. '(i' → logprob: -17.12591552734375
    10. 'a' → logprob: -17.25091552734375

Token 448: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5542786121368408
    2. ':' → logprob: -1.5542786121368408
    3. '):
' → logprob: -2.054278612136841
    4. ' and' → logprob: -2.804278612136841
    5. '       ' → logprob: -4.554278373718262
    6. ' :
' → logprob: -5.429278373718262
    7. '           ' → logprob: -5.679278373718262
    8. '):' → logprob: -6.429278373718262
    9. '   ' → logprob: -6.554278373718262
    10. 'and' → logprob: -6.679278373718262

Token 449: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008502763696014881
    2. '           ' → logprob: -5.008502960205078
    3. ':' → logprob: -7.508502960205078
    4. '   ' → logprob: -7.633502960205078
    5. ':
' → logprob: -7.758502960205078
    6. ' counter' → logprob: -8.383502960205078
    7. 'counter' → logprob: -9.883502960205078
    8. '):
' → logprob: -11.508502960205078
    9. '```' → logprob: -11.758502960205078
    10. '<|end|>' → logprob: -12.008502960205078

Token 450: ' i' (ID: 575)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.23119215667247772
    2. 'counter' → logprob: -1.7311921119689941
    3. '       ' → logprob: -3.606192111968994
    4. '   ' → logprob: -6.481192111968994
    5. '           ' → logprob: -8.106192588806152
    6. '	counter' → logprob: -8.106192588806152
    7. '```' → logprob: -11.356192588806152
    8. '_counter' → logprob: -11.606192588806152
    9. 'count' → logprob: -12.106192588806152
    10. '[counter' → logprob: -12.356192588806152

Token 451: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01107140351086855
    2. '+=' → logprob: -4.51107120513916
    3. '+' → logprob: -10.88607120513916
    4. ' +' → logprob: -12.63607120513916
    5. '=' → logprob: -13.76107120513916
    6. '1' → logprob: -15.38607120513916
    7. ' =' → logprob: -15.76107120513916
    8. '   ' → logprob: -17.386072158813477
    9. '    ' → logprob: -17.511072158813477
    10. ' ' → logprob: -17.636072158813477

Token 452: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020882810931652784
    2. ' ' → logprob: -6.2520880699157715
    3. '2' → logprob: -8.75208854675293
    4. '   ' → logprob: -13.75208854675293
    5. '0' → logprob: -15.37708854675293
    6. '3' → logprob: -15.87708854675293
    7. '  ' → logprob: -17.00208854675293
    8. '4' → logprob: -17.56458854675293
    9. '```' → logprob: -17.68958854675293
    10. '    ' → logprob: -18.06458854675293

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.380904672667384e-05
    2. '2' → logprob: -10.500033378601074
    3. '0' → logprob: -12.750033378601074
    4. ' ' → logprob: -12.750033378601074
    5. '3' → logprob: -16.06253433227539
    6. '   ' → logprob: -16.81253433227539
    7. '```' → logprob: -17.93753433227539
    8. '4' → logprob: -18.37503433227539
    9. '
' → logprob: -18.43753433227539
    10. '-' → logprob: -18.50003433227539

Token 454: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22502098977565765
    2. '           ' → logprob: -1.7250210046768188
    3. '   ' → logprob: -4.975020885467529
    4. 'counter' → logprob: -5.600020885467529
    5. '
' → logprob: -5.725020885467529
    6. '<|end|>' → logprob: -5.850020885467529
    7. ' counter' → logprob: -6.100020885467529
    8. ' else' → logprob: -6.225020885467529
    9. 'else' → logprob: -6.850020885467529
    10. ',' → logprob: -8.100021362304688

Token 455: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5927232503890991
    2. '   ' → logprob: -0.9677232503890991
    3. '<|end|>' → logprob: -3.2177233695983887
    4. '           ' → logprob: -4.342723369598389
    5. '
' → logprob: -5.717723369598389
    6. '```' → logprob: -5.967723369598389
    7. ',' → logprob: -6.217723369598389
    8. '+' → logprob: -6.342723369598389
    9. 'counter' → logprob: -7.092723369598389
    10. ':
' → logprob: -7.467723369598389

Token 456: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.015177159570157528
    2. ' counter' → logprob: -4.265177249908447
    3. '           ' → logprob: -7.140177249908447
    4. '       ' → logprob: -8.515176773071289
    5. '   ' → logprob: -11.140176773071289
    6. '	counter' → logprob: -13.265176773071289
    7. 'count' → logprob: -13.390176773071289
    8. 'Counter' → logprob: -14.640176773071289
    9. '[counter' → logprob: -14.765176773071289
    10. '
' → logprob: -15.015176773071289

Token 457: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029751179739832878
    2. '+=' → logprob: -3.5297510623931885
    3. '+' → logprob: -14.40475082397461
    4. ' +' → logprob: -16.90475082397461
    5. ']+=' → logprob: -17.52975082397461
    6. '=' → logprob: -17.65475082397461
    7. '+='' → logprob: -18.77975082397461
    8. ' -=' → logprob: -19.02975082397461
    9. '<|end|>' → logprob: -19.27975082397461
    10. '+="' → logprob: -19.40475082397461

Token 458: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1269282102584839
    2. ' ' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.126928329467773
    4. '0' → logprob: -18.126928329467773
    5. '```' → logprob: -18.501928329467773
    6. '   ' → logprob: -19.501928329467773
    7. '<|end|>' → logprob: -19.501928329467773
    8. '2' → logprob: -19.626928329467773
    9. '+' → logprob: -19.876928329467773
    10. '=' → logprob: -20.251928329467773

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '2' → logprob: -21.375
    4. '```' → logprob: -21.375
    5. '0' → logprob: -21.875
    6. '-' → logprob: -22.125
    7. '   ' → logprob: -22.5
    8. '+' → logprob: -22.5
    9. '１' → logprob: -23.0
    10. '۱' → logprob: -23.0625

Token 460: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012165444204583764
    2. '<|end|>' → logprob: -7.376216411590576
    3. '   ' → logprob: -7.501216411590576
    4. '           ' → logprob: -11.501216888427734
    5. ')' → logprob: -11.626216888427734
    6. 'return' → logprob: -12.001216888427734
    7. 'else' → logprob: -12.876216888427734
    8. ' else' → logprob: -12.876216888427734
    9. '<|end|>' → logprob: -13.501216888427734
    10. ' return' → logprob: -13.626216888427734

Token 461: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007681751740165055
    2. '<|end|>' → logprob: -7.500768184661865
    3. '   ' → logprob: -8.750767707824707
    4. ' else' → logprob: -11.000767707824707
    5. 'else' → logprob: -11.500767707824707
    6. ')' → logprob: -11.625767707824707
    7. '           ' → logprob: -12.125767707824707
    8. '<|end|>' → logprob: -12.250767707824707
    9. 'return' → logprob: -12.500767707824707
    10. '```' → logprob: -12.875767707824707

Token 462: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05198894813656807
    2. '<|end|>' → logprob: -3.4269888401031494
    3. '   ' → logprob: -4.6769890785217285
    4. 'else' → logprob: -5.8019890785217285
    5. ' else' → logprob: -6.0519890785217285
    6. '+' → logprob: -7.1769890785217285
    7. 'return' → logprob: -7.1769890785217285
    8. ')' → logprob: -7.3019890785217285
    9. '    ' → logprob: -8.55198860168457
    10. ' ' → logprob: -8.80198860168457

Token 463: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39163804054260254
    2. '   ' → logprob: -1.1416380405426025
    3. ' return' → logprob: -5.391637802124023
    4. '       ' → logprob: -8.641637802124023
    5. '	return' → logprob: -11.641637802124023
    6. '    ' → logprob: -12.016637802124023
    7. '    
' → logprob: -13.141637802124023
    8. ' ' → logprob: -13.141637802124023
    9. '  ' → logprob: -13.516637802124023
    10. 'i' → logprob: -13.641637802124023

Token 464: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4405268132686615
    2. 'i' → logprob: -1.0655268430709839
    3. ' counter' → logprob: -5.440526962280273
    4. ' a' → logprob: -6.190526962280273
    5. 'counter' → logprob: -6.190526962280273
    6. 'a' → logprob: -6.690526962280273
    7. ' n' → logprob: -7.065526962280273
    8. 'n' → logprob: -7.690526962280273
    9. ' not' → logprob: -8.315526962280273
    10. '   ' → logprob: -8.690526962280273

Token 465: ' boucle' (ID: 174211)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28472042083740234
    2. 'i' → logprob: -1.4097204208374023
    3. ' ' → logprob: -6.659720420837402
    4. ' counter' → logprob: -7.284720420837402
    5. 'counter' → logprob: -7.784720420837402
    6. 'n' → logprob: -8.159720420837402
    7. ' n' → logprob: -8.534720420837402
    8. ' a' → logprob: -8.659720420837402
    9. ')' → logprob: -8.909720420837402
    10. 'a' → logprob: -9.784720420837402

Token 466: ' termine' (ID: 76900)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7204528450965881
    2. ' ==' → logprob: -1.8454527854919434
    3. '<|end|>' → logprob: -2.0954527854919434
    4. '   ' → logprob: -2.4704527854919434
    5. '==' → logprob: -3.5954527854919434
    6. ' +=' → logprob: -3.5954527854919434
    7. ' ' → logprob: -3.9704527854919434
    8. '<' → logprob: -4.220452785491943
    9. ' i' → logprob: -4.970452785491943
    10. '+' → logprob: -4.970452785491943

Token 467: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5148993134498596
    2. ' ==' → logprob: -2.014899253845215
    3. '+' → logprob: -2.764899253845215
    4. ' +=' → logprob: -2.889899253845215
    5. ':' → logprob: -3.764899253845215
    6. ' <' → logprob: -3.889899253845215
    7. ' i' → logprob: -4.014899253845215
    8. ' +' → logprob: -4.389899253845215
    9. '==' → logprob: -4.389899253845215
    10. 'i' → logprob: -4.514899253845215

Token 468: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.039940692484378815
    2. ' i' → logprob: -3.289940595626831
    3. 'n' → logprob: -6.78994083404541
    4. '   ' → logprob: -8.66494083404541
    5. ' ' → logprob: -8.91494083404541
    6. '1' → logprob: -9.16494083404541
    7. ' n' → logprob: -9.28994083404541
    8. 'len' → logprob: -9.53994083404541
    9. '  ' → logprob: -10.16494083404541
    10. ')' → logprob: -10.91494083404541

Token 469: ''avant' (ID: 161711)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06431116908788681
    2. ' return' → logprob: -3.9393112659454346
    3. 'return' → logprob: -4.4393110275268555
    4. ' i' → logprob: -5.0643110275268555
    5. 'e' → logprob: -5.1893110275268555
    6. '   ' → logprob: -5.4393110275268555
    7. 'else' → logprob: -5.8143110275268555
    8. 'elif' → logprob: -5.9393110275268555
    9. '```' → logprob: -6.4393110275268555
    10. '+' → logprob: -6.6893110275268555

Token 470: '-' (ID: 12)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.7199293971061707
    2. '-' → logprob: -1.2199294567108154
    3. '   ' → logprob: -1.5949294567108154
    4. 'der' → logprob: -4.469929218292236
    5. 'Dern' → logprob: -6.844929218292236
    6. '```' → logprob: -7.469929218292236
    7. ' dernier' → logprob: -7.719929218292236
    8. ' dernière' → logprob: -7.969929218292236
    9. '       ' → logprob: -8.594929695129395
    10. ' ' → logprob: -8.719929695129395

Token 471: 'dern' (ID: 19098)
  Prédit: 'dern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.00804166030138731
    2. 'der' → logprob: -5.008041858673096
    3. '-' → logprob: -6.633041858673096
    4. 'prem' → logprob: -12.133041381835938
    5. '   ' → logprob: -14.008041381835938
    6. '```' → logprob: -14.258041381835938
    7. 'Dern' → logprob: -14.258041381835938
    8. 'last' → logprob: -14.633041381835938
    9. ' dernier' → logprob: -15.258041381835938
    10. 'avant' → logprob: -15.383041381835938

Token 472: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.000374546303646639
    2. '-' → logprob: -8.250374794006348
    3. 'i' → logprob: -10.000374794006348
    4. 'ière' → logprob: -10.500374794006348
    5. 'der' → logprob: -11.250374794006348
    6. '```' → logprob: -12.625374794006348
    7. 'er' → logprob: -12.750374794006348
    8. 'iert' → logprob: -12.750374794006348
    9. 'dern' → logprob: -12.750374794006348
    10. 'nier' → logprob: -12.875374794006348

Token 473: ' élément' (ID: 99627)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6142461895942688
    2. 'i' → logprob: -0.8642461895942688
    3. ')' → logprob: -4.864246368408203
    4. 'élé' → logprob: -5.114246368408203
    5. 'element' → logprob: -5.239246368408203
    6. ' i' → logprob: -5.364246368408203
    7. '   ' → logprob: -5.864246368408203
    8. 'indice' → logprob: -5.989246368408203
    9. 'index' → logprob: -6.114246368408203
    10. '}' → logprob: -6.989246368408203

Token 474: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8952831029891968
    2. '       ' → logprob: -1.0202831029891968
    3. '   ' → logprob: -2.3952832221984863
    4. ' and' → logprob: -2.7702832221984863
    5. ':
' → logprob: -3.0202832221984863
    6. ' or' → logprob: -3.7702832221984863
    7. '+' → logprob: -6.520283222198486
    8. ',' → logprob: -6.895283222198486
    9. 'and' → logprob: -6.895283222198486
    10. ' +' → logprob: -8.145282745361328

Token 475: ' vér' (ID: 42524)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4993479251861572
    2. '   ' → logprob: -0.9993479251861572
    3. ' if' → logprob: -4.249347686767578
    4. 'if' → logprob: -4.749347686767578
    5. ' i' → logprob: -7.249347686767578
    6. ' return' → logprob: -7.749347686767578
    7. 'i' → logprob: -7.999347686767578
    8. 'return' → logprob: -7.999347686767578
    9. '    ' → logprob: -9.999347686767578
    10. '
' → logprob: -10.124347686767578

Token 476: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.062204405665397644
    2. 'if' → logprob: -2.812204360961914
    3. 'ifiez' → logprob: -8.812204360961914
    4. 'ifier' → logprob: -10.437204360961914
    5. 'ifi' → logprob: -11.062204360961914
    6. 'ify' → logprob: -11.312204360961914
    7. 'ifiant' → logprob: -11.437204360961914
    8. 'i' → logprob: -12.187204360961914
    9. '   ' → logprob: -12.937204360961914
    10. 'f' → logprob: -13.062204360961914

Token 477: ' un' (ID: 537)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.057178933173418045
    2. 'if' → logprob: -3.3071789741516113
    3. ' i' → logprob: -4.307178974151611
    4. ' si' → logprob: -6.057178974151611
    5. '   ' → logprob: -6.182178974151611
    6. 'i' → logprob: -7.557178974151611
    7. ' s' → logprob: -8.682178497314453
    8. 'si' → logprob: -9.057178497314453
    9. ' ' → logprob: -9.557178497314453
    10. 's' → logprob: -9.682178497314453

Token 478: ' dernier' (ID: 27982)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1322450488805771
    2. ' if' → logprob: -2.3822450637817383
    3. 'e' → logprob: -4.507245063781738
    4. 'elif' → logprob: -4.882245063781738
    5. 'i' → logprob: -5.507245063781738
    6. '   ' → logprob: -5.757245063781738
    7. '```' → logprob: -6.757245063781738
    8. ' i' → logprob: -6.882245063781738
    9. ' return' → logprob: -7.382245063781738
    10. ' possible' → logprob: -7.632245063781738

Token 479: ' motif' (ID: 72753)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5016317367553711
    2. ' cas' → logprob: -1.751631736755371
    3. ' if' → logprob: -2.126631736755371
    4. 'cas' → logprob: -3.376631736755371
    5. 'élé' → logprob: -4.126631736755371
    6. ' élément' → logprob: -4.126631736755371
    7. 'element' → logprob: -5.001631736755371
    8. 'case' → logprob: -5.751631736755371
    9. ' ' → logprob: -5.876631736755371
    10. 'i' → logprob: -6.376631736755371

Token 480: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000591278774663806
    2. ' if' → logprob: -7.625591278076172
    3. ':' → logprob: -10.000591278076172
    4. ',' → logprob: -11.000591278076172
    5. 'if' → logprob: -11.125591278076172
    6. '    ' → logprob: -11.375591278076172
    7. ' and' → logprob: -12.500591278076172
    8. '<|end|>' → logprob: -13.500591278076172
    9. ' :' → logprob: -13.625591278076172
    10. '       ' → logprob: -13.625591278076172

Token 481: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09017282724380493
    2. ' i' → logprob: -2.46517276763916
    3. 'n' → logprob: -7.59017276763916
    4. 'a' → logprob: -7.59017276763916
    5. ' n' → logprob: -9.09017276763916
    6. 'if' → logprob: -10.84017276763916
    7. ' a' → logprob: -10.84017276763916
    8. 'True' → logprob: -11.59017276763916
    9. '(i' → logprob: -11.59017276763916
    10. ' la' → logprob: -11.84017276763916

Token 482: ' fin' (ID: 2131)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3838251233100891
    2. 'last' → logprob: -2.1338250637054443
    3. 'dern' → logprob: -2.5088250637054443
    4. 'i' → logprob: -2.7588250637054443
    5. ' last' → logprob: -4.383825302124023
    6. ' if' → logprob: -4.633825302124023
    7. 'elif' → logprob: -5.008825302124023
    8. 'while' → logprob: -5.508825302124023
    9. ' dernière' → logprob: -5.633825302124023
    10. ' i' → logprob: -5.758825302124023

Token 483: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024870390188880265
    2. ' if' → logprob: -9.125248908996582
    3. 'if' → logprob: -10.000248908996582
    4. '       ' → logprob: -10.000248908996582
    5. ':' → logprob: -10.250248908996582
    6. ':
' → logprob: -12.750248908996582
    7. '+' → logprob: -13.000248908996582
    8. ',' → logprob: -13.125248908996582
    9. '```' → logprob: -13.625248908996582
    10. '
' → logprob: -14.125248908996582

Token 484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000418040988733992
    2. ' if' → logprob: -7.875418186187744
    3. 'if' → logprob: -11.000417709350586
    4. '```' → logprob: -11.875417709350586
    5. '       ' → logprob: -12.000417709350586
    6. '    
' → logprob: -13.375417709350586
    7. '    ' → logprob: -13.500417709350586
    8. ':' → logprob: -13.750417709350586
    9. '
' → logprob: -14.125417709350586
    10. ',' → logprob: -14.250417709350586

Token 485: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.45601803064346313
    2. '   ' → logprob: -1.2060179710388184
    3. ' if' → logprob: -2.7060179710388184
    4. '    
' → logprob: -12.581018447875977
    5. '
' → logprob: -12.956018447875977
    6. '```' → logprob: -14.456018447875977
    7. 'i' → logprob: -15.081018447875977
    8. '	if' → logprob: -15.081018447875977
    9. ' ' → logprob: -15.206018447875977
    10. ' 
' → logprob: -15.331018447875977

Token 486: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2293386608362198
    2. 'i' → logprob: -1.6043386459350586
    3. ' n' → logprob: -6.354338645935059
    4. ' a' → logprob: -6.729338645935059
    5. 'a' → logprob: -7.479338645935059
    6. 'n' → logprob: -8.104338645935059
    7. ' ' → logprob: -9.604338645935059
    8. '   ' → logprob: -10.604338645935059
    9. '(i' → logprob: -11.479338645935059
    10. ' (' → logprob: -11.979338645935059

Token 487: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11327968537807465
    2. '==' → logprob: -2.2382795810699463
    3. ' <=' → logprob: -8.238279342651367
    4. '<=' → logprob: -9.238279342651367
    5. ' <' → logprob: -9.863279342651367
    6. ' ' → logprob: -10.863279342651367
    7. '<' → logprob: -11.488279342651367
    8. '=' → logprob: -12.488279342651367
    9. '   ' → logprob: -12.863279342651367
    10. ' >=' → logprob: -13.238279342651367

Token 488: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.749814019713085e-06
    2. ' n' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.375006675720215
    4. '	n' → logprob: -18.62500762939453
    5. 'len' → logprob: -19.12500762939453
    6. ' ' → logprob: -19.37500762939453
    7. '(n' → logprob: -20.25000762939453
    8. '  ' → logprob: -20.87500762939453
    9. '       ' → logprob: -22.00000762939453
    10. '    ' → logprob: -22.00000762939453

Token 489: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931505799293518
    2. ' -' → logprob: -0.6931505799293518
    3. ' ' → logprob: -12.943150520324707
    4. '   ' → logprob: -14.193150520324707
    5. '−' → logprob: -16.443151473999023
    6. '1' → logprob: -17.443151473999023
    7. ' ' → logprob: -17.568151473999023
    8. '–' → logprob: -17.693151473999023
    9. '  ' → logprob: -18.068151473999023
    10. '
' → logprob: -18.193151473999023

Token 490: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. '2' → logprob: -10.375032424926758
    3. ' ' → logprob: -14.250032424926758
    4. '   ' → logprob: -16.375032424926758
    5. '```' → logprob: -18.625032424926758
    6. '１' → logprob: -19.437532424926758
    7. '۱' → logprob: -19.437532424926758
    8. '-' → logprob: -19.562532424926758
    9. '  ' → logprob: -20.000032424926758
    10. '       ' → logprob: -20.500032424926758

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. '2' → logprob: -10.375031471252441
    3. ' ' → logprob: -15.250031471252441
    4. '```' → logprob: -17.375032424926758
    5. '   ' → logprob: -17.500032424926758
    6. '۱' → logprob: -18.000032424926758
    7. '１' → logprob: -18.500032424926758
    8. '-' → logprob: -18.937532424926758
    9. '१' → logprob: -19.375032424926758
    10. '  ' → logprob: -19.500032424926758

Token 492: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01338151004165411
    2. 'and' → logprob: -4.888381481170654
    3. '   ' → logprob: -5.888381481170654
    4. ':' → logprob: -6.263381481170654
    5. ':
' → logprob: -6.888381481170654
    6. '	and' → logprob: -10.013381958007812
    7. '       ' → logprob: -11.513381958007812
    8. ' ' → logprob: -12.763381958007812
    9. '  ' → logprob: -14.013381958007812
    10. '    ' → logprob: -14.138381958007812

Token 493: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10823358595371246
    2. ' if' → logprob: -2.483233690261841
    3. '       ' → logprob: -4.233233451843262
    4. 'if' → logprob: -5.733233451843262
    5. ' counter' → logprob: -7.358233451843262
    6. '
' → logprob: -8.233233451843262
    7. '```' → logprob: -8.733233451843262
    8. 'counter' → logprob: -9.108233451843262
    9. '    
' → logprob: -9.358233451843262
    10. ' and' → logprob: -10.983233451843262

Token 494: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004723795282188803
    2. '   ' → logprob: -8.125472068786621
    3. 'counter' → logprob: -8.750472068786621
    4. ' if' → logprob: -11.000472068786621
    5. '       ' → logprob: -14.125472068786621
    6. '```' → logprob: -15.125472068786621
    7. '
' → logprob: -15.750472068786621
    8. 'return' → logprob: -16.000473022460938
    9. '	if' → logprob: -16.500473022460938
    10. '[counter' → logprob: -18.500473022460938

Token 495: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001775618875399232
    2. 'i' → logprob: -6.626775741577148
    3. ' a' → logprob: -7.751775741577148
    4. '   ' → logprob: -11.876775741577148
    5. 'n' → logprob: -12.501775741577148
    6. ' i' → logprob: -13.001775741577148
    7. 'counter' → logprob: -13.001775741577148
    8. '(a' → logprob: -13.251775741577148
    9. ' ' → logprob: -14.126775741577148
    10. '	a' → logprob: -14.251775741577148

Token 496: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5451681974809617e-05
    2. '[-' → logprob: -11.375015258789062
    3. '[n' → logprob: -12.875015258789062
    4. 'i' → logprob: -13.750015258789062
    5. '   ' → logprob: -15.500015258789062
    6. '[' → logprob: -16.875015258789062
    7. '[a' → logprob: -17.375015258789062
    8. ' [' → logprob: -18.000015258789062
    9. '[I' → logprob: -18.875015258789062
    10. 'a' → logprob: -19.250015258789062

Token 497: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2560447156429291
    2. '-' → logprob: -2.131044626235962
    3. ']==' → logprob: -2.256044626235962
    4. '==' → logprob: -6.381044864654541
    5. ' ]' → logprob: -7.631044864654541
    6. ' -' → logprob: -9.756044387817383
    7. ' ==' → logprob: -10.256044387817383
    8. ')' → logprob: -10.631044387817383
    9. ' ' → logprob: -11.006044387817383
    10. ')==' → logprob: -11.131044387817383

Token 498: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005374510306864977
    2. ' ==' → logprob: -5.255374431610107
    3. '==
' → logprob: -9.130374908447266
    4. '=' → logprob: -11.255374908447266
    5. 'a' → logprob: -11.755374908447266
    6. ']==' → logprob: -12.880374908447266
    7. ')' → logprob: -13.255374908447266
    8. ')==' → logprob: -13.505374908447266
    9. '   ' → logprob: -14.005374908447266
    10. ' ' → logprob: -14.005374908447266

Token 499: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4855663721391466e-05
    2. ' a' → logprob: -11.125015258789062
    3. '	a' → logprob: -17.500015258789062
    4. ' ' → logprob: -17.750015258789062
    5. '   ' → logprob: -18.500015258789062
    6. '_a' → logprob: -20.125015258789062
    7. '     ' → logprob: -20.125015258789062
    8. ''a' → logprob: -20.250015258789062
    9. '  ' → logprob: -20.625015258789062
    10. '(a' → logprob: -20.750015258789062

Token 500: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002234236104413867
    2. 'i' → logprob: -6.12723445892334
    3. 'a' → logprob: -10.00223445892334
    4. ' i' → logprob: -14.00223445892334
    5. '
' → logprob: -14.12723445892334
    6. '[' → logprob: -14.50223445892334
    7. '   ' → logprob: -14.75223445892334
    8. '{i' → logprob: -15.50223445892334
    9. '[-' → logprob: -15.87723445892334
    10. 'n' → logprob: -16.002233505249023

Token 501: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001114106344175525
    2. ' -' → logprob: -9.12511157989502
    3. ']' → logprob: -14.25011157989502
    4. '[i' → logprob: -14.62511157989502
    5. 'i' → logprob: -14.75011157989502
    6. '1' → logprob: -14.87511157989502
    7. '-
' → logprob: -15.12511157989502
    8. '[' → logprob: -15.50011157989502
    9. ' ' → logprob: -15.75011157989502
    10. '
' → logprob: -17.375110626220703

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025877889711409807
    2. 'i' → logprob: -6.002587795257568
    3. '0' → logprob: -9.87758731842041
    4. '2' → logprob: -10.75258731842041
    5. 'a' → logprob: -11.25258731842041
    6. ' ' → logprob: -11.75258731842041
    7. '-' → logprob: -11.87758731842041
    8. '[i' → logprob: -12.50258731842041
    9. '```' → logprob: -13.12758731842041
    10. '   ' → logprob: -13.62758731842041

Token 503: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4984118938446045
    2. ']:' → logprob: -0.9984118938446045
    3. ']' → logprob: -3.7484118938446045
    4. ' ]' → logprob: -8.748412132263184
    5. ']:
' → logprob: -9.498412132263184
    6. ']==' → logprob: -9.623412132263184
    7. ':' → logprob: -9.623412132263184
    8. '       ' → logprob: -9.873412132263184
    9. '   ' → logprob: -10.498412132263184
    10. ']:

' → logprob: -11.373412132263184

Token 504: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0112535385414958
    2. '       ' → logprob: -4.511253356933594
    3. 'counter' → logprob: -9.261253356933594
    4. ' counter' → logprob: -9.636253356933594
    5. ':
' → logprob: -10.761253356933594
    6. '               ' → logprob: -12.261253356933594
    7. '
' → logprob: -12.511253356933594
    8. ':' → logprob: -12.636253356933594
    9. '	       ' → logprob: -12.636253356933594
    10. ',' → logprob: -12.886253356933594

Token 505: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.0017499112291261554
    2. '           ' → logprob: -6.5017499923706055
    3. ' counter' → logprob: -8.501749992370605
    4. '       ' → logprob: -10.251749992370605
    5. '               ' → logprob: -12.126749992370605
    6. '   ' → logprob: -12.876749992370605
    7. '	counter' → logprob: -13.751749992370605
    8. 'return' → logprob: -16.00174903869629
    9. '_counter' → logprob: -17.25174903869629
    10. 'Counter' → logprob: -17.37674903869629

Token 506: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5763837695121765
    2. '+=' → logprob: -0.8263837695121765
    3. '           ' → logprob: -7.826383590698242
    4. '+' → logprob: -10.451383590698242
    5. '            ' → logprob: -11.826383590698242
    6. '       ' → logprob: -12.701383590698242
    7. '               ' → logprob: -13.201383590698242
    8. '   ' → logprob: -13.326383590698242
    9. '          ' → logprob: -14.201383590698242
    10. ' +' → logprob: -14.701383590698242

Token 507: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.125015258789062
    4. '2' → logprob: -18.875015258789062
    5. '```' → logprob: -19.000015258789062
    6. '0' → logprob: -19.875015258789062
    7. '       ' → logprob: -21.375015258789062
    8. '  ' → logprob: -21.500015258789062
    9. '           ' → logprob: -21.750015258789062
    10. '+' → logprob: -21.812515258789062

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '0' → logprob: -20.25
    4. '2' → logprob: -20.5
    5. '   ' → logprob: -20.5
    6. '۱' → logprob: -21.0
    7. '```' → logprob: -21.5625
    8. '
' → logprob: -21.6875
    9. '１' → logprob: -22.0
    10. '!' → logprob: -22.3125

Token 509: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021097995340824127
    2. '
' → logprob: -4.5210981369018555
    3. 'return' → logprob: -4.8960981369018555
    4. '    
' → logprob: -6.5210981369018555
    5. ' return' → logprob: -7.5210981369018555
    6. '       ' → logprob: -8.271098136901855
    7. '<|end|>' → logprob: -8.646098136901855
    8. '        
' → logprob: -10.646098136901855
    9. ':return' → logprob: -11.896098136901855
    10. '  
' → logprob: -11.896098136901855

Token 510: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006895820144563913
    2. 'return' → logprob: -5.006896018981934
    3. ' return' → logprob: -8.631896018981934
    4. '       ' → logprob: -13.756896018981934
    5. '	return' → logprob: -14.506896018981934
    6. '```' → logprob: -15.006896018981934
    7. '
' → logprob: -16.631895065307617
    8. '    
' → logprob: -16.881895065307617
    9. ':return' → logprob: -17.006895065307617
    10. ' ' → logprob: -18.131895065307617

Token 511: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4794497787952423
    2. '   ' → logprob: -0.9794497489929199
    3. ' return' → logprob: -5.22944974899292
    4. '	return' → logprob: -13.854450225830078
    5. '       ' → logprob: -14.354450225830078
    6. '```' → logprob: -15.354450225830078
    7. ':return' → logprob: -17.229450225830078
    8. '{return' → logprob: -17.479450225830078
    9. ' ' → logprob: -17.729450225830078
    10. '  ' → logprob: -18.229450225830078

Token 512: ' counter' (ID: 9446)
  Prédit: ' counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.04858759790658951
    2. 'counter' → logprob: -3.0485875606536865
    3. 'Counter' → logprob: -16.548587799072266
    4. '	counter' → logprob: -16.923587799072266
    5. '_counter' → logprob: -17.298587799072266
    6. '(counter' → logprob: -17.798587799072266
    7. ' ' → logprob: -18.673587799072266
    8. '[counter' → logprob: -18.798587799072266
    9. 'ounter' → logprob: -19.673587799072266
    10. '.counter' → logprob: -19.923587799072266

Token 513: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 514: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: ' main' (ID: 2758)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5128359794616699
    2. ' sum' → logprob: -2.13783597946167
    3. ' find' → logprob: -3.26283597946167
    4. ' main' → logprob: -3.38783597946167
    5. ' process' → logprob: -3.51283597946167
    6. ' check' → logprob: -3.76283597946167
    7. ' calculate' → logprob: -3.88783597946167
    8. ' remove' → logprob: -3.88783597946167
    9. ' example' → logprob: -4.01283597946167
    10. ' factorial' → logprob: -4.26283597946167

Token 516: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005122834118083119
    2. '():
' → logprob: -8.25051212310791
    3. '(' → logprob: -8.75051212310791
    4. '()' → logprob: -10.00051212310791
    5. ' ():' → logprob: -10.12551212310791
    6. ':' → logprob: -13.00051212310791
    7. '_' → logprob: -13.62551212310791
    8. '():
' → logprob: -13.62551212310791
    9. '(:' → logprob: -14.50051212310791
    10. '(":' → logprob: -14.62551212310791

Token 517: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054366111755371094
    2. 'n' → logprob: -3.429366111755371
    3. '(n' → logprob: -4.554366111755371
    4. ' n' → logprob: -4.804366111755371
    5. '```' → logprob: -7.679366111755371
    6. 'a' → logprob: -8.554366111755371
    7. '    ' → logprob: -8.679366111755371
    8. '    
' → logprob: -8.804366111755371
    9. ' input' → logprob: -8.929366111755371
    10. ' 
' → logprob: -9.304366111755371

Token 518: ' """
' (ID: 7037)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.021495243534445763
    2. 'n' → logprob: -3.8964953422546387
    3. '   ' → logprob: -7.271495342254639
    4. ' import' → logprob: -8.89649486541748
    5. ' input' → logprob: -9.77149486541748
    6. '    ' → logprob: -11.52149486541748
    7. '	n' → logprob: -11.52149486541748
    8. ' a' → logprob: -11.89649486541748
    9. ' ' → logprob: -12.14649486541748
    10. ' pass' → logprob: -12.27149486541748

Token 519: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11435417830944061
    2. ' n' → logprob: -2.864354133605957
    3. 'n' → logprob: -2.989354133605957
    4. ' test' → logprob: -8.114354133605957
    5. 'a' → logprob: -8.739354133605957
    6. ' a' → logprob: -9.614354133605957
    7. '    ' → logprob: -10.614354133605957
    8. ' code' → logprob: -11.239354133605957
    9. ' #' → logprob: -11.364354133605957
    10. '  ' → logprob: -11.489354133605957

Token 520: ' Fonction' (ID: 189149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.100717544555664
    2. ' n' → logprob: -1.100717544555664
    3. 'n' → logprob: -1.225717544555664
    4. 'a' → logprob: -3.850717544555664
    5. ' a' → logprob: -5.225717544555664
    6. ' test' → logprob: -5.225717544555664
    7. ' user' → logprob: -6.850717544555664
    8. ' array' → logprob: -6.975717544555664
    9. ' code' → logprob: -7.100717544555664
    10. ' data' → logprob: -7.225717544555664

Token 521: ' principale' (ID: 68926)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.49506163597106934
    2. ' principale' → logprob: -1.6200616359710693
    3. ' test' → logprob: -2.9950616359710693
    4. '   ' → logprob: -3.1200616359710693
    5. 'def' → logprob: -3.2450616359710693
    6. ' d' → logprob: -4.120061874389648
    7. ' def' → logprob: -4.620061874389648
    8. ' to' → logprob: -4.995061874389648
    9. ' main' → logprob: -5.495061874389648
    10. '  ' → logprob: -5.620061874389648

Token 522: ' :
' (ID: 10039)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9079059958457947
    2. '   ' → logprob: -1.2829060554504395
    3. '():' → logprob: -1.6579060554504395
    4. '():
' → logprob: -2.7829060554504395
    5. '()' → logprob: -3.7829060554504395
    6. ':' → logprob: -3.7829060554504395
    7. '
' → logprob: -4.4079060554504395
    8. ':
' → logprob: -6.4079060554504395
    9. ' def' → logprob: -6.6579060554504395
    10. '    
' → logprob: -6.9079060554504395

Token 523: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017373013542965055
    2. 'def' → logprob: -7.001737117767334
    3. '    
' → logprob: -7.751737117767334
    4. '    ' → logprob: -8.251737594604492
    5. '
' → logprob: -10.126737594604492
    6. ' def' → logprob: -10.376737594604492
    7. 'n' → logprob: -11.251737594604492
    8. ' 
' → logprob: -11.376737594604492
    9. '       ' → logprob: -11.626737594604492
    10. '  ' → logprob: -12.126737594604492

Token 524: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01224497053772211
    2. '    ' → logprob: -4.637245178222656
    3. '
' → logprob: -7.387245178222656
    4. '    
' → logprob: -8.012245178222656
    5. 'Lire' → logprob: -8.637245178222656
    6. ' reads' → logprob: -8.762245178222656
    7. 'n' → logprob: -8.762245178222656
    8. 'def' → logprob: -8.762245178222656
    9. ' n' → logprob: -9.262245178222656
    10. ' ' → logprob: -9.262245178222656

Token 525: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5754741430282593
    2. ' n' → logprob: -1.0754741430282593
    3. 'n' → logprob: -2.950474262237549
    4. ' reads' → logprob: -4.450474262237549
    5. ' a' → logprob: -5.075474262237549
    6. 'a' → logprob: -5.325474262237549
    7. ' lit' → logprob: -5.450474262237549
    8. 'import' → logprob: -5.950474262237549
    9. ' read' → logprob: -5.950474262237549
    10. ' Lire' → logprob: -6.200474262237549

Token 526: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09783434867858887
    2. '()' → logprob: -2.597834348678589
    3. ' les' → logprob: -4.972834587097168
    4. ' la' → logprob: -5.597834587097168
    5. ' le' → logprob: -5.972834587097168
    6. ' n' → logprob: -6.222834587097168
    7. ' une' → logprob: -7.222834587097168
    8. 'n' → logprob: -7.472834587097168
    9. ' l' → logprob: -7.597834587097168
    10. '    ' → logprob: -7.847834587097168

Token 527: ' taille' (ID: 41644)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.2166195511817932
    2. 'n' → logprob: -2.3416194915771484
    3. 'nombre' → logprob: -2.4666194915771484
    4. '   ' → logprob: -5.716619491577148
    5. 'int' → logprob: -6.341619491577148
    6. 't' → logprob: -6.341619491577148
    7. 'ent' → logprob: -6.466619491577148
    8. ' ' → logprob: -6.716619491577148
    9. ' n' → logprob: -7.216619491577148
    10. ' nombres' → logprob: -7.591619491577148

Token 528: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01647981069982052
    2. ' de' → logprob: -4.891479969024658
    3. '()' → logprob: -5.391479969024658
    4. 'de' → logprob: -6.391479969024658
    5. '    ' → logprob: -6.766479969024658
    6. 'du' → logprob: -8.2664794921875
    7. 'n' → logprob: -8.3914794921875
    8. ' ' → logprob: -8.6414794921875
    9. ' du' → logprob: -8.7664794921875
    10. '(n' → logprob: -9.0164794921875

Token 529: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5722180604934692
    2. 'n' → logprob: -1.6972180604934692
    3. 'input' → logprob: -1.8222180604934692
    4. 'la' → logprob: -3.3222179412841797
    5. '   ' → logprob: -4.32221794128418
    6. ' l' → logprob: -4.69721794128418
    7. ' input' → logprob: -4.82221794128418
    8. ' la' → logprob: -4.94721794128418
    9. 'a' → logprob: -4.94721794128418
    10. 'int' → logprob: -5.94721794128418

Token 530: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.04752347618341446
    2. ' liste' → logprob: -3.1725234985351562
    3. 'list' → logprob: -6.297523498535156
    4. 'entrée' → logprob: -6.297523498535156
    5. 'input' → logprob: -7.172523498535156
    6. ' input' → logprob: -10.797523498535156
    7. 'lista' → logprob: -11.547523498535156
    8. 'n' → logprob: -11.922523498535156
    9. 'l' → logprob: -12.172523498535156
    10. ' list' → logprob: -12.297523498535156

Token 531: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2655046880245209
    2. 'n' → logprob: -1.5155047178268433
    3. ' n' → logprob: -5.265504837036133
    4. 'a' → logprob: -6.140504837036133
    5. '.' → logprob: -6.390504837036133
    6. ',' → logprob: -6.515504837036133
    7. ' (' → logprob: -6.890504837036133
    8. ' ' → logprob: -7.640504837036133
    9. '
' → logprob: -8.265504837036133
    10. '    
' → logprob: -8.640504837036133

Token 532: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006073639378882945
    2. 'n' → logprob: -8.37560749053955
    3. 'a' → logprob: -8.87560749053955
    4. ' n' → logprob: -9.12560749053955
    5. '    ' → logprob: -9.37560749053955
    6. '    
' → logprob: -11.87560749053955
    7. ' et' → logprob: -12.00060749053955
    8. '       ' → logprob: -12.12560749053955
    9. ' la' → logprob: -12.50060749053955
    10. ' a' → logprob: -12.62560749053955

Token 533: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37008386850357056
    2. 'a' → logprob: -1.2450838088989258
    3. ' a' → logprob: -4.120083808898926
    4. 'n' → logprob: -5.745083808898926
    5. ' n' → logprob: -6.620083808898926
    6. '    ' → logprob: -8.620083808898926
    7. ' ' → logprob: -9.245083808898926
    8. 't' → logprob: -9.245083808898926
    9. '#' → logprob: -9.620083808898926
    10. ' puis' → logprob: -10.370083808898926

Token 534: ' Lit' (ID: 45595)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20466682314872742
    2. ' a' → logprob: -1.7046668529510498
    3. '   ' → logprob: -6.329666614532471
    4. ' n' → logprob: -7.204666614532471
    5. 'n' → logprob: -7.454666614532471
    6. ' l' → logprob: -10.579667091369629
    7. 'l' → logprob: -10.704667091369629
    8. ' read' → logprob: -11.079667091369629
    9. ' reads' → logprob: -11.204667091369629
    10. ' lit' → logprob: -11.454667091369629

Token 535: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.002111478243023157
    2. ' ' → logprob: -7.127111434936523
    3. ' les' → logprob: -7.877111434936523
    4. ' l' → logprob: -8.002111434936523
    5. ' a' → logprob: -8.252111434936523
    6. 'a' → logprob: -9.502111434936523
    7. 'la' → logprob: -9.627111434936523
    8. ' the' → logprob: -9.627111434936523
    9. ' une' → logprob: -9.877111434936523
    10. '   ' → logprob: -11.002111434936523

Token 536: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.015921631827950478
    2. 'liste' → logprob: -4.265921592712402
    3. 'a' → logprob: -7.390921592712402
    4. 'list' → logprob: -8.140921592712402
    5. ' list' → logprob: -8.265921592712402
    6. ' a' → logprob: -9.015921592712402
    7. ' sequence' → logprob: -9.515921592712402
    8. ' ' → logprob: -9.640921592712402
    9. ' listes' → logprob: -9.765921592712402
    10. 'n' → logprob: -10.140921592712402

Token 537: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.05345502868294716
    2. ' de' → logprob: -4.303454875946045
    3. 'a' → logprob: -4.553454875946045
    4. '   ' → logprob: -5.053454875946045
    5. ' d' → logprob: -5.553454875946045
    6. ' complète' → logprob: -5.928454875946045
    7. 'des' → logprob: -5.928454875946045
    8. ' a' → logprob: -6.053454875946045
    9. '()' → logprob: -6.303454875946045
    10. ' entière' → logprob: -6.428454875946045

Token 538: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.04179295897483826
    2. 'ent' → logprob: -3.291792869567871
    3. ' ent' → logprob: -6.041792869567871
    4. '’ent' → logprob: -7.916792869567871
    5. 'ints' → logprob: -8.291792869567871
    6. 'inte' → logprob: -8.416792869567871
    7. ''' → logprob: -8.791792869567871
    8. ''entrée' → logprob: -9.041792869567871
    9. '_ent' → logprob: -10.291792869567871
    10. 'entrée' → logprob: -10.291792869567871

Token 539: 'iers' (ID: 11012)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rée' → logprob: -0.5374401211738586
    2. 'iers' → logprob: -1.0374400615692139
    3. 'rees' → logprob: -3.287440061569214
    4. 'r' → logprob: -4.287440299987793
    5. 'ree' → logprob: -5.162440299987793
    6. 'ries' → logprob: -6.787440299987793
    7. 'er' → logprob: -7.162440299987793
    8. 'rés' → logprob: -7.412440299987793
    9. 't' → logprob: -7.662440299987793
    10. 'ier' → logprob: -7.662440299987793

Token 540: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47449570894241333
    2. ',' → logprob: -1.7244956493377686
    3. ',
' → logprob: -1.7244956493377686
    4. 'n' → logprob: -4.849495887756348
    5. ' n' → logprob: -5.599495887756348
    6. ' à' → logprob: -6.474495887756348
    7. '    
' → logprob: -6.849495887756348
    8. ' ,
' → logprob: -6.974495887756348
    9. 'a' → logprob: -7.099495887756348
    10. '(n' → logprob: -7.724495887756348

Token 541: ' partir' (ID: 12100)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.5112227201461792
    2. ' traiter' → logprob: -1.8862227201461792
    3. ' analyser' → logprob: -2.8862228393554688
    4. ' supprimer' → logprob: -2.8862228393554688
    5. 'trait' → logprob: -3.1362228393554688
    6. 'tr' → logprob: -3.1362228393554688
    7. 'an' → logprob: -3.1362228393554688
    8. 'input' → logprob: -6.261222839355469
    9. 'analyse' → logprob: -7.261222839355469
    10. 'tra' → logprob: -7.511222839355469

Token 542: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7873446345329285
    2. ' de' → logprob: -1.0373446941375732
    3. ' d' → logprob: -2.0373446941375732
    4. '()' → logprob: -3.7873446941375732
    5. 'de' → logprob: -4.162344455718994
    6. 'd' → logprob: -5.287344455718994
    7. '=input' → logprob: -5.287344455718994
    8. ' du' → logprob: -5.912344455718994
    9. '=' → logprob: -6.162344455718994
    10. 'input' → logprob: -6.412344455718994

Token 543: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9240774512290955
    2. 'input' → logprob: -1.0490775108337402
    3. ' input' → logprob: -1.7990775108337402
    4. ' l' → logprob: -2.7990775108337402
    5. 'la' → logprob: -3.7990775108337402
    6. ' la' → logprob: -5.92407751083374
    7. 'une' → logprob: -7.92407751083374
    8. ' une' → logprob: -8.174077033996582
    9. 'entrée' → logprob: -8.674077033996582
    10. '=input' → logprob: -8.674077033996582

Token 544: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21950282156467438
    2. ''entrée' → logprob: -1.8445028066635132
    3. 'entrée' → logprob: -3.9695029258728027
    4. ' input' → logprob: -4.469502925872803
    5. 'a' → logprob: -5.969502925872803
    6. '=input' → logprob: -5.969502925872803
    7. 'e' → logprob: -5.969502925872803
    8. '   ' → logprob: -8.469502449035645
    9. 'stdin' → logprob: -8.469502449035645
    10. ''' → logprob: -9.219502449035645

Token 545: ' utilisateur' (ID: 115595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04037929326295853
    2. '()
' → logprob: -4.040379524230957
    3. '().' → logprob: -4.415379524230957
    4. '(),
' → logprob: -5.290379524230957
    5. '(),' → logprob: -5.915379524230957
    6. ',' → logprob: -6.915379524230957
    7. '   ' → logprob: -7.790379524230957
    8. '.' → logprob: -8.790379524230957
    9. ' standard' → logprob: -9.165379524230957
    10. ',
' → logprob: -9.665379524230957

Token 546: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009232869371771812
    2. ',' → logprob: -4.759232997894287
    3. ',
' → logprob: -7.634232997894287
    4. '    
' → logprob: -9.884232521057129
    5. 'n' → logprob: -10.259232521057129
    6. ')' → logprob: -11.134232521057129
    7. '.' → logprob: -11.759232521057129
    8. ' ,' → logprob: -11.759232521057129
    9. 'def' → logprob: -12.134232521057129
    10. ' )' → logprob: -13.759232521057129

Token 547: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002707529056351632
    2. ')' → logprob: -9.00027084350586
    3. '    ' → logprob: -9.62527084350586
    4. '    
' → logprob: -10.37527084350586
    5. '       ' → logprob: -11.37527084350586
    6. ' ' → logprob: -12.12527084350586
    7. '
' → logprob: -12.25027084350586
    8. ' and' → logprob: -12.50027084350586
    9. '  ' → logprob: -12.62527084350586
    10. 'def' → logprob: -12.75027084350586

Token 548: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002234116895124316
    2. '    
' → logprob: -7.627233982086182
    3. ' n' → logprob: -7.627233982086182
    4. 'a' → logprob: -8.12723445892334
    5. '    ' → logprob: -8.25223445892334
    6. 'n' → logprob: -8.25223445892334
    7. ' a' → logprob: -8.50223445892334
    8. ' 
' → logprob: -10.00223445892334
    9. ' ' → logprob: -10.37723445892334
    10. '
' → logprob: -10.37723445892334

Token 549: ' App' (ID: 2583)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.4049258530139923
    2. ' result' → logprob: -2.15492582321167
    3. 'counter' → logprob: -2.52992582321167
    4. 'result' → logprob: -3.02992582321167
    5. ' count' → logprob: -3.15492582321167
    6. 'count' → logprob: -3.77992582321167
    7. ' res' → logprob: -4.77992582321167
    8. ' pattern' → logprob: -5.65492582321167
    9. '   ' → logprob: -6.02992582321167
    10. ' patterns' → logprob: -6.02992582321167

Token 550: 'elle' (ID: 3486)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.6052672863006592
    2. 'elle' → logprob: -0.8552672863006592
    3. 'eler' → logprob: -4.480267524719238
    4. 'elé' → logprob: -5.105267524719238
    5. 'ele' → logprob: -5.605267524719238
    6. 'els' → logprob: -6.355267524719238
    7. 'le' → logprob: -6.480267524719238
    8. 'end' → logprob: -6.855267524719238
    9. 'e' → logprob: -7.355267524719238
    10. 'uie' → logprob: -7.605267524719238

Token 551: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.14386864006519318
    2. ' count' → logprob: -2.0188686847686768
    3. ' la' → logprob: -7.143868446350098
    4. 'counter' → logprob: -9.268868446350098
    5. '   ' → logprob: -9.393868446350098
    6. '(count' → logprob: -10.018868446350098
    7. ' the' → logprob: -10.393868446350098
    8. 'la' → logprob: -10.393868446350098
    9. '_count' → logprob: -10.393868446350098
    10. 'the' → logprob: -10.518868446350098

Token 552: ' fonction' (ID: 17610)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3907853066921234
    2. 'counter' → logprob: -1.1407853364944458
    3. 'result' → logprob: -5.640785217285156
    4. ' counter' → logprob: -8.890785217285156
    5. 'next' → logprob: -9.515785217285156
    6. 'print' → logprob: -9.515785217285156
    7. ' count' → logprob: -10.765785217285156
    8. 'token' → logprob: -11.640785217285156
    9. 'counts' → logprob: -11.640785217285156
    10. 'num' → logprob: -12.015785217285156

Token 553: ' de' (ID: 334)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.06199648603796959
    2. ' count' → logprob: -2.8119964599609375
    3. '   ' → logprob: -10.686996459960938
    4. 'counter' → logprob: -12.311996459960938
    5. ' counter' → logprob: -14.561996459960938
    6. '_count' → logprob: -15.061996459960938
    7. 'def' → logprob: -15.811996459960938
    8. '=count' → logprob: -16.436996459960938
    9. '`' → logprob: -16.561996459960938
    10. 'result' → logprob: -16.686996459960938

Token 554: ' traitement' (ID: 42434)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.016685348004102707
    2. ' count' → logprob: -4.141685485839844
    3. 'comp' → logprob: -7.766685485839844
    4. 'com' → logprob: -9.266685485839844
    5. ' compter' → logprob: -10.141685485839844
    6. ' compte' → logprob: -10.766685485839844
    7. ' compteur' → logprob: -10.891685485839844
    8. 'main' → logprob: -11.266685485839844
    9. ' counting' → logprob: -11.766685485839844
    10. 'completion' → logprob: -11.891685485839844

Token 555: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012158327735960484
    2. 'n' → logprob: -7.251215934753418
    3. 'def' → logprob: -8.751215934753418
    4. ' n' → logprob: -9.251215934753418
    5. '    
' → logprob: -9.876215934753418
    6. '(n' → logprob: -10.126215934753418
    7. ',' → logprob: -10.251215934753418
    8. ' pour' → logprob: -10.626215934753418
    9. '```' → logprob: -11.251215934753418
    10. ' ' → logprob: -11.376215934753418

Token 556: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2948405128554441e-05
    2. ' and' → logprob: -12.75001335144043
    3. '    ' → logprob: -12.87501335144043
    4. '    
' → logprob: -12.87501335144043
    5. 'def' → logprob: -13.75001335144043
    6. '<|end|>' → logprob: -14.00001335144043
    7. '
' → logprob: -14.50001335144043
    8. 'and' → logprob: -14.62501335144043
    9. '```' → logprob: -14.62501335144043
    10. 'import' → logprob: -15.00001335144043

Token 557: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.771655115589965e-05
    2. ' and' → logprob: -12.375018119812012
    3. '    
' → logprob: -12.875018119812012
    4. '    ' → logprob: -13.125018119812012
    5. '
' → logprob: -13.375018119812012
    6. 'result' → logprob: -13.875018119812012
    7. 'print' → logprob: -14.125018119812012
    8. 'count' → logprob: -14.250018119812012
    9. ')' → logprob: -14.375018119812012
    10. '   ' → logprob: -14.375018119812012

Token 558: ' Aff' (ID: 13741)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.43674176931381226
    2. ' print' → logprob: -1.811741828918457
    3. '   ' → logprob: -2.186741828918457
    4. 'result' → logprob: -3.061741828918457
    5. 'print' → logprob: -4.311741828918457
    6. ' counter' → logprob: -4.561741828918457
    7. ' count' → logprob: -6.186741828918457
    8. ' prints' → logprob: -7.061741828918457
    9. ' res' → logprob: -7.311741828918457
    10. ' resultat' → logprob: -7.436741828918457

Token 559: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -9.794061770662665e-05
    2. 'ic' → logprob: -9.37509822845459
    3. '   ' → logprob: -12.00009822845459
    4. 'icher' → logprob: -13.25009822845459
    5. '#' → logprob: -13.37509822845459
    6. 'ichage' → logprob: -13.87509822845459
    7. 'ich' → logprob: -14.25009822845459
    8. 'che' → logprob: -15.00009822845459
    9. '```' → logprob: -15.25009822845459
    10. '_' → logprob: -15.75009822845459

Token 560: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0081113176420331
    2. '(count' → logprob: -5.633111476898193
    3. '(counter' → logprob: -6.258111476898193
    4. '(
' → logprob: -6.383111476898193
    5. '   ' → logprob: -8.133111000061035
    6. '("' → logprob: -8.633111000061035
    7. '()' → logprob: -8.758111000061035
    8. '(len' → logprob: -9.133111000061035
    9. '(result' → logprob: -9.758111000061035
    10. ' le' → logprob: -10.883111000061035

Token 561: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.08618151396512985
    2. ' result' → logprob: -3.461181402206421
    3. ' resultat' → logprob: -3.461181402206421
    4. 'result' → logprob: -3.961181402206421
    5. 'rés' → logprob: -8.211181640625
    6. ' nombre' → logprob: -8.586181640625
    7. ' résultats' → logprob: -9.336181640625
    8. '_result' → logprob: -9.836181640625
    9. ' resultado' → logprob: -10.086181640625
    10. '(' → logprob: -10.836181640625

Token 562: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029267107602208853
    2. '
' → logprob: -6.252926826477051
    3. '```' → logprob: -7.252926826477051
    4. '    
' → logprob: -9.62792682647705
    5. '<|end|>' → logprob: -10.25292682647705
    6. ')' → logprob: -10.25292682647705
    7. '(n' → logprob: -10.37792682647705
    8. '.' → logprob: -10.75292682647705
    9. '       ' → logprob: -10.87792682647705
    10. '()' → logprob: -11.12792682647705

Token 563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009372936561703682
    2. '
' → logprob: -5.134372711181641
    3. '    
' → logprob: -5.884372711181641
    4. '```' → logprob: -7.884372711181641
    5. '  
' → logprob: -9.38437271118164
    6. ')' → logprob: -10.38437271118164
    7. '\n' → logprob: -10.63437271118164
    8. ' 
' → logprob: -10.63437271118164
    9. ':' → logprob: -10.88437271118164
    10. '\' → logprob: -11.25937271118164

Token 564: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010935462778434157
    2. '    
' → logprob: -7.25109338760376
    3. '
' → logprob: -8.126093864440918
    4. '```' → logprob: -9.876093864440918
    5. 'n' → logprob: -11.376093864440918
    6. 'def' → logprob: -11.751093864440918
    7. 'import' → logprob: -12.501093864440918
    8. '  
' → logprob: -12.626093864440918
    9. ' 
' → logprob: -13.126093864440918
    10. '   
' → logprob: -13.501093864440918

Token 565: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05127967521548271
    2. 'n' → logprob: -3.0512797832489014
    3. ' n' → logprob: -5.926279544830322
    4. '	n' → logprob: -12.17628002166748
    5. '    
' → logprob: -12.30128002166748
    6. 'import' → logprob: -12.30128002166748
    7. '```' → logprob: -12.42628002166748
    8. '
' → logprob: -14.55128002166748
    9. '    ' → logprob: -15.17628002166748
    10. '       ' → logprob: -15.80128002166748

Token 566: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0008199920994229615
    2. ' n' → logprob: -7.500820159912109
    3. '   ' → logprob: -8.25082015991211
    4. '```' → logprob: -12.62582015991211
    5. 'import' → logprob: -12.87582015991211
    6. '	n' → logprob: -17.00082015991211
    7. 'try' → logprob: -18.25082015991211
    8. '    
' → logprob: -18.62582015991211
    9. ' ' → logprob: -19.00082015991211
    10. '
' → logprob: -19.50082015991211

Token 567: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03810368850827217
    2. '=' → logprob: -3.2881035804748535
    3. ',' → logprob: -10.288104057312012
    4. '=int' → logprob: -10.663104057312012
    5. '=input' → logprob: -12.788104057312012
    6. '   ' → logprob: -14.288104057312012
    7. ')' → logprob: -14.663104057312012
    8. ' ' → logprob: -14.913104057312012
    9. '_' → logprob: -15.663104057312012
    10. ' =
' → logprob: -15.788104057312012

Token 568: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019286326132714748
    2. ' int' → logprob: -6.251928806304932
    3. '=int' → logprob: -20.126928329467773
    4. '(int' → logprob: -21.376928329467773
    5. '[int' → logprob: -21.376928329467773
    6. '<int' → logprob: -22.251928329467773
    7. '	int' → logprob: -23.001928329467773
    8. ' ' → logprob: -24.376928329467773
    9. 'input' → logprob: -25.126928329467773
    10. ':int' → logprob: -25.251928329467773

Token 569: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0019744306337088346
    2. '(' → logprob: -6.251974582672119
    3. 'input' → logprob: -10.001974105834961
    4. '()' → logprob: -14.751974105834961
    5. '=input' → logprob: -16.75197410583496
    6. ' input' → logprob: -17.50197410583496
    7. ' (' → logprob: -18.50197410583496
    8. '(
' → logprob: -18.62697410583496
    9. ',input' → logprob: -19.87697410583496
    10. '(...)' → logprob: -20.62697410583496

Token 570: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0055899410508573055
    2. '()' → logprob: -5.255589962005615
    3. '(' → logprob: -8.005589485168457
    4. '().' → logprob: -11.505589485168457
    5. ' ())' → logprob: -12.505589485168457
    6. '("' → logprob: -13.255589485168457
    7. '())
' → logprob: -14.005589485168457
    8. '());' → logprob: -14.005589485168457
    9. '(""))' → logprob: -14.005589485168457
    10. '();)' → logprob: -14.130589485168457

Token 571: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36238762736320496
    2. '   ' → logprob: -1.4873876571655273
    3. '    
' → logprob: -3.4873876571655273
    4. ' a' → logprob: -4.237387657165527
    5. '<|end|>' → logprob: -4.237387657165527
    6. '
' → logprob: -4.487387657165527
    7. ' 
' → logprob: -6.112387657165527
    8. '  
' → logprob: -6.362387657165527
    9. 'n' → logprob: -6.487387657165527
    10. '	a' → logprob: -6.862387657165527

Token 572: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10509747266769409
    2. '   ' → logprob: -2.480097532272339
    3. 'n' → logprob: -5.35509729385376
    4. '
' → logprob: -5.73009729385376
    5. '<|end|>' → logprob: -5.85509729385376
    6. '    
' → logprob: -5.98009729385376
    7. ' a' → logprob: -6.60509729385376
    8. '	a' → logprob: -7.60509729385376
    9. '  
' → logprob: -9.105097770690918
    10. '#a' → logprob: -9.105097770690918

Token 573: ' Lit' (ID: 45595)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008059371029958129
    2. ' a' → logprob: -7.125805854797363
    3. '   ' → logprob: -13.875805854797363
    4. 'n' → logprob: -14.750805854797363
    5. ' ' → logprob: -16.62580680847168
    6. '	a' → logprob: -16.75080680847168
    7. '  ' → logprob: -19.62580680847168
    8. '#' → logprob: -19.62580680847168
    9. '_a' → logprob: -19.62580680847168
    10. '```' → logprob: -20.00080680847168

Token 574: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0042462656274437904
    2. 'input' → logprob: -6.379246234893799
    3. 'n' → logprob: -7.004246234893799
    4. '())' → logprob: -7.629246234893799
    5. '(n' → logprob: -7.754246234893799
    6. '(' → logprob: -7.754246234893799
    7. ')' → logprob: -9.379246711730957
    8. '()
' → logprob: -9.504246711730957
    9. '(input' → logprob: -9.629246711730957
    10. ' input' → logprob: -11.754246711730957

Token 575: ' taille' (ID: 41644)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3360726535320282
    2. 'input' → logprob: -1.4610726833343506
    3. 'nombre' → logprob: -3.2110726833343506
    4. 'int' → logprob: -5.3360724449157715
    5. 'size' → logprob: -5.9610724449157715
    6. ' input' → logprob: -7.0860724449157715
    7. ')' → logprob: -7.3360724449157715
    8. '\n' → logprob: -7.3360724449157715
    9. 'number' → logprob: -7.3360724449157715
    10. 't' → logprob: -7.7110724449157715

Token 576: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013789254007861018
    2. '()
' → logprob: -7.126379013061523
    3. '())' → logprob: -8.501379013061523
    4. '(n' → logprob: -9.001379013061523
    5. '(' → logprob: -9.376379013061523
    6. '()\' → logprob: -9.501379013061523
    7. ')' → logprob: -10.376379013061523
    8. 'n' → logprob: -11.001379013061523
    9. ' ()' → logprob: -11.376379013061523
    10. '   ' → logprob: -11.626379013061523

Token 577: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7728301286697388
    2. 'input' → logprob: -1.3978301286697388
    3. ' input' → logprob: -1.5228301286697388
    4. ' n' → logprob: -2.647830009460449
    5. 'l' → logprob: -7.022830009460449
    6. '(input' → logprob: -8.27283000946045
    7. '()' → logprob: -8.39783000946045
    8. '(n' → logprob: -8.52283000946045
    9. ')' → logprob: -8.64783000946045
    10. ' ' → logprob: -9.14783000946045

Token 578: ' liste' (ID: 31719)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06820186972618103
    2. 'liste' → logprob: -3.068201780319214
    3. 'a' → logprob: -5.193202018737793
    4. 'input' → logprob: -5.568202018737793
    5. 'list' → logprob: -5.693202018737793
    6. ' liste' → logprob: -5.818202018737793
    7. ' n' → logprob: -6.068202018737793
    8. ' ' → logprob: -8.443202018737793
    9. ' input' → logprob: -8.568202018737793
    10. 'lista' → logprob: -8.818202018737793

Token 579: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3031214773654938
    2. 'a' → logprob: -1.5531214475631714
    3. 'n' → logprob: -3.928121566772461
    4. '    
' → logprob: -4.053121566772461
    5. '<|end|>' → logprob: -5.053121566772461
    6. '
' → logprob: -5.553121566772461
    7. ' a' → logprob: -6.928121566772461
    8. '  
' → logprob: -8.303121566772461
    9. '  ' → logprob: -8.553121566772461
    10. ' 
' → logprob: -8.678121566772461

Token 580: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12137798964977264
    2. ' a' → logprob: -2.371377944946289
    3. '   ' → logprob: -3.871377944946289
    4. '	a' → logprob: -10.121377944946289
    5. '    
' → logprob: -10.246377944946289
    6. '<|end|>' → logprob: -11.246377944946289
    7. 'n' → logprob: -11.371377944946289
    8. ' 
' → logprob: -12.496377944946289
    9. ' ' → logprob: -12.746377944946289
    10. '    ' → logprob: -12.996377944946289

Token 581: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00015860427811276168
    2. ' a' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.375158309936523
    4. '	a' → logprob: -17.500158309936523
    5. '_a' → logprob: -20.000158309936523
    6. '```' → logprob: -20.125158309936523
    7. ' ' → logprob: -20.625158309936523
    8. 'array' → logprob: -21.250158309936523
    9. '    ' → logprob: -21.375158309936523
    10. 'arr' → logprob: -21.750158309936523

Token 582: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687264919281006
    2. '=' → logprob: -1.13687264919281
    3. '=[]' → logprob: -14.386872291564941
    4. ' =[' → logprob: -15.011872291564941
    5. '=list' → logprob: -15.386872291564941
    6. '=input' → logprob: -16.261873245239258
    7. '.=' → logprob: -16.386873245239258
    8. '=[' → logprob: -16.636873245239258
    9. '[' → logprob: -16.636873245239258
    10. '.' → logprob: -16.761873245239258

Token 583: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0002613358374219388
    2. ' list' → logprob: -8.250261306762695
    3. '[list' → logprob: -17.250261306762695
    4. '[' → logprob: -17.750261306762695
    5. 'List' → logprob: -22.500261306762695
    6. 'input' → logprob: -22.625261306762695
    7. '[]' → logprob: -22.625261306762695
    8. '	list' → logprob: -22.750261306762695
    9. '=list' → logprob: -22.750261306762695
    10. '(list' → logprob: -23.750261306762695

Token 584: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0024781543761491776
    2. '(' → logprob: -6.002478122711182
    3. '(int' → logprob: -14.12747859954834
    4. '()' → logprob: -14.50247859954834
    5. 'map' → logprob: -14.62747859954834
    6. '(input' → logprob: -14.87747859954834
    7. ' map' → logprob: -15.87747859954834
    8. '(range' → logprob: -16.002477645874023
    9. '(eval' → logprob: -17.127477645874023
    10. ' (' → logprob: -17.752477645874023

Token 585: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010002978378906846
    2. '(' → logprob: -7.00100040435791
    3. 'int' → logprob: -9.37600040435791
    4. '(input' → logprob: -13.25100040435791
    5. '(
' → logprob: -13.75100040435791
    6. '<int' → logprob: -14.50100040435791
    7. ' int' → logprob: -14.75100040435791
    8. '[int' → logprob: -16.125999450683594
    9. '(str' → logprob: -16.500999450683594
    10. '=int' → logprob: -16.625999450683594

Token 586: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0026689961086958647
    2. 'input' → logprob: -6.502668857574463
    3. ',input' → logprob: -7.252668857574463
    4. '(' → logprob: -7.752668857574463
    5. ',' → logprob: -11.252669334411621
    6. ' input' → logprob: -11.877669334411621
    7. ' (' → logprob: -12.877669334411621
    8. '=input' → logprob: -13.127669334411621
    9. ')' → logprob: -13.752669334411621
    10. '<input' → logprob: -14.127669334411621

Token 587: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -5.836499985889532e-05
    2. ' input' → logprob: -9.7500581741333
    3. '(input' → logprob: -18.250059127807617
    4. ',input' → logprob: -19.875059127807617
    5. '   ' → logprob: -21.000059127807617
    6. '_input' → logprob: -21.625059127807617
    7. '<input' → logprob: -21.625059127807617
    8. '=input' → logprob: -22.000059127807617
    9. '	input' → logprob: -22.250059127807617
    10. 'Input' → logprob: -24.125059127807617

Token 588: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.372294698550832e-06
    2. '()' → logprob: -11.625009536743164
    3. ' ().' → logprob: -15.875009536743164
    4. '()
' → logprob: -16.000009536743164
    5. '(' → logprob: -16.125009536743164
    6. '(input' → logprob: -18.000009536743164
    7. '())' → logprob: -18.750009536743164
    8. '()))' → logprob: -18.750009536743164
    9. '.split' → logprob: -18.875009536743164
    10. '()[' → logprob: -19.125009536743164

Token 589: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005532711511477828
    2. 'strip' → logprob: -7.500553131103516
    3. 'rstrip' → logprob: -15.250553131103516
    4. ' split' → logprob: -17.000553131103516
    5. '(split' → logprob: -17.750553131103516
    6. 'spl' → logprob: -19.000553131103516
    7. '_split' → logprob: -22.000553131103516
    8. 'read' → logprob: -22.000553131103516
    9. '.split' → logprob: -22.250553131103516
    10. ' strip' → logprob: -23.000553131103516

Token 590: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.008953244425356388
    2. '()' → logprob: -4.758953094482422
    3. '())' → logprob: -8.258953094482422
    4. '))' → logprob: -10.258953094482422
    5. '(' → logprob: -10.383953094482422
    6. '()))
' → logprob: -12.008953094482422
    7. '())))' → logprob: -12.758953094482422
    8. '(),' → logprob: -13.008953094482422
    9. '()));' → logprob: -13.883953094482422
    10. '()))

' → logprob: -15.008953094482422

Token 591: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06636077165603638
    2. '
' → logprob: -2.9413607120513916
    3. '    
' → logprob: -5.316360950469971
    4. 'result' → logprob: -5.566360950469971
    5. 'counter' → logprob: -6.691360950469971
    6. '<|end|>' → logprob: -6.816360950469971
    7. ' counter' → logprob: -9.441360473632812
    8. '  
' → logprob: -9.441360473632812
    9. ' result' → logprob: -10.441360473632812
    10. ')' → logprob: -10.566360473632812

Token 592: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0532446950674057
    2. '<|end|>' → logprob: -3.6782445907592773
    3. '
' → logprob: -4.053244590759277
    4. ')' → logprob: -5.178244590759277
    5. 'if' → logprob: -6.928244590759277
    6. '    
' → logprob: -7.303244590759277
    7. 'result' → logprob: -7.928244590759277
    8. '<|end|>' → logprob: -8.053244590759277
    9. 'counter' → logprob: -8.178244590759277
    10. 'return' → logprob: -8.678244590759277

Token 593: ' Convert' (ID: 15629)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 594: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.654897928237915
    2. '(int' → logprob: -0.779897928237915
    3. 'int' → logprob: -4.529897689819336
    4. 'ur' → logprob: -5.404897689819336
    5. 'r' → logprob: -6.279897689819336
    6. 'e' → logprob: -7.029897689819336
    7. '(map' → logprob: -7.029897689819336
    8. '(list' → logprob: -7.154897689819336
    9. 'list' → logprob: -7.279897689819336
    10. 'map' → logprob: -7.529897689819336

Token 595: ' la' (ID: 557)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.026976581662893295
    2. '(' → logprob: -3.7769765853881836
    3. 'input' → logprob: -5.901976585388184
    4. '(str' → logprob: -7.901976585388184
    5. '(list' → logprob: -8.026976585388184
    6. '(int' → logprob: -8.401976585388184
    7. '(
' → logprob: -10.901976585388184
    8. ' input' → logprob: -11.026976585388184
    9. '=input' → logprob: -11.401976585388184
    10. 'list' → logprob: -11.651976585388184

Token 596: ' ligne' (ID: 19583)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0012586837401613593
    2. ' input' → logprob: -7.501258850097656
    3. 'a' → logprob: -7.876258850097656
    4. 'list' → logprob: -8.626258850097656
    5. '(input' → logprob: -10.126258850097656
    6. 'entrée' → logprob: -10.251258850097656
    7. 'liste' → logprob: -10.376258850097656
    8. 'ent' → logprob: -11.251258850097656
    9. 's' → logprob: -12.001258850097656
    10. 'user' → logprob: -12.251258850097656

Token 597: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11606128513813019
    2. 'input' → logprob: -2.491061210632324
    3. '(input' → logprob: -5.241061210632324
    4. '=input' → logprob: -5.241061210632324
    5. ' input' → logprob: -5.366061210632324
    6. '().' → logprob: -5.366061210632324
    7. 'a' → logprob: -5.741061210632324
    8. '(' → logprob: -6.616061210632324
    9. ')' → logprob: -7.616061210632324
    10. '())' → logprob: -8.241061210632324

Token 598: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.39081504940986633
    2. ''entrée' → logprob: -1.140815019607544
    3. 'input' → logprob: -5.640815258026123
    4. 'e' → logprob: -9.265814781188965
    5. 'entr' → logprob: -9.515814781188965
    6. '’entrée' → logprob: -9.640814781188965
    7. 'ent' → logprob: -10.140814781188965
    8. 'a' → logprob: -10.265814781188965
    9. ' input' → logprob: -10.890814781188965
    10. ' entrée' → logprob: -11.015814781188965

Token 599: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4587829113006592
    2. 'input' → logprob: -1.8337829113006592
    3. '()' → logprob: -1.9587829113006592
    4. 'en' → logprob: -4.083783149719238
    5. ' en' → logprob: -4.458783149719238
    6. ' into' → logprob: -4.708783149719238
    7. '(input' → logprob: -5.208783149719238
    8. ' input' → logprob: -5.333783149719238
    9. ' )' → logprob: -5.833783149719238
    10. '())' → logprob: -5.958783149719238

Token 600: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030119433999061584
    2. 'list' → logprob: -4.4051194190979
    3. ' a' → logprob: -4.5301194190979
    4. 'liste' → logprob: -5.2801194190979
    5. ' liste' → logprob: -7.0301194190979
    6. '[]' → logprob: -8.655119895935059
    7. ' list' → logprob: -9.030119895935059
    8. 'inte' → logprob: -9.655119895935059
    9. 'lista' → logprob: -9.905119895935059
    10. ' integers' → logprob: -9.905119895935059

Token 601: ' d' (ID: 272)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.9715129733085632
    2. '(' → logprob: -1.221513032913208
    3. '(a' → logprob: -2.221513032913208
    4. 'a' → logprob: -2.346513032913208
    5. ')' → logprob: -2.721513032913208
    6. '[int' → logprob: -4.346512794494629
    7. ' integers' → logprob: -4.721512794494629
    8. '()' → logprob: -4.846512794494629
    9. '<|end|>' → logprob: -5.096512794494629
    10. '<int' → logprob: -5.221512794494629

Token 602: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.018307270482182503
    2. ''ent' → logprob: -4.893307209014893
    3. 'int' → logprob: -5.143307209014893
    4. 'ints' → logprob: -5.768307209014893
    5. ' ent' → logprob: -6.643307209014893
    6. 'inte' → logprob: -8.14330768585205
    7. '_ent' → logprob: -10.14330768585205
    8. '’ent' → logprob: -10.39330768585205
    9. 'a' → logprob: -11.89330768585205
    10. ''int' → logprob: -13.14330768585205

Token 603: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -4.4060561776859686e-05
    2. 'ires' → logprob: -11.375043869018555
    3. 'ières' → logprob: -11.500043869018555
    4. 'i' → logprob: -11.625043869018555
    5. 't' → logprob: -12.125043869018555
    6. 'ti' → logprob: -13.125043869018555
    7. 'riers' → logprob: -13.625043869018555
    8. 'ers' → logprob: -13.875043869018555
    9. 'ier' → logprob: -14.000043869018555
    10. 'tiers' → logprob: -14.750043869018555

Token 604: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12824781239032745
    2. 'result' → logprob: -2.1282477378845215
    3. ' result' → logprob: -7.1282477378845215
    4. '<|end|>' → logprob: -8.75324821472168
    5. '    
' → logprob: -9.00324821472168
    6. 'counter' → logprob: -9.50324821472168
    7. 'print' → logprob: -9.75324821472168
    8. '
' → logprob: -9.87824821472168
    9. 'count' → logprob: -11.12824821472168
    10. '```' → logprob: -11.50324821472168

Token 605: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28872039914131165
    2. 'result' → logprob: -1.5387203693389893
    3. 'counter' → logprob: -4.163720607757568
    4. ' result' → logprob: -4.413720607757568
    5. ' counter' → logprob: -5.413720607757568
    6. 'count' → logprob: -6.163720607757568
    7. '
' → logprob: -7.038720607757568
    8. '    
' → logprob: -7.788720607757568
    9. '```' → logprob: -8.91372013092041
    10. 'res' → logprob: -8.91372013092041

Token 606: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.12719151377677917
    2. 'print' → logprob: -2.1271915435791016
    3. ' result' → logprob: -8.752191543579102
    4. 'count' → logprob: -9.877191543579102
    5. '   ' → logprob: -10.502191543579102
    6. ' print' → logprob: -10.877191543579102
    7. 'res' → logprob: -12.377191543579102
    8. 'counter' → logprob: -13.252191543579102
    9. 'answer' → logprob: -14.627191543579102
    10. 'results' → logprob: -14.752191543579102

Token 607: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022564470767975
    2. '=' → logprob: -1.9102256298065186
    3. '_' → logprob: -14.035225868225098
    4. ')' → logprob: -14.660225868225098
    5. ' =
' → logprob: -15.910225868225098
    6. ' ' → logprob: -16.66022491455078
    7. '_=' → logprob: -18.03522491455078
    8. '  ' → logprob: -18.16022491455078
    9. '=int' → logprob: -18.28522491455078
    10. ',' → logprob: -18.41022491455078

Token 608: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0004306692280806601
    2. ' count' → logprob: -7.750430583953857
    3. '   ' → logprob: -23.125431060791016
    4. 'counter' → logprob: -23.125431060791016
    5. '(count' → logprob: -23.250431060791016
    6. '	count' → logprob: -24.000431060791016
    7. 'counts' → logprob: -25.250431060791016
    8. '[count' → logprob: -25.375431060791016
    9. '=count' → logprob: -26.500431060791016
    10. '.count' → logprob: -26.750431060791016

Token 609: '_specific' (ID: 146436)
  Prédit: '_specific'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_specific' → logprob: -8.41866585687967e-06
    2. '_' → logprob: -11.875008583068848
    3. '_special' → logprob: -13.875008583068848
    4. '_spec' → logprob: -14.750008583068848
    5. 'specific' → logprob: -17.12500762939453
    6. ' _' → logprob: -18.75000762939453
    7. '_basic' → logprob: -18.87500762939453
    8. '_possible' → logprob: -18.87500762939453
    9. '```' → logprob: -18.87500762939453
    10. '_s' → logprob: -19.00000762939453

Token 610: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -0.005478029139339924
    2. '_specific' → logprob: -5.2554779052734375
    3. '_' → logprob: -8.380477905273438
    4. '_pat' → logprob: -12.755477905273438
    5. '_special' → logprob: -12.880477905273438
    6. '_p' → logprob: -12.880477905273438
    7. ' _' → logprob: -13.005477905273438
    8. '_pattern' → logprob: -13.255477905273438
    9. '_
' → logprob: -14.130477905273438
    10. '```' → logprob: -14.505477905273438

Token 611: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.750436007976532e-05
    2. '(' → logprob: -10.25003719329834
    3. ' (' → logprob: -13.12503719329834
    4. '(
' → logprob: -16.125038146972656
    5. '(a' → logprob: -20.500038146972656
    6. '```' → logprob: -20.625038146972656
    7. '(s' → logprob: -20.875038146972656
    8. '(N' → logprob: -21.000038146972656
    9. '(

' → logprob: -21.375038146972656
    10. '((' → logprob: -21.750038146972656

Token 612: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.843177233240567e-05
    2. ',a' → logprob: -11.125018119812012
    3. ' ,' → logprob: -13.125018119812012
    4. 'a' → logprob: -14.000018119812012
    5. '(a' → logprob: -15.250018119812012
    6. ',
' → logprob: -15.500018119812012
    7. '   ' → logprob: -15.875018119812012
    8. '(' → logprob: -16.125019073486328
    9. ',n' → logprob: -17.250019073486328
    10. '```' → logprob: -17.375019073486328

Token 613: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06196869537234306
    2. ' a' → logprob: -2.8119688034057617
    3. ')' → logprob: -14.561968803405762
    4. ')a' → logprob: -14.561968803405762
    5. '(a' → logprob: -16.811967849731445
    6. '	a' → logprob: -17.061967849731445
    7. ' ' → logprob: -18.311967849731445
    8. ',a' → logprob: -19.061967849731445
    9. ' ' → logprob: -19.186967849731445
    10. '   ' → logprob: -19.311967849731445

Token 614: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011248346709180623
    2. ')
' → logprob: -9.125112533569336
    3. '   ' → logprob: -12.875112533569336
    4. ' )' → logprob: -14.000112533569336
    5. ')

' → logprob: -17.125112533569336
    6. ' ' → logprob: -17.250112533569336
    7. ')a' → logprob: -17.250112533569336
    8. '(' → logprob: -17.375112533569336
    9. '),' → logprob: -18.000112533569336
    10. '()' → logprob: -18.000112533569336

Token 615: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02753918245434761
    2. '
' → logprob: -3.7775392532348633
    3. 'print' → logprob: -5.777539253234863
    4. ' print' → logprob: -6.777539253234863
    5. '    
' → logprob: -10.277539253234863
    6. '```' → logprob: -12.152539253234863
    7. '	print' → logprob: -12.402539253234863
    8. '<|end|>' → logprob: -12.902539253234863
    9. '
' → logprob: -13.902539253234863
    10. '\n' → logprob: -14.277539253234863

Token 616: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.105295330286026
    2. '   ' → logprob: -2.355295419692993
    3. ' print' → logprob: -5.980295181274414
    4. '
' → logprob: -5.980295181274414
    5. '```' → logprob: -11.355295181274414
    6. '    
' → logprob: -12.480295181274414
    7. '	print' → logprob: -13.230295181274414
    8. '.print' → logprob: -14.480295181274414
    9. ' 
' → logprob: -14.980295181274414
    10. '\n' → logprob: -15.105295181274414

Token 617: ' Cal' (ID: 4453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.676292231422849e-05
    2. ' print' → logprob: -11.000017166137695
    3. '
' → logprob: -18.250017166137695
    4. '```' → logprob: -20.375017166137695
    5. '#print' → logprob: -20.500017166137695
    6. 'result' → logprob: -20.750017166137695
    7. '   ' → logprob: -20.875017166137695
    8. '<|end|>' → logprob: -21.250017166137695
    9. 'pr' → logprob: -22.500017166137695
    10. 'printf' → logprob: -23.000017166137695

Token 618: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.7921593189239502
    2. 'cule' → logprob: -0.7921593189239502
    3. 'culate' → logprob: -3.04215931892395
    4. 'c' → logprob: -3.79215931892395
    5. 'print' → logprob: -3.91715931892395
    6. 'l' → logprob: -6.042159080505371
    7. 'culator' → logprob: -7.917159080505371
    8. 'culated' → logprob: -7.917159080505371
    9. 'result' → logprob: -8.542159080505371
    10. '   ' → logprob: -8.792159080505371

Token 619: ' le' (ID: 505)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2057056725025177
    2. '(result' → logprob: -1.7057056427001953
    3. ' result' → logprob: -5.455705642700195
    4. '(' → logprob: -11.830705642700195
    5. '=result' → logprob: -13.830705642700195
    6. '[result' → logprob: -14.080705642700195
    7. '   ' → logprob: -14.205705642700195
    8. ',result' → logprob: -15.080705642700195
    9. '
' → logprob: -15.330705642700195
    10. '(
' → logprob: -15.580705642700195

Token 620: ' nombre' (ID: 9733)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0009134899592027068
    2. ' result' → logprob: -7.000913619995117
    3. 'count' → logprob: -14.125913619995117
    4. ' résultat' → logprob: -14.375913619995117
    5. 'counter' → logprob: -14.625913619995117
    6. ' resultat' → logprob: -16.000913619995117
    7. 'nombre' → logprob: -16.375913619995117
    8. 'res' → logprob: -17.000913619995117
    9. 'resultado' → logprob: -17.750913619995117
    10. 'rés' → logprob: -17.875913619995117

Token 621: ' de' (ID: 334)
  Prédit: '_specific'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_specific' → logprob: -0.6130248308181763
    2. ' de' → logprob: -1.6130248308181763
    3. '_' → logprob: -2.4880247116088867
    4. '   ' → logprob: -2.8630247116088867
    5. 'result' → logprob: -3.3630247116088867
    6. '_result' → logprob: -4.238024711608887
    7. '(' → logprob: -4.363024711608887
    8. 'de' → logprob: -4.363024711608887
    9. '_de' → logprob: -4.863024711608887
    10. '_des' → logprob: -5.113024711608887

Token 622: ' motifs' (ID: 89637)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.028972823172807693
    2. ' result' → logprob: -3.653972864151001
    3. 'patterns' → logprob: -6.028972625732422
    4. ' patterns' → logprob: -8.528972625732422
    5. 'specific' → logprob: -10.528972625732422
    6. 'pattern' → logprob: -11.403972625732422
    7. ' motifs' → logprob: -11.528972625732422
    8. 'mot' → logprob: -12.403972625732422
    9. '(result' → logprob: -12.653972625732422
    10. ' specific' → logprob: -12.778972625732422

Token 623: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07946150004863739
    2. '(' → logprob: -3.0794615745544434
    3. 'print' → logprob: -3.9544615745544434
    4. '(result' → logprob: -5.079461574554443
    5. ')' → logprob: -6.704461574554443
    6. ' print' → logprob: -6.829461574554443
    7. '(print' → logprob: -6.954461574554443
    8. '(
' → logprob: -7.454461574554443
    9. '<|end|>' → logprob: -7.954461574554443
    10. '()' → logprob: -8.454461097717285

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10204613208770752
    2. 'print' → logprob: -2.352046012878418
    3. ' print' → logprob: -6.352046012878418
    4. '
' → logprob: -9.602046012878418
    5. '```' → logprob: -10.602046012878418
    6. '    
' → logprob: -13.227046012878418
    7. '	print' → logprob: -14.852046012878418
    8. '``' → logprob: -17.227046966552734
    9. '#print' → logprob: -17.977046966552734
    10. '
' → logprob: -18.102046966552734

Token 625: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.749814019713085e-06
    2. ' print' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.500006675720215
    4. '```' → logprob: -21.62500762939453
    5. '	print' → logprob: -21.87500762939453
    6. '
' → logprob: -23.50000762939453
    7. 'printf' → logprob: -23.87500762939453
    8. '#print' → logprob: -24.12500762939453
    9. 'pr' → logprob: -24.37500762939453
    10. '.print' → logprob: -24.62500762939453

Token 626: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.25193288922309875
    2. '(' → logprob: -1.5019328594207764
    3. '(res' → logprob: -13.751933097839355
    4. '(results' → logprob: -14.126933097839355
    5. '(
' → logprob: -14.501933097839355
    6. '('' → logprob: -14.626933097839355
    7. '(resultado' → logprob: -14.876933097839355
    8. '()' → logprob: -15.126933097839355
    9. '(f' → logprob: -16.12693214416504
    10. 'result' → logprob: -16.50193214416504

Token 627: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -16.625
    3. ' )' → logprob: -17.0
    4. '())' → logprob: -17.125
    5. ')`' → logprob: -17.625
    6. ')
' → logprob: -18.875
    7. '))' → logprob: -19.375
    8. '')' → logprob: -20.625
    9. ')}' → logprob: -20.75
    10. '(' → logprob: -21.125

Token 628: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3511732518672943
    2. '<|end|>' → logprob: -1.2261732816696167
    3. 'if' → logprob: -6.226173400878906
    4. '<|end|>' → logprob: -8.476173400878906
    5. '```' → logprob: -8.601173400878906
    6. ' if' → logprob: -9.601173400878906
    7. '

' → logprob: -9.601173400878906
    8. '\n' → logprob: -9.601173400878906
    9. ')' → logprob: -9.851173400878906
    10. '  
' → logprob: -10.976173400878906

Token 629: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 630: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20255360007286072
    2. ' print' → logprob: -1.702553629875183
    3. ' return' → logprob: -7.327553749084473
    4. 'return' → logprob: -8.327553749084473
    5. ' result' → logprob: -9.577553749084473
    6. ' pass' → logprob: -9.702553749084473
    7. 'result' → logprob: -10.077553749084473
    8. 'pass' → logprob: -10.577553749084473
    9. ')' → logprob: -11.202553749084473
    10. ' output' → logprob: -11.952553749084473

Token 631: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0008220185991376638
    2. 'icher' → logprob: -7.125822067260742
    3. 'ic' → logprob: -11.500822067260742
    4. 'ice' → logprob: -13.250822067260742
    5. 'che' → logprob: -13.250822067260742
    6. 'ich' → logprob: -13.750822067260742
    7. 'ichage' → logprob: -13.750822067260742
    8. '   ' → logprob: -13.875822067260742
    9. '#' → logprob: -15.250822067260742
    10. 'cher' → logprob: -16.375822067260742

Token 632: ' le' (ID: 505)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0015068859793245792
    2. '(' → logprob: -6.501506805419922
    3. 'result' → logprob: -12.626506805419922
    4. '()' → logprob: -15.001506805419922
    5. '(res' → logprob: -15.126506805419922
    6. '(results' → logprob: -15.251506805419922
    7. '=result' → logprob: -16.251506805419922
    8. '("' → logprob: -16.501506805419922
    9. '(resultado' → logprob: -16.501506805419922
    10. '(
' → logprob: -16.751506805419922

Token 633: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.005661055911332369
    2. ' result' → logprob: -5.7556610107421875
    3. '(result' → logprob: -6.0056610107421875
    4. 'counter' → logprob: -11.255661010742188
    5. ' resultat' → logprob: -13.505661010742188
    6. ' résultat' → logprob: -14.380661010742188
    7. 'count' → logprob: -15.130661010742188
    8. '=result' → logprob: -16.880661010742188
    9. ',result' → logprob: -17.255661010742188
    10. ' counter' → logprob: -17.255661010742188

Token 634: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14469891786575317
    2. '<|end|>' → logprob: -2.0196988582611084
    3. 'if' → logprob: -6.5196990966796875
    4. '\n' → logprob: -8.769699096679688
    5. '

' → logprob: -9.144699096679688
    6. '```' → logprob: -9.394699096679688
    7. '<|end|>' → logprob: -9.394699096679688
    8. ')' → logprob: -10.394699096679688
    9. ' if' → logprob: -10.519699096679688
    10. '  
' → logprob: -11.144699096679688

Token 635: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4621076285839081
    2. ' la' → logprob: -2.4621076583862305
    3. 'l' → logprob: -2.7121076583862305
    4. ' ' → logprob: -3.0871076583862305
    5. 'stdout' → logprob: -3.2121076583862305
    6. 'print' → logprob: -3.4621076583862305
    7. ')' → logprob: -4.3371076583862305
    8. 'result' → logprob: -4.3371076583862305
    9. 'end' → logprob: -5.3371076583862305
    10. 'a' → logprob: -5.4621076583862305

Token 636: ''écran' (ID: 147901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011534273624420166
    2. 'e' → logprob: -5.511534214019775
    3. ''écran' → logprob: -5.636534214019775
    4. ''utilisateur' → logprob: -7.261534214019775
    5. 'stdout' → logprob: -7.386534214019775
    6. ''extérieur' → logprob: -8.261534690856934
    7. 'eur' → logprob: -8.261534690856934
    8. 'aunch' → logprob: -8.386534690856934
    9. 'i' → logprob: -8.636534690856934
    10. '   ' → logprob: -9.011534690856934

Token 637: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 638: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004998935619369149
    2. '
' → logprob: -8.125499725341797
    3. 'main' → logprob: -9.125499725341797
    4. ' if' → logprob: -10.250499725341797
    5. '<|end|>' → logprob: -10.250499725341797
    6. '```' → logprob: -11.250499725341797
    7. '#' → logprob: -11.750499725341797
    8. 'i' → logprob: -14.625499725341797
    9. '\n' → logprob: -14.750499725341797
    10. '

' → logprob: -14.875499725341797

Token 639: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07258676737546921
    2. '__' → logprob: -2.69758677482605
    3. '_' → logprob: -6.197586536407471
    4. ' ' → logprob: -7.697586536407471
    5. ' ' → logprob: -10.072587013244629
    6. '_name' → logprob: -10.447587013244629
    7. ' ' → logprob: -10.697587013244629
    8. ' _' → logprob: -10.822587013244629
    9. '  ' → logprob: -10.947587013244629
    10. '___' → logprob: -12.197587013244629

Token 640: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10484728217124939
    2. ' ==' → logprob: -2.4798471927642822
    3. '==' → logprob: -4.729847431182861
    4. ' __' → logprob: -5.104847431182861
    5. 'name' → logprob: -7.604847431182861
    6. '_' → logprob: -9.354846954345703
    7. '=="' → logprob: -9.354846954345703
    8. ' =="' → logprob: -9.354846954345703
    9. '[' → logprob: -10.354846954345703
    10. ' ' → logprob: -11.104846954345703

Token 641: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.822646693966817e-06
    2. '__.__' → logprob: -11.875007629394531
    3. '==' → logprob: -15.000007629394531
    4. '__.' → logprob: -15.875007629394531
    5. '___' → logprob: -16.37500762939453
    6. '_' → logprob: -16.75000762939453
    7. '__["' → logprob: -17.12500762939453
    8. '____' → logprob: -17.37500762939453
    9. ' ==' → logprob: -17.50000762939453
    10. '__[' → logprob: -17.62500762939453

Token 642: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005906827282160521
    2. ' ==' → logprob: -8.125590324401855
    3. '==' → logprob: -8.500590324401855
    4. '=="' → logprob: -9.500590324401855
    5. '___' → logprob: -11.875590324401855
    6. '__.__' → logprob: -12.250590324401855
    7. '=='' → logprob: -13.500590324401855
    8. '_' → logprob: -13.750590324401855
    9. '__.' → logprob: -15.000590324401855
    10. '__('' → logprob: -15.000590324401855

Token 643: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011096046306192875
    2. ''' → logprob: -4.511096000671387
    3. ' "__' → logprob: -10.136096000671387
    4. '__' → logprob: -11.761096000671387
    5. ' '__' → logprob: -14.261096000671387
    6. '"name' → logprob: -16.886096954345703
    7. '"_' → logprob: -17.511096954345703
    8. '"user' → logprob: -17.761096954345703
    9. '("__' → logprob: -18.136096954345703
    10. '"class' → logprob: -19.011096954345703

Token 644: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007118358626030385
    2. '__' → logprob: -7.250711917877197
    3. 'name' → logprob: -13.500711441040039
    4. '_main' → logprob: -15.875711441040039
    5. '"' → logprob: -16.37571144104004
    6. ' main' → logprob: -16.50071144104004
    7. 'python' → logprob: -17.25071144104004
    8. 'ma' → logprob: -17.37571144104004
    9. '__":
' → logprob: -17.62571144104004
    10. 'built' → logprob: -18.00071144104004

Token 645: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.474103718996048
    2. '__":
' → logprob: -0.9741036891937256
    3. '__':
' → logprob: -11.349103927612305
    4. '__["' → logprob: -11.599103927612305
    5. '_' → logprob: -12.974103927612305
    6. '__("' → logprob: -14.224103927612305
    7. '"' → logprob: -14.474103927612305
    8. '_"' → logprob: -14.474103927612305
    9. '__",' → logprob: -14.724103927612305
    10. '__.__' → logprob: -14.849103927612305

Token 646: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.48932647705078125
    2. 'main' → logprob: -1.1143264770507812
    3. '"' → logprob: -2.8643264770507812
    4. ''' → logprob: -7.614326477050781
    5. ' main' → logprob: -7.864326477050781
    6. '__":
' → logprob: -7.989326477050781
    7. '   ' → logprob: -8.364326477050781
    8. ' "__' → logprob: -8.989326477050781
    9. '_main' → logprob: -9.489326477050781
    10. '____' → logprob: -9.614326477050781

Token 647: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -21.25
    4. '   ' → logprob: -23.25
    5. '.main' → logprob: -25.0
    6. '_main' → logprob: -25.5
    7. 'mai' → logprob: -25.75
    8. '(main' → logprob: -25.875
    9. 'ma' → logprob: -26.625
    10. 'm' → logprob: -27.0

Token 648: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 646
Tokens correctement prédits (1ère position, stricte): 191
Tokens correctement prédits (1ère position, avec adaptation): 207
Tokens correctement prédits (top 10): 404
Précision stricte (1ère position): 29.57%
Précision adaptée (1ère position): 32.04%
Précision (top 10): 62.54%
================================================================================
