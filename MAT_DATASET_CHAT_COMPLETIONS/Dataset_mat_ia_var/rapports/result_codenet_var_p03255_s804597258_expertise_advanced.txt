================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate

def E(i, x):
    return (5 if i == 1 else 2 * i + 1) * x

N, X = map(int, input().split())
G = sorted(map(int, input().split()), reverse=True)
accG = [0, *accumulate(G)]
min_ans = float('inf')

for k in range(1, N + 1):
    now = 0
    for i in range(1, (N + k - 1)//k + 1):
        l, r = (i - 1) * k, min(i * k, N)
        now += E(i, accG[r] - accG[l])
    min_ans = min(min_ans, now + (N + k) * X)

print(min_ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1646274328231812
    2. 'product' → logprob: -1.4146274328231812
    3. 'per' → logprob: -1.7896274328231812
    4. 'count' → logprob: -2.0396275520324707
    5. 'cycle' → logprob: -2.6646275520324707
    6. 'group' → logprob: -3.2896275520324707
    7. 'chain' → logprob: -3.4146275520324707
    8. 'acc' → logprob: -6.039627552032471
    9. 'is' → logprob: -6.539627552032471
    10. 'zip' → logprob: -6.914627552032471

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001669485354796052
    2. '(
' → logprob: -9.250166893005371
    3. '.' → logprob: -10.375166893005371
    4. ',' → logprob: -11.125166893005371
    5. '\(' → logprob: -11.750166893005371
    6. '()' → logprob: -12.375166893005371
    7. ' (' → logprob: -12.625166893005371
    8. '```' → logprob: -13.500166893005371
    9. '(

' → logprob: -13.625166893005371
    10. '('' → logprob: -14.000166893005371

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008777545881457627
    2. '(
' → logprob: -7.125877857208252
    3. '\(' → logprob: -10.625877380371094
    4. ',' → logprob: -11.375877380371094
    5. '.' → logprob: -12.000877380371094
    6. '\n' → logprob: -12.500877380371094
    7. '```' → logprob: -12.500877380371094
    8. '\' → logprob: -12.500877380371094
    9. 'def' → logprob: -12.625877380371094
    10. '(

' → logprob: -12.875877380371094

Token 6: ' E' (ID: 457)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0025351173244416714
    2. ' accumulate' → logprob: -6.377535343170166
    3. ' calculate' → logprob: -8.377534866333008
    4. ' space' → logprob: -8.877534866333008
    5. ' accumulated' → logprob: -9.627534866333008
    6. ' ' → logprob: -9.627534866333008
    7. ' add' → logprob: -9.877534866333008
    8. ' sum' → logprob: -9.877534866333008
    9. ' accumulator' → logprob: -10.127534866333008
    10. ' process' → logprob: -10.752534866333008

Token 7: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3177182078361511
    2. '(' → logprob: -1.692718267440796
    3. '(n' → logprob: -2.942718267440796
    4. 'x' → logprob: -4.567718029022217
    5. '(m' → logprob: -5.067718029022217
    6. '(val' → logprob: -5.567718029022217
    7. 'm' → logprob: -6.692718029022217
    8. '(:' → logprob: -6.692718029022217
    9. '(E' → logprob: -6.692718029022217
    10. '(s' → logprob: -6.817718029022217

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11918655037879944
    2. ')' → logprob: -2.2441866397857666
    3. ',' → logprob: -5.2441864013671875
    4. 'x' → logprob: -8.119186401367188
    5. ' ):' → logprob: -8.369186401367188
    6. '):
' → logprob: -9.119186401367188
    7. ':' → logprob: -9.244186401367188
    8. 'n' → logprob: -9.994186401367188
    9. ')x' → logprob: -9.994186401367188
    10. '_' → logprob: -10.119186401367188

Token 9: ' x' (ID: 1215)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.919577419757843
    2. 'j' → logprob: -1.0445773601531982
    3. ' n' → logprob: -2.4195773601531982
    4. 'n' → logprob: -2.6695773601531982
    5. 'x' → logprob: -3.4195773601531982
    6. ' x' → logprob: -3.4195773601531982
    7. 'a' → logprob: -5.919577598571777
    8. 'i' → logprob: -6.169577598571777
    9. ' a' → logprob: -6.419577598571777
    10. 'k' → logprob: -6.544577598571777

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00443652831017971
    2. ')' → logprob: -5.629436492919922
    3. ',' → logprob: -7.504436492919922
    4. ':' → logprob: -9.129436492919922
    5. '):
' → logprob: -9.879436492919922
    6. '[' → logprob: -10.379436492919922
    7. ' ):' → logprob: -10.629436492919922
    8. 's' → logprob: -10.754436492919922
    9. '=' → logprob: -11.004436492919922
    10. 'j' → logprob: -12.754436492919922

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4661843478679657
    2. '[' → logprob: -1.841184377670288
    3. ':' → logprob: -3.091184377670288
    4. '):' → logprob: -3.216184377670288
    5. ')' → logprob: -3.591184377670288
    6. '    ' → logprob: -4.091184139251709
    7. '(' → logprob: -4.216184139251709
    8. '*' → logprob: -4.341184139251709
    9. '[i' → logprob: -4.466184139251709
    10. ' (' → logprob: -4.716184139251709

Token 12: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4583406448364258
    2. ' x' → logprob: -2.208340644836426
    3. ' ' → logprob: -2.333340644836426
    4. '    ' → logprob: -2.583340644836426
    5. 'return' (adapté à ' return') → logprob: -3.458340644836426
    6. '   ' → logprob: -3.708340644836426
    7. 'x' → logprob: -3.833340644836426
    8. ' i' → logprob: -6.333340644836426
    9. '0' → logprob: -7.083340644836426
    10. 'e' → logprob: -7.208340644836426

Token 13: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0027061700820923
    2. ' x' → logprob: -1.0027061700820923
    3. ' i' → logprob: -1.7527061700820923
    4. 'i' → logprob: -2.5027060508728027
    5. ' ' → logprob: -5.627706050872803
    6. ' (' → logprob: -6.252706050872803
    7. '0' → logprob: -6.627706050872803
    8. '1' → logprob: -6.877706050872803
    9. '   ' → logprob: -6.877706050872803
    10. ' sum' → logprob: -7.877706050872803

Token 14: '5' (ID: 20)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3798215389251709
    2. 'x' → logprob: -1.379821538925171
    3. ' i' → logprob: -3.754821538925171
    4. '1' → logprob: -4.00482177734375
    5. ' x' → logprob: -4.25482177734375
    6. '-' → logprob: -5.62982177734375
    7. '   ' → logprob: -6.62982177734375
    8. ' (' → logprob: -7.12982177734375
    9. ' ' → logprob: -7.62982177734375
    10. ' -' → logprob: -7.75482177734375

Token 15: ' if' (ID: 538)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5673103332519531
    2. ' *' → logprob: -1.4423103332519531
    3. '*i' → logprob: -1.8173103332519531
    4. '**' → logprob: -4.942310333251953
    5. '+' → logprob: -5.067310333251953
    6. ' +' → logprob: -5.567310333251953
    7. ' -' → logprob: -5.692310333251953
    8. ' **' → logprob: -5.942310333251953
    9. '-' → logprob: -5.942310333251953
    10. '+i' → logprob: -6.067310333251953

Token 16: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8340634107589722
    2. 'i' → logprob: -1.2090634107589722
    3. ' x' → logprob: -1.9590634107589722
    4. 'x' → logprob: -2.0840635299682617
    5. ' ' → logprob: -7.334063529968262
    6. ' (' → logprob: -7.834063529968262
    7. '  ' → logprob: -8.709063529968262
    8. '   ' → logprob: -8.709063529968262
    9. ' abs' → logprob: -9.209063529968262
    10. ' not' → logprob: -9.459063529968262

Token 17: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.6461267471313477
    2. '%' → logprob: -2.1461267471313477
    3. ' <=' → logprob: -2.1461267471313477
    4. '<=' → logprob: -2.2711267471313477
    5. '>' → logprob: -2.3961267471313477
    6. ' <' → logprob: -2.3961267471313477
    7. ' ==' → logprob: -2.5211267471313477
    8. ' ' → logprob: -2.6461267471313477
    9. ' %' → logprob: -3.3961267471313477
    10. '<' → logprob: -3.3961267471313477

Token 18: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6589381098747253
    2. ' ' → logprob: -0.9089381098747253
    3. 'x' → logprob: -3.40893816947937
    4. ' x' → logprob: -3.53393816947937
    5. '1' → logprob: -4.408937931060791
    6. '3' → logprob: -6.158937931060791
    7. '2' → logprob: -6.658937931060791
    8. '4' → logprob: -7.533937931060791
    9. 'i' → logprob: -8.15893840789795
    10. '5' → logprob: -8.15893840789795

Token 19: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2147016078233719
    2. 'x' → logprob: -2.3397016525268555
    3. ' ' → logprob: -2.7147016525268555
    4. '1' → logprob: -3.9647016525268555
    5. '3' → logprob: -5.9647016525268555
    6. ' x' → logprob: -5.9647016525268555
    7. '2' → logprob: -6.3397016525268555
    8. 'i' → logprob: -6.9647016525268555
    9. ''x' → logprob: -7.0897016525268555
    10. '4' → logprob: -7.2147016525268555

Token 20: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0430179201066494
    2. 'else' → logprob: -3.293017864227295
    3. ' and' → logprob: -6.043017864227295
    4. 'and' → logprob: -7.168017864227295
    5. '==' → logprob: -7.293017864227295
    6. ' ' → logprob: -7.918017864227295
    7. '*' → logprob: -8.793018341064453
    8. '    ' → logprob: -9.043018341064453
    9. '   ' → logprob: -9.418018341064453
    10. '-' → logprob: -9.793018341064453

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5559980869293213
    2. ' x' → logprob: -2.4309980869293213
    3. '0' → logprob: -2.5559980869293213
    4. 'x' → logprob: -2.6809980869293213
    5. '10' → logprob: -2.8059980869293213
    6. '3' → logprob: -3.0559980869293213
    7. '4' → logprob: -3.4309980869293213
    8. '1' → logprob: -4.055997848510742
    9. '2' → logprob: -4.055997848510742
    10. ' i' → logprob: -6.055997848510742

Token 22: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.4540799856185913
    2. '3' → logprob: -1.5790799856185913
    3. 'x' → logprob: -2.079080104827881
    4. '0' → logprob: -2.079080104827881
    5. '2' → logprob: -2.454080104827881
    6. '1' → logprob: -2.704080104827881
    7. '4' → logprob: -2.954080104827881
    8. ' ' → logprob: -3.579080104827881
    9. '7' → logprob: -3.954080104827881
    10. 'i' → logprob: -3.954080104827881

Token 23: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8532891273498535
    2. ')' → logprob: -1.2282891273498535
    3. '*x' → logprob: -1.9782891273498535
    4. ' if' → logprob: -2.8532891273498535
    5. '*' → logprob: -2.8532891273498535
    6. ' +' → logprob: -5.1032891273498535
    7. '*i' → logprob: -5.2282891273498535
    8. ' )' → logprob: -5.4782891273498535
    9. '+' → logprob: -6.1032891273498535
    10. 'if' → logprob: -6.2282891273498535

Token 24: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03243250027298927
    2. ' x' → logprob: -3.5324325561523438
    3. 'i' → logprob: -6.282432556152344
    4. ' i' → logprob: -8.532432556152344
    5. '(' → logprob: -8.657432556152344
    6. ' ' → logprob: -8.907432556152344
    7. '(x' → logprob: -9.032432556152344
    8. ' (' → logprob: -9.782432556152344
    9. ')' → logprob: -10.157432556152344
    10. '5' → logprob: -11.282432556152344

Token 25: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18113741278648376
    2. '*' → logprob: -2.9311373233795166
    3. ' *' → logprob: -3.3061373233795166
    4. ' )' → logprob: -3.8061373233795166
    5. '*x' → logprob: -3.9311373233795166
    6. ')*' → logprob: -4.806137561798096
    7. ' -' → logprob: -4.931137561798096
    8. '-' → logprob: -5.056137561798096
    9. ' +' → logprob: -5.556137561798096
    10. '+' → logprob: -5.806137561798096

Token 26: ' ' (ID: 220)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.17451833188533783
    2. 'x' → logprob: -1.924518346786499
    3. ' ' → logprob: -4.79951810836792
    4. '1' → logprob: -5.54951810836792
    5. '3' → logprob: -6.79951810836792
    6. '5' → logprob: -8.549518585205078
    7. '7' → logprob: -8.674518585205078
    8. ')' → logprob: -9.174518585205078
    9. ' (' → logprob: -9.424518585205078
    10. '4' → logprob: -9.549518585205078

Token 27: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15188319981098175
    2. ' x' → logprob: -2.276883125305176
    3. '1' → logprob: -3.526883125305176
    4. '3' → logprob: -5.401883125305176
    5. ' ' → logprob: -6.401883125305176
    6. '5' → logprob: -7.526883125305176
    7. '7' → logprob: -7.651883125305176
    8. ')' → logprob: -8.276883125305176
    9. '2' → logprob: -8.401883125305176
    10. '   ' → logprob: -8.651883125305176

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0049642897211015224
    2. ' )' → logprob: -5.629964351654053
    3. ')*' → logprob: -7.254964351654053
    4. '(x' → logprob: -9.254963874816895
    5. ',' → logprob: -9.504963874816895
    6. '-' → logprob: -9.629963874816895
    7. '*x' → logprob: -9.879963874816895
    8. ')(' → logprob: -10.004963874816895
    9. ' -' → logprob: -10.004963874816895
    10. ' ' → logprob: -10.129963874816895

Token 29: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.2757459878921509
    2. ' *' → logprob: -1.4007459878921509
    3. '(' → logprob: -1.6507459878921509
    4. '<|end|>' → logprob: -2.2757458686828613
    5. ' ' → logprob: -3.0257458686828613
    6. '[' → logprob: -3.2757458686828613
    7. ')' → logprob: -3.5257458686828613
    8. '+' → logprob: -4.025745868682861
    9. '*(' → logprob: -4.650745868682861
    10. '   ' → logprob: -5.275745868682861

Token 30: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5783740878105164
    2. ' x' → logprob: -0.8283740878105164
    3. '(' → logprob: -6.703373908996582
    4. ' (' → logprob: -7.078373908996582
    5. '(x' → logprob: -8.578373908996582
    6. ' ' → logprob: -9.203373908996582
    7. 'abs' → logprob: -11.578373908996582
    8. ' abs' → logprob: -11.828373908996582
    9. 'pow' → logprob: -12.078373908996582
    10. '2' → logprob: -12.203373908996582

Token 31: '

' (ID: 279)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8776462078094482
    2. '(' → logprob: -1.5026462078094482
    3. '<|end|>' → logprob: -2.5026462078094482
    4. '+' → logprob: -2.6276462078094482
    5. ')' → logprob: -2.7526462078094482
    6. '[' → logprob: -3.3776462078094482
    7. ' ' → logprob: -3.5026462078094482
    8. ',' → logprob: -4.127646446228027
    9. '**' → logprob: -4.252646446228027
    10. ' *' → logprob: -4.752646446228027

Token 32: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04448596388101578
    2. '_' → logprob: -3.9194860458374023
    3. ')' → logprob: -4.919486045837402
    4. '[' → logprob: -5.544486045837402
    5. ',' → logprob: -5.669486045837402
    6. 'def' → logprob: -5.794486045837402
    7. '(i' → logprob: -6.794486045837402
    8. '(
' → logprob: -7.044486045837402
    9. '```' → logprob: -7.169486045837402
    10. '   ' → logprob: -7.794486045837402

Token 33: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3578464984893799
    2. ')' → logprob: -1.6078464984893799
    3. '_' → logprob: -1.9828464984893799
    4. ' =' → logprob: -2.10784649848938
    5. ',' → logprob: -2.35784649848938
    6. ' ' → logprob: -2.85784649848938
    7. '(' → logprob: -3.35784649848938
    8. '[' → logprob: -3.60784649848938
    9. '>' → logprob: -3.85784649848938
    10. ' )' → logprob: -4.732846260070801

Token 34: ' X' (ID: 2127)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09473150223493576
    2. 'x' → logprob: -2.844731569290161
    3. 'K' → logprob: -5.219731330871582
    4. ' K' → logprob: -5.219731330871582
    5. ' x' → logprob: -5.344731330871582
    6. ' M' → logprob: -5.719731330871582
    7. 'M' → logprob: -5.719731330871582
    8. '<|end|>' → logprob: -6.219731330871582
    9. '=' → logprob: -6.344731330871582
    10. '  ' → logprob: -7.469731330871582

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023310469463467598
    2. '=' → logprob: -3.773310422897339
    3. ',' → logprob: -10.148310661315918
    4. '<|end|>' → logprob: -11.273310661315918
    5. ' ' → logprob: -12.023310661315918
    6. ')' → logprob: -12.773310661315918
    7. '=int' → logprob: -14.273310661315918
    8. ' =
' → logprob: -14.273310661315918
    9. '  ' → logprob: -14.273310661315918
    10. '<|end|>' → logprob: -14.773310661315918

Token 36: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.338070273399353
    2. 'map' → logprob: -1.463070273399353
    3. ' ' → logprob: -3.7130703926086426
    4. '10' → logprob: -4.213070392608643
    5. '5' → logprob: -4.713070392608643
    6. 'int' → logprob: -6.088070392608643
    7. ' int' → logprob: -6.713070392608643
    8. 'input' → logprob: -7.338070392608643
    9. ' input' → logprob: -7.588070392608643
    10. '20' → logprob: -8.088069915771484

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4764205813407898
    2. '(' → logprob: -0.9764205813407898
    3. '(str' → logprob: -6.8514204025268555
    4. '(lambda' → logprob: -6.9764204025268555
    5. '(input' → logprob: -9.351420402526855
    6. '<|end|>' → logprob: -9.476420402526855
    7. '(
' → logprob: -9.726420402526855
    8. 'int' → logprob: -9.976420402526855
    9. '[int' → logprob: -10.726420402526855
    10. '(eval' → logprob: -11.476420402526855

Token 38: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0978793054819107
    2. 'input' → logprob: -2.472879409790039
    3. ')' → logprob: -4.972879409790039
    4. '(' → logprob: -6.722879409790039
    5. ' input' → logprob: -7.472879409790039
    6. ',input' → logprob: -8.847879409790039
    7. '=input' → logprob: -10.472879409790039
    8. '))' → logprob: -12.472879409790039
    9. '),' → logprob: -12.597879409790039
    10. '[input' → logprob: -12.722879409790039

Token 39: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16027723252773285
    2. ' input' → logprob: -1.910277247428894
    3. ')' → logprob: -9.910277366638184
    4. ' )' → logprob: -13.910277366638184
    5. '=input' → logprob: -14.160277366638184
    6. '(input' → logprob: -14.285277366638184
    7. ',input' → logprob: -14.910277366638184
    8. ' ' → logprob: -15.035277366638184
    9. '	input' → logprob: -15.535277366638184
    10. '<input' → logprob: -16.410276412963867

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006396549753844738
    2. '()' → logprob: -5.756396770477295
    3. '())' → logprob: -5.756396770477295
    4. ')' → logprob: -11.006396293640137
    5. '(' → logprob: -11.006396293640137
    6. '());' → logprob: -12.506396293640137
    7. '()))' → logprob: -12.756396293640137
    8. '('' → logprob: -12.881396293640137
    9. '()>' → logprob: -13.631396293640137
    10. '();)' → logprob: -14.256396293640137

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010068230039905757
    2. 'strip' → logprob: -9.250101089477539
    3. ' split' → logprob: -12.625101089477539
    4. 'rstrip' → logprob: -14.250101089477539
    5. '(split' → logprob: -15.250101089477539
    6. 'spl' → logprob: -15.500101089477539
    7. ')' → logprob: -16.00010108947754
    8. 'read' → logprob: -17.12510108947754
    9. 's' → logprob: -17.75010108947754
    10. '```' → logprob: -18.37510108947754

Token 42: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012224358506500721
    2. '())' → logprob: -4.887224197387695
    3. '))' → logprob: -5.512224197387695
    4. '('' → logprob: -8.512224197387695
    5. '()' → logprob: -8.512224197387695
    6. '(' → logprob: -10.012224197387695
    7. '),' → logprob: -10.137224197387695
    8. '')' → logprob: -10.512224197387695
    9. '(','' → logprob: -11.262224197387695
    10. '`)' → logprob: -11.637224197387695

Token 43: 'G' (ID: 38)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2920987606048584
    2. ' 
' → logprob: -1.9170987606048584
    3. '
' → logprob: -3.0420987606048584
    4. ')
' → logprob: -3.7920987606048584
    5. 'x' → logprob: -4.2920989990234375
    6. 's' → logprob: -5.9170989990234375
    7. ' )
' → logprob: -6.2920989990234375
    8. ' )' → logprob: -6.2920989990234375
    9. '<|end|>' → logprob: -6.2920989990234375
    10. ' 

' → logprob: -6.5420989990234375

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1473691612482071
    2. ' =' → logprob: -2.022369146347046
    3. 'enerate' → logprob: -6.522369384765625
    4. 's' → logprob: -6.897369384765625
    5. 'enerated' → logprob: -7.772369384765625
    6. '_' → logprob: -7.897369384765625
    7. 'r' → logprob: -8.897369384765625
    8. '=[]' → logprob: -9.022369384765625
    9. 'x' → logprob: -9.397369384765625
    10. 'roups' → logprob: -9.397369384765625

Token 45: ' sorted' (ID: 20099)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.37578070163726807
    2. 'acc' → logprob: -1.500780701637268
    3. '[' → logprob: -3.2507805824279785
    4. 'range' → logprob: -4.7507805824279785
    5. '[list' → logprob: -4.7507805824279785
    6. ' accumulate' → logprob: -4.8757805824279785
    7. '(acc' → logprob: -4.8757805824279785
    8. ' list' → logprob: -5.2507805824279785
    9. '[i' → logprob: -5.5007805824279785
    10. '[E' → logprob: -6.5007805824279785

Token 46: '(map' (ID: 16946)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.8092554807662964
    2. '(acc' → logprob: -1.1842554807662964
    3. '([' → logprob: -2.059255599975586
    4. '(' → logprob: -2.809255599975586
    5. '(list' → logprob: -3.434255599975586
    6. '(G' → logprob: -4.684255599975586
    7. '([(' → logprob: -5.309255599975586
    8. '((' → logprob: -5.434255599975586
    9. '(E' → logprob: -6.184255599975586
    10. '(ac' → logprob: -6.434255599975586

Token 47: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.782141569303349e-05
    2. 'int' → logprob: -10.00009822845459
    3. '(' → logprob: -10.12509822845459
    4. ',int' → logprob: -11.75009822845459
    5. '[int' → logprob: -14.00009822845459
    6. '<int' → logprob: -14.25009822845459
    7. '(lambda' → logprob: -14.50009822845459
    8. '=int' → logprob: -15.00009822845459
    9. ']int' → logprob: -15.00009822845459
    10. '```' → logprob: -15.00009822845459

Token 48: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.09074955433607101
    2. ',' → logprob: -2.465749502182007
    3. '(input' → logprob: -6.590749740600586
    4. '(),' → logprob: -8.215749740600586
    5. 'input' → logprob: -9.340749740600586
    6. '(' → logprob: -10.715749740600586
    7. ',int' → logprob: -10.840749740600586
    8. ' ,' → logprob: -11.340749740600586
    9. '),' → logprob: -12.090749740600586
    10. '=input' → logprob: -12.590749740600586

Token 49: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005388972815126181
    2. ' input' → logprob: -5.5053887367248535
    3. 'range' → logprob: -7.2553887367248535
    4. 'list' → logprob: -8.005389213562012
    5. 'lambda' → logprob: -9.255389213562012
    6. ',input' → logprob: -9.255389213562012
    7. ')' → logprob: -10.505389213562012
    8. '(input' → logprob: -11.630389213562012
    9. 'int' → logprob: -11.630389213562012
    10. ' range' → logprob: -11.755389213562012

Token 50: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011546355381142348
    2. '()' → logprob: -9.375115394592285
    3. ')' → logprob: -11.000115394592285
    4. ').' → logprob: -12.500115394592285
    5. '().__' → logprob: -13.000115394592285
    6. ' ().' → logprob: -13.125115394592285
    7. '.' → logprob: -13.375115394592285
    8. '()).' → logprob: -13.750115394592285
    9. '>().' → logprob: -13.750115394592285
    10. '(' → logprob: -14.375115394592285

Token 51: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.27099974633893e-05
    2. ' split' → logprob: -11.875012397766113
    3. 'strip' → logprob: -12.375012397766113
    4. 'read' → logprob: -14.250012397766113
    5. 'rstrip' → logprob: -14.750012397766113
    6. '(split' → logprob: -15.375012397766113
    7. 'spl' → logprob: -15.750012397766113
    8. ')' → logprob: -16.25001335144043
    9. 'plit' → logprob: -17.50001335144043
    10. '))' → logprob: -18.00001335144043

Token 52: '()),' (ID: 24379)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.12731106579303741
    2. '())' → logprob: -2.7523109912872314
    3. '()' → logprob: -3.6273109912872314
    4. '))' → logprob: -4.2523112297058105
    5. '()),' → logprob: -4.3773112297058105
    6. ')' → logprob: -6.6273112297058105
    7. '(' → logprob: -8.252310752868652
    8. '()))
' → logprob: -8.252310752868652
    9. '),' → logprob: -8.627310752868652
    10. '()));' → logprob: -9.002310752868652

Token 53: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.3373068869113922
    2. ' reverse' → logprob: -1.3373068571090698
    3. ' key' → logprob: -4.337306976318359
    4. 'key' → logprob: -4.712306976318359
    5. ')' → logprob: -7.087306976318359
    6. 'lambda' → logprob: -8.08730697631836
    7. '2' → logprob: -8.58730697631836
    8. ' lambda' → logprob: -9.33730697631836
    9. ' ' → logprob: -9.83730697631836
    10. 'x' → logprob: -10.58730697631836

Token 54: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.002798698842525482
    2. '=' → logprob: -6.127798557281494
    3. '())' → logprob: -8.252799034118652
    4. '(True' → logprob: -8.252799034118652
    5. '()' → logprob: -10.127799034118652
    6. ')' → logprob: -10.252799034118652
    7. '(' → logprob: -11.752799034118652
    8. ')=' → logprob: -12.252799034118652
    9. '=False' → logprob: -13.252799034118652
    10. '(),' → logprob: -14.252799034118652

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014134504599496722
    2. ')
' → logprob: -6.751413345336914
    3. ' )' → logprob: -9.251413345336914
    4. ',' → logprob: -9.501413345336914
    5. ')

' → logprob: -10.376413345336914
    6. '))' → logprob: -11.001413345336914
    7. '),' → logprob: -12.251413345336914
    8. ')
' → logprob: -12.501413345336914
    9. ')`' → logprob: -12.876413345336914
    10. ',
' → logprob: -13.376413345336914

Token 56: 'acc' (ID: 3717)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06284741312265396
    2. '[' → logprob: -4.31284761428833
    3. '\n' → logprob: -4.81284761428833
    4. ' 
' → logprob: -5.31284761428833
    5. 'for' → logprob: -5.31284761428833
    6. '<|end|>' → logprob: -5.31284761428833
    7. '[
' → logprob: -5.68784761428833
    8. 'acc' → logprob: -6.06284761428833
    9. ' for' → logprob: -6.18784761428833
    10. ' ' → logprob: -6.18784761428833

Token 57: 'G' (ID: 38)
  Prédit: 'umulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.023279840126633644
    2. 'ulate' → logprob: -4.773279666900635
    3. 'um' → logprob: -4.898279666900635
    4. '=' → logprob: -6.023279666900635
    5. 'ul' → logprob: -6.523279666900635
    6. 'umulator' → logprob: -6.773279666900635
    7. ' =' → logprob: -7.273279666900635
    8. 'ulated' → logprob: -7.648279666900635
    9. 'umul' → logprob: -8.148280143737793
    10. '   ' → logprob: -8.773280143737793

Token 58: ' =' (ID: 314)
  Prédit: 'umulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.19971448183059692
    2. '=' → logprob: -1.8247144222259521
    3. 'ulate' → logprob: -4.449714660644531
    4. ' =' → logprob: -5.574714660644531
    5. 'umul' → logprob: -6.324714660644531
    6. 'um' → logprob: -6.824714660644531
    7. 'ul' → logprob: -7.324714660644531
    8. 'uminate' → logprob: -8.324714660644531
    9. 'elate' → logprob: -9.074714660644531
    10. 'uate' → logprob: -9.324714660644531

Token 59: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.29125675559043884
    2. ' list' → logprob: -1.4162567853927612
    3. 'acc' → logprob: -4.791256904602051
    4. ' accumulate' → logprob: -6.416256904602051
    5. ' acc' → logprob: -10.04125690460205
    6. '(list' → logprob: -11.04125690460205
    7. '[' → logprob: -11.41625690460205
    8. 'ac' → logprob: -11.54125690460205
    9. '(acc' → logprob: -11.79125690460205
    10. '[list' → logprob: -12.16625690460205

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007142047863453627
    2. '*' → logprob: -5.882142066955566
    3. 'x' → logprob: -6.382142066955566
    4. ' ' → logprob: -7.007142066955566
    5. 'G' → logprob: -7.257142066955566
    6. 'g' → logprob: -8.007142066955566
    7. 'X' → logprob: -9.007142066955566
    8. ']' → logprob: -9.007142066955566
    9. ' x' → logprob: -9.757142066955566
    10. 'None' → logprob: -9.757142066955566

Token 61: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03148193657398224
    2. ',' → logprob: -3.531481981277466
    3. ']+' → logprob: -6.406481742858887
    4. '`]' → logprob: -10.031481742858887
    5. ' ]' → logprob: -11.281481742858887
    6. '+]' → logprob: -12.406481742858887
    7. '*' → logprob: -12.656481742858887
    8. '']' → logprob: -12.906481742858887
    9. '+' → logprob: -13.281481742858887
    10. ']
' → logprob: -13.406481742858887

Token 62: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.027693411335349083
    2. ']' → logprob: -4.152693271636963
    3. '0' → logprob: -5.527693271636963
    4. ' *' → logprob: -5.652693271636963
    5. ']+' → logprob: -6.152693271636963
    6. 'G' → logprob: -7.152693271636963
    7. '*N' → logprob: -7.652693271636963
    8. '*g' → logprob: -7.902693271636963
    9. '*(' → logprob: -9.402693748474121
    10. ']*' → logprob: -10.027693748474121

Token 63: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.00862521305680275
    2. 'list' → logprob: -4.758625030517578
    3. 'ac' → logprob: -12.008625030517578
    4. ' accumulate' → logprob: -12.758625030517578
    5. '(acc' → logprob: -14.133625030517578
    6. 'it' → logprob: -15.008625030517578
    7. ' list' → logprob: -15.383625030517578
    8. 'map' → logprob: -16.008625030517578
    9. 'G' → logprob: -16.758625030517578
    10. '	acc' → logprob: -16.758625030517578

Token 64: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.38805752992630005
    2. 'ulate' → logprob: -1.1380574703216553
    3. 'ul' → logprob: -7.138057708740234
    4. 'ulated' → logprob: -9.013057708740234
    5. 'aculate' → logprob: -9.013057708740234
    6. 'culate' → logprob: -9.888057708740234
    7. 'um' → logprob: -10.888057708740234
    8. 'ulative' → logprob: -11.263057708740234
    9. 'uminate' → logprob: -11.638057708740234
    10. 'ac' → logprob: -11.763057708740234

Token 65: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.00014203863975126296
    2. '(' → logprob: -8.875142097473145
    3. '(g' → logprob: -14.250142097473145
    4. '(
' → logprob: -15.000142097473145
    5. ')(' → logprob: -15.125142097473145
    6. '(lambda' → logprob: -15.250142097473145
    7. '((' → logprob: -15.375142097473145
    8. '](' → logprob: -15.625142097473145
    9. ' (' → logprob: -15.750142097473145
    10. ')' → logprob: -17.125141143798828

Token 66: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.021511683240532875
    2. ',' → logprob: -4.521511554718018
    3. ')])' → logprob: -5.146511554718018
    4. ')]
' → logprob: -6.271511554718018
    5. '(' → logprob: -7.396511554718018
    6. '())' → logprob: -7.521511554718018
    7. '(lambda' → logprob: -7.646511554718018
    8. ')' → logprob: -7.771511554718018
    9. '])]' → logprob: -8.521512031555176
    10. ')]

' → logprob: -9.271512031555176

Token 67: 'min' (ID: 1493)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7525418400764465
    2. 'res' → logprob: -2.2525417804718018
    3. 'result' → logprob: -2.2525417804718018
    4. 'ans' → logprob: -2.7525417804718018
    5. 'print' → logprob: -3.0025417804718018
    6. 'dp' → logprob: -3.0025417804718018
    7. 'total' → logprob: -3.5025417804718018
    8. 'answer' → logprob: -3.5025417804718018
    9. 'max' → logprob: -4.502542018890381
    10. 's' → logprob: -4.627542018890381

Token 68: '_ans' (ID: 146254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07036307454109192
    2. '_val' → logprob: -4.1953630447387695
    3. '(' → logprob: -4.5703630447387695
    4. '_sum' → logprob: -4.8203630447387695
    5. '_value' → logprob: -5.6953630447387695
    6. 'sum' → logprob: -5.8203630447387695
    7. 's' → logprob: -6.0703630447387695
    8. '_acc' → logprob: -6.0703630447387695
    9. '_cost' → logprob: -6.1953630447387695
    10. '_x' → logprob: -6.4453630447387695

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1273360550403595
    2. '=' → logprob: -2.127336025238037
    3. ' ' → logprob: -8.502336502075195
    4. 's' → logprob: -9.502336502075195
    5. ',' → logprob: -10.127336502075195
    6. 'o' → logprob: -10.752336502075195
    7. '_' → logprob: -11.252336502075195
    8. 'or' → logprob: -12.252336502075195
    9. 'u' → logprob: -12.439836502075195
    10. '  ' → logprob: -12.502336502075195

Token 70: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6998228430747986
    2. ' float' → logprob: -0.8248228430747986
    3. '10' → logprob: -2.9498229026794434
    4. ' ' → logprob: -5.449822902679443
    5. ' max' → logprob: -6.824822902679443
    6. '1' → logprob: -7.074822902679443
    7. ' min' → logprob: -7.074822902679443
    8. 'max' → logprob: -7.199822902679443
    9. 'acc' → logprob: -7.199822902679443
    10. 'int' → logprob: -7.574822902679443

Token 71: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0011027066502720118
    2. '(' → logprob: -8.126102447509766
    3. ''s' → logprob: -8.126102447509766
    4. ''' → logprob: -8.626102447509766
    5. ''in' → logprob: -9.001102447509766
    6. 'inf' → logprob: -9.501102447509766
    7. ''a' → logprob: -11.376102447509766
    8. '<|end|>' → logprob: -11.501102447509766
    9. '```' → logprob: -11.501102447509766
    10. '>('' → logprob: -11.876102447509766

Token 72: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -5.319370302458992e-06
    2. ''' → logprob: -12.375005722045898
    3. ''in' → logprob: -14.625005722045898
    4. '-inf' → logprob: -15.875005722045898
    5. ' inf' → logprob: -16.2500057220459
    6. 'in' → logprob: -16.2500057220459
    7. ''s' → logprob: -16.3750057220459
    8. '')' → logprob: -16.7500057220459
    9. 'info' → logprob: -16.8750057220459
    10. '('' → logprob: -17.6250057220459

Token 73: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010080150241265073
    2. ' )' → logprob: -9.875101089477539
    3. ')
' → logprob: -10.125101089477539
    4. ')

' → logprob: -12.500101089477539
    5. '')' → logprob: -12.750101089477539
    6. ')
' → logprob: -14.375101089477539
    7. ',' → logprob: -14.875101089477539
    8. '))' → logprob: -15.500101089477539
    9. ')`' → logprob: -15.750101089477539
    10. ' ' → logprob: -15.875101089477539

Token 74: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015730679733678699
    2. '
' → logprob: -6.876573085784912
    3. ' for' → logprob: -7.626573085784912
    4. '```' → logprob: -11.251572608947754
    5. '\n' → logprob: -11.251572608947754
    6. ')' → logprob: -12.001572608947754
    7. 'n' → logprob: -12.251572608947754
    8. ' 
' → logprob: -13.251572608947754
    9. 'i' → logprob: -13.626572608947754
    10. '\' → logprob: -13.876572608947754

Token 75: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0005433809128589928
    2. ' _' → logprob: -8.250543594360352
    3. ' ' → logprob: -9.375543594360352
    4. ' x' → logprob: -9.875543594360352
    5. '_' → logprob: -10.000543594360352
    6. 'i' → logprob: -10.500543594360352
    7. ' range' → logprob: -10.625543594360352
    8. ' r' → logprob: -11.875543594360352
    9. ' n' → logprob: -12.000543594360352
    10. ' l' → logprob: -12.250543594360352

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00874150451272726
    2. ' ' → logprob: -5.13374137878418
    3. 'in' → logprob: -5.88374137878418
    4. ',' → logprob: -11.75874137878418
    5. 'k' → logprob: -13.13374137878418
    6. ' ,' → logprob: -13.13374137878418
    7. '	in' → logprob: -13.13374137878418
    8. '  ' → logprob: -13.38374137878418
    9. ' k' → logprob: -13.63374137878418
    10. '1' → logprob: -13.75874137878418

Token 77: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00020807012333534658
    2. 'range' → logprob: -8.500207901000977
    3. '(range' → logprob: -12.750207901000977
    4. ' ' → logprob: -14.250207901000977
    5. '	range' → logprob: -14.375207901000977
    6. ' xrange' → logprob: -15.125207901000977
    7. '  ' → logprob: -17.250207901000977
    8. '.range' → logprob: -17.875207901000977
    9. '_range' → logprob: -17.875207901000977
    10. '   ' → logprob: -18.625207901000977

Token 78: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026520079001784325
    2. '(N' → logprob: -3.651520013809204
    3. '(len' → logprob: -9.276519775390625
    4. '(n' → logprob: -9.401519775390625
    5. '(k' → logprob: -10.401519775390625
    6. '(K' → logprob: -12.401519775390625
    7. ' (' → logprob: -12.651519775390625
    8. '(
' → logprob: -13.276519775390625
    9. '(I' → logprob: -14.401519775390625
    10. '(X' → logprob: -14.526519775390625

Token 79: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2871200442314148
    2. '1' → logprob: -1.4121201038360596
    3. '0' → logprob: -5.4121198654174805
    4. 'len' → logprob: -6.9121198654174805
    5. '(N' → logprob: -8.78711986541748
    6. '2' → logprob: -8.91211986541748
    7. '(' → logprob: -9.28711986541748
    8. ' N' → logprob: -11.16211986541748
    9. 'k' → logprob: -11.16211986541748
    10. '3' → logprob: -11.41211986541748

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004225254990160465
    2. ' ,' → logprob: -5.504225254058838
    3. ',N' → logprob: -8.879225730895996
    4. ',n' → logprob: -12.504225730895996
    5. ',len' → logprob: -12.629225730895996
    6. ' N' → logprob: -15.879225730895996
    7. '   ' → logprob: -16.12922477722168
    8. 'N' → logprob: -17.00422477722168
    9. ',K' → logprob: -17.00422477722168
    10. ',
' → logprob: -17.12922477722168

Token 81: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006741777528077364
    2. ' N' → logprob: -5.006742000579834
    3. 'len' → logprob: -10.756741523742676
    4. ' len' → logprob: -13.256741523742676
    5. 'min' → logprob: -13.631741523742676
    6. ' ' → logprob: -14.256741523742676
    7. ' min' → logprob: -14.631741523742676
    8. '   ' → logprob: -15.131741523742676
    9. 'n' → logprob: -15.756741523742676
    10. '	N' → logprob: -16.131742477416992

Token 82: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06197351589798927
    2. ' +' → logprob: -2.8119735717773438
    3. '):' → logprob: -12.686973571777344
    4. '):
' → logprob: -13.936973571777344
    5. '+
' → logprob: -14.811973571777344
    6. '＋' → logprob: -15.686973571777344
    7. '   ' → logprob: -15.811973571777344
    8. '-' → logprob: -15.811973571777344
    9. '+k' → logprob: -16.061973571777344
    10. ',' → logprob: -16.061973571777344

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004998935619369149
    2. ' ' → logprob: -7.625499725341797
    3. '2' → logprob: -11.375499725341797
    4. '```' → logprob: -15.125499725341797
    5. '   ' → logprob: -16.375499725341797
    6. ')' → logprob: -17.437999725341797
    7. '):
' → logprob: -17.687999725341797
    8. '
' → logprob: -18.187999725341797
    9. '۱' → logprob: -18.625499725341797
    10. '  ' → logprob: -18.750499725341797

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.375005722045898
    3. '2' → logprob: -14.000005722045898
    4. '   ' → logprob: -16.2500057220459
    5. 'k' → logprob: -16.9375057220459
    6. '```' → logprob: -17.0000057220459
    7. ')' → logprob: -17.9375057220459
    8. '``' → logprob: -18.3125057220459
    9. '3' → logprob: -18.3750057220459
    10. '۱' → logprob: -18.4375057220459

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007274442468769848
    2. ':' → logprob: -7.375727653503418
    3. '):
' → logprob: -9.875727653503418
    4. ')' → logprob: -10.000727653503418
    5. ',' → logprob: -13.750727653503418
    6. ' ):' → logprob: -13.875727653503418
    7. '   ' → logprob: -14.625727653503418
    8. '):
' → logprob: -14.875727653503418
    9. ']:' → logprob: -15.000727653503418
    10. '():' → logprob: -15.000727653503418

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49738332629203796
    2. ':' → logprob: -0.9973833560943604
    3. '<|end|>' → logprob: -4.122383117675781
    4. '```' → logprob: -5.997383117675781
    5. ' ' → logprob: -6.622383117675781
    6. '<|end|>' → logprob: -7.497383117675781
    7. '    
' → logprob: -7.622383117675781
    8. ',' → logprob: -7.872383117675781
    9. ' :' → logprob: -8.497383117675781
    10. ')' → logprob: -8.747383117675781

Token 87: ' now' (ID: 1954)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -1.4837255477905273
    2. ' ans' → logprob: -2.1087255477905273
    3. ' for' → logprob: -2.2337255477905273
    4. ' sum' → logprob: -2.8587255477905273
    5. ' res' → logprob: -2.9837255477905273
    6. ' val' → logprob: -3.2337255477905273
    7. ' total' → logprob: -3.3587255477905273
    8. ' s' → logprob: -3.6087255477905273
    9. ' current' → logprob: -3.7337255477905273
    10. ' dp' → logprob: -3.7337255477905273

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1052662655711174
    2. '=' → logprob: -2.4802663326263428
    3. '_sum' → logprob: -5.105266094207764
    4. '_ans' → logprob: -5.855266094207764
    5. '_' → logprob: -5.980266094207764
    6. '_val' → logprob: -6.355266094207764
    7. '_value' → logprob: -7.605266094207764
    8. '_cost' → logprob: -7.980266094207764
    9. 'sum' → logprob: -8.230266571044922
    10. '_max' → logprob: -8.480266571044922

Token 89: ' ' (ID: 220)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.20803222060203552
    2. '(acc' → logprob: -2.7080321311950684
    3. ' acc' → logprob: -3.3330321311950684
    4. 'max' → logprob: -4.083032131195068
    5. '(E' → logprob: -4.208032131195068
    6. 'sum' → logprob: -4.708032131195068
    7. 'E' → logprob: -4.833032131195068
    8. ' (' → logprob: -4.958032131195068
    9. 'abs' → logprob: -5.083032131195068
    10. ' max' → logprob: -5.583032131195068

Token 90: '0' (ID: 15)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.2522563934326172
    2. 'sum' → logprob: -2.502256393432617
    3. '(acc' → logprob: -3.252256393432617
    4. 'max' → logprob: -3.377256393432617
    5. '(E' → logprob: -3.877256393432617
    6. 'E' → logprob: -3.877256393432617
    7. 'X' → logprob: -5.502256393432617
    8. '0' → logprob: -5.502256393432617
    9. 'min' → logprob: -5.502256393432617
    10. '(sum' → logprob: -6.002256393432617

Token 91: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0975563526153564
    2. '   ' → logprob: -1.0975563526153564
    3. '<|end|>' → logprob: -1.4725563526153564
    4. '    
' → logprob: -3.5975563526153564
    5. ' for' → logprob: -3.8475563526153564
    6. 'for' → logprob: -3.9725563526153564
    7. '\n' → logprob: -4.722556114196777
    8. ' ' → logprob: -5.222556114196777
    9. '<|end|>' → logprob: -5.347556114196777
    10. '  
' → logprob: -5.722556114196777

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.750930905342102
    2. ' for' → logprob: -1.375930905342102
    3. 'for' → logprob: -1.500930905342102
    4. '
' → logprob: -3.1259307861328125
    5. '<|end|>' → logprob: -5.2509307861328125
    6. '	for' → logprob: -6.1259307861328125
    7. '    
' → logprob: -7.7509307861328125
    8. ' ' → logprob: -8.625930786132812
    9. '\n' → logprob: -9.000930786132812
    10. ' 
' → logprob: -9.125930786132812

Token 93: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.17011111974716187
    2. ' for' → logprob: -2.1701111793518066
    3. '   ' → logprob: -3.1701111793518066
    4. '
' → logprob: -9.295110702514648
    5. 'i' → logprob: -9.920110702514648
    6. 'x' → logprob: -10.545110702514648
    7. '    
' → logprob: -11.170110702514648
    8. '	for' → logprob: -11.670110702514648
    9. 'j' → logprob: -11.795110702514648
    10. ' ' → logprob: -11.920110702514648

Token 94: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4156431257724762
    2. ' i' → logprob: -1.1656430959701538
    3. 'j' → logprob: -4.040643215179443
    4. ' j' → logprob: -4.790643215179443
    5. 'x' → logprob: -7.165643215179443
    6. 'k' → logprob: -8.228142738342285
    7. ' x' → logprob: -8.540642738342285
    8. '_i' → logprob: -8.665642738342285
    9. ' ' → logprob: -9.290642738342285
    10. 'm' → logprob: -9.603142738342285

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04340493679046631
    2. 'in' → logprob: -3.168405055999756
    3. ' ' → logprob: -8.293404579162598
    4. ',' → logprob: -9.168404579162598
    5. '	in' → logprob: -11.043404579162598
    6. '<|end|>' → logprob: -11.543404579162598
    7. '    ' → logprob: -11.918404579162598
    8. '   ' → logprob: -12.793404579162598
    9. ' ,' → logprob: -13.043404579162598
    10. '	' → logprob: -13.293404579162598

Token 96: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38699424266815186
    2. ' range' → logprob: -1.1369942426681519
    3. '(range' → logprob: -9.136994361877441
    4. '	range' → logprob: -11.261994361877441
    5. ' ' → logprob: -13.636994361877441
    6. '(' → logprob: -15.011994361877441
    7. '<|end|>' → logprob: -15.011994361877441
    8. ' xrange' → logprob: -15.761994361877441
    9. 'enumer' → logprob: -15.761994361877441
    10. ')' → logprob: -16.011993408203125

Token 97: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07891049981117249
    2. '(k' → logprob: -2.5789105892181396
    3. '(i' → logprob: -11.578910827636719
    4. '1' → logprob: -12.453910827636719
    5. 'k' → logprob: -12.828910827636719
    6. '(
' → logprob: -13.578910827636719
    7. '(n' → logprob: -13.828910827636719
    8. ' (' → logprob: -13.953910827636719
    9. '(len' → logprob: -14.578910827636719
    10. '(N' → logprob: -14.953910827636719

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34894633293151855
    2. 'k' → logprob: -1.2239463329315186
    3. '   ' → logprob: -7.848946571350098
    4. ' ' → logprob: -10.723946571350098
    5. ' k' → logprob: -10.848946571350098
    6. '(' → logprob: -11.223946571350098
    7. '2' → logprob: -11.223946571350098
    8. 'N' → logprob: -11.598946571350098
    9. '0' → logprob: -11.723946571350098
    10. '(k' → logprob: -11.723946571350098

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008971675299108028
    2. ',k' → logprob: -4.883971691131592
    3. ' ,' → logprob: -7.008971691131592
    4. '   ' → logprob: -7.883971691131592
    5. 'k' → logprob: -9.508971214294434
    6. ' k' → logprob: -12.133971214294434
    7. '    ' → logprob: -13.008971214294434
    8. '(k' → logprob: -15.008971214294434
    9. ',
' → logprob: -15.258971214294434
    10. ',n' → logprob: -15.258971214294434

Token 100: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007125511183403432
    2. ' k' → logprob: -7.2507123947143555
    3. 'N' → logprob: -13.750712394714355
    4. '   ' → logprob: -14.625712394714355
    5. '{k' → logprob: -15.000712394714355
    6. '	k' → logprob: -15.125712394714355
    7. '<|end|>' → logprob: -15.750712394714355
    8. ')' → logprob: -16.250713348388672
    9. ' ' → logprob: -16.500713348388672
    10. 'len' → logprob: -16.750713348388672

Token 101: 'N' (ID: 45)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0021255186293274164
    2. 'N' → logprob: -6.5021257400512695
    3. ' k' → logprob: -7.6271257400512695
    4. '   ' → logprob: -10.00212574005127
    5. 'min' → logprob: -10.37712574005127
    6. 'len' → logprob: -10.62712574005127
    7. ' N' → logprob: -11.25212574005127
    8. ' ' → logprob: -12.12712574005127
    9. ' min' → logprob: -12.62712574005127
    10. '2' → logprob: -12.62712574005127

Token 102: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10689254105091095
    2. ' +' → logprob: -2.7318925857543945
    3. ' -' → logprob: -3.6068925857543945
    4. '-' → logprob: -5.3568925857543945
    5. ' //' → logprob: -5.9818925857543945
    6. '//' → logprob: -6.3568925857543945
    7. '-k' → logprob: -10.481892585754395
    8. ' ' → logprob: -10.481892585754395
    9. '   ' → logprob: -10.606892585754395
    10. ')' → logprob: -10.731892585754395

Token 103: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05592519789934158
    2. '2' → logprob: -3.055925130844116
    3. 'k' → logprob: -5.055925369262695
    4. ' ' → logprob: -7.055925369262695
    5. ' k' → logprob: -10.305925369262695
    6. '   ' → logprob: -10.680925369262695
    7. '3' → logprob: -12.180925369262695
    8. '
' → logprob: -13.055925369262695
    9. '  ' → logprob: -13.305925369262695
    10. 'i' → logprob: -13.430925369262695

Token 104: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15006248652935028
    2. ')//' → logprob: -2.2750625610351562
    3. ' )' → logprob: -4.275062561035156
    4. '+' → logprob: -4.900062561035156
    5. ' -' → logprob: -5.150062561035156
    6. '-' → logprob: -5.650062561035156
    7. ' +' → logprob: -5.775062561035156
    8. '//' → logprob: -6.525062561035156
    9. ' //' → logprob: -7.525062561035156
    10. ' ' → logprob: -8.150062561035156

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009757821680977941
    2. ' ' → logprob: -7.750975608825684
    3. '2' → logprob: -8.500975608825684
    4. ')' → logprob: -8.625975608825684
    5. 'k' → logprob: -8.875975608825684
    6. '   ' → logprob: -12.125975608825684
    7. ' k' → logprob: -12.500975608825684
    8. '```' → logprob: -12.500975608825684
    9. '0' → logprob: -12.750975608825684
    10. '+' → logprob: -13.375975608825684

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003993296413682401
    2. '2' → logprob: -8.375399589538574
    3. 'k' → logprob: -9.000399589538574
    4. ' ' → logprob: -10.375399589538574
    5. ')' → logprob: -12.250399589538574
    6. '   ' → logprob: -12.500399589538574
    7. '```' → logprob: -13.375399589538574
    8. '
' → logprob: -13.875399589538574
    9. '0' → logprob: -14.250399589538574
    10. '  ' → logprob: -14.937899589538574

Token 107: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10036539286375046
    2. ')//' → logprob: -2.350365400314331
    3. ' )' → logprob: -8.85036563873291
    4. '//' → logprob: -11.47536563873291
    5. ' //' → logprob: -12.72536563873291
    6. '   ' → logprob: -13.85036563873291
    7. ')
' → logprob: -14.35036563873291
    8. ' ' → logprob: -16.100364685058594
    9. '  ' → logprob: -16.475364685058594
    10. ')#' → logprob: -16.600364685058594

Token 108: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2519441843032837
    2. ' k' → logprob: -1.5019441843032837
    3. '2' → logprob: -11.876944541931152
    4. ' ' → logprob: -12.001944541931152
    5. '	k' → logprob: -14.501944541931152
    6. ')' → logprob: -14.751944541931152
    7. '_k' → logprob: -15.626944541931152
    8. ' kth' → logprob: -16.001943588256836
    9. '1' → logprob: -16.126943588256836
    10. ' к' → logprob: -16.126943588256836

Token 109: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3534289002418518
    2. ' +' → logprob: -1.228428840637207
    3. '):' → logprob: -5.353428840637207
    4. '):
' → logprob: -8.603428840637207
    5. '   ' → logprob: -10.228428840637207
    6. ',' → logprob: -12.228428840637207
    7. ' ):' → logprob: -12.478428840637207
    8. ')' → logprob: -12.728428840637207
    9. ' ' → logprob: -13.478428840637207
    10. ':' → logprob: -14.103428840637207

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000826421775855124
    2. ' ' → logprob: -7.125826358795166
    3. '2' → logprob: -10.750826835632324
    4. '   ' → logprob: -16.000825881958008
    5. ')' → logprob: -16.250825881958008
    6. '+' → logprob: -16.750825881958008
    7. '  ' → logprob: -16.875825881958008
    8. '```' → logprob: -17.375825881958008
    9. '
' → logprob: -17.688325881958008
    10. ' ' → logprob: -17.813325881958008

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014489953173324466
    2. ' ' → logprob: -8.875144958496094
    3. '2' → logprob: -12.750144958496094
    4. '   ' → logprob: -13.625144958496094
    5. ')' → logprob: -15.125144958496094
    6. '  ' → logprob: -15.312644958496094
    7. '
' → logprob: -16.812644958496094
    8. '    ' → logprob: -16.875144958496094
    9. '+' → logprob: -17.062644958496094
    10. '```' → logprob: -17.312644958496094

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0712987408041954
    2. '):
' → logprob: -2.696298837661743
    3. ':' → logprob: -6.696298599243164
    4. '):
' → logprob: -9.571298599243164
    5. '   ' → logprob: -10.446298599243164
    6. ' ):' → logprob: -11.696298599243164
    7. ',' → logprob: -12.446298599243164
    8. ':
' → logprob: -12.696298599243164
    9. ')' → logprob: -12.946298599243164
    10. '       ' → logprob: -13.446298599243164

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005294414004310966
    2. ' now' → logprob: -7.7505292892456055
    3. 'now' → logprob: -10.750529289245605
    4. ',' → logprob: -11.500529289245605
    5. '[now' → logprob: -11.625529289245605
    6. '<|end|>' → logprob: -11.750529289245605
    7. ' for' → logprob: -12.000529289245605
    8. '0' → logprob: -12.250529289245605
    9. '[' → logprob: -12.250529289245605
    10. '	now' → logprob: -12.375529289245605

Token 114: ' l' (ID: 305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25779861211776733
    2. ' now' → logprob: -1.507798671722412
    3. 'now' → logprob: -5.507798671722412
    4. ' for' → logprob: -7.382798671722412
    5. '   ' → logprob: -7.507798671722412
    6. ' x' → logprob: -8.132798194885254
    7. '           ' → logprob: -9.257798194885254
    8. '	now' → logprob: -9.632798194885254
    9. 'for' → logprob: -10.382798194885254
    10. '
' → logprob: -10.632798194885254

Token 115: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.086531862616539
    2. '=' → logprob: -2.5865318775177
    3. ',' → logprob: -5.086531639099121
    4. '        ' → logprob: -7.336531639099121
    5. '       ' → logprob: -8.086531639099121
    6. '    ' → logprob: -8.586531639099121
    7. '   ' → logprob: -9.336531639099121
    8. 'f' → logprob: -10.086531639099121
    9. '           ' → logprob: -10.961531639099121
    10. 'eft' → logprob: -11.086531639099121

Token 116: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.012125672772526741
    2. ' r' → logprob: -4.512125492095947
    3. '   ' → logprob: -8.012125968933105
    4. 'i' → logprob: -8.262125968933105
    5. 'l' → logprob: -8.887125968933105
    6. '       ' → logprob: -9.512125968933105
    7. 'u' → logprob: -9.762125968933105
    8. '=' → logprob: -9.762125968933105
    9. '    ' → logprob: -10.012125968933105
    10. ' =' → logprob: -10.762125968933105

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804263845086098
    2. ' =' → logprob: -3.2880425453186035
    3. ' ' → logprob: -14.538043022155762
    4. '    ' → logprob: -15.913043022155762
    5. '＝' → logprob: -16.288042068481445
    6. ')' → logprob: -16.538042068481445
    7. '=int' → logprob: -16.788042068481445
    8. ',' → logprob: -16.913042068481445
    9. '   ' → logprob: -16.913042068481445
    10. 's' → logprob: -17.163042068481445

Token 118: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.9437844157218933
    2. '(i' → logprob: -1.068784475326538
    3. 'k' → logprob: -1.693784475326538
    4. ' (' → logprob: -3.443784475326538
    5. 'i' → logprob: -3.818784475326538
    6. 'acc' → logprob: -3.818784475326538
    7. '(acc' → logprob: -5.943784236907959
    8. ' k' → logprob: -6.318784236907959
    9. '   ' → logprob: -6.443784236907959
    10. ' i' → logprob: -6.943784236907959

Token 119: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.525452733039856
    2. '(k' → logprob: -1.150452733039856
    3. 'k' → logprob: -2.6504526138305664
    4. ' (' → logprob: -4.150452613830566
    5. 'i' → logprob: -5.275452613830566
    6. '       ' → logprob: -8.525452613830566
    7. '   ' → logprob: -8.525452613830566
    8. '           ' → logprob: -8.900452613830566
    9. ' k' → logprob: -9.150452613830566
    10. '(' → logprob: -10.525452613830566

Token 120: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11294199526309967
    2. ' -' → logprob: -2.2379419803619385
    3. ' *' → logprob: -9.86294174194336
    4. '   ' → logprob: -10.11294174194336
    5. ' ' → logprob: -11.23794174194336
    6. ')' → logprob: -12.48794174194336
    7. '*' → logprob: -12.86294174194336
    8. '1' → logprob: -13.23794174194336
    9. '       ' → logprob: -13.23794174194336
    10. '  ' → logprob: -13.98794174194336

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.250015258789062
    3. ')' → logprob: -13.750015258789062
    4. '   ' → logprob: -14.625015258789062
    5. 'i' → logprob: -15.125015258789062
    6. ',' → logprob: -15.875015258789062
    7. ' i' → logprob: -16.125015258789062
    8. '<|end|>' → logprob: -16.750015258789062
    9. '
' → logprob: -17.250015258789062
    10. '       ' → logprob: -17.250015258789062

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.0868278524139896e-05
    2. ' ' → logprob: -9.87506103515625
    3. '
' → logprob: -13.25006103515625
    4. ')' → logprob: -13.37506103515625
    5. 'i' → logprob: -13.50006103515625
    6. '2' → logprob: -13.75006103515625
    7. '0' → logprob: -13.93756103515625
    8. '   ' → logprob: -14.50006103515625
    9. ' i' → logprob: -15.25006103515625
    10. 'k' → logprob: -15.31256103515625

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0889698937535286
    2. ')*' → logprob: -2.4639699459075928
    3. '   ' → logprob: -11.463970184326172
    4. ' )' → logprob: -11.588970184326172
    5. '*' → logprob: -12.963970184326172
    6. '*k' → logprob: -12.963970184326172
    7. ' *' → logprob: -13.463970184326172
    8. '")' → logprob: -14.213970184326172
    9. '*)' → logprob: -14.338970184326172
    10. ')
' → logprob: -14.463970184326172

Token 124: ' *' (ID: 425)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.12617382407188416
    2. ' *' → logprob: -2.501173734664917
    3. '*' → logprob: -3.626173734664917
    4. ')*' → logprob: -5.001173973083496
    5. ')' → logprob: -5.876173973083496
    6. '*n' → logprob: -9.001173973083496
    7. '*i' → logprob: -9.751173973083496
    8. '*K' → logprob: -10.501173973083496
    9. '
' → logprob: -10.876173973083496
    10. '   ' → logprob: -10.876173973083496

Token 125: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.0484450437361374e-05
    2. ' k' → logprob: -10.125040054321289
    3. '<|end|>' → logprob: -15.875040054321289
    4. '   ' → logprob: -16.25004005432129
    5. '*k' → logprob: -16.75004005432129
    6. '
' → logprob: -17.12504005432129
    7. '	k' → logprob: -17.25004005432129
    8. ' ' → logprob: -18.00004005432129
    9. 'kx' → logprob: -18.37504005432129
    10. '  ' → logprob: -18.87504005432129

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012652362929657102
    2. '+' → logprob: -7.376265048980713
    3. ' ,' → logprob: -7.501265048980713
    4. '   ' → logprob: -10.501265525817871
    5. ' +' → logprob: -10.626265525817871
    6. ',
' → logprob: -11.126265525817871
    7. ',i' → logprob: -11.751265525817871
    8. ',k' → logprob: -13.001265525817871
    9. '+,' → logprob: -13.376265525817871
    10. ',n' → logprob: -13.501265525817871

Token 127: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.13279643654823303
    2. ' min' → logprob: -2.3827965259552
    3. 'i' → logprob: -3.5077965259552
    4. ' i' → logprob: -6.507796287536621
    5. '   ' → logprob: -8.632796287536621
    6. 'l' → logprob: -9.007796287536621
    7. '(min' → logprob: -9.382796287536621
    8. '(i' → logprob: -9.507796287536621
    9. 'max' → logprob: -10.882796287536621
    10. ' ' → logprob: -11.007796287536621

Token 128: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00033188972156494856
    2. '(' → logprob: -8.37533187866211
    3. 'i' → logprob: -9.87533187866211
    4. '(N' → logprob: -10.12533187866211
    5. '((' → logprob: -12.37533187866211
    6. '   ' → logprob: -13.12533187866211
    7. ' (' → logprob: -14.25033187866211
    8. '(len' → logprob: -14.50033187866211
    9. '(k' → logprob: -14.75033187866211
    10. '(
' → logprob: -14.75033187866211

Token 129: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.024572037160396576
    2. '*' → logprob: -3.7745721340179443
    3. '*k' → logprob: -6.899571895599365
    4. '*i' → logprob: -8.399572372436523
    5. '*N' → logprob: -9.774572372436523
    6. ' ' → logprob: -11.024572372436523
    7. '   ' → logprob: -11.399572372436523
    8. '    ' → logprob: -13.524572372436523
    9. '*r' → logprob: -13.524572372436523
    10. '*l' → logprob: -13.899572372436523

Token 130: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0006307095172815025
    2. ' k' → logprob: -7.375630855560303
    3. '   ' → logprob: -12.875630378723145
    4. ' ' → logprob: -14.500630378723145
    5. '(k' → logprob: -15.250630378723145
    6. '           ' → logprob: -15.375630378723145
    7. '       ' → logprob: -15.500630378723145
    8. '  ' → logprob: -15.625630378723145
    9. '
' → logprob: -16.12563133239746
    10. '    ' → logprob: -17.00063133239746

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007899036630988121
    2. ',N' → logprob: -4.882898807525635
    3. ' ,' → logprob: -8.757899284362793
    4. '(N' → logprob: -9.757899284362793
    5. 'N' → logprob: -10.007899284362793
    6. ',n' → logprob: -11.132899284362793
    7. ',len' → logprob: -11.882899284362793
    8. ',
' → logprob: -13.007899284362793
    9. '<|end|>' → logprob: -13.632899284362793
    10. '   ' → logprob: -13.632899284362793

Token 132: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0023520994000136852
    2. ' N' → logprob: -6.127352237701416
    3. '   ' → logprob: -9.502351760864258
    4. 'len' → logprob: -9.752351760864258
    5. ' ' → logprob: -11.252351760864258
    6. '  ' → logprob: -12.252351760864258
    7. ' len' → logprob: -12.627351760864258
    8. '    ' → logprob: -12.752351760864258
    9. '           ' → logprob: -13.002351760864258
    10. '       ' → logprob: -13.002351760864258

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760535597801208
    2. ')
' → logprob: -0.8260535597801208
    3. ')
' → logprob: -9.951053619384766
    4. '   ' → logprob: -10.201053619384766
    5. ')

' → logprob: -10.951053619384766
    6. ' )' → logprob: -12.951053619384766
    7. ' )
' → logprob: -12.951053619384766
    8. ')`
' → logprob: -13.951053619384766
    9. ')\
' → logprob: -14.201053619384766
    10. '       ' → logprob: -14.326053619384766

Token 134: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44366636872291565
    2. '       ' → logprob: -1.5686663389205933
    3. '<|end|>' → logprob: -2.443666458129883
    4. '        
' → logprob: -3.318666458129883
    5. '   ' → logprob: -4.193666458129883
    6. '  
' → logprob: -5.568666458129883
    7. '    
' → logprob: -5.943666458129883
    8. '```' → logprob: -6.318666458129883
    9. '<|end|>' → logprob: -6.443666458129883
    10. ')' → logprob: -7.943666458129883

Token 135: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.12096846103668213
    2. 'for' → logprob: -2.4959683418273926
    3. '       ' → logprob: -4.245968341827393
    4. ' now' → logprob: -4.370968341827393
    5. '
' → logprob: -6.245968341827393
    6. 'x' → logprob: -7.370968341827393
    7. '   ' → logprob: -7.495968341827393
    8. ' for' → logprob: -7.495968341827393
    9. '        
' → logprob: -8.87096881866455
    10. '[now' → logprob: -8.87096881866455

Token 136: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16028748452663422
    2. ' +=' → logprob: -1.9102874994277954
    3. '=' → logprob: -10.035287857055664
    4. ']+=' → logprob: -11.160287857055664
    5. '+=(' → logprob: -12.910287857055664
    6. '+' → logprob: -14.285287857055664
    7. ' =' → logprob: -14.535287857055664
    8. '-=' → logprob: -14.660287857055664
    9. '+='' → logprob: -14.910287857055664
    10. ' -=' → logprob: -15.410287857055664

Token 137: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0010559145594015718
    2. 'sum' → logprob: -7.376055717468262
    3. '(E' → logprob: -8.376055717468262
    4. ' E' → logprob: -8.626055717468262
    5. '   ' → logprob: -12.126055717468262
    6. ' sum' → logprob: -12.626055717468262
    7. '(sum' → logprob: -12.751055717468262
    8. '(' → logprob: -13.126055717468262
    9. ' ' → logprob: -13.751055717468262
    10. 'acc' → logprob: -14.501055717468262

Token 138: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.5252596464706585e-05
    2. '(' → logprob: -10.125044822692871
    3. 'i' → logprob: -12.875044822692871
    4. '<|end|>' → logprob: -14.500044822692871
    5. ' (' → logprob: -14.750044822692871
    6. '(I' → logprob: -14.875044822692871
    7. '[i' → logprob: -15.500044822692871
    8. ' i' → logprob: -15.625044822692871
    9. '((' → logprob: -15.750044822692871
    10. '(
' → logprob: -15.875044822692871

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01077201310545206
    2. '-' → logprob: -4.760772228240967
    3. ',G' → logprob: -6.885772228240967
    4. ' -' → logprob: -7.385772228240967
    5. ' ,' → logprob: -8.260771751403809
    6. ',r' → logprob: -9.260771751403809
    7. ')' → logprob: -10.635771751403809
    8. ',
' → logprob: -10.760771751403809
    9. ',k' → logprob: -11.260771751403809
    10. '```' → logprob: -11.260771751403809

Token 140: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.002618466503918171
    2. ' acc' → logprob: -6.502618312835693
    3. '(acc' → logprob: -6.877618312835693
    4. '   ' → logprob: -9.752618789672852
    5. ' ' → logprob: -11.252618789672852
    6. '  ' → logprob: -12.002618789672852
    7. '	acc' → logprob: -12.627618789672852
    8. '
' → logprob: -14.002618789672852
    9. ')' → logprob: -14.127618789672852
    10. '    ' → logprob: -14.377618789672852

Token 141: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.9361264946837764e-07
    2. 'r' → logprob: -16.625
    3. 'acc' → logprob: -17.0
    4. ')' → logprob: -17.5
    5. ' G' → logprob: -18.375
    6. '[' → logprob: -18.75
    7. 'g' → logprob: -18.75
    8. '   ' → logprob: -19.25
    9. 'l' → logprob: -19.5
    10. '(r' → logprob: -20.0

Token 142: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.438573680294212e-06
    2. '[' → logprob: -12.875005722045898
    3. 'r' → logprob: -13.250005722045898
    4. '(r' → logprob: -14.625005722045898
    5. '][' → logprob: -15.625005722045898
    6. '[
' → logprob: -16.2500057220459
    7. '   ' → logprob: -16.2500057220459
    8. ')[' → logprob: -16.2500057220459
    9. ' [' → logprob: -16.7500057220459
    10. '[l' → logprob: -16.8750057220459

Token 143: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006915349047631025
    2. ']-' → logprob: -5.13191556930542
    3. '[l' → logprob: -7.63191556930542
    4. '[' → logprob: -8.631915092468262
    5. '])' → logprob: -8.756915092468262
    6. ' ]' → logprob: -9.256915092468262
    7. 'l' → logprob: -9.881915092468262
    8. '][' → logprob: -12.256915092468262
    9. ']
' → logprob: -12.881915092468262
    10. '[r' → logprob: -13.006915092468262

Token 144: ' -' (ID: 533)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.039683058857917786
    2. '[' → logprob: -3.4146831035614014
    3. ')' → logprob: -5.414682865142822
    4. '-' → logprob: -6.914682865142822
    5. ' -' → logprob: -8.53968334197998
    6. '[r' → logprob: -9.41468334197998
    7. ']' → logprob: -9.78968334197998
    8. '   ' → logprob: -9.91468334197998
    9. '-l' → logprob: -9.91468334197998
    10. ' ' → logprob: -10.66468334197998

Token 145: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.004081247374415398
    2. ' acc' → logprob: -5.5040812492370605
    3. '
' → logprob: -13.879080772399902
    4. '	acc' → logprob: -14.129080772399902
    5. '   ' → logprob: -14.504080772399902
    6. '(acc' → logprob: -14.754080772399902
    7. ' ' → logprob: -16.00408172607422
    8. 'ac' → logprob: -16.50408172607422
    9. '  ' → logprob: -17.50408172607422
    10. '
' → logprob: -17.62908172607422

Token 146: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -3.531315314830863e-06
    2. 'l' → logprob: -13.750003814697266
    3. 'acc' → logprob: -13.750003814697266
    4. '[' → logprob: -15.000003814697266
    5. ' G' → logprob: -15.000003814697266
    6. '[G' → logprob: -15.750003814697266
    7. ')' → logprob: -17.000003814697266
    8. '_G' → logprob: -17.250003814697266
    9. 'user' → logprob: -17.250003814697266
    10. '[l' → logprob: -17.500003814697266

Token 147: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.019466402009129524
    2. 'l' → logprob: -4.019466400146484
    3. '(l' → logprob: -6.644466400146484
    4. '	l' → logprob: -11.894466400146484
    5. '[' → logprob: -12.894466400146484
    6. ' l' → logprob: -13.019466400146484
    7. '[
' → logprob: -13.519466400146484
    8. '{' → logprob: -13.894466400146484
    9. '   ' → logprob: -15.019466400146484
    10. '```' → logprob: -16.644466400146484

Token 148: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0463063009083271
    2. ')' → logprob: -3.1713063716888428
    3. '))' → logprob: -5.796306133270264
    4. ')])' → logprob: -9.046306610107422
    5. '})' → logprob: -10.421306610107422
    6. '])
' → logprob: -10.671306610107422
    7. ']))' → logprob: -10.671306610107422
    8. ''])' → logprob: -10.796306610107422
    9. ')
' → logprob: -11.171306610107422
    10. ')]' → logprob: -11.796306610107422

Token 149: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29781314730644226
    2. ' if' → logprob: -2.4228131771087646
    3. '   ' → logprob: -2.5478131771087646
    4. ' 
' → logprob: -3.2978131771087646
    5. '    
' → logprob: -4.1728129386901855
    6. '  
' → logprob: -4.6728129386901855
    7. 'if' → logprob: -4.7978129386901855
    8. '   
' → logprob: -5.2978129386901855
    9. ')' → logprob: -5.4228129386901855
    10. ' ' → logprob: -5.5478129386901855

Token 150: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.6224794983863831
    2. 'if' → logprob: -1.3724794387817383
    3. '   ' → logprob: -1.6224794387817383
    4. ' if' → logprob: -4.747479438781738
    5. ' min' → logprob: -6.122479438781738
    6. '
' → logprob: -6.997479438781738
    7. '-' → logprob: -8.372479438781738
    8. '    
' → logprob: -8.622479438781738
    9. '	min' → logprob: -9.247479438781738
    10. '```' → logprob: -9.872479438781738

Token 151: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.00012166214582975954
    2. '_answer' → logprob: -9.8751220703125
    3. '\' → logprob: -11.0001220703125
    4. '(_' → logprob: -11.1251220703125
    5. '_an' → logprob: -11.2501220703125
    6. ' _' → logprob: -11.7501220703125
    7. '_' → logprob: -12.0001220703125
    8. '=_' → logprob: -13.3751220703125
    9. '_answers' → logprob: -13.5001220703125
    10. '```' → logprob: -13.6251220703125

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788937583565712
    2. '=' → logprob: -2.5788936614990234
    3. '=min' → logprob: -12.953893661499023
    4. ' ' → logprob: -14.953893661499023
    5. '	' → logprob: -15.828893661499023
    6. 's' → logprob: -15.828893661499023
    7. '.=' → logprob: -15.953893661499023
    8. '   ' → logprob: -16.078893661499023
    9. '<|end|>' → logprob: -16.203893661499023
    10. ')' → logprob: -16.328893661499023

Token 153: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.005233763717114925
    2. 'min' → logprob: -5.2552337646484375
    3. '(min' → logprob: -17.130233764648438
    4. '	min' → logprob: -17.880233764648438
    5. '[min' → logprob: -19.380233764648438
    6. '=min' → logprob: -19.880233764648438
    7. ' max' → logprob: -20.380233764648438
    8. ' ' → logprob: -20.630233764648438
    9. '_min' → logprob: -20.755233764648438
    10. ',min' → logprob: -20.880233764648438

Token 154: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0011708177626132965
    2. '(' → logprob: -6.751170635223389
    3. '(now' → logprob: -15.001171112060547
    4. '(max' → logprob: -16.001171112060547
    5. ' (' → logprob: -16.626171112060547
    6. '(m' → logprob: -17.876171112060547
    7. '(
' → logprob: -18.626171112060547
    8. 'min' → logprob: -18.626171112060547
    9. '```' → logprob: -18.876171112060547
    10. '(len' → logprob: -19.376171112060547

Token 155: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -3.5954712075181305e-05
    2. 'ans' → logprob: -10.875036239624023
    3. '(ans' → logprob: -12.000036239624023
    4. 'Ans' → logprob: -12.125036239624023
    5. 's' → logprob: -13.375036239624023
    6. '(_' → logprob: -14.000036239624023
    7. '_an' → logprob: -14.125036239624023
    8. '_now' → logprob: -14.750036239624023
    9. '_' → logprob: -15.125036239624023
    10. '_answer' → logprob: -15.500036239624023

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002205828350270167
    2. '(now' → logprob: -9.12522029876709
    3. ' ,' → logprob: -9.37522029876709
    4. '[now' → logprob: -11.00022029876709
    5. '(' → logprob: -12.62522029876709
    6. ',
' → logprob: -13.12522029876709
    7. ')' → logprob: -13.50022029876709
    8. 'now' → logprob: -13.87522029876709
    9. ' now' → logprob: -14.00022029876709
    10. '```' → logprob: -15.37522029876709

Token 157: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.18180832266807556
    2. ' now' → logprob: -2.4318082332611084
    3. 'abs' → logprob: -3.1818082332611084
    4. 'X' → logprob: -3.6818082332611084
    5. ' abs' → logprob: -5.1818084716796875
    6. ' X' → logprob: -5.6818084716796875
    7. 'max' → logprob: -7.3068084716796875
    8. '   ' → logprob: -7.3068084716796875
    9. ' max' → logprob: -8.181808471679688
    10. 'min' → logprob: -8.806808471679688

Token 158: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24833379685878754
    2. '+' → logprob: -1.9983338117599487
    3. ' +' → logprob: -2.498333692550659
    4. ' )' → logprob: -6.748333930969238
    5. ')
' → logprob: -7.248333930969238
    6. '+)' → logprob: -9.623333930969238
    7. ' -' → logprob: -9.873333930969238
    8. '-' → logprob: -9.998333930969238
    9. '+x' → logprob: -10.998333930969238
    10. ',' → logprob: -11.623333930969238

Token 159: ' (' (ID: 350)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.31036248803138733
    2. ' X' → logprob: -1.435362458229065
    3. 'E' → logprob: -5.060362339019775
    4. ' E' → logprob: -5.185362339019775
    5. ' (' → logprob: -5.435362339019775
    6. 'k' → logprob: -5.560362339019775
    7. ' abs' → logprob: -5.935362339019775
    8. 'abs' → logprob: -6.560362339019775
    9. ' k' → logprob: -7.060362339019775
    10. ')' → logprob: -7.310362339019775

Token 160: 'N' (ID: 45)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.08692296594381332
    2. 'k' → logprob: -3.0869228839874268
    3. 'N' → logprob: -3.7119228839874268
    4. ' X' → logprob: -5.336923122406006
    5. '(X' → logprob: -6.336923122406006
    6. '(k' → logprob: -6.586923122406006
    7. 'E' → logprob: -6.711923122406006
    8. 'max' → logprob: -6.836923122406006
    9. 'abs' → logprob: -7.336923122406006
    10. '(N' → logprob: -7.586923122406006

Token 161: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.32927876710891724
    2. ' -' → logprob: -1.3292787075042725
    3. '-k' → logprob: -4.579278945922852
    4. '+' → logprob: -5.329278945922852
    5. '*' → logprob: -8.329278945922852
    6. '//' → logprob: -8.579278945922852
    7. ' +' → logprob: -8.954278945922852
    8. ' ' → logprob: -9.579278945922852
    9. ')' → logprob: -10.079278945922852
    10. ' //' → logprob: -10.454278945922852

Token 162: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.17087388038635254
    2. ' k' → logprob: -2.0458738803863525
    3. '1' → logprob: -4.170873641967773
    4. 'X' → logprob: -5.170873641967773
    5. ' X' → logprob: -5.920873641967773
    6. ' ' → logprob: -6.420873641967773
    7. ' -' → logprob: -7.045873641967773
    8. 'N' → logprob: -8.045873641967773
    9. ' (' → logprob: -8.045873641967773
    10. ' N' → logprob: -8.420873641967773

Token 163: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34772396087646484
    2. ')' → logprob: -1.4727239608764648
    3. ' -' → logprob: -2.847723960876465
    4. ')//' → logprob: -5.972723960876465
    5. '+' → logprob: -6.097723960876465
    6. '//' → logprob: -7.472723960876465
    7. '*' → logprob: -8.222723960876465
    8. ' +' → logprob: -8.597723960876465
    9. ' )' → logprob: -8.847723960876465
    10. '   ' → logprob: -9.347723960876465

Token 164: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0300935506820679
    2. ' *' → logprob: -1.2800935506820679
    3. ' -' → logprob: -1.9050935506820679
    4. ')' → logprob: -2.2800936698913574
    5. '-' → logprob: -2.2800936698913574
    6. '+' → logprob: -5.530093669891357
    7. ' //' → logprob: -6.405093669891357
    8. ' +' → logprob: -6.530093669891357
    9. '//' → logprob: -6.530093669891357
    10. ')*' → logprob: -6.905093669891357

Token 165: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.28270840644836426
    2. ' X' → logprob: -1.4077084064483643
    3. ' ' → logprob: -7.782708168029785
    4. ' (' → logprob: -8.032708168029785
    5. '(X' → logprob: -8.407708168029785
    6. ')' → logprob: -8.657708168029785
    7. '2' → logprob: -9.157708168029785
    8. '  ' → logprob: -10.532708168029785
    9. ' abs' → logprob: -10.657708168029785
    10. '5' → logprob: -10.782708168029785

Token 166: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.03521392197581e-05
    2. '+' → logprob: -11.250030517578125
    3. ' )' → logprob: -11.500030517578125
    4. '))' → logprob: -12.500030517578125
    5. ')
' → logprob: -13.500030517578125
    6. '+)' → logprob: -14.625030517578125
    7. '*' → logprob: -15.125030517578125
    8. '())' → logprob: -15.500030517578125
    9. '*)' → logprob: -15.750030517578125
    10. '()' → logprob: -16.000030517578125

Token 167: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033953944221138954
    2. '
' → logprob: -6.7533955574035645
    3. '<|end|>' → logprob: -6.8783955574035645
    4. '\n' → logprob: -7.6283955574035645
    5. 'print' → logprob: -8.628395080566406
    6. ' )' → logprob: -8.878395080566406
    7. '+' → logprob: -9.253395080566406
    8. '   ' → logprob: -9.378395080566406
    9. '}' → logprob: -10.378395080566406
    10. ' 
' → logprob: -10.628395080566406

Token 168: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.02325514331459999
    2. '(' → logprob: -3.7732551097869873
    3. '('' → logprob: -12.648255348205566
    4. '(f' → logprob: -12.773255348205566
    5. '(max' → logprob: -13.773255348205566
    6. '("("' → logprob: -14.148255348205566
    7. '((' → logprob: -15.023255348205566
    8. '(m' → logprob: -15.273255348205566
    9. '(`' → logprob: -15.648255348205566
    10. '()' → logprob: -15.898255348205566

Token 169: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -2.057743949990254e-05
    2. '(_' → logprob: -11.500020980834961
    3. '_answer' → logprob: -13.000020980834961
    4. ' _' → logprob: -13.250020980834961
    5. '_ant' → logprob: -13.625020980834961
    6. ')' → logprob: -13.875020980834961
    7. '_ast' → logprob: -14.625020980834961
    8. '_' → logprob: -14.625020980834961
    9. ')_' → logprob: -14.875020980834961
    10. '_answers' → logprob: -15.125020980834961

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ' )' → logprob: -11.875008583068848
    3. ')`' → logprob: -14.375008583068848
    4. '))' → logprob: -14.875008583068848
    5. '+' → logprob: -15.000008583068848
    6. ')
' → logprob: -15.500008583068848
    7. '())' → logprob: -16.750009536743164
    8. '()' → logprob: -16.875009536743164
    9. '`)' → logprob: -17.125009536743164
    10. ')}' → logprob: -17.375009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 168
Tokens correctement prédits (1ère position, stricte): 63
Tokens correctement prédits (1ère position, avec adaptation): 66
Tokens correctement prédits (top 10): 143
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 39.29%
Précision (top 10): 85.12%
================================================================================
