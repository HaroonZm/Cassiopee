================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir trois entiers séparés par des espaces, puis attribue les valeurs respectives à A, B et C
# La fonction input() lit la saisie utilisateur sous forme de chaîne de caractères
# La méthode split() découpe la chaîne d'entrée en une liste de sous-chaînes, en les séparant par des espaces
# La fonction map(int, ...) convertit chaque élément de la liste en un entier (int)
# Enfin, les trois entiers extraits sont affectés aux variables A, B et C, respectivement
A, B, C = map(int, input().split())

# Vérifie si la première condition suivante est vraie :
# - A est égal à B (A == B) : cela signifie que les deux premières valeurs sont identiques
# - A est différent de C (A != C) : cela signifie que la première et la troisième valeur sont différentes
if A == B and A != C:
    # Si la condition ci-dessus est remplie, affiche "Yes" à l'écran
    print("Yes")

# Si la condition précédente n'est pas satisfaite, vérifie la condition suivante :
# - A est égal à C (A == C) : la première et la troisième valeur sont identiques
# - B est différent de C (B != C) : la deuxième et la troisième valeur sont différentes
elif A == C and B != C:
    # Si cette condition est remplie, affiche "Yes" à l'écran
    print("Yes")

# Si aucune des précédentes conditions n'est satisfaite, vérifie la condition suivante :
# - C est égal à B (C == B) : la deuxième et la troisième valeur sont identiques
# - A est différent de C (A != C) : la première et la troisième valeur sont différentes
elif C == B and A != C:
    # Si cette condition est remplie, affiche "Yes"
    print("Yes")

# Si aucune des conditions précédentes n'est remplie, alors aucune paire de valeurs ne satisfait exactement les contraintes
# Cela veut dire soit que toutes les valeurs sont différentes, soit que toutes sont égales
else:
    # Affiche "No" à l'écran car aucune combinaison n'a été trouvée où deux valeurs sont identiques et la troisième est différente
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7432820796966553
    2. ' ' → logprob: -1.6182820796966553
    3. ':' → logprob: -1.8682820796966553
    4. '_' → logprob: -2.2432820796966553
    5. ' de' → logprob: -4.243282318115234
    6. ' :' → logprob: -4.243282318115234
    7. '```' → logprob: -4.868282318115234
    8. ' =' → logprob: -5.243282318115234
    9. ' d' → logprob: -5.243282318115234
    10. ''' → logprob: -5.368282318115234

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00870274007320404
    2. ' l' → logprob: -4.883702754974365
    3. 'user' → logprob: -7.633702754974365
    4. 'util' → logprob: -8.508702278137207
    5. '#' → logprob: -9.258702278137207
    6. 'la' → logprob: -10.133702278137207
    7. ''' → logprob: -10.258702278137207
    8. '_' → logprob: -10.758702278137207
    9. '`' → logprob: -10.758702278137207
    10. '```' → logprob: -10.758702278137207

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.050799041986465454
    2. 'util' → logprob: -3.9257991313934326
    3. 'u' → logprob: -4.9257988929748535
    4. ' utilisateur' → logprob: -4.9257988929748535
    5. '’utilisateur' → logprob: -4.9257988929748535
    6. ''' → logprob: -5.4257988929748535
    7. 'a' → logprob: -6.0507988929748535
    8. 'user' → logprob: -8.050799369812012
    9. ''user' → logprob: -8.175799369812012
    10. 'us' → logprob: -8.925799369812012

Token 6: ' de' (ID: 334)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.6365156173706055
    2. 'nom' → logprob: -1.5115156173706055
    3. 'input' → logprob: -2.6365156173706055
    4. 'n' → logprob: -3.0115156173706055
    5. 'user' → logprob: -3.0115156173706055
    6. 'print' → logprob: -3.6365156173706055
    7. 's' → logprob: -3.8865156173706055
    8. 'username' → logprob: -4.5115156173706055
    9. 'age' → logprob: -5.1365156173706055
    10. 'prenom' → logprob: -6.0115156173706055

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009183843620121479
    2. ' saisir' → logprob: -5.634183883666992
    3. 'r' → logprob: -6.009183883666992
    4. 'entr' → logprob: -6.259183883666992
    5. '```' → logprob: -7.259183883666992
    6. 'sa' → logprob: -9.009183883666992
    7. '#' → logprob: -9.384183883666992
    8. ' entrer' → logprob: -10.259183883666992
    9. ' fournir' → logprob: -10.634183883666992
    10. 'contin' → logprob: -10.759183883666992

Token 8: ' trois' (ID: 25564)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018351631239056587
    2. ' un' → logprob: -5.0183515548706055
    3. ''' → logprob: -5.2683515548706055
    4. '_' → logprob: -6.1433515548706055
    5. ' une' → logprob: -6.6433515548706055
    6. 's' → logprob: -7.3933515548706055
    7. 'u' → logprob: -8.018351554870605
    8. '```' → logprob: -8.018351554870605
    9. 'r' → logprob: -8.518351554870605
    10. ''un' → logprob: -8.643351554870605

Token 9: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5692481994628906
    2. ' espaces' → logprob: -0.9442481994628906
    3. ' mots' → logprob: -3.6942481994628906
    4. ' espace' → logprob: -5.444248199462891
    5. ' nombres' → logprob: -5.694248199462891
    6. ' caractères' → logprob: -5.944248199462891
    7. ' variables' → logprob: -6.319248199462891
    8. ' ' → logprob: -6.694248199462891
    9. ' tokens' → logprob: -6.944248199462891
    10. ' lignes' → logprob: -7.319248199462891

Token 10: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.13702423870563507
    2. 'r' → logprob: -2.512024164199829
    3. 'i' → logprob: -3.137024164199829
    4. 'ières' → logprob: -6.762024402618408
    5. '```' → logprob: -7.012024402618408
    6. 'ier' → logprob: -7.762024402618408
    7. 'ri' → logprob: -8.26202392578125
    8. 'rs' → logprob: -8.88702392578125
    9. 'ié' → logprob: -9.26202392578125
    10. 't' → logprob: -9.51202392578125

Token 11: ' sépar' (ID: 97160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7983672618865967
    2. 'n' → logprob: -0.7983672618865967
    3. 'x' → logprob: -2.4233672618865967
    4. 'ent' → logprob: -5.423367500305176
    5. '\n' → logprob: -6.298367500305176
    6. '```' → logprob: -6.673367500305176
    7. 'v' → logprob: -7.298367500305176
    8. '#' → logprob: -7.423367500305176
    9. 'i' → logprob: -7.798367500305176
    10. 'e' → logprob: -8.173367500305176

Token 12: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0004933410091325641
    2. 'é' → logprob: -7.75049352645874
    3. '```' → logprob: -10.125493049621582
    4. 'ès' → logprob: -12.000493049621582
    5. 'es' → logprob: -12.125493049621582
    6. 'ées' → logprob: -12.750493049621582
    7. 's' → logprob: -12.875493049621582
    8. 'ément' → logprob: -13.125493049621582
    9. 'ÉS' → logprob: -14.000493049621582
    10. '#' → logprob: -14.625493049621582

Token 13: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.21188536286354065
    2. ' par' → logprob: -2.336885452270508
    3. 'es' → logprob: -2.586885452270508
    4. 's' → logprob: -4.836885452270508
    5. ',' → logprob: -5.461885452270508
    6. '```' → logprob: -5.836885452270508
    7. 'és' → logprob: -6.211885452270508
    8. 'e' → logprob: -7.586885452270508
    9. ' ' → logprob: -7.586885452270508
    10. '(par' → logprob: -8.336885452270508

Token 14: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.6286550760269165
    2. ' des' → logprob: -1.1286550760269165
    3. 'un' → logprob: -2.128654956817627
    4. 'une' → logprob: -4.628654956817627
    5. ' un' → logprob: -5.003654956817627
    6. '```' → logprob: -5.878654956817627
    7. 'es' → logprob: -6.878654956817627
    8. ' ' → logprob: -7.128654956817627
    9. 'spaces' → logprob: -7.253654956817627
    10. ' ' → logprob: -7.878654956817627

Token 15: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.6017792224884033
    2. ' espaces' → logprob: -0.8517792224884033
    3. ''esp' → logprob: -3.9767792224884033
    4. 'es' → logprob: -5.476778984069824
    5. 'spaces' → logprob: -6.601778984069824
    6. ''espace' → logprob: -7.226778984069824
    7. '’esp' → logprob: -8.976778984069824
    8. 'paces' → logprob: -9.226778984069824
    9. ' espace' → logprob: -9.851778984069824
    10. 'space' → logprob: -10.351778984069824

Token 16: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3015187680721283
    2. 'e' → logprob: -2.676518678665161
    3. 'ent' → logprob: -3.301518678665161
    4. 'i' → logprob: -3.426518678665161
    5. 'x' → logprob: -3.426518678665161
    6. 'input' → logprob: -3.551518678665161
    7. 'a' → logprob: -3.801518678665161
    8. 'user' → logprob: -5.17651891708374
    9. 'v' → logprob: -5.30151891708374
    10. 'numbers' → logprob: -5.30151891708374

Token 17: ' puis' (ID: 18766)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.458377718925476
    2. 'n' → logprob: -1.583377718925476
    3. 's' → logprob: -2.0833778381347656
    4. 'x' → logprob: -2.5833778381347656
    5. ' ' → logprob: -2.8333778381347656
    6. 'e' → logprob: -2.8333778381347656
    7. 'ent' → logprob: -2.9583778381347656
    8. 'i' → logprob: -3.0833778381347656
    9. 'val' → logprob: -3.0833778381347656
    10. ' i' → logprob: -4.458377838134766

Token 18: ' attrib' (ID: 72186)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15508154034614563
    2. ' ' → logprob: -3.7800815105438232
    3. 'print' → logprob: -4.155081748962402
    4. '```' → logprob: -4.655081748962402
    5. 'split' → logprob: -4.780081748962402
    6. 'i' → logprob: -4.780081748962402
    7. 'val' → logprob: -4.905081748962402
    8. 'input' → logprob: -5.155081748962402
    9. 'r' → logprob: -5.405081748962402
    10. ' saisir' → logprob: -5.530081748962402

Token 19: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.007379807997494936
    2. 'uer' → logprob: -5.50738000869751
    3. 'u' → logprob: -5.75738000869751
    4. 'uez' → logprob: -9.882379531860352
    5. 'uera' → logprob: -10.632379531860352
    6. 'uent' → logprob: -11.007379531860352
    7. '#' → logprob: -11.257379531860352
    8. 'ues' → logprob: -11.882379531860352
    9. 'ué' → logprob: -12.132379531860352
    10. 'uée' → logprob: -12.132379531860352

Token 20: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2559429109096527
    2. '_l' → logprob: -2.7559428215026855
    3. ' ' → logprob: -2.7559428215026855
    4. '-l' → logprob: -3.1309428215026855
    5. 'l' → logprob: -3.3809428215026855
    6. ''' → logprob: -5.5059428215026855
    7. 'r' → logprob: -5.8809428215026855
    8. 's' → logprob: -6.0059428215026855
    9. '```' → logprob: -6.2559428215026855
    10. ' ' → logprob: -6.5059428215026855

Token 21: ' valeurs' (ID: 73668)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6728136539459229
    2. 's' → logprob: -1.7978136539459229
    3. 'val' → logprob: -2.297813653945923
    4. ' =' → logprob: -3.047813653945923
    5. ',' → logprob: -3.297813653945923
    6. 'ent' → logprob: -3.422813653945923
    7. 'n' → logprob: -3.797813653945923
    8. ' ' → logprob: -4.797813415527344
    9. '_val' → logprob: -4.797813415527344
    10. ' valeurs' → logprob: -4.797813415527344

Token 22: ' respect' (ID: 5618)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9053482413291931
    2. 'x' → logprob: -1.655348300933838
    3. 'ent' → logprob: -1.780348300933838
    4. 'a' → logprob: -3.155348300933838
    5. 'e' → logprob: -3.155348300933838
    6. 'val' → logprob: -3.155348300933838
    7. 'v' → logprob: -3.530348300933838
    8. 'i' → logprob: -4.030348300933838
    9. 't' → logprob: -4.530348300933838
    10. '```' → logprob: -4.905348300933838

Token 23: 'ives' (ID: 2264)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3201870918273926
    2. 'es' → logprob: -1.8201870918273926
    3. ' =' → logprob: -1.9451870918273926
    4. 'ments' → logprob: -2.0701870918273926
    5. 'u' → logprob: -2.4451870918273926
    6. '=' → logprob: -2.9451870918273926
    7. 'e' → logprob: -3.3201870918273926
    8. 'ents' → logprob: -4.320187091827393
    9. '_' → logprob: -4.445187091827393
    10. 'ements' → logprob: -4.570187091827393

Token 24: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45494306087493896
    2. 'ent' → logprob: -2.4549431800842285
    3. ' a' → logprob: -2.8299431800842285
    4. 'x' → logprob: -3.0799431800842285
    5. ':' → logprob: -3.4549431800842285
    6. 's' → logprob: -3.8299431800842285
    7. ' :' → logprob: -4.0799431800842285
    8. 'n' → logprob: -4.3299431800842285
    9. 'val' → logprob: -4.5799431800842285
    10. ' =' → logprob: -4.8299431800842285

Token 25: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09378907084465027
    2. 'x' → logprob: -2.9687891006469727
    3. ' a' → logprob: -3.9687891006469727
    4. 'ent' → logprob: -4.968789100646973
    5. 'n' → logprob: -5.343789100646973
    6. ' x' → logprob: -6.218789100646973
    7. '`' → logprob: -6.718789100646973
    8. 'nombre' → logprob: -7.218789100646973
    9. ' variables' → logprob: -7.343789100646973
    10. 'variables' → logprob: -7.468789100646973

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001105448347516358
    2. ' ,' → logprob: -7.751105308532715
    3. 's' → logprob: -8.876105308532715
    4. '=' → logprob: -8.876105308532715
    5. ' =' → logprob: -8.876105308532715
    6. ',b' → logprob: -9.501105308532715
    7. ',B' → logprob: -10.001105308532715
    8. 'a' → logprob: -10.626105308532715
    9. ',A' → logprob: -10.751105308532715
    10. '_' → logprob: -11.251105308532715

Token 27: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.014431556686758995
    2. ' B' → logprob: -4.264431476593018
    3. ',' → logprob: -8.639431953430176
    4. ' ,' → logprob: -10.139431953430176
    5. ' ' → logprob: -11.514431953430176
    6. 'b' → logprob: -11.764431953430176
    7. 'a' → logprob: -11.889431953430176
    8. 's' → logprob: -12.014431953430176
    9. '```' → logprob: -12.389431953430176
    10. '  ' → logprob: -13.014431953430176

Token 28: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018259541830047965
    2. ' ,' → logprob: -6.50182580947876
    3. ' =' → logprob: -9.251826286315918
    4. 'et' → logprob: -9.501826286315918
    5. '=' → logprob: -9.626826286315918
    6. ' et' → logprob: -10.251826286315918
    7. 's' → logprob: -11.251826286315918
    8. ',C' → logprob: -12.251826286315918
    9. 'e' → logprob: -12.501826286315918
    10. ' and' → logprob: -12.751826286315918

Token 29: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.10027589648962021
    2. ' C' → logprob: -2.350275993347168
    3. ' ' → logprob: -10.600275993347168
    4. '```' → logprob: -10.725275993347168
    5. ' ' → logprob: -10.975275993347168
    6. '`' → logprob: -13.350275993347168
    7. 's' → logprob: -14.225275993347168
    8. '_C' → logprob: -14.850275993347168
    9. 'l' → logprob: -14.975275993347168
    10. 'c' → logprob: -14.975275993347168

Token 30: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0005010855966247618
    2. 'a' → logprob: -8.250500679016113
    3. ' A' → logprob: -9.250500679016113
    4. 'i' → logprob: -9.750500679016113
    5. '```' → logprob: -11.000500679016113
    6. '#' → logprob: -11.000500679016113
    7. 'n' → logprob: -11.500500679016113
    8. 'input' → logprob: -11.750500679016113
    9. 'x' → logprob: -11.875500679016113
    10. ' ' → logprob: -12.000500679016113

Token 31: '#' (ID: 2)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01411366742104292
    2. ' A' → logprob: -5.264113903045654
    3. 'a' → logprob: -5.764113903045654
    4. ':' → logprob: -6.264113903045654
    5. '```' → logprob: -6.764113903045654
    6. 'n' → logprob: -7.514113903045654
    7. ',' → logprob: -7.639113903045654
    8. 'i' → logprob: -8.014113426208496
    9. ' =' → logprob: -8.139113426208496
    10. ' :' → logprob: -9.139113426208496

Token 32: ' La' (ID: 3038)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.019035151228308678
    2. ' A' → logprob: -4.769035339355469
    3. 'a' → logprob: -5.519035339355469
    4. 'input' → logprob: -6.644035339355469
    5. '#' → logprob: -7.019035339355469
    6. 's' → logprob: -7.394035339355469
    7. 'n' → logprob: -7.644035339355469
    8. ' ' → logprob: -7.644035339355469
    9. 'i' → logprob: -7.769035339355469
    10. 'ent' → logprob: -7.894035339355469

Token 33: ' fonction' (ID: 17610)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7811291813850403
    2. ' ' → logprob: -0.9061291813850403
    3. 'A' → logprob: -3.7811291217803955
    4. ' A' → logprob: -4.031129360198975
    5. '#' → logprob: -4.281129360198975
    6. ' =' → logprob: -4.281129360198975
    7. '_' → logprob: -4.531129360198975
    8. ' #' → logprob: -4.656129360198975
    9. 'i' → logprob: -4.781129360198975
    10. 'input' → logprob: -5.281129360198975

Token 34: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.051595937460660934
    2. 'input' → logprob: -3.67659592628479
    3. ' input' → logprob: -4.051596164703369
    4. ' def' → logprob: -4.926596164703369
    5. 's' → logprob: -8.676595687866211
    6. '=input' → logprob: -9.676595687866211
    7. 'd' → logprob: -10.051595687866211
    8. ' =' → logprob: -11.551595687866211
    9. '```' → logprob: -11.801595687866211
    10. '=' → logprob: -12.051595687866211

Token 35: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006880098371766508
    2. 's' → logprob: -8.625687599182129
    3. '('' → logprob: -9.000687599182129
    4. '()' → logprob: -9.000687599182129
    5. ' (' → logprob: -9.375687599182129
    6. '_' → logprob: -10.500687599182129
    7. '("' → logprob: -10.500687599182129
    8. ',' → logprob: -11.250687599182129
    9. '(
' → logprob: -11.250687599182129
    10. ')' → logprob: -11.250687599182129

Token 36: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.297859787940979
    2. 's' → logprob: -2.4228596687316895
    3. ' =' → logprob: -2.6728596687316895
    4. ' ' → logprob: -3.5478596687316895
    5. '.' → logprob: -4.0478596687316895
    6. '[' → logprob: -4.5478596687316895
    7. ',' → logprob: -4.5478596687316895
    8. '_' → logprob: -5.0478596687316895
    9. ' (' → logprob: -5.1728596687316895
    10. '=' → logprob: -5.5478596687316895

Token 37: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.34442225098609924
    2. ' l' → logprob: -2.2194223403930664
    3. ' la' → logprob: -2.2194223403930664
    4. ' trois' → logprob: -3.7194223403930664
    5. 'une' → logprob: -4.094422340393066
    6. ' les' → logprob: -4.469422340393066
    7. ' ' → logprob: -4.719422340393066
    8. '()' → logprob: -6.344422340393066
    9. 'l' → logprob: -6.344422340393066
    10. ' ' → logprob: -6.469422340393066

Token 38: ' sais' (ID: 30010)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1885689496994019
    2. ' ' → logprob: -1.1885689496994019
    3. 'val' → logprob: -2.0635690689086914
    4. 'ent' → logprob: -2.6885690689086914
    5. ' valeur' → logprob: -3.0635690689086914
    6. ' input' → logprob: -3.6885690689086914
    7. 'entrée' → logprob: -3.9385690689086914
    8. 'input' → logprob: -4.188569068908691
    9. ' ligne' → logprob: -4.313569068908691
    10. ' =' → logprob: -4.563569068908691

Token 39: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.1050126850605011
    2. 'sie' → logprob: -3.7300126552581787
    3. 'ies' → logprob: -3.9800126552581787
    4. 's' → logprob: -3.9800126552581787
    5. 'i' → logprob: -4.730012893676758
    6. 'e' → logprob: -4.730012893676758
    7. 'rie' → logprob: -5.230012893676758
    8. 'is' → logprob: -5.480012893676758
    9. 'l' → logprob: -5.605012893676758
    10. 'n' → logprob: -6.855012893676758

Token 40: ' utilisateur' (ID: 115595)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.157150998711586
    2. ' A' → logprob: -2.157150983810425
    3. 'a' → logprob: -4.157151222229004
    4. ':' → logprob: -5.907151222229004
    5. ' :' → logprob: -6.032151222229004
    6. ' =' → logprob: -6.157151222229004
    7. ',' → logprob: -6.407151222229004
    8. 's' → logprob: -6.657151222229004
    9. 'val' → logprob: -7.032151222229004
    10. ' a' → logprob: -7.782151222229004

Token 41: ' sous' (ID: 14487)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.012258860282599926
    2. 'a' → logprob: -4.637259006500244
    3. ' A' → logprob: -6.387259006500244
    4. ':' → logprob: -8.887258529663086
    5. '```' → logprob: -9.137258529663086
    6. ',' → logprob: -9.512258529663086
    7. 'x' → logprob: -9.887258529663086
    8. 'val' → logprob: -10.012258529663086
    9. ' =' → logprob: -10.137258529663086
    10. 'values' → logprob: -10.387258529663086

Token 42: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.05973217263817787
    2. 'forme' → logprob: -2.93473219871521
    3. 'form' → logprob: -6.309731960296631
    4. 'chaine' → logprob: -6.684731960296631
    5. 'la' → logprob: -7.309731960296631
    6. 'ent' → logprob: -7.434731960296631
    7. ' la' → logprob: -8.809732437133789
    8. 'forma' → logprob: -8.809732437133789
    9. ' form' → logprob: -9.934732437133789
    10. ' ' → logprob: -10.434732437133789

Token 43: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07240250706672668
    2. 'd' → logprob: -2.6974024772644043
    3. ' de' → logprob: -6.197402477264404
    4. 'de' → logprob: -8.072402954101562
    5. '=' → logprob: -10.947402954101562
    6. ' =' → logprob: -11.072402954101562
    7. '=input' → logprob: -11.197402954101562
    8. 'str' → logprob: -11.322402954101562
    9. ' ' → logprob: -11.447402954101562
    10. '=d' → logprob: -11.447402954101562

Token 44: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.5179988145828247
    2. ' chaîne' → logprob: -1.0179988145828247
    3. 'cha' → logprob: -3.517998695373535
    4. ' chaine' → logprob: -4.892998695373535
    5. ' chaînes' → logprob: -5.517998695373535
    6. 'string' → logprob: -7.392998695373535
    7. 'chain' → logprob: -7.767998695373535
    8. 'texte' → logprob: -8.142998695373535
    9. 'str' → logprob: -8.267998695373535
    10. ' string' → logprob: -9.392998695373535

Token 45: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.027805771678686142
    2. 'a' → logprob: -4.027805805206299
    3. ' A' → logprob: -4.902805805206299
    4. 's' → logprob: -7.152805805206299
    5. ',' → logprob: -7.777805805206299
    6. 'val' → logprob: -8.15280532836914
    7. ' =' → logprob: -9.15280532836914
    8. 'values' → logprob: -9.40280532836914
    9. ':' → logprob: -9.52780532836914
    10. '```' → logprob: -9.52780532836914

Token 46: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.015527463518083096
    2. ' caractères' → logprob: -4.390527248382568
    3. 'texte' → logprob: -6.265527248382568
    4. '```' → logprob: -8.640527725219727
    5. 'c' → logprob: -8.890527725219727
    6. 'chaine' → logprob: -9.140527725219727
    7. '#' → logprob: -9.265527725219727
    8. ' caracteres' → logprob: -9.265527725219727
    9. 'n' → logprob: -9.640527725219727
    10. ''''' → logprob: -9.765527725219727

Token 47: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.010664811357855797
    2. 'a' → logprob: -5.260664939880371
    3. ',' → logprob: -6.010664939880371
    4. '[' → logprob: -7.385664939880371
    5. ' A' → logprob: -7.510664939880371
    6. '```' → logprob: -7.635664939880371
    7. 'n' → logprob: -8.135664939880371
    8. '#' → logprob: -8.760664939880371
    9. 's' → logprob: -9.010664939880371
    10. '`' → logprob: -9.010664939880371

Token 48: '#' (ID: 2)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0001290454383706674
    2. 'a' → logprob: -9.750128746032715
    3. '```' → logprob: -10.625128746032715
    4. ' A' → logprob: -11.000128746032715
    5. '#' → logprob: -11.625128746032715
    6. '`' → logprob: -12.625128746032715
    7. 'v' → logprob: -12.750128746032715
    8. 'n' → logprob: -13.000128746032715
    9. ''''' → logprob: -13.125128746032715
    10. 'x' → logprob: -13.250128746032715

Token 49: ' La' (ID: 3038)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0006706207641400397
    2. 'a' → logprob: -8.250670433044434
    3. ' A' → logprob: -8.500670433044434
    4. '```' → logprob: -9.250670433044434
    5. '#' → logprob: -10.750670433044434
    6. 'v' → logprob: -11.125670433044434
    7. 'n' → logprob: -11.250670433044434
    8. 'inputs' → logprob: -11.875670433044434
    9. 'values' → logprob: -12.000670433044434
    10. 't' → logprob: -12.250670433044434

Token 50: ' méthode' (ID: 71490)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8640006184577942
    2. ' A' → logprob: -1.6140005588531494
    3. 'A' → logprob: -2.4890005588531494
    4. 'values' → logprob: -2.4890005588531494
    5. 's' → logprob: -2.7390005588531494
    6. ' valeurs' → logprob: -3.4890005588531494
    7. '#' → logprob: -3.7390005588531494
    8. 'l' → logprob: -3.8640005588531494
    9. 'a' → logprob: -4.4890007972717285
    10. ' ' → logprob: -4.6140007972717285

Token 51: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.18189211189746857
    2. ' split' → logprob: -1.8068921566009521
    3. 'strip' → logprob: -6.556891918182373
    4. '.split' → logprob: -8.181892395019531
    5. 's' → logprob: -8.681892395019531
    6. ' strip' → logprob: -9.181892395019531
    7. '.' → logprob: -9.806892395019531
    8. 'spl' → logprob: -9.931892395019531
    9. ' input' → logprob: -10.806892395019531
    10. ' s' → logprob: -11.181892395019531

Token 52: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43398746848106384
    2. '(' → logprob: -1.0589874982833862
    3. '('' → logprob: -5.308987617492676
    4. '("("' → logprob: -9.183987617492676
    5. '("' → logprob: -9.308987617492676
    6. '().' → logprob: -9.808987617492676
    7. '(
' → logprob: -11.183987617492676
    8. ' ()' → logprob: -11.558987617492676
    9. '('.')' → logprob: -12.058987617492676
    10. '(

' → logprob: -12.308987617492676

Token 53: ' décou' (ID: 68302)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28412795066833496
    2. '()' → logprob: -1.409127950668335
    3. '('' → logprob: -6.659128189086914
    4. ',' → logprob: -7.909128189086914
    5. ')' → logprob: -8.659128189086914
    6. ' ()' → logprob: -8.784128189086914
    7. ' permet' → logprob: -9.284128189086914
    8. ' (' → logprob: -9.284128189086914
    9. '(
' → logprob: -9.409128189086914
    10. 's' → logprob: -9.909128189086914

Token 54: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.03144417330622673
    2. 'p' → logprob: -3.5314440727233887
    3. 'пе' → logprob: -7.406444072723389
    4. 'pé' → logprob: -8.406444549560547
    5. 'page' → logprob: -8.781444549560547
    6. '```' → logprob: -9.281444549560547
    7. 'п' → logprob: -9.406444549560547
    8. 'per' → logprob: -9.656444549560547
    9. 'ppe' → logprob: -9.781444549560547
    10. '' → logprob: -10.156444549560547

Token 55: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0368395633995533
    2. '()' → logprob: -4.536839485168457
    3. '('' → logprob: -4.536839485168457
    4. ''' → logprob: -5.286839485168457
    5. ' ' → logprob: -5.661839485168457
    6. ' la' → logprob: -6.661839485168457
    7. ' (' → logprob: -7.036839485168457
    8. 'l' → logprob: -7.161839485168457
    9. ')' → logprob: -7.661839485168457
    10. ' )' → logprob: -8.036839485168457

Token 56: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.09143800288438797
    2. 'chaine' → logprob: -3.091438055038452
    3. 'cha' → logprob: -3.341438055038452
    4. 's' → logprob: -5.716437816619873
    5. ' chaine' → logprob: -5.966437816619873
    6. ' chaînes' → logprob: -8.091438293457031
    7. ' cha' → logprob: -8.716438293457031
    8. 'string' → logprob: -9.466438293457031
    9. ' string' → logprob: -9.966438293457031
    10. ' ' → logprob: -10.716438293457031

Token 57: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4508107304573059
    2. '(' → logprob: -2.200810670852661
    3. '[' → logprob: -2.450810670852661
    4. 's' → logprob: -3.325810670852661
    5. '(
' → logprob: -3.825810670852661
    6. ' des' → logprob: -4.45081090927124
    7. ' A' → logprob: -4.57581090927124
    8. 'A' → logprob: -4.70081090927124
    9. ')' → logprob: -4.95081090927124
    10. ' (' → logprob: -4.95081090927124

Token 58: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3947845697402954
    2. ''espace' → logprob: -2.269784450531006
    3. 'es' → logprob: -2.769784450531006
    4. ''esp' → logprob: -2.894784450531006
    5. 'e' → logprob: -3.269784450531006
    6. ''en' → logprob: -3.394784450531006
    7. ''entrée' → logprob: -5.019784450531006
    8. ''au' → logprob: -5.519784450531006
    9. ''e' → logprob: -5.519784450531006
    10. ''é' → logprob: -6.019784450531006

Token 59: ' en' (ID: 469)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09623361378908157
    2. 'a' → logprob: -2.971233606338501
    3. ' A' → logprob: -4.47123384475708
    4. '[' → logprob: -4.59623384475708
    5. 's' → logprob: -5.72123384475708
    6. ' =' → logprob: -5.72123384475708
    7. ',' → logprob: -5.97123384475708
    8. '=' → logprob: -6.47123384475708
    9. 'n' → logprob: -6.59623384475708
    10. 't' → logprob: -6.72123384475708

Token 60: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.03313034400343895
    2. ' des' → logprob: -4.658130168914795
    3. 'une' → logprob: -4.908130168914795
    4. ' ['' → logprob: -4.908130168914795
    5. '['' → logprob: -5.408130168914795
    6. ' un' → logprob: -6.658130168914795
    7. ''une' → logprob: -7.408130168914795
    8. '[]' → logprob: -7.783130168914795
    9. ' liste' → logprob: -8.533130645751953
    10. ' la' → logprob: -8.658130645751953

Token 61: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.6927779912948608
    2. ' liste' → logprob: -1.5677779912948608
    3. 'list' → logprob: -1.6927779912948608
    4. ' list' → logprob: -2.8177781105041504
    5. 's' → logprob: -4.31777811050415
    6. ' ' → logprob: -4.69277811050415
    7. 'es' → logprob: -4.69277811050415
    8. ' espace' → logprob: -5.94277811050415
    9. 'space' → logprob: -6.69277811050415
    10. ''espace' → logprob: -7.06777811050415

Token 62: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.39639195799827576
    2. '[' → logprob: -1.8963919878005981
    3. 'a' → logprob: -2.7713918685913086
    4. ' A' → logprob: -3.1463918685913086
    5. 't' → logprob: -4.271391868591309
    6. 'values' → logprob: -4.396391868591309
    7. 's' → logprob: -4.521391868591309
    8. ',' → logprob: -4.896391868591309
    9. 'ent' → logprob: -5.271391868591309
    10. 'n' → logprob: -5.896391868591309

Token 63: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.2721153199672699
    2. 'cha' → logprob: -2.2721152305603027
    3. 'chain' → logprob: -3.0221152305603027
    4. 'm' → logprob: -3.1471152305603027
    5. 'str' → logprob: -4.647115230560303
    6. 'car' → logprob: -4.897115230560303
    7. ' chain' → logprob: -5.272115230560303
    8. 'tokens' → logprob: -5.647115230560303
    9. 'chaine' → logprob: -5.772115230560303
    10. ' mots' → logprob: -5.897115230560303

Token 64: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.2446289360523224
    2. 'cha' → logprob: -1.99462890625
    3. 'chain' → logprob: -2.74462890625
    4. 'strings' → logprob: -5.24462890625
    5. 'chaine' → logprob: -5.49462890625
    6. '-cha' → logprob: -6.36962890625
    7. 'string' → logprob: -6.99462890625
    8. 'ch' → logprob: -7.61962890625
    9. 'chains' → logprob: -7.86962890625
    10. ' chaîne' → logprob: -7.86962890625

Token 65: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.13570410013198853
    2. 'nes' → logprob: -2.2607040405273438
    3. 'î' → logprob: -4.135704040527344
    4. 'nés' → logprob: -5.510704040527344
    5. 'r' → logprob: -7.135704040527344
    6. ' nes' → logprob: -8.385704040527344
    7. '   ' → logprob: -8.760704040527344
    8. 'ines' → logprob: -8.760704040527344
    9. '```' → logprob: -8.760704040527344
    10. 'Î' → logprob: -8.885704040527344

Token 66: ',' (ID: 11)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0029148347675800323
    2. 'a' → logprob: -6.127914905548096
    3. ' A' → logprob: -7.627914905548096
    4. ',' → logprob: -9.627914428710938
    5. '```' → logprob: -9.627914428710938
    6. '#' → logprob: -10.252914428710938
    7. '[' → logprob: -11.252914428710938
    8. 'n' → logprob: -11.627914428710938
    9. 'x' → logprob: -11.877914428710938
    10. ' 
' → logprob: -12.127914428710938

Token 67: ' en' (ID: 469)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.8092792630195618
    2. ' puis' → logprob: -1.309279203414917
    3. 'A' → logprob: -2.559279203414917
    4. 'ent' → logprob: -3.184279203414917
    5. 'e' → logprob: -3.684279203414917
    6. 's' → logprob: -3.684279203414917
    7. 'ens' → logprob: -4.309279441833496
    8. 'a' → logprob: -4.434279441833496
    9. 'values' → logprob: -4.434279441833496
    10. ' ent' → logprob: -4.934279441833496

Token 68: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0809333324432373
    2. 'split' → logprob: -2.3309333324432373
    3. 'l' → logprob: -2.4559333324432373
    4. 'spl' → logprob: -2.5809333324432373
    5. 'tokens' → logprob: -2.7059333324432373
    6. ''' → logprob: -3.0809333324432373
    7. ' utilisant' → logprob: -3.2059333324432373
    8. '[]' → logprob: -3.9559333324432373
    9. 't' → logprob: -4.205933570861816
    10. 'r' → logprob: -4.205933570861816

Token 69: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.3813273012638092
    2. 'sé' → logprob: -1.6313272714614868
    3. 's' → logprob: -3.0063273906707764
    4. ' sé' → logprob: -4.131327152252197
    5. 'r' → logprob: -5.256327152252197
    6. 'split' → logprob: -5.381327152252197
    7. '```' → logprob: -5.756327152252197
    8. 'ré' → logprob: -6.131327152252197
    9. 'es' → logprob: -6.131327152252197
    10. 'part' → logprob: -6.381327152252197

Token 70: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.605534017086029
    2. 'ées' → logprob: -0.855534017086029
    3. 'és' → logprob: -4.105534076690674
    4. 'par' → logprob: -4.980534076690674
    5. 'é' → logprob: -5.855534076690674
    6. 'ée' → logprob: -6.855534076690674
    7. '```' → logprob: -8.230533599853516
    8. 't' → logprob: -8.480533599853516
    9. 'es' → logprob: -8.480533599853516
    10. 'er' → logprob: -8.605533599853516

Token 71: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.529735803604126
    2. ' par' → logprob: -0.904735803604126
    3. ' )' → logprob: -6.904735565185547
    4. '()' → logprob: -7.029735565185547
    5. ')' → logprob: -7.154735565185547
    6. 's' → logprob: -7.404735565185547
    7. 'au' → logprob: -7.404735565185547
    8. 'sur' → logprob: -8.154735565185547
    9. ' sur' → logprob: -8.154735565185547
    10. ' selon' → logprob: -8.279735565185547

Token 72: ' des' (ID: 731)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -1.0391830205917358
    2. ' des' → logprob: -1.7891830205917358
    3. ''espace' → logprob: -2.5391831398010254
    4. ''un' → logprob: -2.5391831398010254
    5. ' ' → logprob: -2.7891831398010254
    6. ''esp' → logprob: -2.9141831398010254
    7. 'un' → logprob: -3.0391831398010254
    8. 'es' → logprob: -3.5391831398010254
    9. ''' → logprob: -3.5391831398010254
    10. 'des' → logprob: -3.9141831398010254

Token 73: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.40583014488220215
    2. 'esp' → logprob: -1.7808301448822021
    3. ''esp' → logprob: -2.280830144882202
    4. ''espace' → logprob: -3.030830144882202
    5. 'spaces' → logprob: -5.280830383300781
    6. ' ' → logprob: -5.780830383300781
    7. 'es' → logprob: -5.905830383300781
    8. ' espace' → logprob: -6.905830383300781
    9. '’esp' → logprob: -7.655830383300781
    10. ''' → logprob: -7.655830383300781

Token 74: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.000599976978264749
    2. 'a' → logprob: -7.7505998611450195
    3. ' A' → logprob: -9.87559986114502
    4. '```' → logprob: -10.25059986114502
    5. '
' → logprob: -10.37559986114502
    6. 'x' → logprob: -11.25059986114502
    7. 'n' → logprob: -11.37559986114502
    8. '[' → logprob: -12.00059986114502
    9. '#' → logprob: -12.62559986114502
    10. ',' → logprob: -12.75059986114502

Token 75: '#' (ID: 2)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00037490393151529133
    2. 'a' → logprob: -8.750374794006348
    3. ' A' → logprob: -8.875374794006348
    4. '```' → logprob: -9.625374794006348
    5. 'x' → logprob: -13.125374794006348
    6. '`' → logprob: -13.125374794006348
    7. '``' → logprob: -13.125374794006348
    8. '#' → logprob: -14.375374794006348
    9. '[' → logprob: -14.750374794006348
    10. 'n' → logprob: -15.000374794006348

Token 76: ' La' (ID: 3038)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003192578151356429
    2. ' A' → logprob: -8.875319480895996
    3. 'a' → logprob: -9.375319480895996
    4. '#' → logprob: -9.625319480895996
    5. '```' → logprob: -11.250319480895996
    6. '[' → logprob: -13.250319480895996
    7. 'x' → logprob: -13.250319480895996
    8. ' 
' → logprob: -13.250319480895996
    9. 's' → logprob: -13.500319480895996
    10. 'n' → logprob: -14.125319480895996

Token 77: ' fonction' (ID: 17610)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6331381797790527
    2. 'A' → logprob: -1.2581381797790527
    3. 's' → logprob: -3.2581381797790527
    4. ' valeurs' → logprob: -3.2581381797790527
    5. 'a' → logprob: -3.3831381797790527
    6. '#' → logprob: -3.7581381797790527
    7. 'val' → logprob: -3.8831381797790527
    8. ' a' → logprob: -4.883138179779053
    9. 'values' → logprob: -5.258138179779053
    10. ' variables' → logprob: -5.508138179779053

Token 78: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.011142375878989697
    2. 'map' → logprob: -5.136142253875732
    3. ' list' → logprob: -6.261142253875732
    4. ' input' → logprob: -6.386142253875732
    5. ' int' → logprob: -7.511142253875732
    6. ' tuple' → logprob: -7.511142253875732
    7. ' a' → logprob: -8.01114273071289
    8. ' A' → logprob: -9.63614273071289
    9. ' ' → logprob: -10.76114273071289
    10. 'int' → logprob: -10.88614273071289

Token 79: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02927410416305065
    2. '(lambda' → logprob: -4.154273986816406
    3. '(int' → logprob: -4.404273986816406
    4. '(str' → logprob: -7.279273986816406
    5. '()' → logprob: -9.904273986816406
    6. '(
' → logprob: -10.029273986816406
    7. '(float' → logprob: -10.779273986816406
    8. '(None' → logprob: -10.904273986816406
    9. '(list' → logprob: -11.154273986816406
    10. '```' → logprob: -11.904273986816406

Token 80: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23110352456569672
    2. ',' → logprob: -1.606103539466858
    3. ',input' → logprob: -5.981103420257568
    4. ' )' → logprob: -6.856103420257568
    5. '(' → logprob: -7.106103420257568
    6. ',)' → logprob: -7.981103420257568
    7. '(input' → logprob: -8.481103897094727
    8. ' ,' → logprob: -8.856103897094727
    9. 'input' → logprob: -8.981103897094727
    10. 'user' → logprob: -10.106103897094727

Token 81: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47678864002227783
    2. ' input' → logprob: -0.9767886400222778
    3. ')' → logprob: -5.976788520812988
    4. ' )' → logprob: -8.851788520812988
    5. '(input' → logprob: -12.101788520812988
    6. '<input' → logprob: -12.101788520812988
    7. 'user' → logprob: -12.101788520812988
    8. '=input' → logprob: -13.601788520812988
    9. 's' → logprob: -13.851788520812988
    10. ' user' → logprob: -13.976788520812988

Token 82: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07453953474760056
    2. ' permet' → logprob: -3.8245394229888916
    3. 'convert' → logprob: -4.199539661407471
    4. ' )' → logprob: -4.449539661407471
    5. '(' → logprob: -4.949539661407471
    6. ' convert' → logprob: -5.324539661407471
    7. ' transforme' → logprob: -5.699539661407471
    8. '()' → logprob: -5.824539661407471
    9. '(
' → logprob: -6.449539661407471
    10. '(convert' → logprob: -7.449539661407471

Token 83: 'it' (ID: 278)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.45222505927085876
    2. 'it' → logprob: -1.0772250890731812
    3. 'i' → logprob: -4.702225208282471
    4. '(' → logprob: -4.952225208282471
    5. 't' → logprob: -6.952225208282471
    6. 'ie' → logprob: -7.077225208282471
    7. ')' → logprob: -7.452225208282471
    8. 'r' → logprob: -7.702225208282471
    9. ' les' → logprob: -7.827225208282471
    10. 'u' → logprob: -7.952225208282471

Token 84: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.35570016503334045
    2. ' les' → logprob: -2.1057002544403076
    3. 'l' → logprob: -3.2307002544403076
    4. 'les' → logprob: -3.3557002544403076
    5. 'la' → logprob: -3.7307002544403076
    6. '(input' → logprob: -3.7307002544403076
    7. 'input' → logprob: -4.2307000160217285
    8. ' input' → logprob: -4.4807000160217285
    9. ' l' → logprob: -4.6057000160217285
    10. '(' → logprob: -5.2307000160217285

Token 85: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.00494352774694562
    2. ' élément' → logprob: -5.379943370819092
    3. 'val' → logprob: -9.50494384765625
    4. ' valeur' → logprob: -10.25494384765625
    5. 'entrée' → logprob: -10.37994384765625
    6. ' chaîne' → logprob: -10.62994384765625
    7. 'él' → logprob: -10.75494384765625
    8. 's' → logprob: -11.12994384765625
    9. 'element' → logprob: -11.12994384765625
    10. 'mot' → logprob: -11.12994384765625

Token 86: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26305145025253296
    2. ' de' → logprob: -2.3880515098571777
    3. ' des' → logprob: -3.2630515098571777
    4. ')' → logprob: -4.138051509857178
    5. '(list' → logprob: -4.263051509857178
    6. 'de' → logprob: -4.388051509857178
    7. '(map' → logprob: -4.513051509857178
    8. 'des' → logprob: -5.138051509857178
    9. 'list' → logprob: -5.138051509857178
    10. '(str' → logprob: -5.388051509857178

Token 87: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.25910958647727966
    2. ' la' → logprob: -1.634109616279602
    3. 'split' → logprob: -4.0091094970703125
    4. 'l' → logprob: -5.0091094970703125
    5. ' input' → logprob: -5.7591094970703125
    6. 'input' → logprob: -5.8841094970703125
    7. ' split' → logprob: -6.7591094970703125
    8. ' l' → logprob: -7.7591094970703125
    9. 'spl' → logprob: -7.8841094970703125
    10. 'chaine' → logprob: -9.134109497070312

Token 88: ' liste' (ID: 31719)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5820655226707458
    2. 'input' → logprob: -1.3320655822753906
    3. ' chaîne' → logprob: -2.4570655822753906
    4. ' liste' → logprob: -3.2070655822753906
    5. 'chaine' → logprob: -3.9570655822753906
    6. 'liste' → logprob: -4.332065582275391
    7. 'entrée' → logprob: -4.457065582275391
    8. ' chaine' → logprob: -6.332065582275391
    9. 's' → logprob: -6.582065582275391
    10. 'cha' → logprob: -7.332065582275391

Token 89: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36667633056640625
    2. ')' → logprob: -2.2416763305664062
    3. ' )' → logprob: -3.2416763305664062
    4. 'int' → logprob: -3.7416763305664062
    5. ' A' → logprob: -3.9916763305664062
    6. '(input' → logprob: -4.241676330566406
    7. '(
' → logprob: -4.366676330566406
    8. '(int' → logprob: -4.491676330566406
    9. ',' → logprob: -4.616676330566406
    10. 'input' → logprob: -4.741676330566406

Token 90: ' un' (ID: 537)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3168533742427826
    2. ' un' → logprob: -1.816853404045105
    3. ' entier' → logprob: -2.5668532848358154
    4. ' int' → logprob: -3.9418532848358154
    5. 'ent' → logprob: -5.1918535232543945
    6. ' ent' → logprob: -5.4418535232543945
    7. 'int' → logprob: -6.1918535232543945
    8. ' integers' → logprob: -7.9418535232543945
    9. ' integer' → logprob: -8.691853523254395
    10. ' ' → logprob: -9.191853523254395

Token 91: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.06579657644033432
    2. 'ent' → logprob: -3.0657966136932373
    3. ' ent' → logprob: -4.315796375274658
    4. ' int' → logprob: -6.065796375274658
    5. ' nombre' → logprob: -7.440796375274658
    6. 'int' → logprob: -8.190796852111816
    7. ' enti' → logprob: -8.815796852111816
    8. ' ' → logprob: -9.315796852111816
    9. ' entière' → logprob: -9.815796852111816
    10. '_ent' → logprob: -9.815796852111816

Token 92: ' (' (ID: 350)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0016437612939625978
    2. ' A' → logprob: -6.751643657684326
    3. 'a' → logprob: -7.751643657684326
    4. 'x' → logprob: -11.501644134521484
    5. '```' → logprob: -11.626644134521484
    6. ',' → logprob: -11.751644134521484
    7. ':' → logprob: -12.626644134521484
    8. ' 
' → logprob: -13.001644134521484
    9. 'n' → logprob: -13.501644134521484
    10. 's' → logprob: -13.751644134521484

Token 93: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003234262694604695
    2. ' )' → logprob: -8.250323295593262
    3. ')
' → logprob: -11.125323295593262
    4. '))' → logprob: -11.375323295593262
    5. 'a' → logprob: -12.500323295593262
    6. 'input' → logprob: -12.625323295593262
    7. ',' → logprob: -12.875323295593262
    8. 'A' → logprob: -12.875323295593262
    9. 't' → logprob: -13.000323295593262
    10. ')#' → logprob: -13.125323295593262

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011033779446734115
    2. '))' → logprob: -10.000110626220703
    3. ' )' → logprob: -10.375110626220703
    4. ')
' → logprob: -11.625110626220703
    5. ').' → logprob: -12.000110626220703
    6. ')#' → logprob: -12.750110626220703
    7. '),' → logprob: -13.250110626220703
    8. ')`' → logprob: -13.500110626220703
    9. '#' → logprob: -13.625110626220703
    10. '()' → logprob: -13.625110626220703

Token 95: '#' (ID: 2)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.610702363715973e-06
    2. ' A' → logprob: -11.875009536743164
    3. 'a' → logprob: -13.375009536743164
    4. '```' → logprob: -14.000009536743164
    5. 'x' → logprob: -17.000009536743164
    6. '#' → logprob: -17.625009536743164
    7. '`' → logprob: -18.000009536743164
    8. ',' → logprob: -18.250009536743164
    9. '

' → logprob: -18.625009536743164
    10. '
' → logprob: -18.625009536743164

Token 96: ' Enfin' (ID: 85274)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00033760786755010486
    2. ' A' → logprob: -8.000337600708008
    3. 'a' → logprob: -13.750337600708008
    4. '(' → logprob: -15.250337600708008
    5. '```' → logprob: -15.500337600708008
    6. '(A' → logprob: -15.875337600708008
    7. '(
' → logprob: -16.000337600708008
    8. '#' → logprob: -16.125337600708008
    9. '`' → logprob: -16.250337600708008
    10. ' 
' → logprob: -17.125337600708008

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6661757826805115
    2. 'A' → logprob: -1.1661758422851562
    3. ' A' → logprob: -1.7911758422851562
    4. ' ,' → logprob: -5.291175842285156
    5. ')' → logprob: -6.541175842285156
    6. 'a' → logprob: -7.916175842285156
    7. ' a' → logprob: -8.666175842285156
    8. ' ' → logprob: -9.041175842285156
    9. ' )' → logprob: -9.041175842285156
    10. 'r' → logprob: -9.541175842285156

Token 98: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10021539777517319
    2. ' A' → logprob: -2.350215435028076
    3. 'a' → logprob: -11.850214958190918
    4. ' on' → logprob: -14.475214958190918
    5. ' a' → logprob: -14.975214958190918
    6. 'l' → logprob: -15.725214958190918
    7. '[A' → logprob: -16.100215911865234
    8. '```' → logprob: -16.100215911865234
    9. 'x' → logprob: -16.350215911865234
    10. 's' → logprob: -16.975215911865234

Token 99: ' trois' (ID: 25564)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.283940851688385
    2. ' A' → logprob: -1.4089407920837402
    3. ' valeurs' → logprob: -6.78394079208374
    4. 'val' → logprob: -7.15894079208374
    5. 'ent' → logprob: -7.90894079208374
    6. ' trois' → logprob: -8.908941268920898
    7. ' ent' → logprob: -9.283941268920898
    8. '3' → logprob: -9.783941268920898
    9. ' ' → logprob: -10.158941268920898
    10. ' variables' → logprob: -10.158941268920898

Token 100: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.9027644991874695
    2. 'ent' → logprob: -1.6527645587921143
    3. 'A' → logprob: -2.0277645587921143
    4. ' variables' → logprob: -2.5277645587921143
    5. ' valeurs' → logprob: -2.5277645587921143
    6. ' A' → logprob: -2.9027645587921143
    7. 'variables' → logprob: -4.527764320373535
    8. ',' → logprob: -4.902764320373535
    9. 'a' → logprob: -5.027764320373535
    10. ' nombres' → logprob: -5.152764320373535

Token 101: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.056310757994651794
    2. 'ières' → logprob: -3.8063106536865234
    3. 't' → logprob: -3.9313106536865234
    4. 'ier' → logprob: -4.931310653686523
    5. 'A' → logprob: -5.931310653686523
    6. 'i' → logprob: -7.681310653686523
    7. 'ieres' → logprob: -7.681310653686523
    8. 'ière' → logprob: -7.931310653686523
    9. '=' → logprob: -8.056310653686523
    10. 'a' → logprob: -8.056310653686523

Token 102: ' extr' (ID: 15674)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.20320574939250946
    2. 'A' → logprob: -1.7032057046890259
    3. ' sont' → logprob: -6.703205585479736
    4. 's' → logprob: -7.703205585479736
    5. ' are' → logprob: -10.328206062316895
    6. ' ' → logprob: -10.578206062316895
    7. ' ' → logprob: -11.578206062316895
    8. 'a' → logprob: -11.703206062316895
    9. ' =' → logprob: -11.828206062316895
    10. ',' → logprob: -11.953206062316895

Token 103: 'aits' (ID: 46641)
  Prédit: 'aits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aits' → logprob: -0.12969884276390076
    2. 'a' → logprob: -2.1296987533569336
    3. 'aites' → logprob: -6.379698753356934
    4. 'ai' → logprob: -7.379698753356934
    5. 'ay' → logprob: -9.004698753356934
    6. 'aient' → logprob: -9.254698753356934
    7. 'ais' → logprob: -9.254698753356934
    8. 'ait' → logprob: -9.629698753356934
    9. 'i' → logprob: -10.629698753356934
    10. 'acts' → logprob: -12.254698753356934

Token 104: ' sont' (ID: 5242)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.46379294991493225
    2. 'A' → logprob: -1.4637929201126099
    3. ' =' → logprob: -2.7137930393218994
    4. ',' → logprob: -3.2137930393218994
    5. ' ' → logprob: -4.83879280090332
    6. ' ,' → logprob: -4.83879280090332
    7. '=' → logprob: -5.08879280090332
    8. 's' → logprob: -5.46379280090332
    9. ' sont' → logprob: -6.08879280090332
    10. ' a' → logprob: -6.71379280090332

Token 105: ' affect' (ID: 7902)
  Prédit: ' affect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affect' → logprob: -0.769071638584137
    2. ' attrib' → logprob: -1.2690715789794922
    3. ' assign' → logprob: -1.6440715789794922
    4. ' assigned' → logprob: -3.394071578979492
    5. 'assign' → logprob: -3.894071578979492
    6. ' stock' → logprob: -5.894071578979492
    7. 'aff' → logprob: -6.269071578979492
    8. ' atribu' → logprob: -7.269071578979492
    9. 'attrib' → logprob: -7.644071578979492
    10. ' unpack' → logprob: -7.894071578979492

Token 106: 'és' (ID: 1756)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0005406428826972842
    2. 'ué' → logprob: -8.125540733337402
    3. 'uée' → logprob: -9.000540733337402
    4. 'és' → logprob: -9.375540733337402
    5. ' u' → logprob: -10.625540733337402
    6. 'é' → logprob: -13.000540733337402
    7. 'ue' → logprob: -13.000540733337402
    8. 'uez' → logprob: -13.000540733337402
    9. 'ues' → logprob: -13.250540733337402
    10. 'uer' → logprob: -13.625540733337402

Token 107: ' aux' (ID: 5850)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5705368518829346
    2. 'A' → logprob: -1.3205368518829346
    3. ' A' → logprob: -2.3205368518829346
    4. ',' → logprob: -3.3205368518829346
    5. ' a' → logprob: -4.3205366134643555
    6. ' ' → logprob: -5.1955366134643555
    7. 'a' → logprob: -5.5705366134643555
    8. 's' → logprob: -5.6955366134643555
    9. ' ,' → logprob: -6.1955366134643555
    10. ' =' → logprob: -6.4455366134643555

Token 108: ' variables' (ID: 13955)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.692592442035675
    2. 'A' → logprob: -1.1925923824310303
    3. ' variables' → logprob: -1.6925923824310303
    4. 'variables' → logprob: -4.442592620849609
    5. ' variable' → logprob: -8.31759262084961
    6. ' trois' → logprob: -9.06759262084961
    7. 'variable' → logprob: -9.56759262084961
    8. ' ' → logprob: -10.31759262084961
    9. ' ' → logprob: -12.31759262084961
    10. '3' → logprob: -12.44259262084961

Token 109: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5759502649307251
    2. ' A' → logprob: -0.8259502649307251
    3. ' ,' → logprob: -12.325950622558594
    4. ',' → logprob: -13.075950622558594
    5. 'a' → logprob: -13.450950622558594
    6. ' ' → logprob: -13.450950622558594
    7. ' ' → logprob: -14.700950622558594
    8. ' a' → logprob: -15.825950622558594
    9. 'x' → logprob: -15.950950622558594
    10. 's' → logprob: -16.200950622558594

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ' ,' → logprob: -12.375006675720215
    3. ',B' → logprob: -13.625006675720215
    4. ',A' → logprob: -14.125006675720215
    5. ',
' → logprob: -15.875006675720215
    6. 'A' → logprob: -16.8750057220459
    7. ',\
' → logprob: -17.2500057220459
    8. '‌,' → logprob: -17.6250057220459
    9. 'a' → logprob: -18.1250057220459
    10. '```' → logprob: -18.7500057220459

Token 111: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.0182265043258667
    2. 'B' → logprob: -4.018226623535156
    3. ' ' → logprob: -9.893226623535156
    4. ',' → logprob: -10.893226623535156
    5. ' ,' → logprob: -12.018226623535156
    6. ' ' → logprob: -14.643226623535156
    7. '  ' → logprob: -14.643226623535156
    8. 'b' → logprob: -16.018226623535156
    9. 's' → logprob: -16.518226623535156
    10. ',B' → logprob: -16.768226623535156

Token 112: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014619040302932262
    2. ' ,' → logprob: -6.626461982727051
    3. ' et' → logprob: -9.37646198272705
    4. ',C' → logprob: -10.50146198272705
    5. 'et' → logprob: -11.25146198272705
    6. ',
' → logprob: -13.12646198272705
    7. 'and' → logprob: -13.12646198272705
    8. ' and' → logprob: -13.62646198272705
    9. 'C' → logprob: -13.75146198272705
    10. ' ' → logprob: -14.37646198272705

Token 113: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.11284924298524857
    2. 'C' → logprob: -2.237849235534668
    3. ' ' → logprob: -10.862849235534668
    4. ' ' → logprob: -12.737849235534668
    5. 's' → logprob: -13.112849235534668
    6. '_C' → logprob: -14.112849235534668
    7. '	C' → logprob: -14.487849235534668
    8. '```' → logprob: -14.862849235534668
    9. '=C' → logprob: -15.112849235534668
    10. ' ' → logprob: -15.237849235534668

Token 114: ',' (ID: 11)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.889424836728722e-05
    2. 'a' → logprob: -10.125099182128906
    3. ' A' → logprob: -10.250099182128906
    4. '
' → logprob: -11.375099182128906
    5. '#' → logprob: -12.875099182128906
    6. ':' → logprob: -13.125099182128906
    7. '```' → logprob: -13.250099182128906
    8. ',' → logprob: -13.500099182128906
    9. ' 
' → logprob: -14.000099182128906
    10. 'x' → logprob: -14.375099182128906

Token 115: ' respect' (ID: 5618)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3010806143283844
    2. 'A' → logprob: -1.426080584526062
    3. ' =' → logprob: -4.301080703735352
    4. '=' → logprob: -6.676080703735352
    5. ' puis' → logprob: -7.051080703735352
    6. '[' → logprob: -7.176080703735352
    7. ' ' → logprob: -7.676080703735352
    8. 's' → logprob: -7.801080703735352
    9. ',' → logprob: -8.301080703735352
    10. ' et' → logprob: -8.426080703735352

Token 116: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.059286948293447495
    2. 'ue' → logprob: -3.5592868328094482
    3. 'ant' → logprob: -4.684287071228027
    4. 'ives' → logprob: -5.309287071228027
    5. 'ive' → logprob: -5.434287071228027
    6. 'e' → logprob: -5.684287071228027
    7. 'ent' → logprob: -6.184287071228027
    8. 's' → logprob: -7.059287071228027
    9. 'es' → logprob: -7.684287071228027
    10. '#' → logprob: -7.809287071228027

Token 117: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.7994282795116305e-05
    2. '
' → logprob: -10.37504768371582
    3. 'a' → logprob: -11.50004768371582
    4. ' A' → logprob: -12.50004768371582
    5. '

' → logprob: -14.12504768371582
    6. ':' → logprob: -14.50004768371582
    7. ' 
' → logprob: -15.00004768371582
    8. '```' → logprob: -15.00004768371582
    9. '#' → logprob: -15.12504768371582
    10. 's' → logprob: -15.75004768371582

Token 118: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.5048530030981055e-06
    2. ' A' → logprob: -13.625001907348633
    3. 'a' → logprob: -16.125001907348633
    4. '```' → logprob: -16.750001907348633
    5. '#' → logprob: -17.250001907348633
    6. 'x' → logprob: -18.750001907348633
    7. '
' → logprob: -18.875001907348633
    8. '

' → logprob: -19.125001907348633
    9. '>>>' → logprob: -20.125001907348633
    10. 'n' → logprob: -20.125001907348633

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003184959525242448
    2. ' ,' → logprob: -5.753184795379639
    3. ' =' → logprob: -13.003185272216797
    4. ' ' → logprob: -13.628185272216797
    5. ',B' → logprob: -13.628185272216797
    6. 's' → logprob: -14.378185272216797
    7. 'A' → logprob: -14.503185272216797
    8. ' A' → logprob: -15.003185272216797
    9. ',A' → logprob: -15.253185272216797
    10. 'B' → logprob: -15.503185272216797

Token 120: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.010935338214039803
    2. 'B' → logprob: -4.635935306549072
    3. ' ' → logprob: -6.760935306549072
    4. ' ' → logprob: -11.38593578338623
    5. '  ' → logprob: -12.38593578338623
    6. '<|end|>' → logprob: -12.88593578338623
    7. ' =' → logprob: -14.13593578338623
    8. ' ' → logprob: -15.13593578338623
    9. ' ,' → logprob: -15.26093578338623
    10. ')' → logprob: -15.63593578338623

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.333223139634356e-05
    2. ' ,' → logprob: -10.375033378601074
    3. ',C' → logprob: -13.250033378601074
    4. 'C' → logprob: -15.375033378601074
    5. ' =' → logprob: -17.250032424926758
    6. '<|end|>' → logprob: -17.625032424926758
    7. ' C' → logprob: -18.000032424926758
    8. '=' → logprob: -18.250032424926758
    9. ',

' → logprob: -19.500032424926758
    10. ',
' → logprob: -19.500032424926758

Token 122: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.016176775097846985
    2. 'C' → logprob: -4.141176700592041
    3. ' ' → logprob: -8.8911771774292
    4. ' ' → logprob: -12.5161771774292
    5. ' =' → logprob: -15.3911771774292
    6. '=C' → logprob: -15.5161771774292
    7. ',' → logprob: -15.8911771774292
    8. '	C' → logprob: -15.8911771774292
    9. '  ' → logprob: -16.016176223754883
    10. '_C' → logprob: -16.391176223754883

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011057964526116848
    2. '=' → logprob: -4.5110578536987305
    3. ',' → logprob: -12.01105785369873
    4. ' =
' → logprob: -12.88605785369873
    5. ' ' → logprob: -15.01105785369873
    6. '=input' → logprob: -15.13605785369873
    7. ' ' → logprob: -15.51105785369873
    8. 's' → logprob: -15.76105785369873
    9. ')' → logprob: -16.261058807373047
    10. '<|end|>' → logprob: -16.261058807373047

Token 124: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04858827963471413
    2. 'map' → logprob: -3.048588275909424
    3. ' list' → logprob: -14.798588752746582
    4. '	map' → logprob: -15.548588752746582
    5. ' ' → logprob: -15.673588752746582
    6. ' ' → logprob: -16.173587799072266
    7. 'list' → logprob: -17.423587799072266
    8. 'm' → logprob: -17.673587799072266
    9. ' input' → logprob: -17.673587799072266
    10. 'input' → logprob: -18.548587799072266

Token 125: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10026963800191879
    2. '(' → logprob: -2.3502695560455322
    3. '(
' → logprob: -10.600269317626953
    4. ' (' → logprob: -11.100269317626953
    5. '<int' → logprob: -11.350269317626953
    6. '(in' → logprob: -12.600269317626953
    7. '(input' → logprob: -12.850269317626953
    8. '[int' → logprob: -13.475269317626953
    9. 'int' → logprob: -13.725269317626953
    10. '(lambda' → logprob: -14.100269317626953

Token 126: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.019811009988188744
    2. 'input' → logprob: -4.144811153411865
    3. '(' → logprob: -5.644811153411865
    4. ' (' → logprob: -9.019810676574707
    5. ')' → logprob: -10.019810676574707
    6. ' input' → logprob: -10.394810676574707
    7. ',input' → logprob: -10.394810676574707
    8. '=input' → logprob: -13.269810676574707
    9. '(
' → logprob: -13.519810676574707
    10. '```' → logprob: -13.769810676574707

Token 127: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011047935113310814
    2. ' input' → logprob: -4.511047840118408
    3. '(input' → logprob: -16.26104736328125
    4. '<input' → logprob: -17.76104736328125
    5. '	input' → logprob: -17.88604736328125
    6. '=input' → logprob: -18.13604736328125
    7. ')' → logprob: -18.76104736328125
    8. ' ' → logprob: -19.13604736328125
    9. '```' → logprob: -19.13604736328125
    10. '
' → logprob: -19.76104736328125

Token 128: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.11584706604480743
    2. '()' → logprob: -2.240847110748291
    3. '())' → logprob: -6.240847110748291
    4. '("' → logprob: -7.365847110748291
    5. '(' → logprob: -8.490846633911133
    6. '('' → logprob: -8.740846633911133
    7. ' ().' → logprob: -11.365846633911133
    8. '()).' → logprob: -11.740846633911133
    9. ')' → logprob: -11.865846633911133
    10. '("").' → logprob: -11.865846633911133

Token 129: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.5491004129871726e-05
    2. 'strip' → logprob: -10.000045776367188
    3. ' split' → logprob: -16.750045776367188
    4. 'spl' → logprob: -19.750045776367188
    5. 'rstrip' → logprob: -21.000045776367188
    6. '(split' → logprob: -21.375045776367188
    7. '.split' → logprob: -21.750045776367188
    8. '_split' → logprob: -22.500045776367188
    9. 's' → logprob: -24.125045776367188
    10. ')' → logprob: -24.750045776367188

Token 130: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007310457527637482
    2. '()' → logprob: -5.632310390472412
    3. '()))' → logprob: -5.632310390472412
    4. ')' → logprob: -9.63231086730957
    5. ' ())' → logprob: -10.50731086730957
    6. '(' → logprob: -11.00731086730957
    7. '('' → logprob: -12.25731086730957
    8. '))' → logprob: -12.63231086730957
    9. '())
' → logprob: -13.25731086730957
    10. '().' → logprob: -14.25731086730957

Token 131: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49361926317214966
    2. '#' → logprob: -1.2436192035675049
    3. 'print' → logprob: -2.493619203567505
    4. ' if' → logprob: -5.118619441986084
    5. 'max' → logprob: -5.368619441986084
    6. 'result' → logprob: -5.993619441986084
    7. 'A' → logprob: -6.368619441986084
    8. 'sorted' → logprob: -7.243619441986084
    9. 'sum' → logprob: -7.618619441986084
    10. 'def' → logprob: -7.743619441986084

Token 133: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.21117614209651947
    2. 'if' → logprob: -1.8361761569976807
    3. 'ification' → logprob: -4.086175918579102
    4. 'ifier' → logprob: -4.711175918579102
    5. 'ifiez' → logprob: -5.836175918579102
    6. 'ify' → logprob: -6.586175918579102
    7. '#' → logprob: -7.586175918579102
    8. ' if' → logprob: -9.086175918579102
    9. 'ifi' → logprob: -9.211175918579102
    10. 'ifiant' → logprob: -9.836175918579102

Token 134: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8391412496566772
    2. ' si' → logprob: -1.4641412496566772
    3. '<|end|>' → logprob: -1.8391412496566772
    4. 'if' → logprob: -2.589141368865967
    5. ' ' → logprob: -3.464141368865967
    6. 's' → logprob: -4.339141368865967
    7. 'si' → logprob: -4.464141368865967
    8. ' A' → logprob: -4.589141368865967
    9. 'A' → logprob: -4.839141368865967
    10. ' ' → logprob: -5.214141368865967

Token 135: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.1610688418149948
    2. 'A' → logprob: -1.9110687971115112
    3. ' (' → logprob: -7.286068916320801
    4. '(A' → logprob: -9.2860689163208
    5. '(' → logprob: -10.0360689163208
    6. ' ' → logprob: -11.0360689163208
    7. ' B' → logprob: -12.5360689163208
    8. 'B' → logprob: -13.7860689163208
    9. ' C' → logprob: -15.0360689163208
    10. '	A' → logprob: -15.1610689163208

Token 136: ' première' (ID: 23423)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11348754912614822
    2. ' A' → logprob: -2.238487482070923
    3. 'B' → logprob: -8.238487243652344
    4. ' valeur' → logprob: -9.488487243652344
    5. 's' → logprob: -9.738487243652344
    6. 'val' → logprob: -9.988487243652344
    7. '(A' → logprob: -10.113487243652344
    8. 'C' → logprob: -10.113487243652344
    9. ' B' → logprob: -10.113487243652344
    10. 'tri' → logprob: -10.363487243652344

Token 137: ' condition' (ID: 7060)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.2346397191286087
    2. ' variable' → logprob: -1.7346397638320923
    3. 'variable' → logprob: -4.609639644622803
    4. ' des' → logprob: -4.734639644622803
    5. ' condition' → logprob: -5.859639644622803
    6. ' ' → logprob: -6.109639644622803
    7. ' lettre' → logprob: -6.109639644622803
    8. ' ligne' → logprob: -6.484639644622803
    9. 'val' → logprob: -6.484639644622803
    10. 'condition' → logprob: -7.359639644622803

Token 138: ' suivante' (ID: 107439)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9247033596038818
    2. ' A' → logprob: -1.0497033596038818
    3. 'A' → logprob: -2.049703359603882
    4. ' if' → logprob: -3.299703359603882
    5. 'if' → logprob: -3.424703359603882
    6. 's' → logprob: -3.549703359603882
    7. ' ' → logprob: -4.799703598022461
    8. ' :' → logprob: -5.049703598022461
    9. ',' → logprob: -5.674703598022461
    10. '<|end|>' → logprob: -6.174703598022461

Token 139: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12205550074577332
    2. ' :' → logprob: -3.1220555305480957
    3. 'A' → logprob: -3.8720555305480957
    4. ' A' → logprob: -3.8720555305480957
    5. 'if' → logprob: -4.372055530548096
    6. ' if' → logprob: -5.247055530548096
    7. 's' → logprob: -5.872055530548096
    8. ',' → logprob: -5.997055530548096
    9. ' est' → logprob: -5.997055530548096
    10. 'est' → logprob: -6.997055530548096

Token 140: ' vraie' (ID: 105841)
  Prédit: ' vraie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vraie' → logprob: -1.1387639045715332
    2. ' True' → logprob: -1.2637639045715332
    3. 'True' → logprob: -1.6387639045715332
    4. ' A' → logprob: -2.763763904571533
    5. ' rempl' → logprob: -3.138763904571533
    6. 'A' → logprob: -3.388763904571533
    7. 's' → logprob: -4.013763904571533
    8. ' vér' → logprob: -4.388763904571533
    9. ' respect' → logprob: -5.513763904571533
    10. 'V' → logprob: -5.513763904571533

Token 141: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08778832107782364
    2. 'if' → logprob: -3.3377883434295654
    3. ' if' → logprob: -3.8377883434295654
    4. ' :' → logprob: -4.462788105010986
    5. ':
' → logprob: -4.962788105010986
    6. ' :
' → logprob: -5.462788105010986
    7. '<|end|>' → logprob: -6.462788105010986
    8. ' 
' → logprob: -7.712788105010986
    9. ',' → logprob: -7.712788105010986
    10. 'i' → logprob: -7.962788105010986

Token 142: '#' (ID: 2)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5958921313285828
    2. ' (' → logprob: -1.7208921909332275
    3. ' if' → logprob: -1.9708921909332275
    4. ' ' → logprob: -3.0958921909332275
    5. 'if' → logprob: -3.5958921909332275
    6. 'A' → logprob: -3.7208921909332275
    7. ' a' → logprob: -4.720891952514648
    8. '<|end|>' → logprob: -4.845891952514648
    9. '(' → logprob: -4.970891952514648
    10. ',' → logprob: -6.720891952514648

Token 143: ' -' (ID: 533)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3349432349205017
    2. 'A' → logprob: -1.3349432945251465
    3. ' (' → logprob: -4.3349432945251465
    4. 'if' → logprob: -5.2099432945251465
    5. ' if' → logprob: -6.4599432945251465
    6. '(' → logprob: -7.8349432945251465
    7. '(A' → logprob: -7.8349432945251465
    8. 'B' → logprob: -8.459942817687988
    9. ' B' → logprob: -8.459942817687988
    10. 'C' → logprob: -10.084942817687988

Token 144: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.23913007974624634
    2. 'A' → logprob: -1.6141300201416016
    3. ' (' → logprob: -4.489130020141602
    4. '(' → logprob: -7.364130020141602
    5. '(A' → logprob: -7.364130020141602
    6. ' B' → logprob: -7.489130020141602
    7. 'B' → logprob: -8.114130020141602
    8. ' ' → logprob: -9.114130020141602
    9. 'C' → logprob: -9.739130020141602
    10. ' C' → logprob: -9.864130020141602

Token 145: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.068470299243927
    2. ' <' → logprob: -3.5684702396392822
    3. '>' → logprob: -3.6934702396392822
    4. ' ==' → logprob: -4.943470478057861
    5. ' %' → logprob: -6.693470478057861
    6. ' >=' → logprob: -6.818470478057861
    7. '%' → logprob: -6.943470478057861
    8. ' <=' → logprob: -7.068470478057861
    9. '<' → logprob: -7.568470478057861
    10. '==' → logprob: -7.693470478057861

Token 146: ' égal' (ID: 15059)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.8183916807174683
    2. 'strict' → logprob: -1.3183916807174683
    3. ' plus' → logprob: -2.193391799926758
    4. ' strict' → logprob: -2.818391799926758
    5. ' inférieur' → logprob: -3.568391799926758
    6. 'plus' → logprob: -3.818391799926758
    7. 'sup' → logprob: -4.193391799926758
    8. ' divisible' → logprob: -4.318391799926758
    9. ' le' → logprob: -4.693391799926758
    10. ' égal' → logprob: -5.193391799926758

Token 147: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.16907750070095062
    2. 'à' → logprob: -2.2940773963928223
    3. '<|end|>' → logprob: -3.2940773963928223
    4. ' ' → logprob: -4.794077396392822
    5. 'B' → logprob: -5.169077396392822
    6. ''à' → logprob: -7.044077396392822
    7. ' B' → logprob: -7.669077396392822
    8. ' au' → logprob: -8.04407787322998
    9. 'au' → logprob: -8.04407787322998
    10. 'to' → logprob: -8.29407787322998

Token 148: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.3608657419681549
    2. 'B' → logprob: -1.2358657121658325
    3. ' ' → logprob: -4.860865592956543
    4. '0' → logprob: -6.110865592956543
    5. '1' → logprob: -7.860865592956543
    6. '10' → logprob: -7.985865592956543
    7. ' la' → logprob: -8.485865592956543
    8. 'l' → logprob: -8.860865592956543
    9. '7' → logprob: -9.298365592956543
    10. '5' → logprob: -9.360865592956543

Token 149: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08746320754289627
    2. 'if' → logprob: -3.337463140487671
    3. ' if' → logprob: -3.587463140487671
    4. 'and' → logprob: -3.962463140487671
    5. ' ' → logprob: -7.46246337890625
    6. ' et' → logprob: -7.83746337890625
    7. ',' → logprob: -8.33746337890625
    8. ' or' → logprob: -9.08746337890625
    9. ' ,' → logprob: -9.71246337890625
    10. 'et' → logprob: -10.21246337890625

Token 150: 'A' (ID: 32)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3574482202529907
    2. ' and' → logprob: -1.6074482202529907
    3. ' )' → logprob: -2.982448101043701
    4. 'and' → logprob: -3.607448101043701
    5. ' or' → logprob: -4.482448101043701
    6. 'et' → logprob: -5.232448101043701
    7. ' et' → logprob: -5.357448101043701
    8. ' ou' → logprob: -8.23244857788086
    9. ',' → logprob: -8.85744857788086
    10. '=' → logprob: -8.98244857788086

Token 151: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5872251987457275
    2. ' ==' → logprob: -0.8372251987457275
    3. ')' → logprob: -4.962224960327148
    4. ' and' → logprob: -6.212224960327148
    5. ' )' → logprob: -7.212224960327148
    6. ' or' → logprob: -7.712224960327148
    7. 'and' → logprob: -8.462224960327148
    8. ' !=' → logprob: -8.837224960327148
    9. '>=' → logprob: -9.087224960327148
    10. '=' → logprob: -9.212224960327148

Token 152: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4078337252140045
    2. ' B' → logprob: -1.1578336954116821
    3. 'C' → logprob: -4.282833576202393
    4. ' C' → logprob: -5.282833576202393
    5. ')' → logprob: -6.782833576202393
    6. ' ' → logprob: -7.407833576202393
    7. '<|end|>' → logprob: -9.28283405303955
    8. ' )' → logprob: -11.03283405303955
    9. '=B' → logprob: -12.15783405303955
    10. '>B' → logprob: -12.78283405303955

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035197582095861435
    2. ' and' → logprob: -3.7851974964141846
    3. 'and' → logprob: -5.285197734832764
    4. ' )' → logprob: -5.660197734832764
    5. ' or' → logprob: -5.785197734832764
    6. '),' → logprob: -9.035197257995605
    7. 'or' → logprob: -9.410197257995605
    8. ' et' → logprob: -10.660197257995605
    9. 'et' → logprob: -11.285197257995605
    10. ' ou' → logprob: -12.035197257995605

Token 154: ' :' (ID: 712)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.028592804446816444
    2. 'and' → logprob: -3.653592824935913
    3. ' et' → logprob: -6.778592586517334
    4. ' or' → logprob: -7.778592586517334
    5. 'if' → logprob: -8.528593063354492
    6. ' if' → logprob: -8.528593063354492
    7. 'et' → logprob: -8.653593063354492
    8. ' ' → logprob: -9.153593063354492
    9. ',' → logprob: -10.528593063354492
    10. '<|end|>' → logprob: -11.903593063354492

Token 155: ' cela' (ID: 17542)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06887753307819366
    2. 'and' → logprob: -3.3188774585723877
    3. ' or' → logprob: -3.9438774585723877
    4. ' ' → logprob: -5.193877696990967
    5. 'if' → logprob: -6.068877696990967
    6. ' if' → logprob: -6.193877696990967
    7. '<|end|>' → logprob: -8.818877220153809
    8. '  ' → logprob: -8.943877220153809
    9. ',' → logprob: -8.943877220153809
    10. '   ' → logprob: -9.068877220153809

Token 156: ' signifie' (ID: 81149)
  Prédit: ' signifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' signifie' → logprob: -0.2831069827079773
    2. 'and' → logprob: -2.658107042312622
    3. 'et' → logprob: -2.783107042312622
    4. ' implique' → logprob: -2.783107042312622
    5. ' et' → logprob: -4.033106803894043
    6. ' and' → logprob: -4.408106803894043
    7. ' veut' → logprob: -5.158106803894043
    8. ' or' → logprob: -5.408106803894043
    9. ' indique' → logprob: -6.408106803894043
    10. ' implies' → logprob: -6.408106803894043

Token 157: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.0927320197224617
    2. 'que' → logprob: -2.4677319526672363
    3. ' qu' → logprob: -6.467731952667236
    4. 'qu' → logprob: -6.842731952667236
    5. 'A' → logprob: -7.967731952667236
    6. 'les' → logprob: -8.592732429504395
    7. ' A' → logprob: -9.342732429504395
    8. ' les' → logprob: -9.717732429504395
    9. ' ' → logprob: -9.842732429504395
    10. ',' → logprob: -9.967732429504395

Token 158: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8509140610694885
    2. ' A' → logprob: -1.4759140014648438
    3. 'A' → logprob: -1.9759140014648438
    4. ' les' → logprob: -2.2259140014648438
    5. 'l' → logprob: -3.6009140014648438
    6. 'de' → logprob: -3.7259140014648438
    7. 'le' → logprob: -3.8509140014648438
    8. ' deux' → logprob: -4.475914001464844
    9. 'la' → logprob: -5.600914001464844
    10. ' la' → logprob: -6.225914001464844

Token 159: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.02175736613571644
    2. ' deux' → logprob: -4.02175760269165
    3. 'prem' → logprob: -6.02175760269165
    4. 'A' → logprob: -8.209257125854492
    5. ' ' → logprob: -8.521757125854492
    6. '2' → logprob: -8.959257125854492
    7. ' A' → logprob: -9.334257125854492
    8. '```' → logprob: -9.396757125854492
    9. 'tro' → logprob: -9.521757125854492
    10. 'd' → logprob: -11.084257125854492

Token 160: ' premières' (ID: 73562)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.5592971444129944
    2. ' valeurs' → logprob: -1.9342970848083496
    3. 'val' → logprob: -2.5592970848083496
    4. 'prem' → logprob: -2.5592970848083496
    5. 'ent' → logprob: -3.0592970848083496
    6. 'nombre' → logprob: -3.3092970848083496
    7. 'n' → logprob: -4.18429708480835
    8. ' premiers' → logprob: -4.55929708480835
    9. ' ent' → logprob: -5.18429708480835
    10. ' premières' → logprob: -5.43429708480835

Token 161: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.7222309112548828
    2. 'val' → logprob: -0.9722309112548828
    3. ' variables' → logprob: -2.222230911254883
    4. 'variables' → logprob: -3.722230911254883
    5. 'ent' → logprob: -7.222230911254883
    6. ' nombres' → logprob: -7.597230911254883
    7. ' val' → logprob: -7.722230911254883
    8. ' vale' → logprob: -7.972230911254883
    9. 'nombre' → logprob: -7.972230911254883
    10. ' valeur' → logprob: -8.347230911254883

Token 162: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4558525085449219
    2. ' sont' → logprob: -1.0808525085449219
    3. 'et' → logprob: -4.455852508544922
    4. ' et' → logprob: -4.955852508544922
    5. ' ou' → logprob: -6.330852508544922
    6. ' ne' → logprob: -6.705852508544922
    7. 'ont' → logprob: -7.080852508544922
    8. 'ou' → logprob: -7.205852508544922
    9. ' and' → logprob: -7.580852508544922
    10. ' ' → logprob: -7.830852508544922

Token 163: ' ident' (ID: 3951)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.47436925768852234
    2. 'ég' → logprob: -1.5993692874908447
    3. 'ident' → logprob: -2.0993692874908447
    4. ' ident' → logprob: -3.0993692874908447
    5. 'les' → logprob: -5.474369049072266
    6. 'égal' → logprob: -6.474369049072266
    7. 'strict' → logprob: -6.974369049072266
    8. 'équ' → logprob: -7.599369049072266
    9. ' les' → logprob: -7.849369049072266
    10. 'eg' → logprob: -8.224369049072266

Token 164: 'iques' (ID: 11654)
  Prédit: 'ques'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.0010066082468256354
    2. 'que' → logprob: -7.251006603240967
    3. 'iques' → logprob: -8.626007080078125
    4. 'cal' → logprob: -10.251007080078125
    5. 'q' → logprob: -10.751007080078125
    6. 'qu' → logprob: -11.626007080078125
    7. 'quement' → logprob: -11.626007080078125
    8. '```' → logprob: -11.751007080078125
    9. 'QUES' → logprob: -12.001007080078125
    10. 'tiques' → logprob: -12.126007080078125

Token 165: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.44253095984458923
    2. 'and' → logprob: -1.6925309896469116
    3. ' or' → logprob: -3.067530870437622
    4. ' if' → logprob: -3.567530870437622
    5. ' et' → logprob: -3.692530870437622
    6. 'if' → logprob: -3.817530870437622
    7. ',' → logprob: -4.192531108856201
    8. 'et' → logprob: -4.317531108856201
    9. '<|end|>' → logprob: -4.442531108856201
    10. ' ' → logprob: -5.442531108856201

Token 166: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09744521230459213
    2. ' if' → logprob: -2.847445249557495
    3. '<|end|>' → logprob: -4.722445011138916
    4. '
' → logprob: -4.847445011138916
    5. ' and' → logprob: -5.097445011138916
    6. 'and' → logprob: -5.347445011138916
    7. ' 
' → logprob: -5.597445011138916
    8. ' or' → logprob: -6.847445011138916
    9. ',' → logprob: -7.972445011138916
    10. '#' → logprob: -8.097445487976074

Token 167: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007468560361303389
    2. ' if' → logprob: -7.250746726989746
    3. 'and' → logprob: -11.625746726989746
    4. '
' → logprob: -12.000746726989746
    5. ' or' → logprob: -12.000746726989746
    6. 'elif' → logprob: -12.125746726989746
    7. ' and' → logprob: -12.375746726989746
    8. 'or' → logprob: -13.125746726989746
    9. '#' → logprob: -14.125746726989746
    10. ',' → logprob: -14.250746726989746

Token 168: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.0856561660766602
    2. ' C' → logprob: -1.5856561660766602
    3. 'A' → logprob: -1.8356561660766602
    4. 'C' → logprob: -1.8356561660766602
    5. ' B' → logprob: -2.58565616607666
    6. 'B' → logprob: -2.96065616607666
    7. ' (' → logprob: -4.96065616607666
    8. '(' → logprob: -5.83565616607666
    9. '(A' → logprob: -7.71065616607666
    10. ' ' → logprob: -8.08565616607666

Token 169: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9366834759712219
    2. ' >' → logprob: -1.3116834163665771
    3. ' !=' → logprob: -1.9366834163665771
    4. ' <' → logprob: -2.436683416366577
    5. ' <=' → logprob: -3.061683416366577
    6. '==' → logprob: -3.811683416366577
    7. '>' → logprob: -4.936683654785156
    8. ',' → logprob: -4.936683654785156
    9. ' >=' → logprob: -5.186683654785156
    10. '!=' → logprob: -5.311683654785156

Token 170: ' différent' (ID: 114823)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -1.1233315467834473
    2. ' différent' → logprob: -1.3733315467834473
    3. ' égal' → logprob: -1.4983315467834473
    4. ' inférieur' → logprob: -2.3733315467834473
    5. '>' → logprob: -3.1233315467834473
    6. ' equal' → logprob: -4.373331546783447
    7. ' different' → logprob: -4.873331546783447
    8. ' ég' → logprob: -5.498331546783447
    9. '<|end|>' → logprob: -5.623331546783447
    10. ' not' → logprob: -5.998331546783447

Token 171: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.007181572262197733
    2. 'de' → logprob: -5.507181644439697
    3. 'from' → logprob: -7.007181644439697
    4. ' from' → logprob: -7.132181644439697
    5. ' ' → logprob: -7.757181644439697
    6. ' à' → logprob: -8.132181167602539
    7. '<|end|>' → logprob: -8.632181167602539
    8. '=' → logprob: -9.132181167602539
    9. '_' → logprob: -9.382181167602539
    10. ' des' → logprob: -9.382181167602539

Token 172: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.11285702139139175
    2. ' C' → logprob: -2.2378571033477783
    3. ' ' → logprob: -11.1128568649292
    4. 'B' → logprob: -11.3628568649292
    5. '0' → logprob: -12.4878568649292
    6. ' B' → logprob: -13.2378568649292
    7. ' ' → logprob: -14.2378568649292
    8. 'c' → logprob: -14.4878568649292
    9. '	C' → logprob: -15.7378568649292
    10. '1' → logprob: -15.8628568649292

Token 173: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07812605053186417
    2. ' (' → logprob: -3.3281259536743164
    3. 'and' → logprob: -3.3281259536743164
    4. '(' → logprob: -6.328125953674316
    5. ' or' → logprob: -6.828125953674316
    6. ')' → logprob: -8.078125953674316
    7. ' if' → logprob: -9.578125953674316
    8. ',' → logprob: -9.703125953674316
    9. 'if' → logprob: -9.828125953674316
    10. ' ' → logprob: -10.953125953674316

Token 174: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6933920383453369
    2. ' A' → logprob: -0.6933920383453369
    3. 'C' → logprob: -9.443391799926758
    4. ' C' → logprob: -9.943391799926758
    5. ' ' → logprob: -10.068391799926758
    6. ' (' → logprob: -10.443391799926758
    7. ')' → logprob: -10.568391799926758
    8. 'a' → logprob: -12.443391799926758
    9. ' ' → logprob: -12.443391799926758
    10. ',' → logprob: -12.943391799926758

Token 175: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6960669755935669
    2. '!=' → logprob: -0.6960669755935669
    3. ')' → logprob: -5.946066856384277
    4. '=' → logprob: -9.446066856384277
    5. ' ' → logprob: -9.571066856384277
    6. '<|end|>' → logprob: -10.321066856384277
    7. ')!=' → logprob: -10.821066856384277
    8. ' ' → logprob: -11.071066856384277
    9. '!' → logprob: -11.071066856384277
    10. ' and' → logprob: -11.321066856384277

Token 176: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5759567618370056
    2. ' C' → logprob: -0.8259567618370056
    3. ' ' → logprob: -11.200956344604492
    4. ')' → logprob: -13.200956344604492
    5. 'B' → logprob: -14.450956344604492
    6. 'c' → logprob: -15.200956344604492
    7. '	C' → logprob: -15.575956344604492
    8. '  ' → logprob: -15.950956344604492
    9. ' B' → logprob: -15.950956344604492
    10. '=C' → logprob: -15.950956344604492

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020115524530410767
    2. ' )' → logprob: -6.502011775970459
    3. ' and' → logprob: -8.3770112991333
    4. '):' → logprob: -8.6270112991333
    5. ')
' → logprob: -10.2520112991333
    6. ' or' → logprob: -11.0020112991333
    7. 'and' → logprob: -11.5020112991333
    8. '#' → logprob: -11.6270112991333
    9. ' ' → logprob: -12.1270112991333
    10. ':' → logprob: -12.3770112991333

Token 178: ' :' (ID: 712)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03376729413866997
    2. 'and' → logprob: -4.283767223358154
    3. ' and' → logprob: -4.533767223358154
    4. ' if' → logprob: -4.783767223358154
    5. ' or' → logprob: -8.533767700195312
    6. ':' → logprob: -10.408767700195312
    7. ',' → logprob: -10.533767700195312
    8. 'or' → logprob: -11.283767700195312
    9. 'et' → logprob: -11.283767700195312
    10. ')' → logprob: -11.658767700195312

Token 179: ' cela' (ID: 17542)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16257724165916443
    2. ' et' → logprob: -2.2875771522521973
    3. 'and' → logprob: -4.287577152252197
    4. ' or' → logprob: -4.412577152252197
    5. ' ' → logprob: -4.537577152252197
    6. ':' → logprob: -6.287577152252197
    7. '<|end|>' → logprob: -6.287577152252197
    8. ' :' → logprob: -6.537577152252197
    9. 'et' → logprob: -6.787577152252197
    10. ')' → logprob: -6.787577152252197

Token 180: ' signifie' (ID: 81149)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2625082731246948
    2. 'and' → logprob: -1.8875082731246948
    3. ' et' → logprob: -2.7625083923339844
    4. 'et' → logprob: -4.262508392333984
    5. ' or' → logprob: -6.887508392333984
    6. ' est' → logprob: -7.637508392333984
    7. ' signifie' → logprob: -9.012508392333984
    8. ' ' → logprob: -9.262508392333984
    9. ')' → logprob: -9.512508392333984
    10. ' is' → logprob: -9.887508392333984

Token 181: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.0006186736281961203
    2. 'que' → logprob: -8.000618934631348
    3. ' ' → logprob: -9.000618934631348
    4. ' qu' → logprob: -9.875618934631348
    5. ' that' → logprob: -10.000618934631348
    6. ',' → logprob: -11.000618934631348
    7. ' ' → logprob: -11.125618934631348
    8. ')' → logprob: -11.625618934631348
    9. '#' → logprob: -12.750618934631348
    10. ' )' → logprob: -12.875618934631348

Token 182: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.8221825361251831
    2. ' les' → logprob: -0.8221825361251831
    3. 'A' → logprob: -2.8221826553344727
    4. ' B' → logprob: -4.322182655334473
    5. ' que' → logprob: -4.322182655334473
    6. ' not' → logprob: -4.822182655334473
    7. ' ' → logprob: -5.322182655334473
    8. ' C' → logprob: -5.572182655334473
    9. ' l' → logprob: -5.947182655334473
    10. ' la' → logprob: -6.072182655334473

Token 183: ' première' (ID: 23423)
  Prédit: 'tro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tro' → logprob: -0.3047492206096649
    2. 'prem' → logprob: -1.8047492504119873
    3. 'de' → logprob: -2.8047492504119873
    4. ' troisième' → logprob: -3.6797492504119873
    5. ' première' → logprob: -5.929749011993408
    6. 'val' → logprob: -6.179749011993408
    7. ' valeur' → logprob: -6.992249011993408
    8. ' ' → logprob: -7.054749011993408
    9. ' tro' → logprob: -7.492249011993408
    10. 'der' → logprob: -7.742249011993408

Token 184: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.35880061984062195
    2. ' et' → logprob: -1.9838006496429443
    3. 'and' → logprob: -2.6088006496429443
    4. ' ' → logprob: -2.9838006496429443
    5. 'et' → logprob: -3.7338006496429443
    6. ')' → logprob: -5.733800411224365
    7. ' valeur' → logprob: -5.983800411224365
    8. '<|end|>' → logprob: -5.983800411224365
    9. ',' → logprob: -6.108800411224365
    10. ' !=' → logprob: -6.483800411224365

Token 185: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.44834113121032715
    2. ' B' → logprob: -1.0733411312103271
    3. ' la' → logprob: -4.323341369628906
    4. ' les' → logprob: -5.698341369628906
    5. ' C' → logprob: -7.073341369628906
    6. 'C' → logprob: -7.073341369628906
    7. 'la' → logprob: -7.823341369628906
    8. 'les' → logprob: -7.948341369628906
    9. ' ' → logprob: -8.698341369628906
    10. 'le' → logprob: -10.198341369628906

Token 186: ' troisième' (ID: 75373)
  Prédit: 'tro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tro' → logprob: -0.24733668565750122
    2. 'de' → logprob: -1.9973366260528564
    3. ' troisième' → logprob: -2.6223366260528564
    4. ' deuxième' → logprob: -5.7473368644714355
    5. 'der' → logprob: -6.1223368644714355
    6. ' tro' → logprob: -6.7473368644714355
    7. 'prem' → logprob: -7.2473368644714355
    8. 'second' → logprob: -7.4973368644714355
    9. 'se' → logprob: -7.8723368644714355
    10. ' seconde' → logprob: -7.9973368644714355

Token 187: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.5262970328330994
    2. ' valeurs' → logprob: -1.0262970924377441
    3. 'val' → logprob: -3.276297092437744
    4. ' val' → logprob: -5.276297092437744
    5. ' vale' → logprob: -5.776297092437744
    6. ' variables' → logprob: -6.901297092437744
    7. ' value' → logprob: -7.026297092437744
    8. 'value' → logprob: -7.276297092437744
    9. ' variable' → logprob: -7.651297092437744
    10. ' ' → logprob: -8.026296615600586

Token 188: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.15333394706249237
    2. ' are' → logprob: -2.028333902359009
    3. 's' → logprob: -5.278334140777588
    4. 'are' → logprob: -7.278334140777588
    5. ')' → logprob: -7.278334140777588
    6. ' different' → logprob: -7.403334140777588
    7. ' is' → logprob: -7.778334140777588
    8. '<|end|>' → logprob: -7.903334140777588
    9. ' différent' → logprob: -8.15333366394043
    10. ' differ' → logprob: -8.15333366394043

Token 189: ' différentes' (ID: 41398)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.778178334236145
    2. 'distinct' → logprob: -1.028178334236145
    3. ' différentes' → logprob: -2.6531782150268555
    4. ' distinct' → logprob: -3.1531782150268555
    5. 'different' → logprob: -3.5281782150268555
    6. ' différents' → logprob: -4.1531782150268555
    7. 'dist' → logprob: -4.7781782150268555
    8. ' different' → logprob: -5.4031782150268555
    9. '```' → logprob: -5.7781782150268555
    10. 'égal' → logprob: -6.4031782150268555

Token 190: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006737126968801022
    2. '
' → logprob: -7.625673770904541
    3. ' if' → logprob: -8.750673294067383
    4. 'i' → logprob: -11.125673294067383
    5. ' 
' → logprob: -12.000673294067383
    6. 'ifs' → logprob: -13.500673294067383
    7. '

' → logprob: -13.750673294067383
    8. ';if' → logprob: -14.250673294067383
    9. 's' → logprob: -14.500673294067383
    10. 'If' → logprob: -14.625673294067383

Token 191: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3306015716807451e-05
    2. '
' → logprob: -11.87501335144043
    3. ' if' → logprob: -12.00001335144043
    4. 'i' → logprob: -16.62501335144043
    5. '```' → logprob: -16.87501335144043
    6. 'ifs' → logprob: -17.12501335144043
    7. 'If' → logprob: -17.25001335144043
    8. ';if' → logprob: -18.00001335144043
    9. '

' → logprob: -18.25001335144043
    10. ' 
' → logprob: -18.75001335144043

Token 192: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0042601581662893295
    2. 'A' → logprob: -5.504260063171387
    3. ' ' → logprob: -8.879260063171387
    4. ' ' → logprob: -10.629260063171387
    5. ' (' → logprob: -11.004260063171387
    6. '(A' → logprob: -13.879260063171387
    7. '	A' → logprob: -15.129260063171387
    8. '  ' → logprob: -15.504260063171387
    9. '(' → logprob: -16.754261016845703
    10. '   ' → logprob: -16.879261016845703

Token 193: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01815931126475334
    2. '==' → logprob: -4.01815938949585
    3. '=' → logprob: -12.393158912658691
    4. ' ' → logprob: -12.893158912658691
    5. ' =' → logprob: -13.518158912658691
    6. ' ' → logprob: -14.018158912658691
    7. ' !=' → logprob: -16.518159866333008
    8. ')' → logprob: -16.643159866333008
    9. '1' → logprob: -16.768159866333008
    10. ' ==
' → logprob: -16.768159866333008

Token 194: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.061967797577381134
    2. ' B' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.311967849731445
    4. '	B' → logprob: -18.061967849731445
    5. ' ' → logprob: -18.311967849731445
    6. 'b' → logprob: -18.686967849731445
    7. '>B' → logprob: -19.936967849731445
    8. '  ' → logprob: -20.186967849731445
    9. '=B' → logprob: -20.186967849731445
    10. '<|end|>' → logprob: -20.436967849731445

Token 195: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003179259831085801
    2. 'and' → logprob: -5.75317907333374
    3. ' ' → logprob: -13.503179550170898
    4. ' ' → logprob: -16.6281795501709
    5. ' a' → logprob: -16.7531795501709
    6. ' an' → logprob: -17.1281795501709
    7. '   ' → logprob: -17.5031795501709
    8. ')' → logprob: -17.8781795501709
    9. ' и' → logprob: -18.3781795501709
    10. '	and' → logprob: -18.7531795501709

Token 196: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0028324576560407877
    2. 'A' → logprob: -5.877832412719727
    3. ' ' → logprob: -11.377832412719727
    4. ' C' → logprob: -11.752832412719727
    5. ' ' → logprob: -11.877832412719727
    6. ' (' → logprob: -14.377832412719727
    7. 'C' → logprob: -15.127832412719727
    8. '  ' → logprob: -15.877832412719727
    9. '	A' → logprob: -15.877832412719727
    10. '(A' → logprob: -16.127832412719727

Token 197: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.20141927897930145
    2. '!=' → logprob: -1.7014192342758179
    3. ')!=' → logprob: -13.70141887664795
    4. '!' → logprob: -13.82641887664795
    5. '()!=' → logprob: -13.95141887664795
    6. '<|end|>' → logprob: -14.57641887664795
    7. ' ' → logprob: -14.82641887664795
    8. ' !' → logprob: -14.95141887664795
    9. ' ' → logprob: -14.95141887664795
    10. '!=(' → logprob: -15.20141887664795

Token 198: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.4742729067802429
    2. 'C' → logprob: -0.9742729067802429
    3. ' ' → logprob: -8.724272727966309
    4. ' ' → logprob: -11.474272727966309
    5. ''' → logprob: -11.974272727966309
    6. '  ' → logprob: -12.224272727966309
    7. '<|end|>' → logprob: -12.599272727966309
    8. ')' → logprob: -12.724272727966309
    9. '"' → logprob: -13.974272727966309
    10. '_C' → logprob: -14.599272727966309

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.843177233240567e-05
    2. ':
' → logprob: -11.250018119812012
    3. ' :' → logprob: -12.250018119812012
    4. '):' → logprob: -14.875018119812012
    5. ':**' → logprob: -15.500018119812012
    6. '>:' → logprob: -18.375019073486328
    7. '():' → logprob: -18.500019073486328
    8. ' and' → logprob: -18.500019073486328
    9. ':

' → logprob: -18.750019073486328
    10. '：' → logprob: -19.375019073486328

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01968407817184925
    2. ':' → logprob: -4.519684314727783
    3. '
' → logprob: -5.519684314727783
    4. ' print' → logprob: -6.269684314727783
    5. ':
' → logprob: -6.519684314727783
    6. 'print' → logprob: -7.269684314727783
    7. '    
' → logprob: -8.394683837890625
    8. '	print' → logprob: -8.519683837890625
    9. '   ' → logprob: -9.894683837890625
    10. ' :' → logprob: -11.269683837890625

Token 201: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.23700523376464844
    2. '   ' → logprob: -1.9870052337646484
    3. 'print' → logprob: -2.6120052337646484
    4. '
' → logprob: -8.612005233764648
    5. '    
' → logprob: -8.862005233764648
    6. '	print' → logprob: -9.987005233764648
    7. '   ' → logprob: -9.987005233764648
    8. ' ' → logprob: -10.362005233764648
    9. ' 
' → logprob: -11.112005233764648
    10. ' ' → logprob: -11.237005233764648

Token 202: ' Si' (ID: 7832)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.048593614250421524
    2. 'print' → logprob: -3.048593521118164
    3. '   ' → logprob: -13.173593521118164
    4. ' prin' → logprob: -13.423593521118164
    5. ' ' → logprob: -14.423593521118164
    6. ' ' → logprob: -14.548593521118164
    7. '	print' → logprob: -14.673593521118164
    8. 'pr' → logprob: -15.298593521118164
    9. 'prin' → logprob: -15.423593521118164
    10. ' pass' → logprob: -15.548593521118164

Token 203: ' la' (ID: 557)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7653414011001587
    2. '   ' → logprob: -1.2653414011001587
    3. 'print' → logprob: -1.3903414011001587
    4. '    ' → logprob: -6.890341281890869
    5. ' ' → logprob: -7.265341281890869
    6. '#' → logprob: -7.765341281890869
    7. ' ' → logprob: -8.015341758728027
    8. '	print' → logprob: -8.140341758728027
    9. '    
' → logprob: -8.515341758728027
    10. '   ' → logprob: -8.640341758728027

Token 204: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.286939263343811
    2. ' B' → logprob: -1.536939263343811
    3. ' A' → logprob: -2.0369391441345215
    4. 'B' → logprob: -2.4119391441345215
    5. 'A' → logprob: -2.5369391441345215
    6. ' True' → logprob: -3.1619391441345215
    7. ' print' → logprob: -3.1619391441345215
    8. ' ' → logprob: -3.4119391441345215
    9. 'C' → logprob: -4.1619391441345215
    10. ' C' → logprob: -4.2869391441345215

Token 205: ' ci' (ID: 7405)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9502198100090027
    2. ' print' → logprob: -1.0752198696136475
    3. ':' → logprob: -1.4502198696136475
    4. 'print' → logprob: -4.075219631195068
    5. ' :' → logprob: -4.200219631195068
    6. '    ' → logprob: -6.075219631195068
    7. ' est' → logprob: -6.825219631195068
    8. ' ' → logprob: -7.825219631195068
    9. ' ' → logprob: -8.700220108032227
    10. '	print' → logprob: -8.825220108032227

Token 206: '-dessus' (ID: 74812)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9691036939620972
    2. '#' → logprob: -1.5941036939620972
    3. 'est' → logprob: -1.7191036939620972
    4. 'st' → logprob: -2.5941038131713867
    5. 'rc' → logprob: -3.2191038131713867
    6. 'print' → logprob: -3.7191038131713867
    7. 'mpl' → logprob: -4.469103813171387
    8. 't' → logprob: -4.594103813171387
    9. '-dessus' → logprob: -4.969103813171387
    10. 'm' → logprob: -5.344103813171387

Token 207: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049562327563762665
    2. ' print' → logprob: -3.7995622158050537
    3. ':
' → logprob: -3.9245622158050537
    4. ' :' → logprob: -5.674562454223633
    5. 'print' → logprob: -6.299562454223633
    6. '   ' → logprob: -7.174562454223633
    7. ' :
' → logprob: -9.049562454223633
    8. '
' → logprob: -11.299562454223633
    9. ' est' → logprob: -11.549562454223633
    10. ' imprime' → logprob: -11.799562454223633

Token 208: ' rempl' (ID: 66326)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.054369956254959106
    2. 'True' → logprob: -3.0543699264526367
    3. ' True' → logprob: -5.929369926452637
    4. ' vraie' → logprob: -6.429369926452637
    5. 'V' → logprob: -6.804369926452637
    6. 'true' → logprob: -8.554369926452637
    7. '   ' → logprob: -10.804369926452637
    8. ' vrai' → logprob: -10.804369926452637
    9. 'vero' → logprob: -11.054369926452637
    10. ' V' → logprob: -11.054369926452637

Token 209: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0025144272949546576
    2. 'i' → logprob: -7.377514362335205
    3. 'nie' → logprob: -8.252514839172363
    4. 'a' → logprob: -8.502514839172363
    5. 'lie' → logprob: -8.752514839172363
    6. 'ite' → logprob: -8.877514839172363
    7. 'tie' → logprob: -8.877514839172363
    8. 't' → logprob: -9.002514839172363
    9. 'vie' → logprob: -9.377514839172363
    10. 'it' → logprob: -9.627514839172363

Token 210: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37778356671333313
    2. ',' → logprob: -1.3777835369110107
    3. '   ' → logprob: -3.8777835369110107
    4. ':
' → logprob: -4.12778377532959
    5. 'print' → logprob: -4.25278377532959
    6. ' print' → logprob: -4.75278377532959
    7. ',
' → logprob: -6.62778377532959
    8. ' :' → logprob: -7.25278377532959
    9. '
' → logprob: -8.12778377532959
    10. ' ,' → logprob: -8.50278377532959

Token 211: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.007393652573227882
    2. 'print' → logprob: -5.007393836975098
    3. '   ' → logprob: -7.382393836975098
    4. ' ' → logprob: -11.007393836975098
    5. '	print' → logprob: -11.382393836975098
    6. '    ' → logprob: -11.382393836975098
    7. ' ' → logprob: -12.757393836975098
    8. ' prin' → logprob: -12.882393836975098
    9. '   ' → logprob: -13.007393836975098
    10. '    
' → logprob: -13.132393836975098

Token 212: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06240926682949066
    2. '(' → logprob: -2.8124091625213623
    3. '('' → logprob: -8.062409400939941
    4. '(
' → logprob: -9.937409400939941
    5. '"' → logprob: -10.687409400939941
    6. ' ("' → logprob: -11.312409400939941
    7. '(A' → logprob: -11.437409400939941
    8. ' "' → logprob: -11.687409400939941
    9. '(f' → logprob: -12.062409400939941
    10. ' (' → logprob: -12.187409400939941

Token 213: 'Yes' (ID: 13022)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.3805887699127197
    2. 'Les' → logprob: -1.8805887699127197
    3. 'Oui' → logprob: -2.0055887699127197
    4. 'V' → logprob: -2.1305887699127197
    5. 'O' → logprob: -2.8805887699127197
    6. 'True' → logprob: -3.3805887699127197
    7. 'OK' → logprob: -3.7555887699127197
    8. 'Prem' → logprob: -3.8805887699127197
    9. 'Deux' → logprob: -4.130588531494141
    10. 'Match' → logprob: -4.255588531494141

Token 214: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00047630956396460533
    2. '!"' → logprob: -8.375475883483887
    3. '")' → logprob: -9.375475883483887
    4. ',' → logprob: -9.750475883483887
    5. 'print' → logprob: -10.125475883483887
    6. ' !"' → logprob: -11.000475883483887
    7. ' print' → logprob: -11.750475883483887
    8. ' "' → logprob: -12.125475883483887
    9. ')"' → logprob: -12.250475883483887
    10. '   ' → logprob: -12.375475883483887

Token 215: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00924916286021471
    2. '
' → logprob: -5.259249210357666
    3. 'print' → logprob: -5.759249210357666
    4. '    
' → logprob: -7.634249210357666
    5. ' print' → logprob: -8.259248733520508
    6. ':' → logprob: -9.759248733520508
    7. ',' → logprob: -11.009248733520508
    8. '       ' → logprob: -11.384248733520508
    9. ':
' → logprob: -12.384248733520508
    10. '```' → logprob: -12.509248733520508

Token 216: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23672735691070557
    2. '   ' → logprob: -1.7367273569107056
    3. ' print' → logprob: -3.986727237701416
    4. ' la' → logprob: -4.611727237701416
    5. ' ' → logprob: -5.736727237701416
    6. '  ' → logprob: -7.736727237701416
    7. 'r' → logprob: -7.736727237701416
    8. ''' → logprob: -7.986727237701416
    9. '"' → logprob: -8.361727714538574
    10. '
' → logprob: -8.611727714538574

Token 217: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.3283154368400574
    2. 'a' → logprob: -1.8283154964447021
    3. ''utilisateur' → logprob: -3.078315496444702
    4. 'print' → logprob: -3.078315496444702
    5. 'é' → logprob: -4.078315258026123
    6. '   ' → logprob: -5.328315258026123
    7. 'e' → logprob: -6.703315258026123
    8. ''é' → logprob: -6.828315258026123
    9. 'console' → logprob: -7.203315258026123
    10. '’écran' → logprob: -7.578315258026123

Token 218: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004072701558470726
    2. '
' → logprob: -5.879072666168213
    3. 'print' → logprob: -7.129072666168213
    4. ':' → logprob: -8.504073143005371
    5. ' print' → logprob: -8.879073143005371
    6. '    
' → logprob: -9.254073143005371
    7. ':
' → logprob: -11.129073143005371
    8. ' :' → logprob: -13.129073143005371
    9. '```' → logprob: -13.129073143005371
    10. '       ' → logprob: -13.254073143005371

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017958412354346365
    2. '    
' → logprob: -9.500179290771484
    3. 'print' → logprob: -10.375179290771484
    4. '
' → logprob: -10.375179290771484
    5. ' print' → logprob: -10.500179290771484
    6. '   ' → logprob: -12.125179290771484
    7. ':' → logprob: -12.375179290771484
    8. '       ' → logprob: -12.750179290771484
    9. '    ' → logprob: -15.125179290771484
    10. '  ' → logprob: -15.125179290771484

Token 220: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22782503068447113
    2. ' print' → logprob: -1.9778250455856323
    3. 'print' (adapté à ' print') → logprob: -2.7278249263763428
    4. '	print' → logprob: -13.102825164794922
    5. '
' → logprob: -13.852825164794922
    6. '   ' → logprob: -13.977825164794922
    7. '       ' → logprob: -14.852825164794922
    8. '    ' → logprob: -15.227825164794922
    9. ' ' → logprob: -15.352825164794922
    10. '  ' → logprob: -15.602825164794922

Token 221: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.029762065038084984
    2. '(' → logprob: -3.529762029647827
    3. ' ("' → logprob: -12.154762268066406
    4. '('' → logprob: -12.404762268066406
    5. '("("' → logprob: -14.279762268066406
    6. '("")' → logprob: -14.529762268066406
    7. '(
' → logprob: -14.654762268066406
    8. '()' → logprob: -15.279762268066406
    9. ' (' → logprob: -15.654762268066406
    10. '("""' → logprob: -16.154762268066406

Token 222: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: 0.0
    2. ' Yes' → logprob: -17.0
    3. 'Oui' → logprob: -18.75
    4. 'YES' → logprob: -20.75
    5. 'True' → logprob: -22.875
    6. '"' → logprob: -23.625
    7. 'Hello' → logprob: -23.875
    8. 'yes' → logprob: -24.0
    9. 'No' → logprob: -24.0
    10. '“Yes' → logprob: -24.0

Token 223: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -1.981667537620524e-06
    2. ')' → logprob: -14.125001907348633
    3. '")
' → logprob: -14.125001907348633
    4. ')")' → logprob: -14.750001907348633
    5. '!")' → logprob: -18.500001907348633
    6. '"' → logprob: -18.875001907348633
    7. '”)' → logprob: -18.875001907348633
    8. ' ")' → logprob: -19.250001907348633
    9. '')' → logprob: -19.375001907348633
    10. '\")' → logprob: -19.375001907348633

Token 224: '#' (ID: 2)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.053963422775268555
    2. 'else' → logprob: -3.0539634227752686
    3. ' elif' → logprob: -6.178963661193848
    4. '<|end|>' → logprob: -6.178963661193848
    5. ' else' → logprob: -7.053963661193848
    6. 'el' → logprob: -8.553963661193848
    7. ')' → logprob: -9.303963661193848
    8. 'e' → logprob: -11.678963661193848
    9. '```' → logprob: -11.803963661193848
    10. '
' → logprob: -12.178963661193848

Token 225: ' Si' (ID: 7832)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.10031256079673767
    2. 'else' → logprob: -2.3503124713897705
    3. 'el' → logprob: -9.600312232971191
    4. ' elif' → logprob: -10.600312232971191
    5. ' else' → logprob: -11.475312232971191
    6. 'endif' → logprob: -13.975312232971191
    7. 'elseif' → logprob: -14.100312232971191
    8. '```' → logprob: -14.850312232971191
    9. 'elsif' → logprob: -15.350312232971191
    10. 'els' → logprob: -15.475312232971191

Token 226: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.01723420061171055
    2. 'A' → logprob: -5.0172343254089355
    3. ' not' → logprob: -5.1422343254089355
    4. ' ' → logprob: -6.0172343254089355
    5. ' B' → logprob: -6.6422343254089355
    6. ' C' → logprob: -7.6422343254089355
    7. 'elif' → logprob: -9.267233848571777
    8. 'not' → logprob: -9.642233848571777
    9. '  ' → logprob: -9.892233848571777
    10. ' elif' → logprob: -9.892233848571777

Token 227: ' condition' (ID: 7060)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5650529861450195
    2. ' A' → logprob: -1.1900529861450195
    3. 'A' → logprob: -3.1900529861450195
    4. ' condition' → logprob: -3.4400529861450195
    5. ' not' → logprob: -4.0650529861450195
    6. ' elif' → logprob: -4.3150529861450195
    7. 'else' → logprob: -4.4400529861450195
    8. 'not' → logprob: -5.8150529861450195
    9. 'condition' → logprob: -5.9400529861450195
    10. ' B' → logprob: -6.3150529861450195

Token 228: ' précédente' (ID: 177319)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.44885438680648804
    2. ' not' → logprob: -1.4488544464111328
    3. 'elif' → logprob: -2.448854446411133
    4. ' A' → logprob: -3.948854446411133
    5. ' else' → logprob: -4.323854446411133
    6. ' ' → logprob: -5.948854446411133
    7. 'else' → logprob: -6.073854446411133
    8. 'A' → logprob: -6.823854446411133
    9. 'not' → logprob: -7.073854446411133
    10. '  ' → logprob: -8.073854446411133

Token 229: ' n' (ID: 297)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5327507853507996
    2. 'else' → logprob: -2.0327508449554443
    3. ' else' → logprob: -2.2827508449554443
    4. ' elif' → logprob: -2.2827508449554443
    5. ':' → logprob: -3.5327508449554443
    6. ' est' → logprob: -3.6577508449554443
    7. ' n' → logprob: -4.407750606536865
    8. ' is' → logprob: -5.157750606536865
    9. 'est' → logprob: -6.032750606536865
    10. ' not' → logprob: -7.282750606536865

Token 230: ''est' (ID: 6616)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.19423089921474457
    2. ''est' → logprob: -2.444230794906616
    3. 'ot' → logprob: -3.069230794906616
    4. 'o' → logprob: -4.194231033325195
    5. 'e' → logprob: -4.319231033325195
    6. '#' → logprob: -5.569231033325195
    7. 'est' → logprob: -6.069231033325195
    8. 'et' → logprob: -6.694231033325195
    9. ' elif' → logprob: -6.819231033325195
    10. '’est' → logprob: -6.819231033325195

Token 231: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.018390242010354996
    2. ' pas' → logprob: -4.01839017868042
    3. '#' → logprob: -8.518390655517578
    4. 'not' → logprob: -11.643390655517578
    5. 'Pas' → logprob: -11.893390655517578
    6. 'elif' → logprob: -12.018390655517578
    7. '_pas' → logprob: -12.268390655517578
    8. 'pass' → logprob: -12.393390655517578
    9. 'p' → logprob: -12.893390655517578
    10. 's' → logprob: -13.518390655517578

Token 232: ' satis' (ID: 56317)
  Prédit: ' rempl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rempl' → logprob: -0.21313560009002686
    2. 'pas' → logprob: -2.2131357192993164
    3. 's' → logprob: -3.4631357192993164
    4. ' pas' → logprob: -3.4631357192993164
    5. 'v' → logprob: -5.213135719299316
    6. 'rem' → logprob: -5.588135719299316
    7. 'fulfilled' → logprob: -6.588135719299316
    8. 'respect' → logprob: -6.838135719299316
    9. 'True' → logprob: -6.963135719299316
    10. ' respect' → logprob: -7.213135719299316

Token 233: 'faite' (ID: 69848)
  Prédit: 'ait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ait' → logprob: -0.7592609524726868
    2. 'faite' → logprob: -0.7592609524726868
    3. 'ais' → logprob: -3.509260892868042
    4. 'uite' → logprob: -5.134261131286621
    5. 'ite' → logprob: -5.259261131286621
    6. 'fait' → logprob: -5.634261131286621
    7. 'is' → logprob: -5.759261131286621
    8. 'ante' → logprob: -6.384261131286621
    9. 'if' → logprob: -6.384261131286621
    10. 'aise' → logprob: -6.509261131286621

Token 234: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46131497621536255
    2. 'elif' → logprob: -1.5863149166107178
    3. 'else' → logprob: -1.8363149166107178
    4. ' else' → logprob: -5.711315155029297
    5. ' elif' → logprob: -6.711315155029297
    6. ':
' → logprob: -7.461315155029297
    7. ',' → logprob: -8.211315155029297
    8. ' :' → logprob: -10.336315155029297
    9. 'e' → logprob: -10.711315155029297
    10. 'el' → logprob: -11.086315155029297

Token 235: ' vér' (ID: 42524)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.002116238931193948
    2. 'else' → logprob: -6.2521162033081055
    3. ' elif' → logprob: -8.627116203308105
    4. 'print' → logprob: -12.127116203308105
    5. ' else' → logprob: -13.252116203308105
    6. 'el' → logprob: -14.627116203308105
    7. '#' → logprob: -15.252116203308105
    8. 'elseif' → logprob: -16.002117156982422
    9. 'els' → logprob: -16.002117156982422
    10. 'eli' → logprob: -16.377117156982422

Token 236: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.059851985424757004
    2. 'ifiez' → logprob: -3.684851884841919
    3. 'elif' → logprob: -3.934851884841919
    4. 'if' → logprob: -4.684852123260498
    5. 'ifies' → logprob: -6.184852123260498
    6. 'ifié' → logprob: -7.559852123260498
    7. 'ify' → logprob: -7.559852123260498
    8. ' elif' → logprob: -8.68485164642334
    9. 'ifier' → logprob: -9.43485164642334
    10. '#' → logprob: -9.43485164642334

Token 237: ' la' (ID: 557)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.03806937485933304
    2. ' elif' → logprob: -3.288069486618042
    3. 'el' → logprob: -11.288069725036621
    4. 'if' → logprob: -11.788069725036621
    5. 'une' → logprob: -13.288069725036621
    6. 'le' → logprob: -14.038069725036621
    7. ' une' → logprob: -14.038069725036621
    8. ' la' → logprob: -14.163069725036621
    9. ' el' → logprob: -14.163069725036621
    10. ':' → logprob: -14.288069725036621

Token 238: ' condition' (ID: 7060)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.00036715567694045603
    2. ' elif' → logprob: -8.250367164611816
    3. 'suite' → logprob: -9.875367164611816
    4. 'el' → logprob: -11.125367164611816
    5. ' suivante' → logprob: -11.500367164611816
    6. ' suite' → logprob: -11.625367164611816
    7. 's' → logprob: -12.375367164611816
    8. 'prem' → logprob: -12.625367164611816
    9. 'condition' → logprob: -13.250367164611816
    10. ' deuxième' → logprob: -13.250367164611816

Token 239: ' suivante' (ID: 107439)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0076262690126895905
    2. ' elif' → logprob: -4.882626056671143
    3. ' suivante' → logprob: -11.3826265335083
    4. 'el' → logprob: -12.1326265335083
    5. 'if' → logprob: -13.1326265335083
    6. 'A' → logprob: -15.0076265335083
    7. '```' → logprob: -15.2576265335083
    8. 's' → logprob: -15.6326265335083
    9. 'El' → logprob: -16.007625579833984
    10. 'else' → logprob: -16.382625579833984

Token 240: ' :
' (ID: 10039)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.00027897433028556406
    2. ' elif' → logprob: -8.250279426574707
    3. 'el' → logprob: -11.000279426574707
    4. 'if' → logprob: -14.500279426574707
    5. ':' → logprob: -15.250279426574707
    6. 'eli' → logprob: -15.750279426574707
    7. 'El' → logprob: -16.62527847290039
    8. '```' → logprob: -17.37527847290039
    9. 'elseif' → logprob: -17.75027847290039
    10. 'elsif' → logprob: -17.87527847290039

Token 241: '#' (ID: 2)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -5.5577775128767826e-06
    2. 'el' → logprob: -12.750005722045898
    3. ' elif' → logprob: -13.250005722045898
    4. 'if' → logprob: -14.250005722045898
    5. '```' → logprob: -15.875005722045898
    6. 'El' → logprob: -19.1250057220459
    7. 'else' → logprob: -19.2500057220459
    8. 'eli' → logprob: -19.5000057220459
    9. 'elseif' → logprob: -19.8750057220459
    10. 'elsif' → logprob: -20.3750057220459

Token 242: ' -' (ID: 533)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -9.73446003627032e-05
    2. ' elif' → logprob: -9.500097274780273
    3. 'if' → logprob: -10.875097274780273
    4. 'el' → logprob: -12.625097274780273
    5. 'El' → logprob: -16.125097274780273
    6. '```' → logprob: -16.375097274780273
    7. 'elsif' → logprob: -17.750097274780273
    8. 'A' → logprob: -18.125097274780273
    9. 'elseif' → logprob: -18.250097274780273
    10. 'else' → logprob: -18.375097274780273

Token 243: ' A' (ID: 355)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.209848552942276
    2. 'A' → logprob: -1.7098485231399536
    3. ' B' → logprob: -5.084848403930664
    4. ' A' → logprob: -6.334848403930664
    5. 'C' → logprob: -8.459848403930664
    6. '(B' → logprob: -9.584848403930664
    7. '(A' → logprob: -9.959848403930664
    8. 'elif' → logprob: -10.209848403930664
    9. 'if' → logprob: -10.459848403930664
    10. ' (' → logprob: -11.084848403930664

Token 244: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2868838310241699
    2. ' ==' → logprob: -1.41188383102417
    3. '!=' → logprob: -5.66188383102417
    4. ' !=' → logprob: -6.16188383102417
    5. '=' → logprob: -10.661884307861328
    6. '>' → logprob: -10.786884307861328
    7. '==
' → logprob: -10.786884307861328
    8. ',' → logprob: -11.849384307861328
    9. 'elif' → logprob: -11.911884307861328
    10. 'or' → logprob: -11.974384307861328

Token 245: ' égal' (ID: 15059)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.1366469860076904
    2. '!=' → logprob: -1.3866469860076904
    3. 'B' → logprob: -1.7616469860076904
    4. ' not' → logprob: -2.5116469860076904
    5. '==' → logprob: -2.6366469860076904
    6. 'not' → logprob: -3.5116469860076904
    7. 'None' → logprob: -4.2616472244262695
    8. ' C' → logprob: -4.2616472244262695
    9. ' None' → logprob: -4.5116472244262695
    10. ' B' → logprob: -4.7616472244262695

Token 246: ' à' (ID: 1221)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.057675980031490326
    2. ' C' → logprob: -3.307676076889038
    3. 'B' → logprob: -4.057675838470459
    4. ' B' → logprob: -6.682675838470459
    5. ' ' → logprob: -7.807675838470459
    6. ' à' → logprob: -8.307676315307617
    7. '  ' → logprob: -9.182676315307617
    8. '=' → logprob: -10.432676315307617
    9. 'à' → logprob: -10.557676315307617
    10. '=C' → logprob: -11.307676315307617

Token 247: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00012999906903132796
    2. 'B' → logprob: -9.250129699707031
    3. ' C' → logprob: -10.375129699707031
    4. '"C' → logprob: -13.875129699707031
    5. 'c' → logprob: -14.750129699707031
    6. ''C' → logprob: -15.125129699707031
    7. 'print' → logprob: -15.500129699707031
    8. '```' → logprob: -15.500129699707031
    9. ' ' → logprob: -16.00012969970703
    10. '
' → logprob: -16.12512969970703

Token 248: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.27328261733055115
    2. 'and' → logprob: -1.5232826471328735
    3. 'elif' → logprob: -3.898282527923584
    4. ' or' → logprob: -7.273282527923584
    5. ' elif' → logprob: -9.273283004760742
    6. 'if' → logprob: -10.273283004760742
    7. 'or' → logprob: -10.648283004760742
    8. ' ' → logprob: -13.523283004760742
    9. ' if' → logprob: -14.148283004760742
    10. '```' → logprob: -14.773283004760742

Token 249: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.022397436201572418
    2. ' A' → logprob: -3.897397518157959
    3. 'C' → logprob: -7.647397518157959
    4. 'if' → logprob: -7.897397518157959
    5. 'and' → logprob: -8.1473970413208
    6. ')' → logprob: -8.2723970413208
    7. 'B' → logprob: -8.6473970413208
    8. 'elif' → logprob: -8.6473970413208
    9. ' and' → logprob: -9.7723970413208
    10. ' C' → logprob: -11.3973970413208

Token 250: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931615471839905
    2. ' ==' → logprob: -0.6931615471839905
    3. ')' → logprob: -12.318161964416504
    4. '==
' → logprob: -12.693161964416504
    5. ' !=' → logprob: -13.443161964416504
    6. '!=' → logprob: -13.443161964416504
    7. ' ' → logprob: -13.693161964416504
    8. '=' → logprob: -14.068161964416504
    9. ')==' → logprob: -14.443161964416504
    10. ' and' → logprob: -14.943161964416504

Token 251: ' C' (ID: 363)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2037421315908432
    2. 'C' → logprob: -1.7037421464920044
    3. ' B' → logprob: -6.453742027282715
    4. ' C' → logprob: -7.203742027282715
    5. ')' → logprob: -11.953742027282715
    6. ' ' → logprob: -14.453742027282715
    7. 'A' → logprob: -15.328742027282715
    8. 'c' → logprob: -15.453742027282715
    9. ' ' → logprob: -16.32874298095703
    10. '  ' → logprob: -17.07874298095703

Token 252: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13515210151672363
    2. ' and' → logprob: -2.1351521015167236
    3. 'and' → logprob: -4.8851518630981445
    4. ' )' → logprob: -7.3851518630981445
    5. '):' → logprob: -12.635151863098145
    6. ' ' → logprob: -12.635151863098145
    7. ' or' → logprob: -12.885151863098145
    8. ' ' → logprob: -14.510151863098145
    9. '):
' → logprob: -14.760151863098145
    10. ')
' → logprob: -15.135151863098145

Token 253: ' :' (ID: 712)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10025713592767715
    2. 'and' → logprob: -2.350257158279419
    3. ' or' → logprob: -10.47525691986084
    4. 'elif' → logprob: -11.10025691986084
    5. ':' → logprob: -12.72525691986084
    6. ' ' → logprob: -13.35025691986084
    7. 'if' → logprob: -13.85025691986084
    8. 'or' → logprob: -14.60025691986084
    9. ' elif' → logprob: -15.35025691986084
    10. ')' → logprob: -15.35025691986084

Token 254: ' la' (ID: 557)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1432139128446579
    2. 'and' → logprob: -2.018213987350464
    3. 'print' → logprob: -8.643214225769043
    4. ' or' → logprob: -9.018214225769043
    5. 'elif' → logprob: -9.643214225769043
    6. '   ' → logprob: -10.143214225769043
    7. ' print' → logprob: -10.143214225769043
    8. 'if' → logprob: -10.268214225769043
    9. ' ' → logprob: -10.643214225769043
    10. ' et' → logprob: -11.018214225769043

Token 255: ' première' (ID: 23423)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3223741054534912
    2. 'and' → logprob: -1.4473741054534912
    3. ' or' → logprob: -3.822374105453491
    4. ' et' → logprob: -4.69737434387207
    5. ' print' → logprob: -5.94737434387207
    6. ' B' → logprob: -6.69737434387207
    7. 'print' → logprob: -7.07237434387207
    8. ' A' → logprob: -7.32237434387207
    9. 'or' → logprob: -7.57237434387207
    10. 'et' → logprob: -7.69737434387207

Token 256: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12502768635749817
    2. ' or' → logprob: -2.625027656555176
    3. 'and' → logprob: -3.125027656555176
    4. ')' → logprob: -8.000027656555176
    5. 'or' → logprob: -8.125027656555176
    6. ' et' → logprob: -8.500027656555176
    7. ' !=' → logprob: -9.375027656555176
    8. 'et' → logprob: -9.625027656555176
    9. 'elif' → logprob: -9.875027656555176
    10. ' ' → logprob: -10.125027656555176

Token 257: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6932640075683594
    2. ' B' → logprob: -0.6932640075683594
    3. 'C' → logprob: -9.81826400756836
    4. ' C' → logprob: -9.94326400756836
    5. ' ' → logprob: -11.81826400756836
    6. ' not' → logprob: -12.56826400756836
    7. '  ' → logprob: -13.69326400756836
    8. ' ' → logprob: -14.19326400756836
    9. '	B' → logprob: -14.44326400756836
    10. '#' → logprob: -15.44326400756836

Token 258: ' troisième' (ID: 75373)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.014765433967113495
    2. 'tro' → logprob: -5.01476526260376
    3. 'B' → logprob: -5.76476526260376
    4. '#' → logprob: -6.13976526260376
    5. ' deuxième' → logprob: -7.01476526260376
    6. 'se' → logprob: -7.76476526260376
    7. 'prem' → logprob: -7.76476526260376
    8. 'print' → logprob: -8.639765739440918
    9. 'second' → logprob: -8.764765739440918
    10. 'b' → logprob: -8.764765739440918

Token 259: ' valeur' (ID: 41664)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7731640934944153
    2. ' or' → logprob: -1.1481640338897705
    3. ' and' → logprob: -2.5231640338897705
    4. '!=' → logprob: -2.8981640338897705
    5. ' valeur' → logprob: -3.6481640338897705
    6. 'val' → logprob: -4.02316427230835
    7. 'and' → logprob: -4.52316427230835
    8. ')' → logprob: -4.89816427230835
    9. ' ' → logprob: -5.27316427230835
    10. ' value' → logprob: -5.39816427230835

Token 260: ' sont' (ID: 5242)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.45854300260543823
    2. 'and' → logprob: -1.083543062210083
    3. ')' → logprob: -3.958543062210083
    4. ' are' → logprob: -5.458542823791504
    5. ' ==' → logprob: -6.208542823791504
    6. '==' → logprob: -6.833542823791504
    7. 'et' → logprob: -7.083542823791504
    8. ' sont' → logprob: -7.708542823791504
    9. 'are' → logprob: -7.958542823791504
    10. ' or' → logprob: -7.958542823791504

Token 261: ' ident' (ID: 3951)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -1.1578865051269531
    2. 'diff' → logprob: -1.1578865051269531
    3. 'ident' → logprob: -1.9078865051269531
    4. 'égal' → logprob: -2.282886505126953
    5. ' ég' → logprob: -2.532886505126953
    6. ' ident' → logprob: -3.782886505126953
    7. 'different' → logprob: -4.532886505126953
    8. ' différentes' → logprob: -5.032886505126953
    9. '#' → logprob: -7.157886505126953
    10. ' different' → logprob: -7.657886505126953

Token 262: 'iques' (ID: 11654)
  Prédit: 'ques'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.011857584118843079
    2. 'iques' → logprob: -5.136857509613037
    3. 'que' → logprob: -5.386857509613037
    4. 'cal' → logprob: -8.136857986450195
    5. 'tiques' → logprob: -8.136857986450195
    6. '#' → logprob: -8.761857986450195
    7. 't' → logprob: -9.386857986450195
    8. 'ales' → logprob: -9.511857986450195
    9. 'f' → logprob: -9.761857986450195
    10. '```' → logprob: -9.886857986450195

Token 263: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.579030454158783
    2. 'and' → logprob: -0.829030454158783
    3. 'elif' → logprob: -5.829030513763428
    4. ' or' → logprob: -9.45403003692627
    5. 'if' → logprob: -10.32903003692627
    6. ')' → logprob: -11.57903003692627
    7. 'or' → logprob: -12.07903003692627
    8. ' elif' → logprob: -12.20403003692627
    9. '#' → logprob: -12.45403003692627
    10. ',' → logprob: -12.70403003692627

Token 264: '#' (ID: 2)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3560630977153778
    2. 'and' → logprob: -1.7310631275177002
    3. ' and' → logprob: -2.1060631275177
    4. ' elif' → logprob: -7.731062889099121
    5. ' or' → logprob: -8.356062889099121
    6. 'if' → logprob: -10.731062889099121
    7. 'or' → logprob: -10.856062889099121
    8. 'el' → logprob: -10.856062889099121
    9. '#' → logprob: -11.856062889099121
    10. ',' → logprob: -11.981062889099121

Token 265: ' -' (ID: 533)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.05622208118438721
    2. ' and' → logprob: -3.4312219619750977
    3. 'and' → logprob: -3.9312219619750977
    4. ' elif' → logprob: -6.056221961975098
    5. ' or' → logprob: -8.056221961975098
    6. 'else' → logprob: -10.806221961975098
    7. 'el' → logprob: -11.806221961975098
    8. 'or' → logprob: -11.931221961975098
    9. 'if' → logprob: -13.181221961975098
    10. ',' → logprob: -13.431221961975098

Token 266: ' B' (ID: 418)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3199940323829651
    2. ' A' → logprob: -1.9449939727783203
    3. 'B' → logprob: -2.1949939727783203
    4. ' B' → logprob: -3.9449939727783203
    5. ' ' → logprob: -9.44499397277832
    6. '   ' → logprob: -10.56999397277832
    7. 'C' → logprob: -10.81999397277832
    8. '  ' → logprob: -12.31999397277832
    9. ' ' → logprob: -12.44499397277832
    10. ' C' → logprob: -12.81999397277832

Token 267: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5506011843681335
    2. ' !=' → logprob: -1.4256012439727783
    3. '==' → logprob: -1.9256012439727783
    4. '!=' → logprob: -3.3006012439727783
    5. ' ' → logprob: -8.6756010055542
    6. ' is' → logprob: -8.8006010055542
    7. ' ' → logprob: -10.9256010055542
    8. '=' → logprob: -11.1756010055542
    9. ' #' → logprob: -12.4256010055542
    10. 'is' → logprob: -12.4256010055542

Token 268: ' différent' (ID: 114823)
  Prédit: ' différent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différent' → logprob: -0.7318807244300842
    2. ' different' → logprob: -1.2318806648254395
    3. '!=' → logprob: -2.3568806648254395
    4. ' not' → logprob: -2.4818806648254395
    5. ' !=' → logprob: -3.3568806648254395
    6. 'not' → logprob: -4.8568806648254395
    7. 'different' → logprob: -5.4818806648254395
    8. '!' → logprob: -6.9818806648254395
    9. 'diff' → logprob: -7.6068806648254395
    10. ' ' → logprob: -8.106881141662598

Token 269: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04878629371523857
    2. ' from' → logprob: -3.9237864017486572
    3. '()' → logprob: -4.673786163330078
    4. '(B' → logprob: -4.798786163330078
    5. ' de' → logprob: -5.298786163330078
    6. '=' → logprob: -6.048786163330078
    7. ' ' → logprob: -6.673786163330078
    8. 'B' → logprob: -7.673786163330078
    9. '(A' → logprob: -8.298786163330078
    10. 'de' → logprob: -8.548786163330078

Token 270: ' C' (ID: 363)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.39686211943626404
    2. 'C' → logprob: -1.1468621492385864
    3. ' A' → logprob: -4.771862030029297
    4. ' C' → logprob: -6.521862030029297
    5. ' ' → logprob: -12.521862030029297
    6. '	A' → logprob: -14.396862030029297
    7. '  ' → logprob: -14.521862030029297
    8. 'c' → logprob: -14.896862030029297
    9. '   ' → logprob: -15.146862030029297
    10. ' ' → logprob: -16.521862030029297

Token 271: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03380579501390457
    2. 'and' → logprob: -3.4088058471679688
    3. ' (' → logprob: -9.033805847167969
    4. 'if' → logprob: -11.158805847167969
    5. ' if' → logprob: -11.533805847167969
    6. ')' → logprob: -11.908805847167969
    7. ' ' → logprob: -12.533805847167969
    8. '(' → logprob: -13.283805847167969
    9. ' !=' → logprob: -13.408805847167969
    10. '!=' → logprob: -13.908805847167969

Token 272: 'B' (ID: 33)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.47413772344589233
    2. 'B' → logprob: -0.9741377234458923
    3. ')' → logprob: -10.349137306213379
    4. '(B' → logprob: -11.474137306213379
    5. ' (' → logprob: -12.099137306213379
    6. 'b' → logprob: -12.224137306213379
    7. ' ' → logprob: -13.099137306213379
    8. '   ' → logprob: -13.974137306213379
    9. '(' → logprob: -14.349137306213379
    10. 'A' → logprob: -14.474137306213379

Token 273: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.014288671314716339
    2. '!=' → logprob: -4.264288902282715
    3. ')' → logprob: -9.264288902282715
    4. ' )' → logprob: -11.014288902282715
    5. ')!=' → logprob: -12.014288902282715
    6. ' ' → logprob: -12.014288902282715
    7. ' ' → logprob: -13.639288902282715
    8. '```' → logprob: -15.514288902282715
    9. '()!=' → logprob: -16.0142879486084
    10. ' #' → logprob: -16.7642879486084

Token 274: ' C' (ID: 363)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4143732786178589
    2. ' A' → logprob: -1.1643732786178589
    3. 'C' → logprob: -3.9143733978271484
    4. ' C' → logprob: -5.289373397827148
    5. 'B' → logprob: -6.414373397827148
    6. ' B' → logprob: -7.789373397827148
    7. ')' → logprob: -9.664373397827148
    8. ' ' → logprob: -11.539373397827148
    9. '	A' → logprob: -14.039373397827148
    10. '"A' → logprob: -14.164373397827148

Token 275: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07068303227424622
    2. ')' → logprob: -2.695683002471924
    3. ' ):' → logprob: -7.820683002471924
    4. '):
' → logprob: -8.320683479309082
    5. ' )' → logprob: -9.695683479309082
    6. ':' → logprob: -10.445683479309082
    7. '):

' → logprob: -12.445683479309082
    8. ' and' → logprob: -13.320683479309082
    9. ' ' → logprob: -13.820683479309082
    10. '):
' → logprob: -14.320683479309082

Token 276: ' :' (ID: 712)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.049683596938848495
    2. 'and' → logprob: -3.0496835708618164
    3. 'if' → logprob: -7.049683570861816
    4. ' if' → logprob: -9.049683570861816
    5. 'elif' → logprob: -9.299683570861816
    6. ':' → logprob: -11.674683570861816
    7. ' ' → logprob: -12.549683570861816
    8. '```' → logprob: -13.049683570861816
    9. '   ' → logprob: -13.299683570861816
    10. ' or' → logprob: -13.674683570861816

Token 277: ' la' (ID: 557)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.029829515144228935
    2. 'B' → logprob: -4.154829502105713
    3. ' print' → logprob: -4.529829502105713
    4. 'print' → logprob: -6.404829502105713
    5. ' b' → logprob: -7.654829502105713
    6. 'b' → logprob: -8.904829978942871
    7. ' (' → logprob: -8.904829978942871
    8. '   ' → logprob: -9.154829978942871
    9. ' ' → logprob: -9.279829978942871
    10. ' if' → logprob: -9.529829978942871

Token 278: ' deuxième' (ID: 51664)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.782617449760437
    2. ' B' → logprob: -0.907617449760437
    3. ' print' → logprob: -2.2826175689697266
    4. 'print' → logprob: -3.7826175689697266
    5. 'b' → logprob: -5.157617568969727
    6. '#' → logprob: -6.282617568969727
    7. ' ' → logprob: -6.282617568969727
    8. ' #' → logprob: -6.907617568969727
    9. ' b' → logprob: -6.907617568969727
    10. ' ' → logprob: -7.032617568969727

Token 279: ' et' (ID: 859)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.12856464087963104
    2. '!=' → logprob: -2.1285645961761475
    3. ')' → logprob: -7.253564834594727
    4. ' and' → logprob: -7.753564834594727
    5. ' )' → logprob: -8.378564834594727
    6. 'and' → logprob: -9.503564834594727
    7. ')!=' → logprob: -9.878564834594727
    8. ' ' → logprob: -9.878564834594727
    9. ' ' → logprob: -10.128564834594727
    10. '!' → logprob: -10.753564834594727

Token 280: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5742008686065674
    2. ' B' → logprob: -1.0742008686065674
    3. 'C' → logprob: -2.9492008686065674
    4. ' C' → logprob: -3.4492008686065674
    5. 'A' → logprob: -5.199200630187988
    6. ' A' → logprob: -5.199200630187988
    7. ' ' → logprob: -9.574200630187988
    8. '  ' → logprob: -12.199200630187988
    9. '	B' → logprob: -13.574200630187988
    10. ' ' → logprob: -13.699200630187988

Token 281: ' troisième' (ID: 75373)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3968893885612488
    2. 'B' → logprob: -1.1468894481658936
    3. 'C' → logprob: -5.1468892097473145
    4. ' A' → logprob: -5.7718892097473145
    5. ' B' → logprob: -6.8968892097473145
    6. ' C' → logprob: -10.771889686584473
    7. ' ' → logprob: -13.396889686584473
    8. 'first' → logprob: -14.396889686584473
    9. 'print' → logprob: -14.396889686584473
    10. '```' → logprob: -14.396889686584473

Token 282: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.5138224959373474
    2. ' value' → logprob: -1.3888225555419922
    3. 'value' → logprob: -2.388822555541992
    4. 'val' → logprob: -3.388822555541992
    5. ' valeurs' → logprob: -5.263822555541992
    6. ' !=' → logprob: -5.388822555541992
    7. ' val' → logprob: -5.388822555541992
    8. ' vale' → logprob: -5.638822555541992
    9. ' values' → logprob: -5.763822555541992
    10. ')' → logprob: -6.013822555541992

Token 283: ' sont' (ID: 5242)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5209702849388123
    2. 'are' → logprob: -1.020970344543457
    3. ' sont' → logprob: -3.520970344543457
    4. '!=' → logprob: -5.145970344543457
    5. ' est' → logprob: -5.395970344543457
    6. ' !=' → logprob: -5.645970344543457
    7. '#' → logprob: -7.020970344543457
    8. 'est' → logprob: -8.270970344543457
    9. ' is' → logprob: -8.395970344543457
    10. 's' → logprob: -8.645970344543457

Token 284: ' différentes' (ID: 41398)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.9204081892967224
    2. 'diff' → logprob: -1.1704082489013672
    3. ' différent' → logprob: -1.4204082489013672
    4. ' different' → logprob: -3.045408248901367
    5. 'd' → logprob: -6.795408248901367
    6. ' différents' → logprob: -7.045408248901367
    7. ' différentes' → logprob: -9.045408248901367
    8. ' diff' → logprob: -10.170408248901367
    9. ' différente' → logprob: -10.295408248901367
    10. 'dif' → logprob: -12.295408248901367

Token 285: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.00022952310973778367
    2. 'if' → logprob: -8.750229835510254
    3. 'el' → logprob: -10.000229835510254
    4. ' elif' → logprob: -11.375229835510254
    5. '```' → logprob: -11.375229835510254
    6. ':' → logprob: -13.750229835510254
    7. 'El' → logprob: -14.250229835510254
    8. 'else' → logprob: -14.750229835510254
    9. 'and' → logprob: -15.625229835510254
    10. '
' → logprob: -16.250228881835938

Token 286: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -2.9160102712921798e-05
    2. 'el' → logprob: -11.125029563903809
    3. '```' → logprob: -11.875029563903809
    4. 'if' → logprob: -12.375029563903809
    5. ' elif' → logprob: -13.375029563903809
    6. 'else' → logprob: -13.500029563903809
    7. 'El' → logprob: -16.375028610229492
    8. 'eli' → logprob: -17.250028610229492
    9. 'elseif' → logprob: -17.375028610229492
    10. 'elsif' → logprob: -17.500028610229492

Token 287: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.06198146939277649
    2. 'A' → logprob: -2.811981439590454
    3. ' B' → logprob: -11.436981201171875
    4. 'B' → logprob: -12.811981201171875
    5. ' ' → logprob: -15.311981201171875
    6. '	A' → logprob: -16.686981201171875
    7. '   ' → logprob: -16.936981201171875
    8. ' ' → logprob: -17.561981201171875
    9. '(A' → logprob: -19.311981201171875
    10. '  ' → logprob: -19.561981201171875

Token 288: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03804286941885948
    2. '==' → logprob: -3.2880427837371826
    3. ' ' → logprob: -14.413043022155762
    4. ' ==
' → logprob: -15.288043022155762
    5. '==
' → logprob: -15.413043022155762
    6. ' ' → logprob: -15.788043022155762
    7. '=' → logprob: -15.913043022155762
    8. ')==' → logprob: -16.413042068481445
    9. ')' → logprob: -16.913042068481445
    10. ' =' → logprob: -17.038042068481445

Token 289: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0007108822464942932
    2. ' C' → logprob: -7.250710964202881
    3. ' ' → logprob: -14.375710487365723
    4. '   ' → logprob: -16.75071144104004
    5. '	C' → logprob: -16.75071144104004
    6. '  ' → logprob: -17.18821144104004
    7. 'c' → logprob: -17.56321144104004
    8. '>C' → logprob: -17.81321144104004
    9. '_C' → logprob: -18.00071144104004
    10. '```' → logprob: -18.25071144104004

Token 290: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014163747429847717
    2. 'and' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.639163970947266
    4. ' ' → logprob: -18.139163970947266
    5. ':' → logprob: -19.389163970947266
    6. 'andr' → logprob: -20.014163970947266
    7. '   ' → logprob: -20.139163970947266
    8. ' и' → logprob: -20.139163970947266
    9. '	and' → logprob: -20.264163970947266
    10. ')' → logprob: -20.639163970947266

Token 291: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5759479999542236
    2. ' B' → logprob: -0.8259479999542236
    3. ' ' → logprob: -12.325947761535645
    4. 'b' → logprob: -13.450947761535645
    5. '   ' → logprob: -13.450947761535645
    6. ' ' → logprob: -14.825947761535645
    7. '  ' → logprob: -15.575947761535645
    8. '	B' → logprob: -15.575947761535645
    9. '    ' → logprob: -16.38844871520996
    10. 'A' → logprob: -16.57594871520996

Token 292: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2519713342189789
    2. '!=' → logprob: -1.5019713640213013
    3. '<|end|>' → logprob: -10.251971244812012
    4. '()!=' → logprob: -13.376971244812012
    5. ' ' → logprob: -13.376971244812012
    6. '!='' → logprob: -13.751971244812012
    7. ')!=' → logprob: -14.126971244812012
    8. '!=-' → logprob: -14.626971244812012
    9. '!' → logprob: -15.001971244812012
    10. '!="' → logprob: -15.251971244812012

Token 293: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008615042082965374
    2. ' C' → logprob: -4.758615016937256
    3. '	C' → logprob: -15.508615493774414
    4. ' ' → logprob: -16.008615493774414
    5. 'B' → logprob: -16.508615493774414
    6. 'c' → logprob: -17.133615493774414
    7. '>C' → logprob: -17.258615493774414
    8. '"C' → logprob: -17.258615493774414
    9. ''C' → logprob: -17.758615493774414
    10. '_C' → logprob: -18.008615493774414

Token 294: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04859157279133797
    2. ':
' → logprob: -3.0485916137695312
    3. ' :' → logprob: -13.423591613769531
    4. '   ' → logprob: -13.923591613769531
    5. ' :
' → logprob: -13.923591613769531
    6. ':
' → logprob: -14.548591613769531
    7. ':

' → logprob: -15.048591613769531
    8. '):
' → logprob: -16.42359161376953
    9. '):' → logprob: -17.42359161376953
    10. 'print' → logprob: -17.54859161376953

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04045267775654793
    2. ':' → logprob: -3.290452718734741
    3. ':
' → logprob: -6.165452480316162
    4. 'print' → logprob: -8.41545295715332
    5. ' print' → logprob: -9.79045295715332
    6. '```' → logprob: -11.29045295715332
    7. '
' → logprob: -11.79045295715332
    8. '    
' → logprob: -12.79045295715332
    9. '       ' → logprob: -13.41545295715332
    10. '	print' → logprob: -13.66545295715332

Token 296: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007344625773839653
    2. 'print' → logprob: -7.250734329223633
    3. ' print' → logprob: -10.750734329223633
    4. '
' → logprob: -13.375734329223633
    5. '```' → logprob: -14.500734329223633
    6. '    
' → logprob: -14.875734329223633
    7. '#' (adapté à ' #') → logprob: -15.250734329223633
    8. '   ' → logprob: -15.750734329223633
    9. '       ' → logprob: -16.125734329223633
    10. '	print' → logprob: -16.375734329223633

Token 297: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0899672582745552
    2. '   ' → logprob: -2.8399672508239746
    3. ' print' → logprob: -3.5899672508239746
    4. ' ' → logprob: -12.714967727661133
    5. '```' → logprob: -13.089967727661133
    6. '	print' → logprob: -13.214967727661133
    7. '
' → logprob: -13.214967727661133
    8. '  ' → logprob: -13.589967727661133
    9. '#' → logprob: -14.839967727661133
    10. '       ' → logprob: -14.964967727661133

Token 298: ' cette' (ID: 7696)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.30116909742355347
    2. 'True' → logprob: -2.3011691570281982
    3. ' True' → logprob: -2.8011691570281982
    4. '   ' → logprob: -2.8011691570281982
    5. ' print' → logprob: -4.426168918609619
    6. 'A' → logprob: -4.551168918609619
    7. ' ' → logprob: -5.426168918609619
    8. 'la' → logprob: -5.551168918609619
    9. ' A' → logprob: -6.051168918609619
    10. 'true' → logprob: -6.301168918609619

Token 299: ' condition' (ID: 7060)
  Prédit: ' condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' condition' → logprob: -0.2556725740432739
    2. 'condition' → logprob: -1.505672574043274
    3. '   ' → logprob: -6.005672454833984
    4. 'print' → logprob: -7.005672454833984
    5. ':' → logprob: -8.255672454833984
    6. ' print' → logprob: -9.880672454833984
    7. 'cond' → logprob: -11.505672454833984
    8. ' ' → logprob: -11.630672454833984
    9. '条件' → logprob: -11.880672454833984
    10. '(condition' → logprob: -12.380672454833984

Token 300: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.14015091955661774
    2. 'est' → logprob: -2.265151023864746
    3. '   ' → logprob: -4.015151023864746
    4. ' is' → logprob: -4.890151023864746
    5. ':' → logprob: -6.890151023864746
    6. '#' → logprob: -9.390151023864746
    7. 'rem' → logprob: -10.015151023864746
    8. ' ' → logprob: -10.265151023864746
    9. 'n' → logprob: -10.640151023864746
    10. '  ' → logprob: -11.015151023864746

Token 301: ' rempl' (ID: 66326)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.3621993362903595
    2. 'v' → logprob: -1.362199306488037
    3. ' rempl' → logprob: -3.362199306488037
    4. 's' → logprob: -4.487199306488037
    5. 'True' → logprob: -7.612199306488037
    6. 'respect' → logprob: -8.112199783325195
    7. 'ver' → logprob: -8.237199783325195
    8. 'ré' → logprob: -8.487199783325195
    9. 'true' → logprob: -8.487199783325195
    10. ' vraie' → logprob: -9.737199783325195

Token 302: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0006131939589977264
    2. 'lie' → logprob: -7.750613212585449
    3. 'ise' → logprob: -9.12561321258545
    4. 'tie' → logprob: -10.62561321258545
    5. 'pie' → logprob: -11.62561321258545
    6. 'nie' → logprob: -11.62561321258545
    7. 'pl' → logprob: -11.62561321258545
    8. 'ite' → logprob: -11.75061321258545
    9. 'p' → logprob: -12.75061321258545
    10. 'IE' → logprob: -13.50061321258545

Token 303: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09011215716600418
    2. ',' → logprob: -2.4651122093200684
    3. ':' → logprob: -7.715112209320068
    4. 'print' → logprob: -7.965112209320068
    5. ' print' → logprob: -8.34011173248291
    6. '       ' → logprob: -8.96511173248291
    7. ' ,' → logprob: -12.09011173248291
    8. ':
' → logprob: -13.21511173248291
    9. '   ' → logprob: -13.34011173248291
    10. '    
' → logprob: -14.71511173248291

Token 304: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5315614938735962
    2. 'print' → logprob: -0.9065614938735962
    3. '   ' → logprob: -4.781561374664307
    4. ' ' → logprob: -11.656561851501465
    5. '	print' → logprob: -12.531561851501465
    6. '  ' → logprob: -12.531561851501465
    7. ' ' → logprob: -13.406561851501465
    8. '    ' → logprob: -14.406561851501465
    9. '
' → logprob: -14.656561851501465
    10. '```' → logprob: -15.031561851501465

Token 305: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00872412882745266
    2. '"' → logprob: -4.758724212646484
    3. ' "' → logprob: -9.883724212646484
    4. '(' → logprob: -10.258724212646484
    5. ' ("' → logprob: -12.258724212646484
    6. 'Yes' → logprob: -12.258724212646484
    7. '   ' → logprob: -12.883724212646484
    8. 'print' → logprob: -12.883724212646484
    9. '"You' → logprob: -13.008724212646484
    10. '('' → logprob: -13.133724212646484

Token 306: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.014293139800429344
    2. '"' → logprob: -4.264293193817139
    3. 'No' → logprob: -9.26429271697998
    4. '"No' → logprob: -11.51429271697998
    5. '“Yes' → logprob: -12.26429271697998
    6. ' Yes' → logprob: -12.38929271697998
    7. '("' → logprob: -12.76429271697998
    8. ''' → logprob: -13.13929271697998
    9. 'YES' → logprob: -13.38929271697998
    10. 'Oui' → logprob: -13.76429271697998

Token 307: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.033731453120708466
    2. '"' → logprob: -3.533731460571289
    3. '("' → logprob: -5.533731460571289
    4. '")
' → logprob: -11.283731460571289
    5. '()' → logprob: -12.283731460571289
    6. ')' → logprob: -13.158731460571289
    7. 'print' → logprob: -14.408731460571289
    8. '```' → logprob: -14.783731460571289
    9. '("")' → logprob: -15.033731460571289
    10. ' ")' → logprob: -15.033731460571289

Token 308: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21136432886123657
    2. 'print' → logprob: -1.7113642692565918
    3. '("' → logprob: -5.086364269256592
    4. ' print' → logprob: -6.336364269256592
    5. '```' → logprob: -7.461364269256592
    6. '
' → logprob: -7.711364269256592
    7. '(print' → logprob: -8.33636474609375
    8. '()' → logprob: -8.58636474609375
    9. '(' → logprob: -9.08636474609375
    10. '(
' → logprob: -9.46136474609375

Token 309: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03844386711716652
    2. '("' → logprob: -4.0384440422058105
    3. 'l' → logprob: -4.4134440422058105
    4. 'la' → logprob: -5.0384440422058105
    5. '"' → logprob: -6.7884440422058105
    6. ' l' → logprob: -9.288443565368652
    7. '
' → logprob: -9.663443565368652
    8. '(print' → logprob: -9.663443565368652
    9. ' print' → logprob: -10.413443565368652
    10. '(' → logprob: -10.663443565368652

Token 310: ''écran' (ID: 147901)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001431114797014743
    2. '("' → logprob: -9.625143051147461
    3. '"' → logprob: -10.375143051147461
    4. '   ' → logprob: -11.125143051147461
    5. ' print' → logprob: -11.125143051147461
    6. 'Yes' → logprob: -11.500143051147461
    7. 'creen' → logprob: -13.250143051147461
    8. 'screen' → logprob: -13.250143051147461
    9. 'out' → logprob: -14.875143051147461
    10. 'output' → logprob: -15.125143051147461

Token 311: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017517358355689794
    2. '
' → logprob: -9.500175476074219
    3. '       ' → logprob: -9.500175476074219
    4. 'print' → logprob: -10.875175476074219
    5. '```' → logprob: -12.375175476074219
    6. ' print' → logprob: -13.750175476074219
    7. '    
' → logprob: -14.250175476074219
    8. '   ' → logprob: -15.125175476074219
    9. '  ' → logprob: -16.62517547607422
    10. '    ' → logprob: -17.62517547607422

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017040544480551034
    2. 'print' → logprob: -8.750170707702637
    3. ' print' → logprob: -11.500170707702637
    4. '```' → logprob: -13.375170707702637
    5. '       ' → logprob: -16.62516975402832
    6. '
' → logprob: -17.87516975402832
    7. '   ' → logprob: -18.25016975402832
    8. '	print' → logprob: -18.75016975402832
    9. '    
' → logprob: -19.00016975402832
    10. '  ' → logprob: -20.25016975402832

Token 313: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005987849435769022
    2. ' print' → logprob: -7.500598907470703
    3. '   ' → logprob: -10.000598907470703
    4. '```' → logprob: -14.875598907470703
    5. '	print' → logprob: -17.625598907470703
    6. '``' → logprob: -19.875598907470703
    7. '.print' → logprob: -20.375598907470703
    8. 'Print' → logprob: -20.500598907470703
    9. '(print' → logprob: -20.750598907470703
    10. '
' → logprob: -21.125598907470703

Token 314: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.25001335144043
    3. '('' → logprob: -18.50001335144043
    4. '()' → logprob: -20.50001335144043
    5. '(
' → logprob: -20.62501335144043
    6. '("""' → logprob: -20.87501335144043
    7. ' ("' → logprob: -21.75001335144043
    8. '("")' → logprob: -22.12501335144043
    9. '(

' → logprob: -22.25001335144043
    10. '(("' → logprob: -22.37501335144043

Token 315: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.5332478142227046e-05
    2. '"' → logprob: -11.125015258789062
    3. ' Yes' → logprob: -14.625015258789062
    4. '“Yes' → logprob: -16.500015258789062
    5. '\"' → logprob: -16.625015258789062
    6. 'YES' → logprob: -18.750015258789062
    7. 'Hello' → logprob: -19.125015258789062
    8. '"""' → logprob: -19.375015258789062
    9. '```' → logprob: -19.500015258789062
    10. '("' → logprob: -19.625015258789062

Token 316: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00011355629976605996
    2. ')' → logprob: -9.625113487243652
    3. '")
' → logprob: -10.000113487243652
    4. ')")' → logprob: -13.625113487243652
    5. 'else' → logprob: -14.625113487243652
    6. '")

' → logprob: -16.00011444091797
    7. '"' → logprob: -16.50011444091797
    8. '')' → logprob: -16.87511444091797
    9. '}")' → logprob: -17.25011444091797
    10. ' ")' → logprob: -17.25011444091797

Token 317: '#' (ID: 2)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.03836631774902344
    2. 'else' → logprob: -3.2883663177490234
    3. '#' → logprob: -8.038366317749023
    4. '#elif' → logprob: -13.788366317749023
    5. '```' → logprob: -14.913366317749023
    6. 'el' → logprob: -15.163366317749023
    7. ' elif' → logprob: -15.413366317749023
    8. 'elseif' → logprob: -16.788366317749023
    9. ' else' → logprob: -17.163366317749023
    10. '#else' → logprob: -17.288366317749023

Token 318: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47408896684646606
    2. 'elif' → logprob: -0.9740889668464661
    3. '#' → logprob: -11.474088668823242
    4. ' else' → logprob: -14.224088668823242
    5. '#elif' → logprob: -15.349088668823242
    6. 'el' → logprob: -15.474088668823242
    7. ' elif' → logprob: -15.849088668823242
    8. 'elseif' → logprob: -15.974088668823242
    9. '#else' → logprob: -16.224088668823242
    10. 'elsif' → logprob: -16.224088668823242

Token 319: ' aucune' (ID: 51173)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.31555160880088806
    2. ' B' → logprob: -1.3155516386032104
    3. 'A' → logprob: -6.5655517578125
    4. ' A' → logprob: -7.1905517578125
    5. 'not' → logprob: -9.6905517578125
    6. ' not' → logprob: -9.9405517578125
    7. ' ' → logprob: -12.1905517578125
    8. 'else' → logprob: -12.8155517578125
    9. 'elif' → logprob: -12.9405517578125
    10. '(B' → logprob: -13.9405517578125

Token 320: ' des' (ID: 731)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.480876088142395
    2. ' des' → logprob: -1.730876088142395
    3. ' autre' → logprob: -2.3558759689331055
    4. ' elif' → logprob: -3.4808759689331055
    5. 'else' → logprob: -3.6058759689331055
    6. '   ' → logprob: -4.7308759689331055
    7. ' of' → logprob: -4.7308759689331055
    8. 'des' → logprob: -5.1058759689331055
    9. ' not' → logprob: -5.2308759689331055
    10. '#' → logprob: -5.4808759689331055

Token 321: ' précéd' (ID: 55435)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.012091279961168766
    2. 'condition' → logprob: -5.387091159820557
    3. ' conditions' → logprob: -5.512091159820557
    4. 'cond' → logprob: -6.012091159820557
    5. 'de' → logprob: -7.887091159820557
    6. ' deux' → logprob: -8.637091636657715
    7. '#' → logprob: -9.137091636657715
    8. '2' → logprob: -9.387091636657715
    9. 'elif' → logprob: -10.137091636657715
    10. '```' → logprob: -10.387091636657715

Token 322: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.0007953316089697182
    2. 'ente' → logprob: -7.625795364379883
    3. 'ent' → logprob: -8.250795364379883
    4. 'ents' → logprob: -10.250795364379883
    5. '#' → logprob: -11.500795364379883
    6. 'ENTES' → logprob: -15.000795364379883
    7. ')' → logprob: -16.875795364379883
    8. '

' → logprob: -17.000795364379883
    9. '```' → logprob: -17.125795364379883
    10. '>' → logprob: -17.250795364379883

Token 323: ' conditions' (ID: 6409)
  Prédit: ' conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.5838274359703064
    2. 'conditions' → logprob: -0.8338274359703064
    3. 'condition' → logprob: -4.958827495574951
    4. 'elif' → logprob: -8.333827018737793
    5. ' condition' → logprob: -8.583827018737793
    6. 'if' → logprob: -8.958827018737793
    7. 'cond' → logprob: -9.083827018737793
    8. '条件' → logprob: -9.458827018737793
    9. '_conditions' → logprob: -9.958827018737793
    10. 'conds' → logprob: -11.583827018737793

Token 324: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47173944115638733
    2. ' n' → logprob: -1.471739411354065
    3. ':' → logprob: -1.971739411354065
    4. 'elif' → logprob: -5.846739292144775
    5. 'else' → logprob: -6.346739292144775
    6. 'est' → logprob: -6.971739292144775
    7. '   ' → logprob: -7.346739292144775
    8. '#' → logprob: -8.346739768981934
    9. ' isn't' → logprob: -8.971739768981934
    10. '```' → logprob: -8.971739768981934

Token 325: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.6523376703262329
    2. 'est' → logprob: -0.7773376703262329
    3. '#' → logprob: -5.027337551116943
    4. 'elif' → logprob: -5.402337551116943
    5. '’est' → logprob: -5.902337551116943
    6. 'pas' → logprob: -6.027337551116943
    7. 'n' → logprob: -7.027337551116943
    8. 'e' → logprob: -7.027337551116943
    9. ' est' → logprob: -8.777338027954102
    10. 'ont' → logprob: -8.902338027954102

Token 326: ' satis' (ID: 56317)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.21827374398708344
    2. 's' → logprob: -1.8432737588882446
    3. 'v' → logprob: -3.343273639678955
    4. 'rem' → logprob: -6.968273639678955
    5. 'True' → logprob: -7.718273639678955
    6. ' pas' → logprob: -7.843273639678955
    7. '```' → logprob: -8.593274116516113
    8. 'valid' → logprob: -9.218274116516113
    9. 'true' → logprob: -9.218274116516113
    10. ' rempl' → logprob: -9.593274116516113

Token 327: 'faite' (ID: 69848)
  Prédit: 'faite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faite' → logprob: -0.050833817571401596
    2. 'fait' → logprob: -3.1758337020874023
    3. 'f' → logprob: -4.925833702087402
    4. 'fa' → logprob: -7.800833702087402
    5. 'faire' → logprob: -9.675833702087402
    6. 'fi' → logprob: -10.175833702087402
    7. 'faits' → logprob: -10.925833702087402
    8. 'fia' → logprob: -12.050833702087402
    9. '#' → logprob: -12.675833702087402
    10. 'fac' → logprob: -13.050833702087402

Token 328: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26425713300704956
    2. 'else' → logprob: -1.5142571926116943
    3. ':
' → logprob: -4.889256954193115
    4. 'elif' → logprob: -5.389256954193115
    5. ' else' → logprob: -9.389257431030273
    6. ',' → logprob: -9.764257431030273
    7. ':

' → logprob: -12.264257431030273
    8. 'print' → logprob: -13.014257431030273
    9. 'and' → logprob: -13.264257431030273
    10. '_else' → logprob: -13.389257431030273

Token 329: ' vér' (ID: 42524)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.41669201850891113
    2. 'elif' → logprob: -1.1666920185089111
    3. 'print' → logprob: -3.541692018508911
    4. ':' → logprob: -9.166691780090332
    5. '```' → logprob: -9.416691780090332
    6. ' print' → logprob: -9.541691780090332
    7. ' else' → logprob: -9.791691780090332
    8. '#' → logprob: -9.916691780090332
    9. 'if' → logprob: -10.166691780090332
    10. ' elif' → logprob: -11.916691780090332

Token 330: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.2136438637971878
    2. 'if' → logprob: -2.463643789291382
    3. 'ifiez' → logprob: -3.963643789291382
    4. 'ont' → logprob: -4.463644027709961
    5. 'print' → logprob: -4.713644027709961
    6. 'ifiant' → logprob: -4.838644027709961
    7. 'éf' → logprob: -5.088644027709961
    8. 'f' → logprob: -5.213644027709961
    9. 'rif' → logprob: -5.338644027709961
    10. '#' → logprob: -5.588644027709961

Token 331: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.31411853432655334
    2. ' B' → logprob: -1.314118504524231
    3. 'elif' → logprob: -7.939118385314941
    4. 'if' → logprob: -9.064118385314941
    5. 'not' → logprob: -9.064118385314941
    6. '#' → logprob: -9.564118385314941
    7. 'la' → logprob: -9.689118385314941
    8. '(B' → logprob: -10.189118385314941
    9. ' not' → logprob: -10.689118385314941
    10. ' la' → logprob: -10.689118385314941

Token 332: ' condition' (ID: 7060)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1308830976486206
    2. 'elif' → logprob: -2.13088321685791
    3. 'else' → logprob: -5.75588321685791
    4. ' B' → logprob: -8.00588321685791
    5. 'C' → logprob: -8.38088321685791
    6. 'not' → logprob: -10.00588321685791
    7. '#' → logprob: -10.38088321685791
    8. 'last' → logprob: -11.00588321685791
    9. 'third' → logprob: -11.13088321685791
    10. '```' → logprob: -11.25588321685791

Token 333: ' suivante' (ID: 107439)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.02361590974032879
    2. '#' → logprob: -4.023615837097168
    3. 'else' → logprob: -5.898615837097168
    4. ' elif' → logprob: -6.773615837097168
    5. ' suivante' → logprob: -7.148615837097168
    6. 's' → logprob: -7.648615837097168
    7. '```' → logprob: -9.023615837097168
    8. 'if' → logprob: -9.398615837097168
    9. ':' → logprob: -10.148615837097168
    10. ' #' → logprob: -11.148615837097168

Token 334: ' :
' (ID: 10039)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0004213786742184311
    2. ':' → logprob: -8.625421524047852
    3. ' elif' → logprob: -9.375421524047852
    4. 'if' → logprob: -9.500421524047852
    5. ':
' → logprob: -10.125421524047852
    6. '```' → logprob: -10.750421524047852
    7. 'el' → logprob: -12.375421524047852
    8. 'B' → logprob: -12.625421524047852
    9. '#' → logprob: -12.750421524047852
    10. '   ' → logprob: -13.125421524047852

Token 335: '#' (ID: 2)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0002135534887202084
    2. 'B' → logprob: -8.500213623046875
    3. '```' → logprob: -12.000213623046875
    4. ' elif' → logprob: -13.000213623046875
    5. ' B' → logprob: -13.750213623046875
    6. 'if' → logprob: -15.125213623046875
    7. '   ' → logprob: -16.375213623046875
    8. 'el' → logprob: -16.875213623046875
    9. '(B' → logprob: -17.000213623046875
    10. 'elseif' → logprob: -17.125213623046875

Token 336: ' -' (ID: 533)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00867461133748293
    2. ' B' → logprob: -5.008674621582031
    3. 'elif' → logprob: -6.258674621582031
    4. '   ' → logprob: -11.508674621582031
    5. 'A' → logprob: -11.883674621582031
    6. 'if' → logprob: -12.008674621582031
    7. 'C' → logprob: -12.508674621582031
    8. 'else' → logprob: -12.633674621582031
    9. '```' → logprob: -13.008674621582031
    10. 'b' → logprob: -13.008674621582031

Token 337: ' C' (ID: 363)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.259079363080673e-05
    2. ' B' → logprob: -11.500012397766113
    3. 'A' → logprob: -13.750012397766113
    4. 'C' → logprob: -13.875012397766113
    5. 'b' → logprob: -15.125012397766113
    6. 'not' → logprob: -16.37501335144043
    7. '#' → logprob: -16.87501335144043
    8. '	B' → logprob: -18.00001335144043
    9. 'elif' → logprob: -18.25001335144043
    10. ' ' → logprob: -18.25001335144043

Token 338: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3021477460861206
    2. ' ==' → logprob: -1.6771477460861206
    3. '!=' → logprob: -2.92714786529541
    4. ' !=' → logprob: -3.92714786529541
    5. '=' → logprob: -9.30214786529541
    6. '#' → logprob: -9.30214786529541
    7. 'is' → logprob: -9.55214786529541
    8. 'elif' → logprob: -9.92714786529541
    9. 's' → logprob: -10.05214786529541
    10. '```' → logprob: -10.05214786529541

Token 339: ' égal' (ID: 15059)
  Prédit: ' différent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différent' → logprob: -0.25113633275032043
    2. ' égal' → logprob: -1.751136302947998
    3. 'diff' → logprob: -4.501136302947998
    4. ' equal' → logprob: -4.626136302947998
    5. 'égal' → logprob: -4.626136302947998
    6. '==' → logprob: -5.751136302947998
    7. 'equal' → logprob: -5.876136302947998
    8. ' different' → logprob: -6.001136302947998
    9. 'different' → logprob: -6.001136302947998
    10. 'not' → logprob: -6.126136302947998

Token 340: ' à' (ID: 1221)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004156637471169233
    2. 'to' → logprob: -6.254156589508057
    3. ' à' → logprob: -6.629156589508057
    4. ' B' → logprob: -7.629156589508057
    5. 'à' → logprob: -8.379157066345215
    6. 'A' → logprob: -9.629157066345215
    7. ' to' → logprob: -9.754157066345215
    8. ' ' → logprob: -10.254157066345215
    9. '#' → logprob: -11.754157066345215
    10. '=' → logprob: -12.129157066345215

Token 341: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.129266067640856e-05
    2. ' B' → logprob: -11.000020980834961
    3. 'A' → logprob: -12.375020980834961
    4. 'b' → logprob: -14.750020980834961
    5. '"B' → logprob: -18.50002098083496
    6. ' ' → logprob: -18.75002098083496
    7. '	B' → logprob: -18.75002098083496
    8. '1' → logprob: -20.12502098083496
    9. 'a' → logprob: -20.25002098083496
    10. '```' → logprob: -20.37502098083496

Token 342: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3135280907154083
    2. 'and' → logprob: -1.313528060913086
    3. 'if' → logprob: -8.813528060913086
    4. '==' → logprob: -9.688528060913086
    5. ' ==' → logprob: -10.688528060913086
    6. 'elif' → logprob: -10.688528060913086
    7. ' (' → logprob: -12.313528060913086
    8. ' ' → logprob: -13.063528060913086
    9. '```' → logprob: -13.438528060913086
    10. ' if' → logprob: -13.938528060913086

Token 343: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.06369739770889282
    2. ' C' → logprob: -2.813697338104248
    3. 'B' → logprob: -6.438697338104248
    4. ' B' → logprob: -9.938697814941406
    5. ')' → logprob: -10.438697814941406
    6. 'c' → logprob: -11.188697814941406
    7. ' ' → logprob: -11.563697814941406
    8. ' (' → logprob: -12.188697814941406
    9. '(C' → logprob: -12.438697814941406
    10. '  ' → logprob: -12.688697814941406

Token 344: ' ==' (ID: 951)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2767057418823242
    2. '==' → logprob: -2.276705741882324
    3. ' ==' → logprob: -2.276705741882324
    4. 'and' → logprob: -3.401705741882324
    5. ')' → logprob: -5.776705741882324
    6. ' ' → logprob: -10.526705741882324
    7. ')==' → logprob: -10.901705741882324
    8. ' )' → logprob: -11.401705741882324
    9. '```' → logprob: -13.526705741882324
    10. 'if' → logprob: -13.776705741882324

Token 345: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.008618474006652832
    2. ' B' → logprob: -4.758618354797363
    3. 'A' → logprob: -12.508618354797363
    4. ')' → logprob: -15.508618354797363
    5. ' ' → logprob: -16.75861930847168
    6. 'b' → logprob: -17.00861930847168
    7. ' A' → logprob: -17.13361930847168
    8. '	B' → logprob: -18.00861930847168
    9. '>B' → logprob: -18.25861930847168
    10. '<|end|>' → logprob: -18.25861930847168

Token 346: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011691815219819546
    2. ' and' → logprob: -4.636692047119141
    3. ' )' → logprob: -6.636692047119141
    4. 'and' → logprob: -7.386692047119141
    5. '#' → logprob: -13.63669204711914
    6. '")' → logprob: -14.51169204711914
    7. ' ' → logprob: -14.88669204711914
    8. '`)' → logprob: -15.26169204711914
    9. ')
' → logprob: -15.38669204711914
    10. '),' → logprob: -16.13669204711914

Token 347: ' :' (ID: 712)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25192946195602417
    2. 'and' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.12692928314209
    4. ' ' → logprob: -17.501930236816406
    5. '#' → logprob: -17.626930236816406
    6. ',' → logprob: -18.126930236816406
    7. ')' → logprob: -18.626930236816406
    8. '	and' → logprob: -18.751930236816406
    9. '```' → logprob: -19.251930236816406
    10. 'if' → logprob: -19.376930236816406

Token 348: ' la' (ID: 557)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05892906337976456
    2. 'and' → logprob: -3.058928966522217
    3. ' C' → logprob: -5.058928966522217
    4. 'C' → logprob: -6.183928966522217
    5. ' B' → logprob: -6.683928966522217
    6. 'B' → logprob: -7.558928966522217
    7. ' ' → logprob: -9.558929443359375
    8. '#' → logprob: -12.058929443359375
    9. '  ' → logprob: -12.308929443359375
    10. ' ' → logprob: -12.308929443359375

Token 349: ' deuxième' (ID: 51664)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6591845154762268
    2. 'and' → logprob: -1.284184455871582
    3. 'C' → logprob: -2.284184455871582
    4. ' C' → logprob: -2.784184455871582
    5. 'B' → logprob: -3.659184455871582
    6. ' B' → logprob: -4.284184455871582
    7. 'print' → logprob: -6.784184455871582
    8. '#' → logprob: -7.659184455871582
    9. 'b' → logprob: -8.409184455871582
    10. 'A' → logprob: -8.659184455871582

Token 350: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016047270968556404
    2. 'and' → logprob: -4.141047477722168
    3. ')' → logprob: -12.266047477722168
    4. ' ' → logprob: -12.516047477722168
    5. ' et' → logprob: -13.016047477722168
    6. ' !=' → logprob: -13.766047477722168
    7. ' or' → logprob: -14.516047477722168
    8. 'et' → logprob: -15.141047477722168
    9. ' )' → logprob: -15.766047477722168
    10. '!=' → logprob: -16.01604652404785

Token 351: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5629994869232178
    2. 'B' → logprob: -1.1879994869232178
    3. ' A' → logprob: -2.5629994869232178
    4. ' B' → logprob: -3.4379994869232178
    5. 'C' → logprob: -4.187999725341797
    6. ' C' → logprob: -6.687999725341797
    7. ' ' → logprob: -10.437999725341797
    8. '	A' → logprob: -12.812999725341797
    9. '  ' → logprob: -12.812999725341797
    10. ')' → logprob: -13.312999725341797

Token 352: ' troisième' (ID: 75373)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7194855809211731
    2. 'C' → logprob: -0.8444855809211731
    3. 'B' → logprob: -3.2194855213165283
    4. 'first' → logprob: -3.7194855213165283
    5. 'third' → logprob: -5.094485759735107
    6. ' first' → logprob: -5.344485759735107
    7. 'prem' → logprob: -5.594485759735107
    8. ' première' → logprob: -6.719485759735107
    9. '#' → logprob: -7.094485759735107
    10. 'print' → logprob: -7.094485759735107

Token 353: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.15375496447086334
    2. ' valeur' → logprob: -2.403754949569702
    3. ' valeurs' → logprob: -3.278754949569702
    4. 'value' → logprob: -4.778755187988281
    5. 'values' → logprob: -6.028755187988281
    6. ' value' → logprob: -6.403755187988281
    7. ' val' → logprob: -7.028755187988281
    8. ' values' → logprob: -7.528755187988281
    9. ' vale' → logprob: -8.403755187988281
    10. ' and' → logprob: -9.153755187988281

Token 354: ' sont' (ID: 5242)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005934131797403097
    2. 'and' → logprob: -5.255934238433838
    3. ')' → logprob: -7.505934238433838
    4. ' et' → logprob: -9.63093376159668
    5. ' are' → logprob: -9.63093376159668
    6. 'et' → logprob: -12.25593376159668
    7. ' ' → logprob: -12.38093376159668
    8. 'are' → logprob: -12.75593376159668
    9. ' ==' → logprob: -12.88093376159668
    10. ' )' → logprob: -13.50593376159668

Token 355: ' ident' (ID: 3951)
  Prédit: ' différentes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différentes' → logprob: -1.0733412504196167
    2. 'different' → logprob: -1.1983412504196167
    3. 'diff' → logprob: -1.6983412504196167
    4. ' different' → logprob: -2.0733413696289062
    5. ' différents' → logprob: -3.3233413696289062
    6. 'ident' → logprob: -5.198341369628906
    7. ' différent' → logprob: -6.323341369628906
    8. ' ident' → logprob: -6.698341369628906
    9. 'distinct' → logprob: -7.073341369628906
    10. 'd' → logprob: -7.198341369628906

Token 356: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.14399169385433197
    2. 'ques' → logprob: -2.018991708755493
    3. 'que' → logprob: -7.518991470336914
    4. 'ical' → logprob: -8.643991470336914
    5. 'f' → logprob: -8.768991470336914
    6. 'cal' → logprob: -9.143991470336914
    7. 'fi' → logprob: -9.393991470336914
    8. 'ales' → logprob: -9.518991470336914
    9. 'ique' → logprob: -9.643991470336914
    10. 'if' → logprob: -11.393991470336914

Token 357: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.038048841059207916
    2. 'and' → logprob: -3.28804874420166
    3. '#' → logprob: -12.66304874420166
    4. 'if' → logprob: -13.53804874420166
    5. ' ' → logprob: -13.78804874420166
    6. ')' → logprob: -14.16304874420166
    7. ' if' → logprob: -15.53804874420166
    8. '```' → logprob: -15.53804874420166
    9. ':' → logprob: -15.66304874420166
    10. ' #' → logprob: -15.78804874420166

Token 358: '#' (ID: 2)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759523510932922
    2. 'and' → logprob: -0.8259523510932922
    3. '#' → logprob: -11.575952529907227
    4. '```' → logprob: -12.950952529907227
    5. ' ' → logprob: -14.325952529907227
    6. 'if' → logprob: -15.700952529907227
    7. 'elif' → logprob: -16.200952529907227
    8. ' ' → logprob: -16.325952529907227
    9. ' #' → logprob: -17.075952529907227
    10. '   ' → logprob: -17.200952529907227

Token 359: ' -' (ID: 533)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519491910934448
    2. 'and' → logprob: -1.5019491910934448
    3. 'elif' → logprob: -10.876949310302734
    4. '```' → logprob: -14.376949310302734
    5. ' elif' → logprob: -15.626949310302734
    6. ' ' → logprob: -15.626949310302734
    7. 'et' → logprob: -16.751949310302734
    8. ' et' → logprob: -16.751949310302734
    9. ' ' → logprob: -16.876949310302734
    10. '#' → logprob: -17.876949310302734

Token 360: ' A' (ID: 355)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.4899095594882965
    2. 'A' → logprob: -0.9899095296859741
    3. 'B' → logprob: -4.989909648895264
    4. ' A' → logprob: -5.364909648895264
    5. ' C' → logprob: -5.489909648895264
    6. ' B' → logprob: -9.614909172058105
    7. 'c' → logprob: -11.489909172058105
    8. ' ' → logprob: -12.114909172058105
    9. 'a' → logprob: -13.052409172058105
    10. '	A' → logprob: -13.114909172058105

Token 361: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.47408831119537354
    2. '!=' → logprob: -0.9740883111953735
    3. ' is' → logprob: -11.974088668823242
    4. '!=(' → logprob: -14.099088668823242
    5. ' ' → logprob: -14.224088668823242
    6. '!='' → logprob: -14.224088668823242
    7. ')!=' → logprob: -14.599088668823242
    8. ' ' → logprob: -14.599088668823242
    9. ' not' → logprob: -14.974088668823242
    10. 'is' → logprob: -15.349088668823242

Token 362: ' différent' (ID: 114823)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1855337768793106
    2. 'not' → logprob: -2.3105337619781494
    3. ' !=' → logprob: -3.4355337619781494
    4. ' not' → logprob: -4.0605340003967285
    5. '!' → logprob: -4.6855340003967285
    6. ' different' → logprob: -5.4355340003967285
    7. 'different' → logprob: -5.8105340003967285
    8. ' différent' → logprob: -5.9355340003967285
    9. 'C' → logprob: -7.5605340003967285
    10. 'A' → logprob: -8.31053352355957

Token 363: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.310723900794983
    2. ' de' → logprob: -1.435723900794983
    3. '!=' → logprob: -2.0607237815856934
    4. ' from' → logprob: -2.0607237815856934
    5. ' !=' → logprob: -2.9357237815856934
    6. '=' → logprob: -2.9357237815856934
    7. ' ' → logprob: -3.0607237815856934
    8. '(' → logprob: -4.185723781585693
    9. ',' → logprob: -4.560723781585693
    10. ' ' → logprob: -4.560723781585693

Token 364: ' C' (ID: 363)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.005110541824251413
    2. 'C' → logprob: -5.755110740661621
    3. ' B' → logprob: -6.255110740661621
    4. ' C' → logprob: -11.505110740661621
    5. 'b' → logprob: -16.130109786987305
    6. '	B' → logprob: -16.255109786987305
    7. ' ' → logprob: -18.005109786987305
    8. 'A' → logprob: -19.380109786987305
    9. '```' → logprob: -19.380109786987305
    10. ' ' → logprob: -19.880109786987305

Token 365: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4513669013977051
    2. ' and' → logprob: -1.201366901397705
    3. 'and' → logprob: -2.951366901397705
    4. '(A' → logprob: -5.201366901397705
    5. '(' → logprob: -5.451366901397705
    6. '(C' → logprob: -8.201366424560547
    7. '(B' → logprob: -9.951366424560547
    8. ':' → logprob: -10.826366424560547
    9. 'if' → logprob: -10.951366424560547
    10. ' ' → logprob: -11.826366424560547

Token 366: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.016057128086686134
    2. ' A' → logprob: -4.141057014465332
    3. 'C' → logprob: -10.891057014465332
    4. ' ' → logprob: -13.766057014465332
    5. ')' → logprob: -14.141057014465332
    6. ' C' → logprob: -14.391057014465332
    7. 'a' → logprob: -14.516057014465332
    8. '   ' → logprob: -14.641057014465332
    9. 'B' → logprob: -15.641057014465332
    10. '```' → logprob: -15.641057014465332

Token 367: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1602327525615692
    2. '!=' → logprob: -1.9102327823638916
    3. ')' → logprob: -12.035232543945312
    4. ')!=' → logprob: -13.660232543945312
    5. ' ' → logprob: -14.410232543945312
    6. ' ' → logprob: -14.660232543945312
    7. '!=(' → logprob: -16.035232543945312
    8. '!='' → logprob: -16.535232543945312
    9. '!=-' → logprob: -16.535232543945312
    10. '#' → logprob: -16.660232543945312

Token 368: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005284877843223512
    2. ' C' → logprob: -7.625528335571289
    3. 'B' → logprob: -10.125528335571289
    4. ')' → logprob: -15.250528335571289
    5. 'A' → logprob: -16.87552833557129
    6. ' ' → logprob: -17.00052833557129
    7. ' B' → logprob: -18.37552833557129
    8. 'c' → logprob: -18.50052833557129
    9. '```' → logprob: -18.62552833557129
    10. '  ' → logprob: -19.12552833557129

Token 369: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1622975468635559
    2. '):
' → logprob: -1.9122974872589111
    3. ')' → logprob: -6.78729772567749
    4. ':' → logprob: -7.03729772567749
    5. '):

' → logprob: -10.287297248840332
    6. ':
' → logprob: -11.287297248840332
    7. ' ):' → logprob: -11.912297248840332
    8. '):
' → logprob: -12.037297248840332
    9. ' ):
' → logprob: -12.662297248840332
    10. '#' → logprob: -14.662297248840332

Token 370: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08142679929733276
    2. ':
' → logprob: -2.5814268589019775
    3. 'if' → logprob: -6.206426620483398
    4. ' and' → logprob: -7.956426620483398
    5. ' :' → logprob: -10.081426620483398
    6. 'and' → logprob: -10.206426620483398
    7. 'elif' → logprob: -10.206426620483398
    8. ' :
' → logprob: -10.956426620483398
    9. ':

' → logprob: -11.206426620483398
    10. ' if' → logprob: -11.206426620483398

Token 371: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9408151507377625
    2. ' print' → logprob: -1.0658152103424072
    3. ' A' → logprob: -1.8158152103424072
    4. '   ' → logprob: -2.9408152103424072
    5. 'A' → logprob: -3.0658152103424072
    6. ' ' → logprob: -6.690814971923828
    7. ' C' → logprob: -6.815814971923828
    8. 'C' → logprob: -8.190814971923828
    9. 'if' → logprob: -8.565814971923828
    10. '  ' → logprob: -9.315814971923828

Token 372: ' première' (ID: 23423)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22854438424110413
    2. 'A' → logprob: -1.8535443544387817
    3. '#' → logprob: -3.3535444736480713
    4. 'C' → logprob: -5.228544235229492
    5. ' print' → logprob: -6.103544235229492
    6. 'a' → logprob: -6.478544235229492
    7. 'prem' → logprob: -6.728544235229492
    8. ' A' → logprob: -7.853544235229492
    9. ' ' → logprob: -7.978544235229492
    10. '```' → logprob: -8.353544235229492

Token 373: ' et' (ID: 859)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.017687195912003517
    2. '!=' → logprob: -4.1426873207092285
    3. ' is' → logprob: -6.5176873207092285
    4. ')' → logprob: -9.26768684387207
    5. ' ' → logprob: -10.39268684387207
    6. ' )' → logprob: -10.89268684387207
    7. ' ' → logprob: -11.76768684387207
    8. 'is' → logprob: -12.64268684387207
    9. '  ' → logprob: -12.89268684387207
    10. ' and' → logprob: -13.01768684387207

Token 374: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.05316546559333801
    2. ' C' → logprob: -3.0531654357910156
    3. 'A' → logprob: -5.553165435791016
    4. ' A' → logprob: -7.803165435791016
    5. '<|end|>' → logprob: -9.053165435791016
    6. ' ' → logprob: -9.553165435791016
    7. 'B' → logprob: -9.678165435791016
    8. ' ' → logprob: -11.178165435791016
    9. '  ' → logprob: -12.428165435791016
    10. ' B' → logprob: -12.428165435791016

Token 375: ' troisième' (ID: 75373)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00161555758677423
    2. 'B' → logprob: -6.501615524291992
    3. ' C' → logprob: -9.751615524291992
    4. 'c' → logprob: -10.001615524291992
    5. 'A' → logprob: -12.626615524291992
    6. '```' → logprob: -12.626615524291992
    7. 'b' → logprob: -14.251615524291992
    8. '#' → logprob: -14.376615524291992
    9. '3' → logprob: -14.751615524291992
    10. ' ' → logprob: -14.876615524291992

Token 376: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.267197847366333
    2. 'val' → logprob: -1.517197847366333
    3. 'value' → logprob: -4.267197608947754
    4. ' value' → logprob: -7.017197608947754
    5. ' val' → logprob: -8.892197608947754
    6. ' valeurs' → logprob: -10.267197608947754
    7. ' vale' → logprob: -10.267197608947754
    8. ' ' → logprob: -12.392197608947754
    9. 'vale' → logprob: -12.517197608947754
    10. '.value' → logprob: -12.642197608947754

Token 377: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.1321837455034256
    2. ' are' → logprob: -2.507183790206909
    3. 'are' → logprob: -3.632183790206909
    4. ' est' → logprob: -4.50718355178833
    5. 's' → logprob: -6.25718355178833
    6. ')' → logprob: -6.88218355178833
    7. ' ' → logprob: -7.63218355178833
    8. '#' → logprob: -8.257184028625488
    9. ' !=' → logprob: -8.507184028625488
    10. ' ' → logprob: -8.882184028625488

Token 378: ' différentes' (ID: 41398)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.19925232231616974
    2. ' différent' → logprob: -2.1992523670196533
    3. 'different' → logprob: -2.6992523670196533
    4. ' different' → logprob: -6.074252128601074
    5. 'd' → logprob: -8.949252128601074
    6. ' diff' → logprob: -10.199252128601074
    7. ' différents' → logprob: -10.824252128601074
    8. ' différente' → logprob: -11.324252128601074
    9. ' différentes' → logprob: -12.199252128601074
    10. 'dif' → logprob: -12.824252128601074

Token 379: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06209854409098625
    2. 'elif' → logprob: -2.812098503112793
    3. ':' → logprob: -9.187098503112793
    4. 'and' → logprob: -10.562098503112793
    5. '```' → logprob: -14.187098503112793
    6. ' if' → logprob: -14.187098503112793
    7. ':
' → logprob: -14.437098503112793
    8. ' and' → logprob: -14.812098503112793
    9. 'else' → logprob: -14.812098503112793
    10. 'elseif' → logprob: -17.68709945678711

Token 380: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.00026419671485200524
    2. 'if' → logprob: -8.250264167785645
    3. 'el' → logprob: -13.000264167785645
    4. ' elif' → logprob: -15.375264167785645
    5. 'else' → logprob: -15.750264167785645
    6. 'and' → logprob: -16.25026512145996
    7. '```' → logprob: -16.37526512145996
    8. ':' → logprob: -16.50026512145996
    9. 'elseif' → logprob: -17.12526512145996
    10. 'elsif' → logprob: -18.12526512145996

Token 381: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.6093398928642273
    2. 'C' → logprob: -0.8593398928642273
    3. ' B' → logprob: -4.109339714050293
    4. 'B' → logprob: -4.109339714050293
    5. ' ' → logprob: -11.734339714050293
    6. '	C' → logprob: -13.484339714050293
    7. ' ' → logprob: -14.109339714050293
    8. '   ' → logprob: -14.609339714050293
    9. '  ' → logprob: -15.109339714050293
    10. 'c' → logprob: -15.234339714050293

Token 382: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12696464359760284
    2. ' ==' → logprob: -2.126964569091797
    3. '==
' → logprob: -10.251964569091797
    4. '=' → logprob: -13.876964569091797
    5. ' ' → logprob: -15.751964569091797
    6. ')==' → logprob: -16.626964569091797
    7. ' ==
' → logprob: -16.876964569091797
    8. ']==' → logprob: -17.376964569091797
    9. '===' → logprob: -17.376964569091797
    10. '```' → logprob: -17.751964569091797

Token 383: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00033546582562848926
    2. ' B' → logprob: -8.000335693359375
    3. ' ' → logprob: -19.125335693359375
    4. 'b' → logprob: -19.250335693359375
    5. '	B' → logprob: -19.875335693359375
    6. '>B' → logprob: -21.000335693359375
    7. 'A' → logprob: -21.625335693359375
    8. '"B' → logprob: -21.750335693359375
    9. '   ' → logprob: -22.000335693359375
    10. '<|end|>' → logprob: -22.500335693359375

Token 384: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011047935113310814
    2. 'and' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.26104736328125
    4. ' ' → logprob: -19.63604736328125
    5. '```' → logprob: -20.13604736328125
    6. ' и' → logprob: -20.63604736328125
    7. '	and' → logprob: -20.63604736328125
    8. ',' → logprob: -20.63604736328125
    9. '   ' → logprob: -20.88604736328125
    10. 'andr' → logprob: -21.13604736328125

Token 385: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2519303858280182
    2. ' A' → logprob: -1.5019303560256958
    3. 'C' → logprob: -15.126930236816406
    4. 'a' → logprob: -15.126930236816406
    5. ' ' → logprob: -15.126930236816406
    6. '   ' → logprob: -15.751930236816406
    7. '	A' → logprob: -16.001930236816406
    8. ' ' → logprob: -16.251930236816406
    9. ' a' → logprob: -17.376930236816406
    10. ' C' → logprob: -17.501930236816406

Token 386: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.12692926824092865
    2. '!=' → logprob: -2.12692928314209
    3. ')!=' → logprob: -15.12692928314209
    4. '()!=' → logprob: -15.12692928314209
    5. '!='' → logprob: -15.25192928314209
    6. ' ' → logprob: -16.376928329467773
    7. ' !' → logprob: -16.376928329467773
    8. '!=(' → logprob: -16.376928329467773
    9. ' ' → logprob: -16.501928329467773
    10. '!=-' → logprob: -16.751928329467773

Token 387: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00033546582562848926
    2. ' C' → logprob: -8.000335693359375
    3. ' ' → logprob: -18.500335693359375
    4. '	C' → logprob: -19.750335693359375
    5. 'c' → logprob: -20.000335693359375
    6. ''C' → logprob: -20.375335693359375
    7. 'B' → logprob: -20.875335693359375
    8. '"C' → logprob: -21.625335693359375
    9. '  ' → logprob: -21.750335693359375
    10. '_C' → logprob: -22.125335693359375

Token 388: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023250136524438858
    2. ':
' → logprob: -3.773250102996826
    3. '   ' → logprob: -13.148250579833984
    4. ' :' → logprob: -13.523250579833984
    5. ' :
' → logprob: -14.523250579833984
    6. ':
' → logprob: -14.648250579833984
    7. ':

' → logprob: -15.273250579833984
    8. '):
' → logprob: -16.523250579833984
    9. '):' → logprob: -17.023250579833984
    10. '=' → logprob: -17.648250579833984

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012106612848583609
    2. 'print' → logprob: -9.500121116638184
    3. ':' → logprob: -10.250121116638184
    4. ' print' → logprob: -11.625121116638184
    5. ':
' → logprob: -13.625121116638184
    6. '       ' → logprob: -15.625121116638184
    7. '	print' → logprob: -16.375120162963867
    8. '   ' → logprob: -16.375120162963867
    9. '```' → logprob: -16.500120162963867
    10. '    
' → logprob: -17.000120162963867

Token 390: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12822966277599335
    2. 'print' → logprob: -2.1282296180725098
    3. ' print' → logprob: -7.12822961807251
    4. '#' (adapté à ' #') → logprob: -7.62822961807251
    5. '
' → logprob: -11.878230094909668
    6. ' #' → logprob: -13.503230094909668
    7. '       ' → logprob: -13.753230094909668
    8. ' ' → logprob: -14.128230094909668
    9. '```' → logprob: -14.503230094909668
    10. '  ' → logprob: -14.628230094909668

Token 391: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07982301712036133
    2. '   ' → logprob: -2.9548230171203613
    3. ' print' → logprob: -3.7048230171203613
    4. '#' → logprob: -11.954822540283203
    5. ' ' → logprob: -11.954822540283203
    6. '
' → logprob: -12.579822540283203
    7. '  ' → logprob: -12.579822540283203
    8. '	print' → logprob: -12.829822540283203
    9. '       ' → logprob: -13.454822540283203
    10. '    ' → logprob: -13.829822540283203

Token 392: ' cette' (ID: 7696)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03660537302494049
    2. ' print' → logprob: -3.4116053581237793
    3. '   ' → logprob: -6.036605358123779
    4. 'True' → logprob: -9.036605834960938
    5. 'Yes' → logprob: -9.161605834960938
    6. ' True' → logprob: -9.286605834960938
    7. ' ' → logprob: -9.411605834960938
    8. '  ' → logprob: -9.786605834960938
    9. '
' → logprob: -10.661605834960938
    10. '(print' → logprob: -10.661605834960938

Token 393: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.03429374843835831
    2. 'print' → logprob: -4.1592936515808105
    3. ' condition' → logprob: -4.2842936515808105
    4. ':' → logprob: -5.9092936515808105
    5. '#' → logprob: -7.5342936515808105
    6. '   ' → logprob: -8.409294128417969
    7. ' ' → logprob: -8.784294128417969
    8. 'cond' → logprob: -8.909294128417969
    9. 'code' → logprob: -9.034294128417969
    10. 'conditions' → logprob: -9.909294128417969

Token 394: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17147327959537506
    2. '   ' → logprob: -1.9214732646942139
    3. ' print' → logprob: -5.421473503112793
    4. 'print' → logprob: -5.921473503112793
    5. ' est' → logprob: -6.171473503112793
    6. ':
' → logprob: -6.921473503112793
    7. ' is' → logprob: -7.296473503112793
    8. '  ' → logprob: -9.421473503112793
    9. ' :' → logprob: -9.671473503112793
    10. '    ' → logprob: -9.671473503112793

Token 395: ' rempl' (ID: 66326)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9527926445007324
    2. '   ' → logprob: -1.3277926445007324
    3. 'True' → logprob: -1.5777926445007324
    4. ' True' → logprob: -2.0777926445007324
    5. ' print' → logprob: -4.202792644500732
    6. 'Yes' → logprob: -6.952792644500732
    7. 'true' → logprob: -8.07779312133789
    8. ' vrai' → logprob: -8.45279312133789
    9. ' not' → logprob: -8.70279312133789
    10. '    ' → logprob: -9.07779312133789

Token 396: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.00015908108616713434
    2. 'i' → logprob: -9.50015926361084
    3. 'it' → logprob: -10.37515926361084
    4. 'lie' → logprob: -10.87515926361084
    5. 'tie' → logprob: -11.75015926361084
    6. '#' → logprob: -12.12515926361084
    7. 'is' → logprob: -12.37515926361084
    8. 'ise' → logprob: -12.75015926361084
    9. 'iev' → logprob: -13.25015926361084
    10. 'die' → logprob: -13.75015926361084

Token 397: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016238702461123466
    2. ',' → logprob: -4.391238689422607
    3. '       ' → logprob: -6.141238689422607
    4. ':' → logprob: -6.641238689422607
    5. 'print' → logprob: -8.391239166259766
    6. ' print' → logprob: -10.766239166259766
    7. ' ,' → logprob: -12.516239166259766
    8. ':
' → logprob: -12.641239166259766
    9. '    ' → logprob: -12.766239166259766
    10. '  ' → logprob: -13.016239166259766

Token 398: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.045323994010686874
    2. ' print' → logprob: -3.5453240871429443
    3. '   ' → logprob: -4.170323848724365
    4. '	print' → logprob: -12.920324325561523
    5. ' ' → logprob: -13.795324325561523
    6. '       ' → logprob: -14.045324325561523
    7. '  ' → logprob: -14.170324325561523
    8. '    ' → logprob: -15.295324325561523
    9. '```' → logprob: -15.670324325561523
    10. '   ' → logprob: -16.670324325561523

Token 399: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.629921436891891e-05
    2. '"' → logprob: -11.25002670288086
    3. '(' → logprob: -11.25002670288086
    4. '('' → logprob: -15.62502670288086
    5. 'Yes' → logprob: -16.50002670288086
    6. 'print' → logprob: -17.87502670288086
    7. ' "' → logprob: -18.50002670288086
    8. ' ("' → logprob: -18.62502670288086
    9. '(
' → logprob: -19.25002670288086
    10. '"You' → logprob: -19.62502670288086

Token 400: 'Yes' (ID: 13022)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.061981916427612305
    2. 'Yes' → logprob: -2.8119819164276123
    3. '“Yes' → logprob: -11.686982154846191
    4. ''' → logprob: -12.936982154846191
    5. '("' → logprob: -13.061982154846191
    6. '"You' → logprob: -14.936982154846191
    7. ' Yes' → logprob: -15.061982154846191
    8. '"No' → logprob: -15.436982154846191
    9. 'print' → logprob: -16.186981201171875
    10. '```' → logprob: -16.686981201171875

Token 401: '"
' (ID: 1092)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.050685618072748184
    2. '")' → logprob: -3.5506856441497803
    3. '"' → logprob: -4.300685405731201
    4. '()' → logprob: -5.050685405731201
    5. 'print' → logprob: -7.550685405731201
    6. '("")' → logprob: -9.05068588256836
    7. '(' → logprob: -9.92568588256836
    8. '   ' → logprob: -11.05068588256836
    9. ' print' → logprob: -11.55068588256836
    10. '()"' → logprob: -11.55068588256836

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030033372342586517
    2. 'print' → logprob: -3.5300333499908447
    3. '       ' → logprob: -8.280033111572266
    4. ' print' → logprob: -10.655033111572266
    5. '```' → logprob: -12.405033111572266
    6. '
' → logprob: -13.905033111572266
    7. '	print' → logprob: -15.405033111572266
    8. '   ' → logprob: -15.655033111572266
    9. '           ' → logprob: -16.030033111572266
    10. '  ' → logprob: -16.530033111572266

Token 403: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00015979631280060858
    2. '   ' → logprob: -9.375160217285156
    3. ' print' → logprob: -9.500160217285156
    4. '	print' → logprob: -17.000160217285156
    5. '```' → logprob: -17.250160217285156
    6. ' ' → logprob: -18.500160217285156
    7. '  ' → logprob: -18.625160217285156
    8. '       ' → logprob: -19.125160217285156
    9. 'printf' → logprob: -19.250160217285156
    10. '
' → logprob: -19.625160217285156

Token 404: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.000553151941858232
    2. '(' → logprob: -7.500553131103516
    3. '("("' → logprob: -16.375553131103516
    4. '('' → logprob: -16.750553131103516
    5. '("")' → logprob: -17.625553131103516
    6. '()' → logprob: -18.125553131103516
    7. '(
' → logprob: -18.125553131103516
    8. '("""' → logprob: -18.875553131103516
    9. ' ("' → logprob: -19.375553131103516
    10. '("="' → logprob: -20.625553131103516

Token 405: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.005257952958345413
    2. '"' → logprob: -5.255258083343506
    3. '("' → logprob: -10.880257606506348
    4. 'No' → logprob: -12.755257606506348
    5. ' Yes' → logprob: -13.755257606506348
    6. '“Yes' → logprob: -14.130257606506348
    7. '"No' → logprob: -15.130257606506348
    8. '(' → logprob: -16.130258560180664
    9. '")' → logprob: -16.380258560180664
    10. '.Yes' → logprob: -17.255258560180664

Token 406: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.018186001107096672
    2. '")
' → logprob: -4.018186092376709
    3. ')' → logprob: -10.64318561553955
    4. 'else' → logprob: -12.26818561553955
    5. ')
' → logprob: -13.14318561553955
    6. '")

' → logprob: -13.39318561553955
    7. '"' → logprob: -13.39318561553955
    8. '()' → logprob: -14.26818561553955
    9. '")
' → logprob: -14.26818561553955
    10. ')")' → logprob: -14.26818561553955

Token 407: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.5048530030981055e-06
    2. ' else' → logprob: -13.500001907348633
    3. '#else' → logprob: -18.000001907348633
    4. 'elif' → logprob: -18.000001907348633
    5. '```' → logprob: -18.500001907348633
    6. 'elser' → logprob: -20.625001907348633
    7. '	else' → logprob: -21.250001907348633
    8. '#' → logprob: -21.375001907348633
    9. 'elses' → logprob: -21.375001907348633
    10. '}else' → logprob: -21.375001907348633

Token 408: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.1472419600977446e-06
    2. ' else' → logprob: -13.875000953674316
    3. 'elif' → logprob: -16.250001907348633
    4. '#else' → logprob: -18.625001907348633
    5. 'Else' → logprob: -20.125001907348633
    6. 'elser' → logprob: -20.125001907348633
    7. '#' → logprob: -20.125001907348633
    8. 'els' → logprob: -20.250001907348633
    9. '```' → logprob: -20.250001907348633
    10. 'elses' → logprob: -20.875001907348633

Token 409: ' aucune' (ID: 51173)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.133442997932434
    2. ' not' → logprob: -1.133442997932434
    3. 'A' → logprob: -1.258442997932434
    4. 'not' → logprob: -3.1334428787231445
    5. 'else' → logprob: -4.1334428787231445
    6. ' none' → logprob: -5.5084428787231445
    7. ' else' → logprob: -6.0084428787231445
    8. ' all' → logprob: -6.1334428787231445
    9. 'None' → logprob: -7.0084428787231445
    10. 'none' → logprob: -7.0084428787231445

Token 410: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.611371636390686
    2. ' autre' → logprob: -1.986371636390686
    3. 'else' → logprob: -2.2363715171813965
    4. 'des' → logprob: -2.9863715171813965
    5. ' ' → logprob: -3.6113715171813965
    6. ' of' → logprob: -3.6113715171813965
    7. 'n' → logprob: -3.7363715171813965
    8. ' else' → logprob: -4.1113715171813965
    9. ' other' → logprob: -4.2363715171813965
    10. ' n' → logprob: -4.2363715171813965

Token 411: ' conditions' (ID: 6409)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.035407356917858124
    2. 'cond' → logprob: -3.535407304763794
    3. ' conditions' → logprob: -5.660407543182373
    4. 'condition' → logprob: -6.535407543182373
    5. '3' → logprob: -8.410407066345215
    6. 'tro' → logprob: -8.660407066345215
    7. ' ' → logprob: -9.035407066345215
    8. ' trois' → logprob: -9.910407066345215
    9. 'prem' → logprob: -10.910407066345215
    10. 'conds' → logprob: -10.910407066345215

Token 412: ' précéd' (ID: 55435)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4380285143852234
    2. 'n' → logprob: -1.1880285739898682
    3. 'else' → logprob: -3.438028573989868
    4. ' else' → logprob: -4.813028335571289
    5. ' restantes' → logprob: -5.938028335571289
    6. '```' → logprob: -6.063028335571289
    7. ' précéd' → logprob: -7.063028335571289
    8. '   ' → logprob: -7.813028335571289
    9. ' ne' → logprob: -7.938028335571289
    10. 's' → logprob: -8.063028335571289

Token 413: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.0005283685750328004
    2. 'ente' → logprob: -7.625528335571289
    3. 'é' → logprob: -11.000528335571289
    4. '#' → logprob: -11.875528335571289
    5. 'ent' → logprob: -12.250528335571289
    6. 'éd' → logprob: -13.250528335571289
    7. '{' → logprob: -13.375528335571289
    8. 'è' → logprob: -13.625528335571289
    9. 'ents' → logprob: -13.625528335571289
    10. 'ENTES' → logprob: -13.750528335571289

Token 414: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38188931345939636
    2. 'else' → logprob: -1.3818893432617188
    3. 'n' → logprob: -2.8818893432617188
    4. ' n' → logprob: -5.506889343261719
    5. ' else' → logprob: -5.506889343261719
    6. ':
' → logprob: -7.131889343261719
    7. 'est' → logprob: -7.881889343261719
    8. '```' → logprob: -8.006889343261719
    9. 'ne' → logprob: -9.131889343261719
    10. ':n' → logprob: -9.256889343261719

Token 415: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.1839934140443802
    2. 'est' → logprob: -2.183993339538574
    3. '#' → logprob: -3.808993339538574
    4. 'e' → logprob: -4.683993339538574
    5. 'elif' → logprob: -4.683993339538574
    6. 'pas' → logprob: -5.808993339538574
    7. 'n' → logprob: -5.933993339538574
    8. '’est' → logprob: -6.308993339538574
    9. 'ont' → logprob: -6.683993339538574
    10. 'else' → logprob: -6.933993339538574

Token 416: ' rempl' (ID: 66326)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.4972473978996277
    2. 's' → logprob: -0.9972473978996277
    3. 'v' → logprob: -4.122247219085693
    4. 'True' → logprob: -6.247247219085693
    5. 'true' → logprob: -6.872247219085693
    6. 'rem' → logprob: -6.872247219085693
    7. ' True' → logprob: -7.247247219085693
    8. ' rempl' → logprob: -7.372247219085693
    9. ' pas' → logprob: -7.497247219085693
    10. 'valid' → logprob: -7.747247219085693

Token 417: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.2889763414859772
    2. 'a' → logprob: -2.2889764308929443
    3. 'ait' → logprob: -2.5389764308929443
    4. 'ies' → logprob: -3.4139764308929443
    5. 'it' → logprob: -3.9139764308929443
    6. 'aites' → logprob: -5.413976192474365
    7. 'atie' → logprob: -5.788976192474365
    8. 'lie' → logprob: -5.788976192474365
    9. 'i' → logprob: -6.788976192474365
    10. 'iev' → logprob: -6.913976192474365

Token 418: ',' (ID: 11)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16153115034103394
    2. ':' → logprob: -1.9115312099456787
    3. ' else' → logprob: -7.2865309715271
    4. ':
' → logprob: -7.4115309715271
    5. 'elif' → logprob: -11.286531448364258
    6. ',' → logprob: -13.161531448364258
    7. 'print' → logprob: -14.161531448364258
    8. ':

' → logprob: -14.661531448364258
    9. 'elser' → logprob: -14.786531448364258
    10. '   ' → logprob: -14.911531448364258

Token 419: ' alors' (ID: 17971)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0070396591909229755
    2. ' else' → logprob: -5.007039546966553
    3. 'print' → logprob: -8.132040023803711
    4. ' print' → logprob: -10.507040023803711
    5. 'elif' → logprob: -13.382040023803711
    6. '#' → logprob: -14.757040023803711
    7. '```' → logprob: -14.882040023803711
    8. ':' → logprob: -15.007040023803711
    9. '#else' → logprob: -15.757040023803711
    10. '   ' → logprob: -16.13204002380371

Token 420: ' aucune' (ID: 51173)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07978823035955429
    2. ' print' → logprob: -2.5797882080078125
    3. ':' → logprob: -7.7047882080078125
    4. '   ' → logprob: -7.9547882080078125
    5. 'else' → logprob: -9.579788208007812
    6. ':
' → logprob: -11.204788208007812
    7. '	print' → logprob: -12.454788208007812
    8. ' ' → logprob: -12.579788208007812
    9. '  ' → logprob: -12.829788208007812
    10. ' else' → logprob: -13.954788208007812

Token 421: ' paire' (ID: 148856)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019199000671505928
    2. ':' → logprob: -4.269198894500732
    3. '   ' → logprob: -6.769198894500732
    4. ' print' → logprob: -6.894198894500732
    5. 'else' → logprob: -7.394198894500732
    6. '(' → logprob: -7.769198894500732
    7. '()' → logprob: -7.894198894500732
    8. '{' → logprob: -8.51919937133789
    9. ' ' → logprob: -8.64419937133789
    10. 'elif' → logprob: -8.64419937133789

Token 422: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2877539098262787
    2. 'de' → logprob: -1.912753939628601
    3. ' de' → logprob: -2.5377538204193115
    4. ' print' → logprob: -5.662754058837891
    5. 'ident' → logprob: -6.037754058837891
    6. 'des' → logprob: -6.037754058837891
    7. ' ident' → logprob: -6.162754058837891
    8. 'elif' → logprob: -6.412754058837891
    9. 'n' → logprob: -6.537754058837891
    10. ' of' → logprob: -6.662754058837891

Token 423: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.025394529104232788
    2. 'variables' → logprob: -3.9003944396972656
    3. ' valeurs' → logprob: -5.650394439697266
    4. 'nombre' → logprob: -7.525394439697266
    5. ' variables' → logprob: -8.650394439697266
    6. 'ces' → logprob: -9.025394439697266
    7. ' nombres' → logprob: -9.400394439697266
    8. 'A' → logprob: -9.525394439697266
    9. 'variable' → logprob: -9.900394439697266
    10. 'de' → logprob: -10.275394439697266

Token 424: ' ne' (ID: 453)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2032051533460617
    2. ' n' → logprob: -2.578205108642578
    3. 'ident' → logprob: -2.953205108642578
    4. 'print' → logprob: -4.203205108642578
    5. ' ég' → logprob: -4.578205108642578
    6. ' ident' → logprob: -4.828205108642578
    7. 'ég' → logprob: -5.078205108642578
    8. 'est' → logprob: -5.828205108642578
    9. 'distinct' → logprob: -5.953205108642578
    10. 'ne' → logprob: -6.328205108642578

Token 425: ' satisfait' (ID: 174890)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38228848576545715
    2. 'est' → logprob: -1.2572884559631348
    3. 's' → logprob: -4.007288455963135
    4. '```' → logprob: -5.382288455963135
    5. '#' → logprob: -5.507288455963135
    6. ' est' → logprob: -6.257288455963135
    7. ' print' → logprob: -6.757288455963135
    8. 'part' → logprob: -7.382288455963135
    9. 'match' → logprob: -7.632288455963135
    10. 'diff' → logprob: -8.007288932800293

Token 426: ' exactement' (ID: 108701)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7708039283752441
    2. ' la' → logprob: -1.1458039283752441
    3. 'les' → logprob: -2.395803928375244
    4. 'l' → logprob: -3.020803928375244
    5. ' les' → logprob: -3.520803928375244
    6. 'the' → logprob: -4.145803928375244
    7. ' l' → logprob: -4.520803928375244
    8. ' the' → logprob: -4.770803928375244
    9. 'le' → logprob: -5.270803928375244
    10. 'print' → logprob: -5.770803928375244

Token 427: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4196265637874603
    2. 'l' → logprob: -1.7946265935897827
    3. ' la' → logprob: -2.044626474380493
    4. 'les' → logprob: -4.044626712799072
    5. 'une' → logprob: -4.294626712799072
    6. 'le' → logprob: -5.294626712799072
    7. ' l' → logprob: -5.669626712799072
    8. 'à' → logprob: -6.169626712799072
    9. ' deux' → logprob: -6.919626712799072
    10. ' à' → logprob: -7.044626712799072

Token 428: ' contraintes' (ID: 167366)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.07513759285211563
    2. 'conditions' → logprob: -2.8251376152038574
    3. ' conditions' → logprob: -5.200137615203857
    4. ' critères' → logprob: -6.200137615203857
    5. ' deux' → logprob: -6.325137615203857
    6. '2' → logprob: -7.075137615203857
    7. 'm' → logprob: -7.575137615203857
    8. 'crit' → logprob: -7.575137615203857
    9. '#' → logprob: -7.575137615203857
    10. 'criter' → logprob: -8.2001371383667

Token 429: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0016044863732531667
    2. ' else' → logprob: -6.8766045570373535
    3. 'print' → logprob: -8.251604080200195
    4. ':' → logprob: -8.501604080200195
    5. '```' → logprob: -9.626604080200195
    6. 'elif' → logprob: -11.126604080200195
    7. ',' → logprob: -11.751604080200195
    8. '.' → logprob: -12.001604080200195
    9. '#' → logprob: -12.626604080200195
    10. ':
' → logprob: -13.126604080200195

Token 430: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00020783171930816025
    2. 'print' → logprob: -8.500207901000977
    3. ' else' → logprob: -12.750207901000977
    4. '```' → logprob: -14.000207901000977
    5. 'elif' → logprob: -14.375207901000977
    6. ':' → logprob: -17.750207901000977
    7. '   ' → logprob: -18.375207901000977
    8. '#else' → logprob: -18.375207901000977
    9. ' print' → logprob: -19.125207901000977
    10. 'elser' → logprob: -19.750207901000977

Token 431: ' Cela' (ID: 44403)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -5.319370302458992e-06
    2. 'print' → logprob: -12.375005722045898
    3. ' else' → logprob: -13.875005722045898
    4. '```' → logprob: -16.1250057220459
    5. 'elif' → logprob: -16.6250057220459
    6. '#else' → logprob: -19.3750057220459
    7. 'elser' → logprob: -20.1250057220459
    8. 'els' → logprob: -21.5000057220459
    9. 'elses' → logprob: -21.5000057220459
    10. '}else' → logprob: -21.6250057220459

Token 432: ' veut' (ID: 41653)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00028576893964782357
    2. 'print' → logprob: -8.500286102294922
    3. ' else' → logprob: -9.625286102294922
    4. '```' → logprob: -11.500286102294922
    5. '#' → logprob: -12.875286102294922
    6. 'elif' → logprob: -13.375286102294922
    7. '#else' → logprob: -14.250286102294922
    8. 'els' → logprob: -15.000286102294922
    9. ' print' → logprob: -15.125286102294922
    10. 'elser' → logprob: -15.125286102294922

Token 433: ' dire' (ID: 4071)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.0238453671336174
    2. 'pas' → logprob: -4.648845195770264
    3. ' dire' → logprob: -5.148845195770264
    4. 'print' → logprob: -5.523845195770264
    5. '#' → logprob: -6.398845195770264
    6. 'don' → logprob: -6.648845195770264
    7. 'direction' → logprob: -8.023845672607422
    8. '```' → logprob: -8.148845672607422
    9. '-dire' → logprob: -8.898845672607422
    10. '   ' → logprob: -9.023845672607422

Token 434: ' soit' (ID: 17293)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.020637769252061844
    2. 'else' → logprob: -4.2706379890441895
    3. '   ' → logprob: -5.2706379890441895
    4. ' print' → logprob: -7.0206379890441895
    5. '#' → logprob: -8.895637512207031
    6. ' ' → logprob: -9.270637512207031
    7. 'not' → logprob: -10.395637512207031
    8. '  ' → logprob: -10.395637512207031
    9. '```' → logprob: -10.395637512207031
    10. '"' → logprob: -10.770637512207031

Token 435: ' que' (ID: 661)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6384292244911194
    2. 'print' → logprob: -1.7634291648864746
    3. 'que' → logprob: -2.1384291648864746
    4. ' que' → logprob: -2.2634291648864746
    5. 'qu' → logprob: -3.6384291648864746
    6. 'all' → logprob: -4.138429164886475
    7. 't' → logprob: -5.388429164886475
    8. 'not' → logprob: -5.388429164886475
    9. 'A' → logprob: -5.513429164886475
    10. 'that' → logprob: -5.513429164886475

Token 436: ' toutes' (ID: 17502)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5318230986595154
    2. 'print' → logprob: -0.9068230986595154
    3. 'len' → logprob: -5.28182315826416
    4. ' A' → logprob: -6.03182315826416
    5. '#' → logprob: -7.40682315826416
    6. ' print' → logprob: -8.28182315826416
    7. 'all' → logprob: -8.65682315826416
    8. 'not' → logprob: -9.78182315826416
    9. ' len' → logprob: -10.65682315826416
    10. '(' → logprob: -11.53182315826416

Token 437: ' les' (ID: 1341)
  Prédit: 'tro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tro' → logprob: -0.864299476146698
    2. 'les' → logprob: -1.1142995357513428
    3. ' les' → logprob: -1.9892995357513428
    4. ' trois' → logprob: -2.2392995357513428
    5. '3' → logprob: -5.489299297332764
    6. 's' → logprob: -6.489299297332764
    7. '#' → logprob: -7.364299297332764
    8. ' ' → logprob: -8.114299774169922
    9. ' sont' → logprob: -9.739299774169922
    10. '   ' → logprob: -9.864299774169922

Token 438: ' valeurs' (ID: 73668)
  Prédit: 'tro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tro' → logprob: -0.35588622093200684
    2. 'val' → logprob: -1.2308862209320068
    3. '3' → logprob: -4.980886459350586
    4. ' trois' → logprob: -8.480886459350586
    5. ' valeurs' → logprob: -8.980886459350586
    6. 'three' → logprob: -9.605886459350586
    7. '   ' → logprob: -10.355886459350586
    8. '#' → logprob: -10.605886459350586
    9. 'values' → logprob: -10.855886459350586
    10. '```' → logprob: -11.355886459350586

Token 439: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004757392220199108
    2. ' sont' → logprob: -5.754757404327393
    3. 'tro' → logprob: -7.629757404327393
    4. ' trois' → logprob: -7.754757404327393
    5. '#' → logprob: -8.254756927490234
    6. 'ont' → logprob: -8.504756927490234
    7. '3' → logprob: -9.754756927490234
    8. ' ' → logprob: -10.129756927490234
    9. '==' → logprob: -10.879756927490234
    10. 'éta' → logprob: -10.879756927490234

Token 440: ' différentes' (ID: 41398)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.6145901083946228
    2. ' ég' → logprob: -1.1145901679992676
    3. 'ident' → logprob: -2.2395901679992676
    4. 'égal' → logprob: -4.364590167999268
    5. 'les' → logprob: -5.239590167999268
    6. 'tro' → logprob: -5.989590167999268
    7. 'eg' → logprob: -6.114590167999268
    8. 'équ' → logprob: -7.489590167999268
    9. '3' → logprob: -7.864590167999268
    10. ' iguales' → logprob: -8.36458969116211

Token 441: ',' (ID: 11)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06856803596019745
    2. 'elif' → logprob: -3.068567991256714
    3. ',' → logprob: -4.068568229675293
    4. 'or' → logprob: -7.443568229675293
    5. 'print' → logprob: -7.443568229675293
    6. '#' → logprob: -7.443568229675293
    7. ' else' → logprob: -8.068568229675293
    8. ' or' → logprob: -8.193568229675293
    9. '```' → logprob: -8.818568229675293
    10. '#else' → logprob: -9.693568229675293

Token 442: ' soit' (ID: 17293)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3811582028865814
    2. 'print' → logprob: -1.8811582326889038
    3. '#' → logprob: -2.1311581134796143
    4. 'elif' → logprob: -3.1311581134796143
    5. ' print' → logprob: -7.506158351898193
    6. ' else' → logprob: -7.881158351898193
    7. 'or' → logprob: -7.881158351898193
    8. ' #' → logprob: -8.256157875061035
    9. ' or' → logprob: -8.256157875061035
    10. '   ' → logprob: -9.131157875061035

Token 443: ' que' (ID: 661)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.1287457942962646
    2. ' toutes' → logprob: -1.5037457942962646
    3. ' que' → logprob: -1.6287457942962646
    4. 'all' → logprob: -2.0037457942962646
    5. '#' → logprob: -3.1287457942962646
    6. ' ' → logprob: -3.7537457942962646
    7. 'A' → logprob: -4.378746032714844
    8. 'que' → logprob: -4.378746032714844
    9. ' A' → logprob: -4.503746032714844
    10. 't' → logprob: -4.503746032714844

Token 444: ' toutes' (ID: 17502)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.40646323561668396
    2. 'all' → logprob: -1.5314632654190063
    3. ' all' → logprob: -2.531463146209717
    4. ' A' → logprob: -3.281463146209717
    5. ' ' → logprob: -8.156463623046875
    6. 'print' → logprob: -9.031463623046875
    7. '#' → logprob: -9.031463623046875
    8. '  ' → logprob: -9.531463623046875
    9. 't' → logprob: -11.031463623046875
    10. 'All' → logprob: -11.656463623046875

Token 445: ' sont' (ID: 5242)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6549553871154785
    2. ' trois' → logprob: -1.4049553871154785
    3. 'les' → logprob: -2.2799553871154785
    4. ' three' → logprob: -2.5299553871154785
    5. ' ' → logprob: -3.5299553871154785
    6. '==' → logprob: -5.1549553871154785
    7. 'tro' → logprob: -5.6549553871154785
    8. '3' → logprob: -5.6549553871154785
    9. 's' → logprob: -6.2799553871154785
    10. '#' → logprob: -6.6549553871154785

Token 446: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.30586960911750793
    2. 'ég' → logprob: -1.5558695793151855
    3. 'ident' → logprob: -3.1808695793151855
    4. ' ident' → logprob: -5.4308695793151855
    5. 'égal' → logprob: -5.9308695793151855
    6. 'les' → logprob: -6.3058695793151855
    7. ' iguales' → logprob: -7.4308695793151855
    8. 'eg' → logprob: -7.5558695793151855
    9. 'tro' → logprob: -8.055870056152344
    10. ' eg' → logprob: -8.805870056152344

Token 447: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.0002799279463943094
    2. 'al' → logprob: -8.250280380249023
    3. 'a' → logprob: -11.875280380249023
    4. '```' → logprob: -12.250280380249023
    5. 'ale' → logprob: -12.500280380249023
    6. 'aux' → logprob: -13.875280380249023
    7. '</' → logprob: -15.125280380249023
    8. '``' → logprob: -15.250280380249023
    9. '|' → logprob: -15.750280380249023
    10. '@' → logprob: -15.750280380249023

Token 448: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00020270596724003553
    2. 'print' → logprob: -9.000203132629395
    3. 'elif' → logprob: -10.250203132629395
    4. ' else' → logprob: -10.625203132629395
    5. '```' → logprob: -11.000203132629395
    6. '#else' → logprob: -13.625203132629395
    7. '#' → logprob: -13.750203132629395
    8. '   ' → logprob: -14.875203132629395
    9. '#print' → logprob: -16.625202178955078
    10. '<|end|>' → logprob: -16.875202178955078

Token 449: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00011212585377506912
    2. 'print' → logprob: -9.125112533569336
    3. '```' → logprob: -13.250112533569336
    4. ' else' → logprob: -13.875112533569336
    5. 'elif' → logprob: -14.875112533569336
    6. '#else' → logprob: -17.250112533569336
    7. '   ' → logprob: -17.875112533569336
    8. '#' → logprob: -18.375112533569336
    9. 'Else' → logprob: -19.000112533569336
    10. '}else' → logprob: -19.625112533569336

Token 450: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.062015414237976074
    2. ':
' → logprob: -2.8120155334472656
    3. '   ' → logprob: -10.062015533447266
    4. ' :' → logprob: -13.062015533447266
    5. ' :
' → logprob: -13.062015533447266
    6. ':

' → logprob: -14.687015533447266
    7. ':
' → logprob: -15.562015533447266
    8. 'print' → logprob: -16.062015533447266
    9. '():
' → logprob: -16.812015533447266
    10. '):
' → logprob: -16.937015533447266

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04911889135837555
    2. 'print' → logprob: -3.049118995666504
    3. ' print' → logprob: -7.549118995666504
    4. '	print' → logprob: -13.049118995666504
    5. '   ' → logprob: -13.299118995666504
    6. '```' → logprob: -15.049118995666504
    7. '       ' → logprob: -15.424118995666504
    8. ' ' → logprob: -15.924118995666504
    9. '    
' → logprob: -16.299118041992188
    10. '    ' → logprob: -16.924118041992188

Token 452: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018006093159783632
    2. ' print' → logprob: -8.8751802444458
    3. '   ' → logprob: -10.1251802444458
    4. '	print' → logprob: -15.8751802444458
    5. ' ' → logprob: -18.500179290771484
    6. 'pass' → logprob: -19.500179290771484
    7. 'printf' → logprob: -19.625179290771484
    8. 'pr' → logprob: -19.750179290771484
    9. '.print' → logprob: -20.000179290771484
    10. '```' → logprob: -20.125179290771484

Token 453: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.537868779967539e-06
    2. ' print' → logprob: -12.375008583068848
    3. '   ' → logprob: -12.375008583068848
    4. '	print' → logprob: -18.37500762939453
    5. 'Print' → logprob: -19.87500762939453
    6. 'printf' → logprob: -20.62500762939453
    7. '#print' → logprob: -20.75000762939453
    8. ' ' → logprob: -20.87500762939453
    9. '  ' → logprob: -21.12500762939453
    10. '.print' → logprob: -21.37500762939453

Token 454: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.00038956227945163846
    2. 'fic' → logprob: -7.875389575958252
    3. 'ic' → logprob: -12.125389099121094
    4. 'f' → logprob: -12.750389099121094
    5. '   ' → logprob: -14.250389099121094
    6. '#' → logprob: -15.250389099121094
    7. 'ichage' → logprob: -15.875389099121094
    8. 'icher' → logprob: -16.750389099121094
    9. 'che' → logprob: -16.875389099121094
    10. '  ' → logprob: -17.750389099121094

Token 455: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00033510822686366737
    2. '"No' → logprob: -8.375334739685059
    3. '(' → logprob: -9.625334739685059
    4. '"' → logprob: -10.250334739685059
    5. 'No' → logprob: -13.375334739685059
    6. '('' → logprob: -14.500334739685059
    7. 'print' → logprob: -14.750334739685059
    8. '(No' → logprob: -15.625334739685059
    9. '("")' → logprob: -15.750334739685059
    10. '(
' → logprob: -15.750334739685059

Token 456: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.0445127372804563e-05
    2. '"No' → logprob: -11.50001049041748
    3. ' No' → logprob: -15.50001049041748
    4. '"' → logprob: -17.250009536743164
    5. 'NO' → logprob: -17.375009536743164
    6. 'Not' → logprob: -17.500009536743164
    7. 'Yes' → logprob: -17.875009536743164
    8. '“No' → logprob: -18.625009536743164
    9. '")' → logprob: -19.000009536743164
    10. '_No' → logprob: -19.125009536743164

Token 457: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.006681979168206453
    2. '"' → logprob: -5.7566819190979
    3. '("' → logprob: -5.8816819190979
    4. '"No' → logprob: -7.5066819190979
    5. 'No' → logprob: -10.006682395935059
    6. ')' → logprob: -10.381682395935059
    7. '(No' → logprob: -10.631682395935059
    8. '")
' → logprob: -10.756682395935059
    9. ')"' → logprob: -11.006682395935059
    10. '()' → logprob: -11.256682395935059

Token 458: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01666565053164959
    2. '()
' → logprob: -5.141665458679199
    3. '()' → logprob: -5.516665458679199
    4. ' print' → logprob: -5.766665458679199
    5. '   ' → logprob: -6.516665458679199
    6. '
' → logprob: -6.641665458679199
    7. '("' → logprob: -7.516665458679199
    8. '(print' → logprob: -9.5166654586792
    9. '```' → logprob: -9.8916654586792
    10. '    
' → logprob: -11.0166654586792

Token 459: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0403735637664795
    2. 'la' → logprob: -1.2903735637664795
    3. '("' → logprob: -1.5403735637664795
    4. 'print' → logprob: -2.1653735637664795
    5. ' l' → logprob: -4.415373802185059
    6. ' la' → logprob: -4.915373802185059
    7. '"No' → logprob: -5.040373802185059
    8. '"' → logprob: -5.165373802185059
    9. 'No' → logprob: -5.415373802185059
    10. '()' → logprob: -7.040373802185059

Token 460: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.09623740613460541
    2. 'é' → logprob: -2.4712374210357666
    3. '’écran' → logprob: -5.5962371826171875
    4. ' écran' → logprob: -6.5962371826171875
    5. 'print' → logprob: -6.7212371826171875
    6. ''é' → logprob: -7.7212371826171875
    7. 'screen' → logprob: -8.471237182617188
    8. 'e' → logprob: -9.221237182617188
    9. 'a' → logprob: -9.721237182617188
    10. 'creen' → logprob: -10.221237182617188

Token 461: ' car' (ID: 1669)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5775339603424072
    2. '   ' → logprob: -0.8275339603424072
    3. '
' → logprob: -6.827533721923828
    4. ' print' → logprob: -7.702533721923828
    5. '    
' → logprob: -10.202533721923828
    6. '```' → logprob: -10.952533721923828
    7. '  
' → logprob: -13.577533721923828
    8. '  ' → logprob: -14.452533721923828
    9. '(print' → logprob: -14.952533721923828
    10. '   
' → logprob: -15.077533721923828

Token 462: ' aucune' (ID: 51173)
  Prédit: ' No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' No' → logprob: -1.005645990371704
    2. '   ' → logprob: -1.505645990371704
    3. 'No' → logprob: -1.880645990371704
    4. ' all' → logprob: -3.005645990371704
    5. ' ' → logprob: -3.505645990371704
    6. '"' → logprob: -3.630645990371704
    7. ' "' → logprob: -3.755645990371704
    8. '"No' → logprob: -3.755645990371704
    9. ' print' → logprob: -3.880645990371704
    10. '  ' → logprob: -4.005645751953125

Token 463: ' combinaison' (ID: 165933)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.6007505059242249
    2. ' No' → logprob: -0.8507505059242249
    3. ' print' → logprob: -3.97575044631958
    4. 'print' → logprob: -5.60075044631958
    5. '("' → logprob: -7.10075044631958
    6. ' value' → logprob: -7.85075044631958
    7. '"No' → logprob: -9.100750923156738
    8. '(No' → logprob: -9.100750923156738
    9. '"' → logprob: -9.225750923156738
    10. ' ' → logprob: -9.225750923156738

Token 464: ' n' (ID: 297)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.38623398542404175
    2. ' n' → logprob: -1.8862340450286865
    3. 'n' → logprob: -2.6362340450286865
    4. 'print' → logprob: -3.1362340450286865
    5. 'ne' → logprob: -3.6362340450286865
    6. ' de' → logprob: -4.636233806610107
    7. ' print' → logprob: -5.136233806610107
    8. ' des' → logprob: -5.511233806610107
    9. 'de' → logprob: -5.761233806610107
    10. 'des' → logprob: -5.886233806610107

Token 465: ''a' (ID: 10443)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4963001310825348
    2. 'n' → logprob: -1.3713001012802124
    3. ''' → logprob: -2.996300220489502
    4. ''est' → logprob: -3.871300220489502
    5. '```' → logprob: -4.496300220489502
    6. 'es' → logprob: -4.621300220489502
    7. 'atisf' → logprob: -5.121300220489502
    8. 'print' → logprob: -5.371300220489502
    9. 'ne' → logprob: -5.371300220489502
    10. 'a' → logprob: -5.746300220489502

Token 466: ' été' (ID: 9799)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.9184733629226685
    2. 's' → logprob: -1.2934733629226685
    3. 'exact' → logprob: -1.9184733629226685
    4. 'été' → logprob: -2.418473243713379
    5. ' pas' → logprob: -3.543473243713379
    6. 'respect' → logprob: -3.918473243713379
    7. ' été' → logprob: -3.918473243713379
    8. 'print' → logprob: -4.668473243713379
    9. 'pu' → logprob: -6.043473243713379
    10. 'ré' → logprob: -6.418473243713379

Token 467: ' trouv' (ID: 40254)
  Prédit: ' trouv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouv' → logprob: -0.5336756110191345
    2. 'tr' → logprob: -0.9086756110191345
    3. 'valid' → logprob: -5.658675670623779
    4. 's' → logprob: -6.158675670623779
    5. 'respect' → logprob: -6.783675670623779
    6. 'found' → logprob: -6.908675670623779
    7. ' trouvé' → logprob: -7.408675670623779
    8. 'print' → logprob: -7.408675670623779
    9. '```' → logprob: -8.033675193786621
    10. 'detect' → logprob: -8.908675193786621

Token 468: 'ée' (ID: 2894)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0804157629609108
    2. ' print' → logprob: -2.830415725708008
    3. 'ue' → logprob: -4.955415725708008
    4. 'e' → logprob: -5.705415725708008
    5. '("' → logprob: -5.705415725708008
    6. '"' → logprob: -6.705415725708008
    7. '   ' → logprob: -6.955415725708008
    8. '")' → logprob: -7.205415725708008
    9. 'es' → logprob: -7.955415725708008
    10. ')' → logprob: -8.205415725708008

Token 469: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2532481849193573
    2. 'print' → logprob: -1.5032482147216797
    3. ' print' → logprob: -6.75324821472168
    4. '
' → logprob: -8.87824821472168
    5. '```' → logprob: -12.00324821472168
    6. '    
' → logprob: -12.37824821472168
    7. '  ' → logprob: -14.37824821472168
    8. '	print' → logprob: -15.25324821472168
    9. ' ' → logprob: -15.87824821472168
    10. '  
' → logprob: -16.00324821472168

Token 470: ' deux' (ID: 10301)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7237887382507324
    2. ' les' → logprob: -1.9737887382507324
    3. ' print' → logprob: -1.9737887382507324
    4. 'A' → logprob: -3.2237887382507324
    5. 'les' → logprob: -3.3487887382507324
    6. 'exact' → logprob: -3.5987887382507324
    7. ' A' → logprob: -3.7237887382507324
    8. 'une' → logprob: -3.8487887382507324
    9. 'not' → logprob: -3.9737887382507324
    10. ' not' → logprob: -4.348788738250732

Token 471: ' valeurs' (ID: 73668)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1397861242294312
    2. ' valeurs' → logprob: -1.2647861242294312
    3. 'val' → logprob: -1.8897861242294312
    4. ' val' → logprob: -2.2647862434387207
    5. 'values' → logprob: -2.8897862434387207
    6. ' values' → logprob: -3.2647862434387207
    7. 'des' → logprob: -3.6397862434387207
    8. ' ent' → logprob: -4.264786243438721
    9. ' vale' → logprob: -5.639786243438721
    10. ' ' → logprob: -7.139786243438721

Token 472: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.272396057844162
    2. ' sont' → logprob: -1.5223960876464844
    3. ' are' → logprob: -4.522396087646484
    4. ' exactly' → logprob: -6.022396087646484
    5. 'exact' → logprob: -6.772396087646484
    6. 'diff' → logprob: -6.897396087646484
    7. 'print' → logprob: -7.022396087646484
    8. 'are' → logprob: -7.147396087646484
    9. ' different' → logprob: -7.147396087646484
    10. 'different' → logprob: -7.647396087646484

Token 473: ' ident' (ID: 3951)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -1.5635961294174194
    2. 'exact' → logprob: -1.6885961294174194
    3. 'ident' → logprob: -1.8135961294174194
    4. 'ég' → logprob: -1.9385961294174194
    5. ' ident' → logprob: -2.063596248626709
    6. 'diff' → logprob: -2.438596248626709
    7. 'strict' → logprob: -2.813596248626709
    8. 'égal' → logprob: -4.438596248626709
    9. 'distinct' → logprob: -5.063596248626709
    10. ' exactly' → logprob: -7.063596248626709

Token 474: 'iques' (ID: 11654)
  Prédit: 'ques'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.02534431591629982
    2. 'que' → logprob: -4.400344371795654
    3. 'iques' → logprob: -5.650344371795654
    4. 'fi' → logprob: -5.775344371795654
    5. 'f' → logprob: -6.275344371795654
    6. 'tiques' → logprob: -6.775344371795654
    7. 'cal' → logprob: -7.025344371795654
    8. '#' → logprob: -8.025343894958496
    9. 'c' → logprob: -8.275343894958496
    10. '```' → logprob: -8.525343894958496

Token 475: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5763508677482605
    2. 'print' → logprob: -0.8263508677482605
    3. ' print' → logprob: -7.826350688934326
    4. ')' → logprob: -12.451351165771484
    5. '```' → logprob: -12.451351165771484
    6. '
' → logprob: -13.326351165771484
    7. ')
' → logprob: -14.201351165771484
    8. '  ' → logprob: -14.576351165771484
    9. '	print' → logprob: -14.701351165771484
    10. ' ' → logprob: -14.951351165771484

Token 476: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.11261951178312302
    2. 'l' → logprob: -2.737619400024414
    3. 'one' → logprob: -4.362619400024414
    4. 'de' → logprob: -4.737619400024414
    5. 'la' → logprob: -4.862619400024414
    6. ' ' → logprob: -5.737619400024414
    7. ' une' → logprob: -5.862619400024414
    8. 'not' → logprob: -6.612619400024414
    9. '```' → logprob: -6.862619400024414
    10. ' l' → logprob: -6.862619400024414

Token 477: ' troisième' (ID: 75373)
  Prédit: 'tro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tro' → logprob: -0.0010020858608186245
    2. ' troisième' → logprob: -7.001002311706543
    3. ' ' → logprob: -11.126002311706543
    4. '   ' → logprob: -11.251002311706543
    5. '```' → logprob: -11.376002311706543
    6. 'third' → logprob: -11.626002311706543
    7. '
' → logprob: -12.001002311706543
    8. 'tier' → logprob: -12.126002311706543
    9. '3' → logprob: -12.251002311706543
    10. 'tiers' → logprob: -12.376002311706543

Token 478: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2700599133968353
    2. 'est' → logprob: -2.270059823989868
    3. 'diff' → logprob: -2.770059823989868
    4. 'print' → logprob: -3.270059823989868
    5. ' différente' → logprob: -4.145060062408447
    6. ' is' → logprob: -5.270060062408447
    7. 'different' → logprob: -5.520060062408447
    8. ' different' → logprob: -5.645060062408447
    9. ' print' → logprob: -6.270060062408447
    10. ' diff' → logprob: -7.145060062408447

Token 479: ' différente' (ID: 140707)
  Prédit: ' différente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différente' → logprob: -0.5317696928977966
    2. 'diff' → logprob: -1.0317697525024414
    3. 'different' → logprob: -2.9067697525024414
    4. ' different' → logprob: -7.656769752502441
    5. 'distinct' → logprob: -7.656769752502441
    6. 'd' → logprob: -8.781769752502441
    7. ' différent' → logprob: -9.031769752502441
    8. ' différentes' → logprob: -9.531769752502441
    9. '```' → logprob: -9.656769752502441
    10. ' distinct' → logprob: -11.531769752502441

Token 480: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47508254647254944
    2. '   ' → logprob: -0.975082516670227
    3. ' print' → logprob: -6.9750823974609375
    4. '
' → logprob: -9.850082397460938
    5. '```' → logprob: -11.225082397460938
    6. '    
' → logprob: -12.850082397460938
    7. '	print' → logprob: -14.725082397460938
    8. '  
' → logprob: -15.350082397460938
    9. '  ' → logprob: -15.475082397460938
    10. '.print' → logprob: -15.725082397460938

Token 481: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06201160326600075
    2. '   ' → logprob: -2.81201171875
    3. ' print' → logprob: -10.06201171875
    4. '```' → logprob: -13.56201171875
    5. '	print' → logprob: -17.56201171875
    6. '``' → logprob: -20.31201171875
    7. 'Print' → logprob: -21.06201171875
    8. '       ' → logprob: -21.18701171875
    9. '.print' → logprob: -21.18701171875
    10. ' ' → logprob: -21.31201171875

Token 482: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.75
    4. 'Print' → logprob: -23.375
    5. '	print' → logprob: -23.5
    6. '```' → logprob: -25.0
    7. 'printf' → logprob: -25.625
    8. '.print' → logprob: -25.875
    9. ' ' → logprob: -26.25
    10. '  ' → logprob: -26.625

Token 483: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002036595979006961
    2. '(' → logprob: -8.500204086303711
    3. '('' → logprob: -16.37520408630371
    4. '("")' → logprob: -17.75020408630371
    5. '()' → logprob: -18.12520408630371
    6. '("("' → logprob: -18.87520408630371
    7. '(
' → logprob: -19.62520408630371
    8. '("""' → logprob: -20.25020408630371
    9. '(("' → logprob: -21.25020408630371
    10. ' ("' → logprob: -21.50020408630371

Token 484: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.9361264946837764e-07
    2. '"No' → logprob: -16.0
    3. ' No' → logprob: -21.5
    4. '"' → logprob: -23.5
    5. 'Yes' → logprob: -24.5
    6. 'N' → logprob: -24.875
    7. 'NO' → logprob: -25.375
    8. '_No' → logprob: -25.75
    9. '“No' → logprob: -26.75
    10. '.No' → logprob: -27.375

Token 485: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0006361891864798963
    2. ')")' → logprob: -7.750636100769043
    3. ')' → logprob: -8.500636100769043
    4. '()' → logprob: -14.000636100769043
    5. '("' → logprob: -14.750636100769043
    6. ')"' → logprob: -15.250636100769043
    7. '"' → logprob: -15.625636100769043
    8. '}")' → logprob: -15.750636100769043
    9. ' ")' → logprob: -15.875636100769043
    10. '")
' → logprob: -16.62563705444336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 483
Tokens correctement prédits (1ère position, stricte): 125
Tokens correctement prédits (1ère position, avec adaptation): 128
Tokens correctement prédits (top 10): 312
Précision stricte (1ère position): 25.88%
Précision adaptée (1ère position): 26.50%
Précision (top 10): 64.60%
================================================================================
