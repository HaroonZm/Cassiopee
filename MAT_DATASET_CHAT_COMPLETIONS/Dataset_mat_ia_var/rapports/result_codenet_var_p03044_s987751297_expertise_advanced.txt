================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict, deque
import sys

def main():
    input = sys.stdin.readline
    n = int(input())
    neighbor = defaultdict(list)
    for _ in range(n - 1):
        u, v, w = map(int, input().split())
        neighbor[u].append((v, w))
        neighbor[v].append((u, w))

    color = [None] * (n + 1)
    color[1] = 0

    stack = [(1, 0)]
    while stack:
        v, accum = stack.pop()
        for u, w in neighbor[v]:
            if color[u] is None:
                color[u] = (accum + w) & 1
                stack.append((u, accum + w))

    print('\n'.join(map(str, color[1:])))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20557522773742676
    2. '\' → logprob: -2.9555752277374268
    3. '```' → logprob: -3.0805752277374268
    4. '\n' → logprob: -4.080574989318848
    5. '\(' → logprob: -4.205574989318848
    6. 'newline' → logprob: -4.330574989318848
    7. '(
' → logprob: -4.705574989318848
    8. 'a' → logprob: -5.580574989318848
    9. '
' → logprob: -5.955574989318848
    10. '[' → logprob: -5.955574989318848

Token 5: ' deque' (ID: 90347)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.40311935544013977
    2. 'Counter' → logprob: -1.4031193256378174
    3. ' deque' → logprob: -3.1531193256378174
    4. 'deque' → logprob: -3.4031193256378174
    5. ' Ordered' → logprob: -5.0281195640563965
    6. 'Ordered' → logprob: -5.9031195640563965
    7. ' abc' → logprob: -8.403119087219238
    8. ' named' → logprob: -8.528119087219238
    9. 'named' → logprob: -9.028119087219238
    10. 'abc' → logprob: -9.653119087219238

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00587890250608325
    2. '(
' → logprob: -5.880878925323486
    3. '\n' → logprob: -7.005878925323486
    4. '\' → logprob: -7.130878925323486
    5. '
' → logprob: -8.130878448486328
    6. '\(' → logprob: -8.505878448486328
    7. '' → logprob: -8.755878448486328
    8. ',' → logprob: -8.880878448486328
    9. '

' → logprob: -9.005878448486328
    10. ' (' → logprob: -9.505878448486328

Token 7: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0449107885360718
    2. '\n' → logprob: -1.1699107885360718
    3. '```' → logprob: -2.1699109077453613
    4. '\' → logprob: -2.4199109077453613
    5. '

' → logprob: -2.7949109077453613
    6. '<|end|>' → logprob: -3.2949109077453613
    7. '' → logprob: -4.919910907745361
    8. ' 

' → logprob: -5.544910907745361
    9. 'import' → logprob: -5.544910907745361
    10. '`' → logprob: -5.919910907745361

Token 8: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16997645795345306
    2. ' os' → logprob: -2.0449764728546143
    3. ' collections' → logprob: -4.419976234436035
    4. ' itertools' → logprob: -4.919976234436035
    5. ' re' → logprob: -5.669976234436035
    6. ' threading' → logprob: -6.419976234436035
    7. ' json' → logprob: -7.044976234436035
    8. ' heap' → logprob: -7.419976234436035
    9. ' random' → logprob: -8.169976234436035
    10. ' math' → logprob: -8.169976234436035

Token 9: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7866169214248657
    2. '\n' → logprob: -1.4116169214248657
    3. '\' → logprob: -1.6616169214248657
    4. '
' → logprob: -2.661616802215576
    5. '```' → logprob: -4.411616802215576
    6. '.
' → logprob: -4.536616802215576
    7. '

' → logprob: -5.911616802215576
    8. '[' → logprob: -5.911616802215576
    9. 'import' → logprob: -6.161616802215576
    10. 'def' → logprob: -6.536616802215576

Token 10: 'def' (ID: 1314)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8968833684921265
    2. 'def' → logprob: -1.6468833684921265
    3. 'for' → logprob: -2.021883487701416
    4. 'input' → logprob: -2.521883487701416
    5. 'd' → logprob: -3.146883487701416
    6. 'n' → logprob: -3.396883487701416
    7. '`' → logprob: -4.021883487701416
    8. 'f' → logprob: -4.521883487701416
    9. 'read' → logprob: -4.521883487701416
    10. '\' → logprob: -4.646883487701416

Token 11: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1539660394191742
    2. ' process' → logprob: -2.403965950012207
    3. ' main' → logprob: -4.278965950012207
    4. ' read' → logprob: -4.278965950012207
    5. ' space' → logprob: -5.903965950012207
    6. ' parse' → logprob: -6.278965950012207
    7. ' dfs' → logprob: -6.403965950012207
    8. ' bfs' → logprob: -6.403965950012207
    9. ' add' → logprob: -6.778965950012207
    10. ' calculate' → logprob: -6.778965950012207

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017652629176154733
    2. '():' → logprob: -6.876765251159668
    3. '(:' → logprob: -7.876765251159668
    4. ':' → logprob: -8.501765251159668
    5. '(
' → logprob: -10.376765251159668
    6. ' (' → logprob: -10.626765251159668
    7. '(":' → logprob: -11.001765251159668
    8. '):' → logprob: -11.251765251159668
    9. '(`' → logprob: -11.501765251159668
    10. ')' → logprob: -11.751765251159668

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01632091961801052
    2. '    ' → logprob: -4.766320705413818
    3. ':' → logprob: -5.766320705413818
    4. ' ' → logprob: -6.141320705413818
    5. '    
' → logprob: -7.266320705413818
    6. '(' → logprob: -7.516320705413818
    7. '\' → logprob: -8.266321182250977
    8. '  ' → logprob: -8.766321182250977
    9. '():' → logprob: -9.516321182250977
    10. ' :' → logprob: -9.891321182250977

Token 14: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5734372138977051
    2. ' ' → logprob: -1.573437213897705
    3. 'n' → logprob: -2.323437213897705
    4. '    ' → logprob: -3.198437213897705
    5. ' n' → logprob: -3.448437213897705
    6. 'input' (adapté à ' input') → logprob: -4.573437213897705
    7. 'r' → logprob: -4.823437213897705
    8. 'de' → logprob: -4.948437213897705
    9. 'd' → logprob: -5.073437213897705
    10. ' input' → logprob: -5.448437213897705

Token 15: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3117060661315918
    2. '()' → logprob: -2.686706066131592
    3. '_data' → logprob: -2.686706066131592
    4. '_line' → logprob: -2.811706066131592
    5. '_' → logprob: -3.436706066131592
    6. ' =' → logprob: -4.061706066131592
    7. '=' → logprob: -4.686706066131592
    8. '_str' → logprob: -5.311706066131592
    9. '_token' → logprob: -6.686706066131592
    10. '_string' → logprob: -6.936706066131592

Token 16: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0024800582323223352
    2. 'sys' → logprob: -6.0024800300598145
    3. '	sys' → logprob: -13.002480506896973
    4. '=sys' → logprob: -13.377480506896973
    5. '(sys' → logprob: -15.002480506896973
    6. ' ' → logprob: -15.752480506896973
    7. ' input' → logprob: -16.002479553222656
    8. 'input' → logprob: -17.877479553222656
    9. ' lambda' → logprob: -18.627479553222656
    10. '_sys' → logprob: -19.627479553222656

Token 17: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007115975022315979
    2. '.readline' → logprob: -7.375711441040039
    3. '.stdin' → logprob: -10.000711441040039
    4. '.read' → logprob: -10.750711441040039
    5. ' .' → logprob: -11.750711441040039
    6. '.)' → logprob: -13.500711441040039
    7. '.Read' → logprob: -13.625711441040039
    8. '.stdout' → logprob: -13.875711441040039
    9. '.<' → logprob: -14.250711441040039
    10. '.​' → logprob: -14.250711441040039

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008091684430837631
    2. '.read' → logprob: -5.008091449737549
    3. '.' → logprob: -6.633091449737549
    4. 'read' → logprob: -10.508091926574707
    5. '.stdin' → logprob: -10.883091926574707
    6. '.readlines' → logprob: -12.383091926574707
    7. '.Read' → logprob: -12.508091926574707
    8. '.buffer' → logprob: -13.008091926574707
    9. '.READ' → logprob: -14.883091926574707
    10. ' readline' → logprob: -15.008091926574707

Token 19: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12730592489242554
    2. '(' → logprob: -2.1273059844970703
    3. '()
' → logprob: -8.75230598449707
    4. '(
' → logprob: -9.00230598449707
    5. ')' → logprob: -10.12730598449707
    6. '().' → logprob: -11.50230598449707
    7. ' ()' → logprob: -11.75230598449707
    8. '())' → logprob: -12.12730598449707
    9. '()\' → logprob: -12.12730598449707
    10. '()

' → logprob: -12.25230598449707

Token 20: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07268797606229782
    2. '   ' → logprob: -3.072687864303589
    3. '(' → logprob: -3.822687864303589
    4. '()
' → logprob: -7.197688102722168
    5. '    
' → logprob: -7.197688102722168
    6. '(
' → logprob: -8.822688102722168
    7. ')' → logprob: -9.322688102722168
    8. '
' → logprob: -10.447688102722168
    9. ' ' → logprob: -10.697688102722168
    10. '    ' → logprob: -10.822688102722168

Token 21: ' n' (ID: 297)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23328545689582825
    2. '(' → logprob: -1.6082854270935059
    3. '   ' → logprob: -5.358285427093506
    4. ')' → logprob: -6.483285427093506
    5. 'data' → logprob: -7.483285427093506
    6. 'def' → logprob: -9.233285903930664
    7. '())' → logprob: -9.233285903930664
    8. 'n' (adapté à ' n') → logprob: -9.358285903930664
    9. '(
' → logprob: -9.358285903930664
    10. ' ' → logprob: -9.358285903930664

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05989566072821617
    2. '=' → logprob: -2.9348957538604736
    3. ' ' → logprob: -5.4348955154418945
    4. ',' → logprob: -7.9348955154418945
    5. ')' → logprob: -9.684895515441895
    6. '=int' → logprob: -9.809895515441895
    7. ' ,' → logprob: -10.059895515441895
    8. '  ' → logprob: -10.809895515441895
    9. '.' → logprob: -10.934895515441895
    10. 'space' → logprob: -11.434895515441895

Token 23: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.014199234545230865
    2. 'int' → logprob: -4.264199256896973
    3. ' ' → logprob: -10.264199256896973
    4. '=int' → logprob: -15.139199256896973
    5. '10' → logprob: -15.389199256896973
    6. ' input' → logprob: -15.514199256896973
    7. '<int' → logprob: -16.514198303222656
    8. ' map' → logprob: -17.264198303222656
    9. '  ' → logprob: -17.514198303222656
    10. '20' → logprob: -17.514198303222656

Token 24: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5761432647705078
    2. '(input' → logprob: -0.8261432647705078
    3. '(sys' → logprob: -8.701143264770508
    4. '()' → logprob: -11.201143264770508
    5. 'input' → logprob: -11.701143264770508
    6. '('' → logprob: -12.201143264770508
    7. '(
' → logprob: -12.451143264770508
    8. '(n' → logprob: -13.326143264770508
    9. ' (' → logprob: -14.076143264770508
    10. '(open' → logprob: -14.451143264770508

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07932374626398087
    2. '()' → logprob: -2.5793237686157227
    3. '().' → logprob: -8.079323768615723
    4. ')' → logprob: -9.829323768615723
    5. '()))' → logprob: -10.454323768615723
    6. '(' → logprob: -10.829323768615723
    7. '())
' → logprob: -11.829323768615723
    8. ' ())' → logprob: -11.829323768615723
    9. '();)' → logprob: -13.329323768615723
    10. '()
' → logprob: -13.329323768615723

Token 26: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2978225648403168
    2. '   ' → logprob: -1.4228225946426392
    3. ' ' → logprob: -5.04782247543335
    4. '    
' → logprob: -6.04782247543335
    5. '<|end|>' → logprob: -6.17282247543335
    6. '
' → logprob: -6.79782247543335
    7. '    ' → logprob: -6.92282247543335
    8. '\n' → logprob: -7.04782247543335
    9. '\' → logprob: -7.67282247543335
    10. '  ' → logprob: -7.67282247543335

Token 27: ' neighbor' (ID: 13034)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3741708993911743
    2. 'graph' → logprob: -1.6241708993911743
    3. ' graph' → logprob: -1.9991708993911743
    4. ')' → logprob: -2.3741707801818848
    5. 's' → logprob: -2.9991707801818848
    6. 'a' → logprob: -2.9991707801818848
    7. ' stack' → logprob: -3.4991707801818848
    8. 'd' → logprob: -3.4991707801818848
    9. 'stack' → logprob: -3.9991707801818848
    10. ' s' → logprob: -4.499170780181885

Token 28: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.024604277219623e-05
    2. '_s' → logprob: -10.375040054321289
    3. '_' → logprob: -12.250040054321289
    4. 'hood' → logprob: -14.000040054321289
    5. ' =' → logprob: -14.125040054321289
    6. ' s' → logprob: -14.750040054321289
    7. '```' → logprob: -14.875040054321289
    8. '_counts' → logprob: -15.125040054321289
    9. '   ' → logprob: -15.375040054321289
    10. '=' → logprob: -15.375040054321289

Token 29: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.04556969180703163
    2. '(default' → logprob: -3.170569658279419
    3. ' defaultdict' → logprob: -6.045569896697998
    4. '[' → logprob: -8.79556941986084
    5. '.default' → logprob: -11.04556941986084
    6. ' (' → logprob: -12.04556941986084
    7. ' default' → logprob: -12.17056941986084
    8. '"default' → logprob: -12.29556941986084
    9. '   ' → logprob: -12.67056941986084
    10. ''default' → logprob: -12.67056941986084

Token 30: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.024407779797911644
    2. '(lambda' → logprob: -4.774407863616943
    3. '(<' → logprob: -4.899407863616943
    4. 'list' → logprob: -5.774407863616943
    5. '(de' → logprob: -6.024407863616943
    6. '(' → logprob: -6.274407863616943
    7. '(set' → logprob: -8.024407386779785
    8. '<' → logprob: -8.774407386779785
    9. 'deque' → logprob: -8.899407386779785
    10. '```' → logprob: -10.024407386779785

Token 31: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -12.37501049041748
    3. ' )' → logprob: -12.50001049041748
    4. '()' → logprob: -14.25001049041748
    5. ')
' → logprob: -14.75001049041748
    6. '())' → logprob: -15.00001049041748
    7. '   ' → logprob: -15.37501049041748
    8. '))' → logprob: -15.50001049041748
    9. '(' → logprob: -15.87501049041748
    10. ',' → logprob: -16.000009536743164

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026398295536637306
    2. '<|end|>' → logprob: -4.026398181915283
    3. '    
' → logprob: -5.276398181915283
    4. '
' → logprob: -6.776398181915283
    5. ' for' → logprob: -7.401398181915283
    6. ')' → logprob: -7.401398181915283
    7. '<|end|>' → logprob: -8.526398658752441
    8. 'for' → logprob: -9.276398658752441
    9. '    ' → logprob: -9.276398658752441
    10. ' ' → logprob: -9.401398658752441

Token 33: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10083205252885818
    2. ' for' → logprob: -2.350831985473633
    3. '   ' → logprob: -8.100831985473633
    4. '	for' → logprob: -8.475831985473633
    5. ' ' → logprob: -10.600831985473633
    6. '<|end|>' → logprob: -10.600831985473633
    7. 'n' → logprob: -11.100831985473633
    8. '' → logprob: -11.850831985473633
    9. ')' → logprob: -11.975831985473633
    10. '
' → logprob: -12.100831985473633

Token 34: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.03385971859097481
    2. '_' → logprob: -3.4088597297668457
    3. ' i' → logprob: -9.158859252929688
    4. ' ' → logprob: -9.533859252929688
    5. ' range' → logprob: -10.283859252929688
    6. 'range' → logprob: -14.283859252929688
    7. ' ' → logprob: -14.908859252929688
    8. '_range' → logprob: -15.033859252929688
    9. '_i' → logprob: -15.158859252929688
    10. ' in' → logprob: -15.783859252929688

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03847001865506172
    2. 'in' → logprob: -3.2884700298309326
    3. ' ' → logprob: -8.163470268249512
    4. 'range' → logprob: -10.038470268249512
    5. 'import' → logprob: -10.663470268249512
    6. 'n' → logprob: -11.288470268249512
    7. 'i' → logprob: -11.288470268249512
    8. '```' → logprob: -12.038470268249512
    9. 'is' → logprob: -12.163470268249512
    10. '  ' → logprob: -12.288470268249512

Token 36: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003178782993927598
    2. ' range' → logprob: -5.753178596496582
    3. '(range' → logprob: -14.253178596496582
    4. '	range' → logprob: -15.753178596496582
    5. 'input' → logprob: -16.6281795501709
    6. ')' → logprob: -17.3781795501709
    7. '```' → logprob: -17.3781795501709
    8. '_range' → logprob: -17.7531795501709
    9. 'rang' → logprob: -17.8781795501709
    10. 'ran' → logprob: -18.0031795501709

Token 37: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06264408677816391
    2. '(' → logprob: -2.8126440048217773
    3. ' (' → logprob: -7.312644004821777
    4. '(range' → logprob: -12.312644004821777
    5. '(int' → logprob: -13.687644004821777
    6. '(s' → logprob: -13.937644004821777
    7. '(
' → logprob: -14.062644004821777
    8. ' n' → logprob: -14.187644004821777
    9. 'n' → logprob: -15.187644004821777
    10. '(nn' → logprob: -15.812644004821777

Token 38: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010881858179345727
    2. ' ):' → logprob: -7.5010881423950195
    3. '):
' → logprob: -7.7510881423950195
    4. ')' → logprob: -9.50108814239502
    5. '-' → logprob: -11.37608814239502
    6. '+' → logprob: -11.87608814239502
    7. '   ' → logprob: -12.75108814239502
    8. ':' → logprob: -12.87608814239502
    9. '):
' → logprob: -13.25108814239502
    10. ' -' → logprob: -14.00108814239502

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026300877332687378
    2. ' ' → logprob: -3.6513009071350098
    3. '<|end|>' → logprob: -14.526300430297852
    4. '2' → logprob: -16.90130043029785
    5. '   ' → logprob: -17.27630043029785
    6. '  ' → logprob: -17.27630043029785
    7. ')' → logprob: -17.52630043029785
    8. '0' → logprob: -18.15130043029785
    9. '<|end|>' → logprob: -18.40130043029785
    10. '    ' → logprob: -18.40130043029785

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '2' → logprob: -15.625035285949707
    4. ')' → logprob: -16.875036239624023
    5. '   ' → logprob: -17.125036239624023
    6. '```' → logprob: -17.625036239624023
    7. '  ' → logprob: -18.375036239624023
    8. '１' → logprob: -18.562536239624023
    9. '3' → logprob: -18.687536239624023
    10. '0' → logprob: -19.062536239624023

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003595552407205105
    2. ')' → logprob: -5.753595352172852
    3. ':' → logprob: -8.378595352172852
    4. ' ):' → logprob: -9.003595352172852
    5. '):
' → logprob: -9.753595352172852
    6. ',' → logprob: -13.128595352172852
    7. ' )' → logprob: -13.628595352172852
    8. '   ' → logprob: -13.878595352172852
    9. '():' → logprob: -14.128595352172852
    10. ''):' → logprob: -14.753595352172852

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5301699638366699
    2. '   ' → logprob: -1.53016996383667
    3. '    ' → logprob: -2.53016996383667
    4. '<|end|>' → logprob: -2.65516996383667
    5. '    
' → logprob: -4.28016996383667
    6. ' ' → logprob: -4.40516996383667
    7. ' 
' → logprob: -4.53016996383667
    8. '        
' → logprob: -6.53016996383667
    9. ')' → logprob: -6.65516996383667
    10. '<|end|>' → logprob: -7.03016996383667

Token 43: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.3517363667488098
    2. 'u' (adapté à ' u') → logprob: -1.226736307144165
    3. ' line' → logprob: -6.351736545562744
    4. '   ' → logprob: -7.226736545562744
    5. 'a' → logprob: -7.851736545562744
    6. ' a' → logprob: -8.226736068725586
    7. ' node' → logprob: -9.976736068725586
    8. 'line' → logprob: -10.226736068725586
    9. '       ' → logprob: -11.101736068725586
    10. '    
' → logprob: -11.601736068725586

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012534607201814651
    2. ' ,' → logprob: -4.3875346183776855
    3. ',u' → logprob: -11.512534141540527
    4. ' ' → logprob: -12.387534141540527
    5. '=' → logprob: -12.762534141540527
    6. ',v' → logprob: -12.762534141540527
    7. ' =' → logprob: -13.262534141540527
    8. ')' → logprob: -14.637534141540527
    9. 'u' → logprob: -15.012534141540527
    10. ',
' → logprob: -15.262534141540527

Token 45: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.12714028358459473
    2. 'v' → logprob: -2.1271402835845947
    3. ' ' → logprob: -8.502140045166016
    4. '	v' → logprob: -13.002140045166016
    5. '<|end|>' → logprob: -13.002140045166016
    6. ',v' → logprob: -13.252140045166016
    7. ' ,' → logprob: -14.877140045166016
    8. '  ' → logprob: -15.002140045166016
    9. 'u' → logprob: -15.377140045166016
    10. 'space' → logprob: -15.502140045166016

Token 46: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14271515607833862
    2. '=' → logprob: -2.0177152156829834
    3. ',' → logprob: -10.267715454101562
    4. ' ' → logprob: -13.142715454101562
    5. ')' → logprob: -13.767715454101562
    6. '    ' → logprob: -14.892715454101562
    7. ' ,' → logprob: -15.017715454101562
    8. '   ' → logprob: -15.017715454101562
    9. '=input' → logprob: -15.392715454101562
    10. '=int' → logprob: -16.017715454101562

Token 47: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.2944227457046509
    2. 'w' → logprob: -1.9194227457046509
    3. ' =' → logprob: -2.5444226264953613
    4. '=' → logprob: -3.6694226264953613
    5. ' ' → logprob: -5.669422626495361
    6. 'weight' → logprob: -9.29442310333252
    7. 'c' → logprob: -9.41942310333252
    8. ' weight' → logprob: -9.41942310333252
    9. '=int' → logprob: -9.54442310333252
    10. '=w' → logprob: -9.79442310333252

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022716462612152
    2. '=' → logprob: -1.9102271795272827
    3. ',' → logprob: -13.285226821899414
    4. ' ' → logprob: -14.910226821899414
    5. ')' → logprob: -15.535226821899414
    6. '=input' → logprob: -15.660226821899414
    7. '    ' → logprob: -16.160226821899414
    8. '＝' → logprob: -16.285226821899414
    9. '=int' → logprob: -16.660226821899414
    10. ' ,' → logprob: -16.785226821899414

Token 49: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.033652618527412415
    2. 'map' → logprob: -3.4086525440216064
    3. ' list' → logprob: -13.533652305603027
    4. '   ' → logprob: -13.783652305603027
    5. '	map' → logprob: -13.908652305603027
    6. ' input' → logprob: -14.033652305603027
    7. 'input' → logprob: -14.783652305603027
    8. 'm' → logprob: -14.783652305603027
    9. '(map' → logprob: -14.908652305603027
    10. '    ' → logprob: -15.033652305603027

Token 50: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011453792452812195
    2. '(' → logprob: -4.511453628540039
    3. '<|end|>' → logprob: -8.761453628540039
    4. '(str' → logprob: -9.261453628540039
    5. '(lambda' → logprob: -9.386453628540039
    6. 'int' → logprob: -11.136453628540039
    7. '<int' → logprob: -11.261453628540039
    8. '(input' → logprob: -11.636453628540039
    9. '(
' → logprob: -11.636453628540039
    10. '()' → logprob: -12.136453628540039

Token 51: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6333234310150146
    2. ',input' → logprob: -1.2583234310150146
    3. ',' → logprob: -1.7583234310150146
    4. '(' → logprob: -4.508323669433594
    5. ')' → logprob: -6.758323669433594
    6. 'input' → logprob: -8.133323669433594
    7. ' ,' → logprob: -9.508323669433594
    8. ' input' → logprob: -10.008323669433594
    9. '=input' → logprob: -11.258323669433594
    10. ' (' → logprob: -11.383323669433594

Token 52: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519470453262329
    2. ' input' → logprob: -1.501947045326233
    3. ')' → logprob: -11.501947402954102
    4. '(input' → logprob: -12.501947402954102
    5. '	input' → logprob: -13.626947402954102
    6. '=input' → logprob: -13.626947402954102
    7. ',input' → logprob: -14.001947402954102
    8. '[input' → logprob: -15.126947402954102
    9. '   ' → logprob: -15.626947402954102
    10. '_input' → logprob: -15.876947402954102

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.868328920158092e-05
    2. '()' → logprob: -10.500028610229492
    3. '())' → logprob: -14.500028610229492
    4. ' ().' → logprob: -15.500028610229492
    5. '(' → logprob: -16.000028610229492
    6. '()
' → logprob: -16.250028610229492
    7. ')' → logprob: -16.625028610229492
    8. '()))' → logprob: -16.750028610229492
    9. '   ' → logprob: -18.875028610229492
    10. '());' → logprob: -19.000028610229492

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004125653766095638
    2. 'strip' → logprob: -5.504125595092773
    3. 'rstrip' → logprob: -10.004125595092773
    4. '(split' → logprob: -13.379125595092773
    5. ' split' → logprob: -15.129125595092773
    6. 'spl' → logprob: -16.004125595092773
    7. 's' → logprob: -16.754125595092773
    8. ')' → logprob: -17.254125595092773
    9. ' ' → logprob: -18.004125595092773
    10. 'sp' → logprob: -18.004125595092773

Token 55: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.053722918033599854
    2. ')' → logprob: -3.053722858428955
    3. '()))' → logprob: -6.053722858428955
    4. '()' → logprob: -6.178722858428955
    5. '))' → logprob: -7.303722858428955
    6. '())
' → logprob: -10.928723335266113
    7. '(' → logprob: -12.678723335266113
    8. ' ())' → logprob: -12.803723335266113
    9. '()),' → logprob: -14.928723335266113
    10. '());' → logprob: -15.053723335266113

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07180866599082947
    2. ')' → logprob: -2.9468085765838623
    3. '<|end|>' → logprob: -4.571808815002441
    4. '   ' → logprob: -5.696808815002441
    5. ' ' → logprob: -7.071808815002441
    6. '        
' → logprob: -7.321808815002441
    7. ',' → logprob: -8.321808815002441
    8. ' )' → logprob: -8.321808815002441
    9. '    ' → logprob: -8.446808815002441
    10. ' 
' → logprob: -8.821808815002441

Token 57: ' neighbor' (ID: 13034)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026765352115035057
    2. 'neighbor' (adapté à ' neighbor') → logprob: -4.6517653465271
    3. '   ' → logprob: -4.6517653465271
    4. ' neighbor' → logprob: -5.0267653465271
    5. '<|end|>' → logprob: -8.526765823364258
    6. ')' → logprob: -8.901765823364258
    7. '```' → logprob: -9.401765823364258
    8. 'u' → logprob: -9.901765823364258
    9. '           ' → logprob: -9.901765823364258
    10. '<|end|>' → logprob: -10.026765823364258

Token 58: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00026419671485200524
    2. '[' → logprob: -8.250264167785645
    3. '[v' → logprob: -13.250264167785645
    4. '[w' → logprob: -14.875264167785645
    5. ' [' → logprob: -15.250264167785645
    6. '   ' → logprob: -15.375264167785645
    7. '```' → logprob: -15.750264167785645
    8. 'u' → logprob: -17.12526512145996
    9. '\[' → logprob: -17.25026512145996
    10. ' ' → logprob: -17.50026512145996

Token 59: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00018220659694634378
    2. ']' → logprob: -8.750182151794434
    3. ' ].' → logprob: -11.125182151794434
    4. ').' → logprob: -12.625182151794434
    5. '.append' → logprob: -12.875182151794434
    6. '[' → logprob: -13.500182151794434
    7. '.' → logprob: -14.000182151794434
    8. '   ' → logprob: -14.625182151794434
    9. '][' → logprob: -16.00018310546875
    10. ''].' → logprob: -16.87518310546875

Token 60: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. ' append' → logprob: -14.750000953674316
    3. '.append' → logprob: -15.000000953674316
    4. 'appen' → logprob: -17.125
    5. 'Append' → logprob: -17.75
    6. '_append' → logprob: -18.5
    7. 'app' → logprob: -18.625
    8. '	append' → logprob: -18.75
    9. ' ' → logprob: -20.0
    10. 'add' → logprob: -20.75

Token 61: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.005246210377663374
    2. '(' → logprob: -5.255246162414551
    3. '(v' → logprob: -12.13024616241455
    4. ' (' → logprob: -12.25524616241455
    5. '([' → logprob: -13.50524616241455
    6. ' ((' → logprob: -14.88024616241455
    7. '(('' → logprob: -16.130247116088867
    8. '   ' → logprob: -16.880247116088867
    9. '(u' → logprob: -17.005247116088867
    10. '(
' → logprob: -17.005247116088867

Token 62: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9385402993066236e-05
    2. ' v' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.625019073486328
    4. ')v' → logprob: -16.375019073486328
    5. '	v' → logprob: -17.125019073486328
    6. '
' → logprob: -18.250019073486328
    7. ' ' → logprob: -18.375019073486328
    8. '```' → logprob: -18.625019073486328
    9. '(v' → logprob: -18.875019073486328
    10. ',v' → logprob: -18.875019073486328

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006338051171042025
    2. ',w' → logprob: -8.00063419342041
    3. ' ,' → logprob: -8.12563419342041
    4. ',
' → logprob: -14.12563419342041
    5. 'w' → logprob: -14.50063419342041
    6. '‌,' → logprob: -15.12563419342041
    7. '<|end|>' → logprob: -16.000633239746094
    8. '),' → logprob: -16.125633239746094
    9. '```' → logprob: -16.125633239746094
    10. '`,' → logprob: -16.250633239746094

Token 64: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5232084393501282
    2. 'w' → logprob: -0.8982084393501282
    3. ' ' → logprob: -9.898208618164062
    4. ' ' → logprob: -11.273208618164062
    5. ')' → logprob: -11.773208618164062
    6. ' 
' → logprob: -12.523208618164062
    7. ' )' → logprob: -13.148208618164062
    8. ''w' → logprob: -13.710708618164062
    9. '    ' → logprob: -13.773208618164062
    10. ',' → logprob: -14.398208618164062

Token 65: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001063536386936903
    2. ')' → logprob: -6.876063346862793
    3. '))
' → logprob: -11.251063346862793
    4. ' ))' → logprob: -11.376063346862793
    5. ')))' → logprob: -12.626063346862793
    6. ',' → logprob: -13.751063346862793
    7. '),' → logprob: -13.876063346862793
    8. ' )' → logprob: -15.626063346862793
    9. ' ' → logprob: -15.751063346862793
    10. ')),' → logprob: -15.876063346862793

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8550976164988242e-05
    2. '<|end|>' → logprob: -11.125018119812012
    3. '   ' → logprob: -13.250018119812012
    4. ',' → logprob: -14.750018119812012
    5. '<|end|>' → logprob: -14.875018119812012
    6. ')' → logprob: -14.875018119812012
    7. ' ' → logprob: -16.000019073486328
    8. '```' → logprob: -16.125019073486328
    9. '      ' → logprob: -16.250019073486328
    10. '           ' → logprob: -16.375019073486328

Token 67: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' (adapté à ' neighbor') → logprob: -0.02691725827753544
    2. '       ' → logprob: -4.151917457580566
    3. ' neighbor' → logprob: -4.526917457580566
    4. '   ' → logprob: -12.276917457580566
    5. '_neighbor' → logprob: -13.526917457580566
    6. '           ' → logprob: -13.526917457580566
    7. 'Neighbor' → logprob: -14.401917457580566
    8. ' ' → logprob: -14.901917457580566
    9. 'v' → logprob: -15.526917457580566
    10. 'neighbors' → logprob: -15.651917457580566

Token 68: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.5048530030981055e-06
    2. 'v' → logprob: -14.250001907348633
    3. '[' → logprob: -14.750001907348633
    4. '[u' → logprob: -15.000001907348633
    5. '[w' → logprob: -18.250001907348633
    6. '```' → logprob: -18.375001907348633
    7. '	v' → logprob: -18.750001907348633
    8. '   ' → logprob: -18.875001907348633
    9. '(v' → logprob: -19.000001907348633
    10. ' [' → logprob: -19.375001907348633

Token 69: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03940047696232796
    2. ').' → logprob: -3.289400577545166
    3. ']' → logprob: -7.414400577545166
    4. ')].' → logprob: -8.289400100708008
    5. ')' → logprob: -8.664400100708008
    6. '   ' → logprob: -8.789400100708008
    7. ' ].' → logprob: -9.164400100708008
    8. '       ' → logprob: -10.914400100708008
    9. ']).' → logprob: -11.289400100708008
    10. '[' → logprob: -11.539400100708008

Token 70: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0280383548888494e-06
    2. '.append' → logprob: -14.750000953674316
    3. 'appen' → logprob: -15.125000953674316
    4. ' append' → logprob: -16.000001907348633
    5. '	append' → logprob: -16.375001907348633
    6. '_append' → logprob: -18.125001907348633
    7. 'Append' → logprob: -19.000001907348633
    8. '```' → logprob: -19.125001907348633
    9. 'app' → logprob: -19.750001907348633
    10. ' ' → logprob: -20.125001907348633

Token 71: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -12.625008583068848
    3. ' ((' → logprob: -12.875008583068848
    4. '(u' → logprob: -13.125008583068848
    5. ' (' → logprob: -15.125008583068848
    6. ' ' → logprob: -17.00000762939453
    7. '(
' → logprob: -17.87500762939453
    8. '   ' → logprob: -17.87500762939453
    9. '(v' → logprob: -18.37500762939453
    10. ')((' → logprob: -18.50000762939453

Token 72: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4744845926761627
    2. '(u' → logprob: -0.9744845628738403
    3. ' u' → logprob: -8.84948444366455
    4. ' (' → logprob: -8.84948444366455
    5. '[u' → logprob: -9.59948444366455
    6. '(' → logprob: -11.22448444366455
    7. ',u' → logprob: -11.72448444366455
    8. '   ' → logprob: -11.84948444366455
    9. '	u' → logprob: -12.09948444366455
    10. ',' → logprob: -12.22448444366455

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003706126008182764
    2. ',w' → logprob: -8.250370979309082
    3. ' ,' → logprob: -9.125370979309082
    4. ',v' → logprob: -16.125370025634766
    5. 'w' → logprob: -16.250370025634766
    6. ',
' → logprob: -16.625370025634766
    7. '`,' → logprob: -17.250370025634766
    8. '‌,' → logprob: -17.250370025634766
    9. '```' → logprob: -17.375370025634766
    10. '),' → logprob: -17.750370025634766

Token 74: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.28116410970687866
    2. 'w' → logprob: -1.4061641693115234
    3. ' ' → logprob: -12.281164169311523
    4. ',' → logprob: -12.656164169311523
    5. ' ' → logprob: -13.281164169311523
    6. ' ,' → logprob: -13.781164169311523
    7. '<|end|>' → logprob: -14.281164169311523
    8. '0' → logprob: -14.906164169311523
    9. ',w' → logprob: -14.906164169311523
    10. '```' → logprob: -15.031164169311523

Token 75: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0067310030572116375
    2. ')' → logprob: -5.006731033325195
    3. '))
' → logprob: -11.631731033325195
    4. ')))' → logprob: -12.756731033325195
    5. ' ))' → logprob: -13.006731033325195
    6. '),' → logprob: -14.631731033325195
    7. '       ' → logprob: -15.006731033325195
    8. '   ' → logprob: -15.131731033325195
    9. ' )' → logprob: -15.381731033325195
    10. ',' → logprob: -15.881731033325195

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5800647139549255
    2. '   ' → logprob: -1.2050647735595703
    3. '    
' → logprob: -2.4550647735595703
    4. 'distance' → logprob: -3.4550647735595703
    5. 'def' → logprob: -5.33006477355957
    6. 'visited' → logprob: -5.45506477355957
    7. 'q' → logprob: -6.33006477355957
    8. 'dist' → logprob: -6.33006477355957
    9. '  
' → logprob: -6.45506477355957
    10. 'b' → logprob: -6.83006477355957

Token 77: ' color' (ID: 3089)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04368136078119278
    2. 'visited' → logprob: -4.1686811447143555
    3. 'distance' → logprob: -4.4186811447143555
    4. 'q' → logprob: -5.1686811447143555
    5. 'queue' → logprob: -5.6686811447143555
    6. '   ' → logprob: -5.6686811447143555
    7. 'start' → logprob: -6.7936811447143555
    8. 'd' → logprob: -7.4186811447143555
    9. 'def' → logprob: -8.168681144714355
    10. ' dist' → logprob: -9.043681144714355

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04396248236298561
    2. '=' → logprob: -3.2939624786376953
    3. 's' → logprob: -5.293962478637695
    4. '[' → logprob: -7.793962478637695
    5. '[]' → logprob: -9.293962478637695
    6. ' ' → logprob: -9.543962478637695
    7. 'es' → logprob: -9.793962478637695
    8. '_dist' → logprob: -9.918962478637695
    9. 'dist' → logprob: -10.543962478637695
    10. '0' → logprob: -10.543962478637695

Token 79: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23074258863925934
    2. '[-' → logprob: -1.7307425737380981
    3. '{}' → logprob: -3.9807426929473877
    4. ' [' → logprob: -5.605742454528809
    5. 'default' → logprob: -5.730742454528809
    6. '{' → logprob: -6.355742454528809
    7. '['' → logprob: -7.480742454528809
    8. ' [-' → logprob: -7.480742454528809
    9. '["' → logprob: -9.355742454528809
    10. '[n' → logprob: -9.480742454528809

Token 80: 'None' (ID: 8505)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7006927728652954
    2. '0' → logprob: -0.7006927728652954
    3. ' -' → logprob: -5.825692653656006
    4. 'None' → logprob: -5.825692653656006
    5. 'False' → logprob: -7.200692653656006
    6. ' ' → logprob: -7.200692653656006
    7. ' None' → logprob: -9.200693130493164
    8. ' False' → logprob: -12.450693130493164
    9. '   ' → logprob: -12.575693130493164
    10. '"' → logprob: -12.700693130493164

Token 81: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5463155508041382
    2. '(n' → logprob: -1.2963155508041382
    3. '(' → logprob: -2.5463156700134277
    4. ' for' → logprob: -2.9213156700134277
    5. ']*(' → logprob: -5.421315670013428
    6. ' (' → logprob: -5.671315670013428
    7. ' ]' → logprob: -5.796315670013428
    8. 'for' → logprob: -6.921315670013428
    9. ']*' → logprob: -7.046315670013428
    10. '   ' → logprob: -7.296315670013428

Token 82: ' *' (ID: 425)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.33047595620155334
    2. '(' → logprob: -1.330475926399231
    3. ' (' → logprob: -4.080475807189941
    4. ' for' → logprob: -9.580475807189941
    5. ',' → logprob: -10.955475807189941
    6. '((' → logprob: -11.205475807189941
    7. '   ' → logprob: -11.330475807189941
    8. '(size' → logprob: -11.580475807189941
    9. '([' → logprob: -11.955475807189941
    10. '(len' → logprob: -12.330475807189941

Token 83: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00011903966515092179
    2. ' (' → logprob: -9.25011920928955
    3. '(' → logprob: -10.87511920928955
    4. '(u' → logprob: -13.37511920928955
    5. '   ' → logprob: -13.75011920928955
    6. '(nx' → logprob: -14.75011920928955
    7. '[n' → logprob: -15.62511920928955
    8. '((' → logprob: -15.62511920928955
    9. 'n' → logprob: -15.62511920928955
    10. ' ' → logprob: -16.125118255615234

Token 84: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2024020105600357
    2. '(n' → logprob: -1.7024019956588745
    3. ' n' → logprob: -7.202402114868164
    4. ' (' → logprob: -8.702402114868164
    5. '   ' → logprob: -10.327402114868164
    6. '(' → logprob: -10.452402114868164
    7. '[n' → logprob: -11.452402114868164
    8. ')n' → logprob: -13.702402114868164
    9. '	n' → logprob: -14.077402114868164
    10. ' ' → logprob: -14.327402114868164

Token 85: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04772783815860748
    2. ')' → logprob: -3.2977278232574463
    3. ' +' → logprob: -4.672728061676025
    4. ' )' → logprob: -8.547727584838867
    5. '+)' → logprob: -9.797727584838867
    6. '+
' → logprob: -11.047727584838867
    7. ' ' → logprob: -11.422727584838867
    8. '1' → logprob: -12.422727584838867
    9. ' +
' → logprob: -12.797727584838867
    10. '   ' → logprob: -13.297727584838867

Token 86: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -16.87537956237793
    4. '2' → logprob: -17.00037956237793
    5. '１' → logprob: -17.50037956237793
    6. '```' → logprob: -17.62537956237793
    7. '  ' → logprob: -17.87537956237793
    8. '۱' → logprob: -19.00037956237793
    9. ' ' → logprob: -20.31287956237793
    10. '' → logprob: -20.43787956237793

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -16.75
    4. '１' → logprob: -16.875
    5. '   ' → logprob: -17.25
    6. '2' → logprob: -17.5
    7. '۱' → logprob: -18.3125
    8. '

' → logprob: -19.0625
    9. '{' → logprob: -19.0625
    10. '১' → logprob: -19.125

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043460296001285315
    2. ')
' → logprob: -7.750434398651123
    3. ' )' → logprob: -13.750434875488281
    4. '   ' → logprob: -13.750434875488281
    5. ')

' → logprob: -13.875434875488281
    6. ')
' → logprob: -15.750434875488281
    7. '
' → logprob: -16.12543487548828
    8. ']' → logprob: -16.12543487548828
    9. '```' → logprob: -16.12543487548828
    10. '}' → logprob: -16.62543487548828

Token 89: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0650310292840004
    2. '   ' → logprob: -3.190031051635742
    3. '    
' → logprob: -4.565031051635742
    4. '<|end|>' → logprob: -5.440031051635742
    5. ' 
' → logprob: -6.315031051635742
    6. 'color' → logprob: -6.315031051635742
    7. '  
' → logprob: -6.565031051635742
    8. '' → logprob: -7.565031051635742
    9. ' ' → logprob: -8.190031051635742
    10. '
' → logprob: -8.815031051635742

Token 90: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' (adapté à ' color') → logprob: -0.022381464019417763
    2. 'queue' → logprob: -4.14738130569458
    3. '   ' → logprob: -5.89738130569458
    4. 'q' → logprob: -6.52238130569458
    5. 'deque' → logprob: -7.02238130569458
    6. 'from' → logprob: -7.52238130569458
    7. 'def' → logprob: -8.397381782531738
    8. ' color' → logprob: -8.647381782531738
    9. 'stack' → logprob: -9.522381782531738
    10. 'dq' → logprob: -9.647381782531738

Token 91: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004967942950315773
    2. '=' → logprob: -7.875496864318848
    3. ' =' → logprob: -9.125496864318848
    4. '=[' → logprob: -12.625496864318848
    5. '[:]' → logprob: -13.000496864318848
    6. ' ' → logprob: -15.250496864318848
    7. '\[' → logprob: -15.375496864318848
    8. '0' → logprob: -15.375496864318848
    9. '[
' → logprob: -15.500496864318848
    10. ' [' → logprob: -15.500496864318848

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. '0' → logprob: -12.750003814697266
    3. ' ' → logprob: -13.875003814697266
    4. '[' → logprob: -16.375003814697266
    5. '   ' → logprob: -17.250003814697266
    6. ')' → logprob: -17.250003814697266
    7. '=' → logprob: -17.375003814697266
    8. '(' → logprob: -17.500003814697266
    9. '１' → logprob: -18.437503814697266
    10. '2' → logprob: -18.750003814697266

Token 93: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00044914212776347995
    2. ')' → logprob: -7.875449180603027
    3. ']=' → logprob: -10.250449180603027
    4. '=' → logprob: -11.000449180603027
    5. ' ]' → logprob: -11.250449180603027
    6. ' =' → logprob: -12.625449180603027
    7. ')]' → logprob: -15.000449180603027
    8. ' ' → logprob: -16.00044822692871
    9. ',' → logprob: -16.50044822692871
    10. '[' → logprob: -16.87544822692871

Token 94: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132645785808563
    2. ' =' → logprob: -1.3132646083831787
    3. ' ' → logprob: -13.188264846801758
    4. '0' → logprob: -14.813264846801758
    5. ',' → logprob: -15.188264846801758
    6. '<|end|>' → logprob: -16.438264846801758
    7. '=

' → logprob: -16.813264846801758
    8. '＝' → logprob: -16.938264846801758
    9. '=}' → logprob: -17.313264846801758
    10. ' ' → logprob: -17.438264846801758

Token 95: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '1' → logprob: -15.375015258789062
    4. '０' → logprob: -19.500015258789062
    5. '   ' → logprob: -19.875015258789062
    6. ' ' → logprob: -20.250015258789062
    7. '```' → logprob: -20.375015258789062
    8. '[' → logprob: -20.687515258789062
    9. '۰' → logprob: -20.687515258789062
    10. '​' → logprob: -21.312515258789062

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '1' → logprob: -15.37500286102295
    4. '０' → logprob: -18.750003814697266
    5. ' ' → logprob: -19.625003814697266
    6. '   ' → logprob: -19.875003814697266
    7. '[' → logprob: -20.000003814697266
    8. '```' → logprob: -20.500003814697266
    9. '2' → logprob: -20.625003814697266
    10. '`' → logprob: -20.750003814697266

Token 97: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0011855880729854107
    2. '   ' → logprob: -7.501185417175293
    3. '<|end|>' → logprob: -8.001185417175293
    4. '    
' → logprob: -8.501185417175293
    5. ' 
' → logprob: -10.876185417175293
    6. '  
' → logprob: -11.001185417175293
    7. ' for' → logprob: -11.126185417175293
    8. '
' → logprob: -11.376185417175293
    9. '' → logprob: -11.626185417175293
    10. '   
' → logprob: -12.001185417175293

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009950157254934311
    2. '
' → logprob: -4.759950160980225
    3. '    
' → logprob: -7.134950160980225
    4. ' for' → logprob: -8.509949684143066
    5. 'for' → logprob: -8.884949684143066
    6. '<|end|>' → logprob: -9.384949684143066
    7. '  
' → logprob: -10.884949684143066
    8. 'queue' → logprob: -10.884949684143066
    9. ' queue' → logprob: -10.884949684143066
    10. '	queue' → logprob: -11.009949684143066

Token 99: ' stack' (ID: 10825)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.00977804884314537
    2. 'q' → logprob: -5.009778022766113
    3. 'dq' → logprob: -6.509778022766113
    4. '   ' → logprob: -7.009778022766113
    5. ' queue' → logprob: -8.009778022766113
    6. 'deque' → logprob: -8.259778022766113
    7. 'stack' (adapté à ' stack') → logprob: -10.009778022766113
    8. 'que' → logprob: -11.259778022766113
    9. 'd' → logprob: -11.384778022766113
    10. 'for' → logprob: -13.009778022766113

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018157200887799263
    2. '=' → logprob: -4.018157005310059
    3. '.append' → logprob: -12.018157005310059
    4. '=[]' → logprob: -14.268157005310059
    5. '＝' → logprob: -15.393157005310059
    6. '.' → logprob: -15.893157005310059
    7. ' ' → logprob: -16.768157958984375
    8. ' =[' → logprob: -16.893157958984375
    9. '<|end|>' → logprob: -17.268157958984375
    10. '.extend' → logprob: -17.643157958984375

Token 101: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.2573040723800659
    2. 'deque' → logprob: -1.507304072380066
    3. '[' → logprob: -5.5073041915893555
    4. ' deque' → logprob: -6.7573041915893555
    5. '[((' → logprob: -9.507304191589355
    6. ' [(' → logprob: -9.757304191589355
    7. 'de' → logprob: -12.257304191589355
    8. '   ' → logprob: -13.757304191589355
    9. 'Deque' → logprob: -14.507304191589355
    10. '[]' → logprob: -14.757304191589355

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.787507714354433e-05
    2. '(' → logprob: -10.00004768371582
    3. ' ' → logprob: -13.12504768371582
    4. '   ' → logprob: -15.25004768371582
    5. ' (' → logprob: -16.87504768371582
    6. ')' → logprob: -17.12504768371582
    7. '１' → logprob: -18.00004768371582
    8. '[' → logprob: -18.93754768371582
    9. '۱' → logprob: -18.93754768371582
    10. '  ' → logprob: -19.06254768371582

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028255043434910476
    2. ')]' → logprob: -8.375282287597656
    3. ')' → logprob: -10.625282287597656
    4. ',)' → logprob: -10.750282287597656
    5. ')])' → logprob: -12.875282287597656
    6. ' ,' → logprob: -13.250282287597656
    7. ',None' → logprob: -14.125282287597656
    8. ' )' → logprob: -15.250282287597656
    9. ')],' → logprob: -15.750282287597656
    10. '0' → logprob: -15.750282287597656

Token 104: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06768496334552765
    2. '-' → logprob: -2.8176848888397217
    3. 'None' → logprob: -5.567685127258301
    4. ' -' → logprob: -6.942685127258301
    5. ' ' → logprob: -7.192685127258301
    6. ' None' → logprob: -8.9426851272583
    7. ')' → logprob: -11.0676851272583
    8. '   ' → logprob: -11.4426851272583
    9. 'color' → logprob: -12.8176851272583
    10. '  ' → logprob: -13.6926851272583

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019584011286497116
    2. '-' → logprob: -4.2695841789245605
    3. 'None' → logprob: -5.2695841789245605
    4. ' ' → logprob: -8.769583702087402
    5. ' -' → logprob: -10.144583702087402
    6. ')' → logprob: -10.519583702087402
    7. ' None' → logprob: -10.519583702087402
    8. 'color' → logprob: -12.269583702087402
    9. '   ' → logprob: -12.894583702087402
    10. 'False' → logprob: -14.269583702087402

Token 106: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000494533043820411
    2. ')' → logprob: -7.750494480133057
    3. ' )' → logprob: -10.250494956970215
    4. '))' → logprob: -11.625494956970215
    5. ',' → logprob: -11.875494956970215
    6. ')])' → logprob: -11.875494956970215
    7. ']' → logprob: -13.125494956970215
    8. ')]
' → logprob: -13.750494956970215
    9. '   ' → logprob: -14.250494956970215
    10. '),' → logprob: -14.250494956970215

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29985716938972473
    2. '
' → logprob: -1.4248571395874023
    3. '    
' → logprob: -4.549857139587402
    4. ' while' → logprob: -5.799857139587402
    5. 'while' → logprob: -6.174857139587402
    6. '<|end|>' → logprob: -6.924857139587402
    7. ')' → logprob: -7.174857139587402
    8. '	while' → logprob: -7.674857139587402
    9. '  
' → logprob: -8.299857139587402
    10. '```' → logprob: -9.049857139587402

Token 108: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6960095763206482
    2. 'while' (adapté à ' while') → logprob: -0.9460095763206482
    3. ' while' → logprob: -2.196009635925293
    4. '
' → logprob: -6.446009635925293
    5. '    
' → logprob: -8.946009635925293
    6. '	while' → logprob: -9.071009635925293
    7. '```' → logprob: -10.071009635925293
    8. ')' → logprob: -11.321009635925293
    9. ' 
' → logprob: -12.321009635925293
    10. 'While' → logprob: -13.321009635925293

Token 109: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.011049704626202583
    2. 'stack' → logprob: -4.511049747467041
    3. '	stack' → logprob: -13.511049270629883
    4. '(stack' → logprob: -14.761049270629883
    5. ' ' → logprob: -15.761049270629883
    6. '   ' → logprob: -17.761049270629883
    7. '  ' → logprob: -19.261049270629883
    8. '_stack' → logprob: -19.386049270629883
    9. 'Stack' → logprob: -19.386049270629883
    10. '.stack' → logprob: -19.636049270629883

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000575432030018419
    2. '.pop' → logprob: -7.750575542449951
    3. '):' → logprob: -9.250575065612793
    4. ':
' → logprob: -11.250575065612793
    5. ' and' → logprob: -11.875575065612793
    6. '>:' → logprob: -11.875575065612793
    7. ':not' → logprob: -12.000575065612793
    8. ' :' → logprob: -12.500575065612793
    9. 'pop' → logprob: -12.875575065612793
    10. 'and' → logprob: -13.125575065612793

Token 111: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20274992287158966
    2. '       ' → logprob: -1.7027499675750732
    3. ':' → logprob: -7.452749729156494
    4. '   ' → logprob: -8.702750205993652
    5. ' ,' → logprob: -8.952750205993652
    6. ',
' → logprob: -9.077750205993652
    7. '):' → logprob: -9.452750205993652
    8. ',u' → logprob: -10.202750205993652
    9. '      ' → logprob: -10.452750205993652
    10. '    ' → logprob: -10.577750205993652

Token 112: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4849916994571686
    2. 'node' → logprob: -1.1099916696548462
    3. ' u' → logprob: -3.6099917888641357
    4. ' node' → logprob: -3.8599917888641357
    5. 'v' (adapté à ' v') → logprob: -5.734991550445557
    6. '   ' → logprob: -5.984991550445557
    7. '       ' → logprob: -7.609991550445557
    8. 'current' → logprob: -8.859992027282715
    9. ' v' → logprob: -9.484992027282715
    10. 'cur' → logprob: -10.109992027282715

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ',v' → logprob: -14.125001907348633
    3. ' ,' → logprob: -14.625001907348633
    4. ',u' → logprob: -16.500001907348633
    5. ',node' → logprob: -16.500001907348633
    6. ',color' → logprob: -16.625001907348633
    7. ',current' → logprob: -16.750001907348633
    8. ',
' → logprob: -17.250001907348633
    9. '_,' → logprob: -17.500001907348633
    10. ',c' → logprob: -17.625001907348633

Token 114: ' accum' (ID: 23148)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09526366740465164
    2. 'col' → logprob: -3.220263719558716
    3. 'par' → logprob: -4.345263481140137
    4. 'curr' → logprob: -4.345263481140137
    5. 'cur' → logprob: -5.095263481140137
    6. 'color' → logprob: -5.595263481140137
    7. 'current' → logprob: -5.595263481140137
    8. 'cv' → logprob: -5.720263481140137
    9. 'parent' → logprob: -6.220263481140137
    10. 'p' → logprob: -6.345263481140137

Token 115: ' =' (ID: 314)
  Prédit: 'ulated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulated' → logprob: -0.6107133626937866
    2. '=' → logprob: -1.3607133626937866
    3. '_weight' → logprob: -1.7357133626937866
    4. ' =' → logprob: -4.985713481903076
    5. '_w' → logprob: -5.235713481903076
    6. 'w' → logprob: -5.360713481903076
    7. 'weight' → logprob: -5.860713481903076
    8. '   ' → logprob: -6.485713481903076
    9. '_weights' → logprob: -7.485713481903076
    10. '_cost' → logprob: -7.610713481903076

Token 116: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.038046542555093765
    2. 'stack' → logprob: -3.2880465984344482
    3. '	stack' → logprob: -12.538046836853027
    4. '(stack' → logprob: -13.788046836853027
    5. '.stack' → logprob: -15.913046836853027
    6. '_stack' → logprob: -16.16304588317871
    7. '    ' → logprob: -16.41304588317871
    8. ' ' → logprob: -16.41304588317871
    9. ')' → logprob: -17.16304588317871
    10. ' queue' → logprob: -17.66304588317871

Token 117: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0045128390192985535
    2. '=' → logprob: -6.004512786865234
    3. '.' → logprob: -6.504512786865234
    4. 'pop' → logprob: -8.004512786865234
    5. ' =' → logprob: -9.629512786865234
    6. ' pop' → logprob: -9.879512786865234
    7. ')' → logprob: -10.504512786865234
    8. ' .' → logprob: -10.879512786865234
    9. '   ' → logprob: -11.129512786865234
    10. '.append' → logprob: -11.629512786865234

Token 118: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.057743949990254e-05
    2. '()
' → logprob: -10.875020980834961
    3. '(' → logprob: -14.125020980834961
    4. '()

' → logprob: -14.625020980834961
    5. ')' → logprob: -15.625020980834961
    6. ' ()' → logprob: -16.12502098083496
    7. '()
' → logprob: -16.25002098083496
    8. '()]' → logprob: -17.62502098083496
    9. '();' → logprob: -18.12502098083496
    10. '()`' → logprob: -18.50002098083496

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09021911770105362
    2. '
' → logprob: -2.965219020843506
    3. '   ' → logprob: -4.840219020843506
    4. ' for' → logprob: -4.840219020843506
    5. '<|end|>' → logprob: -4.965219020843506
    6. '        
' → logprob: -5.465219020843506
    7. '  
' → logprob: -5.590219020843506
    8. '    
' → logprob: -6.340219020843506
    9. 'for' → logprob: -8.090219497680664
    10. ' 
' → logprob: -8.340219497680664

Token 120: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5821998715400696
    2. 'for' (adapté à ' for') → logprob: -1.0821998119354248
    3. '       ' → logprob: -2.707199811935425
    4. '   ' → logprob: -3.332199811935425
    5. '	for' → logprob: -10.957200050354004
    6. '        
' → logprob: -11.957200050354004
    7. ' ' → logprob: -11.957200050354004
    8. '    
' → logprob: -12.082200050354004
    9. '
' → logprob: -12.832200050354004
    10. '```' → logprob: -12.957200050354004

Token 121: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.08528880774974823
    2. 'to' → logprob: -2.7102887630462646
    3. 'w' → logprob: -4.835289001464844
    4. 'nv' → logprob: -5.960289001464844
    5. ' u' → logprob: -6.460289001464844
    6. ' to' → logprob: -6.835289001464844
    7. ' nxt' → logprob: -7.085289001464844
    8. '(u' → logprob: -7.710289001464844
    9. '   ' → logprob: -8.585289001464844
    10. ' nv' → logprob: -9.335289001464844

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032962486147880554
    2. ',w' → logprob: -8.125329971313477
    3. ',v' → logprob: -11.000329971313477
    4. ' ,' → logprob: -11.750329971313477
    5. '<|end|>' → logprob: -13.000329971313477
    6. ',u' → logprob: -13.375329971313477
    7. '‌,' → logprob: -14.000329971313477
    8. ',color' → logprob: -14.375329971313477
    9. ',value' → logprob: -15.000329971313477
    10. ',n' → logprob: -15.125329971313477

Token 123: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0017890633316710591
    2. ' w' → logprob: -6.376789093017578
    3. 'weight' → logprob: -9.501789093017578
    4. 'c' → logprob: -12.251789093017578
    5. 'wt' → logprob: -12.376789093017578
    6. ' weight' → logprob: -13.876789093017578
    7. 'cost' → logprob: -14.001789093017578
    8. '   ' → logprob: -15.251789093017578
    9. ' ' → logprob: -15.376789093017578
    10. '_w' → logprob: -15.501789093017578

Token 124: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06200510635972023
    2. 'in' → logprob: -2.812005043029785
    3. ',' → logprob: -10.812005043029785
    4. ' ' → logprob: -11.812005043029785
    5. ')' → logprob: -12.812005043029785
    6. '	in' → logprob: -12.937005043029785
    7. 'n' → logprob: -13.687005043029785
    8. '<|end|>' → logprob: -13.812005043029785
    9. ' ' → logprob: -14.812005043029785
    10. '_in' → logprob: -15.062005043029785

Token 125: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.2519378960132599
    2. 'neighbor' → logprob: -1.5019378662109375
    3. '_neighbor' → logprob: -12.751937866210938
    4. 'ighbor' → logprob: -13.126937866210938
    5. ' ' → logprob: -13.876937866210938
    6. 'Neighbor' → logprob: -14.626937866210938
    7. '<|end|>' → logprob: -14.626937866210938
    8. 'neighbors' → logprob: -14.751937866210938
    9. '```' → logprob: -14.876937866210938
    10. 'ne' → logprob: -15.876937866210938

Token 126: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.875001907348633
    3. 'v' → logprob: -14.875001907348633
    4. '[u' → logprob: -15.125001907348633
    5. ' [' → logprob: -17.500001907348633
    6. '[
' → logprob: -18.625001907348633
    7. '   ' → logprob: -18.750001907348633
    8. '][' → logprob: -18.750001907348633
    9. '(v' → logprob: -18.875001907348633
    10. '[s' → logprob: -19.000001907348633

Token 127: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.034132689237594604
    2. '):' → logprob: -3.409132719039917
    3. ']):' → logprob: -8.409132957458496
    4. ']' → logprob: -9.034132957458496
    5. ':' → logprob: -9.784132957458496
    6. ']:
' → logprob: -9.784132957458496
    7. '):
' → logprob: -11.534132957458496
    8. '}:' → logprob: -11.909132957458496
    9. '():' → logprob: -12.784132957458496
    10. '"]:' → logprob: -12.784132957458496

Token 128: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.720679521560669
    2. '<|end|>' → logprob: -1.720679521560669
    3. '           ' → logprob: -1.845679521560669
    4. '
' → logprob: -2.595679521560669
    5. '       ' → logprob: -2.970679521560669
    6. ':
' → logprob: -3.845679521560669
    7. '<|end|>' → logprob: -4.97067928314209
    8. '        
' → logprob: -5.22067928314209
    9. ',' → logprob: -5.47067928314209
    10. '               ' → logprob: -6.09567928314209

Token 129: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9966157078742981
    2. '<|end|>' → logprob: -1.2466156482696533
    3. ' if' → logprob: -1.4966156482696533
    4. ' ' → logprob: -2.6216156482696533
    5. 'if' (adapté à ' if') → logprob: -4.246615886688232
    6. ',' → logprob: -5.121615886688232
    7. '           ' → logprob: -5.371615886688232
    8. ' 
' → logprob: -5.371615886688232
    9. '```' → logprob: -5.496615886688232
    10. '
' → logprob: -6.246615886688232

Token 130: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.20142056047916412
    2. 'color' → logprob: -1.701420545578003
    3. '   ' → logprob: -13.076420783996582
    4. '	color' → logprob: -13.951420783996582
    5. '(color' → logprob: -14.076420783996582
    6. '[color' → logprob: -14.326420783996582
    7. '_color' → logprob: -14.701420783996582
    8. '.color' → logprob: -14.826420783996582
    9. '=color' → logprob: -14.826420783996582
    10. '    ' → logprob: -15.326420783996582

Token 131: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.500003814697266
    3. 'u' → logprob: -16.000003814697266
    4. '[user' → logprob: -18.750003814697266
    5. ' [' → logprob: -18.875003814697266
    6. '[
' → logprob: -18.875003814697266
    7. '```' → logprob: -19.500003814697266
    8. '<u' → logprob: -19.500003814697266
    9. '[v' → logprob: -19.625003814697266
    10. '[w' → logprob: -19.750003814697266

Token 132: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.02898220717906952
    2. 'is' → logprob: -3.778982162475586
    3. ']' → logprob: -5.653982162475586
    4. ')' → logprob: -6.278982162475586
    5. ' ]' → logprob: -9.153982162475586
    6. ' )' → logprob: -9.403982162475586
    7. '[' → logprob: -9.528982162475586
    8. ' ' → logprob: -9.778982162475586
    9. ')is' → logprob: -11.028982162475586
    10. '	is' → logprob: -13.278982162475586

Token 133: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.062043197453022
    2. 'is' → logprob: -2.8120431900024414
    3. ' ' → logprob: -9.812043190002441
    4. '[' → logprob: -11.562043190002441
    5. ')' → logprob: -11.937043190002441
    6. '==' → logprob: -13.062043190002441
    7. ' )' → logprob: -14.062043190002441
    8. ')is' → logprob: -15.062043190002441
    9. ' None' → logprob: -15.312043190002441
    10. '	is' → logprob: -15.437043190002441

Token 134: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6931816339492798
    2. 'None' → logprob: -0.6931816339492798
    3. ' ' → logprob: -10.693181991577148
    4. 'N' → logprob: -11.693181991577148
    5. '_None' → logprob: -13.568181991577148
    6. ' N' → logprob: -14.068181991577148
    7. ' not' → logprob: -14.318181991577148
    8. '(None' → logprob: -15.318181991577148
    9. '   ' → logprob: -15.693181991577148
    10. '  ' → logprob: -15.943181991577148

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002854328602552414
    2. ':
' → logprob: -6.252854347229004
    3. ' and' → logprob: -7.252854347229004
    4. ' or' → logprob: -9.002854347229004
    5. '):' → logprob: -9.752854347229004
    6. 'and' → logprob: -10.877854347229004
    7. ')' → logprob: -12.377854347229004
    8. ',' → logprob: -12.877854347229004
    9. '<|end|>' → logprob: -12.877854347229004
    10. ' :' → logprob: -13.127854347229004

Token 136: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12716853618621826
    2. ':' → logprob: -2.252168655395508
    3. ':
' → logprob: -5.127168655395508
    4. '           ' → logprob: -5.877168655395508
    5. ' and' → logprob: -6.252168655395508
    6. '                
' → logprob: -6.877168655395508
    7. ',' → logprob: -7.502168655395508
    8. '<|end|>' → logprob: -7.752168655395508
    9. '            
' → logprob: -8.002168655395508
    10. ')' → logprob: -8.252168655395508

Token 137: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' (adapté à ' color') → logprob: -0.5184204578399658
    2. ' color' → logprob: -1.0184204578399658
    3. '               ' → logprob: -3.393420457839966
    4. '                   ' → logprob: -5.018420219421387
    5. '           ' → logprob: -6.893420219421387
    6. '<|end|>' → logprob: -7.268420219421387
    7. '
' → logprob: -8.393420219421387
    8. '                ' → logprob: -8.893420219421387
    9. '[color' → logprob: -8.893420219421387
    10. '                
' → logprob: -9.018420219421387

Token 138: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -8.637786231702194e-05
    2. '[' → logprob: -9.500086784362793
    3. '[v' → logprob: -13.125086784362793
    4. 'u' → logprob: -13.125086784362793
    5. '```' → logprob: -13.500086784362793
    6. '               ' → logprob: -13.625086784362793
    7. '[user' → logprob: -13.750086784362793
    8. ' [' → logprob: -14.250086784362793
    9. '=u' → logprob: -14.625086784362793
    10. '=' → logprob: -14.750086784362793

Token 139: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000498701527249068
    2. '=' → logprob: -8.00049877166748
    3. ']=' → logprob: -9.37549877166748
    4. ' =' → logprob: -10.00049877166748
    5. ')' → logprob: -10.75049877166748
    6. ' ]' → logprob: -11.50049877166748
    7. ' ' → logprob: -13.87549877166748
    8. ']=(' → logprob: -15.12549877166748
    9. '[' → logprob: -15.75049877166748
    10. ',' → logprob: -16.375497817993164

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132704198360443
    2. '=' → logprob: -1.3132704496383667
    3. ')' → logprob: -12.938270568847656
    4. ' ' → logprob: -13.313270568847656
    5. '=color' → logprob: -13.313270568847656
    6. ' =(' → logprob: -14.063270568847656
    7. ']' → logprob: -14.563270568847656
    8. '＝' → logprob: -15.188270568847656
    9. '=(' → logprob: -15.563270568847656
    10. '=int' → logprob: -15.688270568847656

Token 141: ' (' (ID: 350)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.5320727825164795
    2. ' (' → logprob: -1.4070727825164795
    3. '(color' → logprob: -2.6570727825164795
    4. 'acc' → logprob: -3.5320727825164795
    5. '(' → logprob: -3.7820727825164795
    6. 'color' → logprob: -3.9070727825164795
    7. ' color' → logprob: -4.657073020935059
    8. '1' → logprob: -4.782073020935059
    9. ' accum' → logprob: -5.657073020935059
    10. ' acc' → logprob: -6.907073020935059

Token 142: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.11066041886806488
    2. 'color' → logprob: -2.4856603145599365
    3. ' accum' → logprob: -4.235660552978516
    4. '(acc' → logprob: -5.485660552978516
    5. ' color' → logprob: -6.360660552978516
    6. '(color' → logprob: -8.235660552978516
    7. '           ' → logprob: -8.485660552978516
    8. '   ' → logprob: -8.985660552978516
    9. ' acc' → logprob: -9.235660552978516
    10. '               ' → logprob: -9.985660552978516

Token 143: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.01172563061118126
    2. 'ul' → logprob: -4.636725425720215
    3. 'umul' → logprob: -6.886725425720215
    4. '   ' → logprob: -7.761725425720215
    5. 'cum' → logprob: -9.761725425720215
    6. 'uml' → logprob: -10.011725425720215
    7. 'umulate' → logprob: -10.136725425720215
    8. 'u' → logprob: -10.261725425720215
    9. '%' → logprob: -10.386725425720215
    10. 'w' → logprob: -10.511725425720215

Token 144: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20580948889255524
    2. ' +' → logprob: -1.705809473991394
    3. '+w' → logprob: -5.455809593200684
    4. ' ' → logprob: -10.080809593200684
    5. ' w' → logprob: -10.330809593200684
    6. 'w' → logprob: -11.330809593200684
    7. ')' → logprob: -11.455809593200684
    8. '%' → logprob: -11.955809593200684
    9. ' ^' → logprob: -12.580809593200684
    10. '^' → logprob: -13.580809593200684

Token 145: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.026309238746762276
    2. ' w' → logprob: -3.6513092517852783
    3. '                   ' → logprob: -12.4013090133667
    4. '               ' → logprob: -13.0263090133667
    5. '   ' → logprob: -14.5263090133667
    6. ' ' → logprob: -14.5263090133667
    7. '           ' → logprob: -14.7763090133667
    8. ')' → logprob: -15.1513090133667
    9. '                       ' → logprob: -15.5263090133667
    10. '	w' → logprob: -15.6513090133667

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020461321400944144
    2. ' )' → logprob: -8.625205039978027
    3. ')%' → logprob: -10.625205039978027
    4. ' ' → logprob: -14.875205039978027
    5. '   ' → logprob: -15.375205039978027
    6. '%' → logprob: -16.62520408630371
    7. '）' → logprob: -17.62520408630371
    8. ' ' → logprob: -18.37520408630371
    9. '	' → logprob: -18.62520408630371
    10. '  ' → logprob: -19.37520408630371

Token 147: ' &' (ID: 827)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31347161531448364
    2. '%' → logprob: -1.3134715557098389
    3. ' ' → logprob: -9.063471794128418
    4. ')' → logprob: -9.563471794128418
    5. ')%' → logprob: -11.063471794128418
    6. ' ' → logprob: -12.313471794128418
    7. '
' → logprob: -13.813471794128418
    8. ' &' → logprob: -14.438471794128418
    9. ' )' → logprob: -14.813471794128418
    10. ' `%' → logprob: -15.438471794128418

Token 148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42871183156967163
    2. ' ' → logprob: -1.0537118911743164
    3. ' ' → logprob: -11.928711891174316
    4. ' (' → logprob: -14.241211891174316
    5. '
' → logprob: -14.678711891174316
    6. '(' → logprob: -15.053711891174316
    7. '```' → logprob: -15.053711891174316
    8. '[' → logprob: -15.553711891174316
    9. '   ' → logprob: -15.616211891174316
    10. '１' → logprob: -15.803711891174316

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -17.250003814697266
    4. '255' → logprob: -17.500003814697266
    5. '１' → logprob: -17.500003814697266
    6. '```' → logprob: -18.500003814697266
    7. '01' → logprob: -18.750003814697266
    8. '127' → logprob: -18.875003814697266
    9. '
' → logprob: -19.125003814697266
    10. '' → logprob: -19.250003814697266

Token 150: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12259305268526077
    2. '
' → logprob: -2.6225931644439697
    3. 'stack' → logprob: -3.4975931644439697
    4. ')' → logprob: -5.372592926025391
    5. '                
' → logprob: -6.122592926025391
    6. ' stack' → logprob: -6.247592926025391
    7. ')
' → logprob: -6.747592926025391
    8. '  
' → logprob: -7.497592926025391
    9. '                   ' → logprob: -7.872592926025391
    10. '           ' → logprob: -8.37259292602539

Token 151: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.215330409351736e-05
    2. ',' → logprob: -11.125041961669922
    3. '                
' → logprob: -11.500041961669922
    4. '              ' → logprob: -12.000041961669922
    5. ')' → logprob: -12.500041961669922
    6. '```' → logprob: -12.875041961669922
    7. '			' → logprob: -14.125041961669922
    8. '
' → logprob: -14.375041961669922
    9. '           ' → logprob: -14.500041961669922
    10. '                ' → logprob: -14.625041961669922

Token 152: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.030143138021230698
    2. ' stack' → logprob: -3.5301430225372314
    3. '               ' → logprob: -7.9051432609558105
    4. '   ' → logprob: -11.280142784118652
    5. '           ' → logprob: -12.280142784118652
    6. '	stack' → logprob: -12.405142784118652
    7. '       ' → logprob: -13.780142784118652
    8. ' ' → logprob: -15.030142784118652
    9. '_stack' → logprob: -15.030142784118652
    10. '                   ' → logprob: -15.280142784118652

Token 153: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020866614067927003
    2. '.' → logprob: -8.500208854675293
    3. 'append' → logprob: -12.750208854675293
    4. ' .' → logprob: -13.875208854675293
    5. '.push' → logprob: -14.750208854675293
    6. '.extend' → logprob: -14.875208854675293
    7. '.app' → logprob: -15.000208854675293
    8. ').' → logprob: -15.625208854675293
    9. '.Append' → logprob: -17.250207901000977
    10. '_append' → logprob: -17.875207901000977

Token 154: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.500001907348633
    3. '(u' → logprob: -14.875001907348633
    4. ' ((' → logprob: -16.000001907348633
    5. '(((' → logprob: -16.750001907348633
    6. ')((' → logprob: -20.125001907348633
    7. '```' → logprob: -20.250001907348633
    8. '(
' → logprob: -20.375001907348633
    9. '[(' → logprob: -20.625001907348633
    10. ' (' → logprob: -20.750001907348633

Token 155: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.0339031834737398e-05
    2. ' u' → logprob: -11.250020027160645
    3. '(u' → logprob: -11.875020027160645
    4. '[u' → logprob: -16.50002098083496
    5. '	u' → logprob: -16.62502098083496
    6. '   ' → logprob: -16.87502098083496
    7. ',u' → logprob: -18.25002098083496
    8. ')' → logprob: -18.50002098083496
    9. '<|end|>' → logprob: -18.87502098083496
    10. ''u' → logprob: -19.00002098083496

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.014684110297821e-06
    2. ',u' → logprob: -12.375008583068848
    3. ',w' → logprob: -12.875008583068848
    4. ' ,' → logprob: -13.375008583068848
    5. ',
' → logprob: -14.625008583068848
    6. 'u' → logprob: -16.125009536743164
    7. '[' → logprob: -17.625009536743164
    8. '```' → logprob: -17.750009536743164
    9. '‌,' → logprob: -18.125009536743164
    10. ',

' → logprob: -18.125009536743164

Token 157: ' accum' (ID: 23148)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.02984096296131611
    2. ' u' → logprob: -3.5298409461975098
    3. ')' → logprob: -10.279841423034668
    4. '0' → logprob: -10.654841423034668
    5. ' ' → logprob: -11.279841423034668
    6. 'v' → logprob: -12.529841423034668
    7. '1' → logprob: -12.779841423034668
    8. 'w' → logprob: -12.779841423034668
    9. '(u' → logprob: -13.154841423034668
    10. '[u' → logprob: -13.404841423034668

Token 158: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4748135507106781
    2. ' +' → logprob: -1.0998135805130005
    3. '+w' → logprob: -3.099813461303711
    4. ')' → logprob: -13.599813461303711
    5. '＋' → logprob: -13.724813461303711
    6. ' ' → logprob: -13.974813461303711
    7. '+)' → logprob: -14.099813461303711
    8. ' ' → logprob: -14.099813461303711
    9. '+
' → logprob: -14.224813461303711
    10. '+x' → logprob: -15.224813461303711

Token 159: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.026303550228476524
    2. ' w' → logprob: -3.65130352973938
    3. ' ' → logprob: -13.7763032913208
    4. '   ' → logprob: -14.1513032913208
    5. '	w' → logprob: -15.1513032913208
    6. ')' → logprob: -15.1513032913208
    7. ' ' → logprob: -15.4013032913208
    8. ''w' → logprob: -15.9013032913208
    9. '    ' → logprob: -16.151304244995117
    10. '*w' → logprob: -16.651304244995117

Token 160: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001342903997283429
    2. ')' → logprob: -9.125134468078613
    3. '))
' → logprob: -11.125134468078613
    4. ')))' → logprob: -11.500134468078613
    5. ' ))' → logprob: -14.875134468078613
    6. '))

' → logprob: -16.000133514404297
    7. '))))' → logprob: -18.250133514404297
    8. '));' → logprob: -18.375133514404297
    9. '()))' → logprob: -18.500133514404297
    10. '))
' → logprob: -18.875133514404297

Token 161: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0023075041826814413
    2. '   ' → logprob: -7.127307415008545
    3. '
' → logprob: -7.627307415008545
    4. ' if' → logprob: -7.627307415008545
    5. '    
' → logprob: -9.002307891845703
    6. '<|end|>' → logprob: -9.002307891845703
    7. '  
' → logprob: -9.752307891845703
    8. 'main' → logprob: -9.752307891845703
    9. ')' → logprob: -9.877307891845703
    10. '```' → logprob: -10.002307891845703

Token 162: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08041708171367645
    2. 'print' (adapté à ' print') → logprob: -2.5804171562194824
    3. ' for' → logprob: -6.580417156219482
    4. '   ' → logprob: -8.955416679382324
    5. ' print' → logprob: -12.205416679382324
    6. '```' → logprob: -13.080416679382324
    7. 'return' → logprob: -14.205416679382324
    8. '
' → logprob: -14.580416679382324
    9. '    
' → logprob: -14.580416679382324
    10. 'if' → logprob: -14.580416679382324

Token 163: '('\' (ID: 24345)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0909093618392944
    2. '(color' → logprob: -1.0909093618392944
    3. '('' → logprob: -1.8409093618392944
    4. '("' → logprob: -3.090909481048584
    5. '(sum' → logprob: -3.215909481048584
    6. '(tuple' → logprob: -3.590909481048584
    7. '([' → logprob: -3.715909481048584
    8. '(*' → logprob: -3.965909481048584
    9. '((' → logprob: -4.965909481048584
    10. '(max' → logprob: -6.090909481048584

Token 164: 'n' (ID: 77)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.6867952942848206
    2. 'n' → logprob: -1.1867952346801758
    3. ''.' → logprob: -2.436795234680176
    4. ''' → logprob: -2.811795234680176
    5. 'join' → logprob: -3.686795234680176
    6. ''\' → logprob: -4.686795234680176
    7. '\n' → logprob: -5.811795234680176
    8. ' ''.' → logprob: -5.811795234680176
    9. '''' → logprob: -6.561795234680176
    10. '
' → logprob: -7.186795234680176

Token 165: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0004320996522437781
    2. '.' → logprob: -8.500432014465332
    3. '".' → logprob: -8.750432014465332
    4. '''.' → logprob: -10.500432014465332
    5. 'join' → logprob: -10.500432014465332
    6. '.join' → logprob: -11.875432014465332
    7. ''' → logprob: -12.125432014465332
    8. ').' → logprob: -14.000432014465332
    9. ' .' → logprob: -14.000432014465332
    10. '`.' → logprob: -14.750432014465332

Token 166: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.816093228830141e-06
    2. 'jo' → logprob: -13.25000286102295
    3. 'j' → logprob: -14.00000286102295
    4. ' join' → logprob: -16.250001907348633
    5. 'print' → logprob: -17.375001907348633
    6. '```' → logprob: -18.875001907348633
    7. '(join' → logprob: -19.375001907348633
    8. '.join' → logprob: -19.625001907348633
    9. 'sep' → logprob: -20.125001907348633
    10. ' ' → logprob: -20.250001907348633

Token 167: '(map' (ID: 16946)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.47502589225769043
    2. '(map' → logprob: -0.9750258922576904
    3. 'map' → logprob: -7.7250261306762695
    4. '('' → logprob: -8.47502613067627
    5. '(' → logprob: -8.85002613067627
    6. 'str' → logprob: -9.35002613067627
    7. '(['' → logprob: -9.97502613067627
    8. '([' → logprob: -11.47502613067627
    9. ')' → logprob: -12.72502613067627
    10. '[str' → logprob: -12.97502613067627

Token 168: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -2.9160102712921798e-05
    2. 'str' → logprob: -10.750029563903809
    3. '(lambda' → logprob: -12.500029563903809
    4. '(' → logprob: -12.750029563903809
    5. '[str' → logprob: -14.375029563903809
    6. ')' → logprob: -15.125029563903809
    7. ' str' → logprob: -16.000028610229492
    8. '=str' → logprob: -16.125028610229492
    9. '	str' → logprob: -16.750028610229492
    10. ')(' → logprob: -16.875028610229492

Token 169: ',' (ID: 11)
  Prédit: '(color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(color' → logprob: -0.4097772538661957
    2. ',' → logprob: -1.784777283668518
    3. ',color' → logprob: -1.784777283668518
    4. ' ,' → logprob: -8.534777641296387
    5. 'color' → logprob: -8.534777641296387
    6. ' (' → logprob: -9.784777641296387
    7. '(' → logprob: -10.159777641296387
    8. ',(' → logprob: -11.409777641296387
    9. '   ' → logprob: -11.534777641296387
    10. ' color' → logprob: -11.534777641296387

Token 170: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.008619066327810287
    2. ' color' → logprob: -4.7586188316345215
    3. '   ' → logprob: -12.88361930847168
    4. '(color' → logprob: -13.50861930847168
    5. '	color' → logprob: -15.00861930847168
    6. '[color' → logprob: -15.75861930847168
    7. '=color' → logprob: -16.00861930847168
    8. ',color' → logprob: -16.38361930847168
    9. ' ' → logprob: -17.63361930847168
    10. ';color' → logprob: -19.13361930847168

Token 171: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.5
    3. '```' → logprob: -18.375
    4. '))' → logprob: -19.0
    5. '))[' → logprob: -19.0
    6. ')))' → logprob: -19.0
    7. ' [' → logprob: -19.25
    8. ')[' → logprob: -19.5
    9. ' ' → logprob: -20.125
    10. '()[' → logprob: -20.25

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0219828002154827e-05
    2. '[' → logprob: -11.000020027160645
    3. ' ' → logprob: -13.000020027160645
    4. '   ' → logprob: -14.500020027160645
    5. 'range' → logprob: -15.375020027160645
    6. '```' → logprob: -15.625020027160645
    7. '
' → logprob: -16.00002098083496
    8. ')' → logprob: -17.12502098083496
    9. '(' → logprob: -17.75002098083496
    10. '2' → logprob: -17.75002098083496

Token 173: ':' (ID: 25)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.06196959316730499
    2. ':' → logprob: -2.811969518661499
    3. ':)' → logprob: -14.311969757080078
    4. ' :]' → logprob: -14.436969757080078
    5. '[' → logprob: -14.811969757080078
    6. '])))' → logprob: -15.311969757080078
    7. '[:]' → logprob: -16.186969757080078
    8. ':]

' → logprob: -17.186969757080078
    9. ':].' → logprob: -17.936969757080078
    10. ']))' → logprob: -17.936969757080078

Token 174: ']))' (ID: 20259)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0003843173326458782
    2. ')' → logprob: -8.125384330749512
    3. '))))' → logprob: -9.625384330749512
    4. '))' → logprob: -11.375384330749512
    5. '())))' → logprob: -12.125384330749512
    6. ' ' → logprob: -12.500384330749512
    7. ')))
' → logprob: -14.125384330749512
    8. ')));' → logprob: -15.000384330749512
    9. '')))' → logprob: -15.875384330749512
    10. '()' → logprob: -16.375383377075195

Token 175: ')

' (ID: 1029)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16022838652133942
    2. ')' → logprob: -1.9102283716201782
    3. '))
' → logprob: -13.035228729248047
    4. ')))' → logprob: -13.535228729248047
    5. ')
' → logprob: -15.660228729248047
    6. ' )' → logprob: -15.910228729248047
    7. ' ))' → logprob: -15.910228729248047
    8. '   ' → logprob: -16.785228729248047
    9. ')`' → logprob: -16.785228729248047
    10. ')}' → logprob: -17.035228729248047

Token 176: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08889944106340408
    2. '<|end|>' → logprob: -2.9638993740081787
    3. '
' → logprob: -3.7138993740081787
    4. '\n' → logprob: -5.463899612426758
    5. '```' → logprob: -5.963899612426758
    6. '#' → logprob: -7.338899612426758
    7. 'main' → logprob: -7.838899612426758
    8. ' if' → logprob: -8.213899612426758
    9. '  
' → logprob: -8.463899612426758
    10. '\' → logprob: -8.463899612426758

Token 177: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.062148842960596085
    2. '__' → logprob: -2.8121488094329834
    3. ' ' → logprob: -9.062149047851562
    4. '_' → logprob: -9.812149047851562
    5. '_name' → logprob: -12.437149047851562
    6. ' ' → logprob: -13.062149047851562
    7. ' ' → logprob: -13.812149047851562
    8. '___' → logprob: -13.937149047851562
    9. ' _' → logprob: -14.187149047851562
    10. 'name' → logprob: -14.687149047851562

Token 178: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07819109410047531
    2. ' ==' → logprob: -2.953191041946411
    3. ' __' → logprob: -4.82819128036499
    4. '==' → logprob: -4.95319128036499
    5. '.__' → logprob: -5.32819128036499
    6. '__.' → logprob: -7.45319128036499
    7. '[' → logprob: -7.45319128036499
    8. '.' → logprob: -7.70319128036499
    9. '__.__' → logprob: -7.82819128036499
    10. '_' → logprob: -8.453190803527832

Token 179: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.292907877039397e-06
    2. '__.__' → logprob: -13.25000286102295
    3. '_' → logprob: -14.37500286102295
    4. '==' → logprob: -15.12500286102295
    5. '___' → logprob: -15.25000286102295
    6. '__.' → logprob: -15.37500286102295
    7. '____' → logprob: -15.87500286102295
    8. '__
' → logprob: -17.500003814697266
    9. '__

' → logprob: -18.500003814697266
    10. ' __' → logprob: -18.750003814697266

Token 180: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8314749598503113
    2. '__' → logprob: -1.206475019454956
    3. ' ==' → logprob: -1.331475019454956
    4. '=="' → logprob: -6.956474781036377
    5. '=='' → logprob: -8.706475257873535
    6. '_' → logprob: -9.706475257873535
    7. '=' → logprob: -11.206475257873535
    8. '___' → logprob: -11.706475257873535
    9. '__.__' → logprob: -11.706475257873535
    10. '==
' → logprob: -11.956475257873535

Token 181: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04862949252128601
    2. ''' → logprob: -3.0486295223236084
    3. ' "__' → logprob: -10.173629760742188
    4. '__' → logprob: -13.298629760742188
    5. ' '__' → logprob: -13.298629760742188
    6. '"user' → logprob: -15.298629760742188
    7. '"name' → logprob: -16.798629760742188
    8. ''"' → logprob: -16.923629760742188
    9. '"_' → logprob: -17.673629760742188
    10. '"type' → logprob: -17.923629760742188

Token 182: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04481634497642517
    2. '__' → logprob: -3.169816255569458
    3. 'name' → logprob: -6.669816493988037
    4. '```' → logprob: -8.294816017150879
    5. '_main' → logprob: -8.794816017150879
    6. '__":
' → logprob: -10.294816017150879
    7. '_MAIN' → logprob: -10.794816017150879
    8. '"' → logprob: -11.044816017150879
    9. '   ' → logprob: -11.294816017150879
    10. '__':
' → logprob: -11.419816017150879

Token 183: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3285501003265381
    2. '__' → logprob: -1.328550100326538
    3. '__.' → logprob: -4.328550338745117
    4. '__:' → logprob: -7.203550338745117
    5. '__':
' → logprob: -7.328550338745117
    6. '__.__' → logprob: -7.703550338745117
    7. '__["' → logprob: -9.453550338745117
    8. '.' → logprob: -10.328550338745117
    9. '__[' → logprob: -11.953550338745117
    10. '.__' → logprob: -12.203550338745117

Token 184: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12885244190692902
    2. 'main' → logprob: -2.128852367401123
    3. '	main' → logprob: -6.753852367401123
    4. '   ' → logprob: -7.253852367401123
    5. '_main' → logprob: -10.253852844238281
    6. '(main' → logprob: -12.128852844238281
    7. '    
' → logprob: -12.253852844238281
    8. 'Main' → logprob: -14.753852844238281
    9. '<|end|>' → logprob: -14.753852844238281
    10. '.main' → logprob: -15.003852844238281

Token 185: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.008129963040119e-06
    2. ' main' → logprob: -12.500003814697266
    3. '	main' → logprob: -15.500003814697266
    4. '   ' → logprob: -17.125003814697266
    5. '(main' → logprob: -20.500003814697266
    6. '.main' → logprob: -20.750003814697266
    7. '_main' → logprob: -21.125003814697266
    8. '  ' → logprob: -21.500003814697266
    9. 'mainwindow' → logprob: -22.500003814697266
    10. ' ' → logprob: -22.875003814697266

Token 186: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.15441757265944e-05
    2. '()
' → logprob: -10.500031471252441
    3. '(' → logprob: -12.875031471252441
    4. '()\' → logprob: -15.000031471252441
    5. '()`' → logprob: -15.125031471252441
    6. '()<' → logprob: -15.875031471252441
    7. '()">' → logprob: -16.000032424926758
    8. ' ()' → logprob: -16.000032424926758
    9. '()

' → logprob: -16.250032424926758
    10. '()"' → logprob: -16.250032424926758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 184
Tokens correctement prédits (1ère position, stricte): 90
Tokens correctement prédits (1ère position, avec adaptation): 96
Tokens correctement prédits (top 10): 170
Précision stricte (1ère position): 48.91%
Précision adaptée (1ère position): 52.17%
Précision (top 10): 92.39%
================================================================================
