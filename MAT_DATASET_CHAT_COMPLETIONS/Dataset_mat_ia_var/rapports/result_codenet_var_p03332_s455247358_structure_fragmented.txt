================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def create_factorial_list_size(n):
    return [1] * (n + 1)

def initialize_first_two_factorials(F):
    F[0] = 1
    F[1] = 1

def compute_factorials(F, n, p):
    for i in range(2, n + 1):
        F[i] = F[i - 1] * i % p

def fib(n, p):
    F = create_factorial_list_size(n)
    initialize_first_two_factorials(F)
    compute_factorials(F, n, p)
    return F

def get_N_from_F(F):
    return len(F) - 1

def duplicate_factorial_list(F):
    return list(F)

def set_last_inverse(Finv, F, p):
    Finv[-1] = pow(F[-1], p - 2, p)

def compute_inverse_factorials(Finv, N, p):
    for i in range(N - 1, -1, -1):
        Finv[i] = Finv[i + 1] * (i + 1) % p

def finv(F, p):
    N = get_N_from_F(F)
    Finv = duplicate_factorial_list(F)
    set_last_inverse(Finv, F, p)
    compute_inverse_factorials(Finv, N, p)
    return Finv

def multiply_and_mod(a, b, p):
    return a * b % p

def comb(F, Finv, n, a, p):
    temp = multiply_and_mod(F[n], Finv[a], p)
    temp = multiply_and_mod(temp, Finv[n - a], p)
    return temp

def read_input():
    return map(int, input().split())

def get_factorials(N, p):
    return fib(N, p)

def get_inverse_factorials(F, p):
    return finv(F, p)

def should_continue_due_to_A(_A, K):
    return _A > K

def calc_A_times_a(A, a):
    return A * a

def B_divides_difference(K, _A, B):
    return (K - _A) % B == 0

def calc_b(K, _A, B):
    return (K - _A) // B

def is_b_within_range(b, N):
    return b <= N

def update_cnt(cnt, F, Finv, N, a, b, p):
    value1 = comb(F, Finv, N, a, p)
    value2 = comb(F, Finv, N, b, p)
    new_cnt = cnt + value1 * value2
    return new_cnt % p

def main_process():
    N, A, B, K = read_input()
    p = 998244353
    F = get_factorials(N, p)
    Finv = get_inverse_factorials(F, p)
    cnt = 0
    upper_a = min(N + 1, K // A + 1)
    for a in range(upper_a):
        _A = calc_A_times_a(A, a)
        if should_continue_due_to_A(_A, K):
            continue
        if not B_divides_difference(K, _A, B):
            continue
        b = calc_b(K, _A, B)
        if not is_b_within_range(b, N):
            continue
        cnt = update_cnt(cnt, F, Finv, N, a, b, p)
    print(cnt)

main_process()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' create' (ID: 2501)
  → Token d'amorce (pas de prédiction)

Token 2: '_factor' (ID: 43757)
  → Token d'amorce (pas de prédiction)

Token 3: 'ial' (ID: 563)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08477266877889633
    2. 's' → logprob: -3.0847725868225098
    3. '_s' → logprob: -3.4597725868225098
    4. '_factor' → logprob: -6.70977258682251
    5. '_(' → logprob: -6.95977258682251
    6. '(' → logprob: -7.20977258682251
    7. '(s' → logprob: -7.95977258682251
    8. '```' → logprob: -8.709773063659668
    9. '(_' → logprob: -8.959773063659668
    10. '_table' → logprob: -9.584773063659668

Token 4: '_list' (ID: 4162)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004274869337677956
    2. '_' → logprob: -5.629274845123291
    3. '```' → logprob: -8.25427532196045
    4. '(_' → logprob: -8.50427532196045
    5. '(_:' → logprob: -9.50427532196045
    6. ' (' → logprob: -10.00427532196045
    7. '_(' → logprob: -11.25427532196045
    8. 's' → logprob: -11.50427532196045
    9. '(:' → logprob: -11.75427532196045
    10. '("("' → logprob: -12.50427532196045

Token 5: '_size' (ID: 5044)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007004032959230244
    2. '_' → logprob: -8.750699996948242
    3. '(:' → logprob: -8.750699996948242
    4. '(_' → logprob: -8.875699996948242
    5. '(_:' → logprob: -9.125699996948242
    6. '():' → logprob: -9.750699996948242
    7. '```' → logprob: -10.375699996948242
    8. '((' → logprob: -12.000699996948242
    9. ':' → logprob: -12.125699996948242
    10. ' (' → logprob: -12.250699996948242

Token 6: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014128250069916248
    2. '_' → logprob: -4.8891282081604
    3. '(:' → logprob: -5.7641282081604
    4. 's' → logprob: -6.7641282081604
    5. '_:' → logprob: -7.0141282081604
    6. '(_:' → logprob: -8.014128684997559
    7. '(size' → logprob: -8.264128684997559
    8. '():' → logprob: -8.514128684997559
    9. '(_' → logprob: -8.764128684997559
    10. ':' → logprob: -9.264128684997559

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.056342996656894684
    2. ')' → logprob: -2.9313430786132812
    3. ':' → logprob: -6.556343078613281
    4. '(' → logprob: -11.681343078613281
    5. ''):' → logprob: -11.931343078613281
    6. ' ):' → logprob: -12.806343078613281
    7. '```' → logprob: -12.806343078613281
    8. '):
' → logprob: -12.931343078613281
    9. ')：' → logprob: -13.181343078613281
    10. '():' → logprob: -13.431343078613281

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003962162882089615
    2. '(' → logprob: -7.00396203994751
    3. '   ' → logprob: -7.25396203994751
    4. '():' → logprob: -7.37896203994751
    5. ':
' → logprob: -7.62896203994751
    6. '```' → logprob: -7.75396203994751
    7. '':' → logprob: -8.753962516784668
    8. '":' → logprob: -9.128962516784668
    9. '`:' → logprob: -9.128962516784668
    10. '(:' → logprob: -9.503962516784668

Token 9: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.400419682264328
    2. '```' → logprob: -1.4004197120666504
    3. '\' → logprob: -3.9004197120666504
    4. '`' → logprob: -4.15041971206665
    5. ''' → logprob: -4.40041971206665
    6. '[' → logprob: -4.77541971206665
    7. '"' → logprob: -5.27541971206665
    8. '\n' → logprob: -5.40041971206665
    9. '``' → logprob: -5.52541971206665
    10. '    
' → logprob: -5.77541971206665

Token 10: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31672751903533936
    2. ' [' → logprob: -1.3167275190353394
    3. ' []' → logprob: -6.566727638244629
    4. ' ' → logprob: -6.691727638244629
    5. '[n' → logprob: -7.441727638244629
    6. '[]' → logprob: -9.066727638244629
    7. '[i' → logprob: -10.941727638244629
    8. '[int' → logprob: -11.441727638244629
    9. ' ['' → logprob: -11.441727638244629
    10. ' [
' → logprob: -12.066727638244629

Token 11: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1621694266796112
    2. '1' → logprob: -1.9121694564819336
    3. 'x' → logprob: -6.912169456481934
    4. ' i' → logprob: -7.412169456481934
    5. ' ' → logprob: -8.787169456481934
    6. 'factor' → logprob: -9.037169456481934
    7. 'n' → logprob: -10.287169456481934
    8. '   ' → logprob: -11.537169456481934
    9. ' factorial' → logprob: -12.162169456481934
    10. 'j' → logprob: -12.537169456481934

Token 12: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7901696562767029
    2. ']' → logprob: -1.0401697158813477
    3. ',' → logprob: -2.1651697158813477
    4. '*' → logprob: -3.6651697158813477
    5. 'for' → logprob: -3.9151697158813477
    6. '*i' → logprob: -4.415169715881348
    7. '+' → logprob: -5.415169715881348
    8. ' +' → logprob: -5.540169715881348
    9. ' *' → logprob: -5.540169715881348
    10. ' ]' → logprob: -6.415169715881348

Token 13: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07270771265029907
    2. ',' → logprob: -3.0727076530456543
    3. '*' → logprob: -4.322707653045654
    4. ' ' → logprob: -5.947707653045654
    5. ']' → logprob: -6.072707653045654
    6. '+' → logprob: -6.197707653045654
    7. '0' → logprob: -7.447707653045654
    8. 'for' → logprob: -7.822707653045654
    9. ' for' → logprob: -8.197708129882812
    10. ' ]' → logprob: -8.447708129882812

Token 14: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01433426421135664
    2. ' n' → logprob: -4.389334201812744
    3. '(n' → logprob: -6.514334201812744
    4. ' (' → logprob: -8.514334678649902
    5. '(' → logprob: -8.889334678649902
    6. '	n' → logprob: -14.389334678649902
    7. '_n' → logprob: -14.514334678649902
    8. ')n' → logprob: -14.639334678649902
    9. ' ' → logprob: -14.764334678649902
    10. '```' → logprob: -15.889334678649902

Token 15: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00018101456225849688
    2. ' n' → logprob: -8.625181198120117
    3. ')n' → logprob: -13.625181198120117
    4. ')' → logprob: -16.000181198120117
    5. '   ' → logprob: -17.125181198120117
    6. ' ' → logprob: -17.875181198120117
    7. '_n' → logprob: -18.250181198120117
    8. '	n' → logprob: -18.625181198120117
    9. '`' → logprob: -18.625181198120117
    10. '(n' → logprob: -18.875181198120117

Token 16: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.054717179387807846
    2. ' )' → logprob: -3.0547170639038086
    3. '+' → logprob: -5.179717063903809
    4. '-' → logprob: -8.554717063903809
    5. ' +' → logprob: -9.179717063903809
    6. ' ' → logprob: -9.179717063903809
    7. ' -' → logprob: -9.679717063903809
    8. '))' → logprob: -12.804717063903809
    9. '>' → logprob: -12.929717063903809
    10. ' )
' → logprob: -13.054717063903809

Token 17: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048882268369198
    2. ' ' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.761049270629883
    4. ')' → logprob: -15.261049270629883
    5. '```' → logprob: -16.136049270629883
    6. '2' → logprob: -16.636049270629883
    7. '0' → logprob: -16.636049270629883
    8. '  ' → logprob: -16.636049270629883
    9. '+' → logprob: -19.011049270629883
    10. ' ' → logprob: -19.261049270629883

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '0' → logprob: -14.500005722045898
    4. ')' → logprob: -16.6250057220459
    5. '   ' → logprob: -18.2500057220459
    6. '2' → logprob: -18.3750057220459
    7. '```' → logprob: -18.3750057220459
    8. '  ' → logprob: -20.6250057220459
    9. '`' → logprob: -21.5000057220459
    10. '+' → logprob: -22.1250057220459

Token 19: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5213274309644476e-05
    2. ' )' → logprob: -12.000015258789062
    3. '`)' → logprob: -12.625015258789062
    4. '))' → logprob: -13.250015258789062
    5. ')`' → logprob: -13.750015258789062
    6. ')])' → logprob: -14.750015258789062
    7. '```' → logprob: -15.000015258789062
    8. '')' → logprob: -15.000015258789062
    9. ')
' → logprob: -15.125015258789062
    10. ')))' → logprob: -15.375015258789062

Token 20: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08972688764333725
    2. '```' → logprob: -3.9647269248962402
    3. 'def' → logprob: -4.08972692489624
    4. '<|end|>' → logprob: -4.33972692489624
    5. '

' → logprob: -4.83972692489624
    6. '[' → logprob: -4.96472692489624
    7. '' → logprob: -5.33972692489624
    8. 'n' → logprob: -5.83972692489624
    9. '\n' → logprob: -5.96472692489624
    10. 'newline' → logprob: -6.33972692489624

Token 21: ' initialize' (ID: 18400)
  Prédit: ' create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' create' → logprob: -0.09069325774908066
    2. ' factorial' → logprob: -2.715693235397339
    3. ' calculate' → logprob: -4.090693473815918
    4. ' compute' → logprob: -5.715693473815918
    5. ' factor' → logprob: -8.965693473815918
    6. ' get' → logprob: -8.965693473815918
    7. 'create' → logprob: -9.965693473815918
    8. ' space' → logprob: -10.215693473815918
    9. '_' → logprob: -10.215693473815918
    10. ' generate' → logprob: -10.465693473815918

Token 22: '_first' (ID: 29347)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0029659343417733908
    2. '_' → logprob: -6.002965927124023
    3. '_fact' → logprob: -9.127965927124023
    4. '_f' → logprob: -9.377965927124023
    5. '_list' → logprob: -9.502965927124023
    6. ' _' → logprob: -9.502965927124023
    7. '```' → logprob: -11.127965927124023
    8. '_array' → logprob: -11.252965927124023
    9. ' factorial' → logprob: -11.252965927124023
    10. 'factor' → logprob: -11.627965927124023

Token 23: '_two' (ID: 54305)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.1280301958322525
    2. '_' → logprob: -2.128030300140381
    3. '_element' → logprob: -8.253029823303223
    4. '_fact' → logprob: -8.253029823303223
    5. '_f' → logprob: -9.003029823303223
    6. 'factor' → logprob: -9.378029823303223
    7. '(' → logprob: -9.753029823303223
    8. '_value' → logprob: -9.753029823303223
    9. '_two' → logprob: -10.253029823303223
    10. 'Factor' → logprob: -10.378029823303223

Token 24: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.02732008509337902
    2. '_elements' → logprob: -4.77731990814209
    3. '_f' → logprob: -5.02731990814209
    4. '_values' → logprob: -5.02731990814209
    5. '_' → logprob: -5.27731990814209
    6. '_items' → logprob: -9.77731990814209
    7. '_s' → logprob: -10.15231990814209
    8. '_terms' → logprob: -10.40231990814209
    9. '_element' → logprob: -10.77731990814209
    10. '```' → logprob: -11.02731990814209

Token 25: 'ials' (ID: 16596)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.5279143452644348
    2. 'ials' → logprob: -1.15291428565979
    3. 'als' → logprob: -2.52791428565979
    4. 'al' → logprob: -4.652914524078369
    5. '_' → logprob: -5.527914524078369
    6. '```' → logprob: -8.152914047241211
    7. '   ' → logprob: -8.652914047241211
    8. 'ialize' → logprob: -8.777914047241211
    9. ' ' → logprob: -9.652914047241211
    10. '__' → logprob: -9.777914047241211

Token 26: '(F' (ID: 12044)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03144151344895363
    2. '(n' → logprob: -3.6564414501190186
    3. '_' → logprob: -5.906441688537598
    4. '():' → logprob: -7.031441688537598
    5. ' (' → logprob: -8.031441688537598
    6. '```' → logprob: -8.781441688537598
    7. ':' → logprob: -8.906441688537598
    8. '()' → logprob: -9.031441688537598
    9. '(_' → logprob: -9.406441688537598
    10. '_list' → logprob: -9.656441688537598

Token 27: '):
' (ID: 1883)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7528300285339355
    2. ')' → logprob: -0.8778300285339355
    3. 'a' → logprob: -2.5028300285339355
    4. '[])' → logprob: -4.6278300285339355
    5. 'A' → logprob: -5.3778300285339355
    6. 'ac' → logprob: -5.5028300285339355
    7. 'actor' → logprob: -6.0028300285339355
    8. '[]' → logprob: -6.1278300285339355
    9. '[:' → logprob: -6.8778300285339355
    10. 'AC' → logprob: -6.8778300285339355

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009710535407066345
    2. '```' → logprob: -5.509710311889648
    3. 'F' → logprob: -5.759710311889648
    4. '    
' → logprob: -7.384710311889648
    5. '``' → logprob: -7.509710311889648
    6. ':' → logprob: -7.759710311889648
    7. '(F' → logprob: -7.884710311889648
    8. '       ' → logprob: -8.884710311889648
    9. '[' → logprob: -9.509710311889648
    10. '\' → logprob: -9.634710311889648

Token 29: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -0.48448145389556885
    2. '   ' → logprob: -0.9844814538955688
    3. ' F' → logprob: -4.734481334686279
    4. '```' → logprob: -7.359481334686279
    5. '``' → logprob: -7.734481334686279
    6. '
' → logprob: -8.609481811523438
    7. '    
' → logprob: -9.359481811523438
    8. '	F' → logprob: -9.609481811523438
    9. ' ' → logprob: -9.984481811523438
    10. '[' → logprob: -10.484481811523438

Token 30: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.093505099765025e-05
    2. ' [' → logprob: -11.375020980834961
    3. '[:' → logprob: -12.500020980834961
    4. '\[' → logprob: -13.250020980834961
    5. '=' → logprob: -14.125020980834961
    6. 'def' → logprob: -14.250020980834961
    7. ' =' → logprob: -14.250020980834961
    8. '```' → logprob: -14.375020980834961
    9. '[:]' → logprob: -15.250020980834961
    10. '=[' → logprob: -15.625020980834961

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.668304245569743e-05
    2. '1' → logprob: -10.000046730041504
    3. ' ' → logprob: -14.125046730041504
    4. '-' → logprob: -15.625046730041504
    5. '2' → logprob: -16.500045776367188
    6. ']' → logprob: -16.625045776367188
    7. '```' → logprob: -17.125045776367188
    8. '   ' → logprob: -17.625045776367188
    9. ')' → logprob: -17.812545776367188
    10. '۰' → logprob: -18.500045776367188

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006310671451501548
    2. ' ]' → logprob: -7.375630855560303
    3. ']=' → logprob: -12.500631332397461
    4. '],' → logprob: -14.750631332397461
    5. ')' → logprob: -15.875631332397461
    6. ']
' → logprob: -16.00063133239746
    7. ']==' → logprob: -16.75063133239746
    8. '   ' → logprob: -17.25063133239746
    9. ' ' → logprob: -17.37563133239746
    10. '`]' → logprob: -17.50063133239746

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04862699285149574
    2. '=' → logprob: -3.0486268997192383
    3. ' ' → logprob: -10.423626899719238
    4. ',' → logprob: -11.923626899719238
    5. ' =
' → logprob: -14.173626899719238
    6. ']' → logprob: -14.548626899719238
    7. '<|end|>' → logprob: -14.798626899719238
    8. ')' → logprob: -14.923626899719238
    9. ' ,' → logprob: -15.173626899719238
    10. ' |=' → logprob: -15.673626899719238

Token 34: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009759752079844475
    2. ' ' → logprob: -4.634759902954102
    3. '0' → logprob: -12.509759902954102
    4. '   ' → logprob: -17.0097599029541
    5. '  ' → logprob: -17.3222599029541
    6. '2' → logprob: -17.8847599029541
    7. '```' → logprob: -18.0722599029541
    8. '    ' → logprob: -18.3222599029541
    9. '۱' → logprob: -18.3222599029541
    10. ' factorial' → logprob: -18.5722599029541

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.440506407059729e-05
    2. ' ' → logprob: -10.37503433227539
    3. '0' → logprob: -12.75003433227539
    4. 'factor' → logprob: -16.87503433227539
    5. '   ' → logprob: -17.06253433227539
    6. '  ' → logprob: -17.56253433227539
    7. '2' → logprob: -18.06253433227539
    8. '```' → logprob: -18.25003433227539
    9. '=' → logprob: -18.31253433227539
    10. '`' → logprob: -18.31253433227539

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029954465106129646
    2. '<|end|>' → logprob: -4.154954433441162
    3. '   ' → logprob: -4.654954433441162
    4. '    
' → logprob: -6.154954433441162
    5. '  
' → logprob: -7.279954433441162
    6. ' 
' → logprob: -7.529954433441162
    7. '\n' → logprob: -8.15495491027832
    8. 'F' → logprob: -8.77995491027832
    9. '
' → logprob: -9.15495491027832
    10. '<|end|>' → logprob: -9.27995491027832

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012957504950463772
    2. '   ' → logprob: -4.637957572937012
    3. '    
' → logprob: -6.637957572937012
    4. '<|end|>' → logprob: -7.012957572937012
    5. '  
' → logprob: -7.762957572937012
    6. '
' → logprob: -8.887957572937012
    7. ' 
' → logprob: -8.887957572937012
    8. 'F' → logprob: -9.012957572937012
    9. '```' → logprob: -10.512957572937012
    10. '\n' → logprob: -10.887957572937012

Token 38: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -0.05921606719493866
    2. '
' → logprob: -3.059216022491455
    3. '   ' → logprob: -5.684216022491455
    4. ' F' → logprob: -5.684216022491455
    5. '    
' → logprob: -6.434216022491455
    6. '\n' → logprob: -6.934216022491455
    7. '  
' → logprob: -7.559216022491455
    8. ' 
' → logprob: -8.184216499328613
    9. ' ' → logprob: -8.809216499328613
    10. '   
' → logprob: -9.934216499328613

Token 39: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -15.75
    3. '[
' → logprob: -18.0
    4. '1' → logprob: -18.125
    5. '```' → logprob: -18.875
    6. '\[' → logprob: -19.25
    7. '   ' → logprob: -19.875
    8. ' ' → logprob: -20.5
    9. '  ' → logprob: -20.75
    10. '[...]' → logprob: -21.875

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. ']' → logprob: -15.625001907348633
    4. '0' → logprob: -16.750001907348633
    5. ')' → logprob: -17.250001907348633
    6. '[' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '```' → logprob: -18.000001907348633
    9. 'def' → logprob: -18.250001907348633
    10. '  ' → logprob: -18.500001907348633

Token 41: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0028592010494321585
    2. ')' → logprob: -6.627859115600586
    3. ' ]' → logprob: -6.627859115600586
    4. '=' → logprob: -9.127859115600586
    5. ' =' → logprob: -9.377859115600586
    6. ']=' → logprob: -11.377859115600586
    7. ' )' → logprob: -12.627859115600586
    8. ')]' → logprob: -15.002859115600586
    9. ' ' → logprob: -15.127859115600586
    10. '']' → logprob: -16.377859115600586

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815134845674038
    2. '=' → logprob: -4.01815128326416
    3. ' ' → logprob: -13.64315128326416
    4. ' =
' → logprob: -15.51815128326416
    5. ' =)' → logprob: -16.643152236938477
    6. '<|end|>' → logprob: -17.393152236938477
    7. ' =
' → logprob: -18.143152236938477
    8. ' *=' → logprob: -18.268152236938477
    9. ' ='' → logprob: -18.768152236938477
    10. ')' → logprob: -19.018152236938477

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008615042082965374
    2. ' ' → logprob: -4.758615016937256
    3. '2' → logprob: -15.133615493774414
    4. '   ' → logprob: -16.258615493774414
    5. '  ' → logprob: -17.071115493774414
    6. ' ' → logprob: -17.196115493774414
    7. '```' → logprob: -17.446115493774414
    8. '    ' → logprob: -18.258615493774414
    9. ' factorial' → logprob: -18.508615493774414
    10. '１' → logprob: -18.821115493774414

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '2' → logprob: -16.500009536743164
    4. '0' → logprob: -18.750009536743164
    5. '  ' → logprob: -19.750009536743164
    6. '```' → logprob: -19.750009536743164
    7. '۱' → logprob: -19.812509536743164
    8. '   ' → logprob: -19.937509536743164
    9. '１' → logprob: -20.125009536743164
    10. '`' → logprob: -20.187509536743164

Token 45: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09890124946832657
    2. '<|end|>' → logprob: -3.0989012718200684
    3. 'def' → logprob: -3.4739012718200684
    4. '```' → logprob: -5.473901271820068
    5. '   ' → logprob: -5.973901271820068
    6. '\' → logprob: -5.973901271820068
    7. '

' → logprob: -6.098901271820068
    8. ' 
' → logprob: -6.598901271820068
    9. '' → logprob: -6.723901271820068
    10. '    
' → logprob: -7.098901271820068

Token 46: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29478785395622253
    2. '
' → logprob: -1.419787883758545
    3. '

' → logprob: -5.544787883758545
    4. 'd' → logprob: -5.794787883758545
    5. '\' → logprob: -6.169787883758545
    6. '<|end|>' → logprob: -6.544787883758545
    7. '```' → logprob: -6.669787883758545
    8. 'for' → logprob: -8.169787406921387
    9. ' 
' → logprob: -8.294787406921387
    10. '  
' → logprob: -8.419787406921387

Token 47: ' compute' (ID: 23864)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0747196674346924
    2. ' calculate' → logprob: -1.0747196674346924
    3. ' create' → logprob: -1.4497196674346924
    4. ' compute' → logprob: -2.9497196674346924
    5. ' ' → logprob: -4.449719429016113
    6. ' space' → logprob: -5.824719429016113
    7. ' _' → logprob: -6.074719429016113
    8. ' def' → logprob: -6.199719429016113
    9. '_factor' → logprob: -6.324719429016113
    10. ' factor' → logprob: -6.449719429016113

Token 48: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.2552781105041504
    2. '_' → logprob: -1.5052781105041504
    3. '_F' → logprob: -6.38027811050415
    4. '_fact' → logprob: -7.25527811050415
    5. '_f' → logprob: -8.130277633666992
    6. ' _' → logprob: -8.255277633666992
    7. '_fac' → logprob: -8.755277633666992
    8. '__' → logprob: -10.755277633666992
    9. '```' → logprob: -10.755277633666992
    10. ')_' → logprob: -10.880277633666992

Token 49: 'ials' (ID: 16596)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.006378429476171732
    2. '_' → logprob: -5.256378650665283
    3. 'ials' → logprob: -7.131378650665283
    4. 'ialize' → logprob: -8.506378173828125
    5. '```' → logprob: -10.131378173828125
    6. 'al' → logprob: -10.881378173828125
    7. 'i' → logprob: -11.131378173828125
    8. ' ' → logprob: -11.506378173828125
    9. 's' → logprob: -12.256378173828125
    10. 'ialist' → logprob: -12.256378173828125

Token 50: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.632306694984436
    2. '(' → logprob: -1.007306694984436
    3. '_' → logprob: -2.5073065757751465
    4. '_(' → logprob: -4.2573065757751465
    5. '_list' → logprob: -5.8823065757751465
    6. '_for' → logprob: -7.0073065757751465
    7. '(_' → logprob: -7.0073065757751465
    8. '_size' → logprob: -7.2573065757751465
    9. ' (' → logprob: -7.3823065757751465
    10. '(n' → logprob: -7.5073065757751465

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001099968678317964
    2. '):' → logprob: -7.251100063323975
    3. ' ,' → logprob: -8.501099586486816
    4. '   ' → logprob: -9.501099586486816
    5. ',n' → logprob: -9.751099586486816
    6. ')' → logprob: -11.251099586486816
    7. ',i' → logprob: -11.626099586486816
    8. '[n' → logprob: -11.751099586486816
    9. '[i' → logprob: -11.876099586486816
    10. '[' → logprob: -11.876099586486816

Token 52: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06200925260782242
    2. 'n' → logprob: -2.812009334564209
    3. ' ' → logprob: -11.31200885772705
    4. '   ' → logprob: -11.68700885772705
    5. '    ' → logprob: -12.31200885772705
    6. ' i' → logprob: -12.68700885772705
    7. ',' → logprob: -12.93700885772705
    8. ')' → logprob: -13.18700885772705
    9. ' ,' → logprob: -13.43700885772705
    10. '	n' → logprob: -13.68700885772705

Token 53: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014789171982556581
    2. ')' → logprob: -6.751479148864746
    3. '):
' → logprob: -8.751479148864746
    4. ':' → logprob: -9.126479148864746
    5. ',' → logprob: -11.126479148864746
    6. ' ):' → logprob: -11.126479148864746
    7. '   ' → logprob: -11.876479148864746
    8. '+' → logprob: -12.626479148864746
    9. ' ' → logprob: -14.876479148864746
    10. '*' → logprob: -15.126479148864746

Token 54: ' p' (ID: 275)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8511689901351929
    2. ' )' → logprob: -1.1011689901351929
    3. ')' → logprob: -2.4761691093444824
    4. ' ' → logprob: -2.6011691093444824
    5. '    ' → logprob: -3.3511691093444824
    6. 'i' → logprob: -4.476169109344482
    7. ' ):' → logprob: -4.851169109344482
    8. ' ):
' → logprob: -5.351169109344482
    9. '   ' → logprob: -5.976169109344482
    10. 'factor' → logprob: -5.976169109344482

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0071226307190954685
    2. ')' → logprob: -5.00712251663208
    3. '):
' → logprob: -8.382122993469238
    4. 'u' → logprob: -9.757122993469238
    5. ' ):' → logprob: -10.007122993469238
    6. ':' → logprob: -10.882122993469238
    7. ',' → logprob: -11.132122993469238
    8. '=' → logprob: -11.382122993469238
    9. 'r' → logprob: -12.007122993469238
    10. 'e' → logprob: -12.757122993469238

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10435425490140915
    2. ':' → logprob: -3.3543541431427
    3. ' for' → logprob: -3.4793541431427
    4. '    ' → logprob: -3.8543541431427
    5. ' ' → logprob: -5.354354381561279
    6. 'for' → logprob: -6.104354381561279
    7. '    
' → logprob: -6.854354381561279
    8. ' :' → logprob: -7.229354381561279
    9. '[' → logprob: -7.979354381561279
    10. '
' → logprob: -7.979354381561279

Token 57: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3586314916610718
    2. '   ' → logprob: -1.2336314916610718
    3. ' 
' → logprob: -5.858631610870361
    4. 'for' (adapté à ' for') → logprob: -6.233631610870361
    5. '```' → logprob: -6.233631610870361
    6. ' ' → logprob: -6.608631610870361
    7. '    ' → logprob: -7.233631610870361
    8. '    
' → logprob: -7.733631610870361
    9. ' i' → logprob: -8.108631134033203
    10. '
' → logprob: -8.858631134033203

Token 58: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10127662122249603
    2. ' ' → logprob: -2.3512766361236572
    3. '_' → logprob: -7.601276397705078
    4. ' _' → logprob: -7.976276397705078
    5. 'i' → logprob: -8.476276397705078
    6. '  ' → logprob: -12.601276397705078
    7. ' ' → logprob: -12.726276397705078
    8. ' p' → logprob: -12.976276397705078
    9. ' space' → logprob: -13.351276397705078
    10. '	i' → logprob: -14.101276397705078

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06528065353631973
    2. ' ' → logprob: -2.8152806758880615
    3. 'in' → logprob: -5.940280437469482
    4. ' i' → logprob: -8.19028091430664
    5. '=' → logprob: -8.81528091430664
    6. ' =' → logprob: -9.06528091430664
    7. '  ' → logprob: -9.69028091430664
    8. '   ' → logprob: -10.94028091430664
    9. 'n' → logprob: -11.06528091430664
    10. ' n' → logprob: -12.19028091430664

Token 60: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.007458727341145277
    2. ' ' → logprob: -5.382458686828613
    3. 'range' → logprob: -5.882458686828613
    4. '2' → logprob: -10.632458686828613
    5. '	range' → logprob: -11.632458686828613
    6. ' xrange' → logprob: -11.757458686828613
    7. '1' → logprob: -13.132458686828613
    8. '(range' → logprob: -13.882458686828613
    9. '  ' → logprob: -14.632458686828613
    10. ' in' → logprob: -14.632458686828613

Token 61: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01883208565413952
    2. ' ' → logprob: -4.143832206726074
    3. ' (' → logprob: -5.893832206726074
    4. '2' → logprob: -10.643832206726074
    5. '1' → logprob: -12.018832206726074
    6. ')' → logprob: -13.268832206726074
    7. '(
' → logprob: -13.393832206726074
    8. '  ' → logprob: -13.893832206726074
    9. '(i' → logprob: -14.143832206726074
    10. ' )' → logprob: -14.393832206726074

Token 62: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0789046585559845
    2. ' ' → logprob: -2.578904628753662
    3. '1' → logprob: -11.95390510559082
    4. '   ' → logprob: -12.32890510559082
    5. ')' → logprob: -13.07890510559082
    6. '  ' → logprob: -14.57890510559082
    7. ' )' → logprob: -14.95390510559082
    8. '    ' → logprob: -15.26640510559082
    9. '	' → logprob: -15.82890510559082
    10. 'n' → logprob: -16.20390510559082

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009558862075209618
    2. ' ,' → logprob: -7.500956058502197
    3. ',n' → logprob: -7.875956058502197
    4. '   ' → logprob: -11.375955581665039
    5. ' ' → logprob: -13.000955581665039
    6. ' n' → logprob: -13.125955581665039
    7. 'n' → logprob: -13.125955581665039
    8. ';' → logprob: -13.500955581665039
    9. '    ' → logprob: -14.000955581665039
    10. '  ' → logprob: -14.375955581665039

Token 64: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.002815217012539506
    2. 'n' → logprob: -5.877815246582031
    3. ' ' → logprob: -11.752815246582031
    4. '	n' → logprob: -13.627815246582031
    5. ' 
' → logprob: -14.127815246582031
    6. ' ' → logprob: -15.252815246582031
    7. '<|end|>' → logprob: -15.752815246582031
    8. ')n' → logprob: -16.87781524658203
    9. ' p' → logprob: -17.00281524658203
    10. ' ‌' → logprob: -18.25281524658203

Token 65: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31338658928871155
    2. '+' → logprob: -1.3133865594863892
    3. ' ' → logprob: -9.063386917114258
    4. '   ' → logprob: -12.688386917114258
    5. '    ' → logprob: -13.438386917114258
    6. ' +
' → logprob: -13.813386917114258
    7. ')' → logprob: -13.938386917114258
    8. ',' → logprob: -14.688386917114258
    9. '  ' → logprob: -14.688386917114258
    10. ' ' → logprob: -14.938386917114258

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11292804032564163
    2. ' ' → logprob: -2.2379281520843506
    3. ')' → logprob: -9.36292839050293
    4. ' )' → logprob: -11.23792839050293
    5. '```' → logprob: -12.98792839050293
    6. ' ' → logprob: -13.61292839050293
    7. ' p' → logprob: -14.36292839050293
    8. '2' → logprob: -14.61292839050293
    9. '  ' → logprob: -14.86292839050293
    10. ',' → logprob: -14.98792839050293

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023178798437584192
    2. ' ' → logprob: -8.375231742858887
    3. ')' → logprob: -14.000231742858887
    4. '   ' → logprob: -15.375231742858887
    5. '```' → logprob: -16.500232696533203
    6. '2' → logprob: -17.500232696533203
    7. '
' → logprob: -17.875232696533203
    8. ' )' → logprob: -18.250232696533203
    9. '  ' → logprob: -18.375232696533203
    10. '),' → logprob: -18.500232696533203

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00040528984391130507
    2. ':' → logprob: -8.500405311584473
    3. ')' → logprob: -9.250405311584473
    4. ' ):' → logprob: -9.750405311584473
    5. '):
' → logprob: -10.250405311584473
    6. ',' → logprob: -11.500405311584473
    7. '   ' → logprob: -13.875405311584473
    8. ' ' → logprob: -14.625405311584473
    9. ']:' → logprob: -16.500404357910156
    10. '}:' → logprob: -16.750404357910156

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43890640139579773
    2. ' F' → logprob: -1.5639064311981201
    3. ' ' → logprob: -2.43890643119812
    4. '    ' → logprob: -4.063906192779541
    5. '        ' → logprob: -4.813906192779541
    6. '   ' → logprob: -5.188906192779541
    7. ' p' → logprob: -5.563906192779541
    8. ' ' → logprob: -5.813906192779541
    9. ' :' → logprob: -5.938906192779541
    10. 'F' → logprob: -5.938906192779541

Token 70: ' F' (ID: 454)
  Prédit: ' F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' F' → logprob: -0.5251737833023071
    2. 'F' (adapté à ' F') → logprob: -0.9001737833023071
    3. '   ' → logprob: -6.525173664093018
    4. '       ' → logprob: -8.525174140930176
    5. ' (' → logprob: -8.900174140930176
    6. '(' → logprob: -9.900174140930176
    7. '    ' → logprob: -10.025174140930176
    8. ' ' → logprob: -10.275174140930176
    9. '(F' → logprob: -10.400174140930176
    10. '	F' → logprob: -10.525174140930176

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014172324910759926
    2. '[' → logprob: -4.264172554016113
    3. ' [' → logprob: -13.014172554016113
    4. '[I' → logprob: -13.014172554016113
    5. '```' → logprob: -14.014172554016113
    6. '[
' → logprob: -14.264172554016113
    7. '\[' → logprob: -14.264172554016113
    8. 'i' → logprob: -14.764172554016113
    9. '[...]' → logprob: -15.139172554016113
    10. '[j' → logprob: -15.889172554016113

Token 72: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001455951132811606
    2. ' ]' → logprob: -6.626455783843994
    3. ']=' → logprob: -9.501456260681152
    4. '=' → logprob: -10.501456260681152
    5. ')' → logprob: -10.876456260681152
    6. ' ' → logprob: -13.251456260681152
    7. '   ' → logprob: -13.376456260681152
    8. '*' → logprob: -13.376456260681152
    9. ' =' → logprob: -14.001456260681152
    10. '[' → logprob: -14.876456260681152

Token 73: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03365273401141167
    2. ' =' → logprob: -3.4086527824401855
    3. ' *=' → logprob: -13.533652305603027
    4. '*=' → logprob: -13.783652305603027
    5. '*' → logprob: -13.908652305603027
    6. '=

' → logprob: -14.283652305603027
    7. '%=' → logprob: -14.408652305603027
    8. '=
' → logprob: -15.033652305603027
    9. ')' → logprob: -15.033652305603027
    10. ' ' → logprob: -15.283652305603027

Token 74: ' F' (ID: 454)
  Prédit: '(F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.04426075890660286
    2. ' (' → logprob: -3.1692607402801514
    3. 'F' → logprob: -7.5442609786987305
    4. '(' → logprob: -7.5442609786987305
    5. ' F' → logprob: -8.91926097869873
    6. '   ' → logprob: -10.29426097869873
    7. '(
' → logprob: -11.29426097869873
    8. ' ' → logprob: -12.41926097869873
    9. '((' → logprob: -12.41926097869873
    10. '(int' → logprob: -13.04426097869873

Token 75: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005345463287085295
    2. '[' → logprob: -5.255345344543457
    3. '[
' → logprob: -9.505345344543457
    4. '*' → logprob: -11.505345344543457
    5. '```' → logprob: -12.005345344543457
    6. ' [' → logprob: -12.630345344543457
    7. '`' → logprob: -12.755345344543457
    8. 'i' → logprob: -12.755345344543457
    9. '[I' → logprob: -12.755345344543457
    10. '[*' → logprob: -13.255345344543457

Token 76: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0076241339556872845
    2. ' -' → logprob: -4.88262414932251
    3. '   ' → logprob: -12.757623672485352
    4. '```' → logprob: -12.882623672485352
    5. ']' → logprob: -13.007623672485352
    6. '	' → logprob: -13.132623672485352
    7. ' ' → logprob: -13.132623672485352
    8. '−' → logprob: -13.257623672485352
    9. '[i' → logprob: -14.257623672485352
    10. '-i' → logprob: -14.382623672485352

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011045700375689194
    2. ' ' → logprob: -9.125110626220703
    3. '<|end|>' → logprob: -14.500110626220703
    4. '   ' → logprob: -15.375110626220703
    5. ']' → logprob: -15.750110626220703
    6. '```' → logprob: -15.875110626220703
    7. '2' → logprob: -15.937610626220703
    8. '  ' → logprob: -16.062610626220703
    9. '    ' → logprob: -16.500110626220703
    10. '

' → logprob: -16.812610626220703

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -16.687503814697266
    4. '2' → logprob: -16.937503814697266
    5. '  ' → logprob: -17.375003814697266
    6. '
' → logprob: -17.437503814697266
    7. '

' → logprob: -17.562503814697266
    8. '   ' → logprob: -17.687503814697266
    9. '۱' → logprob: -17.875003814697266
    10. '১' → logprob: -18.625003814697266

Token 79: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08631537109613419
    2. '*' → logprob: -2.836315393447876
    3. ' *' → logprob: -3.836315393447876
    4. ')' → logprob: -6.461315155029297
    5. ']*' → logprob: -7.711315155029297
    6. ' ' → logprob: -8.961315155029297
    7. '```' → logprob: -9.961315155029297
    8. '}' → logprob: -10.211315155029297
    9. '1' → logprob: -10.211315155029297
    10. '`' → logprob: -10.336315155029297

Token 80: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931906342506409
    2. ' *' → logprob: -0.6931906342506409
    3. ' ' → logprob: -11.193190574645996
    4. '**' → logprob: -11.193190574645996
    5. '*
' → logprob: -12.568190574645996
    6. ' *
' → logprob: -12.818190574645996
    7. '*i' → logprob: -13.068190574645996
    8. ' ' → logprob: -13.443190574645996
    9. '```' → logprob: -13.693190574645996
    10. '`' → logprob: -14.443190574645996

Token 81: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0486038476228714
    2. ' i' → logprob: -3.0486037731170654
    3. '	i' → logprob: -11.923604011535645
    4. 'p' → logprob: -12.173604011535645
    5. ' ' → logprob: -12.923604011535645
    6. '```' → logprob: -14.423604011535645
    7. '(i' → logprob: -14.923604011535645
    8. ' p' → logprob: -15.048604011535645
    9. ' (' → logprob: -15.798604011535645
    10. ' ' → logprob: -15.923604011535645

Token 82: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.010602409020066261
    2. '%' → logprob: -4.6356024742126465
    3. ' ' → logprob: -7.3856024742126465
    4. ' 
' → logprob: -8.885601997375488
    5. ' %
' → logprob: -9.885601997375488
    6. '<|end|>' → logprob: -11.385601997375488
    7. '
' → logprob: -11.885601997375488
    8. ')' → logprob: -12.385601997375488
    9. ' ' → logprob: -12.885601997375488
    10. ' if' → logprob: -12.885601997375488

Token 83: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.03805893659591675
    2. 'p' → logprob: -3.2880589962005615
    3. ' ' → logprob: -11.28805923461914
    4. ' ' → logprob: -12.78805923461914
    5. ' 
' → logprob: -13.78805923461914
    6. '	p' → logprob: -15.41305923461914
    7. ' `' → logprob: -15.66305923461914
    8. '```' → logprob: -16.28805923461914
    9. ''p' → logprob: -16.41305923461914
    10. '(p' → logprob: -16.53805923461914

Token 84: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8483760952949524
    2. '<|end|>' → logprob: -0.9733760952949524
    3. '\n' → logprob: -1.7233760356903076
    4. ' 
' → logprob: -5.348376274108887
    5. '\' → logprob: -5.723376274108887
    6. '```' → logprob: -5.973376274108887
    7. '  
' → logprob: -6.723376274108887
    8. '<|end|>' → logprob: -6.973376274108887
    9. 'n' → logprob: -7.348376274108887
    10. '#' → logprob: -7.598376274108887

Token 85: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6385221481323242
    2. '
' → logprob: -1.0135221481323242
    3. '#' → logprob: -3.263522148132324
    4. 'd' → logprob: -3.763522148132324
    5. '<|end|>' → logprob: -3.763522148132324
    6. '\' → logprob: -5.138522148132324
    7. '```' → logprob: -5.138522148132324
    8. ' 
' → logprob: -5.388522148132324
    9. '

' → logprob: -6.388522148132324
    10. '\n' → logprob: -6.513522148132324

Token 86: ' fib' (ID: 18795)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1706795692443848
    2. ' factorial' → logprob: -1.2956795692443848
    3. ' compute' → logprob: -1.5456795692443848
    4. ' calculate' → logprob: -2.5456795692443848
    5. ' space' → logprob: -3.0456795692443848
    6. ' create' → logprob: -3.0456795692443848
    7. ' main' → logprob: -5.295679569244385
    8. ' factor' → logprob: -5.545679569244385
    9. ' find' → logprob: -5.670679569244385
    10. ' def' → logprob: -5.920679569244385

Token 87: '(n' (ID: 2406)
  Prédit: 'onacci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onacci' → logprob: -0.059684451669454575
    2. 'o' → logprob: -3.0596845149993896
    3. 'on' → logprob: -4.6846842765808105
    4. '_' → logprob: -6.5596842765808105
    5. 'onn' → logprob: -8.809684753417969
    6. 'ona' → logprob: -9.434684753417969
    7. '```' → logprob: -9.934684753417969
    8. '_sequence' → logprob: -10.684684753417969
    9. '_on' → logprob: -10.934684753417969
    10. '_factor' → logprob: -11.684684753417969

Token 88: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2523280084133148
    2. ')' → logprob: -1.5023280382156372
    3. ',' → logprob: -9.002327919006348
    4. ' ):' → logprob: -9.252327919006348
    5. ':' → logprob: -9.377327919006348
    6. '):
' → logprob: -10.877327919006348
    7. ' )' → logprob: -10.877327919006348
    8. '*' → logprob: -11.127327919006348
    9. '**' → logprob: -11.502327919006348
    10. ' ' → logprob: -11.752327919006348

Token 89: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.18159650266170502
    2. 'p' → logprob: -1.8065965175628662
    3. ' )' → logprob: -7.431596279144287
    4. ')' → logprob: -7.681596279144287
    5. ' ' → logprob: -7.806596279144287
    6. ' m' → logprob: -8.681596755981445
    7. 'm' → logprob: -9.931596755981445
    8. ' n' → logprob: -10.056596755981445
    9. ' ):' → logprob: -10.556596755981445
    10. ' F' → logprob: -11.181596755981445

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009986390359699726
    2. ')' → logprob: -4.634986400604248
    3. ':' → logprob: -8.63498592376709
    4. ',' → logprob: -10.63498592376709
    5. '):
' → logprob: -10.63498592376709
    6. ' ):' → logprob: -12.88498592376709
    7. '*' → logprob: -15.13498592376709
    8. '**' → logprob: -15.13498592376709
    9. ' ' → logprob: -15.38498592376709
    10. ')
' → logprob: -15.50998592376709

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07816837728023529
    2. ' ' → logprob: -3.2031683921813965
    3. ' if' → logprob: -4.7031683921813965
    4. ' F' → logprob: -4.8281683921813965
    5. '    ' → logprob: -5.3281683921813965
    6. '  ' → logprob: -5.5781683921813965
    7. 'F' → logprob: -6.4531683921813965
    8. 'n' → logprob: -6.4531683921813965
    9. ' 
' → logprob: -7.3281683921813965
    10. ',' → logprob: -7.7031683921813965

Token 92: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -0.09034372866153717
    2. 'if' → logprob: -2.590343713760376
    3. 'a' → logprob: -4.965343952178955
    4. ' if' → logprob: -6.090343952178955
    5. ' F' → logprob: -6.840343952178955
    6. 'f' → logprob: -7.590343952178955
    7. 'fib' → logprob: -8.590343475341797
    8. '   ' → logprob: -8.965343475341797
    9. 'dp' → logprob: -9.215343475341797
    10. 'i' → logprob: -9.840343475341797

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2505728006362915
    2. '=' → logprob: -1.6255728006362915
    3. '[' → logprob: -3.750572681427002
    4. ' ' → logprob: -7.000572681427002
    5. ',' → logprob: -8.37557315826416
    6. '  ' → logprob: -10.12557315826416
    7. '.' → logprob: -10.37557315826416
    8. '_' → logprob: -10.75057315826416
    9. ' =[' → logprob: -10.87557315826416
    10. ')' → logprob: -11.37557315826416

Token 94: ' create' (ID: 2501)
  Prédit: ' create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' create' → logprob: -1.0781227350234985
    2. 'create' → logprob: -1.3281227350234985
    3. '[' → logprob: -1.4531227350234985
    4. ' [' → logprob: -1.8281227350234985
    5. '(create' → logprob: -9.703123092651367
    6. '.create' → logprob: -9.828123092651367
    7. '=create' → logprob: -10.453123092651367
    8. '[]' → logprob: -10.703123092651367
    9. ' ' → logprob: -11.078123092651367
    10. '	create' → logprob: -11.453123092651367

Token 95: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.001560450647957623
    2. '_' → logprob: -6.751560688018799
    3. '_f' → logprob: -8.87656021118164
    4. '_fact' → logprob: -9.25156021118164
    5. '_factory' → logprob: -10.12656021118164
    6. ' _' → logprob: -10.37656021118164
    7. '_fac' → logprob: -10.37656021118164
    8. '```' → logprob: -11.00156021118164
    9. '_F' → logprob: -12.12656021118164
    10. ')_' → logprob: -12.25156021118164

Token 96: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.3936226963996887
    2. '_factor' → logprob: -1.643622636795044
    3. 'ial' → logprob: -2.643622636795044
    4. 't' → logprob: -3.518622636795044
    5. 'tal' → logprob: -4.268622875213623
    6. 'a' → logprob: -5.393622875213623
    7. '```' → logprob: -6.268622875213623
    8. '_to' → logprob: -6.518622875213623
    9. 'alist' → logprob: -6.518622875213623
    10. '_t' → logprob: -6.643622875213623

Token 97: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.159660890465602e-05
    2. '_factor' → logprob: -9.62507152557373
    3. '_' → logprob: -12.75007152557373
    4. '_lst' → logprob: -14.12507152557373
    5. '_li' → logprob: -14.50007152557373
    6. 'List' → logprob: -15.50007152557373
    7. '_l' → logprob: -15.62507152557373
    8. '_f' → logprob: -15.62507152557373
    9. '_lista' → logprob: -16.000072479248047
    10. '```' → logprob: -16.125072479248047

Token 98: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -1.2471589798224159e-05
    2. '_s' → logprob: -11.500012397766113
    3. '_' → logprob: -13.125012397766113
    4. '_sizes' → logprob: -16.62501335144043
    5. '_factor' → logprob: -17.25001335144043
    6. 's' → logprob: -17.37501335144043
    7. '_SIZE' → logprob: -17.75001335144043
    8. '(size' → logprob: -17.75001335144043
    9. 'size' → logprob: -18.25001335144043
    10. '_Size' → logprob: -18.62501335144043

Token 99: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20145972073078156
    2. '(' → logprob: -1.7014597654342651
    3. '(
' → logprob: -10.326459884643555
    4. ' (' → logprob: -11.576459884643555
    5. '((' → logprob: -12.701459884643555
    6. '(

' → logprob: -14.326459884643555
    7. '(len' → logprob: -15.576459884643555
    8. '(int' → logprob: -16.701459884643555
    9. ')(' → logprob: -16.951459884643555
    10. '```' → logprob: -17.076459884643555

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. '+' → logprob: -12.00001049041748
    3. ')
' → logprob: -12.62501049041748
    4. ' )' → logprob: -14.37501049041748
    5. ')

' → logprob: -16.000009536743164
    6. '),' → logprob: -17.500009536743164
    7. ' ' → logprob: -17.625009536743164
    8. '))' → logprob: -17.750009536743164
    9. '*' → logprob: -18.250009536743164
    10. '-' → logprob: -18.250009536743164

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31095489859580994
    2. '<|end|>' → logprob: -2.0609548091888428
    3. ')' → logprob: -2.9359548091888428
    4. '
' → logprob: -3.8109548091888428
    5. ' ' → logprob: -3.9359548091888428
    6. '    
' → logprob: -4.185955047607422
    7. '  
' → logprob: -4.310955047607422
    8. ' 
' → logprob: -4.935955047607422
    9. '  ' → logprob: -6.560955047607422
    10. '[' → logprob: -6.560955047607422

Token 102: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' (adapté à ' initialize') → logprob: -0.00039254239527508616
    2. ' initialize' → logprob: -8.12539291381836
    3. '   ' → logprob: -9.37539291381836
    4. '	initialize' → logprob: -11.75039291381836
    5. '_initialize' → logprob: -14.00039291381836
    6. 'i' → logprob: -14.25039291381836
    7. '.initialize' → logprob: -14.62539291381836
    8. 'initial' → logprob: -15.00039291381836
    9. ' ' → logprob: -15.25039291381836
    10. 'Initialize' → logprob: -15.50039291381836

Token 103: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0005685218493454158
    2. '_' → logprob: -8.250568389892578
    3. ')_' → logprob: -9.250568389892578
    4. '_f' → logprob: -9.750568389892578
    5. ' _' → logprob: -10.250568389892578
    6. '_second' → logprob: -10.250568389892578
    7. '```' → logprob: -10.875568389892578
    8. '_factor' → logprob: -11.625568389892578
    9. '_First' → logprob: -11.625568389892578
    10. 'First' → logprob: -11.875568389892578

Token 104: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0019915630109608173
    2. '_' → logprob: -7.1269917488098145
    3. '_tw' → logprob: -7.5019917488098145
    4. '_t' → logprob: -8.001991271972656
    5. '_f' → logprob: -8.251991271972656
    6. '__' → logprob: -10.626991271972656
    7. '_first' → logprob: -12.626991271972656
    8. '```' → logprob: -12.751991271972656
    9. '_second' → logprob: -13.501991271972656
    10. '_to' → logprob: -13.626991271972656

Token 105: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.00046928023220971227
    2. '_' → logprob: -7.875469207763672
    3. '_f' → logprob: -9.750469207763672
    4. '_fact' → logprob: -11.000469207763672
    5. ' _' → logprob: -12.375469207763672
    6. '_F' → logprob: -12.375469207763672
    7. '_
' → logprob: -13.625469207763672
    8. '
' → logprob: -13.625469207763672
    9. '```' → logprob: -13.875469207763672
    10. '_fac' → logprob: -14.500469207763672

Token 106: 'ials' (ID: 16596)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.03039931319653988
    2. 'ials' → logprob: -3.5303993225097656
    3. '_' → logprob: -8.030399322509766
    4. 'a' → logprob: -9.530399322509766
    5. 's' → logprob: -9.780399322509766
    6. 'ls' → logprob: -10.030399322509766
    7. ' als' → logprob: -10.530399322509766
    8. '   ' → logprob: -11.155399322509766
    9. '**' → logprob: -11.405399322509766
    10. '
' → logprob: -11.780399322509766

Token 107: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.0007143391412682831
    2. '(' → logprob: -7.250714302062988
    3. ' (' → logprob: -12.750714302062988
    4. '(

' → logprob: -14.250714302062988
    5. '(
' → logprob: -14.625714302062988
    6. '(f' → logprob: -15.250714302062988
    7. ')' → logprob: -16.750715255737305
    8. '

' → logprob: -18.500715255737305
    9. '()' → logprob: -18.625715255737305
    10. ' ' → logprob: -19.250715255737305

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011353354202583432
    2. ',' → logprob: -7.251135349273682
    3. ')
' → logprob: -8.251134872436523
    4. '   ' → logprob: -9.001134872436523
    5. '
' → logprob: -10.876134872436523
    6. ' ' → logprob: -12.126134872436523
    7. '<|end|>' → logprob: -12.251134872436523
    8. ' )' → logprob: -12.376134872436523
    9. '),' → logprob: -13.501134872436523
    10. '  ' → logprob: -14.001134872436523

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1251780092716217
    2. 'compute' → logprob: -2.500178098678589
    3. ' compute' → logprob: -3.625178098678589
    4. '
' → logprob: -5.12517786026001
    5. '```' → logprob: -7.00017786026001
    6. '    
' → logprob: -7.25017786026001
    7. '    ' → logprob: -8.250178337097168
    8. '' → logprob: -8.750178337097168
    9. ' ' → logprob: -9.000178337097168
    10. ' ' → logprob: -9.125178337097168

Token 110: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -0.2080090045928955
    2. '   ' → logprob: -1.8330090045928955
    3. ' compute' → logprob: -3.7080090045928955
    4. 'c' → logprob: -6.083008766174316
    5. 'def' → logprob: -8.333008766174316
    6. 'for' → logprob: -8.583008766174316
    7. 'f' → logprob: -9.333008766174316
    8. '  ' → logprob: -9.458008766174316
    9. ' ' → logprob: -9.583008766174316
    10. 'F' → logprob: -9.583008766174316

Token 111: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.004783376585692167
    2. '_' → logprob: -5.3797831535339355
    3. '_f' → logprob: -9.379783630371094
    4. '_fact' → logprob: -10.254783630371094
    5. '_fac' → logprob: -11.504783630371094
    6. '```' → logprob: -11.504783630371094
    7. ' _' → logprob: -12.254783630371094
    8. ')_' → logprob: -12.504783630371094
    9. '_factory' → logprob: -12.754783630371094
    10. '_F' → logprob: -13.004783630371094

Token 112: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.0006313055637292564
    2. '_' → logprob: -7.625631332397461
    3. 'ial' → logprob: -9.875631332397461
    4. 'als' → logprob: -10.125631332397461
    5. ' ' → logprob: -11.375631332397461
    6. '```' → logprob: -12.125631332397461
    7. '   ' → logprob: -12.125631332397461
    8. 'i' → logprob: -12.375631332397461
    9. '**' → logprob: -12.625631332397461
    10. '[' → logprob: -12.875631332397461

Token 113: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.01815567910671234
    2. '(' → logprob: -4.018155574798584
    3. '(
' → logprob: -13.018156051635742
    4. '(f' → logprob: -13.268156051635742
    5. ' (' → logprob: -13.518156051635742
    6. '(

' → logprob: -15.268156051635742
    7. ')' → logprob: -17.143156051635742
    8. ' ' → logprob: -17.768156051635742
    9. '()' → logprob: -18.018156051635742
    10. '```' → logprob: -18.018156051635742

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005545835476368666
    2. '(n' → logprob: -5.505545616149902
    3. ')' → logprob: -7.255545616149902
    4. '(' → logprob: -7.880545616149902
    5. ',n' → logprob: -8.005545616149902
    6. ',F' → logprob: -11.130545616149902
    7. ' ,' → logprob: -11.255545616149902
    8. 'n' → logprob: -12.755545616149902
    9. ',
' → logprob: -12.755545616149902
    10. '),' → logprob: -13.005545616149902

Token 115: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16023437678813934
    2. ' n' → logprob: -1.9102343320846558
    3. ' ' → logprob: -12.410234451293945
    4. '	n' → logprob: -13.035234451293945
    5. ')n' → logprob: -13.785234451293945
    6. '<|end|>' → logprob: -13.785234451293945
    7. ')' → logprob: -14.035234451293945
    8. ' 
' → logprob: -14.535234451293945
    9. 'p' → logprob: -15.785234451293945
    10. '
' → logprob: -16.035234451293945

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ',p' → logprob: -13.87500286102295
    3. ' ,' → logprob: -14.12500286102295
    4. ')' → logprob: -14.75000286102295
    5. ',
' → logprob: -15.00000286102295
    6. '   ' → logprob: -15.62500286102295
    7. '`,' → logprob: -17.125001907348633
    8. '‌,' → logprob: -17.125001907348633
    9. ' ' → logprob: -17.375001907348633
    10. ',",' → logprob: -17.750001907348633

Token 117: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.02042614482343197
    2. 'p' → logprob: -4.145426273345947
    3. ' ' → logprob: -5.520426273345947
    4. ')' → logprob: -8.145425796508789
    5. ' )' → logprob: -9.520425796508789
    6. ' 
' → logprob: -11.770425796508789
    7. '"' → logprob: -13.270425796508789
    8. ' ' → logprob: -13.520425796508789
    9. '32' → logprob: -14.020425796508789
    10. ''' → logprob: -14.645425796508789

Token 118: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017043406842276454
    2. ')
' → logprob: -6.376704216003418
    3. ')
' → logprob: -13.751704216003418
    4. ' )' → logprob: -15.001704216003418
    5. '   ' → logprob: -15.251704216003418
    6. ')return' → logprob: -16.251705169677734
    7. ' ' → logprob: -16.626705169677734
    8. ')n' → logprob: -16.626705169677734
    9. ')`' → logprob: -16.626705169677734
    10. ')

' → logprob: -17.376705169677734

Token 119: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6511579155921936
    2. '   ' → logprob: -0.7761579155921936
    3. '    
' → logprob: -4.776157855987549
    4. ' 
' → logprob: -5.026157855987549
    5. ' return' → logprob: -7.276157855987549
    6. ' ' → logprob: -7.401157855987549
    7. '  
' → logprob: -7.651157855987549
    8. '   
' → logprob: -7.776157855987549
    9. 'n' → logprob: -8.401158332824707
    10. 'return' → logprob: -8.526158332824707

Token 120: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8203204870223999
    2. '   ' → logprob: -1.6953204870224
    3. 'f' → logprob: -1.8203204870224
    4. 'i' → logprob: -2.8203206062316895
    5. 'if' → logprob: -3.1953206062316895
    6. 'return' (adapté à ' return') → logprob: -3.8203206062316895
    7. ' if' → logprob: -3.9453206062316895
    8. 'a' → logprob: -4.1953206062316895
    9. 'F' → logprob: -4.4453206062316895
    10. 'result' → logprob: -4.8203206062316895

Token 121: ' F' (ID: 454)
  Prédit: ' F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' F' → logprob: -0.5765281319618225
    2. 'F' → logprob: -0.8265281319618225
    3. '(F' → logprob: -8.201528549194336
    4. ' (' → logprob: -8.951528549194336
    5. ' ' → logprob: -9.701528549194336
    6. '(' → logprob: -9.826528549194336
    7. ' ' → logprob: -10.076528549194336
    8. '0' → logprob: -12.076528549194336
    9. '[' → logprob: -12.576528549194336
    10. 'f' → logprob: -12.701528549194336

Token 122: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0675232410430908
    2. '_' → logprob: -1.1925232410430908
    3. '
' → logprob: -1.4425232410430908
    4. '<|end|>' → logprob: -3.692523241043091
    5. ' ' → logprob: -3.817523241043091
    6. '.' → logprob: -3.942523241043091
    7. '(' → logprob: -4.067523002624512
    8. 'n' → logprob: -4.817523002624512
    9. '(n' → logprob: -5.567523002624512
    10. '[n' → logprob: -6.067523002624512

Token 123: 'def' (ID: 1314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3575846552848816
    2. '[' → logprob: -1.6075847148895264
    3. '
' → logprob: -2.8575847148895264
    4. 'def' → logprob: -4.482584476470947
    5. '#' → logprob: -5.107584476470947
    6. '(' → logprob: -5.232584476470947
    7. 'n' → logprob: -5.857584476470947
    8. ',' → logprob: -5.982584476470947
    9. '<|end|>' → logprob: -5.982584476470947
    10. '\' → logprob: -6.107584476470947

Token 124: ' get' (ID: 717)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.9428785443305969
    2. ' ' → logprob: -1.1928784847259521
    3. ' fibonacci' → logprob: -1.4428784847259521
    4. ' fib' → logprob: -3.442878484725952
    5. ' _' → logprob: -4.192878723144531
    6. ' calculate' → logprob: -5.442878723144531
    7. '_' → logprob: -5.567878723144531
    8. ' factor' → logprob: -5.817878723144531
    9. '_factor' → logprob: -6.317878723144531
    10. ' compute' → logprob: -6.567878723144531

Token 125: '_N' (ID: 3080)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.18770842254161835
    2. '_f' → logprob: -1.9377083778381348
    3. '_' → logprob: -3.8127083778381348
    4. '_n' → logprob: -6.312708377838135
    5. ' _' → logprob: -6.687708377838135
    6. '_p' → logprob: -7.937708377838135
    7. ' ' → logprob: -8.437708854675293
    8. ' factorial' → logprob: -8.562708854675293
    9. '_comb' → logprob: -8.687708854675293
    10. '_max' → logprob: -8.937708854675293

Token 126: '_from' (ID: 12526)
  Prédit: 'Cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cr' → logprob: -1.0326695442199707
    2. '_factor' → logprob: -1.4076695442199707
    3. 'CR' → logprob: -1.4076695442199707
    4. 'C' → logprob: -2.5326695442199707
    5. '!' → logprob: -3.0326695442199707
    6. '_choose' → logprob: -5.282669544219971
    7. 'F' → logprob: -6.032669544219971
    8. '_' → logprob: -6.282669544219971
    9. '_f' → logprob: -6.282669544219971
    10. 'factor' → logprob: -6.407669544219971

Token 127: '_F' (ID: 2729)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.9601706266403198
    2. '_factor' → logprob: -1.0851706266403198
    3. '_K' → logprob: -2.5851707458496094
    4. '_user' → logprob: -3.5851707458496094
    5. '_p' → logprob: -3.8351707458496094
    6. 'K' → logprob: -3.9601707458496094
    7. '_' → logprob: -4.210170745849609
    8. '_n' → logprob: -4.585170745849609
    9. 'P' → logprob: -4.710170745849609
    10. '_string' → logprob: -4.710170745849609

Token 128: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.43563133478164673
    2. '(' → logprob: -1.060631275177002
    3. '(N' → logprob: -5.060631275177002
    4. '(n' → logprob: -8.81063175201416
    5. '_' → logprob: -9.43563175201416
    6. '[' → logprob: -10.31063175201416
    7. 'unction' → logprob: -10.31063175201416
    8. '(_' → logprob: -10.43563175201416
    9. '((' → logprob: -10.56063175201416
    10. '(A' → logprob: -10.56063175201416

Token 129: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3158358931541443
    2. '):' → logprob: -1.315835952758789
    3. ')' → logprob: -6.315835952758789
    4. '[' → logprob: -7.690835952758789
    5. ' ):' → logprob: -9.565835952758789
    6. ',n' → logprob: -9.565835952758789
    7. '):
' → logprob: -10.190835952758789
    8. ' ,' → logprob: -10.190835952758789
    9. '[n' → logprob: -10.815835952758789
    10. '[]):' → logprob: -11.315835952758789

Token 130: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.18693841993808746
    2. '   ' → logprob: -2.311938524246216
    3. 'return' → logprob: -2.686938524246216
    4. 'len' → logprob: -6.561938285827637
    5. ' len' → logprob: -6.936938285827637
    6. 'n' → logprob: -8.186938285827637
    7. 'def' → logprob: -8.311938285827637
    8. ' def' → logprob: -8.561938285827637
    9. ' n' → logprob: -9.186938285827637
    10. ' for' → logprob: -10.311938285827637

Token 131: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2962760627269745
    2. ' return' → logprob: -1.4212760925292969
    3. 'len' → logprob: -4.796276092529297
    4. 'for' → logprob: -6.421276092529297
    5. 'F' → logprob: -6.671276092529297
    6. 'n' → logprob: -7.296276092529297
    7. ' len' → logprob: -7.296276092529297
    8. ' for' → logprob: -7.546276092529297
    9. 'sum' → logprob: -7.796276092529297
    10. 'def' → logprob: -7.921276092529297

Token 132: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7510470747947693
    2. ' len' → logprob: -1.376047134399414
    3. ' F' → logprob: -1.501047134399414
    4. 'F' → logprob: -3.001047134399414
    5. ' sum' → logprob: -7.001047134399414
    6. '[len' → logprob: -7.001047134399414
    7. ' max' → logprob: -8.251047134399414
    8. 'sum' → logprob: -8.251047134399414
    9. '[' → logprob: -8.626047134399414
    10. '(len' → logprob: -9.251047134399414

Token 133: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.029753267765045166
    2. '(' → logprob: -3.5297532081604004
    3. '(
' → logprob: -13.029753684997559
    4. '(

' → logprob: -14.654753684997559
    5. ' (' → logprob: -16.654752731323242
    6. '(N' → logprob: -18.279752731323242
    7. '(f' → logprob: -19.029752731323242
    8. '()' → logprob: -19.529752731323242
    9. '((' → logprob: -20.029752731323242
    10. '(A' → logprob: -20.029752731323242

Token 134: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038717821007594466
    2. ' )' → logprob: -7.875387191772461
    3. ')-' → logprob: -13.000387191772461
    4. '(' → logprob: -13.750387191772461
    5. '()' → logprob: -13.875387191772461
    6. ' ' → logprob: -14.375387191772461
    7. ')
' → logprob: -14.750387191772461
    8. '   ' → logprob: -15.000387191772461
    9. '[' → logprob: -15.000387191772461
    10. '())' → logprob: -15.375387191772461

Token 135: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.19497668743133545
    2. '-' → logprob: -1.8199766874313354
    3. '[' → logprob: -5.444976806640625
    4. ' ' → logprob: -5.569976806640625
    5. 'def' → logprob: -5.819976806640625
    6. '()' → logprob: -6.319976806640625
    7. '```' → logprob: -7.819976806640625
    8. '(' → logprob: -8.069976806640625
    9. ' def' → logprob: -8.194976806640625
    10. '0' → logprob: -8.444976806640625

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '<|end|>' → logprob: -15.000036239624023
    4. '```' → logprob: -16.250036239624023
    5. '2' → logprob: -17.125036239624023
    6. '   ' → logprob: -18.625036239624023
    7. '
' → logprob: -19.000036239624023
    8. '‌' → logprob: -19.250036239624023
    9. '`' → logprob: -19.625036239624023
    10. '۱' → logprob: -20.000036239624023

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.875000953674316
    3. '<|end|>' → logprob: -15.625000953674316
    4. '```' → logprob: -17.875
    5. '2' → logprob: -18.75
    6. '۱' → logprob: -20.5
    7. '   ' → logprob: -20.625
    8. '１' → logprob: -21.0
    9. '`' → logprob: -21.0
    10. '
' → logprob: -21.125

Token 138: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016208330169320107
    2. '
' → logprob: -4.266208171844482
    3. ' def' → logprob: -6.766208171844482
    4. '<|end|>' → logprob: -8.14120864868164
    5. '

' → logprob: -8.39120864868164
    6. '```' → logprob: -9.01620864868164
    7. 'n' → logprob: -9.26620864868164
    8. '\' → logprob: -10.39120864868164
    9. '#' → logprob: -10.51620864868164
    10. '\n' → logprob: -10.76620864868164

Token 139: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0030135957058519125
    2. '#' → logprob: -6.628013610839844
    3. '<|end|>' → logprob: -6.628013610839844
    4. 'n' → logprob: -8.753013610839844
    5. '```' → logprob: -9.753013610839844
    6. '
' → logprob: -9.753013610839844
    7. 'd' → logprob: -10.878013610839844
    8. ' def' → logprob: -11.003013610839844
    9. '<|end|>' → logprob: -11.003013610839844
    10. '\' → logprob: -11.753013610839844

Token 140: ' duplicate' (ID: 41010)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.7441737651824951
    2. ' mod' → logprob: -1.9941737651824951
    3. ' main' → logprob: -2.369173765182495
    4. ' compute' → logprob: -2.494173765182495
    5. ' bin' → logprob: -2.744173765182495
    6. ' modular' → logprob: -3.369173765182495
    7. ' calculate' → logprob: -3.869173765182495
    8. ' combine' → logprob: -4.119174003601074
    9. ' ' → logprob: -4.619174003601074
    10. ' n' → logprob: -4.744174003601074

Token 141: '_factor' (ID: 43757)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2617050409317017
    2. '_' → logprob: -1.3867050409317017
    3. '_factor' → logprob: -1.5117050409317017
    4. '_f' → logprob: -2.511704921722412
    5. '_array' → logprob: -2.761704921722412
    6. '_(' → logprob: -3.261704921722412
    7. '(' → logprob: -3.636704921722412
    8. '_F' → logprob: -5.011704921722412
    9. '_string' → logprob: -5.011704921722412
    10. '_number' → logprob: -5.886704921722412

Token 142: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.09147368371486664
    2. 'ialize' → logprob: -3.0914735794067383
    3. 'ials' → logprob: -3.2164735794067383
    4. 'al' → logprob: -7.716473579406738
    5. '_list' → logprob: -7.716473579406738
    6. 's' → logprob: -7.716473579406738
    7. '```' → logprob: -8.591473579406738
    8. 'ion' → logprob: -8.841473579406738
    9. 'def' → logprob: -10.091473579406738
    10. 'ialist' → logprob: -10.466473579406738

Token 143: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.027862343937158585
    2. 's' → logprob: -4.152862548828125
    3. '_s' → logprob: -4.902862548828125
    4. '_' → logprob: -6.402862548828125
    5. '_factor' → logprob: -6.527862548828125
    6. '_array' → logprob: -8.152862548828125
    7. '_lists' → logprob: -8.652862548828125
    8. '_f' → logprob: -9.277862548828125
    9. '(' → logprob: -9.277862548828125
    10. '_value' → logprob: -9.902862548828125

Token 144: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.003721099579706788
    2. '_size' → logprob: -5.753721237182617
    3. '_(' → logprob: -8.628721237182617
    4. '(' → logprob: -9.003721237182617
    5. '(S' → logprob: -9.753721237182617
    6. '(n' → logprob: -10.128721237182617
    7. ' (' → logprob: -10.378721237182617
    8. '(f' → logprob: -10.378721237182617
    9. '(N' → logprob: -10.628721237182617
    10. '(size' → logprob: -11.128721237182617

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00020342117932159454
    2. ')' → logprob: -8.750203132629395
    3. '):
' → logprob: -10.375203132629395
    4. ' ):' → logprob: -11.375203132629395
    5. ':' → logprob: -13.250203132629395
    6. '）：' → logprob: -16.75020408630371
    7. ',' → logprob: -16.87520408630371
    8. '):
' → logprob: -17.00020408630371
    9. '   ' → logprob: -17.00020408630371
    10. ')：' → logprob: -17.12520408630371

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04307946190237999
    2. ' return' → logprob: -3.418079376220703
    3. '[' → logprob: -5.543079376220703
    4. 'return' → logprob: -6.043079376220703
    5. '[:]' → logprob: -6.168079376220703
    6. ' [' → logprob: -7.543079376220703
    7. 'F' → logprob: -8.793079376220703
    8. '[]' → logprob: -9.418079376220703
    9. ' F' → logprob: -9.668079376220703
    10. '[F' → logprob: -10.168079376220703

Token 147: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7418535351753235
    2. 'return' (adapté à ' return') → logprob: -0.7418535351753235
    3. 'F' → logprob: -3.2418534755706787
    4. ' F' → logprob: -5.366853713989258
    5. '[' → logprob: -5.991853713989258
    6. '[:]' → logprob: -7.616853713989258
    7. '   ' → logprob: -7.741853713989258
    8. ' [' → logprob: -8.616853713989258
    9. '[F' → logprob: -9.116853713989258
    10. '[]' → logprob: -10.491853713989258

Token 148: ' list' (ID: 1562)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.6935927867889404
    2. ' F' → logprob: -0.6935927867889404
    3. '[' → logprob: -8.44359302520752
    4. '[F' → logprob: -9.19359302520752
    5. ' [' → logprob: -9.44359302520752
    6. ' list' → logprob: -11.06859302520752
    7. '[:]' → logprob: -11.06859302520752
    8. 'list' → logprob: -11.94359302520752
    9. ' ' → logprob: -12.56859302520752
    10. '[]' → logprob: -12.81859302520752

Token 149: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.011048528365790844
    2. '(' → logprob: -4.511048316955566
    3. '(
' → logprob: -15.011048316955566
    4. '((' → logprob: -16.386049270629883
    5. '(

' → logprob: -16.511049270629883
    6. '(S' → logprob: -16.636049270629883
    7. '(f' → logprob: -17.386049270629883
    8. ' (' → logprob: -17.511049270629883
    9. '(s' → logprob: -17.761049270629883
    10. '()' → logprob: -18.011049270629883

Token 150: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ' )' → logprob: -12.125005722045898
    3. '())' → logprob: -14.625005722045898
    4. ')
' → logprob: -18.7500057220459
    5. '()' → logprob: -19.3750057220459
    6. '[])' → logprob: -19.7500057220459
    7. '<|end|>' → logprob: -20.1250057220459
    8. '}' → logprob: -20.2500057220459
    9. '))' → logprob: -20.6250057220459
    10. ' ' → logprob: -20.7500057220459

Token 151: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00075602374272421
    2. '#' → logprob: -7.250755786895752
    3. '```' → logprob: -11.50075626373291
    4. 'de' → logprob: -12.00075626373291
    5. 'n' → logprob: -12.00075626373291
    6. '[' → logprob: -12.25075626373291
    7. '*' → logprob: -13.00075626373291
    8. 'd' → logprob: -13.12575626373291
    9. '<|end|>' → logprob: -13.12575626373291
    10. ')' → logprob: -13.25075626373291

Token 152: ' set' (ID: 920)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.4337997436523438
    2. ' factorial' → logprob: -1.8087997436523438
    3. ' multiply' → logprob: -1.9337997436523438
    4. ' compute' → logprob: -2.0587997436523438
    5. ' combine' → logprob: -2.4337997436523438
    6. ' mod' → logprob: -2.4337997436523438
    7. ' modular' → logprob: -3.5587997436523438
    8. ' calculate' → logprob: -3.6837997436523438
    9. ' add' → logprob: -4.308799743652344
    10. ' sum' → logprob: -4.808799743652344

Token 153: '_last' (ID: 26359)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.27035149931907654
    2. '_' → logprob: -1.520351529121399
    3. '_F' → logprob: -4.520351409912109
    4. '_value' → logprob: -5.520351409912109
    5. '_f' → logprob: -7.395351409912109
    6. '_n' → logprob: -7.520351409912109
    7. '_N' → logprob: -7.520351409912109
    8. '_element' → logprob: -8.39535140991211
    9. '_item' → logprob: -8.39535140991211
    10. '_size' → logprob: -8.52035140991211

Token 154: '_inverse' (ID: 188797)
  Prédit: '_element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_element' → logprob: -1.1406835317611694
    2. '_' → logprob: -1.2656835317611694
    3. '_factor' → logprob: -1.2656835317611694
    4. '_value' → logprob: -2.515683650970459
    5. '_index' → logprob: -4.015683650970459
    6. '_(' → logprob: -4.640683650970459
    7. '(F' → logprob: -6.015683650970459
    8. '_two' → logprob: -6.140683650970459
    9. '(' → logprob: -7.640683650970459
    10. '_zero' → logprob: -7.765683650970459

Token 155: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.7570347785949707
    2. '_factor' → logprob: -1.3820347785949707
    3. '_element' → logprob: -1.5070347785949707
    4. '_index' → logprob: -3.3820347785949707
    5. '_inverse' → logprob: -4.132034778594971
    6. '_value' → logprob: -5.757034778594971
    7. '_' → logprob: -6.257034778594971
    8. '_(' → logprob: -7.132034778594971
    9. '_F' → logprob: -7.632034778594971
    10. '_of' → logprob: -8.257034301757812

Token 156: 'inv' (ID: 31086)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2512704133987427
    2. '):' → logprob: -1.6262704133987427
    3. ')' → logprob: -3.876270294189453
    4. '_inverse' → logprob: -6.126270294189453
    5. ',F' → logprob: -7.126270294189453
    6. '_,' → logprob: -7.626270294189453
    7. '_' → logprob: -8.251270294189453
    8. ' ,' → logprob: -8.376270294189453
    9. 'Inverse' → logprob: -8.751270294189453
    10. '):
' → logprob: -9.251270294189453

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6063169240951538
    2. '):' → logprob: -0.8563169240951538
    3. ')' → logprob: -3.6063170433044434
    4. '[' → logprob: -6.606317043304443
    5. '):
' → logprob: -7.981317043304443
    6. '[]):' → logprob: -8.231316566467285
    7. ']:' → logprob: -8.981316566467285
    8. ' ,' → logprob: -9.106316566467285
    9. ']' → logprob: -9.106316566467285
    10. '_,' → logprob: -9.731316566467285

Token 158: ' F' (ID: 454)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4976517856121063
    2. 'n' → logprob: -1.7476518154144287
    3. ' p' → logprob: -2.3726518154144287
    4. 'p' → logprob: -3.4976518154144287
    5. ' N' → logprob: -3.4976518154144287
    6. 'N' → logprob: -3.9976518154144287
    7. ' value' → logprob: -4.12265157699585
    8. 'value' → logprob: -4.62265157699585
    9. ' ' → logprob: -5.62265157699585
    10. ' i' → logprob: -5.99765157699585

Token 159: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22107398509979248
    2. ',' → logprob: -1.9710739850997925
    3. '):
' → logprob: -3.471074104309082
    4. ')' → logprob: -3.971074104309082
    5. '[' → logprob: -5.221074104309082
    6. ']' → logprob: -6.971074104309082
    7. ']:' → logprob: -7.346074104309082
    8. ' ):' → logprob: -7.846074104309082
    9. ' ,' → logprob: -8.096074104309082
    10. ',
' → logprob: -8.471074104309082

Token 160: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3286801278591156
    2. ' p' → logprob: -1.453680157661438
    3. ' n' → logprob: -3.9536800384521484
    4. 'n' → logprob: -3.9536800384521484
    5. 'N' → logprob: -5.203680038452148
    6. ' N' → logprob: -6.203680038452148
    7. '   ' → logprob: -8.828680038452148
    8. ')' → logprob: -9.078680038452148
    9. ' ' → logprob: -9.578680038452148
    10. '	p' → logprob: -10.203680038452148

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07083451002836227
    2. ',' → logprob: -3.3208343982696533
    3. '):
' → logprob: -3.4458343982696533
    4. ')' → logprob: -8.195834159851074
    5. '   ' → logprob: -9.570834159851074
    6. '):
' → logprob: -11.195834159851074
    7. ' ' → logprob: -11.945834159851074
    8. ' ):' → logprob: -12.070834159851074
    9. '):

' → logprob: -12.695834159851074
    10. '[' → logprob: -13.445834159851074

Token 162: '   ' (ID: 271)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' → logprob: -0.19321466982364655
    2. '   ' → logprob: -1.9432146549224854
    3. ' Fin' → logprob: -3.6932146549224854
    4. 'n' → logprob: -5.5682148933410645
    5. 'fin' → logprob: -5.9432148933410645
    6. ' n' → logprob: -7.9432148933410645
    7. ' fin' → logprob: -8.693214416503906
    8. '[' → logprob: -9.568214416503906
    9. 'Inv' → logprob: -9.568214416503906
    10. '```' → logprob: -9.568214416503906

Token 163: ' Fin' (ID: 7772)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' (adapté à ' Fin') → logprob: -0.013798626139760017
    2. ' Fin' → logprob: -4.388798713684082
    3. 'F' → logprob: -7.013798713684082
    4. '   ' → logprob: -8.263798713684082
    5. ' ' → logprob: -9.763798713684082
    6. 'Finn' → logprob: -11.013798713684082
    7. 'fin' → logprob: -11.138798713684082
    8. '  ' → logprob: -12.013798713684082
    9. '```' → logprob: -12.388798713684082
    10. '	' → logprob: -12.888798713684082

Token 164: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2948405128554441e-05
    2. 'f' → logprob: -12.37501335144043
    3. '[v' → logprob: -12.50001335144043
    4. '[' → logprob: -13.25001335144043
    5. 'p' → logprob: -14.25001335144043
    6. 'в' → logprob: -14.62501335144043
    7. '```' → logprob: -14.75001335144043
    8. '
' → logprob: -14.87501335144043
    9. 'inv' → logprob: -15.00001335144043
    10. '[i' → logprob: -16.12501335144043

Token 165: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0026631697546690702
    2. '[' → logprob: -6.2526631355285645
    3. '[len' → logprob: -7.2526631355285645
    4. '[
' → logprob: -11.502663612365723
    5. '[...]' → logprob: -12.127663612365723
    6. '[:]' → logprob: -12.877663612365723
    7. ' [-' → logprob: -13.252663612365723
    8. '[get' → logprob: -14.127663612365723
    9. '```' → logprob: -14.127663612365723
    10. '
' → logprob: -14.252663612365723

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.000001907348633
    4. ')' → logprob: -16.187501907348633
    5. ']' → logprob: -16.375001907348633
    6. '
' → logprob: -16.687501907348633
    7. '2' → logprob: -17.062501907348633
    8. '```' → logprob: -17.500001907348633
    9. '  ' → logprob: -17.562501907348633
    10. '

' → logprob: -18.187501907348633

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003003081073984504
    2. ' ]' → logprob: -8.125300407409668
    3. ']=' → logprob: -13.375300407409668
    4. '`]' → logprob: -13.750300407409668
    5. '']' → logprob: -14.250300407409668
    6. '"]' → logprob: -15.125300407409668
    7. ']
' → logprob: -15.500300407409668
    8. '=' → logprob: -16.00029945373535
    9. ')]' → logprob: -16.50029945373535
    10. '()]' → logprob: -16.62529945373535

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693630158901215
    2. ' =' → logprob: -2.126936197280884
    3. '=
' → logprob: -13.001935958862305
    4. ' =
' → logprob: -13.626935958862305
    5. ' ' → logprob: -13.876935958862305
    6. '=

' → logprob: -13.876935958862305
    7. ',' → logprob: -14.126935958862305
    8. '＝' → logprob: -15.126935958862305
    9. '=int' → logprob: -15.376935958862305
    10. ')' → logprob: -15.376935958862305

Token 169: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0012129719834774733
    2. ' pow' → logprob: -6.751213073730469
    3. '1' → logprob: -10.626213073730469
    4. '(pow' → logprob: -11.126213073730469
    5. '   ' → logprob: -12.876213073730469
    6. ' ' → logprob: -15.126213073730469
    7. '2' → logprob: -15.501213073730469
    8. '  ' → logprob: -15.876213073730469
    9. '0' → logprob: -16.12621307373047
    10. 'p' → logprob: -16.25121307373047

Token 170: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.02975812554359436
    2. '(' → logprob: -3.5297582149505615
    3. '(
' → logprob: -11.90475845336914
    4. '(

' → logprob: -14.77975845336914
    5. '(f' → logprob: -16.02975845336914
    6. '<|end|>' → logprob: -16.15475845336914
    7. 'F' → logprob: -17.02975845336914
    8. ' (' → logprob: -17.52975845336914
    9. '((' → logprob: -17.52975845336914
    10. '(
' → logprob: -18.15475845336914

Token 171: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.000644764571916312
    2. '[' → logprob: -7.500644683837891
    3. '[len' → logprob: -9.50064468383789
    4. '[
' → logprob: -11.37564468383789
    5. '[n' → logprob: -12.87564468383789
    6. '[p' → logprob: -14.12564468383789
    7. '[last' → logprob: -14.50064468383789
    8. ')' → logprob: -14.75064468383789
    9. '[:-' → logprob: -15.25064468383789
    10. ',' → logprob: -15.25064468383789

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.875004768371582
    3. '   ' → logprob: -14.250004768371582
    4. '
' → logprob: -14.250004768371582
    5. '

' → logprob: -15.750004768371582
    6. '  ' → logprob: -15.812504768371582
    7. '```' → logprob: -16.187503814697266
    8. '2' → logprob: -16.500003814697266
    9. '`' → logprob: -17.062503814697266
    10. '    ' → logprob: -17.937503814697266

Token 173: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009302830439992249
    2. ' ,' → logprob: -7.250930309295654
    3. '],' → logprob: -9.375929832458496
    4. ',p' → logprob: -9.750929832458496
    5. '[' → logprob: -10.250929832458496
    6. '),' → logprob: -11.750929832458496
    7. '   ' → logprob: -12.000929832458496
    8. ' ' → logprob: -12.625929832458496
    9. '},' → logprob: -12.625929832458496
    10. '‌,' → logprob: -13.000929832458496

Token 174: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0196771789342165
    2. '-' → logprob: -4.51967716217041
    3. ' p' → logprob: -4.76967716217041
    4. ' -' → logprob: -9.64467716217041
    5. ' ' → logprob: -10.76967716217041
    6. '<|end|>' → logprob: -11.89467716217041
    7. '
' → logprob: -12.26967716217041
    8. '-p' → logprob: -12.64467716217041
    9. '<p' → logprob: -12.76967716217041
    10. '	p' → logprob: -13.39467716217041

Token 175: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020354038861114532
    2. ' -' → logprob: -8.500203132629395
    3. '```' → logprob: -17.87520408630371
    4. '−' → logprob: -18.00020408630371
    5. '
' → logprob: -18.37520408630371
    6. ' ' → logprob: -18.62520408630371
    7. '-
' → logprob: -19.25020408630371
    8. '   ' → logprob: -19.50020408630371
    9. 'p' → logprob: -19.62520408630371
    10. '2' → logprob: -19.87520408630371

Token 176: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -12.500012397766113
    3. '
' → logprob: -12.750012397766113
    4. '-' → logprob: -12.750012397766113
    5. '

' → logprob: -13.250012397766113
    6. '```' → logprob: -15.125012397766113
    7. ' -' → logprob: -15.250012397766113
    8. '۲' → logprob: -16.687511444091797
    9. '   ' → logprob: -16.750011444091797
    10. '' → logprob: -16.937511444091797

Token 177: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. '
' → logprob: -14.125001907348633
    3. '

' → logprob: -15.125001907348633
    4. ' ' → logprob: -15.250001907348633
    5. '-' → logprob: -16.250001907348633
    6. '```' → logprob: -16.375001907348633
    7. '"' → logprob: -16.625001907348633
    8. ' -' → logprob: -16.937501907348633
    9. '
' → logprob: -17.375001907348633
    10. '۲' → logprob: -17.437501907348633

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020527164451777935
    2. ')' → logprob: -6.3770527839660645
    3. ' ,' → logprob: -8.002052307128906
    4. ',
' → logprob: -12.002052307128906
    5. ',p' → logprob: -12.502052307128906
    6. ' ' → logprob: -12.752052307128906
    7. ' )' → logprob: -13.627052307128906
    8. '   ' → logprob: -14.252052307128906
    9. '```' → logprob: -15.252052307128906
    10. ',

' → logprob: -16.502052307128906

Token 179: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5759623050689697
    2. 'p' → logprob: -0.8259623050689697
    3. ')' → logprob: -10.82596206665039
    4. ' ' → logprob: -13.70096206665039
    5. ' )' → logprob: -14.57596206665039
    6. ')p' → logprob: -14.57596206665039
    7. ' 
' → logprob: -14.95096206665039
    8. ' ' → logprob: -15.32596206665039
    9. '	p' → logprob: -16.07596206665039
    10. ',' → logprob: -16.57596206665039

Token 180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.228561349213123e-05
    2. ')
' → logprob: -9.875052452087402
    3. ' )' → logprob: -14.250052452087402
    4. ')

' → logprob: -15.625052452087402
    5. ')return' → logprob: -18.125051498413086
    6. '   ' → logprob: -18.125051498413086
    7. ' ' → logprob: -18.375051498413086
    8. ')
' → logprob: -18.375051498413086
    9. ')`' → logprob: -18.750051498413086
    10. '),' → logprob: -19.000051498413086

Token 181: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016432562842965126
    2. 'for' → logprob: -4.391432762145996
    3. '   ' → logprob: -6.391432762145996
    4. ' for' → logprob: -6.391432762145996
    5. '
' → logprob: -7.641432762145996
    6. ' def' → logprob: -9.766432762145996
    7. '    
' → logprob: -12.016432762145996
    8. ' ' → logprob: -12.016432762145996
    9. '	for' → logprob: -12.266432762145996
    10. ' 
' → logprob: -13.016432762145996

Token 182: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.01624409481883049
    2. 'compute' → logprob: -5.016243934631348
    3. ' initialize' → logprob: -5.641243934631348
    4. ' fill' → logprob: -6.391243934631348
    5. ' def' → logprob: -6.516243934631348
    6. 'def' → logprob: -7.266243934631348
    7. ' inverse' → logprob: -7.641243934631348
    8. ' calculate' → logprob: -7.891243934631348
    9. ' invert' → logprob: -7.891243934631348
    10. ' set' → logprob: -8.016243934631348

Token 183: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.48855000734329224
    2. '_factor' → logprob: -0.9885500073432922
    3. '_in' → logprob: -4.363550186157227
    4. '_inv' → logprob: -7.238550186157227
    5. '_F' → logprob: -7.988550186157227
    6. '_fin' → logprob: -8.863550186157227
    7. 'inverse' → logprob: -9.238550186157227
    8. '_fact' → logprob: -9.363550186157227
    9. '_all' → logprob: -9.738550186157227
    10. '_last' → logprob: -10.113550186157227

Token 184: '_factor' (ID: 43757)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02897155098617077
    2. '_factor' → logprob: -3.7789714336395264
    3. '_list' → logprob: -5.5289716720581055
    4. '(F' → logprob: -6.5289716720581055
    5. '_s' → logprob: -8.653971672058105
    6. '```' → logprob: -10.903971672058105
    7. 'factor' → logprob: -11.028971672058105
    8. '_chain' → logprob: -11.903971672058105
    9. '_array' → logprob: -11.903971672058105
    10. 'list' → logprob: -12.278971672058105

Token 185: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.0020977992098778486
    2. 'als' → logprob: -7.0020976066589355
    3. 's' → logprob: -7.1270976066589355
    4. 'ial' → logprob: -8.877098083496094
    5. '(F' → logprob: -9.377098083496094
    6. 'ails' → logprob: -9.627098083496094
    7. '```' → logprob: -10.252098083496094
    8. '(' → logprob: -10.377098083496094
    9. '   ' → logprob: -11.752098083496094
    10. '
' → logprob: -12.752098083496094

Token 186: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.011083070188760757
    2. '(' → logprob: -4.511083126068115
    3. ' (' → logprob: -11.136082649230957
    4. '(
' → logprob: -11.261082649230957
    5. '(In' → logprob: -13.011082649230957
    6. '(f' → logprob: -13.386082649230957
    7. ',' → logprob: -13.886082649230957
    8. '(fin' → logprob: -14.011082649230957
    9. '(

' → logprob: -14.761082649230957
    10. '```' → logprob: -14.761082649230957

Token 187: 'inv' (ID: 31086)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004008793330285698
    2. ' ,' → logprob: -8.12540054321289
    3. 'inv' → logprob: -10.75040054321289
    4. ',
' → logprob: -11.00040054321289
    5. '   ' → logprob: -11.00040054321289
    6. 'in' → logprob: -11.12540054321289
    7. ',p' → logprob: -11.87540054321289
    8. ',F' → logprob: -12.37540054321289
    9. 'I' → logprob: -12.87540054321289
    10. 'p' → logprob: -12.87540054321289

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002602629829198122
    2. ' ,' → logprob: -8.750260353088379
    3. ',F' → logprob: -9.250260353088379
    4. '   ' → logprob: -12.875260353088379
    5. ',
' → logprob: -13.625260353088379
    6. ',n' → logprob: -14.375260353088379
    7. 'def' → logprob: -15.250260353088379
    8. 'F' → logprob: -15.500260353088379
    9. ',p' → logprob: -16.000259399414062
    10. '`,' → logprob: -16.375259399414062

Token 189: ' N' (ID: 478)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.04368318244814873
    2. ' F' → logprob: -3.1686832904815674
    3. '   ' → logprob: -8.168683052062988
    4. ',' → logprob: -8.918683052062988
    5. 'n' → logprob: -9.168683052062988
    6. 'p' → logprob: -9.418683052062988
    7. ' n' → logprob: -10.418683052062988
    8. ' p' → logprob: -11.043683052062988
    9. ' ' → logprob: -11.543683052062988
    10. ',F' → logprob: -11.668683052062988

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013945228420197964
    2. ' ,' → logprob: -6.626394748687744
    3. ',
' → logprob: -10.751394271850586
    4. '   ' → logprob: -10.876394271850586
    5. ',p' → logprob: -11.251394271850586
    6. '):
' → logprob: -12.126394271850586
    7. '
' → logprob: -13.001394271850586
    8. '+,' → logprob: -13.376394271850586
    9. ',n' → logprob: -13.751394271850586
    10. 'p' → logprob: -13.876394271850586

Token 191: ' p' (ID: 275)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.7082048654556274
    2. 'p' → logprob: -0.7082048654556274
    3. ' p' → logprob: -4.958204746246338
    4. ' F' → logprob: -5.083204746246338
    5. ',' → logprob: -6.583204746246338
    6. '   ' → logprob: -8.708205223083496
    7. ')' → logprob: -9.333205223083496
    8. ',F' → logprob: -10.958205223083496
    9. ',p' → logprob: -11.645705223083496
    10. ' ,' → logprob: -11.895705223083496

Token 192: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39541366696357727
    2. '):
' → logprob: -1.6454136371612549
    3. ',' → logprob: -2.020413637161255
    4. '   ' → logprob: -7.020413875579834
    5. ')' → logprob: -10.145413398742676
    6. '):
' → logprob: -10.145413398742676
    7. ':' → logprob: -10.395413398742676
    8. ' ,' → logprob: -10.645413398742676
    9. ' ):' → logprob: -11.395413398742676
    10. ',
' → logprob: -11.895413398742676

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021671870723366737
    2. 'for' → logprob: -4.271671772003174
    3. ' for' → logprob: -4.896671772003174
    4. '	for' → logprob: -12.896672248840332
    5. '```' → logprob: -13.146672248840332
    6. ',' → logprob: -13.271672248840332
    7. '    
' → logprob: -13.896672248840332
    8. 'def' → logprob: -14.146672248840332
    9. ')' → logprob: -15.021672248840332
    10. ' ' → logprob: -15.646672248840332

Token 194: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004189875442534685
    2. '   ' → logprob: -5.504189968109131
    3. ' for' → logprob: -9.129189491271973
    4. '
' → logprob: -13.629189491271973
    5. '```' → logprob: -13.754189491271973
    6. 'def' → logprob: -15.379189491271973
    7. 'i' → logprob: -15.754189491271973
    8. '	for' → logprob: -15.879189491271973
    9. '    
' → logprob: -16.50419044494629
    10. ' ' → logprob: -16.87919044494629

Token 195: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16024017333984375
    2. 'i' → logprob: -1.9102401733398438
    3. ' ' → logprob: -12.035240173339844
    4. '   ' → logprob: -12.160240173339844
    5. '	i' → logprob: -12.535240173339844
    6. '  ' → logprob: -14.285240173339844
    7. ' in' → logprob: -15.160240173339844
    8. ' ' → logprob: -15.910240173339844
    9. '```' → logprob: -17.285240173339844
    10. ')' → logprob: -17.410240173339844

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09055585414171219
    2. 'in' → logprob: -2.4655559062957764
    3. ' ' → logprob: -7.215555667877197
    4. '  ' → logprob: -7.840555667877197
    5. '   ' → logprob: -8.465556144714355
    6. 'n' → logprob: -8.840556144714355
    7. ' i' → logprob: -9.715556144714355
    8. '```' → logprob: -11.090556144714355
    9. 'range' → logprob: -11.465556144714355
    10. 'i' → logprob: -11.590556144714355

Token 197: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22629627585411072
    2. ' range' → logprob: -1.601296305656433
    3. '   ' → logprob: -8.101296424865723
    4. 're' → logprob: -8.601296424865723
    5. ' ' → logprob: -9.101296424865723
    6. ' reversed' → logprob: -9.101296424865723
    7. '(range' → logprob: -9.476296424865723
    8. '  ' → logprob: -9.976296424865723
    9. 'ange' → logprob: -11.226296424865723
    10. 'N' → logprob: -11.726296424865723

Token 198: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001037691137753427
    2. '(' → logprob: -6.87603759765625
    3. ' (' → logprob: -12.75103759765625
    4. '(
' → logprob: -13.87603759765625
    5. '   ' → logprob: -14.25103759765625
    6. '(n' → logprob: -16.62603759765625
    7. '	N' → logprob: -16.62603759765625
    8. ' ' → logprob: -17.25103759765625
    9. 'N' → logprob: -17.25103759765625
    10. ',' → logprob: -17.62603759765625

Token 199: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08107190579175949
    2. ' -' → logprob: -3.0810718536376953
    3. ',' → logprob: -3.4560718536376953
    4. ' ,' → logprob: -8.081071853637695
    5. ' ' → logprob: -9.581071853637695
    6. '   ' → logprob: -11.206071853637695
    7. '-,' → logprob: -11.831071853637695
    8. ',
' → logprob: -12.331071853637695
    9. '  ' → logprob: -13.081071853637695
    10. ',-' → logprob: -13.831071853637695

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.85235276655294e-05
    2. ' ' → logprob: -9.375088691711426
    3. '   ' → logprob: -13.125088691711426
    4. '2' → logprob: -14.125088691711426
    5. '  ' → logprob: -15.125088691711426
    6. '0' → logprob: -15.687588691711426
    7. '```' → logprob: -16.12508773803711
    8. '
' → logprob: -16.56258773803711
    9. '...' → logprob: -16.68758773803711
    10. '-' → logprob: -17.12508773803711

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.478889215737581e-05
    2. '2' → logprob: -10.125054359436035
    3. ' ' → logprob: -11.250054359436035
    4. '   ' → logprob: -14.187554359436035
    5. '```' → logprob: -15.375054359436035
    6. '
' → logprob: -15.625054359436035
    7. '-' → logprob: -15.937554359436035
    8. '0' → logprob: -15.937554359436035
    9. '  ' → logprob: -16.25005531311035
    10. '...' → logprob: -17.25005531311035

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005680450703948736
    2. ' ,' → logprob: -7.50056791305542
    3. '   ' → logprob: -11.750568389892578
    4. ',-' → logprob: -12.000568389892578
    5. ',
' → logprob: -14.750568389892578
    6. '    ' → logprob: -15.875568389892578
    7. '  ' → logprob: -16.375568389892578
    8. '0' → logprob: -16.375568389892578
    9. ' ,-' → logprob: -16.750568389892578
    10. '1' → logprob: -17.375568389892578

Token 203: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14573925733566284
    2. ' -' → logprob: -2.0207393169403076
    3. '0' → logprob: -6.1457390785217285
    4. ' ' → logprob: -7.0207390785217285
    5. '   ' → logprob: -11.395739555358887
    6. '  ' → logprob: -12.145739555358887
    7. '	' → logprob: -13.020739555358887
    8. '1' → logprob: -13.395739555358887
    9. '    ' → logprob: -13.520739555358887
    10. '
' → logprob: -14.145739555358887

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.750011444091797
    3. '   ' → logprob: -13.625011444091797
    4. '
' → logprob: -14.000011444091797
    5. '```' → logprob: -14.125011444091797
    6. ',' → logprob: -15.562511444091797
    7. '  ' → logprob: -15.875011444091797
    8. ' -' → logprob: -16.000011444091797
    9. '

' → logprob: -16.312511444091797
    10. '...' → logprob: -16.437511444091797

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0040970430709421635
    2. '-' → logprob: -6.129096984863281
    3. ',-' → logprob: -6.629096984863281
    4. '   ' → logprob: -7.629096984863281
    5. ' ,' → logprob: -9.629096984863281
    6. ' -' → logprob: -10.629096984863281
    7. ' ,-' → logprob: -12.004096984863281
    8. '  ' → logprob: -13.129096984863281
    9. '1' → logprob: -13.254096984863281
    10. ',
' → logprob: -14.254096984863281

Token 206: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3485904932022095
    2. ' -' → logprob: -1.2235904932022095
    3. ' ' → logprob: -9.848590850830078
    4. '   ' → logprob: -10.098590850830078
    5. '<|end|>' → logprob: -11.098590850830078
    6. '  ' → logprob: -11.598590850830078
    7. '1' → logprob: -11.848590850830078
    8. ')' → logprob: -11.973590850830078
    9. '	' → logprob: -12.473590850830078
    10. ',' → logprob: -13.098590850830078

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.250004768371582
    4. ')' → logprob: -17.1250057220459
    5. '
' → logprob: -17.3750057220459
    6. '):
' → logprob: -17.7500057220459
    7. '  ' → logprob: -17.7500057220459
    8. '```' → logprob: -18.8750057220459
    9. 'i' → logprob: -19.2500057220459
    10. ',' → logprob: -19.2500057220459

Token 208: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002380642108619213
    2. '):' → logprob: -6.252380847930908
    3. ' ):
' → logprob: -8.12738037109375
    4. '   ' → logprob: -8.87738037109375
    5. '):
' → logprob: -11.62738037109375
    6. '-' → logprob: -13.25238037109375
    7. ',' → logprob: -13.37738037109375
    8. ')' → logprob: -13.62738037109375
    9. ' ):' → logprob: -13.75238037109375
    10. '):

' → logprob: -14.37738037109375

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18191426992416382
    2. '   ' → logprob: -1.8069143295288086
    3. 'Fin' → logprob: -6.681914329528809
    4. ' Fin' → logprob: -7.181914329528809
    5. '```' → logprob: -10.431914329528809
    6. ',' → logprob: -10.431914329528809
    7. '):
' → logprob: -11.431914329528809
    8. ' fin' → logprob: -11.681914329528809
    9. '<|end|>' → logprob: -11.681914329528809
    10. ')' → logprob: -11.931914329528809

Token 210: ' Fin' (ID: 7772)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' (adapté à ' Fin') → logprob: -0.030574366450309753
    2. ' Fin' → logprob: -4.155574321746826
    3. '   ' → logprob: -4.530574321746826
    4. '       ' → logprob: -5.780574321746826
    5. 'F' → logprob: -8.530574798583984
    6. ' ' → logprob: -9.405574798583984
    7. '    ' → logprob: -9.530574798583984
    8. '  ' → logprob: -10.030574798583984
    9. 'fin' → logprob: -10.530574798583984
    10. 'Finite' → logprob: -10.530574798583984

Token 211: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.968312951968983e-06
    2. 'inv' → logprob: -12.000009536743164
    3. '[i' → logprob: -12.875009536743164
    4. '   ' → logprob: -14.500009536743164
    5. '[' → logprob: -15.375009536743164
    6. 'i' → logprob: -15.875009536743164
    7. '[in' → logprob: -16.125009536743164
    8. '[v' → logprob: -16.375009536743164
    9. 'iv' → logprob: -17.000009536743164
    10. 'in' → logprob: -17.000009536743164

Token 212: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0018528391374275088
    2. '[' → logprob: -6.376852989196777
    3. '[I' → logprob: -9.501852989196777
    4. '[
' → logprob: -11.001852989196777
    5. '```' → logprob: -11.126852989196777
    6. '\[' → logprob: -11.251852989196777
    7. '   ' → logprob: -11.626852989196777
    8. '
' → logprob: -12.126852989196777
    9. ' [' → logprob: -12.126852989196777
    10. '`' → logprob: -13.251852989196777

Token 213: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006214152672328055
    2. ']=' → logprob: -8.250621795654297
    3. ' ]' → logprob: -8.500621795654297
    4. ')' → logprob: -9.875621795654297
    5. '=' → logprob: -9.875621795654297
    6. '   ' → logprob: -10.000621795654297
    7. ']
' → logprob: -13.250621795654297
    8. ' ' → logprob: -13.250621795654297
    9. '-' → logprob: -13.875621795654297
    10. '[' → logprob: -14.125621795654297

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008616461418569088
    2. ' =' → logprob: -4.7586164474487305
    3. '*=' → logprob: -15.00861644744873
    4. ')=' → logprob: -15.38361644744873
    5. '=

' → logprob: -15.38361644744873
    6. ']=' → logprob: -15.38361644744873
    7. '=
' → logprob: -15.63361644744873
    8. '*' → logprob: -15.63361644744873
    9. ' ' → logprob: -15.63361644744873
    10. ']' → logprob: -15.88361644744873

Token 215: ' Fin' (ID: 7772)
  Prédit: '(F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.7223007082939148
    2. 'Fin' → logprob: -0.7223007082939148
    3. 'F' → logprob: -4.3473005294799805
    4. ' Fin' → logprob: -4.3473005294799805
    5. ' (' → logprob: -6.9723005294799805
    6. '   ' → logprob: -7.3473005294799805
    7. '(' → logprob: -7.5973005294799805
    8. 'Finite' → logprob: -8.34730052947998
    9. 'Fi' → logprob: -9.47230052947998
    10. 'Finn' → logprob: -9.84730052947998

Token 216: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.896309739408025e-07
    2. '[v' → logprob: -15.250000953674316
    3. ' v' → logprob: -15.625000953674316
    4. '[' → logprob: -16.5
    5. '[
' → logprob: -17.125
    6. 'inv' → logprob: -17.5
    7. '
' → logprob: -17.625
    8. '[i' → logprob: -17.625
    9. '   ' → logprob: -17.875
    10. '	v' → logprob: -18.5

Token 217: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00044914212776347995
    2. '[' → logprob: -7.750449180603027
    3. '[
' → logprob: -11.375449180603027
    4. 'i' → logprob: -12.625449180603027
    5. ' [' → logprob: -13.250449180603027
    6. '[I' → logprob: -14.375449180603027
    7. '```' → logprob: -14.500449180603027
    8. '
' → logprob: -15.125449180603027
    9. ' ' → logprob: -16.50044822692871
    10. '   ' → logprob: -17.00044822692871

Token 218: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017290873220190406
    2. ' +' → logprob: -6.3767290115356445
    3. '[' → logprob: -11.126729011535645
    4. ']' → logprob: -12.626729011535645
    5. '   ' → logprob: -12.626729011535645
    6. '[i' → logprob: -12.876729011535645
    7. '+
' → logprob: -13.501729011535645
    8. '+i' → logprob: -14.501729011535645
    9. '+]' → logprob: -15.126729011535645
    10. '1' → logprob: -15.251729011535645

Token 219: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1557283111615106e-05
    2. ' ' → logprob: -10.125041961669922
    3. '   ' → logprob: -14.125041961669922
    4. '<|end|>' → logprob: -14.500041961669922
    5. '  ' → logprob: -16.750041961669922
    6. '
' → logprob: -16.875041961669922
    7. '```' → logprob: -17.000041961669922
    8. ']' → logprob: -18.062541961669922
    9. '    ' → logprob: -18.437541961669922
    10. ')' → logprob: -18.562541961669922

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '
' → logprob: -16.7500057220459
    4. '   ' → logprob: -17.2500057220459
    5. '```' → logprob: -17.3750057220459
    6. '<|end|>' → logprob: -17.7500057220459
    7. '  ' → logprob: -18.0000057220459
    8. ']' → logprob: -18.1250057220459
    9. '۱' → logprob: -19.3125057220459
    10. '

' → logprob: -19.6875057220459

Token 221: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.18136714398860931
    2. ' *' → logprob: -2.1813671588897705
    3. ')' → logprob: -3.0563671588897705
    4. '   ' → logprob: -5.806366920471191
    5. ']' → logprob: -6.681366920471191
    6. ' ' → logprob: -6.681366920471191
    7. ')*' → logprob: -8.681366920471191
    8. '    ' → logprob: -10.556366920471191
    9. '  ' → logprob: -10.681366920471191
    10. '```' → logprob: -10.681366920471191

Token 222: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6932179927825928
    2. ' *' → logprob: -0.6932179927825928
    3. ' ' → logprob: -10.318218231201172
    4. '   ' → logprob: -10.818218231201172
    5. '*i' → logprob: -12.318218231201172
    6. '  ' → logprob: -13.068218231201172
    7. '**' → logprob: -13.193218231201172
    8. '`' → logprob: -13.193218231201172
    9. '    ' → logprob: -14.068218231201172
    10. ''*' → logprob: -14.193218231201172

Token 223: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0013901159400120378
    2. ' (' → logprob: -6.626389980316162
    3. '(' → logprob: -10.12639045715332
    4. '[i' → logprob: -11.37639045715332
    5. 'i' → logprob: -11.75139045715332
    6. ' i' → logprob: -13.37639045715332
    7. '(
' → logprob: -13.50139045715332
    8. '   ' → logprob: -14.25139045715332
    9. '{i' → logprob: -14.62639045715332
    10. '(ii' → logprob: -15.25139045715332

Token 224: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0014934380305930972
    2. ' i' → logprob: -7.001493453979492
    3. '(i' → logprob: -7.501493453979492
    4. '   ' → logprob: -11.501493453979492
    5. ' (' → logprob: -11.626493453979492
    6. '(' → logprob: -12.501493453979492
    7. '[i' → logprob: -12.626493453979492
    8. '
' → logprob: -14.126493453979492
    9. '(
' → logprob: -14.251493453979492
    10. '{i' → logprob: -14.251493453979492

Token 225: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016257816925644875
    2. ' +' → logprob: -4.1412577629089355
    3. '+
' → logprob: -8.516258239746094
    4. ' +
' → logprob: -11.016258239746094
    5. '1' → logprob: -12.141258239746094
    6. '
' → logprob: -14.141258239746094
    7. ' ' → logprob: -14.641258239746094
    8. '+

' → logprob: -16.516258239746094
    9. '＋' → logprob: -16.641258239746094
    10. ' 
' → logprob: -16.766258239746094

Token 226: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -11.000019073486328
    3. '
' → logprob: -13.625019073486328
    4. '   ' → logprob: -14.000019073486328
    5. '2' → logprob: -16.500019073486328
    6. '

' → logprob: -16.750019073486328
    7. '  ' → logprob: -16.812519073486328
    8. '```' → logprob: -17.312519073486328
    9. ')' → logprob: -17.687519073486328
    10. '    ' → logprob: -18.500019073486328

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.250015258789062
    3. '
' → logprob: -13.875015258789062
    4. ')' → logprob: -15.000015258789062
    5. '   ' → logprob: -15.125015258789062
    6. '```' → logprob: -15.750015258789062
    7. '2' → logprob: -16.562515258789062
    8. '  ' → logprob: -16.937515258789062
    9. '

' → logprob: -16.937515258789062
    10. '`' → logprob: -17.500015258789062

Token 228: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008253490086644888
    2. ' )' → logprob: -7.12582540512085
    3. ')%' → logprob: -11.000824928283691
    4. ' %' → logprob: -13.000824928283691
    5. '%' → logprob: -13.625824928283691
    6. '   ' → logprob: -14.875824928283691
    7. ')
' → logprob: -15.875824928283691
    8. ' ' → logprob: -17.000825881958008
    9. ']' → logprob: -17.375825881958008
    10. ')

' → logprob: -18.000825881958008

Token 229: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.004621187690645456
    2. '%' → logprob: -5.3796210289001465
    3. ' ' → logprob: -15.004621505737305
    4. '	' → logprob: -15.879621505737305
    5. ' %=' → logprob: -15.879621505737305
    6. ')' → logprob: -16.004621505737305
    7. ' ' → logprob: -16.129621505737305
    8. '   ' → logprob: -17.379621505737305
    9. '
' → logprob: -17.379621505737305
    10. ' %
' → logprob: -17.754621505737305

Token 230: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.16022443771362305
    2. 'p' → logprob: -1.910224437713623
    3. ' ' → logprob: -15.910224914550781
    4. ' ' → logprob: -16.66022491455078
    5. ' 
' → logprob: -17.28522491455078
    6. '	p' → logprob: -17.91022491455078
    7. '(p' → logprob: -18.28522491455078
    8. '_p' → logprob: -18.53522491455078
    9. '```' → logprob: -18.53522491455078
    10. ' п' → logprob: -18.66022491455078

Token 231: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' fin' (ID: 2131)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9493188261985779
    2. ' compute' → logprob: -2.1993188858032227
    3. ' pre' → logprob: -2.4493188858032227
    4. ' prepare' → logprob: -2.6993188858032227
    5. ' initialize' → logprob: -3.0743188858032227
    6. 'main' → logprob: -3.1993188858032227
    7. 'compute' → logprob: -3.4493188858032227
    8. ' calculate' → logprob: -3.4493188858032227
    9. ' factorial' → logprob: -3.4493188858032227
    10. 'initialize' → logprob: -3.6993188858032227

Token 234: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3139309585094452
    2. 'def' → logprob: -1.4389309883117676
    3. 'al' → logprob: -4.063930988311768
    4. 'f' → logprob: -5.063930988311768
    5. 'factor' → logprob: -6.188930988311768
    6. 'onacci' → logprob: -6.688930988311768
    7. ' factorial' → logprob: -6.813930988311768
    8. 'inverse' → logprob: -7.438930988311768
    9. 'inv' → logprob: -7.563930988311768
    10. '_factor' → logprob: -8.06393051147461

Token 235: '(F' (ID: 12044)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29733768105506897
    2. '(F' → logprob: -1.7973376512527466
    3. '(_' → logprob: -2.797337770462036
    4. '_' → logprob: -3.922337770462036
    5. '(n' → logprob: -6.297337532043457
    6. '(_,' → logprob: -6.547337532043457
    7. '(_)' → logprob: -6.672337532043457
    8. '(N' → logprob: -7.047337532043457
    9. '(A' → logprob: -7.547337532043457
    10. '_(' → logprob: -7.672337532043457

Token 236: ',' (ID: 11)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.5106244087219238
    2. ',' → logprob: -1.1356244087219238
    3. 'in' → logprob: -2.635624408721924
    4. ')' → logprob: -5.635624408721924
    5. ',
' → logprob: -7.010624408721924
    6. '   ' → logprob: -7.385624408721924
    7. 'inf' → logprob: -8.010623931884766
    8. ' ,' → logprob: -8.135623931884766
    9. 'inp' → logprob: -8.260623931884766
    10. 'i' → logprob: -8.385623931884766

Token 237: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.31086719036102295
    2. ' p' → logprob: -1.435867190361023
    3. 'Fin' → logprob: -4.4358673095703125
    4. 'N' → logprob: -4.8108673095703125
    5. 'F' → logprob: -5.9358673095703125
    6. ' Fin' → logprob: -6.1858673095703125
    7. 'n' → logprob: -6.5608673095703125
    8. ' N' → logprob: -6.6858673095703125
    9. ' n' → logprob: -7.0608673095703125
    10. ' F' → logprob: -8.185867309570312

Token 238: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1298726350069046
    2. ',' → logprob: -2.1298725605010986
    3. '):
' → logprob: -6.129872798919678
    4. ')' → logprob: -7.379872798919678
    5. ',n' → logprob: -9.75487232208252
    6. ' ):' → logprob: -10.62987232208252
    7. ',N' → logprob: -11.00487232208252
    8. ' ,' → logprob: -11.12987232208252
    9. 'n' → logprob: -12.12987232208252
    10. ',F' → logprob: -12.25487232208252

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.200166469876422e-06
    2. 'N' → logprob: -12.875004768371582
    3. 'n' → logprob: -13.250004768371582
    4. 'F' → logprob: -15.375004768371582
    5. 'def' → logprob: -15.500004768371582
    6. ' N' → logprob: -15.750004768371582
    7. ' n' → logprob: -16.0000057220459
    8. '   ' → logprob: -16.7500057220459
    9. ' def' → logprob: -17.2500057220459
    10. '	n' → logprob: -17.8750057220459

Token 240: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.7379922270774841
    2. 'F' → logprob: -0.9879922270774841
    3. '   ' → logprob: -2.237992286682129
    4. 'Fin' → logprob: -3.362992286682129
    5. ' N' → logprob: -5.237992286682129
    6. ' F' → logprob: -6.237992286682129
    7. ' Fin' → logprob: -6.987992286682129
    8. 'n' → logprob: -9.987992286682129
    9. ' ' → logprob: -10.737992286682129
    10. 'Finite' → logprob: -11.737992286682129

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038042180240154266
    2. '=' → logprob: -3.2880420684814453
    3. '   ' → logprob: -14.913042068481445
    4. ' ' → logprob: -15.538042068481445
    5. '=len' → logprob: -16.663042068481445
    6. ',' → logprob: -17.538042068481445
    7. ' =
' → logprob: -18.163042068481445
    8. '=int' → logprob: -18.288042068481445
    9. '=N' → logprob: -18.538042068481445
    10. '  ' → logprob: -19.538042068481445

Token 242: ' get' (ID: 717)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01130316499620676
    2. ' len' → logprob: -4.511302947998047
    3. 'get' → logprob: -8.386302947998047
    4. '   ' → logprob: -11.386302947998047
    5. ' get' → logprob: -11.511302947998047
    6. '(len' → logprob: -12.386302947998047
    7. '[len' → logprob: -13.761302947998047
    8. '
' → logprob: -15.386302947998047
    9. '	len' → logprob: -15.386302947998047
    10. '  ' → logprob: -16.386302947998047

Token 243: '_N' (ID: 3080)
  Prédit: '_N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -4.024604277219623e-05
    2. '_' → logprob: -10.125040054321289
    3. 'N' → logprob: -16.00004005432129
    4. ' _' → logprob: -16.87504005432129
    5. '_
' → logprob: -16.87504005432129
    6. '_F' → logprob: -17.75004005432129
    7. '_n' → logprob: -18.75004005432129
    8. '_from' → logprob: -20.37504005432129
    9. '_

' → logprob: -20.37504005432129
    10. '```' → logprob: -20.50004005432129

Token 244: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.0001720742875477299
    2. '(F' → logprob: -8.875171661376953
    3. 'from' → logprob: -10.375171661376953
    4. 'From' → logprob: -14.125171661376953
    5. '_FROM' → logprob: -15.750171661376953
    6. ' from' → logprob: -16.875171661376953
    7. '_f' → logprob: -17.500171661376953
    8. '   ' → logprob: -18.375171661376953
    9. '_From' → logprob: -18.375171661376953
    10. '```' → logprob: -18.500171661376953

Token 245: '_F' (ID: 2729)
  Prédit: '_F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_F' → logprob: -0.01940876804292202
    2. '(F' → logprob: -4.394408702850342
    3. '_' → logprob: -5.019408702850342
    4. 'F' → logprob: -8.3944091796875
    5. ' F' → logprob: -11.1444091796875
    6. '_(' → logprob: -11.1444091796875
    7. '_f' → logprob: -12.6444091796875
    8. '(' → logprob: -12.7694091796875
    9. '_
' → logprob: -12.7694091796875
    10. '	F' → logprob: -14.0194091796875

Token 246: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -1.9146995327901095e-05
    2. '(' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.250019073486328
    4. ' (' → logprob: -17.375019073486328
    5. 'F' → logprob: -19.000019073486328
    6. ' ' → logprob: -19.250019073486328
    7. ',' → logprob: -19.500019073486328
    8. '(
' → logprob: -19.500019073486328
    9. ',F' → logprob: -19.750019073486328
    10. '(f' → logprob: -20.000019073486328

Token 247: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0789426639676094
    2. ')' → logprob: -2.5789427757263184
    3. ' )
' → logprob: -10.82894229888916
    4. '   ' → logprob: -10.95394229888916
    5. ')
' → logprob: -11.20394229888916
    6. ')

' → logprob: -13.82894229888916
    7. ' )' → logprob: -14.07894229888916
    8. ' ' → logprob: -16.328943252563477
    9. ')\
' → logprob: -17.328943252563477
    10. ')`
' → logprob: -17.703943252563477

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023417724296450615
    2. 'Fin' → logprob: -3.7734177112579346
    3. ' Fin' → logprob: -9.023417472839355
    4. 'F' → logprob: -10.023417472839355
    5. '  ' → logprob: -12.898417472839355
    6. ' ' → logprob: -13.648417472839355
    7. '    
' → logprob: -14.273417472839355
    8. '
' → logprob: -14.648417472839355
    9. 'Finite' → logprob: -14.648417472839355
    10. '    ' → logprob: -15.023417472839355

Token 249: ' Fin' (ID: 7772)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' (adapté à ' Fin') → logprob: -0.0006591808632947505
    2. ' Fin' → logprob: -7.500658988952637
    3. 'F' → logprob: -9.250658988952637
    4. '   ' → logprob: -11.625658988952637
    5. 'Finite' → logprob: -14.250658988952637
    6. 'fin' → logprob: -15.000658988952637
    7. 'Inv' → logprob: -16.625659942626953
    8. ' ' → logprob: -16.625659942626953
    9. 'Fi' → logprob: -17.125659942626953
    10. 'Finish' → logprob: -17.250659942626953

Token 250: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.45848218582978e-06
    2. ' =' → logprob: -14.12500286102295
    3. '   ' → logprob: -14.25000286102295
    4. '=' → logprob: -14.25000286102295
    5. 'inv' → logprob: -16.125001907348633
    6. ' ' → logprob: -16.625001907348633
    7. '```' → logprob: -16.625001907348633
    8. 'в' → logprob: -17.500001907348633
    9. '  ' → logprob: -18.000001907348633
    10. 'iv' → logprob: -18.125001907348633

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. ' ' → logprob: -15.70141315460205
    4. '  ' → logprob: -18.076414108276367
    5. '   ' → logprob: -18.076414108276367
    6. ' =[' → logprob: -18.076414108276367
    7. ' =
' → logprob: -18.201414108276367
    8. '＝' → logprob: -18.201414108276367
    9. ',' → logprob: -18.451414108276367
    10. '=create' → logprob: -18.701414108276367

Token 252: ' duplicate' (ID: 41010)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.3851710557937622
    2. ' create' → logprob: -1.5101710557937622
    3. '[' → logprob: -2.3851709365844727
    4. ' [' → logprob: -5.010170936584473
    5. 'duplicate' → logprob: -10.510170936584473
    6. ' duplicate' → logprob: -11.260170936584473
    7. '   ' → logprob: -13.010170936584473
    8. '	create' → logprob: -13.135170936584473
    9. ' ' → logprob: -13.260170936584473
    10. '.create' → logprob: -13.760170936584473

Token 253: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0003571535926312208
    2. '(F' → logprob: -8.250357627868652
    3. 'factor' → logprob: -9.750357627868652
    4. 'Factor' → logprob: -11.750357627868652
    5. '_list' → logprob: -12.250357627868652
    6. '_' → logprob: -12.500357627868652
    7. '_F' → logprob: -12.500357627868652
    8. '```' → logprob: -12.750357627868652
    9. ' factorial' → logprob: -12.750357627868652
    10. 'F' → logprob: -12.875357627868652

Token 254: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.35251036286354065
    2. 'ial' → logprob: -1.2275103330612183
    3. '_list' → logprob: -6.102510452270508
    4. 'list' → logprob: -7.477510452270508
    5. 'alist' → logprob: -7.852510452270508
    6. '(F' → logprob: -8.352510452270508
    7. 'ator' → logprob: -8.477510452270508
    8. ' factorial' → logprob: -8.852510452270508
    9. 'atorial' → logprob: -9.102510452270508
    10. 'F' → logprob: -10.352510452270508

Token 255: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.4987974029500037e-05
    2. 'list' → logprob: -10.875024795532227
    3. 'List' → logprob: -12.375024795532227
    4. 's' → logprob: -13.875024795532227
    5. ' list' → logprob: -15.000024795532227
    6. '(F' → logprob: -15.125024795532227
    7. 'F' → logprob: -16.375024795532227
    8. '_lists' → logprob: -16.750024795532227
    9. '
' → logprob: -17.000024795532227
    10. '_' → logprob: -17.375024795532227

Token 256: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: 0.0
    2. ' (' → logprob: -17.5
    3. '(' → logprob: -18.625
    4. 'F' → logprob: -21.5
    5. '(
' → logprob: -22.75
    6. '(f' → logprob: -22.875
    7. '(C' → logprob: -23.75
    8. '(S' → logprob: -23.875
    9. '[F' → logprob: -24.125
    10. '(A' → logprob: -24.25

Token 257: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31330448389053345
    2. ')' → logprob: -1.3133044242858887
    3. '   ' → logprob: -10.688304901123047
    4. ' )
' → logprob: -11.563304901123047
    5. '())
' → logprob: -12.688304901123047
    6. ')
' → logprob: -12.938304901123047
    7. '()' → logprob: -13.563304901123047
    8. ')

' → logprob: -13.813304901123047
    9. ' )' → logprob: -14.063304901123047
    10. ' ' → logprob: -14.313304901123047

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026187049224972725
    2. ' set' → logprob: -6.877618789672852
    3. 'set' → logprob: -7.002618789672852
    4. '
' → logprob: -7.502618789672852
    5. '    
' → logprob: -9.752618789672852
    6. ')set' → logprob: -11.252618789672852
    7. '	set' → logprob: -11.377618789672852
    8. '_set' → logprob: -11.752618789672852
    9. '(set' → logprob: -11.877618789672852
    10. ',set' → logprob: -12.002618789672852

Token 259: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.004503231029957533
    2. ' set' → logprob: -5.87950325012207
    3. '   ' → logprob: -6.37950325012207
    4. '	set' → logprob: -14.37950325012207
    5. '    
' → logprob: -16.37950325012207
    6. '
' → logprob: -16.62950325012207
    7. '  ' → logprob: -17.00450325012207
    8. ')set' → logprob: -17.25450325012207
    9. '_set' → logprob: -17.25450325012207
    10. '#set' → logprob: -17.62950325012207

Token 260: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -6.515961285913363e-05
    2. 'last' → logprob: -9.750064849853516
    3. 'Last' → logprob: -12.125064849853516
    4. '_LAST' → logprob: -14.250064849853516
    5. '_Last' → logprob: -14.250064849853516
    6. '_fin' → logprob: -16.750064849853516
    7. '```' → logprob: -17.250064849853516
    8. ' last' → logprob: -18.000064849853516
    9. '_final' → logprob: -18.250064849853516
    10. '_first' → logprob: -18.375064849853516

Token 261: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.0003168737457599491
    2. '_in' → logprob: -8.750316619873047
    3. '_inv' → logprob: -9.875316619873047
    4. 'inverse' → logprob: -10.125316619873047
    5. '_' → logprob: -11.000316619873047
    6. '```' → logprob: -11.250316619873047
    7. '
' → logprob: -11.375316619873047
    8. '_factor' → logprob: -12.625316619873047
    9. ' _' → logprob: -12.750316619873047
    10. '\' → logprob: -13.125316619873047

Token 262: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -5.8961017202818766e-05
    2. '(' → logprob: -9.750059127807617
    3. '(
' → logprob: -15.000059127807617
    4. ' (' → logprob: -15.375059127807617
    5. '(f' → logprob: -16.875059127807617
    6. '(

' → logprob: -18.625059127807617
    7. '(None' → logprob: -19.000059127807617
    8. '((' → logprob: -19.250059127807617
    9. '(fin' → logprob: -19.250059127807617
    10. ')(' → logprob: -19.500059127807617

Token 263: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -8.685467764735222e-05
    2. 'nv' → logprob: -10.250086784362793
    3. ',' → logprob: -10.375086784362793
    4. 'in' → logprob: -12.625086784362793
    5. '   ' → logprob: -12.750086784362793
    6. ' inv' → logprob: -13.125086784362793
    7. 'inf' → logprob: -13.375086784362793
    8. 'inj' → logprob: -13.625086784362793
    9. '
' → logprob: -13.750086784362793
    10. ',
' → logprob: -13.875086784362793

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000331055314745754
    2. ',F' → logprob: -8.375330924987793
    3. ' ,' → logprob: -9.250330924987793
    4. ',
' → logprob: -12.375330924987793
    5. '   ' → logprob: -16.37533187866211
    6. '
' → logprob: -17.25033187866211
    7. '(' → logprob: -17.50033187866211
    8. ',

' → logprob: -17.62533187866211
    9. '(F' → logprob: -18.00033187866211
    10. ')' → logprob: -18.12533187866211

Token 265: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.6931476593017578
    2. ' F' → logprob: -0.6931476593017578
    3. '   ' → logprob: -15.318147659301758
    4. '	F' → logprob: -16.443147659301758
    5. ' ' → logprob: -16.818147659301758
    6. ')' → logprob: -17.318147659301758
    7. ',F' → logprob: -17.318147659301758
    8. '    ' → logprob: -18.443147659301758
    9. ',' → logprob: -18.818147659301758
    10. '(F' → logprob: -19.193147659301758

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ',p' → logprob: -13.875001907348633
    3. ' ,' → logprob: -14.375001907348633
    4. ',
' → logprob: -18.250001907348633
    5. 'p' → logprob: -19.875001907348633
    6. '‌,' → logprob: -20.375001907348633
    7. '   ' → logprob: -20.750001907348633
    8. ')' → logprob: -22.000001907348633
    9. ' ' → logprob: -22.500001907348633
    10. '
' → logprob: -22.750001907348633

Token 267: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.00861468818038702
    2. 'p' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.258615493774414
    4. '	p' → logprob: -17.758615493774414
    5. ')' → logprob: -17.883615493774414
    6. ')p' → logprob: -18.508615493774414
    7. ',p' → logprob: -19.258615493774414
    8. ' 
' → logprob: -19.633615493774414
    9. '(p' → logprob: -19.758615493774414
    10. ',' → logprob: -19.758615493774414

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3995552957057953
    2. ')
' → logprob: -1.6495553255081177
    3. '   ' → logprob: -2.024555206298828
    4. '
' → logprob: -5.274555206298828
    5. 'compute' → logprob: -10.649555206298828
    6. '    
' → logprob: -11.774555206298828
    7. ',' → logprob: -11.899555206298828
    8. '  
' → logprob: -12.149555206298828
    9. ')set' → logprob: -12.399555206298828
    10. ' compute' → logprob: -12.899555206298828

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015153385465964675
    2. 'compute' → logprob: -6.5015153884887695
    3. ' compute' → logprob: -11.37651538848877
    4. '
' → logprob: -13.87651538848877
    5. 'def' → logprob: -14.62651538848877
    6. '```' → logprob: -15.62651538848877
    7. '    
' → logprob: -17.001514434814453
    8. '	com' → logprob: -18.251514434814453
    9. '(com' → logprob: -18.376514434814453
    10. '.compute' → logprob: -18.501514434814453

Token 270: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' (adapté à ' compute') → logprob: -0.5830052495002747
    2. '   ' → logprob: -0.8330052495002747
    3. ' compute' → logprob: -4.958005428314209
    4. '
' → logprob: -12.20800495147705
    5. '  ' → logprob: -13.45800495147705
    6. '	com' → logprob: -13.45800495147705
    7. ' ' → logprob: -13.45800495147705
    8. 'com' → logprob: -13.70800495147705
    9. '```' → logprob: -13.95800495147705
    10. '_compute' → logprob: -14.20800495147705

Token 271: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -4.246537173457909e-06
    2. '_factor' → logprob: -12.500003814697266
    3. 'inverse' → logprob: -15.000003814697266
    4. '_inv' → logprob: -17.750003814697266
    5. '_in' → logprob: -18.375003814697266
    6. '```' → logprob: -18.750003814697266
    7. '_integer' → logprob: -19.250003814697266
    8. '_reverse' → logprob: -20.000003814697266
    9. '
' → logprob: -20.375003814697266
    10. '_' → logprob: -20.750003814697266

Token 272: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -5.512236498361744e-07
    2. 'factor' → logprob: -15.000000953674316
    3. '_fact' → logprob: -15.875000953674316
    4. '_inverse' → logprob: -17.75
    5. 'Factor' → logprob: -17.875
    6. '_f' → logprob: -17.875
    7. '```' → logprob: -18.375
    8. '_factory' → logprob: -18.875
    9. ' factorial' → logprob: -19.0
    10. 's' → logprob: -19.0

Token 273: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.03812456876039505
    2. 'als' → logprob: -3.2881245613098145
    3. '(' → logprob: -10.538125038146973
    4. '[' → logprob: -11.913125038146973
    5. 'ails' → logprob: -12.163125038146973
    6. 'c' → logprob: -12.288125038146973
    7. '
' → logprob: -12.538125038146973
    8. '{' → logprob: -12.788125038146973
    9. 's' → logprob: -12.788125038146973
    10. '```' → logprob: -12.913125038146973

Token 274: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.250000953674316
    3. ' (' → logprob: -15.875000953674316
    4. '(f' → logprob: -16.75
    5. '(
' → logprob: -18.0
    6. '
' → logprob: -20.375
    7. 'F' → logprob: -20.625
    8. ' ' → logprob: -21.0
    9. ' F' → logprob: -21.875
    10. '(C' → logprob: -22.25

Token 275: 'inv' (ID: 31086)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006280870293267071
    2. 'Fin' → logprob: -7.5006279945373535
    3. ' ,' → logprob: -9.750628471374512
    4. ',F' → logprob: -11.875628471374512
    5. 'F' → logprob: -12.750628471374512
    6. '   ' → logprob: -13.000628471374512
    7. ' Fin' → logprob: -13.250628471374512
    8. 'fin' → logprob: -13.625628471374512
    9. ',
' → logprob: -14.375628471374512
    10. ')' → logprob: -15.500628471374512

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010211274639004841
    2. ' ,' → logprob: -9.250102043151855
    3. ',N' → logprob: -12.250102043151855
    4. ',F' → logprob: -14.125102043151855
    5. ',
' → logprob: -14.750102043151855
    6. '(N' → logprob: -18.125102996826172
    7. '(' → logprob: -18.625102996826172
    8. 'F' → logprob: -19.000102996826172
    9. '   ' → logprob: -19.000102996826172
    10. '
' → logprob: -19.125102996826172

Token 277: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004309076175559312
    2. ' N' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.625431060791016
    4. '	N' → logprob: -17.750431060791016
    5. ' ' → logprob: -19.125431060791016
    6. '
' → logprob: -20.250431060791016
    7. '<|end|>' → logprob: -20.625431060791016
    8. '  ' → logprob: -20.875431060791016
    9. '_N' → logprob: -21.500431060791016
    10. '>N' → logprob: -22.000431060791016

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0722858102526516e-05
    2. ',p' → logprob: -10.375041007995605
    3. ' ,' → logprob: -11.625041007995605
    4. 'p' → logprob: -15.000041007995605
    5. ' p' → logprob: -16.12504005432129
    6. '   ' → logprob: -17.50004005432129
    7. ',
' → logprob: -18.00004005432129
    8. '(p' → logprob: -19.75004005432129
    9. ')' → logprob: -20.00004005432129
    10. ' ' → logprob: -20.62504005432129

Token 279: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20141352713108063
    2. ' p' → logprob: -1.7014135122299194
    3. '
' → logprob: -16.076414108276367
    4. ' ' → logprob: -16.201414108276367
    5. ' 
' → logprob: -17.951414108276367
    6. '<p' → logprob: -18.201414108276367
    7. '   ' → logprob: -18.826414108276367
    8. '	p' → logprob: -18.951414108276367
    9. ',' → logprob: -19.951414108276367
    10. ' ' → logprob: -20.326414108276367

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07908211648464203
    2. ')
' → logprob: -2.5790820121765137
    3. '   ' → logprob: -8.579082489013672
    4. ')
' → logprob: -13.454082489013672
    5. ' )' → logprob: -13.579082489013672
    6. ')return' → logprob: -14.204082489013672
    7. ' )
' → logprob: -14.329082489013672
    8. ')

' → logprob: -15.454082489013672
    9. ',' → logprob: -16.829082489013672
    10. '
' → logprob: -17.079082489013672

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.750436007976532e-05
    2. 'return' → logprob: -11.12503719329834
    3. ' return' → logprob: -11.37503719329834
    4. '	return' → logprob: -12.37503719329834
    5. '    
' → logprob: -12.62503719329834
    6. '
' → logprob: -12.75003719329834
    7. '   ' → logprob: -15.25003719329834
    8. ':return' → logprob: -16.250038146972656
    9. '```' → logprob: -16.250038146972656
    10. '       ' → logprob: -17.125038146972656

Token 282: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5763413310050964
    2. '   ' → logprob: -0.8263413310050964
    3. ' return' → logprob: -7.826341152191162
    4. '	return' → logprob: -13.20134162902832
    5. ' ' → logprob: -14.45134162902832
    6. '  ' → logprob: -15.95134162902832
    7. '    
' → logprob: -16.82634162902832
    8. '       ' → logprob: -17.07634162902832
    9. ':return' → logprob: -17.70134162902832
    10. 'eturn' → logprob: -17.82634162902832

Token 283: ' Fin' (ID: 7772)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' → logprob: -0.16061535477638245
    2. ' Fin' → logprob: -1.91061532497406
    3. 'F' → logprob: -7.91061544418335
    4. 'Finite' → logprob: -10.785614967346191
    5. '(F' → logprob: -14.785614967346191
    6. 'Fi' → logprob: -14.910614967346191
    7. 'Finn' → logprob: -14.910614967346191
    8. '[' → logprob: -15.035614967346191
    9. ' ' → logprob: -15.035614967346191
    10. ' F' → logprob: -15.160614967346191

Token 284: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.512236498361744e-07
    2. 'V' → logprob: -16.5
    3. '[' → logprob: -16.625
    4. '   ' → logprob: -16.625
    5. '
' → logprob: -16.75
    6. '[v' → logprob: -17.0
    7. '```' → logprob: -17.625
    8. ' ' → logprob: -17.625
    9. '	v' → logprob: -18.5
    10. '[
' → logprob: -18.75

Token 285: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.584337592124939
    2. '<|end|>' → logprob: -0.834337592124939
    3. '```' → logprob: -5.5843377113342285
    4. '#' → logprob: -6.0843377113342285
    5. '<|end|>' → logprob: -6.4593377113342285
    6. ')' → logprob: -8.20933723449707
    7. '[' → logprob: -8.58433723449707
    8. '
' → logprob: -9.33433723449707
    9. '...' → logprob: -10.33433723449707
    10. '``' → logprob: -10.83433723449707

Token 286: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01515390444546938
    2. '#' → logprob: -4.515153884887695
    3. '<|end|>' → logprob: -5.640153884887695
    4. '```' → logprob: -8.265153884887695
    5. 'p' → logprob: -9.515153884887695
    6. 'n' → logprob: -9.640153884887695
    7. '<|end|>' → logprob: -10.015153884887695
    8. '[' → logprob: -10.890153884887695
    9. 'print' → logprob: -11.140153884887695
    10. 'from' → logprob: -11.140153884887695

Token 287: ' multiply' (ID: 57388)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -1.020533561706543
    2. 'n' → logprob: -1.395533561706543
    3. 'bin' → logprob: -2.020533561706543
    4. ' n' → logprob: -3.020533561706543
    5. 'factor' → logprob: -3.270533561706543
    6. 'main' → logprob: -3.520533561706543
    7. 'combine' → logprob: -3.770533561706543
    8. 'choose' → logprob: -4.020533561706543
    9. 'mod' → logprob: -4.020533561706543
    10. 'compute' → logprob: -4.145533561706543

Token 288: '_and' (ID: 18645)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.0600895881652832
    2. '(A' → logprob: -1.3100895881652832
    3. '(' → logprob: -1.5600895881652832
    4. '(F' → logprob: -1.9350895881652832
    5. '_factor' → logprob: -4.185089588165283
    6. '_' → logprob: -5.310089588165283
    7. '_list' → logprob: -6.185089588165283
    8. '_numbers' → logprob: -6.435089588165283
    9. '(f' → logprob: -7.310089588165283
    10. '(_' → logprob: -7.435089588165283

Token 289: '_mod' (ID: 15325)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.7540435194969177
    2. 'pow' → logprob: -1.7540435791015625
    3. 'return' → logprob: -2.1290435791015625
    4. 'acc' → logprob: -2.6290435791015625
    5. 'add' → logprob: -3.5040435791015625
    6. 'compute' → logprob: -4.0040435791015625
    7. '_mod' → logprob: -4.0040435791015625
    8. 'check' → logprob: -4.2540435791015625
    9. 'update' → logprob: -4.3790435791015625
    10. 'reduce' → logprob: -4.7540435791015625

Token 290: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.448975145816803
    2. '(F' → logprob: -1.5739750862121582
    3. '(A' → logprob: -2.573975086212158
    4. '(' → logprob: -2.573975086212158
    5. ' (' → logprob: -6.448975086212158
    6. '(x' → logprob: -8.323975563049316
    7. 'def' → logprob: -10.198975563049316
    8. '(f' → logprob: -10.198975563049316
    9. '((' → logprob: -10.448975563049316
    10. 'a' → logprob: -11.448975563049316

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011186810210347176
    2. ' ,' → logprob: -4.511186599731445
    3. ',b' → logprob: -9.136186599731445
    4. ',a' → logprob: -11.386186599731445
    5. ')' → logprob: -12.261186599731445
    6. '):' → logprob: -12.386186599731445
    7. ' ' → logprob: -12.636186599731445
    8. '_,' → logprob: -13.136186599731445
    9. '   ' → logprob: -13.386186599731445
    10. ',
' → logprob: -13.886186599731445

Token 292: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20143157243728638
    2. ' b' → logprob: -1.7014315128326416
    3. 'p' → logprob: -11.701431274414062
    4. ' p' → logprob: -12.576431274414062
    5. ' ' → logprob: -13.076431274414062
    6. '    ' → logprob: -13.576431274414062
    7. '   ' → logprob: -13.701431274414062
    8. 'a' → logprob: -14.451431274414062
    9. '	b' → logprob: -15.076431274414062
    10. '  ' → logprob: -15.201431274414062

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.847109812544659e-05
    2. '):' → logprob: -10.125048637390137
    3. ' ,' → logprob: -11.750048637390137
    4. ',p' → logprob: -15.875048637390137
    5. ':' → logprob: -16.00004768371582
    6. '   ' → logprob: -16.75004768371582
    7. ')' → logprob: -16.75004768371582
    8. ',a' → logprob: -17.62504768371582
    9. '):
' → logprob: -17.87504768371582
    10. ',
' → logprob: -18.12504768371582

Token 294: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.693149745464325
    2. ' p' → logprob: -0.693149745464325
    3. ' ' → logprob: -14.06814956665039
    4. '   ' → logprob: -14.19314956665039
    5. ')' → logprob: -14.56814956665039
    6. ',' → logprob: -16.06814956665039
    7. '	p' → logprob: -16.31814956665039
    8. ' )' → logprob: -16.94314956665039
    9. '    ' → logprob: -17.06814956665039
    10. ',p' → logprob: -17.19314956665039

Token 295: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -3.249780638725497e-05
    2. '):
' → logprob: -11.000032424926758
    3. ')' → logprob: -11.125032424926758
    4. ' ):' → logprob: -14.125032424926758
    5. ':' → logprob: -16.125032424926758
    6. '   ' → logprob: -17.125032424926758
    7. ',' → logprob: -17.625032424926758
    8. '):
' → logprob: -17.875032424926758
    9. '}:' → logprob: -18.000032424926758
    10. ']:' → logprob: -18.500032424926758

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035045649856328964
    2. ' return' → logprob: -5.753504753112793
    3. '    
' → logprob: -8.753504753112793
    4. ' 
' → logprob: -9.628504753112793
    5. '	return' → logprob: -10.003504753112793
    6. '<|end|>' → logprob: -11.003504753112793
    7. '    ' → logprob: -11.628504753112793
    8. ')' → logprob: -12.003504753112793
    9. 'return' → logprob: -12.003504753112793
    10. ':' → logprob: -12.378504753112793

Token 297: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2327369898557663
    2. ' return' → logprob: -1.7327369451522827
    3. '   ' → logprob: -3.4827370643615723
    4. 'a' → logprob: -9.857736587524414
    5. '(a' → logprob: -10.982736587524414
    6. '(return' → logprob: -11.232736587524414
    7. '(' → logprob: -11.357736587524414
    8. ' (' → logprob: -11.357736587524414
    9. ' a' → logprob: -12.482736587524414
    10. '    
' → logprob: -13.857736587524414

Token 298: ' a' (ID: 261)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2014690786600113
    2. ' (' → logprob: -1.70146906375885
    3. '(' → logprob: -10.576469421386719
    4. 'a' → logprob: -10.701469421386719
    5. '((' → logprob: -11.951469421386719
    6. ' a' → logprob: -14.576469421386719
    7. '   ' → logprob: -15.951469421386719
    8. '(A' → logprob: -15.951469421386719
    9. '(ab' → logprob: -15.951469421386719
    10. '
' → logprob: -16.07646942138672

Token 299: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1274755299091339
    2. '*' → logprob: -2.1274755001068115
    3. ' ' → logprob: -7.877475738525391
    4. ' %' → logprob: -9.00247573852539
    5. '%' → logprob: -10.25247573852539
    6. ' ' → logprob: -12.25247573852539
    7. ' *
' → logprob: -13.12747573852539
    8. '*b' → logprob: -14.25247573852539
    9. ' **' → logprob: -14.37747573852539
    10. '  ' → logprob: -15.00247573852539

Token 300: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.501502990722656
    4. ' ' → logprob: -19.751502990722656
    5. '	b' → logprob: -19.876502990722656
    6. '```' → logprob: -20.251502990722656
    7. '  ' → logprob: -21.751502990722656
    8. '(b' → logprob: -22.376502990722656
    9. ')b' → logprob: -22.876502990722656
    10. '    ' → logprob: -22.876502990722656

Token 301: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.00671584764495492
    2. '%' → logprob: -5.006715774536133
    3. ' ' → logprob: -14.881715774536133
    4. ' ' → logprob: -16.881715774536133
    5. '<|end|>' → logprob: -17.631715774536133
    6. ' %
' → logprob: -18.756715774536133
    7. '%b' → logprob: -19.006715774536133
    8. '%c' → logprob: -19.256715774536133
    9. ' %#' → logprob: -19.256715774536133
    10. ')' → logprob: -19.381715774536133

Token 302: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2014133334159851
    2. ' p' → logprob: -1.7014133930206299
    3. ' 
' → logprob: -19.076414108276367
    4. ' ' → logprob: -19.576414108276367
    5. ' ' → logprob: -19.701414108276367
    6. '```' → logprob: -19.701414108276367
    7. '(p' → logprob: -19.826414108276367
    8. '	p' → logprob: -20.076414108276367
    9. '_p' → logprob: -20.451414108276367
    10. '<p' → logprob: -20.826414108276367

Token 303: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003136552404612303
    2. '<|end|>' → logprob: -8.125313758850098
    3. '```' → logprob: -11.750313758850098
    4. '#' → logprob: -12.000313758850098
    5. '[' → logprob: -13.375313758850098
    6. ' def' → logprob: -14.250313758850098
    7. '<|end|>' → logprob: -14.875313758850098
    8. 'from' → logprob: -15.750313758850098
    9. ')' → logprob: -16.25031280517578
    10. '``' → logprob: -16.37531280517578

Token 305: ' comb' (ID: 4134)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.3840525150299072
    2. 'comb' → logprob: -1.3840525150299072
    3. 'bin' → logprob: -1.5090525150299072
    4. 'choose' → logprob: -3.1340525150299072
    5. 'combine' → logprob: -3.1340525150299072
    6. 'n' → logprob: -3.3840525150299072
    7. 'compute' → logprob: -3.3840525150299072
    8. 'factor' → logprob: -3.5090525150299072
    9. 'main' → logprob: -3.5090525150299072
    10. 'multiply' → logprob: -4.259052276611328

Token 306: '(F' (ID: 12044)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00024834630312398076
    2. '(N' → logprob: -9.000247955322266
    3. 'ination' → logprob: -9.875247955322266
    4. '(' → logprob: -10.125247955322266
    5. '(com' → logprob: -11.750247955322266
    6. 'def' → logprob: -12.000247955322266
    7. '(def' → logprob: -12.250247955322266
    8. '(len' → logprob: -12.875247955322266
    9. ' (' → logprob: -13.375247955322266
    10. '(p' → logprob: -13.500247955322266

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.703443770878948e-06
    2. ' ,' → logprob: -12.375007629394531
    3. ',n' → logprob: -13.000007629394531
    4. ',
' → logprob: -14.625007629394531
    5. ',F' → logprob: -15.500007629394531
    6. ',p' → logprob: -15.875007629394531
    7. '_,' → logprob: -16.62500762939453
    8. '<|end|>' → logprob: -16.62500762939453
    9. ',N' → logprob: -16.75000762939453
    10. ',int' → logprob: -16.87500762939453

Token 308: ' Fin' (ID: 7772)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' → logprob: -0.028350302949547768
    2. ' Fin' → logprob: -4.028350353240967
    3. 'N' → logprob: -5.528350353240967
    4. 'fin' → logprob: -5.528350353240967
    5. 'n' → logprob: -6.778350353240967
    6. ' fin' → logprob: -7.528350353240967
    7. 'F' → logprob: -8.778349876403809
    8. ' n' → logprob: -8.778349876403809
    9. '   ' → logprob: -9.278349876403809
    10. ' N' → logprob: -10.403349876403809

Token 309: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.6240566083070007e-06
    2. '   ' → logprob: -15.375001907348633
    3. ')' → logprob: -15.500001907348633
    4. ',' → logprob: -15.500001907348633
    5. '```' → logprob: -15.500001907348633
    6. ' v' → logprob: -15.875001907348633
    7. 'V' → logprob: -16.125001907348633
    8. '
' → logprob: -16.250001907348633
    9. '[v' → logprob: -17.000001907348633
    10. ')v' → logprob: -17.000001907348633

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.598092684522271e-05
    2. ' ,' → logprob: -9.875056266784668
    3. ',n' → logprob: -12.500056266784668
    4. '   ' → logprob: -15.125056266784668
    5. ',
' → logprob: -15.250056266784668
    6. 'n' → logprob: -16.75005531311035
    7. ',N' → logprob: -16.87505531311035
    8. 'def' → logprob: -17.12505531311035
    9. '_,' → logprob: -18.00005531311035
    10. '  ' → logprob: -18.12505531311035

Token 311: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04959160089492798
    2. ' n' → logprob: -3.174591541290283
    3. 'k' → logprob: -5.174591541290283
    4. 'r' → logprob: -7.299591541290283
    5. ' k' → logprob: -8.924592018127441
    6. 'N' → logprob: -10.299592018127441
    7. '   ' → logprob: -10.674592018127441
    8. ' r' → logprob: -10.924592018127441
    9. ',' → logprob: -11.174592018127441
    10. 'm' → logprob: -12.674592018127441

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029756641015410423
    2. ' ,' → logprob: -8.125297546386719
    3. ',n' → logprob: -14.250297546386719
    4. ',
' → logprob: -14.375297546386719
    5. ',k' → logprob: -15.750297546386719
    6. '‌,' → logprob: -16.50029754638672
    7. '   ' → logprob: -16.87529754638672
    8. '_,' → logprob: -17.62529754638672
    9. ',r' → logprob: -18.87529754638672
    10. ',
' → logprob: -19.12529754638672

Token 313: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5997776389122009
    2. 'r' → logprob: -0.8497776389122009
    3. ' r' → logprob: -4.224777698516846
    4. ' k' → logprob: -4.724777698516846
    5. 'm' → logprob: -10.724777221679688
    6. ' ' → logprob: -11.724777221679688
    7. 'n' → logprob: -11.849777221679688
    8. '
' → logprob: -11.974777221679688
    9. '   ' → logprob: -12.099777221679688
    10. ')' → logprob: -13.349777221679688

Token 314: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023649554699659348
    2. ',' → logprob: -4.5236496925354
    3. ')' → logprob: -5.0236496925354
    4. '):
' → logprob: -5.2736496925354
    5. 'r' → logprob: -7.5236496925354
    6. ' ):' → logprob: -9.398649215698242
    7. 'n' → logprob: -9.773649215698242
    8. '):
' → logprob: -10.148649215698242
    9. 't' → logprob: -11.023649215698242
    10. '):

' → logprob: -11.273649215698242

Token 315: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03879563510417938
    2. ' p' → logprob: -3.2887957096099854
    3. 'b' → logprob: -7.538795471191406
    4. ')' → logprob: -9.413795471191406
    5. ' b' → logprob: -9.538795471191406
    6. 'k' → logprob: -11.038795471191406
    7. 'n' → logprob: -11.288795471191406
    8. ' ' → logprob: -11.413795471191406
    9. '):
' → logprob: -12.038795471191406
    10. '):' → logprob: -12.163795471191406

Token 316: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017648482753429562
    2. '):
' → logprob: -8.875176429748535
    3. ')' → logprob: -10.250176429748535
    4. ' ):' → logprob: -14.500176429748535
    5. '):
' → logprob: -14.625176429748535
    6. ',' → logprob: -16.12517738342285
    7. ':' → logprob: -16.25017738342285
    8. '   ' → logprob: -16.25017738342285
    9. '):

' → logprob: -18.00017738342285
    10. ')：' → logprob: -19.00017738342285

Token 317: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5047193169593811
    2. '   ' → logprob: -1.0047192573547363
    3. ' if' → logprob: -3.5047192573547363
    4. 'numer' → logprob: -10.004719734191895
    5. '	if' → logprob: -10.379719734191895
    6. 'result' → logprob: -11.504719734191895
    7. 'return' → logprob: -11.754719734191895
    8. ' numerator' → logprob: -12.004719734191895
    9. 'res' → logprob: -12.379719734191895
    10. 'C' → logprob: -12.754719734191895

Token 318: ' temp' (ID: 5484)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0016169771552085876
    2. 'return' → logprob: -7.376616954803467
    3. '   ' → logprob: -7.501616954803467
    4. ' if' → logprob: -7.751616954803467
    5. '```' → logprob: -13.126617431640625
    6. 'i' → logprob: -13.376617431640625
    7. '0' → logprob: -13.501617431640625
    8. 'result' → logprob: -14.376617431640625
    9. 'assert' → logprob: -15.126617431640625
    10. ' return' → logprob: -15.626617431640625

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1633300930261612
    2. '=' → logprob: -1.913330078125
    3. '1' → logprob: -6.538330078125
    4. '_' → logprob: -6.663330078125
    5. '   ' → logprob: -8.913330078125
    6. '_n' → logprob: -9.538330078125
    7. ' =
' → logprob: -10.163330078125
    8. 'if' → logprob: -10.913330078125
    9. '_=' → logprob: -11.038330078125
    10. '_factor' → logprob: -11.163330078125

Token 320: ' multiply' (ID: 57388)
  Prédit: 'multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiply' → logprob: -0.05554107576608658
    2. ' multiply' → logprob: -2.9305410385131836
    3. 'F' → logprob: -8.430541038513184
    4. 'multip' → logprob: -8.680541038513184
    5. 'mul' → logprob: -9.180541038513184
    6. '(F' → logprob: -9.555541038513184
    7. '(m' → logprob: -10.055541038513184
    8. ' F' → logprob: -10.805541038513184
    9. ' (' → logprob: -11.930541038513184
    10. 'm' → logprob: -12.430541038513184

Token 321: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.500001907348633
    3. 'and' → logprob: -15.625001907348633
    4. '_factor' → logprob: -17.875001907348633
    5. ' and' → logprob: -18.000001907348633
    6. '```' → logprob: -19.250001907348633
    7. '_AND' → logprob: -19.875001907348633
    8. '_a' → logprob: -19.875001907348633
    9. 'And' → logprob: -20.125001907348633
    10. '_f' → logprob: -20.125001907348633

Token 322: '_mod' (ID: 15325)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9146995327901095e-05
    2. ' mod' → logprob: -11.875019073486328
    3. '_mod' → logprob: -12.000019073486328
    4. '
' → logprob: -13.625019073486328
    5. 'F' → logprob: -14.500019073486328
    6. 'factor' → logprob: -14.625019073486328
    7. 'b' → logprob: -14.750019073486328
    8. ' ' → logprob: -14.875019073486328
    9. 'a' → logprob: -14.875019073486328
    10. 'mode' → logprob: -15.000019073486328

Token 323: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.000283265660982579
    2. '(' → logprob: -8.375283241271973
    3. '(f' → logprob: -10.625283241271973
    4. '(com' → logprob: -11.375283241271973
    5. 'F' → logprob: -12.375283241271973
    6. 'multiply' → logprob: -12.750283241271973
    7. '(m' → logprob: -13.000283241271973
    8. '(
' → logprob: -13.500283241271973
    9. 's' → logprob: -13.750283241271973
    10. '((' → logprob: -14.125283241271973

Token 324: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.2246291337069124e-05
    2. '[a' → logprob: -11.000021934509277
    3. 'n' → logprob: -12.250021934509277
    4. '[' → logprob: -14.750021934509277
    5. ' [' → logprob: -16.625022888183594
    6. 'a' → logprob: -16.875022888183594
    7. ')' → logprob: -17.500022888183594
    8. '(n' → logprob: -17.500022888183594
    9. '[
' → logprob: -17.500022888183594
    10. ')[' → logprob: -17.625022888183594

Token 325: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.009398327209055424
    2. '-a' → logprob: -5.384398460388184
    3. ' -' → logprob: -5.634398460388184
    4. 'a' → logprob: -7.634398460388184
    5. ']' → logprob: -7.759398460388184
    6. '[a' → logprob: -8.509398460388184
    7. '],
' → logprob: -10.384398460388184
    8. '-' → logprob: -10.634398460388184
    9. '   ' → logprob: -11.259398460388184
    10. '],

' → logprob: -12.884398460388184

Token 326: ' Fin' (ID: 7772)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' → logprob: -0.014523330144584179
    2. ' Fin' → logprob: -4.639523506164551
    3. 'fin' → logprob: -5.639523506164551
    4. '(F' → logprob: -8.01452350616455
    5. 'F' → logprob: -8.63952350616455
    6. ' fin' → logprob: -8.88952350616455
    7. '   ' → logprob: -9.13952350616455
    8. 'multiply' → logprob: -9.51452350616455
    9. ' multiply' → logprob: -9.76452350616455
    10. '(' → logprob: -9.76452350616455

Token 327: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9361264946837764e-07
    2. '(F' → logprob: -17.25
    3. '[v' → logprob: -17.25
    4. 'iv' → logprob: -17.75
    5. '[F' → logprob: -18.25
    6. 'inv' → logprob: -18.25
    7. '[' → logprob: -18.375
    8. 'в' → logprob: -18.5
    9. ' ' → logprob: -18.75
    10. 'f' → logprob: -19.125

Token 328: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00018268341955263168
    2. 'a' → logprob: -9.25018310546875
    3. '[n' → logprob: -9.37518310546875
    4. '   ' → logprob: -13.75018310546875
    5. '
' → logprob: -15.75018310546875
    6. '	a' → logprob: -16.25018310546875
    7. ' [' → logprob: -16.50018310546875
    8. '[' → logprob: -17.00018310546875
    9. '

' → logprob: -17.12518310546875
    10. '    
' → logprob: -17.25018310546875

Token 329: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00011653638648567721
    2. ']' → logprob: -9.125116348266602
    3. '])' → logprob: -12.000116348266602
    4. ' ],' → logprob: -14.000116348266602
    5. '),' → logprob: -15.250116348266602
    6. '],
' → logprob: -16.0001163482666
    7. '   ' → logprob: -16.6251163482666
    8. ',' → logprob: -16.6251163482666
    9. ':],' → logprob: -16.6251163482666
    10. ']%' → logprob: -17.0001163482666

Token 330: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008615635335445404
    2. ' p' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.758615493774414
    4. ')' → logprob: -14.758615493774414
    5. ' ' → logprob: -16.508615493774414
    6. ')p' → logprob: -16.508615493774414
    7. '<p' → logprob: -17.258615493774414
    8. '	p' → logprob: -17.383615493774414
    9. '  ' → logprob: -17.508615493774414
    10. '    ' → logprob: -18.758615493774414

Token 331: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00042209390085190535
    2. ')
' → logprob: -7.87542200088501
    3. ' )' → logprob: -10.375422477722168
    4. '   ' → logprob: -11.875422477722168
    5. ')

' → logprob: -13.875422477722168
    6. ',' → logprob: -13.875422477722168
    7. ')
' → logprob: -14.750422477722168
    8. ')*' → logprob: -15.250422477722168
    9. ' ' → logprob: -15.375422477722168
    10. ')\
' → logprob: -15.500422477722168

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21309128403663635
    2. 'temp' → logprob: -1.713091254234314
    3. ' temp' → logprob: -4.5880913734436035
    4. '<|end|>' → logprob: -7.3380913734436035
    5. ',' → logprob: -8.463090896606445
    6. ')' → logprob: -8.838090896606445
    7. '	temp' → logprob: -9.088090896606445
    8. ',temp' → logprob: -9.463090896606445
    9. '    
' → logprob: -10.213090896606445
    10. '<|end|>' → logprob: -10.588090896606445

Token 333: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.009554794058203697
    2. '   ' → logprob: -5.259554862976074
    3. ' temp' → logprob: -5.884554862976074
    4. 'return' → logprob: -6.509554862976074
    5. ' return' → logprob: -10.634554862976074
    6. '	temp' → logprob: -11.884554862976074
    7. 'result' → logprob: -12.259554862976074
    8. 'tmp' → logprob: -13.509554862976074
    9. ' ' → logprob: -14.009554862976074
    10. '
' → logprob: -14.384554862976074

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889056205749512
    2. ' =' → logprob: -2.578890562057495
    3. '*' → logprob: -15.328890800476074
    4. '   ' → logprob: -15.453890800476074
    5. '*=' → logprob: -16.078889846801758
    6. ' *=' → logprob: -16.328889846801758
    7. '    ' → logprob: -17.078889846801758
    8. ' ' → logprob: -17.328889846801758
    9. ' *' → logprob: -17.578889846801758
    10. '=
' → logprob: -17.703889846801758

Token 335: ' multiply' (ID: 57388)
  Prédit: 'multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiply' → logprob: -0.16023053228855133
    2. ' multiply' → logprob: -1.9102305173873901
    3. 'multip' → logprob: -12.91023063659668
    4. '.multiply' → logprob: -13.41023063659668
    5. 'm' → logprob: -14.53523063659668
    6. 'mul' → logprob: -14.78523063659668
    7. 'ultiply' → logprob: -14.78523063659668
    8. ' ' → logprob: -14.91023063659668
    9. '   ' → logprob: -15.16023063659668
    10. '(m' → logprob: -15.91023063659668

Token 336: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.1994775377388578e-05
    2. '(temp' → logprob: -11.625012397766113
    3. 'and' → logprob: -14.125012397766113
    4. '_temp' → logprob: -14.125012397766113
    5. '_' → logprob: -14.375012397766113
    6. 'temp' → logprob: -15.000012397766113
    7. ' and' → logprob: -16.000011444091797
    8. '   ' → logprob: -16.250011444091797
    9. ' ' → logprob: -16.625011444091797
    10. '```' → logprob: -17.125011444091797

Token 337: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.25481632351875305
    2. 'mod' → logprob: -1.5048162937164307
    3. 'temp' → logprob: -5.87981653213501
    4. '(temp' → logprob: -9.629816055297852
    5. 'Mod' → logprob: -11.754816055297852
    6. 'od' → logprob: -12.254816055297852
    7. 'tmp' → logprob: -12.504816055297852
    8. ' mod' → logprob: -13.254816055297852
    9. ' temp' → logprob: -14.004816055297852
    10. 'md' → logprob: -14.879816055297852

Token 338: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.0002787359117064625
    2. 'temp' → logprob: -8.37527847290039
    3. '(' → logprob: -10.00027847290039
    4. ' temp' → logprob: -13.87527847290039
    5. ' (' → logprob: -14.87527847290039
    6. '(tmp' → logprob: -14.87527847290039
    7. '[temp' → logprob: -15.37527847290039
    8. '(t' → logprob: -15.37527847290039
    9. ',temp' → logprob: -15.37527847290039
    10. '(
' → logprob: -15.50027847290039

Token 339: ',' (ID: 11)
  Prédit: '(F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.019385965541005135
    2. ',' → logprob: -4.019385814666748
    3. '(' → logprob: -6.769385814666748
    4. ',F' → logprob: -9.769386291503906
    5. ' ,' → logprob: -10.894386291503906
    6. '(
' → logprob: -12.394386291503906
    7. '(f' → logprob: -13.394386291503906
    8. ' (' → logprob: -13.769386291503906
    9. 'F' → logprob: -13.894386291503906
    10. '   ' → logprob: -14.394386291503906

Token 340: ' Fin' (ID: 7772)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' → logprob: -0.007801925763487816
    2. ' Fin' → logprob: -4.8828020095825195
    3. 'F' → logprob: -8.75780200958252
    4. '   ' → logprob: -11.38280200958252
    5. 'Finite' → logprob: -11.50780200958252
    6. ' ' → logprob: -12.25780200958252
    7. 'fin' → logprob: -13.00780200958252
    8. '  ' → logprob: -13.38280200958252
    9. ' fin' → logprob: -13.50780200958252
    10. '    ' → logprob: -13.63280200958252

Token 341: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.704273118884885e-07
    2. '[v' → logprob: -15.375000953674316
    3. '
' → logprob: -16.0
    4. '[' → logprob: -16.25
    5. '(F' → logprob: -17.375
    6. ' v' → logprob: -17.5
    7. 'inv' → logprob: -18.0
    8. '   ' → logprob: -18.125
    9. '

' → logprob: -18.25
    10. 'V' → logprob: -18.25

Token 342: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.500001907348633
    3. 'n' → logprob: -14.500001907348633
    4. '[
' → logprob: -14.625001907348633
    5. ' [' → logprob: -16.000001907348633
    6. '```' → logprob: -17.000001907348633
    7. '
' → logprob: -17.125001907348633
    8. '(n' → logprob: -17.125001907348633
    9. '

' → logprob: -17.500001907348633
    10. '   ' → logprob: -17.500001907348633

Token 343: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34123292565345764
    2. ' -' → logprob: -1.3412328958511353
    3. '-a' → logprob: -3.591233015060425
    4. 'a' → logprob: -11.216233253479004
    5. ' ' → logprob: -13.466233253479004
    6. '-а' → logprob: -13.466233253479004
    7. '   ' → logprob: -13.966233253479004
    8. '-
' → logprob: -14.216233253479004
    9. '-ai' → logprob: -14.591233253479004
    10. '[a' → logprob: -15.216233253479004

Token 344: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -8.500203132629395
    3. '	a' → logprob: -17.62520408630371
    4. '   ' → logprob: -19.12520408630371
    5. ' ' → logprob: -21.00020408630371
    6. '[a' → logprob: -21.37520408630371
    7. '#a' → logprob: -21.62520408630371
    8. ''a' → logprob: -21.87520408630371
    9. '_a' → logprob: -22.00020408630371
    10. '  ' → logprob: -22.12520408630371

Token 345: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00029875844484195113
    2. ']' → logprob: -8.125298500061035
    3. ' ],' → logprob: -12.875298500061035
    4. '],
' → logprob: -15.625298500061035
    5. ' ' → logprob: -17.00029945373535
    6. ']
' → logprob: -17.62529945373535
    7. ''],' → logprob: -18.25029945373535
    8. '),' → logprob: -18.75029945373535
    9. '])' → logprob: -18.87529945373535
    10. '   ' → logprob: -19.00029945373535

Token 346: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.31326231360435486
    2. ' p' → logprob: -1.3132623434066772
    3. ' ' → logprob: -15.438261985778809
    4. '   ' → logprob: -16.313262939453125
    5. ' ' → logprob: -16.938262939453125
    6. '
' → logprob: -17.188262939453125
    7. ')' → logprob: -17.313262939453125
    8. '<p' → logprob: -17.313262939453125
    9. '	p' → logprob: -17.563262939453125
    10. '  ' → logprob: -18.563262939453125

Token 347: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016858013346791267
    2. ')
' → logprob: -4.141858100891113
    3. '   ' → logprob: -7.141858100891113
    4. ')return' → logprob: -11.016858100891113
    5. ',' → logprob: -11.641858100891113
    6. 'return' → logprob: -12.891858100891113
    7. ')
' → logprob: -13.641858100891113
    8. ' )' → logprob: -14.016858100891113
    9. ' ' → logprob: -14.391858100891113
    10. ' return' → logprob: -14.516858100891113

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006876522093079984
    2. 'return' → logprob: -7.375687599182129
    3. ' return' → logprob: -10.500687599182129
    4. '	return' → logprob: -11.125687599182129
    5. '    
' → logprob: -11.250687599182129
    6. '
' → logprob: -12.625687599182129
    7. ')' → logprob: -13.625687599182129
    8. ':return' → logprob: -15.000687599182129
    9. '       ' → logprob: -15.875687599182129
    10. ',' → logprob: -16.250688552856445

Token 349: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009047403000295162
    2. '   ' → logprob: -4.759047508239746
    3. ' return' → logprob: -7.759047508239746
    4. '
' → logprob: -12.634047508239746
    5. '	return' → logprob: -13.384047508239746
    6. '    
' → logprob: -14.009047508239746
    7. ':return' → logprob: -15.509047508239746
    8. '  ' → logprob: -16.63404655456543
    9. ' ' → logprob: -16.88404655456543
    10. 'eturn' → logprob: -17.38404655456543

Token 350: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.575939953327179
    2. 'temp' → logprob: -0.825939953327179
    3. '(temp' → logprob: -15.325940132141113
    4. 'tem' → logprob: -16.825939178466797
    5. '	temp' → logprob: -17.200939178466797
    6. 'tmp' → logprob: -17.200939178466797
    7. '[temp' → logprob: -17.325939178466797
    8. ' tmp' → logprob: -18.450939178466797
    9. 't' → logprob: -18.450939178466797
    10. ' ' → logprob: -19.700939178466797

Token 351: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03416898846626282
    2. '#' → logprob: -3.7841689586639404
    3. '<|end|>' → logprob: -4.6591691970825195
    4. '```' → logprob: -7.2841691970825195
    5. 'n' → logprob: -8.53416919708252
    6. '[' → logprob: -8.90916919708252
    7. ')' → logprob: -9.65916919708252
    8. '\' → logprob: -9.90916919708252
    9. '
' → logprob: -10.28416919708252
    10. '(' → logprob: -10.40916919708252

Token 353: ' read' (ID: 1729)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8419110774993896
    2. 'main' → logprob: -1.3419110774993896
    3. 'comb' → logprob: -2.5919110774993896
    4. ' main' → logprob: -2.7169110774993896
    5. ' n' → logprob: -3.0919110774993896
    6. 'bin' → logprob: -3.0919110774993896
    7. 'mod' → logprob: -4.341911315917969
    8. ' combination' → logprob: -4.966911315917969
    9. 'factor' → logprob: -4.966911315917969
    10. ' bin' → logprob: -5.216911315917969

Token 354: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00865286123007536
    2. '_' → logprob: -5.633652687072754
    3. '_input' → logprob: -6.633652687072754
    4. '_line' → logprob: -7.008652687072754
    5. '():' → logprob: -7.008652687072754
    6. '(' → logprob: -7.383652687072754
    7. '()>' → logprob: -7.758652687072754
    8. ' ()' → logprob: -8.758652687072754
    9. 'line' → logprob: -9.133652687072754
    10. '():
' → logprob: -9.258652687072754

Token 355: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00010103991371579468
    2. '():
' → logprob: -9.875101089477539
    3. ' ():' → logprob: -10.125101089477539
    4. '()' → logprob: -11.625101089477539
    5. '(' → logprob: -15.125101089477539
    6. '():

' → logprob: -16.75010108947754
    7. ' ()' → logprob: -17.25010108947754
    8. '_' → logprob: -17.37510108947754
    9. '()>' → logprob: -17.62510108947754
    10. '():
' → logprob: -17.62510108947754

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00028624574770219624
    2. ' return' → logprob: -8.500286102294922
    3. ' n' → logprob: -10.250286102294922
    4. 'n' → logprob: -10.375286102294922
    5. 'import' → logprob: -12.000286102294922
    6. 'return' → logprob: -12.625286102294922
    7. ' try' → logprob: -13.125286102294922
    8. ' import' → logprob: -13.375286102294922
    9. '   ' → logprob: -13.500286102294922
    10. 'try' → logprob: -14.875286102294922

Token 357: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.111573226749897
    2. 'n' → logprob: -2.6115732192993164
    3. ' return' → logprob: -3.7365732192993164
    4. 'import' → logprob: -5.611573219299316
    5. 's' → logprob: -5.861573219299316
    6. ' n' → logprob: -6.611573219299316
    7. '   ' → logprob: -8.361573219299316
    8. 'try' → logprob: -10.111573219299316
    9. ' import' → logprob: -10.111573219299316
    10. 't' → logprob: -10.361573219299316

Token 358: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6920557022094727
    2. 'list' → logprob: -1.1920557022094727
    3. 'int' → logprob: -2.4420557022094727
    4. ' map' → logprob: -3.0670557022094727
    5. ' list' → logprob: -3.4420557022094727
    6. 'input' → logprob: -4.067055702209473
    7. 'tuple' → logprob: -4.692055702209473
    8. ' tuple' → logprob: -6.192055702209473
    9. ' int' → logprob: -6.692055702209473
    10. ' input' → logprob: -7.442055702209473

Token 359: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00016778295685071498
    2. '(' → logprob: -8.750167846679688
    3. 'int' → logprob: -11.625167846679688
    4. '<int' → logprob: -15.000167846679688
    5. '(
' → logprob: -16.875167846679688
    6. ' int' → logprob: -17.625167846679688
    7. '(input' → logprob: -17.625167846679688
    8. '=int' → logprob: -18.000167846679688
    9. 'list' → logprob: -18.125167846679688
    10. ',int' → logprob: -18.500167846679688

Token 360: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.201527938246727
    2. 'input' → logprob: -2.3265278339385986
    3. '(input' → logprob: -3.0765278339385986
    4. ',' → logprob: -3.3265278339385986
    5. ')' → logprob: -6.201528072357178
    6. ' input' → logprob: -7.951528072357178
    7. '(),' → logprob: -8.57652759552002
    8. '(' → logprob: -8.95152759552002
    9. '())' → logprob: -10.45152759552002
    10. '   ' → logprob: -10.57652759552002

Token 361: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019300628919154406
    2. ' input' → logprob: -6.251930236816406
    3. '   ' → logprob: -14.751930236816406
    4. ')' → logprob: -14.751930236816406
    5. 'open' → logprob: -15.126930236816406
    6. ' ' → logprob: -16.001930236816406
    7. ',input' → logprob: -16.251930236816406
    8. '	input' → logprob: -16.751930236816406
    9. '=input' → logprob: -17.376930236816406
    10. '(input' → logprob: -17.626930236816406

Token 362: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003503626212477684
    2. '()' → logprob: -8.000349998474121
    3. '())' → logprob: -11.375349998474121
    4. '(' → logprob: -13.500349998474121
    5. ' ().' → logprob: -13.750349998474121
    6. ')' → logprob: -14.875349998474121
    7. '()
' → logprob: -15.125349998474121
    8. '(()' → logprob: -16.000350952148438
    9. '().'' → logprob: -16.875350952148438
    10. ' ()' → logprob: -17.000350952148438

Token 363: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019412499386817217
    2. 'strip' → logprob: -6.251941204071045
    3. 'rstrip' → logprob: -11.626941680908203
    4. 'read' → logprob: -13.876941680908203
    5. 'spl' → logprob: -13.876941680908203
    6. ' split' → logprob: -14.251941680908203
    7. 's' → logprob: -14.751941680908203
    8. '(split' → logprob: -15.251941680908203
    9. '().' → logprob: -15.376941680908203
    10. ')' → logprob: -15.626941680908203

Token 364: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002082335762679577
    2. ')' → logprob: -6.752082347869873
    3. '()' → logprob: -7.002082347869873
    4. ' ())' → logprob: -14.127081871032715
    5. '())
' → logprob: -14.877081871032715
    6. '();)' → logprob: -15.377081871032715
    7. '(' → logprob: -15.877081871032715
    8. '()]' → logprob: -16.12708282470703
    9. '()))' → logprob: -16.50208282470703
    10. '());' → logprob: -16.87708282470703

Token 365: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003912311512976885
    2. 'n' → logprob: -8.125391006469727
    3. '<|end|>' → logprob: -9.625391006469727
    4. 'p' → logprob: -11.500391006469727
    5. '\' → logprob: -12.375391006469727
    6. '```' → logprob: -13.000391006469727
    7. '#' → logprob: -13.250391006469727
    8. 'ndef' → logprob: -13.250391006469727
    9. 'd' → logprob: -13.500391006469727
    10. '
' → logprob: -13.625391006469727

Token 366: ' get' (ID: 717)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014269632287323475
    2. ' main' → logprob: -4.264269828796387
    3. 'solve' → logprob: -9.264269828796387
    4. 'process' → logprob: -12.264269828796387
    5. 'def' → logprob: -12.514269828796387
    6. ' solve' → logprob: -13.389269828796387
    7. 'calculate' → logprob: -15.139269828796387
    8. 'read' → logprob: -15.764269828796387
    9. '	main' → logprob: -15.764269828796387
    10. 'resolve' → logprob: -16.13926887512207

Token 367: '_factor' (ID: 43757)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.1774508953094482
    2. '_max' → logprob: -1.5524508953094482
    3. '_factor' → logprob: -1.5524508953094482
    4. '_comb' → logprob: -2.5524508953094482
    5. '_N' → logprob: -3.1774508953094482
    6. '_f' → logprob: -3.9274508953094482
    7. '_sum' → logprob: -4.052451133728027
    8. '_mod' → logprob: -4.177451133728027
    9. '_n' → logprob: -4.177451133728027
    10. '_com' → logprob: -5.177451133728027

Token 368: 'ials' (ID: 16596)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.06379874050617218
    2. 'ials' → logprob: -3.563798666000366
    3. 'ialize' → logprob: -3.688798666000366
    4. 'orial' → logprob: -5.188798904418945
    5. '```' → logprob: -6.188798904418945
    6. '_' → logprob: -8.813798904418945
    7. 'def' → logprob: -8.938798904418945
    8. 'or' → logprob: -9.438798904418945
    9. '_size' → logprob: -9.688798904418945
    10. 'ialist' → logprob: -9.688798904418945

Token 369: '(N' (ID: 10564)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03418661281466484
    2. '_and' → logprob: -3.909186601638794
    3. '(F' → logprob: -5.284186840057373
    4. '(p' → logprob: -5.659186840057373
    5. '(N' → logprob: -6.159186840057373
    6. '(' → logprob: -7.284186840057373
    7. '(max' → logprob: -7.659186840057373
    8. 'and' → logprob: -8.034186363220215
    9. 'def' → logprob: -8.534186363220215
    10. '(f' → logprob: -8.534186363220215

Token 370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006268616300076246
    2. '):' → logprob: -5.631268501281738
    3. ',p' → logprob: -6.506268501281738
    4. '):
' → logprob: -7.131268501281738
    5. 'p' → logprob: -8.381268501281738
    6. ' ,' → logprob: -9.756268501281738
    7. '   ' → logprob: -10.631268501281738
    8. '(p' → logprob: -11.006268501281738
    9. ')' → logprob: -11.756268501281738
    10. ',n' → logprob: -12.006268501281738

Token 371: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009270645678043365
    2. ' p' → logprob: -7.000926971435547
    3. 'P' → logprob: -11.625926971435547
    4. 'MOD' → logprob: -13.000926971435547
    5. 'mod' → logprob: -13.250926971435547
    6. '   ' → logprob: -13.750926971435547
    7. 'M' → logprob: -14.125926971435547
    8. ' ' → logprob: -15.375926971435547
    9. 'N' → logprob: -16.000926971435547
    10. ')' → logprob: -16.000926971435547

Token 372: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011056192219257355
    2. '):
' → logprob: -4.511056423187256
    3. '):
' → logprob: -12.636055946350098
    4. ')' → logprob: -12.761055946350098
    5. ' ):' → logprob: -13.386055946350098
    6. '   ' → logprob: -14.261055946350098
    7. '):

' → logprob: -16.886056900024414
    8. ',' → logprob: -17.636056900024414
    9. ':' → logprob: -17.886056900024414
    10. ' ):
' → logprob: -18.136056900024414

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035244061145931482
    2. 'return' → logprob: -6.128524303436279
    3. ' return' → logprob: -6.753524303436279
    4. 'F' → logprob: -8.753524780273438
    5. ' ' → logprob: -12.753524780273438
    6. '  ' → logprob: -12.753524780273438
    7. ' F' → logprob: -13.253524780273438
    8. 'f' → logprob: -13.753524780273438
    9. '
' → logprob: -13.753524780273438
    10. '```' → logprob: -13.753524780273438

Token 374: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.34576788544654846
    2. 'F' → logprob: -1.595767855644226
    3. '   ' → logprob: -2.5957679748535156
    4. ' return' → logprob: -4.220767974853516
    5. ' F' → logprob: -8.345767974853516
    6. ' ' → logprob: -10.470767974853516
    7. '  ' → logprob: -11.845767974853516
    8. '    
' → logprob: -11.970767974853516
    9. '	return' → logprob: -12.720767974853516
    10. 'def' → logprob: -12.845767974853516

Token 375: ' fib' (ID: 18795)
  Prédit: 'fib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fib' → logprob: -0.08129998296499252
    2. ' fib' → logprob: -2.5813000202178955
    3. 'create' → logprob: -6.456299781799316
    4. ' create' → logprob: -8.081299781799316
    5. '   ' → logprob: -8.956299781799316
    6. 'f' → logprob: -8.956299781799316
    7. 'compute' → logprob: -9.706299781799316
    8. ' fibonacci' → logprob: -10.393799781799316
    9. 'initialize' → logprob: -10.643799781799316
    10. ' ' → logprob: -10.768799781799316

Token 376: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.000498701527249068
    2. '(' → logprob: -7.6254987716674805
    3. ' (' → logprob: -12.00049877166748
    4. '(n' → logprob: -12.75049877166748
    5. '((' → logprob: -14.00049877166748
    6. '(
' → logprob: -15.00049877166748
    7. '(int' → logprob: -16.125497817993164
    8. ' ' → logprob: -16.250497817993164
    9. '   ' → logprob: -16.375497817993164
    10. 'N' → logprob: -16.375497817993164

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022153646568767726
    2. ',p' → logprob: -9.000221252441406
    3. ' ,' → logprob: -9.250221252441406
    4. 'p' → logprob: -14.250221252441406
    5. ',
' → logprob: -14.500221252441406
    6. '   ' → logprob: -15.125221252441406
    7. '-' → logprob: -15.375221252441406
    8. ')' → logprob: -16.250221252441406
    9. '+' → logprob: -17.000221252441406
    10. ' ' → logprob: -17.125221252441406

Token 378: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0021852378267794847
    2. ' p' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.127185821533203
    4. ' ' → logprob: -16.877185821533203
    5. '
' → logprob: -17.127185821533203
    6. ')' → logprob: -18.877185821533203
    7. '    ' → logprob: -19.002185821533203
    8. '  ' → logprob: -19.627185821533203
    9. '<p' → logprob: -19.752185821533203
    10. '	p' → logprob: -20.127185821533203

Token 379: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -14.375000953674316
    4. '),' → logprob: -17.625001907348633
    5. ')

' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.500001907348633
    7. ')#' → logprob: -18.625001907348633
    8. ' ' → logprob: -19.000001907348633
    9. ')n' → logprob: -19.125001907348633
    10. ')p' → logprob: -19.500001907348633

Token 380: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: ' get' (ID: 717)
  Prédit: ' fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fin' → logprob: -1.2767577171325684
    2. ' get' → logprob: -1.4017577171325684
    3. 'get' → logprob: -1.7767577171325684
    4. ' main' → logprob: -2.2767577171325684
    5. 'fin' → logprob: -2.2767577171325684
    6. 'main' → logprob: -3.1517577171325684
    7. 'def' → logprob: -3.5267577171325684
    8. 'factor' → logprob: -4.776757717132568
    9. ' def' → logprob: -5.526757717132568
    10. ' factorial' → logprob: -5.776757717132568

Token 382: '_inverse' (ID: 188797)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.1850617378950119
    2. '_inverse' → logprob: -1.9350616931915283
    3. '_f' → logprob: -4.310061931610107
    4. '_inv' → logprob: -5.810061931610107
    5. 'inverse' → logprob: -5.935061931610107
    6. '_F' → logprob: -6.810061931610107
    7. 'factor' → logprob: -6.810061931610107
    8. '_fin' → logprob: -7.310061931610107
    9. 'def' → logprob: -7.685061931610107
    10. '_comb' → logprob: -7.810061931610107

Token 383: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.1334252506494522
    2. 's' → logprob: -2.258425235748291
    3. '(F' → logprob: -4.383425235748291
    4. '_' → logprob: -5.258425235748291
    5. 'factor' → logprob: -6.633425235748291
    6. '```' → logprob: -7.508425235748291
    7. '_(' → logprob: -8.50842571258545
    8. '_f' → logprob: -8.63342571258545
    9. '(' → logprob: -9.13342571258545
    10. '_fact' → logprob: -9.63342571258545

Token 384: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.007851607166230679
    2. 'als' → logprob: -5.882851600646973
    3. 'ial' → logprob: -6.257851600646973
    4. '(F' → logprob: -6.382851600646973
    5. 's' → logprob: -6.632851600646973
    6. 'al' → logprob: -9.507851600646973
    7. 'icals' → logprob: -10.382851600646973
    8. 'def' → logprob: -13.257851600646973
    9. '_' → logprob: -14.257851600646973
    10. 'ails' → logprob: -14.507851600646973

Token 385: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.007648630067706108
    2. '(N' → logprob: -4.882648468017578
    3. ' (' → logprob: -10.757648468017578
    4. '(' → logprob: -11.382648468017578
    5. 'def' → logprob: -12.132648468017578
    6. 'N' → logprob: -14.007648468017578
    7. '(p' → logprob: -14.382648468017578
    8. '(
' → logprob: -14.382648468017578
    9. '(n' → logprob: -14.757648468017578
    10. '```' → logprob: -15.132648468017578

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. ' ,' → logprob: -12.375004768371582
    3. ',p' → logprob: -14.750004768371582
    4. ',F' → logprob: -14.875004768371582
    5. ',
' → logprob: -16.7500057220459
    6. 'p' → logprob: -18.0000057220459
    7. 'F' → logprob: -18.6250057220459
    8. '   ' → logprob: -19.7500057220459
    9. '‌,' → logprob: -20.2500057220459
    10. ')' → logprob: -20.6250057220459

Token 387: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.029757777228951454
    2. ' p' → logprob: -3.5297577381134033
    3. '<|end|>' → logprob: -12.779757499694824
    4. ' ' → logprob: -13.029757499694824
    5. ')' → logprob: -13.904757499694824
    6. '   ' → logprob: -14.904757499694824
    7. '	p' → logprob: -16.15475845336914
    8. ')p' → logprob: -16.40475845336914
    9. ' 
' → logprob: -16.52975845336914
    10. ',' → logprob: -16.65475845336914

Token 388: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16025997698307037
    2. '):
' → logprob: -1.9102599620819092
    3. ')' → logprob: -10.410260200500488
    4. '):
' → logprob: -12.410260200500488
    5. '):

' → logprob: -14.035260200500488
    6. '   ' → logprob: -14.660260200500488
    7. ' ):' → logprob: -15.160260200500488
    8. ' ):
' → logprob: -17.285259246826172
    9. ')
' → logprob: -17.785259246826172
    10. ':' → logprob: -17.910259246826172

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003361774142831564
    2. 'return' → logprob: -8.250336647033691
    3. ' return' → logprob: -9.500336647033691
    4. '	return' → logprob: -17.625335693359375
    5. '  ' → logprob: -18.875335693359375
    6. ' ' → logprob: -19.125335693359375
    7. '       ' → logprob: -19.750335693359375
    8. 'def' → logprob: -20.500335693359375
    9. '```' → logprob: -20.500335693359375
    10. '   ' → logprob: -21.000335693359375

Token 390: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0036071976646780968
    2. '   ' → logprob: -5.753607273101807
    3. ' return' → logprob: -7.753607273101807
    4. '	return' → logprob: -16.37860679626465
    5. '
' → logprob: -17.00360679626465
    6. ' ' → logprob: -17.12860679626465
    7. '  ' → logprob: -17.25360679626465
    8. '```' → logprob: -18.62860679626465
    9. 'eturn' → logprob: -19.00360679626465
    10. 'ret' → logprob: -19.37860679626465

Token 391: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.07002446800470352
    2. ' fin' → logprob: -2.6950244903564453
    3. 'f' → logprob: -10.070024490356445
    4. 'fib' → logprob: -10.820024490356445
    5. 'fi' → logprob: -12.320024490356445
    6. 'fun' → logprob: -12.695024490356445
    7. 'fim' → logprob: -12.695024490356445
    8. 'fn' → logprob: -12.695024490356445
    9. '   ' → logprob: -13.070024490356445
    10. ' fib' → logprob: -13.695024490356445

Token 392: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.010860227048397064
    2. 'iv' → logprob: -4.760860443115234
    3. '(F' → logprob: -6.385860443115234
    4. 'inv' → logprob: -7.510860443115234
    5. 'ev' → logprob: -12.760860443115234
    6. 'ov' → logprob: -13.510860443115234
    7. 'vi' → logprob: -13.885860443115234
    8. '
' → logprob: -14.135860443115234
    9. 'av' → logprob: -14.260860443115234
    10. 'in' → logprob: -14.260860443115234

Token 393: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.000204851632588543
    2. '(' → logprob: -8.500205039978027
    3. ' (' → logprob: -14.250205039978027
    4. '(
' → logprob: -14.875205039978027
    5. '<|end|>' → logprob: -15.375205039978027
    6. '(f' → logprob: -17.37520408630371
    7. '((' → logprob: -18.00020408630371
    8. '```' → logprob: -18.25020408630371
    9. '
' → logprob: -18.37520408630371
    10. '(Function' → logprob: -18.50020408630371

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ')' → logprob: -12.875003814697266
    3. ' ,' → logprob: -13.750003814697266
    4. ',p' → logprob: -17.000003814697266
    5. ',
' → logprob: -18.125003814697266
    6. '   ' → logprob: -18.750003814697266
    7. ',F' → logprob: -19.375003814697266
    8. 'p' → logprob: -20.375003814697266
    9. ' ' → logprob: -20.875003814697266
    10. '‌,' → logprob: -21.500003814697266

Token 395: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00861456897109747
    2. ' p' → logprob: -4.758614540100098
    3. ')' → logprob: -17.008615493774414
    4. ')p' → logprob: -18.508615493774414
    5. '
' → logprob: -18.758615493774414
    6. '   ' → logprob: -19.133615493774414
    7. ' ' → logprob: -19.508615493774414
    8. '<p' → logprob: -19.633615493774414
    9. '<|end|>' → logprob: -19.883615493774414
    10. ' ' → logprob: -20.008615493774414

Token 396: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -13.750000953674316
    3. ' )' → logprob: -16.875001907348633
    4. ')

' → logprob: -18.000001907348633
    5. '),' → logprob: -19.500001907348633
    6. ')
' → logprob: -20.125001907348633
    7. '   ' → logprob: -20.250001907348633
    8. '}' → logprob: -20.625001907348633
    9. ')p' → logprob: -20.625001907348633
    10. '))' → logprob: -20.875001907348633

Token 397: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: ' should' (ID: 1757)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.15152858197689056
    2. ' main' → logprob: -2.1515285968780518
    3. 'calculate' → logprob: -4.526528358459473
    4. 'compute' → logprob: -5.526528358459473
    5. 'def' → logprob: -6.026528358459473
    6. 'comb' → logprob: -6.151528358459473
    7. 'mod' → logprob: -6.776528358459473
    8. 'factor' → logprob: -7.151528358459473
    9. 'bin' → logprob: -7.276528358459473
    10. 'n' → logprob: -7.651528358459473

Token 399: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.8510966897010803
    2. '_compute' → logprob: -1.1010966300964355
    3. '_use' → logprob: -1.9760966300964355
    4. '_cal' → logprob: -3.2260966300964355
    5. '_apply' → logprob: -4.6010966300964355
    6. '_include' → logprob: -4.6010966300964355
    7. '_pro' → logprob: -4.8510966300964355
    8. '_generate' → logprob: -4.9760966300964355
    9. '_choose' → logprob: -5.4760966300964355
    10. '_process' → logprob: -5.6010966300964355

Token 400: '_due' (ID: 197294)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09391681849956512
    2. '(' → logprob: -2.843916893005371
    3. '(n' → logprob: -3.843916893005371
    4. '()' → logprob: -5.343916893005371
    5. '(N' → logprob: -6.218916893005371
    6. ' ():' → logprob: -7.093916893005371
    7. '(line' → logprob: -7.343916893005371
    8. '(input' → logprob: -8.093916893005371
    9. '(name' → logprob: -8.843916893005371
    10. ' (' → logprob: -8.968916893005371

Token 401: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.39250683784484863
    2. 'to' → logprob: -1.6425068378448486
    3. 'f' → logprob: -2.5175068378448486
    4. 'def' → logprob: -3.5175068378448486
    5. ' to' → logprob: -4.5175065994262695
    6. 'e' → logprob: -7.0175065994262695
    7. '_' → logprob: -7.2675065994262695
    8. 'p' → logprob: -7.3925065994262695
    9. 'To' → logprob: -7.3925065994262695
    10. '?' → logprob: -7.5175065994262695

Token 402: '_A' (ID: 6829)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22394928336143494
    2. '_input' → logprob: -3.0989491939544678
    3. 'T' → logprob: -3.3489491939544678
    4. 'EOF' → logprob: -4.098949432373047
    5. 'n' → logprob: -4.473949432373047
    6. 'overflow' → logprob: -4.848949432373047
    7. 'index' → logprob: -5.098949432373047
    8. 'user' → logprob: -5.098949432373047
    9. '_value' → logprob: -5.098949432373047
    10. 'True' → logprob: -5.348949432373047

Token 403: '(_' (ID: 4963)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.640656590461731
    2. '(A' → logprob: -0.890656590461731
    3. '(n' → logprob: -3.1406564712524414
    4. '(' → logprob: -4.515656471252441
    5. '(N' → logprob: -6.515656471252441
    6. '(_' → logprob: -6.515656471252441
    7. '_not' → logprob: -6.765656471252441
    8. ' (' → logprob: -7.640656471252441
    9. '_less' → logprob: -7.640656471252441
    10. '(i' → logprob: -8.140656471252441

Token 404: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7958566546440125
    2. 'a' → logprob: -1.0458567142486572
    3. '):' → logprob: -1.6708567142486572
    4. '):
' → logprob: -6.170856475830078
    5. ',' → logprob: -6.295856475830078
    6. ')>' → logprob: -6.420856475830078
    7. ')' → logprob: -6.670856475830078
    8. 'value' → logprob: -7.420856475830078
    9. 'n' → logprob: -7.920856475830078
    10. 'input' → logprob: -8.295856475830078

Token 405: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00660749152302742
    2. '):
' → logprob: -5.131607532501221
    3. ',' → logprob: -7.631607532501221
    4. ')' → logprob: -8.756607055664062
    5. ' ):' → logprob: -11.256607055664062
    6. ':' → logprob: -12.131607055664062
    7. '   ' → logprob: -13.381607055664062
    8. '):
' → logprob: -13.381607055664062
    9. 'A' → logprob: -13.381607055664062
    10. 'a' → logprob: -13.631607055664062

Token 406: ' K' (ID: 658)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8283010721206665
    2. '_B' → logprob: -0.8283010721206665
    3. 'B' → logprob: -2.828300952911377
    4. '_p' → logprob: -4.078300952911377
    5. ' p' → logprob: -4.453300952911377
    6. '_A' → logprob: -4.578300952911377
    7. ' _' → logprob: -4.703300952911377
    8. ' B' → logprob: -5.703300952911377
    9. '_N' → logprob: -5.828300952911377
    10. 'n' → logprob: -5.953300952911377

Token 407: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008173512294888496
    2. '):' → logprob: -4.88317346572876
    3. '):
' → logprob: -8.133173942565918
    4. ' ,' → logprob: -8.508173942565918
    5. ',
' → logprob: -10.633173942565918
    6. ')' → logprob: -11.508173942565918
    7. '_,' → logprob: -11.633173942565918
    8. '   ' → logprob: -12.008173942565918
    9. ',a' → logprob: -12.383173942565918
    10. ',p' → logprob: -12.883173942565918

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022863032296299934
    2. ' A' → logprob: -4.772862911224365
    3. 'A' → logprob: -5.397862911224365
    4. ' K' → logprob: -5.522862911224365
    5. ' return' → logprob: -6.647862911224365
    6. ':' → logprob: -6.897862911224365
    7. ' _' → logprob: -7.522862911224365
    8. '    ' → logprob: -8.022863388061523
    9. '  ' → logprob: -8.022863388061523
    10. ' ' → logprob: -8.272863388061523

Token 409: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -9.090760431718081e-05
    2. 'if' → logprob: -9.750090599060059
    3. ' return' → logprob: -10.500090599060059
    4. '   ' → logprob: -12.375090599060059
    5. '
' → logprob: -14.500090599060059
    6. 'def' → logprob: -16.250091552734375
    7. 'for' → logprob: -17.125091552734375
    8. ' ' → logprob: -17.250091552734375
    9. '#' → logprob: -17.750091552734375
    10. '	return' → logprob: -17.750091552734375

Token 410: ' _' (ID: 1175)
  Prédit: '_K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.760814368724823
    2. '_' → logprob: -1.3858144283294678
    3. ' _' → logprob: -2.0108144283294678
    4. ' K' → logprob: -2.5108144283294678
    5. '_A' → logprob: -3.1358144283294678
    6. 'K' → logprob: -3.8858144283294678
    7. '(_' → logprob: -6.885814189910889
    8. ' A' → logprob: -7.635814189910889
    9. ' True' → logprob: -7.885814189910889
    10. '_k' → logprob: -8.010814666748047

Token 411: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00019936825265176594
    2. '_A' → logprob: -8.750199317932129
    3. ' A' → logprob: -11.125199317932129
    4. 'K' → logprob: -11.625199317932129
    5. '.A' → logprob: -11.875199317932129
    6. 'B' → logprob: -12.625199317932129
    7. '[' → logprob: -13.875199317932129
    8. '>' → logprob: -14.125199317932129
    9. 'a' → logprob: -14.375199317932129
    10. ''A' → logprob: -14.500199317932129

Token 412: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.41073524951934814
    2. ' <' → logprob: -2.0357351303100586
    3. '<=' → logprob: -2.4107351303100586
    4. ' <=' → logprob: -2.9107351303100586
    5. '>' → logprob: -3.7857351303100586
    6. '>=' → logprob: -4.660735130310059
    7. '[' → logprob: -5.035735130310059
    8. ' >=' → logprob: -5.160735130310059
    9. ' >' → logprob: -5.535735130310059
    10. '!=' → logprob: -5.660735130310059

Token 413: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.02937794290482998
    2. '0' → logprob: -4.2793779373168945
    3. ' K' → logprob: -4.2793779373168945
    4. '2' → logprob: -7.9043779373168945
    5. '1' → logprob: -7.9043779373168945
    6. ' ' → logprob: -7.9043779373168945
    7. '=' → logprob: -10.404377937316895
    8. '(' → logprob: -10.529377937316895
    9. '7' → logprob: -11.529377937316895
    10. '5' → logprob: -11.654377937316895

Token 414: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04873043671250343
    2. '<|end|>' → logprob: -3.0487303733825684
    3. '<|end|>' → logprob: -9.548730850219727
    4. '```' → logprob: -10.298730850219727
    5. '
' → logprob: -11.423730850219727
    6. '#' → logprob: -11.548730850219727
    7. ' def' → logprob: -12.298730850219727
    8. '

' → logprob: -13.048730850219727
    9. ')' → logprob: -13.173730850219727
    10. 'de' → logprob: -13.173730850219727

Token 415: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: ' calc' (ID: 25691)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.6850758790969849
    2. 'main' → logprob: -1.0600758790969849
    3. ' main' → logprob: -2.3100757598876953
    4. ' should' → logprob: -3.9350757598876953
    5. 'def' → logprob: -4.060075759887695
    6. 'process' → logprob: -5.185075759887695
    7. 'get' → logprob: -5.935075759887695
    8. 'solve' → logprob: -6.810075759887695
    9. ' process' → logprob: -7.060075759887695
    10. 'read' → logprob: -7.310075759887695

Token 417: '_A' (ID: 6829)
  Prédit: '_comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_comb' → logprob: -0.39397546648979187
    2. '_factor' → logprob: -2.0189754962921143
    3. '_com' → logprob: -2.0189754962921143
    4. '_sum' → logprob: -3.7689754962921143
    5. '_bin' → logprob: -4.268975257873535
    6. '_combo' → logprob: -5.143975257873535
    7. '_subset' → logprob: -6.518975257873535
    8. '(N' → logprob: -6.893975257873535
    9. '_sub' → logprob: -7.143975257873535
    10. '(A' → logprob: -7.143975257873535

Token 418: '_times' (ID: 53425)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.7402381300926208
    2. '(K' → logprob: -1.2402381896972656
    3. '(N' → logprob: -2.7402381896972656
    4. '(A' → logprob: -2.8652381896972656
    5. '(' → logprob: -2.8652381896972656
    6. '(B' → logprob: -3.8652381896972656
    7. '(n' → logprob: -4.365238189697266
    8. '(a' → logprob: -5.115238189697266
    9. 'def' → logprob: -5.615238189697266
    10. '(k' → logprob: -6.490238189697266

Token 419: '_a' (ID: 10852)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.9314594268798828
    2. '(A' → logprob: -1.5564594268798828
    3. '_K' → logprob: -2.306459426879883
    4. '(_' → logprob: -2.306459426879883
    5. 'K' → logprob: -3.056459426879883
    6. '(' → logprob: -3.556459426879883
    7. '(B' → logprob: -3.806459426879883
    8. '_k' → logprob: -4.306459426879883
    9. '_times' → logprob: -4.681459426879883
    10. '_A' → logprob: -4.681459426879883

Token 420: '(A' (ID: 10706)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -1.024752140045166
    2. '(a' → logprob: -1.274752140045166
    3. '(' → logprob: -1.524752140045166
    4. '(A' → logprob: -3.024752140045166
    5. '(K' → logprob: -3.774752140045166
    6. '(n' → logprob: -4.024752140045166
    7. '_a' → logprob: -4.524752140045166
    8. 'b' → logprob: -4.774752140045166
    9. '_b' → logprob: -4.899752140045166
    10. '(B' → logprob: -5.649752140045166

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001325241639278829
    2. ',a' → logprob: -6.8763251304626465
    3. '_,' → logprob: -9.626325607299805
    4. ',_' → logprob: -9.626325607299805
    5. ' ,' → logprob: -9.751325607299805
    6. 'a' → logprob: -10.376325607299805
    7. ',n' → logprob: -11.376325607299805
    8. '_a' → logprob: -11.501325607299805
    9. '):' → logprob: -11.626325607299805
    10. ',
' → logprob: -11.751325607299805

Token 422: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16170985996723175
    2. ' a' → logprob: -1.9117099046707153
    3. '_a' → logprob: -7.911709785461426
    4. 'K' → logprob: -8.036709785461426
    5. ' K' → logprob: -8.411709785461426
    6. '   ' → logprob: -9.411709785461426
    7. '_' → logprob: -9.536709785461426
    8. 'p' → logprob: -9.536709785461426
    9. ' p' → logprob: -9.911709785461426
    10. ' _' → logprob: -10.036709785461426

Token 423: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048896078020334244
    2. '):' → logprob: -3.048896074295044
    3. ')' → logprob: -9.298895835876465
    4. ' ,' → logprob: -9.548895835876465
    5. '):
' → logprob: -9.548895835876465
    6. '_,' → logprob: -10.798895835876465
    7. '   ' → logprob: -11.548895835876465
    8. ',A' → logprob: -11.798895835876465
    9. ':' → logprob: -12.423895835876465
    10. ',
' → logprob: -12.548895835876465

Token 424: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6810725927352905
    2. 'return' → logprob: -1.1810725927352905
    3. '   ' → logprob: -1.6810725927352905
    4. 'A' → logprob: -7.68107271194458
    5. 'def' → logprob: -8.681072235107422
    6. ' A' → logprob: -9.556072235107422
    7. '	return' → logprob: -10.056072235107422
    8. '    
' → logprob: -11.431072235107422
    9. ' def' → logprob: -11.556072235107422
    10. '    ' → logprob: -11.806072235107422

Token 425: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02036038227379322
    2. ' return' → logprob: -4.270360469818115
    3. 'A' → logprob: -5.145360469818115
    4. '   ' → logprob: -8.020359992980957
    5. ' A' → logprob: -11.145359992980957
    6. 'def' → logprob: -12.520359992980957
    7. 'a' → logprob: -13.770359992980957
    8. '
' → logprob: -13.895359992980957
    9. 'result' → logprob: -14.520359992980957
    10. 'for' → logprob: -14.895359992980957

Token 426: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.029754776507616043
    2. ' A' → logprob: -3.529754877090454
    3. '   ' → logprob: -13.154754638671875
    4. ' ' → logprob: -14.279754638671875
    5. '[A' → logprob: -14.404754638671875
    6. 'a' → logprob: -14.654754638671875
    7. '[' → logprob: -15.279754638671875
    8. '(A' → logprob: -15.779754638671875
    9. '	A' → logprob: -15.779754638671875
    10. '  ' → logprob: -16.154754638671875

Token 427: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5761584043502808
    2. ' *' → logprob: -0.8261584043502808
    3. ' ' → logprob: -9.57615852355957
    4. '*a' → logprob: -9.70115852355957
    5. 'a' → logprob: -10.20115852355957
    6. '   ' → logprob: -10.82615852355957
    7. '[' → logprob: -11.70115852355957
    8. ' ' → logprob: -11.70115852355957
    9. '
' → logprob: -12.82615852355957
    10. '[a' → logprob: -12.95115852355957

Token 428: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00033546582562848926
    2. ' a' → logprob: -8.000335693359375
    3. ' ' → logprob: -17.125335693359375
    4. '   ' → logprob: -17.750335693359375
    5. '  ' → logprob: -19.750335693359375
    6. '	a' → logprob: -20.750335693359375
    7. '_a' → logprob: -21.750335693359375
    8. 'а' → logprob: -22.125335693359375
    9. '    ' → logprob: -22.625335693359375
    10. '
' → logprob: -23.000335693359375

Token 429: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.039219848811626434
    2. '<|end|>' → logprob: -3.289219856262207
    3. '#' → logprob: -7.164219856262207
    4. '<|end|>' → logprob: -8.539219856262207
    5. '```' → logprob: -9.164219856262207
    6. ' def' → logprob: -10.164219856262207
    7. 'a' → logprob: -11.164219856262207
    8. '.' → logprob: -11.414219856262207
    9. ')' → logprob: -11.414219856262207
    10. '...' → logprob: -12.164219856262207

Token 431: ' B' (ID: 418)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.9680582880973816
    2. 'main' → logprob: -1.5930583477020264
    3. 'def' → logprob: -1.9680583477020264
    4. 'should' → logprob: -2.0930583477020264
    5. 'calculate' → logprob: -2.9680583477020264
    6. 'process' → logprob: -3.8430583477020264
    7. 'get' → logprob: -3.8430583477020264
    8. 'compute' → logprob: -4.343058109283447
    9. 'combine' → logprob: -4.718058109283447
    10. 'factor' → logprob: -5.218058109283447

Token 432: '_div' (ID: 36926)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49932700395584106
    2. ',' → logprob: -1.7493269443511963
    3. '_' → logprob: -1.9993269443511963
    4. '_times' → logprob: -3.4993269443511963
    5. '=' → logprob: -4.249327182769775
    6. '<|end|>' → logprob: -5.124327182769775
    7. 'def' → logprob: -5.249327182769775
    8. '   ' → logprob: -5.874327182769775
    9. ' _' → logprob: -6.124327182769775
    10. '>' → logprob: -6.124327182769775

Token 433: 'ides' (ID: 4105)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.03546501323580742
    2. '_a' → logprob: -3.5354650020599365
    3. '_A' → logprob: -5.910465240478516
    4. '(a' → logprob: -7.160465240478516
    5. '_' → logprob: -7.660465240478516
    6. '(A' → logprob: -8.035465240478516
    7. 'a' → logprob: -8.285465240478516
    8. 'id' → logprob: -8.410465240478516
    9. '_B' → logprob: -8.660465240478516
    10. 'ides' → logprob: -8.660465240478516

Token 434: '_difference' (ID: 123771)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.17275859415531158
    2. '(A' → logprob: -2.2977585792541504
    3. '(' → logprob: -4.04775857925415
    4. '_B' → logprob: -4.17275857925415
    5. '(a' → logprob: -4.79775857925415
    6. 'B' → logprob: -5.17275857925415
    7. '_by' → logprob: -6.17275857925415
    8. ' (' → logprob: -6.54775857925415
    9. '_' → logprob: -6.67275857925415
    10. '_b' → logprob: -6.79775857925415

Token 435: '(K' (ID: 28797)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.053091876208782196
    2. '(' → logprob: -3.0530917644500732
    3. '(A' → logprob: -6.053092002868652
    4. '_B' → logprob: -7.178092002868652
    5. '(_' → logprob: -8.053092002868652
    6. '_' → logprob: -8.803092002868652
    7. '((' → logprob: -9.053092002868652
    8. '(b' → logprob: -9.053092002868652
    9. '(a' → logprob: -9.178092002868652
    10. '(
' → logprob: -9.178092002868652

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010542018339037895
    2. ' ,' → logprob: -5.135541915893555
    3. '):' → logprob: -6.385541915893555
    4. '_,' → logprob: -6.510541915893555
    5. ')' → logprob: -8.385541915893555
    6. ' -' → logprob: -8.760541915893555
    7. ',
' → logprob: -8.885541915893555
    8. '_' → logprob: -8.885541915893555
    9. '_A' → logprob: -8.885541915893555
    10. '):
' → logprob: -8.885541915893555

Token 437: ' _' (ID: 1175)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5157528519630432
    2. 'B' → logprob: -1.6407527923583984
    3. 'a' → logprob: -2.2657527923583984
    4. ' A' → logprob: -2.8907527923583984
    5. ' B' → logprob: -3.6407527923583984
    6. ' a' → logprob: -4.890752792358398
    7. 'K' → logprob: -5.890752792358398
    8. '_A' → logprob: -6.015752792358398
    9. '_a' → logprob: -6.265752792358398
    10. 'diff' → logprob: -6.515752792358398

Token 438: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003654241096228361
    2. 'B' → logprob: -5.8786540031433105
    3. 'a' → logprob: -7.6286540031433105
    4. 'K' → logprob: -8.003654479980469
    5. '_A' → logprob: -11.503654479980469
    6. ' A' → logprob: -12.378654479980469
    7. '_a' → logprob: -12.628654479980469
    8. ')' → logprob: -13.628654479980469
    9. 'diff' → logprob: -13.941154479980469
    10. '(' → logprob: -14.316154479980469

Token 439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011560549028217793
    2. ' ,' → logprob: -7.001155853271484
    3. '_a' → logprob: -10.376155853271484
    4. '_,' → logprob: -10.626155853271484
    5. ',_' → logprob: -10.626155853271484
    6. '_A' → logprob: -10.876155853271484
    7. ',A' → logprob: -10.876155853271484
    8. 'A' → logprob: -11.001155853271484
    9. '):
' → logprob: -11.251155853271484
    10. '):' → logprob: -11.251155853271484

Token 440: ' B' (ID: 418)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19869093596935272
    2. 'A' → logprob: -2.198690891265869
    3. ' a' → logprob: -3.198690891265869
    4. 'B' → logprob: -4.573690891265869
    5. ' A' → logprob: -4.698690891265869
    6. 'p' → logprob: -6.198690891265869
    7. ' B' → logprob: -6.573690891265869
    8. 'K' → logprob: -6.573690891265869
    9. '_a' → logprob: -7.073690891265869
    10. ' p' → logprob: -7.823690891265869

Token 441: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005889094900339842
    2. '):' → logprob: -5.380888938903809
    3. '):
' → logprob: -7.005888938903809
    4. ')' → logprob: -9.255888938903809
    5. ' ,' → logprob: -9.255888938903809
    6. ',K' → logprob: -9.630888938903809
    7. '(K' → logprob: -10.380888938903809
    8. '(' → logprob: -11.005888938903809
    9. 'K' → logprob: -11.755888938903809
    10. '   ' → logprob: -12.005888938903809

Token 442: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7124829292297363
    2. 'return' → logprob: -0.7124829292297363
    3. 'def' → logprob: -4.337482929229736
    4. '   ' → logprob: -5.837482929229736
    5. '(K' → logprob: -5.962482929229736
    6. ' def' → logprob: -8.462482452392578
    7. ' (' → logprob: -8.837482452392578
    8. 'B' → logprob: -9.587482452392578
    9. '((' → logprob: -10.212482452392578
    10. 'K' → logprob: -10.462482452392578

Token 443: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6826789975166321
    2. '(K' → logprob: -1.0576789379119873
    3. ' return' → logprob: -1.9326789379119873
    4. ' (' → logprob: -6.057679176330566
    5. '(_' → logprob: -9.182679176330566
    6. '   ' → logprob: -9.182679176330566
    7. '(B' → logprob: -9.557679176330566
    8. 'def' → logprob: -10.932679176330566
    9. '((' → logprob: -11.057679176330566
    10. 'if' → logprob: -11.057679176330566

Token 444: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.02927410416305065
    2. '(B' → logprob: -4.279273986816406
    3. '(_' → logprob: -4.904273986816406
    4. 'B' → logprob: -5.404273986816406
    5. ' (' → logprob: -6.029273986816406
    6. 'K' → logprob: -7.779273986816406
    7. '_B' → logprob: -9.654273986816406
    8. '(' → logprob: -9.779273986816406
    9. ' (_' → logprob: -10.154273986816406
    10. '((' → logprob: -10.654273986816406

Token 445: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.001894841087050736
    2. '(K' → logprob: -6.626894950866699
    3. '_K' → logprob: -7.876894950866699
    4. 'B' → logprob: -9.5018949508667
    5. ' K' → logprob: -9.7518949508667
    6. '(_' → logprob: -10.8768949508667
    7. 'A' → logprob: -11.2518949508667
    8. '(' → logprob: -11.8768949508667
    9. '_' → logprob: -11.8768949508667
    10. ' (' → logprob: -13.3768949508667

Token 446: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6343870162963867
    2. ' -' → logprob: -0.7593870162963867
    3. ' ' → logprob: -7.134387016296387
    4. '_' → logprob: -7.259387016296387
    5. '-_' → logprob: -8.884387016296387
    6. ' _' → logprob: -9.759387016296387
    7. '[' → logprob: -11.009387016296387
    8. ')' → logprob: -11.009387016296387
    9. '-B' → logprob: -11.259387016296387
    10. ',' → logprob: -11.634387016296387

Token 447: ' _' (ID: 1175)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.0015403309371322393
    2. ' _' → logprob: -6.501540184020996
    3. '_B' → logprob: -10.376540184020996
    4. '(_' → logprob: -13.126540184020996
    5. '   ' → logprob: -13.376540184020996
    6. '_a' → logprob: -13.876540184020996
    7. 'A' → logprob: -14.251540184020996
    8. ')' → logprob: -14.626540184020996
    9. '_' → logprob: -15.751540184020996
    10. '\' → logprob: -15.876540184020996

Token 448: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.004696090007201e-05
    2. '_A' → logprob: -10.125069618225098
    3. ' A' → logprob: -10.625069618225098
    4. 'a' → logprob: -12.875069618225098
    5. 'B' → logprob: -13.250069618225098
    6. '_a' → logprob: -14.625069618225098
    7. ')' → logprob: -16.000070571899414
    8. '   ' → logprob: -16.250070571899414
    9. '	A' → logprob: -16.500070571899414
    10. 'А' → logprob: -16.625070571899414

Token 449: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001818489981815219
    2. ' )' → logprob: -8.750182151794434
    3. ')%' → logprob: -10.750182151794434
    4. '%' → logprob: -14.375182151794434
    5. ')
' → logprob: -14.375182151794434
    6. '[' → logprob: -15.500182151794434
    7. '0' → logprob: -15.750182151794434
    8. '）' → logprob: -16.000181198120117
    9. 'B' → logprob: -16.250181198120117
    10. '-' → logprob: -17.000181198120117

Token 450: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4743661880493164
    2. '%' → logprob: -0.9743661880493164
    3. '%B' → logprob: -8.224366188049316
    4. ')' → logprob: -11.599366188049316
    5. ' ' → logprob: -11.974366188049316
    6. '%b' → logprob: -13.224366188049316
    7. '%A' → logprob: -13.599366188049316
    8. ' %
' → logprob: -14.349366188049316
    9. '%
' → logprob: -14.474366188049316
    10. '%D' → logprob: -15.474366188049316

Token 451: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00360019039362669
    2. ' B' → logprob: -5.628600120544434
    3. '	B' → logprob: -16.87860107421875
    4. '(B' → logprob: -17.25360107421875
    5. ' ' → logprob: -17.50360107421875
    6. '`' → logprob: -17.50360107421875
    7. '   ' → logprob: -18.00360107421875
    8. '
' → logprob: -18.37860107421875
    9. 'b' → logprob: -19.00360107421875
    10. '```' → logprob: -19.37860107421875

Token 452: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4743044972419739
    2. '==' → logprob: -0.9743044972419739
    3. '=' → logprob: -8.72430419921875
    4. '()==' → logprob: -10.47430419921875
    5. ' ' → logprob: -11.09930419921875
    6. '()' → logprob: -12.09930419921875
    7. ' =' → logprob: -12.47430419921875
    8. '0' → logprob: -12.59930419921875
    9. '==
' → logprob: -13.47430419921875
    10. ')==' → logprob: -13.59930419921875

Token 453: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.625024795532227
    4. '<|end|>' → logprob: -18.875024795532227
    5. '۰' → logprob: -19.000024795532227
    6. '  ' → logprob: -19.875024795532227
    7. '```' → logprob: -20.250024795532227
    8. ' ' → logprob: -20.250024795532227
    9. '00' → logprob: -20.500024795532227
    10. '  ' → logprob: -20.562524795532227

Token 454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.8750057220459
    4. '۰' → logprob: -20.8750057220459
    5. '00' → logprob: -22.0000057220459
    6. '  ' → logprob: -22.2500057220459
    7. '000' → logprob: -22.3750057220459
    8. ' ' → logprob: -22.5000057220459
    9. '  ' → logprob: -22.7500057220459
    10. '```' → logprob: -22.8750057220459

Token 455: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 456: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05141862481832504
    2. '<|end|>' → logprob: -3.0514185428619385
    3. '#' → logprob: -6.051418781280518
    4. '<|end|>' → logprob: -8.05141830444336
    5. '```' → logprob: -9.30141830444336
    6. ')' → logprob: -11.17641830444336
    7. '
' → logprob: -11.30141830444336
    8. ' def' → logprob: -11.67641830444336
    9. '[' → logprob: -12.55141830444336
    10. 'K' → logprob: -12.67641830444336

Token 457: ' calc' (ID: 25691)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.8022557497024536
    2. 'calc' → logprob: -2.052255630493164
    3. 'calculate' → logprob: -2.427255630493164
    4. 'solve' → logprob: -2.427255630493164
    5. 'process' → logprob: -3.052255630493164
    6. 'check' → logprob: -3.177255630493164
    7. 'find' → logprob: -3.802255630493164
    8. 'compute' → logprob: -4.052255630493164
    9. 'count' → logprob: -4.302255630493164
    10. 'C' → logprob: -4.427255630493164

Token 458: '_b' (ID: 1535)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.4100237190723419
    2. '_B' → logprob: -1.1600236892700195
    3. '_a' → logprob: -4.6600236892700195
    4. 'A' → logprob: -5.7850236892700195
    5. '_C' → logprob: -6.0350236892700195
    6. 'B' → logprob: -6.5350236892700195
    7. '(A' → logprob: -7.0350236892700195
    8. '_sum' → logprob: -7.0350236892700195
    9. '_result' → logprob: -7.7850236892700195
    10. '_' → logprob: -7.7850236892700195

Token 459: '(K' (ID: 28797)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.06547953188419342
    2. '(K' → logprob: -3.5654795169830322
    3. '(' → logprob: -4.315479755401611
    4. '(_' → logprob: -4.565479755401611
    5. 'def' → logprob: -6.065479755401611
    6. '_b' → logprob: -6.190479755401611
    7. '(A' → logprob: -6.690479755401611
    8. '_a' → logprob: -6.940479755401611
    9. '_div' → logprob: -6.940479755401611
    10. '_' → logprob: -7.315479755401611

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000799980596639216
    2. ' ,' → logprob: -8.250800132751465
    3. ',b' → logprob: -8.250800132751465
    4. '_,' → logprob: -9.375800132751465
    5. ',_' → logprob: -10.125800132751465
    6. ',B' → logprob: -10.125800132751465
    7. ',
' → logprob: -10.250800132751465
    8. ',A' → logprob: -10.750800132751465
    9. ',a' → logprob: -10.875800132751465
    10. 'b' → logprob: -11.375800132751465

Token 461: ' _' (ID: 1175)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.004290064796805382
    2. '_B' → logprob: -6.3792901039123535
    3. 'A' → logprob: -6.8792901039123535
    4. '_' → logprob: -7.1292901039123535
    5. ' _' → logprob: -7.2542901039123535
    6. ' A' → logprob: -10.879289627075195
    7. 'B' → logprob: -11.129289627075195
    8. ' ' → logprob: -11.879289627075195
    9. '_a' → logprob: -13.129289627075195
    10. '_K' → logprob: -13.254289627075195

Token 462: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.2855416066013277e-05
    2. '_A' → logprob: -11.000032424926758
    3. 'B' → logprob: -11.375032424926758
    4. ' A' → logprob: -12.375032424926758
    5. ',' → logprob: -16.125032424926758
    6. 'a' → logprob: -16.375032424926758
    7. '<|end|>' → logprob: -17.000032424926758
    8. '(A' → logprob: -17.125032424926758
    9. '<|end|>' → logprob: -17.375032424926758
    10. ')' → logprob: -17.375032424926758

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007499480270780623
    2. ',B' → logprob: -7.3757500648498535
    3. ' ,' → logprob: -9.750749588012695
    4. ',b' → logprob: -11.125749588012695
    5. ',
' → logprob: -11.125749588012695
    6. 'B' → logprob: -11.125749588012695
    7. ')' → logprob: -11.875749588012695
    8. '+' → logprob: -12.500749588012695
    9. '):
' → logprob: -13.500749588012695
    10. '_,' → logprob: -13.500749588012695

Token 464: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.023248739540576935
    2. ' B' → logprob: -3.7732486724853516
    3. ' ' → logprob: -13.898248672485352
    4. 'A' → logprob: -14.273248672485352
    5. 'b' → logprob: -15.023248672485352
    6. '   ' → logprob: -15.273248672485352
    7. 'def' → logprob: -15.523248672485352
    8. '_B' → logprob: -15.523248672485352
    9. '
' → logprob: -15.773248672485352
    10. ')' → logprob: -15.898248672485352

Token 465: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1605009287595749
    2. '):
' → logprob: -1.9105008840560913
    3. ',' → logprob: -8.785500526428223
    4. '):
' → logprob: -9.410500526428223
    5. ')' → logprob: -10.410500526428223
    6. '   ' → logprob: -11.910500526428223
    7. '):

' → logprob: -12.660500526428223
    8. ' ):' → logprob: -14.660500526428223
    9. ':' → logprob: -15.035500526428223
    10. ' ):
' → logprob: -15.785500526428223

Token 466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1008521020412445
    2. 'return' → logprob: -2.3508520126342773
    3. ' return' → logprob: -7.350852012634277
    4. '	return' → logprob: -12.975852012634277
    5. '       ' → logprob: -15.600852012634277
    6. 'b' → logprob: -15.725852012634277
    7. ' ' → logprob: -15.975852012634277
    8. '   ' → logprob: -15.975852012634277
    9. '```' → logprob: -16.225852966308594
    10. 'def' → logprob: -16.350852966308594

Token 467: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009920177049934864
    2. ' return' → logprob: -5.009920120239258
    3. '   ' → logprob: -6.134920120239258
    4. '(K' → logprob: -6.884920120239258
    5. 'def' → logprob: -13.009920120239258
    6. ' ' → logprob: -13.509920120239258
    7. '```' → logprob: -13.509920120239258
    8. '	return' → logprob: -13.759920120239258
    9. '  ' → logprob: -14.009920120239258
    10. '(B' → logprob: -14.009920120239258

Token 468: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6933422088623047
    2. '(K' → logprob: -0.6933422088623047
    3. '(B' → logprob: -9.068342208862305
    4. '(' → logprob: -10.068342208862305
    5. '((' → logprob: -11.068342208862305
    6. '(k' → logprob: -11.318342208862305
    7. '   ' → logprob: -12.693342208862305
    8. ' ' → logprob: -12.818342208862305
    9. '  ' → logprob: -14.193342208862305
    10. '(int' → logprob: -14.193342208862305

Token 469: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -7.755678961984813e-05
    2. '(K' → logprob: -9.500077247619629
    3. ' K' → logprob: -13.250077247619629
    4. '	K' → logprob: -15.000077247619629
    5. 'k' → logprob: -15.375077247619629
    6. '   ' → logprob: -15.500077247619629
    7. '_K' → logprob: -17.125078201293945
    8. ' ' → logprob: -17.250078201293945
    9. '
' → logprob: -18.000078201293945
    10. '(' → logprob: -18.000078201293945

Token 470: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.428751677274704
    2. ' -' → logprob: -1.0537517070770264
    3. '-B' → logprob: -10.803751945495605
    4. ' ' → logprob: -11.428751945495605
    5. '-A' → logprob: -12.053751945495605
    6. '-_' → logprob: -12.553751945495605
    7. '_' → logprob: -13.178751945495605
    8. '-
' → logprob: -13.303751945495605
    9. ',' → logprob: -13.428751945495605
    10. ')' → logprob: -13.928751945495605

Token 471: ' _' (ID: 1175)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.004650253336876631
    2. ' _' → logprob: -5.379650115966797
    3. '_' → logprob: -11.004650115966797
    4. 'A' → logprob: -12.504650115966797
    5. '<|end|>' → logprob: -12.629650115966797
    6. ' ' → logprob: -12.754650115966797
    7. '_B' → logprob: -13.004650115966797
    8. ' A' → logprob: -14.504650115966797
    9. '   ' → logprob: -15.129650115966797
    10. '_a' → logprob: -15.629650115966797

Token 472: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.14268846809864044
    2. '_A' → logprob: -2.017688512802124
    3. '<|end|>' → logprob: -12.517688751220703
    4. ' A' → logprob: -13.017688751220703
    5. 'a' → logprob: -13.767688751220703
    6. '_' → logprob: -13.767688751220703
    7. '_a' → logprob: -13.767688751220703
    8. ')' → logprob: -14.267688751220703
    9. '[' → logprob: -14.392688751220703
    10. ' ' → logprob: -14.517688751220703

Token 473: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002493729814887047
    2. ')//' → logprob: -6.002493858337402
    3. ' )' → logprob: -11.002493858337402
    4. '//' → logprob: -13.752493858337402
    5. ')
' → logprob: -15.127493858337402
    6. '   ' → logprob: -17.127492904663086
    7. '）' → logprob: -17.377492904663086
    8. ' ' → logprob: -18.252492904663086
    9. ' //' → logprob: -18.502492904663086
    10. ')#' → logprob: -18.752492904663086

Token 474: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.1427260935306549
    2. ' //' → logprob: -2.017726182937622
    3. '#' → logprob: -11.142725944519043
    4. '   ' → logprob: -11.642725944519043
    5. ' ' → logprob: -12.142725944519043
    6. '
' → logprob: -12.267725944519043
    7. '```' → logprob: -12.392725944519043
    8. ' ' → logprob: -12.892725944519043
    9. '...' → logprob: -13.142725944519043
    10. ')' → logprob: -13.267725944519043

Token 475: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00015860427811276168
    2. ' B' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.375158309936523
    4. '	B' → logprob: -18.250158309936523
    5. '>B' → logprob: -20.625158309936523
    6. ' ' → logprob: -21.375158309936523
    7. '_B' → logprob: -21.500158309936523
    8. '  ' → logprob: -22.125158309936523
    9. '"B' → logprob: -22.375158309936523
    10. '(B' → logprob: -22.500158309936523

Token 476: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 478: ' is' (ID: 382)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03658801689743996
    2. ' main' → logprob: -3.911587953567505
    3. 'def' → logprob: -4.411588191986084
    4. 'solve' → logprob: -7.036588191986084
    5. 'process' → logprob: -7.286588191986084
    6. 'calc' → logprob: -7.536588191986084
    7. 'factor' → logprob: -7.786588191986084
    8. 'calculate' → logprob: -7.911588191986084
    9. 'comb' → logprob: -8.536587715148926
    10. 'get' → logprob: -8.536587715148926

Token 479: '_b' (ID: 1535)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.2896159887313843
    2. '_b' → logprob: -1.4146159887313843
    3. 'instance' → logprob: -1.7896159887313843
    4. '_prime' → logprob: -2.289616107940674
    5. '_a' → logprob: -2.789616107940674
    6. '_factor' → logprob: -3.539616107940674
    7. 'prime' → logprob: -4.664616107940674
    8. '_A' → logprob: -4.789616107940674
    9. '_B' → logprob: -4.789616107940674
    10. 'valid' → logprob: -4.914616107940674

Token 480: '_with' (ID: 14161)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.238755464553833
    2. '_valid' → logprob: -1.363755464553833
    3. '_less' → logprob: -1.863755464553833
    4. '_b' → logprob: -2.238755464553833
    5. '>=' → logprob: -2.863755464553833
    6. '(' → logprob: -3.238755464553833
    7. '_non' → logprob: -3.738755464553833
    8. '_not' → logprob: -4.363755226135254
    9. 'valid' → logprob: -4.488755226135254
    10. 'less' → logprob: -4.613755226135254

Token 481: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.030089817941188812
    2. 'n' → logprob: -3.905089855194092
    3. 'valid' → logprob: -5.405089855194092
    4. 'def' → logprob: -6.655089855194092
    5. '_valid' → logprob: -7.280089855194092
    6. 'int' → logprob: -7.655089855194092
    7. 'equal' → logprob: -8.405089378356934
    8. '```' → logprob: -8.405089378356934
    9. 'positive' → logprob: -8.655089378356934
    10. 'b' → logprob: -8.905089378356934

Token 482: '_range' (ID: 22022)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6614238619804382
    2. '_range' → logprob: -0.9114238619804382
    3. '_bounds' → logprob: -3.161423921585083
    4. '(' → logprob: -3.786423921585083
    5. '_b' → logprob: -5.161423683166504
    6. '0' → logprob: -5.661423683166504
    7. 'def' → logprob: -6.036423683166504
    8. '(lambda' → logprob: -6.661423683166504
    9. '(B' → logprob: -6.786423683166504
    10. 'b' → logprob: -7.286423683166504

Token 483: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0012261815136298537
    2. '(B' → logprob: -8.001226425170898
    3. '(n' → logprob: -8.001226425170898
    4. '(' → logprob: -8.751226425170898
    5. '(K' → logprob: -8.876226425170898
    6. 'def' → logprob: -9.126226425170898
    7. '(a' → logprob: -9.251226425170898
    8. '(k' → logprob: -10.251226425170898
    9. '(N' → logprob: -12.251226425170898
    10. ' (' → logprob: -12.376226425170898

Token 484: ',' (ID: 11)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.1201094537973404
    2. ',' → logprob: -2.3701095581054688
    3. '(n' → logprob: -4.495109558105469
    4. '(' → logprob: -4.995109558105469
    5. ' (' → logprob: -7.120109558105469
    6. '(a' → logprob: -7.870109558105469
    7. '(N' → logprob: -8.370109558105469
    8. ',b' → logprob: -8.870109558105469
    9. '(k' → logprob: -9.745109558105469
    10. '(B' → logprob: -9.995109558105469

Token 485: ' N' (ID: 478)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5166388750076294
    2. 'N' → logprob: -2.01663875579834
    3. 'n' → logprob: -2.01663875579834
    4. 'a' → logprob: -2.26663875579834
    5. 'lambda' → logprob: -3.89163875579834
    6. ' lambda' → logprob: -5.76663875579834
    7. 'b' → logprob: -6.26663875579834
    8. ' ' → logprob: -6.89163875579834
    9. 'K' → logprob: -6.89163875579834
    10. 'B' → logprob: -6.89163875579834

Token 486: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005053732893429697
    2. '):
' → logprob: -8.375505447387695
    3. '):' → logprob: -8.500505447387695
    4. ',b' → logprob: -10.000505447387695
    5. 'b' → logprob: -11.750505447387695
    6. ',N' → logprob: -11.875505447387695
    7. ',
' → logprob: -12.625505447387695
    8. ' ,' → logprob: -13.250505447387695
    9. ',n' → logprob: -13.375505447387695
    10. '   ' → logprob: -13.500505447387695

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.576691746711731
    2. ' return' → logprob: -1.076691746711731
    3. 'return' → logprob: -2.5766916275024414
    4. '0' → logprob: -4.076691627502441
    5. 'b' → logprob: -5.576691627502441
    6. ' b' → logprob: -7.576691627502441
    7. ' ' → logprob: -9.326691627502441
    8. '	return' → logprob: -9.326691627502441
    9. '```' → logprob: -11.076691627502441
    10. '  ' → logprob: -11.201691627502441

Token 488: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11096249520778656
    2. 'return' (adapté à ' return') → logprob: -2.610962390899658
    3. ' return' → logprob: -3.610962390899658
    4. 'b' → logprob: -5.485962390899658
    5. ' ' → logprob: -8.485962867736816
    6. ' b' → logprob: -9.235962867736816
    7. '   ' → logprob: -9.360962867736816
    8. '```' → logprob: -13.735962867736816
    9. '1' → logprob: -14.235962867736816
    10. '(' → logprob: -14.860962867736816

Token 489: ' b' (ID: 287)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029979458078742027
    2. ' ' → logprob: -3.5299794673919678
    3. 'b' → logprob: -8.779979705810547
    4. ' b' → logprob: -9.654979705810547
    5. ' (' → logprob: -12.279979705810547
    6. '(' → logprob: -12.279979705810547
    7. '1' → logprob: -14.404979705810547
    8. '   ' → logprob: -14.404979705810547
    9. ' ' → logprob: -14.779979705810547
    10. '  ' → logprob: -15.904979705810547

Token 490: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.12328744679689407
    2. '>=' → logprob: -2.6232874393463135
    3. ' <=' → logprob: -3.2482874393463135
    4. '<=' → logprob: -5.748287677764893
    5. '0' → logprob: -6.623287677764893
    6. ' ' → logprob: -10.123287200927734
    7. '=' → logprob: -11.873287200927734
    8. '   ' → logprob: -12.373287200927734
    9. '>' → logprob: -12.623287200927734
    10. '1' → logprob: -12.998287200927734

Token 491: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.11996734328568e-05
    2. ' N' → logprob: -10.125041007995605
    3. '<|end|>' → logprob: -14.125041007995605
    4. '	N' → logprob: -16.125041961669922
    5. 'n' → logprob: -16.375041961669922
    6. '0' → logprob: -16.750041961669922
    7. '_N' → logprob: -17.250041961669922
    8. ' ' → logprob: -17.375041961669922
    9. '
' → logprob: -18.750041961669922
    10. '<|end|>' → logprob: -18.875041961669922

Token 492: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 494: ' update' (ID: 4027)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1390746533870697
    2. 'def' → logprob: -2.3890745639801025
    3. ' main' → logprob: -3.3890745639801025
    4. 'solve' → logprob: -6.764074802398682
    5. 'process' → logprob: -7.014074802398682
    6. 'calculate' → logprob: -7.514074802398682
    7. ' def' → logprob: -7.889074802398682
    8. 'factor' → logprob: -8.014074325561523
    9. 'is' → logprob: -8.639074325561523
    10. '__' → logprob: -8.764074325561523

Token 495: '_cnt' (ID: 35412)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_A' → logprob: -1.2148070335388184
    2. 'def' → logprob: -1.5898070335388184
    3. 'A' → logprob: -2.2148070335388184
    4. '(A' → logprob: -2.5898070335388184
    5. 'a' → logprob: -2.8398070335388184
    6. '_B' → logprob: -2.9648070335388184
    7. 'B' → logprob: -3.0898070335388184
    8. '_a' → logprob: -4.089807033538818
    9. '_K' → logprob: -4.089807033538818
    10. 'result' → logprob: -4.339807033538818

Token 496: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.05604862794280052
    2. '(' → logprob: -2.931048631668091
    3. '(C' → logprob: -7.931048393249512
    4. '(c' → logprob: -7.931048393249512
    5. '(count' → logprob: -8.681048393249512
    6. '(_' → logprob: -9.056048393249512
    7. '(
' → logprob: -9.556048393249512
    8. '_cnt' → logprob: -11.431048393249512
    9. ' (' → logprob: -11.556048393249512
    10. 'def' → logprob: -11.556048393249512

Token 497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004498573543969542
    2. ' ,' → logprob: -8.000450134277344
    3. ',b' → logprob: -10.250450134277344
    4. ',a' → logprob: -10.250450134277344
    5. ',n' → logprob: -11.250450134277344
    6. ',
' → logprob: -11.875450134277344
    7. '):' → logprob: -12.000450134277344
    8. '   ' → logprob: -12.625450134277344
    9. '_,' → logprob: -12.625450134277344
    10. ',k' → logprob: -13.500450134277344

Token 498: ' F' (ID: 454)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -1.7740023136138916
    2. 'a' → logprob: -2.0240023136138916
    3. 'b' → logprob: -2.2740023136138916
    4. 'index' → logprob: -2.3990023136138916
    5. 'n' → logprob: -2.5240023136138916
    6. 'value' → logprob: -2.6490023136138916
    7. 'temp' → logprob: -2.6490023136138916
    8. 'idx' → logprob: -2.7740023136138916
    9. 'F' → logprob: -3.1490023136138916
    10. ' comb' → logprob: -3.1490023136138916

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.97024549683556e-05
    2. '[' → logprob: -10.250080108642578
    3. ' ,' → logprob: -11.125080108642578
    4. '   ' → logprob: -11.500080108642578
    5. ',n' → logprob: -11.625080108642578
    6. '<|end|>' → logprob: -13.375080108642578
    7. ',
' → logprob: -13.500080108642578
    8. ')' → logprob: -13.500080108642578
    9. ',F' → logprob: -13.625080108642578
    10. ',a' → logprob: -13.750080108642578

Token 500: ' Fin' (ID: 7772)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' → logprob: -0.0024518726859241724
    2. ' Fin' → logprob: -6.1274518966674805
    3. 'fin' → logprob: -8.87745189666748
    4. 'F' → logprob: -9.62745189666748
    5. '   ' → logprob: -10.75245189666748
    6. ' fin' → logprob: -11.00245189666748
    7. 'a' → logprob: -11.87745189666748
    8. ' ' → logprob: -12.75245189666748
    9. 'Finite' → logprob: -12.87745189666748
    10. '_fin' → logprob: -13.25245189666748

Token 501: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.723352049040841e-06
    2. '```' → logprob: -13.250004768371582
    3. 'V' → logprob: -14.750004768371582
    4. 'в' → logprob: -14.875004768371582
    5. 'iv' → logprob: -15.375004768371582
    6. '   ' → logprob: -15.375004768371582
    7. ',' → logprob: -15.625004768371582
    8. '(F' → logprob: -15.750004768371582
    9. 'inv' → logprob: -15.812504768371582
    10. '[v' → logprob: -16.000003814697266

Token 502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.999452772201039e-05
    2. ' ,' → logprob: -11.125029563903809
    3. ',n' → logprob: -12.250029563903809
    4. '   ' → logprob: -12.500029563903809
    5. ',a' → logprob: -13.250029563903809
    6. ',b' → logprob: -13.625029563903809
    7. 'def' → logprob: -13.875029563903809
    8. ')' → logprob: -14.875029563903809
    9. '_,' → logprob: -15.000029563903809
    10. ',count' → logprob: -15.250029563903809

Token 503: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5370396971702576
    2. ' n' → logprob: -1.5370397567749023
    3. 'a' → logprob: -2.2870397567749023
    4. 'b' → logprob: -3.4120397567749023
    5. ' a' → logprob: -3.4120397567749023
    6. ' b' → logprob: -4.412039756774902
    7. 'p' → logprob: -4.912039756774902
    8. 'N' → logprob: -5.412039756774902
    9. ' p' → logprob: -5.412039756774902
    10. ' N' → logprob: -6.787039756774902

Token 504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0126840758603066e-05
    2. ' ,' → logprob: -10.375040054321289
    3. '   ' → logprob: -12.000040054321289
    4. ',a' → logprob: -14.500040054321289
    5. '  ' → logprob: -14.750040054321289
    6. ',n' → logprob: -14.875040054321289
    7. ',b' → logprob: -15.000040054321289
    8. '):
' → logprob: -15.000040054321289
    9. 'def' → logprob: -15.125040054321289
    10. ',
' → logprob: -15.750040054321289

Token 505: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34797173738479614
    2. 'b' → logprob: -2.3479716777801514
    3. ' a' → logprob: -2.3479716777801514
    4. 'n' → logprob: -3.0979716777801514
    5. ' b' → logprob: -3.9729716777801514
    6. ' n' → logprob: -4.2229719161987305
    7. 'K' → logprob: -4.4729719161987305
    8. 'p' → logprob: -5.3479719161987305
    9. ' K' → logprob: -5.7229719161987305
    10. ' p' → logprob: -6.8479719161987305

Token 506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013643606507685035
    2. ' ,' → logprob: -9.250136375427246
    3. '   ' → logprob: -10.375136375427246
    4. '):
' → logprob: -12.375136375427246
    5. 'def' → logprob: -13.750136375427246
    6. ',
' → logprob: -14.250136375427246
    7. ',b' → logprob: -14.250136375427246
    8. '  ' → logprob: -14.375136375427246
    9. ',p' → logprob: -14.500136375427246
    10. '_,' → logprob: -15.000136375427246

Token 507: ' b' (ID: 287)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023299982771277428
    2. ' p' → logprob: -3.7732999324798584
    3. 'B' → logprob: -11.148300170898438
    4. 'b' → logprob: -11.273300170898438
    5. '   ' → logprob: -11.773300170898438
    6. ',' → logprob: -12.148300170898438
    7. ' ' → logprob: -12.648300170898438
    8. 'K' → logprob: -13.460800170898438
    9. ')' → logprob: -13.523300170898438
    10. ' B' → logprob: -13.710800170898438

Token 508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038598617538809776
    2. '):' → logprob: -8.375386238098145
    3. ' ,' → logprob: -9.625386238098145
    4. '):
' → logprob: -10.000386238098145
    5. '   ' → logprob: -10.125386238098145
    6. ',p' → logprob: -13.250386238098145
    7. ',
' → logprob: -13.875386238098145
    8. '  ' → logprob: -15.000386238098145
    9. '):
' → logprob: -15.750386238098145
    10. ' ' → logprob: -16.125385284423828

Token 509: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023252584040164948
    2. ' p' → logprob: -3.773252487182617
    3. ',' → logprob: -12.898252487182617
    4. '   ' → logprob: -13.148252487182617
    5. ' ' → logprob: -14.148252487182617
    6. 'P' → logprob: -14.460752487182617
    7. ')' → logprob: -15.710752487182617
    8. 'K' → logprob: -16.273252487182617
    9. '
' → logprob: -16.335752487182617
    10. '  ' → logprob: -16.335752487182617

Token 510: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49599266052246094
    2. '):' → logprob: -0.9959926605224609
    3. '):
' → logprob: -3.995992660522461
    4. '   ' → logprob: -5.745992660522461
    5. ')' → logprob: -10.245992660522461
    6. '):
' → logprob: -10.745992660522461
    7. ' ,' → logprob: -11.120992660522461
    8. ':' → logprob: -11.995992660522461
    9. '):

' → logprob: -12.245992660522461
    10. '  ' → logprob: -12.745992660522461

Token 511: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010479496791958809
    2. 'cnt' → logprob: -5.01047945022583
    3. 'temp' → logprob: -5.88547945022583
    4. 'comb' → logprob: -7.51047945022583
    5. 'tmp' → logprob: -9.135479927062988
    6. 'value' → logprob: -9.260479927062988
    7. 'val' → logprob: -9.635479927062988
    8. ' cnt' → logprob: -9.760479927062988
    9. ' comb' → logprob: -10.510479927062988
    10. ' temp' → logprob: -11.135479927062988

Token 512: ' value' (ID: 1432)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3564457297325134
    2. '   ' → logprob: -1.2314457893371582
    3. 'temp' → logprob: -5.606445789337158
    4. ' cnt' → logprob: -5.981445789337158
    5. 'comb' → logprob: -6.981445789337158
    6. 'tmp' → logprob: -8.2314453125
    7. 'value' (adapté à ' value') → logprob: -8.3564453125
    8. 'val' → logprob: -8.8564453125
    9. 'def' → logprob: -10.6064453125
    10. 'count' → logprob: -10.7314453125

Token 513: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759679675102234
    2. ' =' → logprob: -0.8259679675102234
    3. '   ' → logprob: -10.575967788696289
    4. '  ' → logprob: -13.950967788696289
    5. '=
' → logprob: -14.200967788696289
    6. ' =
' → logprob: -14.325967788696289
    7. ' ' → logprob: -14.700967788696289
    8. ' +=' → logprob: -16.32596778869629
    9. '_' → logprob: -16.57596778869629
    10. '=

' → logprob: -16.70096778869629

Token 514: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759700536727905
    2. ' =' → logprob: -0.8259700536727905
    3. '   ' → logprob: -10.575969696044922
    4. '=
' → logprob: -12.950969696044922
    5. ' ' → logprob: -13.700969696044922
    6. ' =
' → logprob: -14.325969696044922
    7. '  ' → logprob: -15.200969696044922
    8. '=

' → logprob: -15.700969696044922
    9. '    ' → logprob: -15.950969696044922
    10. ',' → logprob: -16.200969696044922

Token 515: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0008313055150210857
    2. ' comb' → logprob: -7.125831127166748
    3. 'combine' → logprob: -11.375831604003906
    4. 'F' → logprob: -12.500831604003906
    5. 'com' → logprob: -12.750831604003906
    6. '   ' → logprob: -12.875831604003906
    7. 'a' → logprob: -13.250831604003906
    8. 'combo' → logprob: -14.000831604003906
    9. 'c' → logprob: -14.750831604003906
    10. 'compl' → logprob: -14.875831604003906

Token 516: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -2.339278580620885e-06
    2. '<|end|>' → logprob: -13.625001907348633
    3. '(' → logprob: -13.875001907348633
    4. '(
' → logprob: -15.750001907348633
    5. '```' → logprob: -18.250001907348633
    6. ' (' → logprob: -18.625001907348633
    7. 'F' → logprob: -18.750001907348633
    8. ')' → logprob: -18.750001907348633
    9. '	F' → logprob: -19.000001907348633
    10. '<|end|>' → logprob: -19.125001907348633

Token 517: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006581080378964543
    2. ',F' → logprob: -7.50065803527832
    3. '<|end|>' → logprob: -9.50065803527832
    4. ' ,' → logprob: -11.25065803527832
    5. ',
' → logprob: -11.62565803527832
    6. '<|end|>' → logprob: -12.62565803527832
    7. 'F' → logprob: -13.75065803527832
    8. ',N' → logprob: -14.62565803527832
    9. ',b' → logprob: -14.75065803527832
    10. ',B' → logprob: -15.00065803527832

Token 518: ' Fin' (ID: 7772)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' → logprob: -0.005510738585144281
    2. ' Fin' → logprob: -5.2555108070373535
    3. 'F' → logprob: -8.880510330200195
    4. 'fin' → logprob: -9.755510330200195
    5. '<|end|>' → logprob: -10.130510330200195
    6. 'Finite' → logprob: -10.880510330200195
    7. ' fin' → logprob: -11.630510330200195
    8. ')' → logprob: -12.755510330200195
    9. '_fin' → logprob: -13.255510330200195
    10. 'Finn' → logprob: -13.755510330200195

Token 519: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.334533878136426e-05
    2. 'p' → logprob: -10.375042915344238
    3. 'x' → logprob: -12.000042915344238
    4. ',' → logprob: -13.000042915344238
    5. '(F' → logprob: -14.000042915344238
    6. 'q' → logprob: -14.500042915344238
    7. '[' → logprob: -15.000042915344238
    8. 'F' → logprob: -15.000042915344238
    9. ',F' → logprob: -15.000042915344238
    10. 'w' → logprob: -15.000042915344238

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016659092216286808
    2. ',n' → logprob: -9.000166893005371
    3. ' ,' → logprob: -10.500166893005371
    4. '   ' → logprob: -12.375166893005371
    5. ',a' → logprob: -12.500166893005371
    6. ',N' → logprob: -12.750166893005371
    7. '‌,' → logprob: -14.250166893005371
    8. ',
' → logprob: -14.500166893005371
    9. ',b' → logprob: -14.625166893005371
    10. 'n' → logprob: -14.750166893005371

Token 521: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.429896944202483e-05
    2. ' N' → logprob: -10.125043869018555
    3. 'a' → logprob: -13.250043869018555
    4. '   ' → logprob: -14.000043869018555
    5. '	N' → logprob: -14.125043869018555
    6. '2' → logprob: -14.750043869018555
    7. 'n' → logprob: -15.500043869018555
    8. 'b' → logprob: -16.000043869018555
    9. '    
' → logprob: -17.000043869018555
    10. '
' → logprob: -17.000043869018555

Token 522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030723062809556723
    2. ',a' → logprob: -6.128072261810303
    3. ' ,' → logprob: -7.253072261810303
    4. 'a' → logprob: -9.378072738647461
    5. '   ' → logprob: -9.628072738647461
    6. ',b' → logprob: -11.753072738647461
    7. ',
' → logprob: -12.003072738647461
    8. '-' → logprob: -12.878072738647461
    9. '  ' → logprob: -13.253072738647461
    10. ' a' → logprob: -13.503072738647461

Token 523: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005244429688900709
    2. ' a' → logprob: -5.255244255065918
    3. '   ' → logprob: -12.380244255065918
    4. 'b' → logprob: -12.630244255065918
    5. ' ' → logprob: -13.505244255065918
    6. '	a' → logprob: -13.755244255065918
    7. ' b' → logprob: -16.005245208740234
    8. '    ' → logprob: -16.380245208740234
    9. ''a' → logprob: -16.630245208740234
    10. ')a' → logprob: -16.755245208740234

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018196819291915745
    2. ' ,' → logprob: -9.375182151794434
    3. ',p' → logprob: -10.500182151794434
    4. '   ' → logprob: -10.625182151794434
    5. ',b' → logprob: -10.875182151794434
    6. ')' → logprob: -11.125182151794434
    7. 'b' → logprob: -12.625182151794434
    8. '  ' → logprob: -13.375182151794434
    9. ' ' → logprob: -13.500182151794434
    10. ',
' → logprob: -13.625182151794434

Token 525: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004908377304673195
    2. ' p' → logprob: -7.625490665435791
    3. 'a' → logprob: -13.00049114227295
    4. 'b' → logprob: -15.00049114227295
    5. ' ' → logprob: -15.50049114227295
    6. '   ' → logprob: -16.750490188598633
    7. ')' → logprob: -17.125490188598633
    8. '
' → logprob: -17.125490188598633
    9. ' a' → logprob: -17.750490188598633
    10. '  ' → logprob: -18.375490188598633

Token 526: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.22702355682849884
    2. ')' → logprob: -1.6020236015319824
    3. '   ' → logprob: -6.727023601531982
    4. ')
' → logprob: -7.852023601531982
    5. ')

' → logprob: -11.602023124694824
    6. ' ' → logprob: -12.477023124694824
    7. 'def' → logprob: -12.727023124694824
    8. ' )
' → logprob: -13.477023124694824
    9. ',' → logprob: -13.727023124694824
    10. '  ' → logprob: -14.477023124694824

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1277359575033188
    2. 'value' → logprob: -2.1277358531951904
    3. ' value' → logprob: -7.2527360916137695
    4. ')' → logprob: -10.37773609161377
    5. '
' → logprob: -10.87773609161377
    6. '    
' → logprob: -11.37773609161377
    7. 'cnt' → logprob: -11.75273609161377
    8. ',value' → logprob: -12.25273609161377
    9. '	value' → logprob: -12.75273609161377
    10. '.value' → logprob: -12.75273609161377

Token 528: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' (adapté à ' value') → logprob: -0.008059990592300892
    2. '   ' → logprob: -4.883059978485107
    3. ' value' → logprob: -8.008060455322266
    4. 'cnt' → logprob: -9.758060455322266
    5. 'temp' → logprob: -10.258060455322266
    6. 'if' → logprob: -12.008060455322266
    7. '+' → logprob: -12.508060455322266
    8. 'tmp' → logprob: -12.633060455322266
    9. 'val' → logprob: -12.883060455322266
    10. 'count' → logprob: -13.008060455322266

Token 529: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003951594233512878
    2. ' =' → logprob: -5.753951549530029
    3. '=' → logprob: -7.378951549530029
    4. '1' → logprob: -9.503952026367188
    5. '   ' → logprob: -10.003952026367188
    6. ' ' → logprob: -11.378952026367188
    7. '0' → logprob: -12.253952026367188
    8. '  ' → logprob: -13.003952026367188
    9. '
' → logprob: -13.128952026367188
    10. ' +=' → logprob: -13.753952026367188

Token 530: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132619559764862
    2. '=' → logprob: -1.3132619857788086
    3. ' ' → logprob: -15.688261985778809
    4. '   ' → logprob: -16.313261032104492
    5. '  ' → logprob: -17.063261032104492
    6. ' =
' → logprob: -18.563261032104492
    7. ',' → logprob: -18.813261032104492
    8. '=
' → logprob: -19.063261032104492
    9. ')' → logprob: -19.813261032104492
    10. '=

' → logprob: -19.938261032104492

Token 531: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.00977698341012001
    2. ' comb' → logprob: -4.634777069091797
    3. 'com' → logprob: -11.509777069091797
    4. '   ' → logprob: -12.009777069091797
    5. 'combine' → logprob: -13.384777069091797
    6. '  ' → logprob: -13.759777069091797
    7. ' ' → logprob: -14.134777069091797
    8. '    ' → logprob: -15.259777069091797
    9. 'Comb' → logprob: -15.384777069091797
    10. 'comm' → logprob: -15.759777069091797

Token 532: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.75
    3. '(
' → logprob: -18.75
    4. 'F' → logprob: -19.625
    5. '```' → logprob: -20.875
    6. '	F' → logprob: -21.375
    7. ')' → logprob: -21.625
    8. ' (' → logprob: -22.0
    9. '<F' → logprob: -22.125
    10. '[F' → logprob: -22.25

Token 533: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02694605477154255
    2. ',F' → logprob: -3.7769460678100586
    3. '(F' → logprob: -5.901946067810059
    4. 'F' → logprob: -7.026946067810059
    5. ')' → logprob: -10.276946067810059
    6. ' ,' → logprob: -10.901946067810059
    7. ',
' → logprob: -11.776946067810059
    8. '(' → logprob: -12.526946067810059
    9. ' F' → logprob: -13.151946067810059
    10. '[' → logprob: -13.401946067810059

Token 534: ' Fin' (ID: 7772)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' → logprob: -0.010309260338544846
    2. ' Fin' → logprob: -4.760309219360352
    3. 'F' → logprob: -6.385309219360352
    4. 'Finite' → logprob: -12.385309219360352
    5. ' F' → logprob: -13.885309219360352
    6. ' ' → logprob: -14.635309219360352
    7. '   ' → logprob: -15.010309219360352
    8. 'fin' → logprob: -15.260309219360352
    9. 'Fen' → logprob: -15.385309219360352
    10. 'Fn' → logprob: -15.635309219360352

Token 535: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.7697225252486533e-06
    2. '(F' → logprob: -13.000003814697266
    3. 'V' → logprob: -14.875003814697266
    4. 'F' → logprob: -15.000003814697266
    5. '[F' → logprob: -15.750003814697266
    6. ',' → logprob: -15.875003814697266
    7. ',F' → logprob: -16.500003814697266
    8. 'p' → logprob: -16.500003814697266
    9. 'f' → logprob: -17.000003814697266
    10. '[' → logprob: -17.125003814697266

Token 536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.290784560609609e-05
    2. 'N' → logprob: -10.000072479248047
    3. ',N' → logprob: -10.750072479248047
    4. ' ,' → logprob: -12.250072479248047
    5. ' N' → logprob: -14.500072479248047
    6. '(N' → logprob: -15.125072479248047
    7. ',n' → logprob: -16.250072479248047
    8. ',
' → logprob: -16.500072479248047
    9. 'b' → logprob: -16.875072479248047
    10. '<|end|>' → logprob: -17.500072479248047

Token 537: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -8.537868779967539e-06
    2. ' N' → logprob: -12.000008583068848
    3. '   ' → logprob: -13.125008583068848
    4. 'n' → logprob: -16.12500762939453
    5. '	N' → logprob: -16.75000762939453
    6. '    ' → logprob: -17.25000762939453
    7. '  ' → logprob: -17.50000762939453
    8. ' ' → logprob: -17.50000762939453
    9. 'a' → logprob: -18.00000762939453
    10. 'b' → logprob: -18.12500762939453

Token 538: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001979378139367327
    2. ',b' → logprob: -8.750198364257812
    3. ' ,' → logprob: -10.375198364257812
    4. 'b' → logprob: -11.875198364257812
    5. '   ' → logprob: -15.125198364257812
    6. ',a' → logprob: -15.250198364257812
    7. 'a' → logprob: -15.375198364257812
    8. ' b' → logprob: -15.375198364257812
    9. ',
' → logprob: -16.250198364257812
    10. '```' → logprob: -16.375198364257812

Token 539: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.685467764735222e-05
    2. ' b' → logprob: -9.375086784362793
    3. 'a' → logprob: -13.375086784362793
    4. ' ' → logprob: -15.750086784362793
    5. '   ' → logprob: -16.12508773803711
    6. 'B' → logprob: -16.75008773803711
    7. 'N' → logprob: -16.87508773803711
    8. '_b' → logprob: -17.62508773803711
    9. '	b' → logprob: -17.87508773803711
    10. ',b' → logprob: -18.25008773803711

Token 540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.641841820150148e-05
    2. ' ,' → logprob: -10.75002670288086
    3. ',p' → logprob: -12.50002670288086
    4. '   ' → logprob: -14.75002670288086
    5. ')' → logprob: -15.50002670288086
    6. '```' → logprob: -16.12502670288086
    7. 'p' → logprob: -16.50002670288086
    8. ' ' → logprob: -16.62502670288086
    9. '‌,' → logprob: -17.12502670288086
    10. 'a' → logprob: -17.12502670288086

Token 541: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00028624574770219624
    2. 'a' → logprob: -8.500286102294922
    3. ' p' → logprob: -9.500286102294922
    4. ',' → logprob: -12.000286102294922
    5. 'b' → logprob: -13.500286102294922
    6. ' a' → logprob: -16.125286102294922
    7. ' ' → logprob: -16.500286102294922
    8. '   ' → logprob: -16.625286102294922
    9. '  ' → logprob: -16.875286102294922
    10. ',p' → logprob: -17.750286102294922

Token 542: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13556066155433655
    2. ')
' → logprob: -2.1355607509613037
    3. '   ' → logprob: -4.760560512542725
    4. ')
' → logprob: -10.385560989379883
    5. 'def' → logprob: -13.510560989379883
    6. ')

' → logprob: -13.760560989379883
    7. ',' → logprob: -15.760560989379883
    8. ')return' → logprob: -16.010560989379883
    9. '),' → logprob: -16.010560989379883
    10. ' ' → logprob: -16.135560989379883

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038378334138542414
    2. '
' → logprob: -5.753838062286377
    3. 'cnt' → logprob: -7.753838062286377
    4. '    
' → logprob: -8.753837585449219
    5. '	cnt' → logprob: -10.128837585449219
    6. '```' → logprob: -11.878837585449219
    7. 'return' → logprob: -12.378837585449219
    8. '
' → logprob: -12.628837585449219
    9. '    ' → logprob: -13.003837585449219
    10. '       ' → logprob: -13.128837585449219

Token 544: ' new' (ID: 620)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.16193009912967682
    2. '   ' → logprob: -1.9119300842285156
    3. ' cnt' → logprob: -7.536930084228516
    4. 'return' → logprob: -7.661930084228516
    5. '
' → logprob: -7.786930084228516
    6. '	cnt' → logprob: -8.536930084228516
    7. '    
' → logprob: -10.286930084228516
    8. '[cnt' → logprob: -10.536930084228516
    9. '(cnt' → logprob: -11.411930084228516
    10. ' return' → logprob: -11.911930084228516

Token 545: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -0.5599973201751709
    2. '_' → logprob: -0.9349973201751709
    3. '_value' → logprob: -4.05999755859375
    4. '_val' → logprob: -4.18499755859375
    5. '_count' → logprob: -6.80999755859375
    6. ' =' → logprob: -7.05999755859375
    7. 'cnt' → logprob: -7.30999755859375
    8. '_
' → logprob: -8.05999755859375
    9. '   ' → logprob: -8.43499755859375
    10. '_c' → logprob: -8.55999755859375

Token 546: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474498987197876
    2. ' =' → logprob: -0.974498987197876
    3. ' +=' → logprob: -8.099498748779297
    4. '+=' → logprob: -9.224498748779297
    5. '[' → logprob: -11.474498748779297
    6. ' ' → logprob: -12.724498748779297
    7. '+' → logprob: -13.224498748779297
    8. '   ' → logprob: -13.599498748779297
    9. '  ' → logprob: -13.599498748779297
    10. '	' → logprob: -14.224498748779297

Token 547: ' cnt' (ID: 27340)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.008831304498016834
    2. 'cnt' → logprob: -5.50883150100708
    3. ' (' → logprob: -5.88383150100708
    4. '(value' → logprob: -6.50883150100708
    5. '(c' → logprob: -8.883831024169922
    6. '(count' → logprob: -9.133831024169922
    7. 'multiply' → logprob: -9.758831024169922
    8. '[cnt' → logprob: -10.258831024169922
    9. ' cnt' → logprob: -10.633831024169922
    10. 'value' → logprob: -11.008831024169922

Token 548: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4741593599319458
    2. ' +' → logprob: -0.9741593599319458
    3. '   ' → logprob: -10.474159240722656
    4. '=' → logprob: -10.724159240722656
    5. '[' → logprob: -11.724159240722656
    6. '+
' → logprob: -11.849159240722656
    7. '*' → logprob: -12.599159240722656
    8. ' *' → logprob: -12.849159240722656
    9. '+=' → logprob: -13.224159240722656
    10. ' ' → logprob: -13.474159240722656

Token 549: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.47762539982795715
    2. ' value' → logprob: -1.3526253700256348
    3. 'multiply' → logprob: -2.6026253700256348
    4. '(value' → logprob: -3.4776253700256348
    5. ' multiply' → logprob: -4.602625370025635
    6. ' (' → logprob: -5.352625370025635
    7. '(' → logprob: -7.102625370025635
    8. '(m' → logprob: -7.602625370025635
    9. '((' → logprob: -10.227625846862793
    10. 'mul' → logprob: -10.602625846862793

Token 550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005032312474213541
    2. '2' → logprob: -7.625503063201904
    3. '(a' → logprob: -13.125503540039062
    4. '_and' → logprob: -13.250503540039062
    5. '(
' → logprob: -13.500503540039062
    6. 'and' → logprob: -13.625503540039062
    7. '_' → logprob: -13.875503540039062
    8. ' ' → logprob: -14.000503540039062
    9. '(' → logprob: -14.000503540039062
    10. ')' → logprob: -14.250503540039062

Token 551: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.1545807123184204
    2. '<|end|>' → logprob: -1.5295807123184204
    3. ' %' → logprob: -1.9045807123184204
    4. '
' → logprob: -2.029580593109131
    5. ')' → logprob: -2.904580593109131
    6. '   ' → logprob: -3.154580593109131
    7. '%' → logprob: -3.279580593109131
    8. ' +' → logprob: -4.029580593109131
    9. '*' → logprob: -4.154580593109131
    10. ' ' → logprob: -5.279580593109131

Token 552: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0002619318547658622
    2. ' value' → logprob: -8.250262260437012
    3. '(value' → logprob: -15.125262260437012
    4. '   ' → logprob: -16.125261306762695
    5. '	value' → logprob: -17.125261306762695
    6. '_value' → logprob: -17.125261306762695
    7. '
' → logprob: -17.375261306762695
    8. '$value' → logprob: -17.625261306762695
    9. '"value' → logprob: -17.750261306762695
    10. 'alue' → logprob: -17.750261306762695

Token 553: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.60414821645827e-06
    2. 'and' → logprob: -13.375004768371582
    3. '_and' → logprob: -13.500004768371582
    4. '1' → logprob: -13.625004768371582
    5. '_' → logprob: -16.250003814697266
    6. '```' → logprob: -16.375003814697266
    7. '   ' → logprob: -16.750003814697266
    8. 'And' → logprob: -17.000003814697266
    9. '``' → logprob: -17.750003814697266
    10. ' ' → logprob: -17.875003814697266

Token 554: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01984594762325287
    2. '%' → logprob: -4.019845962524414
    3. '
' → logprob: -7.519845962524414
    4. '<|end|>' → logprob: -7.769845962524414
    5. '   ' → logprob: -8.019845962524414
    6. ')' → logprob: -8.144845962524414
    7. ' ' → logprob: -10.394845962524414
    8. '%n' → logprob: -10.644845962524414
    9. ')%' → logprob: -11.269845962524414
    10. ' 
' → logprob: -11.394845962524414

Token 555: '   ' (ID: 271)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07556355744600296
    2. '%' → logprob: -2.700563669204712
    3. '   ' → logprob: -5.325563430786133
    4. '
' → logprob: -7.700563430786133
    5. ')' → logprob: -9.200563430786133
    6. ' ' → logprob: -9.950563430786133
    7. 'return' → logprob: -9.950563430786133
    8. ' return' → logprob: -10.575563430786133
    9. '<|end|>' → logprob: -10.825563430786133
    10. '%n' → logprob: -11.200563430786133

Token 556: ' return' (ID: 622)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20145104825496674
    2. ' %' → logprob: -1.951451063156128
    3. 'return' (adapté à ' return') → logprob: -3.951451063156128
    4. ' return' → logprob: -4.451450824737549
    5. '
' → logprob: -5.951450824737549
    6. ')' → logprob: -6.201450824737549
    7. ' new' → logprob: -6.201450824737549
    8. '   ' → logprob: -6.826450824737549
    9. 'new' → logprob: -6.951450824737549
    10. '%c' → logprob: -8.076451301574707

Token 557: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00033546582562848926
    2. ' new' → logprob: -8.000335693359375
    3. '(new' → logprob: -17.625335693359375
    4. '[new' → logprob: -18.375335693359375
    5. '
' → logprob: -18.625335693359375
    6. 'n' → logprob: -19.375335693359375
    7. '	new' → logprob: -19.625335693359375
    8. '新' → logprob: -20.375335693359375
    9. '   ' → logprob: -20.625335693359375
    10. 'New' → logprob: -20.625335693359375

Token 558: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -0.004207802005112171
    2. '_' → logprob: -5.504207611083984
    3. 'w' → logprob: -9.629207611083984
    4. '_ct' → logprob: -10.879207611083984
    5. 'cnt' → logprob: -11.004207611083984
    6. '_count' → logprob: -11.629207611083984
    7. 'ew' → logprob: -11.879207611083984
    8. '_c' → logprob: -12.754207611083984
    9. '_
' → logprob: -12.754207611083984
    10. '_cont' → logprob: -14.254207611083984

Token 559: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 560: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002777822664938867
    2. '100' → logprob: -8.750277519226074
    3. ' p' → logprob: -9.125277519226074
    4. '10' → logprob: -12.875277519226074
    5. '998' → logprob: -13.125277519226074
    6. '(p' → logprob: -13.375277519226074
    7. '   ' → logprob: -13.875277519226074
    8. '(' → logprob: -14.125277519226074
    9. '1' → logprob: -15.000277519226074
    10. ' ' → logprob: -15.125277519226074

Token 561: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 563: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.47412198781967163
    2. ' main' → logprob: -0.9741219878196716
    3. 'solve' → logprob: -10.849122047424316
    4. ' solve' → logprob: -11.224122047424316
    5. 'count' → logprob: -12.474122047424316
    6. 'calculate' → logprob: -12.849122047424316
    7. 'process' → logprob: -13.224122047424316
    8. 'solution' → logprob: -14.349122047424316
    9. '	main' → logprob: -14.474122047424316
    10. ' calculate' → logprob: -14.724122047424316

Token 564: '_process' (ID: 25444)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00038443657103925943
    2. '():
' → logprob: -7.875384330749512
    3. ' ():' → logprob: -12.750384330749512
    4. '():
' → logprob: -13.750384330749512
    5. '()' → logprob: -14.750384330749512
    6. '(' → logprob: -17.125385284423828
    7. '():

' → logprob: -18.125385284423828
    8. '_' → logprob: -18.500385284423828
    9. ':' → logprob: -18.750385284423828
    10. '()>' → logprob: -19.500385284423828

Token 565: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001516768941655755
    2. '():
' → logprob: -6.501516819000244
    3. ' ():' → logprob: -12.126516342163086
    4. '(p' → logprob: -12.501516342163086
    5. '()' → logprob: -13.376516342163086
    6. '(' → logprob: -13.376516342163086
    7. '(N' → logprob: -13.626516342163086
    8. '():
' → logprob: -14.626516342163086
    9. '(n' → logprob: -15.001516342163086
    10. '(K' → logprob: -16.876516342163086

Token 566: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6380414962768555
    2. 'p' → logprob: -1.1380414962768555
    3. 'N' → logprob: -2.6380414962768555
    4. ' p' → logprob: -2.7630414962768555
    5. ' N' → logprob: -4.2630414962768555
    6. 'n' → logprob: -6.5130414962768555
    7. ' n' → logprob: -8.013041496276855
    8. 'import' → logprob: -8.513041496276855
    9. 'def' → logprob: -9.138041496276855
    10. 'K' → logprob: -9.263041496276855

Token 567: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0389452762901783
    2. 'p' → logprob: -3.288945198059082
    3. 'n' → logprob: -7.413945198059082
    4. '   ' → logprob: -8.663945198059082
    5. 'K' → logprob: -10.163945198059082
    6. ' N' → logprob: -10.163945198059082
    7. 'import' → logprob: -10.288945198059082
    8. 'def' → logprob: -12.413945198059082
    9. 'MOD' → logprob: -12.663945198059082
    10. ' p' → logprob: -13.038945198059082

Token 568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012880703434348106
    2. ',K' → logprob: -9.250128746032715
    3. '=' → logprob: -11.500128746032715
    4. ' =' → logprob: -11.625128746032715
    5. ' ,' → logprob: -12.000128746032715
    6. ',p' → logprob: -12.875128746032715
    7. 'p' → logprob: -13.375128746032715
    8. ',
' → logprob: -13.500128746032715
    9. 'K' → logprob: -13.875128746032715
    10. ' K' → logprob: -15.250128746032715

Token 569: ' A' (ID: 355)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0006805036100558937
    2. ' K' → logprob: -7.375680446624756
    3. 'p' → logprob: -11.125680923461914
    4. 'A' → logprob: -11.125680923461914
    5. 'Q' → logprob: -12.125680923461914
    6. 'M' → logprob: -12.375680923461914
    7. ' ' → logprob: -12.625680923461914
    8. '   ' → logprob: -12.750680923461914
    9. '  ' → logprob: -13.000680923461914
    10. 'T' → logprob: -14.063180923461914

Token 570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.6087021473795176e-05
    2. ',K' → logprob: -10.500045776367188
    3. 'K' → logprob: -11.625045776367188
    4. ' ,' → logprob: -11.750045776367188
    5. '=' → logprob: -14.125045776367188
    6. '_,' → logprob: -15.000045776367188
    7. ' =' → logprob: -15.750045776367188
    8. ' K' → logprob: -16.875045776367188
    9. ',
' → logprob: -16.875045776367188
    10. '‌,' → logprob: -17.250045776367188

Token 571: ' B' (ID: 418)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0305868461728096
    2. 'B' → logprob: -3.5305869579315186
    3. ' K' → logprob: -7.1555867195129395
    4. ' B' → logprob: -10.530587196350098
    5. ' ' → logprob: -11.155587196350098
    6. 'p' → logprob: -12.405587196350098
    7. '   ' → logprob: -13.530587196350098
    8. '_K' → logprob: -13.655587196350098
    9. '```' → logprob: -13.655587196350098
    10. 'M' → logprob: -13.968087196350098

Token 572: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007682580966502428
    2. '=' → logprob: -5.132682800292969
    3. ' =' → logprob: -6.382682800292969
    4. ',K' → logprob: -9.882682800292969
    5. ' ,' → logprob: -11.632682800292969
    6. 'K' → logprob: -13.882682800292969
    7. '   ' → logprob: -14.757682800292969
    8. ' ' → logprob: -15.382682800292969
    9. ' K' → logprob: -16.38268280029297
    10. ',k' → logprob: -16.38268280029297

Token 573: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.3226136767771095e-05
    2. 'p' → logprob: -10.375042915344238
    3. ' K' → logprob: -12.125042915344238
    4. 'C' → logprob: -12.625042915344238
    5. '_K' → logprob: -13.250042915344238
    6. '_' → logprob: -15.500042915344238
    7. 'k' → logprob: -15.500042915344238
    8. 'Q' → logprob: -16.000043869018555
    9. 'M' → logprob: -16.000043869018555
    10. 'P' → logprob: -16.375043869018555

Token 574: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31328853964805603
    2. ' =' → logprob: -1.3132885694503784
    3. ',' → logprob: -10.563288688659668
    4. '=input' → logprob: -14.563288688659668
    5. ' ' → logprob: -16.18828773498535
    6. '   ' → logprob: -16.31328773498535
    7. ')' → logprob: -16.68828773498535
    8. '  ' → logprob: -16.93828773498535
    9. ' =
' → logprob: -17.56328773498535
    10. '    ' → logprob: -17.56328773498535

Token 575: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.004665441811084747
    2. ' read' → logprob: -5.379665374755859
    3. 'map' → logprob: -10.12966537475586
    4. ' map' → logprob: -13.00466537475586
    5. '	read' → logprob: -13.12966537475586
    6. '   ' → logprob: -15.00466537475586
    7. 're' → logprob: -15.75466537475586
    8. '  ' → logprob: -16.00466537475586
    9. 'tuple' → logprob: -16.25466537475586
    10. 'list' → logprob: -16.37966537475586

Token 576: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006564391660504043
    2. '()
' → logprob: -7.375656604766846
    3. '().' → logprob: -11.875656127929688
    4. ' ()' → logprob: -12.000656127929688
    5. '()
' → logprob: -12.500656127929688
    6. '_input' → logprob: -12.625656127929688
    7. '()\' → logprob: -12.875656127929688
    8. 'int' → logprob: -13.500656127929688
    9. '()]' → logprob: -13.875656127929688
    10. '()>' → logprob: -14.000656127929688

Token 577: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3869072496891022
    2. '()' → logprob: -1.1369072198867798
    3. '()
' → logprob: -10.636907577514648
    4. '()

' → logprob: -12.011907577514648
    5. '()\' → logprob: -12.761907577514648
    6. '
' → logprob: -13.261907577514648
    7. '()`' → logprob: -14.886907577514648
    8. '(
' → logprob: -15.261907577514648
    9. '   ' → logprob: -15.386907577514648
    10. '(' → logprob: -15.386907577514648

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007215541787445545
    2. '
' → logprob: -5.50721549987793
    3. 'p' → logprob: -6.25721549987793
    4. '```' → logprob: -7.25721549987793
    5. '    
' → logprob: -8.25721549987793
    6. 'cnt' → logprob: -9.25721549987793
    7. ' p' → logprob: -9.63221549987793
    8. '  ' → logprob: -10.25721549987793
    9. '  
' → logprob: -11.13221549987793
    10. ' ' → logprob: -11.38221549987793

Token 579: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0301484614610672
    2. 'F' → logprob: -3.530148506164551
    3. 'cnt' → logprob: -8.53014850616455
    4. '   ' → logprob: -8.90514850616455
    5. 'MOD' → logprob: -10.03014850616455
    6. 'mod' → logprob: -11.03014850616455
    7. ' p' → logprob: -13.15514850616455
    8. 'P' → logprob: -14.03014850616455
    9. 'result' → logprob: -15.40514850616455
    10. ' F' → logprob: -15.40514850616455

Token 580: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692873179912567
    2. '=' → logprob: -2.1269288063049316
    3. ' =
' → logprob: -14.751928329467773
    4. ',' → logprob: -15.376928329467773
    5. ' ' → logprob: -16.626928329467773
    6. '  ' → logprob: -17.501928329467773
    7. '＝' → logprob: -18.376928329467773
    8. ' =
' → logprob: -18.876928329467773
    9. '=
' → logprob: -18.876928329467773
    10. ':' → logprob: -19.501928329467773

Token 581: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20184841752052307
    2. '100' → logprob: -1.9518483877182007
    3. '998' → logprob: -3.2018485069274902
    4. '1' → logprob: -10.451848030090332
    5. ' ' → logprob: -10.576848030090332
    6. '(' → logprob: -10.701848030090332
    7. '999' → logprob: -13.326848030090332
    8. 'int' → logprob: -13.826848030090332
    9. '123' → logprob: -14.201848030090332
    10. 'pow' → logprob: -14.326848030090332

Token 582: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.33433234691619873
    2. '998' → logprob: -1.8343323469161987
    3. '100' → logprob: -2.0843324661254883
    4. '(' → logprob: -9.959332466125488
    5. '1' → logprob: -11.209332466125488
    6. 'pow' → logprob: -12.834332466125488
    7. '999' → logprob: -13.084332466125488
    8. '123' → logprob: -13.334332466125488
    9. '300' → logprob: -13.459332466125488
    10. ' ' → logprob: -13.584332466125488

Token 583: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.000000953674316
    3. '247' → logprob: -16.500001907348633
    4. '245' → logprob: -16.500001907348633
    5. '243' → logprob: -16.750001907348633
    6. '457' → logprob: -17.000001907348633
    7. '254' → logprob: -18.125001907348633
    8. '242' → logprob: -18.250001907348633
    9. '344' → logprob: -18.875001907348633
    10. '24' → logprob: -19.000001907348633

Token 584: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -2.7729658540920354e-05
    2. '853' → logprob: -10.500027656555176
    3. '3' → logprob: -16.250028610229492
    4. '857' → logprob: -17.125028610229492
    5. '7' → logprob: -17.625028610229492
    6. '357' → logprob: -17.875028610229492
    7. '```' → logprob: -18.125028610229492
    8. 'p' → logprob: -18.625028610229492
    9. '53' → logprob: -19.500028610229492
    10. 'a' → logprob: -19.625028610229492

Token 585: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07509159296751022
    2. 'F' → logprob: -2.950091600418091
    3. '
' → logprob: -3.950091600418091
    4. 'cnt' → logprob: -7.950091361999512
    5. '    
' → logprob: -8.325091361999512
    6. '```' → logprob: -9.825091361999512
    7. ' F' → logprob: -10.200091361999512
    8. '
' → logprob: -10.825091361999512
    9. '``' → logprob: -11.950091361999512
    10. '  ' → logprob: -11.950091361999512

Token 586: '   ' (ID: 271)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.10143928974866867
    2. '   ' → logprob: -2.7264392375946045
    3. 'cnt' → logprob: -3.4764392375946045
    4. ' F' → logprob: -9.976439476013184
    5. ' cnt' → logprob: -10.976439476013184
    6. '```' → logprob: -11.226439476013184
    7. '  ' → logprob: -12.726439476013184
    8. ' ' → logprob: -12.976439476013184
    9. '	cnt' → logprob: -12.976439476013184
    10. 'N' → logprob: -13.101439476013184

Token 587: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -1.3856492842023727e-06
    2. ' F' → logprob: -14.625000953674316
    3. 'if' → logprob: -14.875000953674316
    4. 'cnt' → logprob: -15.000000953674316
    5. '   ' → logprob: -16.000001907348633
    6. '```' → logprob: -17.500001907348633
    7. 'result' → logprob: -17.625001907348633
    8. '    
' → logprob: -18.125001907348633
    9. '_F' → logprob: -18.250001907348633
    10. ' ' → logprob: -18.500001907348633

Token 588: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. '  ' → logprob: -15.82641315460205
    4. ' ' → logprob: -16.951414108276367
    5. '=create' → logprob: -17.076414108276367
    6. ',' → logprob: -17.576414108276367
    7. ' =
' → logprob: -18.076414108276367
    8. '   ' → logprob: -18.451414108276367
    9. '＝' → logprob: -18.451414108276367
    10. '=f' → logprob: -19.701414108276367

Token 589: ' get' (ID: 717)
  Prédit: 'fib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fib' → logprob: -0.44128626585006714
    2. 'get' → logprob: -1.066286325454712
    3. 'create' → logprob: -4.566286087036133
    4. ' get' → logprob: -6.816286087036133
    5. ' fib' → logprob: -6.941286087036133
    6. ' create' → logprob: -10.691286087036133
    7. 'compute' → logprob: -13.066286087036133
    8. 'fiber' → logprob: -13.253786087036133
    9. 'fab' → logprob: -13.378786087036133
    10. 'generate' → logprob: -13.378786087036133

Token 590: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.011079183779656887
    2. 'factor' → logprob: -4.51107931137085
    3. 'Factor' → logprob: -11.261078834533691
    4. '_fact' → logprob: -12.636078834533691
    5. 'f' → logprob: -12.761078834533691
    6. 'fact' → logprob: -13.011078834533691
    7. 'N' → logprob: -13.386078834533691
    8. 'F' → logprob: -13.386078834533691
    9. '
' → logprob: -14.011078834533691
    10. ' factorial' → logprob: -14.136078834533691

Token 591: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.06429161876440048
    2. 'als' → logprob: -2.8142917156219482
    3. '(N' → logprob: -6.689291477203369
    4. 'inals' → logprob: -7.939291477203369
    5. 'o' → logprob: -8.689291954040527
    6. 'icals' → logprob: -8.939291954040527
    7. ' factorial' → logprob: -9.689291954040527
    8. 'ow' → logprob: -9.814291954040527
    9. 'act' → logprob: -10.314291954040527
    10. 'ivals' → logprob: -10.439291954040527

Token 592: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00014048899174667895
    2. '(' → logprob: -8.875140190124512
    3. ' (' → logprob: -14.875140190124512
    4. 'N' → logprob: -15.500140190124512
    5. '(n' → logprob: -17.125141143798828
    6. '(
' → logprob: -17.500141143798828
    7. '((' → logprob: -18.125141143798828
    8. ' ' → logprob: -19.125141143798828
    9. '(F' → logprob: -19.375141143798828
    10. '   ' → logprob: -19.500141143798828

Token 593: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002338144404347986
    2. ',p' → logprob: -8.37523365020752
    3. ' ,' → logprob: -12.75023365020752
    4. 'p' → logprob: -15.37523365020752
    5. '   ' → logprob: -17.000234603881836
    6. ',
' → logprob: -17.000234603881836
    7. ' ' → logprob: -17.875234603881836
    8. '```' → logprob: -18.125234603881836
    9. '+' → logprob: -18.250234603881836
    10. ')' → logprob: -19.250234603881836

Token 594: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001398929744027555
    2. ' p' → logprob: -8.875140190124512
    3. '<p' → logprob: -17.875139236450195
    4. ' ' → logprob: -19.000139236450195
    5. '998' → logprob: -19.000139236450195
    6. ')' → logprob: -19.125139236450195
    7. ')p' → logprob: -19.625139236450195
    8. '   ' → logprob: -19.625139236450195
    9. '	p' → logprob: -20.625139236450195
    10. '
' → logprob: -20.875139236450195

Token 595: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931594014167786
    2. ')
' → logprob: -0.6931594014167786
    3. ')
' → logprob: -11.443159103393555
    4. ')

' → logprob: -13.568159103393555
    5. ' )
' → logprob: -16.693159103393555
    6. '),' → logprob: -17.068159103393555
    7. ' )' → logprob: -17.568159103393555
    8. '   ' → logprob: -17.943159103393555
    9. ')#' → logprob: -18.318159103393555
    10. ')p' → logprob: -18.943159103393555

Token 596: '   ' (ID: 271)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' → logprob: -0.19041882455348969
    2. '   ' → logprob: -1.8154188394546509
    3. ' Fin' → logprob: -4.565418720245361
    4. 'F' → logprob: -8.94041919708252
    5. ' ' → logprob: -10.69041919708252
    6. '  ' → logprob: -10.69041919708252
    7. 'Finite' → logprob: -10.94041919708252
    8. '<|end|>' → logprob: -12.19041919708252
    9. '```' → logprob: -13.31541919708252
    10. '
' → logprob: -13.56541919708252

Token 597: ' Fin' (ID: 7772)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' (adapté à ' Fin') → logprob: -0.0026099022943526506
    2. ' Fin' → logprob: -6.002609729766846
    3. 'F' → logprob: -9.502610206604004
    4. '   ' → logprob: -9.877610206604004
    5. 'Finite' → logprob: -12.377610206604004
    6. 'fin' → logprob: -12.752610206604004
    7. ' fin' → logprob: -15.252610206604004
    8. ' ' → logprob: -15.502610206604004
    9. 'FIN' → logprob: -16.127609252929688
    10. 'Finish' → logprob: -16.252609252929688

Token 598: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.8624639324116288e-06
    2. ' =' → logprob: -14.500001907348633
    3. '=' → logprob: -15.000001907348633
    4. 'V' → logprob: -15.625001907348633
    5. '   ' → logprob: -15.750001907348633
    6. 'iv' → logprob: -16.062501907348633
    7. 'inv' → logprob: -16.375001907348633
    8. ' v' → logprob: -16.437501907348633
    9. '```' → logprob: -16.875001907348633
    10. 'в' → logprob: -16.937501907348633

Token 599: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '＝' → logprob: -17.561967849731445
    4. ',' → logprob: -17.936967849731445
    5. '=
' → logprob: -19.061967849731445
    6. ')' → logprob: -19.186967849731445
    7. '<|end|>' → logprob: -19.311967849731445
    8. ' ' → logprob: -19.436967849731445
    9. '=f' → logprob: -19.936967849731445
    10. '=

' → logprob: -20.311967849731445

Token 600: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.03393843397498131
    2. ' get' → logprob: -3.408938407897949
    3. 'fin' → logprob: -8.28393840789795
    4. ' fin' → logprob: -10.28393840789795
    5. '(get' → logprob: -12.65893840789795
    6. '=get' → logprob: -14.53393840789795
    7. '   ' → logprob: -14.90893840789795
    8. '.get' → logprob: -15.15893840789795
    9. '	get' → logprob: -15.15893840789795
    10. 'f' → logprob: -15.15893840789795

Token 601: '_inverse' (ID: 188797)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.4467129111289978
    2. 'inv' → logprob: -1.3217129707336426
    3. '_inverse' → logprob: -2.4467129707336426
    4. '(F' → logprob: -5.321712970733643
    5. '_inv' → logprob: -7.196712970733643
    6. 'in' → logprob: -7.696712970733643
    7. 'F' → logprob: -7.946712970733643
    8. 'fin' → logprob: -8.071712493896484
    9. '_f' → logprob: -9.946712493896484
    10. 'Inverse' → logprob: -10.446712493896484

Token 602: '_factor' (ID: 43757)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.12849849462509155
    2. '_factor' → logprob: -2.1284985542297363
    3. '(F' → logprob: -7.128498554229736
    4. 'Factor' → logprob: -7.378498554229736
    5. 'f' → logprob: -10.003498077392578
    6. ' factorial' → logprob: -10.253498077392578
    7. '_f' → logprob: -10.503498077392578
    8. 'fact' → logprob: -11.378498077392578
    9. 'F' → logprob: -11.628498077392578
    10. '_F' → logprob: -12.003498077392578

Token 603: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.0010930694406852126
    2. '(F' → logprob: -7.376092910766602
    3. 'actor' → logprob: -9.251092910766602
    4. 'F' → logprob: -9.626092910766602
    5. 'ial' → logprob: -9.751092910766602
    6. 'icals' → logprob: -10.001092910766602
    7. 'act' → logprob: -10.751092910766602
    8. 'als' → logprob: -10.751092910766602
    9. 'f' → logprob: -10.876092910766602
    10. '   ' → logprob: -11.001092910766602

Token 604: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: 0.0
    2. ' (' → logprob: -19.375
    3. 'F' → logprob: -20.25
    4. '(' → logprob: -20.25
    5. '```' → logprob: -20.375
    6. '(
' → logprob: -20.75
    7. '(f' → logprob: -21.25
    8. '((' → logprob: -22.125
    9. '(A' → logprob: -22.625
    10. '[F' → logprob: -23.0

Token 605: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.093505099765025e-05
    2. ',p' → logprob: -11.500020980834961
    3. ' ,' → logprob: -11.625020980834961
    4. ',F' → logprob: -14.625020980834961
    5. ')' → logprob: -14.750020980834961
    6. 'p' → logprob: -15.125020980834961
    7. ',
' → logprob: -15.375020980834961
    8. '‌,' → logprob: -16.25002098083496
    9. '```' → logprob: -16.62502098083496
    10. '<|end|>' → logprob: -17.00002098083496

Token 606: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007606747094541788
    2. ' p' → logprob: -4.8826069831848145
    3. '   ' → logprob: -14.757606506347656
    4. ' ' → logprob: -16.132606506347656
    5. '	p' → logprob: -16.882606506347656
    6. '<p' → logprob: -17.507606506347656
    7. '
' → logprob: -18.007606506347656
    8. '  ' → logprob: -18.257606506347656
    9. ')' → logprob: -18.882606506347656
    10. '(p' → logprob: -19.507606506347656

Token 607: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26563677191734314
    2. ',' → logprob: -1.6406368017196655
    3. ')
' → logprob: -3.265636682510376
    4. '   ' → logprob: -7.390636920928955
    5. ')

' → logprob: -7.890636920928955
    6. 'def' → logprob: -9.515636444091797
    7. ',p' → logprob: -9.640636444091797
    8. ')
' → logprob: -10.515636444091797
    9. ' ,' → logprob: -10.640636444091797
    10. '),' → logprob: -11.515636444091797

Token 608: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001727776019833982
    2. 'cnt' → logprob: -6.37672758102417
    3. '```' → logprob: -11.001728057861328
    4. '	cnt' → logprob: -12.126728057861328
    5. ' cnt' → logprob: -13.501728057861328
    6. '    
' → logprob: -14.626728057861328
    7. '
' → logprob: -14.876728057861328
    8. '  ' → logprob: -14.876728057861328
    9. '``' → logprob: -15.376728057861328
    10. '   ' → logprob: -15.501728057861328

Token 609: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -3.7697225252486533e-06
    2. '   ' → logprob: -12.500003814697266
    3. ' cnt' → logprob: -16.750003814697266
    4. 'counter' → logprob: -18.375003814697266
    5. '	cnt' → logprob: -18.625003814697266
    6. 'count' → logprob: -18.750003814697266
    7. '    
' → logprob: -19.000003814697266
    8. '```' → logprob: -19.625003814697266
    9. '
' → logprob: -20.250003814697266
    10. 'ct' → logprob: -22.000003814697266

Token 610: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484937667847
    2. ' =' → logprob: -0.6931484937667847
    3. ',' → logprob: -14.193148612976074
    4. '   ' → logprob: -15.193148612976074
    5. '0' → logprob: -15.943148612976074
    6. ' ' → logprob: -15.943148612976074
    7. '<|end|>' → logprob: -16.943147659301758
    8. ' =
' → logprob: -17.193147659301758
    9. '[' → logprob: -17.943147659301758
    10. ')' → logprob: -18.068147659301758

Token 611: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001097417771234177
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -14.875109672546387
    4. '1' → logprob: -15.125109672546387
    5. '۰' → logprob: -16.875110626220703
    6. '  ' → logprob: -17.875110626220703
    7. '
' → logprob: -17.937610626220703
    8. '```' → logprob: -18.062610626220703
    9. ' ' → logprob: -18.125110626220703
    10. '０' → logprob: -18.562610626220703

Token 612: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '1' → logprob: -18.000001907348633
    4. '۰' → logprob: -18.125001907348633
    5. '０' → logprob: -18.875001907348633
    6. '```' → logprob: -19.625001907348633
    7. '   ' → logprob: -20.625001907348633
    8. 'int' → logprob: -20.687501907348633
    9. '(' → logprob: -20.875001907348633
    10. ' ' → logprob: -20.937501907348633

Token 613: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.063349150121212
    2. '
' → logprob: -2.8133492469787598
    3. '    
' → logprob: -7.43834924697876
    4. ' for' → logprob: -8.063348770141602
    5. '<|end|>' → logprob: -8.438348770141602
    6. '	for' → logprob: -9.563348770141602
    7. 'for' → logprob: -9.563348770141602
    8. '```' → logprob: -10.438348770141602
    9. '
' → logprob: -10.563348770141602
    10. '	
' → logprob: -10.938348770141602

Token 614: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021538303699344397
    2. ' for' → logprob: -6.6271538734436035
    3. 'for' → logprob: -7.1271538734436035
    4. '```' → logprob: -11.502153396606445
    5. '
' → logprob: -12.127153396606445
    6. '	for' → logprob: -12.377153396606445
    7. '    
' → logprob: -12.877153396606445
    8. 'def' → logprob: -13.752153396606445
    9. '       ' → logprob: -15.127153396606445
    10. '  ' → logprob: -15.377153396606445

Token 615: ' upper' (ID: 13057)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027391354087740183
    2. '   ' → logprob: -6.002738952636719
    3. ' for' → logprob: -8.252738952636719
    4. '	for' → logprob: -13.377738952636719
    5. '```' → logprob: -14.002738952636719
    6. ' ' → logprob: -14.877738952636719
    7. '  ' → logprob: -16.62773895263672
    8. '
' → logprob: -16.75273895263672
    9. 'a' → logprob: -16.87773895263672
    10. '    
' → logprob: -17.50273895263672

Token 616: '_a' (ID: 10852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8759790062904358
    2. '_limit' → logprob: -1.000978946685791
    3. '_bound' → logprob: -1.750978946685791
    4. ' =' → logprob: -3.625978946685791
    5. '_a' → logprob: -4.750978946685791
    6. '=' → logprob: -5.625978946685791
    7. 'limit' → logprob: -6.500978946685791
    8. '_i' → logprob: -8.25097942352295
    9. 'bound' → logprob: -8.37597942352295
    10. ' _' → logprob: -8.37597942352295

Token 617: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08914852142333984
    2. '=' → logprob: -2.46414852142334
    3. '_' → logprob: -9.21414852142334
    4. ',' → logprob: -9.71414852142334
    5. '_range' → logprob: -11.21414852142334
    6. '_limit' → logprob: -11.83914852142334
    7. 'range' → logprob: -11.96414852142334
    8. '   ' → logprob: -12.33914852142334
    9. ' _' → logprob: -12.83914852142334
    10. ' ' → logprob: -13.08914852142334

Token 618: ' min' (ID: 1349)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.706686690449715e-05
    2. 'K' → logprob: -10.500066757202148
    3. ' N' → logprob: -10.625066757202148
    4. 'min' → logprob: -11.375066757202148
    5. '=' → logprob: -14.000066757202148
    6. '(N' → logprob: -14.250066757202148
    7. '	N' → logprob: -14.875066757202148
    8. '
' → logprob: -15.125066757202148
    9. '(' → logprob: -15.375066757202148
    10. '   ' → logprob: -15.500066757202148

Token 619: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.006164243910461664
    2. '(A' → logprob: -5.756164073944092
    3. '(K' → logprob: -6.006164073944092
    4. '(B' → logprob: -7.631164073944092
    5. '(' → logprob: -10.38116455078125
    6. 'N' → logprob: -13.88116455078125
    7. 'A' → logprob: -14.25616455078125
    8. '((' → logprob: -15.00616455078125
    9. '(
' → logprob: -15.75616455078125
    10. ' (' → logprob: -15.88116455078125

Token 620: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013647648505866528
    2. '+' → logprob: -4.763647556304932
    3. ' +' → logprob: -5.638647556304932
    4. ' ,' → logprob: -6.763647556304932
    5. ',K' → logprob: -8.51364803314209
    6. '   ' → logprob: -9.88864803314209
    7. ',A' → logprob: -10.88864803314209
    8. ',
' → logprob: -11.51364803314209
    9. '+,' → logprob: -12.01364803314209
    10. ',N' → logprob: -12.01364803314209

Token 621: ' ' (ID: 220)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.07797554135322571
    2. 'A' → logprob: -3.3279755115509033
    3. ',' → logprob: -3.5779755115509033
    4. '1' → logprob: -5.702975749969482
    5. '(K' → logprob: -5.827975749969482
    6. ' K' → logprob: -6.702975749969482
    7. '(A' → logprob: -6.702975749969482
    8. ',K' → logprob: -6.702975749969482
    9. '(' → logprob: -7.827975749969482
    10. ' (' → logprob: -8.327975273132324

Token 622: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005377710331231356
    2. 'K' → logprob: -5.380377769470215
    3. 'A' → logprob: -8.005377769470215
    4. '(K' → logprob: -8.755377769470215
    5. '(' → logprob: -8.880377769470215
    6. '(A' → logprob: -10.130377769470215
    7. ' ' → logprob: -10.255377769470215
    8. 'N' → logprob: -11.130377769470215
    9. '(N' → logprob: -11.755377769470215
    10. ',' → logprob: -12.255377769470215

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00198656739667058
    2. ')' → logprob: -6.251986503601074
    3. ' ,' → logprob: -10.251986503601074
    4. '   ' → logprob: -11.376986503601074
    5. ',
' → logprob: -12.376986503601074
    6. ',)' → logprob: -12.876986503601074
    7. '<|end|>' → logprob: -13.001986503601074
    8. ' )' → logprob: -14.001986503601074
    9. ')
' → logprob: -15.751986503601074
    10. ',a' → logprob: -15.876986503601074

Token 624: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.021645043045282364
    2. '(K' → logprob: -3.8966450691223145
    3. 'calc' → logprob: -8.021644592285156
    4. ' (' → logprob: -8.771644592285156
    5. ' K' → logprob: -8.771644592285156
    6. '(calc' → logprob: -9.646644592285156
    7. '(' → logprob: -9.646644592285156
    8. 'N' → logprob: -9.896644592285156
    9. '((' → logprob: -10.021644592285156
    10. 'max' → logprob: -10.021644592285156

Token 625: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011665302328765392
    2. ')
' → logprob: -4.761665344238281
    3. '+' → logprob: -6.261665344238281
    4. ' +' → logprob: -7.386665344238281
    5. '   ' → logprob: -7.761665344238281
    6. '):
' → logprob: -10.136665344238281
    7. '):' → logprob: -10.761665344238281
    8. ' )' → logprob: -11.511665344238281
    9. ',' → logprob: -12.011665344238281
    10. ')+' → logprob: -12.011665344238281

Token 626: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0006472678505815566
    2. 'B' → logprob: -7.625647068023682
    3. ' A' → logprob: -8.87564754486084
    4. 'calc' → logprob: -12.00064754486084
    5. '   ' → logprob: -12.25064754486084
    6. 'min' → logprob: -12.50064754486084
    7. 'max' → logprob: -13.50064754486084
    8. '	A' → logprob: -13.87564754486084
    9. ' ' → logprob: -14.12564754486084
    10. '  ' → logprob: -14.75064754486084

Token 627: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.588623583316803
    2. ' +' → logprob: -0.963623583316803
    3. ')' → logprob: -3.088623523712158
    4. ')
' → logprob: -4.088623523712158
    5. '   ' → logprob: -6.963623523712158
    6. ')+' → logprob: -9.463624000549316
    7. ' )
' → logprob: -11.338624000549316
    8. ')

' → logprob: -11.338624000549316
    9. ' )' → logprob: -11.963624000549316
    10. '+
' → logprob: -11.963624000549316

Token 628: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007878457196056843
    2. '2' → logprob: -5.007878303527832
    3. ' ' → logprob: -6.757878303527832
    4. '   ' → logprob: -14.882878303527832
    5. '  ' → logprob: -15.882878303527832
    6. '
' → logprob: -16.13287925720215
    7. '3' → logprob: -16.75787925720215
    8. '```' → logprob: -17.50787925720215
    9. '+' → logprob: -17.63287925720215
    10. ' ' → logprob: -17.82037925720215

Token 629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005261510610580444
    2. '2' → logprob: -5.255261421203613
    3. ' ' → logprob: -10.505261421203613
    4. '   ' → logprob: -15.755261421203613
    5. '3' → logprob: -16.75526237487793
    6. '  ' → logprob: -16.88026237487793
    7. '
' → logprob: -17.13026237487793
    8. '10' → logprob: -17.63026237487793
    9. '```' → logprob: -17.75526237487793
    10. '１' → logprob: -17.88026237487793

Token 630: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4742514491081238
    2. ')' → logprob: -0.9742514491081238
    3. '   ' → logprob: -9.349251747131348
    4. ')
' → logprob: -9.724251747131348
    5. ')

' → logprob: -10.724251747131348
    6. '):
' → logprob: -12.849251747131348
    7. '):' → logprob: -13.974251747131348
    8. ' )
' → logprob: -14.099251747131348
    9. '
' → logprob: -14.724251747131348
    10. ' )' → logprob: -15.474251747131348

Token 631: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03149626776576042
    2. '
' → logprob: -3.781496286392212
    3. '    
' → logprob: -5.781496047973633
    4. 'for' → logprob: -5.906496047973633
    5. ' for' → logprob: -6.156496047973633
    6. '	for' → logprob: -8.781496047973633
    7. '```' → logprob: -10.031496047973633
    8. '  
' → logprob: -10.156496047973633
    9. '	
' → logprob: -10.781496047973633
    10. '   
' → logprob: -11.656496047973633

Token 632: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20476804673671722
    2. '   ' → logprob: -1.7047680616378784
    3. ' for' → logprob: -5.704768180847168
    4. 'a' → logprob: -11.329768180847168
    5. '	for' → logprob: -12.204768180847168
    6. '```' → logprob: -14.204768180847168
    7. '    
' → logprob: -14.454768180847168
    8. '
' → logprob: -14.704768180847168
    9. ' ' → logprob: -15.204768180847168
    10. '  ' → logprob: -16.70476722717285

Token 633: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519642114639282
    2. ' a' → logprob: -1.5019642114639282
    3. '_a' → logprob: -10.501964569091797
    4. '	a' → logprob: -12.001964569091797
    5. '   ' → logprob: -14.876964569091797
    6. ' ' → logprob: -15.376964569091797
    7. ''a' → logprob: -15.876964569091797
    8. 'A' → logprob: -16.001964569091797
    9. 'i' → logprob: -16.501964569091797
    10. '>a' → logprob: -16.501964569091797

Token 634: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08930747956037521
    2. 'in' → logprob: -2.4643075466156006
    3. ' ' → logprob: -8.08930778503418
    4. '	in' → logprob: -10.33930778503418
    5. 'space' → logprob: -12.21430778503418
    6. '_' → logprob: -12.71430778503418
    7. 'a' → logprob: -13.08930778503418
    8. 'range' → logprob: -13.33930778503418
    9. ' _' → logprob: -13.33930778503418
    10. ' ' → logprob: -13.58930778503418

Token 635: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150413408875465
    2. ' range' → logprob: -4.018150329589844
    3. '	range' → logprob: -15.893150329589844
    4. ' ' → logprob: -16.143150329589844
    5. '(range' → logprob: -16.518150329589844
    6. 'upper' → logprob: -16.643150329589844
    7. '0' → logprob: -16.893150329589844
    8. '   ' → logprob: -17.518150329589844
    9. '_range' → logprob: -17.893150329589844
    10. ' xrange' → logprob: -18.393150329589844

Token 636: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. '(
' → logprob: -13.500001907348633
    3. '(int' → logprob: -15.125001907348633
    4. ' (' → logprob: -15.250001907348633
    5. '(up' → logprob: -16.750001907348633
    6. 'upper' → logprob: -16.875001907348633
    7. '0' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '(

' → logprob: -18.625001907348633
    10. '((' → logprob: -18.750001907348633

Token 637: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.0003187810070812702
    2. '0' → logprob: -8.37531852722168
    3. ' upper' → logprob: -9.37531852722168
    4. 'int' → logprob: -12.87531852722168
    5. 'up' → logprob: -15.12531852722168
    6. '   ' → logprob: -15.12531852722168
    7. ' ' → logprob: -16.25031852722168
    8. '1' → logprob: -16.25031852722168
    9. 'upp' → logprob: -16.37531852722168
    10. 'uppercase' → logprob: -17.62531852722168

Token 638: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0010551994200795889
    2. '(' → logprob: -7.0010552406311035
    3. '(a' → logprob: -9.751054763793945
    4. 'a' → logprob: -9.751054763793945
    5. ')' → logprob: -11.626054763793945
    6. '   ' → logprob: -12.251054763793945
    7. '(_' → logprob: -12.376054763793945
    8. '_' → logprob: -12.626054763793945
    9. '(
' → logprob: -13.001054763793945
    10. ' ' → logprob: -13.626054763793945

Token 639: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006750073749572039
    2. '):
' → logprob: -5.006750106811523
    3. ' ):' → logprob: -10.631750106811523
    4. ':' → logprob: -11.881750106811523
    5. '():' → logprob: -13.631750106811523
    6. '):
' → logprob: -13.631750106811523
    7. ')' → logprob: -14.256750106811523
    8. '):

' → logprob: -15.881750106811523
    9. '   ' → logprob: -16.006750106811523
    10. ' ):
' → logprob: -16.256750106811523

Token 640: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009336133953183889
    2. ' if' → logprob: -7.875933647155762
    3. '   ' → logprob: -8.250933647155762
    4. 'if' → logprob: -9.000933647155762
    5. '_' → logprob: -9.375933647155762
    6. ' _' → logprob: -9.875933647155762
    7. '_a' → logprob: -11.750933647155762
    8. '_A' → logprob: -12.125933647155762
    9. '```' → logprob: -12.375933647155762
    10. ',' → logprob: -13.000933647155762

Token 641: ' _' (ID: 1175)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.03258136287331581
    2. 'if' → logprob: -4.032581329345703
    3. '   ' → logprob: -4.407581329345703
    4. '       ' → logprob: -6.282581329345703
    5. ' if' → logprob: -8.782581329345703
    6. '```' → logprob: -10.282581329345703
    7. '\' → logprob: -11.407581329345703
    8. ' _' → logprob: -11.407581329345703
    9. '           ' → logprob: -11.407581329345703
    10. '  ' → logprob: -11.657581329345703

Token 642: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.3856492842023727e-06
    2. 'a' → logprob: -14.250000953674316
    3. '_A' → logprob: -14.375000953674316
    4. ' A' → logprob: -16.750001907348633
    5. '=A' → logprob: -19.125001907348633
    6. '=' → logprob: -19.500001907348633
    7. '_a' → logprob: -19.625001907348633
    8. '_' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.125001907348633
    10. '	A' → logprob: -20.250001907348633

Token 643: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067156096920371056
    2. ' =' → logprob: -5.006715774536133
    3. ' ' → logprob: -16.506715774536133
    4. '=_' → logprob: -17.631715774536133
    5. '>' → logprob: -17.756715774536133
    6. '_=' → logprob: -17.756715774536133
    7. '=a' → logprob: -17.881715774536133
    8. 'a' → logprob: -17.881715774536133
    9. '_' → logprob: -18.381715774536133
    10. ',' → logprob: -18.506715774536133

Token 644: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.00032235344406217337
    2. 'a' → logprob: -8.250322341918945
    3. ' calc' → logprob: -10.000322341918945
    4. 'A' → logprob: -11.375322341918945
    5. 'cal' → logprob: -13.625322341918945
    6. '   ' → logprob: -13.875322341918945
    7. '(calc' → logprob: -14.250322341918945
    8. ' ' → logprob: -14.750322341918945
    9. '
' → logprob: -14.875322341918945
    10. 'Calc' → logprob: -15.750322341918945

Token 645: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -2.6776029699249193e-05
    2. 'A' → logprob: -10.87502670288086
    3. 'a' → logprob: -12.50002670288086
    4. '_a' → logprob: -12.87502670288086
    5. '_' → logprob: -13.62502670288086
    6. '(A' → logprob: -15.37502670288086
    7. '_B' → logprob: -18.12502670288086
    8. '*A' → logprob: -18.37502670288086
    9. '(a' → logprob: -18.87502670288086
    10. '```' → logprob: -19.00002670288086

Token 646: '_times' (ID: 53425)
  Prédit: '_times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.06223934888839722
    2. 'times' → logprob: -2.812239408493042
    3. 'a' → logprob: -8.562239646911621
    4. ' times' → logprob: -10.687239646911621
    5. 'Times' → logprob: -10.687239646911621
    6. '(a' → logprob: -11.187239646911621
    7. '(A' → logprob: -11.312239646911621
    8. '_a' → logprob: -12.562239646911621
    9. '*a' → logprob: -12.812239646911621
    10. '_time' → logprob: -14.812239646911621

Token 647: '_a' (ID: 10852)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5358529686927795
    2. 'a' → logprob: -0.9108529686927795
    3. '(A' → logprob: -4.535852909088135
    4. '_A' → logprob: -7.285852909088135
    5. '_a' → logprob: -7.410852909088135
    6. ' A' → logprob: -7.660852909088135
    7. 'times' → logprob: -9.785853385925293
    8. '(a' → logprob: -10.660853385925293
    9. '
' → logprob: -11.285853385925293
    10. '_times' → logprob: -11.410853385925293

Token 648: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -6.360996485454962e-05
    2. '(a' → logprob: -10.0000638961792
    3. '(' → logprob: -11.5000638961792
    4. 'A' → logprob: -11.8750638961792
    5. 'a' → logprob: -14.6250638961792
    6. ' (' → logprob: -15.7500638961792
    7. '=A' → logprob: -16.500062942504883
    8. '(
' → logprob: -16.625062942504883
    9. '=' → logprob: -17.250062942504883
    10. '((' → logprob: -17.375062942504883

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00371361942961812
    2. ',a' → logprob: -5.753713607788086
    3. 'a' → logprob: -7.628713607788086
    4. ' ,' → logprob: -10.128713607788086
    5. ',
' → logprob: -12.628713607788086
    6. '(a' → logprob: -13.378713607788086
    7. ')' → logprob: -13.378713607788086
    8. ' a' → logprob: -13.503713607788086
    9. '   ' → logprob: -14.878713607788086
    10. '=' → logprob: -15.003713607788086

Token 650: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1517960956552997e-05
    2. ' a' → logprob: -11.375011444091797
    3. '   ' → logprob: -19.375011444091797
    4. '	a' → logprob: -19.500011444091797
    5. ' ' → logprob: -20.500011444091797
    6. ')a' → logprob: -20.500011444091797
    7. '<|end|>' → logprob: -20.750011444091797
    8. '
' → logprob: -21.875011444091797
    9. ''a' → logprob: -21.875011444091797
    10. '>a' → logprob: -21.875011444091797

Token 651: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.020610790699720383
    2. ')' → logprob: -3.895610809326172
    3. '   ' → logprob: -10.520610809326172
    4. ')
' → logprob: -10.770610809326172
    5. '       ' → logprob: -11.520610809326172
    6. ')

' → logprob: -12.395610809326172
    7. '<|end|>' → logprob: -12.645610809326172
    8. '
' → logprob: -14.270610809326172
    9. ' )
' → logprob: -14.395610809326172
    10. ' ' → logprob: -14.395610809326172

Token 652: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00232426798902452
    2. '   ' → logprob: -6.877324104309082
    3. '<|end|>' → logprob: -7.002324104309082
    4. ' if' → logprob: -8.252324104309082
    5. '
' → logprob: -10.252324104309082
    6. ',' → logprob: -11.002324104309082
    7. '        
' → logprob: -11.002324104309082
    8. ')' → logprob: -11.252324104309082
    9. 'if' → logprob: -11.627324104309082
    10. ' ' → logprob: -12.002324104309082

Token 653: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00010962257510982454
    2. '       ' → logprob: -9.250109672546387
    3. ' if' → logprob: -11.250109672546387
    4. '   ' → logprob: -14.625109672546387
    5. '        
' → logprob: -19.62510871887207
    6. 'If' → logprob: -19.75010871887207
    7. 'K' → logprob: -20.12510871887207
    8. '	if' → logprob: -20.50010871887207
    9. 'i' → logprob: -20.75010871887207
    10. ' ' → logprob: -20.87510871887207

Token 654: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.0006389308837242424
    2. 'not' → logprob: -7.625638961791992
    3. '   ' → logprob: -9.500638961791992
    4. ' should' → logprob: -9.625638961791992
    5. '       ' → logprob: -12.125638961791992
    6. '_should' → logprob: -12.875638961791992
    7. ' not' → logprob: -14.500638961791992
    8. '           ' → logprob: -14.625638961791992
    9. '.should' → logprob: -15.250638961791992
    10. '    ' → logprob: -15.750638961791992

Token 655: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -0.0005311102140694857
    2. 'continue' → logprob: -7.625531196594238
    3. 'not' → logprob: -10.875531196594238
    4. '_due' → logprob: -11.250531196594238
    5. '_not' → logprob: -11.875531196594238
    6. '```' → logprob: -14.125531196594238
    7. '_cont' → logprob: -14.125531196594238
    8. 'Continue' → logprob: -14.750531196594238
    9. '
' → logprob: -14.875531196594238
    10. '   ' → logprob: -15.000531196594238

Token 656: '_due' (ID: 197294)
  Prédit: '_due'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_due' → logprob: -0.0005028736195527017
    2. 'due' → logprob: -7.625503063201904
    3. '(_' → logprob: -11.500502586364746
    4. '```' → logprob: -13.500502586364746
    5. '   ' → logprob: -14.000502586364746
    6. '
' → logprob: -14.750502586364746
    7. '_not' → logprob: -14.875502586364746
    8. ' due' → logprob: -15.375502586364746
    9. '_to' → logprob: -15.375502586364746
    10. 'a' → logprob: -15.500502586364746

Token 657: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.023784251883625984
    2. 'to' → logprob: -3.7737841606140137
    3. 'a' → logprob: -8.523784637451172
    4. 'e' → logprob: -8.898784637451172
    5. '_due' → logprob: -9.148784637451172
    6. '(to' → logprob: -10.273784637451172
    7. '_a' → logprob: -11.023784637451172
    8. '(a' → logprob: -11.773784637451172
    9. '(_' → logprob: -11.773784637451172
    10. 'o' → logprob: -11.898784637451172

Token 658: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.007314004004001617
    2. ' _' → logprob: -5.507314205169678
    3. '(_' → logprob: -5.757314205169678
    4. '_' → logprob: -10.88231372833252
    5. 'not' → logprob: -11.13231372833252
    6. '_B' → logprob: -11.38231372833252
    7. ' not' → logprob: -11.50731372833252
    8. ' ' → logprob: -12.13231372833252
    9. ' (_' → logprob: -12.38231372833252
    10. '_a' → logprob: -13.38231372833252

Token 659: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -3.4881879400927573e-05
    2. '(' → logprob: -10.375035285949707
    3. '(!_' → logprob: -12.875035285949707
    4. '(not' → logprob: -15.000035285949707
    5. '((_' → logprob: -15.500035285949707
    6. '(__' → logprob: -16.12503433227539
    7. ' (_' → logprob: -16.87503433227539
    8. '(
' → logprob: -16.87503433227539
    9. 'not' → logprob: -17.00003433227539
    10. '(_)' → logprob: -17.12503433227539

Token 660: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.3663626305060461e-05
    2. '_A' → logprob: -11.25001335144043
    3. 'a' → logprob: -14.87501335144043
    4. ' A' → logprob: -15.62501335144043
    5. ')' → logprob: -15.75001335144043
    6. '
' → logprob: -16.87501335144043
    7. '_a' → logprob: -17.37501335144043
    8. '>A' → logprob: -18.87501335144043
    9. '>' → logprob: -19.75001335144043
    10. '_' → logprob: -19.87501335144043

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.133198283147067e-05
    2. ' ,' → logprob: -10.375051498413086
    3. ',K' → logprob: -11.250051498413086
    4. ',A' → logprob: -12.375051498413086
    5. ',B' → logprob: -13.750051498413086
    6. ',
' → logprob: -14.625051498413086
    7. ',a' → logprob: -15.000051498413086
    8. '>' → logprob: -15.500051498413086
    9. '```' → logprob: -16.000051498413086
    10. 'a' → logprob: -16.500051498413086

Token 662: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -6.611323624383658e-05
    2. ' K' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.87506675720215
    4. '>K' → logprob: -19.12506675720215
    5. ')' → logprob: -19.75006675720215
    6. '	K' → logprob: -19.87506675720215
    7. '       ' → logprob: -20.00006675720215
    8. ' ' → logprob: -20.25006675720215
    9. '  ' → logprob: -20.87506675720215
    10. '
' → logprob: -21.50006675720215

Token 663: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.19301791489124298
    2. '):' → logprob: -1.9430179595947266
    3. ':' → logprob: -3.6930179595947266
    4. '       ' → logprob: -5.568017959594727
    5. ':
' → logprob: -5.943017959594727
    6. '   ' → logprob: -7.693017959594727
    7. '):
' → logprob: -8.943017959594727
    8. '           ' → logprob: -9.193017959594727
    9. '():
' → logprob: -9.318017959594727
    10. '==' → logprob: -9.568017959594727

Token 664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003967266529798508
    2. '       ' → logprob: -6.50396728515625
    3. 'continue' → logprob: -6.50396728515625
    4. ' continue' → logprob: -7.00396728515625
    5. '		' → logprob: -11.62896728515625
    6. '	continue' → logprob: -11.62896728515625
    7. '   ' → logprob: -11.75396728515625
    8. '	       ' → logprob: -11.87896728515625
    9. '
' → logprob: -12.00396728515625
    10. '```' → logprob: -12.12896728515625

Token 665: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2064325511455536
    2. 'continue' (adapté à ' continue') → logprob: -1.956432580947876
    3. '       ' → logprob: -3.206432580947876
    4. '           ' → logprob: -5.456432342529297
    5. ' break' → logprob: -8.831432342529297
    6. '   ' → logprob: -9.206432342529297
    7. '	break' → logprob: -9.831432342529297
    8. ' continue' → logprob: -10.206432342529297
    9. '               ' → logprob: -10.456432342529297
    10. '	continue' → logprob: -11.456432342529297

Token 666: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006620635278522968
    2. '<|end|>' → logprob: -5.756620407104492
    3. '   ' → logprob: -6.131620407104492
    4. '
' → logprob: -7.006620407104492
    5. '        
' → logprob: -8.881620407104492
    6. '```' → logprob: -9.381620407104492
    7. '  
' → logprob: -10.131620407104492
    8. '    
' → logprob: -11.131620407104492
    9. '           ' → logprob: -11.131620407104492
    10. '<|end|>' → logprob: -11.756620407104492

Token 667: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035571079701185226
    2. '   ' → logprob: -3.4105710983276367
    3. 'b' → logprob: -6.410571098327637
    4. 'if' → logprob: -8.785571098327637
    5. ' b' → logprob: -10.410571098327637
    6. ' if' → logprob: -10.535571098327637
    7. '```' → logprob: -10.785571098327637
    8. '        
' → logprob: -11.660571098327637
    9. 'a' → logprob: -11.910571098327637
    10. '           ' → logprob: -12.035571098327637

Token 668: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.390181303024292
    2. '_B' → logprob: -1.640181303024292
    3. 'B' → logprob: -3.265181303024292
    4. '       ' → logprob: -3.390181303024292
    5. 'b' → logprob: -3.640181303024292
    6. '   ' → logprob: -3.890181303024292
    7. '_b' → logprob: -4.640181541442871
    8. ' if' → logprob: -7.140181541442871
    9. '```' → logprob: -10.765181541442871
    10. ' B' → logprob: -11.640181541442871

Token 669: ' not' (ID: 625)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5202154517173767
    2. ' B' → logprob: -1.2702155113220215
    3. ' not' → logprob: -2.3952155113220215
    4. 'not' → logprob: -3.3952155113220215
    5. ' ' → logprob: -10.020215034484863
    6. '   ' → logprob: -10.395215034484863
    7. '(B' → logprob: -10.895215034484863
    8. '(not' → logprob: -11.645215034484863
    9. 'b' → logprob: -12.332715034484863
    10. '	B' → logprob: -12.395215034484863

Token 670: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004662353545427322
    2. ' B' → logprob: -5.37966251373291
    3. '(B' → logprob: -10.25466251373291
    4. ' (' → logprob: -12.62966251373291
    5. '(' → logprob: -13.62966251373291
    6. ' ' → logprob: -15.00466251373291
    7. '   ' → logprob: -15.12966251373291
    8. '	B' → logprob: -15.25466251373291
    9. 'calc' → logprob: -15.50466251373291
    10. 'is' → logprob: -15.62966251373291

Token 671: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.04999888688325882
    2. '==' → logprob: -3.2999989986419678
    3. ':' → logprob: -4.924998760223389
    4. 'div' → logprob: -6.549998760223389
    5. '>' → logprob: -7.299998760223389
    6. ' ==' → logprob: -7.674998760223389
    7. '<|end|>' → logprob: -7.799998760223389
    8. '<div' → logprob: -7.924998760223389
    9. '):' → logprob: -8.424999237060547
    10. ':
' → logprob: -8.799999237060547

Token 672: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.0009166974923573434
    2. '(B' → logprob: -7.250916481018066
    3. 'id' → logprob: -9.500916481018066
    4. '(' → logprob: -10.000916481018066
    5. 'ide' → logprob: -10.375916481018066
    6. '```' → logprob: -11.500916481018066
    7. 'ids' → logprob: -11.625916481018066
    8. '_id' → logprob: -12.125916481018066
    9. '(K' → logprob: -12.375916481018066
    10. 'ives' → logprob: -12.500916481018066

Token 673: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.4221412241458893
    2. '(K' → logprob: -1.547141194343567
    3. 'difference' → logprob: -2.1721413135528564
    4. 'ifference' → logprob: -4.172141075134277
    5. ' difference' → logprob: -7.172141075134277
    6. 'Difference' → logprob: -7.797141075134277
    7. '(' → logprob: -8.297141075134277
    8. '
' → logprob: -8.297141075134277
    9. '_diff' → logprob: -9.547141075134277
    10. 'K' → logprob: -9.672141075134277

Token 674: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.000307575857732445
    2. '(' → logprob: -8.2503080368042
    3. '(
' → logprob: -10.5003080368042
    4. ' (' → logprob: -11.0003080368042
    5. '(k' → logprob: -13.8753080368042
    6. ',' → logprob: -15.1253080368042
    7. '   ' → logprob: -15.7503080368042
    8. '((' → logprob: -16.375307083129883
    9. '```' → logprob: -16.375307083129883
    10. ')' → logprob: -16.500307083129883

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021170699037611485
    2. ',_' → logprob: -6.502117156982422
    3. ' ,' → logprob: -7.502117156982422
    4. ',
' → logprob: -9.877117156982422
    5. '       ' → logprob: -12.377117156982422
    6. '_,' → logprob: -12.502117156982422
    7. ',A' → logprob: -13.627117156982422
    8. '   ' → logprob: -14.252117156982422
    9. '```' → logprob: -15.502117156982422
    10. ',
' → logprob: -15.502117156982422

Token 676: ' _' (ID: 1175)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.0017052943585440516
    2. ' _' → logprob: -6.376705169677734
    3. '   ' → logprob: -13.876705169677734
    4. ' ' → logprob: -14.626705169677734
    5. '_B' → logprob: -14.626705169677734
    6. '_a' → logprob: -14.876705169677734
    7. '
' → logprob: -15.626705169677734
    8. '  ' → logprob: -15.876705169677734
    9. 'A' → logprob: -16.251705169677734
    10. ' A' → logprob: -16.376705169677734

Token 677: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.747814349073451e-05
    2. '_A' → logprob: -11.000017166137695
    3. ' A' → logprob: -14.750017166137695
    4. 'a' → logprob: -15.625017166137695
    5. '_a' → logprob: -16.375017166137695
    6. 'А' → logprob: -17.500017166137695
    7. '_' → logprob: -18.125017166137695
    8. ')' → logprob: -18.500017166137695
    9. '
' → logprob: -18.875017166137695
    10. '```' → logprob: -19.000017166137695

Token 678: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022153646568767726
    2. ',B' → logprob: -8.750221252441406
    3. ' ,' → logprob: -9.750221252441406
    4. 'B' → logprob: -13.250221252441406
    5. ',
' → logprob: -13.625221252441406
    6. '   ' → logprob: -14.750221252441406
    7. '```' → logprob: -15.000221252441406
    8. '),' → logprob: -15.000221252441406
    9. ',b' → logprob: -15.625221252441406
    10. ' ' → logprob: -16.750221252441406

Token 679: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.001170225441455841
    2. ' B' → logprob: -6.7511701583862305
    3. '   ' → logprob: -19.126171112060547
    4. ')' → logprob: -19.501171112060547
    5. '>B' → logprob: -19.626171112060547
    6. '	B' → logprob: -20.376171112060547
    7. ' ' → logprob: -20.626171112060547
    8. '=B' → logprob: -21.001171112060547
    9. '
' → logprob: -21.501171112060547
    10. '"B' → logprob: -21.501171112060547

Token 680: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5759949088096619
    2. '):
' → logprob: -0.8259949088096619
    3. '   ' → logprob: -10.575994491577148
    4. ')' → logprob: -11.325994491577148
    5. '       ' → logprob: -12.325994491577148
    6. '):
' → logprob: -12.325994491577148
    7. '):

' → logprob: -12.450994491577148
    8. ':' → logprob: -12.575994491577148
    9. ':
' → logprob: -14.450994491577148
    10. ' ):' → logprob: -14.950994491577148

Token 681: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015436685644090176
    2. 'continue' → logprob: -7.5015435218811035
    3. ' continue' → logprob: -7.6265435218811035
    4. '       ' → logprob: -7.6265435218811035
    5. '   ' → logprob: -11.376543998718262
    6. '               ' → logprob: -13.751543998718262
    7. '```' → logprob: -14.501543998718262
    8. '		' → logprob: -14.626543998718262
    9. '	continue' → logprob: -14.626543998718262
    10. '          ' → logprob: -14.876543998718262

Token 682: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.035498134791851044
    2. '           ' → logprob: -3.7854981422424316
    3. '       ' → logprob: -4.785498142242432
    4. ' continue' → logprob: -6.160498142242432
    5. '   ' → logprob: -6.410498142242432
    6. '	continue' → logprob: -9.660497665405273
    7. '               ' → logprob: -12.410497665405273
    8. ' ' → logprob: -13.285497665405273
    9. '_continue' → logprob: -13.660497665405273
    10. '```' → logprob: -14.660497665405273

Token 683: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09976895153522491
    2. '   ' → logprob: -2.849768877029419
    3. 'b' → logprob: -3.349768877029419
    4. ' b' → logprob: -7.099769115447998
    5. '        
' → logprob: -7.099769115447998
    6. '
' → logprob: -9.22476863861084
    7. '    
' → logprob: -9.22476863861084
    8. '```' → logprob: -9.72476863861084
    9. '  
' → logprob: -10.72476863861084
    10. '     ' → logprob: -11.22476863861084

Token 684: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1103496551513672
    2. '   ' → logprob: -1.1103496551513672
    3. '       ' → logprob: -1.1103496551513672
    4. ' b' → logprob: -4.485349655151367
    5. '        
' → logprob: -8.735349655151367
    6. '```' → logprob: -9.735349655151367
    7. '	b' → logprob: -9.860349655151367
    8. '    
' → logprob: -10.360349655151367
    9. ' ' → logprob: -10.860349655151367
    10. '  ' → logprob: -11.235349655151367

Token 685: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0044600279070436954
    2. '       ' → logprob: -5.754459857940674
    3. ' b' → logprob: -6.754459857940674
    4. '   ' → logprob: -9.129460334777832
    5. '_b' → logprob: -12.379460334777832
    6. '           ' → logprob: -13.129460334777832
    7. '```' → logprob: -15.004460334777832
    8. '	b' → logprob: -15.129460334777832
    9. '     ' → logprob: -15.879460334777832
    10. ' ' → logprob: -16.504459381103516

Token 686: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740770161151886
    2. '=' → logprob: -0.9740769863128662
    3. ' ' → logprob: -16.724077224731445
    4. '＝' → logprob: -17.599077224731445
    5. '  ' → logprob: -17.724077224731445
    6. ' =
' → logprob: -19.474077224731445
    7. ',' → logprob: -19.599077224731445
    8. ')' → logprob: -19.849077224731445
    9. '=

' → logprob: -19.849077224731445
    10. '_' → logprob: -19.974077224731445

Token 687: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.01815052703022957
    2. ' calc' → logprob: -4.018150329589844
    3. 'cal' → logprob: -14.393150329589844
    4. '(calc' → logprob: -17.018150329589844
    5. 'calculate' → logprob: -18.393150329589844
    6. '.calc' → logprob: -18.393150329589844
    7. '_calc' → logprob: -18.518150329589844
    8. ' ' → logprob: -21.268150329589844
    9. ' calculate' → logprob: -21.393150329589844
    10. 'c' → logprob: -21.518150329589844

Token 688: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0002613358374219388
    2. 'b' → logprob: -8.250261306762695
    3. '	b' → logprob: -16.875261306762695
    4. 'a' → logprob: -18.375261306762695
    5. '_B' → logprob: -18.750261306762695
    6. '_a' → logprob: -19.125261306762695
    7. ''b' → logprob: -19.875261306762695
    8. 'B' → logprob: -20.000261306762695
    9. '```' → logprob: -20.375261306762695
    10. '_' → logprob: -20.375261306762695

Token 689: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.500000953674316
    3. 'K' → logprob: -14.875000953674316
    4. '(
' → logprob: -16.250001907348633
    5. '(k' → logprob: -19.250001907348633
    6. '(KERN' → logprob: -19.500001907348633
    7. ' (' → logprob: -20.125001907348633
    8. '<K' → logprob: -20.500001907348633
    9. '	K' → logprob: -20.625001907348633
    10. '(B' → logprob: -20.750001907348633

Token 690: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005152400583028793
    2. ',_' → logprob: -5.380152225494385
    3. ',A' → logprob: -8.380152702331543
    4. ',
' → logprob: -9.130152702331543
    5. ' ,' → logprob: -9.505152702331543
    6. '_,' → logprob: -9.755152702331543
    7. '(_' → logprob: -10.505152702331543
    8. '_A' → logprob: -10.880152702331543
    9. '       ' → logprob: -11.880152702331543
    10. '(' → logprob: -12.505152702331543

Token 691: ' _' (ID: 1175)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.00018029935017693788
    2. ' _' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.5001802444458
    4. '_B' → logprob: -16.000181198120117
    5. ' ' → logprob: -16.125181198120117
    6. '\' → logprob: -16.875181198120117
    7. '  ' → logprob: -17.000181198120117
    8. '_a' → logprob: -17.125181198120117
    9. '```' → logprob: -17.500181198120117
    10. '(_' → logprob: -17.750181198120117

Token 692: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0004307884373702109
    2. '_A' → logprob: -7.750430583953857
    3. ' A' → logprob: -16.500431060791016
    4. 'a' → logprob: -18.125431060791016
    5. 'А' → logprob: -18.500431060791016
    6. '   ' → logprob: -19.125431060791016
    7. '	A' → logprob: -19.500431060791016
    8. '-A' → logprob: -19.750431060791016
    9. '_a' → logprob: -19.750431060791016
    10. ' ' → logprob: -20.000431060791016

Token 693: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7888184528565034e-05
    2. ',B' → logprob: -10.0000581741333
    3. ' ,' → logprob: -11.3750581741333
    4. ',b' → logprob: -14.6250581741333
    5. 'B' → logprob: -15.5000581741333
    6. ',
' → logprob: -16.000057220458984
    7. '```' → logprob: -17.375057220458984
    8. 'b' → logprob: -17.375057220458984
    9. ')' → logprob: -18.000057220458984
    10. '_,' → logprob: -18.250057220458984

Token 694: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002475777640938759
    2. ' B' → logprob: -6.002475738525391
    3. '	B' → logprob: -17.75247573852539
    4. '   ' → logprob: -18.00247573852539
    5. '>B' → logprob: -18.62747573852539
    6. ' ' → logprob: -18.75247573852539
    7. '"B' → logprob: -19.12747573852539
    8. '_B' → logprob: -19.62747573852539
    9. '       ' → logprob: -19.62747573852539
    10. '=B' → logprob: -19.87747573852539

Token 695: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002488618716597557
    2. ')
' → logprob: -6.002488613128662
    3. ',' → logprob: -12.00248908996582
    4. '   ' → logprob: -12.87748908996582
    5. ')

' → logprob: -13.37748908996582
    6. ')
' → logprob: -14.00248908996582
    7. ' )' → logprob: -14.75248908996582
    8. '```' → logprob: -15.00248908996582
    9. ')`' → logprob: -15.62748908996582
    10. '),' → logprob: -15.87748908996582

Token 696: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 697: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3351339101791382
    2. '       ' → logprob: -1.5851339101791382
    3. 'if' (adapté à ' if') → logprob: -2.5851340293884277
    4. '   ' → logprob: -5.460134029388428
    5. '<|end|>' → logprob: -9.21013355255127
    6. ' ' → logprob: -10.21013355255127
    7. '    ' → logprob: -11.08513355255127
    8. '        ' → logprob: -11.21013355255127
    9. '```' → logprob: -11.46013355255127
    10. '	if' → logprob: -11.46013355255127

Token 698: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16564524173736572
    2. ' not' → logprob: -1.9156452417373657
    3. 'is' → logprob: -5.290645122528076
    4. ' is' → logprob: -8.040645599365234
    5. 'b' → logprob: -10.540645599365234
    6. '(not' → logprob: -11.540645599365234
    7. '   ' → logprob: -12.540645599365234
    8. 'a' → logprob: -13.165645599365234
    9. ' b' → logprob: -13.665645599365234
    10. '```' → logprob: -14.290645599365234

Token 699: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3132672905921936
    2. ' is' → logprob: -1.3132672309875488
    3. '(is' → logprob: -12.688267707824707
    4. 'b' → logprob: -13.188267707824707
    5. ' ' → logprob: -15.313267707824707
    6. ' (' → logprob: -16.93826675415039
    7. '   ' → logprob: -17.06326675415039
    8. ' b' → logprob: -17.06326675415039
    9. 'not' → logprob: -17.31326675415039
    10. '
' → logprob: -17.31326675415039

Token 700: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00020425561524461955
    2. 'b' → logprob: -8.500204086303711
    3. '	b' → logprob: -15.500204086303711
    4. '(b' → logprob: -15.500204086303711
    5. '_with' → logprob: -16.00020408630371
    6. 'is' → logprob: -16.00020408630371
    7. ''b' → logprob: -17.62520408630371
    8. '```' → logprob: -17.75020408630371
    9. '_is' → logprob: -18.12520408630371
    10. '`' → logprob: -18.12520408630371

Token 701: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.0003643058007583022
    2. 'with' → logprob: -8.250364303588867
    3. '(b' → logprob: -9.875364303588867
    4. 'within' → logprob: -10.500364303588867
    5. '_b' → logprob: -11.250364303588867
    6. 'b' → logprob: -12.000364303588867
    7. '```' → logprob: -13.875364303588867
    8. '_WITH' → logprob: -14.250364303588867
    9. '<=' → logprob: -14.500364303588867
    10. '\' → logprob: -15.125364303588867

Token 702: 'in' (ID: 258)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9164740443229675
    2. 'within' → logprob: -1.5414741039276123
    3. 'b' → logprob: -1.7914741039276123
    4. 'ith' → logprob: -2.1664741039276123
    5. '_range' → logprob: -2.6664741039276123
    6. '(b' → logprob: -4.416473865509033
    7. 'in' → logprob: -4.916473865509033
    8. '_with' → logprob: -4.916473865509033
    9. 'with' → logprob: -5.541473865509033
    10. ' b' → logprob: -7.166473865509033

Token 703: '_range' (ID: 22022)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016257699579000473
    2. '_range' → logprob: -4.1412577629089355
    3. 'b' → logprob: -8.516257286071777
    4. '(b' → logprob: -11.641257286071777
    5. ' range' → logprob: -11.891257286071777
    6. 'Range' → logprob: -13.016257286071777
    7. '```' → logprob: -13.141257286071777
    8. 'rang' → logprob: -13.641257286071777
    9. 'a' → logprob: -14.391257286071777
    10. '[b' → logprob: -15.266257286071777

Token 704: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.5954712075181305e-05
    2. '(' → logprob: -10.250036239624023
    3. '(
' → logprob: -15.000036239624023
    4. ' (' → logprob: -16.125036239624023
    5. 'b' → logprob: -16.750036239624023
    6. '(B' → logprob: -18.625036239624023
    7. '(abs' → logprob: -19.875036239624023
    8. '((' → logprob: -19.875036239624023
    9. '(int' → logprob: -20.125036239624023
    10. '(a' → logprob: -20.625036239624023

Token 705: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01264773216098547
    2. '(N' → logprob: -4.76264762878418
    3. ',N' → logprob: -6.01264762878418
    4. ' ,' → logprob: -7.13764762878418
    5. ',b' → logprob: -7.76264762878418
    6. '(' → logprob: -8.88764762878418
    7. 'b' → logprob: -9.01264762878418
    8. ')' → logprob: -10.13764762878418
    9. ' (' → logprob: -10.76264762878418
    10. ' b' → logprob: -11.76264762878418

Token 706: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019287518225610256
    2. ' N' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.376928329467773
    4. ' ' → logprob: -18.126928329467773
    5. ')' → logprob: -19.001928329467773
    6. '	N' → logprob: -19.001928329467773
    7. '  ' → logprob: -20.376928329467773
    8. '
' → logprob: -20.501928329467773
    9. '    ' → logprob: -20.751928329467773
    10. 'n' → logprob: -20.751928329467773

Token 707: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029630844946950674
    2. '):
' → logprob: -5.877963066101074
    3. ':' → logprob: -8.877963066101074
    4. '   ' → logprob: -12.002963066101074
    5. ')' → logprob: -12.127963066101074
    6. '       ' → logprob: -12.377963066101074
    7. ':
' → logprob: -14.127963066101074
    8. ' ):' → logprob: -14.377963066101074
    9. '):

' → logprob: -14.877963066101074
    10. '):
' → logprob: -14.877963066101074

Token 708: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01771530695259571
    2. '           ' → logprob: -4.1427154541015625
    3. 'continue' → logprob: -6.5177154541015625
    4. ' continue' → logprob: -8.642715454101562
    5. '   ' → logprob: -11.017715454101562
    6. '```' → logprob: -12.017715454101562
    7. '	continue' → logprob: -13.392715454101562
    8. '_continue' → logprob: -14.642715454101562
    9. '      ' → logprob: -15.017715454101562
    10. '		' → logprob: -15.517715454101562

Token 709: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7737693786621094
    2. 'continue' (adapté à ' continue') → logprob: -0.7737693786621094
    3. '           ' → logprob: -3.0237693786621094
    4. '   ' → logprob: -4.023769378662109
    5. ' continue' → logprob: -4.523769378662109
    6. '	continue' → logprob: -9.39876937866211
    7. '```' → logprob: -11.52376937866211
    8. ' ' → logprob: -12.27376937866211
    9. '_continue' → logprob: -12.64876937866211
    10. '               ' → logprob: -12.89876937866211

Token 710: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036889128386974335
    2. '   ' → logprob: -6.628688812255859
    3. '
' → logprob: -6.628688812255859
    4. '<|end|>' → logprob: -7.003688812255859
    5. '        
' → logprob: -10.25368881225586
    6. '<|end|>' → logprob: -11.00368881225586
    7. '```' → logprob: -11.25368881225586
    8. '
' → logprob: -11.50368881225586
    9. '	' → logprob: -11.50368881225586
    10. ',' → logprob: -12.00368881225586

Token 711: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015288250870071352
    2. '   ' → logprob: -8.875152587890625
    3. '<|end|>' → logprob: -12.000152587890625
    4. '```' → logprob: -12.875152587890625
    5. '           ' → logprob: -13.875152587890625
    6. '      ' → logprob: -14.250152587890625
    7. '	' → logprob: -14.375152587890625
    8. '        
' → logprob: -15.000152587890625
    9. '     ' → logprob: -15.000152587890625
    10. '
' → logprob: -15.125152587890625

Token 712: ' cnt' (ID: 27340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10144629329442978
    2. 'cnt' (adapté à ' cnt') → logprob: -2.3514463901519775
    3. '   ' → logprob: -6.726446151733398
    4. ' cnt' → logprob: -11.226446151733398
    5. '	cnt' → logprob: -11.226446151733398
    6. 'ct' → logprob: -12.476446151733398
    7. 'count' → logprob: -12.726446151733398
    8. '           ' → logprob: -13.601446151733398
    9. '[cnt' → logprob: -13.601446151733398
    10. '```' → logprob: -13.851446151733398

Token 713: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018152514472603798
    2. ' =' → logprob: -4.018152713775635
    3. '+=' → logprob: -12.893152236938477
    4. ' +=' → logprob: -15.893152236938477
    5. '＝' → logprob: -18.268152236938477
    6. '.=' → logprob: -18.893152236938477
    7. '%=' → logprob: -19.143152236938477
    8. '=

' → logprob: -19.393152236938477
    9. ' ' → logprob: -19.518152236938477
    10. ',' → logprob: -19.518152236938477

Token 714: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.47407761216163635
    2. 'update' → logprob: -0.974077582359314
    3. '(update' → logprob: -14.599077224731445
    4. '	update' → logprob: -16.724077224731445
    5. '.update' → logprob: -17.349077224731445
    6. '_update' → logprob: -17.474077224731445
    7. '   ' → logprob: -17.724077224731445
    8. 'upd' → logprob: -19.349077224731445
    9. ' ' → logprob: -19.474077224731445
    10. '```' → logprob: -19.849077224731445

Token 715: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -0.681633472442627
    2. 'cnt' → logprob: -0.931633472442627
    3. '(cnt' → logprob: -2.306633472442627
    4. '(' → logprob: -8.056632995605469
    5. '_' → logprob: -8.931632995605469
    6. ' cnt' → logprob: -9.806632995605469
    7. '(
' → logprob: -10.056632995605469
    8. '	cnt' → logprob: -10.181632995605469
    9. '[cnt' → logprob: -10.306632995605469
    10. 'Cnt' → logprob: -10.806632995605469

Token 716: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -14.00000286102295
    3. 'cnt' → logprob: -14.12500286102295
    4. '(
' → logprob: -14.75000286102295
    5. '[cnt' → logprob: -14.75000286102295
    6. '(count' → logprob: -14.87500286102295
    7. '	cnt' → logprob: -18.375001907348633
    8. '(cont' → logprob: -19.125001907348633
    9. ' cnt' → logprob: -19.375001907348633
    10. '(cmd' → logprob: -19.875001907348633

Token 717: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.184812031686306e-05
    2. '(cnt' → logprob: -9.875082015991211
    3. ',c' → logprob: -11.500082015991211
    4. '(' → logprob: -11.500082015991211
    5. ',
' → logprob: -12.125082015991211
    6. ' ,' → logprob: -13.000082015991211
    7. '```' → logprob: -14.375082015991211
    8. 'cnt' → logprob: -14.750082015991211
    9. '
' → logprob: -14.875082015991211
    10. '`,' → logprob: -15.625082015991211

Token 718: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00975679699331522
    2. ' F' → logprob: -4.634756565093994
    3. '	F' → logprob: -14.884757041931152
    4. '   ' → logprob: -15.509757041931152
    5. ' ' → logprob: -16.384756088256836
    6. '  ' → logprob: -16.634756088256836
    7. ')' → logprob: -16.759756088256836
    8. '    ' → logprob: -16.884756088256836
    9. ',F' → logprob: -17.634756088256836
    10. '(F' → logprob: -17.759756088256836

Token 719: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.2729995988775045e-06
    2. ' ,' → logprob: -12.750006675720215
    3. ',F' → logprob: -13.500006675720215
    4. 'Fin' → logprob: -13.625006675720215
    5. ',
' → logprob: -14.375006675720215
    6. '<|end|>' → logprob: -16.8750057220459
    7. '```' → logprob: -17.7500057220459
    8. ',

' → logprob: -17.7500057220459
    9. 'F' → logprob: -17.8750057220459
    10. ')' → logprob: -18.1250057220459

Token 720: ' Fin' (ID: 7772)
  Prédit: 'Fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fin' → logprob: -0.0002670575922820717
    2. ' Fin' → logprob: -8.250267028808594
    3. 'F' → logprob: -12.375267028808594
    4. 'Finite' → logprob: -14.000267028808594
    5. ' ' → logprob: -14.750267028808594
    6. 'fin' → logprob: -16.375267028808594
    7. '   ' → logprob: -16.875267028808594
    8. '
' → logprob: -17.625267028808594
    9. 'Finn' → logprob: -17.625267028808594
    10. '  ' → logprob: -17.750267028808594

Token 721: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2664456789934775e-06
    2. ',' → logprob: -15.500000953674316
    3. '   ' → logprob: -15.937500953674316
    4. 'V' → logprob: -16.000001907348633
    5. '
' → logprob: -16.312501907348633
    6. 'inv' → logprob: -16.375001907348633
    7. ',v' → logprob: -16.812501907348633
    8. 'p' → logprob: -17.125001907348633
    9. '(F' → logprob: -17.125001907348633
    10. ',F' → logprob: -17.312501907348633

Token 722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. ' ,' → logprob: -12.500007629394531
    3. ',N' → logprob: -12.750007629394531
    4. ',n' → logprob: -15.000007629394531
    5. '```' → logprob: -16.00000762939453
    6. ',
' → logprob: -17.37500762939453
    7. '<|end|>' → logprob: -19.12500762939453
    8. '‌,' → logprob: -19.12500762939453
    9. 'N' → logprob: -19.37500762939453
    10. '‍,' → logprob: -20.25000762939453

Token 723: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.676292231422849e-05
    2. ' N' → logprob: -11.000017166137695
    3. '	N' → logprob: -19.750017166137695
    4. '   ' → logprob: -20.125017166137695
    5. ' ' → logprob: -20.750017166137695
    6. 'n' → logprob: -21.500017166137695
    7. 'a' → logprob: -21.875017166137695
    8. '<N' → logprob: -22.375017166137695
    9. '  ' → logprob: -22.750017166137695
    10. ',N' → logprob: -22.875017166137695

Token 724: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025156480842269957
    2. ',a' → logprob: -8.750251770019531
    3. ' ,' → logprob: -9.375251770019531
    4. 'a' → logprob: -11.875251770019531
    5. ',b' → logprob: -14.375251770019531
    6. '```' → logprob: -15.000251770019531
    7. ',p' → logprob: -16.12525177001953
    8. '   ' → logprob: -16.62525177001953
    9. 'b' → logprob: -17.25025177001953
    10. '‌,' → logprob: -17.37525177001953

Token 725: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.842555426876061e-06
    2. ' a' → logprob: -12.250004768371582
    3. '	a' → logprob: -17.2500057220459
    4. ')a' → logprob: -19.3750057220459
    5. '"a' → logprob: -19.6250057220459
    6. '#a' → logprob: -19.8750057220459
    7. 'b' → logprob: -19.8750057220459
    8. '_a' → logprob: -19.8750057220459
    9. ''a' → logprob: -20.0000057220459
    10. 'A' → logprob: -20.3750057220459

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019936825265176594
    2. ' ,' → logprob: -8.750199317932129
    3. ',b' → logprob: -10.125199317932129
    4. 'b' → logprob: -14.125199317932129
    5. ',
' → logprob: -17.000200271606445
    6. '```' → logprob: -17.375200271606445
    7. '   ' → logprob: -18.625200271606445
    8. ' b' → logprob: -19.125200271606445
    9. '       ' → logprob: -20.750200271606445
    10. '`,' → logprob: -20.875200271606445

Token 727: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033546582562848926
    2. ' b' → logprob: -8.000335693359375
    3. 'int' → logprob: -17.250335693359375
    4. '   ' → logprob: -19.000335693359375
    5. ' ' → logprob: -19.500335693359375
    6. '	b' → logprob: -20.125335693359375
    7. ' int' → logprob: -21.000335693359375
    8. '    ' → logprob: -21.125335693359375
    9. '       ' → logprob: -22.250335693359375
    10. ')b' → logprob: -22.750335693359375

Token 728: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028993739397265017
    2. ',p' → logprob: -8.250289916992188
    3. ' ,' → logprob: -10.875289916992188
    4. 'p' → logprob: -11.750289916992188
    5. '```' → logprob: -13.500289916992188
    6. ',
' → logprob: -14.875289916992188
    7. '   ' → logprob: -16.625289916992188
    8. ' p' → logprob: -17.625289916992188
    9. ')' → logprob: -17.875289916992188
    10. 's' → logprob: -18.000289916992188

Token 729: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00043102685594931245
    2. ' p' → logprob: -7.750431060791016
    3. '998' → logprob: -15.250431060791016
    4. '   ' → logprob: -17.750431060791016
    5. '<p' → logprob: -17.750431060791016
    6. '$p' → logprob: -18.125431060791016
    7. ')p' → logprob: -18.375431060791016
    8. '	p' → logprob: -18.375431060791016
    9. ' ' → logprob: -19.000431060791016
    10. '`' → logprob: -19.500431060791016

Token 730: ')
' (ID: 446)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23233576118946075
    2. '   ' → logprob: -1.6073358058929443
    3. '    
' → logprob: -5.607335567474365
    4. '<|end|>' → logprob: -6.107335567474365
    5. ')' → logprob: -7.982335567474365
    6. ')
' → logprob: -8.607336044311523
    7. '
' → logprob: -8.857336044311523
    8. '  
' → logprob: -9.482336044311523
    9. '   
' → logprob: -9.982336044311523
    10. 'return' → logprob: -10.107336044311523

Token 731: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.68022444692906e-05
    2. 'return' → logprob: -11.000046730041504
    3. ' return' → logprob: -11.250046730041504
    4. '    
' → logprob: -11.875046730041504
    5. 'print' → logprob: -12.625046730041504
    6. '<|end|>' → logprob: -12.875046730041504
    7. '
' → logprob: -13.250046730041504
    8. '```' → logprob: -13.625046730041504
    9. '       ' → logprob: -14.375046730041504
    10. '	return' → logprob: -15.000046730041504

Token 732: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003928318154066801
    2. 'print' (adapté à ' print') → logprob: -5.753928184509277
    3. 'return' → logprob: -7.253928184509277
    4. ' return' → logprob: -10.378928184509277
    5. '```' → logprob: -12.503928184509277
    6. ' print' → logprob: -12.628928184509277
    7. '
' → logprob: -13.378928184509277
    8. '<|end|>' → logprob: -14.128928184509277
    9. '    
' → logprob: -14.378928184509277
    10. '	return' → logprob: -14.378928184509277

Token 733: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -1.1041145626222715e-05
    2. '(' → logprob: -11.625011444091797
    3. 'cnt' → logprob: -13.750011444091797
    4. '(count' → logprob: -14.750011444091797
    5. '[cnt' → logprob: -15.500011444091797
    6. '(cont' → logprob: -15.750011444091797
    7. '(
' → logprob: -16.500011444091797
    8. '	cnt' → logprob: -17.000011444091797
    9. '(ct' → logprob: -17.000011444091797
    10. '(counter' → logprob: -17.625011444091797

Token 734: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '())' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.125000953674316
    4. '()' → logprob: -16.375
    5. ')`' → logprob: -16.75
    6. ')
' → logprob: -16.875
    7. ')}' → logprob: -17.75
    8. '))' → logprob: -18.0
    9. ')#' → logprob: -19.75
    10. '(' → logprob: -19.75

Token 735: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16023612022399902
    2. 'main' → logprob: -1.910236120223999
    3. '```' → logprob: -12.660236358642578
    4. ' if' → logprob: -12.910236358642578
    5. ' main' → logprob: -13.285236358642578
    6. '#' → logprob: -13.285236358642578
    7. '(main' → logprob: -13.785236358642578
    8. '
' → logprob: -14.285236358642578
    9. 'i' → logprob: -14.410236358642578
    10. 'def' → logprob: -16.410236358642578

Token 736: '_process' (ID: 25444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.891782283782959
    2. '()' → logprob: -1.016782283782959
    3. '_' → logprob: -1.516782283782959
    4. '_process' → logprob: -5.141782283782959
    5. '(_)' → logprob: -7.016782283782959
    6. '(_' → logprob: -8.391782760620117
    7. '<|end|>' → logprob: -8.516782760620117
    8. '(
' → logprob: -8.516782760620117
    9. 'process' → logprob: -8.766782760620117
    10. '.' → logprob: -9.016782760620117

Token 737: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 735
Tokens correctement prédits (1ère position, stricte): 336
Tokens correctement prédits (1ère position, avec adaptation): 371
Tokens correctement prédits (top 10): 646
Précision stricte (1ère position): 45.71%
Précision adaptée (1ère position): 50.48%
Précision (top 10): 87.89%
================================================================================
