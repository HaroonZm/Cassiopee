================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import accumulate

N = int(__import__('builtins').input())
H = list(map(int, __import__('builtins').input().split()))

# Génère un accumulateur des max successifs, puis zippe avec H pour comparer.
res = zip(H, accumulate(H, func=max))
cnt = sum(map(lambda x: 1 if x[0] >= x[1] else 0, res)) + 1*((not H)+(H[0]<H[0]))

print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.31284600496292114
    2. 'partial' → logprob: -2.0628459453582764
    3. 'reduce' → logprob: -2.0628459453582764
    4. 'l' → logprob: -4.8128461837768555
    5. ' wraps' → logprob: -5.1878461837768555
    6. 'cached' → logprob: -8.562846183776855
    7. 'cache' → logprob: -8.687846183776855
    8. 'cmp' → logprob: -8.937846183776855
    9. ' partial' → logprob: -9.562846183776855
    10. 'wr' → logprob: -9.812846183776855

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03290139138698578
    2. '.' → logprob: -3.9079012870788574
    3. '(lambda' → logprob: -4.657901287078857
    4. ',' → logprob: -7.157901287078857
    5. ' (' → logprob: -7.157901287078857
    6. '```' → logprob: -7.657901287078857
    7. '\' → logprob: -8.907901763916016
    8. ''' → logprob: -9.657901763916016
    9. '(
' → logprob: -9.657901763916016
    10. 'a' → logprob: -9.657901763916016

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20936472713947296
    2. '\' → logprob: -2.084364652633667
    3. 'def' → logprob: -3.209364652633667
    4. ' ' → logprob: -4.709364891052246
    5. ',' → logprob: -6.084364891052246
    6. '```' → logprob: -6.209364891052246
    7. '(
' → logprob: -6.834364891052246
    8. '\(' → logprob: -6.959364891052246
    9. '\n' → logprob: -7.209364891052246
    10. ' (' → logprob: -7.209364891052246

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -1.0728386640548706
    2. ' math' → logprob: -1.0728386640548706
    3. ' itertools' → logprob: -1.6978386640548706
    4. ' collections' → logprob: -2.07283878326416
    5. ' os' → logprob: -5.69783878326416
    6. 'operator' → logprob: -6.19783878326416
    7. ' ' → logprob: -7.82283878326416
    8. 'math' → logprob: -7.94783878326416
    9. 'collections' → logprob: -8.44783878326416
    10. ' typing' → logprob: -8.44783878326416

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.48942703008651733
    2. 'import' → logprob: -1.114427089691162
    3. '.' → logprob: -2.864427089691162
    4. '.import' → logprob: -6.489427089691162
    5. ' .' → logprob: -8.739426612854004
    6. '.im' → logprob: -9.614426612854004
    7. '	import' → logprob: -9.989426612854004
    8. '_import' → logprob: -10.489426612854004
    9. ' ' → logprob: -11.114426612854004
    10. '<|end|>' → logprob: -11.364426612854004

Token 8: ' accumulate' (ID: 74226)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2365344762802124
    2. 'group' → logprob: -1.6115344762802124
    3. 'chain' → logprob: -2.111534595489502
    4. 'cycle' → logprob: -2.111534595489502
    5. 'acc' → logprob: -2.361534595489502
    6. 'com' → logprob: -2.486534595489502
    7. ' group' → logprob: -3.486534595489502
    8. ' cycle' → logprob: -4.361534595489502
    9. 'product' → logprob: -4.486534595489502
    10. ' chain' → logprob: -4.611534595489502

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01954251527786255
    2. '(
' → logprob: -4.519542694091797
    3. 'def' → logprob: -5.894542694091797
    4. '.' → logprob: -6.394542694091797
    5. ',' → logprob: -6.519542694091797
    6. '\' → logprob: -7.144542694091797
    7. '\n' → logprob: -7.769542694091797
    8. '#' → logprob: -8.144542694091797
    9. '```' → logprob: -8.769542694091797
    10. 'import' → logprob: -8.894542694091797

Token 10: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06526647508144379
    2. 'def' → logprob: -3.6902663707733154
    3. '(
' → logprob: -4.5652666091918945
    4. '#' → logprob: -5.1902666091918945
    5. '\' → logprob: -5.1902666091918945
    6. '[' → logprob: -5.8152666091918945
    7. '`' → logprob: -6.1902666091918945
    8. ',' → logprob: -6.1902666091918945
    9. '```' → logprob: -6.1902666091918945
    10. 'a' → logprob: -6.3152666091918945

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4197709560394287
    2. '=' → logprob: -1.5447709560394287
    3. ' ' → logprob: -3.0447709560394287
    4. '_' → logprob: -3.4197709560394287
    5. '.' → logprob: -3.5447709560394287
    6. ',' → logprob: -4.169771194458008
    7. ')' → logprob: -6.294771194458008
    8. '  ' → logprob: -6.669771194458008
    9. '<|end|>' → logprob: -8.419771194458008
    10. 'u' → logprob: -8.544771194458008

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04138745367527008
    2. '10' → logprob: -3.4163875579833984
    3. '0' → logprob: -6.166387557983398
    4. ' int' → logprob: -6.166387557983398
    5. '5' → logprob: -6.541387557983398
    6. 'int' → logprob: -6.791387557983398
    7. '100' → logprob: -8.041387557983398
    8. '20' → logprob: -8.166387557983398
    9. '1' → logprob: -8.416387557983398
    10. '4' → logprob: -10.666387557983398

Token 13: '(__' (ID: 11782)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024714937899261713
    2. '(input' → logprob: -6.252471446990967
    3. '(N' → logprob: -8.252471923828125
    4. '('' → logprob: -8.502471923828125
    5. '()' → logprob: -10.752471923828125
    6. '(`' → logprob: -11.127471923828125
    7. ' (' → logprob: -11.502471923828125
    8. '```' → logprob: -12.502471923828125
    9. 'input' → logprob: -12.877471923828125
    10. '(
' → logprob: -12.877471923828125

Token 14: 'import' (ID: 561)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00045605594641529024
    2. '(input' → logprob: -8.000455856323242
    3. ' input' → logprob: -9.125455856323242
    4. '<input' → logprob: -12.125455856323242
    5. ')' → logprob: -12.625455856323242
    6. '(' → logprob: -14.875455856323242
    7. '__' → logprob: -14.875455856323242
    8. '```' → logprob: -15.000455856323242
    9. '"' → logprob: -15.125455856323242
    10. 'open' → logprob: -15.375455856323242

Token 15: '__('' (ID: 54460)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18776622414588928
    2. '('' → logprob: -2.1877663135528564
    3. '("' → logprob: -3.5627663135528564
    4. '("("' → logprob: -4.437766075134277
    5. '__('' → logprob: -4.812766075134277
    6. '__("' → logprob: -4.812766075134277
    7. '("__' → logprob: -7.062766075134277
    8. '('__' → logprob: -7.437766075134277
    9. '(
' → logprob: -8.562766075134277
    10. '("")' → logprob: -9.312766075134277

Token 16: 'built' (ID: 81936)
  Prédit: 'built'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'built' → logprob: -0.31385162472724915
    2. 'sys' → logprob: -1.3138515949249268
    3. '__' → logprob: -7.938851833343506
    4. ' built' → logprob: -8.438851356506348
    5. ' sys' → logprob: -11.813851356506348
    6. '-built' → logprob: -12.938851356506348
    7. ''s' → logprob: -13.063851356506348
    8. '=sys' → logprob: -13.688851356506348
    9. 'Built' → logprob: -14.563851356506348
    10. '_sys' → logprob: -14.688851356506348

Token 17: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -1.8624639324116288e-06
    2. 'in' → logprob: -13.375001907348633
    3. 'i' → logprob: -16.625001907348633
    4. '-ins' → logprob: -16.625001907348633
    5. '```' → logprob: -16.750001907348633
    6. '__' → logprob: -17.250001907348633
    7. '_ins' → logprob: -17.875001907348633
    8. 'ints' → logprob: -18.875001907348633
    9. 'int' → logprob: -19.500001907348633
    10. 'insu' → logprob: -19.625001907348633

Token 18: '').' (ID: 3426)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4391133487224579
    2. ').' → logprob: -1.5641133785247803
    3. '').' → logprob: -2.3141133785247803
    4. '.input' → logprob: -4.189113140106201
    5. ').__' → logprob: -4.314113140106201
    6. '.__' → logprob: -4.564113140106201
    7. '.exec' → logprob: -6.564113140106201
    8. ' ).' → logprob: -6.564113140106201
    9. '.import' → logprob: -7.189113140106201
    10. '.).' → logprob: -7.439113140106201

Token 19: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.084206375409849e-05
    2. ' input' → logprob: -11.375041007995605
    3. 'int' → logprob: -11.625041007995605
    4. 'eval' → logprob: -11.750041007995605
    5. 'abs' → logprob: -12.500041007995605
    6. '__' → logprob: -12.875041007995605
    7. 'open' → logprob: -13.125041007995605
    8. 'raw' → logprob: -13.250041007995605
    9. 'exec' → logprob: -14.000041007995605
    10. '(input' → logprob: -15.250041007995605

Token 20: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.877705991268158
    2. '()' → logprob: -1.5027060508728027
    3. '('' → logprob: -1.6277060508728027
    4. ')' → logprob: -2.2527060508728027
    5. '(' → logprob: -2.8777060508728027
    6. '(()' → logprob: -6.877706050872803
    7. '(""))' → logprob: -7.752706050872803
    8. '')' → logprob: -8.127705574035645
    9. ')(' → logprob: -8.377705574035645
    10. '(
' → logprob: -8.502705574035645

Token 21: 'H' (ID: 39)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9306507110595703
    2. '
' → logprob: -1.5556507110595703
    3. ')' → logprob: -2.4306507110595703
    4. '\' → logprob: -2.8056507110595703
    5. 'data' → logprob: -2.9306507110595703
    6. 'for' → logprob: -3.1806507110595703
    7. ' 
' → logprob: -3.3056507110595703
    8. '```' → logprob: -3.9306507110595703
    9. ' ' → logprob: -4.18065071105957
    10. '`' → logprob: -4.55565071105957

Token 22: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10115232318639755
    2. ')' → logprob: -3.6011524200439453
    3. '[]' → logprob: -3.7261524200439453
    4. ' =' → logprob: -4.601152420043945
    5. '.' → logprob: -4.726152420043945
    6. '[:]' → logprob: -4.976152420043945
    7. 's' → logprob: -5.476152420043945
    8. ']' → logprob: -5.601152420043945
    9. '<|end|>' → logprob: -5.851152420043945
    10. '=' → logprob: -5.851152420043945

Token 23: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1092112064361572
    2. 'list' → logprob: -1.2342112064361572
    3. '[list' → logprob: -1.8592112064361572
    4. '[]' → logprob: -2.4842112064361572
    5. ' [' → logprob: -2.7342112064361572
    6. ' list' → logprob: -3.1092112064361572
    7. '[int' → logprob: -4.234210968017578
    8. ' []' → logprob: -4.609210968017578
    9. '[input' → logprob: -5.859210968017578
    10. '[len' → logprob: -7.359210968017578

Token 24: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020273596048355103
    2. '(int' → logprob: -5.020273685455322
    3. '(map' → logprob: -5.145273685455322
    4. '(range' → logprob: -6.395273685455322
    5. '(__' → logprob: -6.395273685455322
    6. '(acc' → logprob: -6.520273685455322
    7. '()' → logprob: -6.645273685455322
    8. '(input' → logprob: -6.770273685455322
    9. '(eval' → logprob: -9.895273208618164
    10. '(convert' → logprob: -10.645273208618164

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.012572633102536201
    2. '(' → logprob: -4.387572765350342
    3. '(lambda' → logprob: -10.262572288513184
    4. 'int' → logprob: -12.012572288513184
    5. '(
' → logprob: -12.262572288513184
    6. '(str' → logprob: -12.387572288513184
    7. '(input' → logprob: -12.762572288513184
    8. '(eval' → logprob: -12.887572288513184
    9. '<int' → logprob: -13.137572288513184
    10. '(float' → logprob: -13.512572288513184

Token 26: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.44544756412506104
    2. '(' → logprob: -1.320447564125061
    3. '(__' → logprob: -2.9454474449157715
    4. ',input' → logprob: -3.9454474449157715
    5. ',' → logprob: -4.0704474449157715
    6. ',__' → logprob: -6.5704474449157715
    7. '(int' → logprob: -7.6954474449157715
    8. ')(__' → logprob: -7.8204474449157715
    9. '(),' → logprob: -8.32044792175293
    10. '(eval' → logprob: -8.57044792175293

Token 27: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2695600092411041
    2. 'input' → logprob: -1.5195599794387817
    3. ' __' → logprob: -4.394559860229492
    4. '(__' → logprob: -6.269559860229492
    5. ' input' → logprob: -6.519559860229492
    6. '(input' → logprob: -7.644559860229492
    7. ',input' → logprob: -8.144559860229492
    8. ',__' → logprob: -8.644559860229492
    9. '_input' → logprob: -8.769559860229492
    10. ')__' → logprob: -8.894559860229492

Token 28: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.20307506620883942
    2. '.import' → logprob: -2.5780751705169678
    3. '.__' → logprob: -2.7030751705169678
    4. '__' → logprob: -3.8280751705169678
    5. '_import' → logprob: -4.578074932098389
    6. ''import' → logprob: -5.828074932098389
    7. '(import' → logprob: -5.953074932098389
    8. '.' → logprob: -6.703074932098389
    9. '__('' → logprob: -7.703074932098389
    10. '('__' → logprob: -8.328075408935547

Token 29: '__('' (ID: 54460)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01023043505847454
    2. '__('' → logprob: -4.760230541229248
    3. '(' → logprob: -6.760230541229248
    4. '('__' → logprob: -8.88523006439209
    5. '(','' → logprob: -9.13523006439209
    6. '>('' → logprob: -10.01023006439209
    7. '(('' → logprob: -10.26023006439209
    8. '('_' → logprob: -10.38523006439209
    9. '_' → logprob: -11.63523006439209
    10. '('',' → logprob: -11.63523006439209

Token 30: 'built' (ID: 81936)
  Prédit: 'built'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'built' → logprob: -0.0008348815608769655
    2. ''b' → logprob: -7.375834941864014
    3. ' built' → logprob: -9.125834465026855
    4. 'b' → logprob: -9.750834465026855
    5. '-built' → logprob: -10.875834465026855
    6. ''' → logprob: -11.250834465026855
    7. 'builtin' → logprob: -12.000834465026855
    8. '__' → logprob: -14.000834465026855
    9. 'collections' → logprob: -14.875834465026855
    10. ''s' → logprob: -14.875834465026855

Token 31: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.054892443120479584
    2. '__' → logprob: -3.4298925399780273
    3. 'uls' → logprob: -4.929892539978027
    4. '__('' → logprob: -5.054892539978027
    5. 'ils' → logprob: -6.304892539978027
    6. 'ids' → logprob: -7.179892539978027
    7. 's' → logprob: -7.179892539978027
    8. 'uil' → logprob: -7.304892539978027
    9. ''s' → logprob: -7.679892539978027
    10. '('' → logprob: -8.304892539978027

Token 32: '').' (ID: 3426)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.13007226586341858
    2. '').' → logprob: -2.5050723552703857
    3. '.input' → logprob: -3.5050723552703857
    4. ')' → logprob: -5.505072116851807
    5. ''.' → logprob: -6.130072116851807
    6. '.' → logprob: -6.255072116851807
    7. '.import' → logprob: -8.005072593688965
    8. '().' → logprob: -8.005072593688965
    9. ')['' → logprob: -8.380072593688965
    10. '('').' → logprob: -8.755072593688965

Token 33: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.03521392197581e-05
    2. ' input' → logprob: -10.500030517578125
    3. '(input' → logprob: -13.000030517578125
    4. ')' → logprob: -15.625030517578125
    5. '=input' → logprob: -16.250030517578125
    6. '<input' → logprob: -16.875030517578125
    7. ',input' → logprob: -17.000030517578125
    8. '	input' → logprob: -17.000030517578125
    9. '.input' → logprob: -17.375030517578125
    10. '[input' → logprob: -17.750030517578125

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01911175064742565
    2. '())' → logprob: -4.894111633300781
    3. '()))' → logprob: -4.894111633300781
    4. '()' → logprob: -5.894111633300781
    5. ')' → logprob: -7.019111633300781
    6. '()));' → logprob: -8.894111633300781
    7. '))' → logprob: -9.519111633300781
    8. '(' → logprob: -10.519111633300781
    9. '())))' → logprob: -10.644111633300781
    10. '());' → logprob: -11.019111633300781

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003392767102923244
    2. 'strip' → logprob: -8.00033950805664
    3. ' split' → logprob: -13.25033950805664
    4. 'rstrip' → logprob: -13.25033950805664
    5. '().' → logprob: -15.75033950805664
    6. '(split' → logprob: -16.12533950805664
    7. ')' → logprob: -16.87533950805664
    8. 'spl' → logprob: -17.62533950805664
    9. '.split' → logprob: -17.75033950805664
    10. 'replace' → logprob: -18.25033950805664

Token 36: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.26411041617393494
    2. '))' → logprob: -2.2641103267669678
    3. '())' → logprob: -2.3891103267669678
    4. '(' → logprob: -4.139110565185547
    5. ')' → logprob: -4.264110565185547
    6. '()' → logprob: -5.139110565185547
    7. ''))' → logprob: -8.764110565185547
    8. '('' → logprob: -8.889110565185547
    9. '(','' → logprob: -9.514110565185547
    10. '())))' → logprob: -9.889110565185547

Token 37: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1313827484846115
    2. '_' → logprob: -3.131382703781128
    3. '=' → logprob: -3.381382703781128
    4. '#' → logprob: -3.881382703781128
    5. '
' → logprob: -5.381382942199707
    6. ')
' → logprob: -5.506382942199707
    7. '_
' → logprob: -5.881382942199707
    8. 'a' → logprob: -6.006382942199707
    9. 'd' → logprob: -6.131382942199707
    10. '(' → logprob: -6.631382942199707

Token 38: ' Gén' (ID: 71828)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2593109607696533
    2. 'max' → logprob: -2.5093109607696533
    3. ' dp' → logprob: -3.8843109607696533
    4. 'min' → logprob: -4.259310722351074
    5. 'prefix' → logprob: -4.259310722351074
    6. 'd' → logprob: -4.384310722351074
    7. 'acc' → logprob: -4.384310722351074
    8. 'ans' → logprob: -4.759310722351074
    9. '#' → logprob: -4.884310722351074
    10. 's' → logprob: -5.259310722351074

Token 39: 'ère' (ID: 4346)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.7302214503288269
    2. 'er' → logprob: -1.1052215099334717
    3. 'éra' → logprob: -2.6052215099334717
    4. 'éral' → logprob: -2.6052215099334717
    5. 'érale' → logprob: -4.480221271514893
    6. 'ération' → logprob: -5.105221271514893
    7. 'e' → logprob: -5.480221271514893
    8. 'ér' → logprob: -5.605221271514893
    9. 'érer' → logprob: -5.855221271514893
    10. '#' → logprob: -5.980221271514893

Token 40: ' un' (ID: 537)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8729355335235596
    2. ' la' → logprob: -1.4979355335235596
    3. ' les' → logprob: -2.2479355335235596
    4. ' une' → logprob: -2.3729355335235596
    5. '_' → logprob: -3.2479355335235596
    6. ' ' → logprob: -3.4979355335235596
    7. ' des' → logprob: -4.3729352951049805
    8. ' un' → logprob: -4.7479352951049805
    9. ' le' → logprob: -4.7479352951049805
    10. 'r' → logprob: -4.7479352951049805

Token 41: ' accumulate' (ID: 74226)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4172508716583252
    2. 'e' → logprob: -1.6672508716583252
    3. 'acc' → logprob: -1.7922508716583252
    4. '_' → logprob: -2.542250871658325
    5. 'es' → logprob: -3.292250871658325
    6. ' accumulate' → logprob: -3.292250871658325
    7. ' cumul' → logprob: -3.667250871658325
    8. 'liste' → logprob: -3.667250871658325
    9. ' list' → logprob: -4.042250633239746
    10. ' tableau' → logprob: -4.292250633239746

Token 42: 'ur' (ID: 330)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24359950423240662
    2. 'd' → logprob: -1.618599534034729
    3. '(H' → logprob: -5.1185994148254395
    4. 'ur' → logprob: -5.2435994148254395
    5. '(d' → logprob: -6.1185994148254395
    6. '(acc' → logprob: -6.2435994148254395
    7. 'r' → logprob: -7.6185994148254395
    8. '(e' → logprob: -7.8685994148254395
    9. '('' → logprob: -8.493599891662598
    10. '(lambda' → logprob: -8.618599891662598

Token 43: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24403183162212372
    2. '_' → logprob: -1.8690317869186401
    3. 's' → logprob: -3.8690319061279297
    4. 'def' → logprob: -4.11903190612793
    5. 'acc' → logprob: -4.86903190612793
    6. '(acc' → logprob: -4.99403190612793
    7. '(lambda' → logprob: -6.24403190612793
    8. 'H' → logprob: -6.24403190612793
    9. 'a' → logprob: -6.99403190612793
    10. 'ac' → logprob: -7.36903190612793

Token 44: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0522390604019165
    2. 's' → logprob: -2.052238941192627
    3. 'H' → logprob: -2.177238941192627
    4. 'diff' → logprob: -2.302238941192627
    5. 'maximum' → logprob: -2.552238941192627
    6. ' max' → logprob: -3.552238941192627
    7. 'dif' → logprob: -3.552238941192627
    8. 'minimum' → logprob: -3.677238941192627
    9. 'min' → logprob: -4.052238941192627
    10. ' maximum' → logprob: -4.052238941192627

Token 45: ' success' (ID: 3505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2771250009536743
    2. '(H' → logprob: -2.1521248817443848
    3. '(' → logprob: -2.6521248817443848
    4. '(lambda' → logprob: -3.4021248817443848
    5. '_' → logprob: -5.027124881744385
    6. '(max' → logprob: -5.027124881744385
    7. 'H' → logprob: -5.652124881744385
    8. 'max' → logprob: -6.527124881744385
    9. ')' → logprob: -7.027124881744385
    10. '(_,' → logprob: -7.277124881744385

Token 46: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.7662482261657715
    2. 'urs' → logprob: -1.0162482261657715
    3. 's' → logprob: -2.1412482261657715
    4. 'if' → logprob: -4.6412482261657715
    5. 'es' → logprob: -5.2662482261657715
    6. 'u' → logprob: -5.3912482261657715
    7. 'eurs' → logprob: -5.3912482261657715
    8. 'f' → logprob: -5.6412482261657715
    9. 'ur' → logprob: -6.0162482261657715
    10. '```' → logprob: -6.0162482261657715

Token 47: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0295617580413818
    2. '(H' → logprob: -1.1545617580413818
    3. '(lambda' → logprob: -1.9045617580413818
    4. 'H' → logprob: -2.029561758041382
    5. '(max' → logprob: -4.404561996459961
    6. ')' → logprob: -4.654561996459961
    7. '(acc' → logprob: -5.279561996459961
    8. '_' → logprob: -5.529561996459961
    9. 's' → logprob: -5.779561996459961
    10. 'lambda' → logprob: -6.029561996459961

Token 48: ' puis' (ID: 18766)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.894200325012207
    2. 'lambda' → logprob: -1.019200325012207
    3. 'initial' → logprob: -2.644200325012207
    4. ' lambda' → logprob: -2.644200325012207
    5. ' initial' → logprob: -3.644200325012207
    6. 'reverse' → logprob: -3.769200325012207
    7. ' H' → logprob: -3.894200325012207
    8. 'max' → logprob: -4.894200325012207
    9. '(lambda' → logprob: -5.769200325012207
    10. 'key' → logprob: -5.894200325012207

Token 49: ' zip' (ID: 16216)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.013565182685852
    2. ' list' → logprob: -1.388565182685852
    3. 'lambda' → logprob: -2.7635650634765625
    4. ' accumulate' → logprob: -2.7635650634765625
    5. ' [' → logprob: -3.5135650634765625
    6. ' H' → logprob: -3.5135650634765625
    7. '[' → logprob: -3.6385650634765625
    8. ' reverse' → logprob: -3.6385650634765625
    9. 'list' → logprob: -3.7635650634765625
    10. 'reduce' → logprob: -4.0135650634765625

Token 50: 'pe' (ID: 424)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.2848495543003082
    2. '(' → logprob: -1.4098495244979858
    3. '(max' → logprob: -6.659849643707275
    4. 'H' → logprob: -7.409849643707275
    5. '((' → logprob: -7.659849643707275
    6. '(*' → logprob: -7.909849643707275
    7. '([' → logprob: -8.409849166870117
    8. '(range' → logprob: -8.659849166870117
    9. '(zip' → logprob: -9.034849166870117
    10. 'max' → logprob: -9.409849166870117

Token 51: ' avec' (ID: 3937)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.3193565309047699
    2. '(' → logprob: -1.3193565607070923
    3. '(*' → logprob: -5.944356441497803
    4. 'H' → logprob: -5.944356441497803
    5. '(max' → logprob: -8.569356918334961
    6. '((' → logprob: -9.069356918334961
    7. '(
' → logprob: -9.444356918334961
    8. '(acc' → logprob: -9.569356918334961
    9. '(range' → logprob: -9.944356918334961
    10. 'max' → logprob: -9.944356918334961

Token 52: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1480996012687683
    2. ' H' → logprob: -2.023099660873413
    3. '(' → logprob: -7.148099422454834
    4. '(H' → logprob: -7.148099422454834
    5. 'acc' → logprob: -7.148099422454834
    6. ' ' → logprob: -8.398099899291992
    7. ' (' → logprob: -8.398099899291992
    8. '[' → logprob: -8.523099899291992
    9. ' zip' → logprob: -8.523099899291992
    10. ' range' → logprob: -8.648099899291992

Token 53: ' pour' (ID: 1930)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.4335824251174927
    2. 'acc' → logprob: -1.3085824251174927
    3. '(' → logprob: -3.433582305908203
    4. 'H' → logprob: -3.683582305908203
    5. '(max' → logprob: -5.308582305908203
    6. '(H' → logprob: -5.308582305908203
    7. 'max' → logprob: -5.433582305908203
    8. 'zip' → logprob: -5.933582305908203
    9. '(zip' → logprob: -6.308582305908203
    10. '(range' → logprob: -6.308582305908203

Token 54: ' comparer' (ID: 125081)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.24571183323860168
    2. ' comparer' → logprob: -3.2457118034362793
    3. ' déterminer' → logprob: -3.6207118034362793
    4. ' zip' → logprob: -3.7457118034362793
    5. ' filtr' → logprob: -3.9957118034362793
    6. ' max' → logprob: -4.495711803436279
    7. ')' → logprob: -4.620711803436279
    8. ' le' → logprob: -4.745711803436279
    9. ' génér' → logprob: -4.870711803436279
    10. ' la' → logprob: -4.995711803436279

Token 55: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.566365122795105
    2. 'max' → logprob: -2.0663652420043945
    3. '(acc' → logprob: -2.3163652420043945
    4. '(max' → logprob: -3.1913652420043945
    5. 'H' → logprob: -3.3163652420043945
    6. ')' → logprob: -3.4413652420043945
    7. '(H' → logprob: -3.5663652420043945
    8. '(
' → logprob: -3.8163652420043945
    9. 'acc' → logprob: -3.8163652420043945
    10. '(range' → logprob: -5.5663652420043945

Token 56: 'res' (ID: 430)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.22878064215183258
    2. 'H' → logprob: -2.728780746459961
    3. 'acc' → logprob: -3.478780746459961
    4. ')' → logprob: -3.728780746459961
    5. '(max' → logprob: -4.103780746459961
    6. 'zip' → logprob: -4.228780746459961
    7. 'range' → logprob: -4.353780746459961
    8. '(' → logprob: -4.978780746459961
    9. '(acc' → logprob: -5.103780746459961
    10. '(
' → logprob: -5.728780746459961

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29336124658584595
    2. '=' → logprob: -1.5433611869812012
    3. 'ult' → logprob: -3.293361186981201
    4. '_' → logprob: -6.668361186981201
    5. 'u' → logprob: -6.793361186981201
    6. 's' → logprob: -8.04336166381836
    7. 'ults' → logprob: -8.66836166381836
    8. 'ultat' → logprob: -8.91836166381836
    9. 'ul' → logprob: -9.04336166381836
    10. '(' → logprob: -9.16836166381836

Token 58: ' zip' (ID: 16216)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04301174357533455
    2. 'max' → logprob: -4.293011665344238
    3. ' list' → logprob: -4.418011665344238
    4. 'zip' → logprob: -5.293011665344238
    5. '[max' → logprob: -5.418011665344238
    6. 'acc' → logprob: -6.543011665344238
    7. '[' → logprob: -6.918011665344238
    8. ' zip' → logprob: -7.168011665344238
    9. '[list' → logprob: -7.168011665344238
    10. 'map' → logprob: -7.418011665344238

Token 59: '(H' (ID: 20904)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0004137496289331466
    2. '(max' → logprob: -8.25041389465332
    3. '(' → logprob: -9.37541389465332
    4. '(ac' → logprob: -10.75041389465332
    5. '(list' → logprob: -11.37541389465332
    6. '(zip' → logprob: -11.37541389465332
    7. '(it' → logprob: -11.50041389465332
    8. '(range' → logprob: -12.25041389465332
    9. '(map' → logprob: -12.37541389465332
    10. '((' → logprob: -13.62541389465332

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007672215579077601
    2. '(acc' → logprob: -8.00076675415039
    3. ' ,' → logprob: -8.75076675415039
    4. '(' → logprob: -8.87576675415039
    5. 'acc' → logprob: -9.25076675415039
    6. '(),' → logprob: -11.75076675415039
    7. ',(' → logprob: -12.62576675415039
    8. ' (' → logprob: -12.62576675415039
    9. ',[' → logprob: -12.87576675415039
    10. '[' → logprob: -13.12576675415039

Token 61: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.09298338741064072
    2. ' accumulate' → logprob: -2.4679834842681885
    3. 'list' → logprob: -5.717983245849609
    4. '(acc' → logprob: -8.34298324584961
    5. ' list' → logprob: -8.46798324584961
    6. 'ac' → logprob: -9.46798324584961
    7. ')' → logprob: -9.71798324584961
    8. 'it' → logprob: -10.09298324584961
    9. '	acc' → logprob: -10.21798324584961
    10. ' ' → logprob: -10.96798324584961

Token 62: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0203888900578022
    2. '(' → logprob: -4.395389080047607
    3. '(lambda' → logprob: -5.145389080047607
    4. '(max' → logprob: -6.270389080047607
    5. '(N' → logprob: -10.02038860321045
    6. ')' → logprob: -11.02038860321045
    7. ',' → logprob: -11.27038860321045
    8. ')(' → logprob: -11.52038860321045
    9. 'H' → logprob: -12.27038860321045
    10. ',H' → logprob: -12.27038860321045

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015252141747623682
    2. ',max' → logprob: -6.626525402069092
    3. ' ,' → logprob: -8.626524925231934
    4. 'max' → logprob: -11.376524925231934
    5. '),' → logprob: -13.001524925231934
    6. ',key' → logprob: -13.251524925231934
    7. ',min' → logprob: -14.376524925231934
    8. '，' → logprob: -14.626524925231934
    9. ',
' → logprob: -14.751524925231934
    10. 'lambda' → logprob: -14.876524925231934

Token 64: ' func' (ID: 4660)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06299606710672379
    2. 'lambda' → logprob: -3.1879961490631104
    3. ' max' → logprob: -4.312995910644531
    4. ' lambda' → logprob: -5.062995910644531
    5. '	max' → logprob: -10.562995910644531
    6. ' ' → logprob: -10.687995910644531
    7. '   ' → logprob: -11.812995910644531
    8. ')' → logprob: -12.187995910644531
    9. 'maximum' → logprob: -12.562995910644531
    10. '(lambda' → logprob: -12.687995910644531

Token 65: '=max' (ID: 102952)
  Prédit: '=max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=max' → logprob: -0.1788209080696106
    2. '=lambda' → logprob: -1.9288208484649658
    3. '=' → logprob: -4.428821086883545
    4. 'max' → logprob: -5.053821086883545
    5. 'lambda' → logprob: -10.178820610046387
    6. ' max' → logprob: -10.303820610046387
    7. 'amax' → logprob: -11.553820610046387
    8. '	max' → logprob: -12.053820610046387
    9. '=min' → logprob: -12.678820610046387
    10. 'a' → logprob: -13.428820610046387

Token 66: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002820736262947321
    2. '))
' → logprob: -9.000282287597656
    3. ')' → logprob: -9.375282287597656
    4. '),' → logprob: -10.375282287597656
    5. ')))' → logprob: -11.000282287597656
    6. '))

' → logprob: -11.000282287597656
    7. ' ))' → logprob: -12.625282287597656
    8. '));' → logprob: -13.125282287597656
    9. ',' → logprob: -13.750282287597656
    10. '()))' → logprob: -14.500282287597656

Token 67: 'cnt' (ID: 33160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31798484921455383
    2. '(' → logprob: -1.4429848194122314
    3. ':' → logprob: -4.5679850578308105
    4. ',' → logprob: -4.9429850578308105
    5. '()' → logprob: -5.8179850578308105
    6. 'for' → logprob: -6.1929850578308105
    7. '(H' → logprob: -6.1929850578308105
    8. '):' → logprob: -6.3179850578308105
    9. '(res' → logprob: -6.4429850578308105
    10. 'res' → logprob: -6.8179850578308105

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2974507510662079
    2. ' =' → logprob: -1.4224507808685303
    3. '(' → logprob: -4.297450542449951
    4. '_' → logprob: -6.422450542449951
    5. 's' → logprob: -8.04745101928711
    6. ')' → logprob: -9.04745101928711
    7. 'or' → logprob: -9.29745101928711
    8. ' ' → logprob: -9.67245101928711
    9. '()' → logprob: -9.92245101928711
    10. ',' → logprob: -9.92245101928711

Token 69: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40441635251045227
    2. ' ' → logprob: -1.1544163227081299
    3. ' sum' → logprob: -4.529416561126709
    4. 'sum' → logprob: -5.279416561126709
    5. '1' → logprob: -6.529416561126709
    6. '(sum' → logprob: -11.27941608428955
    7. '(' → logprob: -11.65441608428955
    8. ' ' → logprob: -11.90441608428955
    9. '  ' → logprob: -12.77941608428955
    10. '2' → logprob: -12.90441608428955

Token 70: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013693748973309994
    2. '((' → logprob: -4.513693809509277
    3. '(lambda' → logprob: -6.513693809509277
    4. '(x' → logprob: -7.138693809509277
    5. '(h' → logprob: -8.138693809509277
    6. '(
' → logprob: -11.013693809509277
    7. '(c' → logprob: -11.263693809509277
    8. '([' → logprob: -11.263693809509277
    9. '(a' → logprob: -11.638693809509277
    10. '(i' → logprob: -12.388693809509277

Token 71: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0002969703928101808
    2. '(' → logprob: -8.250296592712402
    3. 'lambda' → logprob: -10.875296592712402
    4. ')' → logprob: -12.250296592712402
    5. '(
' → logprob: -12.750296592712402
    6. '=lambda' → logprob: -13.125296592712402
    7. ' (' → logprob: -13.125296592712402
    8. '(l' → logprob: -13.250296592712402
    9. '```' → logprob: -13.875296592712402
    10. '(int' → logprob: -14.000296592712402

Token 72: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5292025208473206
    2. ' lambda' → logprob: -1.1542024612426758
    3. '(lambda' → logprob: -2.404202461242676
    4. '=lambda' → logprob: -5.404202461242676
    5. ':' → logprob: -8.279202461242676
    6. ',' → logprob: -8.654202461242676
    7. '   ' → logprob: -9.279202461242676
    8. ')' → logprob: -9.904202461242676
    9. ' (' → logprob: -10.154202461242676
    10. 'λ' → logprob: -10.279202461242676

Token 73: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012775085866451263
    2. ' :' → logprob: -4.38777494430542
    3. ':x' → logprob: -9.512775421142578
    4. '=lambda' → logprob: -9.887775421142578
    5. 'lambda' → logprob: -10.262775421142578
    6. ':
' → logprob: -10.512775421142578
    7. ':(' → logprob: -10.512775421142578
    8. ',' → logprob: -11.512775421142578
    9. ':`' → logprob: -12.137775421142578
    10. '=' → logprob: -12.887775421142578

Token 74: ' ' (ID: 220)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0967450737953186
    2. '1' → logprob: -3.596745014190674
    3. ' lambda' → logprob: -3.596745014190674
    4. 'int' → logprob: -3.971745014190674
    5. '(lambda' → logprob: -4.721745014190674
    6. 'x' → logprob: -5.971745014190674
    7. 'max' → logprob: -6.721745014190674
    8. '0' → logprob: -6.721745014190674
    9. ' x' → logprob: -7.346745014190674
    10. ' int' → logprob: -7.346745014190674

Token 75: '1' (ID: 16)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.35737892985343933
    2. '1' → logprob: -1.4823789596557617
    3. ' lambda' → logprob: -2.8573789596557617
    4. 'x' → logprob: -4.982378959655762
    5. ' ' → logprob: -5.732378959655762
    6. '(lambda' → logprob: -6.107378959655762
    7. ' x' → logprob: -6.232378959655762
    8. '   ' → logprob: -7.857378959655762
    9. '0' → logprob: -7.982378959655762
    10. 'int' → logprob: -7.982378959655762

Token 76: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6182003617286682
    2. ',' → logprob: -0.8682003617286682
    3. ' if' → logprob: -4.493200302124023
    4. '[' → logprob: -4.868200302124023
    5. ' :' → logprob: -5.118200302124023
    6. ',x' → logprob: -5.243200302124023
    7. ' x' → logprob: -5.368200302124023
    8. 'if' → logprob: -5.993200302124023
    9. ':x' → logprob: -6.493200302124023
    10. 'x' → logprob: -6.868200302124023

Token 77: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4744395613670349
    2. 'x' → logprob: -0.9744395613670349
    3. '(x' → logprob: -9.59943962097168
    4. ' ' → logprob: -9.97443962097168
    5. '[' → logprob: -9.97443962097168
    6. '   ' → logprob: -10.22443962097168
    7. '	x' → logprob: -10.34943962097168
    8. ')' → logprob: -10.97443962097168
    9. '0' → logprob: -10.97443962097168
    10. '  ' → logprob: -11.22443962097168

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001828457461670041
    2. ' ' → logprob: -7.626828670501709
    3. '0' → logprob: -8.00182819366455
    4. ':' → logprob: -8.37682819366455
    5. ' [' → logprob: -9.25182819366455
    6. '>' → logprob: -9.37682819366455
    7. ')' → logprob: -9.50182819366455
    8. 'x' → logprob: -9.87682819366455
    9. '[]' → logprob: -10.00182819366455
    10. ',' → logprob: -10.12682819366455

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05857544392347336
    2. '1' → logprob: -2.933575391769409
    3. ' ' → logprob: -5.683575630187988
    4. '[' → logprob: -8.308575630187988
    5. '>' → logprob: -11.808575630187988
    6. '   ' → logprob: -12.496075630187988
    7. '-' → logprob: -12.871075630187988
    8. '=' → logprob: -13.058575630187988
    9. '  ' → logprob: -13.121075630187988
    10. '    ' → logprob: -13.308575630187988

Token 80: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0744687169790268
    2. ' >' → logprob: -2.6994686126708984
    3. '>x' → logprob: -5.699468612670898
    4. '>=' → logprob: -7.324468612670898
    5. ' ' → logprob: -8.699468612670898
    6. ' >=' → logprob: -9.574468612670898
    7. ')' → logprob: -9.699468612670898
    8. '">' → logprob: -9.824468612670898
    9. '==' → logprob: -10.199468612670898
    10. ')>' → logprob: -10.949468612670898

Token 81: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3293941020965576
    2. ' >' → logprob: -1.3293941020965576
    3. '>=' → logprob: -4.829394340515137
    4. ' >=' → logprob: -5.329394340515137
    5. ' ' → logprob: -6.204394340515137
    6. '>x' → logprob: -7.329394340515137
    7. '==' → logprob: -8.704394340515137
    8. '[' → logprob: -8.829394340515137
    9. ' ==' → logprob: -10.079394340515137
    10. '">' → logprob: -11.204394340515137

Token 82: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007606747094541788
    2. ' x' → logprob: -4.8826069831848145
    3. 'max' → logprob: -15.632606506347656
    4. ')x' → logprob: -15.882606506347656
    5. '(x' → logprob: -16.382606506347656
    6. '	x' → logprob: -16.882606506347656
    7. ' ' → logprob: -16.882606506347656
    8. '<|end|>' → logprob: -17.507606506347656
    9. ')' → logprob: -18.382606506347656
    10. ',' → logprob: -18.570106506347656

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4779433012008667
    2. '1' → logprob: -0.9779433012008667
    3. ' ' → logprob: -6.227943420410156
    4. ' [' → logprob: -6.852943420410156
    5. ',' → logprob: -8.602943420410156
    6. '   ' → logprob: -9.227943420410156
    7. ')' → logprob: -9.290443420410156
    8. '.' → logprob: -9.665443420410156
    9. '][' → logprob: -10.102943420410156
    10. ':' → logprob: -10.165443420410156

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021831797494087368
    2. '0' → logprob: -9.250218391418457
    3. '[' → logprob: -10.125218391418457
    4. ' ' → logprob: -10.500218391418457
    5. '])' → logprob: -11.687718391418457
    6. '-' → logprob: -11.937718391418457
    7. ']' → logprob: -12.000218391418457
    8. ')' → logprob: -12.250218391418457
    9. '<|end|>' → logprob: -12.437718391418457
    10. '<|end|>' → logprob: -13.187718391418457

Token 85: ']' (ID: 60)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0071740057319402695
    2. 'else' → logprob: -5.007174015045166
    3. ')' → logprob: -8.132173538208008
    4. '[' → logprob: -9.007173538208008
    5. ' ' → logprob: -11.132173538208008
    6. '[]' → logprob: -11.382173538208008
    7. '0' → logprob: -12.632173538208008
    8. '	else' → logprob: -12.632173538208008
    9. ' )' → logprob: -13.757173538208008
    10. '   ' → logprob: -14.007173538208008

Token 86: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.009130209684371948
    2. 'else' → logprob: -4.759130001068115
    3. ')' → logprob: -8.259130477905273
    4. ' ' → logprob: -8.509130477905273
    5. ' )' → logprob: -11.759130477905273
    6. '[' → logprob: -12.134130477905273
    7. '-' → logprob: -12.634130477905273
    8. '0' → logprob: -12.634130477905273
    9. '    ' → logprob: -12.634130477905273
    10. '        ' → logprob: -12.634130477905273

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30864188075065613
    2. ' ' → logprob: -1.5586419105529785
    3. '0' → logprob: -2.9336419105529785
    4. ' x' → logprob: -6.5586419105529785
    5. 'x' → logprob: -8.43364143371582
    6. '2' → logprob: -8.93364143371582
    7. ')' → logprob: -10.24614143371582
    8. '  ' → logprob: -10.93364143371582
    9. ' else' → logprob: -11.12114143371582
    10. '   ' → logprob: -11.18364143371582

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032968937885016203
    2. ' ' → logprob: -5.753296852111816
    3. '1' → logprob: -9.128296852111816
    4. '   ' → logprob: -12.378296852111816
    5. '  ' → logprob: -13.128296852111816
    6. ')' → logprob: -14.503296852111816
    7. '    ' → logprob: -14.628296852111816
    8. '-' → logprob: -14.940796852111816
    9. 'False' → logprob: -15.128296852111816
    10. '2' → logprob: -15.378296852111816

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03299274668097496
    2. '),' → logprob: -4.157992839813232
    3. '))' → logprob: -4.282992839813232
    4. ')' → logprob: -6.282992839813232
    5. ',x' → logprob: -7.157992839813232
    6. ' ,' → logprob: -8.282992362976074
    7. ',
' → logprob: -11.407992362976074
    8. '(x' → logprob: -11.407992362976074
    9. ',res' → logprob: -11.782992362976074
    10. ')))' → logprob: -11.782992362976074

Token 90: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.20145446062088013
    2. ' res' → logprob: -1.7014544010162354
    3. ')' → logprob: -11.076454162597656
    4. '(res' → logprob: -11.951454162597656
    5. ',res' → logprob: -12.451454162597656
    6. 'list' → logprob: -12.576454162597656
    7. ' list' → logprob: -12.826454162597656
    8. '   ' → logprob: -13.076454162597656
    9. '	res' → logprob: -13.076454162597656
    10. ' zip' → logprob: -13.576454162597656

Token 91: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001339527778327465
    2. ')' → logprob: -6.626339435577393
    3. '))
' → logprob: -11.75133991241455
    4. ')))' → logprob: -12.25133991241455
    5. ' ))' → logprob: -14.62633991241455
    6. '),' → logprob: -15.87633991241455
    7. '));' → logprob: -16.001338958740234
    8. ')
' → logprob: -16.751338958740234
    9. '))

' → logprob: -17.126338958740234
    10. '()))' → logprob: -17.501338958740234

Token 92: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03146808221936226
    2. '
' → logprob: -4.406467914581299
    3. ')
' → logprob: -4.406467914581299
    4. '(' → logprob: -5.281467914581299
    5. 'print' → logprob: -7.781467914581299
    6. '(
' → logprob: -8.531468391418457
    7. '' → logprob: -9.156468391418457
    8. '+' → logprob: -9.281468391418457
    9. '()' → logprob: -9.531468391418457
    10. '```' → logprob: -9.781468391418457

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.889808714389801
    2. ' ' → logprob: -1.2648086547851562
    3. '0' → logprob: -2.1398086547851562
    4. '-' → logprob: -2.1398086547851562
    5. ' -' → logprob: -2.6398086547851562
    6. 'len' → logprob: -10.014808654785156
    7. ' len' → logprob: -10.639808654785156
    8. '10' → logprob: -10.889808654785156
    9. '2' → logprob: -10.952308654785156
    10. '+' → logprob: -10.952308654785156

Token 94: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5180553793907166
    2. '0' → logprob: -1.6430554389953613
    3. '1' → logprob: -2.0180554389953613
    4. ' -' → logprob: -3.0180554389953613
    5. ' ' → logprob: -3.6430554389953613
    6. '(-' → logprob: -7.143055438995361
    7. ' (' → logprob: -7.643055438995361
    8. '(' → logprob: -7.893055438995361
    9. 'N' → logprob: -8.643054962158203
    10. '(N' → logprob: -8.768054962158203

Token 95: '*((' (ID: 123115)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00942986086010933
    2. '<|end|>' → logprob: -4.884429931640625
    3. '
' → logprob: -6.634429931640625
    4. '<|end|>' → logprob: -9.134429931640625
    5. ' )' → logprob: -9.509429931640625
    6. '```' → logprob: -9.634429931640625
    7. '#' → logprob: -9.634429931640625
    8. ' ' → logprob: -9.759429931640625
    9. ' ' → logprob: -10.884429931640625
    10. ')
' → logprob: -10.884429931640625

Token 96: 'not' (ID: 2878)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12470290064811707
    2. 'H' → logprob: -2.6247029304504395
    3. ' N' → logprob: -3.9997029304504395
    4. 'cnt' → logprob: -4.4997029304504395
    5. 'len' → logprob: -5.6247029304504395
    6. '0' → logprob: -5.6247029304504395
    7. ')' → logprob: -5.8747029304504395
    8. ' H' → logprob: -6.2497029304504395
    9. ' cnt' → logprob: -7.1247029304504395
    10. 'res' → logprob: -7.9997029304504395

Token 97: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.36156004667282104
    2. ' H' → logprob: -1.7365601062774658
    3. 'N' → logprob: -2.861560106277466
    4. ' N' → logprob: -3.236560106277466
    5. 'cnt' → logprob: -5.236559867858887
    6. ' cnt' → logprob: -5.361559867858887
    7. ' not' → logprob: -5.986559867858887
    8. ' any' → logprob: -5.986559867858887
    9. ' res' → logprob: -6.361559867858887
    10. '(H' → logprob: -6.361559867858887

Token 98: ')+(' (ID: 104644)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006094808224588633
    2. ')==' → logprob: -6.256094932556152
    3. '))' → logprob: -6.881094932556152
    4. ' or' → logprob: -7.006094932556152
    5. ' )' → logprob: -7.256094932556152
    6. '[' → logprob: -7.506094932556152
    7. '==' → logprob: -7.506094932556152
    8. ')))' → logprob: -9.006094932556152
    9. ' else' → logprob: -9.256094932556152
    10. 'or' → logprob: -9.631094932556152

Token 99: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.0138765573501587
    2. 'N' → logprob: -1.5138765573501587
    3. ' N' → logprob: -1.8888765573501587
    4. ' H' → logprob: -1.8888765573501587
    5. ' not' → logprob: -3.888876438140869
    6. '[' → logprob: -4.013876438140869
    7. 'len' → logprob: -4.263876438140869
    8. ' ' → logprob: -4.888876438140869
    9. '0' → logprob: -5.138876438140869
    10. '(N' → logprob: -5.263876438140869

Token 100: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22836564481258392
    2. '[-' → logprob: -1.7283656597137451
    3. ' and' → logprob: -3.853365659713745
    4. '))' → logprob: -5.853365421295166
    5. '==' → logprob: -7.478365421295166
    6. ')))' → logprob: -7.728365421295166
    7. ')' → logprob: -8.103365898132324
    8. 'and' → logprob: -8.353365898132324
    9. ' ))' → logprob: -8.603365898132324
    10. ' [' → logprob: -8.728365898132324

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06736171245574951
    2. '-' → logprob: -2.817361831665039
    3. '1' → logprob: -5.942361831665039
    4. ':' → logprob: -6.442361831665039
    5. ' ' → logprob: -8.067361831665039
    6. '::-' → logprob: -8.567361831665039
    7. ':-' → logprob: -8.817361831665039
    8. ' -' → logprob: -9.317361831665039
    9. '[' → logprob: -9.442361831665039
    10. ':]' → logprob: -10.442361831665039

Token 102: ']<' (ID: 80424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.187970519065857
    2. '>' → logprob: -2.0629706382751465
    3. ']' → logprob: -2.0629706382751465
    4. ' >=' → logprob: -2.1879706382751465
    5. ']>=' → logprob: -2.1879706382751465
    6. '==' → logprob: -2.6879706382751465
    7. ']==' → logprob: -2.6879706382751465
    8. ']>' → logprob: -3.4379706382751465
    9. ' >' → logprob: -4.0629706382751465
    10. ' ==' → logprob: -4.3129706382751465

Token 103: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.301384299993515
    2. 'max' → logprob: -1.4263843297958374
    3. '0' → logprob: -4.301384449005127
    4. ' max' → logprob: -6.051384449005127
    5. ' H' → logprob: -6.676384449005127
    6. '1' → logprob: -7.176384449005127
    7. 'min' → logprob: -7.551384449005127
    8. ' ' → logprob: -7.801384449005127
    9. 'float' → logprob: -7.801384449005127
    10. 'acc' → logprob: -8.801383972167969

Token 104: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017884672852233052
    2. '))' → logprob: -7.00178861618042
    3. '0' → logprob: -8.126788139343262
    4. ' ' → logprob: -8.626788139343262
    5. ']))' → logprob: -9.251788139343262
    6. ')))' → logprob: -9.626788139343262
    7. ' [' → logprob: -10.251788139343262
    8. ')' → logprob: -10.251788139343262
    9. '[i' → logprob: -10.251788139343262
    10. '1' → logprob: -10.376788139343262

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001872094871941954
    2. '1' → logprob: -9.125186920166016
    3. ' ' → logprob: -10.250186920166016
    4. '])' → logprob: -11.125186920166016
    5. '-' → logprob: -11.375186920166016
    6. ']))' → logprob: -12.875186920166016
    7. '   ' → logprob: -13.062686920166016
    8. ':' → logprob: -13.125186920166016
    9. ']' → logprob: -13.625186920166016
    10. '  ' → logprob: -13.812686920166016

Token 106: ']))

' (ID: 92947)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.7098212242126465
    2. '))' → logprob: -0.8348212242126465
    3. ')))' → logprob: -2.7098212242126465
    4. '[' → logprob: -5.7098212242126465
    5. ')' → logprob: -6.4598212242126465
    6. ' ))' → logprob: -6.8348212242126465
    7. ']' → logprob: -7.4598212242126465
    8. ' ' → logprob: -8.084821701049805
    9. '])' → logprob: -8.584821701049805
    10. ')])' → logprob: -8.709821701049805

Token 107: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.251504510641098
    2. '0' → logprob: -2.626504421234131
    3. '[' → logprob: -2.751504421234131
    4. '(' → logprob: -3.251504421234131
    5. '1' → logprob: -3.626504421234131
    6. ':' → logprob: -5.626504421234131
    7. '<|end|>' → logprob: -5.751504421234131
    8. ' ' → logprob: -6.251504421234131
    9. '-' → logprob: -6.751504421234131
    10. '[:' → logprob: -7.126504421234131

Token 108: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01733415015041828
    2. '('' → logprob: -4.267333984375
    3. '("("' → logprob: -6.017333984375
    4. '(sum' → logprob: -8.142333984375
    5. '(res' → logprob: -8.767333984375
    6. '(len' → logprob: -8.892333984375
    7. '()' → logprob: -10.392333984375
    8. '(max' → logprob: -10.392333984375
    9. '("' → logprob: -10.642333984375
    10. '((' → logprob: -11.142333984375

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030066570616327226
    2. '))' → logprob: -8.125300407409668
    3. ')`' → logprob: -13.625300407409668
    4. ' )' → logprob: -13.750300407409668
    5. '`)' → logprob: -14.000300407409668
    6. '')' → logprob: -15.000300407409668
    7. ')))' → logprob: -15.125300407409668
    8. '})' → logprob: -15.750300407409668
    9. '])' → logprob: -15.875300407409668
    10. ')")' → logprob: -16.250301361083984


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 107
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 68
Précision stricte (1ère position): 33.64%
Précision adaptée (1ère position): 33.64%
Précision (top 10): 63.55%
================================================================================
