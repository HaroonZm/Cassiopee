================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from fractions import Fraction

N = int(input())
print(float(Fraction(N + 1, 2 * N)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' fractions' (ID: 110523)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Fraction' (ID: 112108)
  Prédit: ' Fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.47421976923942566
    2. 'Fraction' → logprob: -0.974219799041748
    3. ' fractions' → logprob: -9.59921932220459
    4. 'Fra' → logprob: -9.72421932220459
    5. 'fra' → logprob: -12.34921932220459
    6. ' Fra' → logprob: -12.72421932220459
    7. '_fraction' → logprob: -13.09921932220459
    8. 'fraction' → logprob: -13.34921932220459
    9. '```' → logprob: -13.84921932220459
    10. ' fraction' → logprob: -13.97421932220459

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04327046498656273
    2. 'a' → logprob: -3.4182703495025635
    3. '\(' → logprob: -5.668270587921143
    4. '.' → logprob: -6.168270587921143
    5. '`' → logprob: -6.918270587921143
    6. '\' → logprob: -7.793270587921143
    7. 'x' → logprob: -7.918270587921143
    8. 'import' → logprob: -8.043270111083984
    9. '```' → logprob: -8.043270111083984
    10. '(a' → logprob: -8.418270111083984

Token 5: 'N' (ID: 45)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3119641840457916
    2. 'x' → logprob: -1.9369641542434692
    3. '(' → logprob: -3.186964273452759
    4. 'f' → logprob: -3.311964273452759
    5. '`' → logprob: -4.31196403503418
    6. '=' → logprob: -4.81196403503418
    7. 'result' → logprob: -4.93696403503418
    8. '#' → logprob: -5.56196403503418
    9. '.' → logprob: -6.06196403503418
    10. 'F' → logprob: -6.31196403503418

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1267404556274414
    2. ' =' → logprob: -2.3767404556274414
    3. 'u' → logprob: -5.001740455627441
    4. ',' → logprob: -5.126740455627441
    5. 'a' → logprob: -5.876740455627441
    6. ')' → logprob: -5.876740455627441
    7. '.' → logprob: -6.251740455627441
    8. ' ' → logprob: -6.501740455627441
    9. 'umber' → logprob: -6.751740455627441
    10. '_' → logprob: -6.876740455627441

Token 7: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06420307606458664
    2. ' int' → logprob: -3.5642030239105225
    3. '10' → logprob: -4.439203262329102
    4. ' Fraction' → logprob: -4.564203262329102
    5. '5' → logprob: -5.689203262329102
    6. 'Fraction' → logprob: -5.939203262329102
    7. 'int' → logprob: -6.189203262329102
    8. '3' → logprob: -7.064203262329102
    9. '4' → logprob: -7.314203262329102
    10. ' input' → logprob: -7.939203262329102

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -8.828512363834307e-05
    2. '('' → logprob: -10.125088691711426
    3. ''' → logprob: -11.125088691711426
    4. '`' → logprob: -11.625088691711426
    5. ' (' → logprob: -12.125088691711426
    6. '(`' → logprob: -12.500088691711426
    7. '```' → logprob: -12.625088691711426
    8. '()' → logprob: -13.125088691711426
    9. '("("' → logprob: -13.125088691711426
    10. '(
' → logprob: -13.500088691711426

Token 9: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8209137320518494
    2. '()' → logprob: -0.9459137320518494
    3. ')' → logprob: -1.8209137916564941
    4. '())' → logprob: -4.820913791656494
    5. '(
' → logprob: -7.695913791656494
    6. '))' → logprob: -8.320913314819336
    7. '('' → logprob: -8.320913314819336
    8. '`)' → logprob: -8.445913314819336
    9. '")' → logprob: -9.320913314819336
    10. '')' → logprob: -9.445913314819336

Token 10: 'print' (ID: 1598)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1166729927062988
    2. 's' → logprob: -1.7416729927062988
    3. 'a' → logprob: -1.9916729927062988
    4. 'numbers' → logprob: -2.616672992706299
    5. 'total' → logprob: -2.741672992706299
    6. 'for' → logprob: -3.491672992706299
    7. 'num' → logprob: -3.491672992706299
    8. '```' → logprob: -3.991672992706299
    9. 'x' → logprob: -4.116672992706299
    10. 'arr' → logprob: -4.241672992706299

Token 11: '(float' (ID: 17830)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.062385525554418564
    2. '(F' → logprob: -2.8123855590820312
    3. '('' → logprob: -8.062385559082031
    4. '()' → logprob: -10.562385559082031
    5. '("("' → logprob: -10.687385559082031
    6. '((' → logprob: -10.812385559082031
    7. '("' → logprob: -11.062385559082031
    8. '(f' → logprob: -11.437385559082031
    9. '(sum' → logprob: -13.062385559082031
    10. '(
' → logprob: -14.187385559082031

Token 12: '(F' (ID: 12044)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760550498962402
    2. '(F' → logprob: -0.8260550498962402
    3. '()' → logprob: -9.451055526733398
    4. '(
' → logprob: -11.701055526733398
    5. '(`' → logprob: -12.076055526733398
    6. ')' → logprob: -12.451055526733398
    7. 'Fraction' → logprob: -12.451055526733398
    8. '('' → logprob: -12.701055526733398
    9. '(

' → logprob: -12.951055526733398
    10. '((' → logprob: -13.451055526733398

Token 13: 'raction' (ID: 33644)
  Prédit: 'raction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raction' → logprob: -0.04883737862110138
    2. 'r' → logprob: -3.048837423324585
    3. 'ractions' → logprob: -8.673837661743164
    4. 'rac' → logprob: -9.923837661743164
    5. 'Fraction' → logprob: -10.798837661743164
    6. 'ra' → logprob: -12.673837661743164
    7. 'fraction' → logprob: -12.673837661743164
    8. 'ratio' → logprob: -14.548837661743164
    9. 'ration' → logprob: -14.798837661743164
    10. 'action' → logprob: -14.923837661743164

Token 14: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024812906980514526
    2. '('' → logprob: -4.149812698364258
    3. '(/' → logprob: -5.899812698364258
    4. '(N' → logprob: -6.024812698364258
    5. '(input' → logprob: -6.649812698364258
    6. '('/' → logprob: -7.399812698364258
    7. '((' → logprob: -8.149812698364258
    8. '("("' → logprob: -8.399812698364258
    9. '(+' → logprob: -8.899812698364258
    10. ')' → logprob: -8.899812698364258

Token 15: ' +' (ID: 659)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.6642554998397827
    2. ')' → logprob: -0.7892554998397827
    3. '))' → logprob: -4.289255619049072
    4. '/' → logprob: -4.664255619049072
    5. '(' → logprob: -5.914255619049072
    6. ' /' → logprob: -6.789255619049072
    7. '')))' → logprob: -7.289255619049072
    8. ' ' → logprob: -7.414255619049072
    9. ' )' → logprob: -7.664255619049072
    10. '')' → logprob: -7.914255619049072

Token 16: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5008987784385681
    2. ' ' → logprob: -1.000898838043213
    3. '2' → logprob: -4.500898838043213
    4. '3' → logprob: -5.250898838043213
    5. '7' → logprob: -6.125898838043213
    6. '4' → logprob: -6.125898838043213
    7. '5' → logprob: -6.875898838043213
    8. '(' → logprob: -7.500898838043213
    9. '0' → logprob: -7.500898838043213
    10. '/' → logprob: -7.875898838043213

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01896274834871292
    2. '2' → logprob: -4.393962860107422
    3. '3' → logprob: -5.893962860107422
    4. '0' → logprob: -7.018962860107422
    5. ' ' → logprob: -7.018962860107422
    6. '4' → logprob: -7.268962860107422
    7. '5' → logprob: -7.893962860107422
    8. '7' → logprob: -8.643962860107422
    9. '-' → logprob: -9.143962860107422
    10. '12' → logprob: -9.518962860107422

Token 18: ',' (ID: 11)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.27308914065361023
    2. ')' → logprob: -2.2730891704559326
    3. ' /' → logprob: -2.6480891704559326
    4. ')))' → logprob: -3.7730891704559326
    5. '(' → logprob: -4.1480889320373535
    6. '/(' → logprob: -4.7730889320373535
    7. ')/(' → logprob: -5.2730889320373535
    8. '))' → logprob: -5.7730889320373535
    9. '`' → logprob: -6.3980889320373535
    10. ')/' → logprob: -6.6480889320373535

Token 19: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004197117406874895
    2. ' ' → logprob: -5.879197120666504
    3. '3' → logprob: -6.754197120666504
    4. 'N' → logprob: -9.629197120666504
    5. '6' → logprob: -10.004197120666504
    6. '4' → logprob: -10.629197120666504
    7. '1' → logprob: -10.754197120666504
    8. '(' → logprob: -11.379197120666504
    9. '   ' → logprob: -11.379197120666504
    10. '10' → logprob: -11.379197120666504

Token 20: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013827363727614284
    2. '3' → logprob: -7.626382827758789
    3. 'N' → logprob: -7.626382827758789
    4. ' ' → logprob: -8.751382827758789
    5. '1' → logprob: -9.626382827758789
    6. '(' → logprob: -9.751382827758789
    7. '10' → logprob: -10.126382827758789
    8. '6' → logprob: -10.501382827758789
    9. '```' → logprob: -11.501382827758789
    10. '4' → logprob: -11.626382827758789

Token 21: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6691757440567017
    2. ')))' → logprob: -0.9191757440567017
    3. '))' → logprob: -2.419175624847412
    4. ' ' → logprob: -11.91917610168457
    5. ')
' → logprob: -12.04417610168457
    6. '))))' → logprob: -12.79417610168457
    7. ')))
' → logprob: -12.79417610168457
    8. ')`' → logprob: -13.16917610168457
    9. ' )' → logprob: -13.66917610168457
    10. ')**' → logprob: -14.16917610168457

Token 22: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.019246358424425125
    2. '))' → logprob: -4.519246578216553
    3. '3' → logprob: -5.644246578216553
    4. '(' → logprob: -6.144246578216553
    5. ')' → logprob: -6.519246578216553
    6. '1' → logprob: -7.769246578216553
    7. '2' → logprob: -8.269246101379395
    8. '(N' → logprob: -8.519246101379395
    9. ')))' → logprob: -9.894246101379395
    10. '9' → logprob: -11.144246101379395

Token 23: ')))' (ID: 15975)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5897213220596313
    2. ')))' → logprob: -1.0897213220596313
    3. '))' → logprob: -2.214721202850342
    4. '))))' → logprob: -12.3397216796875
    5. ' ' → logprob: -12.5897216796875
    6. ' )' → logprob: -12.5897216796875
    7. ')
' → logprob: -13.0897216796875
    8. ')`' → logprob: -13.0897216796875
    9. ' ))' → logprob: -13.2147216796875
    10. ')))
' → logprob: -13.3397216796875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 21
Tokens correctement prédits (1ère position, stricte): 4
Tokens correctement prédits (1ère position, avec adaptation): 4
Tokens correctement prédits (top 10): 11
Précision stricte (1ère position): 19.05%
Précision adaptée (1ère position): 19.05%
Précision (top 10): 52.38%
================================================================================
