================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = map(int, input().split())
print(max((a << 1) - 1, (b << 1) - 1, a + b))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21134252846240997
    2. '+' → logprob: -1.7113425731658936
    3. ',' → logprob: -5.3363423347473145
    4. ' =' → logprob: -5.5863423347473145
    5. ' ' → logprob: -8.086342811584473
    6. ' +' → logprob: -8.586342811584473
    7. '*' → logprob: -8.711342811584473
    8. '+=' → logprob: -8.961342811584473
    9. '.' → logprob: -9.086342811584473
    10. ')' → logprob: -9.586342811584473

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15229101479053497
    2. '1' → logprob: -2.4022910594940186
    3. '0' → logprob: -3.2772910594940186
    4. '10' → logprob: -4.5272908210754395
    5. '5' → logprob: -7.2772908210754395
    6. ' b' → logprob: -8.402291297912598
    7. '[' → logprob: -8.652291297912598
    8. '42' → logprob: -8.777291297912598
    9. 'input' → logprob: -9.027291297912598
    10. ' [' → logprob: -9.152291297912598

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19934040307998657
    2. '(lambda' → logprob: -2.324340343475342
    3. '```' → logprob: -2.699340343475342
    4. '<|end|>' → logprob: -4.699340343475342
    5. ')' → logprob: -7.074340343475342
    6. '(int' → logprob: -7.324340343475342
    7. '[' → logprob: -7.574340343475342
    8. '`' → logprob: -7.824340343475342
    9. '[int' → logprob: -8.1993408203125
    10. '<|end|>' → logprob: -8.3243408203125

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5409305095672607
    2. '(input' → logprob: -1.0409305095672607
    3. '(' → logprob: -2.9159305095672607
    4. 'input' → logprob: -5.66593074798584
    5. '```' → logprob: -6.41593074798584
    6. '(user' → logprob: -6.91593074798584
    7. '`)' → logprob: -7.66593074798584
    8. ',' → logprob: -7.79093074798584
    9. '(data' → logprob: -7.91593074798584
    10. '))' → logprob: -8.29093074798584

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.23583000898361206
    2. ' input' → logprob: -1.6108300685882568
    3. '(input' → logprob: -4.610829830169678
    4. ')' → logprob: -7.860829830169678
    5. '=input' → logprob: -11.860830307006836
    6. ',input' → logprob: -11.860830307006836
    7. ' )' → logprob: -12.110830307006836
    8. '<input' → logprob: -13.110830307006836
    9. 'user' → logprob: -13.110830307006836
    10. '[input' → logprob: -13.360830307006836

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5460929870605469
    2. ')' → logprob: -1.5460929870605469
    3. '())' → logprob: -2.046092987060547
    4. '()' → logprob: -2.671092987060547
    5. '('' → logprob: -6.921092987060547
    6. '(""))' → logprob: -7.046092987060547
    7. '(()' → logprob: -7.171092987060547
    8. '))' → logprob: -7.296092987060547
    9. '`()' → logprob: -7.296092987060547
    10. '(
' → logprob: -7.296092987060547

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00024215869780164212
    2. 'strip' → logprob: -8.375242233276367
    3. 'rstrip' → logprob: -12.250242233276367
    4. ' split' → logprob: -12.625242233276367
    5. ')' → logprob: -12.875242233276367
    6. 'read' → logprob: -14.500242233276367
    7. 'spl' → logprob: -15.500242233276367
    8. '(split' → logprob: -15.625242233276367
    9. 'startswith' → logprob: -16.125242233276367
    10. 'replace' → logprob: -17.750242233276367

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13553567230701447
    2. '())' → logprob: -2.385535717010498
    3. '))' → logprob: -3.385535717010498
    4. '()' → logprob: -7.760535717010498
    5. '()))' → logprob: -8.26053524017334
    6. '`)' → logprob: -9.76053524017334
    7. '(' → logprob: -10.38553524017334
    8. ')`' → logprob: -10.51053524017334
    9. ')))' → logprob: -11.76053524017334
    10. ' )' → logprob: -11.76053524017334

Token 11: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01239827461540699
    2. '*' → logprob: -5.1373982429504395
    3. '#' → logprob: -5.5123982429504395
    4. '+
' → logprob: -7.2623982429504395
    5. ',' → logprob: -8.137398719787598
    6. '[' → logprob: -8.262398719787598
    7. '=' → logprob: -8.762398719787598
    8. 'a' → logprob: -9.012398719787598
    9. '-' → logprob: -9.137398719787598
    10. '**' → logprob: -9.637398719787598

Token 12: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024727347772568464
    2. '('' → logprob: -9.37524700164795
    3. '(a' → logprob: -9.50024700164795
    4. '("("' → logprob: -9.62524700164795
    5. '((' → logprob: -12.00024700164795
    6. '()' → logprob: -12.75024700164795
    7. '(`' → logprob: -13.12524700164795
    8. '("""' → logprob: -13.25024700164795
    9. '(**' → logprob: -14.00024700164795
    10. '(
' → logprob: -14.12524700164795

Token 13: '((' (ID: 2054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.25243183970451355
    2. '(' → logprob: -1.502431869506836
    3. '()' → logprob: -8.002431869506836
    4. '((' → logprob: -9.627431869506836
    5. '(ab' → logprob: -10.752431869506836
    6. ')' → logprob: -11.252431869506836
    7. '(()' → logprob: -11.377431869506836
    8. '(b' → logprob: -11.627431869506836
    9. '(max' → logprob: -12.002431869506836
    10. '())' → logprob: -12.127431869506836

Token 14: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004103215876966715
    2. ' a' → logprob: -5.504103183746338
    3. '(a' → logprob: -11.004103660583496
    4. 'abs' → logprob: -13.004103660583496
    5. ' ' → logprob: -13.629103660583496
    6. ',' → logprob: -13.754103660583496
    7. ')' → logprob: -14.129103660583496
    8. 'b' → logprob: -14.379103660583496
    9. ',a' → logprob: -14.629103660583496
    10. '0' → logprob: -15.129103660583496

Token 15: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10558971017599106
    2. ' ,' → logprob: -2.7305896282196045
    3. ',b' → logprob: -3.4805896282196045
    4. ' +' → logprob: -6.355589866638184
    5. '+b' → logprob: -7.105589866638184
    6. ' -' → logprob: -7.480589866638184
    7. '+' → logprob: -7.480589866638184
    8. ' ' → logprob: -8.230589866638184
    9. '-' → logprob: -9.730589866638184
    10. '-b' → logprob: -10.105589866638184

Token 16: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4694802165031433
    2. 'b' → logprob: -1.469480276107788
    3. ' b' → logprob: -2.594480276107788
    4. ' ' → logprob: -2.844480276107788
    5. '32' → logprob: -5.344480037689209
    6. '10' → logprob: -6.469480037689209
    7. '16' → logprob: -7.094480037689209
    8. '5' → logprob: -7.219480037689209
    9. '2' → logprob: -7.594480037689209
    10. '3' → logprob: -7.719480037689209

Token 17: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03744317218661308
    2. '1' → logprob: -3.662443161010742
    3. ' b' → logprob: -4.537443161010742
    4. ' ' → logprob: -8.662443161010742
    5. '31' → logprob: -10.412443161010742
    6. '32' → logprob: -10.537443161010742
    7. '5' → logprob: -10.662443161010742
    8. '10' → logprob: -10.912443161010742
    9. '2' → logprob: -10.912443161010742
    10. '7' → logprob: -11.412443161010742

Token 18: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47351107001304626
    2. ',' → logprob: -1.2235110998153687
    3. ' ,' → logprob: -2.973510980606079
    4. '),' → logprob: -3.598510980606079
    5. ' )' → logprob: -6.223511219024658
    6. ',b' → logprob: -7.223511219024658
    7. ' ),' → logprob: -7.848511219024658
    8. 'b' → logprob: -8.0985107421875
    9. ')b' → logprob: -8.8485107421875
    10. ' |' → logprob: -8.9735107421875

Token 19: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11439617723226547
    2. ' ,' → logprob: -2.364396095275879
    3. ' -' → logprob: -5.114396095275879
    4. ')' → logprob: -5.864396095275879
    5. ',b' → logprob: -6.114396095275879
    6. '-' → logprob: -6.989396095275879
    7. ',a' → logprob: -7.614396095275879
    8. '))' → logprob: -7.739396095275879
    9. '+' → logprob: -8.739396095275879
    10. ' ' → logprob: -8.864396095275879

Token 20: ' ' (ID: 220)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5768229365348816
    2. 'b' → logprob: -0.8268229365348816
    3. '1' → logprob: -8.201823234558105
    4. ' (' → logprob: -8.576823234558105
    5. '(b' → logprob: -8.701823234558105
    6. ' ' → logprob: -9.326823234558105
    7. 'a' → logprob: -9.951823234558105
    8. ')b' → logprob: -10.326823234558105
    9. ' a' → logprob: -10.701823234558105
    10. '(' → logprob: -11.451823234558105

Token 21: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0057559991255402565
    2. ' b' → logprob: -5.25575590133667
    3. '1' → logprob: -8.755756378173828
    4. 'a' → logprob: -8.880756378173828
    5. '(b' → logprob: -8.880756378173828
    6. '(' → logprob: -10.380756378173828
    7. ' (' → logprob: -11.255756378173828
    8. ' ' → logprob: -12.005756378173828
    9. '(a' → logprob: -12.005756378173828
    10. ')b' → logprob: -12.380756378173828

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08776627480983734
    2. ')' → logprob: -3.087766170501709
    3. '))' → logprob: -3.462766170501709
    4. ',b' → logprob: -5.837766170501709
    5. ' ,' → logprob: -5.837766170501709
    6. ')))' → logprob: -7.962766170501709
    7. '),' → logprob: -8.587766647338867
    8. '+' → logprob: -8.712766647338867
    9. ',a' → logprob: -9.087766647338867
    10. ' -' → logprob: -9.712766647338867

Token 23: ' (' (ID: 350)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.26218658685684204
    2. 'b' → logprob: -1.5121865272521973
    3. ' (' → logprob: -5.137186527252197
    4. '(b' → logprob: -6.137186527252197
    5. 'a' → logprob: -7.012186527252197
    6. ' a' → logprob: -7.637186527252197
    7. ' ' → logprob: -7.887186527252197
    8. '(' → logprob: -9.012187004089355
    9. '(a' → logprob: -9.137187004089355
    10. '1' → logprob: -10.137187004089355

Token 24: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02780461125075817
    2. ' b' → logprob: -3.6528046131134033
    3. 'a' → logprob: -6.902804374694824
    4. '(b' → logprob: -8.152804374694824
    5. ' a' → logprob: -9.777804374694824
    6. ' (' → logprob: -9.902804374694824
    7. '2' → logprob: -10.652804374694824
    8. ' ' → logprob: -10.902804374694824
    9. '(a' → logprob: -11.027804374694824
    10. '1' → logprob: -11.277804374694824

Token 25: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.030262963846325874
    2. '<<' → logprob: -3.5302629470825195
    3. ')' → logprob: -8.28026294708252
    4. ' -' → logprob: -9.15526294708252
    5. ' >>' → logprob: -10.40526294708252
    6. ' ' → logprob: -10.65526294708252
    7. ')<<' → logprob: -10.65526294708252
    8. ' )' → logprob: -11.03026294708252
    9. '-' → logprob: -11.15526294708252
    10. '))' → logprob: -11.53026294708252

Token 26: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11329278349876404
    2. ' ' → logprob: -2.238292694091797
    3. '2' → logprob: -7.863292694091797
    4. '0' → logprob: -9.863292694091797
    5. '3' → logprob: -11.738292694091797
    6. 'b' → logprob: -11.988292694091797
    7. ' ' → logprob: -12.863292694091797
    8. '4' → logprob: -12.925792694091797
    9. '   ' → logprob: -13.050792694091797
    10. '6' → logprob: -13.363292694091797

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002973280206788331
    2. ' ' → logprob: -9.125297546386719
    3. '0' → logprob: -9.375297546386719
    4. '2' → logprob: -9.500297546386719
    5. 'b' → logprob: -11.375297546386719
    6. '3' → logprob: -12.562797546386719
    7. 'a' → logprob: -12.937797546386719
    8. '   ' → logprob: -13.187797546386719
    9. '4' → logprob: -13.625297546386719
    10. '5' → logprob: -13.937797546386719

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002051885472610593
    2. ' )' → logprob: -6.252051830291748
    3. '))' → logprob: -9.627052307128906
    4. ')))' → logprob: -10.627052307128906
    5. ')-' → logprob: -11.002052307128906
    6. '')' → logprob: -11.877052307128906
    7. ' ))' → logprob: -13.502052307128906
    8. '`)' → logprob: -13.627052307128906
    9. ' ' → logprob: -13.752052307128906
    10. ')>>' → logprob: -14.127052307128906

Token 29: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2894366383552551
    2. ')' → logprob: -2.0394365787506104
    3. '))' → logprob: -2.6644365787506104
    4. '-' → logprob: -3.1644365787506104
    5. ' )' → logprob: -5.1644368171691895
    6. ' ))' → logprob: -6.4144368171691895
    7. ')))' → logprob: -6.5394368171691895
    8. ' ' → logprob: -8.289436340332031
    9. ')-' → logprob: -9.664436340332031
    10. ',' → logprob: -10.539436340332031

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024956969544291496
    2. ' ' → logprob: -3.7749569416046143
    3. '2' → logprob: -6.524957180023193
    4. '0' → logprob: -8.524956703186035
    5. ')' → logprob: -10.774956703186035
    6. '3' → logprob: -11.649956703186035
    7. 'b' → logprob: -13.212456703186035
    8. ' b' → logprob: -13.462456703186035
    9. '5' → logprob: -13.587456703186035
    10. '   ' → logprob: -13.774956703186035

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.102680633077398e-05
    2. ' ' → logprob: -9.875090599060059
    3. '0' → logprob: -10.500090599060059
    4. '2' → logprob: -11.625090599060059
    5. ')' → logprob: -14.125090599060059
    6. '6' → logprob: -15.312590599060059
    7. '-' → logprob: -15.437590599060059
    8. '<|end|>' → logprob: -15.750090599060059
    9. 'b' → logprob: -15.812590599060059
    10. '5' → logprob: -15.875090599060059

Token 32: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3132821023464203
    2. '))' → logprob: -1.3132821321487427
    3. ')))' → logprob: -10.938282012939453
    4. ''))' → logprob: -14.438282012939453
    5. '),' → logprob: -14.813282012939453
    6. '')' → logprob: -14.938282012939453
    7. '`)' → logprob: -15.438282012939453
    8. ' )' → logprob: -15.438282012939453
    9. ' ))' → logprob: -15.563282012939453
    10. ',' → logprob: -16.063282012939453

Token 33: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9839501976966858
    2. '0' → logprob: -1.233950138092041
    3. ' a' → logprob: -2.108950138092041
    4. '(a' → logprob: -2.483950138092041
    5. ' (' → logprob: -2.733950138092041
    6. ' ' → logprob: -2.858950138092041
    7. '1' → logprob: -5.608950138092041
    8. ')' → logprob: -6.733950138092041
    9. '))' → logprob: -7.233950138092041
    10. '(' → logprob: -7.733950138092041

Token 34: ' +' (ID: 659)
  Prédit: ' <<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.5082273483276367
    2. ',' → logprob: -2.0082273483276367
    3. ' ,' → logprob: -2.0082273483276367
    4. ')' → logprob: -3.3832273483276367
    5. ' ' → logprob: -3.3832273483276367
    6. '<<' → logprob: -3.6332273483276367
    7. '))' → logprob: -3.8832273483276367
    8. ' +' → logprob: -5.008227348327637
    9. ' )' → logprob: -6.133227348327637
    10. ' ))' → logprob: -6.133227348327637

Token 35: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804757073521614
    2. ' b' → logprob: -3.2880475521087646
    3. ' (' → logprob: -13.413047790527344
    4. '(b' → logprob: -13.413047790527344
    5. '(' → logprob: -14.038047790527344
    6. ' ' → logprob: -14.288047790527344
    7. ' ' → logprob: -14.663047790527344
    8. '1' → logprob: -14.788047790527344
    9. ')b' → logprob: -14.788047790527344
    10. '	b' → logprob: -15.288047790527344

Token 36: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.252739816904068
    2. ')' → logprob: -1.5027397871017456
    3. ')))' → logprob: -7.502739906311035
    4. ' ))' → logprob: -8.877739906311035
    5. ' )' → logprob: -10.002739906311035
    6. '+' → logprob: -10.502739906311035
    7. ' ' → logprob: -11.252739906311035
    8. ',' → logprob: -11.377739906311035
    9. ''))' → logprob: -12.252739906311035
    10. '),' → logprob: -12.377739906311035


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 34
Tokens correctement prédits (1ère position, stricte): 11
Tokens correctement prédits (1ère position, avec adaptation): 11
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 32.35%
Précision adaptée (1ère position): 32.35%
Précision (top 10): 82.35%
================================================================================
