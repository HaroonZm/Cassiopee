================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # Importe le module sys, qui fournit l’accès à certaines variables et fonctions du système
import numpy as np  # Importe la bibliothèque numpy, utilisée pour le calcul scientifique rapide sur des tableaux

def offset(length):
    # Calcule la puissance de deux du paramètre length pour obtenir l'offset adéquat dans l'arbre binaire complet
    # Cela fait un décalage binaire vers la gauche, équivalent à 2 ** length
    return 1 << length

def solve():
    # Lit deux entiers n et k depuis l'entrée standard, séparés par des espaces
    # sys.stdin.buffer.readline() lit la ligne, split() sépare les éléments, map(int, ...) convertit chaque élément en un entier
    n, k = map(int, sys.stdin.buffer.readline().split())
    
    # Lit la suite binaire (ou autre) sous forme de bytes à partir de l'entrée standard (tout ce qui reste, sauf la première ligne)
    # b"0" concatène un zéro initial pour aligner les indices dans la suite à venir
    # .replace(b"\n", b"") supprime tous les retours à la ligne pour obtenir une séquence continue de chiffres
    buf = b"0" + sys.stdin.buffer.read().replace(b"\n", b"")
    
    # Convertit buf en un tableau numpy de bytes (int8), puis en int32 pour des opérations futures
    # np.frombuffer lit buf sans faire de copie mémoire : chaque byte devient une valeur
    # - ord(b"0") permet de transformer les bytes ASCII de chiffres ('0' devient 0, '1' devient 1, etc.)
    table = (np.frombuffer(buf, dtype=np.int8).astype(np.int32) - ord(b"0"))
    
    # Crée un tableau d'entiers de longueur égale à la moitié de table
    # np.ones initialise le tableau avec des uns, dtype=int32 précise le type d’éléments stockés
    offset_table = np.ones(len(table) // 2, dtype=np.int32)
    # Boucle pour remplir offset_table avec des puissances de deux selon les positions de bits
    # La boucle parcourt tous les v de 0 à n - 2 (inclus)
    for v in range(n - 1):
        # Pour chaque v, le segment d'indice [1 << v : 2 << v] est rempli avec la valeur 2 << v (càd 2^(v+1))
        offset_table[1 << v:2 << v] = 2 << v
    
    ret = None  # Initialise la variable de retour (None si aucune réponse trouvée)
    # Première boucle sur toutes les positions de 0 à n inclus
    for pos in range(n + 1):
        # Deuxième boucle sur tous les 'length' supérieurs stricts à 'pos' jusqu’à n inclus
        for length in range(pos + 1, n + 1):
            # Crée une sous-table correspondant aux éléments [offset(length):offset(length+1)]
            # offset(length) donne l’index de début, offset(length + 1) celui de fin pour cette longueur
            subtable = table[offset(length):offset(length + 1)]
            # Reshape subtable pour la transformer en un tableau 2D : chaque ligne a 2^pos colonnes, ordre de remplissage en colonne
            # Puis on fait sum(axis=0) pour sommer chaque colonne (donc chaque motif sur cette longueur)
            # On ajoute cette somme à la portion de table correspondant à l’offset de pos : on propage les comptages
            table[offset(pos):offset(pos + 1)] += subtable.reshape(-1, 1 << pos, order="F").sum(axis=0)
        # Récupère la portion de la table après propagation pour la longueur actuelle : taille 2^pos décalée à l’offset correct
        count_table = table[offset(pos):offset(pos + 1)]
        # np.argmax retourne l’indice du premier élément qui vérifie la condition (ici >= k)
        index = np.argmax(count_table >= k)
        # Si au moins un motif satisfait la condition d’occurrence, on stocke la paie (index, pos)
        if count_table[index] >= k:
            ret = (index, pos)
        else:
            # Sinon, aucune solution plus longue possible donc on retourne la dernière valide
            return ret
        
        # Boucle supplémentaire par longueur croissante pour préparer la prochaine itération et faire des ajustements (transpositions)
        for length in range(pos + 1, n + 1):
            # Calcule la taille totale du motif pour cette longueur : 2^length
            size = 1 << length
            # La différence de longueur
            rest = length - pos
            # Calcule la demi-période (moitié de la période d’un cycle binaire à cette position)
            half_period = 1 << (rest - 1)
            # Crée un tableau d’indices à transformer sur cette portion
            # np.arange crée une séquence d'entiers de (half_period+size) à (half_period+2*size) exclus, sur int32
            # Puis le décalage binaire (>>) ramène chaque indice à une valeur indexée par rest
            trans_table = np.arange(half_period + size, half_period + size * 2, dtype=np.int32) >> rest
            
            # Reshape trans_table en lignes chacun de half_period*2 colonnes : réorganisation mémoire
            trans_reshaped = trans_table.reshape(-1, half_period * 2)
            # Multiplie chaque valeur trans_reshaped par une version étendue de offset_table : d’abord les half_period premiers, puis les half_period premiers à l’envers
            # np.hstack concatène les deux portions, servant de facteur de multiplication
            trans_reshaped *= np.hstack((offset_table[:half_period], offset_table[half_period - 1::-1]))
            # Ajoute à chaque élément trans_reshaped une version roulée (np.roll) d’un tableau allant de -half_period à half_period exclus, roulée de half_period vers la droite
            trans_reshaped += np.roll(np.arange(-half_period, half_period), half_period)
            
            # Somme les occurrences pour la portion concernée et ajoute à la table : cela prépare la structure pour l’itération suivante
            table[trans_table] += table[offset(length):offset(length + 1)]
    # La fonction retourne la dernière réponse valide trouvée (index, longueur)
    return ret

# Appel de la fonction solve : retourne un tuple (index, longueur)
index, length = solve()
# Affiche, sous forme binaire, le motif trouvé de la bonne longueur :
# - format(index, "020b") convertit index en binaire sur 20 chiffres (avec des zéros à gauche)
# - On extrait les chiffres correspondants à la longueur trouvée, en partant de la droite (indice 20-length à la fin)
print(format(index, "020b")[20 - length:])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.015895461663603783
    2. '\n' → logprob: -5.140895366668701
    3. '<|end|>' → logprob: -5.390895366668701
    4. '\' → logprob: -5.640895366668701
    5. '.readline' → logprob: -8.14089584350586
    6. '[' → logprob: -8.39089584350586
    7. '<|end|>' → logprob: -8.51589584350586
    8. 'import' → logprob: -8.51589584350586
    9. '```' → logprob: -8.64089584350586
    10. '' → logprob: -8.89089584350586

Token 4: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.058482568711042404
    2. '  ' → logprob: -3.0584826469421387
    3. '<|end|>' → logprob: -5.183482646942139
    4. '<|end|>' → logprob: -7.183482646942139
    5. 'import' → logprob: -7.558482646942139
    6. '!' → logprob: -7.683482646942139
    7. '.' → logprob: -7.683482646942139
    8. '[' → logprob: -8.55848217010498
    9. ' import' → logprob: -8.55848217010498
    10. '    ' → logprob: -8.80848217010498

Token 5: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.004095735494047403
    2. 'p' → logprob: -5.504095554351807
    3. 'por' → logprob: -12.129096031188965
    4. ' port' → logprob: -12.629096031188965
    5. ' ' → logprob: -12.754096031188965
    6. 'ported' → logprob: -13.504096031188965
    7. 'ports' → logprob: -13.504096031188965
    8. 'порт' → logprob: -14.754096031188965
    9. 'porter' → logprob: -14.879096031188965
    10. 'import' → logprob: -14.879096031188965

Token 6: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49040135741233826
    2. 'r' → logprob: -0.9904013872146606
    3. 'n' → logprob: -4.865401268005371
    4. ' r' → logprob: -6.115401268005371
    5. ',' → logprob: -6.990401268005371
    6. 'nt' → logprob: -7.115401268005371
    7. 'rt' → logprob: -7.240401268005371
    8. '  ' → logprob: -7.365401268005371
    9. 'd' → logprob: -7.490401268005371
    10. ' d' → logprob: -7.615401268005371

Token 7: ' module' (ID: 8827)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6229162216186523
    2. ' ' → logprob: -1.3729162216186523
    3. 'r' → logprob: -2.7479162216186523
    4. ' module' → logprob: -3.3729162216186523
    5. ' sys' → logprob: -3.6229162216186523
    6. 'space' → logprob: -4.122916221618652
    7. ' space' → logprob: -4.372916221618652
    8. ' ' → logprob: -4.372916221618652
    9. ' r' → logprob: -4.872916221618652
    10. 'module' → logprob: -5.372916221618652

Token 8: ' sys' (ID: 12228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06531829386949539
    2. ',' → logprob: -3.8153183460235596
    3. ' ' → logprob: -3.8153183460235596
    4. '' → logprob: -4.8153181076049805
    5. '\' → logprob: -5.5653181076049805
    6. 'import' → logprob: -5.6903181076049805
    7. '\n' → logprob: -6.6903181076049805
    8. '  ' → logprob: -7.6903181076049805
    9. '
' → logprob: -8.31531810760498
    10. '<|end|>' → logprob: -8.44031810760498

Token 9: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06928884983062744
    2. '\n' → logprob: -3.569288730621338
    3. '' → logprob: -4.694288730621338
    4. '
' → logprob: -4.819288730621338
    5. 'import' → logprob: -5.069288730621338
    6. '\' → logprob: -5.069288730621338
    7. ' ' → logprob: -5.319288730621338
    8. '.import' → logprob: -7.319288730621338
    9. ',' → logprob: -7.444288730621338
    10. 'newline' → logprob: -7.569288730621338

Token 10: ' qui' (ID: 2780)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3758167028427124
    2. ' ' → logprob: -1.3758167028427124
    3. 'import' → logprob: -1.5008167028427124
    4. '.' → logprob: -3.250816822052002
    5. ' which' → logprob: -3.250816822052002
    6. '\n' → logprob: -3.750816822052002
    7. 'which' → logprob: -3.750816822052002
    8. '<|end|>' → logprob: -4.125816822052002
    9. '```' → logprob: -4.375816822052002
    10. ')' → logprob: -4.500816822052002

Token 11: ' fournit' (ID: 123615)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.40466564893722534
    2. ' est' → logprob: -2.02966570854187
    3. ' fournit' → logprob: -2.15466570854187
    4. ' ' → logprob: -2.90466570854187
    5. ' ' → logprob: -4.904665470123291
    6. ' contient' → logprob: -5.154665470123291
    7. ' sert' → logprob: -5.404665470123291
    8. ' space' → logprob: -6.404665470123291
    9. 'space' → logprob: -6.654665470123291
    10. 'est' → logprob: -6.779665470123291

Token 12: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3005411922931671
    2. '.' → logprob: -2.0505411624908447
    3. '<|end|>' → logprob: -2.8005411624908447
    4. '  ' → logprob: -3.4255411624908447
    5. ' .' → logprob: -3.8005411624908447
    6. 'space' → logprob: -5.925541400909424
    7. 'es' → logprob: -6.675541400909424
    8. 's' → logprob: -6.800541400909424
    9. '```' → logprob: -6.800541400909424
    10. ',' → logprob: -6.925541400909424

Token 13: '’accès' (ID: 86443)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7974526286125183
    2. ''espace' → logprob: -1.547452688217163
    3. 's' → logprob: -2.172452688217163
    4. 'es' → logprob: -2.172452688217163
    5. 'space' → logprob: -3.297452688217163
    6. ' '' → logprob: -3.797452688217163
    7. '_' → logprob: -4.172452449798584
    8. 'a' → logprob: -5.422452449798584
    9. '’espace' → logprob: -5.422452449798584
    10. ''s' → logprob: -5.797452449798584

Token 14: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03808017447590828
    2. ' .' → logprob: -3.4130802154541016
    3. ' ' → logprob: -5.663080215454102
    4. '[' → logprob: -8.538080215454102
    5. ',' → logprob: -9.038080215454102
    6. 'import' → logprob: -9.288080215454102
    7. '```' → logprob: -9.413080215454102
    8. '<|end|>' → logprob: -9.663080215454102
    9. '  ' → logprob: -9.788080215454102
    10. ' à' → logprob: -9.913080215454102

Token 15: ' certaines' (ID: 46662)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2424848079681396
    2. ' l' → logprob: -1.4924848079681396
    3. 'la' → logprob: -2.2424848079681396
    4. 'Python' → logprob: -2.4924848079681396
    5. ' Python' → logprob: -2.4924848079681396
    6. ' ' → logprob: -2.7424848079681396
    7. 's' → logprob: -2.9924848079681396
    8. ' la' → logprob: -4.492485046386719
    9. 'sys' → logprob: -4.492485046386719
    10. '```' → logprob: -4.867485046386719

Token 16: ' variables' (ID: 13955)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18315279483795166
    2. ' ' → logprob: -2.183152675628662
    3. ' espaces' → logprob: -3.933152675628662
    4. ' .' → logprob: -4.058152675628662
    5. '  ' → logprob: -5.183152675628662
    6. '<|end|>' → logprob: -6.558152675628662
    7. ' fonctions' → logprob: -6.808152675628662
    8. '[' → logprob: -7.058152675628662
    9. 'es' → logprob: -7.433152675628662
    10. ' fonctionnalités' → logprob: -7.558152675628662

Token 17: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07819759845733643
    2. ',' → logprob: -3.578197479248047
    3. ' ' → logprob: -3.953197479248047
    4. 'import' → logprob: -4.703197479248047
    5. '<|end|>' → logprob: -5.203197479248047
    6. 'et' → logprob: -5.703197479248047
    7. ' .' → logprob: -5.953197479248047
    8. '[' → logprob: -6.328197479248047
    9. '  ' → logprob: -6.828197479248047
    10. ')' → logprob: -7.453197479248047

Token 18: ' fonctions' (ID: 87283)
  Prédit: 'fon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fon' → logprob: -0.7061377763748169
    2. ' fonctions' → logprob: -0.8311377763748169
    3. 'fonction' → logprob: -2.9561376571655273
    4. ' ' → logprob: -5.456137657165527
    5. 'f' → logprob: -5.831137657165527
    6. '```' → logprob: -5.956137657165527
    7. ' ' → logprob: -6.456137657165527
    8. 'functions' → logprob: -7.081137657165527
    9. ' functions' → logprob: -7.331137657165527
    10. ' fonctionnalités' → logprob: -7.456137657165527

Token 19: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: ' système' (ID: 30034)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0825270488858223
    2. ' système' → logprob: -2.9575271606445312
    3. 'Python' → logprob: -4.457527160644531
    4. ' ' → logprob: -5.082527160644531
    5. 'S' → logprob: -6.207527160644531
    6. '```' → logprob: -6.457527160644531
    7. 'inter' → logprob: -6.957527160644531
    8. 'python' → logprob: -7.207527160644531
    9. ' Python' → logprob: -7.332527160644531
    10. '   ' → logprob: -7.332527160644531

Token 21: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2706702947616577
    2. '\n' → logprob: -1.8956702947616577
    3. '
' → logprob: -3.5206704139709473
    4. 'import' → logprob: -4.145670413970947
    5. '<|end|>' → logprob: -4.395670413970947
    6. '\' → logprob: -4.520670413970947
    7. ',' → logprob: -5.395670413970947
    8. '' → logprob: -5.520670413970947
    9. 'newline' → logprob: -6.145670413970947
    10. ' ' → logprob: -6.270670413970947

Token 22: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7273045778274536
    2. '\n' → logprob: -1.2273045778274536
    3. 'import' → logprob: -2.852304458618164
    4. '.' → logprob: -2.977304458618164
    5. '<|end|>' → logprob: -3.102304458618164
    6. '

' → logprob: -3.227304458618164
    7. ',' → logprob: -4.852304458618164
    8. '\' → logprob: -5.227304458618164
    9. 'newline' → logprob: -5.602304458618164
    10. '<|end|>' → logprob: -5.852304458618164

Token 23: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00043102685594931245
    2. 'os' → logprob: -7.750431060791016
    3. '"os' → logprob: -16.375431060791016
    4. '	os' → logprob: -16.500431060791016
    5. '_os' → logprob: -16.625431060791016
    6. ' math' → logprob: -16.750431060791016
    7. ' argparse' → logprob: -17.875431060791016
    8. ' o' → logprob: -18.750431060791016
    9. ' OS' → logprob: -19.375431060791016
    10. ' re' → logprob: -19.500431060791016

Token 24: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.058332014828920364
    2. '<|end|>' → logprob: -3.4333319664001465
    3. ' ' → logprob: -3.8083319664001465
    4. 'as' → logprob: -6.5583319664001465
    5. '.' → logprob: -7.8083319664001465
    6. '<|end|>' → logprob: -8.558332443237305
    7. ' .' → logprob: -9.558332443237305
    8. '  ' → logprob: -10.183332443237305
    9. '.as' → logprob: -11.433332443237305
    10. '.ndarray' → logprob: -11.433332443237305

Token 25: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.015699630603194237
    2. ' ' → logprob: -4.515699863433838
    3. 'np' → logprob: -5.515699863433838
    4. ' ' → logprob: -7.515699863433838
    5. ' as' → logprob: -10.14069938659668
    6. ' numpy' → logprob: -11.01569938659668
    7. '  ' → logprob: -12.51569938659668
    8. '_np' → logprob: -12.89069938659668
    9. '```' → logprob: -13.14069938659668
    10. 'numpy' → logprob: -13.64069938659668

Token 26: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9502070546150208
    2. '<|end|>' → logprob: -1.450206995010376
    3. 'import' → logprob: -1.700206995010376
    4. '#' → logprob: -2.825206995010376
    5. '

' → logprob: -2.950206995010376
    6. ' ' → logprob: -3.200206995010376
    7. ' as' → logprob: -4.950207233428955
    8. '```' → logprob: -5.075207233428955
    9. '<|end|>' → logprob: -5.450207233428955
    10. '\n' → logprob: -5.575207233428955

Token 28: ' Im' (ID: 3133)
  Prédit: ' Im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Im' → logprob: -0.5461462736129761
    2. ' Import' → logprob: -2.4211463928222656
    3. 'Import' → logprob: -2.4211463928222656
    4. 'Im' → logprob: -2.7961463928222656
    5. ' importe' → logprob: -2.9211463928222656
    6. 'importe' → logprob: -3.0461463928222656
    7. 'import' → logprob: -3.2961463928222656
    8. ' import' → logprob: -4.296146392822266
    9. 'Bibli' → logprob: -5.046146392822266
    10. 'Importer' → logprob: -5.796146392822266

Token 29: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.004274988546967506
    2. 'porte' → logprob: -5.629274845123291
    3. 'p' → logprob: -7.879274845123291
    4. 'por' → logprob: -8.25427532196045
    5. 'porter' → logprob: -10.75427532196045
    6. 'porta' → logprob: -12.25427532196045
    7. 'po' → logprob: -13.37927532196045
    8. 'порт' → logprob: -13.37927532196045
    9. '```' → logprob: -13.62927532196045
    10. 'poort' → logprob: -14.37927532196045

Token 30: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1370445042848587
    2. '  ' → logprob: -2.5120444297790527
    3. '<|end|>' → logprob: -3.1370444297790527
    4. ' ' → logprob: -6.637044429779053
    5. ' numpy' → logprob: -8.137044906616211
    6. '<|end|>' → logprob: -8.387044906616211
    7. 'space' → logprob: -8.512044906616211
    8. ' ‌' → logprob: -8.762044906616211
    9. ' ' → logprob: -8.762044906616211
    10. 'l' → logprob: -9.074544906616211

Token 31: ' bibliothèque' (ID: 154070)
  Prédit: 'bibli'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bibli' → logprob: -0.8373160362243652
    2. ' bibliothèque' → logprob: -0.9623160362243652
    3. ' bibli' → logprob: -1.9623160362243652
    4. ' ' → logprob: -4.087316036224365
    5. 'Bibli' → logprob: -5.337316036224365
    6. ' libra' → logprob: -5.337316036224365
    7. ' Bibli' → logprob: -5.462316036224365
    8. ' b' → logprob: -5.837316036224365
    9. ' ' → logprob: -5.962316036224365
    10. ' libr' → logprob: -6.587316036224365

Token 32: ' numpy' (ID: 19529)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03798501938581467
    2. ' numpy' → logprob: -3.66298508644104
    3. '<|end|>' → logprob: -6.037984848022461
    4. 'numpy' → logprob: -6.287984848022461
    5. '  ' → logprob: -6.537984848022461
    6. ' scipy' → logprob: -6.912984848022461
    7. ' ' → logprob: -7.037984848022461
    8. ' Num' → logprob: -7.287984848022461
    9. 'space' → logprob: -7.412984848022461
    10. ' space' → logprob: -7.662984848022461

Token 33: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' utilisée' (ID: 106548)
  Prédit: ' utilisée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -1.1011172533035278
    2. ' ' → logprob: -1.3511172533035278
    3. ' qui' → logprob: -2.2261171340942383
    4. '<|end|>' → logprob: -2.3511171340942383
    5. 'qui' → logprob: -2.7261171340942383
    6. ' spécialisée' → logprob: -3.3511171340942383
    7. ' essentielle' → logprob: -3.9761171340942383
    8. 'util' → logprob: -4.226117134094238
    9. ' utilisé' → logprob: -4.726117134094238
    10. ' souvent' → logprob: -4.851117134094238

Token 35: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.8300450444221497
    2. ' ' → logprob: -0.9550450444221497
    3. 'pour' → logprob: -1.9550449848175049
    4. '<|end|>' → logprob: -4.330045223236084
    5. ' for' → logprob: -4.455045223236084
    6. '.' → logprob: -5.455045223236084
    7. '  ' → logprob: -5.830045223236084
    8. 'for' → logprob: -6.705045223236084
    9. 'import' → logprob: -7.330045223236084
    10. ' principalement' → logprob: -7.705045223236084

Token 36: ' le' (ID: 505)
  Prédit: ' manip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -0.9037747979164124
    2. 'la' → logprob: -1.5287747383117676
    3. 'le' → logprob: -2.2787747383117676
    4. ' la' → logprob: -2.6537747383117676
    5. ' le' → logprob: -3.1537747383117676
    6. ' effectuer' → logprob: -3.4037747383117676
    7. 'l' → logprob: -3.5287747383117676
    8. ' travailler' → logprob: -3.6537747383117676
    9. ' gérer' → logprob: -3.7787747383117676
    10. 'man' → logprob: -3.9037747383117676

Token 37: ' calcul' (ID: 7559)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.4532838761806488
    2. 'calcul' → logprob: -1.0782839059829712
    3. ' traitement' → logprob: -4.203283786773682
    4. 'man' → logprob: -6.328283786773682
    5. 'trav' → logprob: -6.328283786773682
    6. 'cal' → logprob: -6.703283786773682
    7. ' calcul' → logprob: -6.953283786773682
    8. 'a' → logprob: -6.953283786773682
    9. 's' → logprob: -6.953283786773682
    10. '```' → logprob: -7.953283786773682

Token 38: ' scientifique' (ID: 110918)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' rapide' (ID: 44887)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5655321478843689
    2. '

' → logprob: -1.6905322074890137
    3. '<|end|>' → logprob: -1.9405322074890137
    4. '#' → logprob: -3.5655322074890137
    5. '\n' → logprob: -3.8155322074890137
    6. ' 

' → logprob: -4.190532207489014
    7. 'import' → logprob: -4.315532207489014
    8. ' ' → logprob: -5.190532207489014
    9. '' → logprob: -5.440532207489014
    10. ' 
' → logprob: -6.065532207489014

Token 40: ' sur' (ID: 1512)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.556318461894989
    2. '

' → logprob: -1.5563185214996338
    3. '<|end|>' → logprob: -1.8063185214996338
    4. '#' → logprob: -4.556318283081055
    5. 'import' → logprob: -4.556318283081055
    6. '\n' → logprob: -4.681318283081055
    7. ' ' → logprob: -5.431318283081055
    8. '<|end|>' → logprob: -5.556318283081055
    9. ' 

' → logprob: -5.931318283081055
    10. '' → logprob: -5.931318283081055

Token 41: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6988474726676941
    2. '  ' → logprob: -1.9488475322723389
    3. 'les' → logprob: -2.073847532272339
    4. 's' → logprob: -2.573847532272339
    5. ' les' → logprob: -3.073847532272339
    6. ' tableaux' → logprob: -3.698847532272339
    7. 'es' → logprob: -4.32384729385376
    8. ' des' → logprob: -4.69884729385376
    9. '```' → logprob: -5.19884729385376
    10. ' arrays' → logprob: -5.44884729385376

Token 42: ' tableaux' (ID: 176599)
  Prédit: ' tableaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableaux' → logprob: -0.6011115312576294
    2. ' arrays' → logprob: -1.7261115312576294
    3. 'arrays' → logprob: -2.60111141204834
    4. ' table' → logprob: -3.10111141204834
    5. ' ' → logprob: -3.22611141204834
    6. 'table' → logprob: -3.60111141204834
    7. 'a' → logprob: -3.85111141204834
    8. 's' → logprob: -3.97611141204834
    9. 'array' → logprob: -4.60111141204834
    10. ' array' → logprob: -5.22611141204834

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5163499712944031
    2. '

' → logprob: -1.2663500308990479
    3. '<|end|>' → logprob: -3.141350030899048
    4. ' ' → logprob: -3.891350030899048
    5. '#' → logprob: -4.016349792480469
    6. 'import' → logprob: -4.266349792480469
    7. ' 

' → logprob: -5.016349792480469
    8. '\n' → logprob: -5.141349792480469
    9. '' → logprob: -6.016349792480469
    10. '[' → logprob: -6.266349792480469

Token 44: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.250910222530365
    2. '

' → logprob: -1.6259102821350098
    3. '#' → logprob: -4.12591028213501
    4. '' → logprob: -6.12591028213501
    5. '\n' → logprob: -6.25091028213501
    6. '
' → logprob: -6.87591028213501
    7. 'import' → logprob: -7.25091028213501
    8. '```' → logprob: -7.25091028213501
    9. ' ' → logprob: -7.75091028213501
    10. '


' → logprob: -8.125909805297852

Token 45: ' offset' (ID: 8985)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01144742127507925
    2. '_' → logprob: -4.511447429656982
    3. ' _' → logprob: -8.886446952819824
    4. ' space' → logprob: -8.886446952819824
    5. '_space' → logprob: -10.511446952819824
    6. '  ' → logprob: -11.136446952819824
    7. ' calculate' → logprob: -11.261446952819824
    8. ' ```' → logprob: -11.261446952819824
    9. ' ▁' → logprob: -12.511446952819824
    10. ' a' → logprob: -12.511446952819824

Token 46: '(length' (ID: 47037)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4875224828720093
    2. '_' → logprob: -0.9875224828720093
    3. '_offset' → logprob: -5.487522602081299
    4. '_:' → logprob: -5.737522602081299
    5. 's' → logprob: -6.237522602081299
    6. '(_' → logprob: -6.612522602081299
    7. ':' → logprob: -7.737522602081299
    8. '_(' → logprob: -7.987522602081299
    9. '(x' → logprob: -8.73752212524414
    10. '):' → logprob: -8.73752212524414

Token 47: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17293649911880493
    2. '):' → logprob: -1.9229364395141602
    3. ')' → logprob: -4.42293643951416
    4. ' ,' → logprob: -8.54793643951416
    5. 's' → logprob: -8.92293643951416
    6. ' ):' → logprob: -8.92293643951416
    7. '=' → logprob: -9.79793643951416
    8. ',
' → logprob: -10.67293643951416
    9. ':' → logprob: -10.92293643951416
    10. '_' → logprob: -11.17293643951416

Token 48: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017019602237269282
    2. '():' → logprob: -7.626701831817627
    3. ' :' → logprob: -7.751701831817627
    4. '):' → logprob: -8.251702308654785
    5. '(' → logprob: -8.501702308654785
    6. ':
' → logprob: -9.376702308654785
    7. '   ' → logprob: -9.501702308654785
    8. ':return' → logprob: -9.876702308654785
    9. ' ' → logprob: -10.751702308654785
    10. ',' → logprob: -11.126702308654785

Token 49: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04784580320119858
    2. 'r' → logprob: -4.547845840454102
    3. '   ' → logprob: -4.547845840454102
    4. ' 
' → logprob: -4.797845840454102
    5. '    ' → logprob: -4.922845840454102
    6. ' return' → logprob: -6.547845840454102
    7. '0' → logprob: -6.797845840454102
    8. 'return' → logprob: -7.047845840454102
    9. ' )' → logprob: -7.297845840454102
    10. '\' → logprob: -7.422845840454102

Token 50: ' Cal' (ID: 4453)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1497887223958969
    2. ' """' → logprob: -2.3997886180877686
    3. ' return' → logprob: -4.274788856506348
    4. '   ' → logprob: -4.774788856506348
    5. ' ' → logprob: -4.774788856506348
    6. 'r' → logprob: -5.274788856506348
    7. '    ' → logprob: -6.399788856506348
    8. '  ' → logprob: -6.399788856506348
    9. ' '''' → logprob: -7.024788856506348
    10. 'return' → logprob: -7.024788856506348

Token 51: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6758425831794739
    2. 'cul' → logprob: -1.175842523574829
    3. 'culate' → logprob: -2.175842523574829
    4. 'cula' → logprob: -3.675842523574829
    5. 'cule' → logprob: -4.050842761993408
    6. 'cu' → logprob: -4.675842761993408
    7. ' c' → logprob: -5.175842761993408
    8. '   ' → logprob: -6.050842761993408
    9. 'cular' → logprob: -6.425842761993408
    10. 'culated' → logprob: -6.800842761993408

Token 52: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3517300486564636
    2. '_' → logprob: -1.7267301082611084
    3. ' l' → logprob: -2.9767301082611084
    4. 's' → logprob: -3.2267301082611084
    5. ' la' → logprob: -4.851729869842529
    6. ' le' → logprob: -5.851729869842529
    7. '_offset' → logprob: -5.976729869842529
    8. ' s' → logprob: -6.101729869842529
    9. ' _' → logprob: -6.226729869842529
    10. ' un' → logprob: -6.601729869842529

Token 53: ' puissance' (ID: 63494)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -1.3069325685501099
    2. ' offset' → logprob: -1.5569325685501099
    3. ' dé' → logprob: -2.5569324493408203
    4. ' somme' → logprob: -2.5569324493408203
    5. 's' → logprob: -3.0569324493408203
    6. ' d' → logprob: -3.1819324493408203
    7. 'offset' → logprob: -3.5569324493408203
    8. ' position' → logprob: -3.6819324493408203
    9. ' marge' → logprob: -4.05693244934082
    10. 'd' → logprob: -4.05693244934082

Token 54: ' de' (ID: 334)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8295774459838867
    2. ' ' → logprob: -1.2045774459838867
    3. ' de' → logprob: -2.4545774459838867
    4. '(' → logprob: -3.0795774459838867
    5. '  ' → logprob: -3.4545774459838867
    6. ' **' → logprob: -4.079577445983887
    7. '**' → logprob: -4.329577445983887
    8. '_' → logprob: -4.454577445983887
    9. '1' → logprob: -4.579577445983887
    10. '   ' → logprob: -4.829577445983887

Token 55: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3987528383731842
    2. ' ' → logprob: -1.1487528085708618
    3. ' deux' → logprob: -5.773752689361572
    4. '-' → logprob: -6.023752689361572
    5. 'de' → logprob: -7.023752689361572
    6. '10' → logprob: -7.023752689361572
    7. ' two' → logprob: -7.148752689361572
    8. ' l' → logprob: -7.273752689361572
    9. '1' → logprob: -7.273752689361572
    10. ' -' → logprob: -7.398752689361572

Token 56: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12509723007678986
    2. ' (' → logprob: -2.3750972747802734
    3. '**' → logprob: -4.375097274780273
    4. ' ' → logprob: -5.000097274780273
    5. 's' → logprob: -6.375097274780273
    6. '2' → logprob: -7.000097274780273
    7. ' **' → logprob: -7.000097274780273
    8. '^' → logprob: -8.000097274780273
    9. '(
' → logprob: -8.000097274780273
    10. '   ' → logprob: -9.125097274780273

Token 57: ' param' (ID: 3802)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5986750721931458
    2. ' (' → logprob: -1.973675012588501
    3. ' offset' → logprob: -2.473675012588501
    4. ' déplacement' → logprob: -3.348675012588501
    5. ' dé' → logprob: -3.723675012588501
    6. ' length' → logprob: -3.848675012588501
    7. 'n' → logprob: -4.22367525100708
    8. 'offset' → logprob: -4.22367525100708
    9. ' longueur' → logprob: -4.34867525100708
    10. ' la' → logprob: -4.59867525100708

Token 58: 'ètre' (ID: 60948)
  Prédit: 'ètre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètre' → logprob: -0.01800782047212124
    2. 'è' → logprob: -4.268007755279541
    3. ' ' → logprob: -6.143007755279541
    4. '`' → logprob: -7.643007755279541
    5. 'ètres' → logprob: -7.768007755279541
    6. '   ' → logprob: -9.0180082321167
    7. 'etre' → logprob: -9.2680082321167
    8. 'e' → logprob: -9.3930082321167
    9. ' ' → logprob: -9.5180082321167
    10. '```' → logprob: -9.7680082321167

Token 59: ' length' (ID: 5517)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07744381576776505
    2. ' (' → logprob: -3.077443838119507
    3. '(' → logprob: -4.577443599700928
    4. '  ' → logprob: -5.202443599700928
    5. '1' → logprob: -6.327443599700928
    6. ' **' → logprob: -6.577443599700928
    7. ''' → logprob: -6.702443599700928
    8. ' '' → logprob: -6.702443599700928
    9. '```' → logprob: -7.577443599700928
    10. ' `' → logprob: -7.577443599700928

Token 60: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9940297603607178
    2. '**' → logprob: -1.4940297603607178
    3. ' ' → logprob: -1.4940297603607178
    4. ' :' → logprob: -3.2440297603607178
    5. ' (' → logprob: -3.3690297603607178
    6. ':' → logprob: -3.8690297603607178
    7. ' **' → logprob: -3.9940297603607178
    8. '2' → logprob: -4.119029998779297
    9. '   ' → logprob: -4.619029998779297
    10. '\' → logprob: -5.119029998779297

Token 61: ' obtenir' (ID: 54423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014074529521167278
    2. '   ' → logprob: -6.139074325561523
    3. '  ' → logprob: -6.139074325561523
    4. ' la' → logprob: -6.264074325561523
    5. ' le' → logprob: -6.514074325561523
    6. ' return' → logprob: -6.889074325561523
    7. ' déterminer' → logprob: -6.889074325561523
    8. ' retourner' → logprob: -7.389074325561523
    9. ' un' → logprob: -7.639074325561523
    10. ' l' → logprob: -7.639074325561523

Token 62: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009854302741587162
    2. '  ' → logprob: -5.884854316711426
    3. ' l' → logprob: -6.009854316711426
    4. '1' → logprob: -6.634854316711426
    5. ' la' → logprob: -6.759854316711426
    6. '2' → logprob: -7.509854316711426
    7. ' un' → logprob: -8.009854316711426
    8. ' une' → logprob: -8.509854316711426
    9. ' le' → logprob: -8.634854316711426
    10. '_' → logprob: -9.009854316711426

Token 63: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5292204022407532
    2. 'a' → logprob: -1.1542203426361084
    3. 'e' → logprob: -2.6542203426361084
    4. ' a' → logprob: -4.6542205810546875
    5. ' e' → logprob: -5.4042205810546875
    6. ' '' → logprob: -6.0292205810546875
    7. ' offset' → logprob: -6.6542205810546875
    8. ' ' → logprob: -6.7792205810546875
    9. '   ' → logprob: -6.7792205810546875
    10. ''a' → logprob: -6.9042205810546875

Token 64: 'offset' (ID: 6680)
  Prédit: 'offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.5828163623809814
    2. ' offset' → logprob: -1.3328163623809814
    3. 'a' → logprob: -3.0828163623809814
    4. ''' → logprob: -3.2078163623809814
    5. 'e' → logprob: -3.8328163623809814
    6. ' ' → logprob: -4.082816123962402
    7. ' dé' → logprob: -4.457816123962402
    8. 'ex' → logprob: -4.832816123962402
    9. ' entier' → logprob: -5.332816123962402
    10. 'o' → logprob: -5.957816123962402

Token 65: ' adéqu' (ID: 158942)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03934156894683838
    2. ' (' → logprob: -4.539341449737549
    3. '(
' → logprob: -4.789341449737549
    4. '2' → logprob: -5.289341449737549
    5. ' ' → logprob: -5.414341449737549
    6. '**' → logprob: -5.914341449737549
    7. ':' → logprob: -6.539341449737549
    8. '_' → logprob: -6.664341449737549
    9. '1' → logprob: -7.039341449737549
    10. '   ' → logprob: -7.289341449737549

Token 66: 'at' (ID: 266)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11059819161891937
    2. 'e' → logprob: -3.360598087310791
    3. ' ' → logprob: -3.735598087310791
    4. ' )' → logprob: -3.985598087310791
    5. '_' → logprob: -4.485598087310791
    6. 'u' → logprob: -5.735598087310791
    7. '   ' → logprob: -5.985598087310791
    8. ' ' → logprob: -6.110598087310791
    9. 'ation' → logprob: -6.610598087310791
    10. '  ' → logprob: -7.235598087310791

Token 67: ' dans' (ID: 2671)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12145675718784332
    2. ':' → logprob: -2.9964568614959717
    3. ' (' → logprob: -3.6214568614959717
    4. '   ' → logprob: -4.496456623077393
    5. ' ' → logprob: -4.746456623077393
    6. '2' → logprob: -5.496456623077393
    7. '(
' → logprob: -5.746456623077393
    8. ' :' → logprob: -5.871456623077393
    9. '**' → logprob: -5.996456623077393
    10. '1' → logprob: -7.121456623077393

Token 68: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5294085144996643
    2. ' la' → logprob: -1.7794084548950195
    3. ' l' → logprob: -2.2794084548950195
    4. ' le' → logprob: -2.2794084548950195
    5. ' les' → logprob: -4.6544084548950195
    6. ' un' → logprob: -4.6544084548950195
    7. ' une' → logprob: -5.4044084548950195
    8. ' numpy' → logprob: -6.2794084548950195
    9. '  ' → logprob: -6.4044084548950195
    10. '   ' → logprob: -6.9669084548950195

Token 69: ''ar' (ID: 54307)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09882144629955292
    2. 'e' → logprob: -2.8488214015960693
    3. ''' → logprob: -3.7238214015960693
    4. ''espace' → logprob: -5.473821640014648
    5. ' a' → logprob: -6.473821640014648
    6. 'es' → logprob: -6.973821640014648
    7. '   ' → logprob: -6.973821640014648
    8. '_' → logprob: -7.098821640014648
    9. ' '' → logprob: -7.348821640014648
    10. ''a' → logprob: -8.098821640014648

Token 70: 'bre' (ID: 9945)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.9654272198677063
    2. 'ay' → logprob: -1.7154271602630615
    3. 'ray' → logprob: -1.9654271602630615
    4. 'r' → logprob: -2.2154271602630615
    5. 'g' → logprob: -2.7154271602630615
    6. 'e' → logprob: -2.9654271602630615
    7. 'chi' → logprob: -4.340427398681641
    8. 'c' → logprob: -4.590427398681641
    9. 'rière' → logprob: -4.965427398681641
    10. 'ea' → logprob: -5.215427398681641

Token 71: ' b' (ID: 287)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6180388927459717
    2. '   ' → logprob: -2.4930388927459717
    3. ' ' → logprob: -2.4930388927459717
    4. ' (' → logprob: -2.4930388927459717
    5. ':' → logprob: -2.6180388927459717
    6. '2' → logprob: -3.2430388927459717
    7. '**' → logprob: -3.9930388927459717
    8. ' :' → logprob: -3.9930388927459717
    9. '(
' → logprob: -4.368039131164551
    10. 's' → logprob: -5.493039131164551

Token 72: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5202219486236572
    2. 'inaire' → logprob: -1.8952219486236572
    3. 'inary' → logprob: -2.2702219486236572
    4. 'r' → logprob: -2.5202219486236572
    5. 'i' → logprob: -3.5202219486236572
    6. 'ina' → logprob: -4.770221710205078
    7. 'î' → logprob: -5.270221710205078
    8. '```' → logprob: -5.770221710205078
    9. 'inar' → logprob: -6.020221710205078
    10. 'it' → logprob: -6.145221710205078

Token 73: ' complet' (ID: 5127)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0277348756790161
    2. ':' → logprob: -1.1527348756790161
    3. '(' → logprob: -1.6527348756790161
    4. ' :' → logprob: -3.1527347564697266
    5. ' ' → logprob: -3.5277347564697266
    6. '2' → logprob: -4.152734756469727
    7. ':
' → logprob: -4.402734756469727
    8. ' :
' → logprob: -4.652734756469727
    9. ' (' → logprob: -4.902734756469727
    10. ' 
' → logprob: -5.902734756469727

Token 74: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3148335218429565
    2. ':' → logprob: -1.3148335218429565
    3. '2' → logprob: -1.9398335218429565
    4. '   ' → logprob: -2.064833641052246
    5. ' ' → logprob: -2.939833641052246
    6. ' (' → logprob: -3.064833641052246
    7. ' :' → logprob: -3.689833641052246
    8. '1' → logprob: -4.064833641052246
    9. '**' → logprob: -4.064833641052246
    10. '
' → logprob: -5.314833641052246

Token 75: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3171788454055786
    2. '   ' → logprob: -2.442178726196289
    3. ' ' → logprob: -3.067178726196289
    4. '(' → logprob: -3.192178726196289
    5. ' :' → logprob: -3.317178726196289
    6. '2' → logprob: -4.067178726196289
    7. ':
' → logprob: -4.192178726196289
    8. '
' → logprob: -5.692178726196289
    9. ' (' → logprob: -5.692178726196289
    10. ' :
' → logprob: -5.692178726196289

Token 76: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0535527467727661
    2. ' 
' → logprob: -1.9285527467727661
    3. '1' → logprob: -2.0535526275634766
    4. '2' → logprob: -2.0535526275634766
    5. ':' → logprob: -2.8035526275634766
    6. '
' → logprob: -2.8035526275634766
    7. ' return' → logprob: -3.1785526275634766
    8. 'return' → logprob: -4.178552627563477
    9. '    
' → logprob: -4.553552627563477
    10. '4' → logprob: -4.803552627563477

Token 77: ' Cela' (ID: 44403)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6236911416053772
    2. '   ' → logprob: -0.9986911416053772
    3. 'return' → logprob: -3.3736910820007324
    4. ' 
' → logprob: -3.4986910820007324
    5. 'n' → logprob: -5.123691082000732
    6. ' ' → logprob: -5.123691082000732
    7. '    ' → logprob: -6.123691082000732
    8. '1' → logprob: -6.123691082000732
    9. '2' → logprob: -6.373691082000732
    10. 'r' → logprob: -6.498691082000732

Token 78: ' fait' (ID: 7473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.109986662864685
    2. ' return' → logprob: -1.484986662864685
    3. ' n' → logprob: -2.7349867820739746
    4. ' revient' → logprob: -3.2349867820739746
    5. ' s' → logprob: -3.4849867820739746
    6. ' :' → logprob: -3.6099867820739746
    7. 'n' → logprob: -3.7349867820739746
    8. ' correspond' → logprob: -3.7349867820739746
    9. '1' → logprob: -3.8599867820739746
    10. ' permet' → logprob: -4.234986782073975

Token 79: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009573332965373993
    2. '  ' → logprob: -4.884573459625244
    3. '   ' → logprob: -7.134573459625244
    4. '2' → logprob: -8.009572982788086
    5. '    ' → logprob: -8.634572982788086
    6. 's' → logprob: -9.009572982788086
    7. '1' → logprob: -9.509572982788086
    8. ' ' → logprob: -10.134572982788086
    9. '  ' → logprob: -10.572072982788086
    10. ' )' → logprob: -10.634572982788086

Token 80: ' dé' (ID: 2393)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05106900632381439
    2. ' e' → logprob: -3.6760690212249756
    3. ' dé' → logprob: -5.1760687828063965
    4. ' offset' → logprob: -6.0510687828063965
    5. ' peu' → logprob: -6.0510687828063965
    6. ' ' → logprob: -6.1760687828063965
    7. 'a' → logprob: -6.7385687828063965
    8. 'es' → logprob: -6.7385687828063965
    9. 'd' → logprob: -6.9885687828063965
    10. '  ' → logprob: -7.0510687828063965

Token 81: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.26387208700180054
    2. '   ' → logprob: -3.0138721466064453
    3. '

' → logprob: -4.013872146606445
    4. '
' → logprob: -4.013872146606445
    5. '```' → logprob: -4.013872146606445
    6. ' ' → logprob: -4.263872146606445
    7. '``' → logprob: -4.513872146606445
    8. '|' → logprob: -5.138872146606445
    9. '  ' → logprob: -5.263872146606445
    10. '' → logprob: -5.326372146606445

Token 82: 'age' (ID: 477)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5475919246673584
    2. 'a' → logprob: -1.7975919246673584
    3. '   ' → logprob: -2.6725919246673584
    4. 't' → logprob: -2.7975919246673584
    5. ' a' → logprob: -2.9225919246673584
    6. 'age' → logprob: -4.2975921630859375
    7. 'e' → logprob: -4.5475921630859375
    8. '  ' → logprob: -4.6725921630859375
    9. 'm' → logprob: -4.7975921630859375
    10. 'ement' → logprob: -5.6725921630859375

Token 83: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07000856846570969
    2. ' de' → logprob: -2.9450085163116455
    3. ' d' → logprob: -5.445008754730225
    4. '   ' → logprob: -6.445008754730225
    5. '1' → logprob: -6.570008754730225
    6. '  ' → logprob: -6.820008754730225
    7. ' à' → logprob: -7.320008754730225
    8. 's' → logprob: -7.320008754730225
    9. ' ' → logprob: -7.320008754730225
    10. '    ' → logprob: -7.445008754730225

Token 84: 'inaire' (ID: 41465)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.252697616815567
    2. 'y' → logprob: -2.252697706222534
    3. 'i' → logprob: -3.127697706222534
    4. '```' → logprob: -3.752697706222534
    5. 'inaire' → logprob: -4.002697467803955
    6. 'in' → logprob: -4.502697467803955
    7. 'its' → logprob: -4.752697467803955
    8. '1' → logprob: -5.877697467803955
    9. 'inary' → logprob: -5.877697467803955
    10. '<<' → logprob: -6.877697467803955

Token 85: ' vers' (ID: 3640)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6054993271827698
    2. ' ' → logprob: -1.480499267578125
    3. '(' → logprob: -1.855499267578125
    4. ' (' → logprob: -2.855499267578125
    5. ' <<' → logprob: -5.105499267578125
    6. '   ' → logprob: -6.605499267578125
    7. 's' → logprob: -6.855499267578125
    8. '2' → logprob: -7.105499267578125
    9. '(
' → logprob: -7.855499267578125
    10. ' ' → logprob: -8.105499267578125

Token 86: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33037441968917847
    2. ' ' → logprob: -1.4553744792938232
    3. ' length' → logprob: -4.080374240875244
    4. 'length' → logprob: -4.455374240875244
    5. ' la' → logprob: -5.205374240875244
    6. ' le' → logprob: -5.830374240875244
    7. 'l' → logprob: -5.955374240875244
    8. 'le' → logprob: -6.330374240875244
    9. '2' → logprob: -6.830374240875244
    10. 'la' → logprob: -6.830374240875244

Token 87: ' gauche' (ID: 58367)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6694890260696411
    2. '1' → logprob: -1.0444890260696411
    3. ' length' → logprob: -2.5444889068603516
    4. 'left' → logprob: -3.1694889068603516
    5. ' ' → logprob: -4.919488906860352
    6. 'right' → logprob: -5.794488906860352
    7. ' left' → logprob: -6.794488906860352
    8. ' right' → logprob: -7.044488906860352
    9. '2' → logprob: -7.544488906860352
    10. ' droite' → logprob: -8.169488906860352

Token 88: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16468404233455658
    2. '(' → logprob: -2.9146840572357178
    3. ' ' → logprob: -3.0396840572357178
    4. '   ' → logprob: -3.6646840572357178
    5. ' (' → logprob: -4.039683818817139
    6. '(length' → logprob: -6.539683818817139
    7. ' length' → logprob: -6.539683818817139
    8. ' return' → logprob: -6.914683818817139
    9. 'return' → logprob: -7.164683818817139
    10. 'length' → logprob: -7.289683818817139

Token 89: ' équ' (ID: 18899)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2915652394294739
    2. '1' → logprob: -1.416565179824829
    3. '   ' → logprob: -4.791565418243408
    4. ' return' → logprob: -6.916565418243408
    5. 'return' → logprob: -7.916565418243408
    6. '    ' → logprob: -8.04156494140625
    7. '  ' → logprob: -9.04156494140625
    8. '2' → logprob: -10.22906494140625
    9. ' ' → logprob: -10.29156494140625
    10. ' length' → logprob: -10.29156494140625

Token 90: 'ivalent' (ID: 19253)
  Prédit: 'ivalent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivalent' → logprob: -0.08266852796077728
    2. 'iv' → logprob: -3.2076685428619385
    3. 'ival' → logprob: -3.4576685428619385
    4. 'i' → logprob: -5.707668304443359
    5. 'a' → logprob: -6.207668304443359
    6. '   ' → logprob: -7.457668304443359
    7. ' ' → logprob: -7.957668304443359
    8. 'v' → logprob: -7.957668304443359
    9. 'iva' → logprob: -8.20766830444336
    10. 'al' → logprob: -9.08266830444336

Token 91: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.07301604002714157
    2. ' ' → logprob: -2.6980159282684326
    3. ' to' → logprob: -6.573016166687012
    4. ' a' → logprob: -7.198016166687012
    5. 'à' → logprob: -8.198016166687012
    6. '  ' → logprob: -8.448016166687012
    7. ' au' → logprob: -8.823016166687012
    8. '1' → logprob: -9.198016166687012
    9. ' ' → logprob: -9.448016166687012
    10. ''à' → logprob: -10.948016166687012

Token 92: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18721269071102142
    2. '1' → logprob: -1.8122127056121826
    3. '2' → logprob: -5.0622124671936035
    4. ' (' → logprob: -7.4372124671936035
    5. ' length' → logprob: -8.687212944030762
    6. '(' → logprob: -9.062212944030762
    7. '  ' → logprob: -9.937212944030762
    8. '10' → logprob: -10.812212944030762
    9. 'length' → logprob: -10.812212944030762
    10. ' raising' → logprob: -10.812212944030762

Token 93: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11653947085142136
    2. '2' → logprob: -2.741539478302002
    3. ' ' → logprob: -3.116539478302002
    4. '(' → logprob: -6.991539478302002
    5. ' (' → logprob: -8.991539001464844
    6. 'pow' → logprob: -9.991539001464844
    7. '`' → logprob: -10.116539001464844
    8. 'length' → logprob: -11.116539001464844
    9. '```' → logprob: -11.241539001464844
    10. '10' → logprob: -11.866539001464844

Token 94: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.14385387301445007
    2. '**' → logprob: -2.0188539028167725
    3. ' ' → logprob: -7.143853664398193
    4. ' *' → logprob: -8.518854141235352
    5. ' ' → logprob: -9.393854141235352
    6. '*' → logprob: -9.518854141235352
    7. ')' → logprob: -12.018854141235352
    8. ' **)' → logprob: -12.268854141235352
    9. '^' → logprob: -12.643854141235352
    10. '  ' → logprob: -13.018854141235352

Token 95: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.28122827410697937
    2. 'length' → logprob: -1.4062283039093018
    3. '(length' → logprob: -9.781228065490723
    4. ' ' → logprob: -11.156228065490723
    5. ' (' → logprob: -12.656228065490723
    6. '	length' → logprob: -13.781228065490723
    7. ' lenght' → logprob: -14.531228065490723
    8. 'ength' → logprob: -14.531228065490723
    9. 'leng' → logprob: -14.781228065490723
    10. 'Length' → logprob: -15.156228065490723

Token 96: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9506360292434692
    2. '(' → logprob: -1.7006360292434692
    3. '
' → logprob: -1.8256360292434692
    4. '   ' → logprob: -1.9506360292434692
    5. ')' → logprob: -2.8256359100341797
    6. ' ' → logprob: -4.45063591003418
    7. '2' → logprob: -4.45063591003418
    8. ' (' → logprob: -4.57563591003418
    9. ':' → logprob: -5.07563591003418
    10. 'def' → logprob: -5.20063591003418

Token 97: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6951773762702942
    2. '   ' → logprob: -0.9451773762702942
    3. ' :' → logprob: -2.6951773166656494
    4. '):' → logprob: -4.1951775550842285
    5. '1' → logprob: -4.9451775550842285
    6. ' ' → logprob: -5.4451775550842285
    7. ')' → logprob: -5.8201775550842285
    8. '(' → logprob: -5.9451775550842285
    9. '
' → logprob: -5.9451775550842285
    10. ':
' → logprob: -6.0701775550842285

Token 98: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5322976112365723
    2. '1' → logprob: -2.0322976112365723
    3. ' ' → logprob: -2.4072976112365723
    4. ' :' → logprob: -2.7822976112365723
    5. ':' → logprob: -3.2822976112365723
    6. '    ' → logprob: -3.7822976112365723
    7. ' return' → logprob: -4.282297611236572
    8. ')' → logprob: -4.782297611236572
    9. ' 
' → logprob: -4.782297611236572
    10. 'return' (adapté à ' return') → logprob: -5.157297611236572

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38703861832618713
    2. ' ' → logprob: -1.1370385885238647
    3. '2' → logprob: -9.637038230895996
    4. '(' → logprob: -9.887038230895996
    5. ' (' → logprob: -10.012038230895996
    6. 'np' → logprob: -13.512038230895996
    7. ' ' → logprob: -13.637038230895996
    8. ' np' → logprob: -14.199538230895996
    9. '  ' → logprob: -14.262038230895996
    10. '   ' → logprob: -14.699538230895996

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009500489104539156
    2. ' ' → logprob: -7.375949859619141
    3. '2' → logprob: -8.75094985961914
    4. '(' → logprob: -8.75094985961914
    5. ' (' → logprob: -12.87594985961914
    6. '   ' → logprob: -13.62594985961914
    7. 'np' → logprob: -13.75094985961914
    8. '```' → logprob: -15.06344985961914
    9. '0' → logprob: -15.37594985961914
    10. '  ' → logprob: -15.62594985961914

Token 101: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.25287649035453796
    2. '<<' → logprob: -1.5028765201568604
    3. ' ' → logprob: -7.502876281738281
    4. '<' → logprob: -8.127876281738281
    5. ' <<=' → logprob: -10.627876281738281
    6. ' ' → logprob: -10.752876281738281
    7. ' <' → logprob: -11.002876281738281
    8. '<<(' → logprob: -11.252876281738281
    9. ' <<
' → logprob: -12.627876281738281
    10. '1' → logprob: -12.627876281738281

Token 102: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.20141372084617615
    2. ' length' → logprob: -1.7014137506484985
    3. '(length' → logprob: -14.576414108276367
    4. ' ' → logprob: -17.701414108276367
    5. 'leng' → logprob: -17.826414108276367
    6. 'len' → logprob: -18.076414108276367
    7. '	length' → logprob: -18.576414108276367
    8. '[length' → logprob: -19.076414108276367
    9. ' lenght' → logprob: -19.576414108276367
    10. 'ength' → logprob: -19.701414108276367

Token 103: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35421091318130493
    2. '

' → logprob: -1.8542108535766602
    3. '<|end|>' → logprob: -2.22921085357666
    4. ' 

' → logprob: -5.10421085357666
    5. '\n' → logprob: -5.47921085357666
    6. ' ' → logprob: -5.72921085357666
    7. '<|end|>' → logprob: -5.85421085357666
    8. 'def' → logprob: -5.85421085357666
    9. '*' → logprob: -5.97921085357666
    10. '(' → logprob: -6.10421085357666

Token 104: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18271377682685852
    2. 'def' → logprob: -2.307713747024536
    3. '<|end|>' → logprob: -3.807713747024536
    4. '

' → logprob: -4.307713985443115
    5. ':' → logprob: -4.932713985443115
    6. '\n' → logprob: -5.557713985443115
    7. '*' → logprob: -5.682713985443115
    8. '(' → logprob: -5.932713985443115
    9. '#' → logprob: -6.057713985443115
    10. 'newline' → logprob: -6.182713985443115

Token 105: ' solve' (ID: 17722)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -1.6555529832839966
    2. ' binary' → logprob: -2.155552864074707
    3. ' get' → logprob: -2.655552864074707
    4. ' add' → logprob: -2.780552864074707
    5. ' is' → logprob: -2.905552864074707
    6. ' max' → logprob: -3.155552864074707
    7. ' compute' → logprob: -3.280552864074707
    8. ' ' → logprob: -3.530552864074707
    9. ' offset' → logprob: -3.530552864074707
    10. ' reverse' → logprob: -3.655552864074707

Token 106: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4650130867958069
    2. '(' → logprob: -1.090013027191162
    3. '(length' → logprob: -4.215013027191162
    4. '(n' → logprob: -5.215013027191162
    5. '()' → logprob: -5.465013027191162
    6. '(num' → logprob: -6.340013027191162
    7. ' (' → logprob: -7.090013027191162
    8. '(size' → logprob: -7.215013027191162
    9. '(depth' → logprob: -7.215013027191162
    10. ' ():' → logprob: -7.340013027191162

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004248162265866995
    2. ':' → logprob: -6.129248142242432
    3. '    
' → logprob: -7.629248142242432
    4. ',' → logprob: -7.879248142242432
    5. '(n' → logprob: -8.00424861907959
    6. 'n' → logprob: -8.00424861907959
    7. '(' → logprob: -8.37924861907959
    8. ' n' → logprob: -9.87924861907959
    9. '    ' → logprob: -10.12924861907959
    10. ' :' → logprob: -10.50424861907959

Token 108: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.591814398765564
    2. ' n' → logprob: -1.466814398765564
    3. '   ' → logprob: -1.841814398765564
    4. 'import' → logprob: -4.0918145179748535
    5. ' input' → logprob: -4.2168145179748535
    6. 'input' → logprob: -4.5918145179748535
    7. ' import' → logprob: -4.9668145179748535
    8. 't' → logprob: -5.5918145179748535
    9. ' t' → logprob: -6.5918145179748535
    10. 'N' → logprob: -6.8418145179748535

Token 109: ' Lit' (ID: 45595)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31581366062164307
    2. '   ' → logprob: -1.940813660621643
    3. 'n' → logprob: -2.9408135414123535
    4. ' input' → logprob: -3.4408135414123535
    5. ' import' → logprob: -4.0658135414123535
    6. 'import' → logprob: -5.6908135414123535
    7. ' N' → logprob: -6.0658135414123535
    8. 'input' → logprob: -6.1908135414123535
    9. 't' → logprob: -6.1908135414123535
    10. ' data' → logprob: -6.4408135414123535

Token 110: ' deux' (ID: 10301)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0030775293707847595
    2. ' la' → logprob: -6.753077507019043
    3. ' ()' → logprob: -7.253077507019043
    4. '():' → logprob: -7.878077507019043
    5. ' ' → logprob: -8.753077507019043
    6. '().' → logprob: -9.253077507019043
    7. ' l' → logprob: -9.253077507019043
    8. ' une' → logprob: -9.378077507019043
    9. ' les' → logprob: -9.503077507019043
    10. '   ' → logprob: -9.753077507019043

Token 111: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4449711740016937
    2. ' ent' → logprob: -1.0699712038040161
    3. ' integers' → logprob: -4.694971084594727
    4. ' nombres' → logprob: -5.444971084594727
    5. 'ent' → logprob: -6.569971084594727
    6. ' entier' → logprob: -8.319971084594727
    7. ' espaces' → logprob: -8.569971084594727
    8. ' int' → logprob: -8.944971084594727
    9. ' nombre' → logprob: -9.444971084594727
    10. 'int' → logprob: -9.694971084594727

Token 112: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.6704215407371521
    2. 'r' → logprob: -0.9204215407371521
    3. 'ières' → logprob: -3.420421600341797
    4. 'ier' → logprob: -3.795421600341797
    5. 'rees' → logprob: -4.170421600341797
    6. 'rée' → logprob: -5.170421600341797
    7. 'ri' → logprob: -5.420421600341797
    8. 're' → logprob: -6.045421600341797
    9. 'ries' → logprob: -6.170421600341797
    10. 'er' → logprob: -6.795421600341797

Token 113: ' n' (ID: 297)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013791454955935478
    2. ',' → logprob: -5.638791561126709
    3. '():' → logprob: -5.638791561126709
    4. '(),' → logprob: -5.763791561126709
    5. ' ()' → logprob: -6.763791561126709
    6. '().' → logprob: -7.513791561126709
    7. '(' → logprob: -7.763791561126709
    8. ' ' → logprob: -7.888791561126709
    9. '   ' → logprob: -8.51379108428955
    10. ' ,' → logprob: -8.88879108428955

Token 114: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008389271679334342
    2. ' ,' → logprob: -7.500838756561279
    3. 'et' → logprob: -8.875839233398438
    4. ' =' → logprob: -10.250839233398438
    5. ' et' → logprob: -10.250839233398438
    6. ' ' → logprob: -10.375839233398438
    7. ',n' → logprob: -11.500839233398438
    8. '   ' → logprob: -12.500839233398438
    9. ' and' → logprob: -12.750839233398438
    10. 's' → logprob: -13.000839233398438

Token 115: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8652642965316772
    2. ' k' → logprob: -1.1152642965316772
    3. 'm' → logprob: -2.240264415740967
    4. ' m' → logprob: -2.490264415740967
    5. 'x' → logprob: -4.865264415740967
    6. ' x' → logprob: -4.865264415740967
    7. ' t' → logprob: -5.240264415740967
    8. ' d' → logprob: -5.490264415740967
    9. 'q' → logprob: -5.615264415740967
    10. 'd' → logprob: -5.615264415740967

Token 116: ' depuis' (ID: 16277)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7945588827133179
    2. '   ' → logprob: -1.4195588827133179
    3. ' =' → logprob: -1.5445588827133179
    4. '=' → logprob: -2.6695590019226074
    5. '(' → logprob: -5.419559001922607
    6. '()' → logprob: -5.544559001922607
    7. 'n' → logprob: -5.919559001922607
    8. ' ' → logprob: -5.919559001922607
    9. ',n' → logprob: -6.044559001922607
    10. ':' → logprob: -6.294559001922607

Token 117: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.11224889010190964
    2. 'input' → logprob: -2.9872488975524902
    3. ' l' → logprob: -3.8622488975524902
    4. 'l' → logprob: -4.11224889755249
    5. ' la' → logprob: -4.86224889755249
    6. ' ' → logprob: -5.11224889755249
    7. ' sys' → logprob: -6.11224889755249
    8. 'la' → logprob: -6.36224889755249
    9. 'sys' → logprob: -8.112248420715332
    10. ' stdin' → logprob: -9.487248420715332

Token 118: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2580007016658783
    2. ''entrée' → logprob: -1.7580007314682007
    3. ' input' → logprob: -4.00800085067749
    4. 'entrée' → logprob: -4.25800085067749
    5. 'e' → logprob: -4.50800085067749
    6. 'a' → logprob: -5.50800085067749
    7. ''' → logprob: -5.63300085067749
    8. 'sys' → logprob: -6.63300085067749
    9. 'import' → logprob: -7.75800085067749
    10. 'es' → logprob: -7.75800085067749

Token 119: ' standard' (ID: 7024)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7039402723312378
    2. ' =' → logprob: -1.2039402723312378
    3. '   ' → logprob: -2.0789403915405273
    4. '=' → logprob: -3.8289403915405273
    5. '()' → logprob: -4.078940391540527
    6. ' ' → logprob: -4.453940391540527
    7. 'n' → logprob: -5.203940391540527
    8. 'import' → logprob: -5.703940391540527
    9. ':' → logprob: -5.953940391540527
    10. 's' → logprob: -6.203940391540527

Token 120: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4468507766723633
    2. 'n' → logprob: -1.8218507766723633
    3. ',' → logprob: -2.0718507766723633
    4. '
' → logprob: -3.4468507766723633
    5. ',n' → logprob: -4.571850776672363
    6. ' n' → logprob: -4.821850776672363
    7. '(n' → logprob: -5.196850776672363
    8. '  
' → logprob: -5.821850776672363
    9. '  ' → logprob: -6.071850776672363
    10. ' ' → logprob: -6.071850776672363

Token 121: ' sépar' (ID: 97160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40848925709724426
    2. ' n' → logprob: -1.5334892272949219
    3. '   ' → logprob: -3.158489227294922
    4. ' ' → logprob: -4.283489227294922
    5. ' line' → logprob: -4.408489227294922
    6. '    ' → logprob: -4.408489227294922
    7. 'n' → logprob: -4.533489227294922
    8. ' sys' → logprob: -5.158489227294922
    9. '  ' → logprob: -5.908489227294922
    10. ',' → logprob: -6.033489227294922

Token 122: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.01814245991408825
    2. 'é' → logprob: -4.143142223358154
    3. 'er' → logprob: -6.893142223358154
    4. 'ée' → logprob: -7.643142223358154
    5. 'es' → logprob: -8.768142700195312
    6. 'e' → logprob: -8.768142700195312
    7. 'ées' → logprob: -9.268142700195312
    8. 'ateur' → logprob: -9.393142700195312
    9. 'ès' → logprob: -10.268142700195312
    10. ',' → logprob: -10.893142700195312

Token 123: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.21697454154491425
    2. ' ' → logprob: -2.0919744968414307
    3. 'par' → logprob: -3.5919744968414307
    4. '<|end|>' → logprob: -3.7169744968414307
    5. '  ' → logprob: -4.84197473526001
    6. ' by' → logprob: -5.21697473526001
    7. ')' → logprob: -6.46697473526001
    8. ' )' → logprob: -6.71697473526001
    9. ',' → logprob: -6.96697473526001
    10. 'e' → logprob: -7.46697473526001

Token 124: ' des' (ID: 731)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7279222011566162
    2. ' ' → logprob: -1.1029222011566162
    3. 'un' → logprob: -2.727922201156616
    4. ' espace' → logprob: -3.727922201156616
    5. ' une' → logprob: -3.852922201156616
    6. 'space' → logprob: -4.102922439575195
    7. 'l' → logprob: -4.227922439575195
    8. ''espace' → logprob: -4.852922439575195
    9. ''' → logprob: -5.477922439575195
    10. 'une' → logprob: -5.602922439575195

Token 125: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.6182157397270203
    2. 'esp' → logprob: -1.243215799331665
    3. ' ' → logprob: -2.243215799331665
    4. 'es' → logprob: -2.868215799331665
    5. ''esp' → logprob: -5.743215560913086
    6. ' espace' → logprob: -5.993215560913086
    7. ''espace' → logprob: -6.368215560913086
    8. 'space' → logprob: -7.743215560913086
    9. ' esp' → logprob: -7.743215560913086
    10. 'spaces' → logprob: -8.243215560913086

Token 126: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6518253087997437
    2. 'n' → logprob: -1.4018253087997437
    3. '
' → logprob: -1.9018253087997437
    4. ',' → logprob: -3.526825428009033
    5. ':' → logprob: -4.151825428009033
    6. '(n' → logprob: -5.026825428009033
    7. '    
' → logprob: -5.151825428009033
    8. '\n' → logprob: -5.276825428009033
    9. '  
' → logprob: -5.776825428009033
    10. '   
' → logprob: -5.901825428009033

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3766929507255554
    2. 'n' → logprob: -1.2516930103302002
    3. ',' → logprob: -4.126692771911621
    4. ' n' → logprob: -5.626692771911621
    5. 'input' → logprob: -6.001692771911621
    6. '    
' → logprob: -7.126692771911621
    7. '  ' → logprob: -7.251692771911621
    8. ' ' → logprob: -7.251692771911621
    9. ',n' → logprob: -7.376692771911621
    10. 's' → logprob: -7.376692771911621

Token 128: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5040159821510315
    2. ' n' → logprob: -1.0040159225463867
    3. '   ' → logprob: -3.8790159225463867
    4. ' line' → logprob: -5.004015922546387
    5. 'line' → logprob: -7.129015922546387
    6. 'input' → logprob: -7.629015922546387
    7. ' input' → logprob: -8.504015922546387
    8. 'data' → logprob: -8.629015922546387
    9. '	n' → logprob: -9.254015922546387
    10. ' data' → logprob: -9.379015922546387

Token 129: ' sys' (ID: 12228)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.435811847448349
    2. ' n' → logprob: -1.1858118772506714
    3. ' line' → logprob: -3.810811758041382
    4. '   ' → logprob: -4.560811996459961
    5. 'input' → logprob: -5.435811996459961
    6. 'line' → logprob: -5.560811996459961
    7. 'data' → logprob: -6.060811996459961
    8. ' input' → logprob: -6.060811996459961
    9. ' data' → logprob: -6.810811996459961
    10. 'inputs' → logprob: -7.810811996459961

Token 130: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.05190146341919899
    2. '.' → logprob: -3.0519015789031982
    3. '.stdout' → logprob: -6.301901340484619
    4. '.argv' → logprob: -6.676901340484619
    5. ' .' → logprob: -9.301901817321777
    6. '.readline' → logprob: -9.926901817321777
    7. '.exit' → logprob: -10.551901817321777
    8. '.stderr' → logprob: -10.801901817321777
    9. '.setdefault' → logprob: -11.551901817321777
    10. '.std' → logprob: -11.926901817321777

Token 131: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01617114432156086
    2. '.' → logprob: -4.141170978546143
    3. '.read' → logprob: -9.0161714553833
    4. '.readlines' → logprob: -11.6411714553833
    5. '.write' → logprob: -12.8911714553833
    6. ' readline' → logprob: -13.0161714553833
    7. 'read' → logprob: -14.3911714553833
    8. '.stdin' → logprob: -14.7661714553833
    9. ' .' → logprob: -15.2661714553833
    10. ' ' → logprob: -16.391170501708984

Token 132: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.07991831749677658
    2. '.read' → logprob: -2.579918384552002
    3. 'read' → logprob: -7.329918384552002
    4. '.' → logprob: -8.079917907714844
    5. '.readlines' → logprob: -10.329917907714844
    6. ' readline' → logprob: -10.704917907714844
    7. '.write' → logprob: -12.704917907714844
    8. '_read' → logprob: -13.329917907714844
    9. '.raw' → logprob: -13.704917907714844
    10. '.re' → logprob: -15.204917907714844

Token 133: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.20165696740150452
    2. '()' → logprob: -1.7016569375991821
    3. '()
' → logprob: -9.57665729522705
    4. ')' → logprob: -9.70165729522705
    5. '()[' → logprob: -10.20165729522705
    6. '())' → logprob: -10.57665729522705
    7. '(' → logprob: -11.20165729522705
    8. '()).' → logprob: -12.20165729522705
    9. '.readline' → logprob: -12.32665729522705
    10. '()

' → logprob: -12.57665729522705

Token 134: ' lit' (ID: 11980)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02938048169016838
    2. '()' → logprob: -3.6543805599212646
    3. '.strip' → logprob: -6.9043803215026855
    4. '.rstrip' → logprob: -7.1543803215026855
    5. '.decode' → logprob: -7.7793803215026855
    6. '.readline' → logprob: -8.279380798339844
    7. '[:-' → logprob: -8.779380798339844
    8. ')' → logprob: -9.029380798339844
    9. 'rstrip' → logprob: -9.404380798339844
    10. '.split' → logprob: -9.529380798339844

Token 135: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020596660673618317
    2. '().' → logprob: -4.020596504211426
    3. ' ()' → logprob: -7.270596504211426
    4. 'line' → logprob: -7.770596504211426
    5. ' ' → logprob: -7.770596504211426
    6. '(' → logprob: -8.895596504211426
    7. ' une' → logprob: -9.145596504211426
    8. ' a' → logprob: -9.520596504211426
    9. '())' → logprob: -9.770596504211426
    10. ' un' → logprob: -9.770596504211426

Token 136: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.28495657444000244
    2. 'ligne' → logprob: -1.5349565744400024
    3. 'l' → logprob: -4.659956455230713
    4. ' line' → logprob: -5.284956455230713
    5. ' prochaine' → logprob: -5.784956455230713
    6. 'line' → logprob: -5.909956455230713
    7. ' ' → logprob: -6.034956455230713
    8. 'b' → logprob: -6.534956455230713
    9. 's' → logprob: -6.659956455230713
    10. ' input' → logprob: -7.659956455230713

Token 137: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.148344948887825
    2. '().' → logprob: -2.0233449935913086
    3. ')' → logprob: -6.023344993591309
    4. '())' → logprob: -7.273344993591309
    5. ' )' → logprob: -7.273344993591309
    6. ' ' → logprob: -7.898344993591309
    7. '.' → logprob: -8.273344993591309
    8. '   ' → logprob: -8.898344993591309
    9. '    ' → logprob: -9.023344993591309
    10. '()[' → logprob: -9.023344993591309

Token 138: ' split' (ID: 12648)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.6577757596969604
    2. 'rstrip' → logprob: -1.2827757596969604
    3. 'decode' → logprob: -3.03277587890625
    4. ' strip' → logprob: -3.28277587890625
    5. '.strip' → logprob: -3.40777587890625
    6. 'split' → logprob: -4.03277587890625
    7. ' puis' → logprob: -4.28277587890625
    8. '().' → logprob: -4.40777587890625
    9. '.decode' → logprob: -4.53277587890625
    10. ' decode' → logprob: -5.28277587890625

Token 139: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015411012805998325
    2. 'b' → logprob: -4.640410900115967
    3. '(b' → logprob: -5.515410900115967
    4. '(' → logprob: -7.015410900115967
    5. ' b' → logprob: -8.390411376953125
    6. '()[' → logprob: -8.890411376953125
    7. '())' → logprob: -9.265411376953125
    8. '(),' → logprob: -9.390411376953125
    9. '()]' → logprob: -9.890411376953125
    10. ')' → logprob: -10.140411376953125

Token 140: ' sé' (ID: 7462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0853211060166359
    2. '()[' → logprob: -2.7103211879730225
    3. 'b' → logprob: -4.710320949554443
    4. '().' → logprob: -5.835320949554443
    5. ' b' → logprob: -7.210320949554443
    6. '(' → logprob: -7.460320949554443
    7. ')' → logprob: -7.585320949554443
    8. '   ' → logprob: -8.085321426391602
    9. '())' → logprob: -8.460321426391602
    10. '(),' → logprob: -8.710321426391602

Token 141: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.0004611743788700551
    2. 'par' → logprob: -7.875461101531982
    3. 'parent' → logprob: -10.50046157836914
    4. 'parer' → logprob: -10.87546157836914
    5. 'p' → logprob: -11.87546157836914
    6. 'paration' → logprob: -12.00046157836914
    7. 'parate' → logprob: -12.50046157836914
    8. 'para' → logprob: -12.62546157836914
    9. 'paren' → logprob: -13.00046157836914
    10. 'pa' → logprob: -13.00046157836914

Token 142: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05610915273427963
    2. 'b' → logprob: -2.9311091899871826
    3. ')' → logprob: -7.8061089515686035
    4. ' b' → logprob: -8.306109428405762
    5. '(b' → logprob: -8.556109428405762
    6. '()[' → logprob: -8.931109428405762
    7. '())' → logprob: -9.056109428405762
    8. '[]' → logprob: -10.806109428405762
    9. '(' → logprob: -10.931109428405762
    10. '('' → logprob: -11.306109428405762

Token 143: ' éléments' (ID: 57375)
  Prédit: 'oct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oct' → logprob: -0.7699750065803528
    2. ' oct' → logprob: -1.019974946975708
    3. 'b' → logprob: -2.894974946975708
    4. ' bytes' → logprob: -3.269974946975708
    5. 'tokens' → logprob: -3.394974946975708
    6. 'bytes' → logprob: -3.519974946975708
    7. ' tokens' → logprob: -5.394975185394287
    8. ' espaces' → logprob: -5.644975185394287
    9. 'byte' → logprob: -6.019975185394287
    10. 'esp' → logprob: -6.019975185394287

Token 144: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0037218148354440928
    2. '()[' → logprob: -6.753721714019775
    3. '()
' → logprob: -7.628721714019775
    4. ')' → logprob: -7.878721714019775
    5. '())' → logprob: -7.878721714019775
    6. '(),' → logprob: -7.878721714019775
    7. 'b' → logprob: -8.003722190856934
    8. '(' → logprob: -8.753722190856934
    9. 'def' → logprob: -8.878722190856934
    10. '().' → logprob: -8.878722190856934

Token 145: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.40157222747802734
    2. 'map' → logprob: -1.1515722274780273
    3. ' n' → logprob: -5.026572227478027
    4. 'n' → logprob: -6.401572227478027
    5. ' and' → logprob: -6.401572227478027
    6. '   ' → logprob: -6.401572227478027
    7. 'int' → logprob: -7.776572227478027
    8. ' k' → logprob: -8.276572227478027
    9. 'list' → logprob: -8.276572227478027
    10. '
' → logprob: -8.776572227478027

Token 146: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0022683741990476847
    2. '(' → logprob: -6.377268314361572
    3. '(str' → logprob: -7.877268314361572
    4. 'int' → logprob: -9.12726879119873
    5. '<int' → logprob: -11.00226879119873
    6. '=int' → logprob: -11.12726879119873
    7. ' int' → logprob: -11.37726879119873
    8. '```' → logprob: -11.37726879119873
    9. '(lambda' → logprob: -12.12726879119873
    10. '(
' → logprob: -12.37726879119873

Token 147: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03968511521816254
    2. ',' → logprob: -3.664685010910034
    3. '(sys' → logprob: -4.664685249328613
    4. '),' → logprob: -6.789685249328613
    5. ' )' → logprob: -6.789685249328613
    6. 'sys' → logprob: -8.414685249328613
    7. '))' → logprob: -8.539685249328613
    8. '   ' → logprob: -8.664685249328613
    9. '(' → logprob: -9.039685249328613
    10. ' ,' → logprob: -9.164685249328613

Token 148: ' ...)' (ID: 100545)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3311758041381836
    2. ')' → logprob: -1.3311758041381836
    3. ' sys' → logprob: -4.456175804138184
    4. ' )' → logprob: -6.206175804138184
    5. '...)' → logprob: -7.081175804138184
    6. '   ' → logprob: -7.206175804138184
    7. '(sys' → logprob: -7.706175804138184
    8. 'str' → logprob: -7.956175804138184
    9. 'list' → logprob: -8.081175804138184
    10. '),' → logprob: -8.081175804138184

Token 149: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20723120868206024
    2. '(' → logprob: -2.082231283187866
    3. '(
' → logprob: -4.582231044769287
    4. '()' → logprob: -4.707231044769287
    5. ' )' → logprob: -5.082231044769287
    6. '(sys' → logprob: -5.082231044769287
    7. '   ' → logprob: -5.332231044769287
    8. '(*' → logprob: -5.832231044769287
    9. '),' → logprob: -6.332231044769287
    10. ').' → logprob: -6.457231044769287

Token 150: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.04915134981274605
    2. ')' → logprob: -3.6741514205932617
    3. 'int' → logprob: -5.049151420593262
    4. 'ir' → logprob: -5.799151420593262
    5. 'map' → logprob: -6.049151420593262
    6. 'e' → logprob: -6.174151420593262
    7. 'i' → logprob: -6.174151420593262
    8. '(int' → logprob: -6.674151420593262
    9. '(map' → logprob: -6.799151420593262
    10. 'is' → logprob: -7.049151420593262

Token 151: ' chaque' (ID: 21194)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5522406697273254
    2. '(sys' → logprob: -1.0522406101226807
    3. 'sys' → logprob: -2.9272406101226807
    4. '(' → logprob: -4.80224084854126
    5. ',' → logprob: -6.42724084854126
    6. '(int' → logprob: -6.42724084854126
    7. '(str' → logprob: -6.67724084854126
    8. '   ' → logprob: -7.05224084854126
    9. ' )' → logprob: -7.42724084854126
    10. 'list' → logprob: -7.42724084854126

Token 152: ' élément' (ID: 99627)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18993091583251953
    2. '(sys' → logprob: -2.4399309158325195
    3. '(' → logprob: -3.9399309158325195
    4. 'sys' → logprob: -4.4399309158325195
    5. '   ' → logprob: -4.5649309158325195
    6. '(map' → logprob: -4.8149309158325195
    7. '(int' → logprob: -4.9399309158325195
    8. ',' → logprob: -5.0649309158325195
    9. '(lambda' → logprob: -5.3149309158325195
    10. ' )' → logprob: -5.6899309158325195

Token 154: ' un' (ID: 537)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0701102688908577
    2. ' int' → logprob: -2.820110321044922
    3. 'str' → logprob: -6.195110321044922
    4. 'ent' → logprob: -6.445110321044922
    5. 'ints' → logprob: -6.445110321044922
    6. 'inte' → logprob: -6.820110321044922
    7. ' integers' → logprob: -7.070110321044922
    8. ')' → logprob: -8.195110321044922
    9. ' entier' → logprob: -8.820110321044922
    10. ' str' → logprob: -9.070110321044922

Token 155: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2653437852859497
    2. 'int' → logprob: -1.5153437852859497
    3. ' entier' → logprob: -4.51534366607666
    4. ' int' → logprob: -6.51534366607666
    5. ' ent' → logprob: -8.14034366607666
    6. 'nombre' → logprob: -8.26534366607666
    7. 'inte' → logprob: -9.01534366607666
    8. '_ent' → logprob: -9.51534366607666
    9. ' ' → logprob: -10.64034366607666
    10. 'entrée' → logprob: -11.01534366607666

Token 156: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21559342741966248
    2. ')' → logprob: -2.3405933380126953
    3. '(' → logprob: -3.2155933380126953
    4. ',' → logprob: -4.340593338012695
    5. '()' → logprob: -4.840593338012695
    6. ' ' → logprob: -4.965593338012695
    7. '    ' → logprob: -5.090593338012695
    8. '(n' → logprob: -5.465593338012695
    9. ' )' → logprob: -5.840593338012695
    10. 'n' → logprob: -5.840593338012695

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11453311145305634
    2. 'n' → logprob: -2.3645331859588623
    3. ' n' → logprob: -5.114532947540283
    4. 'line' → logprob: -5.864532947540283
    5. ' line' → logprob: -5.989532947540283
    6. '    
' → logprob: -6.989532947540283
    7. 'def' → logprob: -8.114533424377441
    8. '(n' → logprob: -8.489533424377441
    9. '    ' → logprob: -8.739533424377441
    10. '	n' → logprob: -8.864533424377441

Token 158: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.092837393283844
    2. ' n' → logprob: -2.967837333679199
    3. 'data' → logprob: -3.967837333679199
    4. '   ' → logprob: -4.842837333679199
    5. 'line' → logprob: -5.717837333679199
    6. ' line' → logprob: -6.092837333679199
    7. ' data' → logprob: -6.467837333679199
    8. 'values' → logprob: -7.217837333679199
    9. 'nums' → logprob: -8.0928373336792
    10. 'for' → logprob: -8.2178373336792

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012504660990089178
    2. ',k' → logprob: -6.751250267028809
    3. ' ,' → logprob: -9.501250267028809
    4. 'k' → logprob: -12.626250267028809
    5. ',n' → logprob: -13.751250267028809
    6. ',
' → logprob: -15.001250267028809
    7. ',K' → logprob: -15.501250267028809
    8. 's' → logprob: -16.501251220703125
    9. ',int' → logprob: -16.501251220703125
    10. ',s' → logprob: -17.126251220703125

Token 160: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.05492110550403595
    2. 'k' → logprob: -2.9299211502075195
    3. ' ' → logprob: -10.92992115020752
    4. ' ' → logprob: -11.05492115020752
    5. ' ' → logprob: -13.42992115020752
    6. '	k' → logprob: -13.55492115020752
    7. ' 
' → logprob: -14.05492115020752
    8. ',k' → logprob: -15.17992115020752
    9. '<|end|>' → logprob: -15.30492115020752
    10. '=k' → logprob: -15.80492115020752

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198258697986603
    2. '=' → logprob: -2.8119826316833496
    3. ' ' → logprob: -12.061982154846191
    4. ')' → logprob: -12.061982154846191
    5. ',' → logprob: -13.061982154846191
    6. ')=' → logprob: -14.936982154846191
    7. '   ' → logprob: -15.186982154846191
    8. ' =
' → logprob: -15.561982154846191
    9. ' ' → logprob: -15.561982154846191
    10. '=sys' → logprob: -16.311983108520508

Token 162: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03805548697710037
    2. 'map' → logprob: -3.288055419921875
    3. ' ' → logprob: -12.038055419921875
    4. '	map' → logprob: -12.913055419921875
    5. ' ' → logprob: -13.288055419921875
    6. '   ' → logprob: -13.538055419921875
    7. '  ' → logprob: -13.663055419921875
    8. 'm' → logprob: -13.913055419921875
    9. ' m' → logprob: -15.663055419921875
    10. ' ma' → logprob: -15.788055419921875

Token 163: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018162699416279793
    2. '(' → logprob: -4.018162727355957
    3. '(str' → logprob: -11.893162727355957
    4. ' (' → logprob: -13.018162727355957
    5. '(lambda' → logprob: -13.643162727355957
    6. '(in' → logprob: -14.143162727355957
    7. '(
' → logprob: -14.643162727355957
    8. 'int' → logprob: -14.643162727355957
    9. '(sys' → logprob: -15.018162727355957
    10. '(list' → logprob: -15.268162727355957

Token 164: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.006600494962185621
    2. 'sys' → logprob: -5.756600379943848
    3. '(' → logprob: -5.881600379943848
    4. ' sys' → logprob: -8.006600379943848
    5. ' (' → logprob: -9.131600379943848
    6. ',' → logprob: -9.631600379943848
    7. '=sys' → logprob: -9.881600379943848
    8. ')' → logprob: -10.381600379943848
    9. '	sys' → logprob: -10.756600379943848
    10. '(
' → logprob: -11.881600379943848

Token 165: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12693482637405396
    2. ' sys' → logprob: -2.126934766769409
    3. '(sys' → logprob: -13.001935005187988
    4. '=sys' → logprob: -13.376935005187988
    5. '	sys' → logprob: -13.626935005187988
    6. '   ' → logprob: -14.626935005187988
    7. 'input' → logprob: -14.876935005187988
    8. ')' → logprob: -15.001935005187988
    9. ' ' → logprob: -15.376935005187988
    10. ' input' → logprob: -16.126934051513672

Token 166: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.4868770196917467e-05
    2. '.argv' → logprob: -11.375024795532227
    3. '.' → logprob: -11.625024795532227
    4. 'stdin' → logprob: -13.125024795532227
    5. '.stdout' → logprob: -13.375024795532227
    6. '.std' → logprob: -14.375024795532227
    7. '.sys' → logprob: -15.750024795532227
    8. '.st' → logprob: -16.625024795532227
    9. '.readline' → logprob: -17.250024795532227
    10. '(stdin' → logprob: -17.500024795532227

Token 167: '.buffer' (ID: 48964)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.024520155042409897
    2. '.buffer' → logprob: -3.7745201587677
    3. '.' → logprob: -7.024519920349121
    4. '.stdout' → logprob: -8.524519920349121
    5. '.readline' → logprob: -9.024519920349121
    6. '.argv' → logprob: -10.649519920349121
    7. '.std' → logprob: -10.649519920349121
    8. ' .' → logprob: -11.649519920349121
    9. 'stdin' → logprob: -12.274519920349121
    10. '.buff' → logprob: -14.149519920349121

Token 168: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.3663626305060461e-05
    2. 'read' → logprob: -11.25001335144043
    3. '.read' → logprob: -15.00001335144043
    4. ' readline' → logprob: -15.87501335144043
    5. '.readlines' → logprob: -16.25001335144043
    6. '.' → logprob: -17.12501335144043
    7. '```' → logprob: -21.62501335144043
    8. ').' → logprob: -21.62501335144043
    9. 'line' → logprob: -21.87501335144043
    10. 'getline' → logprob: -22.50001335144043

Token 169: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00019722258730325848
    2. '()' → logprob: -8.750197410583496
    3. '())' → logprob: -10.250197410583496
    4. '()[' → logprob: -13.250197410583496
    5. '(' → logprob: -14.625197410583496
    6. '()).' → logprob: -14.750197410583496
    7. ')' → logprob: -15.250197410583496
    8. ' ().' → logprob: -15.625197410583496
    9. '()
' → logprob: -16.00019645690918
    10. '().__' → logprob: -17.75019645690918

Token 170: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6998763680458069
    2. 'strip' → logprob: -1.199876308441162
    3. 'decode' → logprob: -1.699876308441162
    4. 'rstrip' → logprob: -3.949876308441162
    5. 'read' → logprob: -8.82487678527832
    6. ' strip' → logprob: -12.32487678527832
    7. ' split' → logprob: -12.57487678527832
    8. ' decode' → logprob: -13.19987678527832
    9. '(split' → logprob: -14.44987678527832
    10. ')' → logprob: -14.44987678527832

Token 171: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005647305864840746
    2. '()' → logprob: -5.6306471824646
    3. '()))' → logprob: -6.3806471824646
    4. ')' → logprob: -8.130647659301758
    5. '())
' → logprob: -10.505647659301758
    6. '(' → logprob: -11.505647659301758
    7. '))' → logprob: -11.755647659301758
    8. ' ())' → logprob: -12.005647659301758
    9. '()))
' → logprob: -13.755647659301758
    10. '()]' → logprob: -13.880647659301758

Token 172: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41450151801109314
    2. '<|end|>' → logprob: -2.039501428604126
    3. '
' → logprob: -2.914501428604126
    4. ')' → logprob: -3.039501428604126
    5. '    
' → logprob: -3.539501428604126
    6. ' ' → logprob: -3.539501428604126
    7. ' 
' → logprob: -3.914501428604126
    8. '  
' → logprob: -5.039501667022705
    9. '\n' → logprob: -5.539501667022705
    10. '  ' → logprob: -5.664501667022705

Token 173: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3482049703598022
    2. 'tree' → logprob: -1.7232049703598022
    3. 'arr' → logprob: -1.8482049703598022
    4. 'offset' → logprob: -2.098205089569092
    5. 'res' → logprob: -2.598205089569092
    6. 'if' → logprob: -3.098205089569092
    7. '   ' → logprob: -3.223205089569092
    8. '#' → logprob: -3.973205089569092
    9. 'array' → logprob: -4.598205089569092
    10. 'data' → logprob: -4.973205089569092

Token 174: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.38531965017318726
    2. 'offset' → logprob: -3.010319709777832
    3. 'data' → logprob: -3.260319709777832
    4. 'tree' → logprob: -3.260319709777832
    5. 'dp' → logprob: -3.510319709777832
    6. 'a' → logprob: -3.510319709777832
    7. 'array' → logprob: -4.135319709777832
    8. 'if' → logprob: -4.260319709777832
    9. 'values' → logprob: -4.760319709777832
    10. 'A' → logprob: -4.760319709777832

Token 175: ' Lit' (ID: 45595)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.19521522521972656
    2. 'data' → logprob: -3.0702152252197266
    3. 'array' → logprob: -3.8202152252197266
    4. ' arr' → logprob: -4.320215225219727
    5. 'dp' → logprob: -4.445215225219727
    6. 'A' → logprob: -4.570215225219727
    7. 'result' → logprob: -4.570215225219727
    8. 'a' → logprob: -4.570215225219727
    9. 'tree' → logprob: -5.195215225219727
    10. 'offset' → logprob: -5.195215225219727

Token 176: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7959704399108887
    2. ' une' → logprob: -1.6709704399108887
    3. ' les' → logprob: -2.6709704399108887
    4. 'n' → logprob: -2.9209704399108887
    5. 'une' → logprob: -3.0459704399108887
    6. ' n' → logprob: -3.1709704399108887
    7. 'la' → logprob: -3.5459704399108887
    8. 'a' → logprob: -3.6709704399108887
    9. 'les' → logprob: -3.9209704399108887
    10. ' le' → logprob: -4.545970439910889

Token 177: ' suite' (ID: 13800)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.7847718000411987
    2. ' liste' → logprob: -1.4097718000411987
    3. 'array' → logprob: -2.2847719192504883
    4. 'ligne' → logprob: -3.4097719192504883
    5. 'table' → logprob: -4.034771919250488
    6. 'data' → logprob: -4.159771919250488
    7. 'sequence' → logprob: -4.159771919250488
    8. 's' → logprob: -4.409771919250488
    9. ' array' → logprob: -4.409771919250488
    10. ' ligne' → logprob: -4.409771919250488

Token 178: ' b' (ID: 287)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04416986554861069
    2. '=' → logprob: -3.2941699028015137
    3. '_values' → logprob: -6.419169902801514
    4. '   ' → logprob: -7.294169902801514
    5. 'a' → logprob: -7.419169902801514
    6. '_' → logprob: -7.669169902801514
    7. 's' → logprob: -8.044169425964355
    8. '_data' → logprob: -8.294169425964355
    9. '_vals' → logprob: -8.419169425964355
    10. ' ' → logprob: -8.544169425964355

Token 179: 'inaire' (ID: 41465)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03020663931965828
    2. '=' → logprob: -4.155206680297852
    3. 'inaire' → logprob: -5.655206680297852
    4. 'y' → logprob: -5.780206680297852
    5. 'inary' → logprob: -6.030206680297852
    6. 'uffer' → logprob: -6.405206680297852
    7. 'in' → logprob: -6.780206680297852
    8. 'its' → logprob: -7.280206680297852
    9. '=np' → logprob: -8.405206680297852
    10. 'it' → logprob: -8.530206680297852

Token 180: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11318601667881012
    2. '   ' → logprob: -3.2381861209869385
    3. ' s' → logprob: -3.7381861209869385
    4. 's' → logprob: -4.113185882568359
    5. ' b' → logprob: -4.738185882568359
    6. '=' → logprob: -5.113185882568359
    7. 'b' → logprob: -6.113185882568359
    8. ',' → logprob: -6.113185882568359
    9. ' ' → logprob: -6.988185882568359
    10. 'data' → logprob: -6.988185882568359

Token 181: 'ou' (ID: 283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0899258553981781
    2. 'b' → logprob: -4.339925765991211
    3. '   ' → logprob: -4.339925765991211
    4. ' )' → logprob: -4.339925765991211
    5. ',' → logprob: -5.089925765991211
    6. 's' → logprob: -5.214925765991211
    7. ' b' → logprob: -5.339925765991211
    8. ' s' → logprob: -5.464925765991211
    9. '())' → logprob: -5.839925765991211
    10. '()' → logprob: -5.964925765991211

Token 182: ' autre' (ID: 20278)
  Prédit: ' bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bytes' → logprob: -1.2019907236099243
    2. 'bits' → logprob: -1.3269907236099243
    3. ' la' → logprob: -2.2019906044006348
    4. ' string' → logprob: -2.4519906044006348
    5. 'string' → logprob: -3.3269906044006348
    6. ' bits' → logprob: -3.7019906044006348
    7. 'bytes' → logprob: -4.201990604400635
    8. ' une' → logprob: -4.326990604400635
    9. 'bit' → logprob: -4.576990604400635
    10. ')' → logprob: -4.951990604400635

Token 183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20683404803276062
    2. ' )' → logprob: -2.081834077835083
    3. ' sequence' → logprob: -4.831833839416504
    4. ' chaîne' → logprob: -4.956833839416504
    5. 'string' → logprob: -4.956833839416504
    6. ' ' → logprob: -5.081833839416504
    7. 's' → logprob: -5.331833839416504
    8. ' string' → logprob: -5.581833839416504
    9. ' caractères' → logprob: -5.706833839416504
    10. ' data' → logprob: -5.831833839416504

Token 184: ' sous' (ID: 14487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5946084260940552
    2. ' =' → logprob: -1.0946084260940552
    3. 's' → logprob: -3.0946083068847656
    4. ' s' → logprob: -3.8446083068847656
    5. 'data' → logprob: -3.8446083068847656
    6. '=' → logprob: -4.219608306884766
    7. 'b' → logprob: -6.469608306884766
    8. ' data' → logprob: -6.469608306884766
    9. ',' → logprob: -6.594608306884766
    10. ' sequence' → logprob: -6.844608306884766

Token 185: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.0009083642507903278
    2. 'forme' → logprob: -7.500908374786377
    3. ' form' → logprob: -8.375907897949219
    4. ' la' → logprob: -9.625907897949219
    5. ' format' → logprob: -11.000907897949219
    6. 'form' → logprob: -11.000907897949219
    7. 'la' → logprob: -11.750907897949219
    8. ' une' → logprob: -12.750907897949219
    9. ' ' → logprob: -13.125907897949219
    10. ' forma' → logprob: -13.125907897949219

Token 186: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2475082129240036
    2. ' de' → logprob: -2.2475082874298096
    3. '   ' → logprob: -3.1225082874298096
    4. 'de' → logprob: -3.7475082874298096
    5. ' d' → logprob: -3.9975082874298096
    6. ' =' → logprob: -4.3725080490112305
    7. '=str' → logprob: -4.9975080490112305
    8. 'b' → logprob: -5.8725080490112305
    9. '=b' → logprob: -6.3725080490112305
    10. ' b' → logprob: -7.7475080490112305

Token 187: ' bytes' (ID: 11643)
  Prédit: 'bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bytes' → logprob: -0.5183492302894592
    2. ' bytes' → logprob: -1.3933491706848145
    3. 'chaine' → logprob: -2.1433491706848145
    4. ' chaîne' → logprob: -4.0183491706848145
    5. 'byte' → logprob: -4.7683491706848145
    6. 'cha' → logprob: -5.2683491706848145
    7. 'string' → logprob: -5.6433491706848145
    8. ' chaine' → logprob: -6.2683491706848145
    9. 'b' → logprob: -7.8933491706848145
    10. 'liste' → logprob: -8.143349647521973

Token 188: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0693163275718689
    2. 's' → logprob: -2.9443163871765137
    3. 'data' → logprob: -5.194316387176514
    4. ' s' → logprob: -5.569316387176514
    5. 'b' → logprob: -6.444316387176514
    6. 'line' → logprob: -7.444316387176514
    7. 'sequence' → logprob: -7.444316387176514
    8. 'seq' → logprob: -7.819316387176514
    9. '    
' → logprob: -8.444315910339355
    10. 'arr' → logprob: -8.569315910339355

Token 189: ' partir' (ID: 12100)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1399238556623459
    2. ' sys' → logprob: -2.5149238109588623
    3. '=sys' → logprob: -3.7649238109588623
    4. 'n' → logprob: -4.889924049377441
    5. '   ' → logprob: -5.264924049377441
    6. 'raw' → logprob: -6.014924049377441
    7. 'buffer' → logprob: -6.389924049377441
    8. 'np' → logprob: -6.639924049377441
    9. ' bytes' → logprob: -6.889924049377441
    10. 'bytes' → logprob: -7.014924049377441

Token 190: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47819504141807556
    2. ' de' → logprob: -1.228195071220398
    3. 'de' → logprob: -2.6031949520111084
    4. 'sys' → logprob: -5.4781951904296875
    5. '=sys' → logprob: -5.8531951904296875
    6. ' du' → logprob: -6.3531951904296875
    7. ' sys' → logprob: -6.8531951904296875
    8. 'du' → logprob: -6.9781951904296875
    9. ' ' → logprob: -7.6031951904296875
    10. ' d' → logprob: -8.103195190429688

Token 191: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07497347891330719
    2. ' sys' → logprob: -2.6999735832214355
    3. 'stdin' → logprob: -5.6999735832214355
    4. 'l' → logprob: -7.6999735832214355
    5. '=sys' → logprob: -7.9499735832214355
    6. ' stdin' → logprob: -8.074973106384277
    7. 'la' → logprob: -8.824973106384277
    8. ' la' → logprob: -9.074973106384277
    9. ' l' → logprob: -9.324973106384277
    10. '```' → logprob: -10.324973106384277

Token 192: ''entrée' (ID: 115820)
  Prédit: '=sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -0.6916484236717224
    2. ''entrée' → logprob: -1.4416484832763672
    3. 'sys' → logprob: -2.191648483276367
    4. 'a' → logprob: -2.566648483276367
    5. ' sys' → logprob: -3.941648483276367
    6. 'stdin' → logprob: -4.441648483276367
    7. 'input' → logprob: -4.441648483276367
    8. 'e' → logprob: -4.441648483276367
    9. 'entrée' → logprob: -4.566648483276367
    10. '.stdin' → logprob: -7.191648483276367

Token 193: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10361097753047943
    2. 'data' → logprob: -2.7286109924316406
    3. 'line' → logprob: -4.603610992431641
    4. 'sequence' → logprob: -4.728610992431641
    5. 's' → logprob: -5.853610992431641
    6. ' sequence' → logprob: -6.103610992431641
    7. ' line' → logprob: -6.103610992431641
    8. ' =' → logprob: -6.978610992431641
    9. ' data' → logprob: -7.103610992431641
    10. 'seq' → logprob: -7.228610992431641

Token 194: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027337830513715744
    2. 's' → logprob: -3.7773377895355225
    3. 'data' → logprob: -6.902338027954102
    4. ' s' → logprob: -7.402338027954102
    5. 'b' → logprob: -7.777338027954102
    6. 'S' → logprob: -8.027338027954102
    7. 'arr' → logprob: -8.152338027954102
    8. 'sequence' → logprob: -8.402338027954102
    9. '
' → logprob: -8.652338027954102
    10. 'a' → logprob: -8.652338027954102

Token 195: 'tout' (ID: 191666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8969041109085083
    2. '   ' → logprob: -0.8969041109085083
    3. 'sys' → logprob: -3.0219039916992188
    4. ')
' → logprob: -3.3969039916992188
    5. ' )' → logprob: -3.3969039916992188
    6. 'n' → logprob: -3.8969039916992188
    7. ' sys' → logprob: -4.521903991699219
    8. '),' → logprob: -4.771903991699219
    9. ' n' → logprob: -5.146903991699219
    10. '()' → logprob: -5.771903991699219

Token 196: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.087451457977295
    2. '_line' → logprob: -1.587451457977295
    3. ' =' → logprob: -1.712451457977295
    4. '_bytes' → logprob: -2.462451457977295
    5. '=' → logprob: -2.587451457977295
    6. '_data' → logprob: -3.837451457977295
    7. '_' → logprob: -3.962451457977295
    8. 'b' → logprob: -4.587451457977295
    9. 'line' → logprob: -4.712451457977295
    10. '
' → logprob: -5.087451457977295

Token 197: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5991240739822388
    2. ')' → logprob: -2.224123954772949
    3. '_' → logprob: -2.224123954772949
    4. 'b' → logprob: -2.349123954772949
    5. 'line' → logprob: -3.224123954772949
    6. '_line' → logprob: -3.474123954772949
    7. 'input' → logprob: -3.599123954772949
    8. 'e' → logprob: -3.849123954772949
    9. 'l' → logprob: -3.974123954772949
    10. '=' → logprob: -3.974123954772949

Token 198: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.18360726535320282
    2. 'su' → logprob: -3.183607339859009
    3. ' suit' → logprob: -3.558607339859009
    4. 'n' → logprob: -3.933607339859009
    5. ' n' → logprob: -4.18360710144043
    6. '=sys' → logprob: -4.18360710144043
    7. 'sys' → logprob: -4.43360710144043
    8. 's' → logprob: -5.05860710144043
    9. ' est' → logprob: -5.43360710144043
    10. '   ' → logprob: -5.93360710144043

Token 199: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5505900382995605
    2. '   ' → logprob: -2.3005900382995605
    3. '()' → logprob: -2.8005900382995605
    4. '().' → logprob: -3.0505900382995605
    5. '())' → logprob: -3.3005900382995605
    6. ' de' → logprob: -3.4255900382995605
    7. ' =' → logprob: -3.8005900382995605
    8. ' )' → logprob: -4.1755900382995605
    9. ').' → logprob: -4.1755900382995605
    10. ',' → logprob: -4.3005900382995605

Token 200: ' sauf' (ID: 87919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7174893021583557
    2. 'n' → logprob: -2.092489242553711
    3. 'rstrip' → logprob: -2.092489242553711
    4. '[:-' → logprob: -2.467489242553711
    5. ')' → logprob: -2.967489242553711
    6. ' n' → logprob: -3.092489242553711
    7. '()' → logprob: -4.217489242553711
    8. ' jusqu' → logprob: -5.092489242553711
    9. 'strip' → logprob: -5.342489242553711
    10. 'b' → logprob: -5.592489242553711

Token 201: ' la' (ID: 557)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.28881096839904785
    2. 'b' → logprob: -1.6638109683990479
    3. ' the' → logprob: -3.163810968399048
    4. ' newline' → logprob: -4.663810729980469
    5. 'the' → logprob: -5.663810729980469
    6. ' trailing' → logprob: -6.413810729980469
    7. ' for' → logprob: -7.038810729980469
    8. 'newline' → logprob: -7.163810729980469
    9. ' whitespace' → logprob: -7.288810729980469
    10. '()' → logprob: -8.038810729980469

Token 202: ' première' (ID: 23423)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.32217487692832947
    2. 'b' → logprob: -1.4471749067306519
    3. '\n' → logprob: -3.9471747875213623
    4. ' newline' → logprob: -5.447175025939941
    5. 'newline' → logprob: -5.947175025939941
    6. ' trailing' → logprob: -6.447175025939941
    7. 'sys' → logprob: -6.447175025939941
    8. '```' → logprob: -6.697175025939941
    9. ' ' → logprob: -6.947175025939941
    10. '1' → logprob: -6.947175025939941

Token 203: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5561085939407349
    2. 'line' → logprob: -1.4311085939407349
    3. ' line' → logprob: -3.0561084747314453
    4. '().' → logprob: -3.3061084747314453
    5. '(' → logprob: -3.5561084747314453
    6. ')' → logprob: -3.9311084747314453
    7. ' ligne' → logprob: -4.556108474731445
    8. ' ' → logprob: -4.681108474731445
    9. 'ligne' → logprob: -5.306108474731445
    10. '())' → logprob: -5.431108474731445

Token 204: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1333898901939392
    2. '   ' → logprob: -3.133389949798584
    3. '())' → logprob: -3.633389949798584
    4. ').' → logprob: -3.758389949798584
    5. '()' → logprob: -3.883389949798584
    6. '().' → logprob: -5.883389949798584
    7. '()[' → logprob: -6.258389949798584
    8. ')[' → logprob: -6.633389949798584
    9. ')
' → logprob: -6.758389949798584
    10. '[' → logprob: -6.758389949798584

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05381850153207779
    2. 's' → logprob: -3.428818464279175
    3. 'data' → logprob: -4.303818702697754
    4. 'sequence' → logprob: -6.678818702697754
    5. ' s' → logprob: -7.178818702697754
    6. ' data' → logprob: -7.678818702697754
    7. 'b' → logprob: -7.678818702697754
    8. 'arr' → logprob: -7.803818702697754
    9. 'line' → logprob: -7.928818702697754
    10. 'seq' → logprob: -8.053818702697754

Token 206: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.009259819984436
    2. 's' → logprob: -1.634259819984436
    3. 'data' → logprob: -1.884259819984436
    4. 'arr' → logprob: -2.3842597007751465
    5. ' data' → logprob: -2.8842597007751465
    6. ' s' → logprob: -3.2592597007751465
    7. 'sequence' → logprob: -3.8842597007751465
    8. 'a' → logprob: -4.0092597007751465
    9. 'seq' → logprob: -4.2592597007751465
    10. ' sequence' → logprob: -4.3842597007751465

Token 207: ' b' (ID: 287)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8762863874435425
    2. 's' → logprob: -1.5012863874435425
    3. ' data' → logprob: -1.8762863874435425
    4. 'arr' → logprob: -2.751286506652832
    5. ' s' → logprob: -3.251286506652832
    6. 'a' → logprob: -3.626286506652832
    7. 'seq' → logprob: -4.126286506652832
    8. 'sequence' → logprob: -4.376286506652832
    9. ' sequence' → logprob: -5.251286506652832
    10. 'b' → logprob: -5.376286506652832

Token 208: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021339578554034233
    2. '=' → logprob: -4.396339416503906
    3. 'y' → logprob: -5.896339416503906
    4. 's' → logprob: -6.521339416503906
    5. '=b' → logprob: -6.771339416503906
    6. 'inary' → logprob: -6.896339416503906
    7. 'in' → logprob: -7.646339416503906
    8. '_bytes' → logprob: -8.146339416503906
    9. 'b' → logprob: -8.521339416503906
    10. '_sequence' → logprob: -8.646339416503906

Token 209: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3324112892150879
    2. ' =' → logprob: -1.582411289215088
    3. 's' → logprob: -2.832411289215088
    4. 'data' → logprob: -5.082411289215088
    5. '=sys' → logprob: -5.707411289215088
    6. '   ' → logprob: -7.207411289215088
    7. 'in' → logprob: -7.207411289215088
    8. 'b' → logprob: -7.332411289215088
    9. 'a' → logprob: -7.457411289215088
    10. 'tree' → logprob: -7.582411289215088

Token 210: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.3791680335998535
    2. '")' → logprob: -1.3791680335998535
    3. '\n' → logprob: -2.0041680335998535
    4. ' =' → logprob: -2.0041680335998535
    5. 's' → logprob: -2.6291680335998535
    6. 'b' → logprob: -2.7541680335998535
    7. 'x' → logprob: -4.3791680335998535
    8. '=' → logprob: -4.5041680335998535
    9. '1' → logprob: -4.7541680335998535
    10. '0' → logprob: -4.7541680335998535

Token 211: ' concat' (ID: 73950)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10315519571304321
    2. ' =' → logprob: -2.6031551361083984
    3. ',' → logprob: -4.353155136108398
    4. 's' → logprob: -5.478155136108398
    5. 'data' → logprob: -6.228155136108398
    6. ')' → logprob: -6.853155136108398
    7. '=input' → logprob: -7.853155136108398
    8. '   ' → logprob: -7.978155136108398
    9. '[]' → logprob: -8.228155136108398
    10. 'x' → logprob: -8.478155136108398

Token 212: 'ène' (ID: 22902)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6159268021583557
    2. '+' → logprob: -1.865926742553711
    3. 'ène' → logprob: -2.490926742553711
    4. ' =' → logprob: -3.490926742553711
    5. '+=' → logprob: -3.615926742553711
    6. ' b' → logprob: -3.740926742553711
    7. '   ' → logprob: -3.865926742553711
    8. 'én' → logprob: -3.865926742553711
    9. ' +=' → logprob: -4.115926742553711
    10. 'ene' → logprob: -4.240926742553711

Token 213: ' un' (ID: 537)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0286394357681274
    2. 'sys' → logprob: -1.0286394357681274
    3. ' b' → logprob: -1.9036394357681274
    4. ' sys' → logprob: -2.653639316558838
    5. ' ' → logprob: -4.528639316558838
    6. ' bytes' → logprob: -4.903639316558838
    7. 'bytes' → logprob: -4.903639316558838
    8. '[]' → logprob: -5.278639316558838
    9. 's' → logprob: -5.278639316558838
    10. ' with' → logprob: -5.778639316558838

Token 214: ' zéro' (ID: 182040)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5463747978210449
    2. 'b' → logprob: -1.046374797821045
    3. ' ' → logprob: -3.296374797821045
    4. '0' → logprob: -4.546374797821045
    5. ' byte' → logprob: -4.796374797821045
    6. ' bytes' → logprob: -5.421374797821045
    7. 'byte' → logprob: -6.046374797821045
    8. 'e' → logprob: -6.046374797821045
    9. '  ' → logprob: -7.546374797821045
    10. ' espace' → logprob: -7.921374797821045

Token 215: ' initial' (ID: 4871)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6911852359771729
    2. '+' → logprob: -0.8161852359771729
    3. 'b' → logprob: -3.316185235977173
    4. ',' → logprob: -5.066184997558594
    5. ' b' → logprob: -5.566184997558594
    6. '+b' → logprob: -5.566184997558594
    7. ' ' → logprob: -5.691184997558594
    8. '   ' → logprob: -7.441184997558594
    9. ')' → logprob: -8.066184997558594
    10. '=' → logprob: -8.066184997558594

Token 216: ' pour' (ID: 1930)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7954145669937134
    2. '   ' → logprob: -1.6704145669937134
    3. '+' → logprob: -2.420414447784424
    4. 'b' → logprob: -2.545414447784424
    5. ',' → logprob: -3.295414447784424
    6. ' =' → logprob: -3.295414447784424
    7. 's' → logprob: -3.670414447784424
    8. '=' → logprob: -4.170414447784424
    9. ' s' → logprob: -4.295414447784424
    10. 'data' → logprob: -4.420414447784424

Token 217: ' align' (ID: 9538)
  Prédit: ' faciliter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -1.0104376077651978
    2. ' sys' → logprob: -1.1354376077651978
    3. 'sys' → logprob: -1.8854376077651978
    4. 'b' → logprob: -2.760437488555908
    5. ' align' → logprob: -4.385437488555908
    6. 'align' → logprob: -4.635437488555908
    7. ' ' → logprob: -4.760437488555908
    8. '   ' → logprob: -4.885437488555908
    9. 'simpl' → logprob: -5.135437488555908
    10. ' b' → logprob: -5.135437488555908

Token 218: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0002249933750135824
    2. 'e' → logprob: -9.375225067138672
    3. 'b' → logprob: -9.750225067138672
    4. ' b' → logprob: -10.000225067138672
    5. 'ement' → logprob: -11.000225067138672
    6. '   ' → logprob: -11.875225067138672
    7. 'é' → logprob: -12.125225067138672
    8. 'ner' → logprob: -13.250225067138672
    9. '=' → logprob: -13.375225067138672
    10. 'age' → logprob: -14.750225067138672

Token 219: ' les' (ID: 1341)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.5859330892562866
    2. ' sys' → logprob: -1.5859330892562866
    3. 'b' → logprob: -1.8359330892562866
    4. 'data' → logprob: -2.460933208465576
    5. 'sys' → logprob: -2.585933208465576
    6. ' data' → logprob: -2.835933208465576
    7. ' bytes' → logprob: -3.460933208465576
    8. ' ' → logprob: -4.085933208465576
    9. ' s' → logprob: -4.335933208465576
    10. '_bytes' → logprob: -4.460933208465576

Token 220: ' indices' (ID: 30378)
  Prédit: ' indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.33974069356918335
    2. 'indices' → logprob: -1.4647407531738281
    3. 'index' → logprob: -3.214740753173828
    4. ' indexes' → logprob: -5.214740753173828
    5. ' index' → logprob: -5.339740753173828
    6. 'indexes' → logprob: -5.339740753173828
    7. 'ind' → logprob: -6.964740753173828
    8. 'bits' → logprob: -8.214740753173828
    9. 'positions' → logprob: -9.339740753173828
    10. 'indice' → logprob: -9.464740753173828

Token 221: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.418974906206131
    2. 's' → logprob: -1.9189748764038086
    3. 'data' → logprob: -2.5439748764038086
    4. ' s' → logprob: -3.2939748764038086
    5. 'b' → logprob: -4.293974876403809
    6. ',' → logprob: -4.418974876403809
    7. 'sequence' → logprob: -4.668974876403809
    8. ' =' → logprob: -4.793974876403809
    9. '+' → logprob: -5.668974876403809
    10. ' +' → logprob: -5.668974876403809

Token 222: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4523030519485474
    2. 'la' → logprob: -1.7023030519485474
    3. 'b' → logprob: -1.8273030519485474
    4. ' sys' → logprob: -2.452302932739258
    5. 'sys' → logprob: -2.827302932739258
    6. 'l' → logprob: -3.077302932739258
    7. 'the' → logprob: -3.077302932739258
    8. ' k' → logprob: -3.452302932739258
    9. 'k' → logprob: -3.577302932739258
    10. ' the' → logprob: -3.702302932739258

Token 223: ' suite' (ID: 13800)
  Prédit: ' tableau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.5566101670265198
    2. 'b' → logprob: -2.306610107421875
    3. ' bytes' → logprob: -2.556610107421875
    4. 'bytes' → logprob: -2.556610107421875
    5. 'byte' → logprob: -3.681610107421875
    6. 'table' → logprob: -3.806610107421875
    7. 'array' → logprob: -4.181610107421875
    8. ' sequence' → logprob: -4.556610107421875
    9. ' code' → logprob: -4.556610107421875
    10. 'buffer' → logprob: -4.681610107421875

Token 224: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.967839241027832
    2. '   ' → logprob: -1.217839241027832
    3. 'data' → logprob: -2.217839241027832
    4. ' s' → logprob: -2.217839241027832
    5. 'sequence' → logprob: -3.592839241027832
    6. ' data' → logprob: -4.217839241027832
    7. ' sequence' → logprob: -4.217839241027832
    8. ' =' → logprob: -4.717839241027832
    9. ',' → logprob: -5.342839241027832
    10. 'seq' → logprob: -5.342839241027832

Token 225: ' venir' (ID: 42933)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23082086443901062
    2. ' partir' → logprob: -2.605820894241333
    3. 'l' → logprob: -3.230820894241333
    4. ' ' → logprob: -3.605820894241333
    5. '[' → logprob: -3.605820894241333
    6. 'un' → logprob: -4.105820655822754
    7. 'index' → logprob: -5.105820655822754
    8. 'b' → logprob: -5.980820655822754
    9. 'part' → logprob: -6.230820655822754
    10. 'base' → logprob: -6.355820655822754

Token 226: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3190149664878845
    2. 's' → logprob: -1.8190150260925293
    3. 'data' → logprob: -3.5690150260925293
    4. ' s' → logprob: -3.8190150260925293
    5. 'sequence' → logprob: -3.9440150260925293
    6. ' sequence' → logprob: -4.819015026092529
    7. 'seq' → logprob: -5.319015026092529
    8. ' data' → logprob: -5.444015026092529
    9. 'S' → logprob: -5.694015026092529
    10. 'line' → logprob: -5.694015026092529

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45394888520240784
    2. ' s' → logprob: -1.9539488554000854
    3. 's' → logprob: -2.328948974609375
    4. ' sequence' → logprob: -3.328948974609375
    5. 'data' → logprob: -3.828948974609375
    6. ' data' → logprob: -3.953948974609375
    7. 'sequence' → logprob: -4.453948974609375
    8. ',' → logprob: -4.953948974609375
    9. ' line' → logprob: -5.578948974609375
    10. 'seq' → logprob: -5.703948974609375

Token 228: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6156042218208313
    2. 'a' → logprob: -2.6156041622161865
    3. 'data' → logprob: -2.8656041622161865
    4. 'seq' → logprob: -2.9906041622161865
    5. 'arr' → logprob: -3.1156041622161865
    6. 'bits' → logprob: -3.3656041622161865
    7. ' s' → logprob: -3.4906041622161865
    8. '   ' → logprob: -3.6156041622161865
    9. 'b' → logprob: -3.6156041622161865
    10. 'sequence' → logprob: -3.9906041622161865

Token 229: ' .' (ID: 887)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40046700835227966
    2. 'a' → logprob: -3.0254669189453125
    3. ' s' → logprob: -3.0254669189453125
    4. 'seq' → logprob: -3.0254669189453125
    5. 'arr' → logprob: -3.2754669189453125
    6. 'data' → logprob: -3.5254669189453125
    7. 'bits' → logprob: -4.0254669189453125
    8. 'sequence' → logprob: -4.1504669189453125
    9. 'b' → logprob: -4.2754669189453125
    10. '   ' → logprob: -4.2754669189453125

Token 230: 'replace' (ID: 15208)
  Prédit: 'buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buffer' → logprob: -0.7434327602386475
    2. 'read' → logprob: -1.2434327602386475
    3. 'sys' → logprob: -2.1184327602386475
    4. 'stdin' → logprob: -2.7434327602386475
    5. 'concat' → logprob: -3.6184327602386475
    6. 'strip' → logprob: -4.868432998657227
    7. 'b' → logprob: -5.868432998657227
    8. 'join' → logprob: -5.993432998657227
    9. 'raw' → logprob: -6.243432998657227
    10. 'append' → logprob: -6.493432998657227

Token 231: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0010736575350165367
    2. '(' → logprob: -6.876073837280273
    3. 'b' → logprob: -10.876073837280273
    4. '(
' → logprob: -11.376073837280273
    5. '((' → logprob: -12.126073837280273
    6. '(ord' → logprob: -13.626073837280273
    7. '()' → logprob: -14.126073837280273
    8. ' (' → logprob: -14.501073837280273
    9. '(sys' → logprob: -14.876073837280273
    10. '(br' → logprob: -15.376073837280273

Token 232: '"\' (ID: 25544)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.006955484393984079
    2. 'b' → logprob: -5.006955623626709
    3. '(' → logprob: -8.75695514678955
    4. ' ' → logprob: -11.00695514678955
    5. ' b' → logprob: -11.00695514678955
    6. '(
' → logprob: -11.50695514678955
    7. '
' → logprob: -11.63195514678955
    8. '   ' → logprob: -12.00695514678955
    9. ' (' → logprob: -12.38195514678955
    10. '=b' → logprob: -12.38195514678955

Token 233: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01552136056125164
    2. 'x' → logprob: -4.51552152633667
    3. 'r' → logprob: -6.01552152633667
    4. ' ' → logprob: -7.14052152633667
    5. '0' → logprob: -7.26552152633667
    6. 't' → logprob: -9.640521049499512
    7. '10' → logprob: -9.765521049499512
    8. '

' → logprob: -9.765521049499512
    9. ' n' → logprob: -9.765521049499512
    10. '
' → logprob: -10.015521049499512

Token 234: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0020318960305303335
    2. '","' → logprob: -6.6270318031311035
    3. '"' → logprob: -8.252032279968262
    4. 'b' → logprob: -9.002032279968262
    5. '",'' → logprob: -9.752032279968262
    6. '",
' → logprob: -9.752032279968262
    7. ',' → logprob: -9.877032279968262
    8. ' ",' → logprob: -10.127032279968262
    9. '")' → logprob: -10.752032279968262
    10. ',",' → logprob: -11.002032279968262

Token 235: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029756972566246986
    2. ' b' → logprob: -3.529757022857666
    3. '   ' → logprob: -13.404756546020508
    4. '  ' → logprob: -14.029756546020508
    5. ' ' → logprob: -14.029756546020508
    6. '    ' → logprob: -14.154756546020508
    7. '	b' → logprob: -14.279756546020508
    8. ')b' → logprob: -14.404756546020508
    9. ')' → logprob: -14.529756546020508
    10. ' )' → logprob: -14.654756546020508

Token 236: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0024999137967824936
    2. '""' → logprob: -6.127500057220459
    3. 'b' → logprob: -8.6274995803833
    4. ')' → logprob: -9.8774995803833
    5. ''' → logprob: -10.5024995803833
    6. '``' → logprob: -11.1274995803833
    7. '"",' → logprob: -11.3774995803833
    8. '(""))' → logprob: -11.6274995803833
    9. ' "")' → logprob: -11.7524995803833
    10. '")' → logprob: -12.7524995803833

Token 237: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.027760084718465805
    2. 'b' → logprob: -3.6527600288391113
    3. ' b' → logprob: -7.652760028839111
    4. '"' → logprob: -7.777760028839111
    5. '")
' → logprob: -8.27776050567627
    6. ')' → logprob: -9.02776050567627
    7. '")+' → logprob: -10.40276050567627
    8. '0' → logprob: -10.77776050567627
    9. '"))' → logprob: -10.77776050567627
    10. '",' → logprob: -10.77776050567627

Token 238: ' sup' (ID: 1982)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33806100487709045
    2. '   ' → logprob: -2.7130610942840576
    3. '[' → logprob: -2.8380610942840576
    4. '+' → logprob: -3.0880610942840576
    5. ' +' → logprob: -3.2130610942840576
    6. ',' → logprob: -4.0880608558654785
    7. ')[' → logprob: -4.9630608558654785
    8. 's' → logprob: -5.0880608558654785
    9. '),' → logprob: -5.3380608558654785
    10. '[:-' → logprob: -5.4630608558654785

Token 239: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.010812817141413689
    2. 'pr' → logprob: -4.635812759399414
    3. 'r' → logprob: -8.260812759399414
    4. '=' → logprob: -8.260812759399414
    5. 'prim' → logprob: -8.385812759399414
    6. 'press' → logprob: -9.010812759399414
    7. 'primer' → logprob: -9.635812759399414
    8. 'p' → logprob: -10.385812759399414
    9. 'pri' → logprob: -10.885812759399414
    10. 'pres' → logprob: -11.010812759399414

Token 240: ' tous' (ID: 10688)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.02882968634366989
    2. 'b' → logprob: -4.278829574584961
    3. '(' → logprob: -4.528829574584961
    4. '()' → logprob: -6.403829574584961
    5. '(
' → logprob: -6.778829574584961
    6. ' b' → logprob: -7.528829574584961
    7. 's' → logprob: -8.278829574584961
    8. ' les' → logprob: -10.403829574584961
    9. '(s' → logprob: -10.528829574584961
    10. 'newline' → logprob: -10.903829574584961

Token 241: ' les' (ID: 1341)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.02615119330585003
    2. '(' → logprob: -4.401151180267334
    3. 's' → logprob: -5.151151180267334
    4. ' les' → logprob: -5.776151180267334
    5. 'b' → logprob: -6.401151180267334
    6. '(
' → logprob: -6.651151180267334
    7. 'les' → logprob: -7.526151180267334
    8. '(s' → logprob: -7.776151180267334
    9. '()' → logprob: -8.026151657104492
    10. 'newline' → logprob: -8.901151657104492

Token 242: ' ret' (ID: 2881)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6844749450683594
    2. 'ret' → logprob: -1.3094749450683594
    3. 'newline' → logprob: -2.3094749450683594
    4. 'b' → logprob: -3.5594749450683594
    5. ' newline' → logprob: -3.6844749450683594
    6. 'salt' → logprob: -4.059474945068359
    7. ' ret' → logprob: -4.184474945068359
    8. '\n' → logprob: -4.434474945068359
    9. ' saut' → logprob: -4.809474945068359
    10. 'oct' → logprob: -5.184474945068359

Token 243: 'ours' (ID: 2327)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.08857972174882889
    2. 'our' → logprob: -2.9635796546936035
    3. 'ours' → logprob: -4.0885796546936035
    4. 'ur' → logprob: -4.5885796546936035
    5. 'urs' → logprob: -5.9635796546936035
    6. 'u' → logprob: -6.2135796546936035
    7. 'ourn' → logprob: -7.8385796546936035
    8. '\n' → logprob: -8.213580131530762
    9. 'eurs' → logprob: -8.963580131530762
    10. 'us' → logprob: -9.213580131530762

Token 244: ' à' (ID: 1221)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.588512122631073
    2. ' à' → logprob: -1.7135121822357178
    3. 'à' → logprob: -2.4635121822357178
    4. 'a' → logprob: -2.9635121822357178
    5. ' ' → logprob: -3.0885121822357178
    6. ' b' → logprob: -3.7135121822357178
    7. 'ch' → logprob: -4.213511943817139
    8. '0' → logprob: -4.338511943817139
    9. 'd' → logprob: -4.463511943817139
    10. ' ch' → logprob: -5.588511943817139

Token 245: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.03034750185906887
    2. 'l' → logprob: -3.7803475856781006
    3. 'ligne' → logprob: -5.0303473472595215
    4. '   ' → logprob: -9.03034782409668
    5. '```' → logprob: -9.15534782409668
    6. '0' → logprob: -9.90534782409668
    7. 'lac' → logprob: -10.28034782409668
    8. '     ' → logprob: -10.40534782409668
    9. '  ' → logprob: -10.90534782409668
    10. 'lé' → logprob: -11.03034782409668

Token 246: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.03905511274933815
    2. 'l' → logprob: -3.289055109024048
    3. 'lig' → logprob: -7.914055347442627
    4. 'lin' → logprob: -8.414054870605469
    5. 'line' → logprob: -9.414054870605469
    6. '\n' → logprob: -9.664054870605469
    7. ' ' → logprob: -10.289054870605469
    8. 'fin' → logprob: -10.539054870605469
    9. '```' → logprob: -10.539054870605469
    10. '  ' → logprob: -10.664054870605469

Token 247: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9312307834625244
    2. ',' → logprob: -1.1812307834625244
    3. 's' → logprob: -2.1812307834625244
    4. ')' → logprob: -2.1812307834625244
    5. 'data' → logprob: -4.056230545043945
    6. 'sequence' → logprob: -4.181230545043945
    7. ' s' → logprob: -4.556230545043945
    8. ',
' → logprob: -5.806230545043945
    9. ' sequence' → logprob: -5.806230545043945
    10. ' ,' → logprob: -6.181230545043945

Token 248: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.11305783689022064
    2. ' garantir' → logprob: -3.488057851791382
    3. 'b' → logprob: -4.113057613372803
    4. ' avoir' → logprob: -4.363057613372803
    5. ' assurer' → logprob: -4.738057613372803
    6. ' get' → logprob: -5.613057613372803
    7. ' ' → logprob: -5.738057613372803
    8. ' faciliter' → logprob: -5.738057613372803
    9. ' b' → logprob: -5.863057613372803
    10. 'ob' → logprob: -5.988057613372803

Token 249: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.09194778650999069
    2. 'une' → logprob: -2.9669477939605713
    3. 'b' → logprob: -3.9669477939605713
    4. ' un' → logprob: -5.091947555541992
    5. ' la' → logprob: -5.841947555541992
    6. ' b' → logprob: -6.216947555541992
    7. '   ' → logprob: -6.466947555541992
    8. 'la' → logprob: -6.591947555541992
    9. ' ' → logprob: -6.716947555541992
    10. 'un' → logprob: -7.091947555541992

Token 250: ' sé' (ID: 7462)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8395378589630127
    2. 'sequence' → logprob: -1.9645378589630127
    3. 'bytes' → logprob: -2.0895378589630127
    4. 'byte' → logprob: -2.4645378589630127
    5. 'clean' → logprob: -2.7145378589630127
    6. ' bytes' → logprob: -3.2145378589630127
    7. ' sequence' → logprob: -3.4645378589630127
    8. 'continuous' → logprob: -3.5895378589630127
    9. ' continuous' → logprob: -4.589537620544434
    10. ' clean' → logprob: -4.714537620544434

Token 251: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.3926190137863159
    2. 'rie' → logprob: -1.142619013786316
    3. 'quent' → logprob: -5.7676191329956055
    4. 'qu' → logprob: -7.5176191329956055
    5. 'quences' → logprob: -7.7676191329956055
    6. 'r' → logprob: -7.7676191329956055
    7. '```' → logprob: -8.392619132995605
    8. 'q' → logprob: -8.517619132995605
    9. '   ' → logprob: -8.767619132995605
    10. 'ries' → logprob: -9.517619132995605

Token 252: ' continue' (ID: 4901)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.8955665826797485
    2. 'b' → logprob: -1.5205665826797485
    3. '<|end|>' → logprob: -2.645566463470459
    4. ' bytes' → logprob: -2.770566463470459
    5. 'bytes' → logprob: -2.895566463470459
    6. 's' → logprob: -3.145566463470459
    7. ' valid' → logprob: -3.770566463470459
    8. ' ' → logprob: -4.395566463470459
    9. ' complète' → logprob: -4.645566463470459
    10. ' s' → logprob: -4.770566463470459

Token 253: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5346951484680176
    2. 's' → logprob: -1.4096951484680176
    3. 'data' → logprob: -3.4096951484680176
    4. ' s' → logprob: -3.5346951484680176
    5. 'sequence' → logprob: -3.5346951484680176
    6. 'b' → logprob: -3.9096951484680176
    7. 'seq' → logprob: -4.784695148468018
    8. ' sequence' → logprob: -4.909695148468018
    9. 'a' → logprob: -5.284695148468018
    10. ',' → logprob: -5.284695148468018

Token 254: ' chiffres' (ID: 105565)
  Prédit: 'bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bytes' → logprob: -0.19762583076953888
    2. ' bytes' → logprob: -2.1976258754730225
    3. 'bits' → logprob: -3.3226258754730225
    4. 'b' → logprob: -3.8226258754730225
    5. 'oct' → logprob: -5.947625637054443
    6. ' bits' → logprob: -6.072625637054443
    7. 'car' → logprob: -6.572625637054443
    8. 'tokens' → logprob: -7.322625637054443
    9. 'data' → logprob: -7.447625637054443
    10. 'digits' → logprob: -7.447625637054443

Token 255: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7575741410255432
    2. 's' → logprob: -1.0075740814208984
    3. ' s' → logprob: -2.8825740814208984
    4. ',' → logprob: -3.7575740814208984
    5. 'sequence' → logprob: -4.007574081420898
    6. 'data' → logprob: -4.132574081420898
    7. ' sequence' → logprob: -4.757574081420898
    8. 'seq' → logprob: -5.257574081420898
    9. ')' → logprob: -5.382574081420898
    10. ' data' → logprob: -5.507574081420898

Token 256: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8690782785415649
    2. '   ' → logprob: -0.9940782785415649
    3. ' s' → logprob: -2.7440781593322754
    4. 'sequence' → logprob: -3.4940781593322754
    5. 'seq' → logprob: -3.6190781593322754
    6. 'data' → logprob: -4.244078159332275
    7. ' sequence' → logprob: -4.369078159332275
    8. 'S' → logprob: -4.369078159332275
    9. 'b' → logprob: -4.744078159332275
    10. 'a' → logprob: -5.494078159332275

Token 257: ' buf' (ID: 13976)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37625640630722046
    2. 'a' → logprob: -2.1262564659118652
    3. 'b' → logprob: -2.8762564659118652
    4. 'seq' → logprob: -3.1262564659118652
    5. 'bits' → logprob: -4.251256465911865
    6. 'data' → logprob: -4.501256465911865
    7. 'arr' → logprob: -4.626256465911865
    8. 'sequence' → logprob: -4.626256465911865
    9. 'line' → logprob: -5.001256465911865
    10. '   ' → logprob: -5.001256465911865

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2815946340560913
    2. ' =' → logprob: -1.4065946340560913
    3. '   ' → logprob: -8.406594276428223
    4. ',' → logprob: -9.656594276428223
    5. ' ' → logprob: -9.906594276428223
    6. '=b' → logprob: -10.031594276428223
    7. 'f' → logprob: -10.656594276428223
    8. '  ' → logprob: -11.156594276428223
    9. 'uffer' → logprob: -11.781594276428223
    10. 'uf' → logprob: -12.031594276428223

Token 259: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02392498217523098
    2. ' b' → logprob: -3.7739250659942627
    3. 'sys' → logprob: -7.523924827575684
    4. ' ' → logprob: -9.523924827575684
    5. ' sys' → logprob: -10.148924827575684
    6. '   ' → logprob: -11.523924827575684
    7. '  ' → logprob: -11.898924827575684
    8. '(b' → logprob: -12.398924827575684
    9. '	b' → logprob: -12.898924827575684
    10. '    ' → logprob: -13.898924827575684

Token 260: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.028544258326292038
    2. 'sys' → logprob: -3.7785441875457764
    3. 'b' → logprob: -5.5285444259643555
    4. '("' → logprob: -7.0285444259643555
    5. ''' → logprob: -9.153544425964355
    6. '(sys' → logprob: -9.653544425964355
    7. '"\' → logprob: -10.028544425964355
    8. '(' → logprob: -10.153544425964355
    9. '""' → logprob: -10.653544425964355
    10. ' b' → logprob: -10.653544425964355

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003698973741848022
    2. '"' → logprob: -8.250370025634766
    3. '"+' → logprob: -9.625370025634766
    4. ' ' → logprob: -10.500370025634766
    5. '"+"' → logprob: -11.875370025634766
    6. ' "' → logprob: -12.375370025634766
    7. '".' → logprob: -14.250370025634766
    8. '1' → logprob: -14.375370025634766
    9. ' "+' → logprob: -14.875370025634766
    10. '010' → logprob: -15.000370025634766

Token 262: '"' (ID: 1)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02072487771511078
    2. '"' → logprob: -4.020724773406982
    3. '"+' → logprob: -6.270724773406982
    4. ' +' → logprob: -7.645724773406982
    5. '+"' → logprob: -9.39572525024414
    6. '+
' → logprob: -10.27072525024414
    7. '+b' → logprob: -10.89572525024414
    8. 'sys' → logprob: -10.89572525024414
    9. '"+"' → logprob: -11.14572525024414
    10. ')+' → logprob: -11.89572525024414

Token 263: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004715634044259787
    2. ' +' → logprob: -5.379715442657471
    3. '+b' → logprob: -9.629715919494629
    4. 'sys' → logprob: -11.504715919494629
    5. '+
' → logprob: -11.754715919494629
    6. '+=' → logprob: -11.754715919494629
    7. '+n' → logprob: -13.879715919494629
    8. '   ' → logprob: -15.254715919494629
    9. '+s' → logprob: -15.254715919494629
    10. '=sys' → logprob: -15.254715919494629

Token 264: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0001234428636962548
    2. ' sys' → logprob: -9.000123023986816
    3. '(sys' → logprob: -17.750123977661133
    4. '	sys' → logprob: -18.250123977661133
    5. '=sys' → logprob: -19.625123977661133
    6. '/sys' → logprob: -20.875123977661133
    7. '.sys' → logprob: -21.000123977661133
    8. 'b' → logprob: -21.000123977661133
    9. '   ' → logprob: -21.250123977661133
    10. 'Sys' → logprob: -21.250123977661133

Token 265: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.776898251497187e-05
    2. '.stdout' → logprob: -10.0000581741333
    3. 'stdin' → logprob: -11.3750581741333
    4. '.' → logprob: -15.0000581741333
    5. '.buffer' → logprob: -15.2500581741333
    6. '.std' → logprob: -15.7500581741333
    7. '.stderr' → logprob: -16.625057220458984
    8. '.argv' → logprob: -16.875057220458984
    9. '(stdin' → logprob: -17.125057220458984
    10. ' stdin' → logprob: -18.000057220458984

Token 266: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -2.339278580620885e-06
    2. 'buffer' → logprob: -13.375001907348633
    3. '.' → logprob: -15.750001907348633
    4. '.buff' → logprob: -16.000001907348633
    5. '	buffer' → logprob: -16.250001907348633
    6. ' .' → logprob: -16.375001907348633
    7. '.readline' → logprob: -16.625001907348633
    8. '.stdin' → logprob: -16.875001907348633
    9. '(buffer' → logprob: -17.000001907348633
    10. '_buffer' → logprob: -17.750001907348633

Token 267: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.252141535282135
    2. '.read' → logprob: -1.5021414756774902
    3. '.readlines' → logprob: -8.627141952514648
    4. 'read' → logprob: -10.377141952514648
    5. '.' → logprob: -13.377141952514648
    6. ' readline' → logprob: -15.627141952514648
    7. ' .' → logprob: -15.877141952514648
    8. '_read' → logprob: -16.25214195251465
    9. '.peek' → logprob: -16.37714195251465
    10. '.Read' → logprob: -16.50214195251465

Token 268: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03805319964885712
    2. '().' → logprob: -3.288053274154663
    3. '())' → logprob: -12.913053512573242
    4. '(' → logprob: -13.288053512573242
    5. '()(' → logprob: -13.413053512573242
    6. '(),' → logprob: -13.913053512573242
    7. '()]' → logprob: -14.163053512573242
    8. ' ()' → logprob: -14.413053512573242
    9. '();' → logprob: -14.413053512573242
    10. 'replace' → logprob: -14.913053512573242

Token 269: 'replace' (ID: 15208)
  Prédit: 'replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replace' → logprob: -7.421908958349377e-05
    2. 'strip' → logprob: -10.00007438659668
    3. 'rstrip' → logprob: -10.62507438659668
    4. ' replace' → logprob: -12.50007438659668
    5. 'decode' → logprob: -14.87507438659668
    6. '.replace' → logprob: -16.75007438659668
    7. '```' → logprob: -16.87507438659668
    8. 'rep' → logprob: -17.00007438659668
    9. 'translate' → logprob: -17.25007438659668
    10. 'split' → logprob: -17.50007438659668

Token 270: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.000006675720215
    3. 'b' → logprob: -15.125006675720215
    4. '(
' → logprob: -15.500006675720215
    5. ' (' → logprob: -19.62500762939453
    6. '(B' → logprob: -19.75000762939453
    7. '((' → logprob: -20.12500762939453
    8. '(br' → logprob: -20.25000762939453
    9. '	b' → logprob: -21.37500762939453
    10. '=b' → logprob: -21.37500762939453

Token 271: '"\' (ID: 25544)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.02055753581225872
    2. 'b' → logprob: -3.8955576419830322
    3. ' b' → logprob: -11.645557403564453
    4. '(
' → logprob: -12.770557403564453
    5. '	b' → logprob: -13.395557403564453
    6. '=b' → logprob: -13.645557403564453
    7. 'br' → logprob: -15.145557403564453
    8. '(' → logprob: -15.645557403564453
    9. '("\' → logprob: -15.770557403564453
    10. '\b' → logprob: -16.020557403564453

Token 272: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3133425712585449
    2. '\n' → logprob: -1.313342571258545
    3. '"\' → logprob: -9.813343048095703
    4. '
' → logprob: -10.688343048095703
    5. ''\' → logprob: -14.938343048095703
    6. '

' → logprob: -15.188343048095703
    7. '\
' → logprob: -15.313343048095703
    8. '"' → logprob: -15.313343048095703
    9. '10' → logprob: -15.313343048095703
    10. 'x' → logprob: -15.563343048095703

Token 273: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.00026169343618676066
    2. 'b' → logprob: -8.375261306762695
    3. ',' → logprob: -11.500261306762695
    4. '"' → logprob: -11.625261306762695
    5. '",
' → logprob: -12.750261306762695
    6. ' b' → logprob: -12.750261306762695
    7. ',b' → logprob: -13.125261306762695
    8. ' ",' → logprob: -13.500261306762695
    9. '',' → logprob: -14.750261306762695
    10. '")' → logprob: -14.750261306762695

Token 274: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007607220206409693
    2. ' b' → logprob: -4.8826069831848145
    3. '   ' → logprob: -15.132607460021973
    4. ' ' → logprob: -15.632607460021973
    5. '	b' → logprob: -15.632607460021973
    6. ')b' → logprob: -15.757607460021973
    7. ')' → logprob: -16.132606506347656
    8. '    ' → logprob: -16.382606506347656
    9. '  ' → logprob: -16.882606506347656
    10. '(b' → logprob: -17.132606506347656

Token 275: '"' (ID: 1)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2575606107711792
    2. '"' → logprob: -1.5075606107711792
    3. ')' → logprob: -6.382560729980469
    4. '""' → logprob: -6.507560729980469
    5. '")' → logprob: -6.507560729980469
    6. ' b' → logprob: -7.007560729980469
    7. ')b' → logprob: -11.132560729980469
    8. '=b' → logprob: -12.132560729980469
    9. '	b' → logprob: -12.632560729980469
    10. ' "")' → logprob: -13.007560729980469

Token 276: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.22799749672412872
    2. 'b' → logprob: -1.6029975414276123
    3. ' b' → logprob: -6.602997303009033
    4. '"' → logprob: -6.852997303009033
    5. '")
' → logprob: -9.477997779846191
    6. '""' → logprob: -10.227997779846191
    7. ')' → logprob: -10.852997779846191
    8. ')b' → logprob: -12.227997779846191
    9. '").' → logprob: -12.602997779846191
    10. '")

' → logprob: -12.727997779846191

Token 277: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.312822550535202
    2. 'n' → logprob: -3.0628225803375244
    3. ' length' → logprob: -4.062822341918945
    4. ' for' → logprob: -4.187822341918945
    5. ' tree' → logprob: -4.187822341918945
    6. 'dp' → logprob: -4.187822341918945
    7. ' prefix' → logprob: -4.312822341918945
    8. ' res' → logprob: -4.437822341918945
    9. ' n' → logprob: -4.437822341918945
    10. 'i' → logprob: -4.687822341918945

Token 279: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.44891467690467834
    2. 'length' → logprob: -2.9489147663116455
    3. 'tree' → logprob: -2.9489147663116455
    4. 'size' → logprob: -3.4489147663116455
    5. '#' (adapté à ' #') → logprob: -3.5739147663116455
    6. 'n' → logprob: -3.8239147663116455
    7. 'offset' → logprob: -3.8239147663116455
    8. 'm' → logprob: -4.323914527893066
    9. 'if' → logprob: -4.448914527893066
    10. 'pos' → logprob: -4.698914527893066

Token 280: ' Convert' (ID: 15629)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7888852953910828
    2. 'length' → logprob: -1.6638853549957275
    3. 'tree' → logprob: -2.6638853549957275
    4. 'offset' → logprob: -2.7888853549957275
    5. 'size' → logprob: -2.7888853549957275
    6. 'arr' → logprob: -3.5388853549957275
    7. 'n' → logprob: -4.413885116577148
    8. '#' → logprob: -4.413885116577148
    9. 'max' → logprob: -4.413885116577148
    10. 'if' → logprob: -4.913885116577148

Token 281: 'it' (ID: 278)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6725229024887085
    2. 'e' → logprob: -1.1725229024887085
    3. '   ' → logprob: -2.672523021697998
    4. 'i' → logprob: -3.297523021697998
    5. 'ed' → logprob: -5.047523021697998
    6. ' i' → logprob: -5.047523021697998
    7. 's' → logprob: -5.047523021697998
    8. '=' → logprob: -5.172523021697998
    9. 'a' → logprob: -5.297523021697998
    10. '_' → logprob: -5.422523021697998

Token 282: ' buf' (ID: 13976)
  Prédit: 'buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buf' → logprob: -0.635172963142395
    2. ' buf' → logprob: -1.260172963142395
    3. '(buf' → logprob: -3.2601728439331055
    4. '   ' → logprob: -4.0101728439331055
    5. '_buf' → logprob: -4.0101728439331055
    6. 'indices' → logprob: -4.1351728439331055
    7. 's' → logprob: -4.3851728439331055
    8. 'def' → logprob: -4.6351728439331055
    9. 'arr' → logprob: -4.8851728439331055
    10. ' indices' → logprob: -5.3851728439331055

Token 283: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7019574046134949
    2. ' =' → logprob: -0.7019574046134949
    3. '.astype' → logprob: -5.9519572257995605
    4. 'int' → logprob: -6.7019572257995605
    5. '[' → logprob: -7.0769572257995605
    6. '[int' → logprob: -7.2019572257995605
    7. '.tolist' → logprob: -7.4519572257995605
    8. '[:]' → logprob: -7.8269572257995605
    9. '=int' → logprob: -7.9519572257995605
    10. 'tolist' → logprob: -8.076957702636719

Token 284: ' un' (ID: 537)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.21801629662513733
    2. ' np' → logprob: -1.843016266822815
    3. ' numpy' → logprob: -4.093016147613525
    4. 'numpy' → logprob: -4.218016147613525
    5. 'list' → logprob: -5.718016147613525
    6. ' a' → logprob: -6.843016147613525
    7. ' list' → logprob: -6.968016147613525
    8. 'a' → logprob: -7.843016147613525
    9. 'array' → logprob: -8.968016624450684
    10. 'int' → logprob: -8.968016624450684

Token 285: ' tableau' (ID: 67053)
  Prédit: 'numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numpy' → logprob: -0.49310755729675293
    2. 'np' → logprob: -1.743107557296753
    3. ' numpy' → logprob: -1.743107557296753
    4. 'array' → logprob: -3.743107557296753
    5. 'list' → logprob: -4.993107795715332
    6. ' np' → logprob: -5.618107795715332
    7. 'nd' → logprob: -6.368107795715332
    8. ' array' → logprob: -6.993107795715332
    9. ' list' → logprob: -8.118107795715332
    10. 'byte' → logprob: -8.368107795715332

Token 286: ' numpy' (ID: 19529)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.9795171618461609
    2. ' =' → logprob: -1.4795172214508057
    3. 'np' → logprob: -2.1045172214508057
    4. 'arr' → logprob: -2.1045172214508057
    5. '=np' → logprob: -2.6045172214508057
    6. ' of' → logprob: -4.104516983032227
    7. '=' → logprob: -4.104516983032227
    8. ' arr' → logprob: -4.229516983032227
    9. '(np' → logprob: -4.979516983032227
    10. ' numpy' → logprob: -5.229516983032227

Token 287: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27705398201942444
    2. 'arr' → logprob: -1.902053952217102
    3. 'array' → logprob: -3.2770540714263916
    4. '=' → logprob: -3.6520540714263916
    5. ' array' → logprob: -4.2770538330078125
    6. ' arr' → logprob: -5.4020538330078125
    7. ' np' → logprob: -6.1520538330078125
    8. ',' → logprob: -6.2770538330078125
    9. 'np' → logprob: -6.7770538330078125
    10. '=np' → logprob: -7.0270538330078125

Token 288: ' bytes' (ID: 11643)
  Prédit: 'uint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uint' → logprob: -0.03545672446489334
    2. 'np' → logprob: -3.910456657409668
    3. 'int' → logprob: -4.285456657409668
    4. ' uint' → logprob: -7.410456657409668
    5. 'dtype' → logprob: -8.035456657409668
    6. ' np' → logprob: -10.160456657409668
    7. 'bool' → logprob: -10.410456657409668
    8. 'type' → logprob: -11.285456657409668
    9. ' int' → logprob: -11.910456657409668
    10. 'ints' → logprob: -12.910456657409668

Token 289: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8265297412872314
    2. 'arr' → logprob: -1.2015297412872314
    3. '   ' → logprob: -2.0765297412872314
    4. ' arr' → logprob: -2.5765297412872314
    5. '=' → logprob: -3.7015297412872314
    6. ',' → logprob: -4.326529502868652
    7. 'data' → logprob: -5.451529502868652
    8. 'a' → logprob: -5.701529502868652
    9. ' data' → logprob: -5.951529502868652
    10. 'buf' → logprob: -6.076529502868652

Token 290: 'int' (ID: 491)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.021903986111283302
    2. 'dtype' → logprob: -4.396903991699219
    3. ' np' → logprob: -4.771903991699219
    4. ')' → logprob: -8.396903991699219
    5. '=np' → logprob: -8.771903991699219
    6. ' dtype' → logprob: -8.896903991699219
    7. '   ' → logprob: -9.021903991699219
    8. 'buf' → logprob: -9.021903991699219
    9. '(np' → logprob: -10.271903991699219
    10. 'arr' → logprob: -10.271903991699219

Token 291: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: 0.0
    2. '```' → logprob: -19.875
    3. '64' → logprob: -20.0
    4. '32' → logprob: -20.25
    5. ')' → logprob: -20.25
    6. '   ' → logprob: -20.875
    7. '=' → logprob: -21.125
    8. 'np' → logprob: -21.375
    9. ' =' → logprob: -21.5
    10. '16' → logprob: -22.125

Token 292: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20510487258434296
    2. ',' → logprob: -1.7051048278808594
    3. '),' → logprob: -6.955104827880859
    4. '(buf' → logprob: -7.205104827880859
    5. ')
' → logprob: -8.08010482788086
    6. ' ,' → logprob: -8.20510482788086
    7. '(' → logprob: -8.33010482788086
    8. 'dtype' → logprob: -8.45510482788086
    9. '   ' → logprob: -8.58010482788086
    10. ' )' → logprob: -9.08010482788086

Token 293: ' puis' (ID: 18766)
  Prédit: ' dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dtype' → logprob: -0.057350605726242065
    2. 'dtype' → logprob: -3.3073506355285645
    3. ' np' → logprob: -4.3073506355285645
    4. ' arr' → logprob: -6.1823506355285645
    5. 'np' → logprob: -6.5573506355285645
    6. '   ' → logprob: -7.9323506355285645
    7. ' buf' → logprob: -8.432350158691406
    8. ' offset' → logprob: -8.557350158691406
    9. ' n' → logprob: -8.557350158691406
    10. 'arr' → logprob: -8.807350158691406

Token 294: ' en' (ID: 469)
  Prédit: 'view'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'view' → logprob: -0.5755133032798767
    2. 'astype' → logprob: -1.5755133628845215
    3. '.astype' → logprob: -2.9505133628845215
    4. 'reshape' → logprob: -3.2005133628845215
    5. ' view' → logprob: -3.3255133628845215
    6. 'cast' → logprob: -3.7005133628845215
    7. 'views' → logprob: -4.2005133628845215
    8. ' views' → logprob: -4.2005133628845215
    9. 'np' → logprob: -4.5755133628845215
    10. '.view' → logprob: -4.9505133628845215

Token 295: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6909949779510498
    2. ' int' → logprob: -1.8159949779510498
    3. 'uint' → logprob: -2.31599497795105
    4. 'bool' → logprob: -2.31599497795105
    5. 'np' → logprob: -2.81599497795105
    6. ' np' → logprob: -3.69099497795105
    7. ' bool' → logprob: -3.81599497795105
    8. ' uint' → logprob: -4.565995216369629
    9. ' numpy' → logprob: -4.690995216369629
    10. ' un' → logprob: -5.565995216369629

Token 296: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.3961530327796936
    2. '8' → logprob: -1.1461529731750488
    3. '64' → logprob: -5.271152973175049
    4. '16' → logprob: -6.021152973175049
    5. '(buf' → logprob: -6.771152973175049
    6. 'buf' → logprob: -7.646152973175049
    7. 's' → logprob: -11.396153450012207
    8. '[:]' → logprob: -12.146153450012207
    9. '_buf' → logprob: -12.271153450012207
    10. '```' → logprob: -12.271153450012207

Token 297: ' pour' (ID: 1930)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.08275555819272995
    2. 'array' → logprob: -3.5827555656433105
    3. 'buf' → logprob: -4.0827555656433105
    4. ',' → logprob: -5.2077555656433105
    5. '(arr' → logprob: -5.2077555656433105
    6. 'a' → logprob: -5.3327555656433105
    7. '(' → logprob: -5.5827555656433105
    8. '(buf' → logprob: -5.8327555656433105
    9. '_array' → logprob: -5.9577555656433105
    10. '_arr' → logprob: -6.0827555656433105

Token 298: ' des' (ID: 731)
  Prédit: ' pouvoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pouvoir' → logprob: -0.8850817680358887
    2. ' faciliter' → logprob: -1.2600817680358887
    3. ' éviter' → logprob: -1.8850817680358887
    4. ' permettre' → logprob: -3.1350817680358887
    5. ' optimiser' → logprob: -3.6350817680358887
    6. ' calcul' → logprob: -4.885081768035889
    7. ' assurer' → logprob: -4.885081768035889
    8. ' effectuer' → logprob: -5.010081768035889
    9. ' garantir' → logprob: -5.260081768035889
    10. ' calculations' → logprob: -5.260081768035889

Token 299: ' opérations' (ID: 102793)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.10275308787822723
    2. 'perform' → logprob: -3.227753162384033
    3. ' calculations' → logprob: -4.102753162384033
    4. ' opérations' → logprob: -4.227753162384033
    5. ' performances' → logprob: -4.852753162384033
    6. 'calcul' → logprob: -4.977753162384033
    7. '32' → logprob: -6.102753162384033
    8. ' indices' → logprob: -6.477753162384033
    9. ' manip' → logprob: -6.727753162384033
    10. 'indices' → logprob: -7.227753162384033

Token 300: ' futures' (ID: 53070)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.042305465787649155
    2. '64' → logprob: -3.7923054695129395
    3. '   ' → logprob: -5.6673054695129395
    4. '(buf' → logprob: -5.7923054695129395
    5. '8' → logprob: -6.0423054695129395
    6. '16' → logprob: -6.2923054695129395
    7. 'array' → logprob: -6.9173054695129395
    8. 'arr' → logprob: -7.2923054695129395
    9. '[]' → logprob: -7.4173054695129395
    10. '(' → logprob: -7.4173054695129395

Token 301: '
' (ID: 198)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.09806747734546661
    2. ' arr' → logprob: -2.72306752204895
    3. '   ' → logprob: -4.723067283630371
    4. 'a' → logprob: -5.223067283630371
    5. 'array' → logprob: -5.598067283630371
    6. ' array' → logprob: -6.098067283630371
    7. 'buf' → logprob: -6.723067283630371
    8. 'data' → logprob: -6.723067283630371
    9. ' =' → logprob: -6.848067283630371
    10. ' data' → logprob: -7.223067283630371

Token 302: '   ' (ID: 271)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.24140189588069916
    2. '   ' → logprob: -2.4914019107818604
    3. ' arr' → logprob: -2.9914019107818604
    4. 'a' → logprob: -3.7414019107818604
    5. ' data' → logprob: -4.866401672363281
    6. 'data' → logprob: -4.991401672363281
    7. 'array' → logprob: -5.241401672363281
    8. ' array' → logprob: -5.366401672363281
    9. ',' → logprob: -5.491401672363281
    10. ' a' → logprob: -5.616401672363281

Token 303: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.3087424635887146
    2. ' arr' → logprob: -2.3087425231933594
    3. 'a' → logprob: -2.4337425231933594
    4. 'data' → logprob: -4.308742523193359
    5. ' a' → logprob: -4.558742523193359
    6. ' data' → logprob: -4.933742523193359
    7. 's' → logprob: -5.058742523193359
    8. 'tree' → logprob: -5.308742523193359
    9. 'b' → logprob: -5.558742523193359
    10. 'bits' → logprob: -5.808742523193359

Token 304: ' np' (ID: 5374)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.3017435371875763
    2. 'a' → logprob: -1.801743507385254
    3. 'data' → logprob: -3.551743507385254
    4. ' arr' → logprob: -4.551743507385254
    5. 'buf' → logprob: -5.176743507385254
    6. 's' → logprob: -5.426743507385254
    7. 'tree' → logprob: -5.551743507385254
    8. 'seq' → logprob: -5.801743507385254
    9. 'b' → logprob: -5.926743507385254
    10. 'vals' → logprob: -5.926743507385254

Token 305: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.016900796443223953
    2. '.array' → logprob: -4.266901016235352
    3. '.asarray' → logprob: -6.016901016235352
    4. 'from' → logprob: -8.891901016235352
    5. '.' → logprob: -9.516901016235352
    6. 'array' → logprob: -10.141901016235352
    7. ' .' → logprob: -10.641901016235352
    8. '.ndarray' → logprob: -11.391901016235352
    9. ' array' → logprob: -13.016901016235352
    10. ' from' → logprob: -13.266901016235352

Token 306: 'buffer' (ID: 15967)
  Prédit: 'buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buffer' → logprob: -9.014684110297821e-06
    2. '_buffer' → logprob: -12.625008583068848
    3. 'string' → logprob: -13.000008583068848
    4. ' buffer' → logprob: -13.125008583068848
    5. 'buf' → logprob: -13.875008583068848
    6. 'array' → logprob: -15.500008583068848
    7. '(buffer' → logprob: -16.125009536743164
    8. 'buff' → logprob: -16.250009536743164
    9. 'buffers' → logprob: -17.375009536743164
    10. 'numpy' → logprob: -18.125009536743164

Token 307: ' lit' (ID: 11980)
  Prédit: '(buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(buf' → logprob: -8.542423165636137e-05
    2. '(np' → logprob: -10.375085830688477
    3. '   ' → logprob: -10.875085830688477
    4. '(' → logprob: -11.625085830688477
    5. 'buf' → logprob: -11.875085830688477
    6. '(buffer' → logprob: -11.875085830688477
    7. ' (' → logprob: -12.625085830688477
    8. '(buff' → logprob: -13.125085830688477
    9. '(b' → logprob: -13.500085830688477
    10. '(arr' → logprob: -13.625085830688477

Token 308: ' buf' (ID: 13976)
  Prédit: '(buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buf' → logprob: -3.690834273584187e-05
    2. '(np' → logprob: -11.00003719329834
    3. 'buf' → logprob: -11.37503719329834
    4. '(buffer' → logprob: -12.25003719329834
    5. '(' → logprob: -13.00003719329834
    6. '(buff' → logprob: -14.75003719329834
    7. 'np' → logprob: -14.75003719329834
    8. '(
' → logprob: -15.62503719329834
    9. ' buf' → logprob: -15.75003719329834
    10. 'the' → logprob: -15.87503719329834

Token 309: ' sans' (ID: 9828)
  Prédit: '(buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(buf' → logprob: -0.5293744206428528
    2. ',' → logprob: -0.9043744206428528
    3. ' ,' → logprob: -6.154374599456787
    4. '   ' → logprob: -6.654374599456787
    5. ')' → logprob: -7.404374599456787
    6. '(np' → logprob: -7.404374599456787
    7. ',np' → logprob: -7.529374599456787
    8. '),' → logprob: -8.779374122619629
    9. ',b' → logprob: -8.904374122619629
    10. '(buffer' → logprob: -9.029374122619629

Token 310: ' faire' (ID: 8119)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.012663033790886402
    2. 'cop' → logprob: -5.262662887573242
    3. 'copies' → logprob: -5.262662887573242
    4. ' copie' → logprob: -7.012662887573242
    5. ' copy' → logprob: -7.262662887573242
    6. ' copies' → logprob: -8.012662887573242
    7. ' copying' → logprob: -8.762662887573242
    8. 'cpy' → logprob: -10.012662887573242
    9. '_copy' → logprob: -10.887662887573242
    10. ' copier' → logprob: -11.262662887573242

Token 311: ' de' (ID: 334)
  Prédit: 'cop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cop' → logprob: -0.5505598187446594
    2. 'copies' → logprob: -1.3005597591400146
    3. 'copy' → logprob: -2.8005597591400146
    4. ' copie' → logprob: -2.9255597591400146
    5. ' copies' → logprob: -4.050559997558594
    6. 'une' → logprob: -5.175559997558594
    7. 'cpy' → logprob: -5.425559997558594
    8. ' une' → logprob: -5.800559997558594
    9. 'de' → logprob: -6.050559997558594
    10. ' de' → logprob: -6.675559997558594

Token 312: ' copie' (ID: 134141)
  Prédit: 'cop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cop' → logprob: -0.333610862493515
    2. 'copies' → logprob: -1.3336108922958374
    3. 'copy' → logprob: -4.083611011505127
    4. ' copie' → logprob: -6.083611011505127
    5. 'cpy' → logprob: -7.458611011505127
    6. ' copies' → logprob: -7.958611011505127
    7. 'c' → logprob: -9.583610534667969
    8. 'コピー' → logprob: -12.208610534667969
    9. 'allocation' → logprob: -12.208610534667969
    10. ' коп' → logprob: -13.208610534667969

Token 313: ' mémoire' (ID: 79071)
  Prédit: '(buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(buf' → logprob: -0.37680181860923767
    2. ',' → logprob: -1.25180184841156
    3. '(np' → logprob: -4.12680196762085
    4. '   ' → logprob: -6.00180196762085
    5. ',np' → logprob: -6.00180196762085
    6. '(' → logprob: -6.00180196762085
    7. '(arr' → logprob: -6.62680196762085
    8. ' ,' → logprob: -6.87680196762085
    9. ')' → logprob: -7.37680196762085
    10. ',
' → logprob: -8.876801490783691

Token 314: ' :' (ID: 712)
  Prédit: '(buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(buf' → logprob: -0.013713023625314236
    2. '(' → logprob: -5.2637128829956055
    3. '(np' → logprob: -5.3887128829956055
    4. ',' → logprob: -6.0137128829956055
    5. '(arr' → logprob: -7.3887128829956055
    6. ')' → logprob: -8.263712882995605
    7. '(
' → logprob: -9.013712882995605
    8. '   ' → logprob: -9.138712882995605
    9. ' (' → logprob: -9.888712882995605
    10. '(buffer' → logprob: -9.888712882995605

Token 315: ' chaque' (ID: 21194)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.19765940308570862
    2. 'a' → logprob: -2.697659492492676
    3. ' arr' → logprob: -3.197659492492676
    4. 'data' → logprob: -4.947659492492676
    5. 'array' → logprob: -5.072659492492676
    6. 'np' → logprob: -5.072659492492676
    7. 'v' → logprob: -5.697659492492676
    8. 's' → logprob: -5.697659492492676
    9. 'buf' → logprob: -5.697659492492676
    10. 'res' → logprob: -5.822659492492676

Token 316: ' byte' (ID: 9239)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9519339203834534
    2. ' ' → logprob: -0.9519339203834534
    3. ',' → logprob: -3.2019338607788086
    4. ' byte' → logprob: -3.2019338607788086
    5. '=' → logprob: -3.4519338607788086
    6. 'byte' → logprob: -3.7019338607788086
    7. ' )' → logprob: -4.076933860778809
    8. 'b' → logprob: -4.576933860778809
    9. '   ' → logprob: -5.076933860778809
    10. ' element' → logprob: -5.139433860778809

Token 317: ' devient' (ID: 63488)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0514297485351562
    2. ')' → logprob: -1.9264297485351562
    3. '=' → logprob: -2.3014297485351562
    4. '),' → logprob: -2.4264297485351562
    5. '=np' → logprob: -2.4264297485351562
    6. 'np' → logprob: -2.8014297485351562
    7. ' np' → logprob: -3.4264297485351562
    8. ' is' → logprob: -3.5514297485351562
    9. '(np' → logprob: -3.8014297485351562
    10. ' =' → logprob: -4.176429748535156

Token 318: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.0419971942901611
    2. 'np' → logprob: -1.0419971942901611
    3. 'un' → logprob: -2.041997194290161
    4. 'an' → logprob: -2.916997194290161
    5. ' an' → logprob: -3.041997194290161
    6. 'a' → logprob: -3.916997194290161
    7. ' np' → logprob: -4.291996955871582
    8. 'int' → logprob: -4.791996955871582
    9. '1' → logprob: -5.541996955871582
    10. ' une' → logprob: -5.666996955871582

Token 319: ' valeur' (ID: 41664)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9973978996276855
    2. 'np' → logprob: -0.9973978996276855
    3. '1' → logprob: -2.2473978996276855
    4. 'numpy' → logprob: -3.1223978996276855
    5. 'element' → logprob: -3.4973978996276855
    6. 'number' → logprob: -3.8723978996276855
    7. 'value' → logprob: -3.9973978996276855
    8. 'uint' → logprob: -5.1223978996276855
    9. 'integer' → logprob: -5.1223978996276855
    10. 'val' → logprob: -5.1223978996276855

Token 320: '
' (ID: 198)
  Prédit: '(np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.7027896642684937
    2. '=np' → logprob: -1.8277896642684937
    3. ' =' → logprob: -2.202789783477783
    4. ',' → logprob: -2.452789783477783
    5. '=' → logprob: -3.202789783477783
    6. '(buf' → logprob: -4.077789783477783
    7. 'int' → logprob: -4.077789783477783
    8. ',np' → logprob: -4.202789783477783
    9. '.astype' → logprob: -4.327789783477783
    10. 'np' → logprob: -4.702789783477783

Token 321: '   ' (ID: 271)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.2979371249675751
    2. 'a' → logprob: -2.4229371547698975
    3. '(arr' → logprob: -3.6729371547698975
    4. ' arr' → logprob: -3.9229371547698975
    5. '   ' → logprob: -4.422936916351318
    6. 's' → logprob: -4.422936916351318
    7. 'data' → logprob: -4.547936916351318
    8. 'array' → logprob: -4.547936916351318
    9. 'buf' → logprob: -5.047936916351318
    10. ',' → logprob: -5.047936916351318

Token 322: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5042921304702759
    2. 'a' → logprob: -1.6292921304702759
    3. 's' → logprob: -3.6292920112609863
    4. 'data' → logprob: -4.254292011260986
    5. ' arr' → logprob: -4.379292011260986
    6. 'tree' → logprob: -4.504292011260986
    7. 'p' → logprob: -4.504292011260986
    8. '   ' → logprob: -4.879292011260986
    9. 'bits' → logprob: -5.004292011260986
    10. 'dp' → logprob: -5.129292011260986

Token 323: ' -' (ID: 533)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5082967281341553
    2. 'a' → logprob: -1.6332967281341553
    3. ' arr' → logprob: -3.3832967281341553
    4. 's' → logprob: -3.8832967281341553
    5. 'data' → logprob: -4.383296966552734
    6. 'buf' → logprob: -4.508296966552734
    7. 'bit' → logprob: -4.633296966552734
    8. 'bits' → logprob: -4.758296966552734
    9. ' a' → logprob: -4.883296966552734
    10. 'vals' → logprob: -4.883296966552734

Token 324: ' ord' (ID: 6608)
  Prédit: '.astype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.astype' → logprob: -1.0903342962265015
    2. 'astype' → logprob: -1.2153342962265015
    3. ' ast' → logprob: -2.090334415435791
    4. 'np' → logprob: -2.465334415435791
    5. ' np' → logprob: -3.090334415435791
    6. 'buf' → logprob: -3.465334415435791
    7. 'offset' → logprob: -3.965334415435791
    8. '1' → logprob: -4.465334415435791
    9. ')' → logprob: -4.715334415435791
    10. ' buf' → logprob: -5.215334415435791

Token 325: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.6303850412368774
    2. '(buf' → logprob: -1.3803850412368774
    3. '('' → logprob: -1.6303850412368774
    4. '("' → logprob: -4.255384922027588
    5. '(ord' → logprob: -5.380384922027588
    6. '(' → logprob: -7.380384922027588
    7. '(np' → logprob: -8.380385398864746
    8. '(byte' → logprob: -8.755385398864746
    9. '(buff' → logprob: -9.630385398864746
    10. '()' → logprob: -10.130385398864746

Token 326: '"' (ID: 1)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3393312394618988
    2. '("' → logprob: -1.3393312692642212
    3. '(b' → logprob: -4.214331150054932
    4. '(buf' → logprob: -5.214331150054932
    5. ''' → logprob: -5.964331150054932
    6. '(' → logprob: -6.589331150054932
    7. '"' → logprob: -6.714331150054932
    8. ')' → logprob: -9.08933162689209
    9. '0' → logprob: -10.21433162689209
    10. 'b' → logprob: -10.33933162689209

Token 327: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00025800178991630673
    2. '"' → logprob: -9.000258445739746
    3. '")' → logprob: -9.875258445739746
    4. ''' → logprob: -10.000258445739746
    5. '("' → logprob: -11.375258445739746
    6. ' ' → logprob: -11.875258445739746
    7. '48' → logprob: -12.375258445739746
    8. '1' → logprob: -12.625258445739746
    9. '(' → logprob: -13.000258445739746
    10. '('' → logprob: -13.375258445739746

Token 328: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0959998220205307
    2. '))' → logprob: -2.9709997177124023
    3. '")' → logprob: -4.095999717712402
    4. '())' → logprob: -4.845999717712402
    5. '),' → logprob: -5.345999717712402
    6. ')))' → logprob: -6.220999717712402
    7. '):' → logprob: -6.720999717712402
    8. ')")' → logprob: -6.845999717712402
    9. '])' → logprob: -7.220999717712402
    10. ')
' → logprob: -7.470999717712402

Token 329: ' permet' (ID: 11798)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08436670154333115
    2. '()' → logprob: -3.834366798400879
    3. '(buf' → logprob: -3.834366798400879
    4. '))' → logprob: -4.209366798400879
    5. '())' → logprob: -5.834366798400879
    6. ',' → logprob: -5.834366798400879
    7. 'buf' → logprob: -5.959366798400879
    8. ')))' → logprob: -5.959366798400879
    9. ').' → logprob: -5.959366798400879
    10. '),' → logprob: -6.084366798400879

Token 330: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9675817489624023
    2. 'buf' → logprob: -1.3425817489624023
    3. '(buf' → logprob: -2.2175817489624023
    4. '(lambda' → logprob: -2.5925817489624023
    5. '=lambda' → logprob: -3.0925817489624023
    6. '   ' → logprob: -3.5925817489624023
    7. 'lambda' → logprob: -3.7175817489624023
    8. ' buf' → logprob: -3.9675817489624023
    9. ' lambda' → logprob: -4.092581748962402
    10. '(' → logprob: -4.217581748962402

Token 331: ' transformer' (ID: 59595)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.3627304434776306
    2. 'transform' → logprob: -1.4877305030822754
    3. 'np' → logprob: -3.2377305030822754
    4. 'd' → logprob: -4.737730503082275
    5. ' convertir' → logprob: -4.737730503082275
    6. 'offset' → logprob: -5.737730503082275
    7. ' convert' → logprob: -5.987730503082275
    8. 'normal' → logprob: -6.237730503082275
    9. 'astype' → logprob: -6.362730503082275
    10. 'subtract' → logprob: -6.487730503082275

Token 332: ' les' (ID: 1341)
  Prédit: '(buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buf' → logprob: -0.2966575622558594
    2. 'buf' → logprob: -2.7966575622558594
    3. ' chaque' → logprob: -2.9216575622558594
    4. 'np' → logprob: -3.1716575622558594
    5. '(np' → logprob: -3.2966575622558594
    6. 'les' → logprob: -3.5466575622558594
    7. ' each' → logprob: -5.046657562255859
    8. ' les' → logprob: -5.296657562255859
    9. 'each' → logprob: -5.296657562255859
    10. ' np' → logprob: -5.421657562255859

Token 333: ' bytes' (ID: 11643)
  Prédit: 'buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buf' → logprob: -0.25382259488105774
    2. 'np' → logprob: -2.0038225650787354
    3. ' np' → logprob: -3.7538225650787354
    4. ' buf' → logprob: -4.0038228034973145
    5. 'bytes' → logprob: -4.3788228034973145
    6. 'val' → logprob: -4.3788228034973145
    7. ' bytes' → logprob: -5.1288228034973145
    8. 'values' → logprob: -6.1288228034973145
    9. ' valeurs' → logprob: -6.3788228034973145
    10. 'arr' → logprob: -6.7538228034973145

Token 334: ' ASCII' (ID: 87479)
  Prédit: '(buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(buf' → logprob: -0.020853541791439056
    2. ')' → logprob: -5.270853519439697
    3. ',' → logprob: -5.395853519439697
    4. '(np' → logprob: -5.895853519439697
    5. ' -' → logprob: -6.395853519439697
    6. 'buf' → logprob: -7.020853519439697
    7. ' (' → logprob: -7.020853519439697
    8. '-' → logprob: -7.395853519439697
    9. ' into' → logprob: -7.395853519439697
    10. '   ' → logprob: -7.895853519439697

Token 335: ' de' (ID: 334)
  Prédit: '(buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(buf' → logprob: -0.03281983360648155
    2. ')' → logprob: -3.5328197479248047
    3. 'buf' → logprob: -7.532819747924805
    4. '(' → logprob: -7.532819747924805
    5. '   ' → logprob: -7.907819747924805
    6. '(np' → logprob: -8.032819747924805
    7. ',' → logprob: -8.157819747924805
    8. '-' → logprob: -8.782819747924805
    9. ' -' → logprob: -8.907819747924805
    10. '(buffer' → logprob: -9.657819747924805

Token 336: ' chiffres' (ID: 105565)
  Prédit: 'buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buf' → logprob: -0.10545304417610168
    2. 'la' → logprob: -3.3554530143737793
    3. ''' → logprob: -3.8554530143737793
    4. 'ch' → logprob: -4.105453014373779
    5. '0' → logprob: -4.980453014373779
    6. 'cha' → logprob: -5.230453014373779
    7. 'l' → logprob: -6.105453014373779
    8. '"' → logprob: -6.230453014373779
    9. ' buf' → logprob: -6.230453014373779
    10. '(buf' → logprob: -6.855453014373779

Token 337: ' ('' (ID: 9906)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027004871517419815
    2. '(buf' → logprob: -4.277004718780518
    3. '))' → logprob: -5.777004718780518
    4. '   ' → logprob: -5.902004718780518
    5. '),' → logprob: -6.777004718780518
    6. ',' → logprob: -7.152004718780518
    7. '(' → logprob: -7.152004718780518
    8. '[' → logprob: -7.277004718780518
    9. ' )' → logprob: -7.402004718780518
    10. 'buf' → logprob: -7.402004718780518

Token 338: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008490941487252712
    2. 'buf' → logprob: -4.883491039276123
    3. '012' → logprob: -8.508490562438965
    4. 'b' → logprob: -8.758490562438965
    5. '(buf' → logprob: -9.133490562438965
    6. ' buf' → logprob: -9.633490562438965
    7. '48' → logprob: -9.633490562438965
    8. '"' → logprob: -9.758490562438965
    9. ')' → logprob: -10.133490562438965
    10. '")' → logprob: -10.383490562438965

Token 339: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3121539354324341
    2. ')' → logprob: -1.687153935432434
    3. ',' → logprob: -3.0621538162231445
    4. '',' → logprob: -4.1871538162231445
    5. ''' → logprob: -4.8121538162231445
    6. '0' → logprob: -5.0621538162231445
    7. ' et' → logprob: -6.6871538162231445
    8. ''),' → logprob: -6.9371538162231445
    9. '),' → logprob: -7.0621538162231445
    10. 'et' → logprob: -7.3121538162231445

Token 340: ' devient' (ID: 63488)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012541198171675205
    2. '-)' → logprob: -5.8875412940979
    3. '-' → logprob: -6.0125412940979
    4. ')-' → logprob: -6.1375412940979
    5. ' )' → logprob: -6.3875412940979
    6. '   ' → logprob: -6.8875412940979
    7. ' -' → logprob: -7.5125412940979
    8. '))' → logprob: -7.6375412940979
    9. ',' → logprob: -8.387540817260742
    10. '')' → logprob: -8.387540817260742

Token 341: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025541423819959164
    2. ' ' → logprob: -6.002553939819336
    3. '48' → logprob: -9.627553939819336
    4. ')' → logprob: -13.002553939819336
    5. '  ' → logprob: -13.002553939819336
    6. '   ' → logprob: -13.502553939819336
    7. ' ' → logprob: -14.065053939819336
    8. ',' → logprob: -14.127553939819336
    9. '```' → logprob: -14.815053939819336
    10. '  
' → logprob: -15.002553939819336

Token 342: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14418211579322815
    2. '48' → logprob: -2.0191822052001953
    3. ' ' → logprob: -6.519182205200195
    4. '  ' → logprob: -12.394182205200195
    5. '
' → logprob: -12.706682205200195
    6. '`' → logprob: -12.831682205200195
    7. '4' → logprob: -12.894182205200195
    8. '   ' → logprob: -13.081682205200195
    9. ')' → logprob: -13.269182205200195
    10. 'ord' → logprob: -13.706682205200195

Token 343: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008264442905783653
    2. '))' → logprob: -5.133264541625977
    3. ',' → logprob: -7.633264541625977
    4. '),' → logprob: -7.633264541625977
    5. ' )' → logprob: -7.883264541625977
    6. '   ' → logprob: -8.383264541625977
    7. ')))' → logprob: -8.758264541625977
    8. '`)' → logprob: -9.383264541625977
    9. ')
' → logprob: -9.508264541625977
    10. '')' → logprob: -10.008264541625977

Token 344: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0818687677383423
    2. ' b' → logprob: -1.5818687677383423
    3. 'buf' → logprob: -1.7068687677383423
    4. 'ord' → logprob: -2.3318686485290527
    5. ' ord' → logprob: -2.4568686485290527
    6. ' buf' → logprob: -3.4568686485290527
    7. '   ' → logprob: -4.206868648529053
    8. ')' → logprob: -4.581868648529053
    9. '0' → logprob: -4.581868648529053
    10. ''' → logprob: -5.581868648529053

Token 345: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.26562753319740295
    2. '1' → logprob: -1.6406275033950806
    3. 'buf' → logprob: -4.015627384185791
    4. 'b' → logprob: -4.390627384185791
    5. '"' → logprob: -6.015627384185791
    6. '0' → logprob: -6.390627384185791
    7. 'ord' → logprob: -7.515627384185791
    8. '49' → logprob: -7.515627384185791
    9. ' '' → logprob: -7.640627384185791
    10. '`' → logprob: -7.890627384185791

Token 346: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11341901868581772
    2. '')' → logprob: -3.3634190559387207
    3. '-' → logprob: -3.7384190559387207
    4. ' -' → logprob: -4.363419055938721
    5. ',' → logprob: -4.863419055938721
    6. '))' → logprob: -5.113419055938721
    7. '")' → logprob: -5.238419055938721
    8. '<|end|>' → logprob: -5.363419055938721
    9. '-)' → logprob: -5.613419055938721
    10. ')-' → logprob: -6.488419055938721

Token 347: ' devient' (ID: 63488)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04193505644798279
    2. ',' → logprob: -4.041934967041016
    3. '))' → logprob: -4.541934967041016
    4. '-' → logprob: -5.791934967041016
    5. '-)' → logprob: -6.166934967041016
    6. ' )' → logprob: -6.541934967041016
    7. ' -' → logprob: -6.916934967041016
    8. '),' → logprob: -6.916934967041016
    9. '   ' → logprob: -7.041934967041016
    10. ')-' → logprob: -7.166934967041016

Token 348: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007730488199740648
    2. ' ' → logprob: -5.132730484008789
    3. 'buf' → logprob: -7.507730484008789
    4. 'b' → logprob: -8.507730484008789
    5. '0' → logprob: -8.632730484008789
    6. ')' → logprob: -8.632730484008789
    7. ' b' → logprob: -9.257730484008789
    8. ' ' → logprob: -9.632730484008789
    9. ''' → logprob: -9.757730484008789
    10. '   ' → logprob: -9.757730484008789

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018495087279006839
    2. ' ' → logprob: -6.75184965133667
    3. '49' → logprob: -7.62684965133667
    4. '0' → logprob: -9.876849174499512
    5. 'b' → logprob: -10.001849174499512
    6. 'ord' → logprob: -11.251849174499512
    7. '   ' → logprob: -11.501849174499512
    8. '(ord' → logprob: -11.626849174499512
    9. '-' → logprob: -11.751849174499512
    10. '48' → logprob: -12.126849174499512

Token 350: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01147665735334158
    2. '   ' → logprob: -5.136476516723633
    3. '))' → logprob: -5.886476516723633
    4. ')
' → logprob: -6.386476516723633
    5. '),' → logprob: -8.886476516723633
    6. '(buf' → logprob: -8.886476516723633
    7. ')))' → logprob: -9.011476516723633
    8. ' )' → logprob: -9.011476516723633
    9. 'buf' → logprob: -9.136476516723633
    10. ',' → logprob: -9.886476516723633

Token 351: ' etc' (ID: 5178)
  Prédit: 'buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buf' → logprob: -0.5886551737785339
    2. ')' → logprob: -1.8386552333831787
    3. ' buf' → logprob: -2.0886552333831787
    4. '...)' → logprob: -3.7136552333831787
    5. ' etc' → logprob: -4.2136549949646
    6. '   ' → logprob: -4.3386549949646
    7. 'b' → logprob: -4.4636549949646
    8. '...' → logprob: -4.7136549949646
    9. ' ord' → logprob: -4.7136549949646
    10. '0' → logprob: -4.8386549949646

Token 352: '.)
' (ID: 32616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03859390690922737
    2. '   ' → logprob: -4.163593769073486
    3. ')
' → logprob: -4.413593769073486
    4. '))' → logprob: -4.788593769073486
    5. '))
' → logprob: -7.413593769073486
    6. '")' → logprob: -8.038594245910645
    7. ')))' → logprob: -8.788594245910645
    8. 'buf' → logprob: -9.038594245910645
    9. '(buf' → logprob: -9.288594245910645
    10. ')")' → logprob: -9.538594245910645

Token 353: '   ' (ID: 271)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.9230062365531921
    2. '   ' → logprob: -1.173006296157837
    3. ')' → logprob: -2.298006296157837
    4. ',' → logprob: -3.548006296157837
    5. 'buf' → logprob: -3.548006296157837
    6. 'data' → logprob: -3.923006296157837
    7. ' arr' → logprob: -4.048006057739258
    8. '=' → logprob: -4.673006057739258
    9. ' =' → logprob: -4.798006057739258
    10. ' data' → logprob: -4.923006057739258

Token 354: ' table' (ID: 3293)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.7838569283485413
    2. 'a' → logprob: -2.0338568687438965
    3. ' arr' → logprob: -2.1588568687438965
    4. '   ' → logprob: -2.1588568687438965
    5. ' data' → logprob: -3.5338568687438965
    6. ' a' → logprob: -3.9088568687438965
    7. 'data' → logprob: -4.1588568687438965
    8. 's' → logprob: -5.0338568687438965
    9. 'val' → logprob: -5.1588568687438965
    10. ')' → logprob: -5.4088568687438965

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05495224520564079
    2. '=' → logprob: -2.9299521446228027
    3. '=np' → logprob: -10.179952621459961
    4. '   ' → logprob: -10.929952621459961
    5. ' ' → logprob: -11.429952621459961
    6. '  ' → logprob: -14.679952621459961
    7. 'np' → logprob: -14.804952621459961
    8. 's' → logprob: -14.804952621459961
    9. '32' → logprob: -15.304952621459961
    10. '	' → logprob: -15.429952621459961

Token 356: ' (' (ID: 350)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0113947419449687
    2. ' np' → logprob: -4.51139497756958
    3. '(np' → logprob: -8.011394500732422
    4. 'numpy' → logprob: -12.511394500732422
    5. '   ' → logprob: -12.761394500732422
    6. ' (' → logprob: -12.886394500732422
    7. ' ' → logprob: -13.511394500732422
    8. '=np' → logprob: -14.011394500732422
    9. '(' → logprob: -14.261394500732422
    10. '_np' → logprob: -14.511394500732422

Token 357: 'np' (ID: 12766)
  Prédit: 'np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -9.253090865968261e-06
    2. ' np' → logprob: -11.625009536743164
    3. '(np' → logprob: -16.125009536743164
    4. 'numpy' → logprob: -16.875009536743164
    5. '
' → logprob: -17.875009536743164
    6. '_np' → logprob: -18.375009536743164
    7. '   ' → logprob: -19.000009536743164
    8. '[np' → logprob: -19.000009536743164
    9. '=np' → logprob: -19.375009536743164
    10. 'ord' → logprob: -20.125009536743164

Token 358: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.00010402000043541193
    2. 'from' → logprob: -10.000103950500488
    3. '.' → logprob: -10.125103950500488
    4. ' .' → logprob: -11.125103950500488
    5. '.asarray' → logprob: -13.000103950500488
    6. '.From' → logprob: -15.125103950500488
    7. '.array' → logprob: -15.250103950500488
    8. ' from' → logprob: -15.750103950500488
    9. ').' → logprob: -16.125104904174805
    10. '.arange' → logprob: -16.500104904174805

Token 359: 'buffer' (ID: 15967)
  Prédit: 'buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buffer' → logprob: -3.531315314830863e-06
    2. '_buffer' → logprob: -12.625003814697266
    3. ' buffer' → logprob: -16.125003814697266
    4. '(buffer' → logprob: -17.500003814697266
    5. 'buf' → logprob: -17.750003814697266
    6. 'string' → logprob: -18.375003814697266
    7. 'buff' → logprob: -19.125003814697266
    8. 'array' → logprob: -20.000003814697266
    9. 'import' → logprob: -20.375003814697266
    10. 'from' → logprob: -20.500003814697266

Token 360: '(buf' (ID: 24783)
  Prédit: '(buf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(buf' → logprob: -6.749814019713085e-06
    2. 'buf' → logprob: -12.125006675720215
    3. '(buffer' → logprob: -14.250006675720215
    4. '(' → logprob: -15.875006675720215
    5. '(buff' → logprob: -15.875006675720215
    6. '	buf' → logprob: -16.25000762939453
    7. ' buf' → logprob: -16.50000762939453
    8. ')' → logprob: -16.50000762939453
    9. '   ' → logprob: -17.00000762939453
    10. '(
' → logprob: -18.37500762939453

Token 361: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038134094211272895
    2. ' ,' → logprob: -8.625381469726562
    3. ',d' → logprob: -8.875381469726562
    4. ',int' → logprob: -10.500381469726562
    5. ')' → logprob: -11.500381469726562
    6. ',np' → logprob: -11.625381469726562
    7. ' -' → logprob: -12.500381469726562
    8. '   ' → logprob: -12.750381469726562
    9. ',b' → logprob: -12.750381469726562
    10. ',n' → logprob: -14.000381469726562

Token 362: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.10057983547449112
    2. 'np' → logprob: -2.3505797386169434
    3. ' dtype' → logprob: -7.975579738616943
    4. ' np' → logprob: -10.850580215454102
    5. '   ' → logprob: -11.850580215454102
    6. ' ' → logprob: -14.350580215454102
    7. '  ' → logprob: -14.850580215454102
    8. '     ' → logprob: -15.100580215454102
    9. '    ' → logprob: -15.100580215454102
    10. 'count' → logprob: -15.225580215454102

Token 363: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.001053530490025878
    2. 'np' → logprob: -6.876053333282471
    3. '=' → logprob: -12.001053810119629
    4. '(np' → logprob: -12.001053810119629
    5. '='' → logprob: -12.626053810119629
    6. ' np' → logprob: -13.001053810119629
    7. '   ' → logprob: -13.376053810119629
    8. '="' → logprob: -15.001053810119629
    9. ' ' → logprob: -15.126053810119629
    10. '[np' → logprob: -15.376053810119629

Token 364: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.47424113750457764
    2. '.uint' → logprob: -0.9742411375045776
    3. 'int' → logprob: -8.974241256713867
    4. 'uint' → logprob: -10.724241256713867
    5. '.byte' → logprob: -11.099241256713867
    6. '.' → logprob: -16.474241256713867
    7. '.dtype' → logprob: -16.724241256713867
    8. '.bool' → logprob: -16.849241256713867
    9. 'uby' → logprob: -16.974241256713867
    10. '_uint' → logprob: -18.974241256713867

Token 365: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.004078758880496025
    2. '32' → logprob: -5.5040788650512695
    3. 'c' → logprob: -15.37907886505127
    4. 'int' → logprob: -16.379077911376953
    5. '
' → logprob: -18.379077911376953
    6. 'eight' → logprob: -18.379077911376953
    7. 'p' → logprob: -18.504077911376953
    8. 's' → logprob: -19.379077911376953
    9. ')' → logprob: -19.379077911376953
    10. '08' → logprob: -20.004077911376953

Token 366: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.721228368813172e-05
    2. ')-' → logprob: -9.625086784362793
    3. ' )' → logprob: -11.500086784362793
    4. ',' → logprob: -12.625086784362793
    5. '-' → logprob: -12.750086784362793
    6. ' -' → logprob: -13.750086784362793
    7. '   ' → logprob: -13.750086784362793
    8. '-)' → logprob: -13.875086784362793
    9. ' ' → logprob: -14.375086784362793
    10. ')
' → logprob: -15.500086784362793

Token 367: 'astype' (ID: 50226)
  Prédit: 'astype'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'astype' → logprob: -0.0004365102213341743
    2. ' ast' → logprob: -8.250436782836914
    3. '-' → logprob: -9.125436782836914
    4. 'copy' → logprob: -10.250436782836914
    5. 'view' → logprob: -11.375436782836914
    6. 'ast' → logprob: -11.625436782836914
    7. '.astype' → logprob: -12.125436782836914
    8. 'reshape' → logprob: -12.875436782836914
    9. 'tolist' → logprob: -13.625436782836914
    10. ' -' → logprob: -14.500436782836914

Token 368: '(np' (ID: 21997)
  Prédit: '(np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.0005824613617733121
    2. 'np' → logprob: -7.500582695007324
    3. '(int' → logprob: -11.250582695007324
    4. '(' → logprob: -11.375582695007324
    5. '(
' → logprob: -13.375582695007324
    6. '=np' → logprob: -13.750582695007324
    7. '[np' → logprob: -14.000582695007324
    8. '   ' → logprob: -14.625582695007324
    9. ' np' → logprob: -15.125582695007324
    10. ',np' → logprob: -15.250582695007324

Token 369: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.011049231514334679
    2. 'int' → logprob: -4.511049270629883
    3. '=int' → logprob: -14.636049270629883
    4. '.uint' → logprob: -15.011049270629883
    5. ' int' → logprob: -15.636049270629883
    6. '[int' → logprob: -15.761049270629883
    7. ',int' → logprob: -16.261049270629883
    8. ':int' → logprob: -16.386049270629883
    9. '<int' → logprob: -16.886049270629883
    10. '   ' → logprob: -17.011049270629883

Token 370: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -1.2664456789934775e-06
    2. '64' → logprob: -13.750000953674316
    3. '16' → logprob: -16.375001907348633
    4. 'c' → logprob: -16.875001907348633
    5. '8' → logprob: -18.750001907348633
    6. ' ' → logprob: -20.125001907348633
    7. 'p' → logprob: -20.375001907348633
    8. 'int' → logprob: -21.375001907348633
    9. '   ' → logprob: -21.625001907348633
    10. '4' → logprob: -22.000001907348633

Token 371: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000516217143740505
    2. ')-' → logprob: -7.625516414642334
    3. ' )' → logprob: -11.125515937805176
    4. ')
' → logprob: -12.250515937805176
    5. '-)' → logprob: -13.125515937805176
    6. '   ' → logprob: -13.250515937805176
    7. '-' → logprob: -13.250515937805176
    8. '))' → logprob: -13.875515937805176
    9. ' ' → logprob: -14.250515937805176
    10. '())' → logprob: -15.125515937805176

Token 372: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17986084520816803
    2. '-' → logprob: -1.8048608303070068
    3. '-
' → logprob: -10.429861068725586
    4. ')' → logprob: -10.429861068725586
    5. '   ' → logprob: -10.679861068725586
    6. ' -
' → logprob: -10.679861068725586
    7. ' ' → logprob: -11.804861068725586
    8. ' ' → logprob: -13.929861068725586
    9. '-)' → logprob: -14.054861068725586
    10. '  ' → logprob: -14.554861068725586

Token 373: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.024169491603970528
    2. ' ord' → logprob: -3.774169445037842
    3. '48' → logprob: -7.024169445037842
    4. '(ord' → logprob: -11.149169921875
    5. ' ' → logprob: -11.774169921875
    6. '   ' → logprob: -12.274169921875
    7. 'np' → logprob: -13.649169921875
    8. 'int' → logprob: -13.649169921875
    9. '  ' → logprob: -13.774169921875
    10. 'ordinal' → logprob: -14.899169921875

Token 374: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.014275508932769299
    2. '(' → logprob: -4.889275550842285
    3. '('' → logprob: -5.139275550842285
    4. '("' → logprob: -7.264275550842285
    5. '(
' → logprob: -10.014275550842285
    6. 'b' → logprob: -10.389275550842285
    7. ' (' → logprob: -12.639275550842285
    8. ')' → logprob: -13.639275550842285
    9. '("("' → logprob: -14.139275550842285
    10. '(ord' → logprob: -14.139275550842285

Token 375: '"' (ID: 1)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.17121867835521698
    2. '('' → logprob: -2.0462186336517334
    3. '"' → logprob: -4.1712188720703125
    4. '(' → logprob: -4.6712188720703125
    5. ''' → logprob: -5.9212188720703125
    6. 'b' → logprob: -8.171218872070312
    7. '0' → logprob: -8.671218872070312
    8. '(b' → logprob: -9.296218872070312
    9. '(
' → logprob: -10.046218872070312
    10. ')' → logprob: -10.046218872070312

Token 376: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5550159215927124
    2. '"' → logprob: -1.0550159215927124
    3. ''' → logprob: -2.555016040802002
    4. '("' → logprob: -11.055015563964844
    5. '")' → logprob: -11.555015563964844
    6. 'b' → logprob: -11.680015563964844
    7. '('' → logprob: -11.805015563964844
    8. ' ' → logprob: -12.305015563964844
    9. ')' → logprob: -13.055015563964844
    10. '`' → logprob: -13.492515563964844

Token 377: '"))
' (ID: 10990)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7618368268013
    2. ')' → logprob: -0.8868368268013
    3. '"))' → logprob: -2.1368367671966553
    4. '")' → logprob: -6.136837005615234
    5. '[' → logprob: -7.761837005615234
    6. ''))' → logprob: -8.261837005615234
    7. ')
' → logprob: -9.511837005615234
    8. ')")' → logprob: -9.511837005615234
    9. '"' → logprob: -10.136837005615234
    10. ' ))' → logprob: -10.511837005615234

Token 378: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3428041934967041
    2. '    
' → logprob: -2.342804193496704
    3. 'prefix' → logprob: -2.842804193496704
    4. '
' → logprob: -3.092804193496704
    5. ')' → logprob: -3.092804193496704
    6. '#' → logprob: -4.342803955078125
    7. 'cum' → logprob: -5.342803955078125
    8. ' prefix' → logprob: -5.592803955078125
    9. 'def' → logprob: -5.717803955078125
    10. 'diff' → logprob: -5.967803955078125

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1492529660463333
    2. 'dp' → logprob: -3.5242528915405273
    3. ' length' → logprob: -3.6492528915405273
    4. 'length' → logprob: -3.7742528915405273
    5. 'prefix' → logprob: -4.274252891540527
    6. ' prefix' → logprob: -5.399252891540527
    7. '#' → logprob: -5.524252891540527
    8. 'offset' → logprob: -5.649252891540527
    9. ' dp' → logprob: -5.774252891540527
    10. 'n' → logprob: -5.899252891540527

Token 380: ' #' (ID: 1069)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.4042621850967407
    2. '   ' → logprob: -2.029262065887451
    3. 'length' → logprob: -2.154262065887451
    4. ' length' → logprob: -2.529262065887451
    5. 'tree' → logprob: -3.029262065887451
    6. 'dp' → logprob: -3.154262065887451
    7. 'prefix' → logprob: -3.154262065887451
    8. '#' (adapté à ' #') → logprob: -3.404262065887451
    9. ' offset' → logprob: -3.529262065887451
    10. 'n' → logprob: -4.029262065887451

Token 381: ' Cr' (ID: 5790)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.955369770526886
    2. 'offset' → logprob: -1.2053697109222412
    3. 'prefix' → logprob: -1.9553697109222412
    4. 'c' → logprob: -3.580369710922241
    5. 'length' → logprob: -4.20536994934082
    6. 'cum' → logprob: -4.33036994934082
    7. 'tree' → logprob: -4.45536994934082
    8. 'size' → logprob: -4.58036994934082
    9. 'max' → logprob: -4.95536994934082
    10. '#' → logprob: -4.95536994934082

Token 382: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.32200321555137634
    2. 'ée' → logprob: -1.4470032453536987
    3. 'é' → logprob: -4.447003364562988
    4. 'ee' → logprob: -4.572003364562988
    5. 'eer' → logprob: -5.072003364562988
    6. 'éer' → logprob: -5.322003364562988
    7. 'eep' → logprob: -6.572003364562988
    8. 'reate' → logprob: -6.822003364562988
    9. 'ea' → logprob: -7.072003364562988
    10. 'ate' → logprob: -7.197003364562988

Token 383: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.46800366044044495
    2. ' une' → logprob: -1.8430036306381226
    3. ' tree' → logprob: -2.343003749847412
    4. 'tree' → logprob: -2.968003749847412
    5. 'un' → logprob: -3.843003749847412
    6. ' l' → logprob: -4.343003749847412
    7. 'une' → logprob: -5.468003749847412
    8. 'offset' → logprob: -5.718003749847412
    9. ' la' → logprob: -5.718003749847412
    10. 'a' → logprob: -6.093003749847412

Token 384: ' tableau' (ID: 67053)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -1.7576178312301636
    2. 'array' → logprob: -1.8826178312301636
    3. 'table' → logprob: -1.8826178312301636
    4. 'arr' → logprob: -2.507617950439453
    5. 'np' → logprob: -2.882617950439453
    6. 'segment' → logprob: -2.882617950439453
    7. 'numpy' → logprob: -2.882617950439453
    8. ' tableau' → logprob: -2.882617950439453
    9. 'offset' → logprob: -3.257617950439453
    10. ' numpy' → logprob: -3.507617950439453

Token 385: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6205606460571289
    2. ' de' → logprob: -2.370560646057129
    3. 'de' → logprob: -2.870560646057129
    4. 'dp' → logprob: -2.995560646057129
    5. 'prefix' → logprob: -3.245560646057129
    6. '   ' → logprob: -3.370560646057129
    7. 's' → logprob: -3.620560646057129
    8. '=' → logprob: -3.745560646057129
    9. ' prefix' → logprob: -4.120560646057129
    10. 'tree' → logprob: -4.495560646057129

Token 386: ''ent' (ID: 53422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.0017919540405273
    2. 'int' → logprob: -1.8767919540405273
    3. ' zeros' → logprob: -2.0017919540405273
    4. 'e' → logprob: -2.1267919540405273
    5. '=np' → logprob: -3.5017919540405273
    6. ' np' → logprob: -3.5017919540405273
    7. 'zeros' → logprob: -4.001791954040527
    8. 'np' → logprob: -4.751791954040527
    9. 'size' → logprob: -4.876791954040527
    10. '=int' → logprob: -5.001791954040527

Token 387: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006026676390320063
    2. 'iers' → logprob: -5.506026744842529
    3. 'tes' → logprob: -6.881026744842529
    4. 'dtype' → logprob: -8.131026268005371
    5. 'tries' → logprob: -9.006026268005371
    6. 'ières' → logprob: -9.756026268005371
    7. 'td' → logprob: -9.881026268005371
    8. 'ts' → logprob: -10.006026268005371
    9. 'ty' → logprob: -10.131026268005371
    10. 'tre' → logprob: -10.506026268005371

Token 388: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7445446252822876
    2. 'tree' → logprob: -2.119544506072998
    3. ' dp' → logprob: -2.494544506072998
    4. ' tree' → logprob: -3.119544506072998
    5. ' de' → logprob: -3.369544506072998
    6. 'de' → logprob: -3.619544506072998
    7. 'offset' → logprob: -3.869544506072998
    8. 'd' → logprob: -4.369544506072998
    9. 'segment' → logprob: -4.369544506072998
    10. 'size' → logprob: -4.619544506072998

Token 389: ' longueur' (ID: 104613)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.3037900924682617
    2. 'zeros' → logprob: -2.4287900924682617
    3. 'size' → logprob: -3.0537900924682617
    4. 'np' → logprob: -3.1787900924682617
    5. 'z' → logprob: -3.9287900924682617
    6. 'int' → logprob: -3.9287900924682617
    7. ' taille' → logprob: -4.053790092468262
    8. 'length' → logprob: -5.053790092468262
    9. 'long' → logprob: -5.428790092468262
    10. ' zeros' → logprob: -5.553790092468262

Token 390: ' ég' (ID: 33150)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5806887149810791
    2. 'n' → logprob: -1.705688714981079
    3. '=' → logprob: -2.455688714981079
    4. '(n' → logprob: -3.205688714981079
    5. ' =' → logprob: -3.330688714981079
    6. '2' → logprob: -3.830688714981079
    7. 'offset' → logprob: -3.955688714981079
    8. ' (' → logprob: -4.0806884765625
    9. ' n' → logprob: -4.3306884765625
    10. '(length' → logprob: -5.0806884765625

Token 391: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.08609598875045776
    2. 'al' → logprob: -2.8360960483551025
    3. 'th' → logprob: -4.211095809936523
    4. 'alité' → logprob: -5.211095809936523
    5. 'r' → logprob: -6.211095809936523
    6. 'ht' → logprob: -7.836095809936523
    7. 'er' → logprob: -8.586095809936523
    8. 'le' → logprob: -8.711095809936523
    9. '(' → logprob: -9.086095809936523
    10. 'n' → logprob: -9.461095809936523

Token 392: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.1194508075714111
    2. '(' → logprob: -1.2444508075714111
    3. '   ' → logprob: -1.6194508075714111
    4. 'n' → logprob: -2.369450807571411
    5. '(n' → logprob: -3.244450807571411
    6. 'à' → logprob: -3.619450807571411
    7. ' to' → logprob: -5.244450569152832
    8. ' n' → logprob: -5.244450569152832
    9. ' (' → logprob: -5.494450569152832
    10. ' ' → logprob: -5.994450569152832

Token 393: ' la' (ID: 557)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.0633898973464966
    2. ' offset' → logprob: -1.1883898973464966
    3. '2' → logprob: -2.063389778137207
    4. '(' → logprob: -2.313389778137207
    5. ' (' → logprob: -3.313389778137207
    6. ' ' → logprob: -3.688389778137207
    7. '(offset' → logprob: -3.688389778137207
    8. ' n' → logprob: -4.188389778137207
    9. 'n' → logprob: -4.563389778137207
    10. 'len' → logprob: -5.563389778137207

Token 394: ' moitié' (ID: 93216)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5719459652900696
    2. 'n' → logprob: -1.4469459056854248
    3. '2' → logprob: -1.8219459056854248
    4. '(' → logprob: -4.571946144104004
    5. 'offset' → logprob: -4.821946144104004
    6. '1' → logprob: -5.321946144104004
    7. 'buf' → logprob: -5.321946144104004
    8. ' n' → logprob: -5.446946144104004
    9. ' len' → logprob: -5.821946144104004
    10. '(len' → logprob: -7.196946144104004

Token 395: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09748716652393341
    2. '(' → logprob: -2.972487211227417
    3. 'n' → logprob: -4.472486972808838
    4. ' (' → logprob: -5.222486972808838
    5. 'offset' → logprob: -5.472486972808838
    6. ' de' → logprob: -5.972486972808838
    7. 'length' → logprob: -5.972486972808838
    8. '[' → logprob: -6.347486972808838
    9. 'de' → logprob: -6.597486972808838
    10. '(length' → logprob: -6.722486972808838

Token 396: ' table' (ID: 3293)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5701162219047546
    2. 'n' → logprob: -1.4451162815093994
    3. '(' → logprob: -2.6951162815093994
    4. 'table' → logprob: -3.0701162815093994
    5. '2' → logprob: -3.4451162815093994
    6. ' n' → logprob: -4.44511604309082
    7. ' len' → logprob: -4.57011604309082
    8. '(len' → logprob: -4.82011604309082
    9. ' (' → logprob: -5.19511604309082
    10. '(n' → logprob: -5.44511604309082

Token 397: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0929906368255615
    2. '   ' → logprob: -1.8429906368255615
    3. ',' → logprob: -1.9679906368255615
    4. ' dp' → logprob: -2.2179906368255615
    5. 'prefix' → logprob: -2.2179906368255615
    6. ' prefix' → logprob: -2.9679906368255615
    7. 's' → logprob: -4.092990875244141
    8. 'cum' → logprob: -4.217990875244141
    9. 'size' → logprob: -4.717990875244141
    10. ' =' → logprob: -4.842990875244141

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.588866114616394
    2. 'dp' → logprob: -1.838866114616394
    3. ' dp' → logprob: -2.0888662338256836
    4. ',' → logprob: -3.5888662338256836
    5. 'prefix' → logprob: -3.5888662338256836
    6. ' prefix' → logprob: -3.7138662338256836
    7. ' =' → logprob: -3.9638662338256836
    8. ' result' → logprob: -4.838866233825684
    9. 'tree' → logprob: -5.338866233825684
    10. 'cum' → logprob: -5.463866233825684

Token 399: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.35787609219551086
    2. 'prefix' → logprob: -3.2328760623931885
    3. ' dp' → logprob: -3.7328760623931885
    4. 'sum' → logprob: -3.8578760623931885
    5. 's' → logprob: -4.232876300811768
    6. 'res' → logprob: -4.232876300811768
    7. 'tree' → logprob: -4.482876300811768
    8. 'arr' → logprob: -4.732876300811768
    9. 'acc' → logprob: -4.982876300811768
    10. 'cum' → logprob: -4.982876300811768

Token 400: ' np' (ID: 5374)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4623698592185974
    2. 'prefix' → logprob: -2.962369918823242
    3. ' dp' → logprob: -3.837369918823242
    4. 'arr' → logprob: -3.837369918823242
    5. 'acc' → logprob: -3.962369918823242
    6. 'res' → logprob: -3.962369918823242
    7. 's' → logprob: -4.087369918823242
    8. 'sum' → logprob: -4.087369918823242
    9. 'pref' → logprob: -4.462369918823242
    10. 'p' → logprob: -4.712369918823242

Token 401: '.ones' (ID: 73952)
  Prédit: '.zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.1227787435054779
    2. '.empty' → logprob: -2.9977786540985107
    3. '.arange' → logprob: -3.6227786540985107
    4. 'empty' → logprob: -4.49777889251709
    5. 'c' → logprob: -4.99777889251709
    6. '.full' → logprob: -5.24777889251709
    7. 'full' → logprob: -5.74777889251709
    8. ' full' → logprob: -5.87277889251709
    9. 'zeros' → logprob: -5.99777889251709
    10. 'array' → logprob: -6.62277889251709

Token 402: ' initialise' (ID: 145250)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6450208425521851
    2. '((' → logprob: -1.395020842552185
    3. '(length' → logprob: -2.5200209617614746
    4. '(len' → logprob: -2.8950209617614746
    5. '(' → logprob: -3.1450209617614746
    6. '(k' → logprob: -3.2700209617614746
    7. '(table' → logprob: -5.145020961761475
    8. '(shape' → logprob: -6.395020961761475
    9. '(offset' → logprob: -6.770020961761475
    10. '(int' → logprob: -7.020020961761475

Token 403: ' le' (ID: 505)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1545674055814743
    2. '(k' → logprob: -2.5295674800872803
    3. '((' → logprob: -3.1545674800872803
    4. '(' → logprob: -4.779567241668701
    5. '(length' → logprob: -5.029567241668701
    6. '(offset' → logprob: -5.529567241668701
    7. 'n' → logprob: -7.404567241668701
    8. '(len' → logprob: -7.529567241668701
    9. '(int' → logprob: -8.65456771850586
    10. ' (' → logprob: -9.02956771850586

Token 404: ' tableau' (ID: 67053)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.483994960784912
    2. '(n' → logprob: -1.858994960784912
    3. 'k' → logprob: -1.983994960784912
    4. '(offset' → logprob: -1.983994960784912
    5. '(length' → logprob: -2.483994960784912
    6. '(k' → logprob: -2.608994960784912
    7. 'length' → logprob: -2.608994960784912
    8. '(' → logprob: -3.358994960784912
    9. 'n' → logprob: -3.358994960784912
    10. ' (' → logprob: -4.608994960784912

Token 405: ' avec' (ID: 3937)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -1.0956965684890747
    2. '(n' → logprob: -1.2206965684890747
    3. '(length' → logprob: -2.470696449279785
    4. '(k' → logprob: -2.595696449279785
    5. '(offset' → logprob: -3.095696449279785
    6. '(' → logprob: -3.095696449279785
    7. '(table' → logprob: -3.470696449279785
    8. '(len' → logprob: -3.470696449279785
    9. '(np' → logprob: -4.095696449279785
    10. ' =' → logprob: -4.970696449279785

Token 406: ' des' (ID: 731)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.684234619140625
    2. ' (' → logprob: -1.934234619140625
    3. 'k' → logprob: -2.434234619140625
    4. 'n' → logprob: -2.559234619140625
    5. 'np' → logprob: -2.934234619140625
    6. '(k' → logprob: -3.184234619140625
    7. '(np' → logprob: -3.809234619140625
    8. '((' → logprob: -4.309234619140625
    9. '(' → logprob: -4.559234619140625
    10. 'offset' → logprob: -4.809234619140625

Token 407: ' uns' (ID: 3975)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8321476578712463
    2. '1' → logprob: -1.5821475982666016
    3. '(k' → logprob: -2.3321475982666016
    4. '(' → logprob: -2.4571475982666016
    5. '(n' → logprob: -3.3321475982666016
    6. '2' → logprob: -3.3321475982666016
    7. 'np' → logprob: -3.5821475982666016
    8. 'n' → logprob: -3.7071475982666016
    9. 'int' → logprob: -4.332147598266602
    10. '(np' → logprob: -5.207147598266602

Token 408: ',' (ID: 11)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -1.1603327989578247
    2. '((' → logprob: -1.9103327989578247
    3. '(' → logprob: -2.035332679748535
    4. '(n' → logprob: -2.160332679748535
    5. ',' → logprob: -2.410332679748535
    6. '   ' → logprob: -3.035332679748535
    7. '(size' → logprob: -3.160332679748535
    8. '(offset' → logprob: -3.660332679748535
    9. '(np' → logprob: -3.910332679748535
    10. '(len' → logprob: -4.285332679748535

Token 409: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.7313913106918335
    2. '   ' → logprob: -1.2313913106918335
    3. ' dtype' → logprob: -1.9813913106918335
    4. 'shape' → logprob: -3.981391429901123
    5. 'n' → logprob: -4.106391429901123
    6. ' shape' → logprob: -4.356391429901123
    7. 'np' → logprob: -4.481391429901123
    8. ' n' → logprob: -4.856391429901123
    9. ' np' → logprob: -4.981391429901123
    10. 'length' → logprob: -5.856391429901123

Token 410: '=int' (ID: 37431)
  Prédit: '=np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.00011868205183418468
    2. '=' → logprob: -9.250118255615234
    3. '=int' → logprob: -10.875118255615234
    4. '=n' → logprob: -12.625118255615234
    5. ' =' → logprob: -15.750118255615234
    6. '=
' → logprob: -16.375118255615234
    7. '(np' → logprob: -16.500118255615234
    8. '=torch' → logprob: -16.500118255615234
    9. 'np' → logprob: -18.125118255615234
    10. '=pd' → logprob: -18.750118255615234

Token 411: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.3050249218940735
    2. ',' → logprob: -1.4300248622894287
    3. '   ' → logprob: -5.055025100708008
    4. '(np' → logprob: -5.555025100708008
    5. '64' → logprob: -5.680025100708008
    6. ' ,' → logprob: -5.930025100708008
    7. '=np' → logprob: -6.180025100708008
    8. ' =' → logprob: -6.805025100708008
    9. ' (' → logprob: -7.180025100708008
    10. ')' → logprob: -7.305025100708008

Token 412: ' précise' (ID: 95250)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6590402126312256
    2. '   ' → logprob: -1.0340402126312256
    3. '(' → logprob: -3.6590402126312256
    4. 'result' → logprob: -4.159040451049805
    5. ' =' → logprob: -4.659040451049805
    6. '(length' → logprob: -4.659040451049805
    7. ')' → logprob: -5.034040451049805
    8. 'length' → logprob: -5.159040451049805
    9. '(n' → logprob: -5.159040451049805
    10. 's' → logprob: -5.159040451049805

Token 413: ' le' (ID: 505)
  Prédit: '=np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.02110208012163639
    2. '(np' → logprob: -3.8961021900177
    3. 'np' → logprob: -8.396101951599121
    4. ')' → logprob: -9.521101951599121
    5. '=' → logprob: -9.646101951599121
    6. '   ' → logprob: -9.896101951599121
    7. '[np' → logprob: -10.021101951599121
    8. '```' → logprob: -10.396101951599121
    9. 'dtype' → logprob: -11.021101951599121
    10. ',' → logprob: -11.646101951599121

Token 414: ' type' (ID: 1490)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.2860536575317383
    2. ' np' → logprob: -1.5360536575317383
    3. 'dtype' → logprob: -3.9110536575317383
    4. '=np' → logprob: -5.411053657531738
    5. 'numpy' → logprob: -5.786053657531738
    6. ' type' → logprob: -6.536053657531738
    7. ' numpy' → logprob: -6.536053657531738
    8. ' dtype' → logprob: -7.036053657531738
    9. 'type' → logprob: -7.161053657531738
    10. '(np' → logprob: -7.661053657531738

Token 415: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2201073169708252
    2. '=' → logprob: -1.4701073169708252
    3. '   ' → logprob: -1.5951073169708252
    4. ',' → logprob: -2.345107316970825
    5. '=np' → logprob: -3.595107316970825
    6. 'table' → logprob: -3.720107316970825
    7. '(' → logprob: -3.970107316970825
    8. '(table' → logprob: -4.095107078552246
    9. '(np' → logprob: -4.220107078552246
    10. 'result' → logprob: -4.220107078552246

Token 416: '’' (ID: 438)
  Prédit: 'ype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ype' → logprob: -0.8043122887611389
    2. '32' → logprob: -0.9293122887611389
    3. '=np' → logprob: -2.054312229156494
    4. 'np' → logprob: -5.054312229156494
    5. 'type' → logprob: -5.304312229156494
    6. 'ent' → logprob: -5.554312229156494
    7. 'yp' → logprob: -5.804312229156494
    8. 'e' → logprob: -6.054312229156494
    9. 'p' → logprob: -6.304312229156494
    10. '=int' → logprob: -6.679312229156494

Token 417: 'élé' (ID: 15228)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.09726135432720184
    2. '=np' → logprob: -4.097261428833008
    3. 'ent' → logprob: -4.347261428833008
    4. ' np' → logprob: -4.597261428833008
    5. 'numpy' → logprob: -4.597261428833008
    6. '(np' → logprob: -4.722261428833008
    7. 'ype' → logprob: -4.847261428833008
    8. 'dtype' → logprob: -5.222261428833008
    9. 'type' → logprob: -5.597261428833008
    10. '32' → logprob: -5.722261428833008

Token 418: 'ments' (ID: 1626)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.5149964094161987
    2. 'ger' → logprob: -1.8899964094161987
    3. 'np' → logprob: -2.5149965286254883
    4. '32' → logprob: -2.7649965286254883
    5. 'er' → logprob: -3.8899965286254883
    6. 'ier' → logprob: -4.014996528625488
    7. 'int' → logprob: -4.264996528625488
    8. 'iers' → logprob: -4.514996528625488
    9. 't' → logprob: -4.764996528625488
    10. 'gers' → logprob: -5.264996528625488

Token 419: ' stock' (ID: 6546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.259112000465393
    2. ' =' → logprob: -1.509112000465393
    3. ',' → logprob: -1.634112000465393
    4. '=' → logprob: -2.7591118812561035
    5. 'result' → logprob: -2.8841118812561035
    6. '(' → logprob: -3.6341118812561035
    7. 's' → logprob: -3.6341118812561035
    8. '(table' → logprob: -3.8841118812561035
    9. 'table' → logprob: -4.2591118812561035
    10. '(length' → logprob: -4.5091118812561035

Token 420: 'és' (ID: 1756)
  Prédit: '=np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.001923279371112585
    2. 'np' → logprob: -6.376923084259033
    3. '=' → logprob: -8.876923561096191
    4. '   ' → logprob: -10.376923561096191
    5. 'e' → logprob: -10.876923561096191
    6. '=int' → logprob: -11.501923561096191
    7. 'ype' → logprob: -12.001923561096191
    8. ' np' → logprob: -12.376923561096191
    9. 'import' → logprob: -12.751923561096191
    10. '(np' → logprob: -12.876923561096191

Token 421: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3947020471096039
    2. '   ' → logprob: -2.0197019577026367
    3. ' =' → logprob: -2.7697019577026367
    4. '=' → logprob: -3.3947019577026367
    5. '(table' → logprob: -3.3947019577026367
    6. '(' → logprob: -4.269701957702637
    7. '(np' → logprob: -4.519701957702637
    8. ')' → logprob: -4.894701957702637
    9. 'table' → logprob: -4.894701957702637
    10. '(n' → logprob: -5.644701957702637

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8480075597763062
    2. 'dp' → logprob: -1.4730075597763062
    3. 'prefix' → logprob: -2.7230076789855957
    4. 'tree' → logprob: -3.2230076789855957
    5. 'count' → logprob: -4.223007678985596
    6. 's' → logprob: -4.223007678985596
    7. 'h' → logprob: -4.348007678985596
    8. 'parent' → logprob: -4.473007678985596
    9. 'res' → logprob: -4.598007678985596
    10. 'arr' → logprob: -4.848007678985596

Token 423: ' offset' (ID: 8985)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7527647018432617
    2. '   ' → logprob: -2.7527647018432617
    3. 'tree' → logprob: -2.7527647018432617
    4. 'res' → logprob: -3.5027647018432617
    5. 'arr' → logprob: -3.8777647018432617
    6. ' dp' → logprob: -3.8777647018432617
    7. 'count' → logprob: -4.252764701843262
    8. 'size' → logprob: -4.252764701843262
    9. 's' → logprob: -4.377764701843262
    10. 'offset' (adapté à ' offset') → logprob: -4.377764701843262

Token 424: '_table' (ID: 11721)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.8035111427307129
    2. 's' → logprob: -1.178511142730713
    3. ' =' → logprob: -2.178511142730713
    4. '_arr' → logprob: -2.803511142730713
    5. '=' → logprob: -3.428511142730713
    6. '_table' → logprob: -4.428511142730713
    7. '_' → logprob: -4.678511142730713
    8. '(length' → logprob: -4.928511142730713
    9. '(' → logprob: -5.678511142730713
    10. 'array' → logprob: -6.428511142730713

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326676607131958
    2. '=' → logprob: -0.7576676607131958
    3. '   ' → logprob: -10.757667541503906
    4. ' ' → logprob: -11.007667541503906
    5. '(' → logprob: -11.257667541503906
    6. '=np' → logprob: -12.007667541503906
    7. 's' → logprob: -12.507667541503906
    8. ',' → logprob: -13.132667541503906
    9. ')' → logprob: -13.382667541503906
    10. '  ' → logprob: -13.632667541503906

Token 426: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.31335946917533875
    2. ' np' → logprob: -1.3133594989776611
    3. '(np' → logprob: -9.813359260559082
    4. '   ' → logprob: -10.563359260559082
    5. ' ' → logprob: -11.563359260559082
    6. '=np' → logprob: -13.438359260559082
    7. '  ' → logprob: -13.438359260559082
    8. ' (' → logprob: -13.438359260559082
    9. 'numpy' → logprob: -14.563359260559082
    10. '(' → logprob: -14.688359260559082

Token 427: '.ones' (ID: 73952)
  Prédit: '.ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ones' → logprob: -4.596781946020201e-05
    2. '.' → logprob: -11.125045776367188
    3. ' .' → logprob: -11.375045776367188
    4. '.zeros' → logprob: -11.500045776367188
    5. '.one' → logprob: -12.000045776367188
    6. 'ones' → logprob: -13.375045776367188
    7. '.int' → logprob: -14.125045776367188
    8. '.array' → logprob: -14.875045776367188
    9. ' ones' → logprob: -15.750045776367188
    10. '.full' → logprob: -16.000045776367188

Token 428: '(len' (ID: 14990)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.0096546411514282
    2. '(offset' → logprob: -1.0096546411514282
    3. '(n' → logprob: -1.5096546411514282
    4. '(length' → logprob: -3.7596545219421387
    5. '(k' → logprob: -3.8846545219421387
    6. '(' → logprob: -5.634654521942139
    7. '(np' → logprob: -6.759654521942139
    8. '(len' → logprob: -7.384654521942139
    9. '(shape' → logprob: -7.509654521942139
    10. '(int' → logprob: -8.009654998779297

Token 429: '(table' (ID: 28523)
  Prédit: '(table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(table' → logprob: -4.246537173457909e-06
    2. ' (' → logprob: -12.875003814697266
    3. 'table' → logprob: -14.125003814697266
    4. ')table' → logprob: -14.625003814697266
    5. '(' → logprob: -15.875003814697266
    6. '(offset' → logprob: -16.125003814697266
    7. '(tab' → logprob: -16.875003814697266
    8. ')' → logprob: -17.000003814697266
    9. ' table' → logprob: -17.000003814697266
    10. '(t' → logprob: -18.000003814697266

Token 430: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02002287469804287
    2. '//' → logprob: -4.145022869110107
    3. ')//' → logprob: -5.770022869110107
    4. '   ' → logprob: -8.145023345947266
    5. ' //' → logprob: -8.645023345947266
    6. '>>' → logprob: -9.020023345947266
    7. '[' → logprob: -9.395023345947266
    8. ')>>' → logprob: -9.895023345947266
    9. ' ' → logprob: -10.270023345947266
    10. ',' → logprob: -10.520023345947266

Token 431: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.9209542870521545
    2. ')' → logprob: -1.0459542274475098
    3. '()' → logprob: -2.6709542274475098
    4. ',' → logprob: -2.9209542274475098
    5. '   ' → logprob: -3.0459542274475098
    6. '>>' → logprob: -3.2959542274475098
    7. '[' → logprob: -4.29595422744751
    8. ' //' → logprob: -4.54595422744751
    9. ' ' → logprob: -4.67095422744751
    10. '#' → logprob: -6.42095422744751

Token 432: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043853666284121573
    2. ' ' → logprob: -7.750438690185547
    3. '4' → logprob: -12.625438690185547
    4. '   ' → logprob: -13.375438690185547
    5. '1' → logprob: -13.750438690185547
    6. '32' → logprob: -13.750438690185547
    7. '  ' → logprob: -15.000438690185547
    8. '(' → logprob: -15.875438690185547
    9. '    ' → logprob: -16.375438690185547
    10. '3' → logprob: -16.375438690185547

Token 433: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00019579214858822525
    2. '1' → logprob: -9.000195503234863
    3. ' ' → logprob: -10.000195503234863
    4. '4' → logprob: -10.750195503234863
    5. '3' → logprob: -12.875195503234863
    6. '32' → logprob: -14.250195503234863
    7. '8' → logprob: -14.500195503234863
    8. 'k' → logprob: -15.125195503234863
    9. '   ' → logprob: -15.250195503234863
    10. '5' → logprob: -15.437695503234863

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005983081646263599
    2. ',d' → logprob: -7.750598430633545
    3. ' ,' → logprob: -8.875597953796387
    4. '   ' → logprob: -11.625597953796387
    5. 'dtype' → logprob: -11.875597953796387
    6. ',np' → logprob: -12.375597953796387
    7. ',int' → logprob: -12.500597953796387
    8. '  ' → logprob: -13.250597953796387
    9. ',
' → logprob: -14.750597953796387
    10. '‌,' → logprob: -15.125597953796387

Token 435: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.000913370808120817
    2. ' dtype' → logprob: -7.000913143157959
    3. '   ' → logprob: -13.875913619995117
    4. 'np' → logprob: -14.250913619995117
    5. '  ' → logprob: -15.375913619995117
    6. ' ' → logprob: -16.375913619995117
    7. '     ' → logprob: -17.375913619995117
    8. '    ' → logprob: -17.625913619995117
    9. '       ' → logprob: -18.625913619995117
    10. '(dtype' → logprob: -19.000913619995117

Token 436: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.0004216170927975327
    2. '=' → logprob: -7.875421524047852
    3. '(np' → logprob: -10.625421524047852
    4. 'np' → logprob: -11.750421524047852
    5. ' =' → logprob: -12.125421524047852
    6. '=
' → logprob: -13.500421524047852
    7. '=n' → logprob: -14.125421524047852
    8. '   ' → logprob: -14.125421524047852
    9. ' ' → logprob: -15.250421524047852
    10. '[np' → logprob: -15.250421524047852

Token 437: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.0009118211455643177
    2. 'int' → logprob: -7.000911712646484
    3. 'np' → logprob: -15.250911712646484
    4. '=int' → logprob: -17.125911712646484
    5. '.uint' → logprob: -17.625911712646484
    6. '[int' → logprob: -18.500911712646484
    7. ' int' → logprob: -19.125911712646484
    8. ':int' → logprob: -19.250911712646484
    9. '.' → logprob: -19.625911712646484
    10. '.i' → logprob: -19.750911712646484

Token 438: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: 0.0
    2. '8' → logprob: -18.125
    3. 'int' → logprob: -19.0
    4. 'c' → logprob: -20.75
    5. 'p' → logprob: -21.125
    6. 't' → logprob: -21.375
    7. '3' → logprob: -21.625
    8. 's' → logprob: -22.5
    9. '```' → logprob: -22.875
    10. '64' → logprob: -23.125

Token 439: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002465582510922104
    2. ')*' → logprob: -9.00024700164795
    3. ' )' → logprob: -9.12524700164795
    4. '   ' → logprob: -11.50024700164795
    5. ')
' → logprob: -13.37524700164795
    6. '))' → logprob: -14.50024700164795
    7. ')+' → logprob: -14.62524700164795
    8. ' ' → logprob: -15.37524700164795
    9. '  ' → logprob: -15.62524700164795
    10. ')#' → logprob: -15.62524700164795

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7500768303871155
    2. ')' → logprob: -1.1250767707824707
    3. '[' → logprob: -1.8750767707824707
    4. ' ' → logprob: -4.000076770782471
    5. '<|end|>' → logprob: -4.125076770782471
    6. '#' → logprob: -6.250076770782471
    7. '    
' → logprob: -6.500076770782471
    8. '    ' → logprob: -6.500076770782471
    9. ']' → logprob: -6.625076770782471
    10. '_' → logprob: -6.625076770782471

Token 441: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22902166843414307
    2. ')' → logprob: -2.4790215492248535
    3. ' ' → logprob: -3.1040215492248535
    4. '[' → logprob: -3.2290215492248535
    5. '    
' → logprob: -4.8540215492248535
    6. '<|end|>' → logprob: -4.8540215492248535
    7. '    ' → logprob: -5.2290215492248535
    8. '  ' → logprob: -6.1040215492248535
    9. ' 
' → logprob: -6.3540215492248535
    10. '
' → logprob: -6.3540215492248535

Token 442: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.061544619500637054
    2. '   ' → logprob: -3.18654465675354
    3. 'i' → logprob: -4.811544418334961
    4. 'offset' → logprob: -5.811544418334961
    5. ' for' → logprob: -6.686544418334961
    6. 'current' → logprob: -6.811544418334961
    7. 'prefix' → logprob: -7.186544418334961
    8. 'idx' → logprob: -7.436544418334961
    9. 'stack' → logprob: -7.811544418334961
    10. 'pos' → logprob: -7.811544418334961

Token 443: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.663336455821991
    2. 'r' → logprob: -1.1633365154266357
    3. 'c' → logprob: -1.9133365154266357
    4. '   ' → logprob: -5.038336277008057
    5. 'for' → logprob: -5.163336277008057
    6. 'cler' → logprob: -5.163336277008057
    7. 'cles' → logprob: -5.288336277008057
    8. 'cl' → logprob: -7.413336277008057
    9. '#' → logprob: -8.163336753845215
    10. 'clé' → logprob: -8.163336753845215

Token 444: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40795716643333435
    2. ' for' → logprob: -1.1579571962356567
    3. 'for' → logprob: -3.907957077026367
    4. '(' → logprob: -8.157957077026367
    5. '	for' → logprob: -8.282957077026367
    6. ' i' → logprob: -9.407957077026367
    7. '    ' → logprob: -9.532957077026367
    8. '_' → logprob: -10.032957077026367
    9. ':' → logprob: -11.407957077026367
    10. ')' → logprob: -12.157957077026367

Token 445: ' remplir' (ID: 113625)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5844719409942627
    2. ' i' → logprob: -0.8344719409942627
    3. '_' → logprob: -5.209471702575684
    4. ' _' → logprob: -6.709471702575684
    5. ' idx' → logprob: -7.209471702575684
    6. ' length' → logprob: -8.209471702575684
    7. ' offset' → logprob: -8.459471702575684
    8. 'length' → logprob: -8.834471702575684
    9. 'idx' → logprob: -8.959471702575684
    10. '_i' → logprob: -9.209471702575684

Token 446: ' offset' (ID: 8985)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39680513739585876
    2. 'range' → logprob: -2.2718050479888916
    3. ' for' → logprob: -2.3968050479888916
    4. '   ' → logprob: -3.1468050479888916
    5. 'i' → logprob: -3.5218050479888916
    6. '(range' → logprob: -3.5218050479888916
    7. '(i' → logprob: -5.146805286407471
    8. 'offset' → logprob: -5.396805286407471
    9. '(offset' → logprob: -5.521805286407471
    10. ' range' → logprob: -5.521805286407471

Token 447: '_table' (ID: 11721)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7357630729675293
    2. 'for' → logprob: -1.3607630729675293
    3. 'i' → logprob: -2.7357630729675293
    4. ' i' → logprob: -2.7357630729675293
    5. '_table' → logprob: -2.8607630729675293
    6. '(i' → logprob: -2.8607630729675293
    7. '   ' → logprob: -4.860763072967529
    8. '(' → logprob: -5.610763072967529
    9. 's' → logprob: -5.610763072967529
    10. '_' → logprob: -6.235763072967529

Token 448: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4752295911312103
    2. ' for' → logprob: -1.1002296209335327
    3. 'for' → logprob: -3.100229501724243
    4. '	for' → logprob: -9.100229263305664
    5. ':' → logprob: -9.225229263305664
    6. ',' → logprob: -10.100229263305664
    7. '    ' → logprob: -10.225229263305664
    8. '    
' → logprob: -10.725229263305664
    9. ' ' → logprob: -10.975229263305664
    10. ' i' → logprob: -11.225229263305664

Token 449: ' des' (ID: 731)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.11572294682264328
    2. ' offset' → logprob: -3.115722894668579
    3. '(offset' → logprob: -4.115723133087158
    4. 'np' → logprob: -4.615723133087158
    5. '[offset' → logprob: -4.615723133087158
    6. 'i' → logprob: -4.865723133087158
    7. 'range' → logprob: -5.365723133087158
    8. '[' → logprob: -6.115723133087158
    9. '1' → logprob: -6.115723133087158
    10. 'k' → logprob: -6.365723133087158

Token 450: ' puiss' (ID: 102546)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.29335811734199524
    2. ' offset' → logprob: -2.043358087539673
    3. '[' → logprob: -3.543358087539673
    4. ' offsets' → logprob: -4.168358325958252
    5. 'np' → logprob: -4.543358325958252
    6. ' np' → logprob: -4.918358325958252
    7. '[offset' → logprob: -4.918358325958252
    8. '(' → logprob: -5.543358325958252
    9. 'indices' → logprob: -5.668358325958252
    10. 'values' → logprob: -5.668358325958252

Token 451: 'ances' (ID: 3528)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4037257134914398
    2. 'for' → logprob: -2.6537256240844727
    3. 'es' → logprob: -3.2787256240844727
    4. '=' → logprob: -3.2787256240844727
    5. 'ances' → logprob: -3.2787256240844727
    6. 'def' → logprob: -3.2787256240844727
    7. 'offset' → logprob: -4.028725624084473
    8. 'i' → logprob: -4.153725624084473
    9. 'aces' → logprob: -4.528725624084473
    10. '(' → logprob: -4.528725624084473

Token 452: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44126373529434204
    2. '   ' → logprob: -1.1912636756896973
    3. 'of' → logprob: -4.316263675689697
    4. 'for' → logprob: -4.316263675689697
    5. '(i' → logprob: -4.441263675689697
    6. '_of' → logprob: -5.941263675689697
    7. ' de' → logprob: -6.066263675689697
    8. ' of' → logprob: -6.691263675689697
    9. 'de' → logprob: -6.816263675689697
    10. '2' → logprob: -6.816263675689697

Token 453: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03248431906104088
    2. 'de' → logprob: -3.907484292984009
    3. ' ' → logprob: -5.282484531402588
    4. 'two' → logprob: -5.657484531402588
    5. ' two' → logprob: -6.032484531402588
    6. ' deux' → logprob: -7.282484531402588
    7. '1' → logprob: -9.78248405456543
    8. '```' → logprob: -10.15748405456543
    9. 'offset' → logprob: -10.53248405456543
    10. '   ' → logprob: -11.15748405456543

Token 454: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1341564655303955
    2. ' for' → logprob: -2.3841564655303955
    3. 'for' → logprob: -3.6341564655303955
    4. ':' → logprob: -5.634156227111816
    5. '(' → logprob: -6.509156227111816
    6. ',' → logprob: -7.509156227111816
    7. ')' → logprob: -8.259156227111816
    8. '    
' → logprob: -8.884156227111816
    9. ' i' → logprob: -9.134156227111816
    10. '	for' → logprob: -9.259156227111816

Token 455: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008447915315628052
    2. ' range' → logprob: -5.133448123931885
    3. '   ' → logprob: -7.133448123931885
    4. 'np' → logprob: -7.133448123931885
    5. 'la' → logprob: -7.633448123931885
    6. '(range' → logprob: -9.258447647094727
    7. 'i' → logprob: -9.383447647094727
    8. 'offset' → logprob: -10.133447647094727
    9. 'len' → logprob: -10.758447647094727
    10. ' la' → logprob: -11.008447647094727

Token 456: ' positions' (ID: 15897)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01480242982506752
    2. ' range' → logprob: -4.6398024559021
    3. 'i' → logprob: -5.8898024559021
    4. 'np' → logprob: -6.6398024559021
    5. 'offset' → logprob: -8.139801979064941
    6. 'index' → logprob: -9.139801979064941
    7. ' ' → logprob: -9.264801979064941
    8. '   ' → logprob: -9.264801979064941
    9. ' i' → logprob: -9.764801979064941
    10. 'n' → logprob: -10.014801979064941

Token 457: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11728788167238235
    2. ' for' → logprob: -2.3672878742218018
    3. 'for' → logprob: -4.867288112640381
    4. ':' → logprob: -5.117288112640381
    5. '    
' → logprob: -7.117288112640381
    6. '	for' → logprob: -7.117288112640381
    7. ',' → logprob: -8.242287635803223
    8. '\t' → logprob: -8.242287635803223
    9. '    ' → logprob: -8.492287635803223
    10. ' ' → logprob: -8.992287635803223

Token 458: ' bits' (ID: 18189)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5228290557861328
    2. 'np' → logprob: -1.7728290557861328
    3. 'k' → logprob: -2.522829055786133
    4. 'offset' → logprob: -2.772829055786133
    5. 'table' → logprob: -2.897829055786133
    6. ' range' → logprob: -4.272829055786133
    7. ' np' → logprob: -5.147829055786133
    8. '1' → logprob: -5.272829055786133
    9. 'la' → logprob: -5.647829055786133
    10. 'b' → logprob: -6.147829055786133

Token 459: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12048330903053284
    2. ' for' → logprob: -2.2454833984375
    3. 'for' → logprob: -5.2454833984375
    4. '	for' → logprob: -7.3704833984375
    5. '    
' → logprob: -7.3704833984375
    6. ',' → logprob: -8.2454833984375
    7. ':' → logprob: -8.4954833984375
    8. '    ' → logprob: -8.7454833984375
    9. '
' → logprob: -8.8704833984375
    10. ' 
' → logprob: -9.7454833984375

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10245325416326523
    2. ' for' → logprob: -2.4774532318115234
    3. 'for' → logprob: -4.352453231811523
    4. '    
' → logprob: -8.727453231811523
    5. '	for' → logprob: -8.727453231811523
    6. '    ' → logprob: -9.602453231811523
    7. ',' → logprob: -9.977453231811523
    8. ':' → logprob: -10.852453231811523
    9. '
' → logprob: -11.102453231811523
    10. ' ' → logprob: -11.352453231811523

Token 461: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49273332953453064
    2. 'for' → logprob: -0.992733359336853
    3. ' for' → logprob: -3.9927332401275635
    4. 'i' → logprob: -10.992733001708984
    5. '	for' → logprob: -11.867733001708984
    6. ' i' → logprob: -12.742733001708984
    7. '
' → logprob: -13.742733001708984
    8. '    
' → logprob: -13.742733001708984
    9. ' ' → logprob: -14.117733001708984
    10. '  ' → logprob: -14.242733001708984

Token 462: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049457281827926636
    2. ' for' → logprob: -3.174457311630249
    3. '   ' → logprob: -5.04945707321167
    4. 'i' → logprob: -11.424457550048828
    5. 'offset' → logprob: -12.549457550048828
    6. ' i' → logprob: -12.549457550048828
    7. '	for' → logprob: -13.174457550048828
    8. ' ' → logprob: -13.674457550048828
    9. '
' → logprob: -14.549457550048828
    10. 'def' → logprob: -14.549457550048828

Token 463: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03454886004328728
    2. ' for' → logprob: -3.409548759460449
    3. 'offset' → logprob: -8.03454875946045
    4. 'i' → logprob: -8.78454875946045
    5. 'def' → logprob: -9.65954875946045
    6. 'length' → logprob: -10.15954875946045
    7. ' i' → logprob: -10.28454875946045
    8. ' ' → logprob: -10.28454875946045
    9. ' offset' → logprob: -10.65954875946045
    10. 'power' → logprob: -10.65954875946045

Token 464: ' parc' (ID: 22138)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6934646368026733
    2. 'for' → logprob: -0.6934646368026733
    3. '   ' → logprob: -9.443464279174805
    4. ' =' → logprob: -9.568464279174805
    5. ' pour' → logprob: -9.943464279174805
    6. '=' → logprob: -10.193464279174805
    7. ' i' → logprob: -10.943464279174805
    8. 'i' → logprob: -11.443464279174805
    9. 'pour' → logprob: -11.693464279174805
    10. ' ' → logprob: -11.818464279174805

Token 465: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.0009976790752261877
    2. 'ours' → logprob: -7.250997543334961
    3. 'oure' → logprob: -9.375997543334961
    4. '_' → logprob: -10.375997543334961
    5. '
' → logprob: -10.375997543334961
    6. '#' → logprob: -10.750997543334961
    7. 'ourse' → logprob: -10.750997543334961
    8. 'court' → logprob: -11.375997543334961
    9. '\' → logprob: -11.500997543334961
    10. '[' → logprob: -11.625997543334961

Token 466: ' tous' (ID: 10688)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7045144438743591
    2. ' range' → logprob: -1.579514503479004
    3. 'i' → logprob: -2.079514503479004
    4. ' i' → logprob: -2.704514503479004
    5. '(range' → logprob: -3.454514503479004
    6. '_' → logprob: -4.079514503479004
    7. '(i' → logprob: -4.079514503479004
    8. 'for' → logprob: -4.829514503479004
    9. '(' → logprob: -4.829514503479004
    10. '(length' → logprob: -5.454514503479004

Token 467: ' les' (ID: 1341)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1483571529388428
    2. '(len' → logprob: -1.2733571529388428
    3. '(range' → logprob: -1.3983571529388428
    4. '(' → logprob: -2.0233571529388428
    5. '(_' → logprob: -5.273357391357422
    6. ' range' → logprob: -5.398357391357422
    7. 'range' → logprob: -6.148357391357422
    8. '(length' → logprob: -6.273357391357422
    9. ' i' → logprob: -6.648357391357422
    10. '(l' → logprob: -6.773357391357422

Token 468: ' v' (ID: 323)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1054319217801094
    2. 'i' → logprob: -2.7304320335388184
    3. ' range' → logprob: -3.4804320335388184
    4. ' i' → logprob: -6.605432033538818
    5. 'bits' → logprob: -6.855432033538818
    6. '(range' → logprob: -7.480432033538818
    7. '_' → logprob: -7.980432033538818
    8. 'indices' → logprob: -8.73043155670166
    9. 'k' → logprob: -9.35543155670166
    10. 'r' → logprob: -9.73043155670166

Token 469: ' de' (ID: 334)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.14902867376804352
    2. 'ale' → logprob: -2.899028778076172
    3. 'a' → logprob: -4.024028778076172
    4. 'rais' → logprob: -4.774028778076172
    5. 'als' → logprob: -5.024028778076172
    6. 'alue' → logprob: -5.399028778076172
    7. 'ar' → logprob: -5.524028778076172
    8. 'ec' → logprob: -5.524028778076172
    9. 'ales' → logprob: -5.961528778076172
    10. 'alid' → logprob: -6.149028778076172

Token 470: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05517292395234108
    2. ' range' → logprob: -2.930172920227051
    3. 'offset' → logprob: -8.68017292022705
    4. '   ' → logprob: -10.30517292022705
    5. 'r' → logprob: -10.93017292022705
    6. 'np' → logprob: -10.93017292022705
    7. '(range' → logprob: -12.30517292022705
    8. '	range' → logprob: -12.30517292022705
    9. 're' → logprob: -12.55517292022705
    10. ' ' → logprob: -12.68017292022705

Token 471: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001218451652675867
    2. ' range' → logprob: -7.251218318939209
    3. 'offset' → logprob: -7.751218318939209
    4. '   ' → logprob: -10.876218795776367
    5. 're' → logprob: -11.251218795776367
    6. 'np' → logprob: -11.376218795776367
    7. 'len' → logprob: -12.001218795776367
    8. 'k' → logprob: -12.376218795776367
    9. 'n' → logprob: -12.751218795776367
    10. '(range' → logprob: -12.876218795776367

Token 472: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1662113517522812
    2. '   ' → logprob: -2.4162113666534424
    3. ',n' → logprob: -3.6662113666534424
    4. 'range' → logprob: -4.416211128234863
    5. ' for' → logprob: -5.416211128234863
    6. 'for' → logprob: -5.541211128234863
    7. '
' → logprob: -5.791211128234863
    8. ' range' → logprob: -5.791211128234863
    9. ' ,' → logprob: -5.916211128234863
    10. '..' → logprob: -6.666211128234863

Token 473: ' n' (ID: 297)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.141637921333313
    2. 'k' → logprob: -3.5166378021240234
    3. '(n' → logprob: -3.6416378021240234
    4. 'n' → logprob: -3.7666378021240234
    5. '(len' → logprob: -3.7666378021240234
    6. ' len' → logprob: -4.141637802124023
    7. '(k' → logprob: -5.516637802124023
    8. ' n' → logprob: -5.641637802124023
    9. ' (' → logprob: -5.891637802124023
    10. ' k' → logprob: -6.266637802124023

Token 474: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8037376403808594
    2. '   ' → logprob: -1.8037376403808594
    3. '+' → logprob: -2.0537376403808594
    4. ' for' → logprob: -2.1787376403808594
    5. ':
' → logprob: -2.8037376403808594
    6. 'for' → logprob: -2.8037376403808594
    7. ' +' → logprob: -4.303737640380859
    8. '):
' → logprob: -5.678737640380859
    9. '
' → logprob: -6.678737640380859
    10. '):' → logprob: -6.678737640380859

Token 475: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8646748065948486
    2. 'n' → logprob: -1.2396748065948486
    3. '1' → logprob: -1.4896748065948486
    4. 'k' → logprob: -3.3646748065948486
    5. ' k' → logprob: -3.7396748065948486
    6. ' ' → logprob: -5.6146745681762695
    7. '   ' → logprob: -6.7396745681762695
    8. '-' → logprob: -8.86467456817627
    9. '
' → logprob: -8.98967456817627
    10. '```' → logprob: -9.11467456817627

Token 476: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027331115677952766
    2. 'k' → logprob: -3.6523311138153076
    3. ' k' → logprob: -7.777331352233887
    4. 'n' → logprob: -8.027331352233887
    5. '2' → logprob: -9.277331352233887
    6. ' ' → logprob: -9.652331352233887
    7. '```' → logprob: -9.902331352233887
    8. '   ' → logprob: -10.402331352233887
    9. ' n' → logprob: -11.152331352233887
    10. '
' → logprob: -11.402331352233887

Token 477: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08360328525304794
    2. ' for' → logprob: -2.5836033821105957
    3. 'for' → logprob: -5.708603382110596
    4. ':' → logprob: -7.333603382110596
    5. ',' → logprob: -8.083602905273438
    6. '	for' → logprob: -8.333602905273438
    7. '
' → logprob: -9.458602905273438
    8. ':
' → logprob: -11.083602905273438
    9. '    
' → logprob: -11.083602905273438
    10. ')' → logprob: -11.208602905273438

Token 478: 'in' (ID: 258)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6875377297401428
    2. 'n' → logprob: -1.437537670135498
    3. '   ' → logprob: -1.937537670135498
    4. ')' → logprob: -3.312537670135498
    5. '):' → logprob: -3.562537670135498
    6. '):
' → logprob: -4.187537670135498
    7. ')n' → logprob: -5.187537670135498
    8. ' for' → logprob: -5.437537670135498
    9. ',' → logprob: -5.562537670135498
    10. ' )' → logprob: -5.937537670135498

Token 479: 'clus' (ID: 4085)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.29859259724617004
    2. ' n' → logprob: -2.2985925674438477
    3. ')' → logprob: -3.1735925674438477
    4. '+' → logprob: -3.9235925674438477
    5. ' ' → logprob: -4.048592567443848
    6. '   ' → logprob: -4.298592567443848
    7. '):
' → logprob: -4.423592567443848
    8. 'range' → logprob: -4.423592567443848
    9. ' )' → logprob: -5.048592567443848
    10. '
' → logprob: -5.173592567443848

Token 480: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6273818612098694
    2. '):' → logprob: -1.0023818016052246
    3. '   ' → logprob: -3.0023818016052246
    4. ':' → logprob: -3.5023818016052246
    5. ')' → logprob: -5.002381801605225
    6. ',' → logprob: -5.877381801605225
    7. '+' → logprob: -6.002381801605225
    8. ' ):
' → logprob: -6.502381801605225
    9. ' for' → logprob: -6.752381801605225
    10. ':
' → logprob: -7.127381801605225

Token 481: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04597243666648865
    2. ' for' → logprob: -3.1709723472595215
    3. 'for' → logprob: -6.4209723472595215
    4. '	for' → logprob: -6.6709723472595215
    5. ':' → logprob: -10.29597282409668
    6. ',' → logprob: -10.92097282409668
    7. '    
' → logprob: -11.54597282409668
    8. '    ' → logprob: -13.42097282409668
    9. 'v' → logprob: -13.42097282409668
    10. ' ' → logprob: -13.67097282409668

Token 482: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22667056322097778
    2. ' for' → logprob: -1.851670503616333
    3. 'for' (adapté à ' for') → logprob: -3.101670503616333
    4. '	for' → logprob: -7.101670742034912
    5. ':' → logprob: -10.851670265197754
    6. ',' → logprob: -12.351670265197754
    7. 'v' → logprob: -12.726670265197754
    8. '    
' → logprob: -12.726670265197754
    9. '    ' → logprob: -12.851670265197754
    10. '       ' → logprob: -13.226670265197754

Token 483: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.47431227564811707
    2. 'v' → logprob: -0.9743123054504395
    3. ' i' → logprob: -9.474311828613281
    4. 'i' → logprob: -9.849311828613281
    5. '	v' → logprob: -10.349311828613281
    6. ' ' → logprob: -11.224311828613281
    7. 'length' → logprob: -11.349311828613281
    8. '_v' → logprob: -11.474311828613281
    9. ' length' → logprob: -11.599311828613281
    10. ' ' → logprob: -12.224311828613281

Token 484: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01425129733979702
    2. 'in' → logprob: -4.264251232147217
    3. ' ' → logprob: -10.014251708984375
    4. 'v' → logprob: -10.764251708984375
    5. ',' → logprob: -11.514251708984375
    6. ' v' → logprob: -13.014251708984375
    7. ')' → logprob: -13.389251708984375
    8. 'range' → logprob: -13.514251708984375
    9. 'n' → logprob: -13.889251708984375
    10. ' ' → logprob: -14.014251708984375

Token 485: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519617974758148
    2. ' range' → logprob: -1.5019618272781372
    3. ' ' → logprob: -11.251961708068848
    4. '(range' → logprob: -12.001961708068848
    5. '   ' → logprob: -12.501961708068848
    6. '	range' → logprob: -13.251961708068848
    7. 'n' → logprob: -13.626961708068848
    8. '  ' → logprob: -13.876961708068848
    9. 'v' → logprob: -14.376961708068848
    10. 'r' → logprob: -14.501961708068848

Token 486: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0013438044115900993
    2. '(' → logprob: -6.626343727111816
    3. 'n' → logprob: -11.501343727111816
    4. '(
' → logprob: -12.126343727111816
    5. ' (' → logprob: -13.876343727111816
    6. ' n' → logprob: -14.501343727111816
    7. '(k' → logprob: -15.126343727111816
    8. '1' → logprob: -15.376343727111816
    9. '(v' → logprob: -16.001344680786133
    10. '   ' → logprob: -16.626344680786133

Token 487: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22557950019836426
    2. '-' → logprob: -1.6005795001983643
    3. '   ' → logprob: -9.350579261779785
    4. '):
' → logprob: -10.100579261779785
    5. '):' → logprob: -10.725579261779785
    6. ' ' → logprob: -11.350579261779785
    7. ')' → logprob: -13.225579261779785
    8. '1' → logprob: -14.225579261779785
    9. '  ' → logprob: -14.600579261779785
    10. ' -
' → logprob: -14.725579261779785

Token 488: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012415809032972902
    2. ' ' → logprob: -9.125123977661133
    3. '2' → logprob: -11.125123977661133
    4. '   ' → logprob: -15.000123977661133
    5. '  ' → logprob: -17.937623977661133
    6. '
' → logprob: -17.937623977661133
    7. '۱' → logprob: -18.312623977661133
    8. '１' → logprob: -18.500123977661133
    9. '```' → logprob: -18.875123977661133
    10. '

' → logprob: -18.937623977661133

Token 489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '2' → logprob: -12.87500286102295
    3. ' ' → logprob: -15.25000286102295
    4. '   ' → logprob: -17.625001907348633
    5. '
' → logprob: -17.937501907348633
    6. '１' → logprob: -18.000001907348633
    7. '۱' → logprob: -18.312501907348633
    8. '```' → logprob: -18.500001907348633
    9. '१' → logprob: -18.875001907348633
    10. '' → logprob: -19.187501907348633

Token 490: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026562567800283432
    2. '):
' → logprob: -3.651562452316284
    3. ':' → logprob: -8.901562690734863
    4. '   ' → logprob: -9.901562690734863
    5. ' ):' → logprob: -9.901562690734863
    6. ')' → logprob: -11.526562690734863
    7. '):
' → logprob: -11.526562690734863
    8. '+' → logprob: -12.776562690734863
    9. ' ):
' → logprob: -14.151562690734863
    10. ' :' → logprob: -14.526562690734863

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029461858794093132
    2. 'offset' → logprob: -3.7794618606567383
    3. '   ' → logprob: -5.279461860656738
    4. ' offset' → logprob: -6.904461860656738
    5. '	offset' → logprob: -10.654461860656738
    6. '[offset' → logprob: -10.779461860656738
    7. '```' → logprob: -10.779461860656738
    8. '
' → logprob: -11.404461860656738
    9. ':' → logprob: -12.279461860656738
    10. '    
' → logprob: -13.279461860656738

Token 492: ' #' (ID: 1069)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.11410108208656311
    2. '       ' → logprob: -2.8641011714935303
    3. ' offset' → logprob: -3.1141011714935303
    4. '   ' → logprob: -5.114100933074951
    5. '	offset' → logprob: -8.61410140991211
    6. '           ' → logprob: -9.48910140991211
    7. '[offset' → logprob: -9.98910140991211
    8. ' ' → logprob: -10.98910140991211
    9. '
' → logprob: -11.61410140991211
    10. 'off' → logprob: -11.73910140991211

Token 493: ' Pour' (ID: 13931)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.0002967320033349097
    2. ' offset' → logprob: -8.375296592712402
    3. '   ' → logprob: -9.750296592712402
    4. '	offset' → logprob: -13.000296592712402
    5. 'if' → logprob: -13.375296592712402
    6. '       ' → logprob: -13.750296592712402
    7. ' ' → logprob: -14.500296592712402
    8. 'off' → logprob: -14.500296592712402
    9. 'shift' → logprob: -15.000296592712402
    10. 'index' → logprob: -15.125296592712402

Token 494: ' chaque' (ID: 21194)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5593125224113464
    2. 'v' → logprob: -1.8093125820159912
    3. ' i' → logprob: -2.059312582015991
    4. ' offset' → logprob: -2.684312582015991
    5. 'i' → logprob: -2.934312582015991
    6. 'offset' → logprob: -4.684312343597412
    7. ' j' → logprob: -6.559312343597412
    8. ' k' → logprob: -7.184312343597412
    9. 'j' → logprob: -7.184312343597412
    10. 'k' → logprob: -8.05931282043457

Token 495: ' v' (ID: 323)
  Prédit: ' offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' offset' → logprob: -1.0107225179672241
    2. 'offset' → logprob: -1.2607225179672241
    3. 'i' → logprob: -2.0107226371765137
    4. ' i' → logprob: -2.1357226371765137
    5. 'v' → logprob: -3.0107226371765137
    6. ' v' → logprob: -3.5107226371765137
    7. '   ' → logprob: -5.510722637176514
    8. ']' → logprob: -6.010722637176514
    9. ' ' → logprob: -6.635722637176514
    10. 'pos' → logprob: -6.760722637176514

Token 496: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7943946123123169
    2. ':' → logprob: -1.544394612312317
    3. ':
' → logprob: -1.919394612312317
    4. ',' → logprob: -2.1693944931030273
    5. ' :' → logprob: -3.7943944931030273
    6. ' :
' → logprob: -4.294394493103027
    7. 'offset' → logprob: -4.794394493103027
    8. ' offset' → logprob: -5.044394493103027
    9. ' ,' → logprob: -5.169394493103027
    10. '=' → logprob: -5.544394493103027

Token 497: ' le' (ID: 505)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.6381236910820007
    2. ' offset' → logprob: -0.7631236910820007
    3. '           ' → logprob: -5.513123512268066
    4. '   ' → logprob: -7.138123512268066
    5. '       ' → logprob: -7.763123512268066
    6. '	offset' → logprob: -9.013123512268066
    7. ' ' → logprob: -9.888123512268066
    8. '               ' → logprob: -10.263123512268066
    9. '[offset' → logprob: -12.075623512268066
    10. '        ' → logprob: -12.450623512268066

Token 498: ' segment' (ID: 14806)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.001127836643718183
    2. ' offset' → logprob: -6.87612771987915
    3. 'index' → logprob: -10.626128196716309
    4. 'val' → logprob: -11.626128196716309
    5. 'shift' → logprob: -12.376128196716309
    6. '   ' → logprob: -12.501128196716309
    7. 'pos' → logprob: -12.626128196716309
    8. 'off' → logprob: -12.626128196716309
    9. 'idx' → logprob: -12.751128196716309
    10. 'i' → logprob: -12.876128196716309

Token 499: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35846224427223206
    2. '=' → logprob: -1.4834622144699097
    3. 'offset' → logprob: -3.233462333679199
    4. '[offset' → logprob: -4.733462333679199
    5. 'start' → logprob: -5.108462333679199
    6. 'v' → logprob: -5.483462333679199
    7. 'de' → logprob: -5.733462333679199
    8. '_start' → logprob: -6.233462333679199
    9. ' de' → logprob: -6.233462333679199
    10. ' offset' → logprob: -6.608462333679199

Token 500: ''ind' (ID: 82245)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.034893475472927094
    2. ' offset' → logprob: -3.78489351272583
    3. 'table' → logprob: -4.78489351272583
    4. '[offset' → logprob: -6.28489351272583
    5. ' table' → logprob: -7.40989351272583
    6. '`' → logprob: -9.034893035888672
    7. 'code' → logprob: -9.534893035888672
    8. ''' → logprob: -9.659893035888672
    9. '(offset' → logprob: -10.159893035888672
    10. '	offset' → logprob: -10.159893035888672

Token 501: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.06026800721883774
    2. 'ices' → logprob: -2.935267925262451
    3. 'ice' → logprob: -5.560267925262451
    4. 'table' → logprob: -7.310267925262451
    5. 'offset' → logprob: -8.06026840209961
    6. 'array' → logprob: -8.31026840209961
    7. 'e' → logprob: -9.81026840209961
    8. 'ces' → logprob: -9.93526840209961
    9. '#' → logprob: -10.31026840209961
    10. 'ent' → logprob: -10.93526840209961

Token 502: ' [' (ID: 723)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.9252834320068359
    2. ' offset' → logprob: -1.800283432006836
    3. '[offset' → logprob: -1.925283432006836
    4. '[' → logprob: -2.175283432006836
    5. '=' → logprob: -3.050283432006836
    6. ' =' → logprob: -3.675283432006836
    7. 'v' → logprob: -4.175283432006836
    8. '(' → logprob: -4.175283432006836
    9. 's' → logprob: -4.425283432006836
    10. '[v' → logprob: -4.675283432006836

Token 503: '1' (ID: 16)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.01797608844935894
    2. ' offset' → logprob: -5.0179762840271
    3. '(' → logprob: -5.3929762840271
    4. '2' → logprob: -5.5179762840271
    5. 'v' → logprob: -7.1429762840271
    6. '1' → logprob: -7.3929762840271
    7. '
' → logprob: -7.8929762840271
    8. '(offset' → logprob: -7.8929762840271
    9. '   ' → logprob: -9.017975807189941
    10. ':' → logprob: -9.517975807189941

Token 504: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.575417697429657
    2. ' <<' → logprob: -0.950417697429657
    3. '+' → logprob: -4.325417518615723
    4. 'offset' → logprob: -4.325417518615723
    5. '(offset' → logprob: -4.950417518615723
    6. ' +' → logprob: -5.075417518615723
    7. '(' → logprob: -6.200417518615723
    8. ' offset' → logprob: -6.450417518615723
    9. ':' → logprob: -6.575417518615723
    10. '<<(' → logprob: -6.825417518615723

Token 505: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2667800784111023
    2. '(v' → logprob: -1.516780138015747
    3. ' v' → logprob: -4.891779899597168
    4. ' (' → logprob: -5.016779899597168
    5. '(' → logprob: -8.016779899597168
    6. '   ' → logprob: -9.516779899597168
    7. '(n' → logprob: -10.454279899597168
    8. '
' → logprob: -10.766779899597168
    9. ' ' → logprob: -10.829279899597168
    10. '	v' → logprob: -10.829279899597168

Token 506: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05207190662622452
    2. ' :' → logprob: -3.1770718097686768
    3. ':(' → logprob: -5.927072048187256
    4. ']' → logprob: -6.177072048187256
    5. ':]' → logprob: -6.427072048187256
    6. ':
' → logprob: -7.677072048187256
    7. ' :]' → logprob: -8.302071571350098
    8. ')' → logprob: -8.802071571350098
    9. ':,' → logprob: -8.802071571350098
    10. ']:' → logprob: -8.802071571350098

Token 507: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018560871481895447
    2. '(' → logprob: -4.518560886383057
    3. ' ' → logprob: -5.143560886383057
    4. ' (' → logprob: -6.518560886383057
    5. '   ' → logprob: -9.268560409545898
    6. '2' → logprob: -10.268560409545898
    7. '  ' → logprob: -11.768560409545898
    8. '<<' → logprob: -12.268560409545898
    9. 'offset' → logprob: -12.268560409545898
    10. ']' → logprob: -12.518560409545898

Token 508: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014962512999773026
    2. '(' → logprob: -4.264962673187256
    3. '2' → logprob: -7.764962673187256
    4. ' ' → logprob: -8.264962196350098
    5. ' (' → logprob: -9.764962196350098
    6. 'offset' → logprob: -10.514962196350098
    7. '   ' → logprob: -11.014962196350098
    8. '<<' → logprob: -12.389962196350098
    9. '((' → logprob: -13.139962196350098
    10. '  ' → logprob: -13.514962196350098

Token 509: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.4295976758003235
    2. ' <<' → logprob: -1.0545976161956787
    3. '<<(' → logprob: -7.554597854614258
    4. ' ' → logprob: -8.429597854614258
    5. '   ' → logprob: -10.429597854614258
    6. '```' → logprob: -10.554597854614258
    7. '**' → logprob: -10.929597854614258
    8. ' ' → logprob: -11.304597854614258
    9. ' <<=' → logprob: -11.554597854614258
    10. '(v' → logprob: -11.804597854614258

Token 510: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005267668981105089
    2. ' v' → logprob: -5.25526762008667
    3. '(v' → logprob: -11.005268096923828
    4. '	v' → logprob: -11.130268096923828
    5. '   ' → logprob: -13.630268096923828
    6. ',v' → logprob: -15.255268096923828
    7. ')v' → logprob: -15.380268096923828
    8. '(' → logprob: -15.505268096923828
    9. '       ' → logprob: -15.880268096923828
    10. ' (' → logprob: -16.005268096923828

Token 511: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005047675222158432
    2. ' ]' → logprob: -5.380047798156738
    3. ',' → logprob: -8.630047798156738
    4. '   ' → logprob: -9.880047798156738
    5. ']=' → logprob: -10.630047798156738
    6. '       ' → logprob: -10.630047798156738
    7. ']+' → logprob: -10.880047798156738
    8. ']+=' → logprob: -10.880047798156738
    9. '],' → logprob: -11.005047798156738
    10. ']
' → logprob: -11.005047798156738

Token 512: ' est' (ID: 893)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031592994928359985
    2. ']+=' → logprob: -6.378159523010254
    3. '   ' → logprob: -7.503159523010254
    4. ']*' → logprob: -8.378159523010254
    5. ']=' → logprob: -8.503159523010254
    6. ' ]' → logprob: -8.503159523010254
    7. '       ' → logprob: -8.628159523010254
    8. ',' → logprob: -11.128159523010254
    9. '+' → logprob: -11.503159523010254
    10. '```' → logprob: -11.503159523010254

Token 513: ' rempli' (ID: 192613)
  Prédit: ' offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' offset' → logprob: -1.0562859773635864
    2. '=' → logprob: -1.9312859773635864
    3. 'offset' → logprob: -1.9312859773635864
    4. '*=' → logprob: -2.931285858154297
    5. '   ' → logprob: -3.056285858154297
    6. ' ' → logprob: -3.306285858154297
    7. ']' → logprob: -3.681285858154297
    8. '2' → logprob: -3.806285858154297
    9. '[:]' → logprob: -3.806285858154297
    10. ')' → logprob: -3.931285858154297

Token 514: ' avec' (ID: 3937)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42020609974861145
    2. '*=' → logprob: -2.295206069946289
    3. ' =' → logprob: -2.420206069946289
    4. '       ' → logprob: -2.670206069946289
    5. ' *=' → logprob: -3.670206069946289
    6. '   ' → logprob: -4.045206069946289
    7. ' <<=' → logprob: -4.920206069946289
    8. 'with' → logprob: -5.045206069946289
    9. ' avec' → logprob: -5.170206069946289
    10. '           ' → logprob: -5.545206069946289

Token 515: ' la' (ID: 557)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.03850363567471504
    2. ' offset' → logprob: -3.913503646850586
    3. '1' → logprob: -4.788503646850586
    4. '(' → logprob: -5.413503646850586
    5. '2' → logprob: -6.663503646850586
    6. '(offset' → logprob: -6.663503646850586
    7. 'v' → logprob: -6.788503646850586
    8. ' ' → logprob: -8.038503646850586
    9. 'np' → logprob: -8.538503646850586
    10. '   ' → logprob: -8.663503646850586

Token 516: ' valeur' (ID: 41664)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.06875313073396683
    2. ' offset' → logprob: -3.568753242492676
    3. '1' → logprob: -3.818753242492676
    4. 'v' → logprob: -5.068753242492676
    5. '(' → logprob: -5.568753242492676
    6. '2' → logprob: -5.943753242492676
    7. 'np' → logprob: -7.068753242492676
    8. '(offset' → logprob: -7.068753242492676
    9. ' ' → logprob: -7.193753242492676
    10. ' v' → logprob: -8.318753242492676

Token 517: ' ' (ID: 220)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.06350365281105042
    2. ' offset' → logprob: -3.1885037422180176
    3. '1' → logprob: -4.438503742218018
    4. '   ' → logprob: -6.313503742218018
    5. '(' → logprob: -6.438503742218018
    6. '=' → logprob: -6.563503742218018
    7. '(offset' → logprob: -6.938503742218018
    8. '2' → logprob: -6.938503742218018
    9. ' ' → logprob: -7.688503742218018
    10. 'off' → logprob: -8.18850326538086

Token 518: '2' (ID: 17)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.03643009811639786
    2. '1' → logprob: -3.9114301204681396
    3. ' offset' → logprob: -4.2864298820495605
    4. '(' → logprob: -7.2864298820495605
    5. '2' → logprob: -7.2864298820495605
    6. ' ' → logprob: -8.536430358886719
    7. 'v' → logprob: -9.036430358886719
    8. '(offset' → logprob: -9.036430358886719
    9. '   ' → logprob: -9.536430358886719
    10. '[offset' → logprob: -10.286430358886719

Token 519: ' <<' (ID: 2256)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3856799006462097
    2. ' **' → logprob: -1.7606799602508545
    3. '<<' → logprob: -2.3856799602508545
    4. ' <<' → logprob: -2.8856799602508545
    5. '<<(' → logprob: -9.260680198669434
    6. '   ' → logprob: -9.885680198669434
    7. ' <<=' → logprob: -10.885680198669434
    8. ' ' → logprob: -11.260680198669434
    9. ' ' → logprob: -11.385680198669434
    10. '```' → logprob: -11.760680198669434

Token 520: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.000386105413781479
    2. ' v' → logprob: -7.8753862380981445
    3. '(v' → logprob: -12.625386238098145
    4. '	v' → logprob: -13.125386238098145
    5. ')v' → logprob: -14.875386238098145
    6. '[v' → logprob: -16.000385284423828
    7. 'vq' → logprob: -16.375385284423828
    8. '*v' → logprob: -17.375385284423828
    9. '   ' → logprob: -17.625385284423828
    10. '```' → logprob: -17.625385284423828

Token 521: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47864726185798645
    2. ']' → logprob: -1.228647232055664
    3. '   ' → logprob: -3.103647232055664
    4. ')' → logprob: -3.728647232055664
    5. '<|end|>' → logprob: -4.728647232055664
    6. ' ]' → logprob: -5.728647232055664
    7. '           ' → logprob: -6.728647232055664
    8. '[' → logprob: -7.228647232055664
    9. ')]' → logprob: -7.603647232055664
    10. '=' → logprob: -7.603647232055664

Token 522: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12511196732521057
    2. 'offset' → logprob: -3.1251120567321777
    3. '1' → logprob: -4.000112056732178
    4. '2' → logprob: -4.625112056732178
    5. ' offset' → logprob: -4.750112056732178
    6. ' ' → logprob: -5.000112056732178
    7. 'v' → logprob: -5.000112056732178
    8. ' )' → logprob: -5.250112056732178
    9. '(' → logprob: -5.375112056732178
    10. ' (' → logprob: -6.125112056732178

Token 523: 'à' (ID: 708)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4768812358379364
    2. '<<' → logprob: -1.4768812656402588
    3. '+' → logprob: -3.351881265640259
    4. '=' → logprob: -3.476881265640259
    5. ' )' → logprob: -4.47688102722168
    6. '*' → logprob: -4.60188102722168
    7. ' ' → logprob: -4.85188102722168
    8. '   ' → logprob: -4.97688102722168
    9. '>>' → logprob: -5.10188102722168
    10. '```' → logprob: -5.22688102722168

Token 524: 'd' (ID: 67)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17628538608551025
    2. ' )' → logprob: -2.5512852668762207
    3. ' ' → logprob: -3.1762852668762207
    4. 'v' → logprob: -4.551285266876221
    5. ' v' → logprob: -5.676285266876221
    6. '   ' → logprob: -5.676285266876221
    7. '1' → logprob: -5.676285266876221
    8. '```' → logprob: -5.676285266876221
    9. '       ' → logprob: -5.801285266876221
    10. ')
' → logprob: -6.301285266876221

Token 525: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8256546258926392
    2. '(' → logprob: -1.4506546258926392
    3. '2' → logprob: -2.0756545066833496
    4. 'v' → logprob: -2.8256545066833496
    5. 'offset' → logprob: -2.9506545066833496
    6. ' ' → logprob: -3.3256545066833496
    7. ' (' → logprob: -4.07565450668335
    8. ' offset' → logprob: -4.07565450668335
    9. '   ' → logprob: -5.07565450668335
    10. '(v' → logprob: -5.45065450668335

Token 526: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4721478223800659
    2. '1' → logprob: -1.472147822380066
    3. '2' → logprob: -2.2221479415893555
    4. 'offset' → logprob: -3.7221479415893555
    5. 'v' → logprob: -4.8471479415893555
    6. '(v' → logprob: -5.8471479415893555
    7. ' (' → logprob: -6.8471479415893555
    8. ' ' → logprob: -7.4721479415893555
    9. '(offset' → logprob: -7.5971479415893555
    10. ' offset' → logprob: -7.8471479415893555

Token 527: '^(' (ID: 32612)
  Prédit: ' <<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.2627149820327759
    2. '<<' → logprob: -1.5127149820327759
    3. '**' → logprob: -4.887714862823486
    4. ' **' → logprob: -6.387714862823486
    5. ')' → logprob: -7.512714862823486
    6. '<<(' → logprob: -7.887714862823486
    7. '   ' → logprob: -9.012715339660645
    8. ' ' → logprob: -9.387715339660645
    9. ')<<' → logprob: -9.512715339660645
    10. ' <<=' → logprob: -9.512715339660645

Token 528: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.010280349291861057
    2. '(v' → logprob: -4.635280132293701
    3. '(' → logprob: -8.38528060913086
    4. ' v' → logprob: -8.51028060913086
    5. ' (' → logprob: -10.01028060913086
    6. '1' → logprob: -10.38528060913086
    7. ')' → logprob: -12.13528060913086
    8. ')v' → logprob: -12.51028060913086
    9. '{' → logprob: -13.01028060913086
    10. '   ' → logprob: -13.26028060913086

Token 529: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013095646165311337
    2. ' +' → logprob: -5.013095855712891
    3. '1' → logprob: -5.513095855712891
    4. ')' → logprob: -6.513095855712891
    5. '+
' → logprob: -7.888095855712891
    6. ')+' → logprob: -8.76309585571289
    7. '+)' → logprob: -9.26309585571289
    8. '))' → logprob: -10.13809585571289
    9. '
' → logprob: -10.38809585571289
    10. 'v' → logprob: -10.51309585571289

Token 530: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.135819760151207e-05
    2. ' ' → logprob: -10.37507152557373
    3. 'v' → logprob: -10.75007152557373
    4. ')' → logprob: -11.75007152557373
    5. '   ' → logprob: -12.62507152557373
    6. '
' → logprob: -13.00007152557373
    7. '2' → logprob: -13.25007152557373
    8. '+' → logprob: -13.37507152557373
    9. '```' → logprob: -15.12507152557373
    10. ' v' → logprob: -15.25007152557373

Token 531: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031734760850667953
    2. '))' → logprob: -3.6567347049713135
    3. ' )' → logprob: -5.781734943389893
    4. '   ' → logprob: -7.156734943389893
    5. ')))' → logprob: -7.406734943389893
    6. '+' → logprob: -8.031734466552734
    7. ' ))' → logprob: -8.781734466552734
    8. ')
' → logprob: -9.156734466552734
    9. '       ' → logprob: -9.406734466552734
    10. '),' → logprob: -10.031734466552734

Token 532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037437427788972855
    2. '   ' → logprob: -3.4124374389648438
    3. '=' → logprob: -6.662437438964844
    4. ':' → logprob: -7.287437438964844
    5. ')' → logprob: -7.412437438964844
    6. ' =' → logprob: -7.662437438964844
    7. '[offset' → logprob: -8.912437438964844
    8. '[' → logprob: -9.037437438964844
    9. '<|end|>' → logprob: -9.662437438964844
    10. ']' → logprob: -9.662437438964844

Token 533: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' (adapté à ' offset') → logprob: -0.05269715189933777
    2. ' offset' → logprob: -3.30269718170166
    3. '   ' → logprob: -4.30269718170166
    4. '       ' → logprob: -7.42769718170166
    5. '[offset' → logprob: -8.17769718170166
    6. '	offset' → logprob: -9.67769718170166
    7. '(offset' → logprob: -11.30269718170166
    8. ' ' → logprob: -11.55269718170166
    9. '           ' → logprob: -11.67769718170166
    10. '.offset' → logprob: -11.92769718170166

Token 534: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -13.500007629394531
    3. '_tab' → logprob: -13.500007629394531
    4. ' _' → logprob: -13.625007629394531
    5. ']_' → logprob: -13.875007629394531
    6. '"_' → logprob: -14.750007629394531
    7. ''_' → logprob: -15.000007629394531
    8. ')_' → logprob: -15.250007629394531
    9. '```' → logprob: -15.375007629394531
    10. '[_' → logprob: -15.500007629394531

Token 535: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014370749704539776
    2. '[(' → logprob: -9.000144004821777
    3. ' [' → logprob: -11.625144004821777
    4. '[v' → logprob: -12.750144004821777
    5. '[
' → logprob: -12.750144004821777
    6. '[offset' → logprob: -13.500144004821777
    7. '   ' → logprob: -14.250144004821777
    8. '[...]' → logprob: -14.625144004821777
    9. '1' → logprob: -14.875144004821777
    10. ' ' → logprob: -15.125144004821777

Token 536: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005119311157613993
    2. '1' → logprob: -5.380119323730469
    3. '((' → logprob: -8.505119323730469
    4. ' (' → logprob: -8.755119323730469
    5. 'offset' → logprob: -9.505119323730469
    6. '(offset' → logprob: -10.005119323730469
    7. '[' → logprob: -12.130119323730469
    8. '
' → logprob: -12.380119323730469
    9. '   ' → logprob: -12.880119323730469
    10. '[offset' → logprob: -13.255119323730469

Token 537: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.20142066478729248
    2. ' <<' → logprob: -1.7014206647872925
    3. '<' → logprob: -12.826420783996582
    4. ' ' → logprob: -13.701420783996582
    5. '1' → logprob: -14.076420783996582
    6. '```' → logprob: -14.701420783996582
    7. ' <<=' → logprob: -14.826420783996582
    8. ' ' → logprob: -14.951420783996582
    9. '   ' → logprob: -15.201420783996582
    10. ' <' → logprob: -15.201420783996582

Token 538: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0019325626781210303
    2. ' v' → logprob: -6.251932621002197
    3. '	v' → logprob: -12.626932144165039
    4. ')v' → logprob: -15.001932144165039
    5. '(v' → logprob: -15.126932144165039
    6. '[v' → logprob: -16.37693214416504
    7. '
' → logprob: -17.12693214416504
    8. '_v' → logprob: -18.00193214416504
    9. '   ' → logprob: -18.00193214416504
    10. '?v' → logprob: -19.00193214416504

Token 539: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03293253481388092
    2. ' :' → logprob: -3.5329325199127197
    3. ':]' → logprob: -5.782932758331299
    4. ' :]' → logprob: -9.65793228149414
    5. ']' → logprob: -11.40793228149414
    6. ':
' → logprob: -11.78293228149414
    7. ':(' → logprob: -12.28293228149414
    8. ':,' → logprob: -13.40793228149414
    9. ' :(' → logprob: -13.53293228149414
    10. '   ' → logprob: -13.53293228149414

Token 540: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015542630571871996
    2. ' ' → logprob: -6.626554489135742
    3. '(' → logprob: -8.501554489135742
    4. '   ' → logprob: -10.876554489135742
    5. '    ' → logprob: -13.126554489135742
    6. ' (' → logprob: -13.376554489135742
    7. '
' → logprob: -14.751554489135742
    8. '  ' → logprob: -15.126554489135742
    9. '           ' → logprob: -15.126554489135742
    10. '       ' → logprob: -15.126554489135742

Token 541: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.20151157677173615
    2. ' <<' → logprob: -1.7015116214752197
    3. ' <<=' → logprob: -10.45151138305664
    4. '   ' → logprob: -11.20151138305664
    5. '	' → logprob: -11.32651138305664
    6. ']<<' → logprob: -11.70151138305664
    7. '<<(' → logprob: -12.32651138305664
    8. ' ' → logprob: -12.45151138305664
    9. '<v' → logprob: -12.57651138305664
    10. ' ' → logprob: -12.57651138305664

Token 542: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0017066054278984666
    2. ' v' → logprob: -6.376706600189209
    3. '	v' → logprob: -12.376707077026367
    4. ')v' → logprob: -16.501707077026367
    5. '(v' → logprob: -16.876707077026367
    6. '   ' → logprob: -18.001707077026367
    7. '```' → logprob: -18.876707077026367
    8. '_v' → logprob: -19.001707077026367
    9. ',v' → logprob: -19.126707077026367
    10. '[v' → logprob: -19.501707077026367

Token 543: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006952775875106454
    2. ']=' → logprob: -7.75069522857666
    3. ' ]' → logprob: -8.25069522857666
    4. ')' → logprob: -14.00069522857666
    5. ']+=' → logprob: -14.25069522857666
    6. '=' → logprob: -14.50069522857666
    7. ' ' → logprob: -15.50069522857666
    8. ',' → logprob: -15.50069522857666
    9. '   ' → logprob: -15.62569522857666
    10. ')]' → logprob: -15.75069522857666

Token 544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3871293365955353
    2. ' =' → logprob: -1.137129306793213
    3. ' *=' → logprob: -9.137129783630371
    4. '*=' → logprob: -9.387129783630371
    5. ' ' → logprob: -10.262129783630371
    6. '[:]' → logprob: -11.512129783630371
    7. '.=' → logprob: -12.262129783630371
    8. ']' → logprob: -12.512129783630371
    9. ']=' → logprob: -12.887129783630371
    10. '[' → logprob: -13.137129783630371

Token 545: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018351279199123383
    2. ' ' → logprob: -4.018351078033447
    3. '(' → logprob: -9.268351554870605
    4. '   ' → logprob: -9.893351554870605
    5. ' (' → logprob: -10.268351554870605
    6. 'np' → logprob: -11.893351554870605
    7. '    ' → logprob: -12.643351554870605
    8. '1' → logprob: -12.643351554870605
    9. '  ' → logprob: -13.018351554870605
    10. ' np' → logprob: -13.643351554870605

Token 546: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029625516617670655
    2. '(' → logprob: -8.375296592712402
    3. ' ' → logprob: -9.750296592712402
    4. '   ' → logprob: -12.375296592712402
    5. ' (' → logprob: -13.750296592712402
    6. 'np' → logprob: -13.750296592712402
    7. '  ' → logprob: -15.500296592712402
    8. '           ' → logprob: -16.250295639038086
    9. '    ' → logprob: -16.500295639038086
    10. '1' → logprob: -16.812795639038086

Token 547: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.2275950014591217
    2. ' <<' → logprob: -1.6025949716567993
    3. '**' → logprob: -6.35259485244751
    4. '<<(' → logprob: -8.227595329284668
    5. ' **' → logprob: -9.977595329284668
    6. '```' → logprob: -10.477595329284668
    7. '<' → logprob: -10.602595329284668
    8. ' <<=' → logprob: -10.852595329284668
    9. ' ' → logprob: -11.352595329284668
    10. ' ' → logprob: -11.477595329284668

Token 548: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00015872348740231246
    2. ' v' → logprob: -8.750158309936523
    3. '	v' → logprob: -15.750158309936523
    4. '(v' → logprob: -19.000158309936523
    5. ')v' → logprob: -19.250158309936523
    6. '_v' → logprob: -21.000158309936523
    7. 'vq' → logprob: -21.000158309936523
    8. '*v' → logprob: -21.250158309936523
    9. '$v' → logprob: -21.500158309936523
    10. '[v' → logprob: -22.125158309936523

Token 549: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 551: ' ret' (ID: 2881)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20868952572345734
    2. ')' → logprob: -2.7086894512176514
    3. 'offset' → logprob: -2.7086894512176514
    4. '#' → logprob: -3.8336894512176514
    5. 'for' → logprob: -4.5836896896362305
    6. '<|end|>' → logprob: -5.2086896896362305
    7. '[' → logprob: -5.9586896896362305
    8. '    ' → logprob: -6.3336896896362305
    9. '    
' → logprob: -6.8336896896362305
    10. ' for' → logprob: -6.9586896896362305

Token 552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02841484360396862
    2. '=' → logprob: -4.028414726257324
    3. 'urn' → logprob: -5.028414726257324
    4. ' ' → logprob: -5.778414726257324
    5. '_' → logprob: -8.153414726257324
    6. '   ' → logprob: -9.403414726257324
    7. 'u' → logprob: -9.403414726257324
    8. ',' → logprob: -10.403414726257324
    9. '_val' → logprob: -11.028414726257324
    10. '	' → logprob: -11.403414726257324

Token 553: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33479151129722595
    2. 'np' → logprob: -1.5847915410995483
    3. ' ' → logprob: -3.584791421890259
    4. ' np' → logprob: -3.834791421890259
    5. '[]' → logprob: -4.459791660308838
    6. 'offset' → logprob: -4.959791660308838
    7. '-' → logprob: -6.334791660308838
    8. 'k' → logprob: -6.334791660308838
    9. '[' → logprob: -6.459791660308838
    10. '1' → logprob: -6.584791660308838

Token 554: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45831796526908875
    2. '   ' → logprob: -1.4583179950714111
    3. 'if' → logprob: -3.083317995071411
    4. '=' → logprob: -3.208317995071411
    5. ' for' → logprob: -4.083317756652832
    6. ' =' → logprob: -4.708317756652832
    7. '#' → logprob: -5.083317756652832
    8. '[]' → logprob: -5.333317756652832
    9. 'def' → logprob: -5.458317756652832
    10. '[' → logprob: -6.208317756652832

Token 555: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5400227308273315
    2. '<|end|>' → logprob: -2.040022850036621
    3. '
' → logprob: -3.040022850036621
    4. '[' → logprob: -3.165022850036621
    5. '=' → logprob: -3.290022850036621
    6. '#' → logprob: -3.290022850036621
    7. ' =' → logprob: -3.415022850036621
    8. ' ' → logprob: -4.040022850036621
    9. 'for' → logprob: -4.415022850036621
    10. ':' → logprob: -4.415022850036621

Token 556: ' Initialise' (ID: 179601)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.1777249574661255
    2. '0' → logprob: -2.052724838256836
    3. ' None' → logprob: -2.177724838256836
    4. ' ' → logprob: -2.177724838256836
    5. '[]' → logprob: -2.552724838256836
    6. 'def' → logprob: -2.677724838256836
    7. '   ' → logprob: -3.177724838256836
    8. '[' → logprob: -3.427724838256836
    9. '#' → logprob: -3.802724838256836
    10. 'ret' → logprob: -4.052724838256836

Token 557: ' la' (ID: 557)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.6993117332458496
    2. ' ret' → logprob: -1.5743117332458496
    3. ' None' → logprob: -2.1993117332458496
    4. '[]' → logprob: -2.5743117332458496
    5. 'None' → logprob: -2.6993117332458496
    6. '   ' → logprob: -4.19931173324585
    7. '0' → logprob: -4.32431173324585
    8. ' ' → logprob: -5.57431173324585
    9. '[' → logprob: -5.94931173324585
    10. '  ' → logprob: -6.82431173324585

Token 558: ' variable' (ID: 11076)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.331967830657959
    2. 'ret' → logprob: -1.331967830657959
    3. 'None' → logprob: -1.706967830657959
    4. '[]' → logprob: -2.456967830657959
    5. '#' → logprob: -3.081967830657959
    6. 'offset' → logprob: -3.456967830657959
    7. '
' → logprob: -3.831967830657959
    8. '0' → logprob: -3.956967830657959
    9. '[' → logprob: -4.331967830657959
    10. 'result' → logprob: -4.331967830657959

Token 559: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4509677588939667
    2. ' =' → logprob: -1.700967788696289
    3. '   ' → logprob: -2.200967788696289
    4. ' for' → logprob: -3.700967788696289
    5. 'for' → logprob: -4.200967788696289
    6. ' ' → logprob: -4.825967788696289
    7. 'None' → logprob: -5.450967788696289
    8. ' None' → logprob: -5.700967788696289
    9. '[' → logprob: -5.825967788696289
    10. 'ret' → logprob: -6.325967788696289

Token 560: ' retour' (ID: 30714)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -1.0973469018936157
    2. 'result' → logprob: -1.3473469018936157
    3. ' retour' → logprob: -1.4723469018936157
    4. 'None' → logprob: -3.222346782684326
    5. ' result' → logprob: -3.597346782684326
    6. 'ret' → logprob: -3.597346782684326
    7. ' None' → logprob: -3.722346782684326
    8. 'r' → logprob: -4.597346782684326
    9. 'ré' → logprob: -4.722346782684326
    10. ' résultat' → logprob: -4.722346782684326

Token 561: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04022803157567978
    2. '<|end|>' → logprob: -3.7902281284332275
    3. ')' → logprob: -5.165227890014648
    4. ' =' → logprob: -6.290227890014648
    5. '    
' → logprob: -6.415227890014648
    6. '
' → logprob: -6.790227890014648
    7. ' ' → logprob: -6.790227890014648
    8. ',' → logprob: -6.790227890014648
    9. ' for' → logprob: -7.290227890014648
    10. 'def' → logprob: -7.415227890014648

Token 562: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8183224201202393
    2. 'None' → logprob: -0.9433224201202393
    3. ')' → logprob: -2.6933224201202393
    4. ' None' → logprob: -2.8183224201202393
    5. '   ' → logprob: -4.19332218170166
    6. 'ret' → logprob: -4.31832218170166
    7. ' ' → logprob: -5.44332218170166
    8. ' ret' → logprob: -6.19332218170166
    9. '[]' → logprob: -6.31832218170166
    10. 'int' → logprob: -6.44332218170166

Token 563: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1079595759510994
    2. '<|end|>' → logprob: -2.357959508895874
    3. '
' → logprob: -5.107959747314453
    4. '<|end|>' → logprob: -7.232959747314453
    5. ')
' → logprob: -7.732959747314453
    6. ' ' → logprob: -8.982959747314453
    7. '   ' → logprob: -9.482959747314453
    8. '  
' → logprob: -9.857959747314453
    9. 'None' → logprob: -10.107959747314453
    10. '    
' → logprob: -10.357959747314453

Token 564: ' aucune' (ID: 51173)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.03272085264325142
    2. ' ret' → logprob: -3.5327208042144775
    3. 'True' → logprob: -7.282721042633057
    4. 'not' → logprob: -7.532721042633057
    5. ' not' → logprob: -7.782721042633057
    6. ' True' → logprob: -7.907721042633057
    7. 'False' → logprob: -8.157720565795898
    8. 'r' → logprob: -8.657720565795898
    9. 'None' → logprob: -9.532720565795898
    10. ' False' → logprob: -9.657720565795898

Token 565: ' réponse' (ID: 50332)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0128566026687622
    2. 'value' → logprob: -1.6378566026687622
    3. 'val' → logprob: -2.1378564834594727
    4. ' result' → logprob: -2.3878564834594727
    5. ' valeur' → logprob: -2.3878564834594727
    6. ' value' → logprob: -2.7628564834594727
    7. ')' → logprob: -4.137856483459473
    8. 'solution' → logprob: -4.512856483459473
    9. ' solution' → logprob: -4.637856483459473
    10. 'rés' → logprob: -5.762856483459473

Token 566: ' trouv' (ID: 40254)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023250321100931615
    2. '   ' → logprob: -9.375232696533203
    3. ' )' → logprob: -9.750232696533203
    4. '<|end|>' → logprob: -11.250232696533203
    5. ',' → logprob: -11.500232696533203
    6. ' =' → logprob: -11.625232696533203
    7. ')
' → logprob: -11.750232696533203
    8. ' ' → logprob: -12.375232696533203
    9. '=None' → logprob: -12.375232696533203
    10. 'None' → logprob: -12.625232696533203

Token 567: 'ée' (ID: 2894)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.41739094257354736
    2. 'ée' → logprob: -1.6673909425735474
    3. 'e' → logprob: -2.417390823364258
    4. ')' → logprob: -3.292390823364258
    5. '=' → logprob: -4.542390823364258
    6. 'ue' → logprob: -4.917390823364258
    7. 'é' → logprob: -5.417390823364258
    8. 'u' → logprob: -6.417390823364258
    9. '=None' → logprob: -6.542390823364258
    10. ' =' → logprob: -9.167390823364258

Token 568: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015126005746424198
    2. '<|end|>' → logprob: -7.37651252746582
    3. '
' → logprob: -8.25151252746582
    4. ' )' → logprob: -8.75151252746582
    5. ')
' → logprob: -8.87651252746582
    6. '   ' → logprob: -9.00151252746582
    7. ' ' → logprob: -9.25151252746582
    8. ',' → logprob: -10.75151252746582
    9. '    
' → logprob: -11.37651252746582
    10. '  
' → logprob: -11.50151252746582

Token 569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03740986809134483
    2. ' for' → logprob: -4.537409782409668
    3. '
' → logprob: -4.787409782409668
    4. 'for' → logprob: -5.412409782409668
    5. '    
' → logprob: -5.662409782409668
    6. ')' → logprob: -5.912409782409668
    7. '<|end|>' → logprob: -6.162409782409668
    8. '#' → logprob: -7.037409782409668
    9. ' =' → logprob: -7.412409782409668
    10. ',' → logprob: -7.537409782409668

Token 570: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3018929362297058
    2. ' for' → logprob: -1.5518929958343506
    3. '   ' → logprob: -3.9268929958343506
    4. 'i' → logprob: -5.1768927574157715
    5. 'stack' → logprob: -5.6768927574157715
    6. '#' (adapté à ' #') → logprob: -5.9268927574157715
    7. ' i' → logprob: -6.9268927574157715
    8. 'left' → logprob: -6.9268927574157715
    9. ' stack' → logprob: -6.9268927574157715
    10. 'start' → logprob: -7.0518927574157715

Token 571: ' Première' (ID: 179764)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028035763651132584
    2. 'stack' → logprob: -4.028035640716553
    3. 'left' → logprob: -6.153035640716553
    4. 'low' → logprob: -7.153035640716553
    5. 'i' → logprob: -7.528035640716553
    6. 'dp' → logprob: -7.528035640716553
    7. '#' → logprob: -7.778035640716553
    8. 'def' → logprob: -7.903035640716553
    9. 'result' → logprob: -7.903035640716553
    10. 'l' → logprob: -7.903035640716553

Token 572: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16144269704818726
    2. ' for' → logprob: -2.411442756652832
    3. 'def' → logprob: -4.161442756652832
    4. 'v' → logprob: -5.036442756652832
    5. 'if' → logprob: -5.286442756652832
    6. '#' → logprob: -5.536442756652832
    7. ' =' → logprob: -5.911442756652832
    8. 'offset' → logprob: -6.036442756652832
    9. 'i' → logprob: -6.661442756652832
    10. 'pos' → logprob: -6.661442756652832

Token 573: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6975060701370239
    2. 'for' → logprob: -0.6975060701370239
    3. '   ' → logprob: -5.447505950927734
    4. '
' → logprob: -11.322505950927734
    5. ':' → logprob: -11.947505950927734
    6. '	for' → logprob: -12.197505950927734
    7. ' i' → logprob: -12.447505950927734
    8. 'range' → logprob: -12.822505950927734
    9. 'i' → logprob: -13.072505950927734
    10. 'v' → logprob: -13.072505950927734

Token 574: ' toutes' (ID: 17502)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22775574028491974
    2. 'i' → logprob: -2.4777557849884033
    3. 'v' → logprob: -2.9777557849884033
    4. 'n' → logprob: -3.7277557849884033
    5. 'range' → logprob: -3.8527557849884033
    6. ' k' → logprob: -5.102755546569824
    7. 'length' → logprob: -6.102755546569824
    8. 'l' → logprob: -6.227755546569824
    9. ' i' → logprob: -6.352755546569824
    10. 'x' → logprob: -6.477755546569824

Token 575: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8867549896240234
    2. ' range' → logprob: -1.3867549896240234
    3. 'k' → logprob: -2.2617549896240234
    4. 'n' → logprob: -2.5117549896240234
    5. 'v' → logprob: -2.8867549896240234
    6. ' k' → logprob: -3.7617549896240234
    7. ' v' → logprob: -4.136754989624023
    8. ' n' → logprob: -4.511754989624023
    9. '(range' → logprob: -4.636754989624023
    10. '(n' → logprob: -5.011754989624023

Token 576: ' positions' (ID: 15897)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9716550707817078
    2. 'k' → logprob: -1.0966551303863525
    3. 'i' → logprob: -2.3466551303863525
    4. 'range' → logprob: -2.4716551303863525
    5. ' range' → logprob: -3.7216551303863525
    6. 'n' → logprob: -3.9716551303863525
    7. 'length' → logprob: -4.221654891967773
    8. ' k' → logprob: -4.846654891967773
    9. ' v' → logprob: -5.096654891967773
    10. ' i' → logprob: -5.346654891967773

Token 577: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.420146644115448
    2. 'for' → logprob: -1.4201467037200928
    3. 'i' → logprob: -3.1701467037200928
    4. ' i' → logprob: -3.4201467037200928
    5. ' in' → logprob: -4.545146465301514
    6. 'n' → logprob: -5.170146465301514
    7. 'v' → logprob: -5.920146465301514
    8. 'in' → logprob: -6.295146465301514
    9. 'range' → logprob: -6.420146465301514
    10. '   ' → logprob: -7.045146465301514

Token 578: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6720216274261475
    2. 'range' → logprob: -0.9220216274261475
    3. 'n' → logprob: -3.4220216274261475
    4. 'i' → logprob: -4.422021865844727
    5. 'l' → logprob: -4.547021865844727
    6. ' range' → logprob: -4.672021865844727
    7. 'la' → logprob: -4.797021865844727
    8. 'offset' → logprob: -5.047021865844727
    9. ' k' → logprob: -6.047021865844727
    10. '1' → logprob: -6.672021865844727

Token 579: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3804567754268646
    2. 'k' → logprob: -1.255456805229187
    3. 'n' → logprob: -4.255456924438477
    4. 'l' → logprob: -6.005456924438477
    5. 'offset' → logprob: -6.005456924438477
    6. ' range' → logprob: -6.005456924438477
    7. 'i' → logprob: -6.505456924438477
    8. '1' → logprob: -6.505456924438477
    9. 'la' → logprob: -6.505456924438477
    10. 'table' → logprob: -6.630456924438477

Token 580: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5344672799110413
    2. 'in' → logprob: -1.5344672203063965
    3. ',' → logprob: -3.1594672203063965
    4. ' for' → logprob: -3.2844672203063965
    5. 'for' → logprob: -3.6594672203063965
    6. 'range' → logprob: -3.6594672203063965
    7. ' range' → logprob: -4.0344672203063965
    8. ' n' → logprob: -4.6594672203063965
    9. '(n' → logprob: -4.7844672203063965
    10. 'n' → logprob: -4.7844672203063965

Token 581: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.27161890268325806
    2. 'k' → logprob: -1.8966188430786133
    3. ' n' → logprob: -2.5216188430786133
    4. ' k' → logprob: -5.396618843078613
    5. '(n' → logprob: -7.021618843078613
    6. '(' → logprob: -7.021618843078613
    7. ' (' → logprob: -8.021618843078613
    8. 'len' → logprob: -8.146618843078613
    9. 'offset' → logprob: -8.771618843078613
    10. '(k' → logprob: -9.396618843078613

Token 582: ' inclus' (ID: 11891)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8544950485229492
    2. ':' → logprob: -0.9794950485229492
    3. '   ' → logprob: -2.229495048522949
    4. '):' → logprob: -3.604495048522949
    5. 'for' → logprob: -3.604495048522949
    6. ' for' → logprob: -4.229495048522949
    7. '):
' → logprob: -4.729495048522949
    8. ':
' → logprob: -5.104495048522949
    9. '-' → logprob: -6.104495048522949
    10. ' +' → logprob: -6.604495048522949

Token 583: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3886500298976898
    2. ' for' → logprob: -1.1386500597000122
    3. '   ' → logprob: -6.638649940490723
    4. '
' → logprob: -8.638649940490723
    5. ':' → logprob: -9.388649940490723
    6. 'range' → logprob: -9.513649940490723
    7. ' range' → logprob: -10.138649940490723
    8. ':
' → logprob: -10.763649940490723
    9. '```' → logprob: -11.138649940490723
    10. 'v' → logprob: -11.763649940490723

Token 584: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11066020280122757
    2. 'for' → logprob: -2.4856603145599365
    3. '   ' → logprob: -4.110660076141357
    4. ':' → logprob: -5.360660076141357
    5. '	for' → logprob: -8.860660552978516
    6. ',' → logprob: -10.110660552978516
    7. '
' → logprob: -10.235660552978516
    8. 'n' → logprob: -10.735660552978516
    9. ':
' → logprob: -10.735660552978516
    10. ' ' → logprob: -10.860660552978516

Token 585: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007622364908456802
    2. ' for' → logprob: -4.882622241973877
    3. '   ' → logprob: -11.257622718811035
    4. '
' → logprob: -13.257622718811035
    5. 'i' → logprob: -14.882622718811035
    6. 'range' → logprob: -15.132622718811035
    7. '	for' → logprob: -15.257622718811035
    8. '```' → logprob: -15.257622718811035
    9. 'k' → logprob: -16.25762176513672
    10. ' ' → logprob: -16.50762176513672

Token 586: ' pos' (ID: 1253)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6755425930023193
    2. 'v' → logprob: -2.3005425930023193
    3. 'pos' → logprob: -2.9255425930023193
    4. 'start' → logprob: -3.1755425930023193
    5. 'x' → logprob: -3.3005425930023193
    6. ' i' → logprob: -3.4255425930023193
    7. 'length' → logprob: -3.9255425930023193
    8. 'l' → logprob: -3.9255425930023193
    9. 'k' → logprob: -4.050542831420898
    10. 'a' → logprob: -4.363042831420898

Token 587: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012728133238852024
    2. 'in' → logprob: -4.387728214263916
    3. ',' → logprob: -9.637727737426758
    4. ' ' → logprob: -10.262727737426758
    5. '```' → logprob: -11.137727737426758
    6. '   ' → logprob: -11.512727737426758
    7. 's' → logprob: -11.512727737426758
    8. '_' → logprob: -11.887727737426758
    9. '0' → logprob: -11.887727737426758
    10. ')' → logprob: -12.012727737426758

Token 588: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04301539808511734
    2. ' range' → logprob: -3.168015480041504
    3. '   ' → logprob: -12.043015480041504
    4. ' ' → logprob: -12.293015480041504
    5. '(range' → logprob: -12.543015480041504
    6. '  ' → logprob: -14.168015480041504
    7. 're' → logprob: -14.793015480041504
    8. '    ' → logprob: -15.168015480041504
    9. 'n' → logprob: -15.543015480041504
    10. ')' → logprob: -15.668015480041504

Token 589: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003862543497234583
    2. 'n' → logprob: -6.003862380981445
    3. '(' → logprob: -6.878862380981445
    4. '(k' → logprob: -8.128862380981445
    5. '(
' → logprob: -11.128862380981445
    6. 'k' → logprob: -11.253862380981445
    7. '(offset' → logprob: -11.753862380981445
    8. ' n' → logprob: -11.878862380981445
    9. '0' → logprob: -12.503862380981445
    10. '   ' → logprob: -12.878862380981445

Token 590: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38757988810539246
    2. ' +' → logprob: -1.1375799179077148
    3. '):' → logprob: -8.012579917907715
    4. '   ' → logprob: -8.637579917907715
    5. '):
' → logprob: -8.637579917907715
    6. '+
' → logprob: -11.887579917907715
    7. ' +
' → logprob: -12.012579917907715
    8. ')' → logprob: -12.762579917907715
    9. '1' → logprob: -13.262579917907715
    10. ':' → logprob: -14.762579917907715

Token 591: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026205103495158255
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.625262260437012
    4. '2' → logprob: -16.125261306762695
    5. '
' → logprob: -16.375261306762695
    6. ')' → logprob: -16.875261306762695
    7. '  ' → logprob: -17.312761306762695
    8. ' ' → logprob: -18.312761306762695
    9. '１' → logprob: -18.375261306762695
    10. '```' → logprob: -18.375261306762695

Token 592: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.526570384972729e-05
    2. ' ' → logprob: -9.875055313110352
    3. '2' → logprob: -13.000055313110352
    4. '   ' → logprob: -14.500055313110352
    5. '0' → logprob: -15.375055313110352
    6. '
' → logprob: -15.500055313110352
    7. '```' → logprob: -15.750055313110352
    8. '3' → logprob: -16.93755531311035
    9. ')' → logprob: -17.12505531311035
    10. '  ' → logprob: -17.25005531311035

Token 593: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029904257506132126
    2. '):
' → logprob: -3.529904365539551
    3. '   ' → logprob: -9.52990436553955
    4. ':' → logprob: -9.90490436553955
    5. '):
' → logprob: -11.02990436553955
    6. ')' → logprob: -11.77990436553955
    7. ' ):' → logprob: -13.15490436553955
    8. '+' → logprob: -13.90490436553955
    9. '       ' → logprob: -13.90490436553955
    10. ',' → logprob: -14.02990436553955

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23960816860198975
    2. ':' → logprob: -1.6146081686019897
    3. '   ' → logprob: -4.739608287811279
    4. ' :' → logprob: -6.739608287811279
    5. ',' → logprob: -7.239608287811279
    6. ':
' → logprob: -7.489608287811279
    7. '):' → logprob: -7.614608287811279
    8. '	' → logprob: -7.614608287811279
    9. '        
' → logprob: -7.989608287811279
    10. '<|end|>' → logprob: -7.989608287811279

Token 595: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5214327573776245
    2. 'if' → logprob: -1.7714327573776245
    3. 'offset' → logprob: -3.021432876586914
    4. '   ' → logprob: -3.771432876586914
    5. 'mask' → logprob: -3.896432876586914
    6. '#' (adapté à ' #') → logprob: -4.021432876586914
    7. 'cur' → logprob: -4.771432876586914
    8. ' if' → logprob: -5.021432876586914
    9. 'left' → logprob: -5.021432876586914
    10. 'length' → logprob: -5.146432876586914

Token 596: ' Deux' (ID: 92086)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7585356831550598
    2. 'cur' → logprob: -2.008535623550415
    3. 'mask' → logprob: -3.383535623550415
    4. 'count' → logprob: -3.508535623550415
    5. 'acc' → logprob: -3.758535623550415
    6. 'current' → logprob: -3.758535623550415
    7. 'length' → logprob: -3.883535623550415
    8. 'left' → logprob: -3.883535623550415
    9. 'val' → logprob: -4.008535861968994
    10. 'offset' → logprob: -4.008535861968994

Token 597: 'ième' (ID: 41126)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8065922260284424
    2. 'nd' → logprob: -1.3065922260284424
    3. 'for' → logprob: -1.9315922260284424
    4. ' for' → logprob: -2.6815922260284424
    5. '	for' → logprob: -3.0565922260284424
    6. 'ième' → logprob: -4.681591987609863
    7. '       ' → logprob: -6.056591987609863
    8. '    ' → logprob: -6.806591987609863
    9. '번째' → logprob: -6.931591987609863
    10. 'ème' → logprob: -7.056591987609863

Token 598: ' boucle' (ID: 174211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36012357473373413
    2. 'for' → logprob: -1.235123634338379
    3. '	for' → logprob: -5.610123634338379
    4. ' loop' → logprob: -6.110123634338379
    5. '   ' → logprob: -6.485123634338379
    6. ' ' → logprob: -6.610123634338379
    7. 'range' → logprob: -6.860123634338379
    8. ' range' → logprob: -7.360123634338379
    9. ' boucle' → logprob: -8.360123634338379
    10. '
' → logprob: -8.610123634338379

Token 599: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03809037432074547
    2. 'for' → logprob: -3.913090467453003
    3. '   ' → logprob: -5.538090229034424
    4. ' in' → logprob: -5.538090229034424
    5. '	for' → logprob: -5.663090229034424
    6. '       ' → logprob: -6.288090229034424
    7. '<|end|>' → logprob: -6.913090229034424
    8. 'range' → logprob: -7.413090229034424
    9. ' range' → logprob: -8.163090705871582
    10. ',' → logprob: -8.163090705871582

Token 600: ' tous' (ID: 10688)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.41775432229042053
    2. 'k' → logprob: -1.2927542924880981
    3. ' range' → logprob: -3.5427544116973877
    4. 'n' → logprob: -4.292754173278809
    5. 'pos' → logprob: -4.667754173278809
    6. 'offset' → logprob: -5.042754173278809
    7. ' k' → logprob: -5.417754173278809
    8. '(n' → logprob: -6.667754173278809
    9. ' n' → logprob: -7.417754173278809
    10. '2' → logprob: -7.917754173278809

Token 601: ' les' (ID: 1341)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.552686870098114
    2. '(range' → logprob: -1.3026869297027588
    3. 'k' → logprob: -2.927686929702759
    4. 'range' → logprob: -3.052686929702759
    5. '(n' → logprob: -3.427686929702759
    6. '(' → logprob: -4.42768669128418
    7. '(length' → logprob: -6.80268669128418
    8. '(pos' → logprob: -6.92768669128418
    9. '(s' → logprob: -7.05268669128418
    10. '(v' → logprob: -7.17768669128418

Token 602: ' '' (ID: 461)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6643092632293701
    2. 'range' → logprob: -1.0393092632293701
    3. 'offset' → logprob: -2.66430926322937
    4. 'pos' → logprob: -4.664309501647949
    5. '(range' → logprob: -4.789309501647949
    6. ' range' → logprob: -5.414309501647949
    7. 'v' → logprob: -5.414309501647949
    8. '(' → logprob: -5.414309501647949
    9. 'n' → logprob: -5.414309501647949
    10. 'i' → logprob: -5.539309501647949

Token 603: 'length' (ID: 7914)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8086714148521423
    2. 'range' → logprob: -1.058671474456787
    3. 'offset' → logprob: -2.683671474456787
    4. 'i' → logprob: -3.558671474456787
    5. 'pos' → logprob: -3.683671474456787
    6. 'v' → logprob: -3.683671474456787
    7. '(' → logprob: -4.558671474456787
    8. '2' → logprob: -4.683671474456787
    9. '(k' → logprob: -5.558671474456787
    10. '(range' → logprob: -5.683671474456787

Token 604: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027240855619311333
    2. 's' → logprob: -4.652240753173828
    3. 'in' → logprob: -4.777240753173828
    4. 'en' → logprob: -5.277240753173828
    5. ' en' → logprob: -5.777240753173828
    6. '```' → logprob: -9.152240753173828
    7. ')' → logprob: -9.402240753173828
    8. 'for' → logprob: -9.527240753173828
    9. ''' → logprob: -10.027240753173828
    10. ' ' → logprob: -10.152240753173828

Token 605: ' sup' (ID: 1982)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014545522630214691
    2. 'in' → logprob: -4.264545440673828
    3. ' en' → logprob: -9.389545440673828
    4. 'range' → logprob: -10.014545440673828
    5. 'en' → logprob: -10.139545440673828
    6. 'from' → logprob: -10.139545440673828
    7. '   ' → logprob: -10.139545440673828
    8. ' for' → logprob: -10.514545440673828
    9. 'for' → logprob: -11.389545440673828
    10. ',' → logprob: -11.514545440673828

Token 606: 'érieurs' (ID: 97672)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9927108883857727
    2. '```' → logprob: -1.242710828781128
    3. '   ' → logprob: -2.492710828781128
    4. '1' → logprob: -2.492710828781128
    5. '2' → logprob: -3.492710828781128
    6. 'er' → logprob: -3.992710828781128
    7. 'érieur' → logprob: -3.992710828781128
    8. 'pos' → logprob: -4.367711067199707
    9. 'from' → logprob: -4.742711067199707
    10. 'range' → logprob: -4.992711067199707

Token 607: ' strict' (ID: 12035)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7209786176681519
    2. 'in' → logprob: -0.9709786176681519
    3. 'range' → logprob: -2.8459787368774414
    4. '(pos' → logprob: -3.7209787368774414
    5. '=' → logprob: -3.8459787368774414
    6. 'from' → logprob: -4.470978736877441
    7. ',' → logprob: -5.095978736877441
    8. ' range' → logprob: -5.345978736877441
    9. '(range' → logprob: -5.970978736877441
    10. 'pos' → logprob: -6.470978736877441

Token 608: 's' (ID: 82)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1837568283081055
    2. 'def' → logprob: -1.3087568283081055
    3. '0' → logprob: -2.5587568283081055
    4. 'érieurs' → logprob: -2.6837568283081055
    5. 'érieur' → logprob: -2.6837568283081055
    6. '   ' → logprob: -2.8087568283081055
    7. 'a' → logprob: -3.3087568283081055
    8. 'à' → logprob: -3.6837568283081055
    9. 'érieure' → logprob: -4.5587568283081055
    10. 'é' → logprob: -4.8087568283081055

Token 609: ' à' (ID: 1221)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8269968628883362
    2. '(pos' → logprob: -1.3269968032836914
    3. 'pos' → logprob: -2.3269968032836914
    4. ' in' → logprob: -3.5769968032836914
    5. 'in' → logprob: -3.7019968032836914
    6. 'to' → logprob: -3.9519968032836914
    7. ',' → logprob: -3.9519968032836914
    8. ' range' → logprob: -4.451996803283691
    9. 'from' → logprob: -4.451996803283691
    10. 'for' → logprob: -4.576996803283691

Token 610: ' '' (ID: 461)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.003913714550435543
    2. ' pos' → logprob: -5.878913879394531
    3. '0' → logprob: -6.878913879394531
    4. 'n' → logprob: -10.628913879394531
    5. 'range' → logprob: -11.253913879394531
    6. ' ' → logprob: -11.753913879394531
    7. '=' → logprob: -12.128913879394531
    8. '	pos' → logprob: -12.378913879394531
    9. 'k' → logprob: -12.503913879394531
    10. '   ' → logprob: -12.503913879394531

Token 611: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0005611348897218704
    2. ' pos' → logprob: -7.500561237335205
    3. '0' → logprob: -12.375560760498047
    4. '=' → logprob: -14.500560760498047
    5. 'n' → logprob: -14.500560760498047
    6. '	pos' → logprob: -14.500560760498047
    7. 'length' → logprob: -15.250560760498047
    8. '(pos' → logprob: -15.250560760498047
    9. 'k' → logprob: -15.250560760498047
    10. 'p' → logprob: -15.625560760498047

Token 612: ''' (ID: 6)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3612495958805084
    2. ' +' → logprob: -1.361249566078186
    3. ' for' → logprob: -3.8612496852874756
    4. '       ' → logprob: -4.7362494468688965
    5. ',' → logprob: -4.9862494468688965
    6. 'for' → logprob: -5.6112494468688965
    7. '   ' → logprob: -6.3612494468688965
    8. '           ' → logprob: -6.4862494468688965
    9. ' in' → logprob: -6.8612494468688965
    10. ':' → logprob: -7.3612494468688965

Token 613: ' jusqu' (ID: 21961)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5156823992729187
    2. ' for' → logprob: -1.3906824588775635
    3. '   ' → logprob: -3.0156824588775635
    4. '       ' → logprob: -3.1406824588775635
    5. ',' → logprob: -4.265682220458984
    6. ':' → logprob: -4.390682220458984
    7. 'for' → logprob: -4.890682220458984
    8. ':
' → logprob: -4.890682220458984
    9. '[' → logprob: -5.265682220458984
    10. '<|end|>' → logprob: -5.640682220458984

Token 614: '’à' (ID: 32891)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3584814667701721
    2. '(pos' → logprob: -1.4834814071655273
    3. '(' → logprob: -3.9834814071655273
    4. ''à' → logprob: -4.233481407165527
    5. 'to' → logprob: -4.858481407165527
    6. ' à' → logprob: -4.983481407165527
    7. 'a' → logprob: -4.983481407165527
    8. 'à' → logprob: -5.233481407165527
    9. 'n' → logprob: -5.608481407165527
    10. 'pos' → logprob: -5.733481407165527

Token 615: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03410641849040985
    2. ' n' → logprob: -3.409106492996216
    3. '(n' → logprob: -8.034106254577637
    4. 'k' → logprob: -9.784106254577637
    5. 'length' → logprob: -10.409106254577637
    6. '(' → logprob: -11.284106254577637
    7. ' (' → logprob: -12.034106254577637
    8. ' ' → logprob: -12.159106254577637
    9. 'range' → logprob: -12.159106254577637
    10. ' length' → logprob: -12.659106254577637

Token 616: ' inclus' (ID: 11891)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4294171333312988
    2. '+' → logprob: -1.5544171333312988
    3. '   ' → logprob: -1.5544171333312988
    4. ':' → logprob: -2.304417133331299
    5. ':
' → logprob: -2.804417133331299
    6. '       ' → logprob: -2.929417133331299
    7. ' in' → logprob: -3.429417133331299
    8. 'for' → logprob: -4.054417133331299
    9. '[' → logprob: -4.179417133331299
    10. ',' → logprob: -4.304417133331299

Token 617: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40338873863220215
    2. '   ' → logprob: -2.028388738632202
    3. '       ' → logprob: -2.278388738632202
    4. ':' → logprob: -2.778388738632202
    5. ':
' → logprob: -3.778388738632202
    6. 'for' → logprob: -6.153388977050781
    7. '[' → logprob: -6.153388977050781
    8. '	for' → logprob: -6.278388977050781
    9. ',' → logprob: -6.778388977050781
    10. '<|end|>' → logprob: -7.653388977050781

Token 618: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28043824434280396
    2. '   ' → logprob: -2.530438184738159
    3. ' for' → logprob: -2.655438184738159
    4. '       ' → logprob: -2.780438184738159
    5. '<|end|>' → logprob: -4.030438423156738
    6. ':
' → logprob: -5.655438423156738
    7. '<|end|>' → logprob: -6.030438423156738
    8. ',' → logprob: -6.030438423156738
    9. '[' → logprob: -6.780438423156738
    10. '+' → logprob: -6.905438423156738

Token 619: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47429782152175903
    2. 'for' (adapté à ' for') → logprob: -0.974297821521759
    3. '   ' → logprob: -8.974297523498535
    4. '       ' → logprob: -10.224297523498535
    5. '	for' → logprob: -10.599297523498535
    6. ' range' → logprob: -11.099297523498535
    7. 'range' → logprob: -11.224297523498535
    8. ' ' → logprob: -13.349297523498535
    9. 'length' → logprob: -14.099297523498535
    10. 'from' → logprob: -14.849297523498535

Token 620: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.001566522754728794
    2. ' length' → logprob: -6.501566410064697
    3. 'l' → logprob: -10.251566886901855
    4. 'leng' → logprob: -10.626566886901855
    5. '	length' → logprob: -13.751566886901855
    6. '_length' → logprob: -13.751566886901855
    7. 'ength' → logprob: -14.251566886901855
    8. '(length' → logprob: -14.376566886901855
    9. 'le' → logprob: -15.501566886901855
    10. '   ' → logprob: -15.501566886901855

Token 621: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11292771995067596
    2. 'in' → logprob: -2.2379276752471924
    3. ' ' → logprob: -10.237927436828613
    4. '   ' → logprob: -10.237927436828613
    5. '	in' → logprob: -12.112927436828613
    6. '```' → logprob: -12.612927436828613
    7. '  ' → logprob: -12.862927436828613
    8. ')' → logprob: -12.925427436828613
    9. 's' → logprob: -13.175427436828613
    10. 'import' → logprob: -13.300427436828613

Token 622: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16023601591587067
    2. ' range' → logprob: -1.9102360010147095
    3. '(range' → logprob: -11.910236358642578
    4. 'pos' → logprob: -12.410236358642578
    5. ' pos' → logprob: -14.785236358642578
    6. ' ' → logprob: -15.160236358642578
    7. '   ' → logprob: -15.285236358642578
    8. '	range' → logprob: -16.535236358642578
    9. '(pos' → logprob: -16.660236358642578
    10. '[pos' → logprob: -17.910236358642578

Token 623: '(pos' (ID: 24566)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.576027512550354
    2. '(pos' → logprob: -0.826027512550354
    3. ' pos' → logprob: -9.701027870178223
    4. 'n' → logprob: -11.451027870178223
    5. '[pos' → logprob: -12.201027870178223
    6. '	pos' → logprob: -12.576027870178223
    7. '(n' → logprob: -12.826027870178223
    8. '(' → logprob: -12.951027870178223
    9. ',pos' → logprob: -13.451027870178223
    10. '_pos' → logprob: -14.576027870178223

Token 624: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17977778613567352
    2. ' +' → logprob: -1.80477774143219
    3. '+
' → logprob: -10.929778099060059
    4. ',' → logprob: -12.304778099060059
    5. ' +
' → logprob: -12.679778099060059
    6. '   ' → logprob: -13.179778099060059
    7. '[' → logprob: -13.179778099060059
    8. '1' → logprob: -13.929778099060059
    9. ' ' → logprob: -14.179778099060059
    10. '+,' → logprob: -14.304778099060059

Token 625: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.750019073486328
    4. '2' → logprob: -18.125019073486328
    5. '```' → logprob: -20.000019073486328
    6. '0' → logprob: -20.062519073486328
    7. 'n' → logprob: -20.250019073486328
    8. '１' → logprob: -20.312519073486328
    9. '
' → logprob: -20.875019073486328
    10. '  ' → logprob: -21.062519073486328

Token 626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. 'n' → logprob: -16.375009536743164
    4. '2' → logprob: -16.500009536743164
    5. '   ' → logprob: -16.750009536743164
    6. 'length' → logprob: -16.875009536743164
    7. '0' → logprob: -17.000009536743164
    8. '
' → logprob: -17.500009536743164
    9. '```' → logprob: -18.625009536743164
    10. 'pos' → logprob: -19.000009536743164

Token 627: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009733980987221003
    2. ',n' → logprob: -7.250973224639893
    3. ' ,' → logprob: -8.25097370147705
    4. ',
' → logprob: -13.87597370147705
    5. '   ' → logprob: -14.37597370147705
    6. 'n' → logprob: -15.25097370147705
    7. '+' → logprob: -16.000972747802734
    8. ',length' → logprob: -16.500972747802734
    9. '‌,' → logprob: -17.000972747802734
    10. '```' → logprob: -17.125972747802734

Token 628: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04858794063329697
    2. ' n' → logprob: -3.0485880374908447
    3. '   ' → logprob: -15.298587799072266
    4. '	n' → logprob: -15.673587799072266
    5. '(n' → logprob: -16.423587799072266
    6. ' ' → logprob: -16.548587799072266
    7. '       ' → logprob: -19.173587799072266
    8. ')n' → logprob: -19.423587799072266
    9. '    ' → logprob: -19.673587799072266
    10. '  ' → logprob: -19.798587799072266

Token 629: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132651150226593
    2. ' +' → logprob: -1.313265085220337
    3. '+
' → logprob: -12.938264846801758
    4. ' +
' → logprob: -14.438264846801758
    5. '   ' → logprob: -15.688264846801758
    6. ' ' → logprob: -16.938264846801758
    7. '):
' → logprob: -17.063264846801758
    8. '＋' → logprob: -17.063264846801758
    9. '[' → logprob: -17.188264846801758
    10. '+)' → logprob: -17.813264846801758

Token 630: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '2' → logprob: -17.000011444091797
    4. '   ' → logprob: -17.125011444091797
    5. '+' → logprob: -17.625011444091797
    6. '```' → logprob: -18.625011444091797
    7. 'length' → logprob: -19.625011444091797
    8. '(n' → logprob: -20.250011444091797
    9. '(' → logprob: -20.250011444091797
    10. ')' → logprob: -20.750011444091797

Token 631: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.250005722045898
    3. 'length' → logprob: -15.500005722045898
    4. '2' → logprob: -16.2500057220459
    5. 'n' → logprob: -16.5000057220459
    6. '+' → logprob: -16.6250057220459
    7. '   ' → logprob: -17.3750057220459
    8. '(n' → logprob: -18.0000057220459
    9. '```' → logprob: -18.7500057220459
    10. '
' → logprob: -19.1250057220459

Token 632: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016211025416851044
    2. '):
' → logprob: -4.141211032867432
    3. ':' → logprob: -9.141210556030273
    4. '       ' → logprob: -9.891210556030273
    5. ')' → logprob: -11.766210556030273
    6. '):
' → logprob: -12.516210556030273
    7. '   ' → logprob: -13.266210556030273
    8. '           ' → logprob: -13.391210556030273
    9. '):

' → logprob: -13.766210556030273
    10. ' ):' → logprob: -14.016210556030273

Token 633: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.035582125186920166
    2. '       ' → logprob: -3.4105820655822754
    3. '<|end|>' → logprob: -7.660582065582275
    4. ':' → logprob: -8.160582542419434
    5. '	       ' → logprob: -8.660582542419434
    6. '               ' → logprob: -8.785582542419434
    7. '[' → logprob: -9.160582542419434
    8. '```' → logprob: -9.160582542419434
    9. '#' → logprob: -9.285582542419434
    10. '   ' → logprob: -9.660582542419434

Token 634: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48482489585876465
    2. 'offset' → logprob: -1.9848248958587646
    3. 'if' → logprob: -2.1098248958587646
    4. '#' (adapté à ' #') → logprob: -3.3598248958587646
    5. ' if' → logprob: -3.4848248958587646
    6. '           ' → logprob: -3.9848248958587646
    7. 'mask' → logprob: -4.859825134277344
    8. 'diff' → logprob: -4.984825134277344
    9. ' offset' → logprob: -5.734825134277344
    10. 'val' → logprob: -6.109825134277344

Token 635: ' Cr' (ID: 5790)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.217206597328186
    2. '#' → logprob: -2.2172064781188965
    3. 'val' → logprob: -2.8422064781188965
    4. 'segment' → logprob: -2.9672064781188965
    5. 'diff' → logprob: -3.2172064781188965
    6. '           ' → logprob: -3.2172064781188965
    7. 'cur' → logprob: -3.3422064781188965
    8. 'length' → logprob: -3.5922064781188965
    9. 'mask' → logprob: -3.7172064781188965
    10. 'xor' → logprob: -3.7172064781188965

Token 636: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8089953660964966
    2. '#' → logprob: -1.1839953660964966
    3. 'ef' → logprob: -3.433995246887207
    4. 'ed' → logprob: -3.683995246887207
    5. 'buf' → logprob: -3.683995246887207
    6. 'ack' → logprob: -4.183995246887207
    7. '   ' → logprob: -4.558995246887207
    8. '       ' → logprob: -4.683995246887207
    9. 'eat' → logprob: -4.683995246887207
    10. 'et' → logprob: -4.808995246887207

Token 637: ' une' (ID: 2463)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.309577226638794
    2. 'a' → logprob: -1.684577226638794
    3. 'mask' → logprob: -2.184577226638794
    4. 'segment' → logprob: -2.684577226638794
    5. 'diff' → logprob: -3.184577226638794
    6. 'offset' → logprob: -3.184577226638794
    7. 'arr' → logprob: -3.934577226638794
    8. '#' → logprob: -3.934577226638794
    9. 'sub' → logprob: -4.184576988220215
    10. 'length' → logprob: -4.309576988220215

Token 638: ' sous' (ID: 14487)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.2723641097545624
    2. 'segment' → logprob: -2.3973641395568848
    3. 'slice' → logprob: -3.6473641395568848
    4. 'sub' → logprob: -3.7723641395568848
    5. 'window' → logprob: -4.397364139556885
    6. ' segment' → logprob: -4.647364139556885
    7. ' mask' → logprob: -4.772364139556885
    8. 'diff' → logprob: -5.147364139556885
    9. '#' → logprob: -5.522364139556885
    10. 'subset' → logprob: -5.647364139556885

Token 639: '-table' (ID: 35909)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.3115607500076294
    2. 'buf' → logprob: -1.9365607500076294
    3. 'table' → logprob: -2.68656063079834
    4. 'arr' → logprob: -3.68656063079834
    5. '_buf' → logprob: -4.68656063079834
    6. '_table' → logprob: -4.81156063079834
    7. 'buffer' → logprob: -5.56156063079834
    8. '_array' → logprob: -6.06156063079834
    9. 'sequence' → logprob: -6.68656063079834
    10. ' table' → logprob: -7.31156063079834

Token 640: ' correspondant' (ID: 146058)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.047478340566158295
    2. '=' → logprob: -3.797478437423706
    3. '           ' → logprob: -3.797478437423706
    4. 'table' → logprob: -8.047478675842285
    5. 'slice' → logprob: -8.797478675842285
    6. 'segment' → logprob: -8.922478675842285
    7. '_table' → logprob: -9.297478675842285
    8. 'array' → logprob: -9.672478675842285
    9. 'le' → logprob: -9.797478675842285
    10. 's' → logprob: -9.922478675842285

Token 641: ' aux' (ID: 5850)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9977041482925415
    2. ' à' → logprob: -1.7477041482925415
    3. '=' → logprob: -1.8727041482925415
    4. 'à' → logprob: -2.247704029083252
    5. '[' → logprob: -3.497704029083252
    6. ' =' → logprob: -3.497704029083252
    7. ' au' → logprob: -3.497704029083252
    8. '            ' → logprob: -3.747704029083252
    9. ' aux' → logprob: -3.872704029083252
    10. 'au' → logprob: -4.372704029083252

Token 642: ' éléments' (ID: 57375)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.042708080261945724
    2. 'offset' → logprob: -3.542708158493042
    3. ' table' → logprob: -5.167707920074463
    4. 'length' → logprob: -5.542707920074463
    5. 'np' → logprob: -7.167707920074463
    6. 'buf' → logprob: -7.417707920074463
    7. 'buffer' → logprob: -7.667707920074463
    8. 'k' → logprob: -7.792707920074463
    9. ' offset' → logprob: -8.417708396911621
    10. '(table' → logprob: -8.667708396911621

Token 643: ' [' (ID: 723)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6951597929000854
    2. ' =' → logprob: -0.8201597929000854
    3. '           ' → logprob: -2.945159912109375
    4. 'table' → logprob: -5.820159912109375
    5. ' of' → logprob: -7.070159912109375
    6. 'of' → logprob: -7.320159912109375
    7. ')table' → logprob: -7.570159912109375
    8. '[offset' → logprob: -7.695159912109375
    9. '(table' → logprob: -8.070159912109375
    10. '[' → logprob: -8.195159912109375

Token 644: 'offset' (ID: 6680)
  Prédit: 'offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.4821215271949768
    2. 'pos' → logprob: -0.9821215271949768
    3. ' offset' → logprob: -5.607121467590332
    4. ' pos' → logprob: -6.732121467590332
    5. 'length' → logprob: -7.232121467590332
    6. '1' → logprob: -7.482121467590332
    7. '(' → logprob: -8.107121467590332
    8. 'table' → logprob: -8.607121467590332
    9. '   ' → logprob: -8.607121467590332
    10. '(offset' → logprob: -8.607121467590332

Token 645: '(length' (ID: 47037)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.1986081600189209
    2. '[pos' → logprob: -2.573608160018921
    3. '(pos' → logprob: -3.198608160018921
    4. '[offset' → logprob: -3.448608160018921
    5. '(offset' → logprob: -4.1986083984375
    6. 'offset' → logprob: -5.3236083984375
    7. '[length' → logprob: -5.6986083984375
    8. '(length' → logprob: -6.0736083984375
    9. '   ' → logprob: -6.9486083984375
    10. 'pos' → logprob: -7.0736083984375

Token 646: '):' (ID: 3127)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0914605855941772
    2. ')' → logprob: -1.2164605855941772
    3. '):' → logprob: -1.5914605855941772
    4. '+' → logprob: -2.591460704803467
    5. ':' → logprob: -3.591460704803467
    6. ')+' → logprob: -3.716460704803467
    7. '()' → logprob: -4.341460704803467
    8. '():' → logprob: -5.466460704803467
    9. ' :' → logprob: -5.466460704803467
    10. '(pos' → logprob: -5.841460704803467

Token 647: 'offset' (ID: 6680)
  Prédit: 'offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.13042503595352173
    2. ' offset' → logprob: -2.130424976348877
    3. 'pos' → logprob: -6.130424976348877
    4. 'length' → logprob: -8.005425453186035
    5. ' pos' → logprob: -8.255425453186035
    6. '   ' → logprob: -8.380425453186035
    7. '               ' → logprob: -9.255425453186035
    8. '           ' → logprob: -9.505425453186035
    9. ' length' → logprob: -9.630425453186035
    10. ' ' → logprob: -9.630425453186035

Token 648: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.030031977221369743
    2. '(pos' → logprob: -3.65503191947937
    3. 'length' → logprob: -6.530032157897949
    4. '(' → logprob: -6.905032157897949
    5. '(position' → logprob: -7.155032157897949
    6. 'pos' → logprob: -8.78003215789795
    7. '(offset' → logprob: -9.53003215789795
    8. ']' → logprob: -9.90503215789795
    9. '[length' → logprob: -10.28003215789795
    10. ' (' → logprob: -10.53003215789795

Token 649: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9281249046325684
    2. ')+' → logprob: -1.1781249046325684
    3. ')]' → logprob: -1.5531249046325684
    4. '+' → logprob: -3.5531249046325684
    5. '):' → logprob: -3.6781249046325684
    6. '()' → logprob: -4.053124904632568
    7. ' +' → logprob: -5.928124904632568
    8. '()+' → logprob: -6.053124904632568
    9. '   ' → logprob: -6.303124904632568
    10. ']+' → logprob: -6.678124904632568

Token 650: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009113443666137755
    2. 'length' → logprob: -7.250911235809326
    3. ' ' → logprob: -9.625911712646484
    4. '+' → logprob: -9.750911712646484
    5. '(' → logprob: -11.125911712646484
    6. '(length' → logprob: -11.125911712646484
    7. 'pos' → logprob: -11.375911712646484
    8. ')' → logprob: -12.000911712646484
    9. ' length' → logprob: -12.000911712646484
    10. '```' → logprob: -12.500911712646484

Token 651: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1666235774755478
    2. ')]' → logprob: -1.916623592376709
    3. '()]' → logprob: -6.666623592376709
    4. '])' → logprob: -7.041623592376709
    5. ']]' → logprob: -7.166623592376709
    6. ']
' → logprob: -7.166623592376709
    7. '],' → logprob: -7.416623592376709
    8. '           ' → logprob: -7.541623592376709
    9. ']:' → logprob: -7.916623592376709
    10. ')' → logprob: -8.16662311553955

Token 652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31321778893470764
    2. ' =' → logprob: -2.688217878341675
    3. '[offset' → logprob: -2.813217878341675
    4. ']' → logprob: -3.313217878341675
    5. 'offset' → logprob: -3.563217878341675
    6. 'table' → logprob: -3.813217878341675
    7. '=' → logprob: -4.188217639923096
    8. ',' → logprob: -4.813217639923096
    9. '][' → logprob: -5.063217639923096
    10. 'sub' → logprob: -5.313217639923096

Token 653: ' #' (ID: 1069)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.10386785119771957
    2. 'table' → logprob: -3.478867769241333
    3. 'segment' → logprob: -4.103868007659912
    4. 'subset' → logprob: -4.603868007659912
    5. '           ' → logprob: -4.728868007659912
    6. 'tmp' → logprob: -4.978868007659912
    7. ' sub' → logprob: -5.353868007659912
    8. 'slice' → logprob: -5.603868007659912
    9. 'cur' → logprob: -6.103868007659912
    10. 's' → logprob: -6.728868007659912

Token 654: ' offset' (ID: 8985)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.43238717317581177
    2. 'table' → logprob: -1.932387113571167
    3. ' sub' → logprob: -2.932387113571167
    4. 'segment' → logprob: -3.182387113571167
    5. ' table' → logprob: -3.432387113571167
    6. 'offset' → logprob: -3.932387113571167
    7. 'subset' → logprob: -3.932387113571167
    8. ' segment' → logprob: -4.557387351989746
    9. '           ' → logprob: -5.057387351989746
    10. 'slice' → logprob: -5.432387351989746

Token 655: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.22938130795955658
    2. '_table' → logprob: -1.9793813228607178
    3. '_val' → logprob: -3.8543813228607178
    4. '_length' → logprob: -4.479381084442139
    5. '_end' → logprob: -4.729381084442139
    6. 'length' → logprob: -5.229381084442139
    7. '_next' → logprob: -5.229381084442139
    8. '_start' → logprob: -6.104381084442139
    9. '_len' → logprob: -6.354381084442139
    10. '_index' → logprob: -6.604381084442139

Token 656: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5259661674499512
    2. '+' → logprob: -1.2759661674499512
    3. ' +' → logprob: -3.400966167449951
    4. ')' → logprob: -3.650966167449951
    5. '(length' → logprob: -3.900966167449951
    6. ':' → logprob: -4.025966167449951
    7. ':length' → logprob: -4.525966167449951
    8. ')]' → logprob: -5.275966167449951
    9. '   ' → logprob: -6.150966167449951
    10. '_table' → logprob: -6.275966167449951

Token 657: ' donne' (ID: 30004)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6606115102767944
    2. ':length' → logprob: -2.285611629486084
    3. '+' → logprob: -2.785611629486084
    4. '()' → logprob: -3.160611629486084
    5. 'def' → logprob: -3.160611629486084
    6. '(length' → logprob: -3.160611629486084
    7. ']' → logprob: -3.535611629486084
    8. 'offset' → logprob: -3.535611629486084
    9. ',' → logprob: -3.660611629486084
    10. '(' → logprob: -4.035611629486084

Token 658: ' l' (ID: 305)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.2224815934896469
    2. '1' → logprob: -1.847481608390808
    3. ' offset' → logprob: -3.5974814891815186
    4. '(' → logprob: -5.347481727600098
    5. ' ' → logprob: -6.097481727600098
    6. '2' → logprob: -6.222481727600098
    7. '(offset' → logprob: -6.222481727600098
    8. '   ' → logprob: -6.972481727600098
    9. ')' → logprob: -7.597481727600098
    10. '```' → logprob: -7.847481727600098

Token 659: '’' (ID: 438)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.26507100462913513
    2. ' offset' → logprob: -1.6400710344314575
    3. '1' → logprob: -4.265070915222168
    4. '2' → logprob: -5.140070915222168
    5. 'start' → logprob: -6.140070915222168
    6. '(' → logprob: -6.265070915222168
    7. ' ' → logprob: -6.390070915222168
    8. 'next' → logprob: -6.515070915222168
    9. ' next' → logprob: -6.640070915222168
    10. '`' → logprob: -7.140070915222168

Token 660: 'index' (ID: 2257)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.3017876148223877
    2. '1' → logprob: -1.5517876148223877
    3. ' offset' → logprob: -4.176787376403809
    4. '(' → logprob: -4.551787376403809
    5. '<<' → logprob: -5.301787376403809
    6. 'start' → logprob: -5.801787376403809
    7. 'return' → logprob: -5.801787376403809
    8. 'length' → logprob: -6.551787376403809
    9. '```' → logprob: -6.676787376403809
    10. ' ' → logprob: -6.801787376403809

Token 661: ' de' (ID: 334)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.7671958208084106
    2. '(offset' → logprob: -0.7671958208084106
    3. '(' → logprob: -3.267195701599121
    4. 'offset' → logprob: -4.517195701599121
    5. '[offset' → logprob: -5.017195701599121
    6. '+' → logprob: -5.392195701599121
    7. ')' → logprob: -6.142195701599121
    8. '(
' → logprob: -6.267195701599121
    9. '[length' → logprob: -6.767195701599121
    10. 'length' → logprob: -7.142195701599121

Token 662: ' début' (ID: 29589)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.06579279154539108
    2. 'length' → logprob: -3.1907927989959717
    3. '(offset' → logprob: -4.815792560577393
    4. ' offset' → logprob: -4.940792560577393
    5. '(length' → logprob: -5.815792560577393
    6. '(' → logprob: -7.565792560577393
    7. 'next' → logprob: -7.565792560577393
    8. '1' → logprob: -7.565792560577393
    9. 'start' → logprob: -7.565792560577393
    10. ' length' → logprob: -7.940792560577393

Token 663: ',' (ID: 11)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.40308958292007446
    2. '(offset' → logprob: -1.4030895233154297
    3. 'offset' → logprob: -3.6530895233154297
    4. '(' → logprob: -4.27808952331543
    5. 'length' → logprob: -5.02808952331543
    6. ')' → logprob: -5.15308952331543
    7. ' +' → logprob: -5.40308952331543
    8. '+' → logprob: -5.65308952331543
    9. ']' → logprob: -5.77808952331543
    10. ',' → logprob: -5.77808952331543

Token 664: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.07892779260873795
    2. ' offset' → logprob: -2.578927755355835
    3. '           ' → logprob: -10.828927993774414
    4. '   ' → logprob: -12.078927993774414
    5. '               ' → logprob: -12.453927993774414
    6. '	offset' → logprob: -12.578927993774414
    7. '[offset' → logprob: -13.703927993774414
    8. '(offset' → logprob: -13.828927993774414
    9. '                   ' → logprob: -14.703927993774414
    10. '       ' → logprob: -14.703927993774414

Token 665: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.00030972150852903724
    2. 'length' → logprob: -8.250309944152832
    3. '[length' → logprob: -10.375309944152832
    4. ',length' → logprob: -11.375309944152832
    5. ')' → logprob: -13.000309944152832
    6. ':length' → logprob: -13.375309944152832
    7. ' length' → logprob: -13.875309944152832
    8. ' (' → logprob: -14.750309944152832
    9. '(' → logprob: -15.500309944152832
    10. '	length' → logprob: -16.000308990478516

Token 666: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0194886215031147
    2. '(length' → logprob: -4.01948881149292
    3. ' +' → logprob: -6.89448881149292
    4. ')' → logprob: -8.394488334655762
    5. 'length' → logprob: -10.269488334655762
    6. '(' → logprob: -10.519488334655762
    7. '[length' → logprob: -11.769488334655762
    8. '),' → logprob: -12.019488334655762
    9. '+)' → logprob: -12.269488334655762
    10. '):' → logprob: -12.269488334655762

Token 667: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011188744247192517
    2. ' ' → logprob: -10.00011157989502
    3. 'length' → logprob: -10.50011157989502
    4. ')' → logprob: -11.25011157989502
    5. '   ' → logprob: -11.62511157989502
    6. '(' → logprob: -12.00011157989502
    7. '2' → logprob: -12.87511157989502
    8. '+' → logprob: -13.12511157989502
    9. '(length' → logprob: -13.50011157989502
    10. 'pos' → logprob: -13.75011157989502

Token 668: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3319124011322856e-05
    2. '(' → logprob: -11.375022888183594
    3. ' ' → logprob: -12.125022888183594
    4. ')' → logprob: -12.875022888183594
    5. '```' → logprob: -13.125022888183594
    6. '   ' → logprob: -14.625022888183594
    7. '+' → logprob: -14.875022888183594
    8. '
' → logprob: -15.625022888183594
    9. '2' → logprob: -15.875022888183594
    10. '`' → logprob: -16.500022888183594

Token 669: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10204461961984634
    2. '):' → logprob: -2.6020445823669434
    3. ')]' → logprob: -3.8520445823669434
    4. ')
' → logprob: -7.977044582366943
    5. '))' → logprob: -8.102045059204102
    6. '())' → logprob: -8.227045059204102
    7. ')])' → logprob: -8.352045059204102
    8. '):
' → logprob: -9.352045059204102
    9. '()' → logprob: -9.352045059204102
    10. ')+' → logprob: -9.477045059204102

Token 670: ' celui' (ID: 27857)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40993884205818176
    2. ')' → logprob: -1.2849388122558594
    3. ',' → logprob: -4.284938812255859
    4. '):' → logprob: -4.409938812255859
    5. ')]' → logprob: -5.159938812255859
    6. '+' → logprob: -5.159938812255859
    7. '),' → logprob: -5.784938812255859
    8. ' :' → logprob: -6.034938812255859
    9. ':return' → logprob: -6.159938812255859
    10. '(offset' → logprob: -6.284938812255859

Token 671: ' de' (ID: 334)
  Prédit: '(offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(offset' → logprob: -0.18064020574092865
    2. '(' → logprob: -2.68064022064209
    3. '=' → logprob: -2.80564022064209
    4. 'offset' → logprob: -3.68064022064209
    5. 'de' → logprob: -5.55564022064209
    6. '(length' → logprob: -6.55564022064209
    7. 'def' → logprob: -6.55564022064209
    8. '[offset' → logprob: -6.80564022064209
    9. '(
' → logprob: -7.05564022064209
    10. 'of' → logprob: -7.30564022064209

Token 672: ' fin' (ID: 2131)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.2924295663833618
    2. 'fin' → logprob: -1.4174295663833618
    3. ' fin' → logprob: -5.667429447174072
    4. ' début' → logprob: -6.167429447174072
    5. 'offset' → logprob: -6.417429447174072
    6. 'la' → logprob: -6.917429447174072
    7. 'de' → logprob: -7.292429447174072
    8. '(offset' → logprob: -7.417429447174072
    9. ' la' → logprob: -7.417429447174072
    10. '(fin' → logprob: -8.16742992401123

Token 673: ' pour' (ID: 1930)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.25335097312927246
    2. '(offset' → logprob: -2.7533509731292725
    3. 'offset' → logprob: -2.8783509731292725
    4. ']' → logprob: -3.6283509731292725
    5. ':' → logprob: -3.7533509731292725
    6. '           ' → logprob: -4.253351211547852
    7. ' =' → logprob: -4.378351211547852
    8. '][' → logprob: -5.253351211547852
    9. 'table' → logprob: -5.378351211547852
    10. '[' → logprob: -5.503351211547852

Token 674: ' cette' (ID: 7696)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.10640992969274521
    2. ' offset' → logprob: -2.356410026550293
    3. 'slice' → logprob: -5.731410026550293
    4. 'l' → logprob: -7.856410026550293
    5. '[offset' → logprob: -7.856410026550293
    6. '(offset' → logprob: -8.356410026550293
    7. 'la' → logprob: -8.606410026550293
    8. '   ' → logprob: -8.731410026550293
    9. 'table' → logprob: -8.731410026550293
    10. ' slicing' → logprob: -8.856410026550293

Token 675: ' longueur' (ID: 104613)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.3911314010620117
    2. ')' → logprob: -2.0161314010620117
    3. 'length' → logprob: -2.5161314010620117
    4. ']' → logprob: -2.8911314010620117
    5. ' offset' → logprob: -4.391131401062012
    6. '+' → logprob: -5.016131401062012
    7. 'def' → logprob: -5.266131401062012
    8. '[offset' → logprob: -5.391131401062012
    9. '_table' → logprob: -5.516131401062012
    10. ' length' → logprob: -5.766131401062012

Token 676: '
' (ID: 198)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.1737864911556244
    2. '(offset' → logprob: -2.2987864017486572
    3. 'offset' → logprob: -4.048786640167236
    4. '           ' → logprob: -4.048786640167236
    5. ':' → logprob: -4.298786640167236
    6. '[' → logprob: -5.923786640167236
    7. ']' → logprob: -6.423786640167236
    8. '][' → logprob: -6.673786640167236
    9. '   ' → logprob: -7.673786640167236
    10. '(' → logprob: -7.798786640167236

Token 677: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.942940890789032
    2. '[offset' → logprob: -1.4429409503936768
    3. ':' → logprob: -2.3179409503936768
    4. 'table' → logprob: -3.0679409503936768
    5. 'offset' → logprob: -3.0679409503936768
    6. ']' → logprob: -3.6929409503936768
    7. '[start' → logprob: -3.8179409503936768
    8. ',' → logprob: -4.442940711975098
    9. '[' → logprob: -4.442940711975098
    10. '][' → logprob: -4.567940711975098

Token 678: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.21284550428390503
    2. 'segment' → logprob: -2.46284556388855
    3. 'table' → logprob: -3.33784556388855
    4. 'tmp' → logprob: -4.462845325469971
    5. 'offset' → logprob: -4.462845325469971
    6. 'subset' → logprob: -4.837845325469971
    7. '           ' → logprob: -4.962845325469971
    8. 'slice' → logprob: -5.212845325469971
    9. 'seg' → logprob: -5.712845325469971
    10. 'cur' → logprob: -6.212845325469971

Token 679: 'table' (ID: 4202)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.003685936564579606
    2. 'table' → logprob: -5.62868595123291
    3. '_array' → logprob: -10.25368595123291
    4. '_' → logprob: -11.25368595123291
    5. ' =' → logprob: -11.25368595123291
    6. '_tab' → logprob: -12.12868595123291
    7. 'array' → logprob: -12.37868595123291
    8. '=' → logprob: -12.50368595123291
    9. '_tbl' → logprob: -13.12868595123291
    10. 'Table' → logprob: -13.62868595123291

Token 680: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740854501724243
    2. ' =' → logprob: -0.9740854501724243
    3. '[' → logprob: -12.474085807800293
    4. '   ' → logprob: -13.349085807800293
    5. ')' → logprob: -14.224085807800293
    6. ' ' → logprob: -14.724085807800293
    7. ',' → logprob: -14.974085807800293
    8. '＝' → logprob: -15.224085807800293
    9. '=
' → logprob: -15.599085807800293
    10. ']' → logprob: -15.849085807800293

Token 681: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.020912738516926765
    2. ' table' → logprob: -3.8959126472473145
    3. 'offset' → logprob: -8.645913124084473
    4. '   ' → logprob: -8.770913124084473
    5. ' offset' → logprob: -11.270913124084473
    6. 'np' → logprob: -11.520913124084473
    7. ' ' → logprob: -12.520913124084473
    8. '	table' → logprob: -12.770913124084473
    9. ' np' → logprob: -13.270913124084473
    10. '  ' → logprob: -13.270913124084473

Token 682: '[offset' (ID: 84200)
  Prédit: '[offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[offset' → logprob: -2.5822400857578032e-05
    2. '[' → logprob: -10.875025749206543
    3. 'offset' → logprob: -12.750025749206543
    4. '[
' → logprob: -13.125025749206543
    5. '   ' → logprob: -13.500025749206543
    6. '(offset' → logprob: -15.250025749206543
    7. ' [' → logprob: -16.62502670288086
    8. '```' → logprob: -16.87502670288086
    9. '	offset' → logprob: -17.00002670288086
    10. '               ' → logprob: -17.00002670288086

Token 683: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -6.392202976712724e-06
    2. '(offset' → logprob: -12.500006675720215
    3. '(' → logprob: -13.625006675720215
    4. ',length' → logprob: -14.250006675720215
    5. '[length' → logprob: -15.000006675720215
    6. 'length' → logprob: -15.625006675720215
    7. '(len' → logprob: -15.875006675720215
    8. ' (' → logprob: -16.7500057220459
    9. '(level' → logprob: -17.2500057220459
    10. '(size' → logprob: -18.0000057220459

Token 684: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0654158964753151
    2. ')' → logprob: -2.940415859222412
    3. ':' → logprob: -5.565415859222412
    4. ':length' → logprob: -5.565415859222412
    5. ')+' → logprob: -7.440415859222412
    6. '(length' → logprob: -7.940415859222412
    7. '):(' → logprob: -7.940415859222412
    8. 'length' → logprob: -8.31541633605957
    9. '[length' → logprob: -8.44041633605957
    10. ' ):' → logprob: -8.56541633605957

Token 685: 'offset' (ID: 6680)
  Prédit: 'offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -3.786196975852363e-05
    2. ' offset' → logprob: -10.250038146972656
    3. '(offset' → logprob: -13.125038146972656
    4. '	offset' → logprob: -15.625038146972656
    5. '   ' → logprob: -16.125038146972656
    6. '[offset' → logprob: -16.375038146972656
    7. '
' → logprob: -17.625038146972656
    8. 'off' → logprob: -18.250038146972656
    9. '.offset' → logprob: -19.375038146972656
    10. '       ' → logprob: -19.500038146972656

Token 686: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.00010139751975657418
    2. 'length' → logprob: -9.250101089477539
    3. '[length' → logprob: -13.000101089477539
    4. ' length' → logprob: -13.125101089477539
    5. ' (' → logprob: -14.500101089477539
    6. '(' → logprob: -15.500101089477539
    7. ',length' → logprob: -15.500101089477539
    8. '	length' → logprob: -16.62510108947754
    9. ':length' → logprob: -17.50010108947754
    10. '((' → logprob: -19.25010108947754

Token 687: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02868512272834778
    2. '(length' → logprob: -3.6536850929260254
    3. 'length' → logprob: -6.278685092926025
    4. ' +' → logprob: -7.778685092926025
    5. '[length' → logprob: -9.903685569763184
    6. ' length' → logprob: -10.528685569763184
    7. '   ' → logprob: -12.903685569763184
    8. '(' → logprob: -12.903685569763184
    9. ':length' → logprob: -13.403685569763184
    10. ',length' → logprob: -13.778685569763184

Token 688: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -11.875008583068848
    3. 'length' → logprob: -13.500008583068848
    4. '+' → logprob: -15.500008583068848
    5. '(length' → logprob: -15.625008583068848
    6. '(' → logprob: -16.125009536743164
    7. '2' → logprob: -17.000009536743164
    8. '   ' → logprob: -18.250009536743164
    9. '```' → logprob: -18.625009536743164
    10. ' length' → logprob: -19.125009536743164

Token 689: '1' (ID: 16)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.7048159837722778
    2. 'length' → logprob: -1.0798159837722778
    3. '1' → logprob: -1.9548159837722778
    4. '(' → logprob: -3.9548158645629883
    5. '+' → logprob: -5.329815864562988
    6. ' length' → logprob: -8.829815864562988
    7. ' (' → logprob: -9.204815864562988
    8. '[length' → logprob: -10.079815864562988
    9. '   ' → logprob: -10.329815864562988
    10. '(next' → logprob: -10.329815864562988

Token 690: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002695266855880618
    2. ']' → logprob: -6.002695083618164
    3. ')' → logprob: -9.127695083618164
    4. ']]' → logprob: -10.377695083618164
    5. ')].' → logprob: -10.752695083618164
    6. ')][' → logprob: -11.502695083618164
    7. ')]
' → logprob: -12.127695083618164
    8. '[' → logprob: -12.252695083618164
    9. ']+' → logprob: -12.377695083618164
    10. '][' → logprob: -12.627695083618164

Token 691: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12724977731704712
    2. '            ' → logprob: -2.6272497177124023
    3. '<|end|>' → logprob: -4.002249717712402
    4. ' ' → logprob: -4.627249717712402
    5. ')' → logprob: -4.752249717712402
    6. '[' → logprob: -5.252249717712402
    7. '               ' → logprob: -6.752249717712402
    8. '          ' → logprob: -7.377249717712402
    9. '            
' → logprob: -7.627249717712402
    10. ' )' → logprob: -7.627249717712402

Token 692: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4394232928752899
    2. ' if' → logprob: -1.9394233226776123
    3. ' ' → logprob: -2.5644233226776123
    4. '[' → logprob: -2.6894233226776123
    5. '            ' → logprob: -4.189423084259033
    6. '               ' → logprob: -4.564423084259033
    7. ')' → logprob: -4.939423084259033
    8. '<|end|>' → logprob: -5.439423084259033
    9. 'if' → logprob: -5.564423084259033
    10. '+' → logprob: -5.689423084259033

Token 693: ' Res' (ID: 2317)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26548272371292114
    2. 'expected' → logprob: -3.3904826641082764
    3. 'segment' → logprob: -3.3904826641082764
    4. 'current' → logprob: -3.5154826641082764
    5. 'mask' → logprob: -3.8904826641082764
    6. '#' → logprob: -4.1404829025268555
    7. 'prefix' → logprob: -4.5154829025268555
    8. 'window' → logprob: -4.7654829025268555
    9. 'diff' → logprob: -5.0154829025268555
    10. 'target' → logprob: -5.1404829025268555

Token 694: 'hape' (ID: 66254)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.29976680874824524
    2. 't' → logprob: -1.7997667789459229
    3. 'ults' → logprob: -2.924766778945923
    4. 'ret' → logprob: -4.424767017364502
    5. 'et' → logprob: -4.924767017364502
    6. 's' → logprob: -5.049767017364502
    7. 'ets' → logprob: -6.299767017364502
    8. 'u' → logprob: -6.674767017364502
    9. 'result' → logprob: -6.674767017364502
    10. 'sub' → logprob: -6.674767017364502

Token 695: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.44635009765625
    2. '(sub' → logprob: -1.44635009765625
    3. '(' → logprob: -2.57135009765625
    4. '_sub' → logprob: -3.82135009765625
    5. ' =' → logprob: -4.94635009765625
    6. '(-' → logprob: -5.44635009765625
    7. '=sub' → logprob: -5.44635009765625
    8. '((' → logprob: -5.94635009765625
    9. ' sub' → logprob: -6.19635009765625
    10. ')' → logprob: -6.57135009765625

Token 696: 'table' (ID: 4202)
  Prédit: 'table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -6.706686690449715e-05
    2. '_table' → logprob: -9.750066757202148
    3. 'tab' → logprob: -12.125066757202148
    4. '(table' → logprob: -12.875066757202148
    5. 'array' → logprob: -14.875066757202148
    6. 'able' → logprob: -15.875066757202148
    7. '(' → logprob: -16.62506675720215
    8. ' table' → logprob: -17.37506675720215
    9. 'Table' → logprob: -17.50006675720215
    10. ')table' → logprob: -17.62506675720215

Token 697: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6742148399353027
    2. '(sub' → logprob: -1.6742148399353027
    3. '=' → logprob: -2.4242148399353027
    4. '(' → logprob: -2.5492148399353027
    5. '((' → logprob: -2.9242148399353027
    6. '(-' → logprob: -3.4242148399353027
    7. '=sub' → logprob: -4.049214839935303
    8. '(len' → logprob: -4.299214839935303
    9. '.reshape' → logprob: -5.549214839935303
    10. '(length' → logprob: -5.674214839935303

Token 698: ' la' (ID: 557)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(length' → logprob: -1.0083750486373901
    2. '(' → logprob: -1.1333750486373901
    3. 'sub' → logprob: -2.1333751678466797
    4. '(-' → logprob: -2.7583751678466797
    5. 'length' → logprob: -3.0083751678466797
    6. '(len' → logprob: -3.2583751678466797
    7. '(sub' → logprob: -3.7583751678466797
    8. 'len' → logprob: -4.88337516784668
    9. 'pos' → logprob: -5.75837516784668
    10. '(n' → logprob: -6.38337516784668

Token 699: ' transformer' (ID: 59595)
  Prédit: 'reshape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reshape' → logprob: -0.6241028308868408
    2. '.reshape' → logprob: -1.4991028308868408
    3. 'shape' → logprob: -1.6241028308868408
    4. 'length' → logprob: -4.249102592468262
    5. '.shape' → logprob: -5.124102592468262
    6. ' shape' → logprob: -5.249102592468262
    7. 'len' → logprob: -5.749102592468262
    8. 'pos' → logprob: -5.874102592468262
    9. '(' → logprob: -5.999102592468262
    10. 'sub' → logprob: -6.499102592468262

Token 700: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2894757091999054
    2. '(-' → logprob: -1.539475679397583
    3. '(sub' → logprob: -3.789475679397583
    4. '(len' → logprob: -5.039475917816162
    5. '.reshape' → logprob: -5.414475917816162
    6. '((' → logprob: -6.664475917816162
    7. '((-' → logprob: -8.414475440979004
    8. 'sub' → logprob: -8.414475440979004
    9. '   ' → logprob: -8.664475440979004
    10. '(shape' → logprob: -8.789475440979004

Token 701: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48698902130126953
    2. '(-' → logprob: -0.9869890213012695
    3. '(offset' → logprob: -4.6119890213012695
    4. '(sub' → logprob: -6.9869890213012695
    5. 'offset' → logprob: -7.4869890213012695
    6. '(np' → logprob: -8.36198902130127
    7. '(len' → logprob: -8.48698902130127
    8. ' (' → logprob: -8.86198902130127
    9. 'sub' → logprob: -8.98698902130127
    10. '2' → logprob: -8.98698902130127

Token 702: ' tableau' (ID: 67053)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11147298663854599
    2. '(-' → logprob: -2.6114730834960938
    3. '(n' → logprob: -4.486473083496094
    4. '(length' → logprob: -4.736473083496094
    5. 'array' → logprob: -5.486473083496094
    6. '2' → logprob: -5.861473083496094
    7. ' (' → logprob: -6.861473083496094
    8. '(len' → logprob: -6.861473083496094
    9. '(np' → logprob: -7.486473083496094
    10. 'shape' → logprob: -7.986473083496094

Token 703: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09122496098279953
    2. '(-' → logprob: -2.7162249088287354
    3. '((' → logprob: -5.4662251472473145
    4. '(sub' → logprob: -5.5912251472473145
    5. '(n' → logprob: -5.7162251472473145
    6. '.reshape' → logprob: -6.0912251472473145
    7. '(np' → logprob: -6.0912251472473145
    8. '(pos' → logprob: -7.3412251472473145
    9. '(len' → logprob: -7.4662251472473145
    10. ' (' → logprob: -7.4662251472473145

Token 704: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7696336507797241
    2. '(length' → logprob: -1.2696336507797241
    3. '(-' → logprob: -2.0196337699890137
    4. '((' → logprob: -2.7696337699890137
    5. '(offset' → logprob: -3.8946337699890137
    6. '(sub' → logprob: -4.269633769989014
    7. '(n' → logprob: -4.894633769989014
    8. '(pos' → logprob: -5.644633769989014
    9. '((-' → logprob: -6.144633769989014
    10. '(len' → logprob: -6.269633769989014

Token 705: 'D' (ID: 35)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14754854142665863
    2. 'D' → logprob: -2.1475484371185303
    3. '.reshape' → logprob: -5.522548675537109
    4. '**' → logprob: -5.772548675537109
    5. ' ,' → logprob: -6.022548675537109
    6. ')' → logprob: -6.772548675537109
    7. ',(' → logprob: -7.147548675537109
    8. 'd' → logprob: -7.272548675537109
    9. ' (' → logprob: -7.397548675537109
    10. '(' → logprob: -7.397548675537109

Token 706: ' ' (ID: 5310)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4305919408798218
    2. '(sub' → logprob: -1.5555919408798218
    3. '((' → logprob: -3.0555920600891113
    4. '(-' → logprob: -3.1805920600891113
    5. '.reshape' → logprob: -3.3055920600891113
    6. '.sub' → logprob: -5.305592060089111
    7. 'sub' → logprob: -5.305592060089111
    8. '((-' → logprob: -6.930592060089111
    9. '(np' → logprob: -7.430592060089111
    10. '(n' → logprob: -8.430591583251953

Token 707: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7282502055168152
    2. '(sub' → logprob: -1.22825026512146
    3. '((' → logprob: -2.47825026512146
    4. '.reshape' → logprob: -2.60325026512146
    5. ',' → logprob: -3.60325026512146
    6. '=' → logprob: -5.103250026702881
    7. ')' → logprob: -5.353250026702881
    8. ' =' → logprob: -5.478250026702881
    9. 'sub' → logprob: -5.728250026702881
    10. '(-' → logprob: -6.103250026702881

Token 708: ' chaque' (ID: 21194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21838203072547913
    2. '(-' → logprob: -1.8433820009231567
    3. 'sub' → logprob: -4.218381881713867
    4. '(sub' → logprob: -4.593381881713867
    5. '(length' → logprob: -4.718381881713867
    6. ' (' → logprob: -6.843381881713867
    7. '((' → logprob: -7.843381881713867
    8. ' sub' → logprob: -7.968381881713867
    9. 'length' → logprob: -7.968381881713867
    10. '(pos' → logprob: -7.968381881713867

Token 709: ' ligne' (ID: 19583)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7817893624305725
    2. 'length' → logprob: -1.1567893028259277
    3. 'row' → logprob: -2.9067893028259277
    4. '(length' → logprob: -3.2817893028259277
    5. ')' → logprob: -3.5317893028259277
    6. 'sub' → logprob: -4.281789302825928
    7. 'block' → logprob: -4.281789302825928
    8. ',' → logprob: -4.531789302825928
    9. '2' → logprob: -4.781789302825928
    10. 'segment' → logprob: -5.406789302825928

Token 710: ' a' (ID: 261)
  Prédit: '=sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=sub' → logprob: -0.6847309470176697
    2. '=' → logprob: -0.8097309470176697
    3. '(sub' → logprob: -3.6847310066223145
    4. '=(' → logprob: -4.9347310066223145
    5. ',' → logprob: -4.9347310066223145
    6. 'sub' → logprob: -5.6847310066223145
    7. '=np' → logprob: -6.4347310066223145
    8. ' =' → logprob: -6.5597310066223145
    9. '=len' → logprob: -7.3097310066223145
    10. '           ' → logprob: -7.8097310066223145

Token 711: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8577889204025269
    2. 'length' → logprob: -0.9827889204025269
    3. 'offset' → logprob: -2.3577890396118164
    4. '(' → logprob: -3.7327890396118164
    5. '(length' → logprob: -3.7327890396118164
    6. '2' → logprob: -4.232789039611816
    7. ' k' → logprob: -4.607789039611816
    8. '(offset' → logprob: -4.732789039611816
    9. '(k' → logprob: -4.857789039611816
    10. ' length' → logprob: -4.857789039611816

Token 712: '2' (ID: 17)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.9234499335289001
    2. '(' → logprob: -1.673449993133545
    3. '2' → logprob: -1.798449993133545
    4. 'offset' → logprob: -1.923449993133545
    5. '(length' → logprob: -3.423449993133545
    6. '1' → logprob: -3.798449993133545
    7. 'k' → logprob: -4.173449993133545
    8. 'pos' → logprob: -4.423449993133545
    9. '(offset' → logprob: -4.923449993133545
    10. 'n' → logprob: -5.173449993133545

Token 713: '^' (ID: 61)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6267950534820557
    2. ',length' → logprob: -1.1267950534820557
    3. 'length' → logprob: -2.5017950534820557
    4. '**' → logprob: -4.126794815063477
    5. ' ,' → logprob: -4.126794815063477
    6. ',pos' → logprob: -4.876794815063477
    7. ' length' → logprob: -5.376794815063477
    8. ' **' → logprob: -5.751794815063477
    9. ')' → logprob: -6.126794815063477
    10. 'columns' → logprob: -6.251794815063477

Token 714: 'pos' (ID: 1103)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.8574652075767517
    2. 'pos' → logprob: -0.9824652075767517
    3. '(length' → logprob: -2.1074652671813965
    4. 'length' → logprob: -3.1074652671813965
    5. '(' → logprob: -3.7324652671813965
    6. ' (' → logprob: -4.7324652671813965
    7. '(n' → logprob: -7.4824652671813965
    8. ' pos' → logprob: -7.9824652671813965
    9. '(np' → logprob: -8.232464790344238
    10. '[pos' → logprob: -8.232464790344238

Token 715: ' colon' (ID: 20947)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02035127393901348
    2. ' ,' → logprob: -4.895351409912109
    3. '**' → logprob: -5.270351409912109
    4. ',
' → logprob: -5.520351409912109
    5. '```' → logprob: -7.270351409912109
    6. ')' → logprob: -7.395351409912109
    7. ',length' → logprob: -8.02035140991211
    8. '(' → logprob: -8.14535140991211
    9. '),' → logprob: -8.52035140991211
    10. ' (' → logprob: -9.02035140991211

Token 716: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.10556696355342865
    2. 'umn' → logprob: -2.98056697845459
    3. 'ns' → logprob: -3.73056697845459
    4. 's' → logprob: -4.73056697845459
    5. 'onnes' → logprob: -4.73056697845459
    6. 'es' → logprob: -5.60556697845459
    7. 'n' → logprob: -5.73056697845459
    8. '=' → logprob: -7.73056697845459
    9. 'um' → logprob: -9.35556697845459
    10. 'm' → logprob: -10.10556697845459

Token 717: ',' (ID: 11)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sub' → logprob: -1.0809016227722168
    2. '(' → logprob: -1.2059016227722168
    3. '.reshape' → logprob: -1.2059016227722168
    4. '.sub' → logprob: -3.205901622772217
    5. '           ' → logprob: -4.455901622772217
    6. '(
' → logprob: -5.830901622772217
    7. 'sub' → logprob: -6.330901622772217
    8. ').' → logprob: -6.580901622772217
    9. 'reshape' → logprob: -7.330901622772217
    10. ')' → logprob: -7.330901622772217

Token 718: ' ordre' (ID: 103061)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8373181819915771
    2. '(' → logprob: -1.3373181819915771
    3. 'length' → logprob: -1.7123181819915771
    4. 'offset' → logprob: -3.212318181991577
    5. 'columns' → logprob: -4.212318420410156
    6. ' ' → logprob: -4.462318420410156
    7. '           ' → logprob: -4.712318420410156
    8. 'sub' → logprob: -4.712318420410156
    9. ' length' → logprob: -4.837318420410156
    10. 'shape' → logprob: -5.087318420410156

Token 719: ' de' (ID: 334)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '='' → logprob: -0.05600873753428459
    2. '="' → logprob: -3.306008815765381
    3. '=' → logprob: -4.056008815765381
    4. '=C' → logprob: -8.681008338928223
    5. 'C' → logprob: -9.306008338928223
    6. '(' → logprob: -9.931008338928223
    7. ' =' → logprob: -10.431008338928223
    8. '"' → logprob: -10.556008338928223
    9. '('' → logprob: -10.556008338928223
    10. '"C' → logprob: -11.181008338928223

Token 720: ' rempl' (ID: 66326)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.0771780014038086
    2. '"C' → logprob: -3.0771780014038086
    3. ''' → logprob: -4.077178001403809
    4. 'C' → logprob: -4.702178001403809
    5. '"' → logprob: -6.327178001403809
    6. 'F' → logprob: -8.827178001403809
    7. ''a' → logprob: -10.452178001403809
    8. ''A' → logprob: -10.577178001403809
    9. 'sub' → logprob: -10.827178001403809
    10. ' C' → logprob: -10.827178001403809

Token 721: 'issage' (ID: 63863)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2636005878448486
    2. '='' → logprob: -1.2636005878448486
    3. '="' → logprob: -1.6386005878448486
    4. 'e' → logprob: -2.6386005878448486
    5. ''' → logprob: -3.5136005878448486
    6. 'é' → logprob: -3.5136005878448486
    7. 'order' → logprob: -3.8886005878448486
    8. 'c' → logprob: -4.0136003494262695
    9. '"' → logprob: -4.1386003494262695
    10. 'ing' → logprob: -4.7636003494262695

Token 722: ' en' (ID: 469)
  Prédit: '=sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=sub' → logprob: -1.4764677286148071
    2. '('' → logprob: -1.6014677286148071
    3. '("' → logprob: -1.7264677286148071
    4. '=' → logprob: -2.3514676094055176
    5. '="' → logprob: -2.4764676094055176
    6. '='' → logprob: -2.7264676094055176
    7. 'sub' → logprob: -2.8514676094055176
    8. '(' → logprob: -3.1014676094055176
    9. '(sub' → logprob: -4.351467609405518
    10. '=("' → logprob: -4.476467609405518

Token 723: ' colonne' (ID: 148275)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.551692008972168
    2. 'C' → logprob: -0.926692008972168
    3. '"C' → logprob: -4.301692008972168
    4. ''' → logprob: -4.426692008972168
    5. 'c' → logprob: -6.551692008972168
    6. 'F' → logprob: -7.176692008972168
    7. '"' → logprob: -8.426692008972168
    8. ' C' → logprob: -9.051692008972168
    9. ''f' → logprob: -10.426692008972168
    10. ''r' → logprob: -10.801692008972168

Token 724: '
' (ID: 198)
  Prédit: '.reshape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.reshape' → logprob: -0.024801742285490036
    2. '(' → logprob: -4.649801731109619
    3. '(sub' → logprob: -5.399801731109619
    4. '.sub' → logprob: -5.649801731109619
    5. 'reshape' → logprob: -6.149801731109619
    6. ')' → logprob: -6.649801731109619
    7. ').' → logprob: -6.899801731109619
    8. 'sub' → logprob: -7.149801731109619
    9. '=sub' → logprob: -7.524801731109619
    10. ',' → logprob: -8.399802207946777

Token 725: '           ' (ID: 352)
  Prédit: '.reshape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.reshape' → logprob: -0.2784618139266968
    2. '(' → logprob: -1.5284618139266968
    3. '(sub' → logprob: -4.153461933135986
    4. '.sub' → logprob: -5.778461933135986
    5. 'reshape' → logprob: -6.653461933135986
    6. '(np' → logprob: -6.903461933135986
    7. '('\' → logprob: -6.903461933135986
    8. ')' → logprob: -7.028461933135986
    9. 'sub' → logprob: -7.403461933135986
    10. '.' → logprob: -7.653461933135986

Token 726: ' #' (ID: 1069)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.3165852427482605
    2. ' sub' → logprob: -2.1915853023529053
    3. '.reshape' → logprob: -2.3165853023529053
    4. 'reshape' → logprob: -3.3165853023529053
    5. '.sub' → logprob: -4.066585063934326
    6. ').' → logprob: -6.066585063934326
    7. ')' → logprob: -6.941585063934326
    8. '(sub' → logprob: -7.066585063934326
    9. '=sub' → logprob: -7.066585063934326
    10. ' =' → logprob: -7.316585063934326

Token 727: ' Puis' (ID: 87717)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.6605976819992065
    2. ' sub' → logprob: -0.7855976819992065
    3. ' resh' → logprob: -5.035597801208496
    4. '           ' → logprob: -5.285597801208496
    5. 'reshape' → logprob: -5.410597801208496
    6. 'resh' → logprob: -5.785597801208496
    7. ' =' → logprob: -6.035597801208496
    8. ')' → logprob: -6.785597801208496
    9. '=' → logprob: -6.910597801208496
    10. '(sub' → logprob: -7.285597801208496

Token 728: ' on' (ID: 402)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.20088660717010498
    2. ' sub' → logprob: -1.950886607170105
    3. 'reshape' → logprob: -3.8258867263793945
    4. '           ' → logprob: -6.0758867263793945
    5. '=' → logprob: -6.2008867263793945
    6. ' reshape' → logprob: -6.2008867263793945
    7. 'resh' → logprob: -6.5758867263793945
    8. '=sub' → logprob: -7.1383867263793945
    9. 'np' → logprob: -7.1383867263793945
    10. 'table' → logprob: -7.1383867263793945

Token 729: ' fait' (ID: 7473)
  Prédit: 'transpose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'transpose' → logprob: -0.7304084300994873
    2. 'reshape' → logprob: -1.8554084300994873
    3. '.T' → logprob: -1.9804084300994873
    4. '=' → logprob: -2.7304084300994873
    5. '.transpose' → logprob: -2.9804084300994873
    6. '.reshape' → logprob: -3.2304084300994873
    7. 'T' → logprob: -4.230408668518066
    8. 'sum' → logprob: -4.980408668518066
    9. ' reshape' → logprob: -4.980408668518066
    10. ' =' → logprob: -5.105408668518066

Token 730: ' sum' (ID: 4215)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.5808678865432739
    2. 'np' → logprob: -1.080867886543274
    3. ' sub' → logprob: -3.0808677673339844
    4. ' np' → logprob: -3.3308677673339844
    5. '.sub' → logprob: -5.580867767333984
    6. '.reshape' → logprob: -5.955867767333984
    7. 'sum' → logprob: -6.455867767333984
    8. '   ' → logprob: -6.455867767333984
    9. 'transpose' → logprob: -6.580867767333984
    10. '.sum' → logprob: -6.705867767333984

Token 731: '(axis' (ID: 74227)
  Prédit: '(axis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(axis' → logprob: -0.20545408129692078
    2. '(sub' → logprob: -1.7054541110992432
    3. 'sub' → logprob: -6.330453872680664
    4. '(' → logprob: -6.705453872680664
    5. 'axis' → logprob: -7.205453872680664
    6. '(
' → logprob: -8.830453872680664
    7. '=sub' → logprob: -9.830453872680664
    8. '   ' → logprob: -11.330453872680664
    9. ' sub' → logprob: -11.455453872680664
    10. '	sub' → logprob: -11.705453872680664

Token 732: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.320199877838604e-07
    2. ')=' → logprob: -15.0
    3. '=
' → logprob: -18.75
    4. '0' → logprob: -19.375
    5. '=np' → logprob: -19.375
    6. '=-' → logprob: -19.625
    7. '=(' → logprob: -19.625
    8. ' =' → logprob: -19.75
    9. ')' → logprob: -19.875
    10. '=s' → logprob: -19.875

Token 733: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013466615928336978
    2. '0' → logprob: -6.626346588134766
    3. '=' → logprob: -11.001346588134766
    4. ' ' → logprob: -12.751346588134766
    5. ')' → logprob: -14.626346588134766
    6. '2' → logprob: -14.751346588134766
    7. '   ' → logprob: -16.626346588134766
    8. '```' → logprob: -16.876346588134766
    9. '-' → logprob: -17.126346588134766
    10. '(' → logprob: -17.563846588134766

Token 734: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009380202973261476
    2. ').' → logprob: -7.8759379386901855
    3. '())' → logprob: -8.250938415527344
    4. ')
' → logprob: -9.125938415527344
    5. ',' → logprob: -10.000938415527344
    6. '),' → logprob: -10.125938415527344
    7. ')`' → logprob: -10.250938415527344
    8. '))' → logprob: -10.625938415527344
    9. ' )' → logprob: -11.250938415527344
    10. '           ' → logprob: -12.750938415527344

Token 735: ' pour' (ID: 1930)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5526615977287292
    2. ').' → logprob: -2.302661657333374
    3. '           ' → logprob: -2.427661657333374
    4. '()' → logprob: -2.677661657333374
    5. ')' → logprob: -2.927661657333374
    6. '(sub' → logprob: -3.177661657333374
    7. '.reshape' → logprob: -4.177661418914795
    8. '.sub' → logprob: -4.177661418914795
    9. '()
' → logprob: -4.427661418914795
    10. '(' → logprob: -4.802661418914795

Token 736: ' sommer' (ID: 90968)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -1.01820707321167
    2. ' obtenir' → logprob: -1.26820707321167
    3. 'acc' → logprob: -2.51820707321167
    4. 's' → logprob: -2.51820707321167
    5. 'np' → logprob: -3.76820707321167
    6. 'comp' → logprob: -3.76820707321167
    7. 'cum' → logprob: -3.89320707321167
    8. 'addition' → logprob: -4.14320707321167
    9. 'avoir' → logprob: -4.26820707321167
    10. ' sommer' → logprob: -4.51820707321167

Token 737: ' chaque' (ID: 21194)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.20724430680274963
    2. 'sub' → logprob: -2.082244396209717
    3. ')' → logprob: -3.332244396209717
    4. '(' → logprob: -4.832244396209717
    5. ' sub' → logprob: -4.832244396209717
    6. ' ' → logprob: -6.457244396209717
    7. ',' → logprob: -6.582244396209717
    8. '   ' → logprob: -7.082244396209717
    9. ').' → logprob: -7.082244396209717
    10. ' (' → logprob: -7.207244396209717

Token 738: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.9282834529876709
    2. 'column' → logprob: -0.9282834529876709
    3. ' colonne' → logprob: -2.553283452987671
    4. ')' → logprob: -3.303283452987671
    5. 'ligne' → logprob: -3.678283452987671
    6. ' column' → logprob: -3.928283452987671
    7. 'sub' → logprob: -4.80328369140625
    8. 'colon' → logprob: -4.92828369140625
    9. ' ' → logprob: -5.42828369140625
    10. ' col' → logprob: -5.55328369140625

Token 739: ' (' (ID: 350)
  Prédit: '.reshape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.reshape' → logprob: -0.456439733505249
    2. '().' → logprob: -2.081439733505249
    3. ').' → logprob: -2.206439733505249
    4. ')' → logprob: -3.456439733505249
    5. '(sub' → logprob: -3.456439733505249
    6. '(' → logprob: -3.706439733505249
    7. '.sub' → logprob: -3.831439733505249
    8. '           ' → logprob: -4.331439971923828
    9. '()' → logprob: -6.206439971923828
    10. ',' → logprob: -7.081439971923828

Token 740: 'don' (ID: 22130)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014611669816076756
    2. 'sub' → logprob: -4.889611721038818
    3. '),' → logprob: -5.889611721038818
    4. ').' → logprob: -6.639611721038818
    5. ')
' → logprob: -6.764611721038818
    6. '))' → logprob: -7.764611721038818
    7. ' )' → logprob: -8.13961124420166
    8. ')\' → logprob: -8.76461124420166
    9. ')#' → logprob: -9.26461124420166
    10. ' sub' → logprob: -9.38961124420166

Token 741: 'c' (ID: 66)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6250373125076294
    2. 'e' → logprob: -2.50003719329834
    3. 'nées' → logprob: -3.12503719329834
    4. 'c' → logprob: -3.25003719329834
    5. 'axis' → logprob: -3.37503719329834
    6. ')' → logprob: -3.50003719329834
    7. 'cols' → logprob: -3.62503719329834
    8. 's' → logprob: -3.75003719329834
    9. 'ont' → logprob: -3.87503719329834
    10. 'de' → logprob: -4.12503719329834

Token 742: ' chaque' (ID: 21194)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.8366343379020691
    2. ' obtenir' → logprob: -2.711634397506714
    3. 'ligne' → logprob: -2.836634397506714
    4. 'les' → logprob: -2.836634397506714
    5. 'axis' → logprob: -3.086634397506714
    6. ' sub' → logprob: -3.211634397506714
    7. ' les' → logprob: -3.586634397506714
    8. ')' → logprob: -3.711634397506714
    9. 'l' → logprob: -3.836634397506714
    10. 'la' → logprob: -4.086634159088135

Token 743: ' motif' (ID: 72753)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.13389530777931213
    2. ')' → logprob: -3.2588953971862793
    3. 'row' → logprob: -3.5088953971862793
    4. ' ligne' → logprob: -3.7588953971862793
    5. 'line' → logprob: -4.758895397186279
    6. 'col' → logprob: -4.883895397186279
    7. 'range' → logprob: -5.383895397186279
    8. 'sub' → logprob: -6.383895397186279
    9. 'column' → logprob: -6.383895397186279
    10. '```' → logprob: -6.633895397186279

Token 744: ' sur' (ID: 1512)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06902575492858887
    2. '),' → logprob: -3.069025754928589
    3. ',' → logprob: -5.319025993347168
    4. ').' → logprob: -5.444025993347168
    5. '=' → logprob: -6.194025993347168
    6. ')
' → logprob: -6.319025993347168
    7. '))' → logprob: -7.194025993347168
    8. '),
' → logprob: -7.444025993347168
    9. ' )' → logprob: -7.569025993347168
    10. 'de' → logprob: -7.694025993347168

Token 745: ' cette' (ID: 7696)
  Prédit: 'axis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'axis' → logprob: -1.6383605003356934
    2. '0' → logprob: -1.7633605003356934
    3. ')' → logprob: -2.0133605003356934
    4. '2' → logprob: -2.1383605003356934
    5. 'offset' → logprob: -2.3883605003356934
    6. 'columns' → logprob: -3.0133605003356934
    7. ' axis' → logprob: -3.3883605003356934
    8. 'l' → logprob: -3.7633605003356934
    9. ' ' → logprob: -3.8883605003356934
    10. 'rows' → logprob: -4.013360500335693

Token 746: ' longueur' (ID: 104613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0771260261535645
    2. 'pos' → logprob: -1.5771260261535645
    3. 'position' → logprob: -2.7021260261535645
    4. 'col' → logprob: -3.3271260261535645
    5. 'dimension' → logprob: -3.4521260261535645
    6. 'dim' → logprob: -3.8896260261535645
    7. ')
' → logprob: -3.9521260261535645
    8. 'ligne' → logprob: -4.1396260261535645
    9. '2' → logprob: -4.2646260261535645
    10. '\n' → logprob: -4.3896260261535645

Token 747: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12983444333076477
    2. ').' → logprob: -2.7548344135284424
    3. ')
' → logprob: -3.1298344135284424
    4. '),' → logprob: -4.7548346519470215
    5. '           ' → logprob: -6.7548346519470215
    6. ',' → logprob: -6.7548346519470215
    7. '))' → logprob: -7.7548346519470215
    8. ' )' → logprob: -7.8798346519470215
    9. ')
' → logprob: -8.004834175109863
    10. ')`' → logprob: -8.379834175109863

Token 748: '           ' (ID: 352)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -1.855603814125061
    2. '.sub' → logprob: -1.855603814125061
    3. ' =' → logprob: -1.980603814125061
    4. '.reshape' → logprob: -1.980603814125061
    5. ')' → logprob: -2.1056036949157715
    6. '           ' → logprob: -2.2306036949157715
    7. 'sub' → logprob: -2.8556036949157715
    8. '(sub' → logprob: -3.2306036949157715
    9. '=' → logprob: -3.3556036949157715
    10. '=sub' → logprob: -4.1056036949157715

Token 749: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.3760905265808105
    2. 'col' → logprob: -1.8760905265808105
    3. 'counts' → logprob: -1.8760905265808105
    4. 'sub' → logprob: -2.2510905265808105
    5. 's' → logprob: -2.6260905265808105
    6. 'tmp' → logprob: -3.1260905265808105
    7. 'pattern' → logprob: -3.3760905265808105
    8. '           ' → logprob: -3.6260905265808105
    9. 'partial' → logprob: -3.7510905265808105
    10. 'count' → logprob: -3.8760905265808105

Token 750: ' On' (ID: 2160)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.447177767753601
    2. 'sum' → logprob: -1.572177767753601
    3. 'pattern' → logprob: -2.1971778869628906
    4. 's' → logprob: -2.4471778869628906
    5. 'col' → logprob: -2.4471778869628906
    6. 'count' → logprob: -3.1971778869628906
    7. 'sub' → logprob: -3.3221778869628906
    8. 'tmp' → logprob: -3.6971778869628906
    9. 'cols' → logprob: -4.072177886962891
    10. '           ' → logprob: -4.197177886962891

Token 751: ' ajoute' (ID: 91611)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -2.081293821334839
    2. ' =' → logprob: -2.581293821334839
    3. ' continue' → logprob: -2.581293821334839
    4. ')' → logprob: -2.706293821334839
    5. 'reshape' → logprob: -2.706293821334839
    6. 'sub' → logprob: -2.831293821334839
    7. 's' → logprob: -2.956293821334839
    8. ' sum' → logprob: -2.956293821334839
    9. ' sub' → logprob: -3.081293821334839
    10. 'continue' → logprob: -3.081293821334839

Token 752: ' cette' (ID: 7696)
  Prédit: ' sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sub' → logprob: -1.2647638320922852
    2. ' np' → logprob: -1.2647638320922852
    3. 'sub' → logprob: -2.139763832092285
    4. 'np' → logprob: -2.264763832092285
    5. ' +=' → logprob: -3.264763832092285
    6. '+' → logprob: -3.889763832092285
    7. ' ret' → logprob: -4.014763832092285
    8. ')' → logprob: -4.264763832092285
    9. '=' → logprob: -4.389763832092285
    10. ' +' → logprob: -4.514763832092285

Token 753: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.2488054037094116
    2. ' sum' → logprob: -1.4988054037094116
    3. '.sum' → logprob: -1.7488054037094116
    4. ' np' → logprob: -2.123805522918701
    5. ')' → logprob: -3.373805522918701
    6. ' ' → logprob: -3.623805522918701
    7. '.reshape' → logprob: -3.873805522918701
    8. 'np' → logprob: -3.873805522918701
    9. ' sub' → logprob: -4.373805522918701
    10. 'sub' → logprob: -4.373805522918701

Token 754: ' à' (ID: 1221)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7404512166976929
    2. '=' → logprob: -1.7404512166976929
    3. ' =' → logprob: -1.9904512166976929
    4. '+=' → logprob: -2.6154513359069824
    5. '+' → logprob: -3.7404513359069824
    6. ' +' → logprob: -3.8654513359069824
    7. ')' → logprob: -4.115451335906982
    8. '[' → logprob: -4.490451335906982
    9. '(sub' → logprob: -4.740451335906982
    10. 'sub' → logprob: -4.865451335906982

Token 755: ' la' (ID: 557)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.5056549310684204
    2. ' offset' → logprob: -1.1306549310684204
    3. 'sub' → logprob: -3.380654811859131
    4. ' sub' → logprob: -4.130654811859131
    5. 'np' → logprob: -5.130654811859131
    6. 'ret' → logprob: -5.130654811859131
    7. 'table' → logprob: -5.505654811859131
    8. ' np' → logprob: -5.880654811859131
    9. ' table' → logprob: -6.130654811859131
    10. ' ret' → logprob: -6.880654811859131

Token 756: ' portion' (ID: 19137)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.09389423578977585
    2. ' offset' → logprob: -2.5938942432403564
    3. 'np' → logprob: -5.218894004821777
    4. 'sub' → logprob: -5.718894004821777
    5. ' np' → logprob: -6.718894004821777
    6. 'sum' → logprob: -6.968894004821777
    7. 'table' → logprob: -7.093894004821777
    8. 'pos' → logprob: -7.218894004821777
    9. '[offset' → logprob: -7.343894004821777
    10. ' table' → logprob: -7.718894004821777

Token 757: ' de' (ID: 334)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.2204955518245697
    2. '[sub' → logprob: -2.9704954624176025
    3. '[pos' → logprob: -3.2204954624176025
    4. ' sub' → logprob: -3.4704954624176025
    5. '[' → logprob: -3.7204954624176025
    6. 'sub' → logprob: -3.8454954624176025
    7. 'offset' → logprob: -4.845495700836182
    8. ' offset' → logprob: -5.220495700836182
    9. ' of' → logprob: -5.470495700836182
    10. ' [' → logprob: -6.220495700836182

Token 758: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.5420646667480469
    2. 'offset' → logprob: -1.7920646667480469
    3. 'sub' → logprob: -2.042064666748047
    4. ' table' → logprob: -2.667064666748047
    5. ' sub' → logprob: -3.667064666748047
    6. ' offset' → logprob: -4.042064666748047
    7. 'ret' → logprob: -5.792064666748047
    8. 'code' → logprob: -6.417064666748047
    9. 'buf' → logprob: -7.042064666748047
    10. ' code' → logprob: -7.292064666748047

Token 759: ' correspondant' (ID: 146058)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.02609185129404068
    2. '[pos' → logprob: -3.7760918140411377
    3. '[' → logprob: -6.276092052459717
    4. '[sub' → logprob: -8.151091575622559
    5. 'offset' → logprob: -8.401091575622559
    6. '[:' → logprob: -9.276091575622559
    7. '[position' → logprob: -9.901091575622559
    8. '   ' → logprob: -9.901091575622559
    9. ' [' → logprob: -10.026091575622559
    10. 'pos' → logprob: -10.151091575622559

Token 760: ' à' (ID: 1221)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.0363190621137619
    2. '[' → logprob: -4.661319255828857
    3. 'offset' → logprob: -5.161319255828857
    4. '   ' → logprob: -5.161319255828857
    5. '[pos' → logprob: -5.411319255828857
    6. '           ' → logprob: -5.661319255828857
    7. ' à' → logprob: -6.411319255828857
    8. '[sub' → logprob: -7.161319255828857
    9. ' offset' → logprob: -7.286319255828857
    10. '(offset' → logprob: -7.411319255828857

Token 761: ' l' (ID: 305)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.07108435779809952
    2. 'pos' → logprob: -3.1960842609405518
    3. ' offset' → logprob: -3.8210842609405518
    4. 'sub' → logprob: -6.821084499359131
    5. '[offset' → logprob: -6.821084499359131
    6. 'length' → logprob: -6.946084499359131
    7. '[' → logprob: -7.571084499359131
    8. 'table' → logprob: -7.946084499359131
    9. 'position' → logprob: -8.071084022521973
    10. ' pos' → logprob: -8.071084022521973

Token 762: '’' (ID: 438)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.6106619238853455
    2. ' offset' → logprob: -1.6106619834899902
    3. 'pos' → logprob: -1.8606619834899902
    4. '[offset' → logprob: -3.3606619834899902
    5. ' pos' → logprob: -3.4856619834899902
    6. 'sub' → logprob: -3.9856619834899902
    7. ' sub' → logprob: -5.48566198348999
    8. 'length' → logprob: -6.11066198348999
    9. '```' → logprob: -6.11066198348999
    10. ' length' → logprob: -6.48566198348999

Token 763: 'offset' (ID: 6680)
  Prédit: 'offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.5399451851844788
    2. 'pos' → logprob: -0.9149451851844788
    3. ' offset' → logprob: -4.914945125579834
    4. ' pos' → logprob: -5.289945125579834
    5. 'sub' → logprob: -6.539945125579834
    6. 'position' → logprob: -7.289945125579834
    7. '```' → logprob: -7.414945125579834
    8. 'length' → logprob: -7.664945125579834
    9. '[offset' → logprob: -8.539945602416992
    10. '(offset' → logprob: -8.914945602416992

Token 764: ' de' (ID: 334)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.34068822860717773
    2. '[pos' → logprob: -1.4656882286071777
    3. '[' → logprob: -4.215688228607178
    4. 'offset' → logprob: -4.715688228607178
    5. 'pos' → logprob: -5.340688228607178
    6. ' +=' → logprob: -5.465688228607178
    7. ' offset' → logprob: -5.590688228607178
    8. ' pos' → logprob: -5.715688228607178
    9. '   ' → logprob: -5.715688228607178
    10. '[sub' → logprob: -5.965688228607178

Token 765: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.012085512280464172
    2. 'length' → logprob: -5.012085437774658
    3. ' pos' → logprob: -5.387085437774658
    4. 'offset' → logprob: -7.512085437774658
    5. ' length' → logprob: -9.387085914611816
    6. 'sub' → logprob: -9.762085914611816
    7. '(pos' → logprob: -10.762085914611816
    8. 'position' → logprob: -11.262085914611816
    9. '```' → logprob: -11.262085914611816
    10. '[pos' → logprob: -11.762085914611816

Token 766: ' ' (ID: 5310)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.028093256056308746
    2. 'offset' → logprob: -3.9030933380126953
    3. '[pos' → logprob: -5.903093338012695
    4. ' offset' → logprob: -7.028093338012695
    5. '_table' → logprob: -7.028093338012695
    6. '[' → logprob: -7.153093338012695
    7. '   ' → logprob: -7.528093338012695
    8. '_offset' → logprob: -7.778093338012695
    9. '(offset' → logprob: -8.528093338012695
    10. 'pos' → logprob: -8.903093338012695

Token 767: ':' (ID: 25)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.01668558269739151
    2. '[pos' → logprob: -4.516685485839844
    3. 'offset' → logprob: -6.391685485839844
    4. '[' → logprob: -6.391685485839844
    5. '   ' → logprob: -7.016685485839844
    6. '][' → logprob: -8.141685485839844
    7. ']' → logprob: -8.891685485839844
    8. ' offset' → logprob: -8.891685485839844
    9. ' [' → logprob: -8.891685485839844
    10. '
' → logprob: -9.266685485839844

Token 768: ' on' (ID: 402)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.1643410325050354
    2. ' table' → logprob: -1.9143409729003906
    3. 'offset' → logprob: -5.914340972900391
    4. '   ' → logprob: -7.164340972900391
    5. ' offset' → logprob: -7.789340972900391
    6. '           ' → logprob: -9.41434097290039
    7. 'sub' → logprob: -10.16434097290039
    8. '
' → logprob: -11.03934097290039
    9. 'tab' → logprob: -11.16434097290039
    10. ' sub' → logprob: -11.66434097290039

Token 769: ' pro' (ID: 440)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.38405388593673706
    2. 'pos' → logprob: -2.009053945541382
    3. '[offset' → logprob: -2.009053945541382
    4. ' pos' → logprob: -3.759053945541382
    5. '[' → logprob: -4.509053707122803
    6. 'offset' → logprob: -4.634053707122803
    7. '   ' → logprob: -6.134053707122803
    8. 'table' → logprob: -6.384053707122803
    9. ' [' → logprob: -8.009054183959961
    10. ' offset' → logprob: -8.259054183959961

Token 770: 'page' (ID: 5342)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.37450090050697327
    2. '=' → logprob: -2.4995009899139404
    3. 'long' → logprob: -3.1245009899139404
    4. ' +=' → logprob: -3.4995009899139404
    5. '   ' → logprob: -3.4995009899139404
    6. 'lon' → logprob: -3.6245009899139404
    7. '[' → logprob: -3.8745009899139404
    8. '+' → logprob: -4.124500751495361
    9. '       ' → logprob: -4.374500751495361
    10. 'l' → logprob: -5.249500751495361

Token 771: ' les' (ID: 1341)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.02948940545320511
    2. ' table' → logprob: -4.029489517211914
    3. '(table' → logprob: -5.279489517211914
    4. 'offset' → logprob: -5.779489517211914
    5. '   ' → logprob: -6.029489517211914
    6. '           ' → logprob: -9.154489517211914
    7. '(offset' → logprob: -9.404489517211914
    8. ' offset' → logprob: -9.654489517211914
    9. '[offset' → logprob: -9.654489517211914
    10. '(' → logprob: -9.904489517211914

Token 772: ' compt' (ID: 39238)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.1473755836486816
    2. 'sub' → logprob: -1.5223755836486816
    3. 'table' → logprob: -1.5223755836486816
    4. 'val' → logprob: -2.5223755836486816
    5. 'sum' → logprob: -3.1473755836486816
    6. ' table' → logprob: -3.2723755836486816
    7. ' offset' → logprob: -3.8973755836486816
    8. ' sub' → logprob: -4.647375583648682
    9. 'result' → logprob: -4.772375583648682
    10. 's' → logprob: -4.772375583648682

Token 773: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.027255941182374954
    2. 'age' → logprob: -4.027256011962891
    3. 'es' → logprob: -4.902256011962891
    4. '   ' → logprob: -7.777256011962891
    5. 's' → logprob: -7.902256011962891
    6. 'offset' → logprob: -8.15225601196289
    7. 'e' → logprob: -8.15225601196289
    8. '[' → logprob: -9.77725601196289
    9. 'és' → logprob: -10.02725601196289
    10. '[offset' → logprob: -10.27725601196289

Token 774: '
' (ID: 198)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.3924490511417389
    2. '[pos' → logprob: -1.8924490213394165
    3. '[' → logprob: -2.142449140548706
    4. '           ' → logprob: -4.767448902130127
    5. '[sub' → logprob: -5.017448902130127
    6. 'table' → logprob: -5.017448902130127
    7. '   ' → logprob: -5.267448902130127
    8. 'offset' → logprob: -5.392448902130127
    9. ')[' → logprob: -5.642448902130127
    10. ' [' → logprob: -5.892448902130127

Token 775: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5104570984840393
    2. '[offset' → logprob: -1.1354570388793945
    3. 'offset' → logprob: -4.0104570388793945
    4. ' offset' → logprob: -4.5104570388793945
    5. ' table' → logprob: -4.5104570388793945
    6. '   ' → logprob: -4.5104570388793945
    7. ' +=' → logprob: -4.8854570388793945
    8. 'table' → logprob: -4.8854570388793945
    9. ' +' → logprob: -6.0104570388793945
    10. '       ' → logprob: -6.3854570388793945

Token 776: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' (adapté à ' table') → logprob: -0.0022373280953615904
    2. '           ' → logprob: -6.502237319946289
    3. ' table' → logprob: -7.377237319946289
    4. '   ' → logprob: -9.377237319946289
    5. 'offset' → logprob: -11.502237319946289
    6. '       ' → logprob: -11.752237319946289
    7. '               ' → logprob: -13.002237319946289
    8. 'tab' → logprob: -13.502237319946289
    9. '	table' → logprob: -13.627237319946289
    10. ' ' → logprob: -14.877237319946289

Token 777: '[offset' (ID: 84200)
  Prédit: '[offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[offset' → logprob: -1.8789383830153383e-05
    2. '[' → logprob: -11.375019073486328
    3. '[
' → logprob: -12.750019073486328
    4. '   ' → logprob: -13.250019073486328
    5. 'offset' → logprob: -13.625019073486328
    6. '[:' → logprob: -15.375019073486328
    7. '
' → logprob: -15.500019073486328
    8. '[o' → logprob: -15.500019073486328
    9. '[...]' → logprob: -16.125019073486328
    10. ' [' → logprob: -16.125019073486328

Token 778: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -5.085517113911919e-05
    2. ' (' → logprob: -10.12505054473877
    3. '[pos' → logprob: -12.75005054473877
    4. 'pos' → logprob: -12.75005054473877
    5. '(' → logprob: -13.12505054473877
    6. '(length' → logprob: -13.62505054473877
    7. ' pos' → logprob: -14.00005054473877
    8. '(position' → logprob: -14.75005054473877
    9. ',pos' → logprob: -15.00005054473877
    10. '	pos' → logprob: -16.875051498413086

Token 779: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48051485419273376
    2. ')' → logprob: -0.9805148839950562
    3. ')+' → logprob: -5.855515003204346
    4. ':' → logprob: -6.355515003204346
    5. '   ' → logprob: -7.605515003204346
    6. ':)' → logprob: -7.730515003204346
    7. ' ):' → logprob: -7.980515003204346
    8. ' )' → logprob: -8.605514526367188
    9. '):
' → logprob: -9.355514526367188
    10. ')
' → logprob: -10.230514526367188

Token 780: 'offset' (ID: 6680)
  Prédit: 'offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -2.2246291337069124e-05
    2. ' offset' → logprob: -11.250021934509277
    3. '[offset' → logprob: -12.125021934509277
    4. '(offset' → logprob: -13.000021934509277
    5. '	offset' → logprob: -13.500021934509277
    6. '   ' → logprob: -17.000022888183594
    7. '.offset' → logprob: -17.250022888183594
    8. '_offset' → logprob: -18.625022888183594
    9. '-offset' → logprob: -18.750022888183594
    10. 'off' → logprob: -19.625022888183594

Token 781: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.06220172345638275
    2. 'pos' → logprob: -2.812201738357544
    3. ' pos' → logprob: -8.937201499938965
    4. ' (' → logprob: -9.312201499938965
    5. '[pos' → logprob: -11.937201499938965
    6. '(' → logprob: -12.437201499938965
    7. ',pos' → logprob: -14.187201499938965
    8. '	pos' → logprob: -14.437201499938965
    9. '_pos' → logprob: -15.937201499938965
    10. '(length' → logprob: -16.31220245361328

Token 782: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6965661644935608
    2. '+' → logprob: -1.071566104888916
    3. ')+' → logprob: -2.571566104888916
    4. '):' → logprob: -2.821566104888916
    5. ' +' → logprob: -4.446566104888916
    6. ')]' → logprob: -5.321566104888916
    7. '   ' → logprob: -5.321566104888916
    8. '()+' → logprob: -7.946566104888916
    9. '()' → logprob: -8.196566581726074
    10. ' )' → logprob: -8.321566581726074

Token 783: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. 'pos' → logprob: -16.5
    4. '0' → logprob: -17.75
    5. '   ' → logprob: -18.0
    6. '```' → logprob: -20.375
    7. '１' → logprob: -20.5
    8. '2' → logprob: -20.625
    9. '' → logprob: -21.125
    10. '(' → logprob: -21.75

Token 784: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. 'pos' → logprob: -14.500001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '2' → logprob: -16.500001907348633
    6. 'length' → logprob: -17.000001907348633
    7. '0' → logprob: -17.000001907348633
    8. '```' → logprob: -17.437501907348633
    9. 'len' → logprob: -17.562501907348633
    10. '(' → logprob: -17.687501907348633

Token 785: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006893210811540484
    2. ')]' → logprob: -7.875689506530762
    3. ']+=' → logprob: -8.625689506530762
    4. ')' → logprob: -9.375689506530762
    5. ' ]' → logprob: -10.750689506530762
    6. ']+' → logprob: -11.250689506530762
    7. '   ' → logprob: -12.625689506530762
    8. ' ' → logprob: -13.000689506530762
    9. '])' → logprob: -13.250689506530762
    10. '()]' → logprob: -13.500689506530762

Token 786: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.026936650276184082
    2. ' +=' → logprob: -3.6519365310668945
    3. ']+=' → logprob: -8.276936531066895
    4. '   ' → logprob: -8.526936531066895
    5. '=' → logprob: -9.276936531066895
    6. '+' → logprob: -9.651936531066895
    7. '[:]' → logprob: -12.276936531066895
    8. '[' → logprob: -12.401936531066895
    9. '```' → logprob: -12.651936531066895
    10. '    ' → logprob: -12.901936531066895

Token 787: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.025560244917869568
    2. 'np' → logprob: -3.775560140609741
    3. ' sub' → logprob: -6.15056037902832
    4. ' np' → logprob: -8.90056037902832
    5. '	sub' → logprob: -11.27556037902832
    6. '(sub' → logprob: -11.65056037902832
    7. ' ' → logprob: -12.15056037902832
    8. 'sum' → logprob: -12.65056037902832
    9. '   ' → logprob: -12.77556037902832
    10. 'su' → logprob: -13.65056037902832

Token 788: 'table' (ID: 4202)
  Prédit: 'table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -7.896309739408025e-07
    2. '_table' → logprob: -14.625000953674316
    3. 'tab' → logprob: -16.0
    4. 'able' → logprob: -16.25
    5. 'sub' → logprob: -18.0
    6. 'Table' → logprob: -18.375
    7. 'tablet' → logprob: -19.25
    8. 'array' → logprob: -19.875
    9. 't' → logprob: -20.25
    10. '(table' → logprob: -20.625

Token 789: '.reshape' (ID: 55028)
  Prédit: '.reshape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reshape' → logprob: -0.5094224810600281
    2. '[' → logprob: -2.009422540664673
    3. '<|end|>' → logprob: -2.134422540664673
    4. '.sum' → logprob: -3.384422540664673
    5. '[:,' → logprob: -4.259422302246094
    6. '[pos' → logprob: -4.384422302246094
    7. ')' → logprob: -4.509422302246094
    8. '[:]' → logprob: -4.884422302246094
    9. '  
' → logprob: -5.009422302246094
    10. '[np' → logprob: -5.134422302246094

Token 790: '(-' (ID: 8087)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6039074659347534
    2. '(' → logprob: -1.6039074659347534
    3. '(-' → logprob: -1.6039074659347534
    4. '((-' → logprob: -2.978907585144043
    5. '(offset' → logprob: -8.603907585144043
    6. '(((' → logprob: -10.103907585144043
    7. '(-(' → logprob: -10.978907585144043
    8. '(order' → logprob: -12.853907585144043
    9. '(
' → logprob: -12.978907585144043
    10. '2' → logprob: -13.228907585144043

Token 791: '1' (ID: 16)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.3571673631668091
    2. '(' → logprob: -1.857167363166809
    3. '(offset' → logprob: -1.982167363166809
    4. '1' → logprob: -5.4821672439575195
    5. '2' → logprob: -6.6071672439575195
    6. '((' → logprob: -7.9821672439575195
    7. '   ' → logprob: -8.35716724395752
    8. ' offset' → logprob: -8.98216724395752
    9. ',' → logprob: -9.73216724395752
    10. ' (' → logprob: -10.10716724395752

Token 792: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1350117027759552
    2. ',' → logprob: -2.135011672973633
    3. ',(' → logprob: -5.385011672973633
    4. '((' → logprob: -6.135011672973633
    5. '(offset' → logprob: -6.760011672973633
    6. ' (' → logprob: -10.010011672973633
    7. ' ,' → logprob: -10.510011672973633
    8. '2' → logprob: -10.635011672973633
    9. 'offset' → logprob: -11.510011672973633
    10. '(
' → logprob: -12.260011672973633

Token 793: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3052244484424591
    2. 'offset' → logprob: -1.4302244186401367
    3. '(' → logprob: -3.8052244186401367
    4. '2' → logprob: -6.930224418640137
    5. ' offset' → logprob: -8.430224418640137
    6. '(offset' → logprob: -8.930224418640137
    7. ' ' → logprob: -9.180224418640137
    8. '   ' → logprob: -10.430224418640137
    9. '```' → logprob: -10.930224418640137
    10. ' (' → logprob: -11.180224418640137

Token 794: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08147779107093811
    2. 'offset' → logprob: -2.9564778804779053
    3. '(' → logprob: -3.7064778804779053
    4. '2' → logprob: -6.456477642059326
    5. '(offset' → logprob: -9.456478118896484
    6. ' ' → logprob: -11.581478118896484
    7. ' offset' → logprob: -11.831478118896484
    8. '   ' → logprob: -13.081478118896484
    9. ' (' → logprob: -13.081478118896484
    10. '[offset' → logprob: -13.581478118896484

Token 795: ' <<' (ID: 2256)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05146210640668869
    2. ',' → logprob: -4.176462173461914
    3. ').' → logprob: -4.301462173461914
    4. ')<<' → logprob: -4.551462173461914
    5. '<<' → logprob: -4.926462173461914
    6. ' <<' → logprob: -6.051462173461914
    7. ')[' → logprob: -7.676462173461914
    8. ' )' → logprob: -9.051462173461914
    9. ' ,' → logprob: -9.176462173461914
    10. ')*' → logprob: -9.676462173461914

Token 796: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.6240566083070007e-06
    2. ' pos' → logprob: -13.500001907348633
    3. '(pos' → logprob: -15.875001907348633
    4. '	pos' → logprob: -18.500001907348633
    5. '(' → logprob: -19.125001907348633
    6. 'v' → logprob: -19.625001907348633
    7. '[pos' → logprob: -20.250001907348633
    8. '   ' → logprob: -20.375001907348633
    9. '```' → logprob: -20.750001907348633
    10. 'k' → logprob: -21.000001907348633

Token 797: ',' (ID: 11)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.18009553849697113
    2. ')' → logprob: -1.8050955533981323
    3. ',' → logprob: -8.180095672607422
    4. ' ).' → logprob: -10.305095672607422
    5. '   ' → logprob: -11.680095672607422
    6. ' )' → logprob: -11.805095672607422
    7. '),' → logprob: -12.555095672607422
    8. ')[' → logprob: -12.680095672607422
    9. '       ' → logprob: -12.805095672607422
    10. ')
' → logprob: -13.055095672607422

Token 798: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0005533903022296727
    2. ' order' → logprob: -7.500553607940674
    3. ')' → logprob: -15.375553131103516
    4. '	order' → logprob: -15.625553131103516
    5. ' ' → logprob: -16.500553131103516
    6. '(order' → logprob: -17.625553131103516
    7. ''' → logprob: -18.500553131103516
    8. 'ordre' → logprob: -19.000553131103516
    9. '.order' → logprob: -19.500553131103516
    10. ' ' → logprob: -19.500553131103516

Token 799: '="' (ID: 580)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.0233044121414423
    2. '=' → logprob: -3.8983044624328613
    3. '="' → logprob: -5.898304462432861
    4. '=C' → logprob: -13.148303985595703
    5. '=
' → logprob: -13.148303985595703
    6. '=u' → logprob: -13.523303985595703
    7. '(' → logprob: -13.523303985595703
    8. '=b' → logprob: -13.523303985595703
    9. ''' → logprob: -13.773303985595703
    10. '=B' → logprob: -13.898303985595703

Token 800: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.007210336625576019
    2. ''' → logprob: -5.3822102546691895
    3. '"' → logprob: -6.7572102546691895
    4. ''f' → logprob: -7.5072102546691895
    5. 'f' → logprob: -8.132210731506348
    6. ''C' → logprob: -8.257210731506348
    7. 'C' → logprob: -8.382210731506348
    8. '"C' → logprob: -9.632210731506348
    9. 'c' → logprob: -11.132210731506348
    10. '```' → logprob: -12.632210731506348

Token 801: '").' (ID: 3172)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.57862788438797
    2. '").' → logprob: -0.82862788438797
    3. ')' → logprob: -6.453628063201904
    4. '")[' → logprob: -7.703628063201904
    5. ')")' → logprob: -8.703627586364746
    6. '"' → logprob: -8.828627586364746
    7. ').' → logprob: -9.078627586364746
    8. ')").' → logprob: -9.078627586364746
    9. '")
' → logprob: -10.703627586364746
    10. '")+' → logprob: -10.953627586364746

Token 802: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -6.704273118884885e-07
    2. ' sum' → logprob: -14.250000953674316
    3. '	sum' → logprob: -19.75
    4. 's' → logprob: -19.875
    5. ' ' → logprob: -20.125
    6. 'c' → logprob: -20.875
    7. '(sum' → logprob: -21.0
    8. '.sum' → logprob: -21.125
    9. 'astype' → logprob: -21.5
    10. '   ' → logprob: -21.75

Token 803: '(axis' (ID: 74227)
  Prédit: '(axis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(axis' → logprob: -0.0019402962643653154
    2. '(' → logprob: -6.2519402503967285
    3. 'axis' → logprob: -11.501940727233887
    4. ' (' → logprob: -14.126940727233887
    5. '(
' → logprob: -14.376940727233887
    6. ' axis' → logprob: -16.12693977355957
    7. '(ax' → logprob: -16.25193977355957
    8. '0' → logprob: -17.00193977355957
    9. '_axis' → logprob: -17.87693977355957
    10. '(angle' → logprob: -18.12693977355957

Token 804: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.625
    3. '=(' → logprob: -16.75
    4. '(' → logprob: -16.875
    5. '1' → logprob: -17.375
    6. '=
' → logprob: -18.625
    7. '=-' → logprob: -18.75
    8. ')=' → logprob: -19.25
    9. '=None' → logprob: -20.625
    10. '=

' → logprob: -20.625

Token 805: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005244668107479811
    2. '1' → logprob: -5.255244731903076
    3. ' ' → logprob: -11.880244255065918
    4. '=' → logprob: -13.255244255065918
    5. '   ' → logprob: -14.817744255065918
    6. '```' → logprob: -14.817744255065918
    7. ')' → logprob: -15.255244255065918
    8. '-' → logprob: -15.442744255065918
    9. '(' → logprob: -15.630244255065918
    10. '01' → logprob: -16.317745208740234

Token 806: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.400689305039123e-05
    2. ')
' → logprob: -9.750094413757324
    3. '           ' → logprob: -11.125094413757324
    4. ' )' → logprob: -11.625094413757324
    5. '       ' → logprob: -12.750094413757324
    6. ')+' → logprob: -13.000094413757324
    7. '   ' → logprob: -13.375094413757324
    8. ')[' → logprob: -14.250094413757324
    9. ')#' → logprob: -14.375094413757324
    10. '))' → logprob: -14.500094413757324

Token 807: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 808: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020007915794849396
    2. '<|end|>' → logprob: -4.395008087158203
    3. '
' → logprob: -6.020008087158203
    4. 'if' → logprob: -6.270008087158203
    5. '       ' → logprob: -6.645008087158203
    6. 'return' → logprob: -7.645008087158203
    7. '    
' → logprob: -7.770008087158203
    8. 'print' → logprob: -7.895008087158203
    9. ' if' → logprob: -8.520008087158203
    10. '        
' → logprob: -9.645008087158203

Token 809: ' R' (ID: 460)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.049196068197488785
    2. 'ret' → logprob: -3.6741960048675537
    3. '   ' → logprob: -3.9241960048675537
    4. 'for' → logprob: -7.549196243286133
    5. 'mask' → logprob: -8.049196243286133
    6. ' if' → logprob: -8.299196243286133
    7. '#' → logprob: -8.424196243286133
    8. 'print' → logprob: -8.424196243286133
    9. '       ' → logprob: -8.799196243286133
    10. 'sys' → logprob: -9.299196243286133

Token 810: 'éc' (ID: 5675)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.0025956344325095415
    2. 'eturn' → logprob: -6.0025954246521
    3. 'etur' → logprob: -9.252595901489258
    4. 'etcode' → logprob: -11.752595901489258
    5. ' et' → logprob: -12.377595901489258
    6. 'e' → logprob: -12.752595901489258
    7. ''et' → logprob: -13.752595901489258
    8. 'etag' → logprob: -13.877595901489258
    9. 'etu' → logprob: -14.002595901489258
    10. 'if' → logprob: -14.252595901489258

Token 811: 'up' (ID: 817)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7398197650909424
    2. 'up' → logprob: -0.9898197650909424
    3. 'urse' → logprob: -3.2398197650909424
    4. 'ur' → logprob: -3.3648197650909424
    5. 'urrent' → logprob: -3.9898197650909424
    6. 'u' → logprob: -4.114819526672363
    7. 'urent' → logprob: -5.239819526672363
    8. 'upr' → logprob: -5.489819526672363
    9. '       ' → logprob: -5.739819526672363
    10. 'ursive' → logprob: -5.739819526672363

Token 812: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.625551700592041
    2. 'érer' → logprob: -0.875551700592041
    3. 'ére' → logprob: -4.125551700592041
    4. 'érez' → logprob: -4.500551700592041
    5. 'è' → logprob: -5.250551700592041
    6. 'èr' → logprob: -5.500551700592041
    7. '       ' → logprob: -5.625551700592041
    8. 'er' → logprob: -5.875551700592041
    9. 'ere' → logprob: -6.375551700592041
    10. '   ' → logprob: -6.500551700592041

Token 813: ' la' (ID: 557)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.48126015067100525
    2. ' table' → logprob: -1.4812601804733276
    3. 'pos' → logprob: -3.231260061264038
    4. 'offset' → logprob: -3.356260061264038
    5. 'ret' → logprob: -3.981260061264038
    6. ' pos' → logprob: -4.106260299682617
    7. ' offset' → logprob: -4.356260299682617
    8. ' ret' → logprob: -4.356260299682617
    9. 'sub' → logprob: -5.106260299682617
    10. '   ' → logprob: -5.981260299682617

Token 814: ' portion' (ID: 19137)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.549187183380127
    2. 'pos' → logprob: -2.049187183380127
    3. ' max' → logprob: -2.424187183380127
    4. 'table' → logprob: -2.924187183380127
    5. 'sub' → logprob: -3.549187183380127
    6. 'if' → logprob: -4.049187183380127
    7. ' pos' → logprob: -4.299187183380127
    8. 'min' → logprob: -4.299187183380127
    9. 'sum' → logprob: -4.299187183380127
    10. ' table' → logprob: -4.424187183380127

Token 815: ' de' (ID: 334)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.947799563407898
    2. ' =' → logprob: -1.072799563407898
    3. '=' → logprob: -2.3227996826171875
    4. '   ' → logprob: -2.5727996826171875
    5. ' de' → logprob: -3.5727996826171875
    6. 'de' → logprob: -3.6977996826171875
    7. '[' → logprob: -4.0727996826171875
    8. '       ' → logprob: -4.9477996826171875
    9. '_table' → logprob: -5.0727996826171875
    10. 'table' → logprob: -5.3227996826171875

Token 816: ' la' (ID: 557)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.003224771935492754
    2. ' table' → logprob: -5.753224849700928
    3. 'code' → logprob: -10.25322437286377
    4. '```' → logprob: -12.75322437286377
    5. '   ' → logprob: -12.87822437286377
    6. 'ret' → logprob: -13.50322437286377
    7. '(table' → logprob: -13.87822437286377
    8. ' code' → logprob: -14.00322437286377
    9. 'la' → logprob: -14.50322437286377
    10. '	table' → logprob: -15.00322437286377

Token 817: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.0025208459701389074
    2. ' table' → logprob: -6.00252103805542
    3. 'code' → logprob: -11.127520561218262
    4. '```' → logprob: -11.377520561218262
    5. '[' → logprob: -13.502520561218262
    6. 'tab' → logprob: -13.627520561218262
    7. 'ligne' → logprob: -13.627520561218262
    8. 't' → logprob: -13.752520561218262
    9. '	table' → logprob: -14.002520561218262
    10. 'array' → logprob: -14.252520561218262

Token 818: ' après' (ID: 16460)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.005638532340526581
    2. 'ret' → logprob: -5.630638599395752
    3. '   ' → logprob: -6.880638599395752
    4. 'offset' → logprob: -8.130638122558594
    5. '=' → logprob: -8.380638122558594
    6. ' =' → logprob: -8.880638122558594
    7. '[' → logprob: -9.755638122558594
    8. 'retval' → logprob: -9.755638122558594
    9. '_ret' → logprob: -9.880638122558594
    10. 'result' → logprob: -10.005638122558594

Token 819: ' propagation' (ID: 86772)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.013533944264054298
    2. '[offset' → logprob: -5.138534069061279
    3. ' offset' → logprob: -5.263534069061279
    4. 'l' → logprob: -6.513534069061279
    5. 'pos' → logprob: -8.388533592224121
    6. 'le' → logprob: -8.888533592224121
    7. '(offset' → logprob: -9.138533592224121
    8. '   ' → logprob: -9.263533592224121
    9. '#' → logprob: -9.888533592224121
    10. 'la' → logprob: -10.013533592224121

Token 820: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1390933990478516
    2. '[offset' → logprob: -1.2640933990478516
    3. '   ' → logprob: -1.8890933990478516
    4. ' =' → logprob: -2.3890933990478516
    5. 'ret' → logprob: -2.6390933990478516
    6. 'result' → logprob: -4.139093399047852
    7. '       ' → logprob: -4.639093399047852
    8. 'offset' → logprob: -4.764093399047852
    9. '[' → logprob: -4.764093399047852
    10. 'slice' → logprob: -5.264093399047852

Token 821: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8895128965377808
    2. 'pos' → logprob: -1.1395128965377808
    3. 'offset' → logprob: -3.2645130157470703
    4. 'v' → logprob: -3.5145130157470703
    5. 'val' → logprob: -3.5145130157470703
    6. 'ret' → logprob: -3.8895130157470703
    7. ' pos' → logprob: -4.13951301574707
    8. 'table' → logprob: -4.13951301574707
    9. ' if' → logprob: -4.26451301574707
    10. ' offset' → logprob: -4.63951301574707

Token 822: ' longueur' (ID: 104613)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1636544167995453
    2. 'for' → logprob: -2.913654327392578
    3. 'pos' → logprob: -3.413654327392578
    4. 'max' → logprob: -4.788654327392578
    5. '#' → logprob: -4.913654327392578
    6. 'prem' → logprob: -4.913654327392578
    7. 'possible' → logprob: -5.038654327392578
    8. 'v' → logprob: -5.538654327392578
    9. 's' → logprob: -5.538654327392578
    10. 'sum' → logprob: -6.288654327392578

Token 823: ' actuelle' (ID: 104951)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.1865508109331131
    2. 'ret' → logprob: -2.3115508556365967
    3. 'offset' → logprob: -3.6865508556365967
    4. '   ' → logprob: -3.8115508556365967
    5. 'result' → logprob: -5.186550617218018
    6. ' =' → logprob: -5.186550617218018
    7. '=' → logprob: -5.686550617218018
    8. 'slice' → logprob: -6.936550617218018
    9. 'res' → logprob: -6.936550617218018
    10. 'for' → logprob: -7.186550617218018

Token 824: ' ' (ID: 5310)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21282249689102173
    2. ' =' → logprob: -3.087822437286377
    3. 'ret' → logprob: -3.337822437286377
    4. 'table' → logprob: -3.337822437286377
    5. '[offset' → logprob: -4.212822437286377
    6. '   ' → logprob: -4.337822437286377
    7. 'result' → logprob: -4.337822437286377
    8. 'for' → logprob: -5.337822437286377
    9. '[' → logprob: -5.462822437286377
    10. '       ' → logprob: -5.712822437286377

Token 825: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9850216507911682
    2. '[offset' → logprob: -0.9850216507911682
    3. 'ret' → logprob: -2.7350215911865234
    4. ' =' → logprob: -3.2350215911865234
    5. '       ' → logprob: -3.2350215911865234
    6. '   ' → logprob: -3.7350215911865234
    7. 'if' → logprob: -4.110021591186523
    8. 'offset' → logprob: -4.235021591186523
    9. '[' → logprob: -4.360021591186523
    10. 'result' → logprob: -4.985021591186523

Token 826: ' taille' (ID: 41644)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.3287006616592407
    2. 'c' → logprob: -2.578700542449951
    3. 'ret' → logprob: -2.578700542449951
    4. 'current' → logprob: -2.828700542449951
    5. 'segment' → logprob: -3.078700542449951
    6. 'if' → logprob: -3.078700542449951
    7. 'candidate' → logprob: -3.078700542449951
    8. 'val' → logprob: -3.203700542449951
    9. 'cur' → logprob: -3.453700542449951
    10. 'tmp' → logprob: -3.453700542449951

Token 827: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0993536040186882
    2. ' =' → logprob: -3.224353551864624
    3. '[offset' → logprob: -3.224353551864624
    4. 'offset' → logprob: -5.849353790283203
    5. '   ' → logprob: -5.849353790283203
    6. '(offset' → logprob: -5.974353790283203
    7. '_table' → logprob: -6.474353790283203
    8. '=
' → logprob: -7.349353790283203
    9. 'ret' → logprob: -7.849353790283203
    10. '```' → logprob: -7.849353790283203

Token 828: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1297699362039566
    2. ' =' → logprob: -2.379770040512085
    3. '[offset' → logprob: -4.254769802093506
    4. 'ret' → logprob: -5.129769802093506
    5. 'offset' → logprob: -6.004769802093506
    6. '(offset' → logprob: -6.379769802093506
    7. 'table' → logprob: -7.379769802093506
    8. '   ' → logprob: -7.379769802093506
    9. 'length' → logprob: -7.754769802093506
    10. '=size' → logprob: -7.879769802093506

Token 829: '^' (ID: 61)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.023301847279071808
    2. ' <<' → logprob: -4.64830207824707
    3. '[pos' → logprob: -5.14830207824707
    4. '(pos' → logprob: -5.89830207824707
    5. '[offset' → logprob: -6.52330207824707
    6. '```' → logprob: -6.52330207824707
    7. '<<(' → logprob: -7.27330207824707
    8. '(offset' → logprob: -7.77330207824707
    9. '**' → logprob: -8.02330207824707
    10. '   ' → logprob: -8.89830207824707

Token 830: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -4.632542913896032e-05
    2. ' pos' → logprob: -10.500046730041504
    3. '(pos' → logprob: -11.625046730041504
    4. 'n' → logprob: -12.375046730041504
    5. '```' → logprob: -13.250046730041504
    6. '[pos' → logprob: -13.375046730041504
    7. 'length' → logprob: -13.500046730041504
    8. '(' → logprob: -15.375046730041504
    9. '`' → logprob: -16.000045776367188
    10. '   ' → logprob: -16.125045776367188

Token 831: ' dé' (ID: 2393)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3144942820072174
    2. ' =' → logprob: -1.439494252204895
    3. '   ' → logprob: -4.9394941329956055
    4. '[' → logprob: -5.1894941329956055
    5. '[offset' → logprob: -5.4394941329956055
    6. '```' → logprob: -5.5644941329956055
    7. '       ' → logprob: -6.4394941329956055
    8. 'for' → logprob: -6.6894941329956055
    9. 'result' → logprob: -6.8144941329956055
    10. ' for' → logprob: -7.6894941329956055

Token 832: 'cal' (ID: 5842)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0589321069419384
    2. 'fin' → logprob: -3.308932065963745
    3. 'tail' → logprob: -5.058932304382324
    4. 'termin' → logprob: -5.933932304382324
    5. 'cal' → logprob: -6.308932304382324
    6. 'len' → logprob: -6.683932304382324
    7. 'tected' → logprob: -6.808932304382324
    8. '=' → logprob: -6.933932304382324
    9. 'jà' → logprob: -7.058932304382324
    10. 'tails' → logprob: -7.058932304382324

Token 833: 'ée' (ID: 2894)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8578810691833496
    2. '[offset' → logprob: -1.1078810691833496
    3. '[' → logprob: -2.7328810691833496
    4. '   ' → logprob: -2.7328810691833496
    5. '_table' → logprob: -3.7328810691833496
    6. '       ' → logprob: -3.9828810691833496
    7. '[
' → logprob: -4.35788106918335
    8. ':' → logprob: -4.48288106918335
    9. 'offset' → logprob: -4.48288106918335
    10. '           ' → logprob: -4.73288106918335

Token 834: ' à' (ID: 1221)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.5230937004089355
    2. '=' → logprob: -1.0230937004089355
    3. ' =' → logprob: -4.1480937004089355
    4. '   ' → logprob: -4.7730937004089355
    5. '[' → logprob: -5.0230937004089355
    6. 'offset' → logprob: -5.3980937004089355
    7. 'ret' → logprob: -5.6480937004089355
    8. '```' → logprob: -5.7730937004089355
    9. '`' → logprob: -7.1480937004089355
    10. '[token' → logprob: -7.3980937004089355

Token 835: ' l' (ID: 305)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -2.4868770196917467e-05
    2. ' offset' → logprob: -10.750024795532227
    3. '[offset' → logprob: -13.625024795532227
    4. '```' → logprob: -13.625024795532227
    5. '(offset' → logprob: -15.125024795532227
    6. '1' → logprob: -15.625024795532227
    7. '`' → logprob: -15.625024795532227
    8. 'off' → logprob: -16.375024795532227
    9. '	offset' → logprob: -16.500024795532227
    10. '   ' → logprob: -16.750024795532227

Token 836: '’' (ID: 438)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.025998469442129135
    2. 'f' → logprob: -5.025998592376709
    3. '(offset' → logprob: -5.150998592376709
    4. '[offset' → logprob: -5.275998592376709
    5. ' offset' → logprob: -5.400998592376709
    6. 'cal' → logprob: -7.400998592376709
    7. '+' → logprob: -7.400998592376709
    8. '_offset' → logprob: -7.525998592376709
    9. 'return' → logprob: -7.650998592376709
    10. 'ffset' → logprob: -7.775998592376709

Token 837: 'offset' (ID: 6680)
  Prédit: 'offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.0009041957673616707
    2. ' offset' → logprob: -7.750904083251953
    3. 'pos' → logprob: -8.625904083251953
    4. '(offset' → logprob: -8.625904083251953
    5. 'off' → logprob: -10.125904083251953
    6. 'return' → logprob: -11.125904083251953
    7. '[offset' → logprob: -11.375904083251953
    8. '1' → logprob: -11.625904083251953
    9. 'f' → logprob: -12.125904083251953
    10. '```' → logprob: -12.250904083251953

Token 838: ' correct' (ID: 6145)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.3068859279155731
    2. 'ret' → logprob: -2.3068859577178955
    3. 'offset' → logprob: -3.3068859577178955
    4. ' =' → logprob: -3.3068859577178955
    5. '   ' → logprob: -3.5568859577178955
    6. 'table' → logprob: -3.9318859577178955
    7. '=' → logprob: -4.431885719299316
    8. '[pos' → logprob: -4.681885719299316
    9. 'pos' → logprob: -5.181885719299316
    10. '(offset' → logprob: -5.556885719299316

Token 839: '
' (ID: 198)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.8937190771102905
    2. '=' → logprob: -1.1437190771102905
    3. 'ret' → logprob: -1.7687190771102905
    4. 'if' → logprob: -3.39371919631958
    5. '   ' → logprob: -3.76871919631958
    6. 'tmp' → logprob: -5.01871919631958
    7. '       ' → logprob: -5.26871919631958
    8. 'result' → logprob: -5.39371919631958
    9. ' =' → logprob: -5.51871919631958
    10. 'temp' → logprob: -5.76871919631958

Token 840: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.92915278673172
    2. '       ' → logprob: -1.6791527271270752
    3. 'ret' → logprob: -1.9291527271270752
    4. '   ' → logprob: -3.304152727127075
    5. 'sub' → logprob: -3.554152727127075
    6. 'counts' → logprob: -3.679152727127075
    7. 'tmp' → logprob: -3.804152727127075
    8. 'segment' → logprob: -3.804152727127075
    9. 'current' → logprob: -4.179152965545654
    10. 'cur' → logprob: -4.304152965545654

Token 841: ' count' (ID: 3605)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -2.147956609725952
    2. 'cur' → logprob: -2.272956609725952
    3. 'counts' → logprob: -2.272956609725952
    4. 'current' → logprob: -2.397956609725952
    5. 'segment' → logprob: -2.522956609725952
    6. 'if' → logprob: -2.522956609725952
    7. 'tmp' → logprob: -2.772956609725952
    8. 'sub' → logprob: -3.272956609725952
    9. 'candidate' → logprob: -3.272956609725952
    10. 'cand' → logprob: -3.397956609725952

Token 842: '_table' (ID: 11721)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.884025514125824
    2. 's' → logprob: -1.0090255737304688
    3. ' =' → logprob: -1.5090255737304688
    4. '_table' → logprob: -7.509025573730469
    5. '_' → logprob: -7.759025573730469
    6. '_s' → logprob: -10.259025573730469
    7. '[' → logprob: -10.259025573730469
    8. 'es' → logprob: -10.509025573730469
    9. '_array' → logprob: -10.759025573730469
    10. '_=' → logprob: -10.884025573730469

Token 843: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07004435360431671
    2. ' =' → logprob: -2.6950442790985107
    3. '[offset' → logprob: -9.57004451751709
    4. '[' → logprob: -10.69504451751709
    5. '   ' → logprob: -11.32004451751709
    6. '```' → logprob: -14.94504451751709
    7. '       ' → logprob: -15.07004451751709
    8. '=
' → logprob: -15.19504451751709
    9. '=[' → logprob: -15.19504451751709
    10. ')' → logprob: -15.44504451751709

Token 844: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.005954752676188946
    2. ' table' → logprob: -5.130954742431641
    3. '   ' → logprob: -11.00595474243164
    4. 'tab' → logprob: -13.00595474243164
    5. '	table' → logprob: -13.13095474243164
    6. ' ' → logprob: -13.13095474243164
    7. '(table' → logprob: -13.38095474243164
    8. 'np' → logprob: -14.25595474243164
    9. '  ' → logprob: -15.38095474243164
    10. '       ' → logprob: -16.00595474243164

Token 845: '[offset' (ID: 84200)
  Prédit: '[offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[offset' → logprob: -2.5776860184123507e-06
    2. '   ' → logprob: -13.50000286102295
    3. 'offset' → logprob: -14.25000286102295
    4. '[
' → logprob: -16.125001907348633
    5. '[' → logprob: -16.500001907348633
    6. '       ' → logprob: -17.250001907348633
    7. ' [' → logprob: -17.375001907348633
    8. '```' → logprob: -17.375001907348633
    9. '	offset' → logprob: -17.625001907348633
    10. '(offset' → logprob: -17.625001907348633

Token 846: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -6.153795766294934e-06
    2. 'pos' → logprob: -12.500005722045898
    3. '[pos' → logprob: -13.875005722045898
    4. '(' → logprob: -14.750005722045898
    5. ' pos' → logprob: -14.875005722045898
    6. ',pos' → logprob: -15.375005722045898
    7. ' (' → logprob: -16.2500057220459
    8. '(po' → logprob: -16.7500057220459
    9. '(Pos' → logprob: -16.8750057220459
    10. '(p' → logprob: -17.1250057220459

Token 847: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0727437287569046
    2. ')' → logprob: -3.1977436542510986
    3. ':' → logprob: -4.072743892669678
    4. '+' → logprob: -4.572743892669678
    5. ')+' → logprob: -7.322743892669678
    6. ' +' → logprob: -7.572743892669678
    7. '   ' → logprob: -7.947743892669678
    8. '):
' → logprob: -9.07274341583252
    9. ' ' → logprob: -9.19774341583252
    10. ' ):' → logprob: -9.94774341583252

Token 848: 'offset' (ID: 6680)
  Prédit: 'offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -3.173704271830502e-06
    2. ' offset' → logprob: -13.25000286102295
    3. '(offset' → logprob: -13.50000286102295
    4. '[offset' → logprob: -17.750003814697266
    5. '	offset' → logprob: -17.875003814697266
    6. '.offset' → logprob: -19.625003814697266
    7. '   ' → logprob: -21.625003814697266
    8. '_offset' → logprob: -22.125003814697266
    9. '-offset' → logprob: -23.000003814697266
    10. 'off' → logprob: -23.625003814697266

Token 849: '(pos' (ID: 24566)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4741692543029785
    2. '(pos' → logprob: -0.9741692543029785
    3. ' pos' → logprob: -9.72416877746582
    4. '[pos' → logprob: -10.47416877746582
    5. '   ' → logprob: -13.84916877746582
    6. '```' → logprob: -13.84916877746582
    7. ',pos' → logprob: -14.09916877746582
    8. '	pos' → logprob: -14.22416877746582
    9. '(' → logprob: -15.09916877746582
    10. '_pos' → logprob: -15.97416877746582

Token 850: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0032507930882275105
    2. ' +' → logprob: -5.753250598907471
    3. '(pos' → logprob: -10.253251075744629
    4. '(' → logprob: -11.253251075744629
    5. '   ' → logprob: -11.503251075744629
    6. ':' → logprob: -12.503251075744629
    7. 'pos' → logprob: -12.628251075744629
    8. '()+' → logprob: -12.753251075744629
    9. '1' → logprob: -12.878251075744629
    10. '+:' → logprob: -14.878251075744629

Token 851: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1274258941411972
    2. '(pos' → logprob: -2.3774259090423584
    3. 'pos' → logprob: -3.8774259090423584
    4. '(' → logprob: -5.127425670623779
    5. '+' → logprob: -9.877426147460938
    6. ' pos' → logprob: -9.877426147460938
    7. ' (' → logprob: -10.002426147460938
    8. ' ' → logprob: -10.502426147460938
    9. '(next' → logprob: -11.127426147460938
    10. 'next' → logprob: -12.502426147460938

Token 852: '1' (ID: 16)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7844253778457642
    2. '(pos' → logprob: -1.1594253778457642
    3. '1' → logprob: -1.5344253778457642
    4. '(' → logprob: -4.409425258636475
    5. ' pos' → logprob: -6.659425258636475
    6. '+' → logprob: -7.284425258636475
    7. ' (' → logprob: -8.659425735473633
    8. ' ' → logprob: -11.284425735473633
    9. '[pos' → logprob: -11.284425735473633
    10. '```' → logprob: -11.659425735473633

Token 853: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003763263113796711
    2. ']
' → logprob: -5.753763198852539
    3. '].' → logprob: -8.628763198852539
    4. '   ' → logprob: -9.378763198852539
    5. '])' → logprob: -9.378763198852539
    6. ')]' → logprob: -9.503763198852539
    7. ')' → logprob: -10.003763198852539
    8. ']
' → logprob: -10.003763198852539
    9. ']+' → logprob: -10.128763198852539
    10. ']

' → logprob: -11.753763198852539

Token 854: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04258573427796364
    2. 'if' → logprob: -3.542585849761963
    3. '   ' → logprob: -4.417585849761963
    4. ' if' → logprob: -7.417585849761963
    5. 'for' → logprob: -10.042585372924805
    6. '```' → logprob: -11.167585372924805
    7. '<|end|>' → logprob: -11.292585372924805
    8. '           ' → logprob: -12.167585372924805
    9. 'count' → logprob: -12.792585372924805
    10. ' for' → logprob: -13.167585372924805

Token 855: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01280203927308321
    2. '       ' → logprob: -4.8878021240234375
    3. 'for' → logprob: -6.0128021240234375
    4. ' if' → logprob: -6.8878021240234375
    5. 'count' → logprob: -7.5128021240234375
    6. '   ' → logprob: -8.012802124023438
    7. 'mask' → logprob: -8.637802124023438
    8. '```' → logprob: -8.637802124023438
    9. 'best' → logprob: -8.762802124023438
    10. 'max' → logprob: -9.012802124023438

Token 856: ' np' (ID: 5374)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07356362789869308
    2. 'mask' → logprob: -3.198563575744629
    3. 'indices' → logprob: -5.073563575744629
    4. 'idx' → logprob: -5.198563575744629
    5. 'count' → logprob: -5.448563575744629
    6. 'max' → logprob: -5.698563575744629
    7. 'valid' → logprob: -6.073563575744629
    8. 'for' → logprob: -6.448563575744629
    9. 'min' → logprob: -7.198563575744629
    10. 'total' → logprob: -7.448563575744629

Token 857: '.argmax' (ID: 107631)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.3830929696559906
    2. 'count' → logprob: -1.758092999458313
    3. 'max' → logprob: -3.5080928802490234
    4. 'sum' → logprob: -3.6330928802490234
    5. 'min' → logprob: -4.008092880249023
    6. 'where' → logprob: -4.008092880249023
    7. 'args' → logprob: -4.133092880249023
    8. '.argmax' → logprob: -5.258092880249023
    9. 'minimum' → logprob: -5.633092880249023
    10. 'any' → logprob: -5.758092880249023

Token 858: ' retourne' (ID: 178818)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.14086835086345673
    2. '(' → logprob: -2.1408684253692627
    3. 'count' → logprob: -4.640868186950684
    4. '_count' → logprob: -6.640868186950684
    5. '=count' → logprob: -6.890868186950684
    6. '=' → logprob: -7.890868186950684
    7. '(
' → logprob: -8.015868186950684
    8. '[count' → logprob: -8.515868186950684
    9. '_result' → logprob: -8.640868186950684
    10. ' =' → logprob: -8.640868186950684

Token 859: ' l' (ID: 305)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.059086840599775314
    2. 'count' → logprob: -3.184086799621582
    3. '(np' → logprob: -4.184086799621582
    4. '(' → logprob: -8.059086799621582
    5. 'np' → logprob: -8.434086799621582
    6. 'the' → logprob: -9.934086799621582
    7. '(
' → logprob: -10.184086799621582
    8. '[count' → logprob: -10.559086799621582
    9. '(max' → logprob: -11.309086799621582
    10. ' count' → logprob: -11.684086799621582

Token 860: '’ind' (ID: 65649)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.016626957803964615
    2. 'count' → logprob: -4.141626834869385
    3. '(np' → logprob: -8.516627311706543
    4. '(' → logprob: -8.766627311706543
    5. '(
' → logprob: -9.391627311706543
    6. '[count' → logprob: -9.766627311706543
    7. ' count' → logprob: -10.391627311706543
    8. '=count' → logprob: -11.516627311706543
    9. '<count' → logprob: -11.766627311706543
    10. ',count' → logprob: -11.766627311706543

Token 861: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.004968916531652212
    2. 'count' → logprob: -5.379969120025635
    3. 'ices' → logprob: -8.879968643188477
    4. 'array' → logprob: -9.754968643188477
    5. '[count' → logprob: -9.879968643188477
    6. '(count' → logprob: -10.629968643188477
    7. 'dex' → logprob: -10.879968643188477
    8. 'exp' → logprob: -11.129968643188477
    9. 'ice' → logprob: -11.379968643188477
    10. 'x' → logprob: -11.629968643188477

Token 862: ' du' (ID: 1462)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.036797963082790375
    2. '(' → logprob: -3.4117980003356934
    3. 'count' → logprob: -6.161798000335693
    4. '(
' → logprob: -7.661798000335693
    5. '(np' → logprob: -7.786798000335693
    6. '(max' → logprob: -10.161797523498535
    7. '=count' → logprob: -10.536797523498535
    8. ')' → logprob: -11.286797523498535
    9. '[count' → logprob: -12.161797523498535
    10. '()' → logprob: -12.286797523498535

Token 863: ' premier' (ID: 15506)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0006208192789927125
    2. 'max' → logprob: -7.5006208419799805
    3. 'maximum' → logprob: -10.00062084197998
    4. ' count' → logprob: -10.87562084197998
    5. 'np' → logprob: -12.87562084197998
    6. 'plus' → logprob: -15.00062084197998
    7. '(count' → logprob: -15.37562084197998
    8. '[count' → logprob: -16.375619888305664
    9. 'largest' → logprob: -16.375619888305664
    10. ' maximum' → logprob: -16.500619888305664

Token 864: ' élément' (ID: 99627)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.01590356044471264
    2. 'max' → logprob: -4.765903472900391
    3. '(count' → logprob: -5.015903472900391
    4. 'maximum' → logprob: -8.14090347290039
    5. 'index' → logprob: -9.14090347290039
    6. '[count' → logprob: -9.39090347290039
    7. 'arg' → logprob: -10.51590347290039
    8. ' count' → logprob: -10.64090347290039
    9. '=count' → logprob: -10.89090347290039
    10. '```' → logprob: -11.01590347290039

Token 865: ' qui' (ID: 2780)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.30402424931526184
    2. '(count' → logprob: -2.4290242195129395
    3. '       ' → logprob: -2.8040242195129395
    4. '(' → logprob: -3.1790242195129395
    5. '(
' → logprob: -3.5540242195129395
    6. '()' → logprob: -4.1790242195129395
    7. '=' → logprob: -5.3040242195129395
    8. '(np' → logprob: -5.6790242195129395
    9. ')' → logprob: -5.8040242195129395
    10. 'index' → logprob: -6.0540242195129395

Token 866: ' vér' (ID: 42524)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.27316778898239136
    2. 'a' → logprob: -1.5231678485870361
    3. 'maximize' → logprob: -4.398167610168457
    4. 'ob' → logprob: -6.398167610168457
    5. ' maxim' → logprob: -6.523167610168457
    6. 'est' → logprob: -6.523167610168457
    7. 'obt' → logprob: -6.898167610168457
    8. ' maximize' → logprob: -7.898167610168457
    9. '==' → logprob: -7.898167610168457
    10. ' a' → logprob: -8.398167610168457

Token 867: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.04479604959487915
    2. 'if' → logprob: -4.044795989990234
    3. 'ife' → logprob: -4.669795989990234
    4. 'f' → logprob: -4.669795989990234
    5. 't' → logprob: -5.794795989990234
    6. 'ra' → logprob: -7.169795989990234
    7. 'rai' → logprob: -7.544795989990234
    8. 'rait' → logprob: -7.669795989990234
    9. 'ite' → logprob: -7.669795989990234
    10. 'rif' → logprob: -8.294795989990234

Token 868: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.11242245137691498
    2. '(count' → logprob: -2.362422466278076
    3. '(k' → logprob: -5.737422466278076
    4. 'np' → logprob: -5.737422466278076
    5. 'k' → logprob: -6.112422466278076
    6. '(np' → logprob: -6.737422466278076
    7. ' count' → logprob: -6.862422466278076
    8. ' (' → logprob: -7.737422466278076
    9. 'max' → logprob: -8.612421989440918
    10. '(' → logprob: -9.112421989440918

Token 869: ' condition' (ID: 7060)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.28248563408851624
    2. 'maximum' → logprob: -1.5324856042861938
    3. 'count' → logprob: -4.032485485076904
    4. '>' → logprob: -5.657485485076904
    5. 'me' → logprob: -5.907485485076904
    6. ' maximum' → logprob: -6.657485485076904
    7. 'np' → logprob: -6.657485485076904
    8. 'plus' → logprob: -6.907485485076904
    9. 'minimum' → logprob: -8.282485961914062
    10. '>=' → logprob: -8.407485961914062

Token 870: ' (' (ID: 350)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.19699493050575256
    2. '(np' → logprob: -2.4469950199127197
    3. '       ' → logprob: -3.4469950199127197
    4. 'if' → logprob: -4.321994781494141
    5. 'count' → logprob: -4.321994781494141
    6. '[count' → logprob: -4.571994781494141
    7. '(' → logprob: -5.321994781494141
    8. 'np' → logprob: -5.321994781494141
    9. '[np' → logprob: -5.696994781494141
    10. ' (' → logprob: -6.446994781494141

Token 871: 'ici' (ID: 3757)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0028640811797231436
    2. '(count' → logprob: -6.377863883972168
    3. 'np' → logprob: -7.002863883972168
    4. ' count' → logprob: -9.002863883972168
    5. 'k' → logprob: -10.002863883972168
    6. 'ret' → logprob: -10.627863883972168
    7. '(np' → logprob: -11.002863883972168
    8. 'table' → logprob: -11.752863883972168
    9. '   ' → logprob: -12.002863883972168
    10. '(' → logprob: -12.002863883972168

Token 872: ' >=' (ID: 5064)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.17860855162143707
    2. '(count' → logprob: -2.6786086559295654
    3. 'np' → logprob: -3.9286086559295654
    4. ')' → logprob: -4.303608417510986
    5. '>=' → logprob: -4.428608417510986
    6. '(np' → logprob: -4.553608417510986
    7. ' count' → logprob: -5.428608417510986
    8. '       ' → logprob: -5.428608417510986
    9. '=count' → logprob: -5.678608417510986
    10. '=' → logprob: -5.803608417510986

Token 873: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0013007113011553884
    2. ' k' → logprob: -6.751300811767578
    3. 'count' → logprob: -9.751300811767578
    4. '   ' → logprob: -10.626300811767578
    5. '           ' → logprob: -11.626300811767578
    6. 'np' → logprob: -11.751300811767578
    7. 'ret' → logprob: -12.126300811767578
    8. '(k' → logprob: -12.126300811767578
    9. '       ' → logprob: -12.626300811767578
    10. '```' → logprob: -13.001300811767578

Token 874: ')
' (ID: 446)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4720240533351898
    2. '[count' → logprob: -1.3470240831375122
    3. 'if' → logprob: -3.0970239639282227
    4. ')' → logprob: -3.5970239639282227
    5. '       ' → logprob: -4.222023963928223
    6. ' >=' → logprob: -4.847023963928223
    7. '[np' → logprob: -4.847023963928223
    8. '>=' → logprob: -5.847023963928223
    9. '[' → logprob: -5.847023963928223
    10. '(count' → logprob: -6.097023963928223

Token 875: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2724197506904602
    2. '[count' → logprob: -3.2724196910858154
    3. '(count' → logprob: -3.3974196910858154
    4. ' if' → logprob: -3.5224196910858154
    5. '[' → logprob: -3.6474196910858154
    6. '[np' → logprob: -3.7724196910858154
    7. '(np' → logprob: -4.1474199295043945
    8. '>=' → logprob: -4.2724199295043945
    9. 'count' → logprob: -4.2724199295043945
    10. 'np' → logprob: -4.5224199295043945

Token 876: ' index' (ID: 3472)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.539706826210022
    2. 'if' → logprob: -1.039706826210022
    3. 'index' (adapté à ' index') → logprob: -3.2897067070007324
    4. '       ' → logprob: -5.039706707000732
    5. 'i' → logprob: -5.039706707000732
    6. 'found' → logprob: -5.789706707000732
    7. 'ret' → logprob: -6.039706707000732
    8. 'ind' → logprob: -6.289706707000732
    9. 'candidate' → logprob: -6.414706707000732
    10. 'pos' → logprob: -7.664706707000732

Token 877: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759468078613281
    2. ' =' → logprob: -0.8259468078613281
    3. '=np' → logprob: -13.075946807861328
    4. '_' → logprob: -13.450946807861328
    5. 's' → logprob: -14.075946807861328
    6. '＝' → logprob: -14.450946807861328
    7. ')' → logprob: -14.575946807861328
    8. '	' → logprob: -14.700946807861328
    9. '_=' → logprob: -14.825946807861328
    10. ',' → logprob: -15.200946807861328

Token 878: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.007468432188034058
    2. '(np' → logprob: -5.007468223571777
    3. ' np' → logprob: -7.382468223571777
    4. 'count' → logprob: -9.507468223571777
    5. 'int' → logprob: -10.007468223571777
    6. 'next' → logprob: -12.757468223571777
    7. '[np' → logprob: -12.882468223571777
    8. '(count' → logprob: -13.007468223571777
    9. '(int' → logprob: -13.757468223571777
    10. '   ' → logprob: -14.632468223571777

Token 879: '.argmax' (ID: 107631)
  Prédit: '.argmax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.argmax' → logprob: -4.143808109802194e-05
    2. '.where' → logprob: -10.125041007995605
    3. 'arg' → logprob: -14.250041007995605
    4. 'where' → logprob: -15.250041007995605
    5. '.ndarray' → logprob: -16.000041961669922
    6. '.arg' → logprob: -16.250041961669922
    7. '```' → logprob: -16.250041961669922
    8. '.asarray' → logprob: -16.375041961669922
    9. '.search' → logprob: -17.250041961669922
    10. '.flat' → logprob: -17.750041961669922

Token 880: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -9.388769103679806e-05
    2. 'count' → logprob: -9.375093460083008
    3. '(' → logprob: -11.875093460083008
    4. '((' → logprob: -14.375093460083008
    5. '[count' → logprob: -14.875093460083008
    6. '(
' → logprob: -15.125093460083008
    7. '(np' → logprob: -15.875093460083008
    8. '<count' → logprob: -15.875093460083008
    9. '   ' → logprob: -16.125093460083008
    10. ' (' → logprob: -16.125093460083008

Token 881: '_table' (ID: 11721)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.017401866614818573
    2. '>=' → logprob: -4.392401695251465
    3. '(' → logprob: -5.392401695251465
    4. 'count' → logprob: -9.267401695251465
    5. ' >=' → logprob: -9.517401695251465
    6. ' (' → logprob: -9.892401695251465
    7. '(table' → logprob: -10.767401695251465
    8. ')' → logprob: -10.892401695251465
    9. '((' → logprob: -11.142401695251465
    10. ')>=' → logprob: -11.517401695251465

Token 882: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.474225252866745
    2. ' >=' → logprob: -0.9742252826690674
    3. ')' → logprob: -9.849225044250488
    4. ')>=' → logprob: -10.224225044250488
    5. '   ' → logprob: -10.599225044250488
    6. '[' → logprob: -10.974225044250488
    7. ')
' → logprob: -12.849225044250488
    8. ']>=' → logprob: -13.099225044250488
    9. 'count' → logprob: -13.224225044250488
    10. ',' → logprob: -13.474225044250488

Token 883: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.15310683415737e-05
    2. ' k' → logprob: -10.750021934509277
    3. '	k' → logprob: -19.87502098083496
    4. '           ' → logprob: -21.00002098083496
    5. '   ' → logprob: -21.37502098083496
    6. '[k' → logprob: -22.50002098083496
    7. '               ' → logprob: -22.75002098083496
    8. 'kx' → logprob: -22.87502098083496
    9. '
' → logprob: -23.00002098083496
    10. '       ' → logprob: -23.12502098083496

Token 884: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002986392646562308
    2. ')
' → logprob: -8.250298500061035
    3. ' )' → logprob: -10.500298500061035
    4. '   ' → logprob: -12.250298500061035
    5. '<|end|>' → logprob: -13.375298500061035
    6. '       ' → logprob: -14.625298500061035
    7. ')return' → logprob: -14.750298500061035
    8. ' if' → logprob: -14.875298500061035
    9. ')

' → logprob: -15.000298500061035
    10. '[' → logprob: -15.000298500061035

Token 885: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1707013845443726
    2. '   ' → logprob: -1.4207013845443726
    3. ':' → logprob: -1.7957013845443726
    4. ')' → logprob: -2.670701503753662
    5. '<|end|>' → logprob: -2.795701503753662
    6. '       ' → logprob: -2.920701503753662
    7. 'if' → logprob: -3.545701503753662
    8. '
' → logprob: -4.295701503753662
    9. '\n' → logprob: -4.295701503753662
    10. '```' → logprob: -4.670701503753662

Token 886: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3016155958175659
    2. ')' → logprob: -2.6766157150268555
    3. 'if' → logprob: -2.6766157150268555
    4. '
' → logprob: -3.0516157150268555
    5. '<|end|>' → logprob: -3.4266157150268555
    6. '   ' → logprob: -4.0516157150268555
    7. ':' → logprob: -4.9266157150268555
    8. ' ' → logprob: -5.0516157150268555
    9. '       ' → logprob: -5.1766157150268555
    10. ' 
' → logprob: -6.4266157150268555

Token 887: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.320199877838604e-07
    2. ' if' → logprob: -14.875
    3. '       ' → logprob: -16.75
    4. '```' → logprob: -17.625
    5. '   ' → logprob: -19.25
    6. '
' → logprob: -20.25
    7. '           ' → logprob: -20.5
    8. '#' → logprob: -20.75
    9. '	if' → logprob: -21.5
    10. '        
' → logprob: -21.75

Token 888: ' au' (ID: 2791)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.01280039269477129
    2. 'index' → logprob: -4.637800216674805
    3. ' count' → logprob: -5.887800216674805
    4. ' index' → logprob: -9.137800216674805
    5. '(count' → logprob: -9.262800216674805
    6. 'ret' → logprob: -10.512800216674805
    7. '(index' → logprob: -11.887800216674805
    8. ' ' → logprob: -12.137800216674805
    9. '(' → logprob: -12.262800216674805
    10. '   ' → logprob: -12.262800216674805

Token 889: ' moins' (ID: 15924)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07426122575998306
    2. ' count' → logprob: -2.82426118850708
    3. 'index' → logprob: -4.69926118850708
    4. ' index' → logprob: -6.19926118850708
    5. 'nd' → logprob: -7.82426118850708
    6. ' ' → logprob: -8.824261665344238
    7. '   ' → logprob: -9.074261665344238
    8. '(count' → logprob: -9.074261665344238
    9. '  ' → logprob: -9.824261665344238
    10. 'x' → logprob: -9.949261665344238

Token 890: ' un' (ID: 537)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3890058100223541
    2. ' count' → logprob: -1.1390057802200317
    3. '(count' → logprob: -6.889005661010742
    4. ' (' → logprob: -7.514005661010742
    5. 'index' → logprob: -8.389005661010742
    6. ' index' → logprob: -8.764005661010742
    7. ' np' → logprob: -9.889005661010742
    8. 'np' → logprob: -10.139005661010742
    9. '   ' → logprob: -10.389005661010742
    10. ' ' → logprob: -10.764005661010742

Token 891: ' motif' (ID: 72753)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16407670080661774
    2. ' count' → logprob: -2.039076805114746
    3. '(count' → logprob: -4.414076805114746
    4. 'index' → logprob: -5.539076805114746
    5. ' (' → logprob: -5.914076805114746
    6. ' index' → logprob: -7.039076805114746
    7. ' if' → logprob: -7.914076805114746
    8. '[count' → logprob: -7.914076805114746
    9. 'if' → logprob: -8.039076805114746
    10. '<count' → logprob: -8.664076805114746

Token 892: ' satisfait' (ID: 174890)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.49408310651779175
    2. '>=' → logprob: -1.9940831661224365
    3. '[count' → logprob: -2.8690831661224365
    4. ':' → logprob: -3.4940831661224365
    5. '[index' → logprob: -3.7440831661224365
    6. 'count' → logprob: -3.9940831661224365
    7. ' ==' → logprob: -4.244082927703857
    8. ' !=' → logprob: -4.244082927703857
    9. ' <=' → logprob: -4.494082927703857
    10. ' count' → logprob: -4.744082927703857

Token 893: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.34162774682044983
    2. ' count' → logprob: -1.4666277170181274
    3. '(count' → logprob: -3.841627836227417
    4. 'index' → logprob: -4.341627597808838
    5. ' index' → logprob: -4.466627597808838
    6. ' if' → logprob: -5.216627597808838
    7. 'if' → logprob: -5.466627597808838
    8. ' (' → logprob: -6.216627597808838
    9. '(index' → logprob: -7.716627597808838
    10. '   ' → logprob: -8.091628074645996

Token 894: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.5578757524490356
    2. 'count' → logprob: -1.0578757524490356
    3. ' condition' → logprob: -3.182875633239746
    4. '(count' → logprob: -3.682875633239746
    5. ' count' → logprob: -5.182875633239746
    6. ' (' → logprob: -6.182875633239746
    7. '(condition' → logprob: -6.307875633239746
    8. 'index' → logprob: -6.432875633239746
    9. 'k' → logprob: -7.057875633239746
    10. '(index' → logprob: -7.557875633239746

Token 895: ' d' (ID: 272)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0973343551158905
    2. ':' → logprob: -2.597334384918213
    3. 'and' → logprob: -5.097334384918213
    4. ' if' → logprob: -6.347334384918213
    5. ':
' → logprob: -6.597334384918213
    6. ' !=' → logprob: -6.597334384918213
    7. 'if' → logprob: -6.722334384918213
    8. '   ' → logprob: -6.722334384918213
    9. '       ' → logprob: -6.722334384918213
    10. ' ==' → logprob: -6.722334384918213

Token 896: '’occ' (ID: 126550)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -1.1979349851608276
    2. 'count' → logprob: -1.6979349851608276
    3. 'index' → logprob: -1.8229349851608276
    4. ''' → logprob: -2.572935104370117
    5. '`' → logprob: -2.572935104370117
    6. '(index' → logprob: -2.697935104370117
    7. ' count' → logprob: -3.822935104370117
    8. '```' → logprob: -4.197935104370117
    9. 'e' → logprob: -4.322935104370117
    10. ' (' → logprob: -4.447935104370117

Token 897: 'urrence' (ID: 29194)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.12788011133670807
    2. 'urrence' → logprob: -3.502880096435547
    3. 'urr' → logprob: -3.627880096435547
    4. 'urred' → logprob: -4.127880096435547
    5. 'urrent' → logprob: -4.252880096435547
    6. 'up' → logprob: -4.377880096435547
    7. 'u' → logprob: -5.752880096435547
    8. 'urre' → logprob: -5.752880096435547
    9. 'urent' → logprob: -6.002880096435547
    10. 'e' → logprob: -6.502880096435547

Token 898: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04292336478829384
    2. ':' → logprob: -3.6679234504699707
    3. 'and' → logprob: -4.167923450469971
    4. ':
' → logprob: -8.292922973632812
    5. '       ' → logprob: -8.417922973632812
    6. '           ' → logprob: -8.542922973632812
    7. 'if' → logprob: -9.542922973632812
    8. ' if' → logprob: -9.667922973632812
    9. ',' → logprob: -9.917922973632812
    10. ' :' → logprob: -9.917922973632812

Token 899: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11965487897396088
    2. ' if' → logprob: -2.244654893875122
    3. '       ' → logprob: -4.994654655456543
    4. '           ' → logprob: -10.744654655456543
    5. '   ' → logprob: -12.494654655456543
    6. '	if' → logprob: -12.619654655456543
    7. '```' → logprob: -12.619654655456543
    8. ' ' → logprob: -14.244654655456543
    9. 'break' → logprob: -14.619654655456543
    10. ' and' → logprob: -15.244654655456543

Token 900: ' stock' (ID: 6546)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20252010226249695
    2. '       ' → logprob: -2.3275201320648193
    3. ' if' → logprob: -3.0775201320648193
    4. '           ' → logprob: -3.4525201320648193
    5. '   ' → logprob: -5.70251989364624
    6. 'break' → logprob: -6.07751989364624
    7. ':' → logprob: -6.45251989364624
    8. ':
' → logprob: -7.95251989364624
    9. '#' → logprob: -9.827520370483398
    10. 'import' → logprob: -9.952520370483398

Token 901: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8899291157722473
    2. '   ' → logprob: -1.2649290561676025
    3. 'ret' → logprob: -1.8899290561676025
    4. '       ' → logprob: -2.5149290561676025
    5. 'er' → logprob: -2.7649290561676025
    6. 'if' → logprob: -5.514929294586182
    7. 'ifie' → logprob: -7.014929294586182
    8. 'r' → logprob: -7.014929294586182
    9. '    ' → logprob: -7.139929294586182
    10. ' ret' → logprob: -7.264929294586182

Token 902: ' la' (ID: 557)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.7616049647331238
    2. 'pos' → logprob: -1.1366050243377686
    3. '(index' → logprob: -2.2616050243377686
    4. '(' → logprob: -3.3866050243377686
    5. 'count' → logprob: -3.8866050243377686
    6. 'ret' → logprob: -3.8866050243377686
    7. '(pos' → logprob: -3.8866050243377686
    8. ' index' → logprob: -6.2616047859191895
    9. '(count' → logprob: -6.3866047859191895
    10. ' (' → logprob: -6.3866047859191895

Token 903: ' pa' (ID: 2428)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.36549076437950134
    2. 'pos' → logprob: -2.365490674972534
    3. 'count' → logprob: -2.365490674972534
    4. 'ret' → logprob: -3.115490674972534
    5. 'if' → logprob: -3.115490674972534
    6. ' index' → logprob: -4.365490913391113
    7. 'max' → logprob: -5.865490913391113
    8. 'sub' → logprob: -6.115490913391113
    9. 'offset' → logprob: -6.365490913391113
    10. 'len' → logprob: -6.365490913391113

Token 904: 'ie' (ID: 396)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06714838743209839
    2. 'ss' → logprob: -3.567148447036743
    3. 'y' → logprob: -4.192148208618164
    4. 'os' → logprob: -4.692148208618164
    5. 's' → logprob: -5.317148208618164
    6. 'rt' → logprob: -5.942148208618164
    7. 'ys' → logprob: -6.317148208618164
    8. 'th' → logprob: -7.067148208618164
    9. 'if' → logprob: -7.692148208618164
    10. 'r' → logprob: -7.817148208618164

Token 905: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6933003664016724
    2. 's' → logprob: -1.4433003664016724
    3. '=' → logprob: -2.068300247192383
    4. 'r' → logprob: -3.193300247192383
    5. '   ' → logprob: -3.818300247192383
    6. 'n' → logprob: -3.818300247192383
    7. 't' → logprob: -4.443300247192383
    8. 'nt' → logprob: -4.693300247192383
    9. ' ' → logprob: -4.818300247192383
    10. '_' → logprob: -5.068300247192383

Token 906: 'index' (ID: 2257)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5696834921836853
    2. 'index' → logprob: -1.19468355178833
    3. ' index' → logprob: -3.06968355178833
    4. ' pos' → logprob: -4.06968355178833
    5. 'ret' → logprob: -4.19468355178833
    6. 'count' → logprob: -4.19468355178833
    7. '=' → logprob: -4.44468355178833
    8. '       ' → logprob: -5.06968355178833
    9. ')' → logprob: -5.19468355178833
    10. ' =' → logprob: -5.44468355178833

Token 907: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4849473536014557
    2. '+' → logprob: -2.234947443008423
    3. '<<' → logprob: -2.484947443008423
    4. ' +' → logprob: -2.859947443008423
    5. ' if' → logprob: -3.609947443008423
    6. '*' → logprob: -3.609947443008423
    7. ' *' → logprob: -3.734947443008423
    8. 'if' → logprob: -3.859947443008423
    9. ' ,' → logprob: -4.484947204589844
    10. ')' → logprob: -4.484947204589844

Token 908: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.384919136762619
    2. 'length' → logprob: -1.5099191665649414
    3. ' pos' → logprob: -2.6349191665649414
    4. ' length' → logprob: -3.6349191665649414
    5. ')' → logprob: -9.134919166564941
    6. 'len' → logprob: -9.384919166564941
    7. 'count' → logprob: -9.759919166564941
    8. 'offset' → logprob: -10.134919166564941
    9. '(pos' → logprob: -10.134919166564941
    10. 'index' → logprob: -10.884919166564941

Token 909: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09817555546760559
    2. ',' → logprob: -2.473175525665283
    3. ')
' → logprob: -5.973175525665283
    4. '       ' → logprob: -6.098175525665283
    5. '),' → logprob: -6.098175525665283
    6. '           ' → logprob: -6.473175525665283
    7. ',
' → logprob: -8.098176002502441
    8. ',)' → logprob: -9.473176002502441
    9. ' )' → logprob: -10.098176002502441
    10. '               ' → logprob: -10.223176002502441

Token 910: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046306412667036057
    2. '           ' → logprob: -4.171306610107422
    3. ' =' → logprob: -4.296306610107422
    4. '=' → logprob: -4.671306610107422
    5. ',' → logprob: -5.921306610107422
    6. ' if' → logprob: -6.546306610107422
    7. '   ' → logprob: -7.546306610107422
    8. 'if' → logprob: -7.546306610107422
    9. '	' → logprob: -7.671306610107422
    10. '<|end|>' → logprob: -7.796306610107422

Token 911: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0752423107624054
    2. '       ' → logprob: -2.700242280960083
    3. ' if' → logprob: -5.325242519378662
    4. '           ' → logprob: -7.825242519378662
    5. '   ' → logprob: -11.075242042541504
    6. '	if' → logprob: -12.075242042541504
    7. '```' → logprob: -13.200242042541504
    8. '	' → logprob: -14.575242042541504
    9. '               ' → logprob: -14.575242042541504
    10. 'If' → logprob: -15.200242042541504

Token 912: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.005794527940452099
    2. ' count' → logprob: -5.505794525146484
    3. 'index' → logprob: -6.630794525146484
    4. '(count' → logprob: -8.380794525146484
    5. 'table' → logprob: -9.505794525146484
    6. ' index' → logprob: -10.380794525146484
    7. '   ' → logprob: -11.505794525146484
    8. '(' → logprob: -11.630794525146484
    9. ' (' → logprob: -11.755794525146484
    10. ' ' → logprob: -11.880794525146484

Token 913: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.0001951961312443018
    2. '[pos' → logprob: -9.375195503234863
    3. 'pos' → logprob: -10.500195503234863
    4. '(pos' → logprob: -10.625195503234863
    5. '   ' → logprob: -11.125195503234863
    6. 'table' → logprob: -11.375195503234863
    7. '>=' → logprob: -12.375195503234863
    8. 'Table' → logprob: -12.625195503234863
    9. ' >=' → logprob: -12.750195503234863
    10. '==' → logprob: -12.750195503234863

Token 914: '[index' (ID: 11815)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2663007378578186
    2. '[index' → logprob: -1.6413006782531738
    3. ' >=' → logprob: -3.266300678253174
    4. '[' → logprob: -6.516300678253174
    5. '.size' → logprob: -8.516301155090332
    6. '[idx' → logprob: -9.891301155090332
    7. '[size' → logprob: -10.016301155090332
    8. '   ' → logprob: -10.141301155090332
    9. '```' → logprob: -11.391301155090332
    10. '>' → logprob: -11.516301155090332

Token 915: ']' (ID: 60)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.11410831660032272
    2. ']>=' → logprob: -2.9891083240509033
    3. ' >=' → logprob: -3.1141083240509033
    4. ']' → logprob: -4.364108085632324
    5. ')>=' → logprob: -8.739108085632324
    6. '>' → logprob: -9.239108085632324
    7. ')' → logprob: -9.614108085632324
    8. '   ' → logprob: -11.614108085632324
    9. ' ' → logprob: -11.614108085632324
    10. '[' → logprob: -11.864108085632324

Token 916: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.062120720744132996
    2. ' >=' → logprob: -2.8121206760406494
    3. '>' → logprob: -8.93712043762207
    4. '   ' → logprob: -12.06212043762207
    5. ']>=' → logprob: -12.31212043762207
    6. ')>=' → logprob: -12.81212043762207
    7. ' ' → logprob: -12.93712043762207
    8. '[' → logprob: -13.68712043762207
    9. ' >' → logprob: -13.68712043762207
    10. '≥' → logprob: -14.31212043762207

Token 917: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0206720617134124e-05
    2. ' k' → logprob: -11.50001049041748
    3. '	k' → logprob: -20.500009536743164
    4. '   ' → logprob: -21.750009536743164
    5. '
' → logprob: -22.125009536743164
    6. '```' → logprob: -22.500009536743164
    7. ' ' → logprob: -23.875009536743164
    8. '_k' → logprob: -24.000009536743164
    9. ' к' → logprob: -24.375009536743164
    10. '=k' → logprob: -24.625009536743164

Token 918: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11549464613199234
    2. ':
' → logprob: -2.240494728088379
    3. '       ' → logprob: -6.615494728088379
    4. '           ' → logprob: -6.865494728088379
    5. ' and' → logprob: -8.240494728088379
    6. '):
' → logprob: -12.490494728088379
    7. ',' → logprob: -12.615494728088379
    8. 'and' → logprob: -12.740494728088379
    9. ':
' → logprob: -13.115494728088379
    10. '=' → logprob: -13.240494728088379

Token 919: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004028295632451773
    2. '           ' → logprob: -5.6290283203125
    3. '```' → logprob: -8.5040283203125
    4. ':' → logprob: -9.8790283203125
    5. '	       ' → logprob: -10.3790283203125
    6. '<|end|>' → logprob: -10.5040283203125
    7. '               ' → logprob: -11.1290283203125
    8. '        
' → logprob: -11.5040283203125
    9. ':
' → logprob: -11.5040283203125
    10. ',' → logprob: -11.5040283203125

Token 920: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.0012624947121366858
    2. '           ' → logprob: -7.126262664794922
    3. ' ret' → logprob: -8.126262664794922
    4. '               ' → logprob: -9.251262664794922
    5. 'if' → logprob: -9.876262664794922
    6. '   ' → logprob: -12.251262664794922
    7. '       ' → logprob: -12.626262664794922
    8. '	ret' → logprob: -13.126262664794922
    9. 'result' → logprob: -13.501262664794922
    10. ' if' → logprob: -14.251262664794922

Token 921: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014283388853073
    2. '=' → logprob: -1.7014282941818237
    3. '   ' → logprob: -12.326428413391113
    4. '	' → logprob: -12.576428413391113
    5. ',' → logprob: -13.076428413391113
    6. '    ' → logprob: -13.951428413391113
    7. ' ' → logprob: -14.201428413391113
    8. '_' → logprob: -14.326428413391113
    9. '[' → logprob: -14.826428413391113
    10. '<|end|>' → logprob: -14.826428413391113

Token 922: ' (' (ID: 350)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.0001991298486245796
    2. ' (' → logprob: -8.875199317932129
    3. 'index' → logprob: -10.125199317932129
    4. '[index' → logprob: -12.000199317932129
    5. '(' → logprob: -12.750199317932129
    6. '(idx' → logprob: -12.875199317932129
    7. '   ' → logprob: -13.250199317932129
    8. '((' → logprob: -13.750199317932129
    9. '(i' → logprob: -14.000199317932129
    10. '(pos' → logprob: -14.375199317932129

Token 923: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.00014001218369230628
    2. ' index' → logprob: -9.500140190124512
    3. 'pos' → logprob: -9.875140190124512
    4. 'k' → logprob: -12.250140190124512
    5. '(index' → logprob: -12.750140190124512
    6. 'ind' → logprob: -13.125140190124512
    7. '   ' → logprob: -14.000140190124512
    8. 'offset' → logprob: -14.750140190124512
    9. ' ' → logprob: -15.000140190124512
    10. '#index' → logprob: -15.000140190124512

Token 924: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016432604752480984
    2. ' ,' → logprob: -9.250164031982422
    3. ',pos' → logprob: -9.750164031982422
    4. '+' → logprob: -12.125164031982422
    5. ',
' → logprob: -13.000164031982422
    6. '   ' → logprob: -13.625164031982422
    7. ' +' → logprob: -15.125164031982422
    8. 'pos' → logprob: -15.250164031982422
    9. ',len' → logprob: -16.250164031982422
    10. ',index' → logprob: -16.375164031982422

Token 925: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.7610454708337784e-05
    2. ' pos' → logprob: -10.500027656555176
    3. '	pos' → logprob: -20.75002670288086
    4. 'position' → logprob: -22.00002670288086
    5. '   ' → logprob: -22.12502670288086
    6. '_pos' → logprob: -22.37502670288086
    7. '(pos' → logprob: -23.00002670288086
    8. 'Pos' → logprob: -23.25002670288086
    9. 'p' → logprob: -23.50002670288086
    10. '[pos' → logprob: -23.50002670288086

Token 926: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005274668801575899
    2. ')
' → logprob: -5.255274772644043
    3. '           ' → logprob: -10.755274772644043
    4. '       ' → logprob: -11.880274772644043
    5. '<|end|>' → logprob: -13.005274772644043
    6. ',' → logprob: -13.130274772644043
    7. '   ' → logprob: -13.130274772644043
    8. ' )' → logprob: -13.505274772644043
    9. '+' → logprob: -13.630274772644043
    10. ')return' → logprob: -14.005274772644043

Token 927: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10142399370670319
    2. '<|end|>' → logprob: -3.226423978805542
    3. '       ' → logprob: -3.476423978805542
    4. '
' → logprob: -4.101424217224121
    5. '    
' → logprob: -5.101424217224121
    6. '           ' → logprob: -6.351424217224121
    7. '```' → logprob: -8.351424217224121
    8. '        
' → logprob: -8.476424217224121
    9. ' if' → logprob: -8.476424217224121
    10. ')' → logprob: -9.226424217224121

Token 928: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010830625891685486
    2. '    
' → logprob: -5.635830402374268
    3. '
' → logprob: -6.260830402374268
    4. 'if' → logprob: -6.510830402374268
    5. ' if' → logprob: -6.510830402374268
    6. '       ' → logprob: -7.135830402374268
    7. '<|end|>' → logprob: -7.510830402374268
    8. 'return' → logprob: -7.885830402374268
    9. '        
' → logprob: -9.010830879211426
    10. ' return' → logprob: -9.260830879211426

Token 929: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00040099851321429014
    2. ':' → logprob: -9.25040054321289
    3. '		' → logprob: -9.37540054321289
    4. 'break' → logprob: -9.50040054321289
    5. '	       ' → logprob: -9.75040054321289
    6. '       ' → logprob: -10.37540054321289
    7. '               ' → logprob: -11.25040054321289
    8. ' break' → logprob: -11.25040054321289
    9. '	break' → logprob: -12.00040054321289
    10. ':
' → logprob: -12.00040054321289

Token 930: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008004573755897582
    2. 'break' → logprob: -8.000800132751465
    3. '	       ' → logprob: -8.500800132751465
    4. '       ' → logprob: -8.875800132751465
    5. '		' → logprob: -9.500800132751465
    6. ' break' → logprob: -11.750800132751465
    7. '               ' → logprob: -11.750800132751465
    8. '		   ' → logprob: -12.250800132751465
    9. '```' → logprob: -12.250800132751465
    10. '	break' → logprob: -12.375800132751465

Token 931: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2545592486858368
    2. '           ' → logprob: -1.5045592784881592
    3. ' break' → logprob: -6.00455904006958
    4. '       ' → logprob: -9.504559516906738
    5. '	break' → logprob: -10.254559516906738
    6. '               ' → logprob: -10.504559516906738
    7. '   ' → logprob: -11.754559516906738
    8. 'pass' → logprob: -12.004559516906738
    9. 'continue' → logprob: -13.129559516906738
    10. 'return' → logprob: -13.129559516906738

Token 932: ' Sinon' (ID: 154924)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0003983760252594948
    2. ' break' → logprob: -8.500398635864258
    3. '           ' → logprob: -8.750398635864258
    4. '       ' → logprob: -10.750398635864258
    5. 'continue' → logprob: -11.625398635864258
    6. 'pass' → logprob: -12.500398635864258
    7. '	break' → logprob: -13.625398635864258
    8. '               ' → logprob: -15.125398635864258
    9. '   ' → logprob: -15.125398635864258
    10. 'ret' → logprob: -15.500398635864258

Token 933: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6978058218955994
    2. 'break' → logprob: -0.6978058218955994
    3. ' break' → logprob: -5.447805881500244
    4. '               ' → logprob: -8.697805404663086
    5. '	break' → logprob: -9.322805404663086
    6. '       ' → logprob: -10.072805404663086
    7. '   ' → logprob: -11.447805404663086
    8. '		' → logprob: -11.822805404663086
    9. '	       ' → logprob: -11.822805404663086
    10. ' ' → logprob: -12.572805404663086

Token 934: ' aucune' (ID: 51173)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.064823679625988
    2. '           ' → logprob: -2.814823627471924
    3. ' break' → logprob: -5.939823627471924
    4. '       ' → logprob: -8.939824104309082
    5. 'continue' → logprob: -10.189824104309082
    6. '	break' → logprob: -10.689824104309082
    7. '               ' → logprob: -11.439824104309082
    8. 'return' → logprob: -12.314824104309082
    9. ' ' → logprob: -12.689824104309082
    10. 'pass' → logprob: -12.689824104309082

Token 935: ' solution' (ID: 7578)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0830621719360352
    2. 'break' → logprob: -1.0830621719360352
    3. ' break' → logprob: -1.5830621719360352
    4. '       ' → logprob: -2.583062171936035
    5. '   ' → logprob: -4.208062171936035
    6. 'return' → logprob: -4.958062171936035
    7. '               ' → logprob: -5.708062171936035
    8. '_break' → logprob: -5.833062171936035
    9. ' return' → logprob: -6.083062171936035
    10. 'pass' → logprob: -6.458062171936035

Token 936: ' plus' (ID: 2932)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005439769593067467
    2. 'break' → logprob: -7.87554407119751
    3. 'return' → logprob: -9.625543594360352
    4. '               ' → logprob: -10.000543594360352
    5. '       ' → logprob: -10.125543594360352
    6. ' break' → logprob: -11.875543594360352
    7. ' return' → logprob: -13.875543594360352
    8. '   ' → logprob: -14.125543594360352
    9. '	       ' → logprob: -14.125543594360352
    10. '		' → logprob: -14.250543594360352

Token 937: ' longue' (ID: 59564)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9220764636993408
    2. 'long' → logprob: -1.1720764636993408
    3. 'loin' → logprob: -2.297076463699341
    4. 't' → logprob: -2.547076463699341
    5. '```' → logprob: -3.797076463699341
    6. 'continue' → logprob: -4.047076225280762
    7. '#' → logprob: -4.172076225280762
    8. 'n' → logprob: -4.547076225280762
    9. 'à' → logprob: -5.047076225280762
    10. 'large' → logprob: -5.297076225280762

Token 938: ' possible' (ID: 4149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005262456834316254
    2. 'break' → logprob: -5.75526237487793
    3. '       ' → logprob: -7.00526237487793
    4. '               ' → logprob: -7.38026237487793
    5. ' break' → logprob: -7.75526237487793
    6. ',' → logprob: -10.63026237487793
    7. '   ' → logprob: -10.75526237487793
    8. '_break' → logprob: -11.00526237487793
    9. '		' → logprob: -11.38026237487793
    10. '	break' → logprob: -11.50526237487793

Token 939: ' donc' (ID: 14206)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016193612245842814
    2. 'break' → logprob: -6.501619338989258
    3. ' break' → logprob: -10.001619338989258
    4. '               ' → logprob: -10.126619338989258
    5. '       ' → logprob: -11.126619338989258
    6. '```' → logprob: -11.876619338989258
    7. '	break' → logprob: -12.626619338989258
    8. '	       ' → logprob: -13.626619338989258
    9. '_break' → logprob: -13.626619338989258
    10. '   ' → logprob: -13.626619338989258

Token 940: ' on' (ID: 402)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0013444004580378532
    2. '           ' → logprob: -6.751344203948975
    3. ' break' → logprob: -8.751344680786133
    4. '	break' → logprob: -11.876344680786133
    5. '_break' → logprob: -12.501344680786133
    6. '```' → logprob: -13.001344680786133
    7. '               ' → logprob: -13.376344680786133
    8. '       ' → logprob: -14.876344680786133
    9. 'return' → logprob: -14.876344680786133
    10. 'breaking' → logprob: -15.876344680786133

Token 941: ' retourne' (ID: 178818)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.004075312986969948
    2. '           ' → logprob: -5.754075527191162
    3. ' break' → logprob: -7.379075527191162
    4. '       ' → logprob: -8.754075050354004
    5. '	break' → logprob: -9.754075050354004
    6. '_break' → logprob: -10.254075050354004
    7. 'return' → logprob: -12.129075050354004
    8. '```' → logprob: -12.629075050354004
    9. '               ' → logprob: -12.754075050354004
    10. 'b' → logprob: -13.379075050354004

Token 942: ' la' (ID: 557)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0752105638384819
    2. 'break' → logprob: -2.8252105712890625
    3. '           ' → logprob: -4.7002105712890625
    4. 'return' → logprob: -6.0752105712890625
    5. '       ' → logprob: -6.4502105712890625
    6. ' ret' → logprob: -9.325210571289062
    7. '   ' → logprob: -10.450210571289062
    8. '               ' → logprob: -10.450210571289062
    9. ' break' → logprob: -11.325210571289062
    10. '```' → logprob: -11.825210571289062

Token 943: ' dernière' (ID: 39497)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.00045617512660101056
    2. 'return' → logprob: -7.7504563331604
    3. '           ' → logprob: -11.250455856323242
    4. ' break' → logprob: -11.750455856323242
    5. '       ' → logprob: -13.125455856323242
    6. 'ret' → logprob: -13.625455856323242
    7. '```' → logprob: -14.125455856323242
    8. '   ' → logprob: -15.000455856323242
    9. '	break' → logprob: -15.750455856323242
    10. '               ' → logprob: -15.750455856323242

Token 944: ' valide' (ID: 137323)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.21137039363384247
    2. '           ' → logprob: -1.8363703489303589
    3. '       ' → logprob: -4.086370468139648
    4. 'return' → logprob: -4.461370468139648
    5. ' break' → logprob: -6.836370468139648
    6. '```' → logprob: -7.336370468139648
    7. '               ' → logprob: -7.711370468139648
    8. '   ' → logprob: -8.711370468139648
    9. 'ret' → logprob: -8.961370468139648
    10. '	break' → logprob: -9.086370468139648

Token 945: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001939938636496663
    2. 'break' → logprob: -6.25193977355957
    3. ' break' → logprob: -12.25193977355957
    4. '       ' → logprob: -12.50193977355957
    5. '		' → logprob: -13.87693977355957
    6. '               ' → logprob: -13.87693977355957
    7. 'return' → logprob: -14.62693977355957
    8. '```' → logprob: -15.50193977355957
    9. '          ' → logprob: -16.37693977355957
    10. '	break' → logprob: -17.00193977355957

Token 946: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022892709239386022
    2. 'break' → logprob: -8.625228881835938
    3. '		' → logprob: -10.375228881835938
    4. '       ' → logprob: -11.625228881835938
    5. '               ' → logprob: -12.875228881835938
    6. '	       ' → logprob: -13.000228881835938
    7. ' break' → logprob: -13.250228881835938
    8. '	break' → logprob: -13.750228881835938
    9. '   ' → logprob: -14.500228881835938
    10. '          ' → logprob: -15.500228881835938

Token 947: ' return' (ID: 622)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.04893115162849426
    2. '           ' → logprob: -3.048931121826172
    3. '       ' → logprob: -8.423931121826172
    4. ' break' → logprob: -9.173931121826172
    5. 'return' (adapté à ' return') → logprob: -11.548931121826172
    6. '	break' → logprob: -11.798931121826172
    7. '   ' → logprob: -13.798931121826172
    8. '               ' → logprob: -14.173931121826172
    9. '_break' → logprob: -14.173931121826172
    10. '```' → logprob: -15.048931121826172

Token 948: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.006746751256287098
    2. ' ret' → logprob: -5.006746768951416
    3. '   ' → logprob: -10.631746292114258
    4. '(ret' → logprob: -12.381746292114258
    5. '	ret' → logprob: -13.631746292114258
    6. ' ' → logprob: -14.381746292114258
    7. '       ' → logprob: -14.381746292114258
    8. '
' → logprob: -14.631746292114258
    9. '$ret' → logprob: -16.881746292114258
    10. '    ' → logprob: -17.006746292114258

Token 949: '
        
' (ID: 20417)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6009374260902405
    2. '<|end|>' → logprob: -0.8509374260902405
    3. '       ' → logprob: -5.100937366485596
    4. ' ' → logprob: -5.600937366485596
    5. '    ' → logprob: -5.600937366485596
    6. '\n' → logprob: -5.975937366485596
    7. '
' → logprob: -6.350937366485596
    8. '    
' → logprob: -6.350937366485596
    9. ' 
' → logprob: -6.850937366485596
    10. '  ' → logprob: -7.100937366485596

Token 950: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1864578276872635
    2. 'return' → logprob: -2.186457872390747
    3. '<|end|>' → logprob: -3.311457872390747
    4. 'print' → logprob: -4.811457633972168
    5. 'if' → logprob: -4.811457633972168
    6. '#' → logprob: -6.936457633972168
    7. ' return' → logprob: -7.061457633972168
    8. '
' → logprob: -7.311457633972168
    9. ')' → logprob: -7.311457633972168
    10. ' if' → logprob: -7.811457633972168

Token 951: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 952: ' Bou' (ID: 33816)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 953: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.029355600476264954
    2. '       ' → logprob: -4.279355525970459
    3. '   ' → logprob: -5.029355525970459
    4. 'c' → logprob: -5.654355525970459
    5. 'cles' → logprob: -6.779355525970459
    6. 'r' → logprob: -7.404355525970459
    7. 'clear' → logprob: -7.404355525970459
    8. 'ffer' → logprob: -7.654355525970459
    9. 'cler' → logprob: -7.654355525970459
    10. 'f' → logprob: -7.779355525970459

Token 954: ' supplémentaire' (ID: 111252)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 955: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5945141315460205
    2. ' for' → logprob: -0.8445141315460205
    3. '   ' → logprob: -4.344513893127441
    4. 'for' → logprob: -5.719513893127441
    5. '           ' → logprob: -6.719513893127441
    6. '	for' → logprob: -7.969513893127441
    7. '	' → logprob: -9.094513893127441
    8. '<|end|>' → logprob: -9.219513893127441
    9. '        
' → logprob: -9.594513893127441
    10. '	   ' → logprob: -9.969513893127441

Token 956: ' longueur' (ID: 104613)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6745197772979736
    2. ' range' → logprob: -1.6745197772979736
    3. 'for' → logprob: -2.4245197772979736
    4. 'pos' → logprob: -3.1745197772979736
    5. 'pass' → logprob: -3.2995197772979736
    6. ' length' → logprob: -3.7995197772979736
    7. ' for' → logprob: -3.9245197772979736
    8. '   ' → logprob: -4.0495195388793945
    9. ' pos' → logprob: -4.2995195388793945
    10. 'length' → logprob: -4.4245195388793945

Token 957: ' cro' (ID: 11270)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3644653856754303
    2. ' for' → logprob: -1.364465355873108
    3. 'for' → logprob: -3.7394654750823975
    4. '       ' → logprob: -3.9894654750823975
    5. ',' → logprob: -5.864465236663818
    6. '   ' → logprob: -6.364465236663818
    7. '               ' → logprob: -7.989465236663818
    8. '=' → logprob: -7.989465236663818
    9. '		' → logprob: -8.114465713500977
    10. ':' → logprob: -8.489465713500977

Token 958: 'issante' (ID: 80061)
  Prédit: 'issante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -0.006302738096565008
    2. 'issant' → logprob: -5.756302833557129
    3. 'iss' → logprob: -6.381302833557129
    4. 'ss' → logprob: -6.881302833557129
    5. 'issance' → logprob: -8.256302833557129
    6. 'is' → logprob: -9.381302833557129
    7. 'issent' → logprob: -11.756302833557129
    8. '   ' → logprob: -12.006302833557129
    9. 'issants' → logprob: -12.381302833557129
    10. 'nt' → logprob: -12.881302833557129

Token 959: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005090495105832815
    2. ' for' → logprob: -5.755090713500977
    3. '           ' → logprob: -6.755090713500977
    4. 'for' → logprob: -7.880090713500977
    5. '   ' → logprob: -8.380090713500977
    6. '<|end|>' → logprob: -9.505090713500977
    7. ',' → logprob: -11.130090713500977
    8. '	   ' → logprob: -11.505090713500977
    9. '	' → logprob: -11.755090713500977
    10. '<|end|>' → logprob: -11.880090713500977

Token 960: ' préparer' (ID: 86536)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.15274421870708466
    2. ' length' → logprob: -2.2777442932128906
    3. 'range' → logprob: -4.277744293212891
    4. 'pos' → logprob: -4.527744293212891
    5. 'offset' → logprob: -4.902744293212891
    6. ' range' → logprob: -6.527744293212891
    7. ' offset' → logprob: -6.777744293212891
    8. 'sub' → logprob: -6.902744293212891
    9. ' pos' → logprob: -6.902744293212891
    10. 'l' → logprob: -7.152744293212891

Token 961: ' la' (ID: 557)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5219979882240295
    2. ' length' → logprob: -1.3969979286193848
    3. ' for' → logprob: -2.8969979286193848
    4. '(length' → logprob: -3.5219979286193848
    5. 'for' → logprob: -4.146997928619385
    6. '       ' → logprob: -4.146997928619385
    7. '   ' → logprob: -4.521997928619385
    8. '           ' → logprob: -4.646997928619385
    9. 'pos' → logprob: -5.646997928619385
    10. 'range' → logprob: -6.021997928619385

Token 962: ' prochaine' (ID: 78876)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.3308768272399902
    2. 'sub' → logprob: -2.0808768272399902
    3. 'next' → logprob: -2.3308768272399902
    4. 'table' → logprob: -2.4558768272399902
    5. 'suite' → logprob: -2.8308768272399902
    6. 'for' → logprob: -2.9558768272399902
    7. 'position' → logprob: -3.0808768272399902
    8. 'offset' → logprob: -3.3308768272399902
    9. ' prochaine' → logprob: -3.4558768272399902
    10. '#' → logprob: -3.7058768272399902

Token 963: ' it' (ID: 480)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3672071099281311
    2. '           ' → logprob: -2.4922070503234863
    3. 'for' → logprob: -2.4922070503234863
    4. 'length' → logprob: -2.7422070503234863
    5. '       ' → logprob: -3.3672070503234863
    6. ' length' → logprob: -4.117207050323486
    7. ',' → logprob: -4.742207050323486
    8. '   ' → logprob: -5.117207050323486
    9. '(length' → logprob: -5.742207050323486
    10. '<|end|>' → logprob: -6.992207050323486

Token 964: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.33737853169441223
    2. 'er' → logprob: -1.4623785018920898
    3. 'érations' → logprob: -3.83737850189209
    4. 'ration' → logprob: -4.71237850189209
    5. '   ' → logprob: -5.21237850189209
    6. 'length' → logprob: -5.71237850189209
    7. 'r' → logprob: -5.96237850189209
    8. 'ér' → logprob: -5.96237850189209
    9. '    ' → logprob: -6.33737850189209
    10. '#' → logprob: -6.58737850189209

Token 965: ' et' (ID: 859)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7411351203918457
    2. 'for' → logprob: -0.8661351203918457
    3. '       ' → logprob: -2.7411351203918457
    4. '           ' → logprob: -3.3661351203918457
    5. '   ' → logprob: -5.616135120391846
    6. '	for' → logprob: -9.616134643554688
    7. 'length' → logprob: -10.241134643554688
    8. ',' → logprob: -10.741134643554688
    9. '```' → logprob: -10.741134643554688
    10. ' ' → logprob: -11.991134643554688

Token 966: ' faire' (ID: 8119)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.780665397644043
    2. '#' → logprob: -1.905665397644043
    3. '       ' → logprob: -2.655665397644043
    4. 'offset' → logprob: -3.030665397644043
    5. 'continue' → logprob: -3.030665397644043
    6. '   ' → logprob: -3.155665397644043
    7. 'for' → logprob: -3.405665397644043
    8. 'pass' → logprob: -3.655665397644043
    9. '           ' → logprob: -4.155665397644043
    10. 'contin' → logprob: -4.405665397644043

Token 967: ' des' (ID: 731)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.1826956272125244
    2. ' ' → logprob: -1.8076956272125244
    3. 'pos' → logprob: -2.1826956272125244
    4. 'table' → logprob: -2.6826956272125244
    5. 'sub' → logprob: -2.8076956272125244
    6. 'pass' → logprob: -2.8076956272125244
    7. '+=' → logprob: -3.9326956272125244
    8. 'la' → logprob: -3.9326956272125244
    9. '   ' → logprob: -4.057695388793945
    10. 'l' → logprob: -4.182695388793945

Token 968: ' ajust' (ID: 32650)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.62659752368927
    2. 'break' → logprob: -1.62659752368927
    3. 'pass' → logprob: -2.6265974044799805
    4. 'continue' → logprob: -3.3765974044799805
    5. 'calcul' → logprob: -3.5015974044799805
    6. '```' → logprob: -4.5015974044799805
    7. 's' → logprob: -4.7515974044799805
    8. 'prop' → logprob: -4.8765974044799805
    9. 'sum' → logprob: -5.0015974044799805
    10. 'som' → logprob: -5.0015974044799805

Token 969: 'ements' (ID: 4507)
  Prédit: 'ements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -0.5455380082130432
    2. 'ement' → logprob: -0.9205380082130432
    3. 'ment' → logprob: -4.545537948608398
    4. 'er' → logprob: -5.295537948608398
    5. 'ments' → logprob: -5.545537948608398
    6. 't' → logprob: -6.795537948608398
    7. 'ent' → logprob: -7.670537948608398
    8. '```' → logprob: -8.170537948608398
    9. 'st' → logprob: -8.670537948608398
    10. 'e' → logprob: -9.170537948608398

Token 970: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2968701422214508
    2. ' for' → logprob: -1.9218701124191284
    3. '           ' → logprob: -2.546870231628418
    4. 'for' → logprob: -3.796870231628418
    5. '   ' → logprob: -5.671870231628418
    6. ':' → logprob: -6.546870231628418
    7. ',' → logprob: -6.671870231628418
    8. '<|end|>' → logprob: -6.671870231628418
    9. '        
' → logprob: -7.296870231628418
    10. '```' → logprob: -8.421870231628418

Token 971: 'trans' (ID: 2623)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3196016550064087
    2. 'for' → logprob: -1.6946016550064087
    3. '           ' → logprob: -3.319601535797119
    4. '   ' → logprob: -4.194601535797119
    5. '       ' → logprob: -4.194601535797119
    6. 'length' → logprob: -4.569601535797119
    7. ' length' → logprob: -4.819601535797119
    8. ')' → logprob: -5.819601535797119
    9. ' range' → logprob: -7.569601535797119
    10. 'range' → logprob: -7.694601535797119

Token 972: 'positions' (ID: 32297)
  Prédit: 'pose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pose' → logprob: -0.18090933561325073
    2. 'form' → logprob: -2.1809093952178955
    3. 'late' → logprob: -3.6809093952178955
    4. 'for' → logprob: -4.430909156799316
    5. 'forme' → logprob: -6.180909156799316
    6. 'ient' → logprob: -6.305909156799316
    7. '   ' → logprob: -6.430909156799316
    8. '       ' → logprob: -6.555909156799316
    9. 'forms' → logprob: -7.180909156799316
    10. '#' → logprob: -7.305909156799316

Token 973: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08206471055746078
    2. '):' → logprob: -3.332064628601074
    3. '):
' → logprob: -4.207064628601074
    4. '       ' → logprob: -4.832064628601074
    5. '   ' → logprob: -5.082064628601074
    6. '           ' → logprob: -5.082064628601074
    7. ')
' → logprob: -5.707064628601074
    8. ',' → logprob: -5.832064628601074
    9. ' )' → logprob: -7.582064628601074
    10. '<|end|>' → logprob: -8.457064628601074

Token 974: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10769341140985489
    2. ' for' → logprob: -2.7326934337615967
    3. '           ' → logprob: -3.9826934337615967
    4. 'for' → logprob: -4.107693195343018
    5. '   ' → logprob: -6.357693195343018
    6. '	' → logprob: -9.482693672180176
    7. '	for' → logprob: -9.607693672180176
    8. '	   ' → logprob: -10.357693672180176
    9. '	       ' → logprob: -11.607693672180176
    10. ',' → logprob: -11.732693672180176

Token 975: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20529749989509583
    2. ' for' → logprob: -1.9552974700927734
    3. 'for' (adapté à ' for') → logprob: -3.3302974700927734
    4. '   ' → logprob: -4.955297470092773
    5. '           ' → logprob: -7.080297470092773
    6. '
' → logprob: -8.580297470092773
    7. '        
' → logprob: -9.330297470092773
    8. '	for' → logprob: -10.455297470092773
    9. ' ' → logprob: -10.955297470092773
    10. '    ' → logprob: -11.080297470092773

Token 976: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4967818260192871
    2. 'i' → logprob: -2.621781826019287
    3. 'l' → logprob: -2.871781826019287
    4. 'j' → logprob: -3.121781826019287
    5. ' length' → logprob: -3.246781826019287
    6. 'pos' → logprob: -3.246781826019287
    7. 'v' → logprob: -4.121781826019287
    8. 'p' → logprob: -4.996781826019287
    9. 'trans' → logprob: -5.121781826019287
    10. 'x' → logprob: -5.121781826019287

Token 977: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22552259266376495
    2. 'in' → logprob: -1.6005226373672485
    3. '   ' → logprob: -9.850522994995117
    4. ',' → logprob: -11.350522994995117
    5. ' ' → logprob: -11.350522994995117
    6. '```' → logprob: -12.350522994995117
    7. '	in' → logprob: -12.350522994995117
    8. 'range' → logprob: -12.725522994995117
    9. 'In' → logprob: -13.100522994995117
    10. 'pos' → logprob: -13.100522994995117

Token 978: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01624327339231968
    2. ' range' → logprob: -4.1412434577941895
    3. 'pos' → logprob: -8.766242980957031
    4. '(range' → logprob: -10.891242980957031
    5. '   ' → logprob: -11.016242980957031
    6. 're' → logprob: -11.641242980957031
    7. ' ' → logprob: -13.266242980957031
    8. '  ' → logprob: -13.516242980957031
    9. '	range' → logprob: -13.766242980957031
    10. ' pos' → logprob: -13.766242980957031

Token 979: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.04850072041153908
    2. '(n' → logprob: -3.5485007762908936
    3. '(' → logprob: -4.0485005378723145
    4. '(k' → logprob: -7.2985005378723145
    5. '(length' → logprob: -8.798501014709473
    6. 'pos' → logprob: -9.298501014709473
    7. '(ret' → logprob: -9.423501014709473
    8. '1' → logprob: -10.173501014709473
    9. '(max' → logprob: -10.673501014709473
    10. 'n' → logprob: -10.798501014709473

Token 980: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34939044713974
    2. '+' → logprob: -1.2243905067443848
    3. ',' → logprob: -7.474390506744385
    4. '   ' → logprob: -8.349390029907227
    5. ' ,' → logprob: -9.849390029907227
    6. '       ' → logprob: -10.724390029907227
    7. '):
' → logprob: -10.974390029907227
    8. '1' → logprob: -11.849390029907227
    9. '           ' → logprob: -11.849390029907227
    10. '    ' → logprob: -11.849390029907227

Token 981: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012267775600776076
    2. '2' → logprob: -6.751226902008057
    3. ' ' → logprob: -9.876226425170898
    4. '   ' → logprob: -13.001226425170898
    5. '
' → logprob: -14.626226425170898
    6. '       ' → logprob: -14.688726425170898
    7. '+' → logprob: -14.876226425170898
    8. '           ' → logprob: -14.938726425170898
    9. '3' → logprob: -15.063726425170898
    10. '```' → logprob: -15.438726425170898

Token 982: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001387731870636344
    2. '2' → logprob: -6.626387596130371
    3. 'pos' → logprob: -10.376387596130371
    4. '+' → logprob: -11.126387596130371
    5. 'length' → logprob: -11.501387596130371
    6. ' ' → logprob: -12.876387596130371
    7. '   ' → logprob: -14.376387596130371
    8. '0' → logprob: -14.501387596130371
    9. 'n' → logprob: -14.751387596130371
    10. '3' → logprob: -15.126387596130371

Token 983: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18465864658355713
    2. '+' → logprob: -2.3096585273742676
    3. ' +' → logprob: -2.6846585273742676
    4. ' ,' → logprob: -7.184658527374268
    5. '   ' → logprob: -8.434659004211426
    6. '+,' → logprob: -10.684659004211426
    7. '):' → logprob: -10.934659004211426
    8. ',n' → logprob: -11.684659004211426
    9. '       ' → logprob: -11.934659004211426
    10. ',length' → logprob: -12.059659004211426

Token 984: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020404424518346786
    2. ' n' → logprob: -4.39540433883667
    3. 'pos' → logprob: -5.39540433883667
    4. 'k' → logprob: -6.14540433883667
    5. 'length' → logprob: -7.77040433883667
    6. 'ret' → logprob: -8.395404815673828
    7. ' pos' → logprob: -8.645404815673828
    8. 'len' → logprob: -9.770404815673828
    9. '   ' → logprob: -9.770404815673828
    10. 'offset' → logprob: -10.020404815673828

Token 985: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31408360600471497
    2. ' +' → logprob: -1.3140835762023926
    3. '):' → logprob: -7.564083576202393
    4. '):
' → logprob: -8.18908405303955
    5. '   ' → logprob: -11.18908405303955
    6. ':' → logprob: -12.31408405303955
    7. '+
' → logprob: -13.81408405303955
    8. '       ' → logprob: -14.43908405303955
    9. ' ' → logprob: -14.43908405303955
    10. '+:' → logprob: -14.56408405303955

Token 986: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028660334646701813
    2. '2' → logprob: -8.500287055969238
    3. ' ' → logprob: -9.875287055969238
    4. 'length' → logprob: -11.000287055969238
    5. '+' → logprob: -11.750287055969238
    6. ')' → logprob: -13.500287055969238
    7. 'pos' → logprob: -13.687787055969238
    8. '(' → logprob: -14.687787055969238
    9. '```' → logprob: -14.687787055969238
    10. '   ' → logprob: -14.750287055969238

Token 987: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1440424770116806
    2. 'pos' → logprob: -2.269042491912842
    3. 'length' → logprob: -3.644042491912842
    4. '+' → logprob: -6.019042491912842
    5. '(pos' → logprob: -6.519042491912842
    6. 'n' → logprob: -8.394042015075684
    7. '(length' → logprob: -9.019042015075684
    8. ' ' → logprob: -9.394042015075684
    9. '2' → logprob: -9.519042015075684
    10. '(' → logprob: -10.269042015075684

Token 988: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7046286463737488
    2. '):' → logprob: -0.7046286463737488
    3. ':' → logprob: -4.9546284675598145
    4. '       ' → logprob: -5.7046284675598145
    5. '   ' → logprob: -7.8296284675598145
    6. '           ' → logprob: -8.454628944396973
    7. ':
' → logprob: -8.454628944396973
    8. '):
' → logprob: -9.579628944396973
    9. ')' → logprob: -9.704628944396973
    10. '+' → logprob: -10.454628944396973

Token 989: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8435812592506409
    2. ':' → logprob: -1.093581199645996
    3. ':
' → logprob: -2.218581199645996
    4. '[' → logprob: -2.468581199645996
    5. ' :' → logprob: -4.468581199645996
    6. '   ' → logprob: -4.843581199645996
    7. ' :
' → logprob: -5.093581199645996
    8. '           ' → logprob: -5.093581199645996
    9. '[offset' → logprob: -6.218581199645996
    10. '):
' → logprob: -7.218581199645996

Token 990: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37692347168922424
    2. 'sub' → logprob: -2.1269235610961914
    3. 'offset' → logprob: -2.5019235610961914
    4. ' sub' → logprob: -3.6269235610961914
    5. 'for' → logprob: -4.126923561096191
    6. ' for' → logprob: -4.126923561096191
    7. 'table' → logprob: -4.376923561096191
    8. '               ' → logprob: -4.626923561096191
    9. ' offset' → logprob: -4.626923561096191
    10. '       ' → logprob: -5.001923561096191

Token 991: ' Cal' (ID: 4453)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.21131068468093872
    2. 'offset' → logprob: -2.711310625076294
    3. 'for' → logprob: -3.211310625076294
    4. 'table' → logprob: -3.461310625076294
    5. 'idx' → logprob: -4.336310863494873
    6. 'start' → logprob: -4.336310863494873
    7. 'count' → logprob: -5.211310863494873
    8. 'length' → logprob: -5.461310863494873
    9. 'segment' → logprob: -5.961310863494873
    10. 'shift' → logprob: -6.086310863494873

Token 992: 'cule' (ID: 45017)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6730349063873291
    2. 'c' → logprob: -0.9230349063873291
    3. 'offset' → logprob: -3.048034906387329
    4. 'cul' → logprob: -3.798034906387329
    5. 'culate' → logprob: -4.79803466796875
    6. 'sub' → logprob: -5.29803466796875
    7. 'ct' → logprob: -5.79803466796875
    8. 'table' → logprob: -6.54803466796875
    9. 'cl' → logprob: -7.29803466796875
    10. 'cu' → logprob: -7.42303466796875

Token 993: ' la' (ID: 557)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.181207537651062
    2. ' offset' → logprob: -2.5562076568603516
    3. '(offset' → logprob: -3.8062076568603516
    4. 'sub' → logprob: -4.431207656860352
    5. 'index' → logprob: -4.681207656860352
    6. '           ' → logprob: -5.056207656860352
    7. 'table' → logprob: -5.056207656860352
    8. 'length' → logprob: -5.431207656860352
    9. 'idx' → logprob: -5.806207656860352
    10. 'np' → logprob: -6.056207656860352

Token 994: ' taille' (ID: 41644)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.13886071741580963
    2. 'diff' → logprob: -3.5138607025146484
    3. 'sub' → logprob: -3.8888607025146484
    4. 'length' → logprob: -4.888860702514648
    5. 'count' → logprob: -5.013860702514648
    6. 'idx' → logprob: -5.013860702514648
    7. 'table' → logprob: -5.138860702514648
    8. 'index' → logprob: -5.263860702514648
    9. 'start' → logprob: -5.513860702514648
    10. 'sum' → logprob: -5.763860702514648

Token 995: ' totale' (ID: 52898)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.503620445728302
    2. ' =' → logprob: -1.0036203861236572
    3. '           ' → logprob: -4.253620624542236
    4. '   ' → logprob: -5.503620624542236
    5. 'size' → logprob: -6.378620624542236
    6. 'segment' → logprob: -7.128620624542236
    7. 'length' → logprob: -7.378620624542236
    8. 'sub' → logprob: -7.378620624542236
    9. '_sub' → logprob: -7.753620624542236
    10. '_size' → logprob: -7.753620624542236

Token 996: ' du' (ID: 1462)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5874538421630859
    2. ' =' → logprob: -0.8374538421630859
    3. 'length' → logprob: -5.837453842163086
    4. '   ' → logprob: -6.337453842163086
    5. '(length' → logprob: -6.462453842163086
    6. '=size' → logprob: -6.462453842163086
    7. '           ' → logprob: -7.087453842163086
    8. '=sub' → logprob: -7.712453842163086
    9. 'sub' → logprob: -8.337453842163086
    10. 'size' → logprob: -8.462453842163086

Token 997: ' motif' (ID: 72753)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.16556107997894287
    2. 'table' → logprob: -2.6655611991882324
    3. 'offset' → logprob: -2.6655611991882324
    4. 'length' → logprob: -6.040561199188232
    5. 'segment' → logprob: -6.040561199188232
    6. '(' → logprob: -6.290561199188232
    7. '2' → logprob: -6.415561199188232
    8. 'pattern' → logprob: -6.540561199188232
    9. ' sub' → logprob: -7.540561199188232
    10. '1' → logprob: -7.790561199188232

Token 998: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019406544044613838
    2. '=' → logprob: -5.019406318664551
    3. ' =' → logprob: -5.019406318664551
    4. 'length' → logprob: -5.894406318664551
    5. 'token' → logprob: -6.644406318664551
    6. 'tokens' → logprob: -7.644406318664551
    7. 'size' → logprob: -8.01940631866455
    8. '(length' → logprob: -8.89440631866455
    9. 'total' → logprob: -9.01940631866455
    10. '(' → logprob: -9.26940631866455

Token 999: ' cette' (ID: 7696)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.13345769047737122
    2. 'offset' → logprob: -2.383457660675049
    3. '2' → logprob: -4.258457660675049
    4. 'sub' → logprob: -6.008457660675049
    5. 'table' → logprob: -6.133457660675049
    6. '   ' → logprob: -6.508457660675049
    7. ' length' → logprob: -6.633457660675049
    8. 'l' → logprob: -6.883457660675049
    9. 'len' → logprob: -7.008457660675049
    10. '1' → logprob: -7.008457660675049

Token 1000: ' longueur' (ID: 104613)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.009148874320089817
    2. ' length' → logprob: -4.759149074554443
    3. 'offset' → logprob: -8.509148597717285
    4. 'long' → logprob: -8.759148597717285
    5. 'leng' → logprob: -9.884148597717285
    6. '(length' → logprob: -10.509148597717285
    7. ' longueur' → logprob: -11.009148597717285
    8. 'len' → logprob: -11.134148597717285
    9. 'pattern' → logprob: -12.134148597717285
    10. 'range' → logprob: -12.134148597717285

Token 1001: ' ' (ID: 5310)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.619918704032898
    2. '=' → logprob: -1.994918704032898
    3. '[offset' → logprob: -2.8699188232421875
    4. '[' → logprob: -3.1199188232421875
    5. ':' → logprob: -3.1199188232421875
    6. 'offset' → logprob: -3.4949188232421875
    7. '(' → logprob: -3.6199188232421875
    8. 'length' → logprob: -3.8699188232421875
    9. ')' → logprob: -3.9949188232421875
    10. '   ' → logprob: -4.1199188232421875

Token 1002: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11452014744281769
    2. ':' → logprob: -3.4895200729370117
    3. '=' → logprob: -3.8645200729370117
    4. 'size' → logprob: -3.9895200729370117
    5. ' =' → logprob: -4.114520072937012
    6. 'length' → logprob: -4.614520072937012
    7. 'total' → logprob: -5.989520072937012
    8. ' size' → logprob: -6.739520072937012
    9. ' length' → logprob: -7.114520072937012
    10. 'sub' → logprob: -7.239520072937012

Token 1003: ' ' (ID: 220)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.07215443253517151
    2. 'total' → logprob: -3.1971545219421387
    3. 'sz' → logprob: -4.822154521942139
    4. 'length' → logprob: -5.197154521942139
    5. '           ' → logprob: -5.572154521942139
    6. 'pattern' → logprob: -6.072154521942139
    7. 'sub' → logprob: -7.072154521942139
    8. 's' → logprob: -7.072154521942139
    9. 'segment' → logprob: -7.072154521942139
    10. ' size' → logprob: -7.197154521942139

Token 1004: '2' (ID: 17)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.22009223699569702
    2. 'total' → logprob: -2.845092296600342
    3. 'length' → logprob: -2.845092296600342
    4. 'sz' → logprob: -3.595092296600342
    5. 'width' → logprob: -4.720092296600342
    6. 'offset' → logprob: -4.845092296600342
    7. 'pattern' → logprob: -4.970092296600342
    8. 'full' → logprob: -5.720092296600342
    9. 'tot' → logprob: -5.720092296600342
    10. 'count' → logprob: -6.345092296600342

Token 1005: '^' (ID: 61)
  Prédit: ' <<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.519474983215332
    2. '**' → logprob: -1.519474983215332
    3. ' **' → logprob: -1.894474983215332
    4. '<<' → logprob: -3.394474983215332
    5. ' *' → logprob: -6.394474983215332
    6. '*' → logprob: -7.519474983215332
    7. ' length' → logprob: -9.394474983215332
    8. ' <<=' → logprob: -10.644474983215332
    9. 'length' → logprob: -11.269474983215332
    10. ')' → logprob: -11.644474983215332

Token 1006: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.03480493649840355
    2. ' length' → logprob: -3.4098048210144043
    3. '(length' → logprob: -6.784804821014404
    4. ' (' → logprob: -11.284805297851562
    5. '(' → logprob: -11.909805297851562
    6. '	length' → logprob: -13.159805297851562
    7. 'leng' → logprob: -13.909805297851562
    8. ' ' → logprob: -14.284805297851562
    9. '[length' → logprob: -14.284805297851562
    10. 'len' → logprob: -14.284805297851562

Token 1007: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7982238531112671
    2. ' =' → logprob: -0.9232238531112671
    3. ')' → logprob: -2.5482239723205566
    4. '           ' → logprob: -4.423223972320557
    5. '[' → logprob: -4.548223972320557
    6. ' *' → logprob: -4.673223972320557
    7. 'size' → logprob: -4.673223972320557
    8. '*' → logprob: -5.423223972320557
    9. 'length' → logprob: -5.673223972320557
    10. ',' → logprob: -5.798223972320557

Token 1008: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8098233938217163
    2. '[offset' → logprob: -2.184823513031006
    3. ')' → logprob: -2.559823513031006
    4. '=' → logprob: -2.684823513031006
    5. ' =' → logprob: -2.684823513031006
    6. ':' → logprob: -2.809823513031006
    7. '   ' → logprob: -3.559823513031006
    8. ',' → logprob: -3.934823513031006
    9. '           ' → logprob: -4.059823513031006
    10. ' +' → logprob: -4.184823513031006

Token 1009: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' (adapté à ' size') → logprob: -0.10983830690383911
    2. 'total' → logprob: -3.1098382472991943
    3. 'length' → logprob: -3.8598382472991943
    4. 'pattern' → logprob: -4.609838485717773
    5. 'sz' → logprob: -5.109838485717773
    6. '           ' → logprob: -5.234838485717773
    7. 'sub' → logprob: -6.109838485717773
    8. 'len' → logprob: -6.609838485717773
    9. 'mot' → logprob: -6.609838485717773
    10. 'count' → logprob: -6.734838485717773

Token 1010: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00762082589790225
    2. '=' → logprob: -4.882620811462402
    3. '=size' → logprob: -11.757620811462402
    4. ' ' → logprob: -12.632620811462402
    5. '[' → logprob: -13.882620811462402
    6. ')' → logprob: -14.257620811462402
    7. '   ' → logprob: -14.757620811462402
    8. 'size' → logprob: -15.382620811462402
    9. 's' → logprob: -15.632620811462402
    10. ' ' → logprob: -15.757620811462402

Token 1011: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6358545422554016
    2. 'offset' → logprob: -0.7608545422554016
    3. ' offset' → logprob: -5.885854721069336
    4. ' ' → logprob: -7.760854721069336
    5. '   ' → logprob: -11.385854721069336
    6. '(' → logprob: -11.760854721069336
    7. '2' → logprob: -12.260854721069336
    8. '(offset' → logprob: -12.260854721069336
    9. '[offset' → logprob: -12.885854721069336
    10. '```' → logprob: -12.885854721069336

Token 1012: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.576032280921936
    2. 'offset' → logprob: -0.826032280921936
    3. ' offset' → logprob: -9.701032638549805
    4. '2' → logprob: -11.701032638549805
    5. ' ' → logprob: -12.201032638549805
    6. '(' → logprob: -12.326032638549805
    7. '```' → logprob: -12.576032638549805
    8. '(offset' → logprob: -13.201032638549805
    9. 'return' → logprob: -13.701032638549805
    10. '[offset' → logprob: -14.076032638549805

Token 1013: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.005941121373325586
    2. ' <<' → logprob: -5.130940914154053
    3. '<' → logprob: -11.505941390991211
    4. ' ' → logprob: -14.005941390991211
    5. '```' → logprob: -14.630941390991211
    6. '<<(' → logprob: -14.880941390991211
    7. '1' → logprob: -15.255941390991211
    8. '=' → logprob: -15.380941390991211
    9. '<<<' → logprob: -16.50594139099121
    10. ' <<=' → logprob: -17.00594139099121

Token 1014: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.5332478142227046e-05
    2. ' length' → logprob: -11.250015258789062
    3. '(length' → logprob: -13.125015258789062
    4. 'leng' → logprob: -16.000015258789062
    5. 'len' → logprob: -16.500015258789062
    6. 'l' → logprob: -17.375015258789062
    7. '   ' → logprob: -17.625015258789062
    8. '(' → logprob: -18.000015258789062
    9. '	length' → logprob: -18.250015258789062
    10. '[length' → logprob: -18.375015258789062

Token 1015: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10797369480133057
    2. '
' → logprob: -2.857973575592041
    3. '            
' → logprob: -4.107973575592041
    4. '       ' → logprob: -4.357973575592041
    5. '<|end|>' → logprob: -5.232973575592041
    6. ')' → logprob: -6.107973575592041
    7. '#' → logprob: -6.857973575592041
    8. ' 
' → logprob: -6.982973575592041
    9. ',' → logprob: -7.107973575592041
    10. '               ' → logprob: -7.232973575592041

Token 1016: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042478810995817184
    2. '       ' → logprob: -4.417479038238525
    3. '<|end|>' → logprob: -4.792479038238525
    4. ')' → logprob: -5.542479038238525
    5. ',' → logprob: -5.542479038238525
    6. '            
' → logprob: -5.792479038238525
    7. '   ' → logprob: -6.042479038238525
    8. '[' → logprob: -6.292479038238525
    9. '#' → logprob: -6.917479038238525
    10. '.' → logprob: -7.167479038238525

Token 1017: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030618881806731224
    2. ' for' → logprob: -4.780618667602539
    3. '       ' → logprob: -5.530618667602539
    4. 'for' → logprob: -5.530618667602539
    5. '#' (adapté à ' #') → logprob: -5.780618667602539
    6. '            
' → logprob: -6.280618667602539
    7. ' 
' → logprob: -6.405618667602539
    8. '[' → logprob: -6.655618667602539
    9. '<|end|>' → logprob: -6.655618667602539
    10. ')' → logprob: -7.030618667602539

Token 1018: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.095232605934143
    2. 'sub' → logprob: -1.095232605934143
    3. 'segment' → logprob: -1.970232605934143
    4. 'pattern' → logprob: -2.8452324867248535
    5. 'start' → logprob: -3.5952324867248535
    6. 'block' → logprob: -4.0952324867248535
    7. '#' → logprob: -4.3452324867248535
    8. 'mask' → logprob: -4.5952324867248535
    9. 'indices' → logprob: -4.7202324867248535
    10. 'idx' → logprob: -5.0952324867248535

Token 1019: ' différence' (ID: 79196)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.5491146445274353
    2. 'for' → logprob: -1.79911470413208
    3. 'segment' → logprob: -3.17411470413208
    4. 'table' → logprob: -3.42411470413208
    5. 'mask' → logprob: -3.54911470413208
    6. 'start' → logprob: -3.67411470413208
    7. 'offset' → logprob: -3.79911470413208
    8. 'pattern' → logprob: -3.79911470413208
    9. 'pos' → logprob: -3.92411470413208
    10. 'slice' → logprob: -4.17411470413208

Token 1020: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6423270106315613
    2. ' =' → logprob: -0.7673270106315613
    3. 's' → logprob: -5.017326831817627
    4. '_table' → logprob: -7.142326831817627
    5. 'diff' → logprob: -7.267326831817627
    6. 'between' → logprob: -8.267327308654785
    7. ' between' → logprob: -8.392327308654785
    8. '_' → logprob: -8.642327308654785
    9. '=size' → logprob: -9.017327308654785
    10. 'size' → logprob: -9.142327308654785

Token 1021: ' longueur' (ID: 104613)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.6394804120063782
    2. 'count' → logprob: -1.3894803524017334
    3. 'size' → logprob: -2.2644803524017334
    4. '1' → logprob: -3.2644803524017334
    5. 'offset' → logprob: -3.2644803524017334
    6. ' table' → logprob: -4.8894805908203125
    7. 'counts' → logprob: -5.1394805908203125
    8. 'tail' → logprob: -5.2644805908203125
    9. ' count' → logprob: -5.6394805908203125
    10. 'len' → logprob: -5.8894805908203125

Token 1022: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5365005135536194
    2. ' =' → logprob: -0.9115005135536194
    3. '<|end|>' → logprob: -5.161500453948975
    4. 'diff' → logprob: -5.536500453948975
    5. 's' → logprob: -7.786500453948975
    6. ')' → logprob: -7.786500453948975
    7. '=size' → logprob: -7.911500453948975
    8. '<|end|>' → logprob: -8.286500930786133
    9. 'size' → logprob: -8.411500930786133
    10. '-' → logprob: -8.786500930786133

Token 1023: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4746384024620056
    2. ' =' → logprob: -0.9746384024620056
    3. 's' → logprob: -9.599637985229492
    4. 'diff' → logprob: -9.724637985229492
    5. '=size' → logprob: -9.849637985229492
    6. '```' → logprob: -10.099637985229492
    7. '-' → logprob: -10.224637985229492
    8. '   ' → logprob: -10.474637985229492
    9. '           ' → logprob: -10.474637985229492
    10. ')' → logprob: -10.474637985229492

Token 1024: ' rest' (ID: 2867)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.028159208595752716
    2. 'delta' → logprob: -4.153159141540527
    3. 'length' → logprob: -5.403159141540527
    4. 'd' → logprob: -5.528159141540527
    5. 'difference' → logprob: -7.653159141540527
    6. 'dif' → logprob: -7.653159141540527
    7. 'shift' → logprob: -7.653159141540527
    8. 'gap' → logprob: -7.778159141540527
    9. 'dist' → logprob: -7.903159141540527
    10. 'offset' → logprob: -7.903159141540527

Token 1025: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42878201603889465
    2. ' =' → logprob: -1.0537819862365723
    3. '_length' → logprob: -11.17878246307373
    4. 's' → logprob: -11.55378246307373
    5. 'length' → logprob: -11.55378246307373
    6. '=size' → logprob: -11.55378246307373
    7. ' ' → logprob: -12.05378246307373
    8. '_size' → logprob: -12.55378246307373
    9. '＝' → logprob: -13.05378246307373
    10. '_' → logprob: -13.05378246307373

Token 1026: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.24268564581871033
    2. ' length' → logprob: -2.117685556411743
    3. 'size' → logprob: -2.742685556411743
    4. ' size' → logprob: -3.742685556411743
    5. 'offset' → logprob: -5.867685794830322
    6. '(' → logprob: -6.867685794830322
    7. '1' → logprob: -6.992685794830322
    8. ' (' → logprob: -7.492685794830322
    9. ' offset' → logprob: -7.742685794830322
    10. '(length' → logprob: -8.367685317993164

Token 1027: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1602751910686493
    2. '-' → logprob: -1.9102752208709717
    3. ' ' → logprob: -10.66027545928955
    4. '   ' → logprob: -11.03527545928955
    5. '=' → logprob: -12.66027545928955
    6. '           ' → logprob: -12.91027545928955
    7. ' ' → logprob: -13.78527545928955
    8. '       ' → logprob: -14.03527545928955
    9. '    ' → logprob: -14.28527545928955
    10. '               ' → logprob: -15.03527545928955

Token 1028: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.030417228117585182
    2. '(pos' → logprob: -4.030417442321777
    3. '1' → logprob: -4.530417442321777
    4. '(' → logprob: -6.780417442321777
    5. ' pos' → logprob: -8.405417442321777
    6. '(n' → logprob: -11.155417442321777
    7. ' (' → logprob: -11.405417442321777
    8. '   ' → logprob: -11.530417442321777
    9. '2' → logprob: -12.905417442321777
    10. ' ' → logprob: -13.030417442321777

Token 1029: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008270340971648693
    2. '<|end|>' → logprob: -5.758270263671875
    3. '
' → logprob: -6.383270263671875
    4. '            
' → logprob: -6.633270263671875
    5. ')' → logprob: -7.758270263671875
    6. '       ' → logprob: -8.008270263671875
    7. ' rest' → logprob: -8.008270263671875
    8. ',' → logprob: -8.383270263671875
    9. '<|end|>' → logprob: -9.133270263671875
    10. '   ' → logprob: -9.508270263671875

Token 1030: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.174508199095726
    2. '<|end|>' → logprob: -1.9245082139968872
    3. ')' → logprob: -5.299508094787598
    4. '            
' → logprob: -5.924508094787598
    5. '       ' → logprob: -7.174508094787598
    6. '<|end|>' → logprob: -7.299508094787598
    7. '[' → logprob: -7.424508094787598
    8. '               ' → logprob: -7.674508094787598
    9. ' 
' → logprob: -7.674508094787598
    10. ' ' → logprob: -7.799508094787598

Token 1031: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1951252818107605
    2. ' for' → logprob: -3.4451253414154053
    3. '
' → logprob: -3.5701253414154053
    4. '       ' → logprob: -3.5701253414154053
    5. 'for' → logprob: -3.9451253414154053
    6. ' 
' → logprob: -4.195125102996826
    7. '[' → logprob: -4.945125102996826
    8. '#' (adapté à ' #') → logprob: -4.945125102996826
    9. '            
' → logprob: -5.070125102996826
    10. '   ' → logprob: -5.195125102996826

Token 1032: ' Cal' (ID: 4453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47337615489959717
    2. 'sub' → logprob: -2.7233762741088867
    3. 'if' → logprob: -3.3483762741088867
    4. 'mask' → logprob: -3.5983762741088867
    5. 'table' → logprob: -3.7233762741088867
    6. 'start' → logprob: -3.9733762741088867
    7. 'block' → logprob: -4.098376274108887
    8. 'offset' → logprob: -4.223376274108887
    9. 'shift' → logprob: -4.223376274108887
    10. '#' → logprob: -4.348376274108887

Token 1033: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7331485748291016
    2. 'cul' → logprob: -1.1081485748291016
    3. 'culate' → logprob: -2.2331485748291016
    4. 'cule' → logprob: -3.3581485748291016
    5. 'l' → logprob: -3.9831485748291016
    6. 'offset' → logprob: -4.733148574829102
    7. 'size' → logprob: -5.108148574829102
    8. 'cl' → logprob: -5.483148574829102
    9. 'culated' → logprob: -6.483148574829102
    10. 'ct' → logprob: -6.608148574829102

Token 1034: ' la' (ID: 557)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -2.073518991470337
    2. 'start' → logprob: -2.573518991470337
    3. 'mask' → logprob: -2.698518991470337
    4. 'shift' → logprob: -2.948518991470337
    5. 'l' → logprob: -3.073518991470337
    6. ' le' → logprob: -3.073518991470337
    7. ' la' → logprob: -3.323518991470337
    8. 'rest' → logprob: -3.323518991470337
    9. 'left' → logprob: -3.448518991470337
    10. 'le' → logprob: -3.448518991470337

Token 1035: ' demi' (ID: 61771)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.2775155305862427
    2. '(' → logprob: -2.652515411376953
    3. 'size' → logprob: -3.152515411376953
    4. '1' → logprob: -3.527515411376953
    5. 'rest' → logprob: -3.777515411376953
    6. 'shift' → logprob: -4.527515411376953
    7. 'start' → logprob: -4.652515411376953
    8. 'index' → logprob: -4.777515411376953
    9. 'step' → logprob: -4.777515411376953
    10. 'mask' → logprob: -4.902515411376953

Token 1036: '-p' (ID: 3161)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.013672932982444763
    2. ' size' → logprob: -4.638672828674316
    3. '_size' → logprob: -6.513672828674316
    4. '=' → logprob: -7.763672828674316
    5. 'rest' → logprob: -7.763672828674316
    6. 's' → logprob: -8.388672828674316
    7. ' rest' → logprob: -8.513672828674316
    8. '```' → logprob: -8.513672828674316
    9. '	size' → logprob: -9.263672828674316
    10. ' =' → logprob: -9.638672828674316

Token 1037: 'éri' (ID: 13499)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.20491985976696014
    2. 'ower' → logprob: -2.8299198150634766
    3. 'art' → logprob: -3.0799198150634766
    4. 'ow' → logprob: -3.2049198150634766
    5. 'oint' → logprob: -4.329919815063477
    6. '(size' → logprob: -5.454919815063477
    7. '```' → logprob: -5.579919815063477
    8. 'er' → logprob: -5.954919815063477
    9. 'lace' → logprob: -6.579919815063477
    10. 'iece' → logprob: -6.829919815063477

Token 1038: 'ode' (ID: 676)
  Prédit: 'ode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ode' → logprob: -0.05494852364063263
    2. 'od' → logprob: -2.929948568344116
    3. '```' → logprob: -10.929948806762695
    4. '#' → logprob: -11.179948806762695
    5. '   ' → logprob: -11.554948806762695
    6. 'size' → logprob: -12.429948806762695
    7. '[' → logprob: -12.929948806762695
    8. 'e' → logprob: -13.054948806762695
    9. 'odes' → logprob: -13.429948806762695
    10. 'од' → logprob: -13.679948806762695

Token 1039: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12081222981214523
    2. '=' → logprob: -2.245812177658081
    3. '           ' → logprob: -4.99581241607666
    4. 'rest' → logprob: -7.24581241607666
    5. 'size' → logprob: -8.87081241607666
    6. ',' → logprob: -9.49581241607666
    7. 'half' → logprob: -9.49581241607666
    8. ' rest' → logprob: -10.12081241607666
    9. ' half' → logprob: -11.12081241607666
    10. '       ' → logprob: -11.37081241607666

Token 1040: 'mo' (ID: 3690)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.15663743019104004
    2. 'size' → logprob: -2.90663743019104
    3. ' half' → logprob: -3.28163743019104
    4. 'period' → logprob: -4.406637191772461
    5. '1' → logprob: -4.781637191772461
    6. 'offset' → logprob: -5.156637191772461
    7. 'mid' → logprob: -5.281637191772461
    8. ' size' → logprob: -5.406637191772461
    9. 'rest' → logprob: -5.656637191772461
    10. 'delta' → logprob: -6.781637191772461

Token 1041: 'itié' (ID: 64310)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05373738333582878
    2. 'de' → logprob: -3.4287374019622803
    3. 'dule' → logprob: -4.303737163543701
    4. 'size' → logprob: -5.928737163543701
    5. 'du' → logprob: -6.303737163543701
    6. 'dul' → logprob: -7.928737163543701
    7. 'def' → logprob: -8.55373764038086
    8. 've' → logprob: -8.92873764038086
    9. 'od' → logprob: -9.17873764038086
    10. 'del' → logprob: -9.17873764038086

Token 1042: ' de' (ID: 334)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.10014822334051132
    2. ' size' → logprob: -3.2251482009887695
    3. '=' → logprob: -4.1001482009887695
    4. ')' → logprob: -4.6001482009887695
    5. '           ' → logprob: -5.1001482009887695
    6. 'rest' → logprob: -5.2251482009887695
    7. '<<' → logprob: -5.6001482009887695
    8. '   ' → logprob: -6.1001482009887695
    9. 's' → logprob: -6.2251482009887695
    10. ' of' → logprob: -6.7251482009887695

Token 1043: ' la' (ID: 557)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.21353016793727875
    2. 'size' → logprob: -2.0885300636291504
    3. '(' → logprob: -2.7135300636291504
    4. '(rest' → logprob: -7.08853006362915
    5. ' size' → logprob: -7.71353006362915
    6. ' (' → logprob: -7.96353006362915
    7. '(offset' → logprob: -8.713530540466309
    8. 'rest' → logprob: -9.713530540466309
    9. 'offset' → logprob: -10.088530540466309
    10. '1' → logprob: -10.088530540466309

Token 1044: ' période' (ID: 46855)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.030353859066963196
    2. '(' → logprob: -4.030354022979736
    3. '(size' → logprob: -4.530354022979736
    4. 'rest' → logprob: -7.030354022979736
    5. ' size' → logprob: -8.780353546142578
    6. '(rest' → logprob: -8.905353546142578
    7. '1' → logprob: -10.030353546142578
    8. '```' → logprob: -10.155353546142578
    9. 'offset' → logprob: -10.405353546142578
    10. '(
' → logprob: -11.405353546142578

Token 1045: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48572903871536255
    2. '=' → logprob: -2.1107289791107178
    3. '           ' → logprob: -2.3607289791107178
    4. ' =' → logprob: -2.7357289791107178
    5. 'size' → logprob: -2.9857289791107178
    6. '>>' → logprob: -4.110729217529297
    7. '<<' → logprob: -5.110729217529297
    8. 's' → logprob: -5.235729217529297
    9. ' >>' → logprob: -5.985729217529297
    10. '   ' → logprob: -5.985729217529297

Token 1046: '’un' (ID: 9073)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03390731289982796
    2. 'é' → logprob: -4.533907413482666
    3. 'u' → logprob: -5.033907413482666
    4. 'éc' → logprob: -5.908907413482666
    5. 'urée' → logprob: -6.533907413482666
    6. 'iff' → logprob: -6.783907413482666
    7. 'es' → logprob: -7.033907413482666
    8. 'une' → logprob: -7.033907413482666
    9. 'interval' → logprob: -7.533907413482666
    10. 'ouble' → logprob: -7.533907413482666

Token 1047: ' cycle' (ID: 15839)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.24172602593898773
    2. 'length' → logprob: -2.1167259216308594
    3. 'rest' → logprob: -2.6167259216308594
    4. 'pattern' → logprob: -4.866725921630859
    5. 'offset' → logprob: -5.741725921630859
    6. ')' → logprob: -5.741725921630859
    7. 'mot' → logprob: -6.616725921630859
    8. '1' → logprob: -7.366725921630859
    9. '(rest' → logprob: -7.491725921630859
    10. 'cycle' → logprob: -7.491725921630859

Token 1048: ' b' (ID: 287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11376175284385681
    2. '=' → logprob: -3.9887616634368896
    3. 'size' → logprob: -4.238761901855469
    4. '>>' → logprob: -4.363761901855469
    5. '           ' → logprob: -4.738761901855469
    6. ' rest' → logprob: -5.113761901855469
    7. '   ' → logprob: -5.113761901855469
    8. ' =' → logprob: -5.363761901855469
    9. '<<' → logprob: -5.363761901855469
    10. 'rest' → logprob: -5.738761901855469

Token 1049: 'inaire' (ID: 41465)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.6742207407951355
    2. 'inary' → logprob: -1.6742208003997803
    3. 'in' → logprob: -2.4242208003997803
    4. 'inaire' → logprob: -2.7992208003997803
    5. 'length' → logprob: -3.2992208003997803
    6. 'size' → logprob: -3.5492208003997803
    7. 'y' → logprob: -3.7992208003997803
    8. 'ase' → logprob: -3.9242208003997803
    9. '   ' → logprob: -4.549220561981201
    10. '=' → logprob: -5.299220561981201

Token 1050: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12987954914569855
    2. '           ' → logprob: -3.1298794746398926
    3. ' //' → logprob: -3.7548794746398926
    4. '>>' → logprob: -3.8798794746398926
    5. ' >>' → logprob: -4.129879474639893
    6. ')
' → logprob: -5.254879474639893
    7. '
' → logprob: -5.879879474639893
    8. '//' → logprob: -6.129879474639893
    9. '   ' → logprob: -6.129879474639893
    10. '       ' → logprob: -6.629879474639893

Token 1051: ' cette' (ID: 7696)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.021971050649881363
    2. '1' → logprob: -4.646971225738525
    3. '(rest' → logprob: -5.146971225738525
    4. 'offset' → logprob: -5.646971225738525
    5. ' rest' → logprob: -6.896971225738525
    6. '2' → logprob: -7.771971225738525
    7. 'pos' → logprob: -8.271970748901367
    8. '   ' → logprob: -8.396970748901367
    9. '(' → logprob: -8.521970748901367
    10. '```' → logprob: -8.771970748901367

Token 1052: ' position' (ID: 4010)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.05626196786761284
    2. 'pos' → logprob: -3.6812620162963867
    3. ' rest' → logprob: -3.9312620162963867
    4. '```' → logprob: -5.681262016296387
    5. '(rest' → logprob: -6.556262016296387
    6. 'length' → logprob: -6.931262016296387
    7. '
' → logprob: -7.431262016296387
    8. 'position' → logprob: -7.431262016296387
    9. ' ' → logprob: -7.681262016296387
    10. 'diff' → logprob: -8.181262016296387

Token 1053: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11415480077266693
    2. ' >>' → logprob: -3.489154815673828
    3. '>>' → logprob: -3.614154815673828
    4. ' //' → logprob: -3.864154815673828
    5. '           ' → logprob: -4.114154815673828
    6. '//' → logprob: -5.614154815673828
    7. ')
' → logprob: -5.864154815673828
    8. ')>>' → logprob: -6.739154815673828
    9. '   ' → logprob: -7.114154815673828
    10. ' )' → logprob: -7.239154815673828

Token 1054: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02506394311785698
    2. '
' → logprob: -5.025063991546631
    3. 'rest' → logprob: -5.400063991546631
    4. '            
' → logprob: -5.775063991546631
    5. ' rest' → logprob: -6.150063991546631
    6. ' half' → logprob: -6.400063991546631
    7. '       ' → logprob: -6.650063991546631
    8. 'half' → logprob: -6.650063991546631
    9. '               ' → logprob: -7.150063991546631
    10. ' 
' → logprob: -7.400063991546631

Token 1055: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' (adapté à ' half') → logprob: -0.05900312960147858
    2. 'period' → logprob: -3.3090031147003174
    3. 'rest' → logprob: -5.1840033531188965
    4. 'offset' → logprob: -5.5590033531188965
    5. 'mid' → logprob: -6.1840033531188965
    6. 'h' → logprob: -6.9340033531188965
    7. 'step' → logprob: -7.1840033531188965
    8. 'hal' → logprob: -7.5590033531188965
    9. 'cycle' → logprob: -7.6840033531188965
    10. 'shift' → logprob: -7.6840033531188965

Token 1056: '_period' (ID: 46594)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.6076936721801758
    2. ' =' → logprob: -1.6076936721801758
    3. '_period' → logprob: -1.6076936721801758
    4. '_' → logprob: -3.482693672180176
    5. '=' → logprob: -4.232693672180176
    6. '_rest' → logprob: -5.607693672180176
    7. 'size' → logprob: -5.857693672180176
    8. '_per' → logprob: -7.232693672180176
    9. '_p' → logprob: -7.732693672180176
    10. '_offset' → logprob: -7.982693672180176

Token 1057: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868727385997772
    2. '=' → logprob: -1.1368727684020996
    3. ',' → logprob: -14.511872291564941
    4. ' ' → logprob: -15.261872291564941
    5. '＝' → logprob: -15.636872291564941
    6. 'size' → logprob: -16.011873245239258
    7. '	' → logprob: -16.261873245239258
    8. '   ' → logprob: -16.261873245239258
    9. '=size' → logprob: -16.261873245239258
    10. '=
' → logprob: -16.761873245239258

Token 1058: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01336551085114479
    2. 'offset' → logprob: -5.388365745544434
    3. 'size' → logprob: -5.513365745544434
    4. ' ' → logprob: -5.513365745544434
    5. '(' → logprob: -8.013365745544434
    6. ' offset' → logprob: -8.888365745544434
    7. ' size' → logprob: -9.388365745544434
    8. '   ' → logprob: -10.888365745544434
    9. 'rest' → logprob: -10.888365745544434
    10. ' (' → logprob: -11.825865745544434

Token 1059: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020335035398602486
    2. 'offset' → logprob: -4.3953351974487305
    3. 'size' → logprob: -5.0203351974487305
    4. '(' → logprob: -6.8953351974487305
    5. ' ' → logprob: -9.27033519744873
    6. ' offset' → logprob: -11.14533519744873
    7. '2' → logprob: -11.14533519744873
    8. '(offset' → logprob: -11.83283519744873
    9. '(size' → logprob: -12.02033519744873
    10. 'ret' → logprob: -12.39533519744873

Token 1060: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.06214302033185959
    2. ' <<' → logprob: -2.812143087387085
    3. '<<(' → logprob: -8.812143325805664
    4. '<' → logprob: -10.687143325805664
    5. '<<<' → logprob: -13.062143325805664
    6. ' ' → logprob: -14.812143325805664
    7. '           ' → logprob: -14.812143325805664
    8. '   ' → logprob: -15.812143325805664
    9. ' <<=' → logprob: -15.812143325805664
    10. ' ' → logprob: -15.812143325805664

Token 1061: ' (' (ID: 350)
  Prédit: '(rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.0072684441693127155
    2. '(pos' → logprob: -5.13226842880249
    3. '(length' → logprob: -7.00726842880249
    4. 'rest' → logprob: -8.382268905639648
    5. 'pos' → logprob: -9.007268905639648
    6. '(' → logprob: -10.257268905639648
    7. '(max' → logprob: -10.632268905639648
    8. 'length' → logprob: -11.382268905639648
    9. ' (' → logprob: -12.382268905639648
    10. '(ret' → logprob: -13.882268905639648

Token 1062: 'rest' (ID: 7134)
  Prédit: '(rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.3623412251472473
    2. 'rest' → logprob: -1.3623411655426025
    3. 'pos' → logprob: -3.3623411655426025
    4. '(pos' → logprob: -4.487341403961182
    5. '(' → logprob: -6.362341403961182
    6. ' rest' → logprob: -9.237340927124023
    7. '(max' → logprob: -10.237340927124023
    8. ' (' → logprob: -10.237340927124023
    9. ' pos' → logprob: -11.112340927124023
    10. '(length' → logprob: -11.112340927124023

Token 1063: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004620830062776804
    2. ' -' → logprob: -5.3796210289001465
    3. ' ' → logprob: -15.254620552062988
    4. ')' → logprob: -15.504620552062988
    5. '
' → logprob: -16.629621505737305
    6. '−' → logprob: -17.879621505737305
    7. '-
' → logprob: -18.629621505737305
    8. '-rest' → logprob: -18.754621505737305
    9. ')-' → logprob: -18.879621505737305
    10. '[:-' → logprob: -19.129621505737305

Token 1064: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '
' → logprob: -17.875
    4. '-' → logprob: -18.375
    5. '   ' → logprob: -19.125
    6. '```' → logprob: -19.5
    7. '0' → logprob: -20.125
    8. '2' → logprob: -20.25
    9. 'pos' → logprob: -20.75
    10. '１' → logprob: -21.125

Token 1065: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -19.625
    5. '
' → logprob: -20.25
    6. '2' → logprob: -20.375
    7. '-' → logprob: -20.375
    8. '１' → logprob: -21.0
    9. '' → logprob: -21.25
    10. '0' → logprob: -21.5

Token 1066: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.996708104154095e-05
    2. ')
' → logprob: -9.750100135803223
    3. ' )' → logprob: -11.125100135803223
    4. '           ' → logprob: -11.625100135803223
    5. '<|end|>' → logprob: -12.000100135803223
    6. '   ' → logprob: -12.375100135803223
    7. '       ' → logprob: -12.625100135803223
    8. '),' → logprob: -14.000100135803223
    9. '):
' → logprob: -14.375100135803223
    10. '):' → logprob: -14.500100135803223

Token 1067: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05275087058544159
    2. '       ' → logprob: -3.177750825881958
    3. '               ' → logprob: -5.552751064300537
    4. '<|end|>' → logprob: -6.302751064300537
    5. '   ' → logprob: -7.302751064300537
    6. ')' → logprob: -7.302751064300537
    7. '            
' → logprob: -7.427751064300537
    8. '            ' → logprob: -8.427750587463379
    9. '          ' → logprob: -8.677750587463379
    10. '[' → logprob: -8.802750587463379

Token 1068: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010267253033816814
    2. '       ' → logprob: -5.38526725769043
    3. 'for' → logprob: -6.01026725769043
    4. ' for' → logprob: -6.51026725769043
    5. '            
' → logprob: -7.26026725769043
    6. '#' (adapté à ' #') → logprob: -8.51026725769043
    7. '               ' → logprob: -9.01026725769043
    8. '   ' → logprob: -9.13526725769043
    9. '<|end|>' → logprob: -9.51026725769043
    10. '[' → logprob: -9.76026725769043

Token 1069: ' Cr' (ID: 5790)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015005728229880333
    2. '           ' → logprob: -6.265005588531494
    3. 'start' → logprob: -6.390005588531494
    4. 'block' → logprob: -6.390005588531494
    5. 'mask' → logprob: -6.640005588531494
    6. 'pattern' → logprob: -7.140005588531494
    7. '#' → logprob: -7.140005588531494
    8. 'idx' → logprob: -7.140005588531494
    9. 'segment' → logprob: -7.140005588531494
    10. 'sub' → logprob: -7.515005588531494

Token 1070: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4005051851272583
    2. 'e' → logprob: -1.4005051851272583
    3. 'é' → logprob: -3.2755050659179688
    4. 'ont' → logprob: -4.150505065917969
    5. '#' → logprob: -4.525505065917969
    6. 'al' → logprob: -5.775505065917969
    7. 'reate' → logprob: -6.400505065917969
    8. 'éer' → logprob: -6.775505065917969
    9. 'ypte' → logprob: -6.775505065917969
    10. 'ee' → logprob: -6.900505065917969

Token 1071: ' un' (ID: 537)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.6721231937408447
    2. 'mask' → logprob: -1.7971231937408447
    3. 'a' → logprob: -2.1721231937408447
    4. 'idx' → logprob: -2.6721231937408447
    5. 'sub' → logprob: -3.0471231937408447
    6. 'swap' → logprob: -3.1721231937408447
    7. 'pattern' → logprob: -3.2971231937408447
    8. 'temp' → logprob: -3.5471231937408447
    9. 'offset' → logprob: -3.6721231937408447
    10. 'indices' → logprob: -3.6721231937408447

Token 1072: ' tableau' (ID: 67053)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.574855387210846
    2. 'tmp' → logprob: -1.8248553276062012
    3. 'slice' → logprob: -3.199855327606201
    4. 'view' → logprob: -3.449855327606201
    5. 'temp' → logprob: -3.574855327606201
    6. 'segment' → logprob: -3.574855327606201
    7. 'pattern' → logprob: -3.699855327606201
    8. 'sub' → logprob: -3.824855327606201
    9. 'block' → logprob: -4.074855327606201
    10. 'offset' → logprob: -4.699855327606201

Token 1073: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46345341205596924
    2. '=' → logprob: -1.3384534120559692
    3. 'tmp' → logprob: -3.3384532928466797
    4. 'temp' → logprob: -3.5884532928466797
    5. 'diff' → logprob: -3.7134532928466797
    6. '           ' → logprob: -5.58845329284668
    7. '=sub' → logprob: -5.71345329284668
    8. 'sub' → logprob: -6.96345329284668
    9. 'd' → logprob: -7.08845329284668
    10. 'rest' → logprob: -7.21345329284668

Token 1074: '’' (ID: 438)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.19425389170646667
    2. 'np' → logprob: -3.194253921508789
    3. 'int' → logprob: -3.319253921508789
    4. 'ones' → logprob: -3.944253921508789
    5. 'offset' → logprob: -4.069253921508789
    6. 'size' → logprob: -4.569253921508789
    7. 'zeros' → logprob: -4.694253921508789
    8. 'indices' → logprob: -4.944253921508789
    9. 'bo' → logprob: -5.069253921508789
    10. 'uint' → logprob: -5.319253921508789

Token 1075: 'indices' (ID: 30992)
  Prédit: 'indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.9241030812263489
    2. 'offset' → logprob: -1.549103021621704
    3. 'bool' → logprob: -2.299103021621704
    4. 'np' → logprob: -2.299103021621704
    5. 'int' → logprob: -2.799103021621704
    6. 'zeros' → logprob: -3.049103021621704
    7. 'uint' → logprob: -3.424103021621704
    8. 'ones' → logprob: -4.049103260040283
    9. 'idx' → logprob: -5.549103260040283
    10. 'ints' → logprob: -5.549103260040283

Token 1076: ' à' (ID: 1221)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.7886378169059753
    2. ' =' → logprob: -0.9136378169059753
    3. '=' → logprob: -2.66363787651062
    4. '           ' → logprob: -3.28863787651062
    5. ' indices' → logprob: -4.538637638092041
    6. '(indices' → logprob: -4.663637638092041
    7. 'indexes' → logprob: -5.163637638092041
    8. 'idx' → logprob: -5.288637638092041
    9. 'inds' → logprob: -6.413637638092041
    10. '"indices' → logprob: -6.663637638092041

Token 1077: ' transformer' (ID: 59595)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.005215736571699381
    2. 'offset' → logprob: -5.630215644836426
    3. ' np' → logprob: -7.130215644836426
    4. 'numpy' → logprob: -7.755215644836426
    5. '(np' → logprob: -8.880215644836426
    6. '```' → logprob: -9.130215644836426
    7. 'range' → logprob: -10.380215644836426
    8. '=np' → logprob: -10.630215644836426
    9. 'ar' → logprob: -10.755215644836426
    10. 'dtype' → logprob: -11.380215644836426

Token 1078: ' sur' (ID: 1512)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5282036066055298
    2. '=' → logprob: -1.6532036066055298
    3. 'indices' → logprob: -1.7782036066055298
    4. 'idx' → logprob: -3.7782034873962402
    5. ' indices' → logprob: -4.90320348739624
    6. '           ' → logprob: -5.40320348739624
    7. 'index' → logprob: -6.02820348739624
    8. 'indexes' → logprob: -6.15320348739624
    9. '(indices' → logprob: -6.27820348739624
    10. ' idx' → logprob: -6.27820348739624

Token 1079: ' cette' (ID: 7696)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.05337625741958618
    2. 'half' → logprob: -3.9283761978149414
    3. 'size' → logprob: -4.553376197814941
    4. 'offset' → logprob: -4.928376197814941
    5. '(np' → logprob: -5.053376197814941
    6. 'range' → logprob: -5.303376197814941
    7. '(' → logprob: -7.428376197814941
    8. ' np' → logprob: -8.053376197814941
    9. 'slice' → logprob: -8.053376197814941
    10. 'rest' → logprob: -8.178376197814941

Token 1080: ' portion' (ID: 19137)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.810406506061554
    2. 'half' → logprob: -1.6854064464569092
    3. 'length' → logprob: -2.435406446456909
    4. 'portion' → logprob: -2.810406446456909
    5. 'offset' → logprob: -3.060406446456909
    6. 'ligne' → logprob: -3.310406446456909
    7. 'period' → logprob: -3.810406446456909
    8. 'long' → logprob: -4.185406684875488
    9. 'interval' → logprob: -4.435406684875488
    10. 'np' → logprob: -4.435406684875488

Token 1081: '
' (ID: 198)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.3458001911640167
    2. '           ' → logprob: -1.5958001613616943
    3. ' indices' → logprob: -3.0958001613616943
    4. 'idx' → logprob: -3.9708001613616943
    5. 'inds' → logprob: -4.845800399780273
    6. 'indexes' → logprob: -5.220800399780273
    7. '(indices' → logprob: -6.220800399780273
    8. ' idx' → logprob: -6.345800399780273
    9. ' ind' → logprob: -6.470800399780273
    10. 'ind' → logprob: -6.595800399780273

Token 1082: '           ' (ID: 352)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.9229472279548645
    2. '           ' → logprob: -1.6729471683502197
    3. '[' → logprob: -2.1729471683502197
    4. 'offset' → logprob: -2.6729471683502197
    5. 'for' → logprob: -3.1729471683502197
    6. 'idx' → logprob: -3.6729471683502197
    7. 'index' → logprob: -3.9229471683502197
    8. ' for' → logprob: -4.047947406768799
    9. '[offset' → logprob: -4.047947406768799
    10. 'sub' → logprob: -4.172947406768799

Token 1083: ' #' (ID: 1069)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.28558653593063354
    2. 'idx' → logprob: -1.5355865955352783
    3. 'inds' → logprob: -4.035586357116699
    4. 'indexes' → logprob: -4.910586357116699
    5. 'ind' → logprob: -6.660586357116699
    6. ' indices' → logprob: -6.660586357116699
    7. 'index' → logprob: -6.910586357116699
    8. ' idx' → logprob: -7.410586357116699
    9. 'i' → logprob: -7.660586357116699
    10. 'offset' → logprob: -7.785586357116699

Token 1084: ' np' (ID: 5374)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.11368770897388458
    2. 'idx' → logprob: -2.363687753677368
    3. 'inds' → logprob: -4.863687515258789
    4. 'indexes' → logprob: -5.988687515258789
    5. 'ind' → logprob: -7.613687515258789
    6. 'index' → logprob: -7.613687515258789
    7. 'for' → logprob: -7.863687515258789
    8. 'shift' → logprob: -8.613687515258789
    9. 'offset' → logprob: -8.613687515258789
    10. ' indices' → logprob: -8.613687515258789

Token 1085: '.arange' (ID: 57220)
  Prédit: '.arange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arange' → logprob: -0.0004311460361350328
    2. 'ar' → logprob: -8.375431060791016
    3. '.indices' → logprob: -9.000431060791016
    4. 'indices' → logprob: -10.250431060791016
    5. '.concatenate' → logprob: -11.000431060791016
    6. '.tile' → logprob: -12.250431060791016
    7. '.ones' → logprob: -12.375431060791016
    8. '
' → logprob: -13.250431060791016
    9. '```' → logprob: -13.375431060791016
    10. 'range' → logprob: -13.375431060791016

Token 1086: ' crée' (ID: 102256)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.27640801668167114
    2. ' =' → logprob: -1.7764079570770264
    3. '(offset' → logprob: -3.5264079570770264
    4. '=' → logprob: -4.4014081954956055
    5. '=size' → logprob: -4.7764081954956055
    6. '(' → logprob: -4.9014081954956055
    7. 'size' → logprob: -4.9014081954956055
    8. 'offset' → logprob: -5.2764081954956055
    9. '_size' → logprob: -7.6514081954956055
    10. '_offset' → logprob: -7.7764081954956055

Token 1087: ' une' (ID: 2463)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.18957316875457764
    2. '(offset' → logprob: -2.064573287963867
    3. '(' → logprob: -3.314573287963867
    4. 'offset' → logprob: -5.814573287963867
    5. 'size' → logprob: -6.064573287963867
    6. '(rest' → logprob: -6.189573287963867
    7. 'half' → logprob: -6.689573287963867
    8. 'rest' → logprob: -8.564573287963867
    9. '((' → logprob: -9.064573287963867
    10. '(length' → logprob: -9.189573287963867

Token 1088: ' sé' (ID: 7462)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.655788004398346
    2. 'size' → logprob: -1.2807879447937012
    3. 'offset' → logprob: -2.155787944793701
    4. 'array' → logprob: -2.905787944793701
    5. 'np' → logprob: -4.280787944793701
    6. '(' → logprob: -5.405787944793701
    7. '(offset' → logprob: -5.780787944793701
    8. 'range' → logprob: -5.905787944793701
    9. 'numpy' → logprob: -6.155787944793701
    10. '1' → logprob: -6.530787944793701

Token 1089: 'quence' (ID: 6975)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rray' → logprob: -0.5672550797462463
    2. 'size' → logprob: -2.6922550201416016
    3. 'offset' → logprob: -2.9422550201416016
    4. 'array' → logprob: -3.1922550201416016
    5. '(offset' → logprob: -3.5672550201416016
    6. 'range' → logprob: -3.6922550201416016
    7. '(size' → logprob: -3.6922550201416016
    8. '_size' → logprob: -3.9422550201416016
    9. '.arange' → logprob: -3.9422550201416016
    10. 'ize' → logprob: -4.067255020141602

Token 1090: ' d' (ID: 272)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.2766396403312683
    2. '(offset' → logprob: -1.526639699935913
    3. '(' → logprob: -4.151639461517334
    4. 'offset' → logprob: -5.276639461517334
    5. 'size' → logprob: -7.026639461517334
    6. '[offset' → logprob: -7.276639461517334
    7. '(rest' → logprob: -8.026639938354492
    8. '(
' → logprob: -8.401639938354492
    9. '=size' → logprob: -8.526639938354492
    10. '<|end|>' → logprob: -8.526639938354492

Token 1091: ''ent' (ID: 53422)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.1848013550043106
    2. 'size' → logprob: -2.1848013401031494
    3. 'offset' → logprob: -3.4348013401031494
    4. '(' → logprob: -4.4348015785217285
    5. '(offset' → logprob: -5.1848015785217285
    6. 'indices' → logprob: -6.3098015785217285
    7. 'int' → logprob: -6.8098015785217285
    8. '(np' → logprob: -7.0598015785217285
    9. 'np' → logprob: -7.1848015785217285
    10. '<size' → logprob: -8.30980110168457

Token 1092: 'iers' (ID: 11012)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.11100485920906067
    2. 'indices' → logprob: -3.6110048294067383
    3. '```' → logprob: -4.111004829406738
    4. 'index' → logprob: -5.111004829406738
    5. 'ices' → logprob: -5.236004829406738
    6. 'int' → logprob: -5.486004829406738
    7. 'range' → logprob: -5.486004829406738
    8. 'np' → logprob: -5.611004829406738
    9. 'idx' → logprob: -5.736004829406738
    10. 'eg' → logprob: -5.736004829406738

Token 1093: ' de' (ID: 334)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.8412972092628479
    2. '(offset' → logprob: -0.9662972092628479
    3. '(' → logprob: -3.091297149658203
    4. 'offset' → logprob: -3.091297149658203
    5. '[offset' → logprob: -3.091297149658203
    6. 'size' → logprob: -3.966297149658203
    7. '(rest' → logprob: -4.841297149658203
    8. '<|end|>' → logprob: -5.091297149658203
    9. 'rest' → logprob: -5.591297149658203
    10. '[size' → logprob: -5.591297149658203

Token 1094: ' (' (ID: 350)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.06772229075431824
    2. 'offset' → logprob: -3.8177223205566406
    3. '(size' → logprob: -3.8177223205566406
    4. '(' → logprob: -4.067722320556641
    5. ' size' → logprob: -6.567722320556641
    6. '0' → logprob: -6.692722320556641
    7. 'half' → logprob: -7.317722320556641
    8. '(offset' → logprob: -7.442722320556641
    9. 'len' → logprob: -9.31772232055664
    10. '2' → logprob: -9.56772232055664

Token 1095: 'half' (ID: 52836)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.011658824048936367
    2. 'offset' → logprob: -5.011658668518066
    3. '0' → logprob: -5.886658668518066
    4. 'half' → logprob: -6.386658668518066
    5. '(size' → logprob: -8.761658668518066
    6. '(' → logprob: -9.136658668518066
    7. ' size' → logprob: -9.761658668518066
    8. ')' → logprob: -10.261658668518066
    9. '1' → logprob: -10.386658668518066
    10. 'length' → logprob: -10.886658668518066

Token 1096: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -0.00028815300902351737
    2. 'period' → logprob: -9.375288009643555
    3. '```' → logprob: -10.000288009643555
    4. ')' → logprob: -10.125288009643555
    5. '_' → logprob: -10.375288009643555
    6. '_per' → logprob: -10.500288009643555
    7. ')_' → logprob: -11.625288009643555
    8. '_PERIOD' → logprob: -12.000288009643555
    9. '_range' → logprob: -12.125288009643555
    10. '_p' → logprob: -12.125288009643555

Token 1097: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45233896374702454
    2. ')' → logprob: -1.2023389339447021
    3. ':' → logprob: -3.702338933944702
    4. '):' → logprob: -4.452339172363281
    5. 'size' → logprob: -5.202339172363281
    6. '+' → logprob: -5.577339172363281
    7. ' :' → logprob: -5.827339172363281
    8. ' ,' → logprob: -5.952339172363281
    9. '*' → logprob: -6.077339172363281
    10. 'half' → logprob: -6.577339172363281

Token 1098: 'size' (ID: 4461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016148271039128304
    2. 'half' → logprob: -4.516148090362549
    3. '0' → logprob: -6.766148090362549
    4. ' half' → logprob: -7.266148090362549
    5. ' ' → logprob: -7.391148090362549
    6. ')' → logprob: -7.391148090362549
    7. 'size' → logprob: -7.516148090362549
    8. 'rest' → logprob: -7.891148090362549
    9. '+' → logprob: -8.641148567199707
    10. ' rest' → logprob: -9.016148567199707

Token 1099: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8118078708648682
    2. '+' → logprob: -1.8118078708648682
    3. ' +' → logprob: -1.9368078708648682
    4. ',' → logprob: -2.061807870864868
    5. ':' → logprob: -2.686807870864868
    6. ' :' → logprob: -3.936807870864868
    7. '):' → logprob: -4.686807632446289
    8. '//' → logprob: -5.061807632446289
    9. ' -' → logprob: -5.561807632446289
    10. ' )' → logprob: -6.061807632446289

Token 1100: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.403438538312912
    2. '(size' → logprob: -2.4034385681152344
    3. '(offset' → logprob: -2.5284385681152344
    4. ')' → logprob: -2.7784385681152344
    5. '+' → logprob: -3.7784385681152344
    6. '[' → logprob: -4.403438568115234
    7. '[offset' → logprob: -4.528438568115234
    8. 'half' → logprob: -4.653438568115234
    9. '```' → logprob: -4.653438568115234
    10. ' +' → logprob: -4.778438568115234

Token 1101: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0619120597839355
    2. 'size' → logprob: -1.5619120597839355
    3. 'half' → logprob: -1.5619120597839355
    4. '(size' → logprob: -1.6869120597839355
    5. 'offset' → logprob: -4.5619120597839355
    6. ' size' → logprob: -4.5619120597839355
    7. ' half' → logprob: -4.6869120597839355
    8. ' (' → logprob: -5.1869120597839355
    9. '(offset' → logprob: -5.6869120597839355
    10. 'rest' → logprob: -5.6869120597839355

Token 1102: 'half' (ID: 52836)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.4483277499675751
    2. 'half' → logprob: -1.5733277797698975
    3. 'offset' → logprob: -2.1983277797698975
    4. '(' → logprob: -4.698327541351318
    5. '(size' → logprob: -4.698327541351318
    6. ' size' → logprob: -4.823327541351318
    7. '2' → logprob: -5.323327541351318
    8. 'rest' → logprob: -5.573327541351318
    9. ' half' → logprob: -5.823327541351318
    10. ' offset' → logprob: -6.448327541351318

Token 1103: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -0.0007148159202188253
    2. '_half' → logprob: -8.250715255737305
    3. 'period' → logprob: -8.625715255737305
    4. '_size' → logprob: -9.500715255737305
    5. '_length' → logprob: -10.250715255737305
    6. 'size' → logprob: -10.375715255737305
    7. ')' → logprob: -10.375715255737305
    8. '```' → logprob: -11.250715255737305
    9. '_rest' → logprob: -11.375715255737305
    10. '_per' → logprob: -11.750715255737305

Token 1104: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4845286011695862
    2. ' +' → logprob: -1.6095285415649414
    3. ':' → logprob: -1.9845285415649414
    4. ')' → logprob: -3.4845285415649414
    5. '):' → logprob: -5.609528541564941
    6. ':size' → logprob: -6.109528541564941
    7. ' :' → logprob: -6.234528541564941
    8. ':length' → logprob: -6.609528541564941
    9. '*' → logprob: -6.734528541564941
    10. ',' → logprob: -6.984528541564941

Token 1105: '2' (ID: 17)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.003368896432220936
    2. 'offset' → logprob: -6.503368854522705
    3. '2' → logprob: -7.878368854522705
    4. ' size' → logprob: -7.878368854522705
    5. 'half' → logprob: -8.003369331359863
    6. 'rest' → logprob: -8.128369331359863
    7. '(size' → logprob: -8.628369331359863
    8. '1' → logprob: -9.003369331359863
    9. 'length' → logprob: -9.753369331359863
    10. '(' → logprob: -10.253369331359863

Token 1106: '*' (ID: 9)
  Prédit: ' <<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.45051395893096924
    2. '<<' → logprob: -1.3255139589309692
    3. ' *' → logprob: -2.9505138397216797
    4. '_period' → logprob: -4.07551383972168
    5. '*' → logprob: -4.57551383972168
    6. ')' → logprob: -5.32551383972168
    7. '```' → logprob: -5.95051383972168
    8. 'size' → logprob: -6.45051383972168
    9. '_half' → logprob: -6.45051383972168
    10. '_size' → logprob: -6.57551383972168

Token 1107: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.20609784126281738
    2. 'half' → logprob: -1.8310978412628174
    3. 'length' → logprob: -4.206097602844238
    4. ' size' → logprob: -5.706097602844238
    5. 'rest' → logprob: -5.831097602844238
    6. '(size' → logprob: -5.956097602844238
    7. ' half' → logprob: -6.956097602844238
    8. '```' → logprob: -8.581097602844238
    9. '(rest' → logprob: -9.143597602844238
    10. 'period' → logprob: -9.268597602844238

Token 1108: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6744065284729004
    2. ':' → logprob: -1.0494065284729004
    3. ',' → logprob: -3.1744065284729004
    4. '):' → logprob: -3.5494065284729004
    5. ' :' → logprob: -3.6744065284729004
    6. '+' → logprob: -4.7994065284729
    7. ':size' → logprob: -4.7994065284729
    8. 'size' → logprob: -5.4244065284729
    9. 'half' → logprob: -5.9244065284729
    10. '```' → logprob: -6.2994065284729

Token 1109: ' exclus' (ID: 9398)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9450675249099731
    2. ' =' → logprob: -1.6950675249099731
    3. '[' → logprob: -1.8200675249099731
    4. '(' → logprob: -2.0700674057006836
    5. '(size' → logprob: -3.4450674057006836
    6. 'half' → logprob: -4.070067405700684
    7. 'size' → logprob: -4.445067405700684
    8. 'rest' → logprob: -4.820067405700684
    9. 'offset' → logprob: -4.945067405700684
    10. '[offset' → logprob: -4.945067405700684

Token 1110: ',' (ID: 11)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.7034091949462891
    2. '=' → logprob: -1.578409194946289
    3. ' =' → logprob: -1.953409194946289
    4. '(np' → logprob: -2.953409194946289
    5. 'half' → logprob: -3.203409194946289
    6. '(' → logprob: -3.828409194946289
    7. '=np' → logprob: -5.078409194946289
    8. 'rest' → logprob: -5.078409194946289
    9. 'offset' → logprob: -5.328409194946289
    10. 'size' → logprob: -5.328409194946289

Token 1111: ' sur' (ID: 1512)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.7047939896583557
    2. 'np' → logprob: -0.9547939896583557
    3. 'indices' → logprob: -3.579793930053711
    4. '           ' → logprob: -4.329793930053711
    5. ' indices' → logprob: -4.454793930053711
    6. 'index' → logprob: -4.704793930053711
    7. ' rest' → logprob: -5.079793930053711
    8. 'offset' → logprob: -5.204793930053711
    9. ' size' → logprob: -5.454793930053711
    10. ' index' → logprob: -5.704793930053711

Token 1112: ' int' (ID: 677)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.20543146133422852
    2. 'np' → logprob: -1.9554314613342285
    3. 'dtype' → logprob: -4.4554314613342285
    4. '2' → logprob: -4.8304314613342285
    5. 'half' → logprob: -5.3304314613342285
    6. 'shape' → logprob: -5.5804314613342285
    7. '(size' → logprob: -5.7054314613342285
    8. 'range' → logprob: -5.9554314613342285
    9. 'rest' → logprob: -6.2054314613342285
    10. '1' → logprob: -6.4554314613342285

Token 1113: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.00015920029545668513
    2. '64' → logprob: -8.75015926361084
    3. 'np' → logprob: -14.87515926361084
    4. 'int' → logprob: -16.000158309936523
    5. 'p' → logprob: -16.750158309936523
    6. '16' → logprob: -17.125158309936523
    7. '```' → logprob: -17.125158309936523
    8. 'c' → logprob: -17.750158309936523
    9. 'dtype' → logprob: -18.000158309936523
    10. '[int' → logprob: -18.000158309936523

Token 1114: '
' (ID: 198)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.6415830850601196
    2. '=' → logprob: -1.6415830850601196
    3. ' =' → logprob: -2.14158296585083
    4. '(np' → logprob: -3.39158296585083
    5. 'indices' → logprob: -3.64158296585083
    6. ' np' → logprob: -3.76658296585083
    7. '=np' → logprob: -4.01658296585083
    8. '           ' → logprob: -4.39158296585083
    9. 'rest' → logprob: -4.64158296585083
    10. 'half' → logprob: -4.76658296585083

Token 1115: '           ' (ID: 352)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.0928750038146973
    2. '           ' → logprob: -1.3428750038146973
    3. ' =' → logprob: -1.4678750038146973
    4. '=' → logprob: -3.2178750038146973
    5. 'np' → logprob: -3.2178750038146973
    6. ' indices' → logprob: -3.9678750038146973
    7. '(indices' → logprob: -4.342875003814697
    8. 'arr' → logprob: -4.842875003814697
    9. 'index' → logprob: -4.967875003814697
    10. ' np' → logprob: -5.217875003814697

Token 1116: ' #' (ID: 1069)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.5072855353355408
    2. 'indices' → logprob: -1.7572855949401855
    3. ' np' → logprob: -2.2572855949401855
    4. '           ' → logprob: -2.6322855949401855
    5. 'idx' → logprob: -4.1322855949401855
    6. ' indices' → logprob: -4.3822855949401855
    7. 'offset' → logprob: -5.0072855949401855
    8. 'index' → logprob: -6.0072855949401855
    9. 'indexes' → logprob: -6.2572855949401855
    10. 'arr' → logprob: -6.5072855949401855

Token 1117: ' Puis' (ID: 87717)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.24092766642570496
    2. 'idx' → logprob: -1.9909276962280273
    3. 'indexes' → logprob: -3.7409276962280273
    4. 'inds' → logprob: -3.7409276962280273
    5. '           ' → logprob: -4.865927696228027
    6. 'ind' → logprob: -4.865927696228027
    7. 'index' → logprob: -5.490927696228027
    8. ' indices' → logprob: -6.365927696228027
    9. 'arr' → logprob: -6.865927696228027
    10. 'shift' → logprob: -6.990927696228027

Token 1118: ' le' (ID: 505)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.6943235993385315
    2. 'indices' → logprob: -1.4443235397338867
    3. ' np' → logprob: -2.5693235397338867
    4. 'idx' → logprob: -2.8193235397338867
    5. 'offset' → logprob: -2.9443235397338867
    6. 'index' → logprob: -4.069323539733887
    7. ' indices' → logprob: -4.694323539733887
    8. 'inds' → logprob: -4.944323539733887
    9. 'table' → logprob: -5.194323539733887
    10. 'ar' → logprob: -5.569323539733887

Token 1119: ' dé' (ID: 2393)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.4899803400039673
    2. 'ar' → logprob: -1.3649803400039673
    3. 'offset' → logprob: -2.8649802207946777
    4. 'slice' → logprob: -4.114980220794678
    5. 'astype' → logprob: -5.114980220794678
    6. 'conc' → logprob: -5.614980220794678
    7. 'concat' → logprob: -5.614980220794678
    8. 'reshape' → logprob: -5.739980220794678
    9. '.concatenate' → logprob: -5.989980220794678
    10. 'append' → logprob: -6.114980220794678

Token 1120: 'cal' (ID: 5842)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -1.4222536087036133
    2. 'ar' → logprob: -1.6722536087036133
    3. 'f' → logprob: -1.7972536087036133
    4. 'range' → logprob: -2.2972536087036133
    5. 'offset' → logprob: -2.4222536087036133
    6. 'code' → logprob: -2.7972536087036133
    7. 'astype' → logprob: -2.9222536087036133
    8. 'dtype' → logprob: -3.5472536087036133
    9. 'arr' → logprob: -4.172253608703613
    10. '.arange' → logprob: -4.422253608703613

Token 1121: 'age' (ID: 477)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5610536336898804
    2. 'range' → logprob: -2.06105375289917
    3. ' =' → logprob: -2.81105375289917
    4. '   ' → logprob: -3.06105375289917
    5. 'offset' → logprob: -3.31105375289917
    6. '=np' → logprob: -3.68605375289917
    7. 'ar' → logprob: -3.93605375289917
    8. 'shift' → logprob: -4.06105375289917
    9. '_tab' → logprob: -4.93605375289917
    10. 's' → logprob: -5.06105375289917

Token 1122: ' b' (ID: 287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0516989603638649
    2. ' =' → logprob: -3.051698923110962
    3. '=np' → logprob: -6.051699161529541
    4. 'offset' → logprob: -8.301698684692383
    5. '=size' → logprob: -8.676698684692383
    6. '[offset' → logprob: -9.676698684692383
    7. '(offset' → logprob: -10.176698684692383
    8. 'np' → logprob: -10.301698684692383
    9. 'size' → logprob: -10.801698684692383
    10. '(' → logprob: -10.801698684692383

Token 1123: 'inaire' (ID: 41465)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12634173035621643
    2. ' =' → logprob: -2.7513418197631836
    3. '=np' → logprob: -3.3763418197631836
    4. 'uffer' → logprob: -5.626341819763184
    5. 'y' → logprob: -5.751341819763184
    6. 'uf' → logprob: -6.001341819763184
    7. 'offset' → logprob: -6.001341819763184
    8. '"' → logprob: -6.126341819763184
    9. '[offset' → logprob: -6.501341819763184
    10. '(offset' → logprob: -7.751341819763184

Token 1124: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17698733508586884
    2. ' =' → logprob: -1.9269872903823853
    3. '=np' → logprob: -5.176987171173096
    4. '(' → logprob: -6.301987171173096
    5. 'np' → logprob: -6.426987171173096
    6. '(np' → logprob: -6.676987171173096
    7. '<<' → logprob: -6.676987171173096
    8. 'offset' → logprob: -7.176987171173096
    9. ')' → logprob: -7.176987171173096
    10. '>>' → logprob: -7.551987171173096

Token 1125: '>>)' (ID: 193859)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -1.2820558547973633
    2. '1' → logprob: -2.0320558547973633
    3. 'offset' → logprob: -2.0320558547973633
    4. 'half' → logprob: -2.1570558547973633
    5. 'size' → logprob: -2.6570558547973633
    6. 'rest' → logprob: -2.6570558547973633
    7. ')' → logprob: -2.7820558547973633
    8. '(' → logprob: -3.7820558547973633
    9. ' np' → logprob: -4.532055854797363
    10. ' rest' → logprob: -4.532055854797363

Token 1126: ' ram' (ID: 20920)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.9161484241485596
    2. ')' → logprob: -1.5411484241485596
    3. '(' → logprob: -2.5411484241485596
    4. ')>>' → logprob: -3.0411484241485596
    5. ' >>' → logprob: -3.2911484241485596
    6. 'np' → logprob: -3.7911484241485596
    7. 'size' → logprob: -3.7911484241485596
    8. '(size' → logprob: -3.9161484241485596
    9. '>>(' → logprob: -4.0411481857299805
    10. '(rest' → logprob: -4.1661481857299805

Token 1127: 'ène' (ID: 22902)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.18849462270736694
    2. 'ange' → logprob: -2.1884946823120117
    3. 'nge' → logprob: -3.6884946823120117
    4. 'age' → logprob: -4.938494682312012
    5. 'np' → logprob: -5.188494682312012
    6. '[np' → logprob: -5.313494682312012
    7. '[' → logprob: -6.313494682312012
    8. 'e' → logprob: -6.313494682312012
    9. '(np' → logprob: -6.563494682312012
    10. 'angep' → logprob: -6.688494682312012

Token 1128: ' chaque' (ID: 21194)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.1578819900751114
    2. ' np' → logprob: -2.65788197517395
    3. '(np' → logprob: -3.28288197517395
    4. 'half' → logprob: -4.532882213592529
    5. '(' → logprob: -5.032882213592529
    6. 'size' → logprob: -5.782882213592529
    7. ' half' → logprob: -5.782882213592529
    8. ')' → logprob: -5.782882213592529
    9. '           ' → logprob: -5.782882213592529
    10. '1' → logprob: -6.532882213592529

Token 1129: ' indice' (ID: 90848)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.2807411849498749
    2. '(np' → logprob: -2.4057412147521973
    3. ' np' → logprob: -2.7807412147521973
    4. 'offset' → logprob: -3.4057412147521973
    5. '(' → logprob: -4.530741214752197
    6. '1' → logprob: -4.780741214752197
    7. 'index' → logprob: -4.780741214752197
    8. ')' → logprob: -5.405741214752197
    9. '(offset' → logprob: -5.780741214752197
    10. 'ar' → logprob: -5.905741214752197

Token 1130: ' à' (ID: 1221)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.369767963886261
    2. ')' → logprob: -2.994767904281616
    3. '(' → logprob: -3.244767904281616
    4. ')>>' → logprob: -3.494767904281616
    5. ' >>' → logprob: -3.619767904281616
    6. '(offset' → logprob: -3.619767904281616
    7. '(np' → logprob: -3.744767904281616
    8. 'np' → logprob: -3.869767904281616
    9. 'offset' → logprob: -3.869767904281616
    10. '>>(' → logprob: -4.244768142700195

Token 1131: ' une' (ID: 2463)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30900654196739197
    2. 'np' → logprob: -2.684006452560425
    3. 'rest' → logprob: -2.684006452560425
    4. 'offset' → logprob: -3.809006452560425
    5. 'size' → logprob: -3.934006452560425
    6. 'half' → logprob: -3.934006452560425
    7. '(rest' → logprob: -4.309006690979004
    8. '(np' → logprob: -4.559006690979004
    9. '(' → logprob: -4.684006690979004
    10. 'length' → logprob: -5.059006690979004

Token 1132: ' valeur' (ID: 41664)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0808144211769104
    2. 'half' → logprob: -3.4558143615722656
    3. 'length' → logprob: -4.580814361572266
    4. 'offset' → logprob: -5.455814361572266
    5. 'rest' → logprob: -5.455814361572266
    6. 'np' → logprob: -5.830814361572266
    7. ' rest' → logprob: -5.830814361572266
    8. 'pos' → logprob: -5.955814361572266
    9. ' half' → logprob: -5.955814361572266
    10. 'size' → logprob: -6.080814361572266

Token 1133: ' index' (ID: 3472)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.4946557283401489
    2. 'half' → logprob: -2.6196556091308594
    3. '(' → logprob: -2.7446556091308594
    4. ' >>' → logprob: -2.9946556091308594
    5. ')' → logprob: -3.6196556091308594
    6. ' (' → logprob: -3.7446556091308594
    7. ' half' → logprob: -3.7446556091308594
    8. '(size' → logprob: -3.8696556091308594
    9. '>>(' → logprob: -3.9946556091308594
    10. '1' → logprob: -4.119655609130859

Token 1134: 'ée' (ID: 2894)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.7279592156410217
    2. '=' → logprob: -1.852959156036377
    3. '(' → logprob: -2.102959156036377
    4. '           ' → logprob: -2.977959156036377
    5. '>>(' → logprob: -2.977959156036377
    6. ')' → logprob: -3.227959156036377
    7. ' =' → logprob: -3.977959156036377
    8. '(size' → logprob: -4.477959156036377
    9. '(offset' → logprob: -4.727959156036377
    10. ' >>' → logprob: -4.977959156036377

Token 1135: ' par' (ID: 686)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.3703894317150116
    2. '(' → logprob: -2.245389461517334
    3. ')' → logprob: -3.370389461517334
    4. '(np' → logprob: -3.495389461517334
    5. '>>(' → logprob: -3.495389461517334
    6. 'np' → logprob: -4.120389461517334
    7. '(offset' → logprob: -4.245389461517334
    8. '(size' → logprob: -4.495389461517334
    9. ' >>' → logprob: -4.495389461517334
    10. '(index' → logprob: -4.995389461517334

Token 1136: ' rest' (ID: 2867)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23562604188919067
    2. 'rest' → logprob: -2.110625982284546
    3. 'pos' → logprob: -3.485625982284546
    4. ' rest' → logprob: -4.610626220703125
    5. 'size' → logprob: -4.610626220703125
    6. 'length' → logprob: -4.735626220703125
    7. 'half' → logprob: -4.860626220703125
    8. ' ' → logprob: -5.235626220703125
    9. 'offset' → logprob: -5.485626220703125
    10. 'np' → logprob: -6.235626220703125

Token 1137: '
' (ID: 198)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.5696941018104553
    2. ')' → logprob: -1.9446940422058105
    3. ' >>' → logprob: -2.4446940422058105
    4. '           ' → logprob: -2.4446940422058105
    5. '```' → logprob: -3.6946940422058105
    6. ')>>' → logprob: -4.3196940422058105
    7. '       ' → logprob: -4.9446940422058105
    8. '[' → logprob: -4.9446940422058105
    9. '=' → logprob: -4.9446940422058105
    10. '   ' → logprob: -5.0696940422058105

Token 1138: '           ' (ID: 352)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.5733948945999146
    2. '(np' → logprob: -1.8233948945999146
    3. '(' → logprob: -2.198394775390625
    4. '=' → logprob: -3.448394775390625
    5. ' =' → logprob: -3.573394775390625
    6. '>>' → logprob: -3.948394775390625
    7. ' np' → logprob: -4.198394775390625
    8. 'rest' → logprob: -4.448394775390625
    9. ')' → logprob: -4.823394775390625
    10. '           ' → logprob: -4.823394775390625

Token 1139: ' trans' (ID: 1643)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.390158474445343
    2. 'np' → logprob: -1.6401584148406982
    3. '           ' → logprob: -3.0151584148406982
    4. 'idx' → logprob: -3.3901584148406982
    5. ' indices' → logprob: -4.765158653259277
    6. 'index' → logprob: -5.140158653259277
    7. 'inds' → logprob: -5.265158653259277
    8. 'ind' → logprob: -5.390158653259277
    9. ' np' → logprob: -5.390158653259277
    10. 'indexes' → logprob: -5.765158653259277

Token 1140: '_table' (ID: 11721)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.628814160823822
    2. 'indices' → logprob: -1.8788142204284668
    3. ' =' → logprob: -2.128814220428467
    4. '_table' → logprob: -2.628814220428467
    5. 'form' → logprob: -3.253814220428467
    6. 'formed' → logprob: -3.753814220428467
    7. '=' → logprob: -4.128814220428467
    8. 'positions' → logprob: -4.503814220428467
    9. 'pos' → logprob: -5.128814220428467
    10. 'forms' → logprob: -5.878814220428467

Token 1141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932170987129211
    2. ' =' → logprob: -0.6932170987129211
    3. '   ' → logprob: -10.068217277526855
    4. '=np' → logprob: -11.443217277526855
    5. '	' → logprob: -12.568217277526855
    6. '[' → logprob: -12.568217277526855
    7. ' ' → logprob: -13.068217277526855
    8. 's' → logprob: -13.818217277526855
    9. '       ' → logprob: -13.943217277526855
    10. ',' → logprob: -14.318217277526855

Token 1142: ' np' (ID: 5374)
  Prédit: '(np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.29877960681915283
    2. 'np' → logprob: -1.6737796068191528
    3. ' (' → logprob: -3.2987794876098633
    4. ' np' → logprob: -3.6737794876098633
    5. '((' → logprob: -5.798779487609863
    6. '(offset' → logprob: -5.923779487609863
    7. '(' → logprob: -6.048779487609863
    8. ' ((' → logprob: -9.048779487609863
    9. 'offset' → logprob: -9.423779487609863
    10. '(((' → logprob: -9.548779487609863

Token 1143: '.arange' (ID: 57220)
  Prédit: '.arange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arange' → logprob: -0.0004441355704329908
    2. 'ar' → logprob: -8.375444412231445
    3. '.right' → logprob: -8.625444412231445
    4. '.bit' → logprob: -11.625444412231445
    5. 'right' → logprob: -12.000444412231445
    6. '.asarray' → logprob: -12.625444412231445
    7. '.zeros' → logprob: -12.750444412231445
    8. '.left' → logprob: -13.125444412231445
    9. '.concatenate' → logprob: -13.250444412231445
    10. '.ar' → logprob: -14.000444412231445

Token 1144: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007909439504146576
    2. '(offset' → logprob: -5.507909297943115
    3. '(size' → logprob: -6.132909297943115
    4. '(rest' → logprob: -7.007909297943115
    5. 'half' → logprob: -7.507909297943115
    6. '((' → logprob: -9.257909774780273
    7. 'offset' → logprob: -10.882909774780273
    8. 'rest' → logprob: -11.132909774780273
    9. '(h' → logprob: -11.132909774780273
    10. 'size' → logprob: -11.382909774780273

Token 1145: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.004537638742476702
    2. '(' → logprob: -5.629537582397461
    3. 'size' → logprob: -8.004537582397461
    4. ' half' → logprob: -8.129537582397461
    5. 'rest' → logprob: -9.129537582397461
    6. '   ' → logprob: -9.629537582397461
    7. 'hal' → logprob: -9.754537582397461
    8. '1' → logprob: -10.754537582397461
    9. '0' → logprob: -11.504537582397461
    10. '(size' → logprob: -11.754537582397461

Token 1146: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -7.135819760151207e-05
    2. 'period' → logprob: -10.12507152557373
    3. '_' → logprob: -11.50007152557373
    4. '_rest' → logprob: -11.75007152557373
    5. '_PERIOD' → logprob: -12.87507152557373
    6. 'Period' → logprob: -13.37507152557373
    7. '           ' → logprob: -13.50007152557373
    8. '   ' → logprob: -13.50007152557373
    9. '_size' → logprob: -14.37507152557373
    10. 'rest' → logprob: -14.37507152557373

Token 1147: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7097099423408508
    2. ',' → logprob: -1.334709882736206
    3. ')' → logprob: -1.584709882736206
    4. ' +' → logprob: -4.584710121154785
    5. '   ' → logprob: -4.709710121154785
    6. '       ' → logprob: -5.834710121154785
    7. '           ' → logprob: -5.959710121154785
    8. ')<<' → logprob: -5.959710121154785
    9. '<<' → logprob: -6.209710121154785
    10. ')+' → logprob: -6.209710121154785

Token 1148: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.004232616163790226
    2. ' size' → logprob: -5.879232406616211
    3. '(size' → logprob: -7.629232406616211
    4. '1' → logprob: -7.754232406616211
    5. 'rest' → logprob: -9.004232406616211
    6. '0' → logprob: -9.129232406616211
    7. '2' → logprob: -9.254232406616211
    8. '(' → logprob: -9.379232406616211
    9. ' ' → logprob: -10.629232406616211
    10. '   ' → logprob: -10.754232406616211

Token 1149: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33496326208114624
    2. ',' → logprob: -1.334963321685791
    3. ')>>' → logprob: -4.084963321685791
    4. '>>' → logprob: -5.834963321685791
    5. ' ,' → logprob: -7.959963321685791
    6. ' )' → logprob: -8.334962844848633
    7. '   ' → logprob: -8.459962844848633
    8. '+' → logprob: -8.459962844848633
    9. ',
' → logprob: -9.084962844848633
    10. ')<<' → logprob: -9.334962844848633

Token 1150: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.06439400464296341
    2. ' half' → logprob: -2.814393997192383
    3. 'size' → logprob: -7.064393997192383
    4. '(' → logprob: -7.939393997192383
    5. ' ' → logprob: -8.064393997192383
    6. ' size' → logprob: -8.439393997192383
    7. 'rest' → logprob: -9.064393997192383
    8. '   ' → logprob: -9.439393997192383
    9. '2' → logprob: -9.689393997192383
    10. ' rest' → logprob: -9.814393997192383

Token 1151: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -0.045553065836429596
    2. '1' → logprob: -3.420552968978882
    3. 'period' → logprob: -4.545553207397461
    4. 'size' → logprob: -8.795553207397461
    5. '_length' → logprob: -8.795553207397461
    6. 'length' → logprob: -8.920553207397461
    7. '_PERIOD' → logprob: -9.045553207397461
    8. '```' → logprob: -9.295553207397461
    9. '_size' → logprob: -9.920553207397461
    10. ')' → logprob: -9.920553207397461

Token 1152: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20164965093135834
    2. ' +' → logprob: -1.7016496658325195
    3. '*' → logprob: -9.20164966583252
    4. '<<' → logprob: -9.82664966583252
    5. '   ' → logprob: -10.70164966583252
    6. '+
' → logprob: -10.82664966583252
    7. ':' → logprob: -11.45164966583252
    8. ' ' → logprob: -11.95164966583252
    9. ')' → logprob: -12.07664966583252
    10. '	' → logprob: -12.70164966583252

Token 1153: ' size' (ID: 2349)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004983438993804157
    2. ' ' → logprob: -8.00049877166748
    3. 'size' → logprob: -9.00049877166748
    4. '(' → logprob: -10.87549877166748
    5. '   ' → logprob: -11.50049877166748
    6. '```' → logprob: -12.75049877166748
    7. ' size' → logprob: -13.12549877166748
    8. '
' → logprob: -13.50049877166748
    9. '(size' → logprob: -14.06299877166748
    10. '1' → logprob: -15.18799877166748

Token 1154: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7489292621612549
    2. '+' → logprob: -0.9989292621612549
    3. ')' → logprob: -2.748929262161255
    4. ' +' → logprob: -2.748929262161255
    5. '<<' → logprob: -3.998929262161255
    6. ' *' → logprob: -5.123929023742676
    7. ',' → logprob: -5.373929023742676
    8. ' ' → logprob: -7.998929023742676
    9. ' <<' → logprob: -8.373929023742676
    10. '   ' → logprob: -8.748929023742676

Token 1155: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.750006675720215
    3. '   ' → logprob: -13.125006675720215
    4. '3' → logprob: -14.500006675720215
    5. '1' → logprob: -15.000006675720215
    6. '(' → logprob: -16.5000057220459
    7. ')' → logprob: -16.8750057220459
    8. '```' → logprob: -17.2500057220459
    9. '=' → logprob: -17.3125057220459
    10. '           ' → logprob: -17.5625057220459

Token 1156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. '3' → logprob: -13.375004768371582
    3. ' ' → logprob: -13.375004768371582
    4. '1' → logprob: -13.875004768371582
    5. '   ' → logprob: -16.0625057220459
    6. '
' → logprob: -16.3750057220459
    7. ')' → logprob: -16.3750057220459
    8. '(' → logprob: -16.5000057220459
    9. '```' → logprob: -16.5625057220459
    10. '=' → logprob: -17.3125057220459

Token 1157: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06170041859149933
    2. ',' → logprob: -3.3117003440856934
    3. ')>>' → logprob: -3.8117003440856934
    4. '>>' → logprob: -7.561700344085693
    5. ' )' → logprob: -8.436700820922852
    6. '[' → logprob: -8.811700820922852
    7. ' ,' → logprob: -9.186700820922852
    8. ')[' → logprob: -10.186700820922852
    9. '>>)' → logprob: -10.311700820922852
    10. '```' → logprob: -10.686700820922852

Token 1158: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.01433214358985424
    2. ' dtype' → logprob: -4.514332294464111
    3. 'np' → logprob: -5.764332294464111
    4. ' np' → logprob: -9.514331817626953
    5. '1' → logprob: -10.514331817626953
    6. 'int' → logprob: -11.139331817626953
    7. 'rest' → logprob: -11.264331817626953
    8. ' ' → logprob: -12.639331817626953
    9. '(dtype' → logprob: -12.639331817626953
    10. '   ' → logprob: -13.139331817626953

Token 1159: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.100382000207901
    2. 'np' → logprob: -2.350382089614868
    3. '(np' → logprob: -9.350381851196289
    4. ' np' → logprob: -9.850381851196289
    5. '[np' → logprob: -10.975381851196289
    6. ',np' → logprob: -12.100381851196289
    7. '   ' → logprob: -12.475381851196289
    8. 'numpy' → logprob: -12.850381851196289
    9. '=' → logprob: -13.225381851196289
    10. '
' → logprob: -13.350381851196289

Token 1160: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.0011726059019565582
    2. 'int' → logprob: -6.7511725425720215
    3. '.uint' → logprob: -13.25117301940918
    4. '=int' → logprob: -14.62617301940918
    5. 'np' → logprob: -16.62617301940918
    6. '[int' → logprob: -17.87617301940918
    7. ' int' → logprob: -18.00117301940918
    8. ':int' → logprob: -18.25117301940918
    9. 'uint' → logprob: -18.37617301940918
    10. '<int' → logprob: -18.87617301940918

Token 1161: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: 0.0
    2. 'p' → logprob: -19.125
    3. 'c' → logprob: -21.375
    4. 'int' → logprob: -21.75
    5. 'np' → logprob: -21.875
    6. '3' → logprob: -22.375
    7. '64' → logprob: -22.875
    8. '```' → logprob: -23.25
    9. '8' → logprob: -23.625
    10. '
' → logprob: -23.875

Token 1162: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000903480569832027
    2. ')>>' → logprob: -7.125903606414795
    3. ' )' → logprob: -10.375903129577637
    4. '>>' → logprob: -10.750903129577637
    5. ')
' → logprob: -10.750903129577637
    6. '[' → logprob: -11.500903129577637
    7. '           ' → logprob: -12.375903129577637
    8. ')[' → logprob: -13.125903129577637
    9. ' >>' → logprob: -13.500903129577637
    10. '>>)' → logprob: -13.750903129577637

Token 1163: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.47413304448127747
    2. ' >>' → logprob: -1.099133014678955
    3. ')' → logprob: -4.099133014678955
    4. ')>>' → logprob: -4.724133014678955
    5. '[' → logprob: -4.849133014678955
    6. ' >>=' → logprob: -5.599133014678955
    7. '           ' → logprob: -5.974133014678955
    8. '<|end|>' → logprob: -6.224133014678955
    9. '>>>' → logprob: -6.849133014678955
    10. '>>)' → logprob: -8.224133491516113

Token 1164: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.03804941102862358
    2. '(rest' → logprob: -3.2880494594573975
    3. ' rest' → logprob: -13.038049697875977
    4. '(' → logprob: -13.038049697875977
    5. '1' → logprob: -13.788049697875977
    6. 'np' → logprob: -13.913049697875977
    7. '(np' → logprob: -14.788049697875977
    8. 'rests' → logprob: -15.038049697875977
    9. 'res' → logprob: -15.163049697875977
    10. '
' → logprob: -15.288049697875977

Token 1165: '
            
' (ID: 45334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1166: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5197856426239014
    2. '   ' → logprob: -1.6447856426239014
    3. ')' → logprob: -2.1447856426239014
    4. ':' → logprob: -2.1447856426239014
    5. '           ' → logprob: -2.1447856426239014
    6. '<|end|>' → logprob: -2.2697856426239014
    7. ' ' → logprob: -3.6447856426239014
    8. '[' → logprob: -4.2697858810424805
    9. 'trans' → logprob: -4.3947858810424805
    10. '.' → logprob: -4.8947858810424805

Token 1167: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5159385204315186
    2. '       ' → logprob: -1.8909385204315186
    3. ')' → logprob: -2.0159385204315186
    4. '   ' → logprob: -2.6409385204315186
    5. '<|end|>' → logprob: -4.640938758850098
    6. 'for' → logprob: -4.765938758850098
    7. 'trans' → logprob: -5.265938758850098
    8. ' for' → logprob: -5.390938758850098
    9. '#' (adapté à ' #') → logprob: -5.515938758850098
    10. ']' → logprob: -6.515938758850098

Token 1168: ' Res' (ID: 2317)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.36117374897003174
    2. 'offset' → logprob: -1.4861737489700317
    3. 'trans' → logprob: -2.986173629760742
    4. 'for' → logprob: -4.611173629760742
    5. 'sub' → logprob: -5.361173629760742
    6. 'size' → logprob: -5.736173629760742
    7. '           ' → logprob: -5.861173629760742
    8. ' table' → logprob: -6.611173629760742
    9. 'count' → logprob: -7.361173629760742
    10. '   ' → logprob: -7.361173629760742

Token 1169: 'hape' (ID: 66254)
  Prédit: 'hape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hape' → logprob: -0.11850255727767944
    2. '_table' → logprob: -2.993502616882324
    3. '           ' → logprob: -3.118502616882324
    4. 'table' → logprob: -4.993502616882324
    5. 'ize' → logprob: -5.618502616882324
    6. 'offset' → logprob: -6.118502616882324
    7. 'trans' → logprob: -6.118502616882324
    8. 'h' → logprob: -7.618502616882324
    9. '       ' → logprob: -7.868502616882324
    10. 'Table' → logprob: -8.243502616882324

Token 1170: ' trans' (ID: 1643)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.7989259958267212
    2. 'sub' → logprob: -1.5489259958267212
    3. '(sub' → logprob: -1.7989259958267212
    4. '(' → logprob: -2.0489258766174316
    5. '(trans' → logprob: -3.5489258766174316
    6. '(size' → logprob: -5.423925876617432
    7. '(-' → logprob: -6.048925876617432
    8. ' sub' → logprob: -6.048925876617432
    9. ' trans' → logprob: -6.298925876617432
    10. '           ' → logprob: -6.673925876617432

Token 1171: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.0005785312969237566
    2. '(size' → logprob: -8.000578880310059
    3. 'table' → logprob: -9.375578880310059
    4. '(' → logprob: -10.000578880310059
    5. 'Table' → logprob: -10.125578880310059
    6. '(length' → logprob: -10.750578880310059
    7. 'size' → logprob: -10.875578880310059
    8. '_TABLE' → logprob: -12.625578880310059
    9. '(shape' → logprob: -12.625578880310059
    10. 'able' → logprob: -12.875578880310059

Token 1172: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39426031708717346
    2. ' =' → logprob: -1.269260287284851
    3. '.reshape' → logprob: -3.6442604064941406
    4. ',' → logprob: -4.769260406494141
    5. '=(' → logprob: -6.019260406494141
    6. '(' → logprob: -6.144260406494141
    7. '=size' → logprob: -6.269260406494141
    8. '           ' → logprob: -7.144260406494141
    9. ')' → logprob: -7.394260406494141
    10. '(size' → logprob: -7.644260406494141

Token 1173: ' lignes' (ID: 81687)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05045759305357933
    2. '(-' → logprob: -3.42545747756958
    3. '(size' → logprob: -4.42545747756958
    4. '(length' → logprob: -5.55045747756958
    5. ' (' → logprob: -8.175457954406738
    6. 'half' → logprob: -8.675457954406738
    7. '2' → logprob: -9.800457954406738
    8. '(pos' → logprob: -9.800457954406738
    9. '(rest' → logprob: -9.800457954406738
    10. 'size' → logprob: -9.925457954406738

Token 1174: ' chacun' (ID: 52136)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.7966045141220093
    2. '(' → logprob: -0.9216045141220093
    3. '(-' → logprob: -2.046604633331299
    4. '(length' → logprob: -4.421604633331299
    5. ',' → logprob: -5.046604633331299
    6. '(len' → logprob: -6.921604633331299
    7. '((' → logprob: -8.04660415649414
    8. '(
' → logprob: -8.17160415649414
    9. ',size' → logprob: -8.42160415649414
    10. '=' → logprob: -8.42160415649414

Token 1175: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3691033124923706
    2. '=' → logprob: -1.4941033124923706
    3. '=(' → logprob: -1.4941033124923706
    4. '(size' → logprob: -1.9941033124923706
    5. '=size' → logprob: -1.9941033124923706
    6. 'size' → logprob: -4.24410343170166
    7. '=sub' → logprob: -6.86910343170166
    8. ',' → logprob: -6.99410343170166
    9. 'trans' → logprob: -7.24410343170166
    10. '(
' → logprob: -7.24410343170166

Token 1176: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0750809758901596
    2. 'size' → logprob: -3.0750808715820312
    3. '(' → logprob: -4.075080871582031
    4. ' half' → logprob: -5.325080871582031
    5. '(size' → logprob: -6.450080871582031
    6. '2' → logprob: -6.825080871582031
    7. '1' → logprob: -7.575080871582031
    8. ' size' → logprob: -7.575080871582031
    9. 'length' → logprob: -8.575080871582031
    10. ' (' → logprob: -9.700080871582031

Token 1177: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -5.097437315271236e-05
    2. '_' → logprob: -10.50005054473877
    3. '_p' → logprob: -11.62505054473877
    4. 'period' → logprob: -12.62505054473877
    5. '_per' → logprob: -12.62505054473877
    6. '```' → logprob: -12.87505054473877
    7. '_PERIOD' → logprob: -13.25005054473877
    8. ' _' → logprob: -14.12505054473877
    9. ',' → logprob: -14.50005054473877
    10. ',_' → logprob: -14.75005054473877

Token 1178: '*' (ID: 9)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02307203970849514
    2. ',
' → logprob: -5.023072242736816
    3. ')' → logprob: -5.273072242736816
    4. '.reshape' → logprob: -5.648072242736816
    5. ':' → logprob: -6.148072242736816
    6. ').' → logprob: -6.648072242736816
    7. ',size' → logprob: -7.148072242736816
    8. ',length' → logprob: -7.648072242736816
    9. '(' → logprob: -7.773072242736816
    10. '```' → logprob: -7.898072242736816

Token 1179: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4046454429626465
    2. 'half' → logprob: -1.2796454429626465
    3. '(size' → logprob: -3.9046454429626465
    4. '2' → logprob: -4.9046454429626465
    5. ' half' → logprob: -5.0296454429626465
    6. '(rest' → logprob: -5.1546454429626465
    7. ' (' → logprob: -5.5296454429626465
    8. 'rest' → logprob: -5.6546454429626465
    9. 'size' → logprob: -6.0296454429626465
    10. '1' → logprob: -7.0296454429626465

Token 1180: ' colon' (ID: 20947)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013623187318444252
    2. ')' → logprob: -5.638623237609863
    3. '.reshape' → logprob: -6.013623237609863
    4. '(' → logprob: -6.263623237609863
    5. ').' → logprob: -6.513623237609863
    6. ',(' → logprob: -6.638623237609863
    7. ',size' → logprob: -6.888623237609863
    8. ',
' → logprob: -7.388623237609863
    9. '(size' → logprob: -8.138623237609863
    10. ' ,' → logprob: -8.263623237609863

Token 1181: 'nes' (ID: 4382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3427664637565613
    2. 'umn' → logprob: -2.467766523361206
    3. 'ms' → logprob: -2.467766523361206
    4. 'ns' → logprob: -2.592766523361206
    5. 'm' → logprob: -3.467766523361206
    6. '=' → logprob: -4.967766284942627
    7. ',' → logprob: -6.217766284942627
    8. 'mn' → logprob: -6.842766284942627
    9. '   ' → logprob: -7.217766284942627
    10. '```' → logprob: -7.592766284942627

Token 1182: ' ' (ID: 5310)
  Prédit: '.reshape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.reshape' → logprob: -0.10128341615200043
    2. ').' → logprob: -2.851283311843872
    3. ',' → logprob: -4.726283550262451
    4. '(' → logprob: -4.851283550262451
    5. '.transpose' → logprob: -4.976283550262451
    6. ')' → logprob: -5.726283550262451
    7. '           ' → logprob: -5.976283550262451
    8. '.' → logprob: -6.101283550262451
    9. 'trans' → logprob: -6.726283550262451
    10. '=' → logprob: -6.851283550262451

Token 1183: ':' (ID: 25)
  Prédit: '.reshape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.reshape' → logprob: -0.09077730774879456
    2. '(' → logprob: -3.2157773971557617
    3. ',' → logprob: -3.4657773971557617
    4. ').' → logprob: -4.840777397155762
    5. '.' → logprob: -6.465777397155762
    6. ')' → logprob: -6.965777397155762
    7. '.transpose' → logprob: -6.965777397155762
    8. '=' → logprob: -7.590777397155762
    9. '.resize' → logprob: -7.590777397155762
    10. '[' → logprob: -8.090777397155762

Token 1184: ' ré' (ID: 3146)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4443969428539276
    2. 'rest' → logprob: -2.06939697265625
    3. 'half' → logprob: -2.44439697265625
    4. '(rest' → logprob: -3.94439697265625
    5. '(-' → logprob: -4.19439697265625
    6. '2' → logprob: -4.19439697265625
    7. '(size' → logprob: -4.56939697265625
    8. ')' → logprob: -4.69439697265625
    9. '-' → logprob: -4.81939697265625
    10. '1' → logprob: -4.94439697265625

Token 1185: 'organisation' (ID: 49904)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.004506080877035856
    2. 'sh' → logprob: -5.6295061111450195
    3. 'size' → logprob: -7.7545061111450195
    4. 'hape' → logprob: -8.75450611114502
    5. 'reshape' → logprob: -8.87950611114502
    6. 's' → logprob: -9.50450611114502
    7. '.shape' → logprob: -10.25450611114502
    8. ' shape' → logprob: -11.37950611114502
    9. 'peat' → logprob: -11.50450611114502
    10. 'order' → logprob: -11.87950611114502

Token 1186: ' mémoire' (ID: 79071)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.842976987361908
    2. '=' → logprob: -0.842976987361908
    3. '           ' → logprob: -3.3429770469665527
    4. ' =' → logprob: -3.7179770469665527
    5. 'trans' → logprob: -3.7179770469665527
    6. '(trans' → logprob: -3.8429770469665527
    7. '(
' → logprob: -4.217977046966553
    8. ')' → logprob: -4.842977046966553
    9. '=(' → logprob: -5.967977046966553
    10. ',' → logprob: -6.467977046966553

Token 1187: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5595539212226868
    2. '.reshape' → logprob: -1.059553861618042
    3. ').' → logprob: -3.559553861618042
    4. ',' → logprob: -4.684554100036621
    5. ')' → logprob: -4.809554100036621
    6. '=' → logprob: -4.934554100036621
    7. '(trans' → logprob: -4.934554100036621
    8. '.transpose' → logprob: -5.184554100036621
    9. '           ' → logprob: -5.559554100036621
    10. '.' → logprob: -5.809554100036621

Token 1188: '           ' (ID: 352)
  Prédit: '.reshape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.reshape' → logprob: -0.05023336410522461
    2. ').' → logprob: -3.5502333641052246
    3. '(' → logprob: -4.925233364105225
    4. '.transpose' → logprob: -5.550233364105225
    5. '.' → logprob: -6.050233364105225
    6. '[::-' → logprob: -6.675233364105225
    7. ',' → logprob: -6.925233364105225
    8. '[' → logprob: -7.050233364105225
    9. '.shape' → logprob: -7.300233364105225
    10. ')' → logprob: -7.675233364105225

Token 1189: ' trans' (ID: 1643)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' (adapté à ' trans') → logprob: -0.4987311065196991
    2. ' =' → logprob: -1.6237311363220215
    3. ' trans' → logprob: -2.2487311363220215
    4. '=' → logprob: -2.8737311363220215
    5. '           ' → logprob: -3.4987311363220215
    6. '.trans' → logprob: -7.6237311363220215
    7. '.reshape' → logprob: -7.7487311363220215
    8. 'reshape' → logprob: -7.9987311363220215
    9. 'resh' → logprob: -8.248730659484863
    10. '	trans' → logprob: -8.248730659484863

Token 1190: '_' (ID: 62)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.0001872094871941954
    2. '_' → logprob: -9.250186920166016
    3. '_tab' → logprob: -9.500186920166016
    4. ' _' → logprob: -11.875186920166016
    5. ')_' → logprob: -13.500186920166016
    6. '=_' → logprob: -13.500186920166016
    7. '_Table' → logprob: -13.500186920166016
    8. '_tbl' → logprob: -13.625186920166016
    9. ' =' → logprob: -14.000186920166016
    10. '_tables' → logprob: -14.125186920166016

Token 1191: 'resh' (ID: 3485)
  Prédit: '_table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_table' → logprob: -8.840432565193623e-05
    2. '_tab' → logprob: -9.875088691711426
    3. '_' → logprob: -10.500088691711426
    4. 'Table' → logprob: -13.500088691711426
    5. ' _' → logprob: -13.625088691711426
    6. '_TABLE' → logprob: -13.750088691711426
    7. '_tbl' → logprob: -13.750088691711426
    8. 'table' → logprob: -14.000088691711426
    9. '_tables' → logprob: -14.250088691711426
    10. '=' → logprob: -14.750088691711426

Token 1192: 'aped' (ID: 16020)
  Prédit: 'ape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -9.729906196298543e-06
    2. 'aped' → logprob: -11.625009536743164
    3. 'ap' → logprob: -16.125009536743164
    4. '=' → logprob: -16.375009536743164
    5. 'hape' → logprob: -16.500009536743164
    6. '```' → logprob: -16.500009536743164
    7. 'ale' → logprob: -16.750009536743164
    8. 'aping' → logprob: -16.875009536743164
    9. '   ' → logprob: -16.875009536743164
    10. 'aper' → logprob: -17.000009536743164

Token 1193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022726893424988
    2. ' =' → logprob: -1.9102272987365723
    3. '=np' → logprob: -13.535226821899414
    4. ')' → logprob: -14.285226821899414
    5. '=
' → logprob: -14.910226821899414
    6. ',' → logprob: -15.285226821899414
    7. 'trans' → logprob: -15.785226821899414
    8. '=sub' → logprob: -16.160226821899414
    9. '(trans' → logprob: -16.285226821899414
    10. '```' → logprob: -17.035226821899414

Token 1194: ' trans' (ID: 1643)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.0021929678041487932
    2. ' trans' → logprob: -6.127192974090576
    3. 'np' → logprob: -11.877192497253418
    4. '	trans' → logprob: -14.627192497253418
    5. ' np' → logprob: -15.627192497253418
    6. '   ' → logprob: -15.877192497253418
    7. '           ' → logprob: -15.877192497253418
    8. '(trans' → logprob: -16.627193450927734
    9. 'transpose' → logprob: -17.127193450927734
    10. ' ' → logprob: -17.627193450927734

Token 1195: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -2.6060808522743173e-05
    2. 'Table' → logprob: -11.875025749206543
    3. '(size' → logprob: -12.125025749206543
    4. '(' → logprob: -12.250025749206543
    5. '(shape' → logprob: -12.500025749206543
    6. '_' → logprob: -13.500025749206543
    7. 'table' → logprob: -14.375025749206543
    8. '_TABLE' → logprob: -14.500025749206543
    9. '(length' → logprob: -14.500025749206543
    10. '(table' → logprob: -15.125025749206543

Token 1196: '.reshape' (ID: 55028)
  Prédit: '.reshape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reshape' → logprob: -6.015305552864447e-05
    2. '.' → logprob: -9.750060081481934
    3. ').' → logprob: -14.500060081481934
    4. '.transpose' → logprob: -14.625060081481934
    5. ' .' → logprob: -14.875060081481934
    6. 'reshape' → logprob: -15.750060081481934
    7. '.view' → logprob: -16.12506103515625
    8. '.resize' → logprob: -16.50006103515625
    9. '=' → logprob: -16.75006103515625
    10. '   ' → logprob: -16.87506103515625

Token 1197: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6952406764030457
    2. '(-' → logprob: -0.6952406764030457
    3. '-' → logprob: -6.820240497589111
    4. 'half' → logprob: -7.945240497589111
    5. '((' → logprob: -8.32024097442627
    6. '(size' → logprob: -8.57024097442627
    7. '((-' → logprob: -9.44524097442627
    8. ' half' → logprob: -9.69524097442627
    9. ',' → logprob: -10.19524097442627
    10. '-half' → logprob: -12.44524097442627

Token 1198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. '2' → logprob: -12.500007629394531
    3. '(' → logprob: -12.875007629394531
    4. ' ' → logprob: -14.625007629394531
    5. 'half' → logprob: -14.625007629394531
    6. '           ' → logprob: -14.750007629394531
    7. '   ' → logprob: -16.87500762939453
    8. 'int' → logprob: -17.62500762939453
    9. '```' → logprob: -18.25000762939453
    10. ',' → logprob: -18.62500762939453

Token 1199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011999329581158236
    2. '(' → logprob: -9.750120162963867
    3. ',(' → logprob: -10.375120162963867
    4. ' ,' → logprob: -10.625120162963867
    5. ',
' → logprob: -12.875120162963867
    6. ' (' → logprob: -13.375120162963867
    7. '(),' → logprob: -15.000120162963867
    8. ')' → logprob: -15.125120162963867
    9. '),' → logprob: -15.375120162963867
    10. '```' → logprob: -15.375120162963867

Token 1200: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.04429667815566063
    2. ' half' → logprob: -3.1692967414855957
    3. '2' → logprob: -6.669296741485596
    4. ' ' → logprob: -11.669296264648438
    5. '1' → logprob: -11.794296264648438
    6. '   ' → logprob: -13.169296264648438
    7. 'size' → logprob: -13.544296264648438
    8. '0' → logprob: -13.669296264648438
    9. '(' → logprob: -13.794296264648438
    10. 'hal' → logprob: -13.919296264648438

Token 1201: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -7.5649528298527e-05
    2. '_' → logprob: -9.750075340270996
    3. '_p' → logprob: -11.750075340270996
    4. 'period' → logprob: -12.500075340270996
    5. ' _' → logprob: -13.375075340270996
    6. '_PERIOD' → logprob: -13.500075340270996
    7. '```' → logprob: -14.375075340270996
    8. '_per' → logprob: -14.750075340270996
    9. '_size' → logprob: -14.750075340270996
    10. '           ' → logprob: -15.000075340270996

Token 1202: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.362600713968277
    2. ',' → logprob: -1.6126006841659546
    3. ')' → logprob: -2.487600803375244
    4. ' *' → logprob: -3.862600803375244
    5. '           ' → logprob: -8.237600326538086
    6. '```' → logprob: -8.737600326538086
    7. '2' → logprob: -9.862600326538086
    8. '+' → logprob: -9.987600326538086
    9. '               ' → logprob: -10.987600326538086
    10. ').' → logprob: -11.112600326538086

Token 1203: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.375005722045898
    4. '1' → logprob: -18.1250057220459
    5. '           ' → logprob: -18.6250057220459
    6. '  ' → logprob: -19.1250057220459
    7. '	' → logprob: -19.3750057220459
    8. '```' → logprob: -19.3750057220459
    9. '２' → logprob: -19.5000057220459
    10. '۲' → logprob: -19.8125057220459

Token 1204: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8193366486229934e-05
    2. ' ' → logprob: -11.000018119812012
    3. '1' → logprob: -13.875018119812012
    4. '   ' → logprob: -15.000018119812012
    5. '
' → logprob: -16.875019073486328
    6. '  ' → logprob: -17.812519073486328
    7. '```' → logprob: -17.812519073486328
    8. ')' → logprob: -17.875019073486328
    9. '	' → logprob: -18.062519073486328
    10. '﻿' → logprob: -18.312519073486328

Token 1205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00042567000491544604
    2. ')[' → logprob: -8.125425338745117
    3. ' )' → logprob: -9.500425338745117
    4. ')
' → logprob: -10.625425338745117
    5. '   ' → logprob: -11.750425338745117
    6. ',' → logprob: -11.750425338745117
    7. ').' → logprob: -12.000425338745117
    8. '[' → logprob: -13.625425338745117
    9. ')#' → logprob: -13.750425338745117
    10. '```' → logprob: -14.125425338745117

Token 1206: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6390712261199951
    2. '   ' → logprob: -1.7640712261199951
    3. '           ' → logprob: -2.139071226119995
    4. ')' → logprob: -2.264071226119995
    5. '<|end|>' → logprob: -2.764071226119995
    6. '[' → logprob: -5.514071464538574
    7. ',' → logprob: -6.639071464538574
    8. '               ' → logprob: -6.764071464538574
    9. '```' → logprob: -6.764071464538574
    10. '[:]' → logprob: -6.764071464538574

Token 1207: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13430270552635193
    2. '       ' → logprob: -2.8843026161193848
    3. ')' → logprob: -3.7593026161193848
    4. '[' → logprob: -4.384302616119385
    5. '   ' → logprob: -4.884302616119385
    6. '               ' → logprob: -4.884302616119385
    7. '<|end|>' → logprob: -5.509302616119385
    8. 'for' → logprob: -6.009302616119385
    9. '                           ' → logprob: -6.134302616119385
    10. ' for' → logprob: -6.259302616119385

Token 1208: ' Mult' (ID: 15431)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30023661255836487
    2. 'table' → logprob: -2.425236701965332
    3. '           ' → logprob: -2.550236701965332
    4. 'trans' → logprob: -2.925236701965332
    5. ' for' → logprob: -3.675236701965332
    6. '#' → logprob: -6.175236701965332
    7. '   ' → logprob: -6.425236701965332
    8. '       ' → logprob: -6.425236701965332
    9. 'transpose' → logprob: -6.425236701965332
    10. ' table' → logprob: -6.800236701965332

Token 1209: 'ipl' (ID: 7840)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.16919900476932526
    2. 'trans' → logprob: -2.169198989868164
    3. ' trans' → logprob: -4.419198989868164
    4. 'ipl' → logprob: -4.544198989868164
    5. 'transpose' → logprob: -5.294198989868164
    6. 'ret' → logprob: -5.544198989868164
    7. '=' → logprob: -6.169198989868164
    8. 'ply' → logprob: -6.294198989868164
    9. 'ipy' → logprob: -6.919198989868164
    10. '_trans' → logprob: -7.544198989868164

Token 1210: 'ie' (ID: 396)
  Prédit: 'ply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ply' → logprob: -0.7876389622688293
    2. 'ip' → logprob: -1.4126389026641846
    3. 'trans' → logprob: -2.4126389026641846
    4. 'ipy' → logprob: -2.4126389026641846
    5. 'py' → logprob: -3.6626389026641846
    6. 'transpose' → logprob: -4.037639141082764
    7. 'y' → logprob: -4.162639141082764
    8. 'ipl' → logprob: -4.537639141082764
    9. 'plies' → logprob: -4.662639141082764
    10. '```' → logprob: -5.537639141082764

Token 1211: ' chaque' (ID: 21194)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.3646405041217804
    2. ' trans' → logprob: -2.239640474319458
    3. 'ret' → logprob: -2.364640474319458
    4. 'table' → logprob: -3.739640474319458
    5. '=' → logprob: -3.864640474319458
    6. ' ret' → logprob: -3.989640474319458
    7. 'offset' → logprob: -4.364640712738037
    8. 'np' → logprob: -4.739640712738037
    9. ' np' → logprob: -5.614640712738037
    10. '   ' → logprob: -5.864640712738037

Token 1212: ' valeur' (ID: 41664)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.18202617764472961
    2. 'ret' → logprob: -2.5570261478424072
    3. 'element' → logprob: -3.0570261478424072
    4. 'row' → logprob: -4.432026386260986
    5. 'line' → logprob: -5.057026386260986
    6. ')' → logprob: -5.432026386260986
    7. ' trans' → logprob: -5.432026386260986
    8. '(trans' → logprob: -5.932026386260986
    9. '(' → logprob: -6.057026386260986
    10. 'column' → logprob: -7.182026386260986

Token 1213: ' trans' (ID: 1643)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.36773115396499634
    2. ' trans' → logprob: -1.9927310943603516
    3. '=' → logprob: -2.3677310943603516
    4. '*' → logprob: -3.8677310943603516
    5. '*=' → logprob: -3.8677310943603516
    6. ' *=' → logprob: -4.617731094360352
    7. '(trans' → logprob: -5.117731094360352
    8. ' *' → logprob: -5.242731094360352
    9. '[' → logprob: -5.867731094360352
    10. ' =' → logprob: -5.867731094360352

Token 1214: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0027948953211307526
    2. 'posed' → logprob: -6.0027947425842285
    3. 'lated' → logprob: -8.752795219421387
    4. 'formed' → logprob: -9.877795219421387
    5. 'plied' → logprob: -10.377795219421387
    6. 'pose' → logprob: -10.502795219421387
    7. '=' → logprob: -11.252795219421387
    8. '[:,' → logprob: -11.877795219421387
    9. 'p' → logprob: -13.002795219421387
    10. 'pos' → logprob: -13.377795219421387

Token 1215: 'resh' (ID: 3485)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005369291175156832
    2. 'resh' → logprob: -5.755369186401367
    3. 'posed' → logprob: -6.255369186401367
    4. 'formed' → logprob: -8.630369186401367
    5. '_table' → logprob: -10.380369186401367
    6. '_sh' → logprob: -11.630369186401367
    7. ' resh' → logprob: -11.755369186401367
    8. '```' → logprob: -12.130369186401367
    9. 'acted' → logprob: -12.255369186401367
    10. 'sh' → logprob: -12.505369186401367

Token 1216: 'aped' (ID: 16020)
  Prédit: 'aped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aped' → logprob: -0.006619215942919254
    2. 'h' → logprob: -5.881619453430176
    3. '_' → logprob: -7.131619453430176
    4. '   ' → logprob: -7.756619453430176
    5. '_trans' → logprob: -8.006619453430176
    6. 'ap' → logprob: -8.006619453430176
    7. '_sh' → logprob: -8.506619453430176
    8. 'ape' → logprob: -9.006619453430176
    9. 'p' → logprob: -9.256619453430176
    10. '_ap' → logprob: -9.256619453430176

Token 1217: ' par' (ID: 686)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.3178589344024658
    2. '*' → logprob: -1.4428589344024658
    3. '[' → logprob: -2.067858934402466
    4. ',' → logprob: -2.192858934402466
    5. '<|end|>' → logprob: -2.317858934402466
    6. '*=' → logprob: -3.442858934402466
    7. '[...,' → logprob: -3.692858934402466
    8. ' *=' → logprob: -3.817858934402466
    9. '=' → logprob: -4.192858695983887
    10. ' trans' → logprob: -4.442858695983887

Token 1218: ' une' (ID: 2463)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.41639989614486694
    2. 'np' → logprob: -2.5413999557495117
    3. 'offset' → logprob: -2.6663999557495117
    4. ' np' → logprob: -2.7913999557495117
    5. ' ' → logprob: -3.4163999557495117
    6. '(' → logprob: -4.041399955749512
    7. 'size' → logprob: -4.291399955749512
    8. ' (' → logprob: -4.416399955749512
    9. '0' → logprob: -4.791399955749512
    10. ' offset' → logprob: -5.041399955749512

Token 1219: ' version' (ID: 3926)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7555544972419739
    2. 'space' → logprob: -2.005554437637329
    3. 'offset' → logprob: -2.380554437637329
    4. '1' → logprob: -3.130554437637329
    5. ' ' → logprob: -3.130554437637329
    6. '<|end|>' → logprob: -3.130554437637329
    7. 'np' → logprob: -3.255554437637329
    8. ' np' → logprob: -3.380554437637329
    9. '[' → logprob: -3.880554437637329
    10. '32' → logprob: -4.380554676055908

Token 1220: ' ét' (ID: 4976)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -1.892491102218628
    2. '.reshape' → logprob: -2.017491102218628
    3. ' trans' → logprob: -2.142491102218628
    4. '.transpose' → logprob: -2.392491102218628
    5. 'transpose' → logprob: -2.392491102218628
    6. '[offset' → logprob: -2.517491102218628
    7. '[:,' → logprob: -2.517491102218628
    8. '=' → logprob: -2.642491102218628
    9. ' of' → logprob: -3.142491102218628
    10. 'of' → logprob: -3.767491102218628

Token 1221: 'endue' (ID: 140304)
  Prédit: 'iled'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iled' → logprob: -1.313734769821167
    2. 'endue' → logprob: -1.688734769821167
    3. 'ile' → logprob: -1.813734769821167
    4. 'rans' → logprob: -2.813734769821167
    5. '[:,' → logprob: -3.063734769821167
    6. 'of' → logprob: -3.313734769821167
    7. 'expand' → logprob: -3.938734769821167
    8. 'tile' → logprob: -3.938734769821167
    9. 'resh' → logprob: -4.563735008239746
    10. 'broadcast' → logprob: -4.563735008239746

Token 1222: ' de' (ID: 334)
  Prédit: '(trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(trans' → logprob: -0.7769443988800049
    2. '[' → logprob: -1.2769443988800049
    3. 'trans' → logprob: -2.151944398880005
    4. '=' → logprob: -3.151944398880005
    5. ' (' → logprob: -3.776944398880005
    6. '[:,' → logprob: -3.901944398880005
    7. ' =' → logprob: -4.776944160461426
    8. '           ' → logprob: -4.776944160461426
    9. '(
' → logprob: -4.901944160461426
    10. '(' → logprob: -5.026944160461426

Token 1223: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.20629166066646576
    2. 'np' → logprob: -2.206291675567627
    3. 'index' → logprob: -3.706291675567627
    4. 'ret' → logprob: -3.956291675567627
    5. 'trans' → logprob: -4.581291675567627
    6. '(' → logprob: -4.956291675567627
    7. ' offset' → logprob: -5.581291675567627
    8. '(np' → logprob: -5.831291675567627
    9. '(offset' → logprob: -5.956291675567627
    10. 'table' → logprob: -6.081291675567627

Token 1224: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.0006403613369911909
    2. 's' → logprob: -8.000639915466309
    3. 'pos' → logprob: -8.750639915466309
    4. '_array' → logprob: -10.250639915466309
    5. 'table' → logprob: -10.625639915466309
    6. '(pos' → logprob: -10.750639915466309
    7. '_pos' → logprob: -11.250639915466309
    8. 'offset' → logprob: -11.625639915466309
    9. '(' → logprob: -12.250639915466309
    10. '(_' → logprob: -12.375639915466309

Token 1225: ' ' (ID: 5310)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2269783467054367
    2. '[:,' → logprob: -2.726978302001953
    3. '*=' → logprob: -3.101978302001953
    4. '[offset' → logprob: -3.226978302001953
    5. '=' → logprob: -3.976978302001953
    6. '[' → logprob: -4.351978302001953
    7. ' *' → logprob: -4.726978302001953
    8. '[np' → logprob: -5.601978302001953
    9. 'offset' → logprob: -5.976978302001953
    10. ' *=' → logprob: -6.101978302001953

Token 1226: ':' (ID: 25)
  Prédit: '[:,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:,' → logprob: -0.6566585898399353
    2. '[offset' → logprob: -0.9066585898399353
    3. '[' → logprob: -2.90665864944458
    4. '[np' → logprob: -4.28165864944458
    5. '*' → logprob: -6.40665864944458
    6. 'offset' → logprob: -6.78165864944458
    7. '   ' → logprob: -6.90665864944458
    8. '[...,' → logprob: -6.90665864944458
    9. '           ' → logprob: -7.15665864944458
    10. '=' → logprob: -7.15665864944458

Token 1227: ' d' (ID: 272)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.2819822430610657
    2. ' offset' → logprob: -1.406982183456421
    3. 'np' → logprob: -7.781982421875
    4. ' np' → logprob: -8.281982421875
    5. '(offset' → logprob: -9.281982421875
    6. '[offset' → logprob: -11.156982421875
    7. '	offset' → logprob: -11.406982421875
    8. '1' → logprob: -11.406982421875
    9. ' ' → logprob: -12.031982421875
    10. '   ' → logprob: -12.531982421875

Token 1228: '’abord' (ID: 75400)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -1.115620732307434
    2. '[:,' → logprob: -1.740620732307434
    3. '=np' → logprob: -2.1156206130981445
    4. '=' → logprob: -2.3656206130981445
    5. 'trans' → logprob: -2.3656206130981445
    6. ' trans' → logprob: -3.1156206130981445
    7. 'offset' → logprob: -3.3656206130981445
    8. ' np' → logprob: -3.6156206130981445
    9. '1' → logprob: -3.8656206130981445
    10. '0' → logprob: -3.9906206130981445

Token 1229: ' les' (ID: 1341)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.02623051032423973
    2. ' offset' → logprob: -4.401230335235596
    3. 'np' → logprob: -4.401230335235596
    4. '(offset' → logprob: -7.526230335235596
    5. ' np' → logprob: -8.151230812072754
    6. '1' → logprob: -8.651230812072754
    7. '(' → logprob: -9.151230812072754
    8. '[offset' → logprob: -9.401230812072754
    9. '(np' → logprob: -10.026230812072754
    10. '	offset' → logprob: -10.401230812072754

Token 1230: ' half' (ID: 6375)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.5272588729858398
    2. '[offset' → logprob: -1.0272588729858398
    3. 'np' → logprob: -4.02725887298584
    4. '[' → logprob: -4.40225887298584
    5. '[np' → logprob: -5.15225887298584
    6. '[:' → logprob: -5.65225887298584
    7. '[
' → logprob: -5.65225887298584
    8. '[:,' → logprob: -6.65225887298584
    9. '1' → logprob: -6.65225887298584
    10. ':' → logprob: -6.77725887298584

Token 1231: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -0.016596242785453796
    2. '_table' → logprob: -4.64159631729126
    3. '_' → logprob: -5.26659631729126
    4. ' _' → logprob: -7.39159631729126
    5. '```' → logprob: -7.89159631729126
    6. '   ' → logprob: -9.516595840454102
    7. '_per' → logprob: -9.891595840454102
    8. '           ' → logprob: -10.016595840454102
    9. '_p' → logprob: -10.141595840454102
    10. 'period' → logprob: -10.141595840454102

Token 1232: ' premiers' (ID: 59140)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.129883885383606
    2. '[' → logprob: -1.629883885383606
    3. '[offset' → logprob: -2.1298837661743164
    4. '.repeat' → logprob: -2.7548837661743164
    5. ')' → logprob: -3.0048837661743164
    6. '[:]' → logprob: -3.0048837661743164
    7. ' *' → logprob: -3.1298837661743164
    8. '*' → logprob: -3.2548837661743164
    9. ':' → logprob: -3.5048837661743164
    10. '[:,' → logprob: -3.6298837661743164

Token 1233: ',' (ID: 11)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.23227262496948242
    2. '[:]' → logprob: -3.2322726249694824
    3. '[' → logprob: -3.6072726249694824
    4. ':' → logprob: -3.6072726249694824
    5. '[:,' → logprob: -3.9822726249694824
    6. ')' → logprob: -3.9822726249694824
    7. '*' → logprob: -3.9822726249694824
    8. ' *' → logprob: -4.357272624969482
    9. '[offset' → logprob: -5.107272624969482
    10. 'indices' → logprob: -5.107272624969482

Token 1234: ' puis' (ID: 18766)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.7606291174888611
    2. ' np' → logprob: -1.5106291770935059
    3. ' offset' → logprob: -1.7606291770935059
    4. 'np' → logprob: -2.010629177093506
    5. '   ' → logprob: -7.010629177093506
    6. 'None' → logprob: -7.260629177093506
    7. ' ' → logprob: -7.385629177093506
    8. '1' → logprob: -7.385629177093506
    9. ' None' → logprob: -7.635629177093506
    10. '[offset' → logprob: -7.635629177093506

Token 1235: ' les' (ID: 1341)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.22233356535434723
    2. 'np' → logprob: -1.972333550453186
    3. ' offset' → logprob: -3.5973336696624756
    4. ' np' → logprob: -3.8473336696624756
    5. 'half' → logprob: -4.8473334312438965
    6. '   ' → logprob: -6.4723334312438965
    7. '[offset' → logprob: -7.4723334312438965
    8. ' half' → logprob: -7.5973334312438965
    9. 'trans' → logprob: -8.722333908081055
    10. '(offset' → logprob: -8.847333908081055

Token 1236: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.006363854743540287
    2. ' half' → logprob: -5.131363868713379
    3. 'rest' → logprob: -8.506363868713379
    4. 'hal' → logprob: -9.631363868713379
    5. 'last' → logprob: -10.256363868713379
    6. '[' → logprob: -10.881363868713379
    7. ' rest' → logprob: -11.006363868713379
    8. '...' → logprob: -11.131363868713379
    9. 'first' → logprob: -11.506363868713379
    10. ':' → logprob: -11.506363868713379

Token 1237: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -0.0003843173326458782
    2. 'period' → logprob: -8.375384330749512
    3. '_table' → logprob: -9.625384330749512
    4. '_half' → logprob: -10.250384330749512
    5. '_per' → logprob: -11.750384330749512
    6. '_PERIOD' → logprob: -11.875384330749512
    7. '[' → logprob: -12.375384330749512
    8. '_partition' → logprob: -12.500384330749512
    9. '_p' → logprob: -12.625384330749512
    10. '```' → logprob: -12.750384330749512

Token 1238: ' premiers' (ID: 59140)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4447468519210815
    2. '*' → logprob: -1.5697468519210815
    3. ',' → logprob: -2.069746971130371
    4. ':' → logprob: -2.069746971130371
    5. '+' → logprob: -2.444746971130371
    6. '[' → logprob: -2.694746971130371
    7. '[:]' → logprob: -3.194746971130371
    8. '...' → logprob: -3.319746971130371
    9. ']' → logprob: -4.444746971130371
    10. '),' → logprob: -5.319746971130371

Token 1239: ' à' (ID: 1221)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.34982696175575256
    2. ',' → logprob: -2.5998270511627197
    3. '[' → logprob: -2.8498270511627197
    4. '.repeat' → logprob: -3.5998270511627197
    5. ')' → logprob: -3.7248270511627197
    6. '```' → logprob: -3.7248270511627197
    7. 'offset' → logprob: -4.224826812744141
    8. '[:' → logprob: -4.224826812744141
    9. '+' → logprob: -4.724826812744141
    10. '   ' → logprob: -4.974826812744141

Token 1240: ' l' (ID: 305)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2991571426391602
    2. 'half' → logprob: -1.7991571426391602
    3. '1' → logprob: -2.17415714263916
    4. '```' → logprob: -2.17415714263916
    5. 'trans' → logprob: -2.79915714263916
    6. '...' → logprob: -3.17415714263916
    7. '[' → logprob: -3.29915714263916
    8. 'np' → logprob: -3.54915714263916
    9. 'repeat' → logprob: -3.67415714263916
    10. 'size' → logprob: -3.92415714263916

Token 1241: '’en' (ID: 16655)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.6625332236289978
    2. 'full' → logprob: -2.0375332832336426
    3. 'repeat' → logprob: -2.4125332832336426
    4. 'offset' → logprob: -3.1625332832336426
    5. 'tile' → logprob: -3.4125332832336426
    6. 'size' → logprob: -3.4125332832336426
    7. 're' → logprob: -3.9125332832336426
    8. 'len' → logprob: -4.537533283233643
    9. '[' → logprob: -4.662533283233643
    10. 'fin' → logprob: -4.787533283233643

Token 1242: 'vers' (ID: 3674)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.5719693899154663
    2. 'repeat' → logprob: -2.446969509124756
    3. 're' → logprob: -2.946969509124756
    4. '2' → logprob: -3.071969509124756
    5. 'suite' → logprob: -3.196969509124756
    6. 'concat' → logprob: -3.696969509124756
    7. 'conc' → logprob: -3.821969509124756
    8. 'full' → logprob: -4.196969509124756
    9. 'de' → logprob: -4.321969509124756
    10. '1' → logprob: -4.821969509124756

Token 1243: '
' (ID: 198)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.9332045316696167
    2. '[::-' → logprob: -0.9332045316696167
    3. ' *' → logprob: -2.8082046508789062
    4. '[' → logprob: -2.8082046508789062
    5. '*' → logprob: -3.1832046508789062
    6. '[:,' → logprob: -4.183204650878906
    7. 'offset' → logprob: -4.933204650878906
    8. ',' → logprob: -5.183204650878906
    9. '[:]' → logprob: -5.558204650878906
    10. '[:' → logprob: -5.683204650878906

Token 1244: '           ' (ID: 352)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6774946451187134
    2. ' *' → logprob: -1.1774946451187134
    3. '[offset' → logprob: -1.9274946451187134
    4. '[' → logprob: -3.677494525909424
    5. '[::-' → logprob: -5.552494525909424
    6. 'offset' → logprob: -6.177494525909424
    7. '[:]' → logprob: -7.052494525909424
    8. '+' → logprob: -7.302494525909424
    9. '```' → logprob: -7.427494525909424
    10. '   ' → logprob: -7.677494525909424

Token 1245: ' #' (ID: 1069)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.13447831571102142
    2. '*' → logprob: -2.3844783306121826
    3. ' offset' → logprob: -4.3844780921936035
    4. '=' → logprob: -4.8844780921936035
    5. ' *' → logprob: -5.6344780921936035
    6. 'np' → logprob: -6.1344780921936035
    7. '*=' → logprob: -6.5094780921936035
    8. '[offset' → logprob: -6.6344780921936035
    9. '+' → logprob: -7.3844780921936035
    10. '+=' → logprob: -7.5094780921936035

Token 1246: ' np' (ID: 5374)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.48477932810783386
    2. 'offset' → logprob: -1.2347793579101562
    3. '*=' → logprob: -3.4847793579101562
    4. '=' → logprob: -3.7347793579101562
    5. ' *' → logprob: -3.9847793579101562
    6. '*(' → logprob: -5.359779357910156
    7. ' *=' → logprob: -5.609779357910156
    8. '[offset' → logprob: -6.609779357910156
    9. ' offset' → logprob: -6.609779357910156
    10. '+=' → logprob: -6.859779357910156

Token 1247: '.h' (ID: 1508)
  Prédit: '.concatenate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.concatenate' → logprob: -0.05626737326383591
    2. 'conc' → logprob: -3.431267261505127
    3. '.h' → logprob: -4.931267261505127
    4. 'tile' → logprob: -5.181267261505127
    5. '.tile' → logprob: -5.681267261505127
    6. '.ones' → logprob: -6.181267261505127
    7. 'concat' → logprob: -6.931267261505127
    8. 'r' → logprob: -7.056267261505127
    9. 'ones' → logprob: -7.556267261505127
    10. 'h' → logprob: -7.681267261505127

Token 1248: 'stack' (ID: 15145)
  Prédit: 'stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -9.186122770188376e-05
    2. 'concat' → logprob: -9.500091552734375
    3. 'cat' → logprob: -12.500091552734375
    4. 'conc' → logprob: -12.625091552734375
    5. '_stack' → logprob: -12.875091552734375
    6. '.concatenate' → logprob: -13.125091552734375
    7. '(stack' → logprob: -13.750091552734375
    8. ' stack' → logprob: -13.875091552734375
    9. 'Stack' → logprob: -14.500091552734375
    10. '   ' → logprob: -14.750091552734375

Token 1249: ' concat' (ID: 73950)
  Prédit: '(np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.6046180129051208
    2. '([' → logprob: -0.8546180129051208
    3. '(offset' → logprob: -3.9796180725097656
    4. '(' → logprob: -5.104618072509766
    5. '[np' → logprob: -7.104618072509766
    6. '(
' → logprob: -7.229618072509766
    7. '((' → logprob: -7.354618072509766
    8. '[offset' → logprob: -7.354618072509766
    9. '([
' → logprob: -7.604618072509766
    10. 'np' → logprob: -9.229618072509766

Token 1250: 'ène' (ID: 22902)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.10339073836803436
    2. '((' → logprob: -2.478390693664551
    3. '(' → logprob: -5.353390693664551
    4. '[(' → logprob: -5.603390693664551
    5. '(np' → logprob: -6.103390693664551
    6. '([
' → logprob: -6.353390693664551
    7. '[' → logprob: -6.978390693664551
    8. '[np' → logprob: -7.728390693664551
    9. '(([' → logprob: -8.85339069366455
    10. '(
' → logprob: -8.97839069366455

Token 1251: ' les' (ID: 1341)
  Prédit: '(offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(offset' → logprob: -0.18535642325878143
    2. '(' → logprob: -1.9353563785552979
    3. '[offset' → logprob: -4.435356616973877
    4. '([' → logprob: -4.810356616973877
    5. '(np' → logprob: -5.810356616973877
    6. '((' → logprob: -6.810356616973877
    7. '(
' → logprob: -7.560356616973877
    8. '[' → logprob: -9.310356140136719
    9. ' (' → logprob: -9.935356140136719
    10. '[
' → logprob: -11.185356140136719

Token 1252: ' deux' (ID: 10301)
  Prédit: '(offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(offset' → logprob: -0.2789020836353302
    2. '[offset' → logprob: -1.5289020538330078
    3. '(' → logprob: -4.028902053833008
    4. '(
' → logprob: -5.028902053833008
    5. '[
' → logprob: -6.403902053833008
    6. '(np' → logprob: -8.153902053833008
    7. '[' → logprob: -8.903902053833008
    8. '([' → logprob: -9.528902053833008
    9. '((' → logprob: -10.403902053833008
    10. '[np' → logprob: -10.778902053833008

Token 1253: ' portions' (ID: 34833)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.23990191519260406
    2. '((' → logprob: -2.2399020195007324
    3. '(' → logprob: -2.4899020195007324
    4. '(np' → logprob: -4.114902019500732
    5. '(offset' → logprob: -5.364902019500732
    6. '([
' → logprob: -6.364902019500732
    7. '(
' → logprob: -7.614902019500732
    8. '[offset' → logprob: -7.989902019500732
    9. '[' → logprob: -9.114901542663574
    10. '[(' → logprob: -9.239901542663574

Token 1254: ',' (ID: 11)
  Prédit: '(np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.1793569028377533
    2. '([' → logprob: -2.429356813430786
    3. '(offset' → logprob: -2.679356813430786
    4. '(' → logprob: -5.804357051849365
    5. '((' → logprob: -6.054357051849365
    6. '[offset' → logprob: -6.804357051849365
    7. '[np' → logprob: -7.804357051849365
    8. 'np' → logprob: -8.304356575012207
    9. '(
' → logprob: -8.304356575012207
    10. '([
' → logprob: -10.679356575012207

Token 1255: ' servant' (ID: 67352)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.6977413892745972
    2. ' offset' → logprob: -0.8227413892745972
    3. ' np' → logprob: -3.3227415084838867
    4. 'np' → logprob: -3.6977415084838867
    5. '[offset' → logprob: -6.447741508483887
    6. '(offset' → logprob: -8.197741508483887
    7. '   ' → logprob: -8.697741508483887
    8. '[' → logprob: -9.447741508483887
    9. ' ' → logprob: -11.072741508483887
    10. '[np' → logprob: -11.197741508483887

Token 1256: ' de' (ID: 334)
  Prédit: '=np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.48058468103408813
    2. '(np' → logprob: -1.3555846214294434
    3. '=' → logprob: -2.6055846214294434
    4. '(
' → logprob: -3.4805846214294434
    5. '=(' → logprob: -4.730584621429443
    6. '(' → logprob: -5.605584621429443
    7. 'np' → logprob: -5.980584621429443
    8. '   ' → logprob: -6.230584621429443
    9. '(offset' → logprob: -7.230584621429443
    10. '[np' → logprob: -7.980584621429443

Token 1257: ' facteur' (ID: 175214)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.800405740737915
    2. 'offset' → logprob: -0.925405740737915
    3. '(offset' → logprob: -2.050405740737915
    4. 'np' → logprob: -3.925405740737915
    5. '(np' → logprob: -6.425405502319336
    6. ' offset' → logprob: -6.800405502319336
    7. '(' → logprob: -7.050405502319336
    8. '[' → logprob: -7.300405502319336
    9. '[np' → logprob: -7.550405502319336
    10. '(
' → logprob: -7.675405502319336

Token 1258: ' de' (ID: 334)
  Prédit: '(np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.22210381925106049
    2. '([' → logprob: -2.4721038341522217
    3. '(
' → logprob: -3.0971038341522217
    4. '(offset' → logprob: -3.2221038341522217
    5. '(' → logprob: -3.9721038341522217
    6. '((' → logprob: -5.097103595733643
    7. '([
' → logprob: -6.472103595733643
    8. '[offset' → logprob: -7.097103595733643
    9. 'np' → logprob: -7.472103595733643
    10. '=' → logprob: -7.597103595733643

Token 1259: ' multiplication' (ID: 86340)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.3023953437805176
    2. 'np' → logprob: -2.1773953437805176
    3. 'offset' → logprob: -2.9273953437805176
    4. '1' → logprob: -3.1773953437805176
    5. ' np' → logprob: -4.427395343780518
    6. '2' → logprob: -4.427395343780518
    7. ' multiplication' → logprob: -4.552395343780518
    8. 'h' → logprob: -5.677395343780518
    9. 'ones' → logprob: -5.927395343780518
    10. '(np' → logprob: -6.052395343780518

Token 1260: '
' (ID: 198)
  Prédit: '(offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(offset' → logprob: -0.3201662600040436
    2. '(np' → logprob: -1.6951662302017212
    3. '[offset' → logprob: -2.8201663494110107
    4. 'offset' → logprob: -4.570166110992432
    5. 'np' → logprob: -4.570166110992432
    6. '(' → logprob: -5.070166110992432
    7. ')' → logprob: -7.195166110992432
    8. '[np' → logprob: -7.570166110992432
    9. ' (' → logprob: -7.695166110992432
    10. '(
' → logprob: -7.695166110992432

Token 1261: '           ' (ID: 352)
  Prédit: '(offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(offset' → logprob: -1.3687726259231567
    2. 'offset' → logprob: -1.4937726259231567
    3. '(np' → logprob: -1.6187726259231567
    4. 'np' → logprob: -2.243772506713867
    5. ' np' → logprob: -2.743772506713867
    6. ')' → logprob: -3.243772506713867
    7. '[offset' → logprob: -3.243772506713867
    8. '           ' → logprob: -3.868772506713867
    9. '(' → logprob: -4.243772506713867
    10. ' offset' → logprob: -4.618772506713867

Token 1262: ' trans' (ID: 1643)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.1736716628074646
    2. '(np' → logprob: -3.1736717224121094
    3. 'offset' → logprob: -3.2986717224121094
    4. '*np' → logprob: -3.2986717224121094
    5. ' np' → logprob: -3.9236717224121094
    6. '*' → logprob: -4.298671722412109
    7. '*(' → logprob: -5.923671722412109
    8. '(' → logprob: -6.423671722412109
    9. '(offset' → logprob: -6.423671722412109
    10. '           ' → logprob: -7.173671722412109

Token 1263: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11442573368549347
    2. '_table' → logprob: -2.2394256591796875
    3. '_scaled' → logprob: -7.2394256591796875
    4. '_=' → logprob: -8.989425659179688
    5. '_res' → logprob: -9.114425659179688
    6. '=' → logprob: -9.114425659179688
    7. ' =' → logprob: -9.364425659179688
    8. '_factor' → logprob: -9.739425659179688
    9. '_val' → logprob: -9.739425659179688
    10. '_multiplier' → logprob: -10.114425659179688

Token 1264: 'resh' (ID: 3485)
  Prédit: 'resh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resh' → logprob: -0.03652641549706459
    2. 'table' → logprob: -3.9115264415740967
    3. 'h' → logprob: -5.286526203155518
    4. 'sh' → logprob: -5.536526203155518
    5. '_table' → logprob: -5.661526203155518
    6. '_' → logprob: -6.911526203155518
    7. 'reshape' → logprob: -7.411526203155518
    8. 'stack' → logprob: -8.161526679992676
    9. ' resh' → logprob: -8.161526679992676
    10. ' =' → logprob: -8.786526679992676

Token 1265: 'aped' (ID: 16020)
  Prédit: 'aped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aped' → logprob: -0.029086889699101448
    2. 'stack' → logprob: -4.404087066650391
    3. 't' → logprob: -4.904087066650391
    4. 'apped' → logprob: -6.279087066650391
    5. '_table' → logprob: -6.404087066650391
    6. '   ' → logprob: -6.904087066650391
    7. 'table' → logprob: -7.154087066650391
    8. 'ped' → logprob: -7.154087066650391
    9. ' =' → logprob: -7.779087066650391
    10. 'acked' → logprob: -7.904087066650391

Token 1266: ' *=' (ID: 25253)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2224196493625641
    2. '*' → logprob: -1.8474196195602417
    3. ' *=' → logprob: -3.5974197387695312
    4. ' =' → logprob: -5.097419738769531
    5. '=' → logprob: -5.347419738769531
    6. '*=' → logprob: -5.722419738769531
    7. '[:]' → logprob: -9.472419738769531
    8. ' ' → logprob: -9.972419738769531
    9. '[:,' → logprob: -10.597419738769531
    10. '   ' → logprob: -10.722419738769531

Token 1267: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0004517646157182753
    2. ' np' → logprob: -7.750451564788818
    3. 'offset' → logprob: -11.000452041625977
    4. '   ' → logprob: -12.875452041625977
    5. '(np' → logprob: -13.625452041625977
    6. ' ' → logprob: -15.750452041625977
    7. '  ' → logprob: -16.125452041625977
    8. '[np' → logprob: -16.125452041625977
    9. 'numpy' → logprob: -16.875452041625977
    10. '    ' → logprob: -17.375452041625977

Token 1268: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -8.061054359131958e-06
    2. '.concatenate' → logprob: -12.750007629394531
    3. 'h' → logprob: -13.000007629394531
    4. '.vstack' → logprob: -13.625007629394531
    5. ' .' → logprob: -14.125007629394531
    6. '.tile' → logprob: -14.625007629394531
    7. '.' → logprob: -15.375007629394531
    8. '_h' → logprob: -16.62500762939453
    9. '.offset' → logprob: -17.50000762939453
    10. '.arange' → logprob: -17.50000762939453

Token 1269: 'stack' (ID: 15145)
  Prédit: 'stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: 0.0
    2. '_stack' → logprob: -18.375
    3. 'split' → logprob: -18.875
    4. '	stack' → logprob: -18.875
    5. '.stack' → logprob: -19.25
    6. 'STACK' → logprob: -19.875
    7. '.vstack' → logprob: -20.125
    8. '   ' → logprob: -20.375
    9. 's' → logprob: -20.5
    10. '(stack' → logprob: -20.75

Token 1270: '((' (ID: 2054)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.14789295196533203
    2. '((' → logprob: -2.147892951965332
    3. '(' → logprob: -3.897892951965332
    4. '([
' → logprob: -8.022892951965332
    5. '(offset' → logprob: -9.897892951965332
    6. '(
' → logprob: -10.397892951965332
    7. '[' → logprob: -10.772892951965332
    8. '(([' → logprob: -11.147892951965332
    9. '[offset' → logprob: -11.397892951965332
    10. '[(' → logprob: -12.397892951965332

Token 1271: 'offset' (ID: 6680)
  Prédit: 'offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.014909657649695873
    2. '[offset' → logprob: -4.264909744262695
    3. '(offset' → logprob: -7.264909744262695
    4. ' offset' → logprob: -10.264909744262695
    5. '[' → logprob: -12.264909744262695
    6. '	offset' → logprob: -12.639909744262695
    7. '   ' → logprob: -13.264909744262695
    8. '[
' → logprob: -14.014909744262695
    9. ' ' → logprob: -16.014909744262695
    10. '(
' → logprob: -16.139909744262695

Token 1272: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.0012405868619680405
    2. '[offset' → logprob: -7.0012407302856445
    3. '(offset' → logprob: -8.876240730285645
    4. '[' → logprob: -9.876240730285645
    5. 'offset' → logprob: -9.876240730285645
    6. 'table' → logprob: -10.126240730285645
    7. 'Table' → logprob: -10.626240730285645
    8. '[_' → logprob: -12.376240730285645
    9. '_offset' → logprob: -12.876240730285645
    10. '(_' → logprob: -13.126240730285645

Token 1273: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.002495991066098213
    2. '[' → logprob: -6.002495765686035
    3. '[offset' → logprob: -11.377495765686035
    4. '[:-' → logprob: -12.877495765686035
    5. '[np' → logprob: -13.252495765686035
    6. ' [:' → logprob: -14.002495765686035
    7. '[
' → logprob: -14.252495765686035
    8. '[(' → logprob: -14.627495765686035
    9. '   ' → logprob: -14.877495765686035
    10. '[[' → logprob: -15.252495765686035

Token 1274: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -1.259079363080673e-05
    2. ' half' → logprob: -11.500012397766113
    3. '[' → logprob: -13.250012397766113
    4. '(' → logprob: -15.625012397766113
    5. '   ' → logprob: -15.750012397766113
    6. 'hal' → logprob: -16.12501335144043
    7. '
' → logprob: -17.25001335144043
    8. '...' → logprob: -17.25001335144043
    9. '0' → logprob: -17.50001335144043
    10. '-half' → logprob: -17.62501335144043

Token 1275: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -0.03811389580368996
    2. 'period' → logprob: -3.288113832473755
    3. 'half' → logprob: -9.788113594055176
    4. '_half' → logprob: -11.538113594055176
    5. '(period' → logprob: -12.788113594055176
    6. '_PERIOD' → logprob: -14.038113594055176
    7. 'p' → logprob: -14.288113594055176
    8. '(' → logprob: -15.038113594055176
    9. '   ' → logprob: -15.038113594055176
    10. 'Period' → logprob: -15.163113594055176

Token 1276: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.03531530871987343
    2. ',' → logprob: -3.5353152751922607
    3. '][' → logprob: -5.78531551361084
    4. '[::-' → logprob: -6.53531551361084
    5. '][:' → logprob: -8.41031551361084
    6. ' ,' → logprob: -8.41031551361084
    7. '],
' → logprob: -8.78531551361084
    8. '[:' → logprob: -9.53531551361084
    9. '],[' → logprob: -9.66031551361084
    10. ' ],' → logprob: -9.66031551361084

Token 1277: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.0004979863297194242
    2. ' offset' → logprob: -7.625497817993164
    3. 'np' → logprob: -11.750497817993164
    4. '	offset' → logprob: -13.750497817993164
    5. '[offset' → logprob: -14.625497817993164
    6. '-offset' → logprob: -15.625497817993164
    7. '   ' → logprob: -16.750497817993164
    8. '(offset' → logprob: -16.750497817993164
    9. ' np' → logprob: -17.250497817993164
    10. ' ' → logprob: -17.250497817993164

Token 1278: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.010216157883405685
    2. '[:' → logprob: -4.635216236114502
    3. '[' → logprob: -8.010215759277344
    4. '_half' → logprob: -9.635215759277344
    5. '_period' → logprob: -10.635215759277344
    6. 'Table' → logprob: -11.510215759277344
    7. '_TABLE' → logprob: -12.010215759277344
    8. '[::-' → logprob: -12.760215759277344
    9. 'half' → logprob: -12.760215759277344
    10. '_Table' → logprob: -12.885215759277344

Token 1279: '[' (ID: 58)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.07016172260046005
    2. '[' → logprob: -2.695161819458008
    3. '[::-' → logprob: -8.445161819458008
    4. 'half' → logprob: -13.195161819458008
    5. '[
' → logprob: -13.320161819458008
    6. '[-' → logprob: -13.445161819458008
    7. '[mid' → logprob: -14.570161819458008
    8. '
' → logprob: -14.570161819458008
    9. '   ' → logprob: -14.945161819458008
    10. '[len' → logprob: -15.070161819458008

Token 1280: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.20378455519676208
    2. ':' → logprob: -1.7037845849990845
    3. ' half' → logprob: -6.703784465789795
    4. '::-' → logprob: -7.828784465789795
    5. '[:' → logprob: -8.078784942626953
    6. 'hal' → logprob: -9.703784942626953
    7. '_half' → logprob: -10.078784942626953
    8. '::' → logprob: -10.203784942626953
    9. '[' → logprob: -10.328784942626953
    10. '-half' → logprob: -10.828784942626953

Token 1281: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -0.009783361107110977
    2. 'period' → logprob: -4.6347832679748535
    3. 'half' → logprob: -11.134783744812012
    4. 'Period' → logprob: -12.884783744812012
    5. '_PERIOD' → logprob: -13.009783744812012
    6. 'er' → logprob: -13.634783744812012
    7. '_per' → logprob: -13.884783744812012
    8. '-period' → logprob: -14.259783744812012
    9. 'periode' → logprob: -14.634783744812012
    10. '_half' → logprob: -14.759783744812012

Token 1282: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007360871881246567
    2. '[::-' → logprob: -5.632360935211182
    3. '::-' → logprob: -5.757360935211182
    4. '[:' → logprob: -7.757360935211182
    5. '[' → logprob: -9.757360458374023
    6. '*' → logprob: -10.757360458374023
    7. ':],' → logprob: -11.007360458374023
    8. ':last' → logprob: -11.757360458374023
    9. ':]' → logprob: -11.882360458374023
    10. '-' → logprob: -12.007360458374023

Token 1283: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009338518721051514
    2. ':' → logprob: -7.125933647155762
    3. '::-' → logprob: -9.000933647155762
    4. ':-' → logprob: -12.500933647155762
    5. 'None' → logprob: -13.250933647155762
    6. '-' → logprob: -15.375933647155762
    7. '...' → logprob: -15.500933647155762
    8. ' ' → logprob: -16.750934600830078
    9. '   ' → logprob: -16.875934600830078
    10. '0' → logprob: -17.000934600830078

Token 1284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009858887642621994
    2. ':' → logprob: -7.375986099243164
    3. '::-' → logprob: -8.125986099243164
    4. '-' → logprob: -10.125986099243164
    5. 'None' → logprob: -11.500986099243164
    6. ':-' → logprob: -11.625986099243164
    7. '...' → logprob: -12.625986099243164
    8. ' ' → logprob: -15.375986099243164
    9. '```' → logprob: -15.375986099243164
    10. '0' → logprob: -15.500986099243164

Token 1285: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.008636672981083393
    2. ':' → logprob: -4.758636474609375
    3. ':-' → logprob: -10.758636474609375
    4. '::' → logprob: -14.508636474609375
    5. '-' → logprob: -16.133636474609375
    6. ' :' → logprob: -16.258636474609375
    7. ':],' → logprob: -17.008636474609375
    8. ':
' → logprob: -17.383636474609375
    9. '1' → logprob: -17.383636474609375
    10. ':::' → logprob: -17.883636474609375

Token 1286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. '-' → logprob: -11.000017166137695
    3. '```' → logprob: -17.125017166137695
    4. ' -' → logprob: -18.125017166137695
    5. ' ' → logprob: -18.500017166137695
    6. '１' → logprob: -18.625017166137695
    7. '   ' → logprob: -19.125017166137695
    8. '
' → logprob: -19.250017166137695
    9. ']' → logprob: -19.687517166137695
    10. ',' → logprob: -19.812517166137695

Token 1287: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.003855059389024973
    2. ']))
' → logprob: -5.628855228424072
    3. ']' → logprob: -9.503854751586914
    4. '])))' → logprob: -9.878854751586914
    5. ']))
' → logprob: -10.628854751586914
    6. ' ]' → logprob: -10.878854751586914
    7. ']))

' → logprob: -11.128854751586914
    8. '])' → logprob: -11.378854751586914
    9. ')))' → logprob: -11.753854751586914
    10. '))' → logprob: -11.753854751586914

Token 1288: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8782162666320801
    2. '<|end|>' → logprob: -1.50321626663208
    3. '   ' → logprob: -1.62821626663208
    4. '           ' → logprob: -2.25321626663208
    5. ')' → logprob: -3.50321626663208
    6. '
' → logprob: -4.37821626663208
    7. '```' → logprob: -5.37821626663208
    8. '    
' → logprob: -5.62821626663208
    9. '\n' → logprob: -5.87821626663208
    10. '            
' → logprob: -7.12821626663208

Token 1289: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1547536998987198
    2. '<|end|>' → logprob: -2.1547536849975586
    3. '   ' → logprob: -4.904753684997559
    4. '\n' → logprob: -5.154753684997559
    5. '[' → logprob: -5.404753684997559
    6. '.' → logprob: -6.279753684997559
    7. ' ' → logprob: -6.404753684997559
    8. '       ' → logprob: -6.654753684997559
    9. '
' → logprob: -7.154753684997559
    10. ']' → logprob: -7.779753684997559

Token 1290: ' Aj' (ID: 28294)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5050791501998901
    2. 'offset' → logprob: -2.1300792694091797
    3. '       ' → logprob: -2.7550792694091797
    4. ' for' → logprob: -3.2550792694091797
    5. '           ' → logprob: -3.2550792694091797
    6. 'continue' → logprob: -3.3800792694091797
    7. 'trans' → logprob: -3.7550792694091797
    8. 'return' → logprob: -4.38007926940918
    9. '```' → logprob: -4.63007926940918
    10. 'transpose' → logprob: -4.63007926940918

Token 1291: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.0024154919665306807
    2. 'outez' → logprob: -6.877415657043457
    3. 'outer' → logprob: -7.127415657043457
    4. 'out' → logprob: -7.627415657043457
    5. 'outes' → logprob: -10.252415657043457
    6. 'uste' → logprob: -10.502415657043457
    7. 'table' → logprob: -11.627415657043457
    8. 'd' → logprob: -11.877415657043457
    9. '+=' → logprob: -12.377415657043457
    10. '   ' → logprob: -13.377415657043457

Token 1292: ' à' (ID: 1221)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.9033313989639282
    2. ' trans' → logprob: -1.5283313989639282
    3. 'offset' → logprob: -2.0283312797546387
    4. 'table' → logprob: -2.1533312797546387
    5. ' offset' → logprob: -2.9033312797546387
    6. ' table' → logprob: -3.0283312797546387
    7. 'np' → logprob: -4.653331279754639
    8. ' np' → logprob: -5.153331279754639
    9. '+' → logprob: -5.653331279754639
    10. 'sub' → logprob: -6.028331279754639

Token 1293: ' chaque' (ID: 21194)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.11995837837457657
    2. 'offset' → logprob: -2.7449584007263184
    3. 'sub' → logprob: -3.9949584007263184
    4. ' table' → logprob: -3.9949584007263184
    5. 'trans' → logprob: -4.994958400726318
    6. ' offset' → logprob: -5.869958400726318
    7. ' sub' → logprob: -7.369958400726318
    8. 'count' → logprob: -7.494958400726318
    9. '   ' → logprob: -8.24495792388916
    10. ' trans' → logprob: -8.36995792388916

Token 1294: ' élément' (ID: 99627)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.5722231864929199
    2. 'offset' → logprob: -2.07222318649292
    3. 'ret' → logprob: -2.69722318649292
    4. ' trans' → logprob: -2.69722318649292
    5. 'row' → logprob: -3.07222318649292
    6. ' offset' → logprob: -3.82222318649292
    7. 'line' → logprob: -4.07222318649292
    8. 'count' → logprob: -4.07222318649292
    9. 'table' → logprob: -4.44722318649292
    10. 'pos' → logprob: -4.94722318649292

Token 1295: ' trans' (ID: 1643)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.8296845555305481
    2. 'trans' → logprob: -1.4546844959259033
    3. ' table' → logprob: -2.5796844959259033
    4. '[offset' → logprob: -2.7046844959259033
    5. 'offset' → logprob: -2.8296844959259033
    6. '(table' → logprob: -3.3296844959259033
    7. ' trans' → logprob: -3.4546844959259033
    8. 'sub' → logprob: -4.329684734344482
    9. '(trans' → logprob: -4.704684734344482
    10. '[' → logprob: -4.829684734344482

Token 1296: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007471859455108643
    2. '_table' → logprob: -5.257472038269043
    3. 'posed' → logprob: -6.632472038269043
    4. 'formed' → logprob: -7.257472038269043
    5. 'pose' → logprob: -9.132472038269043
    6. 'pos' → logprob: -10.382472038269043
    7. 'lated' → logprob: -10.757472038269043
    8. '[' → logprob: -12.382472038269043
    9. 'table' → logprob: -12.507472038269043
    10. 'posable' → logprob: -12.507472038269043

Token 1297: 'resh' (ID: 3485)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00233176676556468
    2. 'resh' → logprob: -6.252331733703613
    3. 'posed' → logprob: -9.002331733703613
    4. '_sh' → logprob: -9.252331733703613
    5. 'formed' → logprob: -9.502331733703613
    6. 'sh' → logprob: -9.752331733703613
    7. 'h' → logprob: -11.377331733703613
    8. ' resh' → logprob: -11.752331733703613
    9. '```' → logprob: -12.377331733703613
    10. 'reshape' → logprob: -12.627331733703613

Token 1298: 'aped' (ID: 16020)
  Prédit: 'aped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aped' → logprob: -0.005425492767244577
    2. '_' → logprob: -6.505425453186035
    3. 'aved' → logprob: -8.005425453186035
    4. '[' → logprob: -8.255425453186035
    5. '   ' → logprob: -8.255425453186035
    6. '```' → logprob: -8.255425453186035
    7. '_table' → logprob: -8.505425453186035
    8. 'p' → logprob: -8.755425453186035
    9. 'ap' → logprob: -8.755425453186035
    10. 'apped' → logprob: -8.880425453186035

Token 1299: ' une' (ID: 2463)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.7758100032806396
    2. ' +=' → logprob: -1.2758100032806396
    3. '[' → logprob: -2.0258100032806396
    4. '+=' → logprob: -2.5258100032806396
    5. 'trans' → logprob: -4.025810241699219
    6. ' trans' → logprob: -5.400810241699219
    7. '```' → logprob: -5.400810241699219
    8. '+' → logprob: -5.525810241699219
    9. '[index' → logprob: -6.150810241699219
    10. '=' → logprob: -6.150810241699219

Token 1300: ' version' (ID: 3926)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.6228739023208618
    2. 'trans' → logprob: -1.9978739023208618
    3. 'np' → logprob: -2.3728737831115723
    4. '<|end|>' → logprob: -2.4978737831115723
    5. '[' → logprob: -3.4978737831115723
    6. '1' → logprob: -3.6228737831115723
    7. '+' → logprob: -3.7478737831115723
    8. ' trans' → logprob: -4.122873783111572
    9. '[offset' → logprob: -4.497873783111572
    10. '[np' → logprob: -4.747873783111572

Token 1301: ' roul' (ID: 104631)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -1.5937706232070923
    2. 'trans' → logprob: -1.7187706232070923
    3. 'offset' → logprob: -2.0937705039978027
    4. ' +=' → logprob: -2.4687705039978027
    5. '=' → logprob: -2.5937705039978027
    6. ' trans' → logprob: -2.8437705039978027
    7. '(trans' → logprob: -2.8437705039978027
    8. '(offset' → logprob: -3.4687705039978027
    9. '+' → logprob: -3.7187705039978027
    10. '+=' → logprob: -3.8437705039978027

Token 1302: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.067848801612854
    2. 'ing' → logprob: -1.192848801612854
    3. 'ed' → logprob: -1.317848801612854
    4. 'l' → logprob: -3.8178486824035645
    5. 'sum' → logprob: -4.0678486824035645
    6. 'ée' → logprob: -4.5678486824035645
    7. 'ling' → logprob: -4.9428486824035645
    8. 'll' → logprob: -5.4428486824035645
    9. '```' → logprob: -5.4428486824035645
    10. 'e' → logprob: -5.8178486824035645

Token 1303: ' (' (ID: 350)
  Prédit: '(trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(trans' → logprob: -0.12532304227352142
    2. '(' → logprob: -3.0003230571746826
    3. 'trans' → logprob: -3.0003230571746826
    4. '(np' → logprob: -4.7503228187561035
    5. ' (' → logprob: -5.1253228187561035
    6. '(
' → logprob: -7.0003228187561035
    7. '(+' → logprob: -7.0003228187561035
    8. ' trans' → logprob: -7.1253228187561035
    9. 'transpose' → logprob: -8.250323295593262
    10. '((' → logprob: -9.000323295593262

Token 1304: 'np' (ID: 12766)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.7515828013420105
    2. '1' → logprob: -1.0015828609466553
    3. 'np' → logprob: -2.0015828609466553
    4. 'offset' → logprob: -4.751582622528076
    5. ' trans' → logprob: -5.001582622528076
    6. '-' → logprob: -6.126582622528076
    7. ' np' → logprob: -6.376582622528076
    8. '+' → logprob: -6.376582622528076
    9. ' ' → logprob: -7.001582622528076
    10. 'transpose' → logprob: -7.251582622528076

Token 1305: '.roll' (ID: 122694)
  Prédit: '.roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.roll' → logprob: -0.00015908108616713434
    2. '.h' → logprob: -9.25015926361084
    3. 'roll' → logprob: -10.12515926361084
    4. '.' → logprob: -11.25015926361084
    5. 'h' → logprob: -13.25015926361084
    6. '.rot' → logprob: -13.62515926361084
    7. '.add' → logprob: -13.87515926361084
    8. '_roll' → logprob: -14.00015926361084
    9. '.vstack' → logprob: -14.00015926361084
    10. '```' → logprob: -14.00015926361084

Token 1306: ')' (ID: 8)
  Prédit: '(trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(trans' → logprob: -0.004185009747743607
    2. 'trans' → logprob: -5.754185199737549
    3. '(' → logprob: -7.129185199737549
    4. ')' → logprob: -9.12918472290039
    5. '(
' → logprob: -10.00418472290039
    6. ',' → logprob: -11.25418472290039
    7. '```' → logprob: -11.75418472290039
    8. ' (' → logprob: -11.87918472290039
    9. 'transpose' → logprob: -12.12918472290039
    10. ')(' → logprob: -13.00418472290039

Token 1307: ' d' (ID: 272)
  Prédit: '(trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(trans' → logprob: -0.008908816613256931
    2. '(' → logprob: -5.258908748626709
    3. 'trans' → logprob: -6.133908748626709
    4. '(
' → logprob: -6.633908748626709
    5. ' (' → logprob: -8.883909225463867
    6. '```' → logprob: -11.008909225463867
    7. ' trans' → logprob: -11.883909225463867
    8. '(np' → logprob: -12.383909225463867
    9. 'transpose' → logprob: -12.758909225463867
    10. '           ' → logprob: -13.008909225463867

Token 1308: '’un' (ID: 9073)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.014935851097106934
    2. '(trans' → logprob: -4.2649359703063965
    3. ' trans' → logprob: -7.6399359703063965
    4. '	trans' → logprob: -9.639935493469238
    5. '=' → logprob: -10.014935493469238
    6. 'offset' → logprob: -10.514935493469238
    7. 'e' → logprob: -10.639935493469238
    8. '`' → logprob: -10.639935493469238
    9. '```' → logprob: -10.889935493469238
    10. '   ' → logprob: -10.889935493469238

Token 1309: ' tableau' (ID: 67053)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.12149528414011002
    2. 'offset' → logprob: -2.496495246887207
    3. 'ret' → logprob: -4.621495246887207
    4. '1' → logprob: -4.621495246887207
    5. 'np' → logprob: -5.246495246887207
    6. ' trans' → logprob: -6.496495246887207
    7. 'tab' → logprob: -6.996495246887207
    8. '(trans' → logprob: -7.121495246887207
    9. '[' → logprob: -7.496495246887207
    10. '(' → logprob: -7.496495246887207

Token 1310: ' allant' (ID: 122150)
  Prédit: '(trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(trans' → logprob: -0.43302983045578003
    2. '(offset' → logprob: -1.8080298900604248
    3. 'trans' → logprob: -2.183029890060425
    4. '(' → logprob: -3.433029890060425
    5. '(
' → logprob: -4.058029651641846
    6. 'offset' → logprob: -4.308029651641846
    7. '[offset' → logprob: -5.183029651641846
    8. '(np' → logprob: -6.433029651641846
    9. '(table' → logprob: -6.808029651641846
    10. '```' → logprob: -7.808029651641846

Token 1311: ' de' (ID: 334)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.0024200677871704
    2. 'de' → logprob: -1.2524200677871704
    3. 'np' → logprob: -1.6274200677871704
    4. 'from' → logprob: -3.752419948577881
    5. '1' → logprob: -3.877419948577881
    6. '[offset' → logprob: -4.127419948577881
    7. 'range' → logprob: -4.627419948577881
    8. '   ' → logprob: -4.752419948577881
    9. '```' → logprob: -4.752419948577881
    10. '[' → logprob: -4.877419948577881

Token 1312: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23319850862026215
    2. '1' → logprob: -2.233198404312134
    3. 'half' → logprob: -3.358198404312134
    4. 'size' → logprob: -3.483198404312134
    5. 'offset' → logprob: -3.733198404312134
    6. '-' → logprob: -5.858198642730713
    7. '(' → logprob: -6.608198642730713
    8. 'np' → logprob: -6.733198642730713
    9. '[' → logprob: -6.983198642730713
    10. 'length' → logprob: -7.108198642730713

Token 1313: 'half' (ID: 52836)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12723402678966522
    2. 'offset' → logprob: -2.7522339820861816
    3. '0' → logprob: -4.127233982086182
    4. 'size' → logprob: -4.252233982086182
    5. 'half' → logprob: -4.627233982086182
    6. 'pos' → logprob: -5.502233982086182
    7. 'np' → logprob: -6.002233982086182
    8. '(' → logprob: -6.127233982086182
    9. 'length' → logprob: -6.877233982086182
    10. '(size' → logprob: -7.002233982086182

Token 1314: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -0.015782708302140236
    2. '1' → logprob: -4.890782833099365
    3. '_pos' → logprob: -5.640782833099365
    4. '_' → logprob: -6.390782833099365
    5. '```' → logprob: -7.265782833099365
    6. 'pos' → logprob: -7.515782833099365
    7. 'period' → logprob: -7.640782833099365
    8. '   ' → logprob: -8.390782356262207
    9. '_position' → logprob: -8.765782356262207
    10. '_offset' → logprob: -8.890782356262207

Token 1315: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22559396922588348
    2. ':' → logprob: -2.1005940437316895
    3. '```' → logprob: -3.4755940437316895
    4. '+' → logprob: -4.1005940437316895
    5. ' +' → logprob: -4.8505940437316895
    6. ' :' → logprob: -5.4755940437316895
    7. 'half' → logprob: -5.8505940437316895
    8. '   ' → logprob: -5.9755940437316895
    9. ' ,' → logprob: -6.1005940437316895
    10. '*' → logprob: -6.7255940437316895

Token 1316: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.31904441118240356
    2. ' half' → logprob: -2.194044351577759
    3. '0' → logprob: -2.319044351577759
    4. '-' → logprob: -3.194044351577759
    5. '(-' → logprob: -5.319044589996338
    6. '-half' → logprob: -5.319044589996338
    7. '(' → logprob: -5.444044589996338
    8. ' ' → logprob: -5.819044589996338
    9. ' -' → logprob: -5.944044589996338
    10. '1' → logprob: -6.819044589996338

Token 1317: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -0.0010793721303343773
    2. '_half' → logprob: -7.001079559326172
    3. '```' → logprob: -9.251079559326172
    4. 'half' → logprob: -10.626079559326172
    5. '_PERIOD' → logprob: -11.251079559326172
    6. 'period' → logprob: -12.126079559326172
    7. '+' → logprob: -12.376079559326172
    8. '_P' → logprob: -12.501079559326172
    9. '   ' → logprob: -12.876079559326172
    10. '_range' → logprob: -13.001079559326172

Token 1318: ' exclus' (ID: 9398)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2666972875595093
    2. '(-' → logprob: -1.5166972875595093
    3. '(' → logprob: -2.016697406768799
    4. '-' → logprob: -2.516697406768799
    5. '(trans' → logprob: -2.891697406768799
    6. '[' → logprob: -3.391697406768799
    7. '(np' → logprob: -3.391697406768799
    8. ' -' → logprob: -3.891697406768799
    9. 'trans' → logprob: -4.016697406768799
    10. ',' → logprob: -4.141697406768799

Token 1319: ',' (ID: 11)
  Prédit: '(np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.2878531217575073
    2. '(-' → logprob: -2.162853240966797
    3. '(' → logprob: -2.787853240966797
    4. 'np' → logprob: -3.787853240966797
    5. ' (' → logprob: -4.537853240966797
    6. ',' → logprob: -4.787853240966797
    7. '(trans' → logprob: -5.037853240966797
    8. '((-' → logprob: -5.162853240966797
    9. '           ' → logprob: -5.912853240966797
    10. '(
' → logprob: -5.912853240966797

Token 1320: ' roul' (ID: 104631)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.299714595079422
    2. ' np' → logprob: -2.1747145652770996
    3. 'trans' → logprob: -2.6747145652770996
    4. ' trans' → logprob: -3.4247145652770996
    5. ' half' → logprob: -4.4247145652771
    6. 'half' → logprob: -5.1747145652771
    7. '1' → logprob: -5.4247145652771
    8. 'axis' → logprob: -5.4247145652771
    9. 'shift' → logprob: -5.9247145652771
    10. '           ' → logprob: -6.1747145652771

Token 1321: 'ée' (ID: 2894)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9751293659210205
    2. '=np' → logprob: -1.4751293659210205
    3. 'e' → logprob: -2.3501293659210205
    4. '   ' → logprob: -3.1001293659210205
    5. '(-' → logprob: -3.2251293659210205
    6. '=-' → logprob: -3.3501293659210205
    7. 'é' → logprob: -3.7251293659210205
    8. 'll' → logprob: -3.8501293659210205
    9. ' =' → logprob: -3.9751293659210205
    10. '(np' → logprob: -4.225129127502441

Token 1322: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9875891208648682
    2. '(-' → logprob: -1.1125891208648682
    3. '(np' → logprob: -1.7375891208648682
    4. '((-' → logprob: -2.862589120864868
    5. '((' → logprob: -3.487589120864868
    6. '(+' → logprob: -4.237588882446289
    7. 'np' → logprob: -5.737588882446289
    8. '(
' → logprob: -5.987588882446289
    9. '(-(' → logprob: -6.112588882446289
    10. '```' → logprob: -6.112588882446289

Token 1323: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.42113253474235535
    2. '1' → logprob: -1.2961325645446777
    3. '-' → logprob: -3.4211325645446777
    4. '-half' → logprob: -3.7961325645446777
    5. ' half' → logprob: -4.421132564544678
    6. '(' → logprob: -6.546132564544678
    7. ' ' → logprob: -7.921132564544678
    8. ' -' → logprob: -9.04613208770752
    9. '0' → logprob: -9.17113208770752
    10. '[' → logprob: -9.29613208770752

Token 1324: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -0.0003460712905507535
    2. '_half' → logprob: -8.000346183776855
    3. '```' → logprob: -12.875346183776855
    4. '_' → logprob: -13.500346183776855
    5. 'half' → logprob: -13.500346183776855
    6. 'period' → logprob: -13.750346183776855
    7. '_PERIOD' → logprob: -14.625346183776855
    8. '_position' → logprob: -14.875346183776855
    9. '_partition' → logprob: -14.875346183776855
    10. '_pos' → logprob: -15.000346183776855

Token 1325: ' vers' (ID: 3640)
  Prédit: '(np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.7443016767501831
    2. '(-' → logprob: -1.244301676750183
    3. '((-' → logprob: -1.994301676750183
    4. '((' → logprob: -3.7443017959594727
    5. '(' → logprob: -3.9943017959594727
    6. '(range' → logprob: -4.119301795959473
    7. 'np' → logprob: -4.369301795959473
    8. '```' → logprob: -4.744301795959473
    9. '(trans' → logprob: -5.244301795959473
    10. '([-' → logprob: -5.244301795959473

Token 1326: ' la' (ID: 557)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.2597309947013855
    2. '-left' → logprob: -2.7597310543060303
    3. '-' → logprob: -3.0097310543060303
    4. 'left' → logprob: -3.3847310543060303
    5. '-half' → logprob: -3.6347310543060303
    6. '1' → logprob: -3.6347310543060303
    7. '0' → logprob: -5.009730815887451
    8. 'right' → logprob: -5.384730815887451
    9. '-right' → logprob: -5.384730815887451
    10. '-l' → logprob: -5.634730815887451

Token 1327: ' droite' (ID: 61428)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.25232863426208496
    2. '0' → logprob: -1.752328634262085
    3. 'left' → logprob: -3.877328634262085
    4. 'right' → logprob: -4.502328872680664
    5. ' half' → logprob: -5.002328872680664
    6. '-half' → logprob: -5.627328872680664
    7. '1' → logprob: -5.877328872680664
    8. '-' → logprob: -6.377328872680664
    9. '-left' → logprob: -6.627328872680664
    10. '```' → logprob: -7.752328872680664

Token 1328: '
' (ID: 198)
  Prédit: '(np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.629816472530365
    2. 'np' → logprob: -0.879816472530365
    3. '(-' → logprob: -3.8798165321350098
    4. ' np' → logprob: -4.62981653213501
    5. '           ' → logprob: -4.75481653213501
    6. '```' → logprob: -5.50481653213501
    7. ',' → logprob: -6.75481653213501
    8. '(
' → logprob: -6.87981653213501
    9. '[np' → logprob: -6.87981653213501
    10. 'trans' → logprob: -7.25481653213501

Token 1329: '           ' (ID: 352)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -1.4261384010314941
    2. '(np' → logprob: -1.5511384010314941
    3. '           ' → logprob: -1.6761384010314941
    4. ' np' → logprob: -2.301138401031494
    5. ' +' → logprob: -2.801138401031494
    6. '(-' → logprob: -3.426138401031494
    7. '-' → logprob: -3.551138401031494
    8. '+' → logprob: -3.801138401031494
    9. ' -' → logprob: -3.926138401031494
    10. ')' → logprob: -4.051138401031494

Token 1330: ' trans' (ID: 1643)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.7868337035179138
    2. ' np' → logprob: -1.9118337631225586
    3. 'trans' (adapté à ' trans') → logprob: -2.0368337631225586
    4. ' trans' → logprob: -2.1618337631225586
    5. '           ' → logprob: -2.6618337631225586
    6. '+' → logprob: -3.4118337631225586
    7. ' (' → logprob: -4.786833763122559
    8. ' +' → logprob: -4.786833763122559
    9. '(np' → logprob: -5.161833763122559
    10. '-' → logprob: -5.161833763122559

Token 1331: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1637164789135568e-05
    2. 'rolled' → logprob: -12.875011444091797
    3. 'ed' → logprob: -13.750011444091797
    4. '```' → logprob: -13.875011444091797
    5. '_roll' → logprob: -14.125011444091797
    6. 'resh' → logprob: -14.750011444091797
    7. '_shift' → logprob: -14.750011444091797
    8. '	' → logprob: -14.750011444091797
    9. '_table' → logprob: -15.062511444091797
    10. '_r' → logprob: -15.125011444091797

Token 1332: 'resh' (ID: 3485)
  Prédit: 'resh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resh' → logprob: -0.0010631787590682507
    2. '_' → logprob: -7.376063346862793
    3. 'reshape' → logprob: -8.251063346862793
    4. 'rolled' → logprob: -9.626063346862793
    5. ' resh' → logprob: -9.626063346862793
    6. 'sh' → logprob: -10.876063346862793
    7. 'esh' → logprob: -12.501063346862793
    8. '.reshape' → logprob: -13.126063346862793
    9. 'resent' → logprob: -13.626063346862793
    10. 'res' → logprob: -13.626063346862793

Token 1333: 'aped' (ID: 16020)
  Prédit: 'aped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aped' → logprob: -0.32878997921943665
    2. '_' → logprob: -1.3287899494171143
    3. '_roll' → logprob: -5.703790187835693
    4. '       ' → logprob: -5.828790187835693
    5. 'ape' → logprob: -6.578790187835693
    6. '   ' → logprob: -6.578790187835693
    7. '_table' → logprob: -6.703790187835693
    8. 'ift' → logprob: -7.203790187835693
    9. '           ' → logprob: -7.328790187835693
    10. '```' → logprob: -7.703790187835693

Token 1334: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6199619174003601
    2. ' +=' → logprob: -0.8699619174003601
    3. '+' → logprob: -3.994961977005005
    4. '=' → logprob: -4.119961738586426
    5. ' +' → logprob: -5.494961738586426
    6. ' =' → logprob: -5.744961738586426
    7. '   ' → logprob: -7.994961738586426
    8. ' -=' → logprob: -8.494961738586426
    9. '       ' → logprob: -9.244961738586426
    10. '```' → logprob: -9.369961738586426

Token 1335: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.2520700991153717
    2. ' np' → logprob: -1.5020700693130493
    3. '(np' → logprob: -9.377070426940918
    4. 'half' → logprob: -11.252070426940918
    5. ' half' → logprob: -11.252070426940918
    6. ' (' → logprob: -11.627070426940918
    7. ' ' → logprob: -12.127070426940918
    8. '-' → logprob: -12.627070426940918
    9. ' -' → logprob: -13.127070426940918
    10. '(' → logprob: -13.502070426940918

Token 1336: '.roll' (ID: 122694)
  Prédit: '.roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.roll' → logprob: -0.00012964145571459085
    2. '.arange' → logprob: -9.250129699707031
    3. '.h' → logprob: -11.000129699707031
    4. '.' → logprob: -11.375129699707031
    5. '.array' → logprob: -13.500129699707031
    6. '.zeros' → logprob: -14.500129699707031
    7. 'roll' → logprob: -14.500129699707031
    8. '_roll' → logprob: -14.750129699707031
    9. ' .' → logprob: -14.750129699707031
    10. '.r' → logprob: -14.875129699707031

Token 1337: '(np' (ID: 21997)
  Prédit: '(np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.0007586462306790054
    2. '(trans' → logprob: -8.500758171081543
    3. '(-' → logprob: -8.500758171081543
    4. 'np' → logprob: -8.625758171081543
    5. '(' → logprob: -9.375758171081543
    6. '(offset' → logprob: -9.625758171081543
    7. '(range' → logprob: -11.750758171081543
    8. '((' → logprob: -12.250758171081543
    9. '((-' → logprob: -12.375758171081543
    10. 'trans' → logprob: -13.625758171081543

Token 1338: '.arange' (ID: 57220)
  Prédit: '.arange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arange' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.875001907348633
    3. '.concatenate' → logprob: -15.250001907348633
    4. '.linspace' → logprob: -15.625001907348633
    5. '```' → logprob: -16.125001907348633
    6. '.zeros' → logprob: -16.125001907348633
    7. '.array' → logprob: -16.375001907348633
    8. 'ar' → logprob: -16.375001907348633
    9. '.h' → logprob: -16.500001907348633
    10. '.ones' → logprob: -17.125001907348633

Token 1339: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.47412094473838806
    2. '(' → logprob: -0.9741209745407104
    3. '(-(' → logprob: -11.22412109375
    4. 'half' → logprob: -11.47412109375
    5. '((-' → logprob: -11.97412109375
    6. '(size' → logprob: -12.34912109375
    7. '(h' → logprob: -12.84912109375
    8. '((' → logprob: -12.97412109375
    9. '(
' → logprob: -13.09912109375
    10. '-' → logprob: -14.34912109375

Token 1340: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -2.546478935983032e-05
    2. ' half' → logprob: -10.875025749206543
    3. '(' → logprob: -12.000025749206543
    4. '_half' → logprob: -16.000024795532227
    5. 'hal' → logprob: -16.125024795532227
    6. '-half' → logprob: -17.125024795532227
    7. '1' → logprob: -18.500024795532227
    8. '0' → logprob: -18.625024795532227
    9. '
' → logprob: -18.875024795532227
    10. 'Half' → logprob: -19.000024795532227

Token 1341: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -3.4121114822482923e-06
    2. 'period' → logprob: -13.750003814697266
    3. '_PERIOD' → logprob: -13.875003814697266
    4. 'Period' → logprob: -14.250003814697266
    5. '```' → logprob: -14.750003814697266
    6. '_p' → logprob: -17.000003814697266
    7. '_position' → logprob: -17.125003814697266
    8. '_partition' → logprob: -17.500003814697266
    9. '_per' → logprob: -17.625003814697266
    10. '_table' → logprob: -17.625003814697266

Token 1342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0039024308789521456
    2. '+' → logprob: -6.003902435302734
    3. ' ,' → logprob: -6.878902435302734
    4. ' +' → logprob: -8.253902435302734
    5. 'half' → logprob: -9.628902435302734
    6. '(),' → logprob: -11.003902435302734
    7. '```' → logprob: -11.128902435302734
    8. '*' → logprob: -11.628902435302734
    9. ' half' → logprob: -11.628902435302734
    10. '_half' → logprob: -12.253902435302734

Token 1343: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.03198244795203209
    2. ' half' → logprob: -3.531982421875
    3. '0' → logprob: -6.156982421875
    4. ' ' → logprob: -9.781982421875
    5. '-half' → logprob: -11.156982421875
    6. 'hal' → logprob: -11.281982421875
    7. ',' → logprob: -12.531982421875
    8. '_half' → logprob: -12.656982421875
    9. '
' → logprob: -12.781982421875
    10. '   ' → logprob: -12.906982421875

Token 1344: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -1.1517960956552997e-05
    2. '```' → logprob: -12.375011444091797
    3. 'period' → logprob: -13.000011444091797
    4. '_half' → logprob: -13.250011444091797
    5. '_partition' → logprob: -14.625011444091797
    6. '_PERIOD' → logprob: -14.625011444091797
    7. '_part' → logprob: -14.875011444091797
    8. ')' → logprob: -15.000011444091797
    9. '_per' → logprob: -15.250011444091797
    10. '_' → logprob: -15.875011444091797

Token 1345: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001245708903297782
    2. '),' → logprob: -7.001245498657227
    3. ' ,' → logprob: -8.751245498657227
    4. '```' → logprob: -9.126245498657227
    5. '+' → logprob: -10.126245498657227
    6. ')' → logprob: -12.001245498657227
    7. ' +' → logprob: -12.376245498657227
    8. '   ' → logprob: -12.626245498657227
    9. 'import' → logprob: -13.126245498657227
    10. '*' → logprob: -13.251245498657227

Token 1346: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.005267076659947634
    2. ' half' → logprob: -5.255267143249512
    3. 'hal' → logprob: -11.380267143249512
    4. 'shift' → logprob: -11.505267143249512
    5. ' ' → logprob: -13.005267143249512
    6. '   ' → logprob: -13.130267143249512
    7. '1' → logprob: -13.255267143249512
    8. 'right' → logprob: -13.255267143249512
    9. ' ' → logprob: -13.880267143249512
    10. '-half' → logprob: -14.130267143249512

Token 1347: '_period' (ID: 46594)
  Prédit: '_period'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_period' → logprob: -3.416665640543215e-05
    2. '_p' → logprob: -10.87503433227539
    3. '_per' → logprob: -11.62503433227539
    4. '_' → logprob: -12.50003433227539
    5. ' _' → logprob: -14.50003433227539
    6. '_PERIOD' → logprob: -14.87503433227539
    7. '_half' → logprob: -15.62503433227539
    8. '_partition' → logprob: -15.62503433227539
    9. '_part' → logprob: -15.75003433227539
    10. '_position' → logprob: -15.75003433227539

Token 1348: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0053771180100739
    2. ',' → logprob: -5.380377292633057
    3. '),' → logprob: -8.255376815795898
    4. ')
' → logprob: -8.380376815795898
    5. ')[' → logprob: -8.755376815795898
    6. ')`' → logprob: -10.630376815795898
    7. ')+' → logprob: -11.130376815795898
    8. '       ' → logprob: -11.380376815795898
    9. ')#' → logprob: -11.755376815795898
    10. '```' → logprob: -11.755376815795898

Token 1349: '            
' (ID: 7048)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09469354152679443
    2. '<|end|>' → logprob: -3.469693660736084
    3. '       ' → logprob: -3.594693660736084
    4. '
' → logprob: -4.344693660736084
    5. '            
' → logprob: -4.719693660736084
    6. '```' → logprob: -5.344693660736084
    7. '        
' → logprob: -6.094693660736084
    8. '   ' → logprob: -6.844693660736084
    9. '    
' → logprob: -7.469693660736084
    10. '               ' → logprob: -7.969693660736084

Token 1350: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10433041304349899
    2. '       ' → logprob: -2.60433030128479
    3. '<|end|>' → logprob: -4.479330539703369
    4. '            
' → logprob: -5.104330539703369
    5. '   ' → logprob: -6.104330539703369
    6. '```' → logprob: -6.479330539703369
    7. '               ' → logprob: -6.729330539703369
    8. '        
' → logprob: -7.479330539703369
    9. '
' → logprob: -7.729330539703369
    10. '                   ' → logprob: -8.354330062866211

Token 1351: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.717248260974884
    2. 'for' → logprob: -1.2172482013702393
    3. 'table' → logprob: -2.8422482013702393
    4. 'count' → logprob: -3.3422482013702393
    5. 'offset' → logprob: -3.5922482013702393
    6. 'trans' → logprob: -3.5922482013702393
    7. '       ' → logprob: -4.217248439788818
    8. '#' (adapté à ' #') → logprob: -4.467248439788818
    9. 'index' → logprob: -4.842248439788818
    10. ' for' → logprob: -4.842248439788818

Token 1352: ' Som' (ID: 12116)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.299856960773468
    2. 'for' → logprob: -1.6748569011688232
    3. 'offset' → logprob: -3.4248569011688232
    4. 'count' → logprob: -3.7998569011688232
    5. 'sub' → logprob: -5.049857139587402
    6. 'idx' → logprob: -6.049857139587402
    7. '#' → logprob: -6.549857139587402
    8. 'index' → logprob: -6.924857139587402
    9. 'rest' → logprob: -6.924857139587402
    10. '           ' → logprob: -7.674857139587402

Token 1353: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.7860294580459595
    2. '           ' → logprob: -1.1610294580459595
    3. 'trans' → logprob: -2.66102933883667
    4. '#' → logprob: -3.41102933883667
    5. '       ' → logprob: -3.53602933883667
    6. '   ' → logprob: -4.28602933883667
    7. '_trans' → logprob: -4.53602933883667
    8. 'e' → logprob: -4.78602933883667
    9. '(trans' → logprob: -4.91102933883667
    10. '=' → logprob: -5.16102933883667

Token 1354: ' les' (ID: 1341)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2829684019088745
    2. 'trans' → logprob: -1.4079684019088745
    3. ' =' → logprob: -1.9079684019088745
    4. '(trans' → logprob: -1.9079684019088745
    5. '(' → logprob: -2.782968521118164
    6. '(axis' → logprob: -3.157968521118164
    7. ' +=' → logprob: -3.782968521118164
    8. '           ' → logprob: -3.907968521118164
    9. '()' → logprob: -4.407968521118164
    10. '+=' → logprob: -5.032968521118164

Token 1355: ' occurrences' (ID: 108073)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.006463593803346157
    2. '(trans' → logprob: -6.381463527679443
    3. 'axis' → logprob: -6.881463527679443
    4. ' trans' → logprob: -7.006463527679443
    5. 'axes' → logprob: -7.256463527679443
    6. 'rows' → logprob: -7.381463527679443
    7. 'np' → logprob: -7.881463527679443
    8. 'elements' → logprob: -8.381464004516602
    9. 'columns' → logprob: -8.381464004516602
    10. 'rest' → logprob: -9.256464004516602

Token 1356: ' pour' (ID: 1930)
  Prédit: '(axis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(axis' → logprob: -0.5355069041252136
    2. '=' → logprob: -1.6605069637298584
    3. '(trans' → logprob: -1.9105069637298584
    4. 'trans' → logprob: -3.0355069637298584
    5. ' =' → logprob: -4.410506725311279
    6. 'axis' → logprob: -4.535506725311279
    7. '(' → logprob: -6.035506725311279
    8. 'over' → logprob: -7.160506725311279
    9. '+=' → logprob: -7.535506725311279
    10. '(sub' → logprob: -7.785506725311279

Token 1357: ' la' (ID: 557)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.27929648756980896
    2. 'axis' → logprob: -1.6542965173721313
    3. 'length' → logprob: -3.904296398162842
    4. 'sub' → logprob: -4.779296398162842
    5. 'each' → logprob: -5.029296398162842
    6. 'rest' → logprob: -5.654296398162842
    7. 'pos' → logprob: -6.154296398162842
    8. ' trans' → logprob: -6.654296398162842
    9. 'np' → logprob: -6.779296398162842
    10. '0' → logprob: -6.779296398162842

Token 1358: ' portion' (ID: 19137)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.9045686721801758
    2. 'length' → logprob: -1.5295686721801758
    3. 'sub' → logprob: -1.6545686721801758
    4. 'pos' → logprob: -2.779568672180176
    5. 'table' → logprob: -3.029568672180176
    6. 'for' → logprob: -4.529568672180176
    7. 'long' → logprob: -4.529568672180176
    8. 'np' → logprob: -4.779568672180176
    9. 'range' → logprob: -5.279568672180176
    10. 'ligne' → logprob: -5.404568672180176

Token 1359: ' concern' (ID: 7372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4543580114841461
    2. 'trans' → logprob: -1.4543579816818237
    3. '(trans' → logprob: -3.5793581008911133
    4. '           ' → logprob: -3.8293581008911133
    5. 'sub' → logprob: -4.204358100891113
    6. '+=' → logprob: -4.329358100891113
    7. ' =' → logprob: -4.329358100891113
    8. '(sub' → logprob: -4.954358100891113
    9. 'offset' → logprob: -5.204358100891113
    10. 'table' → logprob: -5.329358100891113

Token 1360: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.21273556351661682
    2. '           ' → logprob: -2.212735652923584
    3. '=' → logprob: -3.462735652923584
    4. 'née' → logprob: -3.962735652923584
    5. 'ées' → logprob: -4.587735652923584
    6. 'nées' → logprob: -4.837735652923584
    7. 'e' → logprob: -6.087735652923584
    8. 'né' → logprob: -6.087735652923584
    9. 'é' → logprob: -6.587735652923584
    10. '       ' → logprob: -6.712735652923584

Token 1361: ' et' (ID: 859)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.30110839009284973
    2. 'sub' → logprob: -1.9261083602905273
    3. '           ' → logprob: -3.0511083602905273
    4. 'count' → logprob: -3.9261083602905273
    5. ' +=' → logprob: -4.176108360290527
    6. '+=' → logprob: -4.801108360290527
    7. '=' → logprob: -5.426108360290527
    8. '[' → logprob: -5.551108360290527
    9. '[sub' → logprob: -5.551108360290527
    10. ' table' → logprob: -6.301108360290527

Token 1362: ' ajoute' (ID: 91611)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.34548887610435486
    2. '#' → logprob: -3.0954887866973877
    3. 'offset' → logprob: -3.4704887866973877
    4. 'update' → logprob: -3.5954887866973877
    5. 'continue' → logprob: -4.095489025115967
    6. 'sub' → logprob: -4.220489025115967
    7. 'range' → logprob: -4.220489025115967
    8. ' table' → logprob: -4.470489025115967
    9. 'store' → logprob: -4.595489025115967
    10. 'index' → logprob: -4.720489025115967

Token 1363: ' à' (ID: 1221)
  Prédit: '(table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(table' → logprob: -1.3962105512619019
    2. '(trans' → logprob: -1.3962105512619019
    3. 'table' → logprob: -1.8962105512619019
    4. 'trans' → logprob: -2.0212106704711914
    5. '(sub' → logprob: -3.1462106704711914
    6. ' trans' → logprob: -3.2712106704711914
    7. 'np' → logprob: -3.3962106704711914
    8. 'sub' → logprob: -3.8962106704711914
    9. '(np' → logprob: -4.146210670471191
    10. 'to' → logprob: -4.396210670471191

Token 1364: ' la' (ID: 557)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.19417691230773926
    2. ' table' → logprob: -1.8191769123077393
    3. 'offset' → logprob: -4.81917667388916
    4. ' offset' → logprob: -5.69417667388916
    5. 'count' → logprob: -7.06917667388916
    6. 'sub' → logprob: -7.19417667388916
    7. '   ' → logprob: -7.69417667388916
    8. ' sub' → logprob: -8.81917667388916
    9. ' la' → logprob: -8.81917667388916
    10. ' count' → logprob: -8.94417667388916

Token 1365: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.060566503554582596
    2. ' table' → logprob: -2.9355664253234863
    3. 'offset' → logprob: -6.060566425323486
    4. 'count' → logprob: -6.435566425323486
    5. 'sub' → logprob: -7.435566425323486
    6. '```' → logprob: -8.185566902160645
    7. '   ' → logprob: -8.685566902160645
    8. ' offset' → logprob: -9.310566902160645
    9. ' count' → logprob: -9.560566902160645
    10. ' sub' → logprob: -9.685566902160645

Token 1366: ' ' (ID: 5310)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.5360820889472961
    2. 'table' → logprob: -0.9110820889472961
    3. 'offset' → logprob: -5.0360822677612305
    4. '           ' → logprob: -5.2860822677612305
    5. '[' → logprob: -7.0360822677612305
    6. '[sub' → logprob: -9.16108226776123
    7. '   ' → logprob: -9.53608226776123
    8. '       ' → logprob: -9.91108226776123
    9. '[count' → logprob: -10.03608226776123
    10. ' table' → logprob: -10.16108226776123

Token 1367: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022665897849947214
    2. 'table' → logprob: -6.2522664070129395
    3. '[' → logprob: -8.752266883850098
    4. ' table' → logprob: -9.377266883850098
    5. '[sub' → logprob: -11.002266883850098
    6. ' +=' → logprob: -11.377266883850098
    7. '
' → logprob: -12.252266883850098
    8. ' =' → logprob: -12.252266883850098
    9. '[count' → logprob: -12.377266883850098
    10. '                   ' → logprob: -12.502266883850098

Token 1368: ' cela' (ID: 17542)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.038707561790943146
    2. ' table' → logprob: -3.9137074947357178
    3. '           ' → logprob: -4.038707733154297
    4. '   ' → logprob: -8.788707733154297
    5. 'sub' → logprob: -9.038707733154297
    6. 'np' → logprob: -10.538707733154297
    7. '       ' → logprob: -11.038707733154297
    8. '               ' → logprob: -11.038707733154297
    9. ' sub' → logprob: -12.038707733154297
    10. '                   ' → logprob: -12.038707733154297

Token 1369: ' prépare' (ID: 150142)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.3085823357105255
    2. '[' → logprob: -2.308582305908203
    3. ' +=' → logprob: -2.683582305908203
    4. '           ' → logprob: -3.308582305908203
    5. '+=' → logprob: -3.433582305908203
    6. '=' → logprob: -5.558582305908203
    7. '       ' → logprob: -5.933582305908203
    8. '[...]' → logprob: -5.933582305908203
    9. '#' → logprob: -6.058582305908203
    10. '[pos' → logprob: -6.183582305908203

Token 1370: ' la' (ID: 557)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.011619128286838531
    2. ' table' → logprob: -5.2616190910339355
    3. 'offset' → logprob: -5.5116190910339355
    4. '           ' → logprob: -6.6366190910339355
    5. '   ' → logprob: -8.261619567871094
    6. 'sub' → logprob: -8.386619567871094
    7. 'count' → logprob: -8.636619567871094
    8. '[offset' → logprob: -9.136619567871094
    9. ' offset' → logprob: -9.761619567871094
    10. '       ' → logprob: -10.511619567871094

Token 1371: ' structure' (ID: 8866)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.08595708012580872
    2. ' table' → logprob: -3.3359570503234863
    3. 'offset' → logprob: -3.9609570503234863
    4. 'count' → logprob: -4.710957050323486
    5. 'portion' → logprob: -4.835957050323486
    6. 'sub' → logprob: -6.085957050323486
    7. ' portion' → logprob: -6.585957050323486
    8. '```' → logprob: -6.710957050323486
    9. 'cor' → logprob: -7.085957050323486
    10. 'segment' → logprob: -7.585957050323486

Token 1372: ' pour' (ID: 1930)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.0013959495117887855
    2. 'table' → logprob: -7.001396179199219
    3. '[' → logprob: -8.751396179199219
    4. '           ' → logprob: -9.376396179199219
    5. 'offset' → logprob: -9.376396179199219
    6. '   ' → logprob: -9.626396179199219
    7. '```' → logprob: -10.501396179199219
    8. '       ' → logprob: -10.876396179199219
    9. '               ' → logprob: -11.626396179199219
    10. ' table' → logprob: -12.126396179199219

Token 1373: ' l' (ID: 305)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.04662458971142769
    2. 'table' → logprob: -3.9216246604919434
    3. 'pos' → logprob: -5.046624660491943
    4. 'la' → logprob: -5.171624660491943
    5. 'length' → logprob: -5.671624660491943
    6. 'l' → logprob: -6.046624660491943
    7. '   ' → logprob: -6.671624660491943
    8. 'next' → logprob: -6.921624660491943
    9. ' offset' → logprob: -6.921624660491943
    10. '```' → logprob: -7.046624660491943

Token 1374: '’' (ID: 438)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.2370474636554718
    2. 'next' → logprob: -2.3620474338531494
    3. 'ength' → logprob: -4.1120476722717285
    4. 'pos' → logprob: -4.2370476722717285
    5. ' prochaine' → logprob: -4.2370476722717285
    6. 'e' → logprob: -4.3620476722717285
    7. ' prochain' → logprob: -4.7370476722717285
    8. '```' → logprob: -5.3620476722717285
    9. 'solve' → logprob: -5.3620476722717285
    10. '[offset' → logprob: -5.6120476722717285

Token 1375: 'it' (ID: 278)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7338074445724487
    2. 'next' → logprob: -1.7338074445724487
    3. 'pro' → logprob: -1.8588074445724487
    4. 'offset' → logprob: -2.4838075637817383
    5. 'length' → logprob: -3.8588075637817383
    6. ' prochaine' → logprob: -3.9838075637817383
    7. '```' → logprob: -4.358807563781738
    8. 'long' → logprob: -5.358807563781738
    9. 'suite' → logprob: -5.608807563781738
    10. 'iteration' → logprob: -5.608807563781738

Token 1376: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.017664248123764992
    2. 'er' → logprob: -4.267664432525635
    3. 'érations' → logprob: -6.142664432525635
    4. 'ér' → logprob: -7.267664432525635
    5. 'é' → logprob: -8.267663955688477
    6. 'éra' → logprob: -9.767663955688477
    7. '   ' → logprob: -9.892663955688477
    8. '#' → logprob: -10.017663955688477
    9. 'offset' → logprob: -10.017663955688477
    10. 'éré' → logprob: -10.517663955688477

Token 1377: ' suivante' (ID: 107439)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.23584169149398804
    2. 'table' → logprob: -1.7358417510986328
    3. '           ' → logprob: -3.735841751098633
    4. '[' → logprob: -5.360841751098633
    5. ' table' → logprob: -6.610841751098633
    6. 'offset' → logprob: -6.985841751098633
    7. '       ' → logprob: -7.110841751098633
    8. '[count' → logprob: -7.485841751098633
    9. '[sub' → logprob: -7.735841751098633
    10. '   ' → logprob: -7.985841751098633

Token 1378: '
' (ID: 198)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.045602947473526
    2. '           ' → logprob: -3.170603036880493
    3. ' table' → logprob: -6.045602798461914
    4. '   ' → logprob: -9.170602798461914
    5. '       ' → logprob: -9.670602798461914
    6. '
' → logprob: -11.170602798461914
    7. '```' → logprob: -11.920602798461914
    8. '               ' → logprob: -12.045602798461914
    9. '(table' → logprob: -12.170602798461914
    10. '            
' → logprob: -12.295602798461914

Token 1379: '           ' (ID: 352)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.040120165795087814
    2. '           ' → logprob: -3.2901201248168945
    3. ' table' → logprob: -6.2901201248168945
    4. '   ' → logprob: -9.165120124816895
    5. '```' → logprob: -9.790120124816895
    6. '       ' → logprob: -10.415120124816895
    7. 'offset' → logprob: -11.665120124816895
    8. '               ' → logprob: -11.915120124816895
    9. 'sub' → logprob: -12.165120124816895
    10. '                   ' → logprob: -13.415120124816895

Token 1380: ' table' (ID: 3293)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' (adapté à ' table') → logprob: -0.001340242917649448
    2. '           ' → logprob: -6.876340389251709
    3. ' table' → logprob: -8.12633991241455
    4. '   ' → logprob: -11.87633991241455
    5. '       ' → logprob: -13.37633991241455
    6. 'sub' → logprob: -14.12633991241455
    7. 'offset' → logprob: -14.37633991241455
    8. '	table' → logprob: -14.87633991241455
    9. '               ' → logprob: -15.25133991241455
    10. 'tab' → logprob: -15.50133991241455

Token 1381: '[' (ID: 58)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[offset' → logprob: -1.318681188422488e-05
    2. '[' → logprob: -12.00001335144043
    3. '   ' → logprob: -12.75001335144043
    4. '```' → logprob: -14.12501335144043
    5. 'offset' → logprob: -14.37501335144043
    6. '[
' → logprob: -14.87501335144043
    7. '[...]' → logprob: -15.00001335144043
    8. '[idx' → logprob: -15.12501335144043
    9. '[index' → logprob: -15.25001335144043
    10. '[:' → logprob: -15.50001335144043

Token 1382: 'trans' (ID: 2623)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.0002326224057469517
    2. '[offset' → logprob: -9.000232696533203
    3. ' offset' → logprob: -9.500232696533203
    4. '(offset' → logprob: -10.875232696533203
    5. 'index' → logprob: -12.125232696533203
    6. 'trans' → logprob: -12.750232696533203
    7. '
' → logprob: -13.500232696533203
    8. '1' → logprob: -13.625232696533203
    9. '	offset' → logprob: -14.000232696533203
    10. 'size' → logprob: -14.125232696533203

Token 1383: '_table' (ID: 11721)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.33845311403274536
    2. '(offset' → logprob: -1.8384530544281006
    3. '_' → logprob: -3.2134530544281006
    4. '[length' → logprob: -3.3384530544281006
    5. '[offset' → logprob: -3.9634530544281006
    6. 'length' → logprob: -4.46345329284668
    7. '(size' → logprob: -4.96345329284668
    8. '(pos' → logprob: -5.46345329284668
    9. '_table' → logprob: -6.21345329284668
    10. '_length' → logprob: -6.21345329284668

Token 1384: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1261284351348877
    2. ':]' → logprob: -2.7511284351348877
    3. ']+=' → logprob: -3.0011284351348877
    4. '[' → logprob: -6.626128196716309
    5. ':' → logprob: -7.001128196716309
    6. ' :]' → logprob: -7.126128196716309
    7. ' ]' → logprob: -7.751128196716309
    8. '[:]' → logprob: -8.126128196716309
    9. '[:' → logprob: -8.251128196716309
    10. '+=' → logprob: -8.376128196716309

Token 1385: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01991349644958973
    2. ']+=' → logprob: -4.394913673400879
    3. ' +=' → logprob: -5.269913673400879
    4. ']' → logprob: -6.144913673400879
    5. '=' → logprob: -10.394913673400879
    6. '+' → logprob: -10.894913673400879
    7. ')' → logprob: -11.144913673400879
    8. '[' → logprob: -11.394913673400879
    9. '   ' → logprob: -12.519913673400879
    10. '+=(' → logprob: -12.644913673400879

Token 1386: ' table' (ID: 3293)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.6768628358840942
    2. 'count' → logprob: -1.6768628358840942
    3. 'table' → logprob: -1.6768628358840942
    4. 'np' → logprob: -2.6768627166748047
    5. 'sub' → logprob: -3.1768627166748047
    6. '1' → logprob: -5.301862716674805
    7. 'ret' → logprob: -7.176862716674805
    8. '(trans' → logprob: -7.426862716674805
    9. '(' → logprob: -7.926862716674805
    10. '(np' → logprob: -8.926862716674805

Token 1387: '[offset' (ID: 84200)
  Prédit: '[offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.0014279751339927316
    2. '[' → logprob: -6.626428127288818
    3. '[
' → logprob: -10.37642765045166
    4. 'offset' → logprob: -11.50142765045166
    5. '```' → logprob: -11.75142765045166
    6. '[sub' → logprob: -11.75142765045166
    7. '[(' → logprob: -12.00142765045166
    8. '           ' → logprob: -12.12642765045166
    9. '[np' → logprob: -12.50142765045166
    10. '   ' → logprob: -12.62642765045166

Token 1388: '(length' (ID: 47037)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.001302022603340447
    2. 'pos' → logprob: -6.751302242279053
    3. '(' → logprob: -9.501301765441895
    4. '(length' → logprob: -10.626301765441895
    5. '(rest' → logprob: -11.626301765441895
    6. '_pos' → logprob: -12.126301765441895
    7. '[pos' → logprob: -12.626301765441895
    8. ' pos' → logprob: -13.001301765441895
    9. '(size' → logprob: -13.251301765441895
    10. 'length' → logprob: -13.251301765441895

Token 1389: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013953223824501038
    2. '():' → logprob: -4.76395320892334
    3. ')' → logprob: -5.88895320892334
    4. '()' → logprob: -6.88895320892334
    5. ')+' → logprob: -7.13895320892334
    6. '+' → logprob: -8.01395320892334
    7. ':' → logprob: -9.51395320892334
    8. '   ' → logprob: -9.76395320892334
    9. '()+' → logprob: -9.88895320892334
    10. '):(' → logprob: -10.01395320892334

Token 1390: 'offset' (ID: 6680)
  Prédit: 'offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -2.6895233531831764e-05
    2. ' offset' → logprob: -10.87502670288086
    3. '(offset' → logprob: -12.25002670288086
    4. '[offset' → logprob: -12.87502670288086
    5. '	offset' → logprob: -15.12502670288086
    6. '
' → logprob: -16.00002670288086
    7. '.offset' → logprob: -16.87502670288086
    8. '```' → logprob: -17.25002670288086
    9. '               ' → logprob: -18.62502670288086
    10. '-offset' → logprob: -18.87502670288086

Token 1391: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.0035244061145931482
    2. 'length' → logprob: -5.753524303436279
    3. '(offset' → logprob: -8.003524780273438
    4. 'offset' → logprob: -11.878524780273438
    5. '(pos' → logprob: -13.378524780273438
    6. '(' → logprob: -13.503524780273438
    7. ' length' → logprob: -14.003524780273438
    8. '[length' → logprob: -14.253524780273438
    9. ':length' → logprob: -15.503524780273438
    10. 'pos' → logprob: -15.503524780273438

Token 1392: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03879563510417938
    2. ' +' → logprob: -3.4137957096099854
    3. '(' → logprob: -5.913795471191406
    4. '(length' → logprob: -6.288795471191406
    5. '()+' → logprob: -7.788795471191406
    6. '   ' → logprob: -9.413795471191406
    7. '()' → logprob: -10.038795471191406
    8. 'length' → logprob: -11.663795471191406
    9. ' ' → logprob: -12.038795471191406
    10. ':length' → logprob: -12.663795471191406

Token 1393: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.383526149671525e-05
    2. ' ' → logprob: -9.875053405761719
    3. '```' → logprob: -14.437553405761719
    4. '   ' → logprob: -14.687553405761719
    5. '2' → logprob: -15.187553405761719
    6. ')' → logprob: -15.562553405761719
    7. '
' → logprob: -15.875053405761719
    8. '+' → logprob: -16.18755340576172
    9. '(' → logprob: -16.31255340576172
    10. '１' → logprob: -16.93755340576172

Token 1394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013560164370574057
    2. '2' → logprob: -9.12513542175293
    3. ' ' → logprob: -10.87513542175293
    4. '```' → logprob: -13.56263542175293
    5. '   ' → logprob: -13.62513542175293
    6. '+' → logprob: -14.18763542175293
    7. '
' → logprob: -14.25013542175293
    8. '(' → logprob: -14.62513542175293
    9. '۱' → logprob: -14.75013542175293
    10. '１' → logprob: -15.00013542175293

Token 1395: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0505252480506897
    2. ')]' → logprob: -3.050525188446045
    3. '])' → logprob: -6.800525188446045
    4. ']+' → logprob: -7.675525188446045
    5. '()]' → logprob: -8.675525665283203
    6. ']]' → logprob: -9.925525665283203
    7. '])]' → logprob: -10.050525665283203
    8. ']
' → logprob: -10.425525665283203
    9. ')' → logprob: -10.925525665283203
    10. ' ]' → logprob: -11.550525665283203

Token 1396: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1397: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1398: ' La' (ID: 3038)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10088498145341873
    2. '   ' → logprob: -2.3508849143981934
    3. ' return' → logprob: -7.350884914398193
    4. '	return' → logprob: -10.600885391235352
    5. 'if' → logprob: -11.725885391235352
    6. '```' → logprob: -13.975885391235352
    7. 'print' → logprob: -14.225885391235352
    8. ':return' → logprob: -14.975885391235352
    9. '       ' → logprob: -15.100885391235352
    10. '    ' → logprob: -15.725885391235352

Token 1399: ' fonction' (ID: 17610)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02997390180826187
    2. ' return' → logprob: -3.5299739837646484
    3. '   ' → logprob: -8.779973983764648
    4. 'ret' → logprob: -10.654973983764648
    5. '```' → logprob: -11.279973983764648
    6. '#' → logprob: -11.654973983764648
    7. ')' → logprob: -12.654973983764648
    8. 'eturn' → logprob: -12.654973983764648
    9. 'def' → logprob: -12.904973983764648
    10. 'r' → logprob: -12.904973983764648

Token 1400: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6381390690803528
    2. ' return' → logprob: -1.013139009475708
    3. '   ' → logprob: -2.763139009475708
    4. '<|end|>' → logprob: -3.763139009475708
    5. ':return' → logprob: -4.388139247894287
    6. '	return' → logprob: -5.888139247894287
    7. '```' → logprob: -6.013139247894287
    8. ' ' → logprob: -7.013139247894287
    9. '_return' → logprob: -7.513139247894287
    10. '<|end|>' → logprob: -7.888139247894287

Token 1401: ' la' (ID: 557)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -1.700132997939363e-05
    2. ' ret' → logprob: -11.625017166137695
    3. '   ' → logprob: -12.000017166137695
    4. 'return' → logprob: -13.250017166137695
    5. 're' → logprob: -17.000017166137695
    6. '	ret' → logprob: -17.000017166137695
    7. 'rets' → logprob: -18.875017166137695
    8. '(ret' → logprob: -19.500017166137695
    9. '```' → logprob: -19.500017166137695
    10. '$ret' → logprob: -20.000017166137695

Token 1402: ' dernière' (ID: 39497)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0005344442906789482
    2. 'return' → logprob: -7.875534534454346
    3. '   ' → logprob: -9.125534057617188
    4. ' ret' → logprob: -10.875534057617188
    5. 'table' → logprob: -11.125534057617188
    6. 'tuple' → logprob: -13.000534057617188
    7. '
' → logprob: -13.125534057617188
    8. '       ' → logprob: -13.875534057617188
    9. '(ret' → logprob: -14.000534057617188
    10. 't' → logprob: -14.000534057617188

Token 1403: ' réponse' (ID: 50332)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -4.060365608893335e-05
    2. 'valid' → logprob: -11.375041007995605
    3. '   ' → logprob: -11.500041007995605
    4. ' ret' → logprob: -11.750041007995605
    5. 'return' → logprob: -12.000041007995605
    6. '```' → logprob: -12.375041007995605
    7. '	ret' → logprob: -15.625041007995605
    8. '(ret' → logprob: -15.750041007995605
    9. '    
' → logprob: -16.37504005432129
    10. ' valid' → logprob: -16.62504005432129

Token 1404: ' valide' (ID: 137323)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.40768924355506897
    2. 'ret' → logprob: -1.4076892137527466
    3. '   ' → logprob: -2.407689332962036
    4. '```' → logprob: -10.282689094543457
    5. '    
' → logprob: -10.782689094543457
    6. ' return' → logprob: -10.782689094543457
    7. '
' → logprob: -12.282689094543457
    8. ' ret' → logprob: -14.157689094543457
    9. ':return' → logprob: -15.407689094543457
    10. '	ret' → logprob: -15.532689094543457

Token 1405: ' trouv' (ID: 40254)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0505538135766983
    2. '   ' → logprob: -3.050553798675537
    3. 'ret' → logprob: -6.300553798675537
    4. ' return' → logprob: -9.300554275512695
    5. '    
' → logprob: -11.050554275512695
    6. '```' → logprob: -11.425554275512695
    7. '
' → logprob: -12.175554275512695
    8. '	return' → logprob: -12.550554275512695
    9. ')return' → logprob: -14.050554275512695
    10. ':return' → logprob: -14.925554275512695

Token 1406: 'ée' (ID: 2894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1805219650268555
    2. 'return' → logprob: -1.1805219650268555
    3. 'ue' → logprob: -1.9305219650268555
    4. 'u' → logprob: -1.9305219650268555
    5. 'ret' → logprob: -2.5555219650268555
    6. 'e' → logprob: -5.5555219650268555
    7. 'ur' → logprob: -5.9305219650268555
    8. 'eturn' → logprob: -6.3055219650268555
    9. 'é' → logprob: -6.5555219650268555
    10. 'urn' → logprob: -6.5555219650268555

Token 1407: ' (' (ID: 350)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3148692846298218
    2. '   ' → logprob: -1.3148692846298218
    3. 'ret' → logprob: -6.689869403839111
    4. ' return' → logprob: -8.814868927001953
    5. '```' → logprob: -8.939868927001953
    6. '
' → logprob: -9.814868927001953
    7. '    
' → logprob: -11.064868927001953
    8. '	return' → logprob: -12.564868927001953
    9. ':return' → logprob: -12.814868927001953
    10. ')return' → logprob: -12.939868927001953

Token 1408: 'index' (ID: 2257)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0011075903894379735
    2. '   ' → logprob: -7.001107692718506
    3. 'return' → logprob: -9.001107215881348
    4. ' ret' → logprob: -10.251107215881348
    5. ')' → logprob: -10.376107215881348
    6. '```' → logprob: -12.501107215881348
    7. ')
' → logprob: -13.251107215881348
    8. '	ret' → logprob: -14.876107215881348
    9. '(ret' → logprob: -15.501107215881348
    10. '    
' → logprob: -16.626108169555664

Token 1409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016264621168375015
    2. ')' → logprob: -4.26626443862915
    3. '   ' → logprob: -6.51626443862915
    4. '[' → logprob: -8.516264915466309
    5. ' if' → logprob: -9.016264915466309
    6. ',)' → logprob: -9.016264915466309
    7. ')
' → logprob: -9.641264915466309
    8. ' ,' → logprob: -10.516264915466309
    9. 'if' → logprob: -11.391264915466309
    10. 'return' → logprob: -11.891264915466309

Token 1410: ' longueur' (ID: 104613)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.20183536410331726
    2. ' pos' → logprob: -1.7018353939056396
    3. 'length' → logprob: -8.576835632324219
    4. ' length' → logprob: -9.076835632324219
    5. '   ' → logprob: -9.451835632324219
    6. ' ' → logprob: -11.201835632324219
    7. ')' → logprob: -11.451835632324219
    8. 'len' → logprob: -13.076835632324219
    9. 'ret' → logprob: -13.076835632324219
    10. '    ' → logprob: -13.326835632324219

Token 1411: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03956228867173195
    2. '   ' → logprob: -3.289562225341797
    3. '+' → logprob: -7.539562225341797
    4. ')
' → logprob: -7.664562225341797
    5. ']' → logprob: -8.414562225341797
    6. ' +' → logprob: -9.164562225341797
    7. 'return' → logprob: -9.664562225341797
    8. ')return' → logprob: -10.164562225341797
    9. '       ' → logprob: -11.164562225341797
    10. ')]' → logprob: -11.289562225341797

Token 1412: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13650968670845032
    2. '   ' → logprob: -2.136509656906128
    3. 'ret' → logprob: -5.261509895324707
    4. '```' → logprob: -6.386509895324707
    5. '
' → logprob: -6.886509895324707
    6. '    
' → logprob: -7.011509895324707
    7. ' return' → logprob: -7.386509895324707
    8. '\n' → logprob: -11.136509895324707
    9. '``' → logprob: -11.136509895324707
    10. ':return' → logprob: -11.136509895324707

Token 1413: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.026850081980228424
    2. '   ' → logprob: -4.02685022354126
    3. 'ret' → logprob: -4.77685022354126
    4. '```' → logprob: -8.776849746704102
    5. ' return' → logprob: -9.651849746704102
    6. '    
' → logprob: -11.026849746704102
    7. '
' → logprob: -13.276849746704102
    8. '``' → logprob: -13.651849746704102
    9. '	return' → logprob: -14.401849746704102
    10. '`' → logprob: -15.151849746704102

Token 1414: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.001170225441455841
    2. ' ret' → logprob: -6.7511701583862305
    3. '	ret' → logprob: -19.126171112060547
    4. '(ret' → logprob: -19.501171112060547
    5. '   ' → logprob: -21.126171112060547
    6. 'rets' → logprob: -21.251171112060547
    7. '$ret' → logprob: -21.376171112060547
    8. 're' → logprob: -21.876171112060547
    9. '_ret' → logprob: -23.126171112060547
    10. 'retval' → logprob: -23.376171112060547

Token 1415: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1416: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1417: ' App' (ID: 2583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1418: 'el' (ID: 296)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.8714495301246643
    2. 'ly' → logprob: -1.3714494705200195
    3. 'en' → logprob: -1.9964494705200195
    4. 'e' → logprob: -3.2464494705200195
    5. 'el' → logprob: -3.2464494705200195
    6. '```' → logprob: -3.9964494705200195
    7. 'r' → logprob: -4.2464494705200195
    8. 'ent' → logprob: -4.3714494705200195
    9. 'if' → logprob: -4.4964494705200195
    10. 'le' → logprob: -4.6214494705200195

Token 1419: ' de' (ID: 334)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.08707331866025925
    2. '()' → logprob: -2.58707332611084
    3. 'if' → logprob: -5.08707332611084
    4. '(s' → logprob: -7.21207332611084
    5. '()
' → logprob: -7.33707332611084
    6. '```' → logprob: -8.83707332611084
    7. 'print' → logprob: -9.71207332611084
    8. 's' → logprob: -9.71207332611084
    9. '()`' → logprob: -10.08707332611084
    10. ' solve' → logprob: -10.08707332611084

Token 1420: ' la' (ID: 557)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -4.723352049040841e-06
    2. ' solve' → logprob: -12.625004768371582
    3. '```' → logprob: -14.750004768371582
    4. 'main' → logprob: -14.875004768371582
    5. '(s' → logprob: -15.125004768371582
    6. '__' → logprob: -15.875004768371582
    7. 'if' → logprob: -16.000003814697266
    8. 'resolve' → logprob: -16.875003814697266
    9. '.solve' → logprob: -17.625003814697266
    10. 'def' → logprob: -17.625003814697266

Token 1421: ' fonction' (ID: 17610)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.012875007465481758
    2. 'if' → logprob: -4.512875080108643
    3. '```' → logprob: -6.887875080108643
    4. ' solve' → logprob: -7.887875080108643
    5. '__' → logprob: -8.137874603271484
    6. 'main' → logprob: -10.012874603271484
    7. 'def' → logprob: -10.637874603271484
    8. '(s' → logprob: -11.012874603271484
    9. ' if' → logprob: -11.262874603271484
    10. 's' → logprob: -12.262874603271484

Token 1422: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0009205120149999857
    2. '()' → logprob: -7.375920295715332
    3. '```' → logprob: -8.875920295715332
    4. '()
' → logprob: -9.750920295715332
    5. 'if' → logprob: -9.875920295715332
    6. 'print' → logprob: -10.750920295715332
    7. '(
' → logprob: -12.125920295715332
    8. '()`' → logprob: -12.500920295715332
    9. '(s' → logprob: -12.875920295715332
    10. '.solve' → logprob: -13.375920295715332

Token 1423: ' ' (ID: 5310)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0808885246515274
    2. '()' → logprob: -2.580888509750366
    3. '()
' → logprob: -6.455888748168945
    4. '```' → logprob: -8.830888748168945
    5. '(
' → logprob: -9.580888748168945
    6. '()`' → logprob: -9.955888748168945
    7. '(' → logprob: -10.080888748168945
    8. '.solve' → logprob: -10.705888748168945
    9. 'print' → logprob: -10.955888748168945
    10. ' solve' → logprob: -11.205888748168945

Token 1424: ':' (ID: 25)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7451001405715942
    2. 'solve' → logprob: -0.7451001405715942
    3. '()
' → logprob: -2.9951000213623047
    4. '```' → logprob: -8.870100021362305
    5. '()`' → logprob: -9.120100021362305
    6. '(
' → logprob: -9.620100021362305
    7. '
' → logprob: -9.745100021362305
    8. '()

' → logprob: -9.995100021362305
    9. '()\' → logprob: -9.995100021362305
    10. '();' → logprob: -10.620100021362305

Token 1425: ' retourne' (ID: 178818)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13194945454597473
    2. 'solve' → logprob: -2.1319494247436523
    3. 'result' → logprob: -5.506949424743652
    4. 'if' → logprob: -7.256949424743652
    5. 'ret' → logprob: -8.631949424743652
    6. '```' → logprob: -9.881949424743652
    7. 'solution' → logprob: -12.131949424743652
    8. ' solve' → logprob: -12.381949424743652
    9. 'answer' → logprob: -13.256949424743652
    10. 'res' → logprob: -13.881949424743652

Token 1426: ' un' (ID: 537)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0037638552021235228
    2. 'print' → logprob: -6.378763675689697
    3. ' solve' → logprob: -7.003763675689697
    4. 'ret' → logprob: -7.128763675689697
    5. 'result' → logprob: -8.003764152526855
    6. 'offset' → logprob: -12.378764152526855
    7. '```' → logprob: -12.753764152526855
    8. ' ret' → logprob: -13.253764152526855
    9. 'res' → logprob: -13.503764152526855
    10. '()' → logprob: -14.003764152526855

Token 1427: ' tuple' (ID: 31311)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.40240415930747986
    2. 'tuple' → logprob: -1.4024041891098022
    3. 'ret' → logprob: -3.2774040699005127
    4. 'print' → logprob: -3.6524040699005127
    5. 'value' → logprob: -6.027404308319092
    6. ')' → logprob: -6.152404308319092
    7. 'solution' → logprob: -6.402404308319092
    8. ' tuple' → logprob: -6.402404308319092
    9. 't' → logprob: -6.527404308319092
    10. '()' → logprob: -6.527404308319092

Token 1428: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00023882099776528776
    2. '()
' → logprob: -8.875238418579102
    3. 'solve' → logprob: -10.125238418579102
    4. '_' → logprob: -11.250238418579102
    5. '(' → logprob: -11.625238418579102
    6. '[]' → logprob: -11.750238418579102
    7. '()

' → logprob: -12.000238418579102
    8. '()[' → logprob: -12.250238418579102
    9. '()]' → logprob: -12.500238418579102
    10. '=' → logprob: -13.000238418579102

Token 1429: 'index' (ID: 2257)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.7570158243179321
    2. ')' → logprob: -0.8820158243179321
    3. 'offset' → logprob: -2.6320157051086426
    4. 'index' → logprob: -3.2570157051086426
    5. 'result' → logprob: -6.257015705108643
    6. 'ret' → logprob: -7.382015705108643
    7. '0' → logprob: -7.382015705108643
    8. 'int' → logprob: -8.1320161819458
    9. '```' → logprob: -8.1320161819458
    10. '()' → logprob: -8.2570161819458

Token 1430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021390743495430797
    2. ',)' → logprob: -9.375213623046875
    3. ')' → logprob: -9.500213623046875
    4. ',
' → logprob: -10.375213623046875
    5. ' ,' → logprob: -11.500213623046875
    6. '[' → logprob: -12.125213623046875
    7. ',

' → logprob: -13.375213623046875
    8. ',index' → logprob: -14.000213623046875
    9. '   ' → logprob: -14.250213623046875
    10. '(' → logprob: -14.375213623046875

Token 1431: ' longueur' (ID: 104613)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.318170964717865
    2. ' length' → logprob: -1.8181710243225098
    3. 'pos' → logprob: -2.3181710243225098
    4. ' pos' → logprob: -5.44317102432251
    5. ' longueur' → logprob: -5.56817102432251
    6. 'offset' → logprob: -6.69317102432251
    7. 'long' → logprob: -6.81817102432251
    8. 'position' → logprob: -7.31817102432251
    9. ' offset' → logprob: -9.068170547485352
    10. 'len' → logprob: -9.193170547485352

Token 1432: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22385446727275848
    2. '())' → logprob: -1.723854422569275
    3. '()' → logprob: -3.9738545417785645
    4. ')
' → logprob: -6.4738545417785645
    5. '())
' → logprob: -6.8488545417785645
    6. '()
' → logprob: -7.8488545417785645
    7. '   ' → logprob: -8.973854064941406
    8. ',' → logprob: -9.348854064941406
    9. '(),' → logprob: -9.723854064941406
    10. ')

' → logprob: -10.973854064941406

Token 1433: 'index' (ID: 2257)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25883254408836365
    2. 'result' → logprob: -1.758832573890686
    3. 'solve' → logprob: -3.2588324546813965
    4. 'ret' → logprob: -4.5088324546813965
    5. 'if' → logprob: -5.6338324546813965
    6. 'res' → logprob: -6.7588324546813965
    7. 'answer' → logprob: -7.6338324546813965
    8. 'solution' → logprob: -8.133832931518555
    9. '```' → logprob: -8.383832931518555
    10. '(result' → logprob: -8.508832931518555

Token 1434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006002153968438506
    2. '<|end|>' → logprob: -8.25059986114502
    3. ',index' → logprob: -9.25059986114502
    4. ')' → logprob: -9.37559986114502
    5. '[' → logprob: -10.00059986114502
    6. '(' → logprob: -10.75059986114502
    7. ',
' → logprob: -10.87559986114502
    8. ',pos' → logprob: -11.25059986114502
    9. ' ,' → logprob: -11.37559986114502
    10. '```' → logprob: -11.75059986114502

Token 1435: ' length' (ID: 5517)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6694720983505249
    2. 'length' → logprob: -0.7944720983505249
    3. ' length' → logprob: -3.7944722175598145
    4. ' pos' → logprob: -4.2944722175598145
    5. 'position' → logprob: -11.044471740722656
    6. 'size' → logprob: -11.419471740722656
    7. 'max' → logprob: -11.794471740722656
    8. 'offset' → logprob: -11.919471740722656
    9. 'leng' → logprob: -12.669471740722656
    10. 'k' → logprob: -12.794471740722656

Token 1436: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05488589033484459
    2. ' =' → logprob: -2.9298858642578125
    3. ',' → logprob: -12.929885864257812
    4. '=sys' → logprob: -14.929885864257812
    5. '=
' → logprob: -15.054885864257812
    6. '=s' → logprob: -15.429885864257812
    7. ')' → logprob: -15.679885864257812
    8. '=index' → logprob: -16.679885864257812
    9. ')=' → logprob: -17.179885864257812
    10. ' =
' → logprob: -17.304885864257812

Token 1437: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.00012356207298580557
    2. ' solve' → logprob: -9.000123977661133
    3. 'resolve' → logprob: -18.125123977661133
    4. '.solve' → logprob: -18.875123977661133
    5. 'sol' → logprob: -19.125123977661133
    6. 'solver' → logprob: -19.250123977661133
    7. 'solution' → logprob: -19.500123977661133
    8. 'ret' → logprob: -20.000123977661133
    9. '```' → logprob: -20.125123977661133
    10. 'offset' → logprob: -20.125123977661133

Token 1438: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1439: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.162016361951828
    2. 'if' → logprob: -2.0370163917541504
    3. '
' → logprob: -4.41201639175415
    4. '<|end|>' → logprob: -5.41201639175415
    5. ' if' → logprob: -7.03701639175415
    6. '```' → logprob: -7.16201639175415
    7. '#' → logprob: -7.66201639175415
    8. '   ' → logprob: -9.787015914916992
    9. '[' → logprob: -10.287015914916992
    10. 'assert' → logprob: -10.287015914916992

Token 1440: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009168167016468942
    2. 'if' → logprob: -7.000916957855225
    3. 'for' → logprob: -12.875916481018066
    4. 'pr' → logprob: -13.250916481018066
    5. '#' → logprob: -14.875916481018066
    6. ' print' → logprob: -15.000916481018066
    7. '```' → logprob: -15.625916481018066
    8. '#print' → logprob: -16.500917434692383
    9. ' if' → logprob: -16.875917434692383
    10. 'prin' → logprob: -16.875917434692383

Token 1441: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.5671815872192383
    2. 'icher' → logprob: -1.3171815872192383
    3. 'ich' → logprob: -1.8171815872192383
    4. 'ichage' → logprob: -6.192181587219238
    5. '#' → logprob: -8.192181587219238
    6. '```' → logprob: -10.317181587219238
    7. 'print' → logprob: -10.442181587219238
    8. 'ic' → logprob: -10.442181587219238
    9. 'ect' → logprob: -11.442181587219238
    10. '   ' → logprob: -11.442181587219238

Token 1442: ',' (ID: 11)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.010268903337419033
    2. '(f' → logprob: -4.760268688201904
    3. 'index' → logprob: -6.635268688201904
    4. 'f' → logprob: -8.885269165039062
    5. 'print' → logprob: -8.885269165039062
    6. '(' → logprob: -10.260269165039062
    7. '(*' → logprob: -11.385269165039062
    8. '((' → logprob: -11.885269165039062
    9. '(print' → logprob: -13.260269165039062
    10. '("{}' → logprob: -13.510269165039062

Token 1443: ' sous' (ID: 14487)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6295796036720276
    2. 'f' → logprob: -0.8795796036720276
    3. ' f' → logprob: -3.504579544067383
    4. 'print' → logprob: -4.129579544067383
    5. ' index' → logprob: -5.504579544067383
    6. '(index' → logprob: -6.754579544067383
    7. '(f' → logprob: -8.004579544067383
    8. 'sys' → logprob: -9.004579544067383
    9. '"' → logprob: -9.129579544067383
    10. 'end' → logprob: -9.504579544067383

Token 1444: ' forme' (ID: 27450)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.23138250410556793
    2. 'print' → logprob: -2.3563826084136963
    3. '(' → logprob: -2.9813826084136963
    4. 'format' → logprob: -4.731382369995117
    5. 'form' → logprob: -5.106382369995117
    6. '```' → logprob: -5.231382369995117
    7. '(
' → logprob: -5.481382369995117
    8. '("")' → logprob: -5.731382369995117
    9. ')' → logprob: -5.856382369995117
    10. '   ' → logprob: -5.981382369995117

Token 1445: ' b' (ID: 287)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7232560515403748
    2. '(f' → logprob: -0.9732560515403748
    3. '(
' → logprob: -2.8482561111450195
    4. 'f' → logprob: -3.4732561111450195
    5. '("' → logprob: -4.7232561111450195
    6. 'print' → logprob: -4.7232561111450195
    7. '(index' → logprob: -5.2232561111450195
    8. '(format' → logprob: -5.3482561111450195
    9. '(chr' → logprob: -5.4732561111450195
    10. '("{' → logprob: -5.7232561111450195

Token 1446: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16182656586170197
    2. '"' → logprob: -2.9118266105651855
    3. '""' → logprob: -3.0368266105651855
    4. 'inaire' → logprob: -3.4118266105651855
    5. 'inary' → logprob: -4.5368266105651855
    6. '"",' → logprob: -7.0368266105651855
    7. 'y' → logprob: -7.5368266105651855
    8. '"\' → logprob: -8.286826133728027
    9. '"in' → logprob: -8.411826133728027
    10. '"#' → logprob: -8.661826133728027

Token 1447: ',' (ID: 11)
  Prédit: '(bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bin' → logprob: -0.05267159268260002
    2. 'bin' → logprob: -4.052671432495117
    3. '(f' → logprob: -4.677671432495117
    4. '(' → logprob: -4.802671432495117
    5. 'print' → logprob: -4.927671432495117
    6. '(format' → logprob: -5.927671432495117
    7. '(index' → logprob: -6.677671432495117
    8. ',' → logprob: -7.177671432495117
    9. '("{' → logprob: -7.177671432495117
    10. ' (' → logprob: -7.302671432495117

Token 1448: ' le' (ID: 505)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.00395551323890686
    2. 'print' → logprob: -6.003955364227295
    3. 'format' → logprob: -7.503955364227295
    4. ' bin' → logprob: -7.628955364227295
    5. 'f' → logprob: -8.003955841064453
    6. '(bin' → logprob: -9.253955841064453
    7. 'index' → logprob: -11.628955841064453
    8. '(f' → logprob: -14.628955841064453
    9. 'b' → logprob: -14.753955841064453
    10. '   ' → logprob: -14.878955841064453

Token 1449: ' motif' (ID: 72753)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.05006011947989464
    2. 'format' → logprob: -3.0500600337982178
    3. 'f' → logprob: -6.925060272216797
    4. 'index' → logprob: -8.175060272216797
    5. 'print' → logprob: -9.050060272216797
    6. '(bin' → logprob: -9.925060272216797
    7. ' bin' → logprob: -10.550060272216797
    8. ' format' → logprob: -12.050060272216797
    9. '(format' → logprob: -13.050060272216797
    10. '"{' → logprob: -13.550060272216797

Token 1450: ' trouvé' (ID: 60081)
  Prédit: '(bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bin' → logprob: -0.39977914094924927
    2. 'bin' → logprob: -1.3997790813446045
    3. 'print' → logprob: -4.149779319763184
    4. '(format' → logprob: -4.649779319763184
    5. '(' → logprob: -4.774779319763184
    6. '(index' → logprob: -4.899779319763184
    7. '(f' → logprob: -5.149779319763184
    8. '{' → logprob: -5.399779319763184
    9. 'format' → logprob: -5.399779319763184
    10. '[index' → logprob: -5.399779319763184

Token 1451: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03644733503460884
    2. 'bin' → logprob: -3.536447286605835
    3. '(bin' → logprob: -6.161447525024414
    4. '```' → logprob: -6.411447525024414
    5. ')
' → logprob: -7.661447525024414
    6. '(' → logprob: -7.911447525024414
    7. ',' → logprob: -7.911447525024414
    8. ')' → logprob: -8.036447525024414
    9. '   ' → logprob: -8.411447525024414
    10. 'if' → logprob: -8.786447525024414

Token 1452: ' la' (ID: 557)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.079541563987732
    2. 'bin' → logprob: -1.204541563987732
    3. 'offset' → logprob: -1.954541563987732
    4. 'print' → logprob: -2.7045416831970215
    5. 'index' → logprob: -2.9545416831970215
    6. 'format' → logprob: -3.3295416831970215
    7. 'f' → logprob: -3.9545416831970215
    8. '1' → logprob: -4.5795416831970215
    9. ' bin' → logprob: -4.8295416831970215
    10. ' length' → logprob: -5.4545416831970215

Token 1453: ' bonne' (ID: 24450)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.058991774916648865
    2. 'offset' → logprob: -3.0589916706085205
    3. '0' → logprob: -4.9339919090271
    4. ' length' → logprob: -7.1839919090271
    5. 'index' → logprob: -7.4339919090271
    6. 'print' → logprob: -7.9339919090271
    7. 'pos' → logprob: -8.683991432189941
    8. '1' → logprob: -8.683991432189941
    9. 'bin' → logprob: -8.808991432189941
    10. 'binary' → logprob: -8.808991432189941

Token 1454: ' longueur' (ID: 104613)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2714172899723053
    2. 'size' → logprob: -3.0214173793792725
    3. '1' → logprob: -3.2714173793792725
    4. 'format' → logprob: -3.7714173793792725
    5. '```' → logprob: -3.7714173793792725
    6. 'print' → logprob: -3.8964173793792725
    7. '``' → logprob: -4.146417140960693
    8. ')
' → logprob: -4.396417140960693
    9. 'long' → logprob: -4.521417140960693
    10. ')' → logprob: -4.646417140960693

Token 1455: ' :
' (ID: 10039)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10394500195980072
    2. ')
' → logprob: -3.353945016860962
    3. ',' → logprob: -3.853945016860962
    4. '
' → logprob: -4.353944778442383
    5. ')' → logprob: -4.728944778442383
    6. 'bin' → logprob: -5.353944778442383
    7. '```' → logprob: -5.603944778442383
    8. '[' → logprob: -5.853944778442383
    9. ' print' → logprob: -6.103944778442383
    10. '   ' → logprob: -6.353944778442383

Token 1456: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.125
    3. 'sys' → logprob: -17.875
    4. '```' → logprob: -19.625
    5. 'bin' → logprob: -20.625
    6. 'for' → logprob: -20.625
    7. '   ' → logprob: -21.375
    8. 'np' → logprob: -21.5
    9. 'if' → logprob: -22.0
    10. 'import' → logprob: -22.375

Token 1457: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003404687449801713
    2. ' print' → logprob: -8.000340461730957
    3. '```' → logprob: -12.625340461730957
    4. 'for' → logprob: -13.375340461730957
    5. 'if' → logprob: -15.875340461730957
    6. 'sys' → logprob: -17.000341415405273
    7. 'pr' → logprob: -17.500341415405273
    8. ' for' → logprob: -17.625341415405273
    9. '   ' → logprob: -18.500341415405273
    10. 'np' → logprob: -18.750341415405273

Token 1458: ' format' (ID: 6011)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000609867216553539
    2. ' print' → logprob: -7.750609874725342
    3. 'if' → logprob: -8.875609397888184
    4. 'bin' → logprob: -10.750609397888184
    5. 'format' → logprob: -12.375609397888184
    6. 'for' → logprob: -12.750609397888184
    7. '```' → logprob: -12.875609397888184
    8. ' if' → logprob: -13.250609397888184
    9. 'pattern' → logprob: -13.625609397888184
    10. '   ' → logprob: -13.625609397888184

Token 1459: '(index' (ID: 13517)
  Prédit: '(index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.16427011787891388
    2. '(' → logprob: -2.5392701625823975
    3. '(bin' → logprob: -3.5392701625823975
    4. '(f' → logprob: -3.6642701625823975
    5. '((' → logprob: -4.289269924163818
    6. '(length' → logprob: -6.164269924163818
    7. '(format' → logprob: -7.164269924163818
    8. '(binary' → logprob: -7.539269924163818
    9. 'bin' → logprob: -9.164270401000977
    10. '(bit' → logprob: -9.289270401000977

Token 1460: ',' (ID: 11)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.7970399856567383
    2. '(f' → logprob: -1.2970399856567383
    3. '(index' → logprob: -1.9220399856567383
    4. ',' → logprob: -2.2970399856567383
    5. '(' → logprob: -4.297039985656738
    6. '(bin' → logprob: -5.047039985656738
    7. '(len' → logprob: -6.297039985656738
    8. '(binary' → logprob: -6.297039985656738
    9. '(bit' → logprob: -7.172039985656738
    10. ')' → logprob: -7.172039985656738

Token 1461: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28122925758361816
    2. 'f' → logprob: -2.406229257583618
    3. 'length' → logprob: -2.656229257583618
    4. ''f' → logprob: -3.281229257583618
    5. ''b' → logprob: -3.531229257583618
    6. '"' → logprob: -4.656229019165039
    7. ' '' → logprob: -5.406229019165039
    8. 'b' → logprob: -6.406229019165039
    9. ' f' → logprob: -6.656229019165039
    10. ' length' → logprob: -7.781229019165039

Token 1462: '020' (ID: 19164)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4274049997329712
    2. ''' → logprob: -2.0524048805236816
    3. '0' → logprob: -2.5524048805236816
    4. '"' → logprob: -2.5524048805236816
    5. ''b' → logprob: -3.1774048805236816
    6. 'f' → logprob: -4.177404880523682
    7. '{' → logprob: -5.802404880523682
    8. '{}' → logprob: -6.052404880523682
    9. ' f' → logprob: -7.927404880523682
    10. ''f' → logprob: -8.55240535736084

Token 1463: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.625
    3. ' b' → logprob: -16.875
    4. '
' → logprob: -17.625
    5. ''b' → logprob: -19.625
    6. 'bit' → logprob: -20.125
    7. '"' → logprob: -20.5
    8. '```' → logprob: -20.5
    9. 'binary' → logprob: -21.25
    10. ')b' → logprob: -21.25

Token 1464: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.06721648573875427
    2. ')' → logprob: -3.692216396331787
    3. ')")' → logprob: -4.192216396331787
    4. '").' → logprob: -4.817216396331787
    5. '}")' → logprob: -5.317216396331787
    6. '")[' → logprob: -5.442216396331787
    7. '"))' → logprob: -6.067216396331787
    8. '{' → logprob: -6.567216396331787
    9. ')[' → logprob: -6.817216396331787
    10. '}' → logprob: -7.192216396331787

Token 1465: ' convert' (ID: 8452)
  Prédit: '[index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.02911895513534546
    2. ')' → logprob: -4.52911901473999
    3. '[:' → logprob: -5.15411901473999
    4. '[' → logprob: -5.27911901473999
    5. ')[' → logprob: -5.65411901473999
    6. '[-' → logprob: -6.52911901473999
    7. '[length' → logprob: -7.65411901473999
    8. '[::-' → logprob: -7.90411901473999
    9. '```' → logprob: -8.154118537902832
    10. '[(' → logprob: -8.904118537902832

Token 1466: 'it' (ID: 278)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.015242435038089752
    2. '=index' → logprob: -4.390242576599121
    3. ')' → logprob: -6.265242576599121
    4. 'ation' → logprob: -7.765242576599121
    5. ',index' → logprob: -9.015242576599121
    6. 'format' → logprob: -10.015242576599121
    7. '=format' → logprob: -10.015242576599121
    8. '(format' → logprob: -10.140242576599121
    9. '=' → logprob: -10.265242576599121
    10. 'index' → logprob: -10.640242576599121

Token 1467: ' index' (ID: 3472)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.0555875301361084
    2. 'index' → logprob: -2.9305875301361084
    3. ')' → logprob: -7.4305877685546875
    4. '[index' → logprob: -10.930587768554688
    5. 'bin' → logprob: -11.430587768554688
    6. ',index' → logprob: -11.430587768554688
    7. 'ret' → logprob: -11.430587768554688
    8. '(' → logprob: -11.555587768554688
    9. ' index' → logprob: -11.555587768554688
    10. '#index' → logprob: -11.555587768554688

Token 1468: ' en' (ID: 469)
  Prédit: '[index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.8395085334777832
    2. ',' → logprob: -0.9645085334777832
    3. '[length' → logprob: -2.589508533477783
    4. ')[' → logprob: -3.089508533477783
    5. '(index' → logprob: -3.839508533477783
    6. ')' → logprob: -3.964508533477783
    7. ',index' → logprob: -5.214508533477783
    8. '[pos' → logprob: -5.464508533477783
    9. '[' → logprob: -5.464508533477783
    10. '(length' → logprob: -5.839508533477783

Token 1469: ' b' (ID: 287)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20805113017559052
    2. ''' → logprob: -1.833051085472107
    3. 'f' → logprob: -4.7080512046813965
    4. 'b' → logprob: -4.8330512046813965
    5. 'binary' → logprob: -5.7080512046813965
    6. 'bin' → logprob: -6.2080512046813965
    7. 'format' → logprob: -6.3330512046813965
    8. '20' → logprob: -6.3330512046813965
    9. '020' → logprob: -6.7080512046813965
    10. ''b' → logprob: -8.083050727844238

Token 1470: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.09900534152984619
    2. ''' → logprob: -3.0990052223205566
    3. '20' → logprob: -3.8490052223205566
    4. 'inary' → logprob: -4.099005222320557
    5. 'index' → logprob: -5.599005222320557
    6. ')' → logprob: -5.724005222320557
    7. '"' → logprob: -6.349005222320557
    8. '#' → logprob: -7.849005222320557
    9. 'inar' → logprob: -7.974005222320557
    10. ' index' → logprob: -8.099005699157715

Token 1471: ' sur' (ID: 1512)
  Prédit: '[index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.1431562751531601
    2. ')' → logprob: -3.3931562900543213
    3. '(index' → logprob: -3.6431562900543213
    4. ')[' → logprob: -3.7681562900543213
    5. '[' → logprob: -3.8931562900543213
    6. '[length' → logprob: -4.268156051635742
    7. '[:' → logprob: -5.268156051635742
    8. '[pos' → logprob: -5.893156051635742
    9. '```' → logprob: -6.393156051635742
    10. '(length' → logprob: -6.643156051635742

Token 1472: ' ' (ID: 220)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.09866408258676529
    2. '20' → logprob: -2.8486640453338623
    3. ' length' → logprob: -3.3486640453338623
    4. 'n' → logprob: -7.348664283752441
    5. ' ' → logprob: -9.223664283752441
    6. ' n' → logprob: -10.473664283752441
    7. 'f' → logprob: -10.473664283752441
    8. '(length' → logprob: -10.723664283752441
    9. '0' → logprob: -11.098664283752441
    10. '{' → logprob: -11.723664283752441

Token 1473: '20' (ID: 455)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.10050319135189056
    2. '20' → logprob: -2.3505032062530518
    3. ' length' → logprob: -8.600502967834473
    4. 'n' → logprob: -9.725502967834473
    5. '{' → logprob: -10.725502967834473
    6. 'index' → logprob: -11.475502967834473
    7. '(length' → logprob: -12.600502967834473
    8. 'width' → logprob: -12.975502967834473
    9. ' ' → logprob: -13.100502967834473
    10. '0' → logprob: -13.225502967834473

Token 1474: ' chiffres' (ID: 105565)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.23507395386695862
    2. ')' → logprob: -2.360074043273926
    3. 'format' → logprob: -2.860074043273926
    4. 'f' → logprob: -3.360074043273926
    5. 'b' → logprob: -4.860074043273926
    6. '(length' → logprob: -5.735074043273926
    7. '}' → logprob: -5.860074043273926
    8. '```' → logprob: -5.985074043273926
    9. ' length' → logprob: -6.610074043273926
    10. 's' → logprob: -7.610074043273926

Token 1475: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6987984776496887
    2. '[index' → logprob: -1.198798418045044
    3. 'print' → logprob: -2.198798418045044
    4. '(index' → logprob: -3.198798418045044
    5. '[' → logprob: -4.073798656463623
    6. ')
' → logprob: -4.198798656463623
    7. ',' → logprob: -5.448798656463623
    8. '```' → logprob: -6.198798656463623
    9. '   ' → logprob: -6.823798656463623
    10. 'index' → logprob: -6.948798656463623

Token 1476: 'avec' (ID: 64065)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25263452529907227
    2. 'length' → logprob: -2.1276345252990723
    3. '")' → logprob: -3.6276345252990723
    4. '')' → logprob: -4.002634525299072
    5. 'index' → logprob: -4.127634525299072
    6. ')[' → logprob: -4.877634525299072
    7. ')
' → logprob: -5.627634525299072
    8. ').' → logprob: -5.877634525299072
    9. 'format' → logprob: -5.877634525299072
    10. '   ' → logprob: -6.002634525299072

Token 1477: ' des' (ID: 731)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.10351348668336868
    2. 'f' → logprob: -2.853513479232788
    3. ''' → logprob: -3.603513479232788
    4. '0' → logprob: -5.603513717651367
    5. 'leading' → logprob: -5.728513717651367
    6. 'format' → logprob: -6.228513717651367
    7. ')' → logprob: -6.978513717651367
    8. '"' → logprob: -7.353513717651367
    9. ' length' → logprob: -7.478513717651367
    10. 'n' → logprob: -7.603513717651367

Token 1478: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039167001843452454
    2. ''' → logprob: -3.5391669273376465
    3. '"' → logprob: -5.2891669273376465
    4. 'leading' → logprob: -5.9141669273376465
    5. 'zeros' → logprob: -7.0391669273376465
    6. ' leading' → logprob: -7.7891669273376465
    7. 'z' → logprob: -9.164167404174805
    8. ' zeros' → logprob: -9.289167404174805
    9. ' ' → logprob: -10.039167404174805
    10. '```' → logprob: -11.289167404174805

Token 1479: 'éros' (ID: 120888)
  Prédit: 'eros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eros' → logprob: -0.12313589453697205
    2. 'ero' → logprob: -2.248135805130005
    3. 'éros' → logprob: -4.873136043548584
    4. 'éro' → logprob: -5.998136043548584
    5. 'er' → logprob: -9.623135566711426
    6. 'e' → logprob: -10.873135566711426
    7. '0' → logprob: -11.498135566711426
    8. 'fill' → logprob: -11.873135566711426
    9. 'erro' → logprob: -12.123135566711426
    10. 'é' → logprob: -12.373135566711426

Token 1480: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025192053988575935
    2. ')
' → logprob: -4.5251922607421875
    3. ').' → logprob: -4.7751922607421875
    4. '   ' → logprob: -6.5251922607421875
    5. '```' → logprob: -6.9001922607421875
    6. '}' → logprob: -7.4001922607421875
    7. '")' → logprob: -7.5251922607421875
    8. ')}' → logprob: -8.400192260742188
    9. '')' → logprob: -8.775192260742188
    10. 'b' → logprob: -8.900192260742188

Token 1481: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.0241724252700806
    2. 'leading' → logprob: -1.0241724252700806
    3. 'pr' → logprob: -2.774172306060791
    4. 'lead' → logprob: -2.899172306060791
    5. 'la' → logprob: -3.399172306060791
    6. 'l' → logprob: -3.774172306060791
    7. '0' → logprob: -3.774172306060791
    8. '```' → logprob: -4.524172306060791
    9. 'print' → logprob: -4.774172306060791
    10. ' gauche' → logprob: -4.899172306060791

Token 1482: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16854554414749146
    2. ')[' → logprob: -2.2935454845428467
    3. ')
' → logprob: -3.6685454845428467
    4. '[index' → logprob: -3.7935454845428467
    5. '(index' → logprob: -6.293545722961426
    6. ',' → logprob: -6.668545722961426
    7. ' )' → logprob: -7.793545722961426
    8. '),' → logprob: -8.043545722961426
    9. ')+"' → logprob: -8.043545722961426
    10. '))' → logprob: -8.168545722961426

Token 1483: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22740215063095093
    2. ')' → logprob: -1.7274022102355957
    3. ')
' → logprob: -4.977402210235596
    4. '[index' → logprob: -5.227402210235596
    5. '[' → logprob: -5.477402210235596
    6. '```' → logprob: -6.227402210235596
    7. '[:' → logprob: -6.477402210235596
    8. '[offset' → logprob: -6.602402210235596
    9. ' print' → logprob: -6.602402210235596
    10. ',' → logprob: -6.977402210235596

Token 1484: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00040064091444946826
    2. ' print' → logprob: -8.25040054321289
    3. '#print' → logprob: -10.37540054321289
    4. '[' → logprob: -10.75040054321289
    5. '```' → logprob: -10.75040054321289
    6. 'index' → logprob: -11.00040054321289
    7. '[index' → logprob: -11.25040054321289
    8. ')' → logprob: -11.37540054321289
    9. 'if' → logprob: -12.12540054321289
    10. '#' → logprob: -12.25040054321289

Token 1485: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020449401927180588
    2. ' print' → logprob: -8.500204086303711
    3. 'for' → logprob: -14.125204086303711
    4. 'if' → logprob: -16.00020408630371
    5. 'pr' → logprob: -17.37520408630371
    6. '   ' → logprob: -17.50020408630371
    7. '
' → logprob: -17.75020408630371
    8. ' for' → logprob: -18.25020408630371
    9. 'pattern' → logprob: -18.87520408630371
    10. '```' → logprob: -18.87520408630371

Token 1486: ' extrait' (ID: 194006)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0655963122844696
    2. ' print' → logprob: -2.815596342086792
    3. '[' → logprob: -6.440596103668213
    4. 'for' → logprob: -7.315596103668213
    5. ' =' → logprob: -7.940596103668213
    6. '.print' → logprob: -8.565596580505371
    7. '```' → logprob: -8.815596580505371
    8. ' for' → logprob: -9.440596580505371
    9. ')' → logprob: -9.815596580505371
    10. '[]' → logprob: -9.940596580505371

Token 1487: ' les' (ID: 1341)
  Prédit: '[offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[offset' → logprob: -0.08759219944477081
    2. '[' → logprob: -3.587592124938965
    3. '[index' → logprob: -3.587592124938965
    4. '(offset' → logprob: -4.712592124938965
    5. 'format' → logprob: -4.837592124938965
    6. '(format' → logprob: -5.212592124938965
    7. 'offset' → logprob: -6.087592124938965
    8. '(index' → logprob: -7.087592124938965
    9. '[:' → logprob: -7.462592124938965
    10. '```' → logprob: -7.587592124938965

Token 1488: ' chiffres' (ID: 105565)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.7752875089645386
    2. '[offset' → logprob: -1.2752875089645386
    3. ':' → logprob: -1.9002875089645386
    4. 'format' → logprob: -3.150287628173828
    5. 'index' → logprob: -4.150287628173828
    6. ':index' → logprob: -4.775287628173828
    7. '(offset' → logprob: -5.150287628173828
    8. '0' → logprob: -5.150287628173828
    9. '1' → logprob: -5.775287628173828
    10. ' offset' → logprob: -5.775287628173828

Token 1489: ' correspond' (ID: 11095)
  Prédit: '[index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.43949249386787415
    2. '[offset' → logprob: -1.6894924640655518
    3. '[' → logprob: -1.9394924640655518
    4. '[length' → logprob: -4.564492702484131
    5. '[pos' → logprob: -5.064492702484131
    6. '[:' → logprob: -5.314492702484131
    7. '=' → logprob: -6.314492702484131
    8. ' =' → logprob: -6.939492702484131
    9. '[start' → logprob: -7.189492702484131
    10. '[position' → logprob: -7.689492702484131

Token 1490: 'ants' (ID: 2027)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4066168069839478
    2. ':' → logprob: -2.156616687774658
    3. 'ent' → logprob: -2.156616687774658
    4. 'ents' → logprob: -2.281616687774658
    5. 'entes' → logprob: -2.781616687774658
    6. '[' → logprob: -2.906616687774658
    7. '=' → logprob: -3.281616687774658
    8. ']' → logprob: -3.281616687774658
    9. '```' → logprob: -3.406616687774658
    10. ')' → logprob: -3.531616687774658

Token 1491: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.37164849042892456
    2. ' =' → logprob: -1.9966485500335693
    3. '[' → logprob: -3.4966485500335693
    4. '[offset' → logprob: -3.6216485500335693
    5. ' print' → logprob: -4.12164831161499
    6. '
' → logprob: -4.37164831161499
    7. '[:' → logprob: -4.37164831161499
    8. 'for' → logprob: -4.74664831161499
    9. '```' → logprob: -4.87164831161499
    10. ' for' → logprob: -4.99664831161499

Token 1492: ' la' (ID: 557)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.8636656403541565
    2. 'offset' → logprob: -1.1136655807495117
    3. 'index' → logprob: -1.6136655807495117
    4. ':' → logprob: -3.9886655807495117
    5. 'format' → logprob: -4.738665580749512
    6. '20' → logprob: -5.113665580749512
    7. 'pos' → logprob: -5.488665580749512
    8. ':length' → logprob: -5.488665580749512
    9. ':index' → logprob: -5.738665580749512
    10. '-length' → logprob: -6.863665580749512

Token 1493: ' longueur' (ID: 104613)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5771229863166809
    2. 'offset' → logprob: -1.3271229267120361
    3. 'index' → logprob: -2.077122926712036
    4. 'pos' → logprob: -3.702122926712036
    5. 'ret' → logprob: -5.952123165130615
    6. ':' → logprob: -6.077123165130615
    7. '[' → logprob: -6.077123165130615
    8. '[offset' → logprob: -6.077123165130615
    9. 'start' → logprob: -6.327123165130615
    10. '0' → logprob: -6.327123165130615

Token 1494: ' trouv' (ID: 40254)
  Prédit: '[index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.8744345307350159
    2. '[:' → logprob: -0.9994345307350159
    3. '[offset' → logprob: -2.499434471130371
    4. '[-' → logprob: -2.874434471130371
    5. '[' → logprob: -2.874434471130371
    6. '[pos' → logprob: -4.124434471130371
    7. '[length' → logprob: -5.874434471130371
    8. '[position' → logprob: -8.874434471130371
    9. '[start' → logprob: -8.999434471130371
    10. 'index' → logprob: -9.249434471130371

Token 1495: 'ée' (ID: 2894)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.618643581867218
    2. ':length' → logprob: -1.4936435222625732
    3. ':index' → logprob: -2.4936435222625732
    4. ':]' → logprob: -2.9936435222625732
    5. '=' → logprob: -3.3686435222625732
    6. ']' → logprob: -4.618643760681152
    7. '=index' → logprob: -5.118643760681152
    8. 'length' → logprob: -5.118643760681152
    9. ':]
' → logprob: -5.243643760681152
    10. '=format' → logprob: -5.368643760681152

Token 1496: ',' (ID: 11)
  Prédit: '[index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.7814949154853821
    2. '[' → logprob: -1.5314948558807373
    3. 'print' → logprob: -1.6564948558807373
    4. '[:' → logprob: -2.6564948558807373
    5. '[length' → logprob: -3.1564948558807373
    6. '[offset' → logprob: -4.781495094299316
    7. '[pos' → logprob: -5.531495094299316
    8. '   ' → logprob: -6.531495094299316
    9. '```' → logprob: -6.531495094299316
    10. '[-' → logprob: -6.781495094299316

Token 1497: ' en' (ID: 469)
  Prédit: '[index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[index' → logprob: -1.1333407163619995
    2. ':' → logprob: -1.5083407163619995
    3. 'index' → logprob: -1.8833407163619995
    4. ':index' → logprob: -2.508340835571289
    5. '[' → logprob: -2.758340835571289
    6. '[offset' → logprob: -2.758340835571289
    7. 'offset' → logprob: -3.508340835571289
    8. '[:' → logprob: -4.258340835571289
    9. '1' → logprob: -4.383340835571289
    10. 'length' → logprob: -4.508340835571289

Token 1498: ' part' (ID: 997)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19594624638557434
    2. '[' → logprob: -2.320946216583252
    3. '[-' → logprob: -3.445946216583252
    4. 'bin' → logprob: -4.570946216583252
    5. 'pos' → logprob: -4.820946216583252
    6. 'binary' → logprob: -4.945946216583252
    7. 'format' → logprob: -5.320946216583252
    8. '[::-' → logprob: -5.445946216583252
    9. '[:' → logprob: -5.945946216583252
    10. 'index' → logprob: -6.070946216583252

Token 1499: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.07397587597370148
    2. 'ie' → logprob: -3.5739758014678955
    3. 'enant' → logprob: -4.823976039886475
    4. 'i' → logprob: -5.448976039886475
    5. 'ière' → logprob: -5.448976039886475
    6. 'ition' → logprob: -5.448976039886475
    7. 'out' → logprob: -5.573976039886475
    8. 'icipant' → logprob: -5.698976039886475
    9. '1' → logprob: -6.448976039886475
    10. '[' → logprob: -6.573976039886475

Token 1500: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9712163209915161
    2. ':index' → logprob: -1.4712163209915161
    3. '(index' → logprob: -2.2212162017822266
    4. 'from' → logprob: -2.3462162017822266
    5. '=index' → logprob: -2.7212162017822266
    6. '=' → logprob: -2.8462162017822266
    7. '[index' → logprob: -3.9712162017822266
    8. 'index' → logprob: -4.846216201782227
    9. ':length' → logprob: -5.096216201782227
    10. '[:' → logprob: -5.221216201782227

Token 1501: ' la' (ID: 557)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06849946826696396
    2. '20' → logprob: -3.4434995651245117
    3. '-index' → logprob: -4.318499565124512
    4. 'index' → logprob: -4.443499565124512
    5. '-format' → logprob: -5.318499565124512
    6. '-(' → logprob: -6.318499565124512
    7. '-pos' → logprob: -7.568499565124512
    8. '0' → logprob: -7.693499565124512
    9. 'pos' → logprob: -8.068499565124512
    10. '-length' → logprob: -8.443499565124512

Token 1502: ' droite' (ID: 61428)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5225494503974915
    2. 'index' → logprob: -2.2725493907928467
    3. '-index' → logprob: -2.6475493907928467
    4. '20' → logprob: -3.1475493907928467
    5. '-end' → logprob: -3.1475493907928467
    6. 'offset' → logprob: -3.2725493907928467
    7. '(' → logprob: -3.8975493907928467
    8. '-(' → logprob: -3.8975493907928467
    9. 'length' → logprob: -4.522549629211426
    10. 'n' → logprob: -4.772549629211426

Token 1503: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7837656140327454
    2. '[index' → logprob: -1.1587655544281006
    3. '[-' → logprob: -2.1587655544281006
    4. '[' → logprob: -2.6587655544281006
    5. ')[' → logprob: -4.78376579284668
    6. '```' → logprob: -5.15876579284668
    7. 'index' → logprob: -5.53376579284668
    8. '[::-' → logprob: -5.65876579284668
    9. 'bin' → logprob: -5.78376579284668
    10. ')' → logprob: -5.78376579284668

Token 1504: 'indice' (ID: 176697)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4046272337436676
    2. '-length' → logprob: -1.7796272039413452
    3. '-index' → logprob: -2.6546273231506348
    4. '-format' → logprob: -2.9046273231506348
    5. ':' → logprob: -4.279627323150635
    6. '[-' → logprob: -5.404627323150635
    7. '-(' → logprob: -5.904627323150635
    8. ' -' → logprob: -6.154627323150635
    9. 'index' → logprob: -6.154627323150635
    10. '   ' → logprob: -6.404627323150635

Token 1505: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06096023693680763
    2. '-index' → logprob: -3.310960292816162
    3. '-length' → logprob: -4.935960292816162
    4. '-(' → logprob: -5.935960292816162
    5. '-n' → logprob: -6.060960292816162
    6. ':' → logprob: -6.185960292816162
    7. ' -' → logprob: -6.810960292816162
    8. '[-' → logprob: -6.810960292816162
    9. '-l' → logprob: -7.185960292816162
    10. 'len' → logprob: -7.310960292816162

Token 1506: '20' (ID: 455)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.047935910522937775
    2. ':' → logprob: -4.172935962677002
    3. '-length' → logprob: -4.672935962677002
    4. ' -' → logprob: -5.297935962677002
    5. 'len' → logprob: -5.797935962677002
    6. '-(' → logprob: -5.922935962677002
    7. '-n' → logprob: -6.047935962677002
    8. '-index' → logprob: -6.297935962677002
    9. '-l' → logprob: -6.422935962677002
    10. '[-' → logprob: -7.172935962677002

Token 1507: '-length' (ID: 53970)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1468353122472763
    2. ' -' → logprob: -2.1468353271484375
    3. '-length' → logprob: -4.5218353271484375
    4. '-index' → logprob: -5.0218353271484375
    5. ')' → logprob: -7.2718353271484375
    6. ')[' → logprob: -7.5218353271484375
    7. '-)' → logprob: -8.396835327148438
    8. ':' → logprob: -9.271835327148438
    9. ',' → logprob: -9.271835327148438
    10. '   ' → logprob: -9.896835327148438

Token 1508: ' à' (ID: 1221)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.44873395562171936
    2. ':' → logprob: -1.198733925819397
    3. '[-' → logprob: -3.8237340450286865
    4. '][-' → logprob: -4.573733806610107
    5. ' -' → logprob: -4.698733806610107
    6. '-index' → logprob: -5.448733806610107
    7. ')[' → logprob: -6.073733806610107
    8. ':]' → logprob: -6.073733806610107
    9. ')' → logprob: -6.448733806610107
    10. ')][' → logprob: -6.573733806610107

Token 1509: ' la' (ID: 557)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.0041872672736644745
    2. 'None' → logprob: -6.004187107086182
    3. '-' → logprob: -6.754187107086182
    4. ' ' → logprob: -8.37918758392334
    5. ')' → logprob: -8.87918758392334
    6. ' -' → logprob: -9.25418758392334
    7. ' None' → logprob: -10.12918758392334
    8. '0' → logprob: -11.00418758392334
    9. ':' → logprob: -12.12918758392334
    10. 'len' → logprob: -12.25418758392334

Token 1510: ' fin' (ID: 2131)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.04096200317144394
    2. '-' → logprob: -3.415961980819702
    3. 'len' → logprob: -5.540962219238281
    4. 'length' → logprob: -6.915962219238281
    5. '(' → logprob: -7.040962219238281
    6. 'end' → logprob: -7.540962219238281
    7. '-end' → logprob: -8.790962219238281
    8. 'index' → logprob: -9.040962219238281
    9. '-(' → logprob: -9.165962219238281
    10. '(-' → logprob: -9.415962219238281

Token 1511: ')
' (ID: 446)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.12053583562374115
    2. '[' → logprob: -2.8705358505249023
    3. '][-' → logprob: -4.120535850524902
    4. '][' → logprob: -4.120535850524902
    5. ')[' → logprob: -4.870535850524902
    6. 'index' → logprob: -5.120535850524902
    7. ':' → logprob: -5.370535850524902
    8. '[index' → logprob: -7.370535850524902
    9. '(' → logprob: -7.370535850524902
    10. ')' → logprob: -7.370535850524902

Token 1512: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020770980045199394
    2. 'buf' → logprob: -6.752077102661133
    3. ',' → logprob: -8.752077102661133
    4. ')' → logprob: -8.877077102661133
    5. '(buf' → logprob: -9.002077102661133
    6. '   ' → logprob: -9.127077102661133
    7. ' print' → logprob: -9.377077102661133
    8. '[' → logprob: -10.002077102661133
    9. '```' → logprob: -10.002077102661133
    10. '(' → logprob: -10.627077102661133

Token 1513: '(format' (ID: 39668)
  Prédit: '(format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(format' → logprob: -0.008225063793361187
    2. '(f' → logprob: -5.633224964141846
    3. '(' → logprob: -5.883224964141846
    4. '(bin' → logprob: -6.508224964141846
    5. '((' → logprob: -8.133225440979004
    6. 'format' → logprob: -11.008225440979004
    7. '("{' → logprob: -11.383225440979004
    8. '('' → logprob: -12.383225440979004
    9. '(binary' → logprob: -13.383225440979004
    10. '("' → logprob: -13.383225440979004

Token 1514: '(index' (ID: 13517)
  Prédit: '(index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.011051470413804054
    2. 'index' → logprob: -4.511051654815674
    3. '(' → logprob: -13.386051177978516
    4. '[index' → logprob: -14.636051177978516
    5. ')' → logprob: -15.136051177978516
    6. ',index' → logprob: -15.136051177978516
    7. 'ret' → logprob: -15.261051177978516
    8. ' index' → logprob: -15.386051177978516
    9. '=index' → logprob: -15.386051177978516
    10. '(
' → logprob: -15.636051177978516

Token 1515: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016229959146585315
    2. ' ,' → logprob: -8.750162124633789
    3. '[' → logprob: -13.375162124633789
    4. '<|end|>' → logprob: -13.750162124633789
    5. ',
' → logprob: -15.000162124633789
    6. ' ' → logprob: -15.750162124633789
    7. ')' → logprob: -16.00016212463379
    8. ',

' → logprob: -16.12516212463379
    9. '‌,' → logprob: -16.12516212463379
    10. '+' → logprob: -16.25016212463379

Token 1516: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10281482338905334
    2. ''' → logprob: -2.7278149127960205
    3. ' f' → logprob: -3.9778149127960205
    4. 'f' → logprob: -4.852814674377441
    5. ' "' → logprob: -5.727814674377441
    6. ' '' → logprob: -6.727814674377441
    7. ' ' → logprob: -7.227814674377441
    8. '`' → logprob: -7.852814674377441
    9. ' ' → logprob: -10.227814674377441
    10. '020' → logprob: -10.227814674377441

Token 1517: '020' (ID: 19164)
  Prédit: '020'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '020' → logprob: -0.06251823157072067
    2. '20' → logprob: -2.8125181198120117
    3. '0' → logprob: -7.687518119812012
    4. '{' → logprob: -10.312518119812012
    5. '"' → logprob: -10.687518119812012
    6. '{}' → logprob: -10.937518119812012
    7. ' ' → logprob: -12.437518119812012
    8. '{:' → logprob: -12.562518119812012
    9. '02' → logprob: -13.062518119812012
    10. '025' → logprob: -13.187518119812012

Token 1518: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ' b' → logprob: -19.75
    3. ''b' → logprob: -21.5
    4. '```' → logprob: -21.75
    5. '
' → logprob: -22.0
    6. '"' → logprob: -22.375
    7. '	b' → logprob: -22.5
    8. ')b' → logprob: -23.0
    9. '>b' → logprob: -23.5
    10. 'binary' → logprob: -24.0

Token 1519: '")[' (ID: 33726)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.27267226576805115
    2. '")[' → logprob: -2.147672176361084
    3. '[length' → logprob: -3.022672176361084
    4. '")' → logprob: -3.397672176361084
    5. '[-' → logprob: -4.272672176361084
    6. '[' → logprob: -5.022672176361084
    7. '[pos' → logprob: -5.022672176361084
    8. ',' → logprob: -5.147672176361084
    9. ')' → logprob: -5.772672176361084
    10. ')"' → logprob: -7.022672176361084

Token 1520: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.34853968024253845
    2. '-' → logprob: -1.2235397100448608
    3. '(' → logprob: -10.098539352416992
    4. ' -' → logprob: -10.973539352416992
    5. '-(' → logprob: -11.723539352416992
    6. '-n' → logprob: -12.223539352416992
    7. ' ' → logprob: -12.348539352416992
    8. '   ' → logprob: -12.973539352416992
    9. '-start' → logprob: -13.223539352416992
    10. '(-' → logprob: -13.598539352416992

Token 1521: ' -' (ID: 533)
  Prédit: '-length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-length' → logprob: -0.39256909489631653
    2. '-' → logprob: -1.1425690650939941
    3. ' -' → logprob: -5.267569065093994
    4. '-Length' → logprob: -7.642569065093994
    5. '-
' → logprob: -12.017569541931152
    6. '-l' → logprob: -12.267569541931152
    7. '-final' → logprob: -12.767569541931152
    8. '-key' → logprob: -13.017569541931152
    9. '-int' → logprob: -13.142569541931152
    10. '-code' → logprob: -13.267569541931152

Token 1522: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -6.630610641877865e-06
    2. ' length' → logprob: -12.000006675720215
    3. '(length' → logprob: -14.750006675720215
    4. '(' → logprob: -20.6250057220459
    5. 'leng' → logprob: -21.2500057220459
    6. 'len' → logprob: -23.0000057220459
    7. '	length' → logprob: -23.6250057220459
    8. '[length' → logprob: -23.7500057220459
    9. '-length' → logprob: -24.0000057220459
    10. ':length' → logprob: -24.2500057220459

Token 1523: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03385073319077492
    2. ':]' → logprob: -3.40885066986084
    3. ':],' → logprob: -9.65885066986084
    4. ':].' → logprob: -9.65885066986084
    5. ':])
' → logprob: -10.40885066986084
    6. ':)' → logprob: -10.90885066986084
    7. ' :' → logprob: -11.15885066986084
    8. ' :]' → logprob: -11.90885066986084
    9. ':]
' → logprob: -12.40885066986084
    10. '])' → logprob: -14.03385066986084

Token 1524: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1270776093006134
    2. '20' → logprob: -2.127077579498291
    3. ']' → logprob: -9.12707805633545
    4. '],' → logprob: -10.87707805633545
    5. ' ])' → logprob: -11.87707805633545
    6. 'None' → logprob: -12.87707805633545
    7. ')' → logprob: -13.00207805633545
    8. '])
' → logprob: -13.00207805633545
    9. ']),' → logprob: -13.87707805633545
    10. ':' → logprob: -13.87707805633545


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1522
Tokens correctement prédits (1ère position, stricte): 326
Tokens correctement prédits (1ère position, avec adaptation): 338
Tokens correctement prédits (top 10): 775
Précision stricte (1ère position): 21.42%
Précision adaptée (1ère position): 22.21%
Précision (top 10): 50.92%
================================================================================
