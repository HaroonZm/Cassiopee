================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x_a = input().split()
x = int(x_a[0])
a = int(x_a[1])
if x < a:
    print("0")
else:
    print("10")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: '_a' (ID: 10852)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6572287082672119
    2. ' x' → logprob: -1.782228708267212
    3. 'x' → logprob: -2.157228708267212
    4. '0' → logprob: -2.407228708267212
    5. '1' → logprob: -3.407228708267212
    6. 'y' → logprob: -3.782228708267212
    7. ' []' → logprob: -3.782228708267212
    8. '[' → logprob: -4.782228469848633
    9. ' y' → logprob: -4.782228469848633
    10. ' [' → logprob: -5.282228469848633

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010603943839669228
    2. '('' → logprob: -5.135603904724121
    3. ''' → logprob: -5.510603904724121
    4. '"' → logprob: -8.385603904724121
    5. '(
' → logprob: -8.760603904724121
    6. '("("' → logprob: -9.010603904724121
    7. '[' → logprob: -10.385603904724121
    8. '`' → logprob: -11.135603904724121
    9. '()' → logprob: -11.135603904724121
    10. '```' → logprob: -11.760603904724121

Token 5: 'split' (ID: 13627)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22644446790218353
    2. '.' → logprob: -1.8514444828033447
    3. '*' → logprob: -4.351444244384766
    4. '(' → logprob: -4.851444244384766
    5. '_' → logprob: -4.976444244384766
    6. '.strip' → logprob: -5.851444244384766
    7. ' ' → logprob: -6.101444244384766
    8. ')' → logprob: -6.101444244384766
    9. '[' → logprob: -6.476444244384766
    10. '=' → logprob: -6.476444244384766

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004785744531545788
    2. '()' → logprob: -8.500478744506836
    3. '(
' → logprob: -9.375478744506836
    4. '('' → logprob: -9.750478744506836
    5. '"' → logprob: -10.250478744506836
    6. '("("' → logprob: -10.375478744506836
    7. '(

' → logprob: -10.750478744506836
    8. '((' → logprob: -11.375478744506836
    9. ''' → logprob: -11.625478744506836
    10. '`' → logprob: -12.000478744506836

Token 7: 'x' (ID: 87)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025160547345876694
    2. '.' → logprob: -4.400160312652588
    3. '=' → logprob: -4.900160312652588
    4. 'x' → logprob: -5.900160312652588
    5. '+' → logprob: -7.775160312652588
    6. ' =' → logprob: -8.275160789489746
    7. '#' → logprob: -8.400160789489746
    8. '\[' → logprob: -8.400160789489746
    9. '```' → logprob: -8.775160789489746
    10. 'print' → logprob: -8.900160789489746

Token 8: ' =' (ID: 314)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.08698567748069763
    2. '_' → logprob: -2.5869855880737305
    3. '[' → logprob: -4.9619855880737305
    4. '[_' → logprob: -7.8369855880737305
    5. '_[' → logprob: -8.33698558807373
    6. '_x' → logprob: -8.33698558807373
    7. '_b' → logprob: -10.08698558807373
    8. '[a' → logprob: -10.21198558807373
    9. '\[' → logprob: -11.08698558807373
    10. 'a' → logprob: -11.21198558807373

Token 9: ' int' (ID: 677)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6399150490760803
    2. ' list' → logprob: -1.5149149894714355
    3. 'x' → logprob: -1.7649149894714355
    4. 'int' → logprob: -3.6399149894714355
    5. ' x' → logprob: -3.8899149894714355
    6. '[int' → logprob: -4.2649149894714355
    7. '[x' → logprob: -4.6399149894714355
    8. ' [' → logprob: -5.6399149894714355
    9. 'map' → logprob: -6.0149149894714355
    10. ' int' → logprob: -6.0149149894714355

Token 10: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02978462539613247
    2. '(x' → logprob: -3.529784679412842
    3. '(
' → logprob: -12.029784202575684
    4. '("("' → logprob: -12.029784202575684
    5. '('' → logprob: -12.279784202575684
    6. 'x' → logprob: -12.529784202575684
    7. '((' → logprob: -12.779784202575684
    8. '(`' → logprob: -13.279784202575684
    9. '(

' → logprob: -13.279784202575684
    10. ' (' → logprob: -13.529784202575684

Token 11: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.005293169524520636
    2. '[' → logprob: -5.255293369293213
    3. ')_' → logprob: -10.880292892456055
    4. '[a' → logprob: -11.255292892456055
    5. 'a' → logprob: -12.005292892456055
    6. ')' → logprob: -12.130292892456055
    7. '[_' → logprob: -12.130292892456055
    8. '_' → logprob: -12.630292892456055
    9. '_x' → logprob: -13.255292892456055
    10. '```' → logprob: -13.880292892456055

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.13388703338569e-06
    2. '[x' → logprob: -11.750009536743164
    3. ')' → logprob: -14.625009536743164
    4. ' [' → logprob: -14.750009536743164
    5. '[a' → logprob: -16.250009536743164
    6. '   ' → logprob: -16.750009536743164
    7. '[
' → logprob: -16.875009536743164
    8. '\[' → logprob: -16.875009536743164
    9. 'x' → logprob: -17.375009536743164
    10. ' ' → logprob: -17.750009536743164

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.598092684522271e-05
    2. '1' → logprob: -10.000056266784668
    3. ' ' → logprob: -11.500056266784668
    4. ')' → logprob: -15.250056266784668
    5. ''' → logprob: -16.62505531311035
    6. '])' → logprob: -17.37505531311035
    7. ']' → logprob: -17.87505531311035
    8. '-' → logprob: -18.25005531311035
    9. '```' → logprob: -18.25005531311035
    10. '2' → logprob: -18.31255531311035

Token 14: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.12876610457897186
    2. ')' → logprob: -2.1287660598754883
    3. ']' → logprob: -6.503766059875488
    4. ')])' → logprob: -9.378766059875488
    5. ' ])' → logprob: -9.503766059875488
    6. ''])' → logprob: -9.628766059875488
    7. ')]' → logprob: -9.753766059875488
    8. ' )' → logprob: -11.628766059875488
    9. '])
' → logprob: -12.128766059875488
    10. ')
' → logprob: -12.378766059875488

Token 15: 'a' (ID: 64)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18419571220874786
    2. '<|end|>' → logprob: -2.1841957569122314
    3. '*' → logprob: -3.8091957569122314
    4. ')' → logprob: -4.059195518493652
    5. ' +' → logprob: -5.309195518493652
    6. 'x' → logprob: -5.809195518493652
    7. '```' → logprob: -6.559195518493652
    8. '<|end|>' → logprob: -6.684195518493652
    9. '-' → logprob: -6.809195518493652
    10. '[' → logprob: -7.059195518493652

Token 16: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41424304246902466
    2. '_' → logprob: -2.28924298286438
    3. '+' → logprob: -2.53924298286438
    4. '<|end|>' → logprob: -3.03924298286438
    5. ' ' → logprob: -3.53924298286438
    6. '-' → logprob: -3.66424298286438
    7. '>' → logprob: -4.414243221282959
    8. '[' → logprob: -5.039243221282959
    9. '*' → logprob: -5.039243221282959
    10. '=' → logprob: -5.539243221282959

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519926428794861
    2. ' int' → logprob: -1.5019927024841309
    3. ' x' → logprob: -10.126992225646973
    4. 'x' → logprob: -10.751992225646973
    5. 'input' → logprob: -14.126992225646973
    6. ' ' → logprob: -14.376992225646973
    7. ' input' → logprob: -15.376992225646973
    8. '=int' → logprob: -15.501992225646973
    9. '0' → logprob: -15.876992225646973
    10. '1' → logprob: -16.12699317932129

Token 18: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36959928274154663
    2. '(x' → logprob: -1.2445993423461914
    3. '(a' → logprob: -3.8695993423461914
    4. '((' → logprob: -11.119599342346191
    5. ' (' → logprob: -11.494599342346191
    6. 'a' → logprob: -11.619599342346191
    7. ')(' → logprob: -12.619599342346191
    8. 'x' → logprob: -12.744599342346191
    9. '()' → logprob: -12.869599342346191
    10. '("("' → logprob: -12.869599342346191

Token 19: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0037593478336930275
    2. '[' → logprob: -5.753759384155273
    3. 'a' → logprob: -9.003759384155273
    4. ')' → logprob: -9.128759384155273
    5. ')]' → logprob: -9.128759384155273
    6. ')])' → logprob: -9.628759384155273
    7. '])' → logprob: -10.253759384155273
    8. '_' → logprob: -10.753759384155273
    9. ')_' → logprob: -11.003759384155273
    10. '1' → logprob: -11.003759384155273

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. ' [' → logprob: -13.250003814697266
    3. '1' → logprob: -14.125003814697266
    4. ')' → logprob: -14.250003814697266
    5. '   ' → logprob: -15.875003814697266
    6. '```' → logprob: -16.625003814697266
    7. ')[' → logprob: -16.875003814697266
    8. '(' → logprob: -17.250003814697266
    9. '\[' → logprob: -17.250003814697266
    10. '[
' → logprob: -17.750003814697266

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. '])' → logprob: -13.37500286102295
    3. ' ' → logprob: -13.50000286102295
    4. '0' → logprob: -16.250003814697266
    5. ')' → logprob: -17.125003814697266
    6. ']' → logprob: -17.250003814697266
    7. '   ' → logprob: -17.437503814697266
    8. '-' → logprob: -17.562503814697266
    9. '2' → logprob: -17.812503814697266
    10. '１' → logprob: -18.375003814697266

Token 22: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011915886716451496
    2. '])' → logprob: -9.12511920928955
    3. '))' → logprob: -12.75011920928955
    4. ')])' → logprob: -13.12511920928955
    5. ']' → logprob: -13.25011920928955
    6. '）' → logprob: -13.75011920928955
    7. ')]' → logprob: -13.87511920928955
    8. '`)' → logprob: -14.75011920928955
    9. ''])' → logprob: -15.00011920928955
    10. '})' → logprob: -15.62511920928955

Token 23: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11791673302650452
    2. 'i' → logprob: -2.6179168224334717
    3. '+' → logprob: -3.7429168224334717
    4. '>' → logprob: -5.242916584014893
    5. ' if' → logprob: -5.867916584014893
    6. '=' → logprob: -6.742916584014893
    7. 'x' → logprob: -6.867916584014893
    8. '#' → logprob: -7.242916584014893
    9. '*' → logprob: -7.867916584014893
    10. 'print' → logprob: -7.867916584014893

Token 24: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02509927749633789
    2. 'x' → logprob: -3.775099277496338
    3. ' ' → logprob: -6.900099277496338
    4. ' a' → logprob: -7.150099277496338
    5. 'a' → logprob: -10.40009880065918
    6. ' ' → logprob: -11.52509880065918
    7. '(' → logprob: -11.90009880065918
    8. ' (' → logprob: -12.65009880065918
    9. '  ' → logprob: -12.65009880065918
    10. ''' → logprob: -13.40009880065918

Token 25: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6652730703353882
    2. '>' → logprob: -1.5402730703353882
    3. ' >' → logprob: -1.9152730703353882
    4. ' <' → logprob: -2.4152731895446777
    5. '>=' → logprob: -4.290273189544678
    6. ' >=' → logprob: -4.915273189544678
    7. '<=' → logprob: -5.040273189544678
    8. ' <=' → logprob: -5.040273189544678
    9. ' ' → logprob: -7.665273189544678
    10. '%' → logprob: -9.29027271270752

Token 26: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01610991358757019
    2. ' a' → logprob: -4.141109943389893
    3. '10' → logprob: -10.891109466552734
    4. ' ' → logprob: -11.266109466552734
    5. '0' → logprob: -11.641109466552734
    6. '5' → logprob: -12.391109466552734
    7. '20' → logprob: -12.516109466552734
    8. '32' → logprob: -12.766109466552734
    9. '100' → logprob: -13.016109466552734
    10. '3' → logprob: -13.391109466552734

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003078142472077161
    2. ' :' → logprob: -8.2503080368042
    3. '':' → logprob: -10.7503080368042
    4. ':
' → logprob: -11.1253080368042
    5. '':'' → logprob: -12.5003080368042
    6. '":' → logprob: -12.8753080368042
    7. '":"' → logprob: -14.2503080368042
    8. ':**' → logprob: -14.5003080368042
    9. '+:' → logprob: -14.6253080368042
    10. ':return' → logprob: -14.8753080368042

Token 28: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9170076847076416
    2. ' print' → logprob: -1.2920076847076416
    3. '"' → logprob: -1.4170076847076416
    4. ''' → logprob: -2.7920076847076416
    5. '   ' → logprob: -4.5420074462890625
    6. ' ' → logprob: -5.4170074462890625
    7. '    ' → logprob: -6.9170074462890625
    8. ' "' → logprob: -7.0420074462890625
    9. '"\' → logprob: -7.1670074462890625
    10. ''\' → logprob: -7.1670074462890625

Token 29: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.281485836254433e-05
    2. ' print' → logprob: -9.375092506408691
    3. '"' → logprob: -12.750092506408691
    4. '#print' → logprob: -13.500092506408691
    5. 'pr' → logprob: -14.250092506408691
    6. '-' → logprob: -14.500092506408691
    7. 'Print' → logprob: -14.500092506408691
    8. '	print' → logprob: -14.625092506408691
    9. 'prin' → logprob: -14.875092506408691
    10. 'pri' → logprob: -15.000092506408691

Token 30: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6788076758384705
    2. '("' → logprob: -0.8038076758384705
    3. '("<' → logprob: -3.6788077354431152
    4. '('' → logprob: -4.428807735443115
    5. '("("' → logprob: -5.053807735443115
    6. '('<' → logprob: -7.803807735443115
    7. '(x' → logprob: -8.303807258605957
    8. '"' → logprob: -8.303807258605957
    9. '("")' → logprob: -8.928807258605957
    10. '("(' → logprob: -9.178807258605957

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2007883671903983e-05
    2. '-' → logprob: -11.375021934509277
    3. '"' → logprob: -13.125021934509277
    4. '```' → logprob: -13.875021934509277
    5. '_' → logprob: -14.000021934509277
    6. '000' → logprob: -14.000021934509277
    7. '０' → logprob: -14.000021934509277
    8. ':' → logprob: -14.500021934509277
    9. 'Zero' → logprob: -14.500021934509277
    10. '=' → logprob: -14.875021934509277

Token 32: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.055505890399217606
    2. ')' → logprob: -2.9305059909820557
    3. '")
' → logprob: -7.805505752563477
    4. ')
' → logprob: -9.430505752563477
    5. '"' → logprob: -9.805505752563477
    6. '')' → logprob: -10.930505752563477
    7. 'x' → logprob: -11.180505752563477
    8. '0' → logprob: -11.805505752563477
    9. 'else' → logprob: -11.805505752563477
    10. ')")' → logprob: -11.930505752563477

Token 33: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25385192036628723
    2. 'elif' → logprob: -1.5038518905639648
    3. ' else' → logprob: -6.503851890563965
    4. ' elif' → logprob: -8.878851890563965
    5. '```' → logprob: -9.253851890563965
    6. '\n' → logprob: -9.628851890563965
    7. 'x' → logprob: -10.503851890563965
    8. ')' → logprob: -10.753851890563965
    9. '#elif' → logprob: -11.253851890563965
    10. '#else' → logprob: -11.253851890563965

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.0033853515051305e-05
    2. ':
' → logprob: -10.000060081481934
    3. '   ' → logprob: -11.625060081481934
    4. ' :' → logprob: -12.125060081481934
    5. ':
' → logprob: -16.875059127807617
    6. '.' → logprob: -17.125059127807617
    7. ':def' → logprob: -17.125059127807617
    8. 'if' → logprob: -17.375059127807617
    9. '    ' → logprob: -17.750059127807617
    10. '  ' → logprob: -17.875059127807617

Token 35: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006779080722481012
    2. ' print' → logprob: -5.131779193878174
    3. '   ' → logprob: -7.381779193878174
    4. '1' → logprob: -9.131778717041016
    5. 'x' → logprob: -9.756778717041016
    6. ' ' → logprob: -10.381778717041016
    7. ' x' → logprob: -12.131778717041016
    8. '"' → logprob: -12.256778717041016
    9. '  ' → logprob: -12.756778717041016
    10. 'printf' → logprob: -12.756778717041016

Token 36: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0020370108541101217
    2. '"' → logprob: -6.502037048339844
    3. '   ' → logprob: -8.627037048339844
    4. '1' → logprob: -8.877037048339844
    5. ' print' → logprob: -9.752037048339844
    6. 'x' → logprob: -9.752037048339844
    7. '(' → logprob: -10.002037048339844
    8. 'printf' → logprob: -11.627037048339844
    9. '10' → logprob: -12.002037048339844
    10. '2' → logprob: -12.127037048339844

Token 37: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6460810899734497
    2. '("' → logprob: -1.2710810899734497
    3. '(x' → logprob: -1.7710810899734497
    4. '((' → logprob: -3.89608097076416
    5. '(abs' → logprob: -6.14608097076416
    6. '("("' → logprob: -6.77108097076416
    7. '"' → logprob: -7.89608097076416
    8. '("(' → logprob: -7.89608097076416
    9. ' (' → logprob: -8.52108097076416
    10. '(int' → logprob: -8.64608097076416

Token 38: '10' (ID: 702)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7121975421905518
    2. '(x' → logprob: -1.4621975421905518
    3. '"' → logprob: -2.3371975421905518
    4. '1' → logprob: -2.7121975421905518
    5. 'abs' → logprob: -3.0871975421905518
    6. '(' → logprob: -3.5871975421905518
    7. '((' → logprob: -4.212197303771973
    8. '"x' → logprob: -4.212197303771973
    9. '(abs' → logprob: -4.837197303771973
    10. 'int' → logprob: -6.962197303771973

Token 39: '")' (ID: 1405)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.370294846012257e-05
    2. '00' → logprob: -10.625043869018555
    3. '000' → logprob: -12.000043869018555
    4. '"' → logprob: -12.000043869018555
    5. 'x' → logprob: -13.250043869018555
    6. ' ' → logprob: -13.250043869018555
    7. '")' → logprob: -13.625043869018555
    8. ')' → logprob: -14.625043869018555
    9. '"x' → logprob: -14.750043869018555
    10. '5' → logprob: -14.750043869018555


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 37
Tokens correctement prédits (1ère position, stricte): 10
Tokens correctement prédits (1ère position, avec adaptation): 12
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 27.03%
Précision adaptée (1ère position): 32.43%
Précision (top 10): 75.68%
================================================================================
