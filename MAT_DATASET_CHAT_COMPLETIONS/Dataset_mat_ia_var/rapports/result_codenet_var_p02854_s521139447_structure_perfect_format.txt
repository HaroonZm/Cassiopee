================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
sa = [0]
ans = float("INF")
for i, ai in enumerate(list(map(int, input().split()))):
    sa.append(sa[i] + ai)
for i in range(n + 1):
    ans = min(ans, abs(sa[i] - (sa[-1] - sa[i])))
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '()' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 'sa' (ID: 4578)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ' =' (ID: 314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06427417695522308
    2. ' =' → logprob: -4.064274311065674
    3. 't' → logprob: -4.314274311065674
    4. 'l' → logprob: -4.939274311065674
    5. 'f' → logprob: -5.439274311065674
    6. 'ls' → logprob: -5.439274311065674
    7. '=' → logprob: -5.814274311065674
    8. 's' → logprob: -6.189274311065674
    9. '.append' → logprob: -6.189274311065674
    10. 'r' → logprob: -6.564274311065674

Token 7: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.2898229360580444
    2. '[]' → logprob: -1.4148229360580444
    3. 'input' → logprob: -1.5398229360580444
    4. 'set' → logprob: -2.789823055267334
    5. 'list' → logprob: -2.789823055267334
    6. ' input' → logprob: -3.164823055267334
    7. ' [' → logprob: -3.539823055267334
    8. '[' → logprob: -3.789823055267334
    9. ' list' → logprob: -4.039823055267334
    10. '[input' → logprob: -4.414823055267334

Token 8: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.21238397061824799
    2. 'list' → logprob: -2.337383985519409
    3. '0' → logprob: -2.962383985519409
    4. 'input' → logprob: -3.837383985519409
    5. '[]' → logprob: -4.83738374710083
    6. ']' → logprob: -5.21238374710083
    7. 'tuple' → logprob: -6.08738374710083
    8. '()]' → logprob: -6.58738374710083
    9. 'float' → logprob: -6.71238374710083
    10. '(int' → logprob: -6.96238374710083

Token 9: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011910353787243366
    2. ',' → logprob: -4.761910438537598
    3. ')]' → logprob: -6.886910438537598
    4. ' ]' → logprob: -7.136910438537598
    5. ']*' → logprob: -7.386910438537598
    6. ' for' → logprob: -7.886910438537598
    7. ')' → logprob: -8.011910438537598
    8. '])' → logprob: -9.636910438537598
    9. ']*(' → logprob: -10.386910438537598
    10. ']+' → logprob: -10.886910438537598

Token 10: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1669810563325882
    2. ' for' → logprob: -2.0419809818267822
    3. '+' → logprob: -4.291981220245361
    4. ' ' → logprob: -5.666981220245361
    5. ',' → logprob: -6.291981220245361
    6. 'a' → logprob: -7.041981220245361
    7. 'i' → logprob: -7.166981220245361
    8. '*' → logprob: -7.166981220245361
    9. 's' → logprob: -7.291981220245361
    10. 'x' → logprob: -7.916981220245361

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3894968628883362
    2. '=' → logprob: -1.7644968032836914
    3. '_' → logprob: -2.5144968032836914
    4. '[' → logprob: -3.2644968032836914
    5. ' +=' → logprob: -4.139496803283691
    6. '.append' → logprob: -4.764496803283691
    7. ' ' → logprob: -5.889496803283691
    8. '+' → logprob: -6.514496803283691
    9. ',' → logprob: -7.264496803283691
    10. '.' → logprob: -7.264496803283691

Token 12: ' float' (ID: 4428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21195557713508606
    2. ' ' → logprob: -1.8369555473327637
    3. '[' → logprob: -3.9619555473327637
    4. ' [' → logprob: -4.711955547332764
    5. ' sa' → logprob: -6.836955547332764
    6. ''' → logprob: -7.211955547332764
    7. ' []' → logprob: -7.336955547332764
    8. '"' → logprob: -7.711955547332764
    9. '[]' → logprob: -8.836956024169922
    10. 'n' → logprob: -9.461956024169922

Token 13: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.041547343134880066
    2. '(' → logprob: -3.2915472984313965
    3. ''s' → logprob: -7.1665472984313965
    4. ''' → logprob: -7.2915472984313965
    5. ''.' → logprob: -7.7915472984313965
    6. '('.' → logprob: -7.7915472984313965
    7. '('.')' → logprob: -8.041547775268555
    8. '```' → logprob: -8.541547775268555
    9. ''(' → logprob: -8.916547775268555
    10. '(
' → logprob: -9.041547775268555

Token 14: 'INF' (ID: 64358)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0063124471344053745
    2. '-inf' → logprob: -5.256312370300293
    3. '-i' → logprob: -7.131312370300293
    4. 'i' → logprob: -8.381312370300293
    5. '-' → logprob: -11.256312370300293
    6. 'INF' → logprob: -11.756312370300293
    7. '"' → logprob: -12.256312370300293
    8. 'Inf' → logprob: -12.506312370300293
    9. ''i' → logprob: -12.881312370300293
    10. 'in' → logprob: -13.006312370300293

Token 15: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008397548459470272
    2. 'inity' → logprob: -5.258397579193115
    3. 'inty' → logprob: -7.008397579193115
    4. '")' → logprob: -7.008397579193115
    5. ')]' → logprob: -7.883397579193115
    6. 'y' → logprob: -8.383397102355957
    7. '```' → logprob: -8.383397102355957
    8. ')`' → logprob: -9.508397102355957
    9. 'i' → logprob: -9.633397102355957
    10. ']' → logprob: -9.758397102355957

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.059664011001586914
    2. '+' → logprob: -4.309663772583008
    3. 'max' → logprob: -4.684663772583008
    4. '[' → logprob: -4.809663772583008
    5. '_' → logprob: -4.809663772583008
    6. ' for' → logprob: -5.809663772583008
    7. 'or' → logprob: -5.809663772583008
    8. ')' → logprob: -5.934663772583008
    9. 'a' → logprob: -6.059663772583008
    10. '[]' → logprob: -6.559663772583008

Token 17: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20716214179992676
    2. ' ' → logprob: -1.7071621417999268
    3. 'i' → logprob: -5.832161903381348
    4. '_' → logprob: -6.582161903381348
    5. ' _' → logprob: -6.707161903381348
    6. ' ' → logprob: -9.457161903381348
    7. ' n' → logprob: -10.082161903381348
    8. ' ‌' → logprob: -10.707161903381348
    9. '  ' → logprob: -11.207161903381348
    10. ' ' → logprob: -11.832161903381348

Token 18: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015176096931099892
    2. 'in' → logprob: -4.265176296234131
    3. 'n' → logprob: -7.140176296234131
    4. ' ' → logprob: -8.765175819396973
    5. ',' → logprob: -11.140175819396973
    6. '  ' → logprob: -11.515175819396973
    7. ' n' → logprob: -11.640175819396973
    8. 'range' → logprob: -12.015175819396973
    9. '	in' → logprob: -13.140175819396973
    10. '+' → logprob: -13.265175819396973

Token 19: ' ai' (ID: 8440)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6754571199417114
    2. ' a' → logprob: -1.1754571199417114
    3. 'x' → logprob: -2.675457000732422
    4. ' x' → logprob: -3.050457000732422
    5. 's' → logprob: -4.675457000732422
    6. ' v' → logprob: -4.675457000732422
    7. 'v' → logprob: -4.800457000732422
    8. ' s' → logprob: -5.050457000732422
    9. ' num' → logprob: -5.175457000732422
    10. ' ai' → logprob: -5.800457000732422

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11823716759681702
    2. 'in' → logprob: -2.243237257003784
    3. ',' → logprob: -5.243237018585205
    4. ' ,' → logprob: -9.618237495422363
    5. ' ' → logprob: -10.493237495422363
    6. 's' → logprob: -12.118237495422363
    7. 'n' → logprob: -12.243237495422363
    8. ',n' → logprob: -12.868237495422363
    9. ',in' → logprob: -13.368237495422363
    10. '```' → logprob: -13.868237495422363

Token 21: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.4740801155567169
    2. ' enumerate' → logprob: -0.9740800857543945
    3. '(en' → logprob: -13.349080085754395
    4. ' ' → logprob: -14.974080085754395
    5. 'enum' → logprob: -15.349080085754395
    6. 'en' → logprob: -16.09908103942871
    7. ' zip' → logprob: -16.09908103942871
    8. ' enumer' → logprob: -16.22408103942871
    9. ',' → logprob: -16.22408103942871
    10. '```' → logprob: -16.34908103942871

Token 22: '(list' (ID: 13116)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.09055303037166595
    2. '(' → logprob: -3.215553045272827
    3. '(en' → logprob: -3.715553045272827
    4. '(s' → logprob: -4.465552806854248
    5. '(n' → logprob: -4.965552806854248
    6. '(sa' → logprob: -5.965552806854248
    7. ' (' → logprob: -7.715552806854248
    8. '(a' → logprob: -8.340553283691406
    9. 'range' → logprob: -9.090553283691406
    10. ' range' → logprob: -10.340553283691406

Token 23: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.011740832589566708
    2. '(' → logprob: -4.761740684509277
    3. '(input' → logprob: -6.261740684509277
    4. '(range' → logprob: -6.886740684509277
    5. '(int' → logprob: -9.386740684509277
    6. '(str' → logprob: -10.761740684509277
    7. '(s' → logprob: -11.011740684509277
    8. '(a' → logprob: -11.136740684509277
    9. 'map' → logprob: -11.511740684509277
    10. '(n' → logprob: -11.886740684509277

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.889424836728722e-05
    2. '(' → logprob: -9.875099182128906
    3. 'int' → logprob: -10.875099182128906
    4. ',int' → logprob: -11.500099182128906
    5. '<int' → logprob: -12.000099182128906
    6. '(str' → logprob: -12.625099182128906
    7. '=int' → logprob: -13.000099182128906
    8. '(input' → logprob: -13.250099182128906
    9. ' int' → logprob: -13.750099182128906
    10. '```' → logprob: -14.000099182128906

Token 25: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.22294765710830688
    2. '(input' → logprob: -1.847947597503662
    3. ',' → logprob: -3.222947597503662
    4. '(' → logprob: -6.347947597503662
    5. ' ,' → logprob: -8.34794807434082
    6. 'input' → logprob: -8.47294807434082
    7. ' input' → logprob: -9.09794807434082
    8. ')' → logprob: -10.47294807434082
    9. ',int' → logprob: -10.59794807434082
    10. '),' → logprob: -11.22294807434082

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17999517917633057
    2. ' input' → logprob: -1.8049951791763306
    3. ',input' → logprob: -9.3049955368042
    4. ')' → logprob: -9.3049955368042
    5. '(input' → logprob: -10.4299955368042
    6. '	input' → logprob: -11.6799955368042
    7. ' ' → logprob: -11.8049955368042
    8. '=input' → logprob: -12.4299955368042
    9. '))' → logprob: -13.0549955368042
    10. ' )' → logprob: -13.0549955368042

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5690089639974758e-05
    2. '()' → logprob: -11.375015258789062
    3. '(' → logprob: -13.250015258789062
    4. '()))' → logprob: -13.875015258789062
    5. '())))' → logprob: -15.000015258789062
    6. '(input' → logprob: -15.625015258789062
    7. ')' → logprob: -15.625015258789062
    8. ' ().' → logprob: -15.750015258789062
    9. '()));' → logprob: -16.125015258789062
    10. '())' → logprob: -16.625015258789062

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007974773179739714
    2. 'strip' → logprob: -7.250797271728516
    3. ' split' → logprob: -9.750797271728516
    4. 'rstrip' → logprob: -11.125797271728516
    5. '(split' → logprob: -11.625797271728516
    6. 'spl' → logprob: -13.125797271728516
    7. 's' → logprob: -14.000797271728516
    8. ')' → logprob: -14.000797271728516
    9. '```' → logprob: -14.875797271728516
    10. 'read' → logprob: -14.875797271728516

Token 29: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.17662933468818665
    2. '()' → logprob: -2.3016293048858643
    3. '())))' → logprob: -2.8016293048858643
    4. '())' → logprob: -7.551629543304443
    5. ')))' → logprob: -8.676629066467285
    6. '(' → logprob: -8.801629066467285
    7. '))' → logprob: -8.926629066467285
    8. '()));' → logprob: -10.551629066467285
    9. '():' → logprob: -10.676629066467285
    10. '()),' → logprob: -10.926629066467285

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008128701709210873
    2. ',' → logprob: -5.508128643035889
    3. ':' → logprob: -6.133128643035889
    4. ')' → logprob: -6.508128643035889
    5. ' ):' → logprob: -8.883129119873047
    6. '):
' → logprob: -9.383129119873047
    7. ']:' → logprob: -9.758129119873047
    8. '),' → logprob: -10.383129119873047
    9. ']):' → logprob: -11.633129119873047
    10. '():' → logprob: -11.758129119873047

Token 31: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5641469359397888
    2. '   ' → logprob: -1.5641469955444336
    3. ' sa' → logprob: -2.0641469955444336
    4. '<|end|>' → logprob: -2.5641469955444336
    5. ' 
' → logprob: -5.814146995544434
    6. '    ' → logprob: -6.314146995544434
    7. '	s' → logprob: -6.314146995544434
    8. 'sa' → logprob: -6.439146995544434
    9. '<|end|>' → logprob: -6.564146995544434
    10. ' ' → logprob: -6.564146995544434

Token 32: ' sa' (ID: 880)
  Prédit: ' sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.010029231198132038
    2. '   ' → logprob: -5.635029315948486
    3. 'sa' (adapté à ' sa') → logprob: -5.885029315948486
    4. ' ' → logprob: -6.135029315948486
    5. '    ' → logprob: -7.510029315948486
    6. '<|end|>' → logprob: -8.385028839111328
    7. ' s' → logprob: -8.510028839111328
    8. 's' → logprob: -8.885028839111328
    9. '(sa' → logprob: -9.635028839111328
    10. '_sa' → logprob: -9.885028839111328

Token 33: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03009374625980854
    2. '.' → logprob: -3.5300936698913574
    3. '[-' → logprob: -8.780094146728516
    4. '.extend' → logprob: -9.280094146728516
    5. '_append' → logprob: -10.405094146728516
    6. '.app' → logprob: -10.655094146728516
    7. ' .' → logprob: -10.905094146728516
    8. 'Append' → logprob: -12.280094146728516
    9. '[' → logprob: -12.530094146728516
    10. 'append' → logprob: -12.530094146728516

Token 34: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -0.0004372254479676485
    2. '(' → logprob: -7.750437259674072
    3. 'sa' → logprob: -13.250436782836914
    4. ' sa' → logprob: -13.500436782836914
    5. '(ai' → logprob: -13.750436782836914
    6. '(si' → logprob: -14.125436782836914
    7. '(s' → logprob: -14.250436782836914
    8. '   ' → logprob: -14.500436782836914
    9. '_sa' → logprob: -15.625436782836914
    10. ' (' → logprob: -16.750436782836914

Token 35: '[i' (ID: 1768)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.4740806519985199
    2. '[i' → logprob: -0.9740806818008423
    3. '[' → logprob: -12.724081039428711
    4. ' [-' → logprob: -15.099081039428711
    5. 'i' → logprob: -15.724081039428711
    6. '[len' → logprob: -17.09908103942871
    7. ' [' → logprob: -17.09908103942871
    8. '[
' → logprob: -17.34908103942871
    9. '[I' → logprob: -17.47408103942871
    10. '   ' → logprob: -17.72408103942871

Token 36: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28894296288490295
    2. ']+' → logprob: -1.5389429330825806
    3. '+' → logprob: -3.41394305229187
    4. ' +' → logprob: -5.788942813873291
    5. ' ]' → logprob: -8.16394329071045
    6. '+]' → logprob: -10.78894329071045
    7. ')+' → logprob: -11.16394329071045
    8. ']+=' → logprob: -11.41394329071045
    9. ')' → logprob: -11.66394329071045
    10. '+i' → logprob: -12.16394329071045

Token 37: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693209946155548
    2. ' +' → logprob: -2.126932144165039
    3. '+
' → logprob: -13.751932144165039
    4. '＋' → logprob: -13.876932144165039
    5. '+xml' → logprob: -14.876932144165039
    6. ' plus' → logprob: -15.001932144165039
    7. '+a' → logprob: -15.001932144165039
    8. '+i' → logprob: -15.251932144165039
    9. ' +
' → logprob: -15.876932144165039
    10. ' ' → logprob: -16.12693214416504

Token 38: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.11284615844488144
    2. ' ai' → logprob: -2.2378461360931396
    3. ' ' → logprob: -11.612846374511719
    4. '_ai' → logprob: -12.487846374511719
    5. '(ai' → logprob: -12.487846374511719
    6. '   ' → logprob: -12.987846374511719
    7. ' ' → logprob: -13.487846374511719
    8. '-ai' → logprob: -13.612846374511719
    9. 'a' → logprob: -14.612846374511719
    10. '  ' → logprob: -15.112846374511719

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. ')
' → logprob: -11.375012397766113
    3. ' )' → logprob: -16.000011444091797
    4. ')

' → logprob: -16.750011444091797
    5. ')`' → logprob: -16.750011444091797
    6. '))' → logprob: -17.000011444091797
    7. '`)' → logprob: -17.500011444091797
    8. '),' → logprob: -17.625011444091797
    9. ')
' → logprob: -18.375011444091797
    10. '```' → logprob: -18.375011444091797

Token 40: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.045839786529541
    2. ' ' → logprob: -1.420839786529541
    3. '+' → logprob: -1.545839786529541
    4. '-' → logprob: -2.920839786529541
    5. '   ' → logprob: -3.545839786529541
    6. ' if' → logprob: -3.670839786529541
    7. '<|end|>' → logprob: -3.920839786529541
    8. 'if' → logprob: -4.170839786529541
    9. '
' → logprob: -4.795839786529541
    10. '_' → logprob: -4.795839786529541

Token 41: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14258481562137604
    2. ' j' → logprob: -2.642584800720215
    3. 'i' → logprob: -3.392584800720215
    4. '_' → logprob: -4.642584800720215
    5. 'j' → logprob: -5.392584800720215
    6. ' range' → logprob: -5.892584800720215
    7. ' s' → logprob: -6.017584800720215
    8. ' n' → logprob: -6.517584800720215
    9. ' _' → logprob: -6.642584800720215
    10. ' x' → logprob: -6.892584800720215

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14663971960544586
    2. 'in' → logprob: -2.021639823913574
    3. '+' → logprob: -6.271639823913574
    4. ' ' → logprob: -6.646639823913574
    5. ',' → logprob: -8.396639823913574
    6. '  ' → logprob: -8.896639823913574
    7. '(' → logprob: -9.146639823913574
    8. 'range' → logprob: -9.396639823913574
    9. '<|end|>' → logprob: -10.646639823913574
    10. ' range' → logprob: -10.646639823913574

Token 43: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06202011927962303
    2. ' range' → logprob: -2.8120200634002686
    3. ' ' → logprob: -10.812020301818848
    4. 'sa' → logprob: -10.937020301818848
    5. '(range' → logprob: -13.062020301818848
    6. '  ' → logprob: -13.062020301818848
    7. 'ra' → logprob: -13.562020301818848
    8. ' sa' → logprob: -13.687020301818848
    9. 'len' → logprob: -13.937020301818848
    10. 'ran' → logprob: -13.937020301818848

Token 44: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.26306527853012085
    2. '(' → logprob: -1.5130653381347656
    3. '(len' → logprob: -4.513065338134766
    4. ' (' → logprob: -10.263065338134766
    5. '(k' → logprob: -11.388065338134766
    6. '(i' → logprob: -11.388065338134766
    7. '()' → logprob: -12.013065338134766
    8. '((' → logprob: -12.013065338134766
    9. '(m' → logprob: -12.138065338134766
    10. '(s' → logprob: -12.138065338134766

Token 45: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8510861396789551
    2. '-' → logprob: -1.351086139678955
    3. '):' → logprob: -1.476086139678955
    4. ' -' → logprob: -3.101086139678955
    5. ' +' → logprob: -3.351086139678955
    6. '):
' → logprob: -6.351086139678955
    7. ' ):' → logprob: -6.976086139678955
    8. ')):' → logprob: -7.226086139678955
    9. '//' → logprob: -7.476086139678955
    10. ',' → logprob: -7.851086139678955

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014235435053706169
    2. ' ' → logprob: -4.264235496520996
    3. '2' → logprob: -9.764235496520996
    4. '   ' → logprob: -12.639235496520996
    5. '  ' → logprob: -12.764235496520996
    6. '-' → logprob: -13.014235496520996
    7. ')' → logprob: -13.639235496520996
    8. '3' → logprob: -14.076735496520996
    9. ' -' → logprob: -14.139235496520996
    10. '6' → logprob: -15.014235496520996

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014420190127566457
    2. ' ' → logprob: -6.626441955566406
    3. '2' → logprob: -9.126441955566406
    4. '3' → logprob: -13.251441955566406
    5. '   ' → logprob: -13.626441955566406
    6. '-' → logprob: -13.938941955566406
    7. '6' → logprob: -14.813941955566406
    8. '  ' → logprob: -14.938941955566406
    9. '１' → logprob: -15.251441955566406
    10. '4' → logprob: -15.313941955566406

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0034341192804276943
    2. '-' → logprob: -6.503434181213379
    3. '):
' → logprob: -6.503434181213379
    4. ')' → logprob: -8.128434181213379
    5. ' ):' → logprob: -9.878434181213379
    6. ' -' → logprob: -10.503434181213379
    7. ':' → logprob: -10.628434181213379
    8. '):
' → logprob: -11.253434181213379
    9. '   ' → logprob: -11.503434181213379
    10. ' ' → logprob: -13.753434181213379

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032015969045460224
    2. '<|end|>' → logprob: -6.378201484680176
    3. ' for' → logprob: -7.128201484680176
    4. ' ' → logprob: -8.003201484680176
    5. ' if' → logprob: -8.878201484680176
    6. '    ' → logprob: -10.003201484680176
    7. ')' → logprob: -10.628201484680176
    8. '    
' → logprob: -11.003201484680176
    9. '<|end|>' → logprob: -11.003201484680176
    10. '```' → logprob: -11.253201484680176

Token 50: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48803073167800903
    2. ' for' → logprob: -1.1130306720733643
    3. 'for' → logprob: -2.8630306720733643
    4. '	for' → logprob: -8.863030433654785
    5. '    ' → logprob: -9.613030433654785
    6. '   ' → logprob: -9.613030433654785
    7. ' if' → logprob: -9.738030433654785
    8. ' ' → logprob: -10.238030433654785
    9. ' ans' → logprob: -10.363030433654785
    10. 'if' → logprob: -11.113030433654785

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02997089922428131
    2. '=' → logprob: -3.52997088432312
    3. ' +=' → logprob: -10.1549711227417
    4. '=max' → logprob: -10.2799711227417
    5. '=min' → logprob: -10.4049711227417
    6. '>' → logprob: -10.6549711227417
    7. ' >' → logprob: -10.9049711227417
    8. ' <=' → logprob: -11.1549711227417
    9. '+=' → logprob: -11.5299711227417
    10. ' -=' → logprob: -11.5299711227417

Token 52: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.20160065591335297
    2. 'min' → logprob: -1.7016006708145142
    3. ' max' → logprob: -8.951601028442383
    4. 'max' → logprob: -9.951601028442383
    5. '	min' → logprob: -12.451601028442383
    6. '   ' → logprob: -12.951601028442383
    7. '(min' → logprob: -13.576601028442383
    8. '[min' → logprob: -14.201601028442383
    9. '=min' → logprob: -14.826601028442383
    10. ',min' → logprob: -15.701601028442383

Token 53: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5766815543174744
    2. '(' → logprob: -0.8266815543174744
    3. '(sa' → logprob: -7.576681613922119
    4. '(abs' → logprob: -8.826681137084961
    5. '(s' → logprob: -10.076681137084961
    6. ' (' → logprob: -10.826681137084961
    7. '(
' → logprob: -11.951681137084961
    8. '(an' → logprob: -12.826681137084961
    9. 'ans' → logprob: -13.451681137084961
    10. '((' → logprob: -13.576681137084961

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022894611582159996
    2. 'abs' → logprob: -4.272894382476807
    3. ' ,' → logprob: -5.022894382476807
    4. ' abs' → logprob: -6.272894382476807
    5. '   ' → logprob: -9.522894859313965
    6. 'sa' → logprob: -10.397894859313965
    7. ',s' → logprob: -10.647894859313965
    8. ' sa' → logprob: -10.897894859313965
    9. '(abs' → logprob: -10.897894859313965
    10. ' -' → logprob: -11.647894859313965

Token 55: ' abs' (ID: 8443)
  Prédit: ' sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.6761213541030884
    2. ' abs' → logprob: -0.9261213541030884
    3. 'abs' → logprob: -2.676121234893799
    4. 'sa' → logprob: -3.801121234893799
    5. ' max' → logprob: -6.176121234893799
    6. ')' → logprob: -7.926121234893799
    7. '   ' → logprob: -8.301121711730957
    8. ' ' → logprob: -8.426121711730957
    9. '(sa' → logprob: -8.426121711730957
    10. ' i' → logprob: -8.551121711730957

Token 56: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -0.0007725820760242641
    2. '(' → logprob: -7.625772476196289
    3. '(n' → logprob: -8.500772476196289
    4. '((' → logprob: -10.250772476196289
    5. ' sa' → logprob: -10.750772476196289
    6. '(i' → logprob: -12.000772476196289
    7. '(si' → logprob: -12.250772476196289
    8. 'sa' → logprob: -12.375772476196289
    9. '(s' → logprob: -12.750772476196289
    10. ' (' → logprob: -13.625772476196289

Token 57: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005094291176646948
    2. '[n' → logprob: -5.380094528198242
    3. '[-' → logprob: -7.755094528198242
    4. '[' → logprob: -10.255094528198242
    5. '[j' → logprob: -13.380094528198242
    6. 'i' → logprob: -13.380094528198242
    7. ')' → logprob: -13.505094528198242
    8. '[s' → logprob: -13.630094528198242
    9. '[len' → logprob: -13.630094528198242
    10. ' -' → logprob: -15.005094528198242

Token 58: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7116166949272156
    2. ' -' → logprob: -0.7116166949272156
    3. ']' → logprob: -4.086616516113281
    4. ')' → logprob: -6.961616516113281
    5. ' ' → logprob: -8.711616516113281
    6. '   ' → logprob: -8.836616516113281
    7. ']))' → logprob: -9.461616516113281
    8. '  ' → logprob: -10.336616516113281
    9. ']-' → logprob: -10.711616516113281
    10. ' ]' → logprob: -10.836616516113281

Token 59: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4742857813835144
    2. '-' → logprob: -0.9742857813835144
    3. ')' → logprob: -9.099286079406738
    4. ' ' → logprob: -9.974286079406738
    5. '+' → logprob: -11.224286079406738
    6. '))' → logprob: -11.474286079406738
    7. '   ' → logprob: -12.349286079406738
    8. '  ' → logprob: -12.349286079406738
    9. ' +' → logprob: -12.849286079406738
    10. '*' → logprob: -12.974286079406738

Token 60: ' (' (ID: 350)
  Prédit: '(sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -0.5260529518127441
    2. ' (' → logprob: -1.4010529518127441
    3. ' sa' → logprob: -2.401052951812744
    4. 'sa' → logprob: -2.776052951812744
    5. '(s' → logprob: -5.026052951812744
    6. '(' → logprob: -6.526052951812744
    7. '((' → logprob: -7.651052951812744
    8. 's' → logprob: -8.151052474975586
    9. ' ' → logprob: -8.651052474975586
    10. ' ((' → logprob: -8.901052474975586

Token 61: 'sa' (ID: 4578)
  Prédit: 'sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sa' → logprob: -0.6365736722946167
    2. ' sa' → logprob: -0.7615736722946167
    3. '(sa' → logprob: -5.886573791503906
    4. '  ' → logprob: -7.261573791503906
    5. ' ' → logprob: -8.136573791503906
    6. ' (' → logprob: -9.886573791503906
    7. '    ' → logprob: -10.011573791503906
    8. '   ' → logprob: -10.011573791503906
    9. 's' → logprob: -11.636573791503906
    10. ' ' → logprob: -12.261573791503906

Token 62: '[-' (ID: 17503)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.10050469636917114
    2. '[-' → logprob: -2.3505046367645264
    3. 'n' → logprob: -8.600504875183105
    4. '[' → logprob: -9.350504875183105
    5. ' [' → logprob: -12.100504875183105
    6. '[len' → logprob: -12.475504875183105
    7. '   ' → logprob: -13.350504875183105
    8. ' ' → logprob: -13.475504875183105
    9. ' n' → logprob: -13.600504875183105
    10. ' [-' → logprob: -13.725504875183105

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00081796565791592
    2. '2' → logprob: -7.625817775726318
    3. ' ' → logprob: -8.125818252563477
    4. '   ' → logprob: -11.750818252563477
    5. '```' → logprob: -11.750818252563477
    6. ']' → logprob: -12.688318252563477
    7. '  ' → logprob: -12.938318252563477
    8. '-' → logprob: -13.375818252563477
    9. '１' → logprob: -13.750818252563477
    10. '    ' → logprob: -13.938318252563477

Token 64: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31009525060653687
    2. '-' → logprob: -1.8100953102111816
    3. ')' → logprob: -2.5600953102111816
    4. '/' → logprob: -4.560095310211182
    5. ' ' → logprob: -5.435095310211182
    6. ')/' → logprob: -5.685095310211182
    7. ' /' → logprob: -5.685095310211182
    8. '   ' → logprob: -6.185095310211182
    9. '-sa' → logprob: -7.935095310211182
    10. ' )' → logprob: -8.060094833374023

Token 65: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8289559483528137
    2. ' -' → logprob: -1.328955888748169
    3. '-' → logprob: -1.703955888748169
    4. '/' → logprob: -2.953955888748169
    5. ')/' → logprob: -3.703955888748169
    6. ' /' → logprob: -4.328956127166748
    7. '//' → logprob: -4.578956127166748
    8. ' ' → logprob: -4.953956127166748
    9. ' )' → logprob: -5.828956127166748
    10. ' //' → logprob: -6.203956127166748

Token 66: ' sa' (ID: 880)
  Prédit: ' sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.17980238795280457
    2. 'sa' → logprob: -1.804802417755127
    3. '(sa' → logprob: -10.179801940917969
    4. ' ' → logprob: -11.304801940917969
    5. '_sa' → logprob: -13.179801940917969
    6. '  ' → logprob: -13.429801940917969
    7. 's' → logprob: -13.679801940917969
    8. '.sa' → logprob: -14.429801940917969
    9. '<|end|>' → logprob: -14.429801940917969
    10. '   ' → logprob: -14.804801940917969

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.375001907348633
    3. 'i' → logprob: -14.875001907348633
    4. ')' → logprob: -16.750001907348633
    5. ')i' → logprob: -16.875001907348633
    6. ' i' → logprob: -17.375001907348633
    7. ')[' → logprob: -17.500001907348633
    8. ' [' → logprob: -18.625001907348633
    9. '[
' → logprob: -18.750001907348633
    10. '	i' → logprob: -19.500001907348633

Token 68: '])))
' (ID: 146875)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0031023730989545584
    2. ')' → logprob: -6.2531023025512695
    3. ')))
' → logprob: -7.3781023025512695
    4. '))' → logprob: -7.6281023025512695
    5. ' ' → logprob: -10.75310230255127
    6. ')))

' → logprob: -11.25310230255127
    7. '))))' → logprob: -11.50310230255127
    8. ')))
' → logprob: -12.12810230255127
    9. ')));' → logprob: -12.37810230255127
    10. '')))' → logprob: -12.75310230255127

Token 69: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001875671005109325
    2. ' print' → logprob: -9.000187873840332
    3. ')' → logprob: -9.750187873840332
    4. '
' → logprob: -12.750187873840332
    5. '```' → logprob: -13.625187873840332
    6. ')
' → logprob: -14.750187873840332
    7. '<|end|>' → logprob: -14.875187873840332
    8. '.print' → logprob: -16.000186920166016
    9. '#print' → logprob: -16.125186920166016
    10. 'pr' → logprob: -16.125186920166016

Token 70: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0065732612274587154
    2. '(ans' → logprob: -5.13157320022583
    3. '("("' → logprob: -7.75657320022583
    4. '('' → logprob: -9.381573677062988
    5. '()' → logprob: -9.506573677062988
    6. '((' → logprob: -11.506573677062988
    7. '(`' → logprob: -11.756573677062988
    8. '(len' → logprob: -12.131573677062988
    9. ' (' → logprob: -12.131573677062988
    10. '(abs' → logprob: -12.256573677062988

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '))' → logprob: -13.625001907348633
    3. ' )' → logprob: -15.250001907348633
    4. '`)' → logprob: -17.250001907348633
    5. ')`' → logprob: -17.250001907348633
    6. ')
' → logprob: -17.375001907348633
    7. '）' → logprob: -18.500001907348633
    8. '')' → logprob: -18.625001907348633
    9. '()' → logprob: -19.500001907348633
    10. ')}' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 57
Précision stricte (1ère position): 44.93%
Précision adaptée (1ère position): 44.93%
Précision (top 10): 82.61%
================================================================================
