================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter

s = input()
counter = Counter(s)
print(counter['+'] - counter['-'])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.8961017202818766e-05
    2. '\(' → logprob: -10.375059127807617
    3. ' (' → logprob: -11.500059127807617
    4. '()' → logprob: -12.625059127807617
    5. '\' → logprob: -12.875059127807617
    6. '(
' → logprob: -12.875059127807617
    7. 'a' → logprob: -12.875059127807617
    8. '```' → logprob: -14.000059127807617
    9. '\n' → logprob: -14.125059127807617
    10. '.' → logprob: -14.250059127807617

Token 5: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001039479160681367
    2. 'a' → logprob: -7.876039505004883
    3. '.' → logprob: -8.376039505004883
    4. '\(' → logprob: -9.251039505004883
    5. '(
' → logprob: -9.376039505004883
    6. 'newline' → logprob: -9.876039505004883
    7. '\' → logprob: -10.001039505004883
    8. '\n' → logprob: -10.001039505004883
    9. ',' → logprob: -10.876039505004883
    10. '```' → logprob: -11.751039505004883

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4709135890007019
    2. '(' → logprob: -1.9709136486053467
    3. 'u' → logprob: -2.7209136486053467
    4. '=' → logprob: -2.8459136486053467
    5. 't' → logprob: -3.2209136486053467
    6. 's' → logprob: -4.220913410186768
    7. '[' → logprob: -4.345913410186768
    8. 'a' → logprob: -4.720913410186768
    9. 'tring' → logprob: -4.720913410186768
    10. ' =' → logprob: -4.720913410186768

Token 7: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5184749364852905
    2. ' "' → logprob: -1.2684749364852905
    3. ''' → logprob: -2.26847505569458
    4. ' '' → logprob: -4.14347505569458
    5. ' Counter' → logprob: -6.26847505569458
    6. ' ' → logprob: -6.76847505569458
    7. 'input' → logprob: -8.893474578857422
    8. ''s' → logprob: -9.018474578857422
    9. 'Counter' → logprob: -9.018474578857422
    10. ' input' → logprob: -9.518474578857422

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001200231839902699
    2. '('' → logprob: -7.251200199127197
    3. ''' → logprob: -8.251200675964355
    4. ')' → logprob: -9.751200675964355
    5. '`' → logprob: -10.251200675964355
    6. '()' → logprob: -10.376200675964355
    7. '"' → logprob: -10.626200675964355
    8. '("("' → logprob: -10.751200675964355
    9. '(
' → logprob: -11.251200675964355
    10. '```' → logprob: -11.376200675964355

Token 9: 'counter' (ID: 32128)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.282050222158432
    2. '(' → logprob: -2.532050132751465
    3. ')' → logprob: -3.157050132751465
    4. 'c' → logprob: -3.157050132751465
    5. 'counter' → logprob: -3.282050132751465
    6. 'count' → logprob: -4.782050132751465
    7. 'result' → logprob: -4.907050132751465
    8. '=' → logprob: -4.907050132751465
    9. 'counts' → logprob: -5.032050132751465
    10. '_' → logprob: -6.407050132751465

Token 10: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06419960409402847
    2. '.' → logprob: -2.814199686050415
    3. '[' → logprob: -6.564199447631836
    4. 's' → logprob: -8.064199447631836
    5. '(
' → logprob: -9.439199447631836
    6. '(.)' → logprob: -9.439199447631836
    7. '('' → logprob: -9.689199447631836
    8. ')' → logprob: -9.939199447631836
    9. ' (' → logprob: -10.064199447631836
    10. '('.')' → logprob: -10.439199447631836

Token 11: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.5759628415107727
    2. 'Counter' → logprob: -0.8259628415107727
    3. ' counter' → logprob: -11.325963020324707
    4. '.Counter' → logprob: -11.700963020324707
    5. 'counter' → logprob: -13.700963020324707
    6. '_counter' → logprob: -14.075963020324707
    7. ' ' → logprob: -14.575963020324707
    8. ' ' → logprob: -15.950963020324707
    9. 'C' → logprob: -15.950963020324707
    10. 'ounter' → logprob: -16.20096206665039

Token 12: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.2014455944299698
    2. '(' → logprob: -1.7014455795288086
    3. 's' → logprob: -11.201445579528809
    4. '()' → logprob: -12.201445579528809
    5. '(
' → logprob: -12.201445579528809
    6. '(user' → logprob: -13.576445579528809
    7. '(ss' → logprob: -13.576445579528809
    8. '('' → logprob: -13.951445579528809
    9. '((' → logprob: -14.326445579528809
    10. '(S' → logprob: -14.451445579528809

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.659005157416686e-05
    2. '[' → logprob: -9.875066757202148
    3. ' )' → logprob: -12.125066757202148
    4. '`)' → logprob: -12.625066757202148
    5. '))' → logprob: -12.750066757202148
    6. ').' → logprob: -14.250066757202148
    7. ')`' → logprob: -14.750066757202148
    8. ')
' → logprob: -15.125066757202148
    9. '')' → logprob: -15.125066757202148
    10. '())' → logprob: -15.375066757202148

Token 14: 'print' (ID: 1598)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0821724459528923
    2. '(' → logprob: -3.082172393798828
    3. 'm' → logprob: -3.707172393798828
    4. 'print' → logprob: -6.332172393798828
    5. '.m' → logprob: -6.332172393798828
    6. '[' → logprob: -6.832172393798828
    7. ')' → logprob: -6.957172393798828
    8. 'most' → logprob: -7.082172393798828
    9. ' ' → logprob: -7.457172393798828
    10. '(m' → logprob: -8.332172393798828

Token 15: '(counter' (ID: 85625)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002824016148224473
    2. '(counter' → logprob: -5.877823829650879
    3. '(s' → logprob: -11.877823829650879
    4. '('' → logprob: -13.002823829650879
    5. '(count' → logprob: -13.127823829650879
    6. '("("' → logprob: -13.752823829650879
    7. '(C' → logprob: -13.877823829650879
    8. '()' → logprob: -14.252823829650879
    9. '(
' → logprob: -14.252823829650879
    10. '((' → logprob: -14.377823829650879

Token 16: '['' (ID: 1181)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007995037594810128
    2. '[' → logprob: -7.250799655914307
    3. '`)' → logprob: -10.375799179077148
    4. '))' → logprob: -10.750799179077148
    5. '.)' → logprob: -11.125799179077148
    6. ' )' → logprob: -12.125799179077148
    7. '.' → logprob: -12.750799179077148
    8. ').' → logprob: -13.000799179077148
    9. '(' → logprob: -13.000799179077148
    10. '])' → logprob: -13.250799179077148

Token 17: '+' (ID: 10)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002628573216497898
    2. ' '' → logprob: -6.252628803253174
    3. ')' → logprob: -8.502628326416016
    4. 'c' → logprob: -9.127628326416016
    5. ''])' → logprob: -9.127628326416016
    6. 'A' → logprob: -9.752628326416016
    7. '('' → logprob: -10.252628326416016
    8. ''' → logprob: -10.377628326416016
    9. 'e' → logprob: -10.752628326416016
    10. 'l' → logprob: -11.127628326416016

Token 18: '']' (ID: 1089)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4300929307937622
    2. ''])' → logprob: -1.1800929307937622
    3. '1' → logprob: -4.055092811584473
    4. '']' → logprob: -4.305092811584473
    5. '-' → logprob: -4.680092811584473
    6. ''' → logprob: -6.680092811584473
    7. ')' → logprob: -8.680092811584473
    8. 'a' → logprob: -8.805092811584473
    9. ''+' → logprob: -9.180092811584473
    10. '2' → logprob: -9.555092811584473

Token 19: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008851276710629463
    2. '])' → logprob: -4.758851051330566
    3. '')' → logprob: -9.133851051330566
    4. ']' → logprob: -10.008851051330566
    5. '))' → logprob: -10.758851051330566
    6. '`)' → logprob: -10.758851051330566
    7. '[' → logprob: -11.383851051330566
    8. ''])' → logprob: -11.508851051330566
    9. ')])' → logprob: -11.633851051330566
    10. ')]' → logprob: -12.258851051330566

Token 20: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.03768486529588699
    2. ' counter' → logprob: -3.412684917449951
    3. '1' → logprob: -5.537684917449951
    4. 'count' → logprob: -10.162684440612793
    5. ' ' → logprob: -10.412684440612793
    6. '[counter' → logprob: -12.162684440612793
    7. '	counter' → logprob: -12.662684440612793
    8. ')' → logprob: -12.662684440612793
    9. '(counter' → logprob: -12.787684440612793
    10. '0' → logprob: -13.037684440612793

Token 21: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0009938681032508612
    2. '[' → logprob: -7.375993728637695
    3. '['_' → logprob: -8.000993728637695
    4. '[['' → logprob: -12.375993728637695
    5. ')' → logprob: -12.500993728637695
    6. ''-' → logprob: -12.625993728637695
    7. '["' → logprob: -13.250993728637695
    8. ''' → logprob: -13.375993728637695
    9. '[s' → logprob: -13.375993728637695
    10. '["+' → logprob: -13.500993728637695

Token 22: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001613459608051926
    2. ''-' → logprob: -8.750161170959473
    3. '-'' → logprob: -12.875161170959473
    4. ''])' → logprob: -15.625161170959473
    5. ''' → logprob: -15.750161170959473
    6. ' -' → logprob: -17.25016212463379
    7. '']' → logprob: -17.50016212463379
    8. '+' → logprob: -18.00016212463379
    9. '–' → logprob: -18.00016212463379
    10. '-'+' → logprob: -18.25016212463379

Token 23: ''])' (ID: 11775)
  Prédit: ''])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.003788911970332265
    2. '']' → logprob: -5.878788948059082
    3. '])' → logprob: -7.628788948059082
    4. ')' → logprob: -7.753788948059082
    5. ''' → logprob: -10.628788948059082
    6. ''])
' → logprob: -11.378788948059082
    7. '')' → logprob: -11.503788948059082
    8. ']' → logprob: -11.753788948059082
    9. '"])' → logprob: -12.128788948059082
    10. '+' → logprob: -12.253788948059082


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 21
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 14
Précision stricte (1ère position): 23.81%
Précision adaptée (1ère position): 23.81%
Précision (top 10): 66.67%
================================================================================
