================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from operator import add
from functools import reduce
from math import gcd
from itertools import chain, repeat, accumulate, islice, count

class ABSsegtree:
    def __init__(self, N, ie, func):
        self.func = func

        getLEN = lambda n: next(x for x in map(lambda z: 2**z, count()) if x >= n)
        self.getLEN = getLEN(N)
        self.getsize = self.getLEN << 1
        self.getLIN = self.getsize - self.getLEN
        self.ST = list(repeat(ie, self.getsize))

    def update(self, i, x):
        [setattr(self.ST, '__setitem__', lambda pos,val: self.ST.__setitem__(pos,val)) for _ in ()] # fun
        i += self.getLIN
        self.ST[i] = x
        for i in iter(lambda i=i: i//2, 0):
            i //= 2
            self.ST[i] = self.func(self.ST[i<<1], self.ST[(i<<1)|1])
            if i == 1: break

    def get_interval(self, a, b):
        a += self.getLIN
        b += self.getLIN
        RA, RB = [], []
        while a < b:
            if a & 1:
                RA.append(self.ST[a])
                a += 1
            if b & 1:
                b -= 1
                RB.append(self.ST[b])
            a >>= 1
            b >>= 1
        vals = chain(RA, reversed(RB))
        # Reduce, but default to 0 if nothing (although in practice vals always non-empty)
        return reduce(self.func, vals, 0)

N = int(input())
A = list(map(int, input().split()))

from functools import partial
segtree = ABSsegtree(N, 0, gcd)
for i, v in enumerate(A):
    segtree.update(i, v)
ans = 0

for i, v in enumerate(A):
    list(map(lambda args: segtree.update(*args), [(i, 0)]))  # obscure way to call update
    ans = max(ans, segtree.get_interval(0, N))
    list(map(lambda args: segtree.update(*args), [(i, v)]))

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' operator' (ID: 11019)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' add' (ID: 1147)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7380027174949646
    2. ' item' → logprob: -0.9880027174949646
    3. 'item' → logprob: -2.1130027770996094
    4. 'import' → logprob: -3.9880027770996094
    5. ' add' → logprob: -5.363002777099609
    6. 'add' → logprob: -6.363002777099609
    7. ' ' → logprob: -6.613002777099609
    8. 'attr' → logprob: -7.238002777099609
    9. ' attr' → logprob: -7.363002777099609
    10. 'getitem' → logprob: -7.988002777099609

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003428528143558651
    2. ',' → logprob: -8.750343322753906
    3. ' (' → logprob: -10.000343322753906
    4. '\(' → logprob: -10.000343322753906
    5. '```' → logprob: -10.250343322753906
    6. 'import' → logprob: -11.250343322753906
    7. '.' → logprob: -11.625343322753906
    8. '(
' → logprob: -11.750343322753906
    9. 'a' → logprob: -12.375343322753906
    10. '(a' → logprob: -13.000343322753906

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010336418636143208
    2. ',' → logprob: -7.876033782958984
    3. 'a' → logprob: -8.501033782958984
    4. '(
' → logprob: -8.751033782958984
    5. '\(' → logprob: -9.126033782958984
    6. '(a' → logprob: -10.251033782958984
    7. ' (' → logprob: -10.376033782958984
    8. '_' → logprob: -10.626033782958984
    9. '```' → logprob: -10.751033782958984
    10. '.' → logprob: -11.126033782958984

Token 6: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.1267189383506775
    2. ' operator' → logprob: -2.8767189979553223
    3. ' itertools' → logprob: -3.6267189979553223
    4. ' math' → logprob: -3.8767189979553223
    5. 'fun' → logprob: -4.876718997955322
    6. 'operator' → logprob: -5.751718997955322
    7. ' ' → logprob: -6.751718997955322
    8. '_' → logprob: -6.876718997955322
    9. 'math' → logprob: -7.626718997955322
    10. ' os' → logprob: -7.626718997955322

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.28455567359924316
    2. 'import' → logprob: -1.4095556735992432
    3. '.' → logprob: -6.659555435180664
    4. '_import' → logprob: -6.909555435180664
    5. '.import' → logprob: -7.534555435180664
    6. ' ' → logprob: -8.159555435180664
    7. '	import' → logprob: -9.284555435180664
    8. '_' → logprob: -9.659555435180664
    9. ' .' → logprob: -9.909555435180664
    10. '._' → logprob: -10.784555435180664

Token 8: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.05301286652684212
    2. ' reduce' → logprob: -3.3030128479003906
    3. 'partial' → logprob: -4.428012847900391
    4. ' partial' → logprob: -5.928012847900391
    5. 'wrap' → logprob: -9.05301284790039
    6. 'redu' → logprob: -9.80301284790039
    7. ' wraps' → logprob: -10.80301284790039
    8. 'l' → logprob: -10.92801284790039
    9. '.reduce' → logprob: -11.67801284790039
    10. ' l' → logprob: -11.67801284790039

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029407329857349396
    2. '(
' → logprob: -6.002940654754639
    3. '(lambda' → logprob: -8.127941131591797
    4. '\n' → logprob: -10.627941131591797
    5. '\' → logprob: -10.877941131591797
    6. '`' → logprob: -10.877941131591797
    7. '```' → logprob: -10.877941131591797
    8. '(

' → logprob: -11.002941131591797
    9. '(\' → logprob: -11.502941131591797
    10. '\(' → logprob: -11.752941131591797

Token 10: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.623011589050293
    2. '(
' → logprob: -1.373011589050293
    3. '\' → logprob: -2.873011589050293
    4. '\n' → logprob: -3.248011589050293
    5. '
' → logprob: -3.373011589050293
    6. 'def' → logprob: -3.623011589050293
    7. '(

' → logprob: -4.373011589050293
    8. '

' → logprob: -4.873011589050293
    9. ',' → logprob: -5.123011589050293
    10. ',
' → logprob: -6.123011589050293

Token 11: ' math' (ID: 13324)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.37070152163505554
    2. ' math' → logprob: -1.245701551437378
    3. ' collections' → logprob: -4.370701313018799
    4. ' ' → logprob: -5.870701313018799
    5. ' operator' → logprob: -5.870701313018799
    6. 'math' → logprob: -6.120701313018799
    7. '_' → logprob: -8.245701789855957
    8. 'it' → logprob: -8.370701789855957
    9. 'operator' → logprob: -8.370701789855957
    10. 'collections' → logprob: -8.495701789855957

Token 12: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0629878044128418
    2. ' import' → logprob: -1.0629878044128418
    3. 'import' → logprob: -1.1879878044128418
    4. '<|end|>' → logprob: -6.812987804412842
    5. ' ' → logprob: -6.937987804412842
    6. '.import' → logprob: -7.312987804412842
    7. ' .' → logprob: -7.937987804412842
    8. '.sqrt' → logprob: -8.31298828125
    9. '<|end|>' → logprob: -8.31298828125
    10. '_import' → logprob: -8.43798828125

Token 13: ' gcd' (ID: 106918)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.6124168038368225
    2. 'sqrt' → logprob: -1.8624167442321777
    3. ' gcd' → logprob: -2.7374167442321777
    4. 'ceil' → logprob: -3.1124167442321777
    5. ' prod' → logprob: -3.2374167442321777
    6. 'pow' → logprob: -3.4874167442321777
    7. 'g' → logprob: -3.6124167442321777
    8. ' factorial' → logprob: -3.7374167442321777
    9. 'factor' → logprob: -3.9874167442321777
    10. 'floor' → logprob: -4.487416744232178

Token 14: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06975734978914261
    2. '(' → logprob: -3.3197574615478516
    3. '#' → logprob: -4.319757461547852
    4. '\' → logprob: -5.069757461547852
    5. '(
' → logprob: -5.194757461547852
    6. ',' → logprob: -6.819757461547852
    7. 'print' → logprob: -7.069757461547852
    8. '`' → logprob: -7.444757461547852
    9. ')' → logprob: -7.444757461547852
    10. 'a' → logprob: -7.694757461547852

Token 15: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6948491334915161
    2. '(' → logprob: -1.0698491334915161
    3. '(
' → logprob: -1.9448491334915161
    4. '\' → logprob: -5.319849014282227
    5. '#' → logprob: -5.819849014282227
    6. ',' → logprob: -6.069849014282227
    7. '(

' → logprob: -6.944849014282227
    8. '```' → logprob: -7.444849014282227
    9. 'a' → logprob: -7.819849014282227
    10. '_' → logprob: -8.319849014282227

Token 16: ' itertools' (ID: 103178)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -1.0223759412765503
    2. ' itertools' → logprob: -1.1473759412765503
    3. ' fractions' → logprob: -1.5223759412765503
    4. 'fra' → logprob: -3.02237606048584
    5. ' typing' → logprob: -4.27237606048584
    6. 'fun' → logprob: -4.64737606048584
    7. 'operator' → logprob: -4.77237606048584
    8. ' operator' → logprob: -4.89737606048584
    9. 'math' → logprob: -5.02237606048584
    10. ' math' → logprob: -5.77237606048584

Token 17: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8179572820663452
    2. '.' → logprob: -0.9429572820663452
    3. ' import' → logprob: -1.8179572820663452
    4. ' .' → logprob: -5.442957401275635
    5. '.import' → logprob: -6.317957401275635
    6. '<|end|>' → logprob: -9.067956924438477
    7. '.groupby' → logprob: -9.442956924438477
    8. ' ' → logprob: -9.567956924438477
    9. 'from' → logprob: -9.942956924438477
    10. '.im' → logprob: -9.942956924438477

Token 18: ' chain' (ID: 13464)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.22442466020584106
    2. 'product' → logprob: -2.2244246006011963
    3. 'per' → logprob: -2.7244246006011963
    4. 'acc' → logprob: -4.099424839019775
    5. 'chain' → logprob: -5.474424839019775
    6. 'count' → logprob: -6.224424839019775
    7. 'group' → logprob: -6.474424839019775
    8. ' permutations' → logprob: -6.724424839019775
    9. ' combinations' → logprob: -7.349424839019775
    10. 'cycle' → logprob: -8.099424362182617

Token 19: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16247478127479553
    2. '(
' → logprob: -2.1624748706817627
    3. 'def' → logprob: -3.7874748706817627
    4. '(

' → logprob: -5.412474632263184
    5. ',' → logprob: -5.662474632263184
    6. '
' → logprob: -7.162474632263184
    7. '\' → logprob: -7.287474632263184
    8. '\n' → logprob: -8.037474632263184
    9. '(
' → logprob: -8.287474632263184
    10. '```' → logprob: -8.287474632263184

Token 20: ' repeat' (ID: 22962)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.061896417289972305
    2. 'product' → logprob: -3.686896324157715
    3. 'cycle' → logprob: -4.186896324157715
    4. 'count' → logprob: -5.436896324157715
    5. 'repeat' → logprob: -5.436896324157715
    6. 'is' → logprob: -5.686896324157715
    7. 'acc' → logprob: -6.311896324157715
    8. ' combinations' → logprob: -6.561896324157715
    9. 'compress' → logprob: -6.686896324157715
    10. '```' → logprob: -7.311896324157715

Token 21: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6893734335899353
    2. '(' → logprob: -1.06437349319458
    3. ',' → logprob: -2.43937349319458
    4. '(
' → logprob: -3.43937349319458
    5. ',
' → logprob: -5.31437349319458
    6. '(

' → logprob: -5.43937349319458
    7. '#' → logprob: -5.68937349319458
    8. '

' → logprob: -5.81437349319458
    9. '\' → logprob: -6.06437349319458
    10. '
' → logprob: -6.18937349319458

Token 22: ' accumulate' (ID: 74226)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.0604972839355469
    2. 'com' → logprob: -2.310497283935547
    3. 'acc' → logprob: -2.435497283935547
    4. 'is' → logprob: -2.560497283935547
    5. 'cycle' → logprob: -2.560497283935547
    6. ' product' → logprob: -2.685497283935547
    7. 'st' → logprob: -2.810497283935547
    8. 'count' → logprob: -3.310497283935547
    9. ' st' → logprob: -3.435497283935547
    10. ' is' → logprob: -3.810497283935547

Token 23: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5820000767707825
    2. '(' → logprob: -1.2070000171661377
    3. '(
' → logprob: -2.5820000171661377
    4. ',' → logprob: -3.8320000171661377
    5. '\' → logprob: -4.332000255584717
    6. '
' → logprob: -5.207000255584717
    7. '\n' → logprob: -5.457000255584717
    8. '#' → logprob: -5.457000255584717
    9. ',
' → logprob: -6.332000255584717
    10. 'd' → logprob: -6.457000255584717

Token 24: ' is' (ID: 382)
  Prédit: ' st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' st' → logprob: -1.6119047403335571
    2. ' product' → logprob: -1.7369047403335571
    3. 'product' → logprob: -2.4869046211242676
    4. ' group' → logprob: -2.6119046211242676
    5. 'com' → logprob: -2.7369046211242676
    6. ' is' → logprob: -2.8619046211242676
    7. 'st' → logprob: -3.2369046211242676
    8. 'group' → logprob: -3.3619046211242676
    9. 'take' → logprob: -3.3619046211242676
    10. 'count' → logprob: -3.4869046211242676

Token 25: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.0001347672223346308
    2. 'l' → logprob: -9.375134468078613
    3. 'ce' → logprob: -11.375134468078613
    4. 'lic' → logprob: -12.125134468078613
    5. '```' → logprob: -12.250134468078613
    6. 'n' → logprob: -12.375134468078613
    7. '#' → logprob: -12.500134468078613
    8. '>' → logprob: -12.625134468078613
    9. 't' → logprob: -13.375134468078613
    10. '...' → logprob: -13.750134468078613

Token 26: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8681496381759644
    2. ',' → logprob: -1.3681496381759644
    3. '(' → logprob: -1.7431496381759644
    4. '(
' → logprob: -2.868149757385254
    5. '

' → logprob: -4.118149757385254
    6. ',
' → logprob: -4.118149757385254
    7. '\' → logprob: -4.493149757385254
    8. '
' → logprob: -4.493149757385254
    9. ' 

' → logprob: -5.243149757385254
    10. '(

' → logprob: -5.368149757385254

Token 27: ' count' (ID: 3605)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'take' → logprob: -1.7551883459091187
    2. 'cycle' → logprob: -2.005188465118408
    3. 'count' → logprob: -2.130188465118408
    4. 'st' → logprob: -2.505188465118408
    5. 'com' → logprob: -2.505188465118408
    6. 'group' → logprob: -3.005188465118408
    7. ' st' → logprob: -3.130188465118408
    8. 'product' → logprob: -3.255188465118408
    9. ' cycle' → logprob: -3.380188465118408
    10. 'compress' → logprob: -3.380188465118408

Token 28: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13043716549873352
    2. 'def' → logprob: -2.880437135696411
    3. '(
' → logprob: -3.130437135696411
    4. ',' → logprob: -4.38043737411499
    5. '#' → logprob: -6.00543737411499
    6. '(

' → logprob: -6.25543737411499
    7. '\' → logprob: -6.50543737411499
    8. ',
' → logprob: -7.50543737411499
    9. '\n' → logprob: -8.005436897277832
    10. '
' → logprob: -8.130436897277832

Token 29: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22466377913951874
    2. 'def' → logprob: -1.7246637344360352
    3. '(
' → logprob: -4.349663734436035
    4. 'd' → logprob: -5.349663734436035
    5. ',' → logprob: -6.724663734436035
    6. '#' → logprob: -6.849663734436035
    7. '_' → logprob: -7.849663734436035
    8. '\' → logprob: -7.974663734436035
    9. 'a' → logprob: -7.974663734436035
    10. ')' → logprob: -7.974663734436035

Token 30: ' ABS' (ID: 47975)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3210267126560211
    2. ' Fraction' → logprob: -2.3210268020629883
    3. ' L' → logprob: -3.1960268020629883
    4. ' Rational' → logprob: -3.4460268020629883
    5. ' Vector' → logprob: -3.5710268020629883
    6. ' Factor' → logprob: -4.321026802062988
    7. ' Math' → logprob: -4.821026802062988
    8. ' Number' → logprob: -4.821026802062988
    9. ' G' → logprob: -4.946026802062988
    10. ' Sequence' → logprob: -5.821026802062988

Token 31: 'se' (ID: 344)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4835185706615448
    2. '(' → logprob: -0.9835186004638672
    3. '(object' → logprob: -5.608518600463867
    4. '():' → logprob: -7.233518600463867
    5. 'ol' → logprob: -7.358518600463867
    6. '(Abstract' → logprob: -7.358518600463867
    7. '(abs' → logprob: -7.483518600463867
    8. '(C' → logprob: -7.733518600463867
    9. 'Calculator' → logprob: -8.108518600463867
    10. '(Value' → logprob: -8.233518600463867

Token 32: 'gt' (ID: 5115)
  Prédit: 'quence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.8116852641105652
    2. 'r' → logprob: -1.31168532371521
    3. 'q' → logprob: -1.93668532371521
    4. 'rt' → logprob: -3.43668532371521
    5. 'nt' → logprob: -4.061685085296631
    6. 't' → logprob: -4.061685085296631
    7. 'm' → logprob: -4.436685085296631
    8. 'ss' → logprob: -4.436685085296631
    9. 'qu' → logprob: -4.561685085296631
    10. 'arch' → logprob: -4.936685085296631

Token 33: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -6.0033853515051305e-05
    2. 'ee' → logprob: -10.000060081481934
    3. 'r' → logprob: -12.000060081481934
    4. 'reen' → logprob: -12.875060081481934
    5. 'rees' → logprob: -13.375060081481934
    6. '```' → logprob: -13.750060081481934
    7. 'er' → logprob: -14.125060081481934
    8. 're' → logprob: -14.250060081481934
    9. 'ress' → logprob: -14.375060081481934
    10. 'reet' → logprob: -15.000060081481934

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019067898392677307
    2. '(' → logprob: -4.019067764282227
    3. ' :' → logprob: -7.144067764282227
    4. '(object' → logprob: -10.269067764282227
    5. '(Abstract' → logprob: -10.519067764282227
    6. '():' → logprob: -11.019067764282227
    7. ':
' → logprob: -11.394067764282227
    8. '```' → logprob: -12.519067764282227
    9. '(:' → logprob: -12.894067764282227
    10. '<object' → logprob: -13.019067764282227

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7116822600364685
    2. ':' → logprob: -0.8366822600364685
    3. ' ' → logprob: -3.8366823196411133
    4. '    ' → logprob: -4.211682319641113
    5. '(' → logprob: -4.336682319641113
    6. ' :' → logprob: -4.586682319641113
    7. ' def' → logprob: -5.211682319641113
    8. ' (' → logprob: -5.461682319641113
    9. '<|end|>' → logprob: -6.586682319641113
    10. '  ' → logprob: -7.086682319641113

Token 36: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06009851396083832
    2. '   ' → logprob: -3.93509840965271
    3. '(' → logprob: -4.060098648071289
    4. ' def' → logprob: -5.185098648071289
    5. ' :' → logprob: -5.310098648071289
    6. 'def' (adapté à ' def') → logprob: -5.435098648071289
    7. ':
' → logprob: -6.310098648071289
    8. '(object' → logprob: -6.560098648071289
    9. ' (' → logprob: -7.185098648071289
    10. ' ' → logprob: -7.435098648071289

Token 37: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.12008324265480042
    2. ' __' → logprob: -2.9950833320617676
    3. 'nit' → logprob: -3.4950833320617676
    4. '_init' → logprob: -4.995083332061768
    5. 'n' → logprob: -5.245083332061768
    6. ' init' → logprob: -5.370083332061768
    7. '__' → logprob: -5.370083332061768
    8. 't' → logprob: -5.620083332061768
    9. 'it' → logprob: -5.995083332061768
    10. 'itialize' → logprob: -6.370083332061768

Token 38: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.375
    3. ' init' → logprob: -17.875
    4. 'new' → logprob: -18.0
    5. '_init' → logprob: -19.0
    6. 'in' → logprob: -19.625
    7. 'int' → logprob: -20.125
    8. 'c' → logprob: -20.5
    9. 'call' → logprob: -20.625
    10. 'i' → logprob: -21.625

Token 39: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.043753016740083694
    2. '__' → logprob: -3.918752908706665
    3. '(' → logprob: -4.293753147125244
    4. '(self' → logprob: -5.543753147125244
    5. '__((' → logprob: -6.668753147125244
    6. ' (' → logprob: -6.793753147125244
    7. '__(
' → logprob: -6.918753147125244
    8. '__(*' → logprob: -7.168753147125244
    9. '<|end|>' → logprob: -7.293753147125244
    10. '__('' → logprob: -9.418752670288086

Token 40: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016051262617111206
    2. ' self' → logprob: -4.141051292419434
    3. ')' → logprob: -12.141051292419434
    4. ' ' → logprob: -12.391051292419434
    5. '0' → logprob: -12.766051292419434
    6. '(self' → logprob: -13.516051292419434
    7. ',self' → logprob: -14.016051292419434
    8. '	self' → logprob: -14.766051292419434
    9. ',' → logprob: -14.891051292419434
    10. '[' → logprob: -15.016051292419434

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4742334187030792
    2. ' ,' → logprob: -1.5992333889007568
    3. 'self' → logprob: -2.099233388900757
    4. ' self' → logprob: -3.224233388900757
    5. ',self' → logprob: -4.474233627319336
    6. ' ' → logprob: -6.974233627319336
    7. '_self' → logprob: -7.599233627319336
    8. '(self' → logprob: -9.099233627319336
    9. ')' → logprob: -9.474233627319336
    10. ' )' → logprob: -9.474233627319336

Token 42: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09642663598060608
    2. ' self' → logprob: -2.5964267253875732
    3. 'n' → logprob: -4.721426486968994
    4. ' n' → logprob: -5.971426486968994
    5. 'data' → logprob: -5.971426486968994
    6. ' data' → logprob: -6.596426486968994
    7. 'size' → logprob: -7.846426486968994
    8. '       ' → logprob: -7.971426486968994
    9. 'arr' → logprob: -8.221426963806152
    10. ' size' → logprob: -8.471426963806152

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3004336655139923
    2. '):' → logprob: -1.42543363571167
    3. ' ):' → logprob: -4.30043363571167
    4. ' ,' → logprob: -5.55043363571167
    5. ')' → logprob: -6.55043363571167
    6. ' )' → logprob: -8.925434112548828
    7. ':' → logprob: -10.425434112548828
    8. '   ' → logprob: -11.175434112548828
    9. ' :' → logprob: -11.300434112548828
    10. '=' → logprob: -11.550434112548828

Token 44: ' ie' (ID: 25745)
  Prédit: ' func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' func' → logprob: -0.4923345744609833
    2. ' op' → logprob: -1.4923346042633057
    3. 'func' → logprob: -2.3673346042633057
    4. ' default' → logprob: -4.242334365844727
    5. ' data' → logprob: -4.742334365844727
    6. ' init' → logprob: -4.742334365844727
    7. 'init' → logprob: -5.117334365844727
    8. 'default' → logprob: -5.367334365844727
    9. 'data' → logprob: -5.367334365844727
    10. 'op' → logprob: -5.492334365844727

Token 45: ',' (ID: 11)
  Prédit: 'lement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lement' → logprob: -0.3678418695926666
    2. 'v' → logprob: -2.617841958999634
    3. 'val' → logprob: -2.617841958999634
    4. 'lem' → logprob: -3.242841958999634
    5. '_val' → logprob: -3.492841958999634
    6. 'x' → logprob: -4.242841720581055
    7. '_value' → logprob: -4.367841720581055
    8. '=' → logprob: -4.367841720581055
    9. 'le' → logprob: -4.617841720581055
    10. ':' → logprob: -4.742841720581055

Token 46: ' func' (ID: 4660)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.6478234529495239
    2. ' op' → logprob: -0.8978234529495239
    3. 'func' → logprob: -3.5228233337402344
    4. 'f' → logprob: -4.397823333740234
    5. ' func' → logprob: -4.647823333740234
    6. 'fn' → logprob: -5.647823333740234
    7. ' f' → logprob: -6.022823333740234
    8. ' fn' → logprob: -6.022823333740234
    9. 'fx' → logprob: -6.647823333740234
    10. ' seg' → logprob: -7.022823333740234

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008168928325176239
    2. ')' → logprob: -7.750816822052002
    3. ',' → logprob: -8.12581729888916
    4. '=' → logprob: -9.87581729888916
    5. ' ):' → logprob: -10.37581729888916
    6. '):
' → logprob: -12.62581729888916
    7. '=None' → logprob: -13.50081729888916
    8. ':' → logprob: -14.12581729888916
    9. '),' → logprob: -15.25081729888916
    10. ')):' → logprob: -15.37581729888916

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7332482933998108
    2. ':' → logprob: -1.108248233795166
    3. '):' → logprob: -1.733248233795166
    4. ')' → logprob: -5.358248233795166
    5. ',' → logprob: -5.358248233795166
    6. ' ):' → logprob: -7.733248233795166
    7. '):
' → logprob: -7.858248233795166
    8. '   ' → logprob: -7.983248233795166
    9. '():' → logprob: -7.983248233795166
    10. '=' → logprob: -7.983248233795166

Token 49: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5098496675491333
    2. ' self' → logprob: -1.0098496675491333
    3. '       ' → logprob: -3.3848495483398438
    4. '        ' → logprob: -7.884849548339844
    5. ' ' → logprob: -8.134849548339844
    6. '   ' → logprob: -8.634849548339844
    7. ' ' → logprob: -9.884849548339844
    8. '           ' → logprob: -10.009849548339844
    9. '	self' → logprob: -10.009849548339844
    10. '```' → logprob: -10.134849548339844

Token 50: '.func' (ID: 39446)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02251528389751911
    2. '.N' → logprob: -3.897515296936035
    3. ' .' → logprob: -6.397515296936035
    4. '.n' → logprob: -8.772515296936035
    5. '._' → logprob: -10.022515296936035
    6. ' ' → logprob: -10.772515296936035
    7. '.size' → logprob: -11.272515296936035
    8. '.__' → logprob: -11.522515296936035
    9. '.next' → logprob: -12.272515296936035
    10. '.value' → logprob: -12.397515296936035

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34862932562828064
    2. '=' → logprob: -1.223629355430603
    3. ' ' → logprob: -8.723628997802734
    4. ',' → logprob: -11.723628997802734
    5. '  ' → logprob: -12.598628997802734
    6. '    ' → logprob: -13.098628997802734
    7. '(' → logprob: -13.848628997802734
    8. '_' → logprob: -13.848628997802734
    9. '        ' → logprob: -13.848628997802734
    10. ')' → logprob: -13.848628997802734

Token 52: ' func' (ID: 4660)
  Prédit: ' func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' func' → logprob: -0.38689079880714417
    2. 'func' → logprob: -1.1368907690048218
    3. '	func' → logprob: -11.011890411376953
    4. '(func' → logprob: -12.886890411376953
    5. 'fun' → logprob: -15.511890411376953
    6. '_func' → logprob: -15.886890411376953
    7. '.func' → logprob: -16.011890411376953
    8. ' ' → logprob: -16.636890411376953
    9. ' fun' → logprob: -16.761890411376953
    10. '   ' → logprob: -17.261890411376953

Token 53: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23053103685379028
    2. '
' → logprob: -1.6055309772491455
    3. '<|end|>' → logprob: -5.855531215667725
    4. 'self' → logprob: -7.230531215667725
    5. '        
' → logprob: -7.730531215667725
    6. '  
' → logprob: -8.105530738830566
    7. '   ' → logprob: -8.605530738830566
    8. ' self' → logprob: -8.980530738830566
    9. '        ' → logprob: -9.480530738830566
    10. ' 
' → logprob: -9.605530738830566

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012782147154211998
    2. '<|end|>' → logprob: -4.637782096862793
    3. 'self' → logprob: -6.637782096862793
    4. '        
' → logprob: -7.137782096862793
    5. '
' → logprob: -7.637782096862793
    6. '  
' → logprob: -8.887782096862793
    7. ' self' → logprob: -9.012782096862793
    8. '<|end|>' → logprob: -9.887782096862793
    9. '```' → logprob: -10.512782096862793
    10. ',' → logprob: -11.137782096862793

Token 55: ' get' (ID: 717)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16052712500095367
    2. 'self' → logprob: -2.160527229309082
    3. ' self' → logprob: -3.410527229309082
    4. ' ' → logprob: -12.660527229309082
    5. '	self' → logprob: -12.660527229309082
    6. '      ' → logprob: -12.910527229309082
    7. '<|end|>' → logprob: -13.410527229309082
    8. '   ' → logprob: -13.410527229309082
    9. 'import' → logprob: -13.785527229309082
    10. 'super' → logprob: -14.160527229309082

Token 56: 'LEN' (ID: 83946)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.14240762591362
    2. 'ter' → logprob: -2.1424076557159424
    3. '_len' → logprob: -5.892407417297363
    4. '_' → logprob: -5.892407417297363
    5. '_size' → logprob: -6.517407417297363
    6. 'item' → logprob: -7.142407417297363
    7. '_iter' → logprob: -7.392407417297363
    8. '_val' → logprob: -7.517407417297363
    9. 'layer' → logprob: -7.767407417297363
    10. '_abs' → logprob: -7.767407417297363

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11906401067972183
    2. '=' → logprob: -2.3690640926361084
    3. ' ' → logprob: -5.119063854217529
    4. '=N' → logprob: -5.994063854217529
    5. '=len' → logprob: -6.369063854217529
    6. '   ' → logprob: -6.369063854217529
    7. '=self' → logprob: -6.994063854217529
    8. 'len' → logprob: -7.244063854217529
    9. '  ' → logprob: -7.244063854217529
    10. 'f' → logprob: -7.494063854217529

Token 58: ' lambda' (ID: 27871)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.766749918460846
    2. ' lambda' → logprob: -1.6417498588562012
    3. '(lambda' → logprob: -1.7667498588562012
    4. ' ' → logprob: -2.516749858856201
    5. 'lambda' → logprob: -2.891749858856201
    6. ' (' → logprob: -4.766749858856201
    7. 'N' → logprob: -5.141749858856201
    8. ' N' → logprob: -5.141749858856201
    9. '(' → logprob: -5.266749858856201
    10. '   ' → logprob: -5.391749858856201

Token 59: ' n' (ID: 297)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.27158501744270325
    2. 'x' → logprob: -1.8965849876403809
    3. ' n' → logprob: -3.021584987640381
    4. ' self' → logprob: -4.021584987640381
    5. 'n' → logprob: -5.021584987640381
    6. ' lambda' → logprob: -5.521584987640381
    7. 'N' → logprob: -5.896584987640381
    8. ' N' → logprob: -5.896584987640381
    9. ' i' → logprob: -6.521584987640381
    10. 'self' → logprob: -6.896584987640381

Token 60: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0069136954843997955
    2. ' :' → logprob: -5.131913661956787
    3. ':n' → logprob: -7.506913661956787
    4. ':(' → logprob: -8.131914138793945
    5. ',n' → logprob: -9.881914138793945
    6. ',' → logprob: -9.881914138793945
    7. ':max' → logprob: -11.506914138793945
    8. '=' → logprob: -12.131914138793945
    9. ',:' → logprob: -12.756914138793945
    10. ' :(' → logprob: -12.881914138793945

Token 61: ' next' (ID: 2613)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5807281732559204
    2. ' ' → logprob: -1.4557281732559204
    3. '(' → logprob: -2.330728054046631
    4. '2' → logprob: -2.955728054046631
    5. ' (' → logprob: -3.205728054046631
    6. '(n' → logprob: -5.080728054046631
    7. '(max' → logprob: -5.580728054046631
    8. 'n' → logprob: -5.830728054046631
    9. ' n' → logprob: -7.205728054046631
    10. '   ' → logprob: -7.330728054046631

Token 62: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3344056308269501
    2. '(count' → logprob: -1.8344056606292725
    3. '(i' → logprob: -2.4594056606292725
    4. '(' → logprob: -4.459405422210693
    5. '(pow' → logprob: -4.584405422210693
    6. '(k' → logprob: -4.959405422210693
    7. '(is' → logprob: -5.709405422210693
    8. '(p' → logprob: -6.084405422210693
    9. '(filter' → logprob: -6.959405422210693
    10. '(c' → logprob: -7.334405422210693

Token 63: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6357402205467224
    2. '(i' → logprob: -1.2607402801513672
    3. 'for' → logprob: -2.510740280151367
    4. '(' → logprob: -2.635740280151367
    5. '(x' → logprob: -3.885740280151367
    6. '(count' → logprob: -5.885740280151367
    7. '(v' → logprob: -6.760740280151367
    8. '(n' → logprob: -6.760740280151367
    9. '(y' → logprob: -6.885740280151367
    10. '(k' → logprob: -7.260740280151367

Token 64: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02048536017537117
    2. ' x' → logprob: -4.2704854011535645
    3. 'count' → logprob: -5.2704854011535645
    4. 'chain' → logprob: -7.6454854011535645
    5. ' count' → logprob: -8.020484924316406
    6. ' chain' → logprob: -8.520484924316406
    7. 'range' → logprob: -10.145484924316406
    8. '(x' → logprob: -10.895484924316406
    9. ' ' → logprob: -11.020484924316406
    10. ' range' → logprob: -11.645484924316406

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00028052396373823285
    2. 'in' → logprob: -8.250280380249023
    3. ' x' → logprob: -12.500280380249023
    4. 'n' → logprob: -13.000280380249023
    5. 'x' → logprob: -13.000280380249023
    6. ' ' → logprob: -13.125280380249023
    7. 'e' → logprob: -13.250280380249023
    8. ',' → logprob: -13.750280380249023
    9. 't' → logprob: -13.875280380249023
    10. ',x' → logprob: -14.250280380249023

Token 66: ' map' (ID: 4014)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.021524986252188683
    2. 'chain' → logprob: -4.021524906158447
    3. '(count' → logprob: -6.146524906158447
    4. ' count' → logprob: -7.646524906158447
    5. '(chain' → logprob: -8.146525382995605
    6. 'range' → logprob: -8.771525382995605
    7. 'iter' → logprob: -9.896525382995605
    8. ' chain' → logprob: -9.896525382995605
    9. '[count' → logprob: -9.896525382995605
    10. 'filter' → logprob: -10.146525382995605

Token 67: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.044865354895591736
    2. '(int' → logprob: -3.419865369796753
    3. '(' → logprob: -4.669865131378174
    4. '(pow' → logprob: -6.419865131378174
    5. '(abs' → logprob: -9.544865608215332
    6. '(str' → logprob: -10.669865608215332
    7. '((' → logprob: -10.669865608215332
    8. '(count' → logprob: -11.169865608215332
    9. '(operator' → logprob: -12.294865608215332
    10. 'pow' → logprob: -12.669865608215332

Token 68: ' z' (ID: 579)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.6569769382476807
    2. '(' → logprob: -0.7819769382476807
    3. '(int' → logprob: -3.7819769382476807
    4. '(pow' → logprob: -7.281976699829102
    5. '(str' → logprob: -8.781976699829102
    6. '(len' → logprob: -9.281976699829102
    7. ':' → logprob: -9.656976699829102
    8. ' (' → logprob: -9.906976699829102
    9. '((' → logprob: -9.906976699829102
    10. 'lambda' → logprob: -10.281976699829102

Token 69: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018783047562465072
    2. ' :' → logprob: -6.876878261566162
    3. ',' → logprob: -8.12687873840332
    4. ':int' → logprob: -8.37687873840332
    5. '(' → logprob: -9.00187873840332
    6. ':(' → logprob: -9.25187873840332
    7. '2' → logprob: -10.87687873840332
    8. '1' → logprob: -11.00187873840332
    9. '(lambda' → logprob: -11.00187873840332
    10. '   ' → logprob: -12.00187873840332

Token 70: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4059211313724518
    2. ' ' → logprob: -1.5309211015701294
    3. '1' → logprob: -2.155921220779419
    4. '(' → logprob: -7.53092098236084
    5. ' (' → logprob: -8.28092098236084
    6. ' z' → logprob: -8.65592098236084
    7. 'pow' → logprob: -8.65592098236084
    8. 'z' → logprob: -9.03092098236084
    9. 'int' → logprob: -9.90592098236084
    10. ' pow' → logprob: -10.28092098236084

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09159758687019348
    2. '1' → logprob: -2.466597557067871
    3. ' ' → logprob: -6.966597557067871
    4. '(' → logprob: -7.091597557067871
    5. 'z' → logprob: -7.341597557067871
    6. 'pow' → logprob: -9.341597557067871
    7. 'int' → logprob: -10.091597557067871
    8. 'x' → logprob: -10.716597557067871
    9. '   ' → logprob: -11.091597557067871
    10. 'abs' → logprob: -11.091597557067871

Token 72: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.006741065997630358
    2. ' **' → logprob: -5.006741046905518
    3. '<<' → logprob: -11.506741523742676
    4. '**)' → logprob: -11.756741523742676
    5. ' **)' → logprob: -13.006741523742676
    6. ' <<' → logprob: -13.506741523742676
    7. '*' → logprob: -13.881741523742676
    8. '**
' → logprob: -14.756741523742676
    9. '*x' → logprob: -14.756741523742676
    10. '*z' → logprob: -14.881741523742676

Token 73: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -5.5861724831629544e-05
    2. ' z' → logprob: -9.875056266784668
    3. '(z' → logprob: -13.625056266784668
    4. 'x' → logprob: -14.000056266784668
    5. ' ' → logprob: -14.125056266784668
    6. '	z' → logprob: -14.250056266784668
    7. '(' → logprob: -14.375056266784668
    8. '   ' → logprob: -16.37505531311035
    9. '  ' → logprob: -16.87505531311035
    10. '<|end|>' → logprob: -16.87505531311035

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05651401728391647
    2. '(' → logprob: -3.306514024734497
    3. ' if' → logprob: -4.306513786315918
    4. '(lambda' → logprob: -6.181513786315918
    5. '(range' → logprob: -7.431513786315918
    6. ':' → logprob: -7.806513786315918
    7. '(int' → logprob: -8.056513786315918
    8. 'if' → logprob: -8.181513786315918
    9. '   ' → logprob: -8.306513786315918
    10. ' ,' → logprob: -8.806513786315918

Token 75: ' count' (ID: 3605)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.21125267446041107
    2. 'range' → logprob: -1.7112526893615723
    3. ' count' → logprob: -4.961252689361572
    4. 'count' → logprob: -5.961252689361572
    5. '	range' → logprob: -9.836252212524414
    6. ' ' → logprob: -10.086252212524414
    7. ' chain' → logprob: -10.336252212524414
    8. 'chain' → logprob: -10.836252212524414
    9. '(range' → logprob: -10.961252212524414
    10. ' iter' → logprob: -11.586252212524414

Token 76: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015964455902576447
    2. '(n' → logprob: -4.390964508056641
    3. '(N' → logprob: -5.765964508056641
    4. '0' → logprob: -9.26596450805664
    5. ')' → logprob: -9.51596450805664
    6. '(len' → logprob: -10.51596450805664
    7. ' (' → logprob: -10.64096450805664
    8. '1' → logprob: -11.14096450805664
    9. ' ' → logprob: -11.39096450805664
    10. '(count' → logprob: -12.14096450805664

Token 77: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28178638219833374
    2. 'if' → logprob: -1.4067864418029785
    3. '   ' → logprob: -7.6567864418029785
    4. '           ' → logprob: -9.90678596496582
    5. '(' → logprob: -10.40678596496582
    6. '  ' → logprob: -11.28178596496582
    7. '    ' → logprob: -11.40678596496582
    8. '>=' → logprob: -11.78178596496582
    9. ' ' → logprob: -11.90678596496582
    10. '                   ' → logprob: -12.03178596496582

Token 78: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4287577271461487
    2. 'x' → logprob: -1.053757667541504
    3. ' z' → logprob: -10.678757667541504
    4. 'z' → logprob: -11.178757667541504
    5. '	x' → logprob: -11.678757667541504
    6. '(x' → logprob: -11.928757667541504
    7. ')x' → logprob: -13.678757667541504
    8. '>x' → logprob: -13.678757667541504
    9. ' ' → logprob: -14.303757667541504
    10. '{x' → logprob: -14.303757667541504

Token 79: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.04861462116241455
    2. ' >=' → logprob: -3.048614501953125
    3. '>' → logprob: -10.673614501953125
    4. ']>=' → logprob: -13.173614501953125
    5. ')>=' → logprob: -14.048614501953125
    6. ' >' → logprob: -14.423614501953125
    7. '   ' → logprob: -15.173614501953125
    8. ' ' → logprob: -15.923614501953125
    9. '≥' → logprob: -16.298614501953125
    10. '>>' → logprob: -17.048614501953125

Token 80: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11286915838718414
    2. ' n' → logprob: -2.2378692626953125
    3. '	n' → logprob: -10.237869262695312
    4. 'N' → logprob: -12.362869262695312
    5. ' ' → logprob: -13.237869262695312
    6. '   ' → logprob: -13.362869262695312
    7. ')n' → logprob: -13.737869262695312
    8. '_n' → logprob: -14.487869262695312
    9. '  ' → logprob: -14.862869262695312
    10. ' N' → logprob: -14.987869262695312

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010354298865422606
    2. ')
' → logprob: -7.001035213470459
    3. ' )' → logprob: -10.001035690307617
    4. '       ' → logprob: -10.001035690307617
    5. ')

' → logprob: -11.001035690307617
    6. ')
' → logprob: -12.876035690307617
    7. '   ' → logprob: -13.251035690307617
    8. '))' → logprob: -13.251035690307617
    9. '           ' → logprob: -13.751035690307617
    10. '())' → logprob: -13.876035690307617

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037423637695610523
    2. '
' → logprob: -6.503742218017578
    3. '()' → logprob: -7.378742218017578
    4. '<|end|>' → logprob: -8.003742218017578
    5. 'self' → logprob: -8.503742218017578
    6. '(self' → logprob: -8.753742218017578
    7. '()
' → logprob: -8.753742218017578
    8. '(n' → logprob: -9.253742218017578
    9. '(N' → logprob: -9.253742218017578
    10. '(' → logprob: -9.378742218017578

Token 83: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019478915259242058
    2. 'self' (adapté à ' self') → logprob: -4.894478797912598
    3. ' self' → logprob: -4.894478797912598
    4. '
' → logprob: -6.519478797912598
    5. '<|end|>' → logprob: -7.019478797912598
    6. '        
' → logprob: -7.269478797912598
    7. '  
' → logprob: -8.394478797912598
    8. ' 
' → logprob: -8.644478797912598
    9. '#' → logprob: -8.894478797912598
    10. ')' → logprob: -9.144478797912598

Token 84: '.get' (ID: 775)
  Prédit: '.N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.11922675371170044
    2. '.len' → logprob: -2.9942266941070557
    3. '.L' → logprob: -3.6192266941070557
    4. '.n' → logprob: -4.744226932525635
    5. '.length' → logprob: -4.869226932525635
    6. '.LE' → logprob: -4.994226932525635
    7. '.LENGTH' → logprob: -4.994226932525635
    8. '.size' → logprob: -5.994226932525635
    9. '.SIZE' → logprob: -7.244226932525635
    10. '.Len' → logprob: -7.619226932525635

Token 85: 'LEN' (ID: 83946)
  Prédit: 'LEN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -0.00010318557906430215
    2. 'len' → logprob: -9.500102996826172
    3. '_LEN' → logprob: -11.375102996826172
    4. '_len' → logprob: -11.500102996826172
    5. 'L' → logprob: -13.250102996826172
    6. ' LEN' → logprob: -13.250102996826172
    7. 'Len' → logprob: -13.750102996826172
    8. 'LN' → logprob: -14.500102996826172
    9. '_length' → logprob: -15.000102996826172
    10. 'length' → logprob: -15.125102996826172

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025570034980774
    2. '=' → logprob: -1.9102556705474854
    3. '(' → logprob: -10.660255432128906
    4. '=N' → logprob: -12.160255432128906
    5. ' ' → logprob: -13.910255432128906
    6. '=get' → logprob: -14.160255432128906
    7. '=(' → logprob: -15.160255432128906
    8. '(N' → logprob: -15.535255432128906
    9. ' =(' → logprob: -15.660255432128906
    10. '    ' → logprob: -16.035255432128906

Token 87: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0003256911295466125
    2. ' get' → logprob: -8.250326156616211
    3. 'lambda' → logprob: -9.750326156616211
    4. '(get' → logprob: -12.250326156616211
    5. ' lambda' → logprob: -14.250326156616211
    6. '   ' → logprob: -15.000326156616211
    7. '(lambda' → logprob: -15.750326156616211
    8. '	get' → logprob: -16.25032615661621
    9. ' ' → logprob: -17.75032615661621
    10. '  ' → logprob: -17.87532615661621

Token 88: 'LEN' (ID: 83946)
  Prédit: 'LEN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -5.9153885558771435e-06
    2. ' LEN' → logprob: -13.000005722045898
    3. 'L' → logprob: -13.250005722045898
    4. 'LEM' → logprob: -14.250005722045898
    5. 'len' → logprob: -14.375005722045898
    6. 'LE' → logprob: -15.125005722045898
    7. 'EN' → logprob: -16.0000057220459
    8. '_LEN' → logprob: -16.3750057220459
    9. 'LEX' → logprob: -17.7500057220459
    10. 'Len' → logprob: -18.0000057220459

Token 89: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.7289270162582397
    2. '(' → logprob: -1.3539270162582397
    3. '       ' → logprob: -1.8539270162582397
    4. '
' → logprob: -2.7289271354675293
    5. '(self' → logprob: -4.103927135467529
    6. '(len' → logprob: -4.728927135467529
    7. '(n' → logprob: -4.853927135467529
    8. '<|end|>' → logprob: -7.103927135467529
    9. 'self' → logprob: -7.228927135467529
    10. '        
' → logprob: -7.478927135467529

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.209963900502771e-05
    2. '))' → logprob: -9.375092506408691
    3. ')))' → logprob: -12.500092506408691
    4. ' )' → logprob: -13.000092506408691
    5. ')
' → logprob: -14.750092506408691
    6. ')}' → logprob: -14.750092506408691
    7. '),' → logprob: -16.000091552734375
    8. ')}}' → logprob: -16.375091552734375
    9. ')`' → logprob: -16.750091552734375
    10. '())' → logprob: -16.875091552734375

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029515549540519714
    2. '<|end|>' → logprob: -5.877951622009277
    3. '	' → logprob: -10.502951622009277
    4. ')' → logprob: -10.877951622009277
    5. '
' → logprob: -11.002951622009277
    6. '        
' → logprob: -11.377951622009277
    7. '   ' → logprob: -11.377951622009277
    8. '      ' → logprob: -11.502951622009277
    9. 'self' → logprob: -11.752951622009277
    10. '        ' → logprob: -11.877951622009277

Token 92: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003311627544462681
    2. 'self' (adapté à ' self') → logprob: -6.753311634063721
    3. '<|end|>' → logprob: -7.003311634063721
    4. ' self' → logprob: -7.628311634063721
    5. ')' → logprob: -8.628311157226562
    6. '	' → logprob: -9.378311157226562
    7. '
' → logprob: -9.628311157226562
    8. '   ' → logprob: -9.878311157226562
    9. ' ' → logprob: -10.378311157226562
    10. 'n' → logprob: -10.628311157226562

Token 93: '.get' (ID: 775)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.data' → logprob: -1.292686104774475
    2. ' =' → logprob: -1.542686104774475
    3. 'data' → logprob: -2.0426859855651855
    4. '.' → logprob: -2.2926859855651855
    5. '_data' → logprob: -3.1676859855651855
    6. 's' → logprob: -3.6676859855651855
    7. '.A' → logprob: -3.9176859855651855
    8. '_len' → logprob: -4.1676859855651855
    9. '._' → logprob: -4.4176859855651855
    10. 'len' → logprob: -4.6676859855651855

Token 94: 'size' (ID: 4461)
  Prédit: 'LEN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -0.009165652096271515
    2. 'DATA' → logprob: -6.5091657638549805
    3. 'ARR' → logprob: -6.8841657638549805
    4. '_LEN' → logprob: -7.2591657638549805
    5. 'VAL' → logprob: -7.5091657638549805
    6. 'len' → logprob: -7.7591657638549805
    7. '_len' → logprob: -8.25916576385498
    8. 'data' → logprob: -8.38416576385498
    9. 'SIZE' → logprob: -8.38416576385498
    10. 'ARRAY' → logprob: -8.38416576385498

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22563885152339935
    2. '=' → logprob: -1.6006388664245605
    3. ' ' → logprob: -9.975638389587402
    4. '=lambda' → logprob: -10.350638389587402
    5. '<|end|>' → logprob: -10.475638389587402
    6. '    ' → logprob: -10.600638389587402
    7. '(' → logprob: -10.600638389587402
    8. '  ' → logprob: -11.350638389587402
    9. '   ' → logprob: -11.350638389587402
    10. '=len' → logprob: -11.850638389587402

Token 96: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47585076093673706
    2. 'self' → logprob: -1.3508508205413818
    3. ' lambda' → logprob: -2.475850820541382
    4. ' ' → logprob: -4.225850582122803
    5. 'lambda' → logprob: -4.725850582122803
    6. '2' → logprob: -5.475850582122803
    7. ' N' → logprob: -6.350850582122803
    8. '1' → logprob: -6.600850582122803
    9. '   ' → logprob: -7.100850582122803
    10. 'N' → logprob: -7.725850582122803

Token 97: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -6.217951886355877e-05
    2. 'get' → logprob: -10.125061988830566
    3. '.' → logprob: -11.125061988830566
    4. '.size' → logprob: -12.875061988830566
    5. '.len' → logprob: -13.875061988830566
    6. 'ength' → logprob: -14.875061988830566
    7. ' .' → logprob: -15.125061988830566
    8. 't' → logprob: -15.250061988830566
    9. '.func' → logprob: -15.250061988830566
    10. 'size' → logprob: -15.375061988830566

Token 98: 'LEN' (ID: 83946)
  Prédit: 'LEN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -3.4121114822482923e-06
    2. 'L' → logprob: -13.000003814697266
    3. 'SIZE' → logprob: -14.125003814697266
    4. 'len' → logprob: -15.750003814697266
    5. '_LEN' → logprob: -16.000003814697266
    6. ' LEN' → logprob: -16.625003814697266
    7. 'LEM' → logprob: -17.875003814697266
    8. 'LIN' → logprob: -18.375003814697266
    9. 'size' → logprob: -19.000003814697266
    10. 'LN' → logprob: -19.000003814697266

Token 99: ' <<' (ID: 2256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000731377920601517
    2. '2' → logprob: -7.750731468200684
    3. ' ' → logprob: -8.125731468200684
    4. '   ' → logprob: -12.625731468200684
    5. '3' → logprob: -14.500731468200684
    6. '0' → logprob: -15.500731468200684
    7. '10' → logprob: -16.000730514526367
    8. '       ' → logprob: -16.125730514526367
    9. '6' → logprob: -16.250730514526367
    10. '	' → logprob: -16.250730514526367

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. '2' → logprob: -11.875008583068848
    3. ' ' → logprob: -14.000008583068848
    4. '0' → logprob: -14.875008583068848
    5. '   ' → logprob: -16.12500762939453
    6. '3' → logprob: -16.62500762939453
    7. '```' → logprob: -17.75000762939453
    8. '-' → logprob: -17.87500762939453
    9. '5' → logprob: -18.25000762939453
    10. '6' → logprob: -18.68750762939453

Token 102: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28907036781311035
    2. '<|end|>' → logprob: -1.5390703678131104
    3. '
' → logprob: -3.5390703678131104
    4. '   ' → logprob: -6.164070129394531
    5. '        
' → logprob: -7.039070129394531
    6. '<|end|>' → logprob: -7.164070129394531
    7. ')' → logprob: -7.414070129394531
    8. ' 
' → logprob: -7.539070129394531
    9. ' ' → logprob: -7.664070129394531
    10. ',' → logprob: -7.789070129394531

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29162082076072693
    2. '<|end|>' → logprob: -1.4166208505630493
    3. '
' → logprob: -4.79162073135376
    4. '<|end|>' → logprob: -7.16662073135376
    5. ',' → logprob: -8.041621208190918
    6. ')' → logprob: -8.416621208190918
    7. '        
' → logprob: -8.541621208190918
    8. '   ' → logprob: -8.916621208190918
    9. ' ' → logprob: -9.291621208190918
    10. '#' → logprob: -9.666621208190918

Token 104: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014472098089754581
    2. 'self' (adapté à ' self') → logprob: -4.514472007751465
    3. '   ' → logprob: -6.264472007751465
    4. ' self' → logprob: -6.514472007751465
    5. '	self' → logprob: -11.514472007751465
    6. ' ' → logprob: -11.764472007751465
    7. '      ' → logprob: -12.889472007751465
    8. '        
' → logprob: -13.014472007751465
    9. '	   ' → logprob: -13.139472007751465
    10. '     ' → logprob: -13.389472007751465

Token 105: '.get' (ID: 775)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.11154528707265854
    2. '.' → logprob: -2.9865453243255615
    3. '.array' → logprob: -4.611545085906982
    4. '.tree' → logprob: -4.611545085906982
    5. '._' → logprob: -5.111545085906982
    6. '.arr' → logprob: -5.361545085906982
    7. '.seg' → logprob: -5.986545085906982
    8. '.values' → logprob: -5.986545085906982
    9. '.val' → logprob: -6.111545085906982
    10. ' .' → logprob: -6.111545085906982

Token 106: 'LIN' (ID: 61147)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7395297884941101
    2. 'size' → logprob: -2.614529848098755
    3. 'arr' → logprob: -3.114529848098755
    4. 'list' → logprob: -3.239529848098755
    5. 'array' → logprob: -3.239529848098755
    6. 'tree' → logprob: -3.489529848098755
    7. 'DATA' → logprob: -3.614529848098755
    8. 'LEN' → logprob: -3.614529848098755
    9. '_data' → logprob: -3.989529848098755
    10. 'index' → logprob: -3.989529848098755

Token 107: ' =' (ID: 314)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.12144007533788681
    2. 'ES' → logprob: -2.7464401721954346
    3. 'EN' → logprob: -4.6214399337768555
    4. 'K' → logprob: -4.6214399337768555
    5. 'SIZE' → logprob: -5.2464399337768555
    6. ' =' → logprob: -5.3714399337768555
    7. 'UX' → logprob: -5.6214399337768555
    8. 'size' → logprob: -6.3714399337768555
    9. 'EAR' → logprob: -6.8714399337768555
    10. 'ENO' → logprob: -6.9964399337768555

Token 108: ' self' (ID: 1051)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4918486177921295
    2. '[' → logprob: -1.4918485879898071
    3. '[self' → logprob: -2.6168487071990967
    4. ' self' → logprob: -3.1168487071990967
    5. 'self' → logprob: -3.9918487071990967
    6. '[N' → logprob: -4.866848468780518
    7. ' lambda' → logprob: -5.616848468780518
    8. ' list' → logprob: -6.241848468780518
    9. '0' → logprob: -6.366848468780518
    10. 'lambda' → logprob: -6.741848468780518

Token 109: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.05028528720140457
    2. 'get' → logprob: -3.0502853393554688
    3. 'ength' → logprob: -7.675285339355469
    4. 'N' → logprob: -8.425285339355469
    5. 'self' → logprob: -8.925285339355469
    6. '.' → logprob: -9.050285339355469
    7. '_get' → logprob: -9.425285339355469
    8. '.N' → logprob: -9.675285339355469
    9. '   ' → logprob: -9.800285339355469
    10. ' ' → logprob: -10.175285339355469

Token 110: 'size' (ID: 4461)
  Prédit: 'LEN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -0.058353934437036514
    2. 'SIZE' → logprob: -3.183353900909424
    3. 'size' → logprob: -4.433353900909424
    4. 'EN' → logprob: -6.558353900909424
    5. 'L' → logprob: -7.683353900909424
    6. 'E' → logprob: -8.058354377746582
    7. 'LIN' → logprob: -9.058354377746582
    8. 'LINE' → logprob: -9.683354377746582
    9. 'S' → logprob: -9.933354377746582
    10. 'LE' → logprob: -9.995854377746582

Token 111: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15479351580142975
    2. '
' → logprob: -2.5297935009002686
    3. '<|end|>' → logprob: -3.0297935009002686
    4. '   ' → logprob: -5.779793739318848
    5. '-' → logprob: -6.029793739318848
    6. '+' → logprob: -6.029793739318848
    7. ' -' → logprob: -7.154793739318848
    8. '[' → logprob: -7.279793739318848
    9. '<|end|>' → logprob: -7.279793739318848
    10. ',' → logprob: -7.404793739318848

Token 112: ' self' (ID: 1051)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026555603370070457
    2. 'self' → logprob: -3.6515555381774902
    3. ' ' → logprob: -9.026556015014648
    4. ' self' → logprob: -9.151556015014648
    5. '   ' → logprob: -11.026556015014648
    6. '       ' → logprob: -11.901556015014648
    7. '           ' → logprob: -12.901556015014648
    8. '2' → logprob: -14.901556015014648
    9. '                   ' → logprob: -14.901556015014648
    10. '     ' → logprob: -14.901556015014648

Token 113: '.get' (ID: 775)
  Prédit: 'LEN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -1.713188886642456
    2. 'get' → logprob: -1.963188886642456
    3. 'N' → logprob: -2.338188886642456
    4. 'size' → logprob: -2.463188886642456
    5. '_len' → logprob: -3.338188886642456
    6. 'self' → logprob: -3.338188886642456
    7. '[' → logprob: -3.338188886642456
    8. '.get' → logprob: -3.463188886642456
    9. '1' → logprob: -3.463188886642456
    10. 'Len' → logprob: -3.588188886642456

Token 114: 'LEN' (ID: 83946)
  Prédit: 'LEN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -0.00011129142512800172
    2. 'N' → logprob: -10.25011157989502
    3. 'EN' → logprob: -10.62511157989502
    4. 'len' → logprob: -10.87511157989502
    5. '1' → logprob: -11.00011157989502
    6. 'L' → logprob: -12.50011157989502
    7. 'LE' → logprob: -12.50011157989502
    8. 'LN' → logprob: -12.62511157989502
    9. 'ENT' → logprob: -13.75011157989502
    10. 'END' → logprob: -13.87511157989502

Token 115: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09232361614704132
    2. '<|end|>' → logprob: -2.4673235416412354
    3. 'self' → logprob: -7.0923237800598145
    4. '
' → logprob: -7.0923237800598145
    5. ')' → logprob: -7.4673237800598145
    6. '<|end|>' → logprob: -8.467323303222656
    7. ',' → logprob: -8.842323303222656
    8. '   ' → logprob: -9.092323303222656
    9. ' self' → logprob: -9.467323303222656
    10. '        
' → logprob: -9.467323303222656

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005410005105659366
    2. 'self' → logprob: -8.375540733337402
    3. '<|end|>' → logprob: -8.375540733337402
    4. '   ' → logprob: -10.375540733337402
    5. '        
' → logprob: -11.750540733337402
    6. ' self' → logprob: -11.750540733337402
    7. 'def' → logprob: -12.250540733337402
    8. '      ' → logprob: -12.375540733337402
    9. '
' → logprob: -12.375540733337402
    10. ',' → logprob: -12.500540733337402

Token 117: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034994613379240036
    2. '   ' → logprob: -6.253499507904053
    3. 'self' (adapté à ' self') → logprob: -7.003499507904053
    4. ' self' → logprob: -7.503499507904053
    5. '      ' → logprob: -10.628499031066895
    6. 'def' → logprob: -11.128499031066895
    7. '	   ' → logprob: -11.128499031066895
    8. ' ' → logprob: -11.503499031066895
    9. '<|end|>' → logprob: -12.003499031066895
    10. '     ' → logprob: -12.128499031066895

Token 118: '.ST' (ID: 28339)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.32765400409698486
    2. '.data' → logprob: -1.4526540040969849
    3. '.values' → logprob: -4.452653884887695
    4. ' .' → logprob: -5.202653884887695
    5. '.tree' → logprob: -5.702653884887695
    6. '.array' → logprob: -6.327653884887695
    7. 'data' → logprob: -6.702653884887695
    8. '.nodes' → logprob: -6.702653884887695
    9. '._' → logprob: -6.827653884887695
    10. '.store' → logprob: -6.952653884887695

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6345409750938416
    2. '=' → logprob: -0.7595409750938416
    3. 'ree' → logprob: -7.634541034698486
    4. '=[]' → logprob: -7.634541034698486
    5. ' ' → logprob: -9.259540557861328
    6. 'array' → logprob: -9.759540557861328
    7. '=[' → logprob: -9.759540557861328
    8. 'A' → logprob: -9.884540557861328
    9. 'orage' → logprob: -10.009540557861328
    10. 'data' → logprob: -10.009540557861328

Token 120: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3574657440185547
    2. ' [' → logprob: -1.2324657440185547
    3. '[list' → logprob: -4.982465744018555
    4. ' list' → logprob: -6.857465744018555
    5. 'list' → logprob: -7.857465744018555
    6. '[self' → logprob: -8.107465744018555
    7. '[int' → logprob: -10.107465744018555
    8. '[array' → logprob: -10.232465744018555
    9. '[e' → logprob: -10.982465744018555
    10. '[List' → logprob: -10.982465744018555

Token 121: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.025282947346568108
    2. '(chain' → logprob: -4.025282859802246
    3. '(range' → logprob: -5.900282859802246
    4. '(' → logprob: -6.150282859802246
    5. '([' → logprob: -7.150282859802246
    6. '<|end|>' → logprob: -7.525282859802246
    7. 'repeat' → logprob: -8.400282859802246
    8. '(lambda' → logprob: -8.525282859802246
    9. '()' → logprob: -9.150282859802246
    10. '[' → logprob: -9.400282859802246

Token 122: 'peat' (ID: 18888)
  Prédit: 'peat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peat' → logprob: -3.531315314830863e-06
    2. 'pe' → logprob: -13.500003814697266
    3. 'PEAT' → logprob: -14.125003814697266
    4. 'peated' → logprob: -15.000003814697266
    5. '[' → logprob: -15.000003814697266
    6. 'place' → logprob: -15.125003814697266
    7. 'ape' → logprob: -15.625003814697266
    8. 'p' → logprob: -15.875003814697266
    9. '(' → logprob: -16.875003814697266
    10. 'pit' → logprob: -17.000003814697266

Token 123: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00028946425300091505
    2. '(None' → logprob: -9.375289916992188
    3. '((' → logprob: -9.500289916992188
    4. ')(' → logprob: -9.500289916992188
    5. ')' → logprob: -11.000289916992188
    6. '   ' → logprob: -11.875289916992188
    7. ' (' → logprob: -12.250289916992188
    8. 'ie' → logprob: -12.375289916992188
    9. ' ie' → logprob: -12.375289916992188
    10. '(
' → logprob: -12.625289916992188

Token 124: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0889984667301178
    2. ' ie' → logprob: -2.463998556137085
    3. 'iep' → logprob: -10.713998794555664
    4. '_ie' → logprob: -11.963998794555664
    5. '   ' → logprob: -12.088998794555664
    6. '-ie' → logprob: -12.213998794555664
    7. ' ' → logprob: -12.713998794555664
    8. 'IE' → logprob: -13.088998794555664
    9. '(' → logprob: -13.338998794555664
    10. 'iex' → logprob: -13.338998794555664

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002515135332942009
    2. ' ,' → logprob: -6.6275153160095215
    3. ',N' → logprob: -7.8775153160095215
    4. ',n' → logprob: -8.502514839172363
    5. '))' → logprob: -8.627514839172363
    6. ')' → logprob: -8.627514839172363
    7. ',None' → logprob: -9.502514839172363
    8. ',
' → logprob: -9.877514839172363
    9. '(),' → logprob: -11.002514839172363
    10. '),' → logprob: -11.127514839172363

Token 126: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011055837385356426
    2. ' self' → logprob: -4.511055946350098
    3. '   ' → logprob: -12.136055946350098
    4. '(self' → logprob: -13.761055946350098
    5. ' ' → logprob: -14.136055946350098
    6. '    ' → logprob: -15.136055946350098
    7. '  ' → logprob: -15.386055946350098
    8. '       ' → logprob: -15.511055946350098
    9. '[self' → logprob: -16.13605499267578
    10. '	self' → logprob: -16.13605499267578

Token 127: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -5.466968650580384e-05
    2. 'get' → logprob: -10.000054359436035
    3. '.' → logprob: -11.625054359436035
    4. '   ' → logprob: -16.25005531311035
    5. ' .' → logprob: -16.25005531311035
    6. '.size' → logprob: -16.62505531311035
    7. '	get' → logprob: -17.87505531311035
    8. ' ' → logprob: -19.12505531311035
    9. 'self' → logprob: -19.12505531311035
    10. '[' → logprob: -19.25005531311035

Token 128: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -1.0683535037969705e-05
    2. 'LIN' → logprob: -12.12501049041748
    3. 'SIZE' → logprob: -13.12501049041748
    4. 'LEN' → logprob: -14.25001049041748
    5. ' size' → logprob: -14.50001049041748
    6. ')' → logprob: -15.25001049041748
    7. '(size' → logprob: -15.25001049041748
    8. 'siz' → logprob: -15.50001049041748
    9. 'sizei' → logprob: -15.50001049041748
    10. ' ' → logprob: -15.75001049041748

Token 129: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008422649116255343
    2. ' ))' → logprob: -7.250842094421387
    3. ')' → logprob: -9.750842094421387
    4. '))
' → logprob: -10.250842094421387
    5. '()))' → logprob: -10.375842094421387
    6. ')))' → logprob: -12.625842094421387
    7. ' ' → logprob: -13.625842094421387
    8. '()' → logprob: -14.375842094421387
    9. '))

' → logprob: -14.750842094421387
    10. '));' → logprob: -14.875842094421387

Token 130: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3465113639831543
    2. '<|end|>' → logprob: -2.0965113639831543
    3. ')' → logprob: -2.5965113639831543
    4. 'def' (adapté à ' def') → logprob: -3.0965113639831543
    5. '       ' → logprob: -3.5965113639831543
    6. '    ' → logprob: -4.346511363983154
    7. ' ' → logprob: -5.971511363983154
    8. ' def' → logprob: -6.096511363983154
    9. '  ' → logprob: -6.846511363983154
    10. '<|end|>' → logprob: -7.221511363983154

Token 132: ' update' (ID: 4027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.2819920778274536
    2. 'build' → logprob: -1.4069920778274536
    3. ' build' → logprob: -1.6569920778274536
    4. 'update' → logprob: -2.156991958618164
    5. 'set' → logprob: -3.156991958618164
    6. ' update' → logprob: -3.281991958618164
    7. '_build' → logprob: -3.906991958618164
    8. '_update' → logprob: -4.156991958618164
    9. '_set' → logprob: -4.281991958618164
    10. ' __' → logprob: -4.531991958618164

Token 133: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006041369866579771
    2. '(' → logprob: -5.131041526794434
    3. ' (' → logprob: -9.881041526794434
    4. '<|end|>' → logprob: -11.506041526794434
    5. ' ' → logprob: -11.756041526794434
    6. 'self' → logprob: -12.006041526794434
    7. '(
' → logprob: -12.006041526794434
    8. '(index' → logprob: -12.381041526794434
    9. '(s' → logprob: -12.381041526794434
    10. '   ' → logprob: -12.631041526794434

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036656332667917013
    2. ' ,' → logprob: -5.753665447235107
    3. 'self' → logprob: -8.128665924072266
    4. ',index' → logprob: -9.503665924072266
    5. 'index' → logprob: -10.253665924072266
    6. '[' → logprob: -10.628665924072266
    7. '   ' → logprob: -11.003665924072266
    8. '       ' → logprob: -12.253665924072266
    9. ')' → logprob: -12.253665924072266
    10. ' ' → logprob: -12.253665924072266

Token 135: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6100810170173645
    2. ' i' → logprob: -1.7350809574127197
    3. 'idx' → logprob: -1.8600809574127197
    4. ' idx' → logprob: -3.3600809574127197
    5. 'pos' → logprob: -3.4850809574127197
    6. 'index' → logprob: -4.360081195831299
    7. 'k' → logprob: -4.360081195831299
    8. ' pos' → logprob: -4.860081195831299
    9. 'p' → logprob: -4.985081195831299
    10. ' p' → logprob: -5.360081195831299

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007171963807195425
    2. ' ,' → logprob: -7.2507171630859375
    3. ',value' → logprob: -12.750717163085938
    4. '    ' → logprob: -14.250717163085938
    5. '   ' → logprob: -14.750717163085938
    6. ',i' → logprob: -14.875717163085938
    7. 'self' → logprob: -15.000717163085938
    8. ',index' → logprob: -15.000717163085938
    9. '):' → logprob: -15.125717163085938
    10. ')' → logprob: -15.250717163085938

Token 137: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.45282867550849915
    2. 'v' → logprob: -1.2028286457061768
    3. ' x' → logprob: -3.5778286457061768
    4. ' v' → logprob: -4.202828884124756
    5. 'val' → logprob: -4.577828884124756
    6. 'value' → logprob: -4.952828884124756
    7. ' val' → logprob: -6.327828884124756
    8. ' value' → logprob: -7.952828884124756
    9. 'e' → logprob: -8.327828407287598
    10. 'f' → logprob: -8.452828407287598

Token 138: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024403356947004795
    2. '):
' → logprob: -6.127440452575684
    3. ')' → logprob: -8.377440452575684
    4. ' ):' → logprob: -11.127440452575684
    5. '):
' → logprob: -12.127440452575684
    6. ':' → logprob: -12.752440452575684
    7. ',' → logprob: -14.627440452575684
    8. '   ' → logprob: -14.627440452575684
    9. '):

' → logprob: -14.752440452575684
    10. ' ' → logprob: -16.252439498901367

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006570351542904973
    2. ' self' → logprob: -8.500657081604004
    3. '   ' → logprob: -8.750657081604004
    4. 'self' → logprob: -9.625657081604004
    5. '
' → logprob: -10.375657081604004
    6. '        
' → logprob: -10.375657081604004
    7. '    ' → logprob: -10.625657081604004
    8. ',' → logprob: -10.625657081604004
    9. '    
' → logprob: -11.250657081604004
    10. '      ' → logprob: -11.250657081604004

Token 140: ' [' (ID: 723)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13178971409797668
    2. '       ' → logprob: -2.1317896842956543
    3. ' i' → logprob: -5.506789684295654
    4. '   ' → logprob: -8.131790161132812
    5. 'self' → logprob: -8.381790161132812
    6. 'idx' → logprob: -9.381790161132812
    7. 'index' → logprob: -10.506790161132812
    8. '
' → logprob: -10.631790161132812
    9. 'pos' → logprob: -10.756790161132812
    10. '      ' → logprob: -11.131790161132812

Token 141: 'set' (ID: 977)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07647668570280075
    2. 'self' → logprob: -2.826476573944092
    3. '       ' → logprob: -4.576476573944092
    4. ' i' → logprob: -5.701476573944092
    5. ' self' → logprob: -7.701476573944092
    6. '   ' → logprob: -9.57647705078125
    7. 'idx' → logprob: -10.20147705078125
    8. '_i' → logprob: -10.57647705078125
    9. 'index' → logprob: -10.57647705078125
    10. 's' → logprob: -10.82647705078125

Token 142: 'attr' (ID: 6035)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.9982951879501343
    2. 'self' → logprob: -1.3732951879501343
    3. 'i' → logprob: -2.373295307159424
    4. 'index' → logprob: -2.623295307159424
    5. '_idx' → logprob: -2.873295307159424
    6. ']' → logprob: -3.623295307159424
    7. '_index' → logprob: -3.748295307159424
    8. 'attr' → logprob: -3.873295307159424
    9. 'pos' → logprob: -3.873295307159424
    10. '(i' → logprob: -4.623295307159424

Token 143: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018826935440301895
    2. 'self' → logprob: -4.018826961517334
    3. '](' → logprob: -8.393826484680176
    4. '(' → logprob: -9.018826484680176
    5. ' self' → logprob: -9.018826484680176
    6. ')(' → logprob: -9.518826484680176
    7. 's' → logprob: -10.518826484680176
    8. '(
' → logprob: -11.268826484680176
    9. '=self' → logprob: -11.393826484680176
    10. '	self' → logprob: -11.518826484680176

Token 144: '.ST' (ID: 28339)
  Prédit: '.ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ST' → logprob: -0.35151946544647217
    2. ',' → logprob: -1.3515194654464722
    3. '(ST' → logprob: -3.6015195846557617
    4. ',self' → logprob: -5.101519584655762
    5. ' ,' → logprob: -6.476519584655762
    6. 'self' → logprob: -6.601519584655762
    7. '	ST' → logprob: -7.976519584655762
    8. '(self' → logprob: -8.101519584655762
    9. '_ST' → logprob: -8.726519584655762
    10. 'ST' → logprob: -9.101519584655762

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023599492385983467
    2. ',self' → logprob: -4.898599624633789
    3. ',__' → logprob: -5.523599624633789
    4. 'self' → logprob: -5.773599624633789
    5. ',i' → logprob: -5.773599624633789
    6. '[i' → logprob: -6.398599624633789
    7. '[self' → logprob: -7.023599624633789
    8. ' ,' → logprob: -7.148599624633789
    9. '__' → logprob: -7.773599624633789
    10. '[' → logprob: -8.023599624633789

Token 146: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0355815514922142
    2. '__' → logprob: -3.785581588745117
    3. ''i' → logprob: -5.160581588745117
    4. '"' → logprob: -5.160581588745117
    5. '('__' → logprob: -8.660581588745117
    6. ' '__' → logprob: -8.910581588745117
    7. '.__' → logprob: -9.160581588745117
    8. 'i' → logprob: -9.535581588745117
    9. '   ' → logprob: -9.535581588745117
    10. ''s' → logprob: -9.660581588745117

Token 147: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00011391390580683947
    2. 'getitem' → logprob: -9.125113487243652
    3. 'sets' → logprob: -12.500113487243652
    4. 'del' → logprob: -14.750113487243652
    5. 'item' → logprob: -14.750113487243652
    6. ' set' → logprob: -16.62511444091797
    7. '```' → logprob: -16.75011444091797
    8. 'se' → logprob: -17.25011444091797
    9. 's' → logprob: -17.25011444091797
    10. '__' → logprob: -17.25011444091797

Token 148: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: 0.0
    2. 'it' → logprob: -17.5
    3. 'ite' → logprob: -17.5
    4. 'attr' → logprob: -17.875
    5. 'Item' → logprob: -19.5
    6. 'getitem' → logprob: -19.5
    7. 'itm' → logprob: -20.125
    8. 'index' → logprob: -21.125
    9. 'ITEM' → logprob: -21.5
    10. ' item' → logprob: -21.875

Token 149: '__' (ID: 771)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0037745507434010506
    2. '(i' → logprob: -5.753774642944336
    3. ''' → logprob: -8.503774642944336
    4. '',(' → logprob: -8.753774642944336
    5. '',[' → logprob: -10.003774642944336
    6. ',' → logprob: -10.128774642944336
    7. '(',' → logprob: -10.503774642944336
    8. '__' → logprob: -10.753774642944336
    9. '',
' → logprob: -11.128774642944336
    10. ')',' → logprob: -11.128774642944336

Token 150: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06673653423786163
    2. ',i' → logprob: -3.1917364597320557
    3. '(i' → logprob: -3.9417364597320557
    4. '',' → logprob: -6.066736698150635
    5. ' ,' → logprob: -7.566736698150635
    6. 'i' → logprob: -7.566736698150635
    7. ')' → logprob: -7.941736698150635
    8. ' i' → logprob: -9.316736221313477
    9. ')i' → logprob: -9.816736221313477
    10. ']' → logprob: -9.941736221313477

Token 151: ' lambda' (ID: 27871)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09720618277788162
    2. ')' → logprob: -3.5972061157226562
    3. 'lambda' → logprob: -3.9722061157226562
    4. ' i' → logprob: -4.222206115722656
    5. 'slice' → logprob: -5.097206115722656
    6. '__' → logprob: -5.222206115722656
    7. ')i' → logprob: -5.472206115722656
    8. '(i' → logprob: -5.597206115722656
    9. 'self' → logprob: -6.222206115722656
    10. '   ' → logprob: -6.597206115722656

Token 152: ' pos' (ID: 1253)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45375964045524597
    2. ' i' → logprob: -1.0787596702575684
    3. 'self' → logprob: -4.828759670257568
    4. 'slice' → logprob: -5.453759670257568
    5. ' self' → logprob: -5.578759670257568
    6. ' slice' → logprob: -6.328759670257568
    7. ' ' → logprob: -6.453759670257568
    8. ')' → logprob: -6.953759670257568
    9. '   ' → logprob: -7.328759670257568
    10. 'lambda' → logprob: -7.578759670257568

Token 153: ',val' (ID: 126054)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004644434433430433
    2. 'self' → logprob: -6.129644393920898
    3. 'pos' → logprob: -7.254644393920898
    4. ',pos' → logprob: -7.254644393920898
    5. ' ,' → logprob: -7.629644393920898
    6. ' self' → logprob: -9.004644393920898
    7. 's' → logprob: -9.504644393920898
    8. '           ' → logprob: -9.629644393920898
    9. ':' → logprob: -10.004644393920898
    10. ' pos' → logprob: -10.129644393920898

Token 154: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06924635171890259
    2. 'self' → logprob: -3.569246292114258
    3. ':self' → logprob: -4.194246292114258
    4. ' :' → logprob: -4.319246292114258
    5. ' self' → logprob: -5.569246292114258
    6. ',' → logprob: -5.694246292114258
    7. 'pos' → logprob: -6.819246292114258
    8. '   ' → logprob: -8.069246292114258
    9. ' ' → logprob: -8.444246292114258
    10. '):' → logprob: -8.569246292114258

Token 155: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2492161989212036
    2. ' self' → logprob: -1.6242161989212036
    3. '__' → logprob: -4.999216079711914
    4. 'list' → logprob: -5.374216079711914
    5. 'lambda' → logprob: -5.624216079711914
    6. ' lambda' → logprob: -6.124216079711914
    7. ' (' → logprob: -6.999216079711914
    8. ' __' → logprob: -6.999216079711914
    9. '(self' → logprob: -7.124216079711914
    10. ' list' → logprob: -7.124216079711914

Token 156: '.ST' (ID: 28339)
  Prédit: '.ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ST' → logprob: -0.0038967495784163475
    2. '.__' → logprob: -6.253896713256836
    3. 'ST' → logprob: -6.378896713256836
    4. '	ST' → logprob: -9.878896713256836
    5. '[' → logprob: -10.128896713256836
    6. '._' → logprob: -10.128896713256836
    7. ' ST' → logprob: -10.753896713256836
    8. ')' → logprob: -11.003896713256836
    9. '
' → logprob: -11.003896713256836
    10. '-ST' → logprob: -11.378896713256836

Token 157: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.034016210585832596
    2. '[pos' → logprob: -3.6590161323547363
    3. '__' → logprob: -5.284016132354736
    4. '(pos' → logprob: -7.534016132354736
    5. ').__' → logprob: -7.659016132354736
    6. 'pos' → logprob: -7.784016132354736
    7. ' __' → logprob: -8.034016609191895
    8. ' setattr' → logprob: -8.409016609191895
    9. 'set' → logprob: -9.534016609191895
    10. ':' → logprob: -9.534016609191895

Token 158: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -9.865583706414327e-05
    2. 'getitem' → logprob: -9.50009822845459
    3. 'sets' → logprob: -11.37509822845459
    4. 'class' → logprob: -11.62509822845459
    5. 'del' → logprob: -13.00009822845459
    6. ' set' → logprob: -14.87509822845459
    7. '```' → logprob: -15.75009822845459
    8. '
' → logprob: -15.87509822845459
    9. '_set' → logprob: -16.000099182128906
    10. 'init' → logprob: -16.500099182128906

Token 159: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -3.2855416066013277e-05
    2. 'attr' → logprob: -10.375032424926758
    3. 'pos' → logprob: -13.875032424926758
    4. 'getitem' → logprob: -15.750032424926758
    5. '__(' → logprob: -16.125032424926758
    6. '__' → logprob: -16.125032424926758
    7. '(item' → logprob: -16.375032424926758
    8. '(pos' → logprob: -16.375032424926758
    9. 'it' → logprob: -16.750032424926758
    10. 'ite' → logprob: -17.625032424926758

Token 160: '__(' (ID: 8241)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.32310107350349426
    2. '(i' → logprob: -1.3231010437011719
    3. '(' → logprob: -5.448101043701172
    4. '__(' → logprob: -5.948101043701172
    5. ')(' → logprob: -6.323101043701172
    6. '__' → logprob: -8.073101043701172
    7. ' (' → logprob: -8.198101043701172
    8. ')' → logprob: -9.448101043701172
    9. 'pos' → logprob: -9.448101043701172
    10. '__((' → logprob: -9.448101043701172

Token 161: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.04581507667899132
    2. 'i' → logprob: -3.4208149909973145
    3. ' pos' → logprob: -4.5458149909973145
    4. ' i' → logprob: -7.4208149909973145
    5. 'self' → logprob: -8.420815467834473
    6. ')' → logprob: -8.420815467834473
    7. '(pos' → logprob: -8.545815467834473
    8. '(i' → logprob: -9.545815467834473
    9. '   ' → logprob: -10.045815467834473
    10. ' ' → logprob: -10.545815467834473

Token 162: ',val' (ID: 126054)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5322310328483582
    2. 'i' → logprob: -1.282231092453003
    3. '(i' → logprob: -2.532231092453003
    4. ' i' → logprob: -3.782231092453003
    5. ',i' → logprob: -3.782231092453003
    6. ' ,' → logprob: -5.532230854034424
    7. 'pos' → logprob: -7.157230854034424
    8. '   ' → logprob: -7.282230854034424
    9. ' (' → logprob: -7.282230854034424
    10. '),' → logprob: -7.532230854034424

Token 163: '))' (ID: 915)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.2803362607955933
    2. ')(' → logprob: -1.2803362607955933
    3. '(i' → logprob: -1.7803362607955933
    4. ')' → logprob: -2.530336380004883
    5. ',' → logprob: -2.780336380004883
    6. '))(' → logprob: -3.155336380004883
    7. '))' → logprob: -3.655336380004883
    8. '   ' → logprob: -4.655336380004883
    9. ' ),' → logprob: -4.780336380004883
    10. ')
' → logprob: -5.155336380004883

Token 164: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5195366144180298
    2. '(i' → logprob: -1.0195366144180298
    3. ')(' → logprob: -4.26953649520874
    4. ',i' → logprob: -4.26953649520874
    5. ')' → logprob: -5.14453649520874
    6. 'i' → logprob: -6.26953649520874
    7. '   ' → logprob: -6.76953649520874
    8. '(' → logprob: -7.01953649520874
    9. ' ,' → logprob: -7.26953649520874
    10. ')i' → logprob: -7.39453649520874

Token 165: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17547909915447235
    2. 'range' → logprob: -2.4254791736602783
    3. '[' → logprob: -3.8004791736602783
    4. ' i' → logprob: -4.425478935241699
    5. ' [' → logprob: -4.425478935241699
    6. ' pos' → logprob: -4.925478935241699
    7. 'pos' → logprob: -5.300478935241699
    8. 'i' → logprob: -5.925478935241699
    9. '[i' → logprob: -6.050478935241699
    10. '_' → logprob: -6.425478935241699

Token 166: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014679561369121075
    2. 'in' → logprob: -4.264679431915283
    3. 'range' → logprob: -8.639679908752441
    4. ' ' → logprob: -8.764679908752441
    5. ' range' → logprob: -9.139679908752441
    6. '_' → logprob: -10.889679908752441
    7. ']' → logprob: -11.264679908752441
    8. ' _' → logprob: -12.014679908752441
    9. '  ' → logprob: -12.014679908752441
    10. ' i' → logprob: -12.264679908752441

Token 167: ' ()' (ID: 2869)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3402712345123291
    2. ' range' → logprob: -1.840271234512329
    3. '[' → logprob: -2.090271234512329
    4. '[]' → logprob: -5.59027099609375
    5. ' [' → logprob: -7.21527099609375
    6. '(' → logprob: -7.59027099609375
    7. '(range' → logprob: -7.59027099609375
    8. '()' → logprob: -9.09027099609375
    9. '()]' → logprob: -9.46527099609375
    10. '0' → logprob: -9.96527099609375

Token 168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4911365211009979
    2. ']
' → logprob: -0.9911365509033203
    3. '];' → logprob: -5.11613655090332
    4. '][' → logprob: -5.49113655090332
    5. '()]' → logprob: -6.74113655090332
    6. '       ' → logprob: -6.86613655090332
    7. '],' → logprob: -7.36613655090332
    8. '[' → logprob: -7.61613655090332
    9. '()]
' → logprob: -7.61613655090332
    10. ']()
' → logprob: -7.86613655090332

Token 169: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35916271805763245
    2. '       ' → logprob: -2.3591628074645996
    3. '(i' → logprob: -2.3591628074645996
    4. '[i' → logprob: -3.2341628074645996
    5. '()
' → logprob: -3.4841628074645996
    6. '<|end|>' → logprob: -4.3591628074646
    7. '[' → logprob: -5.2341628074646
    8. '[]
' → logprob: -5.2341628074646
    9. '(self' → logprob: -5.6091628074646
    10. '        
' → logprob: -5.6091628074646

Token 170: ' fun' (ID: 2827)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.211297631263733
    2. ' i' → logprob: -1.461297631263733
    3. ' self' → logprob: -1.836297631263733
    4. ' ' → logprob: -2.8362975120544434
    5. 'i' → logprob: -3.0862975120544434
    6. '<|end|>' → logprob: -3.2112975120544434
    7. 'None' → logprob: -3.3362975120544434
    8. 'self' → logprob: -3.4612975120544434
    9. '        ' → logprob: -4.086297512054443
    10. ' None' → logprob: -4.211297512054443

Token 171: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7197301387786865
    2. '        
' → logprob: -1.7197301387786865
    3. 'self' → logprob: -2.3447301387786865
    4. 'ction' → logprob: -2.7197301387786865
    5. ' self' → logprob: -3.3447301387786865
    6. '__' → logprob: -3.5947301387786865
    7. '(self' → logprob: -4.094730377197266
    8. 'def' → logprob: -4.344730377197266
    9. '.__' → logprob: -5.094730377197266
    10. '    
' → logprob: -5.469730377197266

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5147125124931335
    2. 'i' → logprob: -2.1397125720977783
    3. '(i' → logprob: -2.1397125720977783
    4. '
' → logprob: -3.0147125720977783
    5. '(self' → logprob: -3.5147125720977783
    6. 'self' → logprob: -3.8897125720977783
    7. ' i' → logprob: -4.264712333679199
    8. '()
' → logprob: -4.639712333679199
    9. ')
' → logprob: -5.139712333679199
    10. ',' → logprob: -5.514712333679199

Token 173: ' i' (ID: 575)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0815093517303467
    2. '       ' → logprob: -1.3315093517303467
    3. ' self' → logprob: -1.4565093517303467
    4. ' i' → logprob: -2.7065093517303467
    5. 'i' (adapté à ' i') → logprob: -2.8315093517303467
    6. ' (' → logprob: -4.706509590148926
    7. '(self' → logprob: -4.831509590148926
    8. '(i' → logprob: -4.956509590148926
    9. 'None' → logprob: -6.206509590148926
    10. ' ' → logprob: -6.331509590148926

Token 174: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5855993032455444
    2. ' +=' → logprob: -0.8355993032455444
    3. '=' → logprob: -5.335599422454834
    4. '+' → logprob: -6.210599422454834
    5. ' =' → logprob: -6.460599422454834
    6. ' +' → logprob: -7.585599422454834
    7. ' <<=' → logprob: -8.210598945617676
    8. '|' → logprob: -8.710598945617676
    9. ' ' → logprob: -8.960598945617676
    10. ' |=' → logprob: -9.210598945617676

Token 175: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00047702479059807956
    2. ' self' → logprob: -7.750476837158203
    3. '<|end|>' → logprob: -10.500476837158203
    4. '[self' → logprob: -11.625476837158203
    5. '(self' → logprob: -12.250476837158203
    6. '0' → logprob: -13.500476837158203
    7. '       ' → logprob: -13.875476837158203
    8. '=self' → logprob: -14.250476837158203
    9. '   ' → logprob: -14.500476837158203
    10. '	self' → logprob: -15.125476837158203

Token 176: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -6.718606891809031e-05
    2. 'get' → logprob: -9.625066757202148
    3. '.' → logprob: -14.500066757202148
    4. '@get' → logprob: -15.250066757202148
    5. '.user' → logprob: -16.62506675720215
    6. '
' → logprob: -16.87506675720215
    7. ':get' → logprob: -17.00006675720215
    8. 'user' → logprob: -17.37506675720215
    9. ' .' → logprob: -18.00006675720215

Token 177: 'LIN' (ID: 61147)
  Prédit: 'LEN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -0.00978772807866335
    2. 'LIN' → logprob: -4.634787559509277
    3. 'L' → logprob: -11.259787559509277
    4. 'LINE' → logprob: -11.634787559509277
    5. '_LEN' → logprob: -12.884787559509277
    6. 'LN' → logprob: -13.009787559509277
    7. 'LEX' → logprob: -14.134787559509277
    8. ' LEN' → logprob: -14.259787559509277
    9. '
' → logprob: -14.384787559509277
    10. 'LE' → logprob: -14.634787559509277

Token 178: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09475979954004288
    2. '       ' → logprob: -2.469759702682495
    3. ' self' → logprob: -5.844759941101074
    4. ')
' → logprob: -7.344759941101074
    5. '<|end|>' → logprob: -7.344759941101074
    6. '(self' → logprob: -8.219759941101074
    7. 'while' → logprob: -8.344759941101074
    8. '[self' → logprob: -8.594759941101074
    9. '
' → logprob: -8.719759941101074
    10. ')' → logprob: -8.844759941101074

Token 180: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0001205893131555058
    2. 'set' → logprob: -10.125120162963867
    3. '       ' → logprob: -10.250120162963867
    4. 'while' → logprob: -10.875120162963867
    5. ' self' → logprob: -10.875120162963867
    6. '
' → logprob: -12.750120162963867
    7. '        
' → logprob: -13.875120162963867
    8. '(self' → logprob: -14.375120162963867
    9. '   ' → logprob: -14.875120162963867
    10. '```' → logprob: -15.125120162963867

Token 181: '.ST' (ID: 28339)
  Prédit: '.ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ST' → logprob: -2.8921695047756657e-05
    2. '.' → logprob: -11.250028610229492
    3. ' .' → logprob: -12.000028610229492
    4. 'ST' → logprob: -12.000028610229492
    5. '	ST' → logprob: -13.625028610229492
    6. '[' → logprob: -14.125028610229492
    7. ' ST' → logprob: -14.500028610229492
    8. '.SET' → logprob: -14.625028610229492
    9. '.St' → logprob: -15.875028610229492
    10. '_ST' → logprob: -16.125028610229492

Token 182: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004430627159308642
    2. '[' → logprob: -7.750442981719971
    3. '.__' → logprob: -11.500443458557129
    4. '__' → logprob: -13.375443458557129
    5. '[
' → logprob: -15.500443458557129
    6. '[pos' → logprob: -16.250442504882812
    7. '[int' → logprob: -16.375442504882812
    8. '\[' → logprob: -16.375442504882812
    9. '```' → logprob: -16.875442504882812
    10. ' [' → logprob: -17.125442504882812

Token 183: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42258939146995544
    2. '=' → logprob: -1.7975894212722778
    3. ' =' → logprob: -1.9225894212722778
    4. ']=' → logprob: -3.6725893020629883
    5. ' ]' → logprob: -4.922589302062988
    6. ' ' → logprob: -11.047589302062988
    7. ')' → logprob: -11.672589302062988
    8. ')=' → logprob: -12.797589302062988
    9. ']+=' → logprob: -13.672589302062988
    10. '[' → logprob: -13.797589302062988

Token 184: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141372084617615
    2. ' =' → logprob: -1.7014137506484985
    3. '=i' → logprob: -15.451414108276367
    4. '=x' → logprob: -16.076414108276367
    5. ' ' → logprob: -16.826414108276367
    6. '＝' → logprob: -17.451414108276367
    7. '.=' → logprob: -17.951414108276367
    8. '=

' → logprob: -18.201414108276367
    9. '=value' → logprob: -18.326414108276367
    10. '=
' → logprob: -18.576414108276367

Token 185: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00861468818038702
    2. ' x' → logprob: -4.758614540100098
    3. '	x' → logprob: -16.258615493774414
    4. ' ' → logprob: -18.133615493774414
    5. '   ' → logprob: -18.258615493774414
    6. '(x' → logprob: -18.383615493774414
    7. '$x' → logprob: -19.258615493774414
    8. ')x' → logprob: -19.383615493774414
    9. 'val' → logprob: -19.883615493774414
    10. '{x' → logprob: -20.133615493774414

Token 186: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04439292848110199
    2. '<|end|>' → logprob: -3.6693928241729736
    3. ',' → logprob: -4.794393062591553
    4. '
' → logprob: -5.544393062591553
    5. ',
' → logprob: -6.919393062591553
    6. 'i' → logprob: -6.919393062591553
    7. '<|end|>' → logprob: -7.169393062591553
    8. ' i' → logprob: -7.294393062591553
    9. '        
' → logprob: -7.544393062591553
    10. '  
' → logprob: -7.919393062591553

Token 188: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14339882135391235
    2. 'i' → logprob: -2.1433987617492676
    3. '       ' → logprob: -4.143398761749268
    4. ' while' → logprob: -8.393399238586426
    5. '   ' → logprob: -8.518399238586426
    6. ' i' → logprob: -10.643399238586426
    7. '	while' → logprob: -12.518399238586426
    8. 'for' (adapté à ' for') → logprob: -12.643399238586426
    9. '  ' → logprob: -12.643399238586426
    10. 'While' → logprob: -12.893399238586426

Token 189: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6522271633148193
    2. 'i' → logprob: -1.7772271633148193
    3. ' j' → logprob: -1.7772271633148193
    4. 'j' → logprob: -2.7772271633148193
    5. '_' → logprob: -3.5272271633148193
    6. ' _' → logprob: -3.6522271633148193
    7. ' p' → logprob: -4.527227401733398
    8. 'p' → logprob: -5.152227401733398
    9. ' pos' → logprob: -6.527227401733398
    10. 'pos' → logprob: -6.652227401733398

Token 190: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0558834969997406
    2. 'in' → logprob: -3.1808834075927734
    3. '-=' → logprob: -4.680883407592773
    4. ' -=' → logprob: -6.055883407592773
    5. '=' → logprob: -8.430883407592773
    6. '    ' → logprob: -8.680883407592773
    7. ' i' → logprob: -8.680883407592773
    8. '>>' → logprob: -8.805883407592773
    9. ' >>=' → logprob: -9.055883407592773
    10. '-' → logprob: -9.305883407592773

Token 191: ' iter' (ID: 10621)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.019531408324837685
    2. ' range' → logprob: -4.26953125
    3. 're' → logprob: -5.26953125
    4. ' ' → logprob: -9.64453125
    5. '(range' → logprob: -9.76953125
    6. '   ' → logprob: -10.26953125
    7. 'iter' → logprob: -11.26953125
    8. ' reversed' → logprob: -11.26953125
    9. 'reverse' → logprob: -11.76953125
    10. '  ' → logprob: -12.14453125

Token 192: '(lambda' (ID: 43341)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.4744066298007965
    2. '(lambda' → logprob: -1.2244065999984741
    3. 'range' → logprob: -2.5994067192077637
    4. '(re' → logprob: -5.474406719207764
    5. 're' → logprob: -5.724406719207764
    6. '(' → logprob: -7.099406719207764
    7. 'lambda' → logprob: -7.099406719207764
    8. '((' → logprob: -8.849406242370605
    9. '(self' → logprob: -9.474406242370605
    10. '(reverse' → logprob: -9.849406242370605

Token 193: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5413168668746948
    2. 'i' → logprob: -1.4163168668746948
    3. ':' → logprob: -1.7913168668746948
    4. '(i' → logprob: -5.916316986083984
    5. ' (' → logprob: -6.541316986083984
    6. ':i' → logprob: -6.666316986083984
    7. ' :' → logprob: -7.041316986083984
    8. ' self' → logprob: -7.791316986083984
    9. ' ' → logprob: -7.791316986083984
    10. 'self' → logprob: -7.916316986083984

Token 194: '=i' (ID: 48141)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0233744066208601
    2. ' :' → logprob: -4.898374557495117
    3. '=i' → logprob: -5.148374557495117
    4. ':i' → logprob: -5.398374557495117
    5. '=' → logprob: -6.773374557495117
    6. '-' → logprob: -6.773374557495117
    7. ' i' → logprob: -7.398374557495117
    8. '=(' → logprob: -7.523374557495117
    9. 'i' → logprob: -8.148374557495117
    10. ' -' → logprob: -8.523374557495117

Token 195: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3687010407447815
    2. '-' → logprob: -1.3687009811401367
    3. ' -' → logprob: -3.6187009811401367
    4. ' :' → logprob: -3.7437009811401367
    5. ':i' → logprob: -6.493700981140137
    6. ',' → logprob: -6.993700981140137
    7. ',i' → logprob: -7.993700981140137
    8. ' ' → logprob: -8.618700981140137
    9. '   ' → logprob: -8.868700981140137
    10. ' i' → logprob: -9.118700981140137

Token 196: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26467522978782654
    2. '(i' → logprob: -1.514675259590149
    3. ' i' → logprob: -5.014675140380859
    4. ' (' → logprob: -5.389675140380859
    5. 'self' → logprob: -7.889675140380859
    6. ' ' → logprob: -8.01467514038086
    7. '   ' → logprob: -8.38967514038086
    8. '(self' → logprob: -8.76467514038086
    9. '
' → logprob: -9.38967514038086
    10. '  ' → logprob: -9.88967514038086

Token 197: '//' (ID: 393)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.013447025790810585
    2. '//' → logprob: -4.888446807861328
    3. ' >>' → logprob: -5.388446807861328
    4. '>' → logprob: -7.888446807861328
    5. '-' → logprob: -8.263446807861328
    6. ' //' → logprob: -8.388446807861328
    7. ' ' → logprob: -8.638446807861328
    8. ':=' → logprob: -9.763446807861328
    9. ' >' → logprob: -10.763446807861328
    10. 'and' → logprob: -10.888446807861328

Token 198: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004927450208924711
    2. ' ' → logprob: -7.625492572784424
    3. '=' → logprob: -13.250493049621582
    4. '1' → logprob: -14.375493049621582
    5. '```' → logprob: -14.375493049621582
    6. '   ' → logprob: -14.500493049621582
    7. '>' → logprob: -15.375493049621582
    8. '
' → logprob: -15.500493049621582
    9. '3' → logprob: -15.500493049621582
    10. '[' → logprob: -16.687992095947266

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014050445519387722
    2. ' ,' → logprob: -4.639050483703613
    3. ' if' → logprob: -5.764050483703613
    4. 'if' → logprob: -7.889050483703613
    5. '   ' → logprob: -8.389050483703613
    6. '(),' → logprob: -8.889050483703613
    7. '),' → logprob: -9.514050483703613
    8. ' and' → logprob: -9.639050483703613
    9. ' i' → logprob: -10.139050483703613
    10. '    ' → logprob: -10.139050483703613

Token 200: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010322121903300285
    2. ' ' → logprob: -4.760322093963623
    3. '1' → logprob: -6.385322093963623
    4. '   ' → logprob: -11.885322570800781
    5. '    ' → logprob: -12.135322570800781
    6. '  ' → logprob: -13.260322570800781
    7. '     ' → logprob: -13.510322570800781
    8. '        ' → logprob: -14.260322570800781
    9. '         ' → logprob: -14.385322570800781
    10. '       ' → logprob: -14.635322570800781

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009392123320139945
    2. '1' → logprob: -7.37593936920166
    3. ' ' → logprob: -8.12593936920166
    4. '   ' → logprob: -11.87593936920166
    5. '    ' → logprob: -13.00093936920166
    6. '  ' → logprob: -13.37593936920166
    7. '     ' → logprob: -13.75093936920166
    8. '         ' → logprob: -14.37593936920166
    9. '        ' → logprob: -14.75093936920166
    10. '       ' → logprob: -14.81343936920166

Token 202: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08236096054315567
    2. '):
' → logprob: -2.5823609828948975
    3. ' ):' → logprob: -5.957360744476318
    4. ')' → logprob: -8.332361221313477
    5. ' ):
' → logprob: -8.457361221313477
    6. ',' → logprob: -8.707361221313477
    7. ':' → logprob: -9.082361221313477
    8. '):
' → logprob: -9.207361221313477
    9. '):

' → logprob: -11.207361221313477
    10. '   ' → logprob: -11.332361221313477

Token 203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019711073487997055
    2. ' if' → logprob: -5.519711017608643
    3. ':' → logprob: -5.894711017608643
    4. '    ' → logprob: -6.019711017608643
    5. '            ' → logprob: -6.269711017608643
    6. '       ' → logprob: -6.394711017608643
    7. '        ' → logprob: -6.519711017608643
    8. ':
' → logprob: -7.019711017608643
    9. ',' → logprob: -7.269711017608643
    10. 'if' → logprob: -7.394711017608643

Token 204: ' i' (ID: 575)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22092564404010773
    2. ' self' → logprob: -2.2209255695343018
    3. '           ' → logprob: -2.8459255695343018
    4. '       ' → logprob: -4.595925807952881
    5. 'if' → logprob: -4.720925807952881
    6. 'i' (adapté à ' i') → logprob: -5.220925807952881
    7. '   ' → logprob: -6.220925807952881
    8. ' if' → logprob: -6.220925807952881
    9. ' i' → logprob: -6.595925807952881
    10. ' ' → logprob: -7.470925807952881

Token 205: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.7845610976219177
    2. '=' → logprob: -1.1595611572265625
    3. '>>' → logprob: -2.7845611572265625
    4. ' //' → logprob: -2.9095611572265625
    5. ' =' → logprob: -2.9095611572265625
    6. ' >>=' → logprob: -3.0345611572265625
    7. '//' → logprob: -5.2845611572265625
    8. 'and' → logprob: -5.5345611572265625
    9. '>' → logprob: -7.4095611572265625
    10. ' and' → logprob: -7.5345611572265625

Token 206: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.763666947837919e-05
    2. '2' → logprob: -10.00004768371582
    3. '/=' → logprob: -14.00004768371582
    4. '=
' → logprob: -15.12504768371582
    5. '>=' → logprob: -15.50004768371582
    6. '==' → logprob: -15.75004768371582
    7. '>' → logprob: -16.00004768371582
    8. '=}' → logprob: -16.25004768371582
    9. ' ' → logprob: -16.62504768371582
    10. '=

' → logprob: -16.62504768371582

Token 207: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006317823426797986
    2. ' ' → logprob: -7.375631809234619
    3. '   ' → logprob: -13.250631332397461
    4. '1' → logprob: -14.000631332397461
    5. '
' → logprob: -14.125631332397461
    6. '```' → logprob: -14.500631332397461
    7. '  ' → logprob: -15.250631332397461
    8. '>' → logprob: -15.938131332397461
    9. '0' → logprob: -15.938131332397461
    10. '       ' → logprob: -16.25063133239746

Token 208: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020735491125378758
    2. ' ' → logprob: -8.50020694732666
    3. '1' → logprob: -13.50020694732666
    4. '   ' → logprob: -13.87520694732666
    5. '  ' → logprob: -15.37520694732666
    6. '
' → logprob: -15.37520694732666
    7. '           ' → logprob: -15.75020694732666
    8. '     ' → logprob: -16.187707901000977
    9. '       ' → logprob: -16.250207901000977
    10. '```' → logprob: -16.250207901000977

Token 209: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2387469857931137
    2. ',' → logprob: -2.2387468814849854
    3. '       ' → logprob: -2.4887468814849854
    4. ',
' → logprob: -4.7387471199035645
    5. '
' → logprob: -5.9887471199035645
    6. ' ' → logprob: -6.2387471199035645
    7. ' ,' → logprob: -6.4887471199035645
    8. '            
' → logprob: -6.9887471199035645
    9. ' if' → logprob: -7.1137471199035645
    10. '<|end|>' → logprob: -7.2387471199035645

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001312021049670875
    2. ',' → logprob: -7.876312255859375
    3. ' if' → logprob: -8.126312255859375
    4. ' ' → logprob: -8.876312255859375
    5. '<|end|>' → logprob: -9.501312255859375
    6. '       ' → logprob: -9.626312255859375
    7. '            ' → logprob: -10.251312255859375
    8. ' while' → logprob: -10.376312255859375
    9. 'if' → logprob: -10.751312255859375
    10. 'def' → logprob: -10.876312255859375

Token 211: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4318413734436035
    2. 'if' → logprob: -1.4318413734436035
    3. 'while' → logprob: -2.6818413734436035
    4. '           ' → logprob: -3.1818413734436035
    5. ' self' → logprob: -7.1818413734436035
    6. ' if' → logprob: -7.6818413734436035
    7. '       ' → logprob: -8.556840896606445
    8. ' while' → logprob: -8.806840896606445
    9. '   ' → logprob: -9.306840896606445
    10. 'break' → logprob: -10.056840896606445

Token 212: '.ST' (ID: 28339)
  Prédit: '.ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ST' → logprob: -0.0026975206565111876
    2. 'ST' → logprob: -6.252697467803955
    3. '	ST' → logprob: -7.752697467803955
    4. ' .' → logprob: -9.627697944641113
    5. '   ' → logprob: -10.127697944641113
    6. ' ST' → logprob: -10.252697944641113
    7. '.' → logprob: -10.377697944641113
    8. 'func' → logprob: -10.627697944641113
    9. ' ' → logprob: -10.752697944641113
    10. '.SET' → logprob: -11.127697944641113

Token 213: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001020663301460445
    2. '[' → logprob: -7.126020431518555
    3. '.__' → logprob: -8.626020431518555
    4. '[self' → logprob: -10.876020431518555
    5. '```' → logprob: -13.251020431518555
    6. '[...]' → logprob: -13.501020431518555
    7. '__' → logprob: -13.626020431518555
    8. '[I' → logprob: -13.751020431518555
    9. '[max' → logprob: -13.876020431518555
    10. '[
' → logprob: -14.001020431518555

Token 214: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005210752133280039
    2. ']=' → logprob: -5.880210876464844
    3. ' =' → logprob: -7.005210876464844
    4. ' ]' → logprob: -7.380210876464844
    5. '=' → logprob: -7.630210876464844
    6. ')' → logprob: -8.005210876464844
    7. ')=' → logprob: -10.880210876464844
    8. ' )' → logprob: -11.380210876464844
    9. '   ' → logprob: -12.380210876464844
    10. 'self' → logprob: -12.505210876464844

Token 215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934030652046204
    2. ' =' → logprob: -0.6934030652046204
    3. ' ' → logprob: -8.443403244018555
    4. ']' → logprob: -10.693403244018555
    5. '=self' → logprob: -12.068403244018555
    6. ']=' → logprob: -12.443403244018555
    7. 'self' → logprob: -13.318403244018555
    8. '[' → logprob: -13.568403244018555
    9. '  ' → logprob: -13.943403244018555
    10. '.=' → logprob: -13.943403244018555

Token 216: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06997355818748474
    2. ' self' → logprob: -2.6949734687805176
    3. 'func' → logprob: -10.819973945617676
    4. ' ' → logprob: -12.694973945617676
    5. '           ' → logprob: -12.694973945617676
    6. '   ' → logprob: -12.819973945617676
    7. ' func' → logprob: -12.944973945617676
    8. '	self' → logprob: -13.694973945617676
    9. '(self' → logprob: -13.819973945617676
    10. '    ' → logprob: -14.194973945617676

Token 217: '.func' (ID: 39446)
  Prédit: '.func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.func' → logprob: -0.0034385151229798794
    2. 'func' → logprob: -5.753438472747803
    3. '.ST' → logprob: -8.753438949584961
    4. 'ST' → logprob: -9.378438949584961
    5. ' func' → logprob: -11.878438949584961
    6. '	func' → logprob: -12.503438949584961
    7. ' ST' → logprob: -12.628438949584961
    8. '.function' → logprob: -14.503438949584961
    9. '(func' → logprob: -14.503438949584961
    10. '.' → logprob: -14.628438949584961

Token 218: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006196272443048656
    2. '(' → logprob: -7.875619411468506
    3. 'self' → logprob: -8.375619888305664
    4. ' self' → logprob: -12.625619888305664
    5. '(
' → logprob: -13.000619888305664
    6. '((' → logprob: -13.375619888305664
    7. ' (' → logprob: -14.500619888305664
    8. '	self' → logprob: -14.750619888305664
    9. '(i' → logprob: -15.375619888305664
    10. '   ' → logprob: -15.875619888305664

Token 219: '.ST' (ID: 28339)
  Prédit: '.ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ST' → logprob: -0.00017874970217235386
    2. 'ST' → logprob: -8.750178337097168
    3. '	ST' → logprob: -11.125178337097168
    4. ' ST' → logprob: -13.625178337097168
    5. '.get' → logprob: -14.125178337097168
    6. '[' → logprob: -14.250178337097168
    7. ',' → logprob: -14.500178337097168
    8. '.' → logprob: -14.750178337097168
    9. ' .' → logprob: -15.375178337097168
    10. '._' → logprob: -15.875178337097168

Token 220: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06400305032730103
    2. '[' → logprob: -2.8140029907226562
    3. 'i' → logprob: -6.314002990722656
    4. '2' → logprob: -8.689002990722656
    5. '[(' → logprob: -10.814002990722656
    6. '[self' → logprob: -11.064002990722656
    7. 'self' → logprob: -12.439002990722656
    8. '(i' → logprob: -12.564002990722656
    9. '[
' → logprob: -13.189002990722656
    10. ' i' → logprob: -13.314002990722656

Token 221: '<<' (ID: 5354)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07353250682353973
    2. '<<' → logprob: -2.6985325813293457
    3. ' *' → logprob: -6.073532581329346
    4. ' <<' → logprob: -6.698532581329346
    5. 'i' → logprob: -11.323532104492188
    6. '[i' → logprob: -11.448532104492188
    7. '[' → logprob: -11.448532104492188
    8. ' ' → logprob: -12.323532104492188
    9. '   ' → logprob: -12.573532104492188
    10. '
' → logprob: -12.823532104492188

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.875003814697266
    3. '   ' → logprob: -15.187503814697266
    4. '```' → logprob: -15.375003814697266
    5. '
' → logprob: -15.625003814697266
    6. ',' → logprob: -16.062503814697266
    7. '0' → logprob: -16.187503814697266
    8. '2' → logprob: -16.187503814697266
    9. 'i' → logprob: -16.375003814697266
    10. '    ' → logprob: -17.000003814697266

Token 223: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.005145638715475798
    2. ' ],' → logprob: -5.63014554977417
    3. ',' → logprob: -6.75514554977417
    4. ']' → logprob: -8.505146026611328
    5. '],
' → logprob: -9.505146026611328
    6. ' ,' → logprob: -9.755146026611328
    7. ',i' → logprob: -11.130146026611328
    8. '|' → logprob: -11.880146026611328
    9. '   ' → logprob: -12.505146026611328
    10. ']+' → logprob: -12.630146026611328

Token 224: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2014162540435791
    2. ' self' → logprob: -1.701416254043579
    3. ' ' → logprob: -13.701416015625
    4. '   ' → logprob: -14.326416015625
    5. '  ' → logprob: -15.201416015625
    6. '    ' → logprob: -15.451416015625
    7. '           ' → logprob: -15.451416015625
    8. '	self' → logprob: -16.076416015625
    9. '         ' → logprob: -16.576416015625
    10. '       ' → logprob: -16.576416015625

Token 225: '.ST' (ID: 28339)
  Prédit: '.i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.i' → logprob: -1.0940682888031006
    2. '.ST' → logprob: -1.0940682888031006
    3. '[i' → logprob: -1.8440682888031006
    4. '(i' → logprob: -2.8440682888031006
    5. 'ST' → logprob: -2.8440682888031006
    6. 'i' → logprob: -3.0940682888031006
    7. '1' → logprob: -5.59406852722168
    8. '_ST' → logprob: -6.71906852722168
    9. '(ST' → logprob: -7.21906852722168
    10. ' ST' → logprob: -7.46906852722168

Token 226: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.485235333442688
    2. 'i' → logprob: -1.610235333442688
    3. '1' → logprob: -2.3602352142333984
    4. '|' → logprob: -3.4852352142333984
    5. '(i' → logprob: -3.9852352142333984
    6. '[' → logprob: -3.9852352142333984
    7. '.i' → logprob: -4.860235214233398
    8. ']' → logprob: -4.985235214233398
    9. ' i' → logprob: -5.485235214233398
    10. ' |' → logprob: -7.485235214233398

Token 227: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1279553291387856e-05
    2. ' i' → logprob: -11.875011444091797
    3. '(i' → logprob: -12.500011444091797
    4. '   ' → logprob: -15.750011444091797
    5. '(' → logprob: -16.625011444091797
    6. ''i' → logprob: -16.750011444091797
    7. ' ' → logprob: -16.875011444091797
    8. ' (' → logprob: -17.000011444091797
    9. '  ' → logprob: -17.125011444091797
    10. '    ' → logprob: -17.375011444091797

Token 228: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.003758632577955723
    2. '1' → logprob: -5.628758430480957
    3. ' <<' → logprob: -9.628758430480957
    4. '|' → logprob: -9.878758430480957
    5. ']<<' → logprob: -11.128758430480957
    6. '(i' → logprob: -12.003758430480957
    7. 'i' → logprob: -12.503758430480957
    8. '   ' → logprob: -12.753758430480957
    9. ']' → logprob: -12.878758430480957
    10. '
' → logprob: -13.128758430480957

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '2' → logprob: -14.250001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '0' → logprob: -15.625001907348633
    5. '   ' → logprob: -15.687501907348633
    6. '```' → logprob: -15.875001907348633
    7. '
' → logprob: -16.000001907348633
    8. '+' → logprob: -17.312501907348633
    9. '``' → logprob: -17.937501907348633
    10. '           ' → logprob: -18.125001907348633

Token 230: ')|' (ID: 47976)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.46868446469306946
    2. ')' → logprob: -1.093684434890747
    3. ')|' → logprob: -3.593684434890747
    4. '|' → logprob: -4.593684673309326
    5. ' )' → logprob: -6.718684673309326
    6. ' |' → logprob: -8.968684196472168
    7. ']+' → logprob: -9.343684196472168
    8. ')+(' → logprob: -10.218684196472168
    9. ')^' → logprob: -10.218684196472168
    10. ')
' → logprob: -10.468684196472168

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009139667963609099
    2. ' ' → logprob: -7.000914096832275
    3. '0' → logprob: -13.000913619995117
    4. '   ' → logprob: -15.250913619995117
    5. '  ' → logprob: -18.000913619995117
    6. '
' → logprob: -18.625913619995117
    7. '01' → logprob: -19.000913619995117
    8. ' ' → logprob: -19.000913619995117
    9. '```' → logprob: -19.125913619995117
    10. '     ' → logprob: -19.250913619995117

Token 232: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00025657136575318873
    2. '])
' → logprob: -8.875256538391113
    3. ')' → logprob: -9.375256538391113
    4. ' ])' → logprob: -11.000256538391113
    5. ')])' → logprob: -12.000256538391113
    6. ']' → logprob: -12.500256538391113
    7. ')]' → logprob: -13.625256538391113
    8. '))' → logprob: -13.875256538391113
    9. ']))' → logprob: -14.125256538391113
    10. ''])' → logprob: -14.500256538391113

Token 233: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4815521240234375
    2. ' i' → logprob: -0.9815521240234375
    3. ' not' → logprob: -5.1065521240234375
    4. 'not' → logprob: -6.6065521240234375
    5. '   ' → logprob: -11.606552124023438
    6. '0' → logprob: -11.731552124023438
    7. '(i' → logprob: -11.981552124023438
    8. ' ' → logprob: -12.356552124023438
    9. 'False' → logprob: -13.856552124023438
    10. ' ' → logprob: -13.856552124023438

Token 236: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08071810007095337
    2. '==' → logprob: -2.5807180404663086
    3. '0' → logprob: -7.455718040466309
    4. ' ' → logprob: -7.455718040466309
    5. ' <=' → logprob: -7.580718040466309
    6. '<=' → logprob: -9.580718040466309
    7. '=' → logprob: -10.580718040466309
    8. '==
' → logprob: -11.330718040466309
    9. '1' → logprob: -11.580718040466309
    10. ' ==
' → logprob: -11.830718040466309

Token 237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4349115192890167
    2. '0' → logprob: -1.1849114894866943
    3. ' ' → logprob: -3.0599114894866943
    4. '  ' → logprob: -11.934911727905273
    5. '   ' → logprob: -12.309911727905273
    6. '    ' → logprob: -14.059911727905273
    7. '     ' → logprob: -15.372411727905273
    8. '
' → logprob: -15.747411727905273
    9. ' ' → logprob: -15.809911727905273
    10. '```' → logprob: -15.997411727905273

Token 238: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5233515501022339
    2. '1' → logprob: -0.8983515501022339
    3. ' ' → logprob: -8.398351669311523
    4. '   ' → logprob: -13.648351669311523
    5. '  ' → logprob: -14.273351669311523
    6. '
' → logprob: -14.648351669311523
    7. '    ' → logprob: -15.460851669311523
    8. '     ' → logprob: -16.648351669311523
    9. '```' → logprob: -16.773351669311523
    10. '01' → logprob: -17.085851669311523

Token 239: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1845017373561859
    2. ':
' → logprob: -1.8095017671585083
    3. '               ' → logprob: -5.559501647949219
    4. '           ' → logprob: -7.309501647949219
    5. ':return' → logprob: -9.559501647949219
    6. ' or' → logprob: -9.934501647949219
    7. ',' → logprob: -10.559501647949219
    8. ' :' → logprob: -10.809501647949219
    9. ' :
' → logprob: -11.059501647949219
    10. '):
' → logprob: -11.184501647949219

Token 240: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030703384429216385
    2. ' break' → logprob: -3.65570330619812
    3. 'break' → logprob: -6.030703544616699
    4. '           ' → logprob: -6.405703544616699
    5. '            ' → logprob: -9.0307035446167
    6. '	           ' → logprob: -9.2807035446167
    7. '	break' → logprob: -9.6557035446167
    8. '                ' → logprob: -11.6557035446167
    9. '             ' → logprob: -11.7807035446167
    10. '		       ' → logprob: -12.0307035446167

Token 241: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10710761696100235
    2. ')' → logprob: -3.107107639312744
    3. '<|end|>' → logprob: -3.482107639312744
    4. '       ' → logprob: -4.482107639312744
    5. '        ' → logprob: -5.857107639312744
    6. '    ' → logprob: -5.982107639312744
    7. ' )' → logprob: -6.232107639312744
    8. ' 
' → logprob: -6.357107639312744
    9. '   ' → logprob: -6.732107639312744
    10. '  ' → logprob: -6.857107639312744

Token 244: ' get' (ID: 717)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.6571938395500183
    2. ' query' → logprob: -0.9071938395500183
    3. 'build' → logprob: -3.532193899154663
    4. ' build' → logprob: -3.782193899154663
    5. 'get' → logprob: -4.657193660736084
    6. ' get' → logprob: -5.407193660736084
    7. '__' → logprob: -5.782193660736084
    8. '_query' → logprob: -6.157193660736084
    9. 'fold' → logprob: -6.782193660736084
    10. ' fold' → logprob: -6.782193660736084

Token 245: '_interval' (ID: 49009)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08131635934114456
    2. 'range' → logprob: -3.3313164710998535
    3. '(' → logprob: -3.7063164710998535
    4. '_range' → logprob: -4.9563164710998535
    5. 'val' → logprob: -5.5813164710998535
    6. 'value' → logprob: -6.7063164710998535
    7. 'sum' → logprob: -7.4563164710998535
    8. 'all' → logprob: -7.4563164710998535
    9. '_val' → logprob: -7.7063164710998535
    10. 'max' → logprob: -7.7063164710998535

Token 246: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.698698704596609e-05
    2. '(' → logprob: -9.375097274780273
    3. 'self' → logprob: -11.750097274780273
    4. '   ' → logprob: -13.625097274780273
    5. ' (' → logprob: -14.125097274780273
    6. '(
' → logprob: -14.500097274780273
    7. 's' → logprob: -14.875097274780273
    8. '(s' → logprob: -15.375097274780273
    9. '_(' → logprob: -15.625097274780273
    10. '       ' → logprob: -15.750097274780273

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006759775569662452
    2. 'self' → logprob: -7.625676155090332
    3. ' ,' → logprob: -9.250676155090332
    4. '   ' → logprob: -10.750676155090332
    5. '(self' → logprob: -10.750676155090332
    6. '       ' → logprob: -11.125676155090332
    7. ',self' → logprob: -11.750676155090332
    8. ',
' → logprob: -11.875676155090332
    9. 's' → logprob: -12.000676155090332
    10. '_,' → logprob: -12.250676155090332

Token 248: ' a' (ID: 261)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06421995162963867
    2. ' l' → logprob: -3.5642199516296387
    3. 'self' → logprob: -3.8142199516296387
    4. 'left' → logprob: -5.439219951629639
    5. 'L' → logprob: -5.564219951629639
    6. ' self' → logprob: -6.439219951629639
    7. ' left' → logprob: -7.064219951629639
    8. ' L' → logprob: -7.814219951629639
    9. 'i' → logprob: -8.314220428466797
    10. 'a' → logprob: -8.439220428466797

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030578780570067465
    2. ' ,' → logprob: -8.625306129455566
    3. ',b' → logprob: -9.000306129455566
    4. ',
' → logprob: -13.750306129455566
    5. ',a' → logprob: -13.875306129455566
    6. '_,' → logprob: -15.625306129455566
    7. ',int' → logprob: -16.00030517578125
    8. ',n' → logprob: -16.25030517578125
    9. 'b' → logprob: -16.62530517578125
    10. '   ' → logprob: -16.87530517578125

Token 250: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04300319775938988
    2. ' b' → logprob: -3.1680030822753906
    3. '   ' → logprob: -13.16800308227539
    4. '	b' → logprob: -14.66800308227539
    5. '    ' → logprob: -15.54300308227539
    6. ')b' → logprob: -15.60550308227539
    7. '>b' → logprob: -15.60550308227539
    8. ' ' → logprob: -16.41800308227539
    9. 'd' → logprob: -16.48050308227539
    10. ')' → logprob: -16.48050308227539

Token 251: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07901052385568619
    2. '):
' → logprob: -2.579010486602783
    3. '):
' → logprob: -9.954010963439941
    4. '       ' → logprob: -10.454010963439941
    5. '   ' → logprob: -10.704010963439941
    6. ')' → logprob: -11.454010963439941
    7. ' ):' → logprob: -12.204010963439941
    8. '):

' → logprob: -12.704010963439941
    9. ',' → logprob: -13.704010963439941
    10. ':' → logprob: -14.329010963439941

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017491996986791492
    2. ' i' → logprob: -7.376749038696289
    3. ' a' → logprob: -7.751749038696289
    4. 'a' → logprob: -7.876749038696289
    5. 'i' → logprob: -8.501749038696289
    6. '   ' → logprob: -10.251749038696289
    7. ' result' → logprob: -11.251749038696289
    8. '    ' → logprob: -12.001749038696289
    9. ' b' → logprob: -12.001749038696289
    10. ',' → logprob: -12.001749038696289

Token 253: ' a' (ID: 261)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3387376666069031
    2. 'a' (adapté à ' a') → logprob: -1.9637377262115479
    3. 's' → logprob: -3.213737726211548
    4. '       ' → logprob: -3.338737726211548
    5. 'result' → logprob: -3.463737726211548
    6. 'l' → logprob: -3.838737726211548
    7. ' res' → logprob: -4.213737487792969
    8. 'i' → logprob: -6.588737487792969
    9. 'r' → logprob: -7.338737487792969
    10. '   ' → logprob: -7.838737487792969

Token 254: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03551263362169266
    2. ' +=' → logprob: -3.410512685775757
    3. '=' → logprob: -6.910512447357178
    4. '+' → logprob: -7.410512447357178
    5. ',' → logprob: -8.660512924194336
    6. '   ' → logprob: -10.410512924194336
    7. ' +' → logprob: -11.160512924194336
    8. '+,' → logprob: -11.410512924194336
    9. ']+=' → logprob: -11.910512924194336
    10. '+
' → logprob: -12.285512924194336

Token 255: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00861729308962822
    2. ' self' → logprob: -4.758617401123047
    3. '       ' → logprob: -13.633617401123047
    4. '[self' → logprob: -14.508617401123047
    5. '<|end|>' → logprob: -14.883617401123047
    6. '(self' → logprob: -15.133617401123047
    7. '   ' → logprob: -15.633617401123047
    8. ' ' → logprob: -16.008617401123047
    9. '	self' → logprob: -16.258617401123047
    10. '0' → logprob: -17.133617401123047

Token 256: '.get' (ID: 775)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.008618239313364029
    2. '.get' → logprob: -4.758618354797363
    3. ' get' → logprob: -13.633618354797363
    4. 'LIN' → logprob: -13.758618354797363
    5. '_get' → logprob: -14.883618354797363
    6. '   ' → logprob: -15.133618354797363
    7. '	get' → logprob: -15.508618354797363
    8. '.L' → logprob: -15.508618354797363
    9. '@get' → logprob: -15.633618354797363
    10. ')get' → logprob: -17.008617401123047

Token 257: 'LIN' (ID: 61147)
  Prédit: 'LIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIN' → logprob: -5.514650183613412e-05
    2. 'LEN' → logprob: -9.875055313110352
    3. ' LIN' → logprob: -12.875055313110352
    4. 'LINE' → logprob: -14.250055313110352
    5. 'a' → logprob: -16.12505531311035
    6. '```' → logprob: -16.37505531311035
    7. 'LINK' → logprob: -16.50005531311035
    8. 'LAN' → logprob: -16.87505531311035
    9. '
' → logprob: -18.12505531311035
    10. '   ' → logprob: -18.25005531311035

Token 258: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18921451270580292
    2. '
' → logprob: -1.8142144680023193
    3. 'while' → logprob: -5.439214706420898
    4. '        
' → logprob: -5.939214706420898
    5. ' while' → logprob: -7.189214706420898
    6. ' 
' → logprob: -7.439214706420898
    7. '        ' → logprob: -8.064214706420898
    8. ';' → logprob: -8.189214706420898
    9. ';
' → logprob: -9.064214706420898
    10. '<|end|>' → logprob: -10.064214706420898

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00540878064930439
    2. 'b' → logprob: -5.255408763885498
    3. ' b' → logprob: -9.755409240722656
    4. ',' → logprob: -10.130409240722656
    5. ' and' → logprob: -11.005409240722656
    6. '
' → logprob: -11.130409240722656
    7. '   ' → logprob: -11.380409240722656
    8. '	' → logprob: -12.130409240722656
    9. '        
' → logprob: -12.505409240722656
    10. 'while' → logprob: -12.755409240722656

Token 260: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.00318294414319098
    2. ' b' → logprob: -5.753182888031006
    3. '   ' → logprob: -13.128183364868164
    4. '    ' → logprob: -13.753183364868164
    5. '       ' → logprob: -13.878183364868164
    6. '
' → logprob: -14.753183364868164
    7. '	b' → logprob: -15.128183364868164
    8. ' ' → logprob: -16.628183364868164
    9. '  ' → logprob: -17.003183364868164
    10. '        ' → logprob: -17.128183364868164

Token 261: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12749432027339935
    2. ' +=' → logprob: -2.1274943351745605
    3. '+' → logprob: -7.5024943351745605
    4. '=' → logprob: -11.877493858337402
    5. ' +' → logprob: -12.752493858337402
    6. ']+=' → logprob: -13.252493858337402
    7. '   ' → logprob: -13.752493858337402
    8. ' ' → logprob: -15.127493858337402
    9. '+
' → logprob: -15.127493858337402
    10. '    ' → logprob: -15.377493858337402

Token 262: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20170333981513977
    2. ' self' → logprob: -1.7017033100128174
    3. '1' → logprob: -8.201703071594238
    4. ' ' → logprob: -11.951703071594238
    5. 'b' → logprob: -12.576703071594238
    6. '(self' → logprob: -13.576703071594238
    7. '0' → logprob: -13.576703071594238
    8. '[self' → logprob: -14.076703071594238
    9. '       ' → logprob: -14.201703071594238
    10. '	self' → logprob: -14.326703071594238

Token 263: '.get' (ID: 775)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01872878707945347
    2. 'get' → logprob: -4.143728733062744
    3. ' ' → logprob: -6.018728733062744
    4. ' get' → logprob: -8.518729209899902
    5. 'b' → logprob: -11.018729209899902
    6. '   ' → logprob: -11.768729209899902
    7. '0' → logprob: -12.018729209899902
    8. '2' → logprob: -12.143729209899902
    9. '.get' → logprob: -12.518729209899902
    10. '
' → logprob: -13.018729209899902

Token 264: 'LIN' (ID: 61147)
  Prédit: 'LIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIN' → logprob: -0.0003112711710855365
    2. '1' → logprob: -8.250310897827148
    3. 'LEN' → logprob: -11.250310897827148
    4. 'LINE' → logprob: -11.375310897827148
    5. ' LIN' → logprob: -11.375310897827148
    6. 'get' → logprob: -12.000310897827148
    7. '   ' → logprob: -13.875310897827148
    8. 'IN' → logprob: -13.875310897827148
    9. 'LN' → logprob: -14.000310897827148
    10. ' ' → logprob: -14.000310897827148

Token 265: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15191645920276642
    2. '+' → logprob: -2.02691650390625
    3. '
' → logprob: -5.52691650390625
    4. ' +' → logprob: -5.90191650390625
    5. '+
' → logprob: -7.02691650390625
    6. 'while' → logprob: -7.15191650390625
    7. '        
' → logprob: -8.27691650390625
    8. '	' → logprob: -8.77691650390625
    9. ' while' → logprob: -9.40191650390625
    10. '   ' → logprob: -10.02691650390625

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0264825951308012
    2. 'res' → logprob: -3.901482582092285
    3. 'result' → logprob: -5.276482582092285
    4. 's' → logprob: -8.401482582092285
    5. ' res' → logprob: -8.401482582092285
    6. '```' → logprob: -9.276482582092285
    7. 'r' → logprob: -9.526482582092285
    8. '
' → logprob: -9.651482582092285
    9. 'while' → logprob: -9.901482582092285
    10. ' result' → logprob: -10.276482582092285

Token 267: ' RA' (ID: 46104)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.023511702194809914
    2. 's' → logprob: -3.7735116481781006
    3. 'result' → logprob: -8.39851188659668
    4. 'r' → logprob: -10.77351188659668
    5. 'ret' → logprob: -12.27351188659668
    6. '   ' → logprob: -12.39851188659668
    7. ' res' → logprob: -12.77351188659668
    8. 'ans' → logprob: -12.89851188659668
    9. 'sm' → logprob: -13.64851188659668
    10. 'v' → logprob: -14.14851188659668

Token 268: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.378400057554245
    2. 'N' → logprob: -1.8784000873565674
    3. 'nge' → logprob: -2.8784000873565674
    4. '=' → logprob: -3.0034000873565674
    5. 'NG' → logprob: -3.7534000873565674
    6. '       ' → logprob: -4.753399848937988
    7. ',' → logprob: -5.628399848937988
    8. 'ng' → logprob: -5.628399848937988
    9. '   ' → logprob: -5.753399848937988
    10. '    ' → logprob: -5.753399848937988

Token 269: ' RB' (ID: 53873)
  Prédit: 'RB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RB' → logprob: -0.0031804447062313557
    2. ' RB' → logprob: -5.753180503845215
    3. 'rb' → logprob: -14.378180503845215
    4. 'Rb' → logprob: -14.503180503845215
    5. 'LB' → logprob: -14.503180503845215
    6. 'B' → logprob: -15.003180503845215
    7. ' ' → logprob: -15.503180503845215
    8. 'a' → logprob: -15.753180503845215
    9. 'RL' → logprob: -16.2531795501709
    10. 'R' → logprob: -16.3781795501709

Token 270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889452576637268
    2. ' =' → logprob: -2.57889461517334
    3. ',' → logprob: -12.45389461517334
    4. '=[]' → logprob: -14.20389461517334
    5. '=[],' → logprob: -16.328893661499023
    6. '=[' → logprob: -16.828893661499023
    7. ' ' → logprob: -16.953893661499023
    8. '={}' → logprob: -18.078893661499023
    9. '=
' → logprob: -18.328893661499023
    10. ' =[' → logprob: -18.328893661499023

Token 271: ' [],' (ID: 22188)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19220604002475739
    2. '[]' → logprob: -1.9422060251235962
    3. 'ie' → logprob: -5.067205905914307
    4. ' self' → logprob: -5.317205905914307
    5. '[],' → logprob: -5.692205905914307
    6. ' []' → logprob: -5.817205905914307
    7. 'None' → logprob: -6.442205905914307
    8. '[]}' → logprob: -6.692205905914307
    9. '(self' → logprob: -6.942205905914307
    10. '[' → logprob: -6.942205905914307

Token 272: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00021629150433000177
    2. '[]
' → logprob: -9.000216484069824
    3. ' []' → logprob: -9.375216484069824
    4. '[]

' → logprob: -12.375216484069824
    5. '[],' → logprob: -13.625216484069824
    6. 'RA' → logprob: -13.875216484069824
    7. '[' → logprob: -14.125216484069824
    8. '[]}' → logprob: -14.625216484069824
    9. '[])' → logprob: -15.875216484069824
    10. '[].' → logprob: -16.875215530395508

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01622908189892769
    2. 'while' → logprob: -4.266229152679443
    3. ' while' → logprob: -6.266229152679443
    4. '
' → logprob: -9.016228675842285
    5. '	while' → logprob: -11.266228675842285
    6. '   ' → logprob: -11.391228675842285
    7. '        
' → logprob: -11.766228675842285
    8. '<|end|>' → logprob: -12.266228675842285
    9. '```' → logprob: -12.891228675842285
    10. ',' → logprob: -14.391228675842285

Token 274: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.003287632716819644
    2. '       ' → logprob: -5.7532877922058105
    3. ' while' → logprob: -9.128287315368652
    4. '
' → logprob: -14.503287315368652
    5. '   ' → logprob: -14.753287315368652
    6. '	while' → logprob: -15.003287315368652
    7. 'While' → logprob: -15.628287315368652
    8. '```' → logprob: -17.25328826904297
    9. 'for' → logprob: -18.50328826904297
    10. '        
' → logprob: -19.50328826904297

Token 275: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12700632214546204
    2. ' a' → logprob: -2.1270062923431396
    3. '(a' → logprob: -9.502006530761719
    4. '	a' → logprob: -13.377006530761719
    5. '[a' → logprob: -14.627006530761719
    6. ''a' → logprob: -14.877006530761719
    7. '>a' → logprob: -15.252006530761719
    8. '_a' → logprob: -15.627006530761719
    9. '   ' → logprob: -16.00200653076172
    10. '(' → logprob: -16.12700653076172

Token 276: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.030464179813861847
    2. ' <=' → logprob: -3.5304641723632812
    3. '<' → logprob: -7.405464172363281
    4. ' <' → logprob: -9.280464172363281
    5. '<b' → logprob: -12.155464172363281
    6. '[' → logprob: -13.155464172363281
    7. '```' → logprob: -14.030464172363281
    8. '≤' → logprob: -14.280464172363281
    9. 'a' → logprob: -14.405464172363281
    10. '<len' → logprob: -14.905464172363281

Token 277: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001784418011084199
    2. ' b' → logprob: -6.501784324645996
    3. '=b' → logprob: -8.751784324645996
    4. '=' → logprob: -9.001784324645996
    5. ' =' → logprob: -15.376784324645996
    6. '>b' → logprob: -16.376785278320312
    7. '	b' → logprob: -16.501785278320312
    8. ')b' → logprob: -16.751785278320312
    9. ' ' → logprob: -17.001785278320312
    10. ':b' → logprob: -17.001785278320312

Token 278: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16187138855457306
    2. ':' → logprob: -1.9118714332580566
    3. ' :
' → logprob: -6.911871433258057
    4. '       ' → logprob: -8.286870956420898
    5. ' and' → logprob: -8.411870956420898
    6. ' :' → logprob: -8.911870956420898
    7. '):
' → logprob: -11.411870956420898
    8. '           ' → logprob: -11.911870956420898
    9. ':
' → logprob: -12.161870956420898
    10. '   ' → logprob: -12.286870956420898

Token 279: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012400633655488491
    2. ' if' → logprob: -5.0124006271362305
    3. ' ' → logprob: -6.7624006271362305
    4. '       ' → logprob: -6.7624006271362305
    5. ' 
' → logprob: -7.1374006271362305
    6. '1' → logprob: -8.13740062713623
    7. '        ' → logprob: -8.13740062713623
    8. '
' → logprob: -8.13740062713623
    9. '   ' → logprob: -8.38740062713623
    10. '```' → logprob: -8.51240062713623

Token 280: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6858534812927246
    2. '           ' → logprob: -0.8108534812927246
    3. ' if' → logprob: -3.0608534812927246
    4. '               ' → logprob: -5.435853481292725
    5. '1' → logprob: -8.060853958129883
    6. '   ' → logprob: -8.560853958129883
    7. ' ' → logprob: -9.935853958129883
    8. 'If' → logprob: -10.560853958129883
    9. '```' → logprob: -10.810853958129883
    10. '
' → logprob: -11.060853958129883

Token 281: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002482315758243203
    2. ' a' → logprob: -6.0024824142456055
    3. '(a' → logprob: -12.127482414245605
    4. '   ' → logprob: -13.752482414245605
    5. ' ' → logprob: -16.25248146057129
    6. ' (' → logprob: -16.87748146057129
    7. '	a' → logprob: -17.12748146057129
    8. '1' → logprob: -17.50248146057129
    9. '  ' → logprob: -18.37748146057129
    10. '    ' → logprob: -19.37748146057129

Token 282: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.06995143741369247
    2. ' &' → logprob: -2.6949515342712402
    3. '&amp' → logprob: -11.944951057434082
    4. '&
' → logprob: -12.694951057434082
    5. '   ' → logprob: -13.444951057434082
    6. '&nbsp' → logprob: -14.069951057434082
    7. '%' → logprob: -14.069951057434082
    8. '1' → logprob: -14.819951057434082
    9. ' &
' → logprob: -15.319951057434082
    10. '[' → logprob: -15.444951057434082

Token 283: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '-' → logprob: -17.750003814697266
    4. 'b' → logprob: -18.875003814697266
    5. '   ' → logprob: -18.875003814697266
    6. '
' → logprob: -19.500003814697266
    7. '#' → logprob: -20.000003814697266
    8. '  ' → logprob: -20.375003814697266
    9. 'a' → logprob: -20.500003814697266
    10. '

' → logprob: -20.500003814697266

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'b' → logprob: -16.125
    3. ' ' → logprob: -16.125
    4. 'a' → logprob: -16.5
    5. '-' → logprob: -17.25
    6. '   ' → logprob: -19.125
    7. '
' → logprob: -19.625
    8. '01' → logprob: -20.25
    9. '１' → logprob: -20.375
    10. '

' → logprob: -20.375

Token 285: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4751894176006317
    2. ':' → logprob: -0.9751894474029541
    3. '==' → logprob: -7.225189208984375
    4. ' ==' → logprob: -8.225189208984375
    5. ' :
' → logprob: -10.225189208984375
    6. '           ' → logprob: -11.225189208984375
    7. '):
' → logprob: -11.350189208984375
    8. ' :' → logprob: -11.475189208984375
    9. ':return' → logprob: -11.600189208984375
    10. ':

' → logprob: -11.975189208984375

Token 286: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006732068490236998
    2. 'RA' → logprob: -5.506731986999512
    3. ' RA' → logprob: -6.506731986999512
    4. '           ' → logprob: -7.256731986999512
    5. '
' → logprob: -8.381731986999512
    6. '   ' → logprob: -9.506731986999512
    7. '                   ' → logprob: -10.006731986999512
    8. '              ' → logprob: -10.381731986999512
    9. '_RA' → logprob: -10.506731986999512
    10. '                ' → logprob: -11.381731986999512

Token 287: ' RA' (ID: 46104)
  Prédit: 'RA'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RA' (adapté à ' RA') → logprob: -0.061972279101610184
    2. ' RA' → logprob: -2.8119723796844482
    3. '               ' → logprob: -12.686972618103027
    4. '_RA' → logprob: -13.811972618103027
    5. '   ' → logprob: -14.811972618103027
    6. '           ' → logprob: -16.18697166442871
    7. ' ' → logprob: -17.68697166442871
    8. '
' → logprob: -18.18697166442871
    9. '                   ' → logprob: -19.06197166442871
    10. '       ' → logprob: -19.06197166442871

Token 288: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00033832306507974863
    2. '.' → logprob: -8.000338554382324
    3. 'append' → logprob: -13.625338554382324
    4. ').' → logprob: -14.625338554382324
    5. '.app' → logprob: -14.625338554382324
    6. ' .' → logprob: -15.125338554382324
    7. '].' → logprob: -15.375338554382324
    8. '.Append' → logprob: -16.375337600708008
    9. '.ap' → logprob: -17.250337600708008
    10. '.APP' → logprob: -17.375337600708008

Token 289: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.292907877039397e-06
    2. 'self' → logprob: -12.75000286102295
    3. '(' → logprob: -15.00000286102295
    4. '(
' → logprob: -19.000003814697266
    5. '(this' → logprob: -20.875003814697266
    6. ' self' → logprob: -21.000003814697266
    7. ' (' → logprob: -21.375003814697266
    8. '=self' → logprob: -21.375003814697266
    9. '   ' → logprob: -21.750003814697266
    10. '[self' → logprob: -21.875003814697266

Token 290: '.ST' (ID: 28339)
  Prédit: '.ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ST' → logprob: -0.04953498765826225
    2. 'ST' → logprob: -3.049535036087036
    3. '[a' → logprob: -7.924534797668457
    4. '[' → logprob: -8.299534797668457
    5. 'self' → logprob: -9.299534797668457
    6. '	ST' → logprob: -9.424534797668457
    7. 'a' → logprob: -9.549534797668457
    8. '   ' → logprob: -11.049534797668457
    9. ' .' → logprob: -11.174534797668457
    10. ' ST' → logprob: -11.299534797668457

Token 291: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -7.896309739408025e-07
    2. 'a' → logprob: -14.250000953674316
    3. '[i' → logprob: -18.0
    4. '[' → logprob: -18.875
    5. '   ' → logprob: -19.125
    6. ' [' → logprob: -19.125
    7. '	a' → logprob: -20.125
    8. ' a' → logprob: -20.625
    9. '(a' → logprob: -20.75
    10. ')[' → logprob: -20.875

Token 292: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.06208879500627518
    2. '])' → logprob: -2.81208872795105
    3. ']);' → logprob: -9.562088966369629
    4. ' ])
' → logprob: -10.312088966369629
    5. ' ])' → logprob: -12.437088966369629
    6. ')
' → logprob: -12.437088966369629
    7. '])
' → logprob: -12.812088966369629
    8. ']);
' → logprob: -13.312088966369629
    9. 'a' → logprob: -13.437088966369629
    10. '])

' → logprob: -14.062088966369629

Token 293: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029699765145778656
    2. 'a' → logprob: -6.002969741821289
    3. '           ' → logprob: -7.752969741821289
    4. ' a' → logprob: -10.752969741821289
    5. '              ' → logprob: -10.877969741821289
    6. ',' → logprob: -11.627969741821289
    7. '	           ' → logprob: -12.877969741821289
    8. '```' → logprob: -12.877969741821289
    9. '                
' → logprob: -13.127969741821289
    10. '
' → logprob: -13.377969741821289

Token 294: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00647496385499835
    2. ' a' → logprob: -5.25647497177124
    3. '               ' → logprob: -6.75647497177124
    4. '           ' → logprob: -9.506474494934082
    5. '                   ' → logprob: -13.256474494934082
    6. '++' → logprob: -15.131474494934082
    7. '   ' → logprob: -15.381474494934082
    8. '
' → logprob: -15.506474494934082
    9. '              ' → logprob: -16.6314754486084
    10. '+' → logprob: -16.7564754486084

Token 295: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014171387068927288
    2. ' +=' → logprob: -4.264171600341797
    3. '=' → logprob: -11.889171600341797
    4. ']+=' → logprob: -14.014171600341797
    5. '+' → logprob: -16.514171600341797
    6. '```' → logprob: -17.264171600341797
    7. ' =' → logprob: -17.639171600341797
    8. 'increment' → logprob: -18.264171600341797
    9. 'a' → logprob: -18.389171600341797
    10. '   ' → logprob: -18.514171600341797

Token 296: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -21.75
    4. '   ' → logprob: -22.125
    5. '۱' → logprob: -23.25
    6. '１' → logprob: -24.125
    7. '
' → logprob: -25.375
    8. '१' → logprob: -25.5
    9. '  ' → logprob: -25.625
    10. '           ' → logprob: -25.75

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -20.875
    4. '   ' → logprob: -21.875
    5. '۱' → logprob: -23.0
    6. 'a' → logprob: -23.125
    7. '
' → logprob: -23.375
    8. '１' → logprob: -23.875
    9. '<|end|>' → logprob: -24.125
    10. '0' → logprob: -24.4375

Token 298: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005439769593067467
    2. '       ' → logprob: -8.625543594360352
    3. '<|end|>' → logprob: -8.750543594360352
    4. 'b' → logprob: -10.125543594360352
    5. 'elif' → logprob: -10.625543594360352
    6. '            
' → logprob: -10.875543594360352
    7. '\
' → logprob: -11.375543594360352
    8. 'a' → logprob: -11.500543594360352
    9. '<|end|>' → logprob: -11.500543594360352
    10. '
' → logprob: -11.625543594360352

Token 299: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.657694418914616e-05
    2. '       ' → logprob: -10.875056266784668
    3. 'b' → logprob: -11.375056266784668
    4. '          ' → logprob: -11.750056266784668
    5. '               ' → logprob: -12.375056266784668
    6. '<|end|>' → logprob: -12.500056266784668
    7. '```' → logprob: -13.000056266784668
    8. '
' → logprob: -13.625056266784668
    9. 'elif' → logprob: -14.000056266784668
    10. '         ' → logprob: -14.500056266784668

Token 300: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.042614638805389404
    2. ' if' → logprob: -3.542614698410034
    3. 'b' → logprob: -4.542614459991455
    4. '           ' → logprob: -6.542614459991455
    5. '       ' → logprob: -7.417614459991455
    6. ' b' → logprob: -9.417614936828613
    7. '   ' → logprob: -12.167614936828613
    8. '
' → logprob: -12.542614936828613
    9. '```' → logprob: -13.917614936828613
    10. ' ' → logprob: -14.042614936828613

Token 301: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.523186445236206
    2. ' b' → logprob: -0.898186445236206
    3. ' not' → logprob: -10.148186683654785
    4. 'not' → logprob: -11.273186683654785
    5. '	b' → logprob: -12.523186683654785
    6. '   ' → logprob: -12.648186683654785
    7. '(b' → logprob: -13.523186683654785
    8. ' ' → logprob: -13.523186683654785
    9. '    ' → logprob: -14.398186683654785
    10. '  ' → logprob: -14.898186683654785

Token 302: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.2255861610174179
    2. ' &' → logprob: -1.600586175918579
    3. '-' → logprob: -9.4755859375
    4. '&amp' → logprob: -10.2255859375
    5. ' ' → logprob: -11.2255859375
    6. '>' → logprob: -11.2255859375
    7. '   ' → logprob: -11.7255859375
    8. ')' → logprob: -12.2255859375
    9. 'and' → logprob: -12.4755859375
    10. ' -' → logprob: -12.7255859375

Token 303: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01604175940155983
    2. ' ' → logprob: -4.1410417556762695
    3. '-' → logprob: -12.26604175567627
    4. 'b' → logprob: -13.76604175567627
    5. '   ' → logprob: -14.01604175567627
    6. '  ' → logprob: -15.51604175567627
    7. '
' → logprob: -16.016042709350586
    8. '>' → logprob: -16.453542709350586
    9. ' -' → logprob: -16.578542709350586
    10. '#' → logprob: -16.891042709350586

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. '-' → logprob: -12.500006675720215
    3. ' ' → logprob: -13.125006675720215
    4. 'b' → logprob: -13.750006675720215
    5. '   ' → logprob: -17.87500762939453
    6. ' -' → logprob: -18.12500762939453
    7. '~' → logprob: -18.25000762939453
    8. '
' → logprob: -18.37500762939453
    9. '(b' → logprob: -18.50000762939453
    10. '(' → logprob: -19.37500762939453

Token 305: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.27818945050239563
    2. ':' → logprob: -1.5281894207000732
    3. '==' → logprob: -4.403189659118652
    4. ' ==' → logprob: -5.153189659118652
    5. '           ' → logprob: -5.653189659118652
    6. '               ' → logprob: -6.153189659118652
    7. '):
' → logprob: -7.028189659118652
    8. 'b' → logprob: -8.278189659118652
    9. ')' → logprob: -8.528189659118652
    10. '-' → logprob: -8.653189659118652

Token 306: '               ' (ID: 506)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.41095173358917236
    2. '-' → logprob: -1.6609517335891724
    3. ' -=' → logprob: -2.910951614379883
    4. '           ' → logprob: -3.785951614379883
    5. '               ' → logprob: -3.785951614379883
    6. ':' → logprob: -3.910951614379883
    7. ':
' → logprob: -4.785951614379883
    8. ' >' → logprob: -5.410951614379883
    9. ')' → logprob: -5.910951614379883
    10. '>' → logprob: -6.035951614379883

Token 307: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0011283133644610643
    2. ' b' → logprob: -7.126128196716309
    3. '               ' → logprob: -8.501128196716309
    4. 'RB' → logprob: -9.376128196716309
    5. '           ' → logprob: -10.876128196716309
    6. ' RB' → logprob: -11.376128196716309
    7. 'RA' → logprob: -12.376128196716309
    8. ')b' → logprob: -14.751128196716309
    9. '   ' → logprob: -15.001128196716309
    10. '       ' → logprob: -16.001129150390625

Token 308: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03982236608862877
    2. ' -=' → logprob: -3.2898223400115967
    3. '-' → logprob: -6.414822578430176
    4. '>' → logprob: -9.164822578430176
    5. '=' → logprob: -10.914822578430176
    6. '   ' → logprob: -12.039822578430176
    7. 'b' → logprob: -12.789822578430176
    8. ' ' → logprob: -13.164822578430176
    9. '+=' → logprob: -13.164822578430176
    10. '```' → logprob: -13.414822578430176

Token 309: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.250019073486328
    4. '           ' → logprob: -18.625019073486328
    5. '               ' → logprob: -19.250019073486328
    6. 'b' → logprob: -19.375019073486328
    7. '```' → logprob: -19.500019073486328
    8. '                   ' → logprob: -20.000019073486328
    9. '
' → logprob: -20.625019073486328
    10. ')' → logprob: -20.875019073486328

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.75
    4. '```' → logprob: -18.75
    5. '
' → logprob: -20.25
    6. '  ' → logprob: -21.0625
    7. '۱' → logprob: -21.125
    8. '１' → logprob: -21.4375
    9. '-' → logprob: -21.6875
    10. '           ' → logprob: -22.1875

Token 311: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007523320964537561
    2. ',' → logprob: -8.250752449035645
    3. '<|end|>' → logprob: -8.500752449035645
    4. '           ' → logprob: -9.000752449035645
    5. '
' → logprob: -10.250752449035645
    6. '<|end|>' → logprob: -10.500752449035645
    7. ',
' → logprob: -10.625752449035645
    8. ':
' → logprob: -11.000752449035645
    9. ' ' → logprob: -11.625752449035645
    10. '       ' → logprob: -11.875752449035645

Token 312: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016568517312407494
    2. '           ' → logprob: -6.626657009124756
    3. '
' → logprob: -8.626656532287598
    4. ',' → logprob: -10.501656532287598
    5. '       ' → logprob: -10.751656532287598
    6. ' and' → logprob: -11.001656532287598
    7. ' RB' → logprob: -11.001656532287598
    8. '              ' → logprob: -11.251656532287598
    9. '```' → logprob: -11.876656532287598
    10. 'RA' → logprob: -12.001656532287598

Token 313: ' RB' (ID: 53873)
  Prédit: ' RB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' RB' → logprob: -0.25328463315963745
    2. 'RB' (adapté à ' RB') → logprob: -1.5032846927642822
    3. '               ' → logprob: -6.628284454345703
    4. '                   ' → logprob: -10.753284454345703
    5. '           ' → logprob: -12.253284454345703
    6. 'RA' → logprob: -12.753284454345703
    7. '              ' → logprob: -14.128284454345703
    8. '                ' → logprob: -14.628284454345703
    9. ' ' → logprob: -15.003284454345703
    10. '   ' → logprob: -15.003284454345703

Token 314: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004081367049366236
    2. '.' → logprob: -5.5040812492370605
    3. ' .' → logprob: -13.629081726074219
    4. '].' → logprob: -14.754081726074219
    5. '.insert' → logprob: -14.754081726074219
    6. 'append' → logprob: -15.129081726074219
    7. ').' → logprob: -15.254081726074219
    8. '.Append' → logprob: -15.504081726074219
    9. '.app' → logprob: -16.87908172607422
    10. '.push' → logprob: -17.25408172607422

Token 315: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.8670179997570813e-05
    2. 'self' → logprob: -11.375019073486328
    3. '(' → logprob: -11.875019073486328
    4. '(
' → logprob: -15.750019073486328
    5. ' (' → logprob: -17.875019073486328
    6. '((' → logprob: -19.500019073486328
    7. '[self' → logprob: -19.500019073486328
    8. ' self' → logprob: -19.500019073486328
    9. '(ST' → logprob: -20.125019073486328
    10. ',self' → logprob: -20.250019073486328

Token 316: '.ST' (ID: 28339)
  Prédit: '.ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ST' → logprob: -0.000781634240411222
    2. '[b' → logprob: -7.250781536102295
    3. 'ST' → logprob: -10.000782012939453
    4. ' .' → logprob: -11.875782012939453
    5. '.get' → logprob: -12.750782012939453
    6. 'b' → logprob: -12.875782012939453
    7. '_ST' → logprob: -13.250782012939453
    8. '[' → logprob: -13.375782012939453
    9. '[a' → logprob: -13.375782012939453
    10. 'get' → logprob: -13.500782012939453

Token 317: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.547789674485102e-05
    2. 'b' → logprob: -10.250035285949707
    3. '[' → logprob: -16.375036239624023
    4. ')[' → logprob: -18.750036239624023
    5. '```' → logprob: -19.125036239624023
    6. ')b' → logprob: -19.250036239624023
    7. '[a' → logprob: -19.625036239624023
    8. ' [' → logprob: -19.625036239624023
    9. '   ' → logprob: -20.000036239624023
    10. ')' → logprob: -20.250036239624023

Token 318: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16047261655330658
    2. ')
' → logprob: -1.9104726314544678
    3. '])' → logprob: -8.535472869873047
    4. ' )' → logprob: -11.410472869873047
    5. '])
' → logprob: -11.785472869873047
    6. '           ' → logprob: -11.910472869873047
    7. '               ' → logprob: -12.160472869873047
    8. ']' → logprob: -12.160472869873047
    9. '       ' → logprob: -12.285472869873047
    10. ' )
' → logprob: -12.660472869873047

Token 319: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03855365142226219
    2. '       ' → logprob: -3.2885537147521973
    3. '               ' → logprob: -8.163553237915039
    4. '<|end|>' → logprob: -10.163553237915039
    5. 'a' → logprob: -10.288553237915039
    6. ')' → logprob: -10.413553237915039
    7. 'b' → logprob: -10.663553237915039
    8. 'return' → logprob: -11.038553237915039
    9. '   ' → logprob: -11.038553237915039
    10. ' return' → logprob: -11.288553237915039

Token 320: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5278575420379639
    2. 'a' (adapté à ' a') → logprob: -1.6528575420379639
    3. '           ' → logprob: -1.6528575420379639
    4. ' a' → logprob: -4.277857780456543
    5. '   ' → logprob: -4.402857780456543
    6. 'b' → logprob: -7.277857780456543
    7. ' ' → logprob: -9.527857780456543
    8. ' b' → logprob: -9.902857780456543
    9. '
' → logprob: -10.277857780456543
    10. '```' → logprob: -10.402857780456543

Token 321: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.3186880648136139
    2. '//=' → logprob: -1.6936880350112915
    3. ' >>=' → logprob: -2.443688154220581
    4. '=' → logprob: -6.318687915802002
    5. '+=' → logprob: -9.06868839263916
    6. '//' → logprob: -9.31868839263916
    7. ' //' → logprob: -9.56868839263916
    8. '   ' → logprob: -10.19368839263916
    9. '>>>' → logprob: -10.31868839263916
    10. '/=' → logprob: -10.81868839263916

Token 322: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -17.87502670288086
    4. '   ' → logprob: -18.37502670288086
    5. 'a' → logprob: -18.50002670288086
    6. '0' → logprob: -18.62502670288086
    7. '<|end|>' → logprob: -20.00002670288086
    8. '' → logprob: -20.62502670288086
    9. '<|end|>' → logprob: -21.00002670288086
    10. '  ' → logprob: -21.62502670288086

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -18.875
    4. '   ' → logprob: -20.0
    5. '0' → logprob: -20.75
    6. 'a' → logprob: -20.75
    7. '<|end|>' → logprob: -21.125
    8. '
' → logprob: -21.125
    9. '' → logprob: -21.875
    10. '１' → logprob: -22.0

Token 324: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47633883357048035
    2. '       ' → logprob: -0.9763388633728027
    3. '<|end|>' → logprob: -6.851338863372803
    4. 'return' → logprob: -8.101338386535645
    5. '
' → logprob: -8.726338386535645
    6. '   ' → logprob: -8.851338386535645
    7. '<|end|>' → logprob: -8.851338386535645
    8. ',' → logprob: -9.476338386535645
    9. 'b' → logprob: -9.851338386535645
    10. '               ' → logprob: -9.976338386535645

Token 325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1460038274526596
    2. '       ' → logprob: -2.0210037231445312
    3. '<|end|>' → logprob: -6.021003723144531
    4. '        ' → logprob: -8.646003723144531
    5. 'return' → logprob: -8.771003723144531
    6. '<|end|>' → logprob: -9.396003723144531
    7. '        
' → logprob: -9.646003723144531
    8. '            ' → logprob: -9.646003723144531
    9. '   ' → logprob: -9.771003723144531
    10. 'b' → logprob: -10.146003723144531

Token 326: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. '           ' → logprob: -19.376928329467773
    4. '       ' → logprob: -19.751928329467773
    5. '	b' → logprob: -20.501928329467773
    6. '   ' → logprob: -21.251928329467773
    7. '    ' → logprob: -22.001928329467773
    8. ' б' → logprob: -22.001928329467773
    9. ')b' → logprob: -22.751928329467773
    10. ' ' → logprob: -22.876928329467773

Token 327: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -1.9266199160483666e-05
    2. ' >>=' → logprob: -10.875019073486328
    3. '>>>' → logprob: -16.625019073486328
    4. '=' → logprob: -16.625019073486328
    5. '>' → logprob: -17.375019073486328
    6. '//=' → logprob: -17.875019073486328
    7. '>>&' → logprob: -18.625019073486328
    8. ')>>' → logprob: -18.750019073486328
    9. '>>,' → logprob: -19.375019073486328
    10. '≫' → logprob: -19.500019073486328

Token 328: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.375051498413086
    4. '```' → logprob: -17.375051498413086
    5. '0' → logprob: -18.500051498413086
    6. 'b' → logprob: -19.062551498413086
    7. '<|end|>' → logprob: -19.187551498413086
    8. '۱' → logprob: -20.125051498413086
    9. '  ' → logprob: -20.125051498413086
    10. '１' → logprob: -20.250051498413086

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -19.875003814697266
    4. '<|end|>' → logprob: -21.187503814697266
    5. '１' → logprob: -21.250003814697266
    6. '۱' → logprob: -21.312503814697266
    7. '0' → logprob: -21.500003814697266
    8. '2' → logprob: -21.687503814697266
    9. '   ' → logprob: -21.875003814697266
    10. '१' → logprob: -21.875003814697266

Token 330: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037045928183943033
    2. 'return' → logprob: -6.12870454788208
    3. '
' → logprob: -7.00370454788208
    4. ' return' → logprob: -8.003705024719238
    5. '           ' → logprob: -9.753705024719238
    6. ')' → logprob: -9.878705024719238
    7. '<|end|>' → logprob: -9.878705024719238
    8. ',' → logprob: -10.503705024719238
    9. 'else' → logprob: -11.378705024719238
    10. '   ' → logprob: -11.378705024719238

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026156092062592506
    2. 'return' → logprob: -6.127615451812744
    3. ' return' → logprob: -8.877615928649902
    4. '
' → logprob: -9.002615928649902
    5. '           ' → logprob: -9.502615928649902
    6. ')' → logprob: -10.752615928649902
    7. '   ' → logprob: -10.752615928649902
    8. '<|end|>' → logprob: -11.377615928649902
    9. '[' → logprob: -11.877615928649902
    10. 'continue' → logprob: -12.752615928649902

Token 332: ' vals' (ID: 58985)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4131776690483093
    2. '       ' → logprob: -1.163177728652954
    3. ' return' → logprob: -3.663177728652954
    4. 'result' → logprob: -8.288177490234375
    5. '   ' → logprob: -10.788177490234375
    6. 'RA' → logprob: -11.913177490234375
    7. ' result' → logprob: -12.038177490234375
    8. '
' → logprob: -12.163177490234375
    9. 'res' → logprob: -12.288177490234375
    10. '           ' → logprob: -12.788177490234375

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03818103298544884
    2. ' =' → logprob: -3.2881810665130615
    3. '.extend' → logprob: -8.91318130493164
    4. '   ' → logprob: -12.53818130493164
    5. '+=' → logprob: -14.66318130493164
    6. '.append' → logprob: -15.53818130493164
    7. '.=' → logprob: -15.91318130493164
    8. ' ' → logprob: -16.03818130493164
    9. '       ' → logprob: -16.03818130493164
    10. ' +=' → logprob: -16.28818130493164

Token 334: ' chain' (ID: 13464)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.9374986290931702
    2. 'RA' → logprob: -1.0624985694885254
    3. 'list' → logprob: -1.4374985694885254
    4. ' chain' → logprob: -4.562498569488525
    5. ' list' → logprob: -4.687498569488525
    6. ' RA' → logprob: -5.812498569488525
    7. 'self' → logprob: -7.062498569488525
    8. '[' → logprob: -7.312498569488525
    9. '(chain' → logprob: -8.562499046325684
    10. '[*' → logprob: -8.687499046325684

Token 335: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.00010759611177491024
    2. '(' → logprob: -10.375107765197754
    3. '(re' → logprob: -10.500107765197754
    4. '.from' → logprob: -10.500107765197754
    5. '(RE' → logprob: -11.625107765197754
    6. '(chain' → logprob: -12.875107765197754
    7. '((' → logprob: -13.000107765197754
    8. '(self' → logprob: -13.250107765197754
    9. '([' → logprob: -13.375107765197754
    10. 'RA' → logprob: -14.375107765197754

Token 336: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.6047699318733066e-05
    2. 'RA' → logprob: -11.750016212463379
    3. 'B' → logprob: -13.500016212463379
    4. '(' → logprob: -14.000016212463379
    5. ' A' → logprob: -14.250016212463379
    6. 'E' → logprob: -14.625016212463379
    7. '(A' → logprob: -14.750016212463379
    8. 'А' → logprob: -14.937516212463379
    9. '   ' → logprob: -15.125016212463379
    10. 'C' → logprob: -15.312516212463379

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006764543941244483
    2. ',R' → logprob: -8.000676155090332
    3. ' ,' → logprob: -8.000676155090332
    4. ',
' → logprob: -13.375676155090332
    5. ',re' → logprob: -13.750676155090332
    6. ' ' → logprob: -14.375676155090332
    7. '   ' → logprob: -14.500676155090332
    8. 'RB' → logprob: -14.875676155090332
    9. '       ' → logprob: -15.250676155090332
    10. '+' → logprob: -15.375676155090332

Token 338: ' reversed' (ID: 57184)
  Prédit: 'RB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RB' → logprob: -0.0021420512348413467
    2. 're' → logprob: -6.502141952514648
    3. ' RB' → logprob: -7.377141952514648
    4. ' reversed' → logprob: -12.127141952514648
    5. '   ' → logprob: -12.502141952514648
    6. 'rb' → logprob: -13.377141952514648
    7. 'reverse' → logprob: -13.752141952514648
    8. ' ' → logprob: -14.127141952514648
    9. 'RE' → logprob: -14.752141952514648
    10. '       ' → logprob: -15.252141952514648

Token 339: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -1.981667537620524e-06
    2. 'RB' → logprob: -13.250001907348633
    3. '(rb' → logprob: -16.875001907348633
    4. '(' → logprob: -17.500001907348633
    5. '(RE' → logprob: -18.125001907348633
    6. '(
' → logprob: -18.375001907348633
    7. '

' → logprob: -19.375001907348633
    8. '	R' → logprob: -20.000001907348633
    9. ' RB' → logprob: -20.375001907348633
    10. '(

' → logprob: -20.500001907348633

Token 340: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.128163257315464e-07
    2. ' B' → logprob: -15.375
    3. 'A' → logprob: -17.25
    4. 'b' → logprob: -17.5
    5. 'RB' → logprob: -17.875
    6. ')' → logprob: -18.125
    7. '[' → logprob: -18.625
    8. '[B' → logprob: -19.125
    9. '(B' → logprob: -19.25
    10. 'Ｂ' → logprob: -19.25

Token 341: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011254831217229366
    2. '))' → logprob: -4.511254787445068
    3. ')
' → logprob: -8.636255264282227
    4. ')))' → logprob: -11.261255264282227
    5. ' )' → logprob: -12.011255264282227
    6. '))
' → logprob: -12.386255264282227
    7. '       ' → logprob: -12.511255264282227
    8. '   ' → logprob: -14.386255264282227
    9. ')}' → logprob: -14.636255264282227
    10. '())' → logprob: -15.511255264282227

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0729709342122078
    2. 'return' → logprob: -3.0729708671569824
    3. ' return' → logprob: -4.572970867156982
    4. '
' → logprob: -4.822970867156982
    5. ')' → logprob: -5.447970867156982
    6. ')
' → logprob: -7.197970867156982
    7. '        
' → logprob: -8.57297134399414
    8. ',' → logprob: -8.94797134399414
    9. '  
' → logprob: -10.07297134399414
    10. ':return' → logprob: -10.19797134399414

Token 343: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1383836567401886
    2. '       ' → logprob: -2.138383626937866
    3. ' return' → logprob: -4.513383865356445
    4. 'result' → logprob: -8.638383865356445
    5. 'yield' → logprob: -9.513383865356445
    6. ')' → logprob: -9.638383865356445
    7. '   ' → logprob: -11.138383865356445
    8. '        
' → logprob: -11.638383865356445
    9. 'reduce' → logprob: -11.763383865356445
    10. ',' → logprob: -11.763383865356445

Token 344: ' Reduce' (ID: 77942)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.015080874785780907
    2. '       ' → logprob: -4.64008092880249
    3. 'result' → logprob: -5.64008092880249
    4. ' return' → logprob: -6.76508092880249
    5. 'res' → logprob: -8.140080451965332
    6. 'yield' → logprob: -8.640080451965332
    7. 'for' → logprob: -9.765080451965332
    8. 'ret' → logprob: -11.015080451965332
    9. 'acc' → logprob: -11.390080451965332
    10. '   ' → logprob: -11.390080451965332

Token 345: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6315209865570068
    2. '       ' → logprob: -1.0065209865570068
    3. ' return' → logprob: -2.381520986557007
    4. ',' → logprob: -5.506521224975586
    5. '(self' → logprob: -6.381521224975586
    6. '(return' → logprob: -7.131521224975586
    7. '(lambda' → logprob: -7.256521224975586
    8. '(' → logprob: -7.381521224975586
    9. 'self' → logprob: -8.131521224975586
    10. ')' → logprob: -8.131521224975586

Token 346: ' but' (ID: 889)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10794812440872192
    2. ' return' → logprob: -2.482948064804077
    3. '       ' → logprob: -3.982948064804077
    4. 'result' → logprob: -9.607948303222656
    5. 'self' → logprob: -10.107948303222656
    6. 'yield' → logprob: -10.607948303222656
    7. 'ret' → logprob: -11.732948303222656
    8. '   ' → logprob: -11.857948303222656
    9. ' result' → logprob: -12.107948303222656
    10. ' self' → logprob: -12.107948303222656

Token 347: ' default' (ID: 2787)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09412797540426254
    2. ' return' → logprob: -2.594127893447876
    3. '       ' → logprob: -4.469128131866455
    4. 'yield' → logprob: -6.094128131866455
    5. ' for' → logprob: -7.469128131866455
    6. 'for' → logprob: -7.844128131866455
    7. ' yield' → logprob: -9.094127655029297
    8. 'result' → logprob: -9.219127655029297
    9. 'val' → logprob: -9.844127655029297
    10. 'ret' → logprob: -10.219127655029297

Token 348: ' to' (ID: 316)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6582357883453369
    2. '       ' → logprob: -1.533235788345337
    3. ' return' → logprob: -1.533235788345337
    4. ' =' → logprob: -3.533235788345337
    5. ' for' → logprob: -5.408235549926758
    6. '=' → logprob: -5.783235549926758
    7. 'result' → logprob: -5.908235549926758
    8. ' result' → logprob: -6.283235549926758
    9. ':' → logprob: -6.783235549926758
    10. 'value' → logprob: -7.033235549926758

Token 349: ' ' (ID: 220)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6902031898498535
    2. 'self' → logprob: -0.9402031898498535
    3. 'ie' → logprob: -2.8152031898498535
    4. 'lambda' → logprob: -3.5652031898498535
    5. 'reduce' → logprob: -5.0652031898498535
    6. 'yield' → logprob: -5.6902031898498535
    7. '       ' → logprob: -6.4402031898498535
    8. 'vals' → logprob: -6.4402031898498535
    9. ' next' → logprob: -6.6902031898498535
    10. 'val' → logprob: -7.3152031898498535

Token 350: '0' (ID: 15)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6212413311004639
    2. 'self' → logprob: -1.2462413311004639
    3. 'ie' → logprob: -1.8712413311004639
    4. 'lambda' → logprob: -4.371241569519043
    5. '       ' → logprob: -6.371241569519043
    6. 'reduce' → logprob: -6.996241569519043
    7. 'vals' → logprob: -7.121241569519043
    8. '   ' → logprob: -7.121241569519043
    9. ' next' → logprob: -7.371241569519043
    10. 'IE' → logprob: -7.871241569519043

Token 351: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0822582021355629
    2. 'return' → logprob: -2.9572582244873047
    3. ' return' → logprob: -4.207258224487305
    4. ' =' → logprob: -4.707258224487305
    5. ',' → logprob: -6.832258224487305
    6. '=' → logprob: -7.457258224487305
    7. ' for' → logprob: -8.332258224487305
    8. ' and' → logprob: -8.457258224487305
    9. ':' → logprob: -8.582258224487305
    10. ' if' → logprob: -8.582258224487305

Token 352: ' nothing' (ID: 6939)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4336555004119873
    2. 'not' → logprob: -2.1836555004119873
    3. 'vals' → logprob: -2.3086555004119873
    4. ' not' → logprob: -2.6836555004119873
    5. ' a' → logprob: -3.5586555004119873
    6. 'next' → logprob: -4.433655738830566
    7. '       ' → logprob: -4.933655738830566
    8. '   ' → logprob: -5.558655738830566
    9. ' vals' → logprob: -5.558655738830566
    10. ' next' → logprob: -5.808655738830566

Token 353: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03420630097389221
    2. 'return' → logprob: -3.7842063903808594
    3. ' return' → logprob: -5.034206390380859
    4. ' if' → logprob: -6.409206390380859
    5. ' =' → logprob: -6.784206390380859
    6. '=' → logprob: -8.03420639038086
    7. 'try' → logprob: -8.28420639038086
    8. ' or' → logprob: -8.65920639038086
    9. ',' → logprob: -8.78420639038086
    10. ' and' → logprob: -8.90920639038086

Token 354: 'although' (ID: 63587)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6658495664596558
    2. 'next' → logprob: -2.0408496856689453
    3. 'try' → logprob: -2.6658496856689453
    4. ' next' → logprob: -2.7908496856689453
    5. ')' → logprob: -3.0408496856689453
    6. '0' → logprob: -3.5408496856689453
    7. ' ie' → logprob: -3.6658496856689453
    8. 'ie' → logprob: -3.7908496856689453
    9. ' try' → logprob: -4.040849685668945
    10. '   ' → logprob: -4.165849685668945

Token 355: ' in' (ID: 306)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12266559898853302
    2. 'vals' → logprob: -3.7476656436920166
    3. 'b' → logprob: -4.1226654052734375
    4. 'not' → logprob: -4.3726654052734375
    5. 'False' → logprob: -4.6226654052734375
    6. '       ' → logprob: -4.7476654052734375
    7. 'len' → logprob: -4.7476654052734375
    8. 'self' → logprob: -4.8726654052734375
    9. ' a' → logprob: -5.1226654052734375
    10. 'next' → logprob: -5.4976654052734375

Token 356: ' practice' (ID: 8248)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6220448613166809
    2. 'vals' → logprob: -1.6220448017120361
    3. 'self' → logprob: -2.747044801712036
    4. 'len' → logprob: -2.997044801712036
    5. 'next' → logprob: -3.372044801712036
    6. 'not' → logprob: -3.372044801712036
    7. 'b' → logprob: -3.622044801712036
    8. ' not' → logprob: -4.622045040130615
    9. 'None' → logprob: -5.247045040130615
    10. ' vals' → logprob: -5.372045040130615

Token 357: ' vals' (ID: 58985)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.093994140625
    2. 'next' → logprob: -1.218994140625
    3. '       ' → logprob: -1.593994140625
    4. '           ' → logprob: -3.468994140625
    5. ',' → logprob: -3.593994140625
    6. 'return' → logprob: -4.593994140625
    7. ' is' → logprob: -4.718994140625
    8. 'not' → logprob: -4.718994140625
    9. ' not' → logprob: -4.843994140625
    10. ' the' → logprob: -4.843994140625

Token 358: ' always' (ID: 3324)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7506306171417236
    2. 'is' → logprob: -1.7506306171417236
    3. 'else' → logprob: -2.5006306171417236
    4. ' else' → logprob: -3.0006306171417236
    5. ')' → logprob: -3.2506306171417236
    6. ':' → logprob: -3.7506306171417236
    7. '=' → logprob: -3.7506306171417236
    8. ' will' → logprob: -4.0006303787231445
    9. ',' → logprob: -4.3756303787231445
    10. 'return' → logprob: -4.5006303787231445

Token 359: ' non' (ID: 2893)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.979909360408783
    2. 'yield' → logprob: -1.7299094200134277
    3. 'next' → logprob: -2.6049094200134277
    4. '       ' → logprob: -3.1049094200134277
    5. 'exist' → logprob: -3.2299094200134277
    6. ' exist' → logprob: -3.3549094200134277
    7. 'exists' → logprob: -3.3549094200134277
    8. ' next' → logprob: -3.6049094200134277
    9. '   ' → logprob: -3.8549094200134277
    10. ' exists' → logprob: -3.8549094200134277

Token 360: '-empty' (ID: 93958)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.002491595223546028
    2. '-empty' → logprob: -6.502491474151611
    3. ' empty' → logprob: -8.37749195098877
    4. '   ' → logprob: -8.75249195098877
    5. '[]' → logprob: -8.87749195098877
    6. '0' → logprob: -8.87749195098877
    7. 'e' → logprob: -9.62749195098877
    8. '_empty' → logprob: -9.75249195098877
    9. 'None' → logprob: -10.12749195098877
    10. ' ' → logprob: -10.62749195098877

Token 361: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5698456764221191
    2. '       ' → logprob: -0.9448456764221191
    3. ')' → logprob: -3.694845676422119
    4. 'return' → logprob: -5.444845676422119
    5. ')
' → logprob: -5.569845676422119
    6. '),' → logprob: -5.819845676422119
    7. 'self' → logprob: -6.319845676422119
    8. ' and' → logprob: -6.319845676422119
    9. '
' → logprob: -6.944845676422119
    10. ' ,' → logprob: -7.069845676422119

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058341458439826965
    2. 'return' → logprob: -2.9333415031433105
    3. ' return' → logprob: -5.6833415031433105
    4. '   ' → logprob: -11.183341026306152
    5. 'result' → logprob: -11.308341026306152
    6. '```' → logprob: -11.808341026306152
    7. '           ' → logprob: -12.933341026306152
    8. '        
' → logprob: -13.058341026306152
    9. ' for' → logprob: -13.308341026306152
    10. 'value' → logprob: -13.308341026306152

Token 363: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2682506740093231
    2. 'return' (adapté à ' return') → logprob: -1.5182507038116455
    3. ' return' → logprob: -4.143250465393066
    4. 'try' → logprob: -8.768250465393066
    5. 'result' → logprob: -9.518250465393066
    6. '   ' → logprob: -10.643250465393066
    7. '        
' → logprob: -11.768250465393066
    8. 'value' → logprob: -11.768250465393066
    9. ' try' → logprob: -11.893250465393066
    10. '           ' → logprob: -12.018250465393066

Token 364: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.07776843756437302
    2. 'next' → logprob: -2.827768325805664
    3. 'self' → logprob: -4.702768325805664
    4. ' reduce' → logprob: -5.702768325805664
    5. ' next' → logprob: -5.827768325805664
    6. '0' → logprob: -8.827768325805664
    7. ' self' → logprob: -9.202768325805664
    8. '   ' → logprob: -10.327768325805664
    9. 'fun' → logprob: -10.452768325805664
    10. ' functools' → logprob: -12.452768325805664

Token 365: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033534664544276893
    2. '(lambda' → logprob: -8.125335693359375
    3. 'self' → logprob: -10.625335693359375
    4. '(' → logprob: -11.125335693359375
    5. ' self' → logprob: -15.875335693359375
    6. 'lambda' → logprob: -16.000335693359375
    7. '(
' → logprob: -17.500335693359375
    8. ' (' → logprob: -18.500335693359375
    9. '[self' → logprob: -18.875335693359375
    10. '       ' → logprob: -19.125335693359375

Token 366: '.func' (ID: 39446)
  Prédit: '.func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.func' → logprob: -2.816093228830141e-06
    2. 'func' → logprob: -12.87500286102295
    3. '(func' → logprob: -16.375001907348633
    4. '	func' → logprob: -16.750001907348633
    5. '.function' → logprob: -17.250001907348633
    6. '.' → logprob: -17.625001907348633
    7. ' func' → logprob: -17.875001907348633
    8. '.fun' → logprob: -18.125001907348633
    9. '.Func' → logprob: -18.875001907348633
    10. ' .' → logprob: -19.625001907348633

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.85104202805087e-05
    2. ',val' → logprob: -9.750078201293945
    3. ',self' → logprob: -11.000078201293945
    4. ' ,' → logprob: -12.875078201293945
    5. 'self' → logprob: -15.250078201293945
    6. 'vals' → logprob: -15.750078201293945
    7. '(vals' → logprob: -15.750078201293945
    8. ',
' → logprob: -16.500078201293945
    9. '(),' → logprob: -16.875078201293945
    10. ',None' → logprob: -17.375078201293945

Token 368: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0036653950810432434
    2. ' vals' → logprob: -5.628665447235107
    3. '(vals' → logprob: -9.87866497039795
    4. ',' → logprob: -11.87866497039795
    5. 'chain' → logprob: -13.00366497039795
    6. ')' → logprob: -13.25366497039795
    7. 'Vals' → logprob: -14.12866497039795
    8. '    ' → logprob: -14.50366497039795
    9. '_vals' → logprob: -14.50366497039795
    10. 'values' → logprob: -14.50366497039795

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3872731924057007
    2. ')' → logprob: -1.1372731924057007
    3. ' ,' → logprob: -8.012272834777832
    4. ' )' → logprob: -10.387272834777832
    5. '   ' → logprob: -11.262272834777832
    6. ')`' → logprob: -12.512272834777832
    7. ' if' → logprob: -12.637272834777832
    8. '0' → logprob: -13.012272834777832
    9. '[' → logprob: -13.262272834777832
    10. ')
' → logprob: -13.387272834777832

Token 370: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6494446992874146
    2. 'None' → logprob: -1.2744446992874146
    3. '0' → logprob: -1.6494446992874146
    4. ')' → logprob: -5.649444580078125
    5. 'type' → logprob: -7.274444580078125
    6. ' None' → logprob: -8.024444580078125
    7. ' self' → logprob: -8.274444580078125
    8. 'lambda' → logprob: -8.899444580078125
    9. 'Type' → logprob: -9.024444580078125
    10. '[self' → logprob: -9.399444580078125

Token 371: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.635114312171936
    2. 'None' → logprob: -1.010114312171936
    3. '0' → logprob: -2.2601141929626465
    4. ')' → logprob: -7.8851141929626465
    5. 'type' → logprob: -8.385114669799805
    6. 'Type' → logprob: -8.760114669799805
    7. ' None' → logprob: -9.135114669799805
    8. 'ie' → logprob: -9.260114669799805
    9. 'lambda' → logprob: -9.510114669799805
    10. 'abs' → logprob: -9.885114669799805

Token 372: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.547789674485102e-05
    2. ')
' → logprob: -10.875035285949707
    3. ' )' → logprob: -12.125035285949707
    4. '   ' → logprob: -12.750035285949707
    5. ')return' → logprob: -12.875035285949707
    6. '       ' → logprob: -13.625035285949707
    7. ')}}' → logprob: -14.250035285949707
    8. '<|end|>' → logprob: -14.250035285949707
    9. ')}' → logprob: -14.375035285949707
    10. '0' → logprob: -14.375035285949707

Token 373: 'N' (ID: 45)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 374: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16250184178352356
    2. '=' → logprob: -2.162501811981201
    3. ',' → logprob: -3.537501811981201
    4. ')' → logprob: -6.037501811981201
    5. ' ' → logprob: -6.412501811981201
    6. ' ,' → logprob: -7.787501811981201
    7. '<|end|>' → logprob: -8.16250228881836
    8. '.' → logprob: -8.41250228881836
    9. '>' → logprob: -8.53750228881836
    10. '#' → logprob: -9.03750228881836

Token 375: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6747356057167053
    2. '10' → logprob: -1.0497355461120605
    3. '0' → logprob: -2.7997355461120605
    4. ' int' → logprob: -3.0497355461120605
    5. ' ' → logprob: -3.6747355461120605
    6. '100' → logprob: -5.7997355461120605
    7. '5' → logprob: -6.0497355461120605
    8. '[int' → logprob: -7.7997355461120605
    9. '8' → logprob: -8.049736022949219
    10. '20' → logprob: -8.549736022949219

Token 376: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.039982154965400696
    2. '(' → logprob: -3.4149820804595947
    3. 'input' → logprob: -5.164982318878174
    4. '()' → logprob: -7.539982318878174
    5. ' input' → logprob: -10.664981842041016
    6. ' (' → logprob: -11.039981842041016
    7. '=input' → logprob: -11.539981842041016
    8. '(
' → logprob: -11.539981842041016
    9. '('' → logprob: -12.039981842041016
    10. ' ' → logprob: -12.914981842041016

Token 377: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005259964615106583
    2. '()' → logprob: -5.255259990692139
    3. ')' → logprob: -11.38025951385498
    4. '())
' → logprob: -11.88025951385498
    5. '(' → logprob: -12.63025951385498
    6. '().' → logprob: -12.88025951385498
    7. ' ())' → logprob: -14.63025951385498
    8. '();)' → logprob: -14.88025951385498
    9. '());' → logprob: -15.38025951385498
    10. '()
' → logprob: -15.50525951385498

Token 378: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05464798957109451
    2. 'arr' → logprob: -3.679647922515869
    3. 'a' → logprob: -4.679647922515869
    4. 'S' → logprob: -5.804647922515869
    5. 'P' → logprob: -5.929647922515869
    6. 'data' → logprob: -5.929647922515869
    7. 'lst' → logprob: -5.929647922515869
    8. 'AB' → logprob: -6.179647922515869
    9. '*A' → logprob: -7.179647922515869
    10. 'L' → logprob: -7.429647922515869

Token 379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760083198547363
    2. '=' → logprob: -0.8260083198547363
    3. '()' → logprob: -10.951007843017578
    4. '[]' → logprob: -11.576007843017578
    5. ',' → logprob: -11.701007843017578
    6. '(' → logprob: -12.076007843017578
    7. '=list' → logprob: -12.201007843017578
    8. '[' → logprob: -12.451007843017578
    9. '=[]' → logprob: -12.701007843017578
    10. '_' → logprob: -12.701007843017578

Token 380: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -9.639096970204264e-05
    2. ' list' → logprob: -9.250096321105957
    3. 'map' → logprob: -15.375096321105957
    4. '[list' → logprob: -19.250097274780273
    5. 'input' → logprob: -19.750097274780273
    6. '[' → logprob: -20.000097274780273
    7. 'lis' → logprob: -20.375097274780273
    8. '[*' → logprob: -20.625097274780273
    9. 'lst' → logprob: -21.250097274780273
    10. 'tuple' → logprob: -21.500097274780273

Token 381: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.153795766294934e-06
    2. 'map' → logprob: -12.125005722045898
    3. '(' → logprob: -15.000005722045898
    4. '(int' → logprob: -16.1250057220459
    5. '(range' → logprob: -16.7500057220459
    6. '()' → logprob: -17.3750057220459
    7. '(m' → logprob: -17.7500057220459
    8. '.map' → logprob: -18.2500057220459
    9. '(input' → logprob: -18.6250057220459
    10. ',map' → logprob: -19.0000057220459

Token 382: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0019422034965828061
    2. 'int' → logprob: -6.251942157745361
    3. ',int' → logprob: -11.75194263458252
    4. '(' → logprob: -12.37694263458252
    5. ' int' → logprob: -14.75194263458252
    6. '<int' → logprob: -14.87694263458252
    7. '=int' → logprob: -15.37694263458252
    8. '[int' → logprob: -15.50194263458252
    9. ':int' → logprob: -16.376941680908203
    10. '(
' → logprob: -16.376941680908203

Token 383: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.025550134479999542
    2. ',' → logprob: -3.775550127029419
    3. 'input' → logprob: -6.775550365447998
    4. '(input' → logprob: -6.775550365447998
    5. ' ,' → logprob: -11.27554988861084
    6. '   ' → logprob: -13.27554988861084
    7. ' input' → logprob: -13.65054988861084
    8. ' ' → logprob: -14.02554988861084
    9. '(' → logprob: -14.27554988861084
    10. '=input' → logprob: -14.90054988861084

Token 384: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002614550176076591
    2. ' input' → logprob: -8.250261306762695
    3. 'lambda' → logprob: -16.125261306762695
    4. '(input' → logprob: -17.375261306762695
    5. 'open' → logprob: -18.375261306762695
    6. '=input' → logprob: -19.375261306762695
    7. '<input' → logprob: -19.625261306762695
    8. ' ' → logprob: -19.750261306762695
    9. ',input' → logprob: -19.750261306762695
    10. 'stdin' → logprob: -20.375261306762695

Token 385: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0683535037969705e-05
    2. '()' → logprob: -11.75001049041748
    3. ' ().' → logprob: -14.00001049041748
    4. 'input' → logprob: -14.75001049041748
    5. '(' → logprob: -14.75001049041748
    6. '.split' → logprob: -15.25001049041748
    7. 'split' → logprob: -15.25001049041748
    8. '.' → logprob: -16.125011444091797
    9. ',input' → logprob: -16.500011444091797
    10. ',' → logprob: -16.875011444091797

Token 386: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3306015716807451e-05
    2. 'strip' → logprob: -11.25001335144043
    3. '(split' → logprob: -16.37501335144043
    4. ' split' → logprob: -16.37501335144043
    5. 'rstrip' → logprob: -17.00001335144043
    6. 'spl' → logprob: -19.62501335144043
    7. '.split' → logprob: -21.62501335144043
    8. 's' → logprob: -21.87501335144043
    9. '_split' → logprob: -23.37501335144043
    10. '().' → logprob: -23.62501335144043

Token 387: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5771564245223999
    2. '()))' → logprob: -0.8271564245223999
    3. '()' → logprob: -6.9521565437316895
    4. '(' → logprob: -9.077156066894531
    5. '()))
' → logprob: -9.952156066894531
    6. '())' → logprob: -9.952156066894531
    7. ')' → logprob: -11.327156066894531
    8. '()));' → logprob: -11.327156066894531
    9. ' ))' → logprob: -12.202156066894531
    10. '))
' → logprob: -12.452156066894531

Token 388: 'from' (ID: 2845)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.4906305968761444
    2. 'st' → logprob: -1.9906306266784668
    3. 'abs' → logprob: -2.365630626678467
    4. 'se' → logprob: -2.740630626678467
    5. 'tree' → logprob: -3.740630626678467
    6. 'max' → logprob: -4.115630626678467
    7. 'sg' → logprob: -4.615630626678467
    8. 'from' → logprob: -5.115630626678467
    9. 'ab' → logprob: -5.240630626678467
    10. 's' → logprob: -5.365630626678467

Token 389: ' functools' (ID: 142636)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.45884251594543457
    2. 'collections' → logprob: -1.3338425159454346
    3. 'operator' → logprob: -2.3338425159454346
    4. 'sys' → logprob: -5.5838422775268555
    5. 'fun' → logprob: -6.3338422775268555
    6. 'heap' → logprob: -6.9588422775268555
    7. 'cmath' → logprob: -7.7088422775268555
    8. 'bis' → logprob: -8.583842277526855
    9. 'fra' → logprob: -8.583842277526855
    10. 'it' → logprob: -9.458842277526855

Token 390: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3496558666229248
    2. ' import' → logprob: -1.2246558666229248
    3. '<|end|>' → logprob: -7.349656105041504
    4. 'from' → logprob: -8.224656105041504
    5. '_import' → logprob: -8.724656105041504
    6. '	import' → logprob: -9.974656105041504
    7. '.' → logprob: -11.099656105041504
    8. ' ' → logprob: -11.474656105041504
    9. '.import' → logprob: -11.599656105041504
    10. ' ' → logprob: -11.724656105041504

Token 391: ' partial' (ID: 13664)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.009030153043568134
    2. 'l' → logprob: -6.009030342102051
    3. 'cmp' → logprob: -6.009030342102051
    4. 'partial' → logprob: -6.134030342102051
    5. 'cache' → logprob: -6.384030342102051
    6. 'import' → logprob: -8.88403034210205
    7. 'wrap' → logprob: -10.38403034210205
    8. 'cached' → logprob: -11.00903034210205
    9. ' reduce' → logprob: -12.00903034210205
    10. 'acc' → logprob: -12.00903034210205

Token 392: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8760114908218384
    2. 'abs' → logprob: -2.001011371612549
    3. 'reduce' → logprob: -2.251011371612549
    4. 'max' → logprob: -2.501011371612549
    5. 'get' → logprob: -3.501011371612549
    6. 'sum' → logprob: -3.626011371612549
    7. 'seg' → logprob: -3.751011371612549
    8. 'def' → logprob: -3.876011371612549
    9. 'add' → logprob: -3.876011371612549
    10. 'update' → logprob: -4.251011371612549

Token 393: 'se' (ID: 344)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9166343212127686
    2. 'max' → logprob: -2.2916343212127686
    3. 'reduce' → logprob: -2.4166343212127686
    4. 'g' → logprob: -2.5416343212127686
    5. 'ABS' → logprob: -3.2916343212127686
    6. 'seg' → logprob: -3.2916343212127686
    7. 'partial' → logprob: -3.4166343212127686
    8. 'sum' → logprob: -3.7916343212127686
    9. 'prefix' → logprob: -4.166634559631348
    10. 'min' → logprob: -4.166634559631348

Token 394: 'gt' (ID: 5115)
  Prédit: 'gt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gt' → logprob: -0.32087960839271545
    2. 'g' → logprob: -1.320879578590393
    3. 'gte' → logprob: -5.4458794593811035
    4. 'gment' → logprob: -6.0708794593811035
    5. 'gs' → logprob: -7.9458794593811035
    6. 't' → logprob: -9.195879936218262
    7. 'gmt' → logprob: -9.445879936218262
    8. 'q' → logprob: -10.070879936218262
    9. 'gf' → logprob: -10.195879936218262
    10. 'git' → logprob: -10.570879936218262

Token 395: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.01608598604798317
    2. 'tree' → logprob: -4.141086101531982
    3. 'rees' → logprob: -11.266085624694824
    4. 'ee' → logprob: -11.516085624694824
    5. 'se' → logprob: -11.891085624694824
    6. '=' → logprob: -12.141085624694824
    7. 're' → logprob: -12.891085624694824
    8. 'reen' → logprob: -13.141085624694824
    9. '_tree' → logprob: -13.141085624694824
    10. 'reet' → logprob: -13.141085624694824

Token 396: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740857779979706
    2. '=' → logprob: -0.974085807800293
    3. '=
' → logprob: -12.974085807800293
    4. ' ' → logprob: -13.099085807800293
    5. ' =
' → logprob: -13.349085807800293
    6. '=A' → logprob: -14.599085807800293
    7. '＝' → logprob: -15.099085807800293
    8. 'se' → logprob: -15.224085807800293
    9. 'class' → logprob: -15.349085807800293
    10. '=

' → logprob: -15.474085807800293

Token 397: ' ABS' (ID: 47975)
  Prédit: 'ABS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABS' → logprob: -0.005910542327910662
    2. ' ABS' → logprob: -5.380910396575928
    3. 'partial' → logprob: -6.755910396575928
    4. ' partial' → logprob: -9.630910873413086
    5. 'AB' → logprob: -10.130910873413086
    6. 'abs' → logprob: -11.630910873413086
    7. 'lambda' → logprob: -12.755910873413086
    8. '   ' → logprob: -13.380910873413086
    9. 'Partial' → logprob: -13.505910873413086
    10. 'part' → logprob: -13.880910873413086

Token 398: 'se' (ID: 344)
  Prédit: 'se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -4.246537173457909e-06
    2. 'ss' → logprob: -13.375003814697266
    3. 'AB' → logprob: -14.375003814697266
    4. 's' → logprob: -14.875003814697266
    5. 'seg' → logprob: -14.875003814697266
    6. 'set' → logprob: -15.125003814697266
    7. '_se' → logprob: -15.875003814697266
    8. '-se' → logprob: -15.875003814697266
    9. 'abs' → logprob: -16.125003814697266
    10. 'segment' → logprob: -16.250003814697266

Token 399: 'gt' (ID: 5115)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.6088802218437195
    2. 'gt' → logprob: -0.8588802218437195
    3. 'se' → logprob: -3.8588802814483643
    4. 'g' → logprob: -5.108880043029785
    5. 'mtree' → logprob: -6.483880043029785
    6. 'seg' → logprob: -6.608880043029785
    7. 'get' → logprob: -6.858880043029785
    8. 'ct' → logprob: -8.233880043029785
    9. 'pt' → logprob: -8.733880043029785
    10. 'gb' → logprob: -8.858880043029785

Token 400: 'ree' (ID: 908)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0015162922209128737
    2. 'ree' → logprob: -6.501516342163086
    3. 'ee' → logprob: -12.501516342163086
    4. 'tee' → logprob: -12.626516342163086
    5. 'tre' → logprob: -12.876516342163086
    6. 'se' → logprob: -13.376516342163086
    7. 'te' → logprob: -14.626516342163086
    8. '(tree' → logprob: -14.626516342163086
    9. ' tree' → logprob: -15.126516342163086
    10. 'TREE' → logprob: -15.251516342163086

Token 401: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003534582501742989
    2. '(len' → logprob: -8.250353813171387
    3. '(' → logprob: -9.625353813171387
    4. '(A' → logprob: -11.375353813171387
    5. '(
' → logprob: -12.375353813171387
    6. 'N' → logprob: -12.625353813171387
    7. '(int' → logprob: -12.750353813171387
    8. ' (' → logprob: -13.750353813171387
    9. '(n' → logprob: -14.125353813171387
    10. '((' → logprob: -14.375353813171387

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012157135643064976
    2. ' ,' → logprob: -6.751215934753418
    3. ',A' → logprob: -10.251215934753418
    4. ',
' → logprob: -12.376215934753418
    5. 'A' → logprob: -12.876215934753418
    6. '   ' → logprob: -13.126215934753418
    7. ')' → logprob: -14.626215934753418
    8. ',N' → logprob: -15.376215934753418
    9. '),' → logprob: -15.751215934753418
    10. ' A' → logprob: -16.2512149810791

Token 403: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005765048554167151
    2. 'float' → logprob: -8.250576972961426
    3. ' ' → logprob: -8.500576972961426
    4. 'int' → logprob: -10.875576972961426
    5. '10' → logprob: -11.500576972961426
    6. '   ' → logprob: -11.500576972961426
    7. '-' → logprob: -11.625576972961426
    8. 'lambda' → logprob: -11.875576972961426
    9. 'min' → logprob: -12.000576972961426
    10. 'A' → logprob: -12.125576972961426

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007528089336119592
    2. 'float' → logprob: -7.875752925872803
    3. '-' → logprob: -9.250752449035645
    4. 'lambda' → logprob: -9.500752449035645
    5. 'g' → logprob: -10.250752449035645
    6. 'int' → logprob: -10.250752449035645
    7. 'A' → logprob: -10.750752449035645
    8. '1' → logprob: -11.000752449035645
    9. '10' → logprob: -11.125752449035645
    10. 'None' → logprob: -11.250752449035645

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010629402240738273
    2. ' ,' → logprob: -6.876062870025635
    3. ',g' → logprob: -11.251063346862793
    4. 'partial' → logprob: -12.501063346862793
    5. 'add' → logprob: -12.626063346862793
    6. 'g' → logprob: -13.126063346862793
    7. ',
' → logprob: -13.376063346862793
    8. 'A' → logprob: -13.876063346862793
    9. ',A' → logprob: -14.001063346862793
    10. ')' → logprob: -14.126063346862793

Token 406: ' gcd' (ID: 106918)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.18398378789424896
    2. 'g' → logprob: -1.8089838027954102
    3. 'partial' → logprob: -5.93398380279541
    4. 'lambda' → logprob: -6.68398380279541
    5. 'max' → logprob: -8.18398380279541
    6. ' add' → logprob: -11.93398380279541
    7. 'int' → logprob: -12.55898380279541
    8. 'operator' → logprob: -12.68398380279541
    9. '   ' → logprob: -12.80898380279541
    10. 'abs' → logprob: -12.80898380279541

Token 407: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00040576665196567774
    2. ' )' → logprob: -8.000405311584473
    3. ')
' → logprob: -9.875405311584473
    4. ',' → logprob: -12.125405311584473
    5. '))' → logprob: -12.250405311584473
    6. '   ' → logprob: -13.125405311584473
    7. 'partial' → logprob: -13.500405311584473
    8. ' ' → logprob: -14.250405311584473
    9. '),' → logprob: -14.625405311584473
    10. '')' → logprob: -14.875405311584473

Token 408: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001414426224073395
    2. 'print' → logprob: -10.250141143798828
    3. ' for' → logprob: -11.000141143798828
    4. 'i' → logprob: -11.250141143798828
    5. '[' → logprob: -11.375141143798828
    6. 'prev' → logprob: -11.750141143798828
    7. 'se' → logprob: -11.875141143798828
    8. 'res' → logprob: -12.250141143798828
    9. '
' → logprob: -12.250141143798828
    10. 'def' → logprob: -12.375141143798828

Token 409: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0788949653506279
    2. ' i' → logprob: -2.578894853591919
    3. 'idx' → logprob: -13.07889461517334
    4. ' idx' → logprob: -14.07889461517334
    5. '   ' → logprob: -14.32889461517334
    6. '_i' → logprob: -14.45389461517334
    7. ' ' → logprob: -14.70389461517334
    8. '(i' → logprob: -14.95389461517334
    9. '	i' → logprob: -15.45389461517334
    10. '_' → logprob: -16.203895568847656

Token 410: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013008564710617065
    2. 'in' → logprob: -4.3880085945129395
    3. ',' → logprob: -7.7630085945129395
    4. 'range' → logprob: -10.263008117675781
    5. ' ' → logprob: -10.888008117675781
    6. '<|end|>' → logprob: -12.013008117675781
    7. ' range' → logprob: -12.763008117675781
    8. '(range' → logprob: -13.138008117675781
    9. ' ,' → logprob: -13.263008117675781
    10. '(' → logprob: -13.388008117675781

Token 411: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6826197504997253
    2. 'a' → logprob: -0.8076197504997253
    3. 'v' → logprob: -3.05761981010437
    4. 'val' → logprob: -6.682619571685791
    5. ' x' → logprob: -8.80762004852295
    6. ' a' → logprob: -8.93262004852295
    7. 'ai' → logprob: -9.05762004852295
    8. ' v' → logprob: -10.30762004852295
    9. 'num' → logprob: -10.43262004852295
    10. 'e' → logprob: -10.80762004852295

Token 412: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10021799057722092
    2. 'in' → logprob: -2.3502180576324463
    3. ',' → logprob: -12.225217819213867
    4. 'n' → logprob: -13.225217819213867
    5. ' ' → logprob: -14.100217819213867
    6. 's' → logprob: -14.600217819213867
    7. ')' → logprob: -14.850217819213867
    8. 'range' → logprob: -14.850217819213867
    9. '
' → logprob: -14.975217819213867
    10. 'to' → logprob: -15.475217819213867

Token 413: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.023282403126358986
    2. ' enumerate' → logprob: -3.773282289505005
    3. 'range' → logprob: -10.273282051086426
    4. ' range' → logprob: -13.898282051086426
    5. '(en' → logprob: -14.648282051086426
    6. 'en' → logprob: -14.898282051086426
    7. '```' → logprob: -15.773282051086426
    8. 'enqueue' → logprob: -15.773282051086426
    9. 'enum' → logprob: -16.398283004760742
    10. '
' → logprob: -16.773283004760742

Token 414: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.404745439183898e-05
    2. 'A' → logprob: -11.00003433227539
    3. '(' → logprob: -11.25003433227539
    4. ' (' → logprob: -13.87503433227539
    5. '(range' → logprob: -14.00003433227539
    6. ' A' → logprob: -14.12503433227539
    7. '(N' → logprob: -14.25003433227539
    8. '(en' → logprob: -15.25003433227539
    9. '(
' → logprob: -16.00003433227539
    10. ',A' → logprob: -16.00003433227539

Token 415: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06203378736972809
    2. '):' → logprob: -2.8120338916778564
    3. '):
' → logprob: -10.062033653259277
    4. ' ):
' → logprob: -11.312033653259277
    5. ':
' → logprob: -12.312033653259277
    6. ':' → logprob: -12.937033653259277
    7. '   ' → logprob: -13.687033653259277
    8. ' ):' → logprob: -13.812033653259277
    9. ')' → logprob: -13.937033653259277
    10. '():
' → logprob: -14.312033653259277

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2361704558134079
    2. 'se' → logprob: -1.6111704111099243
    3. '	se' → logprob: -5.236170291900635
    4. ' se' → logprob: -5.361170291900635
    5. ' seg' → logprob: -8.236170768737793
    6. 'seg' → logprob: -8.611170768737793
    7. '    
' → logprob: -9.236170768737793
    8. '-se' → logprob: -9.611170768737793
    9. ',se' → logprob: -10.736170768737793
    10. '_se' → logprob: -11.861170768737793

Token 417: ' seg' (ID: 3055)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.06423817574977875
    2. ' se' → logprob: -3.4392380714416504
    3. ' seg' → logprob: -3.9392380714416504
    4. '   ' → logprob: -4.68923807144165
    5. 'seg' (adapté à ' seg') → logprob: -6.81423807144165
    6. '	se' → logprob: -8.064238548278809
    7. '-se' → logprob: -10.564238548278809
    8. '_se' → logprob: -11.564238548278809
    9. '    
' → logprob: -12.189238548278809
    10. ' sej' → logprob: -12.439238548278809

Token 418: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -1.259079363080673e-05
    2. 'te' → logprob: -11.625012397766113
    3. 'tre' → logprob: -13.125012397766113
    4. 'se' → logprob: -13.875012397766113
    5. 'ree' → logprob: -15.625012397766113
    6. 't' → logprob: -16.00001335144043
    7. 'tee' → logprob: -16.12501335144043
    8. '_tree' → logprob: -16.50001335144043
    9. 'mtree' → logprob: -16.62501335144043
    10. 'TREE' → logprob: -17.25001335144043

Token 419: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.001293331733904779
    2. '.' → logprob: -7.001293182373047
    3. 'update' → logprob: -7.876293182373047
    4. ' update' → logprob: -13.501293182373047
    5. ' .' → logprob: -14.501293182373047
    6. '   ' → logprob: -16.376293182373047
    7. '(update' → logprob: -18.751293182373047
    8. ').' → logprob: -18.876293182373047
    9. '	update' → logprob: -18.876293182373047
    10. '```' → logprob: -18.876293182373047

Token 420: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.165027217415627e-05
    2. 'i' → logprob: -10.875021934509277
    3. ' i' → logprob: -13.375021934509277
    4. '(' → logprob: -13.875021934509277
    5. ' (' → logprob: -16.25002098083496
    6. ')i' → logprob: -17.50002098083496
    7. '(
' → logprob: -17.87502098083496
    8. ')' → logprob: -18.00002098083496
    9. ',i' → logprob: -19.12502098083496
    10. '[i' → logprob: -19.50002098083496

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004764287732541561
    2. ' ,' → logprob: -8.125476837158203
    3. ',v' → logprob: -8.625476837158203
    4. 'v' → logprob: -14.500476837158203
    5. ' v' → logprob: -14.875476837158203
    6. ',
' → logprob: -17.250476837158203
    7. ')' → logprob: -18.625476837158203
    8. '   ' → logprob: -18.750476837158203
    9. '‌,' → logprob: -18.875476837158203
    10. ' ' → logprob: -19.000476837158203

Token 422: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002475777640938759
    2. ' v' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.75247573852539
    4. ')v' → logprob: -17.00247573852539
    5. '	v' → logprob: -18.12747573852539
    6. ')' → logprob: -19.62747573852539
    7. ' ' → logprob: -20.37747573852539
    8. '    ' → logprob: -21.62747573852539
    9. '_v' → logprob: -21.62747573852539
    10. '*v' → logprob: -21.62747573852539

Token 423: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -15.000003814697266
    4. ')return' → logprob: -15.250003814697266
    5. ')#' → logprob: -16.000003814697266
    6. ')i' → logprob: -17.250003814697266
    7. '))' → logprob: -18.000003814697266
    8. ')v' → logprob: -18.000003814697266
    9. ')}' → logprob: -18.375003814697266
    10. ')}}' → logprob: -18.375003814697266

Token 424: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28680580854415894
    2. 'print' → logprob: -1.7868058681488037
    3. '```' → logprob: -3.9118058681488037
    4. '<|end|>' → logprob: -3.9118058681488037
    5. 'result' → logprob: -4.536805629730225
    6. 'sum' → logprob: -5.161805629730225
    7. 'a' → logprob: -5.661805629730225
    8. ' for' → logprob: -5.661805629730225
    9. 'def' → logprob: -5.661805629730225
    10. 'b' → logprob: -5.786805629730225

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005939701572060585
    2. '=' → logprob: -5.130939483642578
    3. ',' → logprob: -12.380939483642578
    4. ' ' → logprob: -13.255939483642578
    5. 's' → logprob: -13.755939483642578
    6. '_' → logprob: -13.755939483642578
    7. ')' → logprob: -14.255939483642578
    8. ' =
' → logprob: -14.505939483642578
    9. '[' → logprob: -14.880939483642578
    10. ' ' → logprob: -15.755939483642578

Token 426: ' ' (ID: 220)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.6659215688705444
    2. '0' → logprob: -1.1659215688705444
    3. 'g' → logprob: -2.290921688079834
    4. 'max' → logprob: -3.040921688079834
    5. 'reduce' → logprob: -4.915921688079834
    6. 'float' → logprob: -5.415921688079834
    7. 'A' → logprob: -5.915921688079834
    8. 'N' → logprob: -6.165921688079834
    9. '1' → logprob: -6.665921688079834
    10. 'abs' → logprob: -6.790921688079834

Token 427: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.839669406414032
    2. 'max' → logprob: -1.4646694660186768
    3. 'g' → logprob: -1.8396694660186768
    4. 'se' → logprob: -1.8396694660186768
    5. 'reduce' → logprob: -4.839669227600098
    6. 'float' → logprob: -5.339669227600098
    7. 'N' → logprob: -6.839669227600098
    8. '[]' → logprob: -6.964669227600098
    9. 'min' → logprob: -7.089669227600098
    10. 'str' → logprob: -7.839669227600098

Token 428: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017938241362571716
    2. ' for' → logprob: -7.12679386138916
    3. '
' → logprob: -7.37679386138916
    4. 'i' → logprob: -8.12679386138916
    5. 'count' → logprob: -10.62679386138916
    6. 'l' → logprob: -11.62679386138916
    7. '```' → logprob: -11.87679386138916
    8. ',' → logprob: -12.12679386138916
    9. 'range' → logprob: -12.50179386138916
    10. ')' → logprob: -12.62679386138916

Token 429: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00017863049288280308
    2. ' for' → logprob: -9.375178337097168
    3. 'i' → logprob: -9.500178337097168
    4. 'l' → logprob: -11.375178337097168
    5. 'count' → logprob: -13.750178337097168
    6. 'r' → logprob: -13.750178337097168
    7. 'b' → logprob: -13.875178337097168
    8. 'range' → logprob: -13.875178337097168
    9. 'd' → logprob: -14.125178337097168
    10. '```' → logprob: -14.750178337097168

Token 430: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.875729501247406
    2. ' i' → logprob: -1.3757295608520508
    3. 'l' → logprob: -2.125729560852051
    4. ' length' → logprob: -2.625729560852051
    5. ' l' → logprob: -3.125729560852051
    6. 'length' → logprob: -3.500729560852051
    7. 'r' → logprob: -4.000729560852051
    8. ' r' → logprob: -4.500729560852051
    9. 'a' → logprob: -4.875729560852051
    10. 'L' → logprob: -5.125729560852051

Token 431: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08385303616523743
    2. 'in' → logprob: -2.583853006362915
    3. ',' → logprob: -5.333853244781494
    4. ' ' → logprob: -10.083852767944336
    5. 'range' → logprob: -10.333852767944336
    6. ' ,' → logprob: -11.333852767944336
    7. '_' → logprob: -11.708852767944336
    8. '   ' → logprob: -12.458852767944336
    9. '_in' → logprob: -12.833852767944336
    10. '1' → logprob: -12.958852767944336

Token 432: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.053059883415699005
    2. ' v' → logprob: -3.4280598163604736
    3. 'a' → logprob: -4.678060054779053
    4. 'x' → logprob: -5.053060054779053
    5. 'val' → logprob: -6.928060054779053
    6. '_' → logprob: -7.803060054779053
    7. '(v' → logprob: -7.928060054779053
    8. ' x' → logprob: -8.053059577941895
    9. '_v' → logprob: -8.053059577941895
    10. '(a' → logprob: -8.178059577941895

Token 433: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06637337803840637
    2. 'in' → logprob: -2.816373348236084
    3. ',' → logprob: -5.441373348236084
    4. ',v' → logprob: -10.566373825073242
    5. ' ' → logprob: -11.566373825073242
    6. 'v' → logprob: -12.066373825073242
    7. ' ,' → logprob: -12.191373825073242
    8. 'range' → logprob: -12.691373825073242
    9. '   ' → logprob: -12.941373825073242
    10. 'n' → logprob: -13.441373825073242

Token 434: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00016229959146585315
    2. ' enumerate' → logprob: -8.750162124633789
    3. 'range' → logprob: -12.750162124633789
    4. 'enum' → logprob: -15.000162124633789
    5. 'en' → logprob: -15.375162124633789
    6. '(en' → logprob: -16.12516212463379
    7. '```' → logprob: -16.75016212463379
    8. 'list' → logprob: -16.87516212463379
    9. '   ' → logprob: -17.37516212463379
    10. ' ' → logprob: -17.75016212463379

Token 435: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0006151011912152171
    2. '(range' → logprob: -8.375615119934082
    3. '(en' → logprob: -8.375615119934082
    4. 'A' → logprob: -9.875615119934082
    5. 'enumer' → logprob: -10.000615119934082
    6. ',' → logprob: -11.000615119934082
    7. '(' → logprob: -11.375615119934082
    8. '(N' → logprob: -12.125615119934082
    9. '((' → logprob: -12.125615119934082
    10. 'range' → logprob: -12.250615119934082

Token 436: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09173376113176346
    2. '):
' → logprob: -2.716733694076538
    3. ':' → logprob: -3.841733694076538
    4. ',' → logprob: -10.216733932495117
    5. ':
' → logprob: -10.341733932495117
    6. ')' → logprob: -10.841733932495117
    7. '   ' → logprob: -11.841733932495117
    8. '):
' → logprob: -12.466733932495117
    9. ' ):' → logprob: -12.716733932495117
    10. '):

' → logprob: -14.216733932495117

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018295204266905785
    2. ',' → logprob: -4.6432952880859375
    3. ' for' → logprob: -5.8932952880859375
    4. '    
' → logprob: -7.0182952880859375
    5. ' left' → logprob: -7.2682952880859375
    6. ' s' → logprob: -7.3932952880859375
    7. '```' → logprob: -7.3932952880859375
    8. ' l' → logprob: -8.018295288085938
    9. ' step' → logprob: -8.018295288085938
    10. ' j' → logprob: -8.393295288085938

Token 438: ' list' (ID: 1562)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9381005167961121
    2. 'left' → logprob: -0.9381005167961121
    3. '   ' → logprob: -3.063100576400757
    4. 'for' → logprob: -3.438100576400757
    5. 'lo' → logprob: -3.563100576400757
    6. 'low' → logprob: -3.563100576400757
    7. 'g' → logprob: -4.188100337982178
    8. 'ans' → logprob: -4.438100337982178
    9. ' left' → logprob: -4.938100337982178
    10. 'cur' → logprob: -4.938100337982178

Token 439: '(map' (ID: 16946)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7839527726173401
    2. '=' → logprob: -1.5339527130126953
    3. '(range' → logprob: -2.1589527130126953
    4. '_' → logprob: -3.9089527130126953
    5. '(' → logprob: -4.283952713012695
    6. 's' → logprob: -4.408952713012695
    7. 'for' → logprob: -4.408952713012695
    8. 'A' → logprob: -4.533952713012695
    9. '=[]' → logprob: -4.533952713012695
    10. 'acc' → logprob: -4.533952713012695

Token 440: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.08741766959428787
    2. '(se' → logprob: -2.5874176025390625
    3. '(' → logprob: -5.8374176025390625
    4. '(part' → logprob: -6.0874176025390625
    5. '(
' → logprob: -6.2124176025390625
    6. ' (' → logprob: -7.0874176025390625
    7. '   ' → logprob: -8.587417602539062
    8. '(int' → logprob: -9.587417602539062
    9. 'lambda' → logprob: -9.712417602539062
    10. '((' → logprob: -10.587417602539062

Token 441: ' args' (ID: 4966)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7799976468086243
    2. 'x' → logprob: -1.1549975872039795
    3. ' j' → logprob: -2.5299975872039795
    4. 'a' → logprob: -3.6549975872039795
    5. ' x' → logprob: -3.6549975872039795
    6. 'lambda' → logprob: -3.7799975872039795
    7. 'b' → logprob: -4.654997825622559
    8. 'k' → logprob: -4.779997825622559
    9. ' lambda' → logprob: -5.154997825622559
    10. '_j' → logprob: -5.279997825622559

Token 442: ':' (ID: 25)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.4837436079978943
    2. ':' → logprob: -1.483743667602539
    3. '=(' → logprob: -2.733743667602539
    4. '   ' → logprob: -3.108743667602539
    5. '=' → logprob: -3.983743667602539
    6. '(lambda' → logprob: -4.733743667602539
    7. '       ' → logprob: -5.358743667602539
    8. 'lambda' → logprob: -5.358743667602539
    9. ' =' → logprob: -5.608743667602539
    10. '(i' → logprob: -6.608743667602539

Token 443: ' seg' (ID: 3055)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.01866302266716957
    2. 'lambda' → logprob: -5.018662929534912
    3. '   ' → logprob: -5.393662929534912
    4. '(se' → logprob: -5.643662929534912
    5. '(lambda' → logprob: -6.643662929534912
    6. ' lambda' → logprob: -6.893662929534912
    7. 'seg' → logprob: -8.14366340637207
    8. ' se' → logprob: -8.39366340637207
    9. '	se' → logprob: -8.89366340637207
    10. '       ' → logprob: -9.26866340637207

Token 444: 'tree' (ID: 19816)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.24183854460716248
    2. 'tree' → logprob: -2.4918384552001953
    3. '(se' → logprob: -3.1168384552001953
    4. '(args' → logprob: -3.6168384552001953
    5. '(lambda' → logprob: -3.7418384552001953
    6. '(v' → logprob: -4.741838455200195
    7. 'args' → logprob: -5.366838455200195
    8. 'lambda' → logprob: -5.616838455200195
    9. '(i' → logprob: -5.991838455200195
    10. 'ment' → logprob: -6.116838455200195

Token 445: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -2.463036435074173e-05
    2. '.' → logprob: -11.375024795532227
    3. '.get' → logprob: -11.625024795532227
    4. 'update' → logprob: -13.000024795532227
    5. '().' → logprob: -14.000024795532227
    6. ' .' → logprob: -14.875024795532227
    7. ').' → logprob: -15.625024795532227
    8. '{}.' → logprob: -16.750024795532227
    9. '.append' → logprob: -17.000024795532227
    10. '._' → logprob: -17.250024795532227

Token 446: '(*' (ID: 9000)
  Prédit: '(args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(args' → logprob: -0.3205862045288086
    2. '(*' → logprob: -1.6955862045288086
    3. '((' → logprob: -2.9455862045288086
    4. '(i' → logprob: -3.3205862045288086
    5. '((*' → logprob: -7.195586204528809
    6. '(' → logprob: -7.445586204528809
    7. '(*(' → logprob: -7.820586204528809
    8. 'args' → logprob: -8.820586204528809
    9. '(
' → logprob: -9.695586204528809
    10. ')' → logprob: -10.070586204528809

Token 447: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.002849220996722579
    2. '(args' → logprob: -5.877849102020264
    3. ' args' → logprob: -10.127849578857422
    4. '   ' → logprob: -13.502849578857422
    5. '	args' → logprob: -13.502849578857422
    6. ',args' → logprob: -14.627849578857422
    7. '(' → logprob: -15.002849578857422
    8. '
' → logprob: -15.127849578857422
    9. '$args' → logprob: -15.502849578857422
    10. 'tuple' → logprob: -16.502849578857422

Token 448: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38047850131988525
    2. '([(' → logprob: -1.5054785013198853
    3. '),' → logprob: -3.1304783821105957
    4. '((' → logprob: -3.3804783821105957
    5. '   ' → logprob: -5.130478382110596
    6. '([' → logprob: -5.505478382110596
    7. '[(' → logprob: -5.755478382110596
    8. '       ' → logprob: -6.380478382110596
    9. ')),' → logprob: -8.005478858947754
    10. ',(' → logprob: -8.255478858947754

Token 449: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.02133549004793167
    2. '[((' → logprob: -3.8963356018066406
    3. '((' → logprob: -8.64633560180664
    4. '[' → logprob: -8.64633560180664
    5. '[
' → logprob: -9.02133560180664
    6. 'enumer' → logprob: -9.27133560180664
    7. '[[' → logprob: -9.52133560180664
    8. '([(' → logprob: -9.64633560180664
    9. ' [(' → logprob: -9.89633560180664
    10. 'zip' → logprob: -10.39633560180664

Token 450: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0007947356207296252
    2. '(' → logprob: -7.250794887542725
    3. ' (' → logprob: -9.750794410705566
    4. '[i' → logprob: -11.750794410705566
    5. '(j' → logprob: -12.125794410705566
    6. '((' → logprob: -12.250794410705566
    7. '   ' → logprob: -12.375794410705566
    8. '(a' → logprob: -14.125794410705566
    9. '
' → logprob: -14.625794410705566
    10. '(ii' → logprob: -14.750794410705566

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006353547796607018
    2. ',v' → logprob: -7.625635147094727
    3. '-' → logprob: -10.125635147094727
    4. ' ,' → logprob: -10.250635147094727
    5. '+' → logprob: -10.500635147094727
    6. '   ' → logprob: -11.250635147094727
    7. '0' → logprob: -12.250635147094727
    8. ',x' → logprob: -12.250635147094727
    9. ',k' → logprob: -12.750635147094727
    10. ',(' → logprob: -12.875635147094727

Token 452: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3452014923095703
    2. 'v' → logprob: -1.3452014923095703
    3. '1' → logprob: -4.59520149230957
    4. 'g' → logprob: -4.84520149230957
    5. ' ' → logprob: -5.34520149230957
    6. 'se' → logprob: -5.47020149230957
    7. ' v' → logprob: -6.34520149230957
    8. 'A' → logprob: -6.97020149230957
    9. 'ans' → logprob: -8.09520149230957
    10. 'max' → logprob: -8.22020149230957

Token 453: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.485592782497406
    2. '1' → logprob: -1.6105928421020508
    3. 'v' → logprob: -1.8605928421020508
    4. 'g' → logprob: -3.985592842102051
    5. 'se' → logprob: -5.110592842102051
    6. 'A' → logprob: -6.360592842102051
    7. 'N' → logprob: -7.235592842102051
    8. '(' → logprob: -7.485592842102051
    9. 'max' → logprob: -7.485592842102051
    10. 'ans' → logprob: -8.61059284210205

Token 454: ')]' (ID: 15710)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1319528967142105
    2. ')]' → logprob: -2.131953001022339
    3. '),(' → logprob: -6.00695276260376
    4. '),
' → logprob: -6.88195276260376
    5. ')])' → logprob: -7.13195276260376
    6. '   ' → logprob: -8.381953239440918
    7. '       ' → logprob: -9.006953239440918
    8. ')' → logprob: -9.256953239440918
    9. ' ),' → logprob: -9.381953239440918
    10. ',' → logprob: -9.381953239440918

Token 455: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16277579963207245
    2. ')))' → logprob: -2.537775754928589
    3. ',' → logprob: -2.912775754928589
    4. ']))' → logprob: -4.537775993347168
    5. '   ' → logprob: -5.662775993347168
    6. ')])' → logprob: -7.412775993347168
    7. ',
' → logprob: -7.787775993347168
    8. ')' → logprob: -7.912775993347168
    9. ')]' → logprob: -8.037775993347168
    10. '))))' → logprob: -8.412775993347168

Token 456: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09718238562345505
    2. '<|end|>' → logprob: -2.472182273864746
    3. ')' → logprob: -5.347182273864746
    4. '
' → logprob: -6.472182273864746
    5. '    
' → logprob: -7.597182273864746
    6. '<|end|>' → logprob: -7.722182273864746
    7. ',' → logprob: -7.847182273864746
    8. '[' → logprob: -8.972182273864746
    9. ' ' → logprob: -9.222182273864746
    10. ' 
' → logprob: -9.597182273864746

Token 457: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039923857897520065
    2. '<|end|>' → logprob: -3.789923906326294
    3. ')' → logprob: -4.914923667907715
    4. '
' → logprob: -5.289923667907715
    5. '    
' → logprob: -6.539923667907715
    6. ',' → logprob: -7.164923667907715
    7. ')
' → logprob: -7.789923667907715
    8. '[' → logprob: -8.039923667907715
    9. ',
' → logprob: -8.414923667907715
    10. '<|end|>' → logprob: -8.664923667907715

Token 458: ' obscure' (ID: 77331)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6481357216835022
    2. '   ' → logprob: -1.5231356620788574
    3. ' for' → logprob: -2.6481356620788574
    4. 'ans' → logprob: -3.2731356620788574
    5. 'l' → logprob: -3.7731356620788574
    6. 'left' → logprob: -4.148135662078857
    7. 'vals' → logprob: -4.148135662078857
    8. 'se' → logprob: -4.773135662078857
    9. 'seg' → logprob: -4.773135662078857
    10. 'tmp' → logprob: -4.773135662078857

Token 459: ' way' (ID: 2006)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10910724848508835
    2. '<|end|>' → logprob: -2.359107255935669
    3. '
' → logprob: -6.23410701751709
    4. ')' → logprob: -6.35910701751709
    5. '    
' → logprob: -6.60910701751709
    6. '<|end|>' → logprob: -6.73410701751709
    7. ',' → logprob: -6.98410701751709
    8. ' ' → logprob: -7.73410701751709
    9. ' for' → logprob: -7.85910701751709
    10. ';' → logprob: -8.98410701751709

Token 460: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010437668533995748
    2. '<|end|>' → logprob: -7.251043796539307
    3. ',' → logprob: -9.126043319702148
    4. ' for' → logprob: -9.626043319702148
    5. '
' → logprob: -9.876043319702148
    6. '...' → logprob: -10.626043319702148
    7. '    
' → logprob: -10.626043319702148
    8. 'for' → logprob: -11.001043319702148
    9. '<|end|>' → logprob: -11.501043319702148
    10. ')' → logprob: -12.001043319702148

Token 461: ' call' (ID: 2421)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.49124273657798767
    2. 'set' → logprob: -1.61624276638031
    3. 'remove' → logprob: -2.6162426471710205
    4. 'clear' → logprob: -2.8662426471710205
    5. 'update' → logprob: -3.3662426471710205
    6. 'disable' → logprob: -5.1162428855896
    7. 'skip' → logprob: -5.6162428855896
    8. 'hide' → logprob: -6.1162428855896
    9. 'reduce' → logprob: -6.6162428855896
    10. 'continue' → logprob: -6.8662428855896

Token 462: ' update' (ID: 4027)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28017860651016235
    2. 'for' → logprob: -1.6551785469055176
    3. ' for' → logprob: -3.2801785469055176
    4. '[' → logprob: -6.405178546905518
    5. '...' → logprob: -6.405178546905518
    6. 'continue' → logprob: -6.405178546905518
    7. 'ans' → logprob: -6.530178546905518
    8. 'max' → logprob: -6.780178546905518
    9. '<|end|>' → logprob: -6.780178546905518
    10. ')' → logprob: -6.905178546905518

Token 463: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018914785236120224
    2. '<|end|>' → logprob: -4.518914699554443
    3. ',' → logprob: -6.268914699554443
    4. ')' → logprob: -6.518914699554443
    5. ' for' → logprob: -6.643914699554443
    6. '    
' → logprob: -6.893914699554443
    7. '[' → logprob: -8.018915176391602
    8. '
' → logprob: -8.393915176391602
    9. 'for' → logprob: -8.768915176391602
    10. ' ' → logprob: -9.018915176391602

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5342377424240112
    2. 'for' → logprob: -1.2842377424240112
    3. 'ans' → logprob: -2.659237861633301
    4. 'max' → logprob: -3.784237861633301
    5. ' for' → logprob: -4.409237861633301
    6. 'vals' → logprob: -5.534237861633301
    7. 'next' → logprob: -5.784237861633301
    8. 'seg' → logprob: -5.909237861633301
    9. 'list' → logprob: -6.034237861633301
    10. 'range' → logprob: -6.034237861633301

Token 465: ' ans' (ID: 3345)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1572719812393188
    2. 'low' → logprob: -1.2822719812393188
    3. 'left' → logprob: -1.7822719812393188
    4. 'lo' → logprob: -2.2822718620300293
    5. 'for' → logprob: -2.4072718620300293
    6. 'ans' (adapté à ' ans') → logprob: -5.157271862030029
    7. '   ' → logprob: -5.282271862030029
    8. 'r' → logprob: -5.532271862030029
    9. 'res' → logprob: -5.782271862030029
    10. 'from' → logprob: -5.907271862030029

Token 466: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06438897550106049
    2. ' +=' → logprob: -2.8143889904022217
    3. '=' → logprob: -6.064388751983643
    4. ' =' → logprob: -10.4393892288208
    5. '|' → logprob: -10.5643892288208
    6. ']+=' → logprob: -11.8143892288208
    7. '   ' → logprob: -11.9393892288208
    8. '-=' → logprob: -12.1893892288208
    9. ' |=' → logprob: -12.1893892288208
    10. '+' → logprob: -12.6893892288208

Token 467: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06351349502801895
    2. ' max' → logprob: -2.8135135173797607
    3. 'g' → logprob: -7.188513278961182
    4. 'add' → logprob: -7.813513278961182
    5. 'se' → logprob: -8.31351375579834
    6. 'ans' → logprob: -9.81351375579834
    7. ' gcd' → logprob: -10.68851375579834
    8. 'v' → logprob: -10.93851375579834
    9. ' add' → logprob: -11.43851375579834
    10. '(max' → logprob: -11.56351375579834

Token 468: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00012654215970542282
    2. 'ans' → logprob: -9.000126838684082
    3. '(' → logprob: -12.750126838684082
    4. '(
' → logprob: -15.625126838684082
    5. '(answer' → logprob: -17.875125885009766
    6. '	ans' → logprob: -18.000125885009766
    7. ' ans' → logprob: -18.500125885009766
    8. '(abs' → logprob: -19.625125885009766
    9. '```' → logprob: -20.000125885009766
    10. ' (' → logprob: -20.125125885009766

Token 469: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021427664905786514
    2. ',se' → logprob: -7.252142906188965
    3. ' ,' → logprob: -8.002142906188965
    4. '(ans' → logprob: -8.127142906188965
    5. ',g' → logprob: -8.377142906188965
    6. ',v' → logprob: -8.752142906188965
    7. '+' → logprob: -9.252142906188965
    8. ',
' → logprob: -9.502142906188965
    9. '(se' → logprob: -9.752142906188965
    10. ',max' → logprob: -9.877142906188965

Token 470: ' seg' (ID: 3055)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.027606677263975143
    2. ' seg' → logprob: -4.77760648727417
    3. 'seg' → logprob: -4.90260648727417
    4. 'g' → logprob: -5.40260648727417
    5. ' gcd' → logprob: -5.77760648727417
    6. 'v' → logprob: -6.27760648727417
    7. ' se' → logprob: -7.27760648727417
    8. ' ans' → logprob: -8.152606964111328
    9. 'ans' → logprob: -8.152606964111328
    10. 'max' → logprob: -8.777606964111328

Token 471: 'tree' (ID: 19816)
  Prédit: 'ree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.3993769586086273
    2. 'tree' → logprob: -1.6493769884109497
    3. 'ue' → logprob: -2.27437686920166
    4. 'e' → logprob: -5.02437686920166
    5. '   ' → logprob: -5.52437686920166
    6. '(i' → logprob: -5.64937686920166
    7. 'se' → logprob: -6.02437686920166
    8. 'ure' → logprob: -6.02437686920166
    9. 'list' → logprob: -6.39937686920166
    10. 'g' → logprob: -6.39937686920166

Token 472: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00018268341955263168
    2. 'get' → logprob: -8.75018310546875
    3. 'func' → logprob: -11.50018310546875
    4. '.func' → logprob: -12.25018310546875
    5. '.' → logprob: -13.12518310546875
    6. ' .' → logprob: -13.62518310546875
    7. '   ' → logprob: -14.00018310546875
    8. '.__' → logprob: -14.25018310546875
    9. '_get' → logprob: -14.50018310546875
    10. '._' → logprob: -14.62518310546875

Token 473: '_interval' (ID: 49009)
  Prédit: '_interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_interval' → logprob: -1.1041145626222715e-05
    2. 'interval' → logprob: -11.625011444091797
    3. '(interval' → logprob: -14.250011444091797
    4. 'get' → logprob: -14.750011444091797
    5. '_inter' → logprob: -15.000011444091797
    6. 'def' → logprob: -15.625011444091797
    7. 'Interval' → logprob: -17.125011444091797
    8. '_in' → logprob: -17.125011444091797
    9. '_INTERVAL' → logprob: -17.375011444091797
    10. ' ' → logprob: -17.375011444091797

Token 474: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.959636033978313e-05
    2. '0' → logprob: -9.500089645385742
    3. '(i' → logprob: -12.250089645385742
    4. ')' → logprob: -12.500089645385742
    5. '((' → logprob: -13.125089645385742
    6. ' (' → logprob: -13.250089645385742
    7. '(
' → logprob: -13.375089645385742
    8. ' ' → logprob: -15.625089645385742
    9. ')(' → logprob: -15.625089645385742
    10. '```' → logprob: -16.375089645385742

Token 475: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8789383830153383e-05
    2. ' ' → logprob: -11.500019073486328
    3. '(' → logprob: -12.375019073486328
    4. '1' → logprob: -13.125019073486328
    5. 'i' → logprob: -14.625019073486328
    6. '   ' → logprob: -14.687519073486328
    7. ')' → logprob: -15.250019073486328
    8. '
' → logprob: -15.812519073486328
    9. '         ' → logprob: -15.875019073486328
    10. '  ' → logprob: -16.125019073486328

Token 476: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3542138636112213
    2. '(i' → logprob: -1.854213833808899
    3. ',' → logprob: -1.979213833808899
    4. '0' → logprob: -6.854213714599609
    5. '(N' → logprob: -7.354213714599609
    6. ',i' → logprob: -7.604213714599609
    7. '(len' → logprob: -8.22921371459961
    8. ' ,' → logprob: -8.22921371459961
    9. '(),' → logprob: -8.60421371459961
    10. '1' → logprob: -8.97921371459961

Token 477: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011516480008140206
    2. 'i' → logprob: -7.1261515617370605
    3. 'len' → logprob: -8.126152038574219
    4. ' N' → logprob: -10.376152038574219
    5. '   ' → logprob: -11.876152038574219
    6. '0' → logprob: -12.251152038574219
    7. '
' → logprob: -13.751152038574219
    8. ' ' → logprob: -13.751152038574219
    9. '  ' → logprob: -13.876152038574219
    10. 'n' → logprob: -13.876152038574219

Token 478: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01952766813337803
    2. '))
' → logprob: -4.394527435302734
    3. ')' → logprob: -5.144527435302734
    4. '   ' → logprob: -7.644527435302734
    5. ' ))' → logprob: -8.519527435302734
    6. '()))' → logprob: -8.769527435302734
    7. '-' → logprob: -9.519527435302734
    8. ' -' → logprob: -9.644527435302734
    9. ')-' → logprob: -9.769527435302734
    10. ')))' → logprob: -11.019527435302734

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03274000436067581
    2. 'list' → logprob: -3.5327401161193848
    3. 'se' → logprob: -6.282740116119385
    4. ' list' → logprob: -7.157740116119385
    5. '[' → logprob: -8.782739639282227
    6. ')' → logprob: -9.782739639282227
    7. '```' → logprob: -9.782739639282227
    8. '<|end|>' → logprob: -11.032739639282227
    9. '...' → logprob: -11.407739639282227
    10. '	se' → logprob: -12.032739639282227

Token 480: ' list' (ID: 1562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.512830376625061
    2. 'list' (adapté à ' list') → logprob: -1.387830376625061
    3. 'se' → logprob: -1.887830376625061
    4. ' list' → logprob: -8.76283073425293
    5. 'lambda' → logprob: -12.26283073425293
    6. '_' → logprob: -12.51283073425293
    7. 'l' → logprob: -12.63783073425293
    8. '[' → logprob: -12.76283073425293
    9. '    
' → logprob: -12.88783073425293
    10. '  ' → logprob: -13.01283073425293

Token 481: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -7.107425062713446e-06
    2. 'map' → logprob: -12.750006675720215
    3. '.map' → logprob: -13.000006675720215
    4. '(' → logprob: -13.375006675720215
    5. '	map' → logprob: -16.00000762939453
    6. ',map' → logprob: -16.37500762939453
    7. ' map' → logprob: -16.62500762939453
    8. '(lambda' → logprob: -17.00000762939453
    9. '(
' → logprob: -17.37500762939453
    10. '(range' → logprob: -17.87500762939453

Token 482: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -9.491498531133402e-06
    2. 'lambda' → logprob: -11.625009536743164
    3. '=lambda' → logprob: -15.750009536743164
    4. '(l' → logprob: -15.750009536743164
    5. '(' → logprob: -16.000009536743164
    6. ' (' → logprob: -17.000009536743164
    7. '```' → logprob: -17.625009536743164
    8. '(
' → logprob: -18.250009536743164
    9. '   ' → logprob: -18.375009536743164
    10. '((' → logprob: -18.750009536743164

Token 483: ' args' (ID: 4966)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.32890012860298157
    2. 'lambda' → logprob: -1.5789000988006592
    3. 'args' → logprob: -2.703900098800659
    4. '(args' → logprob: -4.953900337219238
    5. '=lambda' → logprob: -10.453900337219238
    6. ' lambda' → logprob: -11.453900337219238
    7. '   ' → logprob: -11.578900337219238
    8. ' args' → logprob: -11.703900337219238
    9. '```' → logprob: -11.703900337219238
    10. '$args' → logprob: -13.203900337219238

Token 484: ':' (ID: 25)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0014109472976997495
    2. ':' → logprob: -6.751410961151123
    3. '=lambda' → logprob: -9.251410484313965
    4. '(se' → logprob: -9.876410484313965
    5. 'lambda' → logprob: -10.626410484313965
    6. ' (' → logprob: -10.751410484313965
    7. '(' → logprob: -10.876410484313965
    8. '((' → logprob: -11.501410484313965
    9. '   ' → logprob: -12.001410484313965
    10. '=' → logprob: -12.126410484313965

Token 485: ' seg' (ID: 3055)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.32462212443351746
    2. '[(' → logprob: -1.3246221542358398
    3. 'lambda' → logprob: -5.69962215423584
    4. '(lambda' → logprob: -5.69962215423584
    5. '(se' → logprob: -6.07462215423584
    6. '[' → logprob: -6.69962215423584
    7. ' [(' → logprob: -7.32462215423584
    8. ' lambda' → logprob: -8.94962215423584
    9. 'update' → logprob: -9.82462215423584
    10. '([(' → logprob: -9.94962215423584

Token 486: 'tree' (ID: 19816)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.578459620475769
    2. 'tree' → logprob: -0.828459620475769
    3. '.update' → logprob: -7.578459739685059
    4. 'tu' → logprob: -7.828459739685059
    5. '(tree' → logprob: -7.828459739685059
    6. 'tuple' → logprob: -8.203459739685059
    7. '((' → logprob: -8.328459739685059
    8. '(update' → logprob: -8.828459739685059
    9. '(i' → logprob: -9.203459739685059
    10. 'te' → logprob: -9.703459739685059

Token 487: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.03805193677544594
    2. 'update' → logprob: -3.2880518436431885
    3. '.' → logprob: -12.91305160522461
    4. '   ' → logprob: -13.03805160522461
    5. '(update' → logprob: -13.53805160522461
    6. ' .' → logprob: -13.91305160522461
    7. ' update' → logprob: -14.28805160522461
    8. '(' → logprob: -14.66305160522461
    9. '```' → logprob: -14.66305160522461
    10. 'se' → logprob: -15.03805160522461

Token 488: '(*' (ID: 9000)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.850069522857666
    2. '(*' → logprob: -1.100069522857666
    3. '((' → logprob: -1.725069522857666
    4. '[(' → logprob: -2.975069522857666
    5. '([' → logprob: -5.100069522857666
    6. '(*(' → logprob: -5.975069522857666
    7. '(args' → logprob: -7.475069522857666
    8. '((*' → logprob: -7.600069522857666
    9. '(lambda' → logprob: -8.600069046020508
    10. '   ' → logprob: -8.600069046020508

Token 489: 'args' (ID: 4285)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.004126842133700848
    2. '([(' → logprob: -5.504127025604248
    3. '((' → logprob: -10.87912654876709
    4. '[((' → logprob: -11.00412654876709
    5. '([' → logprob: -12.25412654876709
    6. '[' → logprob: -13.25412654876709
    7. '(args' → logprob: -13.37912654876709
    8. ' [(' → logprob: -13.37912654876709
    9. '[i' → logprob: -13.50412654876709
    10. 'args' → logprob: -14.25412654876709

Token 490: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017245612107217312
    2. '[(' → logprob: -7.251724720001221
    3. '([(' → logprob: -7.251724720001221
    4. '   ' → logprob: -8.251724243164062
    5. ' ,' → logprob: -11.001724243164062
    6. '),' → logprob: -11.626724243164062
    7. ',(' → logprob: -12.376724243164062
    8. '(),' → logprob: -12.626724243164062
    9. ' [(' → logprob: -12.626724243164062
    10. '       ' → logprob: -13.001724243164062

Token 491: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00013285996101330966
    2. '[((' → logprob: -9.75013256072998
    3. '([(' → logprob: -9.87513256072998
    4. '[' → logprob: -11.50013256072998
    5. ' [(' → logprob: -11.50013256072998
    6. '       ' → logprob: -13.62513256072998
    7. '   ' → logprob: -13.75013256072998
    8. '[[' → logprob: -15.00013256072998
    9. '           ' → logprob: -15.62513256072998
    10. '((' → logprob: -17.000133514404297

Token 492: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0017734732246026397
    2. 'i' → logprob: -6.376773357391357
    3. '[i' → logprob: -10.251773834228516
    4. ' (' → logprob: -10.376773834228516
    5. '{i' → logprob: -13.501773834228516
    6. ' i' → logprob: -13.626773834228516
    7. '   ' → logprob: -13.751773834228516
    8. '(' → logprob: -14.501773834228516
    9. '((' → logprob: -16.501773834228516
    10. '  ' → logprob: -16.751773834228516

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002763518423307687
    2. ',v' → logprob: -8.250276565551758
    3. ',i' → logprob: -11.875276565551758
    4. ',(' → logprob: -12.375276565551758
    5. ' ,' → logprob: -12.875276565551758
    6. ',
' → logprob: -14.500276565551758
    7. '   ' → logprob: -15.250276565551758
    8. '(v' → logprob: -15.875276565551758
    9. ',A' → logprob: -16.000276565551758
    10. '(i' → logprob: -16.250276565551758

Token 494: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0018846115563064814
    2. 'v' → logprob: -7.001884460449219
    3. '(i' → logprob: -7.376884460449219
    4. ' i' → logprob: -8.001884460449219
    5. ' (' → logprob: -12.251884460449219
    6. '   ' → logprob: -13.001884460449219
    7. '[i' → logprob: -13.126884460449219
    8. ' ' → logprob: -14.501884460449219
    9. ' v' → logprob: -14.501884460449219
    10. '(v' → logprob: -15.001884460449219

Token 495: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.006221112795174122
    2. '])))' → logprob: -5.506221294403076
    3. ']))' → logprob: -6.506221294403076
    4. ']' → logprob: -7.506221294403076
    5. ')])' → logprob: -9.881220817565918
    6. '))))' → logprob: -11.006220817565918
    7. '])' → logprob: -12.131220817565918
    8. ')' → logprob: -12.131220817565918
    9. '   ' → logprob: -12.381220817565918
    10. '])))
' → logprob: -12.506220817565918

Token 496: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -2.1054253011243418e-05
    2. '))
' → logprob: -11.000020980834961
    3. '   ' → logprob: -12.750020980834961
    4. '()))' → logprob: -14.500020980834961
    5. ' ))' → logprob: -15.125020980834961
    6. ')))' → logprob: -15.250020980834961
    7. ')' → logprob: -15.250020980834961
    8. '));' → logprob: -17.12502098083496
    9. ']))' → logprob: -17.12502098083496
    10. '])' → logprob: -18.00002098083496

Token 497: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 498: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.4021237802808173e-05
    2. 'ans' → logprob: -11.250014305114746
    3. '(' → logprob: -14.000014305114746
    4. '(answer' → logprob: -16.87501335144043
    5. '(max' → logprob: -16.87501335144043
    6. '(
' → logprob: -17.37501335144043
    7. '(abs' → logprob: -17.62501335144043
    8. '()' → logprob: -19.50001335144043
    9. ' (' → logprob: -19.50001335144043
    10. '	ans' → logprob: -19.50001335144043

Token 499: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -12.500004768371582
    3. ' )' → logprob: -14.625004768371582
    4. ')`' → logprob: -15.000004768371582
    5. '))' → logprob: -15.875004768371582
    6. '())' → logprob: -16.7500057220459
    7. '')' → logprob: -17.0000057220459
    8. ')#' → logprob: -17.0000057220459
    9. '`)' → logprob: -17.1250057220459
    10. '()' → logprob: -17.8750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 497
Tokens correctement prédits (1ère position, stricte): 199
Tokens correctement prédits (1ère position, avec adaptation): 210
Tokens correctement prédits (top 10): 396
Précision stricte (1ère position): 40.04%
Précision adaptée (1ère position): 42.25%
Précision (top 10): 79.68%
================================================================================
