================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add

S, T = (lambda: (input(), input()))()

indices = map(lambda x: x, range(3))
matches = map(lambda i: 1 if S[i] == T[i] else 0, indices)
result = reduce(add, matches, 0)

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007019410841166973
    2. '\' → logprob: -5.882019519805908
    3. 'def' → logprob: -7.257019519805908
    4. '```' → logprob: -7.257019519805908
    5. '\(' → logprob: -7.507019519805908
    6. ' ' → logprob: -7.882019519805908
    7. '(
' → logprob: -7.882019519805908
    8. ' (' → logprob: -8.63201904296875
    9. '(lambda' → logprob: -8.75701904296875
    10. ',' → logprob: -8.75701904296875

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.018911276012659073
    2. 'import' → logprob: -4.143911361694336
    3. ' ' → logprob: -6.393911361694336
    4. '.' → logprob: -6.768911361694336
    5. ' .' → logprob: -10.768911361694336
    6. '	import' → logprob: -11.393911361694336
    7. '.import' → logprob: -12.268911361694336
    8. '<|end|>' → logprob: -12.393911361694336
    9. ' ' → logprob: -13.393911361694336
    10. '_import' → logprob: -13.768911361694336

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1571701467037201
    2. ' import' → logprob: -2.282170057296753
    3. 'add' → logprob: -3.907170057296753
    4. ' mul' → logprob: -4.282170295715332
    5. ' ' → logprob: -5.532170295715332
    6. 'import' → logprob: -5.657170295715332
    7. 'mul' → logprob: -6.907170295715332
    8. ' item' → logprob: -7.407170295715332
    9. ' icon' → logprob: -9.157170295715332
    10. 'item' → logprob: -9.532170295715332

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011845800094306469
    2. '\' → logprob: -5.511845588684082
    3. '(
' → logprob: -5.511845588684082
    4. '\n' → logprob: -6.386845588684082
    5. '\(' → logprob: -7.261845588684082
    6. ',' → logprob: -7.386845588684082
    7. '```' → logprob: -8.761845588684082
    8. '`' → logprob: -9.386845588684082
    9. '(

' → logprob: -9.636845588684082
    10. '#' → logprob: -9.761845588684082

Token 10: 'S' (ID: 50)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025066617876291275
    2. '(
' → logprob: -3.775066614151001
    3. '#' → logprob: -7.77506685256958
    4. '\' → logprob: -8.025066375732422
    5. 'def' → logprob: -8.525066375732422
    6. ',' → logprob: -8.525066375732422
    7. '(

' → logprob: -9.025066375732422
    8. '\n' → logprob: -9.275066375732422
    9. 'a' → logprob: -9.775066375732422
    10. 'result' → logprob: -10.025066375732422

Token 11: ',' (ID: 11)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.7543148994445801
    2. '(' → logprob: -1.75431489944458
    3. 'UM' → logprob: -2.87931489944458
    4. 'u' → logprob: -3.12931489944458
    5. 'E' → logprob: -3.25431489944458
    6. 'Q' → logprob: -3.37931489944458
    7. 'S' → logprob: -3.37931489944458
    8. '.' → logprob: -3.62931489944458
    9. '=' → logprob: -3.75431489944458
    10. 'T' → logprob: -4.00431489944458

Token 12: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.6666340231895447
    2. ' =' → logprob: -2.0416340827941895
    3. ' T' → logprob: -2.5416340827941895
    4. ''' → logprob: -3.5416340827941895
    5. 'n' → logprob: -3.6666340827941895
    6. 'N' → logprob: -3.6666340827941895
    7. '=' → logprob: -3.7916340827941895
    8. 'B' → logprob: -4.2916340827941895
    9. 'a' → logprob: -4.4166340827941895
    10. 's' → logprob: -4.7916340827941895

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11291994899511337
    2. '=' → logprob: -2.237920045852661
    3. '_' → logprob: -9.612919807434082
    4. ' ' → logprob: -11.487919807434082
    5. ',' → logprob: -11.487919807434082
    6. ')' → logprob: -12.612919807434082
    7. ' =
' → logprob: -13.237919807434082
    8. '  ' → logprob: -13.862919807434082
    9. '.' → logprob: -13.987919807434082
    10. ' ,' → logprob: -14.612919807434082

Token 14: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3909800052642822
    2. 'set' → logprob: -2.2659800052642822
    3. ' set' → logprob: -2.2659800052642822
    4. ' {' → logprob: -2.3909800052642822
    5. ' []' → logprob: -2.3909800052642822
    6. '0' → logprob: -2.6409800052642822
    7. ' [' → logprob: -3.1409800052642822
    8. ' "' → logprob: -3.3909800052642822
    9. ' map' → logprob: -3.5159800052642822
    10. 'map' → logprob: -4.015979766845703

Token 15: 'lambda' (ID: 35280)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9094409346580505
    2. '0' → logprob: -1.6594409942626953
    3. ''' → logprob: -2.5344409942626953
    4. '[' → logprob: -2.5344409942626953
    5. '"' → logprob: -2.7844409942626953
    6. ')' → logprob: -3.1594409942626953
    7. '3' → logprob: -3.7844409942626953
    8. '5' → logprob: -4.034440994262695
    9. ''s' → logprob: -4.284440994262695
    10. '100' → logprob: -4.534440994262695

Token 16: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6109165549278259
    2. ' s' → logprob: -1.2359166145324707
    3. 'x' → logprob: -3.1109166145324707
    4. ' lst' → logprob: -3.2359166145324707
    5. ' a' → logprob: -3.8609166145324707
    6. 's' → logprob: -3.8609166145324707
    7. ' lambda' → logprob: -5.110916614532471
    8. 'a' → logprob: -5.110916614532471
    9. ' n' → logprob: -5.360916614532471
    10. ' l' → logprob: -5.360916614532471

Token 17: ' (' (ID: 350)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6452317833900452
    2. ' reduce' → logprob: -2.0202317237854004
    3. 'map' → logprob: -2.5202317237854004
    4. 'reduce' → logprob: -2.6452317237854004
    5. ' input' → logprob: -3.1452317237854004
    6. 'input' → logprob: -3.7702317237854004
    7. ' iter' → logprob: -4.0202317237854
    8. ' int' → logprob: -4.1452317237854
    9. ' (' → logprob: -4.5202317237854
    10. 'int' → logprob: -4.6452317237854

Token 18: 'input' (ID: 2586)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.155556559562683
    2. 'map' → logprob: -1.655556559562683
    3. '0' → logprob: -2.2805566787719727
    4. '[' → logprob: -3.1555566787719727
    5. 'reduce' → logprob: -3.4055566787719727
    6. 'range' → logprob: -3.6555566787719727
    7. 'int' → logprob: -3.7805566787719727
    8. 'i' → logprob: -3.7805566787719727
    9. 'x' → logprob: -3.9055566787719727
    10. 'lambda' → logprob: -3.9055566787719727

Token 19: '(),' (ID: 2547)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -1.039753794670105
    2. '()' → logprob: -1.164753794670105
    3. '(),' → logprob: -1.664753794670105
    4. '())' → logprob: -2.1647539138793945
    5. '()),' → logprob: -4.0397539138793945
    6. '())))' → logprob: -6.0397539138793945
    7. '))' → logprob: -6.4147539138793945
    8. ')' → logprob: -6.5397539138793945
    9. '(' → logprob: -6.9147539138793945
    10. '().' → logprob: -7.0397539138793945

Token 20: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.18239843845367432
    2. 'input' → logprob: -1.8073984384536743
    3. ')' → logprob: -7.432398319244385
    4. ' ' → logprob: -7.682398319244385
    5. ' int' → logprob: -7.682398319244385
    6. 'int' → logprob: -8.307398796081543
    7. ' )' → logprob: -9.307398796081543
    8. ' lambda' → logprob: -9.307398796081543
    9. ' 
' → logprob: -9.432398796081543
    10. ' "' → logprob: -9.682398796081543

Token 21: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.048017047345638275
    2. '))' → logprob: -4.2980170249938965
    3. '())' → logprob: -4.4230170249938965
    4. '())))' → logprob: -4.5480170249938965
    5. '()' → logprob: -4.7980170249938965
    6. ')))' → logprob: -6.6730170249938965
    7. '()),' → logprob: -7.1730170249938965
    8. '()))
' → logprob: -8.673017501831055
    9. ')' → logprob: -9.173017501831055
    10. '()));' → logprob: -9.673017501831055

Token 22: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000494533043820411
    2. '()
' → logprob: -8.000494956970215
    3. '()\' → logprob: -9.500494956970215
    4. '#' → logprob: -10.875494956970215
    5. '(' → logprob: -10.875494956970215
    6. '()

' → logprob: -11.125494956970215
    7. '()<' → logprob: -11.875494956970215
    8. '())' → logprob: -12.250494956970215
    9. '()[' → logprob: -12.625494956970215
    10. '<|end|>' → logprob: -12.875494956970215

Token 23: 'indices' (ID: 30992)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10680651664733887
    2. 's' → logprob: -4.356806755065918
    3. 'sum' → logprob: -4.356806755065918
    4. 'a' → logprob: -4.731806755065918
    5. 'res' → logprob: -4.856806755065918
    6. 'for' → logprob: -4.856806755065918
    7. 'if' → logprob: -4.856806755065918
    8. 'S' → logprob: -5.231806755065918
    9. 'r' → logprob: -5.356806755065918
    10. '\n' → logprob: -5.481806755065918

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4328452944755554
    2. '_' → logprob: -2.0578453540802
    3. '=' → logprob: -2.3078453540802
    4. '.' → logprob: -2.4328453540802
    5. '[' → logprob: -4.182845115661621
    6. '[:]' → logprob: -5.057845115661621
    7. '(' → logprob: -5.807845115661621
    8. ' ' → logprob: -5.932845115661621
    9. '=[]' → logprob: -6.182845115661621
    10. ',' → logprob: -7.057845115661621

Token 25: ' map' (ID: 4014)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.611084520816803
    2. '[' → logprob: -0.986084520816803
    3. ' [' → logprob: -3.736084461212158
    4. ' []' → logprob: -3.861084461212158
    5. 'list' → logprob: -4.111084461212158
    6. '[i' → logprob: -4.611084461212158
    7. '[list' → logprob: -5.236084461212158
    8. ' list' → logprob: -6.611084461212158
    9. 'set' → logprob: -6.861084461212158
    10. 'reduce' → logprob: -7.236084461212158

Token 26: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.690642774105072
    2. '(int' → logprob: -0.940642774105072
    3. '(lambda' → logprob: -2.815642833709717
    4. '(add' → logprob: -3.315642833709717
    5. '(str' → logprob: -4.940642833709717
    6. '(list' → logprob: -5.440642833709717
    7. '(abs' → logprob: -8.940642356872559
    8. '(
' → logprob: -9.440642356872559
    9. '(len' → logprob: -9.440642356872559
    10. 'list' → logprob: -9.815642356872559

Token 27: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.24401766061782837
    2. ' i' → logprob: -2.3690176010131836
    3. ' s' → logprob: -2.8690176010131836
    4. 'x' → logprob: -3.6190176010131836
    5. ' lambda' → logprob: -4.494017601013184
    6. ' index' → logprob: -4.744017601013184
    7. 's' → logprob: -5.369017601013184
    8. ' idx' → logprob: -5.994017601013184
    9. 'index' → logprob: -6.494017601013184
    10. ':' → logprob: -6.494017601013184

Token 28: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045094992965459824
    2. ',' → logprob: -3.2950949668884277
    3. ' :' → logprob: -5.045094966888428
    4. ' ,' → logprob: -8.295095443725586
    5. ':x' → logprob: -9.170095443725586
    6. ':int' → logprob: -9.670095443725586
    7. ',x' → logprob: -10.795095443725586
    8. ':,' → logprob: -10.920095443725586
    9. ':index' → logprob: -11.170095443725586
    10. 'x' → logprob: -11.295095443725586

Token 29: ' x' (ID: 1215)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6636965870857239
    2. 'T' → logprob: -1.163696527481079
    3. ' S' → logprob: -2.913696527481079
    4. ' T' → logprob: -2.913696527481079
    5. 'add' → logprob: -3.788696527481079
    6. 'x' → logprob: -4.288696765899658
    7. ' add' → logprob: -4.788696765899658
    8. 'str' → logprob: -5.413696765899658
    9. ' x' → logprob: -5.538696765899658
    10. 's' → logprob: -6.538696765899658

Token 30: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1549060344696045
    2. ',' → logprob: -3.1549060344696045
    3. '+' → logprob: -3.7799060344696045
    4. 'in' → logprob: -3.9049060344696045
    5. '[' → logprob: -4.279906272888184
    6. ' if' → logprob: -4.654906272888184
    7. ':' → logprob: -5.154906272888184
    8. '==' → logprob: -5.779906272888184
    9. ' +' → logprob: -5.904906272888184
    10. ')' → logprob: -6.029906272888184

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5481652617454529
    2. 'range' → logprob: -0.9231652617454529
    3. 'filter' → logprob: -4.798165321350098
    4. ' filter' → logprob: -4.798165321350098
    5. '(range' → logprob: -6.673165321350098
    6. ' lambda' → logprob: -6.798165321350098
    7. 'lambda' → logprob: -6.923165321350098
    8. ' T' → logprob: -6.923165321350098
    9. ' S' → logprob: -7.173165321350098
    10. '[' → logprob: -7.423165321350098

Token 32: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0009151478880085051
    2. '(' → logprob: -7.000915050506592
    3. '(S' → logprob: -13.87591552734375
    4. 'len' → logprob: -14.50091552734375
    5. '(length' → logprob: -14.50091552734375
    6. '(

' → logprob: -14.87591552734375
    7. '(s' → logprob: -15.12591552734375
    8. '(
' → logprob: -15.37591552734375
    9. ')' → logprob: -15.75091552734375
    10. '((' → logprob: -16.12591552734375

Token 33: '3' (ID: 18)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0031456348951905966
    2. 'min' → logprob: -6.253145694732666
    3. ' len' → logprob: -7.003145694732666
    4. '(len' → logprob: -8.378145217895508
    5. 'max' → logprob: -10.128145217895508
    6. ' min' → logprob: -12.003145217895508
    7. '0' → logprob: -12.378145217895508
    8. '1' → logprob: -12.378145217895508
    9. '2' → logprob: -12.628145217895508
    10. '3' → logprob: -12.753145217895508

Token 34: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.09134944528341293
    2. ')' → logprob: -2.4663493633270264
    3. ')))' → logprob: -6.2163496017456055
    4. ' ))' → logprob: -8.841349601745605
    5. ',' → logprob: -9.341349601745605
    6. ' )' → logprob: -9.466349601745605
    7. '),' → logprob: -9.716349601745605
    8. ' ' → logprob: -11.841349601745605
    9. '))
' → logprob: -12.091349601745605
    10. '3' → logprob: -12.341349601745605

Token 35: 'matches' (ID: 44239)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05177876353263855
    2. ' ' → logprob: -3.676778793334961
    3. ':' → logprob: -4.426778793334961
    4. '<|end|>' → logprob: -5.176778793334961
    5. '(' → logprob: -6.051778793334961
    6. ',' → logprob: -7.051778793334961
    7. ' )' → logprob: -7.426778793334961
    8. '[:]' → logprob: -7.801778793334961
    9. '[' → logprob: -8.051778793334961
    10. '#' → logprob: -8.051778793334961

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017381247598677874
    2. '=' → logprob: -6.37673807144165
    3. ' ' → logprob: -11.126738548278809
    4. 's' → logprob: -12.001738548278809
    5. '(' → logprob: -12.126738548278809
    6. '  ' → logprob: -12.876738548278809
    7. ')' → logprob: -13.126738548278809
    8. '   ' → logprob: -13.626738548278809
    9. ' =)' → logprob: -13.876738548278809
    10. ',' → logprob: -14.751738548278809

Token 37: ' map' (ID: 4014)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6808854341506958
    2. ' map' → logprob: -1.8058854341506958
    3. ' sum' → logprob: -1.9308854341506958
    4. 'sum' → logprob: -2.9308853149414062
    5. '[' → logprob: -3.0558853149414062
    6. ' list' → logprob: -3.1808853149414062
    7. 'map' → logprob: -4.055885314941406
    8. 'list' → logprob: -4.555885314941406
    9. ' filter' → logprob: -5.930885314941406
    10. 'filter' → logprob: -6.055885314941406

Token 38: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.2526017725467682
    2. '(' → logprob: -1.5026017427444458
    3. '(operator' → logprob: -8.377601623535156
    4. '(str' → logprob: -8.502601623535156
    5. '(int' → logprob: -9.377601623535156
    6. '(bool' → logprob: -10.127601623535156
    7. '((' → logprob: -10.377601623535156
    8. '(add' → logprob: -10.752601623535156
    9. ' (' → logprob: -11.377601623535156
    10. '(
' → logprob: -11.377601623535156

Token 39: ' i' (ID: 575)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5277131795883179
    2. 'lambda' → logprob: -1.1527131795883179
    3. ' lambda' → logprob: -2.4027132987976074
    4. 'S' → logprob: -6.777713298797607
    5. '(' → logprob: -7.152713298797607
    6. ' (' → logprob: -7.902713298797607
    7. '=lambda' → logprob: -7.902713298797607
    8. ' ' → logprob: -8.02771282196045
    9. 's' → logprob: -8.15271282196045
    10. ' S' → logprob: -9.02771282196045

Token 40: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016790971159934998
    2. ' :' → logprob: -4.141790866851807
    3. ' lambda' → logprob: -8.141791343688965
    4. 'lambda' → logprob: -8.391791343688965
    5. 'S' → logprob: -9.766791343688965
    6. ' i' → logprob: -10.141791343688965
    7. ',' → logprob: -10.641791343688965
    8. ':i' → logprob: -10.641791343688965
    9. '   ' → logprob: -10.766791343688965
    10. '    ' → logprob: -11.516791343688965

Token 41: ' ' (ID: 220)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.609825074672699
    2. ' S' → logprob: -1.1098251342773438
    3. ' int' → logprob: -2.8598251342773438
    4. ' ' → logprob: -3.8598251342773438
    5. 'int' → logprob: -4.109825134277344
    6. ' T' → logprob: -4.359825134277344
    7. 'T' → logprob: -4.359825134277344
    8. '1' → logprob: -5.609825134277344
    9. ' add' → logprob: -7.484825134277344
    10. '   ' → logprob: -7.984825134277344

Token 42: '1' (ID: 16)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.164574533700943
    2. 'T' → logprob: -2.91457462310791
    3. 'int' → logprob: -3.16457462310791
    4. '1' → logprob: -3.53957462310791
    5. ' S' → logprob: -4.78957462310791
    6. 'add' → logprob: -5.03957462310791
    7. ' int' → logprob: -5.28957462310791
    8. ' ' → logprob: -5.91457462310791
    9. ' T' → logprob: -7.28957462310791
    10. '(' → logprob: -7.41457462310791

Token 43: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07002413272857666
    2. 'if' → logprob: -2.695024013519287
    3. ',' → logprob: -10.320024490356445
    4. ' ' → logprob: -10.445024490356445
    5. '+' → logprob: -11.820024490356445
    6. ')' → logprob: -12.070024490356445
    7. '   ' → logprob: -12.945024490356445
    8. '),' → logprob: -13.195024490356445
    9. ' +' → logprob: -13.695024490356445
    10. '  ' → logprob: -13.695024490356445

Token 44: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3492768704891205
    2. ' S' → logprob: -1.2242769002914429
    3. ' ' → logprob: -7.349277019500732
    4. 'T' → logprob: -9.474276542663574
    5. ' T' → logprob: -9.974276542663574
    6. '(S' → logprob: -10.724276542663574
    7. '  ' → logprob: -12.224276542663574
    8. '   ' → logprob: -12.224276542663574
    9. ' i' → logprob: -12.349276542663574
    10. 'i' → logprob: -12.474276542663574

Token 45: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011152983643114567
    2. '[' → logprob: -9.25011157989502
    3. ' [' → logprob: -12.12511157989502
    4. 'i' → logprob: -12.50011157989502
    5. '```' → logprob: -13.12511157989502
    6. '[I' → logprob: -13.37511157989502
    7. ' ' → logprob: -14.37511157989502
    8. '==' → logprob: -15.12511157989502
    9. '[
' → logprob: -15.25011157989502
    10. ' i' → logprob: -15.37511157989502

Token 46: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9918347001075745
    2. ']' → logprob: -1.1168346405029297
    3. ']==' → logprob: -1.2418346405029297
    4. ' ==' → logprob: -4.36683464050293
    5. ' ]' → logprob: -9.11683464050293
    6. '']==' → logprob: -10.61683464050293
    7. ')' → logprob: -10.74183464050293
    8. ')==' → logprob: -10.86683464050293
    9. ']=' → logprob: -11.24183464050293
    10. ' ' → logprob: -11.49183464050293

Token 47: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2254800796508789
    2. ' ==' → logprob: -1.600480079650879
    3. ' ' → logprob: -10.600480079650879
    4. '=' → logprob: -11.225480079650879
    5. '==
' → logprob: -11.725480079650879
    6. '!=' → logprob: -12.475480079650879
    7. ']==' → logprob: -12.725480079650879
    8. '===' → logprob: -13.350480079650879
    9. 'in' → logprob: -13.662980079650879
    10. ' in' → logprob: -13.662980079650879

Token 48: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0059415982104837894
    2. ' T' → logprob: -5.130941390991211
    3. ' ' → logprob: -12.255941390991211
    4. 'S' → logprob: -12.505941390991211
    5. '  ' → logprob: -13.880941390991211
    6. '   ' → logprob: -14.255941390991211
    7. '<|end|>' → logprob: -14.630941390991211
    8. '	T' → logprob: -14.880941390991211
    9. ')' → logprob: -15.068441390991211
    10. '`' → logprob: -15.193441390991211

Token 49: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3795937522663735e-05
    2. '[' → logprob: -11.50002384185791
    3. 'i' → logprob: -12.25002384185791
    4. ']' → logprob: -12.87502384185791
    5. ' [' → logprob: -13.12502384185791
    6. '```' → logprob: -13.75002384185791
    7. ')' → logprob: -14.12502384185791
    8. '   ' → logprob: -14.37502384185791
    9. '[
' → logprob: -14.87502384185791
    10. ' ' → logprob: -15.12502384185791

Token 50: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6570855379104614
    2. ' else' → logprob: -0.9070855379104614
    3. 'else' → logprob: -3.032085418701172
    4. ')' → logprob: -3.532085418701172
    5. '}' → logprob: -9.282085418701172
    6. 'and' → logprob: -9.407085418701172
    7. ' ' → logprob: -9.407085418701172
    8. '        ' → logprob: -10.032085418701172
    9. '']' → logprob: -10.282085418701172
    10. ' and' → logprob: -10.407085418701172

Token 51: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0076093473471701145
    2. 'else' → logprob: -4.8826093673706055
    3. ' ' → logprob: -13.757609367370605
    4. ' and' → logprob: -14.007609367370605
    5. ')' → logprob: -15.007609367370605
    6. '	else' → logprob: -15.132609367370605
    7. ' ' → logprob: -15.632609367370605
    8. '```' → logprob: -15.757609367370605
    9. ',' → logprob: -16.13260841369629
    10. '        ' → logprob: -16.25760841369629

Token 52: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14268258213996887
    2. ' ' → logprob: -2.0176825523376465
    3. '1' → logprob: -12.955183029174805
    4. ' ' → logprob: -13.392683029174805
    5. '  ' → logprob: -13.830183029174805
    6. '   ' → logprob: -14.392683029174805
    7. ')' → logprob: -14.892683029174805
    8. ',' → logprob: -15.330183029174805
    9. '-' → logprob: -15.830183029174805
    10. '    ' → logprob: -15.955183029174805

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011742709903046489
    2. ' ' → logprob: -6.751174449920654
    3. '-' → logprob: -13.876173973083496
    4. '  ' → logprob: -14.001173973083496
    5. '   ' → logprob: -14.313673973083496
    6. '1' → logprob: -14.751173973083496
    7. ')' → logprob: -15.063673973083496
    8. ' ' → logprob: -16.376174926757812
    9. '۰' → logprob: -16.563674926757812
    10. '```' → logprob: -16.626174926757812

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006290179677307606
    2. ')' → logprob: -5.381289958953857
    3. '),' → logprob: -7.131289958953857
    4. ' ,' → logprob: -7.131289958953857
    5. ',)' → logprob: -10.131290435791016
    6. '   ' → logprob: -11.506290435791016
    7. ',map' → logprob: -12.256290435791016
    8. ',m' → logprob: -12.756290435791016
    9. ' )' → logprob: -13.006290435791016
    10. ' ' → logprob: -13.506290435791016

Token 55: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.02980337291955948
    2. ' indices' → logprob: -3.5298032760620117
    3. '(indices' → logprob: -10.779803276062012
    4. '"indices' → logprob: -11.279803276062012
    5. 'range' → logprob: -12.154803276062012
    6. 'indexes' → logprob: -12.404803276062012
    7. '.indices' → logprob: -12.904803276062012
    8. ' ' → logprob: -12.904803276062012
    9. 'index' → logprob: -13.529803276062012
    10. 'indice' → logprob: -14.029803276062012

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.078839502763003e-05
    2. ')
' → logprob: -9.625090599060059
    3. ' )' → logprob: -11.125090599060059
    4. '))' → logprob: -12.250090599060059
    5. ')

' → logprob: -12.750090599060059
    6. ')`' → logprob: -14.375090599060059
    7. ')))' → logprob: -14.750090599060059
    8. '),' → logprob: -15.250090599060059
    9. '`)' → logprob: -15.625090599060059
    10. ')#' → logprob: -16.375091552734375

Token 57: 'result' (ID: 2521)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.34897494316101074
    2. ')' → logprob: -1.4739749431610107
    3. 'print' → logprob: -3.3489749431610107
    4. 'reduce' → logprob: -3.8489749431610107
    5. 'list' → logprob: -5.97397518157959
    6. 'matches' → logprob: -6.09897518157959
    7. ')
' → logprob: -6.59897518157959
    8. 'result' → logprob: -6.97397518157959
    9. '),' → logprob: -7.97397518157959
    10. ' sum' → logprob: -7.97397518157959

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009761752560734749
    2. '=' → logprob: -4.634761810302734
    3. '_' → logprob: -12.759761810302734
    4. 's' → logprob: -13.134761810302734
    5. ' ' → logprob: -15.009761810302734
    6. '.' → logprob: -15.759761810302734
    7. ':' → logprob: -16.384761810302734
    8. ' ' → logprob: -16.384761810302734
    9. ')' → logprob: -16.509761810302734
    10. '  ' → logprob: -16.634761810302734

Token 59: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.7219577431678772
    2. 'reduce' → logprob: -0.7219577431678772
    3. ' sum' → logprob: -4.471957683563232
    4. ' list' → logprob: -4.846957683563232
    5. 'sum' → logprob: -4.971957683563232
    6. 'list' → logprob: -6.221957683563232
    7. ' str' → logprob: -9.59695816040039
    8. 'str' → logprob: -9.84695816040039
    9. 'redu' → logprob: -10.97195816040039
    10. 're' → logprob: -11.22195816040039

Token 60: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.003229875583201647
    2. '(' → logprob: -5.753230094909668
    3. '(lambda' → logprob: -10.128230094909668
    4. 'add' → logprob: -11.878230094909668
    5. '(operator' → logprob: -13.003230094909668
    6. ' (' → logprob: -13.128230094909668
    7. ' add' → logprob: -14.503230094909668
    8. '(
' → logprob: -15.753230094909668
    9. '```' → logprob: -16.12822914123535
    10. '	add' → logprob: -16.12822914123535

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020846186205744743
    2. ',m' → logprob: -3.895846128463745
    3. ' ,' → logprob: -8.145846366882324
    4. '(matches' → logprob: -11.270846366882324
    5. ',
' → logprob: -15.770846366882324
    6. '```' → logprob: -15.895846366882324
    7. '`,' → logprob: -16.020845413208008
    8. '),' → logprob: -16.270845413208008
    9. '(m' → logprob: -16.270845413208008
    10. ',result' → logprob: -16.270845413208008

Token 62: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.5764142870903015
    2. ' matches' → logprob: -0.8264142870903015
    3. '(matches' → logprob: -7.701414108276367
    4. ')' → logprob: -11.701414108276367
    5. 'list' → logprob: -11.826414108276367
    6. ' list' → logprob: -12.826414108276367
    7. ' ' → logprob: -13.701414108276367
    8. '_matches' → logprob: -14.076414108276367
    9. '   ' → logprob: -14.451414108276367
    10. '.matches' → logprob: -14.451414108276367

Token 63: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.351697033504024e-05
    2. ' )' → logprob: -9.750083923339844
    3. ',' → logprob: -10.875083923339844
    4. '))' → logprob: -12.625083923339844
    5. ')
' → logprob: -13.625083923339844
    6. ')`' → logprob: -14.875083923339844
    7. ',)' → logprob: -15.125083923339844
    8. ')#' → logprob: -15.625083923339844
    9. ' ' → logprob: -15.875083923339844
    10. ')

' → logprob: -16.375083923339844

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0380459688603878
    2. ' ' → logprob: -3.288045883178711
    3. ')' → logprob: -13.100545883178711
    4. ' ' → logprob: -14.475545883178711
    5. '  ' → logprob: -14.788045883178711
    6. '   ' → logprob: -15.288045883178711
    7. '1' → logprob: -15.538045883178711
    8. ' -' → logprob: -15.850545883178711
    9. '-' → logprob: -15.913045883178711
    10. '    ' → logprob: -16.28804588317871

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006308287265710533
    2. ' ' → logprob: -7.375630855560303
    3. '-' → logprob: -13.250630378723145
    4. ')' → logprob: -13.938130378723145
    5. ' -' → logprob: -15.000630378723145
    6. '  ' → logprob: -15.000630378723145
    7. '   ' → logprob: -15.188130378723145
    8. '1' → logprob: -15.563130378723145
    9. '00' → logprob: -16.87563133239746
    10. '۰' → logprob: -16.93813133239746

Token 66: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ')
' → logprob: -12.625005722045898
    3. ' )' → logprob: -13.500005722045898
    4. '))' → logprob: -15.500005722045898
    5. ')#' → logprob: -16.1250057220459
    6. ')

' → logprob: -16.2500057220459
    7. ')`' → logprob: -16.3750057220459
    8. '),' → logprob: -17.6250057220459
    9. '`)' → logprob: -17.7500057220459
    10. '#' → logprob: -18.0000057220459

Token 67: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011517672101035714
    2. ')' → logprob: -7.0011515617370605
    3. '
' → logprob: -9.251152038574219
    4. '<|end|>' → logprob: -9.376152038574219
    5. ' print' → logprob: -10.876152038574219
    6. '#' → logprob: -11.126152038574219
    7. '```' → logprob: -12.001152038574219
    8. '#print' → logprob: -12.126152038574219
    9. '(print' → logprob: -13.126152038574219
    10. 'p' → logprob: -13.376152038574219

Token 68: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.16025479137897491
    2. '(' → logprob: -1.9102548360824585
    3. 'result' → logprob: -10.66025447845459
    4. '()' → logprob: -13.28525447845459
    5. '(results' → logprob: -13.78525447845459
    6. '('' → logprob: -14.28525447845459
    7. '(Result' → logprob: -14.28525447845459
    8. ' (' → logprob: -14.41025447845459
    9. '((' → logprob: -14.91025447845459
    10. '(res' → logprob: -15.16025447845459

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.000000953674316
    3. '))' → logprob: -16.750001907348633
    4. ')
' → logprob: -17.125001907348633
    5. ')`' → logprob: -17.625001907348633
    6. '),' → logprob: -19.625001907348633
    7. ')#' → logprob: -19.875001907348633
    8. '}' → logprob: -20.000001907348633
    9. ')}' → logprob: -20.375001907348633
    10. ').' → logprob: -20.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 28
Tokens correctement prédits (top 10): 53
Précision stricte (1ère position): 41.79%
Précision adaptée (1ère position): 41.79%
Précision (top 10): 79.10%
================================================================================
