================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import islice, tee, starmap, count
N, K = map(int, input().split())
X = list(map(int, input().split()))
pairs = zip(islice(X, 0, N-K+1), islice(X, K-1, N))
delta = list(starmap(lambda a, b: (b - a) + min(abs(a), abs(b)), pairs))
print(reduce(lambda x, y: x*(x<y) + y*(y<=x), delta, float('inf')))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036121875047683716
    2. '(lambda' → logprob: -3.4111218452453613
    3. '.' → logprob: -6.786121845245361
    4. ' (' → logprob: -7.786121845245361
    5. ',' → logprob: -8.03612232208252
    6. 'lambda' → logprob: -9.03612232208252
    7. '```' → logprob: -9.28612232208252
    8. 'a' → logprob: -9.53612232208252
    9. ''' → logprob: -10.03612232208252
    10. '\' → logprob: -10.16112232208252

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3902341425418854
    2. ' operator' → logprob: -2.0152342319488525
    3. ' itertools' → logprob: -2.3902342319488525
    4. ' collections' → logprob: -2.5152342319488525
    5. ' os' → logprob: -4.140233993530273
    6. 'operator' → logprob: -7.265233993530273
    7. 'math' → logprob: -8.015233993530273
    8. ' sys' → logprob: -8.890233993530273
    9. 'collections' → logprob: -9.015233993530273
    10. ' ' → logprob: -9.515233993530273

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6127365827560425
    2. 'import' → logprob: -0.8627365827560425
    3. '.' → logprob: -3.362736701965332
    4. '.import' → logprob: -6.737736701965332
    5. ' .' → logprob: -9.362736701965332
    6. '	import' → logprob: -9.737736701965332
    7. '.im' → logprob: -10.112736701965332
    8. '_import' → logprob: -10.487736701965332
    9. ' ' → logprob: -10.487736701965332
    10. '<|end|>' → logprob: -11.487736701965332

Token 8: ' is' (ID: 382)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.0864453315734863
    2. 'count' → logprob: -1.0864453315734863
    3. 'acc' → logprob: -2.3364453315734863
    4. 'cycle' → logprob: -2.7114453315734863
    5. ' group' → logprob: -2.8364453315734863
    6. 'chain' → logprob: -2.9614453315734863
    7. 'com' → logprob: -4.211445331573486
    8. ' cycle' → logprob: -4.836445331573486
    9. 'product' → logprob: -4.961445331573486
    10. ' chain' → logprob: -5.211445331573486

Token 9: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.00012630375567823648
    2. 'l' → logprob: -9.250125885009766
    3. 'lic' → logprob: -11.750125885009766
    4. 'land' → logprob: -11.750125885009766
    5. '```' → logprob: -12.375125885009766
    6. 'li' → logprob: -13.500125885009766
    7. 'lices' → logprob: -13.625125885009766
    8. 'liced' → logprob: -13.875125885009766
    9. '>' → logprob: -14.125125885009766
    10. '#' → logprob: -14.125125885009766

Token 10: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5335326790809631
    2. '\' → logprob: -1.7835326194763184
    3. '\n' → logprob: -2.0335326194763184
    4. '(
' → logprob: -2.6585326194763184
    5. 'def' → logprob: -4.033532619476318
    6. ',' → logprob: -4.158532619476318
    7. 'import' → logprob: -5.908532619476318
    8. '
' → logprob: -6.783532619476318
    9. '```' → logprob: -7.033532619476318
    10. ',
' → logprob: -7.158532619476318

Token 11: ' tee' (ID: 44157)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3228284418582916
    2. 'chain' → logprob: -2.072828531265259
    3. 'cycle' → logprob: -3.072828531265259
    4. 'group' → logprob: -3.572828531265259
    5. 'take' → logprob: -3.697828531265259
    6. 'tee' → logprob: -4.19782829284668
    7. 'acc' → logprob: -4.32282829284668
    8. 'filter' → logprob: -5.32282829284668
    9. 'zip' → logprob: -5.57282829284668
    10. ' count' → logprob: -5.57282829284668

Token 12: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2179291248321533
    2. '\' → logprob: -1.4679291248321533
    3. '\n' → logprob: -1.4679291248321533
    4. '(
' → logprob: -1.9679291248321533
    5. ',' → logprob: -3.0929291248321533
    6. 'def' → logprob: -3.4679291248321533
    7. '
' → logprob: -4.967928886413574
    8. '```' → logprob: -5.342928886413574
    9. ',
' → logprob: -5.592928886413574
    10. 'import' → logprob: -6.342928886413574

Token 13: ' st' (ID: 420)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.37240809202194214
    2. 'chain' → logprob: -2.747408151626587
    3. 'acc' → logprob: -2.872408151626587
    4. 'filter' → logprob: -3.122408151626587
    5. 'zip' → logprob: -3.372408151626587
    6. ' count' → logprob: -3.622408151626587
    7. 'cycle' → logprob: -3.747408151626587
    8. 'group' → logprob: -3.872408151626587
    9. ' chain' → logprob: -4.497407913208008
    10. ' group' → logprob: -5.247407913208008

Token 14: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.16069655120372772
    2. 'ar' → logprob: -1.9106965065002441
    3. 'art' → logprob: -9.410696983337402
    4. 'ep' → logprob: -9.660696983337402
    5. 'arp' → logprob: -9.660696983337402
    6. 'op' → logprob: -10.035696983337402
    7. 'arb' → logprob: -10.160696983337402
    8. 'arms' → logprob: -10.410696983337402
    9. 'r' → logprob: -11.160696983337402
    10. 'arl' → logprob: -11.535696983337402

Token 15: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.6240566083070007e-06
    2. 'apse' → logprob: -14.500001907348633
    3. ' ap' → logprob: -15.250001907348633
    4. 'ul' → logprob: -15.250001907348633
    5. '_ap' → logprob: -16.125001907348633
    6. '	ap' → logprob: -16.250001907348633
    7. 'ethod' → logprob: -16.625001907348633
    8. 'a' → logprob: -16.750001907348633
    9. '```' → logprob: -16.750001907348633
    10. 'up' → logprob: -17.125001907348633

Token 16: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2195290327072144
    2. '\' → logprob: -1.3445290327072144
    3. ',' → logprob: -1.5945290327072144
    4. '(' → logprob: -2.469529151916504
    5. 'def' → logprob: -2.594529151916504
    6. '(
' → logprob: -2.969529151916504
    7. '```' → logprob: -4.594529151916504
    8. ',
' → logprob: -4.844529151916504
    9. '
' → logprob: -5.594529151916504
    10. 'import' → logprob: -6.719529151916504

Token 17: ' count' (ID: 3605)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.39156702160835266
    2. 'product' → logprob: -2.5165669918060303
    3. 'chain' → logprob: -3.0165669918060303
    4. 'zip' → logprob: -3.0165669918060303
    5. 'filter' → logprob: -3.1415669918060303
    6. 'cycle' → logprob: -3.1415669918060303
    7. 'group' → logprob: -4.266567230224609
    8. 'count' → logprob: -4.391567230224609
    9. 'compress' → logprob: -4.891567230224609
    10. 'com' → logprob: -5.141567230224609

Token 18: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2613174021244049
    2. 'def' → logprob: -2.261317491531372
    3. '\n' → logprob: -3.386317491531372
    4. ',
' → logprob: -3.761317491531372
    5. '
' → logprob: -4.136317253112793
    6. '(' → logprob: -4.136317253112793
    7. '<|end|>' → logprob: -4.511317253112793
    8. '\' → logprob: -5.011317253112793
    9. '(
' → logprob: -5.261317253112793
    10. '```' → logprob: -5.636317253112793

Token 19: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37479856610298157
    2. '

' → logprob: -1.8747985363006592
    3. ',' → logprob: -2.749798536300659
    4. '
' → logprob: -3.124798536300659
    5. ',

' → logprob: -3.874798536300659
    6. ',
' → logprob: -4.374798774719238
    7. '```' → logprob: -5.374798774719238
    8. 'import' → logprob: -5.624798774719238
    9. '\n' → logprob: -6.124798774719238
    10. '\' → logprob: -6.249798774719238

Token 20: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3231065273284912
    2. '_' → logprob: -1.6981065273284912
    3. ' =' → logprob: -3.073106527328491
    4. ',' → logprob: -3.948106527328491
    5. 'E' → logprob: -5.32310676574707
    6. '(' → logprob: -5.44810676574707
    7. 'o' → logprob: -5.94810676574707
    8. '.' → logprob: -6.07310676574707
    9. 'O' → logprob: -6.19810676574707
    10. ':' → logprob: -6.32310676574707

Token 21: ' K' (ID: 658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7774280309677124
    2. ' K' → logprob: -1.1524280309677124
    3. ' M' → logprob: -2.652428150177002
    4. 'K' → logprob: -3.027428150177002
    5. ' =' → logprob: -3.277428150177002
    6. '=' → logprob: -3.652428150177002
    7. 'M' → logprob: -4.277428150177002
    8. '  ' → logprob: -5.527428150177002
    9. ' n' → logprob: -5.652428150177002
    10. 'n' → logprob: -6.152428150177002

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029858669266104698
    2. '=' → logprob: -3.5298585891723633
    3. ',' → logprob: -9.279858589172363
    4. ' ' → logprob: -12.029858589172363
    5. ')' → logprob: -12.779858589172363
    6. ' =
' → logprob: -12.904858589172363
    7. '<|end|>' → logprob: -13.279858589172363
    8. ' ,' → logprob: -14.654858589172363
    9. '  ' → logprob: -15.029858589172363
    10. '=

' → logprob: -15.529858589172363

Token 23: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14344023168087006
    2. '10' → logprob: -2.2684402465820312
    3. '100' → logprob: -4.768440246582031
    4. ' map' → logprob: -4.893440246582031
    5. '5' → logprob: -5.768440246582031
    6. '0' → logprob: -5.893440246582031
    7. 'map' → logprob: -5.893440246582031
    8. '20' → logprob: -6.518440246582031
    9. ' int' → logprob: -6.643440246582031
    10. 'int' → logprob: -6.893440246582031

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05827612429857254
    2. '(' → logprob: -2.9332761764526367
    3. '(str' → logprob: -6.058276176452637
    4. '(lambda' → logprob: -7.433276176452637
    5. '(input' → logprob: -8.433276176452637
    6. 'int' → logprob: -8.558276176452637
    7. '(eval' → logprob: -11.558276176452637
    8. '<int' → logprob: -12.058276176452637
    9. '(list' → logprob: -12.058276176452637
    10. '[int' → logprob: -12.308276176452637

Token 25: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.016171496361494064
    2. 'input' → logprob: -4.891171455383301
    3. '(' → logprob: -5.141171455383301
    4. ',input' → logprob: -6.641171455383301
    5. ')' → logprob: -7.016171455383301
    6. ' input' → logprob: -8.7661714553833
    7. '=input' → logprob: -9.0161714553833
    8. ',' → logprob: -9.6411714553833
    9. '(int' → logprob: -9.7661714553833
    10. '```' → logprob: -11.2661714553833

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02978786639869213
    2. ' input' → logprob: -3.52978777885437
    3. ')' → logprob: -10.65478801727295
    4. '(input' → logprob: -11.40478801727295
    5. '=input' → logprob: -14.27978801727295
    6. ',input' → logprob: -14.65478801727295
    7. '	input' → logprob: -14.90478801727295
    8. ' ' → logprob: -15.15478801727295
    9. 'open' → logprob: -15.52978801727295
    10. '<input' → logprob: -15.65478801727295

Token 27: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43731099367141724
    2. '().' → logprob: -1.5623109340667725
    3. '())' → logprob: -2.0623109340667725
    4. '());' → logprob: -4.937311172485352
    5. '('' → logprob: -6.187311172485352
    6. '(' → logprob: -6.562311172485352
    7. '()))' → logprob: -6.937311172485352
    8. '(),' → logprob: -6.937311172485352
    9. ')' → logprob: -7.187311172485352
    10. '(()' → logprob: -7.437311172485352

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001178439473733306
    2. 'strip' → logprob: -6.75117826461792
    3. 'rstrip' → logprob: -12.376178741455078
    4. ' split' → logprob: -13.376178741455078
    5. 'read' → logprob: -13.751178741455078
    6. ')' → logprob: -14.001178741455078
    7. '(split' → logprob: -15.126178741455078
    8. 'spl' → logprob: -16.501178741455078
    9. ' ' → logprob: -17.251178741455078
    10. '```' → logprob: -17.376178741455078

Token 29: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21167220175266266
    2. '))' → logprob: -1.7116721868515015
    3. '())' → logprob: -4.711672306060791
    4. '()))' → logprob: -7.461672306060791
    5. '()' → logprob: -7.586672306060791
    6. '),' → logprob: -9.461671829223633
    7. '(' → logprob: -10.461671829223633
    8. ')))' → logprob: -11.961671829223633
    9. ''))' → logprob: -13.086671829223633
    10. ')`' → logprob: -13.336671829223633

Token 30: 'X' (ID: 55)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18553853034973145
    2. 'def' → logprob: -1.9355385303497314
    3. '
' → logprob: -4.310538291931152
    4. 'result' → logprob: -6.185538291931152
    5. 'data' → logprob: -6.310538291931152
    6. '```' → logprob: -6.560538291931152
    7. ')' → logprob: -6.935538291931152
    8. '

' → logprob: -7.560538291931152
    9. 'for' → logprob: -7.560538291931152
    10. 'a' → logprob: -7.560538291931152

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13203133642673492
    2. 's' → logprob: -2.6320314407348633
    3. '=' → logprob: -3.8820314407348633
    4. ',' → logprob: -3.8820314407348633
    5. '_' → logprob: -5.382031440734863
    6. '.' → logprob: -5.882031440734863
    7. '[' → logprob: -6.632031440734863
    8. ' ' → logprob: -8.257031440734863
    9. '```' → logprob: -8.257031440734863
    10. '[:]' → logprob: -8.257031440734863

Token 32: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.126389741897583
    2. 'list' → logprob: -2.376389741897583
    3. ' [' → logprob: -4.126389503479004
    4. ' map' → logprob: -5.376389503479004
    5. ' []' → logprob: -5.876389503479004
    6. 'map' → logprob: -7.501389503479004
    7. '[' → logprob: -7.751389503479004
    8. ' sorted' → logprob: -8.501389503479004
    9. '[]' → logprob: -8.626389503479004
    10. ' input' → logprob: -8.751389503479004

Token 33: '(map' (ID: 16946)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.6660188436508179
    2. '(' → logprob: -0.7910188436508179
    3. '(input' → logprob: -4.041018962860107
    4. '(range' → logprob: -5.041018962860107
    5. '(map' → logprob: -5.291018962860107
    6. '(int' → logprob: -6.041018962860107
    7. '(iter' → logprob: -7.916018962860107
    8. '()' → logprob: -8.91601848602295
    9. '(chain' → logprob: -9.16601848602295
    10. '(filter' → logprob: -9.66601848602295

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06208096072077751
    2. '(' → logprob: -2.8120808601379395
    3. '(lambda' → logprob: -10.437081336975098
    4. '[int' → logprob: -10.687081336975098
    5. '<int' → logprob: -11.187081336975098
    6. 'int' → logprob: -11.687081336975098
    7. '(
' → logprob: -11.812081336975098
    8. '(input' → logprob: -11.812081336975098
    9. '<|end|>' → logprob: -12.062081336975098
    10. ')' → logprob: -12.312081336975098

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7097553014755249
    2. ',input' → logprob: -0.7097553014755249
    3. '(input' → logprob: -4.2097554206848145
    4. '(' → logprob: -6.5847554206848145
    5. '(),' → logprob: -9.209754943847656
    6. 'input' → logprob: -9.334754943847656
    7. ',int' → logprob: -10.834754943847656
    8. ')' → logprob: -11.584754943847656
    9. ' ,' → logprob: -11.959754943847656
    10. ',(' → logprob: -13.334754943847656

Token 36: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.42881864309310913
    2. ' input' → logprob: -1.053818702697754
    3. '(input' → logprob: -9.928818702697754
    4. ',input' → logprob: -11.053818702697754
    5. ' ' → logprob: -11.178818702697754
    6. ')' → logprob: -11.553818702697754
    7. 'lambda' → logprob: -11.928818702697754
    8. '	input' → logprob: -12.428818702697754
    9. '=input' → logprob: -12.803818702697754
    10. '))' → logprob: -13.053818702697754

Token 37: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.228561349213123e-05
    2. '()' → logprob: -11.000052452087402
    3. '(.' → logprob: -11.500052452087402
    4. '(' → logprob: -12.000052452087402
    5. '()))' → logprob: -12.250052452087402
    6. '(),' → logprob: -12.500052452087402
    7. '())' → logprob: -12.750052452087402
    8. '.' → logprob: -13.500052452087402
    9. ' ().' → logprob: -13.750052452087402
    10. ',' → logprob: -14.000052452087402

Token 38: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8193366486229934e-05
    2. 'strip' → logprob: -11.000018119812012
    3. '(split' → logprob: -14.250018119812012
    4. 'rstrip' → logprob: -14.750018119812012
    5. 'read' → logprob: -15.250018119812012
    6. ' split' → logprob: -16.000019073486328
    7. 'spl' → logprob: -17.625019073486328
    8. ')' → logprob: -18.250019073486328
    9. 'str' → logprob: -19.000019073486328
    10. '.split' → logprob: -19.125019073486328

Token 39: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1219979003071785
    2. ')' → logprob: -2.371997833251953
    3. '()))' → logprob: -4.371997833251953
    4. '(' → logprob: -4.871997833251953
    5. '())' → logprob: -7.746997833251953
    6. '),' → logprob: -7.996997833251953
    7. ')))' → logprob: -8.246997833251953
    8. '()' → logprob: -9.496997833251953
    9. ''))' → logprob: -9.621997833251953
    10. '(','' → logprob: -11.246997833251953

Token 40: 'pairs' (ID: 175838)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40825575590133667
    2. 'd' → logprob: -2.5332558155059814
    3. 'def' → logprob: -2.9082558155059814
    4. '\' → logprob: -3.4082558155059814
    5. '(' → logprob: -3.5332558155059814
    6. ',' → logprob: -3.7832558155059814
    7. '#' → logprob: -4.033255577087402
    8. '' → logprob: -4.033255577087402
    9. ',
' → logprob: -4.658255577087402
    10. '=' → logprob: -4.658255577087402

Token 41: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003544118662830442
    2. ' =' → logprob: -9.000354766845703
    3. '=' → logprob: -9.125354766845703
    4. '(
' → logprob: -10.375354766845703
    5. '((' → logprob: -10.500354766845703
    6. '_' → logprob: -11.250354766845703
    7. 's' → logprob: -11.750354766845703
    8. '_pairs' → logprob: -12.125354766845703
    9. '(_)' → logprob: -12.625354766845703
    10. '(`' → logprob: -13.000354766845703

Token 42: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.9990085959434509
    2. ' zip' → logprob: -0.9990085959434509
    3. 'tee' → logprob: -2.1240086555480957
    4. '(zip' → logprob: -2.3740086555480957
    5. '(' → logprob: -3.9990086555480957
    6. ' tee' → logprob: -4.124008655548096
    7. '[(' → logprob: -5.499008655548096
    8. 'list' → logprob: -5.874008655548096
    9. 'st' → logprob: -6.499008655548096
    10. '[' → logprob: -6.749008655548096

Token 43: '(is' (ID: 16171)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10433729737997055
    2. '(X' → logprob: -2.479337215423584
    3. '(is' → logprob: -4.979337215423584
    4. '((' → logprob: -6.104337215423584
    5. '(count' → logprob: -6.229337215423584
    6. '(range' → logprob: -6.229337215423584
    7. '(s' → logprob: -8.604337692260742
    8. '(iter' → logprob: -8.604337692260742
    9. '(N' → logprob: -8.729337692260742
    10. '(K' → logprob: -9.104337692260742

Token 44: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -1.4736459888808895e-05
    2. 'slice' → logprob: -11.875014305114746
    3. 'lices' → logprob: -13.125014305114746
    4. '```' → logprob: -13.375014305114746
    5. 'ce' → logprob: -13.750014305114746
    6. '_slice' → logprob: -13.875014305114746
    7. 'lace' → logprob: -14.375014305114746
    8. 'liced' → logprob: -15.375014305114746
    9. 'licing' → logprob: -15.375014305114746
    10. 'l' → logprob: -15.875014305114746

Token 45: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.014962868764996529
    2. '(' → logprob: -4.389962673187256
    3. '(N' → logprob: -6.639962673187256
    4. '(count' → logprob: -7.264962673187256
    5. '(K' → logprob: -8.514963150024414
    6. ')(' → logprob: -9.514963150024414
    7. ')' → logprob: -10.139963150024414
    8. '(P' → logprob: -10.889963150024414
    9. '(
' → logprob: -10.889963150024414
    10. '(I' → logprob: -11.139963150024414

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1766035407781601
    2. '(' → logprob: -1.9266035556793213
    3. ' ,' → logprob: -4.301603317260742
    4. '(N' → logprob: -7.301603317260742
    5. '(),' → logprob: -7.551603317260742
    6. ',(' → logprob: -7.926603317260742
    7. ' (' → logprob: -8.551603317260742
    8. ' ' → logprob: -9.051603317260742
    9. '(n' → logprob: -9.051603317260742
    10. '(len' → logprob: -9.176603317260742

Token 47: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2766033113002777
    2. '0' → logprob: -2.7766032218933105
    3. ' K' → logprob: -2.7766032218933105
    4. ' ' → logprob: -2.9016032218933105
    5. 'K' → logprob: -3.0266032218933105
    6. '(' → logprob: -5.0266032218933105
    7. ')' → logprob: -6.6516032218933105
    8. 'N' → logprob: -6.6516032218933105
    9. '(K' → logprob: -7.0266032218933105
    10. '2' → logprob: -7.1516032218933105

Token 48: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5753272771835327
    2. 'K' → logprob: -1.0753272771835327
    3. '0' → logprob: -2.9503273963928223
    4. 'N' → logprob: -3.3253273963928223
    5. ' K' → logprob: -5.825327396392822
    6. ' ' → logprob: -6.450327396392822
    7. '-' → logprob: -6.950327396392822
    8. '(' → logprob: -7.575327396392822
    9. ')' → logprob: -8.075326919555664
    10. ' N' → logprob: -8.200326919555664

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002479886752553284
    2. ',None' → logprob: -9.375247955322266
    3. ',N' → logprob: -9.500247955322266
    4. ',len' → logprob: -9.750247955322266
    5. ' ,' → logprob: -11.500247955322266
    6. 'None' → logprob: -12.125247955322266
    7. ',K' → logprob: -12.250247955322266
    8. ',
' → logprob: -12.625247955322266
    9. ',n' → logprob: -13.000247955322266
    10. ',

' → logprob: -13.375247955322266

Token 50: ' N' (ID: 478)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2714604437351227
    2. 'K' → logprob: -2.52146053314209
    3. 'None' → logprob: -2.77146053314209
    4. 'N' → logprob: -2.89646053314209
    5. ' -' → logprob: -4.27146053314209
    6. ' ' → logprob: -4.39646053314209
    7. '-K' → logprob: -5.14646053314209
    8. ' K' → logprob: -6.52146053314209
    9. 'len' → logprob: -6.77146053314209
    10. ' None' → logprob: -6.89646053314209

Token 51: '-K' (ID: 12249)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00135499844327569
    2. ' ,' → logprob: -8.126355171203613
    3. '),' → logprob: -8.126355171203613
    4. '+' → logprob: -8.376355171203613
    5. '-' → logprob: -9.126355171203613
    6. ' ' → logprob: -9.126355171203613
    7. '1' → logprob: -9.376355171203613
    8. '2' → logprob: -9.751355171203613
    9. '```' → logprob: -9.876355171203613
    10. ',
' → logprob: -10.376355171203613

Token 52: '+' (ID: 10)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4809490442276001
    2. ',' → logprob: -0.9809490442276001
    3. ')' → logprob: -5.7309489250183105
    4. ' ),' → logprob: -6.6059489250183105
    5. ',),' → logprob: -6.9809489250183105
    6. '),
' → logprob: -8.355949401855469
    7. '```' → logprob: -8.355949401855469
    8. ' ,' → logprob: -8.480949401855469
    9. '+' → logprob: -8.605949401855469
    10. ',K' → logprob: -9.105949401855469

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022022522171027958
    2. ' ' → logprob: -8.50022029876709
    3. ')' → logprob: -11.50022029876709
    4. '0' → logprob: -12.62522029876709
    5. '```' → logprob: -13.87522029876709
    6. '   ' → logprob: -14.81272029876709
    7. '``' → logprob: -15.25022029876709
    8. '  ' → logprob: -15.43772029876709
    9. '))' → logprob: -15.50022029876709
    10. 'None' → logprob: -15.62522029876709

Token 54: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013883279170840979
    2. '),' → logprob: -7.1263885498046875
    3. ')' → logprob: -8.126388549804688
    4. ',),' → logprob: -8.876388549804688
    5. ',)' → logprob: -9.251388549804688
    6. ' ,' → logprob: -11.126388549804688
    7. '```' → logprob: -11.376388549804688
    8. ' ' → logprob: -12.126388549804688
    9. ',

' → logprob: -12.501388549804688
    10. ',
' → logprob: -12.876388549804688

Token 55: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3487831950187683
    2. 'is' → logprob: -1.223783254623413
    3. '    ' → logprob: -8.473783493041992
    4. ' ' → logprob: -9.848783493041992
    5. '   ' → logprob: -10.223783493041992
    6. '  ' → logprob: -10.973783493041992
    7. '        ' → logprob: -12.098783493041992
    8. 'X' → logprob: -12.598783493041992
    9. '	is' → logprob: -13.161283493041992
    10. '     ' → logprob: -13.348783493041992

Token 56: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.00012856863031629473
    2. 'slice' → logprob: -9.625128746032715
    3. 'ce' → logprob: -10.125128746032715
    4. 'ice' → logprob: -11.125128746032715
    5. 'lices' → logprob: -12.750128746032715
    6. 'le' → logprob: -13.625128746032715
    7. 'lace' → logprob: -13.750128746032715
    8. '_slice' → logprob: -14.750128746032715
    9. 's' → logprob: -15.500128746032715
    10. 'l' → logprob: -15.750128746032715

Token 57: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.009868710301816463
    2. '(' → logprob: -4.634868621826172
    3. 'X' → logprob: -9.509868621826172
    4. ')' → logprob: -10.634868621826172
    5. '(
' → logprob: -12.509868621826172
    6. ' X' → logprob: -12.884868621826172
    7. '(x' → logprob: -13.384868621826172
    8. '(K' → logprob: -14.009868621826172
    9. 's' → logprob: -14.259868621826172
    10. ')(' → logprob: -14.509868621826172

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010694174095988274
    2. ',K' → logprob: -4.8856940269470215
    3. ' ,' → logprob: -6.0106940269470215
    4. 'K' → logprob: -7.6356940269470215
    5. ' K' → logprob: -9.88569450378418
    6. '	' → logprob: -11.01069450378418
    7. '	K' → logprob: -11.01069450378418
    8. ',k' → logprob: -11.51069450378418
    9. ' ' → logprob: -11.51069450378418
    10. '```' → logprob: -12.13569450378418

Token 59: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.2821863293647766
    2. ' K' → logprob: -1.4071862697601318
    3. 'k' → logprob: -7.907186508178711
    4. ' ' → logprob: -8.157186508178711
    5. 'N' → logprob: -9.282186508178711
    6. '	K' → logprob: -9.782186508178711
    7. ' k' → logprob: -10.032186508178711
    8. ' N' → logprob: -10.344686508178711
    9. '   ' → logprob: -10.469686508178711
    10. ',' → logprob: -10.719686508178711

Token 60: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0077291810885071754
    2. ',None' → logprob: -5.5077290534973145
    3. ' ,' → logprob: -6.3827290534973145
    4. 'None' → logprob: -6.8827290534973145
    5. ',N' → logprob: -7.5077290534973145
    6. '```' → logprob: -9.257729530334473
    7. ' ' → logprob: -9.632729530334473
    8. ')' → logprob: -9.632729530334473
    9. ' None' → logprob: -10.382729530334473
    10. ',,' → logprob: -10.757729530334473

Token 61: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03922535106539726
    2. '1' → logprob: -4.0392255783081055
    3. 'None' → logprob: -4.5392255783081055
    4. '0' → logprob: -5.2892255783081055
    5. ' ' → logprob: -6.4142255783081055
    6. ',' → logprob: -6.5392255783081055
    7. ' N' → logprob: -7.2892255783081055
    8. ' None' → logprob: -8.164225578308105
    9. ',N' → logprob: -8.289225578308105
    10. ')' → logprob: -8.789225578308105

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.058703940361738205
    2. ' ,' → logprob: -3.683703899383545
    3. ',None' → logprob: -3.808703899383545
    4. 'None' → logprob: -5.058703899383545
    5. ',N' → logprob: -6.308703899383545
    6. ' None' → logprob: -6.808703899383545
    7. '+' → logprob: -8.433704376220703
    8. ',,' → logprob: -10.558704376220703
    9. '```' → logprob: -10.558704376220703
    10. 'N' → logprob: -10.683704376220703

Token 63: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03457982838153839
    2. ' N' → logprob: -3.6595797538757324
    3. 'None' → logprob: -4.909579753875732
    4. ' None' → logprob: -7.534579753875732
    5. ')' → logprob: -8.65958023071289
    6. ' ' → logprob: -9.78458023071289
    7. '   ' → logprob: -10.15958023071289
    8. '	N' → logprob: -10.65958023071289
    9. '  ' → logprob: -11.15958023071289
    10. '))' → logprob: -11.78458023071289

Token 64: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01385858841240406
    2. '+' → logprob: -5.013858795166016
    3. ' ))' → logprob: -5.763858795166016
    4. ')' → logprob: -6.013858795166016
    5. ')))' → logprob: -7.888858795166016
    6. ',' → logprob: -8.013858795166016
    7. '-' → logprob: -8.138858795166016
    8. '),' → logprob: -8.763858795166016
    9. ',None' → logprob: -9.388858795166016
    10. ' ' → logprob: -9.513858795166016

Token 65: 'delta' (ID: 42200)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7463163733482361
    2. ',' → logprob: -0.8713163733482361
    3. ',K' → logprob: -2.871316432952881
    4. '+' → logprob: -3.621316432952881
    5. ',)' → logprob: -4.746316432952881
    6. 'K' → logprob: -5.871316432952881
    7. '(' → logprob: -6.246316432952881
    8. '+)' → logprob: -6.371316432952881
    9. '(K' → logprob: -6.496316432952881
    10. '))' → logprob: -6.621316432952881

Token 66: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.032892171293497086
    2. '=' → logprob: -3.9078922271728516
    3. ' =' → logprob: -4.407892227172852
    4. '_' → logprob: -10.032892227172852
    5. ' ' → logprob: -10.907892227172852
    6. ',' → logprob: -11.782892227172852
    7. ')' → logprob: -11.907892227172852
    8. '_s' → logprob: -12.532892227172852
    9. '(' → logprob: -13.532892227172852
    10. '(s' → logprob: -13.782892227172852

Token 67: ' list' (ID: 1562)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.5969105958938599
    2. '(lambda' → logprob: -2.0969104766845703
    3. 'lambda' → logprob: -2.2219104766845703
    4. 'map' → logprob: -2.3469104766845703
    5. ' st' → logprob: -3.2219104766845703
    6. ' lambda' → logprob: -3.7219104766845703
    7. '(st' → logprob: -3.7219104766845703
    8. ' map' → logprob: -4.59691047668457
    9. ' (' → logprob: -5.59691047668457
    10. 'abs' → logprob: -5.72191047668457

Token 68: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.005885064136236906
    2. '(map' → logprob: -5.755885124206543
    3. '(' → logprob: -6.505885124206543
    4. '(zip' → logprob: -6.880885124206543
    5. '(p' → logprob: -9.505885124206543
    6. ')' → logprob: -10.630885124206543
    7. '(t' → logprob: -11.505885124206543
    8. '()' → logprob: -11.505885124206543
    9. '(
' → logprob: -11.880885124206543
    10. '(pair' → logprob: -12.130885124206543

Token 69: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.00219273311085999
    2. 'arp' → logprob: -6.627192497253418
    3. 'map' → logprob: -7.627192497253418
    4. 'ar' → logprob: -8.127192497253418
    5. 'art' → logprob: -11.127192497253418
    6. 'r' → logprob: -11.377192497253418
    7. 'amp' → logprob: -11.877192497253418
    8. 'a' → logprob: -12.127192497253418
    9. 'armor' → logprob: -12.627192497253418
    10. 'armac' → logprob: -12.752192497253418

Token 70: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -6.027225754223764e-05
    2. 'map' → logprob: -9.750060081481934
    3. 'p' → logprob: -14.250060081481934
    4. '```' → logprob: -15.000060081481934
    5. 'apply' → logprob: -15.250060081481934
    6. 'app' → logprob: -15.500060081481934
    7. '   ' → logprob: -15.750060081481934
    8. 'a' → logprob: -16.00006103515625
    9. ' ' → logprob: -17.50006103515625
    10. 'e' → logprob: -17.50006103515625

Token 71: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.04088190197944641
    2. '(' → logprob: -3.290881872177124
    3. '(abs' → logprob: -6.415882110595703
    4. '(operator' → logprob: -7.915882110595703
    5. '(-' → logprob: -8.790882110595703
    6. ')' → logprob: -8.790882110595703
    7. '(
' → logprob: -8.915882110595703
    8. '<|end|>' → logprob: -8.915882110595703
    9. ' lambda' → logprob: -9.415882110595703
    10. 'lambda' → logprob: -9.540882110595703

Token 72: ' a' (ID: 261)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.8178578615188599
    2. ' a' → logprob: -1.3178578615188599
    3. ' lambda' → logprob: -1.5678578615188599
    4. ' x' → logprob: -3.5678577423095703
    5. 'b' → logprob: -3.6928577423095703
    6. 'a' → logprob: -4.44285774230957
    7. ' y' → logprob: -4.44285774230957
    8. 'lambda' → logprob: -5.94285774230957
    9. 'y' → logprob: -6.94285774230957
    10. 'x' → logprob: -7.19285774230957

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010056261904537678
    2. ',b' → logprob: -4.635056495666504
    3. ' ,' → logprob: -9.260056495666504
    4. ',
' → logprob: -10.385056495666504
    5. ',d' → logprob: -10.385056495666504
    6. ',a' → logprob: -10.510056495666504
    7. 'b' → logprob: -10.760056495666504
    8. ',x' → logprob: -11.135056495666504
    9. ',n' → logprob: -11.510056495666504
    10. ',y' → logprob: -11.635056495666504

Token 74: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2014276683330536
    2. ' b' → logprob: -1.701427698135376
    3. ' ' → logprob: -11.951427459716797
    4. 'a' → logprob: -12.951427459716797
    5. ',b' → logprob: -13.326427459716797
    6. ',' → logprob: -14.076427459716797
    7. '	b' → logprob: -14.201427459716797
    8. '<|end|>' → logprob: -14.701427459716797
    9. ' a' → logprob: -14.826427459716797
    10. 's' → logprob: -15.701427459716797

Token 75: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050901006907224655
    2. ',' → logprob: -3.050900936126709
    3. ' :' → logprob: -6.675900936126709
    4. ',:' → logprob: -7.925900936126709
    5. ',b' → logprob: -8.300901412963867
    6. ',a' → logprob: -9.050901412963867
    7. ':,' → logprob: -9.050901412963867
    8. 'a' → logprob: -10.050901412963867
    9. ' ,' → logprob: -10.675901412963867
    10. ',:,' → logprob: -10.800901412963867

Token 76: ' (' (ID: 350)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3736216127872467
    2. 'b' → logprob: -1.6236215829849243
    3. ' abs' → logprob: -2.373621702194214
    4. 'abs' → logprob: -4.123621463775635
    5. ' a' → logprob: -5.998621463775635
    6. 'a' → logprob: -6.748621463775635
    7. ' ' → logprob: -7.623621463775635
    8. ' (' → logprob: -8.123621940612793
    9. ' max' → logprob: -8.498621940612793
    10. '(abs' → logprob: -9.123621940612793

Token 77: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4497073292732239
    2. ' b' → logprob: -1.074707269668579
    3. ' abs' → logprob: -4.449707508087158
    4. 'abs' → logprob: -5.324707508087158
    5. 'a' → logprob: -6.074707508087158
    6. ' a' → logprob: -6.824707508087158
    7. ' ' → logprob: -8.19970703125
    8. ')b' → logprob: -8.32470703125
    9. '    ' → logprob: -9.82470703125
    10. ' (' → logprob: -10.07470703125

Token 78: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6341434717178345
    2. ' -' → logprob: -0.7591434717178345
    3. '-a' → logprob: -6.759143352508545
    4. ' ' → logprob: -8.134143829345703
    5. ')' → logprob: -10.509143829345703
    6. 'a' → logprob: -11.134143829345703
    7. '[' → logprob: -11.259143829345703
    8. ' )' → logprob: -11.509143829345703
    9. ' a' → logprob: -12.134143829345703
    10. '+' → logprob: -12.509143829345703

Token 79: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10024020820856094
    2. ' a' → logprob: -2.3502402305603027
    3. ' ' → logprob: -11.225239753723145
    4. '1' → logprob: -11.350239753723145
    5. '	a' → logprob: -12.100239753723145
    6. '    ' → logprob: -15.100239753723145
    7. '  ' → logprob: -15.100239753723145
    8. ')a' → logprob: -15.100239753723145
    9. '<|end|>' → logprob: -15.225239753723145
    10. '>a' → logprob: -15.350239753723145

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5658621788024902
    2. ')**' → logprob: -1.6908621788024902
    3. '),' → logprob: -1.9408621788024902
    4. ',' → logprob: -2.4408621788024902
    5. '**' → logprob: -5.56586217880249
    6. '+' → logprob: -5.81586217880249
    7. ')+' → logprob: -6.19086217880249
    8. ' )' → logprob: -6.56586217880249
    9. ')*' → logprob: -6.81586217880249
    10. ' ,' → logprob: -6.81586217880249

Token 81: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008013521321117878
    2. ' ,' → logprob: -5.758013725280762
    3. ',p' → logprob: -6.258013725280762
    4. '+' → logprob: -7.758013725280762
    5. '**' → logprob: -7.883013725280762
    6. '),' → logprob: -8.383013725280762
    7. ')' → logprob: -8.633013725280762
    8. ' +' → logprob: -8.633013725280762
    9. ' pairs' → logprob: -8.633013725280762
    10. 'pairs' → logprob: -8.758013725280762

Token 82: ' min' (ID: 1349)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.393926739692688
    2. ' ' → logprob: -1.143926739692688
    3. ' (' → logprob: -5.768926620483398
    4. ' K' → logprob: -6.893926620483398
    5. ')' → logprob: -7.518926620483398
    6. '2' → logprob: -7.768926620483398
    7. '0' → logprob: -8.143926620483398
    8. ' -' → logprob: -8.393926620483398
    9. '(' → logprob: -8.643926620483398
    10. 'K' → logprob: -8.768926620483398

Token 83: '(abs' (ID: 71957)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6876948475837708
    2. '(abs' → logprob: -1.062694787979126
    3. '(a' → logprob: -2.437694787979126
    4. 'abs' → logprob: -3.562694787979126
    5. '(
' → logprob: -4.437695026397705
    6. ' (' → logprob: -5.187695026397705
    7. '((' → logprob: -5.687695026397705
    8. '(b' → logprob: -5.687695026397705
    9. '<|end|>' → logprob: -5.937695026397705
    10. ' abs' → logprob: -5.937695026397705

Token 84: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.31633055210113525
    2. '(b' → logprob: -1.5663305521011353
    3. '(' → logprob: -2.8163304328918457
    4. '(abs' → logprob: -7.316330432891846
    5. '((' → logprob: -7.941330432891846
    6. '(
' → logprob: -8.066330909729004
    7. '(s' → logprob: -8.441330909729004
    8. '(K' → logprob: -8.816330909729004
    9. 'a' → logprob: -8.941330909729004
    10. '(count' → logprob: -9.191330909729004

Token 85: '),' (ID: 936)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.41552358865737915
    2. ' -' → logprob: -1.4155235290527344
    3. '(' → logprob: -3.2905235290527344
    4. ',' → logprob: -3.7905235290527344
    5. '-b' → logprob: -4.540523529052734
    6. '-' → logprob: -5.290523529052734
    7. ',b' → logprob: -5.665523529052734
    8. ' b' → logprob: -6.040523529052734
    9. '(n' → logprob: -6.040523529052734
    10. ')' → logprob: -6.040523529052734

Token 86: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.03888118639588356
    2. ' abs' → logprob: -3.288881301879883
    3. 'b' → logprob: -7.163881301879883
    4. '(abs' → logprob: -10.913881301879883
    5. ' b' → logprob: -11.038881301879883
    6. ' ' → logprob: -11.663881301879883
    7. '2' → logprob: -12.038881301879883
    8. ')' → logprob: -12.663881301879883
    9. '<|end|>' → logprob: -13.038881301879883
    10. '7' → logprob: -13.413881301879883

Token 87: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.009269236586987972
    2. '(a' → logprob: -4.8842692375183105
    3. 'b' → logprob: -7.5092692375183105
    4. '(' → logprob: -7.6342692375183105
    5. ')' → logprob: -8.384268760681152
    6. 'a' → logprob: -8.884268760681152
    7. '(min' → logprob: -9.259268760681152
    8. ')b' → logprob: -10.509268760681152
    9. '((' → logprob: -10.634268760681152
    10. '(abs' → logprob: -10.634268760681152

Token 88: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.41028863191604614
    2. ')),' → logprob: -1.4102885723114014
    3. ')' → logprob: -2.5352885723114014
    4. '))' → logprob: -5.6602888107299805
    5. ')))' → logprob: -5.9102888107299805
    6. '))),' → logprob: -6.1602888107299805
    7. ' ),' → logprob: -6.5352888107299805
    8. ' ' → logprob: -6.6602888107299805
    9. ')
' → logprob: -7.0352888107299805
    10. ' )' → logprob: -8.91028881072998

Token 89: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.31353235244750977
    2. ' pairs' → logprob: -1.3135323524475098
    3. ')' → logprob: -9.188531875610352
    4. '_pairs' → logprob: -9.813531875610352
    5. 'Pairs' → logprob: -11.001031875610352
    6. ' ' → logprob: -11.063531875610352
    7. 'p' → logprob: -11.063531875610352
    8. '<|end|>' → logprob: -11.376031875610352
    9. ' zip' → logprob: -11.813531875610352
    10. 'pair' → logprob: -12.063531875610352

Token 90: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06999990344047546
    2. ')' → logprob: -2.694999933242798
    3. ')))' → logprob: -10.194999694824219
    4. '))
' → logprob: -10.944999694824219
    5. '),' → logprob: -12.819999694824219
    6. ')
' → logprob: -13.069999694824219
    7. ' ))' → logprob: -14.444999694824219
    8. '))

' → logprob: -14.819999694824219
    9. '));' → logprob: -15.694999694824219
    10. '0' → logprob: -15.694999694824219

Token 91: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3629898130893707
    2. '(' → logprob: -1.6129897832870483
    3. ')
' → logprob: -3.612989902496338
    4. '(
' → logprob: -3.862989902496338
    5. '[' → logprob: -4.487989902496338
    6. '\n' → logprob: -4.737989902496338
    7. '+' → logprob: -4.862989902496338
    8. '' → logprob: -5.612989902496338
    9. '+
' → logprob: -5.612989902496338
    10. '[
' → logprob: -5.737989902496338

Token 92: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8139086365699768
    2. '(sum' → logprob: -0.8139086365699768
    3. '(max' → logprob: -2.188908576965332
    4. '(delta' → logprob: -7.063908576965332
    5. '(min' → logprob: -7.313908576965332
    6. '(len' → logprob: -9.563908576965332
    7. '(
' → logprob: -10.063908576965332
    8. '("("' → logprob: -11.188908576965332
    9. '('' → logprob: -11.438908576965332
    10. '(f' → logprob: -11.813908576965332

Token 93: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.002938121324405074
    2. 'd' → logprob: -6.752938270568848
    3. 'duced' → logprob: -6.752938270568848
    4. 'du' → logprob: -8.502938270568848
    5. 'dux' → logprob: -8.627938270568848
    6. 'verse' → logprob: -9.127938270568848
    7. 'duc' → logprob: -9.752938270568848
    8. 'sum' → logprob: -10.377938270568848
    9. 'max' → logprob: -12.627938270568848
    10. 'duct' → logprob: -12.877938270568848

Token 94: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5641269683837891
    2. '(' → logprob: -1.314126968383789
    3. '(max' → logprob: -1.939126968383789
    4. '(sum' → logprob: -4.189126968383789
    5. ')' → logprob: -6.314126968383789
    6. '(len' → logprob: -7.689126968383789
    7. '(abs' → logprob: -7.814126968383789
    8. '(min' → logprob: -7.939126968383789
    9. '(operator' → logprob: -9.064126968383789
    10. '(
' → logprob: -9.689126968383789

Token 95: ' x' (ID: 1215)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.23666255176067352
    2. ' x' → logprob: -1.61166250705719
    3. 'a' → logprob: -5.1116623878479
    4. ' lambda' → logprob: -5.7366623878479
    5. 'x' → logprob: -6.8616623878479
    6. ' ' → logprob: -7.3616623878479
    7. ' acc' → logprob: -9.361662864685059
    8. 'lambda' → logprob: -9.986662864685059
    9. '	a' → logprob: -10.486662864685059
    10. ' u' → logprob: -11.111662864685059

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022147269919514656
    2. ' ,' → logprob: -6.1272149085998535
    3. ',x' → logprob: -11.377214431762695
    4. ' lambda' → logprob: -12.377214431762695
    5. 'lambda' → logprob: -12.627214431762695
    6. ',a' → logprob: -12.627214431762695
    7. ',int' → logprob: -13.252214431762695
    8. ',max' → logprob: -13.252214431762695
    9. '=lambda' → logprob: -14.252214431762695
    10. 'a' → logprob: -14.502214431762695

Token 97: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759661793708801
    2. ' y' → logprob: -0.8259661793708801
    3. ' ' → logprob: -11.950965881347656
    4. ' lambda' → logprob: -12.325965881347656
    5. 'lambda' → logprob: -12.700965881347656
    6. 'a' → logprob: -13.200965881347656
    7. 'acc' → logprob: -13.200965881347656
    8. 'x' → logprob: -13.325965881347656
    9. '	y' → logprob: -13.450965881347656
    10. 'z' → logprob: -13.825965881347656

Token 98: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.052867911756038666
    2. ':' → logprob: -3.052867889404297
    3. 'max' → logprob: -6.177867889404297
    4. ',max' → logprob: -7.177867889404297
    5. 'lambda' → logprob: -7.427867889404297
    6. ' :' → logprob: -8.552867889404297
    7. ',x' → logprob: -8.677867889404297
    8. ' ,' → logprob: -8.802867889404297
    9. ':max' → logprob: -9.177867889404297
    10. ' max' → logprob: -9.177867889404297

Token 99: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5189582109451294
    2. ' x' → logprob: -1.7689582109451294
    3. ' max' → logprob: -1.7689582109451294
    4. 'max' → logprob: -2.76895809173584
    5. ' min' → logprob: -8.01895809173584
    6. 'min' → logprob: -8.26895809173584
    7. '	x' → logprob: -8.89395809173584
    8. ' ' → logprob: -9.26895809173584
    9. '   ' → logprob: -9.51895809173584
    10. '	max' → logprob: -10.01895809173584

Token 100: '*(' (ID: 14793)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10186862200498581
    2. ' if' → logprob: -3.4768686294555664
    3. 'if' → logprob: -3.8518686294555664
    4. ' +' → logprob: -4.226868629455566
    5. 'max' → logprob: -4.351868629455566
    6. ',' → logprob: -4.601868629455566
    7. '+y' → logprob: -5.601868629455566
    8. ' max' → logprob: -6.101868629455566
    9. '+x' → logprob: -8.226868629455566
    10. '*' → logprob: -8.601868629455566

Token 101: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0035625346936285496
    2. '1' → logprob: -6.3785624504089355
    3. ' y' → logprob: -6.7535624504089355
    4. '-' → logprob: -8.253562927246094
    5. 'x' → logprob: -8.753562927246094
    6. 'max' → logprob: -8.878562927246094
    7. '(' → logprob: -10.628562927246094
    8. ' ' → logprob: -10.753562927246094
    9. '2' → logprob: -11.003562927246094
    10. '10' → logprob: -11.253562927246094

Token 102: '<' (ID: 27)
  Prédit: '+y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+y' → logprob: -0.5011462569236755
    2. '+' → logprob: -1.2511463165283203
    3. 'y' → logprob: -2.7511463165283203
    4. ' +' → logprob: -3.3761463165283203
    5. '*y' → logprob: -5.75114631652832
    6. '1' → logprob: -6.12614631652832
    7. '-y' → logprob: -6.37614631652832
    8. ' y' → logprob: -6.87614631652832
    9. '-' → logprob: -7.62614631652832
    10. ' if' → logprob: -8.50114631652832

Token 103: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0012140447506681085
    2. ' y' → logprob: -6.751214027404785
    3. '0' → logprob: -11.376214027404785
    4. 'x' → logprob: -11.501214027404785
    5. 'abs' → logprob: -12.376214027404785
    6. ' ' → logprob: -13.001214027404785
    7. '>' → logprob: -13.126214027404785
    8. '1' → logprob: -13.376214027404785
    9. '   ' → logprob: -14.251214027404785
    10. 'max' → logprob: -14.313714027404785

Token 104: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4188065528869629
    2. ',y' → logprob: -1.668806552886963
    3. ' y' → logprob: -2.543806552886963
    4. 'y' → logprob: -2.918806552886963
    5. ' ,' → logprob: -4.668806552886963
    6. '+y' → logprob: -5.293806552886963
    7. ' or' → logprob: -5.668806552886963
    8. ' if' → logprob: -7.793806552886963
    9. '),' → logprob: -7.918806552886963
    10. ' else' → logprob: -7.918806552886963

Token 105: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1358596831560135
    2. ',y' → logprob: -2.385859727859497
    3. ' ,' → logprob: -3.385859727859497
    4. ' y' → logprob: -7.635859489440918
    5. 'y' → logprob: -7.760859489440918
    6. '+y' → logprob: -8.760859489440918
    7. ' or' → logprob: -10.385859489440918
    8. '+' → logprob: -10.760859489440918
    9. ' +' → logprob: -11.635859489440918
    10. ' ' → logprob: -11.635859489440918

Token 106: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.012559917755424976
    2. ' y' → logprob: -4.38755989074707
    3. 'x' → logprob: -10.88755989074707
    4. '(y' → logprob: -11.13755989074707
    5. '1' → logprob: -12.51255989074707
    6. ' ' → logprob: -12.63755989074707
    7. '(' → logprob: -13.01255989074707
    8. '   ' → logprob: -13.38755989074707
    9. '	y' → logprob: -13.76255989074707
    10. '    ' → logprob: -13.88755989074707

Token 107: '*(' (ID: 14793)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01179667841643095
    2. ' ,' → logprob: -5.136796474456787
    3. ',y' → logprob: -5.761796474456787
    4. ')' → logprob: -6.136796474456787
    5. ' y' → logprob: -7.761796474456787
    6. '),' → logprob: -10.636796951293945
    7. 'y' → logprob: -10.761796951293945
    8. '*y' → logprob: -11.511796951293945
    9. '(y' → logprob: -11.761796951293945
    10. ' ' → logprob: -11.886796951293945

Token 108: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.990154047845863e-05
    2. ' x' → logprob: -10.000049591064453
    3. 'y' → logprob: -12.625049591064453
    4. '(x' → logprob: -14.875049591064453
    5. ' ' → logprob: -15.500049591064453
    6. '1' → logprob: -15.625049591064453
    7. '0' → logprob: -15.750049591064453
    8. '   ' → logprob: -16.625049591064453
    9. '	x' → logprob: -16.625049591064453
    10. ')x' → logprob: -16.750049591064453

Token 109: '<=' (ID: 16672)
  Prédit: '>x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>x' → logprob: -0.3947535753250122
    2. '>' → logprob: -1.1447535753250122
    3. '>=' → logprob: -5.269753456115723
    4. '<x' → logprob: -6.769753456115723
    5. '<=' → logprob: -7.269753456115723
    6. ' >' → logprob: -7.894753456115723
    7. '>)' → logprob: -8.394753456115723
    8. ' ' → logprob: -8.769753456115723
    9. ')' → logprob: -10.894753456115723
    10. '<' → logprob: -11.019753456115723

Token 110: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012356207298580557
    2. ' x' → logprob: -9.000123977661133
    3. ')x' → logprob: -16.875123977661133
    4. '0' → logprob: -17.250123977661133
    5. ' ' → logprob: -18.000123977661133
    6. '<|end|>' → logprob: -18.000123977661133
    7. ')' → logprob: -18.125123977661133
    8. '(x' → logprob: -18.625123977661133
    9. '{x' → logprob: -19.000123977661133
    10. '	x' → logprob: -19.250123977661133

Token 111: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7522119879722595
    2. '))' → logprob: -0.8772119879722595
    3. ')' → logprob: -2.2522120475769043
    4. '),' → logprob: -5.002212047576904
    5. ' ,' → logprob: -7.877212047576904
    6. ')))' → logprob: -8.627211570739746
    7. ' ))' → logprob: -9.877211570739746
    8. ' )' → logprob: -10.002211570739746
    9. ',x' → logprob: -11.252211570739746
    10. ')
' → logprob: -11.377211570739746

Token 112: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.523219645023346
    2. ' delta' → logprob: -0.898219645023346
    3. '(delta' → logprob: -9.77322006225586
    4. ' ' → logprob: -11.14822006225586
    5. ')' → logprob: -11.89822006225586
    6. '[' → logprob: -12.39822006225586
    7. '   ' → logprob: -12.64822006225586
    8. 'Delta' → logprob: -13.02322006225586
    9. '  ' → logprob: -13.58572006225586
    10. '_delta' → logprob: -13.89822006225586

Token 113: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47431042790412903
    2. '))' → logprob: -0.9743103981018066
    3. ')))' → logprob: -8.474310874938965
    4. ' )' → logprob: -12.224310874938965
    5. ')
' → logprob: -12.349310874938965
    6. '))
' → logprob: -12.724310874938965
    7. '[' → logprob: -12.849310874938965
    8. '-' → logprob: -12.974310874938965
    9. ' ))' → logprob: -13.224310874938965
    10. '])' → logprob: -13.849310874938965

Token 114: ' float' (ID: 4428)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8786891102790833
    2. '1' → logprob: -1.5036890506744385
    3. '0' → logprob: -2.0036890506744385
    4. 'float' → logprob: -2.0036890506744385
    5. ' ' → logprob: -3.3786890506744385
    6. ' float' → logprob: -3.6286890506744385
    7. ' -' → logprob: -4.378689289093018
    8. '-d' → logprob: -4.503689289093018
    9. 'delta' → logprob: -6.003689289093018
    10. '-f' → logprob: -7.128689289093018

Token 115: '('' (ID: 706)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.004026633687317371
    2. ''' → logprob: -6.254026412963867
    3. '('-' → logprob: -6.879026412963867
    4. '-inf' → logprob: -7.629026412963867
    5. '"-' → logprob: -7.754026412963867
    6. ''in' → logprob: -10.129026412963867
    7. '('' → logprob: -10.879026412963867
    8. '-' → logprob: -11.754026412963867
    9. '-in' → logprob: -11.754026412963867
    10. '"' → logprob: -12.004026412963867

Token 116: 'inf' (ID: 22226)
  Prédit: '-inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-inf' → logprob: -0.1444529891014099
    2. 'inf' → logprob: -2.0194530487060547
    3. '-in' → logprob: -7.644453048706055
    4. '-' → logprob: -7.769453048706055
    5. ''-' → logprob: -7.894453048706055
    6. ''in' → logprob: -8.269453048706055
    7. ''' → logprob: -9.644453048706055
    8. '-x' → logprob: -10.269453048706055
    9. '-i' → logprob: -10.644453048706055
    10. '-info' → logprob: -10.894453048706055

Token 117: '')))' (ID: 121361)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0032034965697675943
    2. ')' → logprob: -5.878203392028809
    3. ')))' → logprob: -7.878203392028809
    4. '))
' → logprob: -11.878203392028809
    5. '),' → logprob: -12.253203392028809
    6. ' ))' → logprob: -12.378203392028809
    7. '0' → logprob: -14.253203392028809
    8. '()))' → logprob: -14.503203392028809
    9. ''))' → logprob: -14.753203392028809
    10. ')
' → logprob: -15.128203392028809


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 115
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 87
Précision stricte (1ère position): 33.04%
Précision adaptée (1ère position): 33.04%
Précision (top 10): 75.65%
================================================================================
