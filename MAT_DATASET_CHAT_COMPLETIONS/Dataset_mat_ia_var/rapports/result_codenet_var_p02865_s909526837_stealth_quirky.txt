================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import builtins as __b;print(([lambda x: (x+1)//2-1][0])(__b.int(__b.input())))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' built' (ID: 8113)
  → Token d'amorce (pas de prédiction)

Token 2: 'ins' (ID: 1564)
  → Token d'amorce (pas de prédiction)

Token 3: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -6.408677290892228e-05
    2. '```' → logprob: -11.0000638961792
    3. 'import' → logprob: -11.3750638961792
    4. '.import' → logprob: -11.7500638961792
    5. ' .' → logprob: -12.1250638961792
    6. '.

' → logprob: -12.7500638961792
    7. '\' → logprob: -13.0000638961792
    8. '

' → logprob: -13.0000638961792
    9. '<|end|>' → logprob: -13.1250638961792
    10. '.
' → logprob: -13.2500638961792

Token 4: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.048640958964824677
    2. ' __' → logprob: -3.5486409664154053
    3. ' bi' → logprob: -4.673640727996826
    4. 'bi' → logprob: -5.673640727996826
    5. 'built' → logprob: -6.048640727996826
    6. ' built' → logprob: -6.548640727996826
    7. 'b' → logprob: -6.923640727996826
    8. ' b' → logprob: -8.298641204833984
    9. 'builtin' → logprob: -8.298641204833984
    10. ' ' → logprob: -8.673641204833984

Token 5: 'b' (ID: 65)
  Prédit: 'builtin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'builtin' → logprob: -0.5958002805709839
    2. 'built' → logprob: -0.8458002805709839
    3. 'import' → logprob: -4.095800399780273
    4. 'b' → logprob: -6.345800399780273
    5. 'future' → logprob: -8.220800399780273
    6. 'bi' → logprob: -8.345800399780273
    7. 'stdlib' → logprob: -8.720800399780273
    8. 'sys' → logprob: -8.970800399780273
    9. 'std' → logprob: -9.845800399780273
    10. 'br' → logprob: -9.970800399780273

Token 6: ';' (ID: 26)
  Prédit: 'uilt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uilt' → logprob: -0.6233731508255005
    2. 'uil' → logprob: -1.2483731508255005
    3. '_' → logprob: -1.9983731508255005
    4. 'u' → logprob: -3.623373031616211
    5. '__' → logprob: -4.498373031616211
    6. 'uiltin' → logprob: -6.873373031616211
    7. '.' → logprob: -7.248373031616211
    8. '._' → logprob: -7.998373031616211
    9. '.__' → logprob: -8.248373031616211
    10. '_u' → logprob: -8.623373031616211

Token 7: 'print' (ID: 1598)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04884692281484604
    2. '.__' → logprob: -3.423846960067749
    3. ';' → logprob: -4.79884672164917
    4. '__' → logprob: -5.54884672164917
    5. '\' → logprob: -7.42384672164917
    6. '_' → logprob: -7.54884672164917
    7. 'import' → logprob: -8.298847198486328
    8. '__.__' → logprob: -8.548847198486328
    9. '.;' → logprob: -8.673847198486328
    10. '._' → logprob: -8.798847198486328

Token 8: '(([' (ID: 114485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '("("' → logprob: -9.625107765197754
    3. ' (' → logprob: -11.250107765197754
    4. '('' → logprob: -11.625107765197754
    5. '(

' → logprob: -12.500107765197754
    6. '(
' → logprob: -12.625107765197754
    7. '((' → logprob: -13.000107765197754
    8. '("""' → logprob: -13.125107765197754
    9. '(.' → logprob: -13.375107765197754
    10. '(`' → logprob: -13.875107765197754

Token 9: 'lambda' (ID: 35280)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7317582368850708
    2. '1' → logprob: -0.8567582368850708
    3. ''' → logprob: -3.8567581176757812
    4. '(' → logprob: -4.231758117675781
    5. 'x' → logprob: -4.231758117675781
    6. 'i' → logprob: -4.606758117675781
    7. '(__' → logprob: -5.231758117675781
    8. ''s' → logprob: -5.731758117675781
    9. '42' → logprob: -5.856758117675781
    10. ']' → logprob: -6.231758117675781

Token 10: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.32812267541885376
    2. 'x' → logprob: -1.328122615814209
    3. ' n' → logprob: -5.703122615814209
    4. ' lambda' → logprob: -5.828122615814209
    5. 'lambda' → logprob: -6.328122615814209
    6. ' ' → logprob: -6.453122615814209
    7. 'a' → logprob: -7.328122615814209
    8. 'n' → logprob: -7.453122615814209
    9. ' a' → logprob: -7.703122615814209
    10. ' i' → logprob: -7.703122615814209

Token 11: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22989250719547272
    2. ' :' → logprob: -1.7298924922943115
    3. ':x' → logprob: -3.7298924922943115
    4. ',' → logprob: -5.979892730712891
    5. ' x' → logprob: -8.10489273071289
    6. ' ,' → logprob: -8.22989273071289
    7. ',x' → logprob: -8.35489273071289
    8. '+' → logprob: -9.47989273071289
    9. 'x' → logprob: -9.60489273071289
    10. ':return' → logprob: -9.85489273071289

Token 12: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6428342461585999
    2. ' x' → logprob: -0.7678342461585999
    3. ' __' → logprob: -5.892834186553955
    4. '__' → logprob: -6.017834186553955
    5. '(x' → logprob: -6.892834186553955
    6. ' (' → logprob: -6.892834186553955
    7. 'f' → logprob: -8.142834663391113
    8. ' ' → logprob: -8.267834663391113
    9. 'i' → logprob: -8.517834663391113
    10. 'str' → logprob: -8.517834663391113

Token 13: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15574292838573456
    2. ' x' → logprob: -2.530742883682251
    3. '__' → logprob: -3.030742883682251
    4. ' __' → logprob: -5.40574312210083
    5. ' (' → logprob: -6.53074312210083
    6. 'int' → logprob: -6.53074312210083
    7. '(x' → logprob: -6.90574312210083
    8. '(__' → logprob: -6.90574312210083
    9. 'i' → logprob: -7.03074312210083
    10. 'lambda' → logprob: -7.15574312210083

Token 14: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.44950830936431885
    2. '*' → logprob: -1.5745083093643188
    3. ' +' → logprob: -2.6995081901550293
    4. '**' → logprob: -3.0745081901550293
    5. ' *' → logprob: -4.699508190155029
    6. ',' → logprob: -4.949508190155029
    7. ' and' → logprob: -5.449508190155029
    8. ')' → logprob: -5.449508190155029
    9. 'and' → logprob: -5.949508190155029
    10. '%' → logprob: -6.074508190155029

Token 15: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011515305377542973
    2. ' ' → logprob: -4.511515140533447
    3. '2' → logprob: -7.886515140533447
    4. 'x' → logprob: -10.636515617370605
    5. '42' → logprob: -11.386515617370605
    6. '10' → logprob: -11.511515617370605
    7. ' x' → logprob: -11.886515617370605
    8. 'y' → logprob: -12.136515617370605
    9. '3' → logprob: -12.261515617370605
    10. ' y' → logprob: -12.386515617370605

Token 16: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01270765159279108
    2. ')(' → logprob: -4.637707710266113
    3. ' )' → logprob: -6.637707710266113
    4. ')])' → logprob: -7.637707710266113
    5. ')**' → logprob: -8.137707710266113
    6. ')>>' → logprob: -8.137707710266113
    7. '))' → logprob: -8.762707710266113
    8. ')<<' → logprob: -9.762707710266113
    9. ')]' → logprob: -10.012707710266113
    10. '))(' → logprob: -10.262707710266113

Token 17: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006045401096343994
    2. ' ' → logprob: -5.256045341491699
    3. '3' → logprob: -7.381045341491699
    4. '1' → logprob: -9.3810453414917
    5. '10' → logprob: -11.0060453414917
    6. '4' → logprob: -11.0060453414917
    7. '__' → logprob: -11.1310453414917
    8. '7' → logprob: -11.2560453414917
    9. '5' → logprob: -11.2560453414917
    10. 'b' → logprob: -12.1310453414917

Token 18: '-' (ID: 12)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49753662943840027
    2. ')(' → logprob: -1.4975366592407227
    3. '](' → logprob: -2.8725366592407227
    4. '(x' → logprob: -3.2475366592407227
    5. ']))' → logprob: -4.372536659240723
    6. 'for' → logprob: -4.622536659240723
    7. ')' → logprob: -4.747536659240723
    8. '(' → logprob: -4.747536659240723
    9. '])(' → logprob: -4.997536659240723
    10. ']' → logprob: -5.122536659240723

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13272587954998016
    2. ' ' → logprob: -2.507725954055786
    3. 'x' → logprob: -4.007725715637207
    4. ' x' → logprob: -4.382725715637207
    5. '0' → logprob: -5.882725715637207
    6. '2' → logprob: -6.132725715637207
    7. '(x' → logprob: -6.132725715637207
    8. '__' → logprob: -6.382725715637207
    9. ' (' → logprob: -6.882725715637207
    10. ' __' → logprob: -7.132725715637207

Token 20: '][' (ID: 2696)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.6889557242393494
    2. ')' → logprob: -1.0639557838439941
    3. ']))' → logprob: -3.688955783843994
    4. ' for' → logprob: -3.688955783843994
    5. '))' → logprob: -3.813955783843994
    6. '(x' → logprob: -4.188955783843994
    7. '](' → logprob: -4.438955783843994
    8. ']' → logprob: -4.813955783843994
    9. ')))' → logprob: -4.813955783843994
    10. ')])' → logprob: -5.063955783843994

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004990590969100595
    2. ' ' → logprob: -7.625499248504639
    3. '1' → logprob: -12.25049877166748
    4. '-' → logprob: -12.50049877166748
    5. '(' → logprob: -13.87549877166748
    6. ' -' → logprob: -14.62549877166748
    7. ':' → logprob: -14.75049877166748
    8. ')' → logprob: -15.87549877166748
    9. '   ' → logprob: -16.125499725341797
    10. '__' → logprob: -16.250499725341797

Token 22: '])' (ID: 4636)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.5257437825202942
    2. ')' → logprob: -0.9007437825202942
    3. ' )' → logprob: -7.5257439613342285
    4. ')(
' → logprob: -7.5257439613342285
    5. ')(__' → logprob: -8.15074348449707
    6. ')x' → logprob: -8.65074348449707
    7. '))' → logprob: -8.65074348449707
    8. '(' → logprob: -8.90074348449707
    9. ')((' → logprob: -8.90074348449707
    10. ')])' → logprob: -8.90074348449707

Token 23: '(__' (ID: 11782)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012356366030871868
    2. '(' → logprob: -4.637356281280518
    3. '))' → logprob: -7.137356281280518
    4. '(x' → logprob: -7.512356281280518
    5. ')(' → logprob: -7.762356281280518
    6. ' )' → logprob: -8.387356758117676
    7. ')x' → logprob: -9.012356758117676
    8. '[' → logprob: -9.262356758117676
    9. ')))' → logprob: -9.387356758117676
    10. '*' → logprob: -10.012356758117676

Token 24: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02399563416838646
    2. 'import' → logprob: -4.273995399475098
    3. 'built' → logprob: -5.148995399475098
    4. '2' → logprob: -6.898995399475098
    5. '_' → logprob: -7.148995399475098
    6. '_b' → logprob: -7.398995399475098
    7. 'a' → logprob: -8.273995399475098
    8. 'i' → logprob: -8.398995399475098
    9. 'x' → logprob: -8.398995399475098
    10. 'builtin' → logprob: -8.898995399475098

Token 25: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -1.3316915035247803
    2. '.len' → logprob: -1.4566915035247803
    3. '.' → logprob: -1.5816915035247803
    4. '.input' → logprob: -2.0816915035247803
    5. '.max' → logprob: -3.2066915035247803
    6. '.abs' → logprob: -3.7066915035247803
    7. '.range' → logprob: -4.081691741943359
    8. '.x' → logprob: -4.456691741943359
    9. '.min' → logprob: -4.581691741943359
    10. '.b' → logprob: -4.956691741943359

Token 26: '(__' (ID: 11782)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4928308427333832
    2. '('' → logprob: -0.9928308725357056
    3. '("' → logprob: -5.242830753326416
    4. ')' → logprob: -5.617830753326416
    5. ''' → logprob: -6.367830753326416
    6. ' (' → logprob: -6.367830753326416
    7. '(x' → logprob: -6.742830753326416
    8. '(s' → logprob: -7.492830753326416
    9. '((' → logprob: -7.492830753326416
    10. ' ' → logprob: -7.867830753326416

Token 27: 'b' (ID: 65)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2971418797969818
    2. 'import' → logprob: -2.2971417903900146
    3. 'name' → logprob: -2.4221417903900146
    4. 'b' → logprob: -3.9221417903900146
    5. 'built' → logprob: -4.422142028808594
    6. '_' → logprob: -4.547142028808594
    7. 'stdin' → logprob: -4.547142028808594
    8. 'file' → logprob: -4.797142028808594
    9. '"' → logprob: -6.797142028808594
    10. 'user' → logprob: -6.797142028808594

Token 28: '.input' (ID: 18322)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4058830738067627
    2. 'argv' → logprob: -1.6558830738067627
    3. '__' → logprob: -2.2808830738067627
    4. ''' → logprob: -4.405882835388184
    5. '_' → logprob: -4.905882835388184
    6. '_input' → logprob: -5.905882835388184
    7. ''s' → logprob: -6.030882835388184
    8. 'stdin' → logprob: -6.530882835388184
    9. 'ARGV' → logprob: -6.655882835388184
    10. 'sys' → logprob: -6.655882835388184

Token 29: '())))' (ID: 168342)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7494762539863586
    2. '(' → logprob: -1.6244761943817139
    3. '())))' → logprob: -1.8744761943817139
    4. '()))' → logprob: -2.499476194381714
    5. '(()' → logprob: -3.499476194381714
    6. '()' → logprob: -4.124476432800293
    7. '())' → logprob: -4.499476432800293
    8. '("("' → logprob: -4.874476432800293
    9. '("' → logprob: -5.124476432800293
    10. '(""))' → logprob: -5.499476432800293


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 27
Tokens correctement prédits (1ère position, stricte): 10
Tokens correctement prédits (1ère position, avec adaptation): 10
Tokens correctement prédits (top 10): 15
Précision stricte (1ère position): 37.04%
Précision adaptée (1ère position): 37.04%
Précision (top 10): 55.56%
================================================================================
