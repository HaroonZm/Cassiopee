================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def single_input():
    return sys.stdin.readline().strip()

def line_input():
    return sys.stdin.readline().strip().split()

def main():
    mod = 7 + 10 ** 9
    N = int(single_input())
    A = list(map(int, line_input()))

    DP = []
    for i in range(2 ** 20):
        DP.append([0, 1])
    memo = [0] * (2 ** 20)
    cumulative_xor = 0
    zeros = 0

    for i in range(N):
        cumulative_xor = cumulative_xor ^ A[i]
        if cumulative_xor == 0:
            zeros += 1
        else:
            temp = DP[cumulative_xor][0] * (zeros - memo[cumulative_xor])
            DP[cumulative_xor][1] = DP[cumulative_xor][1] + temp
            DP[cumulative_xor][1] = DP[cumulative_xor][1] % mod
            DP[cumulative_xor][0] = DP[cumulative_xor][0] + DP[cumulative_xor][1]
            DP[cumulative_xor][0] = DP[cumulative_xor][0] % mod
            memo[cumulative_xor] = zeros

    if cumulative_xor > 0:
        print(DP[cumulative_xor][1])
    else:
        ans = pow(2, zeros - 1, mod)
        for i in range(2 ** 20):
            ans = ans + DP[i][0]
            ans = ans % mod
        print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.025130433961749077
    2. '\n' → logprob: -4.400130271911621
    3. 'import' → logprob: -5.275130271911621
    4. '<|end|>' → logprob: -5.900130271911621
    5. '\' → logprob: -6.150130271911621
    6. 'newline' → logprob: -7.900130271911621
    7. '' → logprob: -8.025130271911621
    8. '
' → logprob: -8.400130271911621
    9. ';' → logprob: -8.525130271911621
    10. ',' → logprob: -8.525130271911621

Token 4: ' single' (ID: 4590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4254167675971985
    2. ' main' → logprob: -1.8004167079925537
    3. ' process' → logprob: -2.6754167079925537
    4. ' space' → logprob: -3.1754167079925537
    5. ' calculate' → logprob: -4.550416946411133
    6. ' read' → logprob: -4.800416946411133
    7. ' hello' → logprob: -4.800416946411133
    8. ' my' → logprob: -5.050416946411133
    9. '_' → logprob: -5.175416946411133
    10. ' a' → logprob: -5.550416946411133

Token 5: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005822498816996813
    2. '(' → logprob: -5.505822658538818
    3. '_space' → logprob: -7.880822658538818
    4. 'ton' → logprob: -8.13082218170166
    5. ' _' → logprob: -8.50582218170166
    6. 't' → logprob: -8.75582218170166
    7. 'space' → logprob: -8.88082218170166
    8. ')' → logprob: -9.13082218170166
    9. '_t' → logprob: -9.63082218170166
    10. '_line' → logprob: -9.75582218170166

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009931529639288783
    2. '():' → logprob: -7.250993251800537
    3. '(:' → logprob: -9.375992774963379
    4. '_' → logprob: -9.750992774963379
    5. '):' → logprob: -9.875992774963379
    6. '(parent' → logprob: -11.375992774963379
    7. '(s' → logprob: -11.375992774963379
    8. '_parent' → logprob: -11.375992774963379
    9. '('' → logprob: -12.125992774963379
    10. ')' → logprob: -12.125992774963379

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25630348920822144
    2. '(' → logprob: -2.131303548812866
    3. ' return' → logprob: -3.256303548812866
    4. 'return' → logprob: -3.881303548812866
    5. '```' → logprob: -4.756303310394287
    6. ''' → logprob: -4.881303310394287
    7. '(return' → logprob: -5.631303310394287
    8. ':' → logprob: -5.756303310394287
    9. '    
' → logprob: -5.881303310394287
    10. '():' → logprob: -5.881303310394287

Token 8: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4199421405792236
    2. 'return' (adapté à ' return') → logprob: -1.4199421405792236
    3. 'user' → logprob: -1.5449421405792236
    4. 'pass' → logprob: -2.1699421405792236
    5. 'input' → logprob: -2.4199421405792236
    6. ' return' → logprob: -3.4199421405792236
    7. ' user' → logprob: -4.2949419021606445
    8. ' ' → logprob: -4.5449419021606445
    9. 'x' → logprob: -4.6699419021606445
    10. ' input' → logprob: -4.9199419021606445

Token 9: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8941855430603027
    2. ' sys' → logprob: -1.0191855430603027
    3. 'input' → logprob: -2.0191855430603027
    4. ' ' → logprob: -2.5191855430603027
    5. 'sys' → logprob: -4.394185543060303
    6. '"' → logprob: -5.894185543060303
    7. ''' → logprob: -7.644185543060303
    8. ' int' → logprob: -7.769185543060303
    9. '  ' → logprob: -8.394186019897461
    10. 'int' → logprob: -9.019186019897461

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000344044849043712
    2. ' .' → logprob: -9.375344276428223
    3. '.argv' → logprob: -9.500344276428223
    4. '.stdin' → logprob: -9.500344276428223
    5. '.readline' → logprob: -10.000344276428223
    6. '.exit' → logprob: -11.375344276428223
    7. '.stdout' → logprob: -11.500344276428223
    8. '.import' → logprob: -11.750344276428223
    9. '.user' → logprob: -12.125344276428223
    10. '.next' → logprob: -12.750344276428223

Token 11: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6508937478065491
    2. '.readline' → logprob: -0.7758937478065491
    3. '.read' → logprob: -4.025893688201904
    4. 'read' → logprob: -9.400894165039062
    5. '.Read' → logprob: -9.900894165039062
    6. '().' → logprob: -10.025894165039062
    7. '.readlines' → logprob: -10.400894165039062
    8. '()' → logprob: -10.900894165039062
    9. '.write' → logprob: -11.525894165039062
    10. '[' → logprob: -11.900894165039062

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013148818397894502
    2. '().' → logprob: -7.126315116882324
    3. '(' → logprob: -8.001315116882324
    4. ' ()' → logprob: -9.501315116882324
    5. '()(' → logprob: -10.126315116882324
    6. '()
' → logprob: -10.376315116882324
    7. '()\' → logprob: -11.876315116882324
    8. '())' → logprob: -12.501315116882324
    9. '()

' → logprob: -12.751315116882324
    10. '()<' → logprob: -13.251315116882324

Token 13: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0024773201439529657
    2. 'rstrip' → logprob: -6.002477169036865
    3. ' strip' → logprob: -13.502477645874023
    4. '_strip' → logprob: -16.377477645874023
    5. 'str' → logprob: -17.502477645874023
    6. 'decode' → logprob: -18.002477645874023
    7. '(strip' → logprob: -18.252477645874023
    8. 'split' → logprob: -18.502477645874023
    9. 'replace' → logprob: -18.627477645874023
    10. 'read' → logprob: -19.127477645874023

Token 14: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3871423304080963
    2. '(' → logprob: -1.137142300605774
    3. '(
' → logprob: -9.387142181396484
    4. ' ' → logprob: -10.512142181396484
    5. '(

' → logprob: -10.762142181396484
    6. '`()' → logprob: -10.762142181396484
    7. '()(' → logprob: -11.137142181396484
    8. ' ()' → logprob: -11.262142181396484
    9. '```' → logprob: -11.262142181396484
    10. ')' → logprob: -12.012142181396484

Token 15: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.81788569688797
    2. '#' → logprob: -1.1928856372833252
    3. 'd' → logprob: -1.5678856372833252
    4. 'a' → logprob: -4.817885875701904
    5. 'i' → logprob: -5.067885875701904
    6. '```' → logprob: -5.317885875701904
    7. '\' → logprob: -5.567885875701904
    8. '
' → logprob: -5.692885875701904
    9. '' → logprob: -6.192885875701904
    10. 'x' → logprob: -6.192885875701904

Token 16: ' line' (ID: 2543)
  Prédit: ' single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' single' → logprob: -0.5610659718513489
    2. ' main' → logprob: -1.186065912246704
    3. ' double' → logprob: -2.436065912246704
    4. ' multiple' → logprob: -4.561066150665283
    5. ' multi' → logprob: -5.186066150665283
    6. 'single' → logprob: -5.186066150665283
    7. ' calculate' → logprob: -5.811066150665283
    8. ' split' → logprob: -6.311066150665283
    9. ' multiply' → logprob: -6.436066150665283
    10. ' process' → logprob: -6.811066150665283

Token 17: '_input' (ID: 12507)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08876681327819824
    2. '()' → logprob: -2.7137668132781982
    3. '_s' → logprob: -5.088767051696777
    4. '_input' → logprob: -5.338767051696777
    5. '_split' → logprob: -5.713767051696777
    6. '_' → logprob: -6.338767051696777
    7. 'split' → logprob: -6.588767051696777
    8. '():' → logprob: -8.213767051696777
    9. '_reader' → logprob: -8.588767051696777
    10. '_count' → logprob: -9.463767051696777

Token 18: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002861939137801528
    2. '()' → logprob: -5.877861976623535
    3. ' ():' → logprob: -10.252861976623535
    4. 's' → logprob: -11.627861976623535
    5. '():
' → logprob: -12.752861976623535
    6. ' ()' → logprob: -12.877861976623535
    7. '(' → logprob: -13.002861976623535
    8. '()>' → logprob: -13.252861976623535
    9. '[]' → logprob: -14.877861976623535
    10. '):' → logprob: -15.002861976623535

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001105762057704851
    2. 'return' → logprob: -10.250110626220703
    3. ' return' → logprob: -10.250110626220703
    4. '    ' → logprob: -10.375110626220703
    5. '   ' → logprob: -13.375110626220703
    6. '	return' → logprob: -13.500110626220703
    7. '       ' → logprob: -13.750110626220703
    8. '[]' → logprob: -13.875110626220703
    9. '```' → logprob: -13.875110626220703
    10. ' ' → logprob: -14.625110626220703

Token 20: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6943044662475586
    2. '   ' → logprob: -0.9443044662475586
    3. 'return' (adapté à ' return') → logprob: -2.1943044662475586
    4. ' sys' → logprob: -9.569304466247559
    5. ' ' → logprob: -9.944304466247559
    6. '```' → logprob: -10.444304466247559
    7. '    ' → logprob: -10.944304466247559
    8. 'sys' → logprob: -11.444304466247559
    9. '  ' → logprob: -11.944304466247559
    10. '	return' → logprob: -13.319304466247559

Token 21: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.36239364743232727
    2. 'sys' → logprob: -1.2373936176300049
    3. ' list' → logprob: -4.862393856048584
    4. 'list' → logprob: -5.612393856048584
    5. 'int' → logprob: -7.112393856048584
    6. ' ' → logprob: -7.737393856048584
    7. ' int' → logprob: -8.237393379211426
    8. '[' → logprob: -8.362393379211426
    9. ' [' → logprob: -8.612393379211426
    10. ' map' → logprob: -8.737393379211426

Token 22: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.010835925117135048
    2. '.' → logprob: -5.385836124420166
    3. '.stdout' → logprob: -5.385836124420166
    4. '.readline' → logprob: -6.510836124420166
    5. '.argv' → logprob: -10.135835647583008
    6. ' .' → logprob: -10.385835647583008
    7. '.std' → logprob: -10.635835647583008
    8. '.stderr' → logprob: -10.760835647583008
    9. 'stdin' → logprob: -12.510835647583008
    10. '.readlines' → logprob: -13.635835647583008

Token 23: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.351697033504024e-05
    2. '.readlines' → logprob: -9.500083923339844
    3. '.' → logprob: -11.750083923339844
    4. '.read' → logprob: -14.500083923339844
    5. '.stdin' → logprob: -15.625083923339844
    6. ' readline' → logprob: -16.250083923339844
    7. 'read' → logprob: -18.250083923339844
    8. ' .' → logprob: -18.250083923339844
    9. '.buffer' → logprob: -19.125083923339844
    10. '```' → logprob: -19.625083923339844

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.313268780708313
    2. '()' → logprob: -1.313268780708313
    3. ' ().' → logprob: -13.438268661499023
    4. ' ()' → logprob: -13.938268661499023
    5. '()
' → logprob: -14.188268661499023
    6. '()`' → logprob: -14.313268661499023
    7. '()(' → logprob: -14.313268661499023
    8. '().__' → logprob: -14.688268661499023
    9. '(' → logprob: -14.813268661499023
    10. '()

' → logprob: -15.063268661499023

Token 25: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0024775585625320673
    2. 'rstrip' → logprob: -6.002477645874023
    3. 'read' → logprob: -13.377477645874023
    4. 'decode' → logprob: -15.377477645874023
    5. 'split' → logprob: -15.627477645874023
    6. ' strip' → logprob: -16.752477645874023
    7. '_strip' → logprob: -17.252477645874023
    8. 'str' → logprob: -19.877477645874023
    9. 'startswith' → logprob: -19.877477645874023
    10. '(strip' → logprob: -20.127477645874023

Token 26: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004092174116522074
    2. '(' → logprob: -5.504092216491699
    3. ' ()' → logprob: -12.3790922164917
    4. '`()' → logprob: -13.2540922164917
    5. ')' → logprob: -13.6290922164917
    6. '()
' → logprob: -13.7540922164917
    7. '()(' → logprob: -13.7540922164917
    8. '()`' → logprob: -14.1290922164917
    9. '()

' → logprob: -14.6290922164917
    10. '();' → logprob: -15.1290922164917

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.392202976712724e-06
    2. 'rstrip' → logprob: -12.250006675720215
    3. 's' → logprob: -14.125006675720215
    4. 'strip' → logprob: -14.875006675720215
    5. ' split' → logprob: -15.500006675720215
    6. 'spl' → logprob: -15.875006675720215
    7. '(split' → logprob: -16.6250057220459
    8. 'replace' → logprob: -16.7500057220459
    9. '```' → logprob: -17.2500057220459
    10. 'rs' → logprob: -17.3750057220459

Token 28: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5668498277664185
    2. '()' → logprob: -1.3168498277664185
    3. '('' → logprob: -1.8168498277664185
    4. '("("' → logprob: -6.191849708557129
    5. '("' → logprob: -11.066849708557129
    6. ' (' → logprob: -11.441849708557129
    7. '(',' → logprob: -11.691849708557129
    8. '(`' → logprob: -11.691849708557129
    9. ' ()' → logprob: -11.691849708557129
    10. '("")' → logprob: -11.691849708557129

Token 29: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13994385302066803
    2. 'def' → logprob: -2.264943838119507
    3. '#' → logprob: -3.889943838119507
    4. '\' → logprob: -5.764944076538086
    5. 'de' → logprob: -7.014944076538086
    6. '*' → logprob: -7.014944076538086
    7. 'a' → logprob: -8.264944076538086
    8. '_' → logprob: -8.389944076538086
    9. '(' → logprob: -8.514944076538086
    10. '```' → logprob: -8.639944076538086

Token 30: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7089881896972656
    2. ' single' → logprob: -1.4589881896972656
    3. ' multi' → logprob: -2.3339881896972656
    4. ' multiple' → logprob: -2.5839881896972656
    5. 'single' → logprob: -2.9589881896972656
    6. 'multi' → logprob: -3.7089881896972656
    7. 'main' → logprob: -4.708988189697266
    8. ' double' → logprob: -4.958988189697266
    9. 'multiple' → logprob: -5.958988189697266
    10. ' two' → logprob: -7.208988189697266

Token 31: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4767577052116394
    2. '():' → logprob: -0.9767577052116394
    3. '(:' → logprob: -6.601757526397705
    4. '()' → logprob: -7.101757526397705
    5. '_' → logprob: -8.101758003234863
    6. ':' → logprob: -9.726758003234863
    7. '(**' → logprob: -10.101758003234863
    8. '(":' → logprob: -10.726758003234863
    9. '(_:' → logprob: -11.101758003234863
    10. ' ():' → logprob: -12.101758003234863

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005538607947528362
    2. '    ' → logprob: -5.505538463592529
    3. ' ' → logprob: -7.505538463592529
    4. '    
' → logprob: -8.130538940429688
    5. 'n' → logprob: -8.630538940429688
    6. '(' → logprob: -9.005538940429688
    7. '  ' → logprob: -10.130538940429688
    8. 'a' → logprob: -10.380538940429688
    9. '<|end|>' → logprob: -10.380538940429688
    10. '#' → logprob: -10.630538940429688

Token 33: ' mod' (ID: 1812)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1667102575302124
    2. 'n' → logprob: -3.166710376739502
    3. '    ' → logprob: -3.166710376739502
    4. ' ' → logprob: -3.916710376739502
    5. 'user' → logprob: -4.541710376739502
    6. 'input' → logprob: -5.291710376739502
    7. ' user' → logprob: -5.416710376739502
    8. 'i' → logprob: -5.416710376739502
    9. ' n' → logprob: -5.416710376739502
    10. 'for' → logprob: -6.041710376739502

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10244820266962051
    2. '=' → logprob: -2.4774482250213623
    3. '_' → logprob: -4.602447986602783
    4. 'ular' → logprob: -6.977447986602783
    5. ' ' → logprob: -7.102447986602783
    6. 'ulus' → logprob: -7.477447986602783
    7. ' _' → logprob: -8.477448463439941
    8. 'ul' → logprob: -8.852448463439941
    9. 'ulation' → logprob: -8.852448463439941
    10. '   ' → logprob: -9.102448463439941

Token 35: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.19699837267398834
    2. ' ' → logprob: -1.9469983577728271
    3. '100' → logprob: -3.321998357772827
    4. '1' → logprob: -11.071998596191406
    5. '998' → logprob: -12.196998596191406
    6. 'int' → logprob: -12.696998596191406
    7. ' (' → logprob: -14.571998596191406
    8. ' ' → logprob: -15.196998596191406
    9. ' int' → logprob: -15.571998596191406
    10. '0' → logprob: -15.571998596191406

Token 36: '7' (ID: 22)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004112950060516596
    2. '100' → logprob: -5.504112720489502
    3. ' ' → logprob: -10.87911319732666
    4. '1' → logprob: -11.50411319732666
    5. 'int' → logprob: -12.87911319732666
    6. '998' → logprob: -13.00411319732666
    7. '(' → logprob: -14.37911319732666
    8. 'pow' → logprob: -15.75411319732666
    9. '(int' → logprob: -17.504112243652344
    10. '0' → logprob: -17.754112243652344

Token 37: ' +' (ID: 659)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08971435576677322
    2. '2' → logprob: -2.964714288711548
    3. '6' → logprob: -3.839714288711548
    4. ' ' → logprob: -5.089714527130127
    5. '5' → logprob: -6.589714527130127
    6. '4' → logprob: -6.714714527130127
    7. '1' → logprob: -7.214714527130127
    8. '3' → logprob: -7.464714527130127
    9. '*' → logprob: -7.464714527130127
    10. ',' → logprob: -7.714714527130127

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41072142124176025
    2. '10' → logprob: -2.1607213020324707
    3. '000' → logprob: -2.9107213020324707
    4. '14' → logprob: -3.5357213020324707
    5. '2' → logprob: -3.6607213020324707
    6. '13' → logprob: -3.9107213020324707
    7. '1' → logprob: -4.160721302032471
    8. '12' → logprob: -4.535721302032471
    9. '123' → logprob: -4.660721302032471
    10. '3' → logprob: -5.285721302032471

Token 39: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.016275059431791306
    2. '2' → logprob: -5.516274929046631
    3. '202' → logprob: -6.266274929046631
    4. '3' → logprob: -6.266274929046631
    5. '7' → logprob: -6.516274929046631
    6. '100' → logprob: -6.641274929046631
    7. '24' → logprob: -7.516274929046631
    8. '19' → logprob: -7.516274929046631
    9. 'pow' → logprob: -7.516274929046631
    10. '1' → logprob: -7.766274929046631

Token 40: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.007397437933832407
    2. '9' → logprob: -5.007397651672363
    3. ' **' → logprob: -7.757397651672363
    4. '6' → logprob: -9.382397651672363
    5. '000' → logprob: -9.882397651672363
    6. '*' → logprob: -10.382397651672363
    7. '7' → logprob: -10.632397651672363
    8. '0' → logprob: -10.757397651672363
    9. '```' → logprob: -11.382397651672363
    10. ' ' → logprob: -11.757397651672363

Token 41: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.339278580620885e-06
    2. '09' → logprob: -13.000001907348633
    3. '8' → logprob: -17.750001907348633
    4. '+' → logprob: -18.250001907348633
    5. ' ' → logprob: -18.500001907348633
    6. '10' → logprob: -19.625001907348633
    7. '```' → logprob: -21.125001907348633
    8. '6' → logprob: -21.625001907348633
    9. '009' → logprob: -21.750001907348633
    10. '7' → logprob: -21.875001907348633

Token 42: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -16.25
    3. '8' → logprob: -16.625
    4. '+' → logprob: -19.25
    5. '10' → logprob: -19.25
    6. '18' → logprob: -22.125
    7. ' ' → logprob: -22.125
    8. '```' → logprob: -22.25
    9. '7' → logprob: -23.0
    10. '**' → logprob: -23.0

Token 43: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003825252642855048
    2. '7' → logprob: -5.6288251876831055
    3. ' +' → logprob: -8.878825187683105
    4. '9' → logprob: -9.503825187683105
    5. ' ' → logprob: -12.753825187683105
    6. '```' → logprob: -12.753825187683105
    7. '%' → logprob: -13.128825187683105
    8. '<|end|>' → logprob: -13.503825187683105
    9. ')' → logprob: -15.503825187683105
    10. '**' → logprob: -15.503825187683105

Token 44: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00107389607001096
    2. ' +' → logprob: -7.001073837280273
    3. '7' → logprob: -8.751073837280273
    4. '9' → logprob: -12.751073837280273
    5. ' ' → logprob: -14.751073837280273
    6. '```' → logprob: -16.126073837280273
    7. '+</' → logprob: -16.501073837280273
    8. '＋' → logprob: -16.501073837280273
    9. '+
' → logprob: -17.126073837280273
    10. '<|end|>' → logprob: -17.251073837280273

Token 45: ' N' (ID: 478)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.8315162062644958
    2. ' ' → logprob: -1.9565162658691406
    3. '7' → logprob: -1.9565162658691406
    4. '+' → logprob: -2.5815162658691406
    5. '```' → logprob: -2.5815162658691406
    6. '**' → logprob: -3.5815162658691406
    7. '1' → logprob: -3.5815162658691406
    8. '\' → logprob: -3.8315162658691406
    9. '3' → logprob: -3.9565162658691406
    10. '0' → logprob: -4.706516265869141

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.042882487177848816
    2. ',' → logprob: -4.292882442474365
    3. ' ' → logprob: -4.292882442474365
    4. '=' → logprob: -4.542882442474365
    5. ' ,' → logprob: -5.542882442474365
    6. '  ' → logprob: -11.042882919311523
    7. ' =
' → logprob: -11.417882919311523
    8. ' >' → logprob: -11.667882919311523
    9. ')' → logprob: -11.917882919311523
    10. ' =)' → logprob: -11.917882919311523

Token 47: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0014463067054748535
    2. 'int' → logprob: -6.75144624710083
    3. ' single' → logprob: -8.876446723937988
    4. ' ' → logprob: -9.626446723937988
    5. ' line' → logprob: -9.626446723937988
    6. 'single' → logprob: -13.751446723937988
    7. 'line' → logprob: -14.001446723937988
    8. ' len' → logprob: -14.376446723937988
    9. ' map' → logprob: -14.501446723937988
    10. '=int' → logprob: -15.376446723937988

Token 48: '(single' (ID: 134878)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4079330861568451
    2. '(line' → logprob: -1.4079331159591675
    3. '(single' → logprob: -2.407932996749878
    4. 'single' → logprob: -8.282933235168457
    5. '(input' → logprob: -10.782933235168457
    6. '(s' → logprob: -11.032933235168457
    7. '('' → logprob: -11.657933235168457
    8. '(
' → logprob: -11.907933235168457
    9. '(space' → logprob: -11.907933235168457
    10. '()' → logprob: -12.282933235168457

Token 49: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0007792501710355282
    2. '_' → logprob: -7.250779151916504
    3. '(' → logprob: -10.750779151916504
    4. '_line' → logprob: -11.500779151916504
    5. '_put' → logprob: -12.000779151916504
    6. '_inputs' → logprob: -12.000779151916504
    7. '_in' → logprob: -12.125779151916504
    8. ')' → logprob: -12.250779151916504
    9. '_output' → logprob: -12.875779151916504
    10. '(_' → logprob: -13.000779151916504

Token 50: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014173267409205437
    2. '()' → logprob: -4.2641730308532715
    3. ' ())' → logprob: -12.63917350769043
    4. ')' → logprob: -12.88917350769043
    5. '())
' → logprob: -12.88917350769043
    6. '()))' → logprob: -14.63917350769043
    7. '();)' → logprob: -15.01417350769043
    8. '()
' → logprob: -15.38917350769043
    9. '())

' → logprob: -15.76417350769043
    10. '(' → logprob: -16.13917350769043

Token 51: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.59773850440979
    2. '+' → logprob: -1.59773850440979
    3. ')' → logprob: -1.72273850440979
    4. '**' → logprob: -3.72273850440979
    5. '*' → logprob: -4.222738265991211
    6. '0' → logprob: -4.972738265991211
    7. '<|end|>' → logprob: -4.972738265991211
    8. ' ' → logprob: -5.347738265991211
    9. '-' → logprob: -5.722738265991211
    10. ' %' → logprob: -6.222738265991211

Token 52: ' A' (ID: 355)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.09882176667451859
    2. ' %' → logprob: -2.5988218784332275
    3. ' ' → logprob: -5.223821640014648
    4. '+' → logprob: -5.473821640014648
    5. '**' → logprob: -6.098821640014648
    6. ')' → logprob: -6.223821640014648
    7. '0' → logprob: -6.973821640014648
    8. '7' → logprob: -6.973821640014648
    9. '```' → logprob: -7.098821640014648
    10. '2' → logprob: -7.473821640014648

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011100404895842075
    2. '=' → logprob: -4.5111002922058105
    3. '[' → logprob: -10.511100769042969
    4. ' =[' → logprob: -11.511100769042969
    5. ' ' → logprob: -12.011100769042969
    6. '_' → logprob: -12.386100769042969
    7. '.' → logprob: -14.011100769042969
    8. 's' → logprob: -14.261100769042969
    9. ',' → logprob: -14.386100769042969
    10. '[]' → logprob: -14.511100769042969

Token 54: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12697733938694
    2. 'list' → logprob: -2.1269774436950684
    3. ' [' → logprob: -11.25197696685791
    4. 'line' → logprob: -11.50197696685791
    5. ' line' → logprob: -11.75197696685791
    6. '[list' → logprob: -12.00197696685791
    7. '[' → logprob: -12.50197696685791
    8. ' ' → logprob: -12.87697696685791
    9. ' map' → logprob: -13.50197696685791
    10. '[]' → logprob: -14.00197696685791

Token 55: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.579837441444397
    2. '(map' → logprob: -0.829837441444397
    3. '(int' → logprob: -5.954837322235107
    4. '(line' → logprob: -7.204837322235107
    5. '(range' → logprob: -8.204837799072266
    6. '()' → logprob: -9.079837799072266
    7. '(input' → logprob: -9.204837799072266
    8. '(s' → logprob: -11.204837799072266
    9. '(split' → logprob: -12.079837799072266
    10. '(list' → logprob: -12.204837799072266

Token 56: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015617619501426816
    2. '(' → logprob: -6.501561641693115
    3. ')' → logprob: -10.501562118530273
    4. 'int' → logprob: -11.126562118530273
    5. ',int' → logprob: -12.126562118530273
    6. '<int' → logprob: -12.501562118530273
    7. '(
' → logprob: -13.376562118530273
    8. ')(' → logprob: -14.001562118530273
    9. '(lambda' → logprob: -14.001562118530273
    10. ' (' → logprob: -14.126562118530273

Token 57: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.008146785199642181
    2. '(' → logprob: -5.5081467628479
    3. ',line' → logprob: -5.6331467628479
    4. ',' → logprob: -8.008147239685059
    5. '(
' → logprob: -10.883147239685059
    6. ')' → logprob: -11.008147239685059
    7. ' (' → logprob: -11.008147239685059
    8. ' ,' → logprob: -11.133147239685059
    9. 'line' → logprob: -11.133147239685059
    10. ')(' → logprob: -11.258147239685059

Token 58: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2519453763961792
    2. 'line' → logprob: -1.5019453763961792
    3. '(line' → logprob: -11.751945495605469
    4. ' single' → logprob: -12.251945495605469
    5. 'single' → logprob: -14.001945495605469
    6. '	line' → logprob: -14.001945495605469
    7. '[line' → logprob: -14.501945495605469
    8. ' ' → logprob: -14.626945495605469
    9. '=line' → logprob: -15.126945495605469
    10. '#line' → logprob: -15.626945495605469

Token 59: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.5577775128767826e-06
    2. 'input' → logprob: -12.500005722045898
    3. '_' → logprob: -14.250005722045898
    4. ')' → logprob: -15.000005722045898
    5. '(input' → logprob: -15.875005722045898
    6. '_inputs' → logprob: -15.875005722045898
    7. ')_' → logprob: -16.2500057220459
    8. '_INPUT' → logprob: -16.6250057220459
    9. '_import' → logprob: -16.8750057220459
    10. '_output' → logprob: -17.0000057220459

Token 60: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.005653114058077335
    2. '()' → logprob: -5.630652904510498
    3. '())' → logprob: -6.630652904510498
    4. '))' → logprob: -7.380652904510498
    5. '()))
' → logprob: -10.505653381347656
    6. '()));' → logprob: -10.505653381347656
    7. '())))' → logprob: -10.880653381347656
    8. '())).' → logprob: -12.380653381347656
    9. '()))

' → logprob: -12.380653381347656
    10. '().' → logprob: -12.630653381347656

Token 61: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49584442377090454
    2. '   ' → logprob: -0.9958444237709045
    3. '()' → logprob: -4.62084436416626
    4. '[' → logprob: -5.62084436416626
    5. ' ' → logprob: -6.74584436416626
    6. '())' → logprob: -6.74584436416626
    7. '
' → logprob: -6.87084436416626
    8. '(' → logprob: -6.99584436416626
    9. '<|end|>' → logprob: -7.24584436416626
    10. '```' → logprob: -7.74584436416626

Token 62: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.023288918659090996
    2. ' dp' → logprob: -5.273288726806641
    3. 'ans' → logprob: -5.773288726806641
    4. 'result' → logprob: -5.773288726806641
    5. 'count' → logprob: -5.773288726806641
    6. 'res' → logprob: -6.773288726806641
    7. 'answer' → logprob: -7.023288726806641
    8. 'counter' → logprob: -7.148288726806641
    9. 'cnt' → logprob: -7.148288726806641
    10. 'pow' → logprob: -7.398288726806641

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016834689304232597
    2. '=' → logprob: -4.391834735870361
    3. '[' → logprob: -5.641834735870361
    4. '_' → logprob: -8.391834259033203
    5. '1' → logprob: -8.766834259033203
    6. '0' → logprob: -8.891834259033203
    7. '[]' → logprob: -9.391834259033203
    8. '=[' → logprob: -9.766834259033203
    9. ' =[' → logprob: -10.266834259033203
    10. ' ' → logprob: -11.641834259033203

Token 64: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.041015446186065674
    2. ' [' → logprob: -3.916015386581421
    3. '[[' → logprob: -4.041015625
    4. '[-' → logprob: -6.416015625
    5. ' [[' → logprob: -7.166015625
    6. '[len' → logprob: -9.291015625
    7. '[n' → logprob: -10.041015625
    8. '[{' → logprob: -10.291015625
    9. ' [{}' → logprob: -10.916015625
    10. '{}' → logprob: -11.166015625

Token 65: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5466168522834778
    2. '[' → logprob: -1.671616792678833
    3. 'for' → logprob: -2.296616792678833
    4. ' for' → logprob: -2.421616792678833
    5. '   ' → logprob: -3.796616792678833
    6. '([' → logprob: -4.921617031097412
    7. '(n' → logprob: -5.921617031097412
    8. '(N' → logprob: -5.921617031097412
    9. ' (' → logprob: -6.296617031097412
    10. ' [' → logprob: -7.296617031097412

Token 66: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.058842193335294724
    2. 'for' (adapté à ' for') → logprob: -3.558842182159424
    3. ' for' → logprob: -4.308842182159424
    4. ' [' → logprob: -4.308842182159424
    5. '[[' → logprob: -7.433842182159424
    6. '0' → logprob: -7.558842182159424
    7. '[n' → logprob: -8.683842658996582
    8. ' [[' → logprob: -9.433842658996582
    9. 'DP' → logprob: -9.683842658996582
    10. 'dp' → logprob: -9.933842658996582

Token 67: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03702889755368233
    2. 'i' → logprob: -3.6620287895202637
    3. ' _' → logprob: -4.912028789520264
    4. '_' → logprob: -6.037028789520264
    5. ' ' → logprob: -7.787028789520264
    6. ' range' → logprob: -8.787029266357422
    7. '_i' → logprob: -9.287029266357422
    8. ' a' → logprob: -9.662029266357422
    9. 'range' → logprob: -10.037029266357422
    10. ' in' → logprob: -10.912029266357422

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022000549361109734
    2. 'in' → logprob: -3.897000551223755
    3. ' ' → logprob: -6.647000312805176
    4. 'n' → logprob: -9.772000312805176
    5. ',' → logprob: -10.772000312805176
    6. ' i' → logprob: -11.022000312805176
    7. '  ' → logprob: -11.397000312805176
    8. '	in' → logprob: -11.397000312805176
    9. '   ' → logprob: -11.772000312805176
    10. '_' → logprob: -12.147000312805176

Token 69: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02977270446717739
    2. ' range' → logprob: -3.5297727584838867
    3. ' ' → logprob: -11.154772758483887
    4. 'A' → logprob: -13.029772758483887
    5. '  ' → logprob: -13.154772758483887
    6. '   ' → logprob: -13.154772758483887
    7. '	range' → logprob: -14.154772758483887
    8. '(range' → logprob: -15.029772758483887
    9. ')' → logprob: -15.654772758483887
    10. ' A' → logprob: -15.779772758483887

Token 70: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.07904918491840363
    2. '(' → logprob: -2.5790491104125977
    3. '(len' → logprob: -8.829049110412598
    4. '(n' → logprob: -11.829049110412598
    5. '(i' → logprob: -13.204049110412598
    6. ' (' → logprob: -13.204049110412598
    7. '(A' → logprob: -14.579049110412598
    8. '   ' → logprob: -15.454049110412598
    9. '((' → logprob: -15.579049110412598
    10. '(s' → logprob: -15.579049110412598

Token 71: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004826919175684452
    2. ' N' → logprob: -5.37982702255249
    3. '   ' → logprob: -9.004826545715332
    4. '(N' → logprob: -10.129826545715332
    5. '1' → logprob: -10.254826545715332
    6. ' ' → logprob: -13.129826545715332
    7. '(' → logprob: -13.254826545715332
    8. 'len' → logprob: -13.379826545715332
    9. '	N' → logprob: -14.004826545715332
    10. '0' → logprob: -14.504826545715332

Token 72: ' **' (ID: 6240)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16055971384048462
    2. ' ,' → logprob: -2.16055965423584
    3. ',N' → logprob: -4.16055965423584
    4. '):' → logprob: -5.16055965423584
    5. '*N' → logprob: -5.53555965423584
    6. '**' → logprob: -5.78555965423584
    7. ' *' → logprob: -6.66055965423584
    8. '):
' → logprob: -7.03555965423584
    9. '*' → logprob: -7.41055965423584
    10. '   ' → logprob: -7.66055965423584

Token 73: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0003309361054562032
    2. ' N' → logprob: -8.375330924987793
    3. '(N' → logprob: -10.750330924987793
    4. '20' → logprob: -10.875330924987793
    5. 'i' → logprob: -11.500330924987793
    6. '10' → logprob: -12.000330924987793
    7. '16' → logprob: -12.250330924987793
    8. '   ' → logprob: -12.375330924987793
    9. ' ' → logprob: -12.375330924987793
    10. '(' → logprob: -12.375330924987793

Token 74: '20' (ID: 455)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.873571692267433e-05
    2. '20' → logprob: -10.250068664550781
    3. ' N' → logprob: -12.250068664550781
    4. '10' → logprob: -12.250068664550781
    5. '16' → logprob: -12.625068664550781
    6. '(N' → logprob: -12.750068664550781
    7. '17' → logprob: -12.875068664550781
    8. '9' → logprob: -13.000068664550781
    9. 'i' → logprob: -13.000068664550781
    10. '15' → logprob: -13.625068664550781

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006210323888808489
    2. ' ):' → logprob: -5.1312103271484375
    3. '):
' → logprob: -9.131210327148438
    4. ')' → logprob: -9.131210327148438
    5. ':' → logprob: -10.381210327148438
    6. '   ' → logprob: -11.631210327148438
    7. '):
' → logprob: -11.881210327148438
    8. ' ' → logprob: -12.256210327148438
    9. ' )' → logprob: -12.506210327148438
    10. '():' → logprob: -12.506210327148438

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.009246826171875
    2. ' ' → logprob: -1.509246826171875
    3. '   ' → logprob: -1.884246826171875
    4. '    ' → logprob: -2.009246826171875
    5. '[' → logprob: -2.634246826171875
    6. ' [' → logprob: -3.259246826171875
    7. '0' → logprob: -5.009246826171875
    8. ',' → logprob: -6.259246826171875
    9. '<|end|>' → logprob: -6.259246826171875
    10. '     ' → logprob: -6.509246826171875

Token 77: ' DP' (ID: 51992)
  Prédit: ' DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' DP' → logprob: -0.23752398788928986
    2. '0' → logprob: -2.7375240325927734
    3. ' ' → logprob: -2.7375240325927734
    4. 'DP' (adapté à ' DP') → logprob: -2.8625240325927734
    5. ' [' → logprob: -4.987524032592773
    6. '[' → logprob: -5.112524032592773
    7. '   ' → logprob: -5.112524032592773
    8. '    ' → logprob: -5.987524032592773
    9. '       ' → logprob: -6.237524032592773
    10. '_DP' → logprob: -7.737524032592773

Token 78: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004765576682984829
    2. '.' → logprob: -5.629765510559082
    3. '=' → logprob: -7.004765510559082
    4. ' =' → logprob: -9.254765510559082
    5. '.extend' → logprob: -9.754765510559082
    6. ' .' → logprob: -10.254765510559082
    7. 'append' → logprob: -10.879765510559082
    8. ' ' → logprob: -11.879765510559082
    9. '.=' → logprob: -12.004765510559082
    10. '+=' → logprob: -12.379765510559082

Token 79: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003092631697654724
    2. '([' → logprob: -6.2530927658081055
    3. '(-' → logprob: -7.3780927658081055
    4. '0' → logprob: -8.128092765808105
    5. '(False' → logprob: -9.253092765808105
    6. '(None' → logprob: -9.503092765808105
    7. '((' → logprob: -11.003092765808105
    8. '([]' → logprob: -11.128092765808105
    9. ' (' → logprob: -11.753092765808105
    10. '(float' → logprob: -11.878092765808105

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026946745347231627
    2. 'False' → logprob: -6.877694606781006
    3. '-' → logprob: -7.127694606781006
    4. '[' → logprob: -8.127695083618164
    5. 'mod' → logprob: -8.252695083618164
    6. 'float' → logprob: -8.752695083618164
    7. ' ' → logprob: -10.127695083618164
    8. '(' → logprob: -10.377695083618164
    9. '1' → logprob: -11.502695083618164
    10. '[]' → logprob: -11.877695083618164

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015357013791799545
    2. ']' → logprob: -4.39035701751709
    3. ']*' → logprob: -6.01535701751709
    4. ' ,' → logprob: -8.14035701751709
    5. ' for' → logprob: -10.01535701751709
    6. ' ]' → logprob: -10.39035701751709
    7. ']*(' → logprob: -11.01535701751709
    8. '])' → logprob: -11.76535701751709
    9. ' ' → logprob: -13.26535701751709
    10. '  ' → logprob: -13.51535701751709

Token 82: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07131294161081314
    2. ' ' → logprob: -2.69631290435791
    3. '1' → logprob: -6.82131290435791
    4. 'i' → logprob: -10.07131290435791
    5. ']' → logprob: -10.32131290435791
    6. 'False' → logprob: -10.50881290435791
    7. ' i' → logprob: -10.63381290435791
    8. '])' → logprob: -11.07131290435791
    9. '7' → logprob: -11.19631290435791
    10. 'mod' → logprob: -11.19631290435791

Token 83: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022185342386364937
    2. '1' → logprob: -6.252218723297119
    3. ' ' → logprob: -8.502218246459961
    4. 'i' → logprob: -10.877218246459961
    5. '-' → logprob: -11.252218246459961
    6. '7' → logprob: -11.752218246459961
    7. 'mod' → logprob: -11.752218246459961
    8. ']' → logprob: -12.127218246459961
    9. '2' → logprob: -12.252218246459961
    10. '(' → logprob: -12.814718246459961

Token 84: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.018331732600927353
    2. ',' → logprob: -4.643331527709961
    3. '0' → logprob: -5.643331527709961
    4. ']' → logprob: -6.393331527709961
    5. ')' → logprob: -7.268331527709961
    6. '000' → logprob: -7.643331527709961
    7. ' ])' → logprob: -7.768331527709961
    8. '00' → logprob: -7.893331527709961
    9. '1' → logprob: -8.143331527709961
    10. '<<' → logprob: -8.893331527709961

Token 85: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' memo' (ID: 46393)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8136907815933228
    2. '0' → logprob: -0.9386907815933228
    3. '[' → logprob: -2.188690662384033
    4. '<|end|>' → logprob: -3.813690662384033
    5. '   ' → logprob: -4.063690662384033
    6. ')' → logprob: -4.813690662384033
    7. '  ' → logprob: -6.063690662384033
    8. ',' → logprob: -7.188690662384033
    9. '    ' → logprob: -7.563690662384033
    10. '<|end|>' → logprob: -8.063691139221191

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9184591174125671
    2. '[' → logprob: -1.043459177017212
    3. '=' → logprob: -1.543459177017212
    4. '[i' → logprob: -4.918458938598633
    5. '.setdefault' → logprob: -5.168458938598633
    6. '=[]' → logprob: -5.168458938598633
    7. '[]' → logprob: -5.793458938598633
    8. '.append' → logprob: -6.293458938598633
    9. ']' → logprob: -6.543458938598633
    10. '_' → logprob: -6.668458938598633

Token 88: ' [' (ID: 723)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.1301318109035492
    2. ' [' → logprob: -2.630131721496582
    3. '{}' → logprob: -3.130131721496582
    4. '[' → logprob: -6.005131721496582
    5. ' [[' → logprob: -6.630131721496582
    6. ' {' → logprob: -7.005131721496582
    7. ' [{}' → logprob: -7.755131721496582
    8. ' ' → logprob: -8.005131721496582
    9. ' []' → logprob: -8.130131721496582
    10. ' [[]' → logprob: -8.755131721496582

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8975626826286316
    2. '-' → logprob: -1.1475627422332764
    3. '[' → logprob: -1.5225627422332764
    4. '[-' → logprob: -3.0225627422332764
    5. 'False' → logprob: -6.147562503814697
    6. ' ' → logprob: -6.772562503814697
    7. ' [' → logprob: -6.897562503814697
    8. 'None' → logprob: -7.147562503814697
    9. '[]' → logprob: -7.272562503814697
    10. ' -' → logprob: -7.397562503814697

Token 90: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12129795551300049
    2. ',' → logprob: -2.246297836303711
    3. ']*' → logprob: -5.496297836303711
    4. ' for' → logprob: -5.996297836303711
    5. ']*(' → logprob: -6.871297836303711
    6. ' ]' → logprob: -7.246297836303711
    7. 'for' → logprob: -10.371297836303711
    8. '0' → logprob: -10.871297836303711
    9. ' ,' → logprob: -11.621297836303711
    10. '   ' → logprob: -11.621297836303711

Token 91: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4140632152557373
    2. '<|end|>' → logprob: -1.6640632152557373
    3. ' for' → logprob: -3.0390632152557373
    4. '0' → logprob: -3.2890632152557373
    5. ']' → logprob: -4.164063453674316
    6. '*' → logprob: -4.289063453674316
    7. ' *' → logprob: -4.664063453674316
    8. ' ' → logprob: -5.164063453674316
    9. 'for' → logprob: -5.539063453674316
    10. '<|end|>' → logprob: -5.664063453674316

Token 92: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04058913514018059
    2. 'N' → logprob: -3.6655890941619873
    3. '20' → logprob: -5.290589332580566
    4. '(N' → logprob: -5.415589332580566
    5. ' (' → logprob: -6.665589332580566
    6. '104' → logprob: -6.790589332580566
    7. '2' → logprob: -7.415589332580566
    8. '21' → logprob: -7.665589332580566
    9. '102' → logprob: -7.915589332580566
    10. ' ' → logprob: -8.290589332580566

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9025316834449768
    2. 'N' → logprob: -1.152531623840332
    3. '(' → logprob: -2.277531623840332
    4. '20' → logprob: -2.277531623840332
    5. '104' → logprob: -3.652531623840332
    6. ' ' → logprob: -4.652531623840332
    7. '10' → logprob: -4.777531623840332
    8. '100' → logprob: -4.777531623840332
    9. '21' → logprob: -4.902531623840332
    10. '102' → logprob: -5.277531623840332

Token 94: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.08170730620622635
    2. ' **' → logprob: -2.581707239151001
    3. '20' → logprob: -5.95670747756958
    4. '*' → logprob: -9.206707000732422
    5. ' ' → logprob: -9.956707000732422
    6. '^' → logprob: -10.706707000732422
    7. '0' → logprob: -10.706707000732422
    8. ' *' → logprob: -11.081707000732422
    9. '21' → logprob: -12.706707000732422
    10. '000' → logprob: -12.706707000732422

Token 95: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -4.167648876318708e-05
    2. ' ' → logprob: -10.125041961669922
    3. '10' → logprob: -14.500041961669922
    4. '21' → logprob: -15.250041961669922
    5. '(' → logprob: -15.375041961669922
    6. '19' → logprob: -15.750041961669922
    7. '２０' → logprob: -16.312541961669922
    8. '   ' → logprob: -16.312541961669922
    9. '0' → logprob: -16.437541961669922
    10. '15' → logprob: -16.687541961669922

Token 96: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -6.2729995988775045e-06
    2. '10' → logprob: -13.000006675720215
    3. '2' → logprob: -13.875006675720215
    4. ' ' → logprob: -14.125006675720215
    5. '19' → logprob: -14.750006675720215
    6. '21' → logprob: -14.875006675720215
    7. '0' → logprob: -15.000006675720215
    8. '15' → logprob: -15.312506675720215
    9. '17' → logprob: -15.625006675720215
    10. '1' → logprob: -15.937506675720215

Token 97: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ' )' → logprob: -12.875006675720215
    3. ')
' → logprob: -13.250006675720215
    4. '))' → logprob: -13.500006675720215
    5. '+' → logprob: -15.500006675720215
    6. '   ' → logprob: -15.875006675720215
    7. '1' → logprob: -16.12500762939453
    8. ']' → logprob: -16.25000762939453
    9. '),' → logprob: -16.25000762939453
    10. ')

' → logprob: -16.25000762939453

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10435811430215836
    2. '
' → logprob: -2.854358196258545
    3. '<|end|>' → logprob: -3.979358196258545
    4. '    
' → logprob: -4.604358196258545
    5. ' for' → logprob: -5.104358196258545
    6. 'for' → logprob: -5.729358196258545
    7. ' ' → logprob: -6.729358196258545
    8. ' 
' → logprob: -7.479358196258545
    9. '  
' → logprob: -7.729358196258545
    10. '```' → logprob: -8.354357719421387

Token 99: ' cumulative' (ID: 75628)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4680558443069458
    2. 'for' → logprob: -1.5930558443069458
    3. ' for' → logprob: -1.9680558443069458
    4. ' ' → logprob: -4.843055725097656
    5. '<|end|>' → logprob: -4.968055725097656
    6. '    
' → logprob: -5.093055725097656
    7. '
' → logprob: -5.093055725097656
    8. ' 
' → logprob: -6.843055725097656
    9. '  
' → logprob: -7.593055725097656
    10. '  ' → logprob: -7.718055725097656

Token 100: '_x' (ID: 7054)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3083747327327728
    2. '_' → logprob: -1.5583747625350952
    3. ' =' → logprob: -3.3083746433258057
    4. '=' → logprob: -4.558374881744385
    5. '_count' → logprob: -5.683374881744385
    6. '_s' → logprob: -6.683374881744385
    7. 'sum' → logprob: -7.058374881744385
    8. '_x' → logprob: -7.808374881744385
    9. '_counts' → logprob: -8.308374404907227
    10. '_dp' → logprob: -8.308374404907227

Token 101: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00034952821442857385
    2. '_or' → logprob: -8.750349998474121
    3. 'ors' → logprob: -9.625349998474121
    4. '=' → logprob: -10.500349998474121
    5. ' =' → logprob: -10.750349998474121
    6. 'OR' → logprob: -11.250349998474121
    7. 'o' → logprob: -11.375349998474121
    8. '_' → logprob: -11.375349998474121
    9. '   ' → logprob: -11.625349998474121
    10. '_x' → logprob: -11.875349998474121

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059906551614403725
    2. '=' → logprob: -5.130990505218506
    3. ' ' → logprob: -9.755990982055664
    4. '  ' → logprob: -13.880990982055664
    5. '   ' → logprob: -14.005990982055664
    6. ',' → logprob: -14.505990982055664
    7. '_' → logprob: -14.755990982055664
    8. ' ' → logprob: -15.130990982055664
    9. 's' → logprob: -15.255990982055664
    10. ' ^=' → logprob: -15.380990982055664

Token 103: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1128348708152771
    2. ' ' → logprob: -2.237834930419922
    3. '   ' → logprob: -12.487834930419922
    4. ' [' → logprob: -12.737834930419922
    5. '[' → logprob: -12.987834930419922
    6. ' ' → logprob: -13.987834930419922
    7. '[]' → logprob: -14.237834930419922
    8. '  ' → logprob: -14.550334930419922
    9. ' A' → logprob: -14.925334930419922
    10. 'A' → logprob: -15.300334930419922

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006310671451501548
    2. ' ' → logprob: -7.375630855560303
    3. '[' → logprob: -12.750631332397461
    4. 'A' → logprob: -14.500631332397461
    5. '000' → logprob: -15.125631332397461
    6. '[]' → logprob: -15.125631332397461
    7. '   ' → logprob: -15.375631332397461
    8. ' [' → logprob: -16.00063133239746
    9. ' A' → logprob: -16.87563133239746
    10. '00' → logprob: -17.43813133239746

Token 105: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05501294881105423
    2. '<|end|>' → logprob: -3.4300129413604736
    3. '
' → logprob: -4.430013179779053
    4. '    
' → logprob: -5.055013179779053
    5. '\n' → logprob: -7.055013179779053
    6. '<|end|>' → logprob: -7.680013179779053
    7. ' for' → logprob: -8.305012702941895
    8. '    ' → logprob: -8.680012702941895
    9. ')' → logprob: -8.805012702941895
    10. ' ' → logprob: -8.930012702941895

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08648233115673065
    2. '<|end|>' → logprob: -2.836482286453247
    3. ' ' → logprob: -4.711482524871826
    4. '
' → logprob: -4.961482524871826
    5. '    
' → logprob: -6.086482524871826
    6. '\n' → logprob: -6.211482524871826
    7. ' for' → logprob: -7.336482524871826
    8. '  ' → logprob: -7.586482524871826
    9. '    ' → logprob: -7.711482524871826
    10. '  
' → logprob: -7.836482524871826

Token 107: ' zeros' (ID: 42274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7012879848480225
    2. ' for' → logprob: -1.2012879848480225
    3. 'for' → logprob: -1.8262879848480225
    4. ' ' → logprob: -4.201288223266602
    5. '<|end|>' → logprob: -4.201288223266602
    6. '\n' → logprob: -5.076288223266602
    7. '	for' → logprob: -6.576288223266602
    8. '
' → logprob: -7.201288223266602
    9. '    ' → logprob: -7.451288223266602
    10. '  ' → logprob: -7.451288223266602

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05343140661716461
    2. '_count' → logprob: -3.553431510925293
    3. '=' → logprob: -3.803431510925293
    4. 'count' → logprob: -7.803431510925293
    5. ',' → logprob: -8.303431510925293
    6. ' ' → logprob: -8.678431510925293
    7. 'Count' → logprob: -10.178431510925293
    8. '_counts' → logprob: -10.178431510925293
    9. '_cnt' → logprob: -10.428431510925293
    10. '_' → logprob: -10.428431510925293

Token 109: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5918475985527039
    2. ' ' → logprob: -0.8418475985527039
    3. '1' → logprob: -4.7168474197387695
    4. ' N' → logprob: -5.2168474197387695
    5. 'N' → logprob: -6.9668474197387695
    6. ' [' → logprob: -8.46684741973877
    7. '[' → logprob: -9.21684741973877
    8. '[N' → logprob: -10.59184741973877
    9. '[]' → logprob: -10.96684741973877
    10. ' A' → logprob: -11.15434741973877

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07062225788831711
    2. '1' → logprob: -2.820622205734253
    3. ' ' → logprob: -5.320622444152832
    4. 'N' → logprob: -6.320622444152832
    5. '[' → logprob: -6.945622444152832
    6. '[]' → logprob: -8.070622444152832
    7. 'DP' → logprob: -9.445622444152832
    8. '[N' → logprob: -9.445622444152832
    9. 'int' → logprob: -10.070622444152832
    10. ' N' → logprob: -10.070622444152832

Token 111: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0707896500825882
    2. '<|end|>' → logprob: -3.1957895755767822
    3. '
' → logprob: -3.8207895755767822
    4. '    
' → logprob: -6.070789813995361
    5. ' ' → logprob: -6.820789813995361
    6. '<|end|>' → logprob: -7.570789813995361
    7. ')' → logprob: -8.320789337158203
    8. ' 
' → logprob: -8.320789337158203
    9. ' for' → logprob: -8.445789337158203
    10. ':' → logprob: -8.820789337158203

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18399947881698608
    2. ' for' → logprob: -2.058999538421631
    3. 'for' → logprob: -3.683999538421631
    4. '<|end|>' → logprob: -4.808999538421631
    5. '
' → logprob: -5.433999538421631
    6. ' ' → logprob: -6.683999538421631
    7. '	for' → logprob: -7.433999538421631
    8. '    
' → logprob: -8.433999061584473
    9. '    ' → logprob: -8.808999061584473
    10. '  ' → logprob: -9.058999061584473

Token 113: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3288997709751129
    2. ' for' → logprob: -1.4538997411727905
    3. '   ' → logprob: -3.07889986038208
    4. ')' → logprob: -8.578899383544922
    5. ' ' → logprob: -8.953899383544922
    6. '    ' → logprob: -9.203899383544922
    7. '<|end|>' → logprob: -9.703899383544922
    8. 'i' → logprob: -10.453899383544922
    9. '	for' → logprob: -10.453899383544922
    10. '  ' → logprob: -10.828899383544922

Token 114: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2229064404964447
    2. ' a' → logprob: -2.2229063510894775
    3. 'i' → logprob: -2.8479063510894775
    4. 'a' → logprob: -4.347906589508057
    5. ' A' → logprob: -4.722906589508057
    6. 'A' → logprob: -5.347906589508057
    7. ' num' → logprob: -5.972906589508057
    8. ' x' → logprob: -6.972906589508057
    9. 'num' → logprob: -7.472906589508057
    10. ' v' → logprob: -7.722906589508057

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18010848760604858
    2. 'in' → logprob: -1.8051085472106934
    3. ',' → logprob: -8.305108070373535
    4. ' ' → logprob: -9.555108070373535
    5. '   ' → logprob: -11.555108070373535
    6. 'import' → logprob: -12.305108070373535
    7. '  ' → logprob: -12.555108070373535
    8. 'range' → logprob: -12.680108070373535
    9. ' ,' → logprob: -12.805108070373535
    10. 'n' → logprob: -12.805108070373535

Token 116: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2817796468734741
    2. 'range' → logprob: -1.4067796468734741
    3. 'A' → logprob: -7.656779766082764
    4. ' A' → logprob: -9.031779289245605
    5. ' ' → logprob: -11.031779289245605
    6. '   ' → logprob: -11.406779289245605
    7. '  ' → logprob: -12.531779289245605
    8. '(range' → logprob: -13.406779289245605
    9. 'r' → logprob: -14.156779289245605
    10. '	range' → logprob: -14.281779289245605

Token 117: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.005316769704222679
    2. '(' → logprob: -5.255316734313965
    3. '(len' → logprob: -9.630316734313965
    4. '(n' → logprob: -11.755316734313965
    5. ' (' → logprob: -12.880316734313965
    6. '   ' → logprob: -13.130316734313965
    7. 'N' → logprob: -13.130316734313965
    8. '(A' → logprob: -14.380316734313965
    9. '(
' → logprob: -15.130316734313965
    10. '(i' → logprob: -15.255316734313965

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0058448887430131435
    2. '):
' → logprob: -5.255845069885254
    3. ' ):' → logprob: -7.630845069885254
    4. ')' → logprob: -9.505845069885254
    5. ':' → logprob: -10.505845069885254
    6. '   ' → logprob: -11.005845069885254
    7. '):
' → logprob: -13.130845069885254
    8. ' ):
' → logprob: -13.255845069885254
    9. '+' → logprob: -14.255845069885254
    10. '():' → logprob: -14.505845069885254

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010107356123626232
    2. '   ' → logprob: -5.760107517242432
    3. ' ' → logprob: -6.135107517242432
    4. '    ' → logprob: -6.135107517242432
    5. '        
' → logprob: -7.635107517242432
    6. '     ' → logprob: -7.885107517242432
    7. ',' → logprob: -7.885107517242432
    8. '<|end|>' → logprob: -8.260107040405273
    9. ' 
' → logprob: -8.510107040405273
    10. '      ' → logprob: -8.635107040405273

Token 120: ' cumulative' (ID: 75628)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7784941792488098
    2. 'x' → logprob: -1.528494119644165
    3. ' cumulative' → logprob: -2.028494119644165
    4. ' a' → logprob: -3.153494119644165
    5. '       ' → logprob: -3.278494119644165
    6. 'c' → logprob: -3.778494119644165
    7. ' val' → logprob: -4.028494358062744
    8. 'a' → logprob: -4.153494358062744
    9. '   ' → logprob: -4.778494358062744
    10. ' A' → logprob: -5.153494358062744

Token 121: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.01307940948754549
    2. '_' → logprob: -4.638079643249512
    3. ' ^=' → logprob: -5.888079643249512
    4. ' ^' → logprob: -8.638079643249512
    5. '_^' → logprob: -8.763079643249512
    6. '^' → logprob: -8.888079643249512
    7. ' _' → logprob: -10.388079643249512
    8. ' ' → logprob: -11.388079643249512
    9. 'xor' → logprob: -11.763079643249512
    10. ' =' → logprob: -12.263079643249512

Token 122: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0010617482475936413
    2. '^' → logprob: -8.00106143951416
    3. '_or' → logprob: -8.12606143951416
    4. 'xor' → logprob: -8.25106143951416
    5. '=' → logprob: -9.62606143951416
    6. '_' → logprob: -10.50106143951416
    7. '   ' → logprob: -11.50106143951416
    8. '_x' → logprob: -11.62606143951416
    9. 'ors' → logprob: -12.12606143951416
    10. ' =' → logprob: -12.37606143951416

Token 123: ' =' (ID: 314)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.164747953414917
    2. '^' → logprob: -1.914747953414917
    3. '=' → logprob: -5.414748191833496
    4. ' =' → logprob: -9.789748191833496
    5. ' ^' → logprob: -13.164748191833496
    6. ' <<=' → logprob: -13.789748191833496
    7. '+=' → logprob: -14.289748191833496
    8. ' ' → logprob: -14.664748191833496
    9. '^)' → logprob: -14.664748191833496
    10. '^^' → logprob: -14.789748191833496

Token 124: ' cumulative' (ID: 75628)
  Prédit: ' cumulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cumulative' → logprob: -0.1430312544107437
    2. 'c' → logprob: -2.018031358718872
    3. ' (' → logprob: -9.393031120300293
    4. '(c' → logprob: -9.518031120300293
    5. ' c' → logprob: -9.643031120300293
    6. 'A' → logprob: -9.893031120300293
    7. ' A' → logprob: -10.518031120300293
    8. '0' → logprob: -10.643031120300293
    9. ' ' → logprob: -11.518031120300293
    10. '(' → logprob: -11.768031120300293

Token 125: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.001334763248451054
    2. 'xor' → logprob: -6.6263346672058105
    3. 'x' → logprob: -12.501335144042969
    4. 'import' → logprob: -13.751335144042969
    5. '^' → logprob: -14.001335144042969
    6. '_' → logprob: -14.126335144042969
    7. ' ^=' → logprob: -14.501335144042969
    8. '_^' → logprob: -15.126335144042969
    9. ' ^' → logprob: -15.376335144042969
    10. ' xor' → logprob: -16.00133514404297

Token 126: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.10224859416484833
    2. 'xor' → logprob: -2.3522486686706543
    3. 'r' → logprob: -7.102248668670654
    4. '_x' → logprob: -7.477248668670654
    5. 'x' → logprob: -8.352248191833496
    6. '^' → logprob: -9.477248191833496
    7. 'orl' → logprob: -9.727248191833496
    8. 'OR' → logprob: -10.102248191833496
    9. '_or' → logprob: -10.227248191833496
    10. 'nor' → logprob: -10.727248191833496

Token 127: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.1270001232624054
    2. ' ^' → logprob: -2.127000093460083
    3. ' ' → logprob: -10.251999855041504
    4. ' ^=' → logprob: -11.251999855041504
    5. ' ' → logprob: -11.626999855041504
    6. ' xor' → logprob: -12.126999855041504
    7. '[' → logprob: -12.626999855041504
    8. '^(' → logprob: -13.876999855041504
    9. '"' → logprob: -14.251999855041504
    10. '1' → logprob: -14.251999855041504

Token 128: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00018125296628568321
    2. ' A' → logprob: -8.625181198120117
    3. '   ' → logprob: -13.375181198120117
    4. ' ' → logprob: -18.000181198120117
    5. 'a' → logprob: -18.250181198120117
    6. '	A' → logprob: -18.250181198120117
    7. '(A' → logprob: -18.500181198120117
    8. '  ' → logprob: -19.250181198120117
    9. '       ' → logprob: -19.500181198120117
    10. 'i' → logprob: -19.500181198120117

Token 129: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006721417419612408
    2. '[' → logprob: -5.006721496582031
    3. '[
' → logprob: -13.506721496582031
    4. '[A' → logprob: -13.631721496582031
    5. ' [' → logprob: -14.131721496582031
    6. '[I' → logprob: -14.381721496582031
    7. '```' → logprob: -14.756721496582031
    8. '[j' → logprob: -15.506721496582031
    9. 'i' → logprob: -15.631721496582031
    10. '[N' → logprob: -15.881721496582031

Token 130: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15394151210784912
    2. ']' → logprob: -2.1539416313171387
    3. '       ' → logprob: -4.653941631317139
    4. '])' → logprob: -4.778941631317139
    5. ')]' → logprob: -5.028941631317139
    6. ')
' → logprob: -6.778941631317139
    7. ' )' → logprob: -7.528941631317139
    8. ' ]' → logprob: -8.90394115447998
    9. ']
' → logprob: -9.52894115447998
    10. '[' → logprob: -9.65394115447998

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011652464047074318
    2. '   ' → logprob: -4.88665246963501
    3. ' for' → logprob: -6.51165246963501
    4. '[' → logprob: -7.38665246963501
    5. '
' → logprob: -7.76165246963501
    6. 'for' → logprob: -8.136651992797852
    7. ' if' → logprob: -8.261651992797852
    8. '```' → logprob: -8.386651992797852
    9. '        
' → logprob: -8.511651992797852
    10. '<|end|>' → logprob: -9.261651992797852

Token 132: ' if' (ID: 538)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.8099411129951477
    2. 'for' → logprob: -1.934941053390503
    3. 'zeros' → logprob: -1.934941053390503
    4. 'DP' → logprob: -2.309941053390503
    5. 'if' (adapté à ' if') → logprob: -2.434941053390503
    6. 'count' → logprob: -4.184941291809082
    7. '   ' → logprob: -4.309941291809082
    8. '       ' → logprob: -4.934941291809082
    9. 'dp' → logprob: -5.309941291809082
    10. '#' → logprob: -5.434941291809082

Token 133: ' cumulative' (ID: 75628)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7717460989952087
    2. 'A' → logprob: -1.1467461585998535
    3. ' A' → logprob: -2.1467461585998535
    4. ' cumulative' → logprob: -2.3967461585998535
    5. ' DP' → logprob: -5.7717461585998535
    6. ' c' → logprob: -5.8967461585998535
    7. 'DP' → logprob: -6.6467461585998535
    8. '   ' → logprob: -6.6467461585998535
    9. ' ' → logprob: -7.3967461585998535
    10. ' not' → logprob: -7.7717461585998535

Token 134: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.0683535037969705e-05
    2. '_' → logprob: -11.75001049041748
    3. '==' → logprob: -13.75001049041748
    4. 'xor' → logprob: -13.87501049041748
    5. '=' → logprob: -16.000011444091797
    6. ' ==' → logprob: -16.375011444091797
    7. '```' → logprob: -17.000011444091797
    8. '_
' → logprob: -17.000011444091797
    9. '===' → logprob: -17.250011444091797
    10. '__' → logprob: -17.250011444091797

Token 135: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.53536456823349
    2. 'xor' → logprob: -0.91036456823349
    3. '_x' → logprob: -5.535364627838135
    4. 'ors' → logprob: -5.910364627838135
    5. '==' → logprob: -6.660364627838135
    6. 'ox' → logprob: -6.785364627838135
    7. 'x' → logprob: -6.910364627838135
    8. '=' → logprob: -8.035364151000977
    9. '   ' → logprob: -8.410364151000977
    10. 'orr' → logprob: -8.785364151000977

Token 136: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6370338201522827
    2. ' ==' → logprob: -0.7620338201522827
    3. ' in' → logprob: -6.262033939361572
    4. '<' → logprob: -6.762033939361572
    5. ' <' → logprob: -7.637033939361572
    6. ' not' → logprob: -8.137033462524414
    7. '>=' → logprob: -9.012033462524414
    8. ' >=' → logprob: -9.262033462524414
    9. 'in' → logprob: -9.637033462524414
    10. '[' → logprob: -9.762033462524414

Token 137: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006716674659401178
    2. ' ' → logprob: -5.006716728210449
    3. ' zeros' → logprob: -14.25671672821045
    4. 'zeros' → logprob: -15.00671672821045
    5. '1' → logprob: -16.131715774536133
    6. '   ' → logprob: -16.381715774536133
    7. '  ' → logprob: -17.506715774536133
    8. ' zero' → logprob: -17.631715774536133
    9. ' ' → logprob: -17.694215774536133
    10. 'zero' → logprob: -17.944215774536133

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001612267515156418
    2. ' ' → logprob: -8.750161170959473
    3. 'zeros' → logprob: -13.000161170959473
    4. ' zeros' → logprob: -15.750161170959473
    5. '   ' → logprob: -16.25016212463379
    6. '1' → logprob: -16.75016212463379
    7. '000' → logprob: -17.25016212463379
    8. 'zero' → logprob: -17.31266212463379
    9. '  ' → logprob: -18.06266212463379
    10. 'i' → logprob: -18.12516212463379

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02647550217807293
    2. ':
' → logprob: -3.651475429534912
    3. '       ' → logprob: -8.77647590637207
    4. ' or' → logprob: -11.90147590637207
    5. ' and' → logprob: -12.52647590637207
    6. ':
' → logprob: -12.77647590637207
    7. ',' → logprob: -13.27647590637207
    8. '):' → logprob: -13.52647590637207
    9. '   ' → logprob: -13.90147590637207
    10. ':

' → logprob: -14.27647590637207

Token 140: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8877009153366089
    2. ':' → logprob: -1.1377009153366089
    3. ':
' → logprob: -1.3877009153366089
    4. '
' → logprob: -4.387701034545898
    5. '           ' → logprob: -5.762701034545898
    6. '):
' → logprob: -7.387701034545898
    7. ',' → logprob: -7.637701034545898
    8. '   ' → logprob: -8.387701034545898
    9. '<|end|>' → logprob: -8.637701034545898
    10. '):' → logprob: -8.887701034545898

Token 141: ' zeros' (ID: 42274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0206636190414429
    2. 'zeros' (adapté à ' zeros') → logprob: -1.2706636190414429
    3. ' zeros' → logprob: -1.5206636190414429
    4. '           ' → logprob: -2.0206637382507324
    5. '
' → logprob: -5.520663738250732
    6. '               ' → logprob: -6.520663738250732
    7. '0' → logprob: -6.895663738250732
    8. '   ' → logprob: -7.020663738250732
    9. '```' → logprob: -9.770663261413574
    10. '.zeros' → logprob: -10.270663261413574

Token 142: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31338727474212646
    2. '+=' → logprob: -1.3133872747421265
    3. '+' → logprob: -9.688386917114258
    4. '=' → logprob: -10.313386917114258
    5. ' =' → logprob: -11.063386917114258
    6. ']+=' → logprob: -11.313386917114258
    7. '   ' → logprob: -14.813386917114258
    8. ' ' → logprob: -14.938386917114258
    9. ' +' → logprob: -15.188386917114258
    10. '[' → logprob: -15.313386917114258

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002659958554431796
    2. ' ' → logprob: -6.252659797668457
    3. 'DP' → logprob: -7.377659797668457
    4. 'i' → logprob: -9.752659797668457
    5. ' DP' → logprob: -10.377659797668457
    6. ' i' → logprob: -11.877659797668457
    7. '   ' → logprob: -12.377659797668457
    8. '(i' → logprob: -13.127659797668457
    9. '0' → logprob: -14.127659797668457
    10. '  ' → logprob: -14.377659797668457

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007509016431868076
    2. 'DP' → logprob: -7.75075101852417
    3. ' ' → logprob: -8.500750541687012
    4. 'i' → logprob: -9.250750541687012
    5. '(i' → logprob: -11.750750541687012
    6. '(' → logprob: -12.750750541687012
    7. ' DP' → logprob: -12.875750541687012
    8. '   ' → logprob: -13.000750541687012
    9. ' i' → logprob: -14.000750541687012
    10. '0' → logprob: -14.375750541687012

Token 145: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7027643322944641
    2. '<|end|>' → logprob: -0.8277643322944641
    3. '       ' → logprob: -2.9527642726898193
    4. '\n' → logprob: -5.577764511108398
    5. '<|end|>' → logprob: -5.702764511108398
    6. '   ' → logprob: -5.827764511108398
    7. ')' → logprob: -6.077764511108398
    8. ' ' → logprob: -7.702764511108398
    9. 'newline' → logprob: -8.077764511108398
    10. '```' → logprob: -8.327764511108398

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035003870725631714
    2. '<|end|>' → logprob: -3.785003900527954
    3. '[' → logprob: -5.035003662109375
    4. '   ' → logprob: -6.285003662109375
    5. ' else' → logprob: -7.535003662109375
    6. ')' → logprob: -8.035003662109375
    7. '```' → logprob: -8.160003662109375
    8. '[]' → logprob: -8.285003662109375
    9. '0' → logprob: -8.285003662109375
    10. '<|end|>' → logprob: -8.410003662109375

Token 147: ' else' (ID: 1203)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5678398013114929
    2. '       ' → logprob: -1.8178398609161377
    3. 'for' → logprob: -2.5678398609161377
    4. '   ' → logprob: -2.6928398609161377
    5. ' else' → logprob: -3.9428398609161377
    6. '[' → logprob: -3.9428398609161377
    7. ' if' → logprob: -4.567839622497559
    8. 'dp' → logprob: -4.942839622497559
    9. 'prev' → logprob: -4.942839622497559
    10. 'else' (adapté à ' else') → logprob: -4.942839622497559

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2528114914894104
    2. ':
' → logprob: -1.5028114318847656
    3. '       ' → logprob: -7.252811431884766
    4. '[' → logprob: -9.627811431884766
    5. '           ' → logprob: -10.252811431884766
    6. ' :
' → logprob: -11.252811431884766
    7. ':

' → logprob: -11.877811431884766
    8. ':
' → logprob: -12.002811431884766
    9. '<|end|>' → logprob: -12.002811431884766
    10. '
' → logprob: -12.252811431884766

Token 149: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.780800461769104
    2. '       ' → logprob: -1.030800461769104
    3. ' if' → logprob: -2.1558003425598145
    4. ' for' → logprob: -3.9058003425598145
    5. 'if' → logprob: -4.1558003425598145
    6. ' dp' → logprob: -5.2808003425598145
    7. '        ' → logprob: -5.5308003425598145
    8. ' memo' → logprob: -5.6558003425598145
    9. 'memo' → logprob: -5.7808003425598145
    10. ' zeros' → logprob: -6.0308003425598145

Token 150: ' temp' (ID: 5484)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.6831660866737366
    2. 'zeros' → logprob: -1.8081660270690918
    3. 'if' → logprob: -2.058166027069092
    4. 'DP' → logprob: -2.183166027069092
    5. 'dp' → logprob: -4.558166027069092
    6. 'for' → logprob: -4.808166027069092
    7. 'idx' → logprob: -4.933166027069092
    8. 'count' → logprob: -4.933166027069092
    9. 'print' → logprob: -5.183166027069092
    10. '   ' → logprob: -5.683166027069092

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12104324251413345
    2. '=' → logprob: -2.6210432052612305
    3. '_dp' → logprob: -4.3710432052612305
    4. '[' → logprob: -4.6210432052612305
    5. '_' → logprob: -4.9960432052612305
    6. '_idx' → logprob: -5.9960432052612305
    7. '_index' → logprob: -6.2460432052612305
    8. '_val' → logprob: -6.6210432052612305
    9. ',' → logprob: -6.9960432052612305
    10. '_count' → logprob: -7.3710432052612305

Token 152: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0941980630159378
    2. 'memo' → logprob: -2.844197988510132
    3. 'c' → logprob: -4.719198226928711
    4. '(' → logprob: -4.719198226928711
    5. '0' → logprob: -5.844198226928711
    6. '(c' → logprob: -5.969198226928711
    7. '[' → logprob: -6.469198226928711
    8. ' DP' → logprob: -6.844198226928711
    9. '(D' → logprob: -7.094198226928711
    10. '1' → logprob: -7.594198226928711

Token 153: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0004240011621732265
    2. '[m' → logprob: -8.0004243850708
    3. '[' → logprob: -9.3754243850708
    4. 'c' → logprob: -13.3754243850708
    5. '[temp' → logprob: -15.1254243850708
    6. '[C' → logprob: -15.1254243850708
    7. 'm' → logprob: -15.2504243850708
    8. '[(' → logprob: -15.3754243850708
    9. '[i' → logprob: -15.3754243850708
    10. '[counter' → logprob: -16.000423431396484

Token 154: 'umulative' (ID: 97729)
  Prédit: 'umulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -0.000859531108289957
    2. 'umul' → logprob: -7.87585973739624
    3. 'um' → logprob: -8.125859260559082
    4. 'c' → logprob: -9.250859260559082
    5. 'uml' → logprob: -10.625859260559082
    6. '[' → logprob: -10.625859260559082
    7. 'om' → logprob: -11.875859260559082
    8. 'ul' → logprob: -12.375859260559082
    9. 'umulate' → logprob: -12.500859260559082
    10. 'umulator' → logprob: -12.500859260559082

Token 155: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.18009164929389954
    2. 'xor' → logprob: -1.8050916194915771
    3. 'x' → logprob: -8.305091857910156
    4. 'or' → logprob: -9.930091857910156
    5. '_' → logprob: -11.805091857910156
    6. '[' → logprob: -12.055091857910156
    7. ' xor' → logprob: -12.805091857910156
    8. '   ' → logprob: -12.805091857910156
    9. '^' → logprob: -13.305091857910156
    10. 'ox' → logprob: -13.305091857910156

Token 156: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.06403379887342453
    2. 'xor' → logprob: -3.1890337467193604
    3. 'r' → logprob: -4.0640339851379395
    4. 'x' → logprob: -6.0640339851379395
    5. '_x' → logprob: -7.8140339851379395
    6. 'c' → logprob: -8.689033508300781
    7. '[' → logprob: -9.189033508300781
    8. 'o' → logprob: -9.439033508300781
    9. ']' → logprob: -10.064033508300781
    10. 'ox' → logprob: -10.189033508300781

Token 157: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006004044320434332
    2. ']' → logprob: -5.3810038566589355
    3. '[' → logprob: -6.6310038566589355
    4. ' ][' → logprob: -10.131004333496094
    5. '][-' → logprob: -11.881004333496094
    6. '][]' → logprob: -13.631004333496094
    7. '0' → logprob: -13.631004333496094
    8. ']

' → logprob: -13.756004333496094
    9. '1' → logprob: -13.943504333496094
    10. '])' → logprob: -14.006004333496094

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14295613765716553
    2. '1' → logprob: -2.017956256866455
    3. ' ' → logprob: -8.392955780029297
    4. '
' → logprob: -10.830455780029297
    5. '(' → logprob: -12.392955780029297
    6. ']' → logprob: -12.517955780029297
    7. '-' → logprob: -12.580455780029297
    8. 'zeros' → logprob: -12.705455780029297
    9. '   ' → logprob: -12.767955780029297
    10. ':' → logprob: -13.017955780029297

Token 159: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00038825106457807124
    2. ' ]' → logprob: -8.625388145446777
    3. ']+' → logprob: -9.000388145446777
    4. ']
' → logprob: -10.750388145446777
    5. ']*' → logprob: -11.250388145446777
    6. ']^' → logprob: -11.875388145446777
    7. '0' → logprob: -12.125388145446777
    8. '^' → logprob: -12.250388145446777
    9. ']

' → logprob: -12.375388145446777
    10. '],' → logprob: -12.375388145446777

Token 160: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6550847887992859
    2. '=' → logprob: -1.1550848484039307
    3. '+' → logprob: -2.7800848484039307
    4. ' =' → logprob: -3.1550848484039307
    5. '0' → logprob: -4.030084609985352
    6. '*' → logprob: -4.405084609985352
    7. ' ,' → logprob: -4.905084609985352
    8. '+=' → logprob: -5.030084609985352
    9. ' +' → logprob: -5.780084609985352
    10. ' +=' → logprob: -5.905084609985352

Token 161: ' (' (ID: 350)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.2741222679615021
    2. '2' → logprob: -1.7741222381591797
    3. 'memo' → logprob: -2.8991222381591797
    4. ' DP' → logprob: -5.14912223815918
    5. 'zeros' → logprob: -5.39912223815918
    6. '(' → logprob: -7.27412223815918
    7. ' ' → logprob: -7.27412223815918
    8. '1' → logprob: -7.39912223815918
    9. ' memo' → logprob: -7.39912223815918
    10. '0' → logprob: -8.14912223815918

Token 162: 'zeros' (ID: 24095)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.27214327454566956
    2. '2' → logprob: -1.8971432447433472
    3. 'memo' → logprob: -2.6471433639526367
    4. ' DP' → logprob: -5.022143363952637
    5. 'zeros' → logprob: -5.022143363952637
    6. ' ' → logprob: -6.772143363952637
    7. ' memo' → logprob: -6.897143363952637
    8. '(' → logprob: -8.147143363952637
    9. '1' → logprob: -8.959643363952637
    10. '_DP' → logprob: -9.022143363952637

Token 163: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10117612034082413
    2. ' +' → logprob: -2.3511760234832764
    3. '%' → logprob: -7.2261762619018555
    4. ')' → logprob: -9.226176261901855
    5. '+
' → logprob: -9.851176261901855
    6. ' %' → logprob: -10.851176261901855
    7. ')+' → logprob: -11.101176261901855
    8. ' +
' → logprob: -11.601176261901855
    9. '   ' → logprob: -11.726176261901855
    10. '    ' → logprob: -12.101176261901855

Token 164: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.37930044531822205
    2. ' memo' → logprob: -2.254300355911255
    3. 'DP' → logprob: -2.379300355911255
    4. ' DP' → logprob: -2.754300355911255
    5. '   ' → logprob: -3.504300355911255
    6. '1' → logprob: -4.004300594329834
    7. ' ' → logprob: -6.129300594329834
    8. '  ' → logprob: -6.504300594329834
    9. 'mem' → logprob: -7.254300594329834
    10. '    ' → logprob: -7.754300594329834

Token 165: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0001999642699956894
    2. '[' → logprob: -8.625200271606445
    3. '[A' → logprob: -12.000200271606445
    4. 'c' → logprob: -12.750200271606445
    5. ')' → logprob: -13.750200271606445
    6. ' [' → logprob: -13.875200271606445
    7. '[i' → logprob: -13.875200271606445
    8. 'A' → logprob: -14.000200271606445
    9. '[D' → logprob: -14.250200271606445
    10. ' ' → logprob: -14.375200271606445

Token 166: 'umulative' (ID: 97729)
  Prédit: 'umulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -0.00019364648323971778
    2. 'c' → logprob: -9.37519359588623
    3. '[' → logprob: -10.37519359588623
    4. 'um' → logprob: -10.50019359588623
    5. 'uml' → logprob: -10.50019359588623
    6. '[c' → logprob: -11.62519359588623
    7. 'umul' → logprob: -12.37519359588623
    8. 'ulative' → logprob: -12.87519359588623
    9. 'u' → logprob: -13.75019359588623
    10. '   ' → logprob: -14.00019359588623

Token 167: '_x' (ID: 7054)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.06990186125040054
    2. 'x' → logprob: -2.944901943206787
    3. '_x' → logprob: -4.569901943206787
    4. '[c' → logprob: -5.819901943206787
    5. 'c' → logprob: -7.319901943206787
    6. ' xor' → logprob: -8.569901466369629
    7. 'cum' → logprob: -9.194901466369629
    8. 'ox' → logprob: -9.319901466369629
    9. '1' → logprob: -9.444901466369629
    10. 'o' → logprob: -9.944901466369629

Token 168: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.15283732116222382
    2. '[c' → logprob: -3.0278372764587402
    3. 'x' → logprob: -3.1528372764587402
    4. 'xor' → logprob: -3.6528372764587402
    5. 'c' → logprob: -4.02783727645874
    6. '[' → logprob: -6.15283727645874
    7. 'r' → logprob: -6.77783727645874
    8. 'oc' → logprob: -7.40283727645874
    9. 'cum' → logprob: -7.65283727645874
    10. 'roc' → logprob: -8.277837753295898

Token 169: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.013482657261192799
    2. ']' → logprob: -4.888482570648193
    3. '[' → logprob: -5.388482570648193
    4. ' ])' → logprob: -7.513482570648193
    5. ')' → logprob: -8.388483047485352
    6. '])
' → logprob: -8.513483047485352
    7. ']+' → logprob: -9.638483047485352
    8. '+' → logprob: -9.638483047485352
    9. '])+' → logprob: -9.638483047485352
    10. '   ' → logprob: -10.763483047485352

Token 170: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.43429967761039734
    2. ' %' → logprob: -1.0592997074127197
    3. ')' → logprob: -5.434299468994141
    4. ']' → logprob: -7.684299468994141
    5. ')%' → logprob: -8.30929946899414
    6. '+' → logprob: -8.30929946899414
    7. ' +' → logprob: -9.18429946899414
    8. ']%' → logprob: -10.55929946899414
    9. '%
' → logprob: -11.05929946899414
    10. ' %
' → logprob: -11.18429946899414

Token 171: ' DP' (ID: 51992)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9252740144729614
    2. ')' → logprob: -1.4252740144729614
    3. ' %' → logprob: -2.050273895263672
    4. 'mod' → logprob: -2.800273895263672
    5. 'DP' (adapté à ' DP') → logprob: -2.925273895263672
    6. '+' → logprob: -3.175273895263672
    7. ' DP' → logprob: -3.550273895263672
    8. 'temp' → logprob: -4.050273895263672
    9. ' mod' → logprob: -4.675273895263672
    10. ' +' → logprob: -4.800273895263672

Token 172: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00010914575977949426
    2. '[' → logprob: -9.12510871887207
    3. '][' → logprob: -17.00010871887207
    4. ')[' → logprob: -17.12510871887207
    5. '[
' → logprob: -17.37510871887207
    6. ']' → logprob: -17.62510871887207
    7. '[current' → logprob: -18.00010871887207
    8. ' [' → logprob: -18.12510871887207
    9. '\[' → logprob: -18.25010871887207
    10. '[temp' → logprob: -18.37510871887207

Token 173: 'umulative' (ID: 97729)
  Prédit: 'umulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -0.0020509320311248302
    2. 'c' → logprob: -7.002050876617432
    3. '[c' → logprob: -7.627050876617432
    4. '[' → logprob: -8.12705135345459
    5. 'umul' → logprob: -9.00205135345459
    6. 'um' → logprob: -9.87705135345459
    7. 'uml' → logprob: -10.75205135345459
    8. ' cumulative' → logprob: -11.25205135345459
    9. 'cum' → logprob: -11.25205135345459
    10. 'umal' → logprob: -11.50205135345459

Token 174: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.2832871377468109
    2. 'xor' → logprob: -1.4082871675491333
    3. 'x' → logprob: -7.033287048339844
    4. '[c' → logprob: -7.158287048339844
    5. '[' → logprob: -8.283287048339844
    6. 'c' → logprob: -9.783287048339844
    7. '_' → logprob: -10.283287048339844
    8. '[x' → logprob: -10.408287048339844
    9. ' xor' → logprob: -10.533287048339844
    10. '__' → logprob: -11.658287048339844

Token 175: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.21870604157447815
    2. 'xor' → logprob: -1.9687060117721558
    3. '[' → logprob: -3.2187061309814453
    4. '[c' → logprob: -4.843706130981445
    5. 'c' → logprob: -6.093706130981445
    6. '_x' → logprob: -6.968706130981445
    7. 'x' → logprob: -7.468706130981445
    8. 'OR' → logprob: -7.468706130981445
    9. ']' → logprob: -7.468706130981445
    10. '0' → logprob: -7.843706130981445

Token 176: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003898869501426816
    2. '[' → logprob: -5.628899097442627
    3. ']' → logprob: -8.253898620605469
    4. ')[' → logprob: -11.003898620605469
    5. ' ][' → logprob: -11.753898620605469
    6. ']][' → logprob: -12.628898620605469
    7. ''][' → logprob: -13.628898620605469
    8. '=' → logprob: -13.753898620605469
    9. '"][' → logprob: -13.878898620605469
    10. ')][' → logprob: -14.003898620605469

Token 177: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.693165123462677
    2. '1' → logprob: -0.693165123462677
    3. ' ' → logprob: -11.755664825439453
    4. '
' → logprob: -12.568164825439453
    5. '   ' → logprob: -13.505664825439453
    6. '-' → logprob: -13.630664825439453
    7. ']' → logprob: -14.443164825439453
    8. '```' → logprob: -14.755664825439453
    9. 'temp' → logprob: -15.255664825439453
    10. '(' → logprob: -15.505664825439453

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.2166411478538066e-05
    2. ']+=' → logprob: -10.125052452087402
    3. ' ]' → logprob: -12.125052452087402
    4. '])' → logprob: -13.125052452087402
    5. ')' → logprob: -13.375052452087402
    6. ']=' → logprob: -13.750052452087402
    7. ']+' → logprob: -14.625052452087402
    8. ']*' → logprob: -14.750052452087402
    9. '-' → logprob: -15.000052452087402
    10. ')]' → logprob: -15.625052452087402

Token 179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0414399616420269
    2. '+=' → logprob: -3.916440010070801
    3. ' =' → logprob: -4.291440010070801
    4. '*=' → logprob: -5.291440010070801
    5. ' +=' → logprob: -6.916440010070801
    6. ' *=' → logprob: -7.541440010070801
    7. '%=' → logprob: -8.0414400100708
    8. '-=' → logprob: -10.1664400100708
    9. ' ^=' → logprob: -10.6664400100708
    10. '*' → logprob: -11.0414400100708

Token 180: ' DP' (ID: 51992)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.01757897436618805
    2. ' (' → logprob: -4.517579078674316
    3. '(' → logprob: -5.392579078674316
    4. '(temp' → logprob: -6.767579078674316
    5. 'DP' → logprob: -8.017579078674316
    6. 'temp' → logprob: -8.392579078674316
    7. '(dp' → logprob: -9.892579078674316
    8. ' DP' → logprob: -10.267579078674316
    9. '(
' → logprob: -10.517579078674316
    10. '   ' → logprob: -10.642579078674316

Token 181: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.3544423381972592e-05
    2. '[' → logprob: -11.25001335144043
    3. 'c' → logprob: -14.75001335144043
    4. '[
' → logprob: -17.25001335144043
    5. '[C' → logprob: -17.25001335144043
    6. ')c' → logprob: -17.87501335144043
    7. '[current' → logprob: -18.00001335144043
    8. '[cur' → logprob: -18.25001335144043
    9. '	c' → logprob: -18.37501335144043
    10. '(c' → logprob: -18.50001335144043

Token 182: 'umulative' (ID: 97729)
  Prédit: 'umulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -0.022510847076773643
    2. '[c' → logprob: -3.8975107669830322
    3. 'c' → logprob: -7.397511005401611
    4. '[' → logprob: -7.397511005401611
    5. 'ulative' → logprob: -7.647511005401611
    6. 'cum' → logprob: -9.522510528564453
    7. ' cumulative' → logprob: -10.522510528564453
    8. 'umul' → logprob: -10.897510528564453
    9. 'xor' → logprob: -10.897510528564453
    10. 'um' → logprob: -11.022510528564453

Token 183: '_x' (ID: 7054)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.1834499090909958
    2. '_x' → logprob: -1.8084498643875122
    3. 'x' → logprob: -6.433449745178223
    4. '[c' → logprob: -6.808449745178223
    5. 'c' → logprob: -7.433449745178223
    6. 'cum' → logprob: -9.683449745178223
    7. ' xor' → logprob: -9.683449745178223
    8. '[' → logprob: -10.058449745178223
    9. '```' → logprob: -10.183449745178223
    10. '(c' → logprob: -10.433449745178223

Token 184: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.12720505893230438
    2. 'xor' → logprob: -2.2522051334381104
    3. '[' → logprob: -5.252204895019531
    4. '[c' → logprob: -5.377204895019531
    5. 'OR' → logprob: -6.377204895019531
    6. '^' → logprob: -7.752204895019531
    7. 'c' → logprob: -7.752204895019531
    8. 'r' → logprob: -8.377204895019531
    9. 'cum' → logprob: -8.377204895019531
    10. 'ox' → logprob: -8.627204895019531

Token 185: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006494098342955112
    2. '[' → logprob: -7.500649452209473
    3. ']' → logprob: -10.250649452209473
    4. ' ][' → logprob: -10.875649452209473
    5. '0' → logprob: -11.375649452209473
    6. ')[' → logprob: -11.500649452209473
    7. '"][' → logprob: -12.875649452209473
    8. '1' → logprob: -13.000649452209473
    9. '   ' → logprob: -13.375649452209473
    10. ']][' → logprob: -13.375649452209473

Token 186: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02638065442442894
    2. '1' → logprob: -3.6513805389404297
    3. '(' → logprob: -10.77638053894043
    4. ' ' → logprob: -10.77638053894043
    5. '
' → logprob: -11.27638053894043
    6. 'temp' → logprob: -12.02638053894043
    7. '[' → logprob: -12.15138053894043
    8. '   ' → logprob: -12.90138053894043
    9. ']' → logprob: -13.40138053894043
    10. '-' → logprob: -13.77638053894043

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.038151539862155914
    2. '*' → logprob: -4.288151741027832
    3. ']+' → logprob: -4.413151741027832
    4. '+' → logprob: -4.663151741027832
    5. ']*' → logprob: -6.913151741027832
    6. '-' → logprob: -7.663151741027832
    7. ' +' → logprob: -8.038151741027832
    8. ')' → logprob: -8.788151741027832
    9. ' *' → logprob: -9.538151741027832
    10. '%' → logprob: -10.538151741027832

Token 188: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5104002356529236
    2. '+' → logprob: -1.6354002952575684
    3. ' *' → logprob: -1.8854002952575684
    4. ' +' → logprob: -3.2604002952575684
    5. '-' → logprob: -4.635400295257568
    6. ' -' → logprob: -5.510400295257568
    7. '%' → logprob: -7.135400295257568
    8. ' ' → logprob: -9.63539981842041
    9. '=' → logprob: -9.88539981842041
    10. ' %' → logprob: -10.01039981842041

Token 189: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.1604764759540558
    2. ' temp' → logprob: -1.9104764461517334
    3. ' DP' → logprob: -9.660476684570312
    4. '(temp' → logprob: -9.910476684570312
    5. 'DP' → logprob: -10.160476684570312
    6. 'tmp' → logprob: -10.660476684570312
    7. ' (' → logprob: -11.035476684570312
    8. '   ' → logprob: -11.285476684570312
    9. 'int' → logprob: -11.910476684570312
    10. 'tem' → logprob: -12.035476684570312

Token 190: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7923559546470642
    2. '<|end|>' → logprob: -1.417356014251709
    3. '
' → logprob: -1.542356014251709
    4. ' %' → logprob: -2.542356014251709
    5. '\n' → logprob: -5.292356014251709
    6. ')' → logprob: -6.292356014251709
    7. '<|end|>' → logprob: -6.542356014251709
    8. ' 
' → logprob: -6.792356014251709
    9. '%n' → logprob: -7.167356014251709
    10. '%
' → logprob: -8.04235553741455

Token 191: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: ' DP' (ID: 51992)
  Prédit: ' DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' DP' → logprob: -0.8143284320831299
    2. 'DP' (adapté à ' DP') → logprob: -1.0643284320831299
    3. ' memo' → logprob: -3.31432843208313
    4. '\n' → logprob: -3.43932843208313
    5. 'temp' → logprob: -3.43932843208313
    6. 'memo' → logprob: -3.81432843208313
    7. ')' → logprob: -4.189328193664551
    8. ' temp' → logprob: -4.564328193664551
    9. '_DP' → logprob: -4.939328193664551
    10. ' zeros' → logprob: -5.064328193664551

Token 193: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -2.856408536899835e-05
    2. '[' → logprob: -10.500028610229492
    3. '<|end|>' → logprob: -15.375028610229492
    4. '[current' → logprob: -15.625028610229492
    5. '[cur' → logprob: -16.625028610229492
    6. '[curr' → logprob: -16.750028610229492
    7. '][' → logprob: -16.875028610229492
    8. '[
' → logprob: -17.000028610229492
    9. '[col' → logprob: -17.125028610229492
    10. ')[' → logprob: -17.250028610229492

Token 194: 'umulative' (ID: 97729)
  Prédit: 'umulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -0.033901557326316833
    2. '[c' → logprob: -3.4089014530181885
    3. '[' → logprob: -9.03390121459961
    4. 'ulative' → logprob: -9.65890121459961
    5. ' cumulative' → logprob: -10.78390121459961
    6. 'um' → logprob: -10.90890121459961
    7. 'umul' → logprob: -11.40890121459961
    8. 'umulate' → logprob: -11.90890121459961
    9. 'umsum' → logprob: -13.15890121459961
    10. 'umal' → logprob: -13.78390121459961

Token 195: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.47619181871414185
    2. 'xor' → logprob: -0.9761918187141418
    3. '[c' → logprob: -6.976191997528076
    4. 'x' → logprob: -7.226191997528076
    5. '[' → logprob: -9.226191520690918
    6. '_' → logprob: -9.601191520690918
    7. 'c' → logprob: -9.601191520690918
    8. '_c' → logprob: -10.351191520690918
    9. 'or' → logprob: -10.601191520690918
    10. '__' → logprob: -10.976191520690918

Token 196: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.3980059325695038
    2. '[c' → logprob: -1.2730059623718262
    3. '[' → logprob: -3.398005962371826
    4. 'xor' → logprob: -4.398005962371826
    5. 'ox' → logprob: -7.523005962371826
    6. '0' → logprob: -8.023005485534668
    7. 'OR' → logprob: -8.148005485534668
    8. 'oru' → logprob: -8.398005485534668
    9. '\[' → logprob: -9.148005485534668
    10. 'c' → logprob: -9.523005485534668

Token 197: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00038360210601240396
    2. '[' → logprob: -8.000383377075195
    3. ']' → logprob: -10.375383377075195
    4. ' ][' → logprob: -11.875383377075195
    5. ']][' → logprob: -12.000383377075195
    6. ')[' → logprob: -13.625383377075195
    7. '"][' → logprob: -14.625383377075195
    8. ')][' → logprob: -14.875383377075195
    9. ''][' → logprob: -15.000383377075195
    10. '][]' → logprob: -15.750383377075195

Token 198: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.874882430769503e-05
    2. '1' → logprob: -9.500079154968262
    3. '[' → logprob: -13.375079154968262
    4. ' ' → logprob: -13.500079154968262
    5. '```' → logprob: -15.062579154968262
    6. '   ' → logprob: -15.500079154968262
    7. ']' → logprob: -16.562578201293945
    8. '۰' → logprob: -16.625078201293945
    9. '
' → logprob: -16.687578201293945
    10. '  ' → logprob: -17.500078201293945

Token 199: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004809722304344177
    2. '%' → logprob: -6.004809856414795
    3. ')' → logprob: -7.254809856414795
    4. ' %' → logprob: -7.504809856414795
    5. ' %=' → logprob: -7.504809856414795
    6. ']%' → logprob: -8.004809379577637
    7. ' ]' → logprob: -9.004809379577637
    8. '%=' → logprob: -10.004809379577637
    9. ')%' → logprob: -11.754809379577637
    10. '=' → logprob: -12.629809379577637

Token 200: ' =' (ID: 314)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.02786477841436863
    2. ' %=' → logprob: -4.027864933013916
    3. '%' → logprob: -5.027864933013916
    4. '=' → logprob: -5.777864933013916
    5. ' %' → logprob: -11.277864456176758
    6. ' =' → logprob: -13.152864456176758
    7. ' ' → logprob: -13.652864456176758
    8. '	' → logprob: -13.777864456176758
    9. '+=' → logprob: -14.027864456176758
    10. ' ' → logprob: -14.277864456176758

Token 201: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0031791406217962503
    2. ' DP' → logprob: -5.75317907333374
    3. 'dp' → logprob: -14.378179550170898
    4. '_DP' → logprob: -14.503179550170898
    5. '   ' → logprob: -15.128179550170898
    6. 'Dp' → logprob: -16.5031795501709
    7. '(D' → logprob: -16.7531795501709
    8. '(' → logprob: -18.0031795501709
    9. 'mod' → logprob: -18.1281795501709
    10. ' (' → logprob: -18.2531795501709

Token 202: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -5.080963092041202e-06
    2. 'c' → logprob: -12.750004768371582
    3. '[' → logprob: -13.375004768371582
    4. '_c' → logprob: -15.250004768371582
    5. 'mod' → logprob: -16.2500057220459
    6. '[
' → logprob: -16.3750057220459
    7. '	c' → logprob: -16.7500057220459
    8. '(c' → logprob: -16.8750057220459
    9. '```' → logprob: -17.1250057220459
    10. 'cum' → logprob: -17.7500057220459

Token 203: 'umulative' (ID: 97729)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.002382188104093075
    2. '[' → logprob: -6.627382278442383
    3. 'umulative' → logprob: -7.002382278442383
    4. ']' → logprob: -10.252382278442383
    5. '%c' → logprob: -11.127382278442383
    6. '\[' → logprob: -11.502382278442383
    7. '(c' → logprob: -12.252382278442383
    8. '][' → logprob: -12.252382278442383
    9. '[cur' → logprob: -12.377382278442383
    10. '[curr' → logprob: -12.627382278442383

Token 204: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.004298964980989695
    2. 'xor' → logprob: -5.504299163818359
    3. '[' → logprob: -9.12929916381836
    4. '_' → logprob: -10.12929916381836
    5. '[c' → logprob: -10.50429916381836
    6. 'x' → logprob: -10.87929916381836
    7. '```' → logprob: -12.50429916381836
    8. 'ox' → logprob: -12.75429916381836
    9. 'mod' → logprob: -13.00429916381836
    10. '__' → logprob: -13.37929916381836

Token 205: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.48903265595436096
    2. 'OR' → logprob: -1.4890326261520386
    3. '[' → logprob: -2.114032745361328
    4. 'xor' → logprob: -4.114032745361328
    5. ']' → logprob: -5.114032745361328
    6. '_' → logprob: -5.489032745361328
    7. '1' → logprob: -5.489032745361328
    8. 'oru' → logprob: -5.739032745361328
    9. '[c' → logprob: -6.614032745361328
    10. '   ' → logprob: -7.739032745361328

Token 206: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.010820950381457806
    2. '[' → logprob: -5.1358208656311035
    3. '1' → logprob: -5.6358208656311035
    4. ']' → logprob: -6.7608208656311035
    5. ']%' → logprob: -9.260821342468262
    6. '%' → logprob: -11.010821342468262
    7. ' ][' → logprob: -11.760821342468262
    8. ''][' → logprob: -12.135821342468262
    9. '   ' → logprob: -12.385821342468262
    10. '```' → logprob: -12.385821342468262

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018307039281353354
    2. '[c' → logprob: -6.501830577850342
    3. '[' → logprob: -8.8768310546875
    4. 'c' → logprob: -9.5018310546875
    5. 'mod' → logprob: -9.6268310546875
    6. '
' → logprob: -11.5018310546875
    7. '0' → logprob: -11.6268310546875
    8. '-' → logprob: -11.8768310546875
    9. '```' → logprob: -12.1268310546875
    10. ']' → logprob: -12.6268310546875

Token 208: ']' (ID: 60)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.061967913061380386
    2. '%' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.936967849731445
    4. ')' → logprob: -17.061967849731445
    5. ' %=' → logprob: -17.811967849731445
    6. ' ' → logprob: -17.936967849731445
    7. ']' → logprob: -19.311967849731445
    8. '%s' → logprob: -19.561967849731445
    9. '%m' → logprob: -19.686967849731445
    10. '%c' → logprob: -19.686967849731445

Token 209: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4740802049636841
    2. '%' → logprob: -0.9740802049636841
    3. ' ' → logprob: -12.974080085754395
    4. ' ' → logprob: -15.224080085754395
    5. '%i' → logprob: -15.599080085754395
    6. '%c' → logprob: -15.724080085754395
    7. '%s' → logprob: -16.59908103942871
    8. ' %=' → logprob: -16.72408103942871
    9. '%d' → logprob: -16.72408103942871
    10. '%n' → logprob: -17.22408103942871

Token 210: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0001544321421533823
    2. ' mod' → logprob: -9.250154495239258
    3. '(mod' → logprob: -9.750154495239258
    4. '(' → logprob: -17.625154495239258
    5. '	mod' → logprob: -18.250154495239258
    6. ' ' → logprob: -19.125154495239258
    7. '```' → logprob: -20.500154495239258
    8. '100' → logprob: -20.500154495239258
    9. '   ' → logprob: -20.625154495239258
    10. ' (' → logprob: -20.750154495239258

Token 211: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011228896677494049
    2. '<|end|>' → logprob: -5.011229038238525
    3. '       ' → logprob: -5.761229038238525
    4. ')' → logprob: -8.136228561401367
    5. '   ' → logprob: -8.136228561401367
    6. '               ' → logprob: -8.261228561401367
    7. '            
' → logprob: -9.261228561401367
    8. ' 
' → logprob: -9.886228561401367
    9. ' )' → logprob: -10.261228561401367
    10. ' ' → logprob: -10.261228561401367

Token 213: ' DP' (ID: 51992)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.06306669116020203
    2. ' memo' → logprob: -3.4380667209625244
    3. '           ' → logprob: -3.5630667209625244
    4. 'DP' (adapté à ' DP') → logprob: -8.438066482543945
    5. '       ' → logprob: -8.563066482543945
    6. '   ' → logprob: -9.438066482543945
    7. ' DP' → logprob: -9.438066482543945
    8. 'm' → logprob: -10.688066482543945
    9. 'mem' → logprob: -11.063066482543945
    10. '               ' → logprob: -11.813066482543945

Token 214: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.375001907348633
    3. '[
' → logprob: -17.875001907348633
    4. '```' → logprob: -18.875001907348633
    5. 'c' → logprob: -19.125001907348633
    6. '=c' → logprob: -19.250001907348633
    7. '       ' → logprob: -19.375001907348633
    8. '[curr' → logprob: -19.500001907348633
    9. '[cur' → logprob: -19.500001907348633
    10. '[current' → logprob: -19.625001907348633

Token 215: 'umulative' (ID: 97729)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.576261043548584
    2. 'umulative' → logprob: -0.826261043548584
    3. '[' → logprob: -8.451261520385742
    4. 'ulative' → logprob: -10.576261520385742
    5. ' cumulative' → logprob: -10.826261520385742
    6. 'c' → logprob: -11.701261520385742
    7. '=c' → logprob: -11.951261520385742
    8. 'umul' → logprob: -12.076261520385742
    9. '\[' → logprob: -12.076261520385742
    10. 'cum' → logprob: -12.701261520385742

Token 216: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.02832202799618244
    2. '[c' → logprob: -3.6533219814300537
    3. 'xor' → logprob: -6.403322219848633
    4. '[' → logprob: -8.653322219848633
    5. 'x' → logprob: -9.278322219848633
    6. '[x' → logprob: -10.528322219848633
    7. '```' → logprob: -11.653322219848633
    8. '_[' → logprob: -11.653322219848633
    9. '\[' → logprob: -12.028322219848633
    10. '__' → logprob: -12.153322219848633

Token 217: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.1649666130542755
    2. 'xor' → logprob: -2.164966583251953
    3. '[c' → logprob: -3.664966583251953
    4. '[' → logprob: -5.539966583251953
    5. '_x' → logprob: -6.039966583251953
    6. 'ox' → logprob: -6.539966583251953
    7. 'x' → logprob: -6.789966583251953
    8. 'OR' → logprob: -7.164966583251953
    9. 'c' → logprob: -7.789966583251953
    10. 'ur' → logprob: -7.914966583251953

Token 218: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012630313634872437
    2. '[' → logprob: -4.387630462646484
    3. ']' → logprob: -9.262630462646484
    4. ']][' → logprob: -12.137630462646484
    5. ' ][' → logprob: -12.137630462646484
    6. ')[' → logprob: -12.762630462646484
    7. ''][' → logprob: -12.887630462646484
    8. '"][' → logprob: -13.137630462646484
    9. '```' → logprob: -13.887630462646484
    10. '=' → logprob: -14.137630462646484

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022415895364247262
    2. '[' → logprob: -8.625224113464355
    3. '1' → logprob: -10.125224113464355
    4. '
' → logprob: -13.375224113464355
    5. ' ' → logprob: -14.000224113464355
    6. '   ' → logprob: -14.937724113464355
    7. '][' → logprob: -15.000224113464355
    8. '=' → logprob: -15.312724113464355
    9. '۰' → logprob: -15.500224113464355
    10. ']' → logprob: -15.687724113464355

Token 220: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00037263904232531786
    2. ']+=' → logprob: -8.125372886657715
    3. ']=' → logprob: -9.625372886657715
    4. ' ]' → logprob: -12.250372886657715
    5. '=' → logprob: -13.000372886657715
    6. ']+' → logprob: -13.750372886657715
    7. '],' → logprob: -14.500372886657715
    8. '[' → logprob: -15.000372886657715
    9. ']*' → logprob: -15.750372886657715
    10. '][' → logprob: -15.875372886657715

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.050742149353027344
    2. '+=' → logprob: -3.4257421493530273
    3. ' =' → logprob: -4.300742149353027
    4. ' +=' → logprob: -5.800742149353027
    5. '-=' → logprob: -8.675742149353027
    6. '*=' → logprob: -9.050742149353027
    7. ' -=' → logprob: -10.425742149353027
    8. ' *=' → logprob: -10.550742149353027
    9. '[' → logprob: -12.425742149353027
    10. ']+=' → logprob: -12.550742149353027

Token 222: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.004128980450332165
    2. ' DP' → logprob: -5.879128932952881
    3. '2' → logprob: -7.754128932952881
    4. '0' → logprob: -8.379129409790039
    5. '(' → logprob: -8.879129409790039
    6. '1' → logprob: -9.004129409790039
    7. 'mod' → logprob: -9.129129409790039
    8. 'zeros' → logprob: -9.504129409790039
    9. '   ' → logprob: -9.879129409790039
    10. '(D' → logprob: -9.879129409790039

Token 223: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.500001907348633
    3. 'c' → logprob: -14.000001907348633
    4. '[
' → logprob: -18.250001907348633
    5. '(c' → logprob: -18.500001907348633
    6. '```' → logprob: -18.500001907348633
    7. '	c' → logprob: -18.625001907348633
    8. '_c' → logprob: -19.000001907348633
    9. '<c' → logprob: -19.625001907348633
    10. ')c' → logprob: -19.625001907348633

Token 224: 'umulative' (ID: 97729)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.06966672837734222
    2. 'umulative' → logprob: -2.819666624069214
    3. 'c' → logprob: -5.819666862487793
    4. 'xor' → logprob: -6.069666862487793
    5. 'cum' → logprob: -7.069666862487793
    6. '(c' → logprob: -7.319666862487793
    7. '_c' → logprob: -8.569666862487793
    8. 'x' → logprob: -8.819666862487793
    9. ']' → logprob: -8.819666862487793
    10. '[' → logprob: -9.819666862487793

Token 225: '_x' (ID: 7054)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.5786868333816528
    2. '_x' → logprob: -0.8286868333816528
    3. 'x' → logprob: -5.953686714172363
    4. 'c' → logprob: -10.578686714172363
    5. '[c' → logprob: -10.953686714172363
    6. '_' → logprob: -11.203686714172363
    7. '```' → logprob: -11.328686714172363
    8. '0' → logprob: -11.703686714172363
    9. 'ox' → logprob: -11.828686714172363
    10. ' xor' → logprob: -11.953686714172363

Token 226: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.004373036324977875
    2. 'xor' → logprob: -5.504373073577881
    3. 'ar' → logprob: -9.379372596740723
    4. '[' → logprob: -9.504372596740723
    5. 'ur' → logprob: -10.879372596740723
    6. 'ор' → logprob: -11.254372596740723
    7. '[c' → logprob: -11.254372596740723
    8. 'x' → logprob: -11.379372596740723
    9. '2' → logprob: -11.629372596740723
    10. '_x' → logprob: -11.754372596740723

Token 227: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002250291872769594
    2. '[' → logprob: -6.1272501945495605
    3. ']' → logprob: -10.627250671386719
    4. '0' → logprob: -11.502250671386719
    5. ' ][' → logprob: -11.627250671386719
    6. '"][' → logprob: -11.752250671386719
    7. '}[' → logprob: -12.002250671386719
    8. ''][' → logprob: -13.627250671386719
    9. ']][' → logprob: -13.752250671386719
    10. ')[' → logprob: -14.002250671386719

Token 228: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00413942988961935
    2. '0' → logprob: -5.504139423370361
    3. ']' → logprob: -10.75413990020752
    4. ' ' → logprob: -11.37913990020752
    5. '
' → logprob: -11.37913990020752
    6. '][' → logprob: -13.00413990020752
    7. '   ' → logprob: -13.00413990020752
    8. '```' → logprob: -13.06663990020752
    9. '-' → logprob: -13.50413990020752
    10. '[' → logprob: -13.75413990020752

Token 229: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00042983482126146555
    2. ']*' → logprob: -8.5004301071167
    3. ']+' → logprob: -9.0004301071167
    4. '*' → logprob: -10.1254301071167
    5. '+' → logprob: -11.0004301071167
    6. ' ]' → logprob: -11.2504301071167
    7. ' *' → logprob: -11.3754301071167
    8. '[' → logprob: -12.2504301071167
    9. ']%' → logprob: -12.3754301071167
    10. ']<<' → logprob: -13.0004301071167

Token 230: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06211993843317032
    2. ' *' → logprob: -2.812119960784912
    3. '+' → logprob: -9.062119483947754
    4. ' +' → logprob: -11.187119483947754
    5. '%' → logprob: -12.437119483947754
    6. '<<' → logprob: -12.437119483947754
    7. ' ' → logprob: -12.562119483947754
    8. '*(' → logprob: -12.937119483947754
    9. '=' → logprob: -13.312119483947754
    10. '-' → logprob: -13.937119483947754

Token 231: ' DP' (ID: 51992)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.25231680274009705
    2. ' temp' → logprob: -2.12731671333313
    3. '1' → logprob: -2.37731671333313
    4. ' ' → logprob: -5.627316951751709
    5. 'DP' → logprob: -5.752316951751709
    6. ' DP' → logprob: -5.877316951751709
    7. '(temp' → logprob: -7.752316951751709
    8. ' (' → logprob: -7.877316951751709
    9. '(' → logprob: -8.12731647491455
    10. 'zeros' → logprob: -9.62731647491455

Token 232: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.750003814697266
    3. 'c' → logprob: -16.250003814697266
    4. '[
' → logprob: -16.500003814697266
    5. '```' → logprob: -16.500003814697266
    6. 'import' → logprob: -16.750003814697266
    7. '(c' → logprob: -17.625003814697266
    8. '\[' → logprob: -17.875003814697266
    9. '[current' → logprob: -18.250003814697266
    10. ' ' → logprob: -18.250003814697266

Token 233: 'umulative' (ID: 97729)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.006310442462563515
    2. 'c' → logprob: -6.50631046295166
    3. 'xor' → logprob: -6.75631046295166
    4. '_x' → logprob: -6.75631046295166
    5. '_c' → logprob: -7.25631046295166
    6. '(c' → logprob: -7.75631046295166
    7. '[' → logprob: -8.00631046295166
    8. 'umulative' → logprob: -8.38131046295166
    9. 'x' → logprob: -8.50631046295166
    10. 'cum' → logprob: -9.13131046295166

Token 234: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.017768247053027153
    2. 'xor' → logprob: -4.142768383026123
    3. 'x' → logprob: -6.767768383026123
    4. '[c' → logprob: -7.642768383026123
    5. 'c' → logprob: -10.142767906188965
    6. '[' → logprob: -10.892767906188965
    7. '```' → logprob: -12.017767906188965
    8. 's' → logprob: -12.642767906188965
    9. '^' → logprob: -12.767767906188965
    10. '[x' → logprob: -12.767767906188965

Token 235: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.06180441752076149
    2. 'xor' → logprob: -3.5618045330047607
    3. '[c' → logprob: -3.6868045330047607
    4. 'ox' → logprob: -6.311804294586182
    5. '[' → logprob: -6.936804294586182
    6. 'OR' → logprob: -7.186804294586182
    7. 'ur' → logprob: -7.311804294586182
    8. 'c' → logprob: -7.686804294586182
    9. 'oru' → logprob: -8.18680477142334
    10. 'cum' → logprob: -8.31180477142334

Token 236: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00027802068507298827
    2. '[' → logprob: -8.25027847290039
    3. ']' → logprob: -11.75027847290039
    4. '-' → logprob: -13.12527847290039
    5. '1' → logprob: -13.50027847290039
    6. ' ][' → logprob: -13.62527847290039
    7. '   ' → logprob: -14.12527847290039
    8. 'temp' → logprob: -14.87527847290039
    9. '}[' → logprob: -14.87527847290039
    10. ']][' → logprob: -15.25027847290039

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. '0' → logprob: -11.875018119812012
    3. ' ' → logprob: -11.875018119812012
    4. '[' → logprob: -13.375018119812012
    5. '   ' → logprob: -13.750018119812012
    6. '  ' → logprob: -15.750018119812012
    7. '```' → logprob: -15.937518119812012
    8. '][' → logprob: -16.000017166137695
    9. ']' → logprob: -16.062517166137695
    10. 'temp' → logprob: -16.312517166137695

Token 238: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03719431161880493
    2. ')' → logprob: -4.16219425201416
    3. ']%' → logprob: -4.28719425201416
    4. '<|end|>' → logprob: -6.03719425201416
    5. ')%' → logprob: -6.53719425201416
    6. '%' → logprob: -6.66219425201416
    7. '<|end|>' → logprob: -6.78719425201416
    8. ' ]' → logprob: -7.78719425201416
    9. ' %' → logprob: -8.78719425201416
    10. '       ' → logprob: -9.41219425201416

Token 239: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.09187904745340347
    2. ' %' → logprob: -2.46687912940979
    3. '<|end|>' → logprob: -6.591878890991211
    4. '```' → logprob: -7.341878890991211
    5. '%
' → logprob: -8.091878890991211
    6. '           ' → logprob: -8.966878890991211
    7. '       ' → logprob: -9.341878890991211
    8. '[' → logprob: -9.591878890991211
    9. ')%' → logprob: -10.091878890991211
    10. '   ' → logprob: -10.091878890991211

Token 240: ' DP' (ID: 51992)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.09629770368337631
    2. '           ' → logprob: -2.9712977409362793
    3. '<|end|>' → logprob: -4.221297740936279
    4. ' %' → logprob: -4.596297740936279
    5. '\n' → logprob: -4.971297740936279
    6. '```' → logprob: -5.971297740936279
    7. '%
' → logprob: -6.846297740936279
    8. '            
' → logprob: -6.971297740936279
    9. '<|end|>' → logprob: -7.221297740936279
    10. ' 
' → logprob: -7.596297740936279

Token 241: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.3782830137643032e-05
    2. '[' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -15.75001335144043
    4. '```' → logprob: -16.12501335144043
    5. '\[' → logprob: -16.25001335144043
    6. '[
' → logprob: -16.62501335144043
    7. '][' → logprob: -17.50001335144043
    8. ']' → logprob: -17.50001335144043
    9. ' [' → logprob: -17.50001335144043
    10. '[][' → logprob: -18.12501335144043

Token 242: 'umulative' (ID: 97729)
  Prédit: 'umulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -0.0004460428317543119
    2. '[c' → logprob: -7.87544584274292
    3. 'umul' → logprob: -10.625446319580078
    4. 'ulative' → logprob: -11.625446319580078
    5. '[' → logprob: -11.875446319580078
    6. ' cumulative' → logprob: -12.000446319580078
    7. 'uml' → logprob: -12.250446319580078
    8. 'um' → logprob: -12.625446319580078
    9. 'cum' → logprob: -12.875446319580078
    10. 'c' → logprob: -13.000446319580078

Token 243: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0012107107322663069
    2. '[c' → logprob: -7.251210689544678
    3. 'xor' → logprob: -7.876210689544678
    4. '[' → logprob: -10.001211166381836
    5. '_c' → logprob: -10.501211166381836
    6. '[x' → logprob: -11.251211166381836
    7. '_' → logprob: -12.001211166381836
    8. '```' → logprob: -12.001211166381836
    9. '_[' → logprob: -12.876211166381836
    10. 'x' → logprob: -13.001211166381836

Token 244: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.053545426577329636
    2. 'xor' → logprob: -3.1785454750061035
    3. '[c' → logprob: -4.9285454750061035
    4. 'c' → logprob: -7.4285454750061035
    5. '[' → logprob: -7.4285454750061035
    6. 'ox' → logprob: -7.8035454750061035
    7. '_x' → logprob: -8.428544998168945
    8. 'ar' → logprob: -8.803544998168945
    9. 'cum' → logprob: -8.803544998168945
    10. 'ur' → logprob: -8.928544998168945

Token 245: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00703800143674016
    2. ']' → logprob: -5.007038116455078
    3. '[' → logprob: -8.382038116455078
    4. ']][' → logprob: -10.382038116455078
    5. ']=' → logprob: -10.882038116455078
    6. '][]' → logprob: -11.507038116455078
    7. ' ][' → logprob: -11.632038116455078
    8. '[c' → logprob: -12.007038116455078
    9. ')[' → logprob: -13.007038116455078
    10. ')][' → logprob: -13.382038116455078

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003445216570980847
    2. '1' → logprob: -8.000344276428223
    3. '
' → logprob: -12.500344276428223
    4. ' ' → logprob: -13.125344276428223
    5. '   ' → logprob: -13.750344276428223
    6. ']' → logprob: -14.000344276428223
    7. '```' → logprob: -15.250344276428223
    8. '[' → logprob: -15.375344276428223
    9. '-' → logprob: -15.437844276428223
    10. '

' → logprob: -16.31284523010254

Token 247: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00034476007567718625
    2. '=' → logprob: -8.875345230102539
    3. ' ]' → logprob: -9.250345230102539
    4. ']=' → logprob: -9.625345230102539
    5. '%' → logprob: -11.375345230102539
    6. ')' → logprob: -11.500345230102539
    7. ']%' → logprob: -11.500345230102539
    8. '%=' → logprob: -12.500345230102539
    9. ' %=' → logprob: -12.500345230102539
    10. ' =' → logprob: -13.375345230102539

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32427653670310974
    2. '%=' → logprob: -1.3242765665054321
    3. ' %=' → logprob: -4.699276447296143
    4. ' =' → logprob: -6.574276447296143
    5. '%' → logprob: -7.699276447296143
    6. ' %' → logprob: -13.4492769241333
    7. ')' → logprob: -13.6992769241333
    8. '=%' → logprob: -15.3242769241333
    9. ')%' → logprob: -15.6992769241333
    10. '=
' → logprob: -16.074275970458984

Token 249: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0024758970830589533
    2. ' DP' → logprob: -6.002475738525391
    3. '_DP' → logprob: -16.25247573852539
    4. 'dp' → logprob: -16.87747573852539
    5. 'Dp' → logprob: -18.25247573852539
    6. '(D' → logprob: -19.12747573852539
    7. '   ' → logprob: -19.37747573852539
    8. 'DJ' → logprob: -19.87747573852539
    9. 'D' → logprob: -20.50247573852539
    10. ' ' → logprob: -20.87747573852539

Token 250: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.5332478142227046e-05
    2. '[' → logprob: -12.250015258789062
    3. 'c' → logprob: -12.250015258789062
    4. '%c' → logprob: -13.375015258789062
    5. '_c' → logprob: -13.500015258789062
    6. '```' → logprob: -14.125015258789062
    7. '[
' → logprob: -14.500015258789062
    8. '	c' → logprob: -15.375015258789062
    9. '(c' → logprob: -15.375015258789062
    10. 'mod' → logprob: -15.625015258789062

Token 251: 'umulative' (ID: 97729)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.007560606114566326
    2. 'c' → logprob: -6.382560729980469
    3. 'umulative' → logprob: -6.757560729980469
    4. '[' → logprob: -6.757560729980469
    5. 'cum' → logprob: -7.007560729980469
    6. '_c' → logprob: -7.382560729980469
    7. 'xor' → logprob: -7.632560729980469
    8. ']' → logprob: -8.382560729980469
    9. '%c' → logprob: -8.882560729980469
    10. '(c' → logprob: -9.382560729980469

Token 252: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -7.958325295476243e-05
    2. '[x' → logprob: -10.375079154968262
    3. '```' → logprob: -11.000079154968262
    4. '_' → logprob: -11.250079154968262
    5. '[' → logprob: -11.375079154968262
    6. 'xor' → logprob: -13.875079154968262
    7. '__' → logprob: -14.125079154968262
    8. '``' → logprob: -14.125079154968262
    9. '[
' → logprob: -14.250079154968262
    10. '%' → logprob: -14.375079154968262

Token 253: 'or' (ID: 267)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.4804486036300659
    2. 'or' → logprob: -2.1054487228393555
    3. 'OR' → logprob: -2.7304487228393555
    4. '[x' → logprob: -3.3554487228393555
    5. 'ox' → logprob: -3.4804487228393555
    6. '[c' → logprob: -3.8554487228393555
    7. 'oru' → logprob: -3.8554487228393555
    8. '_x' → logprob: -4.3554487228393555
    9. '_' → logprob: -4.3554487228393555
    10. '[' → logprob: -5.4804487228393555

Token 254: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3120165169239044
    2. ']' → logprob: -1.562016487121582
    3. '[' → logprob: -2.937016487121582
    4. ']%' → logprob: -5.562016487121582
    5. '0' → logprob: -6.812016487121582
    6. '```' → logprob: -9.562016487121582
    7. '   ' → logprob: -9.812016487121582
    8. '%' → logprob: -10.062016487121582
    9. ' ][' → logprob: -10.312016487121582
    10. '[
' → logprob: -10.437016487121582

Token 255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001483674393966794
    2. '[c' → logprob: -7.87648344039917
    3. 'c' → logprob: -8.126483917236328
    4. '1' → logprob: -8.126483917236328
    5. '%' → logprob: -8.751483917236328
    6. '%c' → logprob: -8.876483917236328
    7. ' ' → logprob: -9.001483917236328
    8. 'xor' → logprob: -11.376483917236328
    9. 'mod' → logprob: -11.751483917236328
    10. ']' → logprob: -11.876483917236328

Token 256: ']' (ID: 60)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04858827963471413
    2. '%' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.423588752746582
    4. ' ' → logprob: -15.548588752746582
    5. ')' → logprob: -15.798588752746582
    6. ']' → logprob: -17.423587799072266
    7. '   ' → logprob: -17.548587799072266
    8. '```' → logprob: -18.548587799072266
    9. ' %=' → logprob: -18.798587799072266
    10. '%s' → logprob: -18.923587799072266

Token 257: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47407805919647217
    2. '%' → logprob: -0.9740780591964722
    3. ' ' → logprob: -13.974078178405762
    4. ' ' → logprob: -16.849077224731445
    5. '```' → logprob: -17.099077224731445
    6. ' %=' → logprob: -17.349077224731445
    7. '%c' → logprob: -17.724077224731445
    8. '%s' → logprob: -17.849077224731445
    9. '   ' → logprob: -18.224077224731445
    10. '%i' → logprob: -18.349077224731445

Token 258: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011047935113310814
    2. ' mod' → logprob: -4.511047840118408
    3. '(mod' → logprob: -15.886048316955566
    4. '	mod' → logprob: -18.38604736328125
    5. ' ' → logprob: -20.13604736328125
    6. ' мод' → logprob: -21.88604736328125
    7. '```' → logprob: -22.13604736328125
    8. '7' → logprob: -22.51104736328125
    9. '10' → logprob: -23.26104736328125
    10. '_mod' → logprob: -23.38604736328125

Token 259: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: ' memo' (ID: 46393)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12501591444015503
    2. ' memo' → logprob: -2.7500159740448
    3. 'memo' (adapté à ' memo') → logprob: -3.0000159740448
    4. '       ' → logprob: -6.250015735626221
    5. '   ' → logprob: -6.500015735626221
    6. '```' → logprob: -8.125016212463379
    7. 'm' → logprob: -10.750016212463379
    8. '
' → logprob: -11.625016212463379
    9. 'mem' → logprob: -11.625016212463379
    10. '               ' → logprob: -11.750016212463379

Token 262: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -4.0722858102526516e-05
    2. '[' → logprob: -10.125041007995605
    3. '\[' → logprob: -15.250041007995605
    4. '```' → logprob: -15.500041007995605
    5. '[
' → logprob: -16.75004005432129
    6. '[current' → logprob: -16.87504005432129
    7. ' [' → logprob: -17.25004005432129
    8. ']' → logprob: -17.62504005432129
    9. '=c' → logprob: -17.87504005432129
    10. '[curr' → logprob: -18.00004005432129

Token 263: 'umulative' (ID: 97729)
  Prédit: 'umulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -8.64970643306151e-05
    2. 'umul' → logprob: -9.750086784362793
    3. ' cumulative' → logprob: -11.375086784362793
    4. 'umulate' → logprob: -12.500086784362793
    5. 'cum' → logprob: -12.750086784362793
    6. 'ulative' → logprob: -12.875086784362793
    7. 'uml' → logprob: -13.125086784362793
    8. '[c' → logprob: -13.250086784362793
    9. 'um' → logprob: -13.500086784362793
    10. 'umal' → logprob: -14.125086784362793

Token 264: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0003595376620069146
    2. 'xor' → logprob: -8.000359535217285
    3. 'x' → logprob: -11.750359535217285
    4. '[c' → logprob: -12.625359535217285
    5. 'sys' → logprob: -13.625359535217285
    6. '[' → logprob: -13.625359535217285
    7. '_c' → logprob: -13.875359535217285
    8. '__' → logprob: -14.000359535217285
    9. '```' → logprob: -14.000359535217285
    10. 'import' → logprob: -14.250359535217285

Token 265: 'or' (ID: 267)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.06478558480739594
    2. 'or' → logprob: -3.3147854804992676
    3. '[c' → logprob: -4.314785480499268
    4. '_x' → logprob: -5.564785480499268
    5. 'oru' → logprob: -6.439785480499268
    6. '[' → logprob: -6.689785480499268
    7. 'ur' → logprob: -7.064785480499268
    8. 'u' → logprob: -7.189785480499268
    9. 'cum' → logprob: -7.189785480499268
    10. '_c' → logprob: -7.439785480499268

Token 266: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02423209883272648
    2. '[c' → logprob: -3.7742321491241455
    3. ']+=' → logprob: -7.274231910705566
    4. '[' → logprob: -8.649231910705566
    5. '][' → logprob: -9.774231910705566
    6. ']=' → logprob: -10.274231910705566
    7. ']+' → logprob: -11.649231910705566
    8. ' ]' → logprob: -11.649231910705566
    9. '+=' → logprob: -13.149231910705566
    10. '[
' → logprob: -13.899231910705566

Token 267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011703596450388432
    2. ' =' → logprob: -4.5117034912109375
    3. '+=' → logprob: -7.3867034912109375
    4. ' +=' → logprob: -10.261703491210938
    5. '=i' → logprob: -15.011703491210938
    6. '[' → logprob: -15.386703491210938
    7. '=int' → logprob: -15.886703491210938
    8. '=s' → logprob: -16.511703491210938
    9. '＝' → logprob: -16.636703491210938
    10. '.=' → logprob: -16.761703491210938

Token 268: ' zeros' (ID: 42274)
  Prédit: 'zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.02975604310631752
    2. ' zeros' → logprob: -3.5297560691833496
    3. '   ' → logprob: -12.279755592346191
    4. 'zer' → logprob: -15.529755592346191
    5. 'ones' → logprob: -15.654755592346191
    6. ' ' → logprob: -16.029756546020508
    7. '0' → logprob: -16.029756546020508
    8. 'zero' → logprob: -16.529756546020508
    9. '       ' → logprob: -16.904756546020508
    10. 'Zeros' → logprob: -17.279756546020508

Token 269: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3134176731109619
    2. 'print' → logprob: -1.313417673110962
    3. ' print' → logprob: -9.313417434692383
    4. 'return' → logprob: -10.188417434692383
    5. '```' → logprob: -10.688417434692383
    6. '    
' → logprob: -13.688417434692383
    7. 'if' (adapté à ' if') → logprob: -14.063417434692383
    8. 'result' → logprob: -14.063417434692383
    9. '
' → logprob: -14.188417434692383
    10. 'total' → logprob: -14.688417434692383

Token 272: ' cumulative' (ID: 75628)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0118783712387085
    2. ' zeros' → logprob: -1.1368783712387085
    3. ' cumulative' → logprob: -1.3868783712387085
    4. 'zeros' → logprob: -2.761878490447998
    5. ' c' → logprob: -7.261878490447998
    6. ' N' → logprob: -7.761878490447998
    7. 'N' → logprob: -8.63687801361084
    8. ' ' → logprob: -8.76187801361084
    9. '   ' → logprob: -8.76187801361084
    10. ' DP' → logprob: -8.88687801361084

Token 273: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.1756367712223437e-05
    2. '_' → logprob: -11.375011444091797
    3. 'xor' → logprob: -16.250011444091797
    4. '==' → logprob: -16.750011444091797
    5. ' _' → logprob: -17.375011444091797
    6. '_
' → logprob: -18.625011444091797
    7. '^' → logprob: -18.750011444091797
    8. ' ' → logprob: -18.875011444091797
    9. '__' → logprob: -18.875011444091797
    10. ' xor' → logprob: -19.000011444091797

Token 274: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -8.911954500945285e-05
    2. 'xor' → logprob: -10.000088691711426
    3. '_or' → logprob: -10.500088691711426
    4. '^' → logprob: -12.500088691711426
    5. '==' → logprob: -13.125088691711426
    6. 'ors' → logprob: -13.125088691711426
    7. 'orr' → logprob: -13.375088691711426
    8. '=' → logprob: -13.750088691711426
    9. 'orb' → logprob: -13.875088691711426
    10. '_' → logprob: -14.000088691711426

Token 275: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0590396486222744
    2. '==' → logprob: -2.93403959274292
    3. ' !=' → logprob: -5.55903959274292
    4. '!=' → logprob: -8.684040069580078
    5. ' ' → logprob: -10.059040069580078
    6. '[' → logprob: -10.434040069580078
    7. '=' → logprob: -10.809040069580078
    8. ':' → logprob: -10.934040069580078
    9. ' =' → logprob: -12.059040069580078
    10. ' ' → logprob: -12.059040069580078

Token 276: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14268578588962555
    2. ' ' → logprob: -2.017685890197754
    3. '1' → logprob: -12.642685890197754
    4. '  ' → logprob: -13.392685890197754
    5. '=' → logprob: -13.767685890197754
    6. '   ' → logprob: -14.017685890197754
    7. ' zeros' → logprob: -14.017685890197754
    8. 'zeros' → logprob: -14.267685890197754
    9. '>' → logprob: -14.642685890197754
    10. '==' → logprob: -15.330185890197754

Token 277: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003600901924073696
    2. ' ' → logprob: -5.62860107421875
    3. '=' → logprob: -15.50360107421875
    4. '1' → logprob: -15.75360107421875
    5. '  ' → logprob: -16.12860107421875
    6. '   ' → logprob: -16.37860107421875
    7. '>' → logprob: -16.62860107421875
    8. 'zero' → logprob: -17.25360107421875
    9. '==' → logprob: -17.69110107421875
    10. '```' → logprob: -18.25360107421875

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20170354843139648
    2. ':
' → logprob: -1.7017035484313965
    3. '       ' → logprob: -8.451704025268555
    4. '   ' → logprob: -10.326704025268555
    5. ' and' → logprob: -10.826704025268555
    6. ':return' → logprob: -12.076704025268555
    7. '==' → logprob: -12.826704025268555
    8. '):
' → logprob: -12.826704025268555
    9. ':
' → logprob: -12.951704025268555
    10. ' ==' → logprob: -13.326704025268555

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5766207575798035
    2. '   ' → logprob: -0.8266207575798035
    3. 'print' → logprob: -7.576620578765869
    4. ' print' → logprob: -8.701621055603027
    5. '
' → logprob: -13.951621055603027
    6. '```' → logprob: -14.201621055603027
    7. '	print' → logprob: -15.076621055603027
    8. '           ' → logprob: -16.57662010192871
    9. '	   ' → logprob: -16.82662010192871
    10. 'result' → logprob: -17.20162010192871

Token 280: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04934948682785034
    2. ' print' → logprob: -3.674349546432495
    3. '   ' → logprob: -3.799349546432495
    4. '       ' → logprob: -9.174349784851074
    5. 'result' → logprob: -9.299349784851074
    6. 'pr' → logprob: -10.174349784851074
    7. ' result' → logprob: -10.799349784851074
    8. '
' → logprob: -10.799349784851074
    9. ' for' → logprob: -11.174349784851074
    10. 'for' → logprob: -11.174349784851074

Token 281: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.10387634485960007
    2. '(' → logprob: -2.4788763523101807
    3. 'DP' → logprob: -4.978876113891602
    4. '0' → logprob: -5.228876113891602
    5. '(-' → logprob: -6.853876113891602
    6. '((' → logprob: -7.978876113891602
    7. 'zeros' → logprob: -8.353876113891602
    8. '(dp' → logprob: -8.478876113891602
    9. '("' → logprob: -8.728876113891602
    10. '(c' → logprob: -9.103876113891602

Token 282: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -4.127333340875339e-06
    2. '(P' → logprob: -14.625003814697266
    3. ' P' → logprob: -14.750003814697266
    4. '[P' → logprob: -14.875003814697266
    5. 'П' → logprob: -15.000003814697266
    6. '[' → logprob: -15.125003814697266
    7. 'p' → logprob: -15.250003814697266
    8. 'Ｐ' → logprob: -15.250003814697266
    9. '_P' → logprob: -15.312503814697266
    10. '
' → logprob: -15.500003814697266

Token 283: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -5.512236498361744e-07
    2. 'c' → logprob: -14.750000953674316
    3. '[' → logprob: -16.5
    4. '[-' → logprob: -16.625
    5. ')c' → logprob: -18.875
    6. ')' → logprob: -19.625
    7. ')[' → logprob: -19.75
    8. '   ' → logprob: -20.0
    9. ' [' → logprob: -20.25
    10. '[current' → logprob: -20.75

Token 284: 'umulative' (ID: 97729)
  Prédit: 'umulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -0.004523754585534334
    2. 'c' → logprob: -5.504523754119873
    3. 'um' → logprob: -8.379524230957031
    4. 'umul' → logprob: -9.629524230957031
    5. 'ulative' → logprob: -9.754524230957031
    6. 'uml' → logprob: -10.004524230957031
    7. 'cum' → logprob: -11.879524230957031
    8. '[' → logprob: -12.254524230957031
    9. 'ul' → logprob: -12.629524230957031
    10. 'm' → logprob: -12.629524230957031

Token 285: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.026779284700751305
    2. 'xor' → logprob: -3.6517791748046875
    3. 'x' → logprob: -7.7767791748046875
    4. '[c' → logprob: -10.651779174804688
    5. '[' → logprob: -11.401779174804688
    6. 'c' → logprob: -12.151779174804688
    7. 's' → logprob: -12.776779174804688
    8. '```' → logprob: -13.026779174804688
    9. '[x' → logprob: -13.151779174804688
    10. '__' → logprob: -13.276779174804688

Token 286: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.08104673027992249
    2. 'xor' → logprob: -2.5810468196868896
    3. 'ob' → logprob: -7.9560465812683105
    4. 'ar' → logprob: -7.9560465812683105
    5. 'r' → logprob: -8.456047058105469
    6. 'ed' → logprob: -8.456047058105469
    7. 'ox' → logprob: -8.706047058105469
    8. 'op' → logprob: -9.081047058105469
    9. 'er' → logprob: -9.581047058105469
    10. 'os' → logprob: -9.706047058105469

Token 287: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014207348227500916
    2. '[' → logprob: -4.264207363128662
    3. ')[' → logprob: -11.264206886291504
    4. ' ][' → logprob: -11.389206886291504
    5. ']' → logprob: -11.514206886291504
    6. '   ' → logprob: -12.139206886291504
    7. '"][' → logprob: -13.514206886291504
    8. '}[' → logprob: -14.014206886291504
    9. '1' → logprob: -14.514206886291504
    10. '       ' → logprob: -15.139206886291504

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012522248551249504
    2. '0' → logprob: -4.387522220611572
    3. ' ' → logprob: -12.01252269744873
    4. '   ' → logprob: -12.13752269744873
    5. '    ' → logprob: -15.70002269744873
    6. '[' → logprob: -15.88752269744873
    7. '１' → logprob: -15.88752269744873
    8. '  ' → logprob: -16.012521743774414
    9. '-' → logprob: -16.325021743774414
    10. '       ' → logprob: -17.075021743774414

Token 289: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012335648061707616
    2. '])' → logprob: -6.8762335777282715
    3. ' )' → logprob: -9.126233100891113
    4. ')
' → logprob: -9.501233100891113
    5. ']' → logprob: -11.876233100891113
    6. '))' → logprob: -13.126233100891113
    7. '%' → logprob: -13.251233100891113
    8. '})' → logprob: -13.501233100891113
    9. '%)' → logprob: -14.001233100891113
    10. ')%' → logprob: -14.001233100891113

Token 290: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03698604926466942
    2. '<|end|>' → logprob: -3.6619861125946045
    3. ' else' → logprob: -5.661985874176025
    4. 'elif' → logprob: -5.786985874176025
    5. '```' → logprob: -6.411985874176025
    6. '   ' → logprob: -6.911985874176025
    7. ')' → logprob: -7.161985874176025
    8. '\n' → logprob: -8.411986351013184
    9. '
' → logprob: -8.536986351013184
    10. '[' → logprob: -10.161986351013184

Token 292: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2525644600391388
    2. ':
' → logprob: -1.5025644302368164
    3. '       ' → logprob: -7.377564430236816
    4. '   ' → logprob: -12.002564430236816
    5. ':
' → logprob: -13.502564430236816
    6. ' :
' → logprob: -14.252564430236816
    7. ':

' → logprob: -14.877564430236816
    8. '):
' → logprob: -15.127564430236816
    9. ' :' → logprob: -15.502564430236816
    10. 'print' → logprob: -15.752564430236816

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.339278580620885e-06
    2. 'print' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.125001907348633
    4. '```' → logprob: -15.375001907348633
    5. '           ' → logprob: -16.250001907348633
    6. ' print' → logprob: -16.500001907348633
    7. '      ' → logprob: -18.750001907348633
    8. '     ' → logprob: -18.750001907348633
    9. '[' → logprob: -19.375001907348633
    10. '    ' → logprob: -19.750001907348633

Token 294: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5213274309644476e-05
    2. ' print' → logprob: -11.125015258789062
    3. '       ' → logprob: -15.250015258789062
    4. '```' → logprob: -16.125015258789062
    5. '   ' → logprob: -16.500015258789062
    6. '
' → logprob: -17.250015258789062
    7. '0' → logprob: -19.125015258789062
    8. 'zeros' → logprob: -19.375015258789062
    9. '``' → logprob: -20.000015258789062
    10. '	print' → logprob: -20.125015258789062

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10057014226913452
    2. '=' → logprob: -2.3505702018737793
    3. '   ' → logprob: -8.100569725036621
    4. ' ' → logprob: -10.725569725036621
    5. '  ' → logprob: -11.600569725036621
    6. '```' → logprob: -12.225569725036621
    7. ' +=' → logprob: -12.350569725036621
    8. '       ' → logprob: -12.600569725036621
    9. ')' → logprob: -12.725569725036621
    10. '[' → logprob: -13.225569725036621

Token 296: ' pow' (ID: 9779)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.5352569818496704
    2. '0' → logprob: -1.4102569818496704
    3. 'zeros' → logprob: -2.410256862640381
    4. '(' → logprob: -3.285256862640381
    5. '1' → logprob: -4.285256862640381
    6. 'sum' → logprob: -4.410256862640381
    7. 'pow' → logprob: -5.285256862640381
    8. ' DP' → logprob: -5.410256862640381
    9. '(D' → logprob: -6.660256862640381
    10. ' zeros' → logprob: -6.910256862640381

Token 297: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000656081538181752
    2. '2' → logprob: -7.3756561279296875
    3. '(D' → logprob: -11.750656127929688
    4. '
' → logprob: -12.375656127929688
    5. 'mod' → logprob: -12.375656127929688
    6. '(pow' → logprob: -13.000656127929688
    7. '((' → logprob: -13.250656127929688
    8. '(mod' → logprob: -13.375656127929688
    9. '(
' → logprob: -13.500656127929688
    10. '(dp' → logprob: -13.875656127929688

Token 298: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023772140964865685
    2. '(' → logprob: -3.7737722396850586
    3. '3' → logprob: -8.523772239685059
    4. '7' → logprob: -9.023772239685059
    5. '
' → logprob: -9.773772239685059
    6. 'zeros' → logprob: -10.523772239685059
    7. '10' → logprob: -10.523772239685059
    8. 'pow' → logprob: -10.648772239685059
    9. ' ' → logprob: -11.523772239685059
    10. 'mod' → logprob: -11.648772239685059

Token 299: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.041792385280132294
    2. ',' → logprob: -3.666792392730713
    3. '(N' → logprob: -4.416792392730713
    4. ',N' → logprob: -6.541792392730713
    5. ' (' → logprob: -7.416792392730713
    6. 'zeros' → logprob: -7.541792392730713
    7. ' ,' → logprob: -7.666792392730713
    8. '=zeros' → logprob: -10.041791915893555
    9. '   ' → logprob: -10.416791915893555
    10. ')' → logprob: -10.541791915893555

Token 300: ' zeros' (ID: 42274)
  Prédit: 'zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -8.137130498653278e-05
    2. ' zeros' → logprob: -9.625081062316895
    3. 'N' → logprob: -11.250081062316895
    4. '(' → logprob: -14.125081062316895
    5. 'zer' → logprob: -14.250081062316895
    6. '   ' → logprob: -14.750081062316895
    7. 'zero' → logprob: -15.250081062316895
    8. '0' → logprob: -16.37508201599121
    9. '```' → logprob: -16.75008201599121
    10. 'Zeros' → logprob: -17.25008201599121

Token 301: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002617989666759968
    2. ' ,' → logprob: -6.502617835998535
    3. ')' → logprob: -7.002617835998535
    4. '-' → logprob: -9.127617835998535
    5. '   ' → logprob: -10.127617835998535
    6. ' -' → logprob: -10.627617835998535
    7. '       ' → logprob: -11.127617835998535
    8. '```' → logprob: -12.002617835998535
    9. ',
' → logprob: -13.002617835998535
    10. '*' → logprob: -13.627617835998535

Token 302: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001329791557509452
    2. ' ' → logprob: -9.12513256072998
    3. '2' → logprob: -10.75013256072998
    4. '0' → logprob: -14.37513256072998
    5. 'N' → logprob: -14.75013256072998
    6. '   ' → logprob: -15.43763256072998
    7. 'mod' → logprob: -15.43763256072998
    8. '(' → logprob: -15.75013256072998
    9. '3' → logprob: -15.87513256072998
    10. 'ans' → logprob: -15.93763256072998

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010747690976131707
    2. '2' → logprob: -9.625107765197754
    3. 'N' → logprob: -10.625107765197754
    4. ' ' → logprob: -11.750107765197754
    5. 'mod' → logprob: -12.750107765197754
    6. '0' → logprob: -13.375107765197754
    7. 'ans' → logprob: -14.125107765197754
    8. 'int' → logprob: -14.625107765197754
    9. '3' → logprob: -14.625107765197754
    10. 'A' → logprob: -14.750107765197754

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033475093077868223
    2. ')' → logprob: -6.003347396850586
    3. ' ,' → logprob: -7.128347396850586
    4. '   ' → logprob: -9.878347396850586
    5. '       ' → logprob: -11.253347396850586
    6. ',
' → logprob: -13.878347396850586
    7. '```' → logprob: -14.253347396850586
    8. '-' → logprob: -14.628347396850586
    9. '           ' → logprob: -14.753347396850586
    10. ')
' → logprob: -14.878347396850586

Token 305: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00012356207298580557
    2. ' mod' → logprob: -9.000123977661133
    3. '10' → logprob: -16.250123977661133
    4. '   ' → logprob: -18.625123977661133
    5. '7' → logprob: -19.125123977661133
    6. '(mod' → logprob: -19.250123977661133
    7. '	mod' → logprob: -19.500123977661133
    8. 'MOD' → logprob: -20.000123977661133
    9. '100' → logprob: -20.375123977661133
    10. ' ' → logprob: -21.375123977661133

Token 306: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06220978870987892
    2. ')' → logprob: -2.8122098445892334
    3. '       ' → logprob: -8.812210083007812
    4. ' )
' → logprob: -9.937210083007812
    5. '   ' → logprob: -10.687210083007812
    6. ')
' → logprob: -11.062210083007812
    7. ' )' → logprob: -12.937210083007812
    8. ',' → logprob: -13.562210083007812
    9. ')+' → logprob: -14.187210083007812
    10. ')

' → logprob: -14.812210083007812

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00346310599707067
    2. 'print' → logprob: -5.753463268280029
    3. '   ' → logprob: -8.378462791442871
    4. '```' → logprob: -9.878462791442871
    5. ' print' → logprob: -12.878462791442871
    6. '``' → logprob: -14.003462791442871
    7. '
' → logprob: -14.503462791442871
    8. '           ' → logprob: -15.378462791442871
    9. '	print' → logprob: -16.378463745117188
    10. '        
' → logprob: -18.128463745117188

Token 308: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.35706390615087e-05
    2. '       ' → logprob: -11.000033378601074
    3. ' print' → logprob: -11.000033378601074
    4. '   ' → logprob: -15.875033378601074
    5. '	print' → logprob: -20.62503433227539
    6. '```' → logprob: -20.62503433227539
    7. '           ' → logprob: -21.37503433227539
    8. '
' → logprob: -21.50003433227539
    9. '.print' → logprob: -22.75003433227539
    10. ' ' → logprob: -23.50003433227539

Token 309: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1611337810754776
    2. '_' → logprob: -2.1611337661743164
    3. ' i' → logprob: -4.036133766174316
    4. 'c' → logprob: -5.536133766174316
    5. 'x' → logprob: -5.536133766174316
    6. '_i' → logprob: -5.661133766174316
    7. '_x' → logprob: -6.786133766174316
    8. ' _' → logprob: -6.786133766174316
    9. 'v' → logprob: -7.661133766174316
    10. '_c' → logprob: -7.786133766174316

Token 310: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005993501283228397
    2. 'in' → logprob: -5.130993366241455
    3. ' ' → logprob: -10.630993843078613
    4. '_' → logprob: -11.255993843078613
    5. 'range' → logprob: -11.880993843078613
    6. ' range' → logprob: -12.005993843078613
    7. '(' → logprob: -12.255993843078613
    8. '(range' → logprob: -13.505993843078613
    9. ',' → logprob: -13.630993843078613
    10. '   ' → logprob: -13.755993843078613

Token 311: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03384232893586159
    2. ' range' → logprob: -3.4088423252105713
    3. 'DP' → logprob: -9.408842086791992
    4. '   ' → logprob: -9.908842086791992
    5. ' DP' → logprob: -11.033842086791992
    6. ' ' → logprob: -11.033842086791992
    7. '  ' → logprob: -11.783842086791992
    8. '(range' → logprob: -12.408842086791992
    9. 'A' → logprob: -12.533842086791992
    10. '    ' → logprob: -12.783842086791992

Token 312: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17767174541950226
    2. '(N' → logprob: -2.1776716709136963
    3. 'zeros' → logprob: -3.6776716709136963
    4. '(c' → logprob: -4.802671909332275
    5. '1' → logprob: -5.177671909332275
    6. '2' → logprob: -5.802671909332275
    7. '(z' → logprob: -5.927671909332275
    8. '   ' → logprob: -6.927671909332275
    9. 'c' → logprob: -7.052671909332275
    10. '(len' → logprob: -7.302671909332275

Token 313: '2' (ID: 17)
  Prédit: 'zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.9255886077880859
    2. '1' → logprob: -1.675588607788086
    3. 'N' → logprob: -2.300588607788086
    4. '2' → logprob: -2.300588607788086
    5. '(' → logprob: -2.550588607788086
    6. '20' → logprob: -2.675588607788086
    7. 'c' → logprob: -3.175588607788086
    8. 'len' → logprob: -3.925588607788086
    9. 'mod' → logprob: -6.175588607788086
    10. '(c' → logprob: -6.425588607788086

Token 314: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2533036172389984
    2. ' **' → logprob: -1.5033036470413208
    3. '20' → logprob: -6.628303527832031
    4. ' ' → logprob: -10.878303527832031
    5. '```' → logprob: -11.753303527832031
    6. '0' → logprob: -12.128303527832031
    7. '*' → logprob: -12.378303527832031
    8. ' *' → logprob: -12.628303527832031
    9. ' ' → logprob: -12.878303527832031
    10. '   ' → logprob: -13.253303527832031

Token 315: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -2.0219828002154827e-05
    2. '10' → logprob: -11.125020027160645
    3. '19' → logprob: -12.875020027160645
    4. '17' → logprob: -13.250020027160645
    5. '18' → logprob: -15.375020027160645
    6. '0' → logprob: -16.00002098083496
    7. '15' → logprob: -16.00002098083496
    8. '1' → logprob: -16.25002098083496
    9. '16' → logprob: -16.25002098083496
    10. '
' → logprob: -16.87502098083496

Token 316: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -1.1472419600977446e-06
    2. '10' → logprob: -14.000000953674316
    3. '0' → logprob: -16.500001907348633
    4. '19' → logprob: -16.500001907348633
    5. '17' → logprob: -17.000001907348633
    6. '
' → logprob: -18.250001907348633
    7. '2' → logprob: -18.250001907348633
    8. '1' → logprob: -18.500001907348633
    9. '18' → logprob: -18.625001907348633
    10. '30' → logprob: -18.875001907348633

Token 317: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0803055390715599
    2. '):' → logprob: -2.580305576324463
    3. '   ' → logprob: -7.080305576324463
    4. '       ' → logprob: -8.205305099487305
    5. ')' → logprob: -9.205305099487305
    6. '():
' → logprob: -10.205305099487305
    7. '):
' → logprob: -10.455305099487305
    8. '**' → logprob: -10.705305099487305
    9. ':' → logprob: -10.830305099487305
    10. ',' → logprob: -10.955305099487305

Token 318: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028067290782928467
    2. ' if' → logprob: -3.7780673503875732
    3. '   ' → logprob: -5.903067111968994
    4. 'if' → logprob: -6.528067111968994
    5. '       ' → logprob: -7.778067111968994
    6. '```' → logprob: -9.653067588806152
    7. '[' → logprob: -10.278067588806152
    8. '	       ' → logprob: -10.528067588806152
    9. '<|end|>' → logprob: -10.778067588806152
    10. ' ' → logprob: -11.528067588806152

Token 319: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6624179482460022
    2. '       ' → logprob: -1.5374178886413574
    3. '           ' → logprob: -2.0374178886413574
    4. 'if' → logprob: -2.1624178886413574
    5. 'ans' (adapté à ' ans') → logprob: -4.412417888641357
    6. ' if' → logprob: -5.037417888641357
    7. ' ans' → logprob: -5.412417888641357
    8. '	ans' → logprob: -7.537417888641357
    9. 'for' → logprob: -8.787418365478516
    10. 'print' → logprob: -9.787418365478516

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06191311776638031
    2. '%=' → logprob: -3.311913013458252
    3. '+=' → logprob: -4.436913013458252
    4. ' =' → logprob: -5.186913013458252
    5. '*=' → logprob: -5.436913013458252
    6. '   ' → logprob: -7.436913013458252
    7. '-=' → logprob: -7.936913013458252
    8. ' +=' → logprob: -8.06191349029541
    9. ' *=' → logprob: -8.43691349029541
    10. ' ^=' → logprob: -8.93691349029541

Token 321: ' ans' (ID: 3345)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.004380397964268923
    2. 'ans' → logprob: -5.504380226135254
    3. ' (' → logprob: -8.629380226135254
    4. ' ans' → logprob: -9.379380226135254
    5. '(' → logprob: -10.504380226135254
    6. '   ' → logprob: -12.754380226135254
    7. '	ans' → logprob: -13.254380226135254
    8. '(answer' → logprob: -13.504380226135254
    9. '(max' → logprob: -14.129380226135254
    10. '_ans' → logprob: -14.129380226135254

Token 322: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2457946240901947
    2. ' *' → logprob: -2.3707945346832275
    3. '%' → logprob: -2.4957945346832275
    4. ' %' → logprob: -3.6207945346832275
    5. '-' → logprob: -5.245794773101807
    6. '+' → logprob: -5.370794773101807
    7. ' -' → logprob: -6.370794773101807
    8. ' +' → logprob: -6.745794773101807
    9. '(ans' → logprob: -7.370794773101807
    10. '   ' → logprob: -7.495794773101807

Token 323: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.033733759075403214
    2. ' DP' → logprob: -3.40873384475708
    3. '   ' → logprob: -10.783733367919922
    4. '           ' → logprob: -11.033733367919922
    5. 'dp' → logprob: -11.408733367919922
    6. '       ' → logprob: -11.908733367919922
    7. ' (' → logprob: -12.158733367919922
    8. '(' → logprob: -12.408733367919922
    9. ' ' → logprob: -12.533733367919922
    10. '_DP' → logprob: -12.783733367919922

Token 324: '[i' (ID: 1768)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.6038147211074829
    2. '[i' → logprob: -0.8538147211074829
    3. '[' → logprob: -3.6038146018981934
    4. '[
' → logprob: -10.103815078735352
    5. '   ' → logprob: -10.353815078735352
    6. '[(' → logprob: -10.728815078735352
    7. '```' → logprob: -10.853815078735352
    8. '\[' → logprob: -10.978815078735352
    9. '[][' → logprob: -11.103815078735352
    10. '       ' → logprob: -11.353815078735352

Token 325: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007025416707620025
    2. '[' → logprob: -7.375702381134033
    3. ']' → logprob: -9.750702857971191
    4. ' ][' → logprob: -12.000702857971191
    5. '   ' → logprob: -12.750702857971191
    6. '0' → logprob: -13.000702857971191
    7. '"][' → logprob: -13.625702857971191
    8. '[i' → logprob: -14.250702857971191
    9. ')[' → logprob: -14.625702857971191
    10. ''][' → logprob: -14.625702857971191

Token 326: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4741043448448181
    2. '0' → logprob: -0.9741043448448181
    3. ' ' → logprob: -11.349103927612305
    4. '[' → logprob: -11.724103927612305
    5. '][' → logprob: -12.849103927612305
    6. '
' → logprob: -13.411603927612305
    7. '   ' → logprob: -13.536603927612305
    8. ']' → logprob: -14.224103927612305
    9. '01' → logprob: -16.161603927612305
    10. '１' → logprob: -16.349103927612305

Token 327: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06377513706684113
    2. ']%' → logprob: -2.813775062561035
    3. ' ]' → logprob: -7.063775062561035
    4. ']
' → logprob: -7.938775062561035
    5. '][' → logprob: -8.188775062561035
    6. '[' → logprob: -8.813775062561035
    7. '])' → logprob: -9.938775062561035
    8. '   ' → logprob: -10.438775062561035
    9. '       ' → logprob: -10.813775062561035
    10. ')' → logprob: -11.563775062561035

Token 328: '           ' (ID: 352)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.045523907989263535
    2. '%' → logprob: -3.1705238819122314
    3. '
' → logprob: -6.7955241203308105
    4. '       ' → logprob: -7.0455241203308105
    5. '```' → logprob: -8.420523643493652
    6. '           ' → logprob: -9.045523643493652
    7. ')' → logprob: -9.795523643493652
    8. '   ' → logprob: -10.420523643493652
    9. '%n' → logprob: -10.545523643493652
    10. ')%' → logprob: -11.045523643493652

Token 329: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1949724704027176
    2. '           ' → logprob: -2.569972515106201
    3. ' %' → logprob: -2.944972515106201
    4. '%' → logprob: -3.694972515106201
    5. '=' → logprob: -4.319972515106201
    6. 'ans' (adapté à ' ans') → logprob: -5.069972515106201
    7. ' mod' → logprob: -7.444972515106201
    8. ' =' → logprob: -7.444972515106201
    9. '(ans' → logprob: -7.694972515106201
    10. '       ' → logprob: -8.194972038269043

Token 330: ' =' (ID: 314)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.1656058430671692
    2. ' %=' → logprob: -2.2906057834625244
    3. '=' → logprob: -3.1656057834625244
    4. ' =' → logprob: -4.7906060218811035
    5. '%' → logprob: -7.0406060218811035
    6. ' %' → logprob: -10.665605545043945
    7. ')' → logprob: -11.915605545043945
    8. ')%' → logprob: -12.540605545043945
    9. '   ' → logprob: -12.665605545043945
    10. '=%' → logprob: -12.665605545043945

Token 331: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.38687393069267273
    2. ' ans' → logprob: -1.1368739604949951
    3. '(ans' → logprob: -12.886874198913574
    4. '	ans' → logprob: -14.886874198913574
    5. '_ans' → logprob: -18.136873245239258
    6. 'Ans' → logprob: -20.011873245239258
    7. 'ANS' → logprob: -20.511873245239258
    8. 'a' → logprob: -22.136873245239258
    9. ' ' → logprob: -22.261873245239258
    10. '   ' → logprob: -22.386873245239258

Token 332: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.048608940094709396
    2. ' %' → logprob: -3.0486090183258057
    3. ' ans' → logprob: -11.048608779907227
    4. 'ans' → logprob: -12.298608779907227
    5. '(ans' → logprob: -14.298608779907227
    6. '```' → logprob: -15.298608779907227
    7. ')' → logprob: -16.673608779907227
    8. '%s' → logprob: -17.048608779907227
    9. '	ans' → logprob: -17.548608779907227
    10. '
' → logprob: -17.548608779907227

Token 333: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.306760805164231e-05
    2. ' mod' → logprob: -11.25001335144043
    3. '(mod' → logprob: -17.50001335144043
    4. '	mod' → logprob: -21.87501335144043
    5. '```' → logprob: -23.87501335144043
    6. 'MOD' → logprob: -24.12501335144043
    7. ' мод' → logprob: -24.37501335144043
    8. ' ' → logprob: -24.62501335144043
    9. '   ' → logprob: -24.87501335144043
    10. 'moder' → logprob: -25.00001335144043

Token 334: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031514860689640045
    2. '
' → logprob: -3.656514883041382
    3. '   ' → logprob: -5.781514644622803
    4. 'print' → logprob: -6.406514644622803
    5. '```' → logprob: -7.906514644622803
    6. ' print' → logprob: -10.156515121459961
    7. '        
' → logprob: -11.031515121459961
    8. '  
' → logprob: -11.781515121459961
    9. '    
' → logprob: -11.781515121459961
    10. '<|end|>' → logprob: -11.906515121459961

Token 335: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2632603645324707
    2. '       ' → logprob: -1.5132603645324707
    3. '```' → logprob: -5.013260364532471
    4. '
' → logprob: -6.013260364532471
    5. 'print' → logprob: -6.388260364532471
    6. '<|end|>' → logprob: -8.138259887695312
    7. '    
' → logprob: -9.638259887695312
    8. ' print' → logprob: -9.888259887695312
    9. '        
' → logprob: -10.638259887695312
    10. '``' → logprob: -11.013259887695312

Token 336: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0013730881037190557
    2. ' print' → logprob: -7.251373291015625
    3. '   ' → logprob: -7.751373291015625
    4. '       ' → logprob: -8.501373291015625
    5. '```' → logprob: -10.501373291015625
    6. '
' → logprob: -13.376373291015625
    7. '	print' → logprob: -15.376373291015625
    8. '``' → logprob: -15.751373291015625
    9. ' ' → logprob: -15.876373291015625
    10. '  ' → logprob: -16.251373291015625

Token 337: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.375001907348633
    3. 'ans' → logprob: -14.750001907348633
    4. ' (' → logprob: -16.375001907348633
    5. '(answer' → logprob: -16.375001907348633
    6. '()' → logprob: -18.500001907348633
    7. '((' → logprob: -19.625001907348633
    8. '	ans' → logprob: -19.625001907348633
    9. '(abs' → logprob: -19.875001907348633
    10. '(an' → logprob: -20.375001907348633

Token 338: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8193366486229934e-05
    2. ')
' → logprob: -11.500018119812012
    3. '   ' → logprob: -12.625018119812012
    4. '       ' → logprob: -13.375018119812012
    5. '())' → logprob: -13.500018119812012
    6. '()' → logprob: -14.500018119812012
    7. ' )' → logprob: -14.625018119812012
    8. '))' → logprob: -15.125018119812012
    9. ')`' → logprob: -15.250018119812012
    10. '`)' → logprob: -16.125019073486328

Token 339: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4942190945148468
    2. '<|end|>' → logprob: -0.9942190647125244
    3. '
' → logprob: -4.3692193031311035
    4. '```' → logprob: -6.3692193031311035
    5. '<|end|>' → logprob: -6.3692193031311035
    6. ' ' → logprob: -6.7442193031311035
    7. '#' → logprob: -7.2442193031311035
    8. ':' → logprob: -7.9942193031311035
    9. '[' → logprob: -8.119218826293945
    10. '%' → logprob: -8.619218826293945

Token 340: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.006888470146805048
    2. '__' → logprob: -5.006888389587402
    3. ' ' → logprob: -9.006888389587402
    4. '_' → logprob: -10.131888389587402
    5. ' _' → logprob: -12.756888389587402
    6. '_name' → logprob: -12.881888389587402
    7. ' ' → logprob: -12.881888389587402
    8. ' ' → logprob: -13.256888389587402
    9. ' ___' → logprob: -15.506888389587402
    10. '﻿' → logprob: -15.881888389587402

Token 341: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.034129928797483444
    2. ' ==' → logprob: -3.5341298580169678
    3. '==' → logprob: -5.784130096435547
    4. ' __' → logprob: -7.534130096435547
    5. 'name' → logprob: -8.159130096435547
    6. '__.__' → logprob: -8.909130096435547
    7. '.__' → logprob: -9.409130096435547
    8. '__.' → logprob: -9.659130096435547
    9. '()==' → logprob: -10.284130096435547
    10. '()' → logprob: -10.534130096435547

Token 342: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.558399319241289e-05
    2. '==' → logprob: -11.125025749206543
    3. '__.__' → logprob: -11.750025749206543
    4. '__.' → logprob: -14.125025749206543
    5. '___' → logprob: -14.500025749206543
    6. ' ==' → logprob: -14.625025749206543
    7. '_' → logprob: -15.125025749206543
    8. '=="' → logprob: -15.125025749206543
    9. '__["' → logprob: -15.500025749206543
    10. '____' → logprob: -15.750025749206543

Token 343: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04220844432711601
    2. ' ==' → logprob: -3.667208433151245
    3. '==' → logprob: -4.167208671569824
    4. '=="' → logprob: -8.667208671569824
    5. '=='' → logprob: -9.667208671569824
    6. '__.__' → logprob: -10.417208671569824
    7. '_' → logprob: -12.667208671569824
    8. '__":
' → logprob: -12.792208671569824
    9. '__["' → logprob: -12.917208671569824
    10. '___' → logprob: -12.917208671569824

Token 344: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.038071442395448685
    2. ''' → logprob: -3.288071393966675
    3. '__' → logprob: -10.663071632385254
    4. ' "__' → logprob: -12.038071632385254
    5. ' '__' → logprob: -14.788071632385254
    6. ''"' → logprob: -17.038070678710938
    7. '   ' → logprob: -17.413070678710938
    8. '("__' → logprob: -17.663070678710938
    9. '"user' → logprob: -17.663070678710938
    10. '"'' → logprob: -17.788070678710938

Token 345: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6940752863883972
    2. 'main' → logprob: -0.6940752863883972
    3. '__":
' → logprob: -8.069075584411621
    4. '"' → logprob: -8.319075584411621
    5. ''' → logprob: -8.819075584411621
    6. 'name' → logprob: -8.944075584411621
    7. '__':
' → logprob: -10.444075584411621
    8. 'python' → logprob: -11.069075584411621
    9. '__
' → logprob: -11.819075584411621
    10. '___' → logprob: -11.819075584411621

Token 346: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.02862895280122757
    2. '__' → logprob: -3.6536290645599365
    3. '__':
' → logprob: -6.153628826141357
    4. '__.' → logprob: -8.903629302978516
    5. '__["' → logprob: -10.403629302978516
    6. '__.__' → logprob: -11.278629302978516
    7. '__:' → logprob: -12.278629302978516
    8. '__()
' → logprob: -12.403629302978516
    9. '():
' → logprob: -12.903629302978516
    10. '__
' → logprob: -12.903629302978516

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25751161575317383
    2. 'main' → logprob: -2.132511615753174
    3. ' main' → logprob: -2.382511615753174
    4. '	main' → logprob: -4.132511615753174
    5. '_main' → logprob: -9.882511138916016
    6. '__' → logprob: -10.382511138916016
    7. '    
' → logprob: -11.132511138916016
    8. '```' → logprob: -11.632511138916016
    9. ' ' → logprob: -11.882511138916016
    10. '(main' → logprob: -12.507511138916016

Token 348: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0009244420798495412
    2. ' main' → logprob: -7.000924587249756
    3. '   ' → logprob: -11.500924110412598
    4. '	main' → logprob: -12.750924110412598
    5. '```' → logprob: -18.500925064086914
    6. '_main' → logprob: -18.625925064086914
    7. ' ' → logprob: -18.875925064086914
    8. '(main' → logprob: -19.875925064086914
    9. '.main' → logprob: -20.500925064086914
    10. '  ' → logprob: -20.875925064086914

Token 349: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 347
Tokens correctement prédits (1ère position, stricte): 165
Tokens correctement prédits (1ère position, avec adaptation): 170
Tokens correctement prédits (top 10): 297
Précision stricte (1ère position): 47.55%
Précision adaptée (1ère position): 48.99%
Précision (top 10): 85.59%
================================================================================
