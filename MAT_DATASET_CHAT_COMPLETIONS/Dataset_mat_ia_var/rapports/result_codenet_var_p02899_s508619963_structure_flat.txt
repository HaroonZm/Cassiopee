================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect,collections,copy,heapq,itertools,math,string
import numpy as np
from numba import njit
import sys
sys.setrecursionlimit(10**7)

N = int(sys.stdin.readline().rstrip())
A = list(map(int, sys.stdin.readline().rstrip().split()))
B = range(1, N+1)
AB = zip(A, B)
sAB = sorted(AB)
l = list(sAB)
ans = []
for x in l:
    ans.append(x[1])
print(*ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00041732576210051775
    2. '(' → logprob: -7.875417232513428
    3. '\' → logprob: -11.750417709350586
    4. '\n' → logprob: -12.375417709350586
    5. '.
' → logprob: -12.875417709350586
    6. '.

' → logprob: -13.000417709350586
    7. 'newline' → logprob: -13.125417709350586
    8. '.e' → logprob: -13.250417709350586
    9. '.\' → logprob: -13.375417709350586
    10. '.b' → logprob: -13.375417709350586

Token 4: 'collections' (ID: 83306)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.07328372448682785
    2. 'collections' → logprob: -3.4482836723327637
    3. ' heap' → logprob: -3.9482836723327637
    4. 'sys' → logprob: -4.573283672332764
    5. 'math' → logprob: -5.323283672332764
    6. ' sys' → logprob: -6.323283672332764
    7. ' collections' → logprob: -6.948283672332764
    8. ' itertools' → logprob: -7.198283672332764
    9. ' math' → logprob: -8.323284149169922
    10. 'it' → logprob: -8.448284149169922

Token 5: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.016313062980771065
    2. ',' → logprob: -4.641313076019287
    3. '<|end|>' → logprob: -6.266313076019287
    4. 'import' → logprob: -7.016313076019287
    5. '
' → logprob: -7.141313076019287
    6. '\n' → logprob: -7.516313076019287
    7. 'newline' → logprob: -7.516313076019287
    8. '

' → logprob: -7.641313076019287
    9. '\' → logprob: -8.266312599182129
    10. '```' → logprob: -8.766312599182129

Token 6: 'copy' (ID: 14730)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.04145414009690285
    2. 'it' → logprob: -3.7914540767669678
    3. 'math' → logprob: -4.416454315185547
    4. 'fun' → logprob: -5.666454315185547
    5. 'datetime' → logprob: -7.541454315185547
    6. 'copy' → logprob: -7.541454315185547
    7. 'operator' → logprob: -8.291454315185547
    8. ' heap' → logprob: -8.291454315185547
    9. 'sys' → logprob: -8.416454315185547
    10. 'os' → logprob: -8.541454315185547

Token 7: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6894257664680481
    2. ',' → logprob: -0.8144257664680481
    3. '<|end|>' → logprob: -3.3144257068634033
    4. 'import' → logprob: -5.189425945281982
    5. '\n' → logprob: -5.189425945281982
    6. '\' → logprob: -6.064425945281982
    7. '
' → logprob: -7.064425945281982
    8. '

' → logprob: -7.564425945281982
    9. '```' → logprob: -7.689425945281982
    10. '<|end|>' → logprob: -7.814425945281982

Token 8: 'heap' (ID: 38535)
  Prédit: 'datetime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datetime' → logprob: -0.46601882576942444
    2. 'csv' → logprob: -1.841018795967102
    3. 'fun' → logprob: -2.5910189151763916
    4. 'heap' → logprob: -2.7160189151763916
    5. 'dat' → logprob: -3.5910189151763916
    6. 'dif' → logprob: -4.4660186767578125
    7. 'it' → logprob: -4.7160186767578125
    8. 'decimal' → logprob: -4.8410186767578125
    9. 'deque' → logprob: -6.3410186767578125
    10. 'cmath' → logprob: -6.4660186767578125

Token 9: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.007350104860961437
    2. '.' → logprob: -5.007349967956543
    3. ' ' → logprob: -8.257349967956543
    4. '_' → logprob: -8.382349967956543
    5. 'space' → logprob: -10.257349967956543
    6. 't' → logprob: -10.382349967956543
    7. 's' → logprob: -10.757349967956543
    8. 'n' → logprob: -11.507349967956543
    9. ')' → logprob: -11.882349967956543
    10. ',' → logprob: -12.132349967956543

Token 10: ',it' (ID: 133769)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047977338545024395
    2. '.' → logprob: -6.12979793548584
    3. '<|end|>' → logprob: -6.87979793548584
    4. ',n' → logprob: -7.75479793548584
    5. 'import' → logprob: -8.50479793548584
    6. ',a' → logprob: -8.62979793548584
    7. ',json' → logprob: -9.12979793548584
    8. ',b' → logprob: -9.25479793548584
    9. ',e' → logprob: -9.62979793548584
    10. ',opt' → logprob: -9.62979793548584

Token 11: 'ertools' (ID: 88385)
  Prédit: 'ertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.0001238004770129919
    2. 'er' → logprob: -9.250123977661133
    3. 'ert' → logprob: -10.625123977661133
    4. 'erto' → logprob: -13.250123977661133
    5. 'ools' → logprob: -13.750123977661133
    6. 'tools' → logprob: -15.125123977661133
    7. 'ertu' → logprob: -16.875123977661133
    8. 'ers' → logprob: -17.125123977661133
    9. 'e' → logprob: -17.375123977661133
    10. '```' → logprob: -18.375123977661133

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016926590353250504
    2. '.' → logprob: -4.5169267654418945
    3. ',n' → logprob: -6.3919267654418945
    4. '<|end|>' → logprob: -6.3919267654418945
    5. ',.' → logprob: -7.6419267654418945
    6. 'import' → logprob: -7.6419267654418945
    7. ',a' → logprob: -8.516926765441895
    8. '```' → logprob: -8.641926765441895
    9. ',b' → logprob: -9.016926765441895
    10. ',e' → logprob: -9.266926765441895

Token 13: 'math' (ID: 20310)
  Prédit: 'json'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'json' → logprob: -0.6447353959083557
    2. 'math' → logprob: -0.7697353959083557
    3. 'operator' → logprob: -4.644735336303711
    4. 'logging' → logprob: -6.769735336303711
    5. 'os' → logprob: -8.019735336303711
    6. 'random' → logprob: -8.769735336303711
    7. 're' → logprob: -8.894735336303711
    8. 'line' → logprob: -8.894735336303711
    9. 'locale' → logprob: -9.019735336303711
    10. 'fun' → logprob: -9.144735336303711

Token 14: ',string' (ID: 89629)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004825849551707506
    2. '.' → logprob: -5.629826068878174
    3. ',.' → logprob: -7.629826068878174
    4. ',n' → logprob: -8.379825592041016
    5. '.,' → logprob: -9.504825592041016
    6. ',json' → logprob: -9.504825592041016
    7. ',b' → logprob: -10.004825592041016
    8. ',f' → logprob: -10.504825592041016
    9. ',opt' → logprob: -10.629825592041016
    10. ',np' → logprob: -10.754825592041016

Token 15: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020331883803009987
    2. '.' → logprob: -5.020331859588623
    3. ',
' → logprob: -6.020331859588623
    4. ',a' → logprob: -6.145331859588623
    5. 'import' → logprob: -6.520331859588623
    6. ',n' → logprob: -6.770331859588623
    7. ',

' → logprob: -6.895331859588623
    8. '\n' → logprob: -7.020331859588623
    9. '' → logprob: -7.520331859588623
    10. '

' → logprob: -7.520331859588623

Token 16: 'import' (ID: 561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016962679103016853
    2. ',n' → logprob: -5.14196252822876
    3. 'import' → logprob: -5.89196252822876
    4. ',re' → logprob: -6.14196252822876
    5. '.' → logprob: -6.89196252822876
    6. ',
' → logprob: -7.14196252822876
    7. ',e' → logprob: -7.39196252822876
    8. ',a' → logprob: -7.76696252822876
    9. ',p' → logprob: -7.76696252822876
    10. '<|end|>' → logprob: -8.141963005065918

Token 17: ' numpy' (ID: 19529)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5638905763626099
    2. ' os' → logprob: -1.5638905763626099
    3. ' random' → logprob: -2.0638904571533203
    4. ' re' → logprob: -3.6888904571533203
    5. 'sys' → logprob: -3.8138904571533203
    6. 'os' → logprob: -4.18889045715332
    7. 'random' → logprob: -4.56389045715332
    8. ' operator' → logprob: -5.18889045715332
    9. ' functools' → logprob: -5.18889045715332
    10. 're' → logprob: -6.06389045715332

Token 18: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0005156210972927511
    2. 'np' → logprob: -8.125515937805176
    3. ' ' → logprob: -8.500515937805176
    4. ' ' → logprob: -11.625515937805176
    5. ' array' → logprob: -13.000515937805176
    6. ' numpy' → logprob: -13.000515937805176
    7. ' ndarray' → logprob: -13.750515937805176
    8. '```' → logprob: -15.000515937805176
    9. 'array' → logprob: -15.125515937805176
    10. ' n' → logprob: -15.250515937805176

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6603001356124878
    2. '<|end|>' → logprob: -1.5353001356124878
    3. '.' → logprob: -1.6603001356124878
    4. 'import' → logprob: -3.7853002548217773
    5. '\n' → logprob: -4.035300254821777
    6. '

' → logprob: -4.785300254821777
    7. '<|end|>' → logprob: -4.910300254821777
    8. '
' → logprob: -5.410300254821777
    9. ',' → logprob: -5.785300254821777
    10. 'newline' → logprob: -6.035300254821777

Token 21: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9308849573135376
    2. '.' → logprob: -1.1808849573135376
    3. ',' → logprob: -2.180884838104248
    4. '<|end|>' → logprob: -2.680884838104248
    5. 'import' → logprob: -3.305884838104248
    6. '\n' → logprob: -3.430884838104248
    7. '

' → logprob: -4.555884838104248
    8. '#' → logprob: -4.680884838104248
    9. '' → logprob: -5.180884838104248
    10. ',
' → logprob: -5.680884838104248

Token 22: ' num' (ID: 2269)
  Prédit: ' sklearn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sklearn' → logprob: -0.030355369672179222
    2. ' scipy' → logprob: -3.905355453491211
    3. ' collections' → logprob: -5.155355453491211
    4. 'sk' → logprob: -6.655355453491211
    5. ' pandas' → logprob: -6.905355453491211
    6. ' typing' → logprob: -7.905355453491211
    7. ' ' → logprob: -8.155355453491211
    8. ' matplotlib' → logprob: -8.155355453491211
    9. ' tensorflow' → logprob: -8.530355453491211
    10. 'collections' → logprob: -8.780355453491211

Token 23: 'ba' (ID: 3103)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.04599680006504059
    2. 'p' → logprob: -3.795996904373169
    3. 'ba' → logprob: -3.795996904373169
    4. 'ppy' → logprob: -11.29599666595459
    5. 'by' → logprob: -11.67099666595459
    6. 'pi' → logprob: -12.17099666595459
    7. 'pty' → logprob: -13.29599666595459
    8. 'pay' → logprob: -13.42099666595459
    9. 'expr' → logprob: -13.54599666595459
    10. 'Py' → logprob: -14.17099666595459

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.027607370167970657
    2. ' ' → logprob: -4.277607440948486
    3. '.' → logprob: -5.027607440948486
    4. 'import' → logprob: -5.277607440948486
    5. '.experimental' → logprob: -6.902607440948486
    6. '<|end|>' → logprob: -8.152606964111328
    7. '	import' → logprob: -9.027606964111328
    8. '.import' → logprob: -9.402606964111328
    9. '.cuda' → logprob: -10.527606964111328
    10. ' .' → logprob: -10.652606964111328

Token 25: ' nj' (ID: 8979)
  Prédit: ' nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nj' → logprob: -0.1409223973751068
    2. ' jit' → logprob: -2.3909223079681396
    3. 'nj' → logprob: -3.3909223079681396
    4. 'jit' → logprob: -5.390922546386719
    5. ' cuda' → logprob: -6.515922546386719
    6. 'cuda' → logprob: -8.765922546386719
    7. ' vector' → logprob: -12.140922546386719
    8. 'j' → logprob: -12.390922546386719
    9. ' int' → logprob: -12.765922546386719
    10. 'n' → logprob: -13.015922546386719

Token 26: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0005023968406021595
    2. 'i' → logprob: -7.625502586364746
    3. ' it' → logprob: -13.000502586364746
    4. 'ut' → logprob: -13.125502586364746
    5. 'import' → logprob: -13.375502586364746
    6. '@' → logprob: -13.500502586364746
    7. '```' → logprob: -13.500502586364746
    8. 'itted' → logprob: -13.625502586364746
    9. 'jit' → logprob: -13.750502586364746
    10. 'ит' → logprob: -14.250502586364746

Token 27: '
' (ID: 198)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.3237956166267395
    2. 'def' → logprob: -2.6987955570220947
    3. '\n' → logprob: -2.9487955570220947
    4. '
' → logprob: -3.0737955570220947
    5. '#' → logprob: -3.9487955570220947
    6. 'import' → logprob: -4.073795795440674
    7. '(' → logprob: -4.448795795440674
    8. ',' → logprob: -4.573795795440674
    9. '<|end|>' → logprob: -4.573795795440674
    10. '@
' → logprob: -4.823795795440674

Token 28: 'import' (ID: 561)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.49654829502105713
    2. '
' → logprob: -2.1215481758117676
    3. 'def' → logprob: -2.6215481758117676
    4. '

' → logprob: -3.1215481758117676
    5. '@
' → logprob: -3.3715481758117676
    6. '@

' → logprob: -3.6215481758117676
    7. '#' → logprob: -4.246548175811768
    8. 'import' → logprob: -4.496548175811768
    9. '\' → logprob: -4.496548175811768
    10. '```' → logprob: -4.746548175811768

Token 29: ' sys' (ID: 12228)
  Prédit: ' tensorflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tensorflow' → logprob: -1.3631385564804077
    2. ' os' → logprob: -1.7381385564804077
    3. ' scipy' → logprob: -1.9881385564804077
    4. ' pandas' → logprob: -1.9881385564804077
    5. ' sys' → logprob: -2.1131386756896973
    6. ' ' → logprob: -3.2381386756896973
    7. ' typing' → logprob: -3.3631386756896973
    8. ' torch' → logprob: -3.6131386756896973
    9. ' functools' → logprob: -3.9881386756896973
    10. ' random' → logprob: -4.363138675689697

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4660048186779022
    2. '

' → logprob: -1.5910048484802246
    3. '<|end|>' → logprob: -2.4660048484802246
    4. ',' → logprob: -3.3410048484802246
    5. '\n' → logprob: -3.9660048484802246
    6. 'import' → logprob: -4.091004848480225
    7. '<|end|>' → logprob: -5.716004848480225
    8. '[' → logprob: -6.091004848480225
    9. '' → logprob: -6.466004848480225
    10. '```' → logprob: -6.966004848480225

Token 31: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45416584610939026
    2. '\n' → logprob: -2.5791659355163574
    3. '

' → logprob: -3.0791659355163574
    4. '\' → logprob: -3.2041659355163574
    5. '.' → logprob: -3.4541659355163574
    6. ',' → logprob: -3.4541659355163574
    7. '#' → logprob: -3.4541659355163574
    8. 'def' → logprob: -3.7041659355163574
    9. '<|end|>' → logprob: -3.7041659355163574
    10. '' → logprob: -3.8291659355163574

Token 32: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003035266126971692
    2. ' .' → logprob: -9.000303268432617
    3. '.exit' → logprob: -9.875303268432617
    4. '.stdout' → logprob: -10.250303268432617
    5. '.argv' → logprob: -10.875303268432617
    6. '.readline' → logprob: -11.250303268432617
    7. '.setdefault' → logprob: -11.500303268432617
    8. '.stderr' → logprob: -11.875303268432617
    9. '.stdin' → logprob: -12.125303268432617
    10. '.append' → logprob: -12.750303268432617

Token 33: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.25874245166778564
    2. '_rec' → logprob: -2.133742332458496
    3. '_limit' → logprob: -3.008742332458496
    4. '_version' → logprob: -4.383742332458496
    5. '_execution' → logprob: -5.258742332458496
    6. '_param' → logprob: -5.383742332458496
    7. '_max' → logprob: -5.383742332458496
    8. '_trace' → logprob: -5.383742332458496
    9. '_exc' → logprob: -5.508742332458496
    10. '_threshold' → logprob: -5.633742332458496

Token 34: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00016706773021724075
    2. 'urs' → logprob: -9.375166893005371
    3. 'ursive' → logprob: -10.125166893005371
    4. 'limit' → logprob: -11.125166893005371
    5. 'ision' → logprob: -11.250166893005371
    6. '_limit' → logprob: -12.125166893005371
    7. 'ursor' → logprob: -13.125166893005371
    8. 'usion' → logprob: -13.375166893005371
    9. 'ur' → logprob: -13.875166893005371
    10. '_' → logprob: -14.125166893005371

Token 35: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.038102537393569946
    2. '_limit' → logprob: -3.288102626800537
    3. ' limit' → logprob: -10.913102149963379
    4. 'lim' → logprob: -11.163102149963379
    5. '_depth' → logprob: -11.163102149963379
    6. 'depth' → logprob: -12.038102149963379
    7. '_LIMIT' → logprob: -13.163102149963379
    8. '-limit' → logprob: -13.163102149963379
    9. 'Limit' → logprob: -13.913102149963379
    10. 'al' → logprob: -13.913102149963379

Token 36: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.895480277715251e-06
    2. '((' → logprob: -12.625008583068848
    3. '(

' → logprob: -13.000008583068848
    4. '(
' → logprob: -13.625008583068848
    5. '("("' → logprob: -14.750008583068848
    6. '(.' → logprob: -15.125008583068848
    7. ' (' → logprob: -15.250008583068848
    8. '40' → logprob: -15.375008583068848
    9. '```' → logprob: -15.375008583068848
    10. '()' → logprob: -15.750008583068848

Token 37: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0019512299913913012
    2. '100' → logprob: -6.251951217651367
    3. '300' → logprob: -11.251951217651367
    4. '500' → logprob: -12.751951217651367
    5. ' ' → logprob: -12.876951217651367
    6. '200' → logprob: -13.501951217651367
    7. '250' → logprob: -13.626951217651367
    8. '400' → logprob: -14.376951217651367
    9. '999' → logprob: -15.376951217651367
    10. '1' → logprob: -15.876951217651367

Token 38: '**' (ID: 410)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.23615756630897522
    2. '7' → logprob: -1.7361575365066528
    3. '**' → logprob: -3.7361576557159424
    4. '000' → logprob: -4.861157417297363
    5. '5' → logprob: -6.111157417297363
    6. '8' → logprob: -8.611157417297363
    7. '00' → logprob: -9.111157417297363
    8. '0' → logprob: -10.236157417297363
    9. '06' → logprob: -12.236157417297363
    10. '07' → logprob: -12.236157417297363

Token 39: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00932038202881813
    2. '9' → logprob: -4.759320259094238
    3. '8' → logprob: -7.259320259094238
    4. '6' → logprob: -13.134320259094238
    5. '**' → logprob: -16.259321212768555
    6. '```' → logprob: -17.384321212768555
    7. ' ' → logprob: -19.634321212768555
    8. '10' → logprob: -20.384321212768555
    9. '+' → logprob: -20.634321212768555
    10. '  ' → logprob: -20.759321212768555

Token 40: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.250000953674316
    3. '))' → logprob: -15.375000953674316
    4. ')
' → logprob: -17.875
    5. '),' → logprob: -18.625
    6. ')))' → logprob: -19.375
    7. ')`' → logprob: -19.625
    8. '）' → logprob: -19.75
    9. '}' → logprob: -20.125
    10. ')

' → logprob: -20.25

Token 41: 'N' (ID: 45)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4623216390609741
    2. '#' → logprob: -1.5873216390609741
    3. '@' → logprob: -1.9623216390609741
    4. 'def' → logprob: -2.3373217582702637
    5. '

' → logprob: -2.4623217582702637
    6. 'd' → logprob: -2.8373217582702637
    7. 'class' → logprob: -3.2123217582702637
    8. '\' → logprob: -3.3373217582702637
    9. '\n' → logprob: -3.3373217582702637
    10. 'n' → logprob: -3.7123217582702637

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3182944655418396
    2. '=' → logprob: -1.9432945251464844
    3. ',' → logprob: -2.5682945251464844
    4. ' ' → logprob: -3.0682945251464844
    5. '.' → logprob: -6.068294525146484
    6. ' ,' → logprob: -6.818294525146484
    7. '[' → logprob: -7.193294525146484
    8. ')' → logprob: -7.193294525146484
    9. '_' → logprob: -7.693294525146484
    10. '  ' → logprob: -8.193294525146484

Token 43: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06001230329275131
    2. ' ' → logprob: -3.4350123405456543
    3. 'int' → logprob: -3.6850123405456543
    4. '10' → logprob: -7.560012340545654
    5. '=int' → logprob: -8.560011863708496
    6. '[int' → logprob: -10.060011863708496
    7. '100' → logprob: -10.560011863708496
    8. '32' → logprob: -10.685011863708496
    9. '0' → logprob: -10.810011863708496
    10. '20' → logprob: -11.060011863708496

Token 44: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2820107340812683
    2. '(input' → logprob: -1.407010793685913
    3. 'input' → logprob: -7.407010555267334
    4. '('' → logprob: -8.657011032104492
    5. '()' → logprob: -10.532011032104492
    6. ' (' → logprob: -11.532011032104492
    7. '(sys' → logprob: -11.532011032104492
    8. ' input' → logprob: -11.532011032104492
    9. '(np' → logprob: -12.282011032104492
    10. '("' → logprob: -12.532011032104492

Token 45: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.40604957938194275
    2. '.readline' → logprob: -1.1560496091842651
    3. '.' → logprob: -4.031049728393555
    4. '.read' → logprob: -7.406049728393555
    5. '.argv' → logprob: -7.406049728393555
    6. '.Read' → logprob: -12.031049728393555
    7. '.input' → logprob: -12.531049728393555
    8. '.stdout' → logprob: -12.781049728393555
    9. '.)' → logprob: -12.906049728393555
    10. '(stdin' → logprob: -13.156049728393555

Token 46: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00025919382460415363
    2. '.read' → logprob: -8.375259399414062
    3. '.' → logprob: -10.500259399414062
    4. '.stdin' → logprob: -15.125259399414062
    5. '.readlines' → logprob: -15.125259399414062
    6. ' readline' → logprob: -16.000259399414062
    7. '.buffer' → logprob: -16.250259399414062
    8. '.)' → logprob: -16.375259399414062
    9. '.Read' → logprob: -17.250259399414062
    10. '.READ' → logprob: -17.625259399414062

Token 47: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023709166795015335
    2. '()' → logprob: -3.7737090587615967
    3. '().' → logprob: -7.773709297180176
    4. ' ())' → logprob: -11.023709297180176
    5. ')' → logprob: -11.398709297180176
    6. '()]' → logprob: -12.773709297180176
    7. '();)' → logprob: -12.773709297180176
    8. '()))' → logprob: -13.023709297180176
    9. '()[' → logprob: -13.148709297180176
    10. '(' → logprob: -13.273709297180176

Token 48: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.016388585790991783
    2. 'rstrip' → logprob: -4.516388416290283
    3. 'read' → logprob: -5.266388416290283
    4. ')' → logprob: -8.766388893127441
    5. 'split' → logprob: -12.516388893127441
    6. ' strip' → logprob: -12.766388893127441
    7. '_strip' → logprob: -14.891388893127441
    8. '())' → logprob: -14.891388893127441
    9. ' readline' → logprob: -15.016388893127441
    10. 'decode' → logprob: -15.516388893127441

Token 49: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014115548692643642
    2. '))' → logprob: -5.014115333557129
    3. '())' → logprob: -5.014115333557129
    4. '()' → logprob: -7.264115333557129
    5. '()))' → logprob: -10.764115333557129
    6. '(' → logprob: -12.014115333557129
    7. ')
' → logprob: -14.389115333557129
    8. ' )' → logprob: -14.889115333557129
    9. ')))' → logprob: -15.389115333557129
    10. '')' → logprob: -16.014116287231445

Token 50: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4090926945209503
    2. 'a' → logprob: -1.284092664718628
    3. 'data' → logprob: -3.159092664718628
    4. 'd' → logprob: -5.159092903137207
    5. 'D' → logprob: -6.034092903137207
    6. 'S' → logprob: -6.159092903137207
    7. 'arr' → logprob: -6.784092903137207
    8. 's' → logprob: -6.784092903137207
    9. '_' → logprob: -7.284092903137207
    10. ' A' → logprob: -7.909092903137207

Token 51: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09840872138738632
    2. ' =' → logprob: -2.5984086990356445
    3. '=' → logprob: -4.2234086990356445
    4. '.' → logprob: -6.7234086990356445
    5. '[:]' → logprob: -6.8484086990356445
    6. '[]' → logprob: -7.3484086990356445
    7. '[i' → logprob: -7.5984086990356445
    8. '.append' → logprob: -7.8484086990356445
    9. ',' → logprob: -8.848408699035645
    10. '[int' → logprob: -8.973408699035645

Token 52: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6560773253440857
    2. ' list' → logprob: -0.9060773253440857
    3. ' np' → logprob: -2.9060773849487305
    4. 'np' → logprob: -3.9060773849487305
    5. ' [' → logprob: -7.0310773849487305
    6. '[np' → logprob: -7.2810773849487305
    7. '[list' → logprob: -8.03107738494873
    8. '[' → logprob: -8.90607738494873
    9. '[]' → logprob: -9.03107738494873
    10. ' []' → logprob: -10.40607738494873

Token 53: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012326570227742195
    2. '(map' → logprob: -5.262326717376709
    3. '(np' → logprob: -5.512326717376709
    4. '(int' → logprob: -6.387326717376709
    5. '(range' → logprob: -7.512326717376709
    6. '()' → logprob: -7.887326717376709
    7. '(input' → logprob: -9.63732624053955
    8. '(sys' → logprob: -9.63732624053955
    9. '(s' → logprob: -10.13732624053955
    10. '(eval' → logprob: -11.13732624053955

Token 54: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017925129504874349
    2. '(' → logprob: -6.3767924308776855
    3. '(str' → logprob: -10.126792907714844
    4. '(lambda' → logprob: -10.751792907714844
    5. '<int' → logprob: -11.501792907714844
    6. 'int' → logprob: -11.751792907714844
    7. '[int' → logprob: -12.251792907714844
    8. '=int' → logprob: -13.001792907714844
    9. '(
' → logprob: -14.126792907714844
    10. 'list' → logprob: -14.501792907714844

Token 55: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0018298695795238018
    2. '(' → logprob: -6.376830101013184
    3. 'sys' → logprob: -9.376830101013184
    4. '=sys' → logprob: -11.126830101013184
    5. '(input' → logprob: -11.751830101013184
    6. '	sys' → logprob: -12.126830101013184
    7. '(system' → logprob: -12.751830101013184
    8. '(Sys' → logprob: -12.876830101013184
    9. ' sys' → logprob: -13.376830101013184
    10. ' (' → logprob: -13.501830101013184

Token 56: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0008233297849074006
    2. ' sys' → logprob: -7.125823497772217
    3. '(sys' → logprob: -11.125823020935059
    4. '	sys' → logprob: -13.125823020935059
    5. '=sys' → logprob: -13.125823020935059
    6. '/sys' → logprob: -16.875823974609375
    7. 'input' → logprob: -17.375823974609375
    8. '.sys' → logprob: -17.625823974609375
    9. '_sys' → logprob: -18.125823974609375
    10. ' ' → logprob: -18.500823974609375

Token 57: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.8624639324116288e-06
    2. '.stdout' → logprob: -14.375001907348633
    3. '.' → logprob: -14.625001907348633
    4. '.std' → logprob: -15.250001907348633
    5. '.argv' → logprob: -15.375001907348633
    6. 'stdin' → logprob: -15.875001907348633
    7. '.readline' → logprob: -16.750001907348633
    8. '.st' → logprob: -17.375001907348633
    9. '(stdin' → logprob: -18.625001907348633
    10. '.stderr' → logprob: -19.250001907348633

Token 58: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.8312570318812504e-05
    2. '.stdin' → logprob: -11.000018119812012
    3. '.readlines' → logprob: -14.000018119812012
    4. '.read' → logprob: -14.875018119812012
    5. '.' → logprob: -15.375018119812012
    6. 'stdin' → logprob: -16.750019073486328
    7. 'read' → logprob: -17.625019073486328
    8. ' readline' → logprob: -18.125019073486328
    9. '```' → logprob: -18.750019073486328
    10. ').' → logprob: -19.250019073486328

Token 59: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.5941604690160602e-05
    2. '()' → logprob: -10.625025749206543
    3. '.readline' → logprob: -13.750025749206543
    4. ' ().' → logprob: -14.875025749206543
    5. '(' → logprob: -16.12502670288086
    6. '().__' → logprob: -17.37502670288086
    7. '.rstrip' → logprob: -17.50002670288086
    8. '.' → logprob: -18.12502670288086
    9. '())' → logprob: -18.37502670288086
    10. '()).' → logprob: -18.50002670288086

Token 60: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -5.438573680294212e-06
    2. 'strip' → logprob: -12.500005722045898
    3. 'split' → logprob: -13.750005722045898
    4. 'read' → logprob: -14.625005722045898
    5. '.rstrip' → logprob: -15.875005722045898
    6. 'rs' → logprob: -18.1250057220459
    7. 'r' → logprob: -18.7500057220459
    8. 'rst' → logprob: -19.7500057220459
    9. 'rl' → logprob: -20.5000057220459
    10. ')' → logprob: -21.2500057220459

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.4656579120783135e-05
    2. '()' → logprob: -10.125044822692871
    3. ' ().' → logprob: -13.125044822692871
    4. '(' → logprob: -13.875044822692871
    5. ')' → logprob: -14.125044822692871
    6. '()))' → logprob: -15.125044822692871
    7. '())' → logprob: -15.875044822692871
    8. ').' → logprob: -16.250043869018555
    9. '())))' → logprob: -16.625043869018555
    10. '(),' → logprob: -17.125043869018555

Token 62: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8624639324116288e-06
    2. ' split' → logprob: -13.750001907348633
    3. 'strip' → logprob: -14.750001907348633
    4. 'rstrip' → logprob: -15.000001907348633
    5. '(split' → logprob: -17.500001907348633
    6. ')' → logprob: -18.250001907348633
    7. 'spl' → logprob: -18.375001907348633
    8. 'decode' → logprob: -19.125001907348633
    9. '.split' → logprob: -19.500001907348633
    10. 'plit' → logprob: -20.125001907348633

Token 63: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -1.2706851959228516
    2. '()))' → logprob: -1.3956851959228516
    3. ')' → logprob: -1.5206851959228516
    4. '())' → logprob: -2.0206851959228516
    5. '(' → logprob: -2.2706851959228516
    6. '()' → logprob: -4.145685195922852
    7. '('' → logprob: -7.145685195922852
    8. ')))' → logprob: -8.145685195922852
    9. '(','' → logprob: -8.770685195922852
    10. '())))' → logprob: -9.395685195922852

Token 64: 'B' (ID: 33)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.546107292175293
    2. 'A' → logprob: -1.671107292175293
    3. ')' → logprob: -1.921107292175293
    4. '#' → logprob: -2.171107292175293
    5. 'dp' → logprob: -2.671107292175293
    6. 'a' → logprob: -2.921107292175293
    7. '
' → logprob: -3.671107292175293
    8. 'M' → logprob: -3.921107292175293
    9. '_' → logprob: -4.046107292175293
    10. 'max' → logprob: -4.046107292175293

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895561099052429
    2. '=' → logprob: -2.4639556407928467
    3. '.' → logprob: -12.088955879211426
    4. ' ' → logprob: -12.838955879211426
    5. '_' → logprob: -12.963955879211426
    6. ')' → logprob: -13.338955879211426
    7. '[' → logprob: -13.463955879211426
    8. ',' → logprob: -14.088955879211426
    9. '=[]' → logprob: -14.713955879211426
    10. '[:]' → logprob: -15.213955879211426

Token 66: ' range' (ID: 3352)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4742870032787323
    2. ' list' → logprob: -0.9742870330810547
    3. ' [' → logprob: -9.224287033081055
    4. '[' → logprob: -10.099287033081055
    5. '[]' → logprob: -11.099287033081055
    6. 'np' → logprob: -11.224287033081055
    7. '[list' → logprob: -11.224287033081055
    8. ' np' → logprob: -12.099287033081055
    9. 'A' → logprob: -12.474287033081055
    10. ' []' → logprob: -12.974287033081055

Token 67: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5457299947738647
    2. '(' → logprob: -1.2957299947738647
    3. '(len' → logprob: -1.9207299947738647
    4. '(A' → logprob: -8.670729637145996
    5. '(n' → logprob: -9.670729637145996
    6. '(-' → logprob: -10.420729637145996
    7. '((' → logprob: -10.670729637145996
    8. '(B' → logprob: -10.670729637145996
    9. '(L' → logprob: -10.920729637145996
    10. '(M' → logprob: -11.420729637145996

Token 68: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2527501881122589
    2. '(N' → logprob: -1.8777501583099365
    3. '1' → logprob: -3.2527501583099365
    4. '(' → logprob: -3.5027501583099365
    5. 'len' → logprob: -7.627750396728516
    6. ' N' → logprob: -7.877750396728516
    7. '10' → logprob: -8.377750396728516
    8. '(len' → logprob: -8.752750396728516
    9. '0' → logprob: -9.752750396728516
    10. '2' → logprob: -9.752750396728516

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002960346406325698
    2. ',N' → logprob: -5.877960205078125
    3. ' ,' → logprob: -8.877960205078125
    4. ',
' → logprob: -12.377960205078125
    5. ',n' → logprob: -12.627960205078125
    6. '1' → logprob: -12.627960205078125
    7. '6' → logprob: -14.127960205078125
    8. ',

' → logprob: -14.127960205078125
    9. '，' → logprob: -14.252960205078125
    10. ',len' → logprob: -14.502960205078125

Token 70: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004680511076003313
    2. ' N' → logprob: -5.379680633544922
    3. '10' → logprob: -10.129680633544922
    4. '100' → logprob: -11.379680633544922
    5. '11' → logprob: -12.879680633544922
    6. '101' → logprob: -13.504680633544922
    7. ' ' → logprob: -14.004680633544922
    8. '20' → logprob: -14.004680633544922
    9. '1' → logprob: -14.379680633544922
    10. '21' → logprob: -15.254680633544922

Token 71: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002476604888215661
    2. ' +' → logprob: -6.002476692199707
    3. '+
' → logprob: -14.877476692199707
    4. '+)' → logprob: -15.252476692199707
    5. ')' → logprob: -15.877476692199707
    6. '1' → logprob: -16.25247573852539
    7. ')+' → logprob: -16.87747573852539
    8. '＋' → logprob: -17.37747573852539
    9. ' +
' → logprob: -17.87747573852539
    10. '2' → logprob: -18.00247573852539

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. ')' → logprob: -15.250003814697266
    4. '2' → logprob: -16.375003814697266
    5. '+' → logprob: -17.625003814697266
    6. '```' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.250003814697266
    8. '  ' → logprob: -20.125003814697266
    9. '１' → logprob: -20.375003814697266
    10. '۱' → logprob: -20.812503814697266

Token 73: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.625001907348633
    3. '))' → logprob: -15.250001907348633
    4. ')
' → logprob: -16.125001907348633
    5. '),' → logprob: -16.750001907348633
    6. ' ' → logprob: -17.625001907348633
    7. ']' → logprob: -18.250001907348633
    8. '}' → logprob: -18.250001907348633
    9. '```' → logprob: -18.375001907348633
    10. '+' → logprob: -18.500001907348633

Token 74: 'AB' (ID: 2912)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11407535523176193
    2. '<|end|>' → logprob: -2.7390754222869873
    3. '\n' → logprob: -3.6140754222869873
    4. ')' → logprob: -4.739075183868408
    5. '#' → logprob: -5.864075183868408
    6. '[' → logprob: -6.864075183868408
    7. '
' → logprob: -7.489075183868408
    8. '```' → logprob: -7.614075183868408
    9. 'A' → logprob: -8.239075660705566
    10. '' → logprob: -8.239075660705566

Token 75: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3641701936721802
    2. ' =' → logprob: -1.8641701936721802
    3. '_' → logprob: -2.1141700744628906
    4. '_pairs' → logprob: -3.9891700744628906
    5. '_zip' → logprob: -6.114170074462891
    6. '_sorted' → logprob: -6.239170074462891
    7. '_pair' → logprob: -7.114170074462891
    8. '_=' → logprob: -7.114170074462891
    9. 's' → logprob: -7.614170074462891
    10. '_map' → logprob: -7.614170074462891

Token 76: ' zip' (ID: 16216)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.11436193436384201
    2. ' list' → logprob: -2.8643620014190674
    3. 'sorted' → logprob: -3.7393620014190674
    4. 'zip' → logprob: -3.9893620014190674
    5. ' zip' → logprob: -5.614361763000488
    6. ' sorted' → logprob: -6.864361763000488
    7. '[' → logprob: -6.989361763000488
    8. '[(' → logprob: -7.114361763000488
    9. '[list' → logprob: -7.489361763000488
    10. '(list' → logprob: -7.739361763000488

Token 77: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.18897375464439392
    2. '(B' → logprob: -1.9389737844467163
    3. '(' → logprob: -3.5639736652374268
    4. '(N' → logprob: -12.188973426818848
    5. '((' → logprob: -13.438973426818848
    6. '(s' → logprob: -13.813973426818848
    7. '(b' → logprob: -13.938973426818848
    8. '(
' → logprob: -13.938973426818848
    9. '(a' → logprob: -14.313973426818848
    10. '(I' → logprob: -14.563973426818848

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002895834331866354
    2. ',B' → logprob: -8.500289916992188
    3. ' ,' → logprob: -9.375289916992188
    4. ',b' → logprob: -13.625289916992188
    5. ',
' → logprob: -16.625289916992188
    6. 'B' → logprob: -17.375289916992188
    7. '，' → logprob: -17.500289916992188
    8. ')' → logprob: -18.625289916992188
    9. ',)' → logprob: -18.750289916992188
    10. ',

' → logprob: -19.125289916992188

Token 79: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.47407791018486023
    2. ' B' → logprob: -0.9740779399871826
    3. ' ' → logprob: -14.974078178405762
    4. ')' → logprob: -15.599078178405762
    5. '_B' → logprob: -15.849078178405762
    6. '	B' → logprob: -15.849078178405762
    7. 'b' → logprob: -16.224077224731445
    8. '<|end|>' → logprob: -16.974077224731445
    9. ' )' → logprob: -17.474077224731445
    10. '>B' → logprob: -17.974077224731445

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -13.250003814697266
    3. '))' → logprob: -13.625003814697266
    4. ' )' → logprob: -14.625003814697266
    5. '),' → logprob: -16.750003814697266
    6. ')`' → logprob: -17.125003814697266
    7. ')#' → logprob: -17.625003814697266
    8. ')

' → logprob: -17.750003814697266
    9. ')...' → logprob: -18.750003814697266
    10. ')return' → logprob: -18.875003814697266

Token 81: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5287969708442688
    2. 'sorted' → logprob: -0.9037969708442688
    3. 'AB' → logprob: -6.153797149658203
    4. '_sorted' → logprob: -7.278797149658203
    5. 'A' → logprob: -7.653797149658203
    6. 'list' → logprob: -7.778797149658203
    7. ',' → logprob: -8.028797149658203
    8. ' sorted' → logprob: -8.028797149658203
    9. '(sorted' → logprob: -8.278797149658203
    10. ')
' → logprob: -8.778797149658203

Token 82: 'AB' (ID: 2912)
  Prédit: 'orted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orted' → logprob: -0.033894989639520645
    2. 'o' → logprob: -4.408895015716553
    3. 'or' → logprob: -5.158895015716553
    4. ' =' → logprob: -5.408895015716553
    5. '=' → logprob: -5.658895015716553
    6. 'um' → logprob: -5.908895015716553
    7. 'ort' → logprob: -6.283895015716553
    8. '_' → logprob: -6.533895015716553
    9. 'orte' → logprob: -7.158895015716553
    10. '_sorted' → logprob: -8.908894538879395

Token 83: ' =' (ID: 314)
  Prédit: 'orted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orted' → logprob: -0.3508315682411194
    2. ' =' → logprob: -1.4758315086364746
    3. '=' → logprob: -2.7258315086364746
    4. 'ort' → logprob: -6.975831508636475
    5. 'um' → logprob: -7.600831508636475
    6. 'or' → logprob: -9.600831985473633
    7. 'sorted' → logprob: -9.725831985473633
    8. '=list' → logprob: -10.350831985473633
    9. 't' → logprob: -10.475831985473633
    10. 'e' → logprob: -10.600831985473633

Token 84: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.005951079539954662
    2. ' sorted' → logprob: -5.130950927734375
    3. 's' → logprob: -11.505950927734375
    4. 'list' → logprob: -12.005950927734375
    5. '(sorted' → logprob: -13.630950927734375
    6. 'sort' → logprob: -13.880950927734375
    7. 'tuple' → logprob: -13.880950927734375
    8. '   ' → logprob: -14.130950927734375
    9. '.sorted' → logprob: -14.130950927734375
    10. 'set' → logprob: -14.755950927734375

Token 85: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019962044898420572
    2. '(s' → logprob: -6.376996040344238
    3. '(ab' → logprob: -8.376996040344238
    4. '((' → logprob: -10.876996040344238
    5. '(list' → logprob: -11.751996040344238
    6. '(abs' → logprob: -12.001996040344238
    7. '(lambda' → logprob: -12.251996040344238
    8. '(
' → logprob: -12.376996040344238
    9. 's' → logprob: -12.626996040344238
    10. '(`' → logprob: -12.876996040344238

Token 86: 'AB' (ID: 2912)
  Prédit: 'AB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.0001434690784662962
    2. '(' → logprob: -9.000143051147461
    3. ')' → logprob: -11.500143051147461
    4. '_AB' → logprob: -12.125143051147461
    5. ' AB' → logprob: -13.375143051147461
    6. 'ab' → logprob: -13.625143051147461
    7. 'list' → logprob: -13.875143051147461
    8. 's' → logprob: -14.500143051147461
    9. '(ab' → logprob: -15.750143051147461
    10. '[' → logprob: -17.37514305114746

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13923759758472443
    2. ',key' → logprob: -2.514237642288208
    3. ',' → logprob: -3.139237642288208
    4. '(),' → logprob: -6.264237403869629
    5. '(key' → logprob: -6.389237403869629
    6. '())' → logprob: -6.514237403869629
    7. 'key' → logprob: -8.264237403869629
    8. '()' → logprob: -8.639237403869629
    9. '))' → logprob: -8.889237403869629
    10. ' ,' → logprob: -10.639237403869629

Token 88: 'l' (ID: 75)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32298240065574646
    2. 'for' → logprob: -2.8229823112487793
    3. 'A' → logprob: -2.9479823112487793
    4. '[' → logprob: -2.9479823112487793
    5. 's' → logprob: -3.5729823112487793
    6. ',' → logprob: -4.197982311248779
    7. 'print' → logprob: -4.572982311248779
    8. 'a' → logprob: -4.572982311248779
    9. '#' → logprob: -5.072982311248779
    10. '(' → logprob: -5.072982311248779

Token 89: ' =' (ID: 314)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.4973011910915375
    2. ' =' → logprob: -1.8723012208938599
    3. 'en' → logprob: -2.9973011016845703
    4. '=' → logprob: -3.3723011016845703
    5. 'ist' → logprob: -3.3723011016845703
    6. ',' → logprob: -3.9973011016845703
    7. 'e' → logprob: -4.37230110168457
    8. 'ast' → logprob: -4.62230110168457
    9. 'A' → logprob: -4.74730110168457
    10. '=[]' → logprob: -4.99730110168457

Token 90: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.17962758243083954
    2. '0' → logprob: -3.1796276569366455
    3. '[' → logprob: -3.1796276569366455
    4. 'len' → logprob: -3.3046276569366455
    5. '[len' → logprob: -3.3046276569366455
    6. 's' → logprob: -6.179627418518066
    7. 'en' → logprob: -6.804627418518066
    8. ' []' → logprob: -7.429627418518066
    9. '[int' → logprob: -7.554627418518066
    10. '[]
' → logprob: -7.679627418518066

Token 91: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0034895967692136765
    2. '(' → logprob: -5.8784894943237305
    3. '()' → logprob: -7.7534894943237305
    4. '(sorted' → logprob: -9.00348949432373
    5. '(map' → logprob: -9.62848949432373
    6. '(range' → logprob: -11.00348949432373
    7. '(set' → logprob: -11.25348949432373
    8. 's' → logprob: -11.62848949432373
    9. '(l' → logprob: -12.12848949432373
    10. '(
' → logprob: -12.37848949432373

Token 92: 'AB' (ID: 2912)
  Prédit: 'AB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -4.1080467781284824e-05
    2. '_AB' → logprob: -11.000041007995605
    3. '(' → logprob: -11.500041007995605
    4. 'A' → logprob: -12.125041007995605
    5. ')' → logprob: -12.750041007995605
    6. 's' → logprob: -12.875041007995605
    7. 'l' → logprob: -13.500041007995605
    8. ' AB' → logprob: -14.500041007995605
    9. '(s' → logprob: -14.625041007995605
    10. 'B' → logprob: -15.625041007995605

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018006093159783632
    2. '))' → logprob: -9.0001802444458
    3. ')
' → logprob: -10.5001802444458
    4. ' )' → logprob: -11.3751802444458
    5. '[' → logprob: -12.1251802444458
    6. ')))' → logprob: -12.8751802444458
    7. ',' → logprob: -13.5001802444458
    8. ',)' → logprob: -13.5001802444458
    9. '[:' → logprob: -14.3751802444458
    10. '),' → logprob: -14.3751802444458

Token 94: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7819890975952148
    2. '[' → logprob: -1.6569890975952148
    3. 'for' → logprob: -1.9069890975952148
    4. ']' → logprob: -3.031989097595215
    5. '#' → logprob: -3.781989097595215
    6. '[i' → logprob: -4.406989097595215
    7. 'a' → logprob: -4.656989097595215
    8. 'A' → logprob: -4.906989097595215
    9. 'print' → logprob: -4.906989097595215
    10. 'l' → logprob: -5.156989097595215

Token 95: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3589326739311218
    2. ' =' → logprob: -1.2339327335357666
    3. '[' → logprob: -5.3589324951171875
    4. '[:]' → logprob: -5.7339324951171875
    5. '=[]' → logprob: -6.8589324951171875
    6. '.' → logprob: -7.2339324951171875
    7. '_' → logprob: -8.858932495117188
    8. 's' → logprob: -8.858932495117188
    9. '.append' → logprob: -8.983932495117188
    10. ' ' → logprob: -9.358932495117188

Token 96: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.25870755314826965
    2. '0' → logprob: -2.0087075233459473
    3. ' []' → logprob: -2.8837075233459473
    4. '[' → logprob: -3.8837075233459473
    5. 'l' → logprob: -4.883707523345947
    6. ' [' → logprob: -5.758707523345947
    7. ' l' → logprob: -6.258707523345947
    8. '[l' → logprob: -6.383707523345947
    9. ' ' → logprob: -6.633707523345947
    10. '[]
' → logprob: -7.633707523345947

Token 97: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04347343370318413
    2. 'i' → logprob: -3.918473482131958
    3. '_' → logprob: -4.668473243713379
    4. 'prev' → logprob: -5.793473243713379
    5. 'idx' → logprob: -6.543473243713379
    6. 'c' → logprob: -6.918473243713379
    7. 'p' → logprob: -7.043473243713379
    8. 'current' → logprob: -7.043473243713379
    9. 'cur' → logprob: -7.543473243713379
    10. 'last' → logprob: -7.543473243713379

Token 98: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6617218852043152
    2. ' a' → logprob: -1.03672194480896
    3. 'a' → logprob: -2.78672194480896
    4. 'i' → logprob: -3.16172194480896
    5. ' x' → logprob: -4.411721706390381
    6. ' v' → logprob: -5.036721706390381
    7. ' _' → logprob: -6.161721706390381
    8. 'x' → logprob: -6.536721706390381
    9. ' ' → logprob: -6.786721706390381
    10. 'v' → logprob: -7.786721706390381

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9613588452339172
    2. 'in' → logprob: -1.0863587856292725
    3. ',' → logprob: -1.3363587856292725
    4. ' ,' → logprob: -4.711359024047852
    5. ',_' → logprob: -5.336359024047852
    6. ',in' → logprob: -6.836359024047852
    7. '_' → logprob: -7.336359024047852
    8. ' ' → logprob: -7.961359024047852
    9. '_in' → logprob: -7.961359024047852
    10. ',y' → logprob: -8.336359024047852

Token 100: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1094963550567627
    2. ' l' → logprob: -2.4844963550567627
    3. ' range' → logprob: -4.609496116638184
    4. 'range' → logprob: -4.734496116638184
    5. 's' → logprob: -6.984496116638184
    6. 'A' → logprob: -7.859496116638184
    7. ' s' → logprob: -9.359496116638184
    8. ' A' → logprob: -9.484496116638184
    9. ' ' → logprob: -9.859496116638184
    10. 'sorted' → logprob: -11.359496116638184

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015169414109550416
    2. ':
' → logprob: -9.250151634216309
    3. '[' → logprob: -10.500151634216309
    4. ',' → logprob: -11.375151634216309
    5. ' :' → logprob: -11.875151634216309
    6. '[:]' → logprob: -12.500151634216309
    7. ':**' → logprob: -13.125151634216309
    8. '):' → logprob: -14.500151634216309
    9. ',:' → logprob: -14.750151634216309
    10. '   ' → logprob: -14.750151634216309

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18328726291656494
    2. ' ans' → logprob: -1.933287262916565
    3. '	ans' → logprob: -4.058287143707275
    4. 'ans' → logprob: -5.308287143707275
    5. '(ans' → logprob: -7.933287143707275
    6. '    
' → logprob: -9.558287620544434
    7. '   ' → logprob: -10.433287620544434
    8. ' if' → logprob: -10.933287620544434
    9. '_ans' → logprob: -10.933287620544434
    10. ',' → logprob: -11.308287620544434

Token 103: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.03444809094071388
    2. ' ans' → logprob: -3.4094481468200684
    3. '   ' → logprob: -7.659448146820068
    4. '	ans' → logprob: -8.53444766998291
    5. '(ans' → logprob: -9.40944766998291
    6. 'print' → logprob: -10.53444766998291
    7. '_ans' → logprob: -11.28444766998291
    8. 'x' → logprob: -12.53444766998291
    9. '    
' → logprob: -12.65944766998291
    10. 'answer' → logprob: -13.15944766998291

Token 104: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.816591434879228e-05
    2. '.' → logprob: -9.50008773803711
    3. '.extend' → logprob: -11.62508773803711
    4. '.app' → logprob: -13.12508773803711
    5. '.ap' → logprob: -13.25008773803711
    6. 'append' → logprob: -16.25008773803711
    7. ' .' → logprob: -16.25008773803711
    8. '.push' → logprob: -16.62508773803711
    9. '.Append' → logprob: -17.00008773803711
    10. '.setdefault' → logprob: -17.12508773803711

Token 105: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004617391619831324
    2. 'x' → logprob: -5.879617214202881
    3. '(' → logprob: -6.754617214202881
    4. '(str' → logprob: -7.379617214202881
    5. 'str' → logprob: -11.254617691040039
    6. '((' → logprob: -12.129617691040039
    7. '(int' → logprob: -13.879617691040039
    8. '(f' → logprob: -15.004617691040039
    9. '{x' → logprob: -15.254617691040039
    10. ' x' → logprob: -15.379617691040039

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.049755782238208e-05
    2. ')[' → logprob: -10.75005054473877
    3. ')' → logprob: -11.00005054473877
    4. '[-' → logprob: -12.12505054473877
    5. ' [' → logprob: -12.62505054473877
    6. '][' → logprob: -13.50005054473877
    7. '[
' → logprob: -15.37505054473877
    8. '\[' → logprob: -15.75005054473877
    9. '()[' → logprob: -15.87505054473877
    10. '[]' → logprob: -16.062549591064453

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00870155543088913
    2. '0' → logprob: -4.758701324462891
    3. ' ' → logprob: -9.38370132446289
    4. '   ' → logprob: -13.57120132446289
    5. '-' → logprob: -15.44620132446289
    6. '[' → logprob: -16.00870132446289
    7. '  ' → logprob: -16.07120132446289
    8. ']' → logprob: -16.13370132446289
    9. '```' → logprob: -16.44620132446289
    10. '{' → logprob: -16.57120132446289

Token 108: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037657555658370256
    2. '])' → logprob: -5.62876558303833
    3. '))' → logprob: -9.253766059875488
    4. ')
' → logprob: -10.128766059875488
    5. ')]' → logprob: -11.503766059875488
    6. ')])' → logprob: -11.753766059875488
    7. ']' → logprob: -12.378766059875488
    8. '})' → logprob: -12.878766059875488
    9. ' )' → logprob: -13.253766059875488
    10. ''])' → logprob: -14.378766059875488

Token 109: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011780819622799754
    2. 'for' → logprob: -6.75117826461792
    3. ' print' → logprob: -12.501177787780762
    4. '\n' → logprob: -13.501177787780762
    5. ' for' → logprob: -13.751177787780762
    6. '
' → logprob: -14.251177787780762
    7. '```' → logprob: -14.876177787780762
    8. '\' → logprob: -15.001177787780762
    9. '#print' → logprob: -15.251177787780762
    10. 'prin' → logprob: -17.126178741455078

Token 110: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005659997928887606
    2. '("("' → logprob: -5.880660057067871
    3. '(ans' → logprob: -6.255660057067871
    4. '('' → logprob: -7.380660057067871
    5. '(*' → logprob: -8.255660057067871
    6. '(len' → logprob: -11.005660057067871
    7. '((' → logprob: -11.755660057067871
    8. '()' → logprob: -12.130660057067871
    9. '(**' → logprob: -13.130660057067871
    10. '(
' → logprob: -13.255660057067871

Token 111: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.088346359931165e-07
    2. ' ans' → logprob: -14.000000953674316
    3. '(ans' → logprob: -17.75
    4. '	ans' → logprob: -21.5
    5. 'answer' → logprob: -22.875
    6. 'ANS' → logprob: -23.625
    7. ')' → logprob: -24.75
    8. '_ans' → logprob: -24.75
    9. 'Ans' → logprob: -24.875
    10. 'ann' → logprob: -25.375

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -12.500003814697266
    3. ')`' → logprob: -16.125003814697266
    4. ')
' → logprob: -16.625003814697266
    5. '))' → logprob: -17.000003814697266
    6. ',)' → logprob: -17.750003814697266
    7. ')#' → logprob: -18.000003814697266
    8. '`)' → logprob: -18.750003814697266
    9. '),' → logprob: -19.250003814697266
    10. ',' → logprob: -19.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 110
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 48
Tokens correctement prédits (top 10): 85
Précision stricte (1ère position): 42.73%
Précision adaptée (1ère position): 43.64%
Précision (top 10): 77.27%
================================================================================
