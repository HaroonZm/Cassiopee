================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir un entier et convertit la saisie en entier avec int().
# Ceci détermine la longueur de la chaîne de caractères que nous allons lire ensuite.
N = int(input())

# Demande à l'utilisateur de saisir une chaîne de caractères.
# Cette chaîne aura exactement N caractères selon l'énoncé.
s = input()

# Initialise un compteur à 0. 
# Ce compteur 'num' va compter combien de fois la lettre 'R' apparaît dans la chaîne s.
num = 0

# La boucle for va parcourir chaque index 'i' de 0 jusqu'à N-1 (car range(N) génère les entiers de 0 à N-1).
for i in range(N):
    # Vérifie si le caractère à la position i dans la chaîne s est exactement égal à "R".
    if s[i] == "R":
        # Si oui, on incrémente le compteur 'num' de 1.
        num += 1

# Après avoir parcouru toute la chaîne, on compare le nombre de "R" (num) au nombre de caractères restants, c’est-à-dire N - num.
# Si le nombre de "R" est strictement supérieur au nombre des autres caractères :
if num > N - num:
    # Affiche "Yes" à l'écran, car il y a plus de "R" que d'autres lettres.
    print("Yes")
else:
    # Sinon, si num n'est pas strictement plus grand, affiche "No".
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0537700653076172
    2. ' ' → logprob: -1.4287700653076172
    3. ':' → logprob: -1.5537700653076172
    4. ' de' → logprob: -2.678770065307617
    5. '_' → logprob: -3.053770065307617
    6. ''' → logprob: -3.803770065307617
    7. '```' → logprob: -4.053770065307617
    8. ' :' → logprob: -4.178770065307617
    9. ' d' → logprob: -4.803770065307617
    10. ' =' → logprob: -5.053770065307617

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16771981120109558
    2. ' l' → logprob: -1.917719841003418
    3. ' ' → logprob: -5.667719841003418
    4. ' user' → logprob: -6.667719841003418
    5. 'user' → logprob: -7.167719841003418
    6. ''' → logprob: -7.917719841003418
    7. 'u' → logprob: -8.167719841003418
    8. '_' → logprob: -8.417719841003418
    9. ' ' → logprob: -8.917719841003418
    10. ' utilisateur' → logprob: -9.042719841003418

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.13842537999153137
    2. 'u' → logprob: -2.763425350189209
    3. ''' → logprob: -3.263425350189209
    4. 'util' → logprob: -4.763425350189209
    5. 'a' → logprob: -5.013425350189209
    6. '’utilisateur' → logprob: -5.138425350189209
    7. ' utilisateur' → logprob: -5.513425350189209
    8. 'e' → logprob: -7.638425350189209
    9. ''user' → logprob: -7.763425350189209
    10. '_' → logprob: -7.888425350189209

Token 6: ' de' (ID: 334)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -1.361197829246521
    2. 'nom' → logprob: -1.486197829246521
    3. 'input' → logprob: -1.986197829246521
    4. 'user' → logprob: -2.4861979484558105
    5. 's' → logprob: -2.7361979484558105
    6. 'print' → logprob: -3.2361979484558105
    7. 'username' → logprob: -3.3611979484558105
    8. 'n' → logprob: -3.3611979484558105
    9. '`' → logprob: -3.6111979484558105
    10. '#' → logprob: -3.9861979484558105

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028247052803635597
    2. ' saisir' → logprob: -4.278246879577637
    3. 'entr' → logprob: -4.778246879577637
    4. 'r' → logprob: -6.028246879577637
    5. '```' → logprob: -6.403246879577637
    6. 'sa' → logprob: -8.278246879577637
    7. '#' → logprob: -8.528246879577637
    8. ' entrer' → logprob: -9.028246879577637
    9. ' ' → logprob: -9.153246879577637
    10. ' ' → logprob: -9.403246879577637

Token 8: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.1456230878829956
    2. ' un' → logprob: -1.3956230878829956
    3. ' ' → logprob: -1.7706230878829956
    4. 'une' → logprob: -2.770623207092285
    5. 'un' → logprob: -3.145623207092285
    6. 's' → logprob: -3.395623207092285
    7. '_' → logprob: -3.645623207092285
    8. ''' → logprob: -3.770623207092285
    9. 'le' → logprob: -4.645623207092285
    10. ' ' → logprob: -4.645623207092285

Token 9: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07050150632858276
    2. ' nom' → logprob: -3.5705015659332275
    3. ' espace' → logprob: -4.070501327514648
    4. ' mot' → logprob: -5.320501327514648
    5. 'texte' → logprob: -5.445501327514648
    6. 'nom' → logprob: -6.320501327514648
    7. ' texte' → logprob: -6.695501327514648
    8. 'e' → logprob: -7.070501327514648
    9. ' prénom' → logprob: -7.070501327514648
    10. '  ' → logprob: -7.320501327514648

Token 10: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.055841222405433655
    2. 'x' → logprob: -3.4308412075042725
    3. 'e' → logprob: -5.055841445922852
    4. 'i' → logprob: -5.055841445922852
    5. '\' → logprob: -6.055841445922852
    6. 'ent' → logprob: -6.555841445922852
    7. '\n' → logprob: -6.555841445922852
    8. '#' → logprob: -6.930841445922852
    9. '```' → logprob: -7.555841445922852
    10. 's' → logprob: -7.930841445922852

Token 11: ' convert' (ID: 8452)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.3098127841949463
    2. 'contin' → logprob: -1.9348127841949463
    3. ' ' → logprob: -2.1848127841949463
    4. 'l' → logprob: -2.5598127841949463
    5. ' continuer' → logprob: -2.8098127841949463
    6. 'aff' → logprob: -3.0598127841949463
    7. ' l' → logprob: -3.0598127841949463
    8. ' effectuer' → logprob: -3.3098127841949463
    9. 'le' → logprob: -3.5598127841949463
    10. ' afficher' → logprob: -3.9348127841949463

Token 12: 'it' (ID: 278)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3018152713775635
    2. 'i' → logprob: -1.4268152713775635
    3. '_' → logprob: -5.051815032958984
    4. 'ir' → logprob: -5.551815032958984
    5. 'er' → logprob: -5.551815032958984
    6. ' ' → logprob: -5.801815032958984
    7. 'e' → logprob: -6.926815032958984
    8. '_r' → logprob: -7.051815032958984
    9. 's' → logprob: -7.676815032958984
    10. 'é' → logprob: -8.551815032958984

Token 13: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3287215828895569
    2. '_' → logprob: -1.328721523284912
    3. '(' → logprob: -5.453721523284912
    4. '```' → logprob: -5.453721523284912
    5. ''' → logprob: -7.078721523284912
    6. '`' → logprob: -7.328721523284912
    7. ' _' → logprob: -7.453721523284912
    8. ':' → logprob: -7.828721523284912
    9. ' (' → logprob: -7.953721523284912
    10. 'u' → logprob: -8.07872200012207

Token 14: ' sais' (ID: 30010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09831547737121582
    2. ' valeur' → logprob: -3.348315477371216
    3. ' chaîne' → logprob: -3.348315477371216
    4. 's' → logprob: -5.348315238952637
    5. 'chaine' → logprob: -5.348315238952637
    6. ' chaine' → logprob: -5.723315238952637
    7. ' ' → logprob: -6.223315238952637
    8. 'ent' → logprob: -6.848315238952637
    9. ' sais' → logprob: -6.973315238952637
    10. ' string' → logprob: -7.098315238952637

Token 15: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0012934509431943297
    2. 'es' → logprob: -6.751293659210205
    3. ' e' → logprob: -9.376293182373047
    4. 'ie' → logprob: -11.126293182373047
    5. '```' → logprob: -12.001293182373047
    6. 's' → logprob: -12.626293182373047
    7. 't' → logprob: -13.126293182373047
    8. 'r' → logprob: -13.126293182373047
    9. '#' → logprob: -13.376293182373047
    10. ' ' → logprob: -13.751293182373047

Token 16: ' en' (ID: 469)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2956420183181763
    2. 'x' → logprob: -1.6706420183181763
    3. 'i' → logprob: -1.7956420183181763
    4. '_' → logprob: -2.0456418991088867
    5. 'e' → logprob: -2.7956418991088867
    6. '```' → logprob: -2.9206418991088867
    7. 'ent' → logprob: -3.6706418991088867
    8. '`' → logprob: -3.7956418991088867
    9. ' ' → logprob: -4.170641899108887
    10. 'int' → logprob: -4.420641899108887

Token 17: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5747072696685791
    2. ' int' → logprob: -1.699707269668579
    3. 'ent' → logprob: -2.199707269668579
    4. ' entier' → logprob: -2.574707269668579
    5. ' un' → logprob: -2.949707269668579
    6. 'un' → logprob: -4.94970703125
    7. ' ' → logprob: -5.69970703125
    8. '```' → logprob: -6.57470703125
    9. 'nombre' → logprob: -6.82470703125
    10. ' nombre' → logprob: -7.32470703125

Token 18: ' avec' (ID: 3937)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0708056315779686
    2. 'x' → logprob: -3.695805549621582
    3. 'i' → logprob: -4.195805549621582
    4. 'e' → logprob: -5.070805549621582
    5. 'ent' → logprob: -5.195805549621582
    6. '\n' → logprob: -5.445805549621582
    7. '```' → logprob: -5.695805549621582
    8. '`' → logprob: -6.320805549621582
    9. 'v' → logprob: -6.945805549621582
    10. '\' → logprob: -6.945805549621582

Token 19: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.030455736443400383
    2. ' int' → logprob: -3.9054558277130127
    3. '```' → logprob: -5.405455589294434
    4. ' la' → logprob: -5.780455589294434
    5. 'la' → logprob: -6.405455589294434
    6. '`' → logprob: -7.780455589294434
    7. 'l' → logprob: -9.655455589294434
    8. 'input' → logprob: -9.905455589294434
    9. '=int' → logprob: -10.530455589294434
    10. '``' → logprob: -11.155455589294434

Token 20: '().
' (ID: 58434)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8448862433433533
    2. 'x' → logprob: -1.469886302947998
    3. '(' → logprob: -2.594886302947998
    4. 'input' → logprob: -3.094886302947998
    5. '```' → logprob: -3.094886302947998
    6. 'user' → logprob: -3.219886302947998
    7. 'i' → logprob: -3.969886302947998
    8. 'v' → logprob: -3.969886302947998
    9. 'u' → logprob: -4.094886302947998
    10. 'ent' → logprob: -4.219886302947998

Token 21: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06103717163205147
    2. 'x' → logprob: -3.186037063598633
    3. 'ent' → logprob: -4.936037063598633
    4. 'nombre' → logprob: -5.436037063598633
    5. '#' → logprob: -6.811037063598633
    6. 'i' → logprob: -6.936037063598633
    7. 's' → logprob: -6.936037063598633
    8. 'e' → logprob: -6.936037063598633
    9. 'a' → logprob: -7.311037063598633
    10. '```' → logprob: -8.186037063598633

Token 22: ' Ceci' (ID: 144699)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8596031665802002
    2. 'ent' → logprob: -0.8596031665802002
    3. 'nombre' → logprob: -2.1096031665802
    4. 'x' → logprob: -4.359602928161621
    5. ' entier' → logprob: -5.109602928161621
    6. 'user' → logprob: -5.609602928161621
    7. 's' → logprob: -6.359602928161621
    8. 'age' → logprob: -6.734602928161621
    9. 'number' → logprob: -6.734602928161621
    10. 'num' → logprob: -6.734602928161621

Token 23: ' dé' (ID: 2393)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4748974144458771
    2. ' est' → logprob: -1.9748973846435547
    3. '_' → logprob: -2.5998973846435547
    4. ' permet' → logprob: -3.3498973846435547
    5. ' a' → logprob: -4.349897384643555
    6. ' continue' → logprob: -4.349897384643555
    7. 's' → logprob: -4.849897384643555
    8. ' n' → logprob: -5.099897384643555
    9. ' ' → logprob: -5.099897384643555
    10. 'est' → logprob: -5.099897384643555

Token 24: 'term' (ID: 8044)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.26002615690231323
    2. 'm' → logprob: -2.260026216506958
    3. 'mand' → logprob: -3.260026216506958
    4. 'mar' → logprob: -3.885026216506958
    5. '#' → logprob: -4.010025978088379
    6. 'mande' → logprob: -4.635025978088379
    7. 'mont' → logprob: -5.010025978088379
    8. 'ma' → logprob: -5.260025978088379
    9. 'fi' → logprob: -5.760025978088379
    10. 'fine' → logprob: -6.010025978088379

Token 25: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.0028247274458408356
    2. '#' → logprob: -7.377824783325195
    3. 'ne' → logprob: -7.377824783325195
    4. 'i' → logprob: -7.502824783325195
    5. ' ine' → logprob: -7.877824783325195
    6. 'n' → logprob: -8.502824783325195
    7. '```' → logprob: -9.002824783325195
    8. 'r' → logprob: -9.627824783325195
    9. 'inez' → logprob: -9.877824783325195
    10. '   ' → logprob: -10.127824783325195

Token 26: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6220347881317139
    2. ' l' → logprob: -1.2470347881317139
    3. ' le' → logprob: -2.622034788131714
    4. ' ' → logprob: -3.622034788131714
    5. ' si' → logprob: -3.747034788131714
    6. ' ' → logprob: -4.122035026550293
    7. 'le' → logprob: -4.497035026550293
    8. 'l' → logprob: -5.122035026550293
    9. 's' → logprob: -5.497035026550293
    10. ' if' → logprob: -5.872035026550293

Token 27: ' longueur' (ID: 104613)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.5634355545043945
    2. 'val' → logprob: -1.9384355545043945
    3. ' ' → logprob: -2.9384355545043945
    4. ' nature' → logprob: -3.1884355545043945
    5. 'v' → logprob: -3.6884355545043945
    6. 's' → logprob: -3.6884355545043945
    7. ' variable' → logprob: -4.1884355545043945
    8. 'nombre' → logprob: -4.4384355545043945
    9. 'type' → logprob: -4.4384355545043945
    10. 'n' → logprob: -4.5634355545043945

Token 28: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01660069450736046
    2. ' ' → logprob: -5.016600608825684
    3. ' de' → logprob: -5.641600608825684
    4. '_de' → logprob: -5.891600608825684
    5. ' _' → logprob: -7.391600608825684
    6. 'de' → logprob: -7.641600608825684
    7. 'd' → logprob: -7.641600608825684
    8. '_d' → logprob: -7.766600608825684
    9. 's' → logprob: -7.891600608825684
    10. ' d' → logprob: -8.641600608825684

Token 29: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.021494541317224503
    2. ' l' → logprob: -4.521494388580322
    3. 'la' → logprob: -5.021494388580322
    4. 'l' → logprob: -6.646494388580322
    5. ' ' → logprob: -7.521494388580322
    6. 's' → logprob: -7.771494388580322
    7. '_' → logprob: -8.02149486541748
    8. 'chaine' → logprob: -8.83399486541748
    9. ' liste' → logprob: -9.27149486541748
    10. ' chaîne' → logprob: -9.39649486541748

Token 30: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.41802096366882324
    2. 'chaine' → logprob: -1.7930209636688232
    3. ' liste' → logprob: -2.1680209636688232
    4. ' chaine' → logprob: -3.9180209636688232
    5. 'cha' → logprob: -4.293021202087402
    6. 'liste' → logprob: -4.543021202087402
    7. 's' → logprob: -5.793021202087402
    8. 'phrase' → logprob: -6.168021202087402
    9. ' phrase' → logprob: -6.168021202087402
    10. '#' → logprob: -6.793021202087402

Token 31: ' de' (ID: 334)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5016981959342957
    2. 'n' → logprob: -1.6266982555389404
    3. 's' → logprob: -2.7516982555389404
    4. '_' → logprob: -2.8766982555389404
    5. 'e' → logprob: -4.626698017120361
    6. 'i' → logprob: -5.001698017120361
    7. ' ' → logprob: -5.126698017120361
    8. ',' → logprob: -5.126698017120361
    9. 't' → logprob: -5.126698017120361
    10. '\' → logprob: -5.251698017120361

Token 32: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.6770259141921997
    2. 'car' → logprob: -0.8020259141921997
    3. 'la' → logprob: -4.42702579498291
    4. ' la' → logprob: -4.55202579498291
    5. ' caract' → logprob: -5.42702579498291
    6. ' caractère' → logprob: -5.55202579498291
    7. ' ' → logprob: -6.17702579498291
    8. 'texte' → logprob: -6.30202579498291
    9. 's' → logprob: -6.42702579498291
    10. ' caracteres' → logprob: -6.55202579498291

Token 33: ' que' (ID: 661)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.15129271149635315
    2. 'n' → logprob: -2.5262928009033203
    3. 's' → logprob: -3.9012928009033203
    4. '_' → logprob: -5.02629280090332
    5. 'e' → logprob: -5.02629280090332
    6. 'i' → logprob: -5.15129280090332
    7. 'long' → logprob: -5.65129280090332
    8. 't' → logprob: -6.27629280090332
    9. '\' → logprob: -6.27629280090332
    10. '#' → logprob: -6.40129280090332

Token 34: ' nous' (ID: 6176)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.1871078908443451
    2. 'l' → logprob: -2.312107801437378
    3. ' on' → logprob: -3.937107801437378
    4. 'on' → logprob: -4.562108039855957
    5. 'la' → logprob: -4.562108039855957
    6. ' ' → logprob: -5.062108039855957
    7. ' la' → logprob: -5.062108039855957
    8. ''on' → logprob: -5.562108039855957
    9. ' tu' → logprob: -5.687108039855957
    10. ' vous' → logprob: -6.187108039855957

Token 35: ' allons' (ID: 97647)
  Prédit: ' allons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' allons' → logprob: -0.7832412123680115
    2. ' voulons' → logprob: -1.9082412719726562
    3. 'sou' → logprob: -2.0332412719726562
    4. 'v' → logprob: -2.6582412719726562
    5. 'vou' → logprob: -3.1582412719726562
    6. ' all' → logprob: -3.4082412719726562
    7. 'all' → logprob: -3.5332412719726562
    8. ' demand' → logprob: -4.283241271972656
    9. ' souhait' → logprob: -4.783241271972656
    10. ' ' → logprob: -4.783241271972656

Token 36: ' lire' (ID: 46082)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.2966983318328857
    2. 'aff' → logprob: -1.5466983318328857
    3. 'tr' → logprob: -2.7966983318328857
    4. 'faire' → logprob: -2.7966983318328857
    5. ' créer' → logprob: -3.0466983318328857
    6. 's' → logprob: -3.1716983318328857
    7. '#' → logprob: -3.7966983318328857
    8. 'cr' → logprob: -3.9216983318328857
    9. ' afficher' → logprob: -3.9216983318328857
    10. 'conc' → logprob: -4.421698570251465

Token 37: ' ensuite' (ID: 39713)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5108908414840698
    2. 'l' → logprob: -2.1358909606933594
    3. 's' → logprob: -2.3858909606933594
    4. 'e' → logprob: -3.3858909606933594
    5. 'i' → logprob: -3.3858909606933594
    6. '\' → logprob: -3.6358909606933594
    7. '#' → logprob: -4.010890960693359
    8. '_' → logprob: -4.385890960693359
    9. 'ent' → logprob: -4.510890960693359
    10. 'long' → logprob: -4.635890960693359

Token 38: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3713582456111908
    2. 'e' → logprob: -2.7463581562042236
    3. 'i' → logprob: -2.7463581562042236
    4. 's' → logprob: -2.8713581562042236
    5. '#' → logprob: -3.1213581562042236
    6. 'l' → logprob: -3.2463581562042236
    7. 'x' → logprob: -4.621358394622803
    8. 'u' → logprob: -4.996358394622803
    9. 't' → logprob: -5.371358394622803
    10. 'ent' → logprob: -5.496358394622803

Token 39: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.036535609513521194
    2. 'l' → logprob: -4.286535739898682
    3. 'i' → logprob: -5.161535739898682
    4. 's' → logprob: -5.411535739898682
    5. 'e' → logprob: -6.161535739898682
    6. '\' → logprob: -6.536535739898682
    7. '\n' → logprob: -6.536535739898682
    8. 'x' → logprob: -6.661535739898682
    9. '#' → logprob: -7.036535739898682
    10. 'ent' → logprob: -7.036535739898682

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05967423692345619
    2. '=' → logprob: -2.9346742630004883
    3. ' ' → logprob: -5.434674263000488
    4. '_' → logprob: -8.684674263000488
    5. 'um' → logprob: -9.934674263000488
    6. 'umber' → logprob: -10.059674263000488
    7. '  ' → logprob: -10.434674263000488
    8. 'u' → logprob: -10.559674263000488
    9. '=int' → logprob: -11.184674263000488
    10. ' ' → logprob: -11.309674263000488

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.014188424684107304
    2. 'int' → logprob: -4.264188289642334
    3. ' input' → logprob: -10.764188766479492
    4. ' ' → logprob: -12.889188766479492
    5. 'input' → logprob: -14.264188766479492
    6. '=int' → logprob: -15.139188766479492
    7. ' ' → logprob: -15.514188766479492
    8. '<int' → logprob: -16.889188766479492
    9. '(int' → logprob: -17.889188766479492
    10. '  ' → logprob: -17.889188766479492

Token 42: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3869020342826843
    2. '(' → logprob: -1.136902093887329
    3. 'input' → logprob: -10.76190185546875
    4. ' (' → logprob: -12.13690185546875
    5. '(
' → logprob: -12.76190185546875
    6. '(

' → logprob: -15.01190185546875
    7. '('' → logprob: -15.26190185546875
    8. '(int' → logprob: -15.63690185546875
    9. '()' → logprob: -15.63690185546875
    10. '(user' → logprob: -16.26190185546875

Token 43: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1435333788394928
    2. '()' → logprob: -2.14353346824646
    3. '('' → logprob: -4.768533229827881
    4. '())' → logprob: -5.643533229827881
    5. '("("' → logprob: -5.768533229827881
    6. '("' → logprob: -8.018533706665039
    7. '(""))' → logprob: -8.143533706665039
    8. '()))' → logprob: -8.768533706665039
    9. '("")' → logprob: -8.893533706665039
    10. ')' → logprob: -9.268533706665039

Token 44: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0931706503033638
    2. 'chaine' → logprob: -2.718170642852783
    3. 'n' → logprob: -4.718170642852783
    4. 'string' → logprob: -5.968170642852783
    5. '#' → logprob: -6.218170642852783
    6. 'a' → logprob: -6.718170642852783
    7. '\n' → logprob: -6.968170642852783
    8. 'S' → logprob: -6.968170642852783
    9. 'str' → logprob: -7.093170642852783
    10. ')' → logprob: -7.468170642852783

Token 45: ' Dem' (ID: 9458)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.33609095215797424
    2. 's' → logprob: -1.5860909223556519
    3. 'text' → logprob: -4.086091041564941
    4. 'string' → logprob: -4.461091041564941
    5. 'texte' → logprob: -4.836091041564941
    6. ' s' → logprob: -4.961091041564941
    7. ' text' → logprob: -5.461091041564941
    8. ' chaine' → logprob: -5.586091041564941
    9. 'ch' → logprob: -5.711091041564941
    10. 'for' → logprob: -5.711091041564941

Token 46: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.0007432799902744591
    2. 'and' → logprob: -8.12574291229248
    3. 'andez' → logprob: -8.75074291229248
    4. 'a' → logprob: -9.50074291229248
    5. 'andre' → logprob: -9.75074291229248
    6. '#' → logprob: -9.87574291229248
    7. 'ade' → logprob: -10.12574291229248
    8. 'e' → logprob: -10.50074291229248
    9. 'ander' → logprob: -10.62574291229248
    10. 'andes' → logprob: -13.37574291229248

Token 47: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1662137806415558
    2. '()' → logprob: -2.0412137508392334
    3. '("' → logprob: -5.2912139892578125
    4. '('' → logprob: -5.6662139892578125
    5. ' ' → logprob: -5.9162139892578125
    6. ' la' → logprob: -6.0412139892578125
    7. ')' → logprob: -6.1662139892578125
    8. ' (' → logprob: -6.4162139892578125
    9. '("")' → logprob: -6.6662139892578125
    10. '#' → logprob: -7.0412139892578125

Token 48: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5862430334091187
    2. 'l' → logprob: -1.9612430334091187
    3. 'input' → logprob: -1.9612430334091187
    4. ' input' → logprob: -2.711243152618408
    5. ' la' → logprob: -3.211243152618408
    6. ' une' → logprob: -4.211243152618408
    7. ' ' → logprob: -4.336243152618408
    8. 'la' → logprob: -4.461243152618408
    9. ' ' → logprob: -5.711243152618408
    10. 'len' → logprob: -5.961243152618408

Token 49: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.061086732894182205
    2. 'util' → logprob: -3.186086654663086
    3. ' utilisateur' → logprob: -4.186086654663086
    4. '’utilisateur' → logprob: -6.061086654663086
    5. 'user' → logprob: -8.436086654663086
    6. 'Utilisateur' → logprob: -9.936086654663086
    7. '#' → logprob: -10.311086654663086
    8. ''util' → logprob: -10.936086654663086
    9. '_util' → logprob: -11.436086654663086
    10. ' user' → logprob: -11.561086654663086

Token 50: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8444881439208984
    2. '<|end|>' → logprob: -1.4694881439208984
    3. 's' → logprob: -2.5944881439208984
    4. ' de' → logprob: -2.7194881439208984
    5. ' la' → logprob: -3.2194881439208984
    6. ')' → logprob: -3.7194881439208984
    7. ' d' → logprob: -4.094488143920898
    8. 'd' → logprob: -4.219488143920898
    9. '#' → logprob: -4.219488143920898
    10. '  ' → logprob: -4.844488143920898

Token 51: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.8124937415122986
    2. ' input' → logprob: -1.0624938011169434
    3. 'input' → logprob: -2.6874938011169434
    4. ' lire' → logprob: -2.6874938011169434
    5. ' ' → logprob: -3.0624938011169434
    6. 'l' → logprob: -4.437493801116943
    7. 's' → logprob: -4.562493801116943
    8. ' l' → logprob: -5.937493801116943
    9. ' continuer' → logprob: -7.562493801116943
    10. ' ' → logprob: -7.687493801116943

Token 52: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09792178869247437
    2. ' la' → logprob: -3.222921848297119
    3. ' une' → logprob: -3.847921848297119
    4. '()' → logprob: -4.347921848297119
    5. ' ' → logprob: -4.347921848297119
    6. '(' → logprob: -5.972921848297119
    7. 'une' → logprob: -7.222921848297119
    8. '_' → logprob: -7.722921848297119
    9. ' un' → logprob: -7.847921848297119
    10. '("")' → logprob: -8.222921371459961

Token 53: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.17006012797355652
    2. 'chaine' → logprob: -2.170060157775879
    3. ' chaine' → logprob: -4.170060157775879
    4. 'cha' → logprob: -4.295060157775879
    5. ' ' → logprob: -4.795060157775879
    6. 's' → logprob: -6.795060157775879
    7. 'ch' → logprob: -7.045060157775879
    8. ' cha' → logprob: -7.670060157775879
    9. ' string' → logprob: -7.670060157775879
    10. 'texte' → logprob: -8.170060157775879

Token 54: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43643301725387573
    2. 'de' → logprob: -1.5614330768585205
    3. 's' → logprob: -2.1864330768585205
    4. 'chaine' → logprob: -4.061432838439941
    5. '_' → logprob: -5.561432838439941
    6. 'car' → logprob: -6.436432838439941
    7. 'a' → logprob: -6.561432838439941
    8. '(' → logprob: -6.686432838439941
    9. '#' → logprob: -7.186432838439941
    10. '("")' → logprob: -7.436432838439941

Token 55: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.635417640209198
    2. 'car' → logprob: -0.760417640209198
    3. ' caracteres' → logprob: -6.385417461395264
    4. ' caract' → logprob: -7.135417461395264
    5. ' caractère' → logprob: -9.010417938232422
    6. ' car' → logprob: -9.885417938232422
    7. 'char' → logprob: -10.135417938232422
    8. 'c' → logprob: -10.135417938232422
    9. 'chars' → logprob: -10.635417938232422
    10. 'texte' → logprob: -11.635417938232422

Token 56: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04732339456677437
    2. 'chaine' → logprob: -3.29732346534729
    3. ' s' → logprob: -5.672323226928711
    4. 'string' → logprob: -6.172323226928711
    5. 'str' → logprob: -7.172323226928711
    6. 'texte' → logprob: -7.547323226928711
    7. 'a' → logprob: -7.672323226928711
    8. ' chaine' → logprob: -7.797323226928711
    9. 'txt' → logprob: -8.172323226928711
    10. 'text' → logprob: -8.297323226928711

Token 57: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24166996777057648
    2. 'chaine' → logprob: -1.61667001247406
    3. 'string' → logprob: -4.86667013168335
    4. 'text' → logprob: -5.86667013168335
    5. 'S' → logprob: -5.86667013168335
    6. 'str' → logprob: -6.86667013168335
    7. 'ch' → logprob: -7.49167013168335
    8. 'texte' → logprob: -8.241669654846191
    9. ' s' → logprob: -8.366669654846191
    10. 'txt' → logprob: -8.491669654846191

Token 58: ' Cette' (ID: 27383)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2050248384475708
    2. 'chaine' → logprob: -1.8300248384475708
    3. 'string' → logprob: -4.580024719238281
    4. 'text' → logprob: -5.205024719238281
    5. 'S' → logprob: -5.205024719238281
    6. 'ch' → logprob: -6.330024719238281
    7. 'texte' → logprob: -6.830024719238281
    8. 'str' → logprob: -7.830024719238281
    9. 'txt' → logprob: -8.955024719238281
    10. 'chain' → logprob: -9.705024719238281

Token 59: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.26781484484672546
    2. 's' → logprob: -1.8928148746490479
    3. ' chaîne' → logprob: -2.767814874649048
    4. ' chaine' → logprob: -4.142814636230469
    5. ' s' → logprob: -6.142814636230469
    6. ' string' → logprob: -6.767814636230469
    7. 'string' → logprob: -7.142814636230469
    8. 'cha' → logprob: -8.017814636230469
    9. 'ch' → logprob: -8.392814636230469
    10. 'n' → logprob: -9.267814636230469

Token 60: ' aura' (ID: 33008)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16151361167430878
    2. '=' → logprob: -2.661513566970825
    3. 's' → logprob: -2.911513566970825
    4. '_' → logprob: -4.036513805389404
    5. 'de' → logprob: -6.661513805389404
    6. ' ' → logprob: -6.911513805389404
    7. '.' → logprob: -7.161513805389404
    8. '_=' → logprob: -7.286513805389404
    9. ' de' → logprob: -7.536513805389404
    10. 'chaine' → logprob: -7.536513805389404

Token 61: ' exactement' (ID: 108701)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.04078005254268646
    2. 'une' → logprob: -3.2907800674438477
    3. ' exactement' → logprob: -6.165780067443848
    4. 'length' → logprob: -8.790780067443848
    5. ' longueur' → logprob: -9.165780067443848
    6. ' ' → logprob: -9.415780067443848
    7. ' la' → logprob: -9.790780067443848
    8. ''une' → logprob: -10.540780067443848
    9. 'n' → logprob: -10.540780067443848
    10. ' ensuite' → logprob: -10.540780067443848

Token 62: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.43837234377861023
    2. ' N' → logprob: -1.1883723735809326
    3. ' ' → logprob: -3.8133723735809326
    4. ' la' → logprob: -4.6883721351623535
    5. ' exactement' → logprob: -5.3133721351623535
    6. 'length' → logprob: -5.5633721351623535
    7. ' une' → logprob: -5.6883721351623535
    8. 'input' → logprob: -7.1883721351623535
    9. ' input' → logprob: -7.4383721351623535
    10. 'une' → logprob: -7.4383721351623535

Token 63: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.00397890480235219
    2. ' caract' → logprob: -6.503978729248047
    3. 'car' → logprob: -7.378978729248047
    4. ' ' → logprob: -7.378978729248047
    5. ' caractère' → logprob: -7.503978729248047
    6. ' caracteres' → logprob: -7.628978729248047
    7. ' car' → logprob: -9.753978729248047
    8. ' espaces' → logprob: -10.128978729248047
    9. '<|end|>' → logprob: -10.628978729248047
    10. ' ' → logprob: -11.253978729248047

Token 64: ' selon' (ID: 27571)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013797803781926632
    2. 'chaine' → logprob: -5.013797760009766
    3. 'string' → logprob: -5.263797760009766
    4. 'text' → logprob: -7.513797760009766
    5. 'S' → logprob: -7.513797760009766
    6. 'str' → logprob: -8.388797760009766
    7. 'txt' → logprob: -8.763797760009766
    8. 'ch' → logprob: -8.888797760009766
    9. ' s' → logprob: -9.013797760009766
    10. 'texte' → logprob: -10.013797760009766

Token 65: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.06761443614959717
    2. 'la' → logprob: -3.5676145553588867
    3. ' len' → logprob: -3.8176145553588867
    4. 'len' → logprob: -4.942614555358887
    5. ' ' → logprob: -6.317614555358887
    6. ' ce' → logprob: -6.442614555358887
    7. ' input' → logprob: -6.442614555358887
    8. ' l' → logprob: -6.942614555358887
    9. ' le' → logprob: -7.692614555358887
    10. ' sa' → logprob: -8.067614555358887

Token 66: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.013487840071320534
    2. 'e' → logprob: -4.638487815856934
    3. '#' → logprob: -7.388487815856934
    4. ''' → logprob: -7.388487815856934
    5. ''entrée' → logprob: -8.013487815856934
    6. 'instruction' → logprob: -8.013487815856934
    7. 'es' → logprob: -8.138487815856934
    8. 'la' → logprob: -8.138487815856934
    9. ''in' → logprob: -8.513487815856934
    10. ' la' → logprob: -8.638487815856934

Token 67: 'én' (ID: 3289)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -1.5608757734298706
    2. 'instruction' → logprob: -1.5608757734298706
    3. 'ex' → logprob: -1.6858757734298706
    4. 'ent' → logprob: -2.06087589263916
    5. 'én' → logprob: -2.06087589263916
    6. 'entrée' → logprob: -2.56087589263916
    7. 'input' → logprob: -3.93587589263916
    8. 'en' → logprob: -4.56087589263916
    9. 'é' → logprob: -5.06087589263916
    10. 'instructions' → logprob: -5.18587589263916

Token 68: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.0033061588183045387
    2. 'onc' → logprob: -6.7533063888549805
    3. 'on' → logprob: -7.0033063888549805
    4. 'non' → logprob: -7.0033063888549805
    5. 'once' → logprob: -8.12830638885498
    6. 'oncer' → logprob: -11.75330638885498
    7. 'um' → logprob: -13.25330638885498
    8. 'o' → logprob: -13.25330638885498
    9. 'cé' → logprob: -13.62830638885498
    10. 'nonce' → logprob: -13.62830638885498

Token 69: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20251084864139557
    2. 'chaine' → logprob: -1.8275108337402344
    3. 'string' → logprob: -4.327510833740234
    4. 'ch' → logprob: -5.827510833740234
    5. 'text' → logprob: -6.077510833740234
    6. 'str' → logprob: -6.702510833740234
    7. 'txt' → logprob: -6.952510833740234
    8. 'texte' → logprob: -7.827510833740234
    9. 'S' → logprob: -7.952510833740234
    10. 'input' → logprob: -7.952510833740234

Token 70: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27092254161834717
    2. 'chaine' → logprob: -1.5209225416183472
    3. 'string' → logprob: -4.520922660827637
    4. 'text' → logprob: -5.395922660827637
    5. 'ch' → logprob: -6.895922660827637
    6. 'S' → logprob: -7.020922660827637
    7. 'str' → logprob: -7.395922660827637
    8. 'texte' → logprob: -7.770922660827637
    9. 'txt' → logprob: -8.645922660827637
    10. 'chain' → logprob: -9.645922660827637

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07002068310976028
    2. '=' → logprob: -2.6950206756591797
    3. '=input' → logprob: -9.82002067565918
    4. ' ' → logprob: -10.69502067565918
    5. ' ' → logprob: -12.69502067565918
    6. 'tring' → logprob: -13.19502067565918
    7. 's' → logprob: -13.69502067565918
    8. '  ' → logprob: -14.94502067565918
    9. '=s' → logprob: -15.69502067565918
    10. '.' → logprob: -15.69502067565918

Token 72: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07889099419116974
    2. 'input' → logprob: -2.5788910388946533
    3. '=input' → logprob: -14.578890800476074
    4. '(input' → logprob: -14.953890800476074
    5. 's' → logprob: -16.07889175415039
    6. '	input' → logprob: -16.20389175415039
    7. ' ' → logprob: -16.45389175415039
    8. '<input' → logprob: -16.82889175415039
    9. 'str' → logprob: -17.82889175415039
    10. ' str' → logprob: -17.82889175415039

Token 73: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008274946012534201
    2. '(' → logprob: -7.250827312469482
    3. ' ()' → logprob: -9.12582778930664
    4. '("")' → logprob: -13.25082778930664
    5. '())' → logprob: -13.62582778930664
    6. '（）' → logprob: -13.75082778930664
    7. ')' → logprob: -13.87582778930664
    8. '().' → logprob: -14.25082778930664
    9. '()>' → logprob: -14.75082778930664
    10. '()]' → logprob: -15.12582778930664

Token 74: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5496536493301392
    2. '[' → logprob: -1.5496536493301392
    3. '.' → logprob: -1.9246536493301392
    4. '<|end|>' → logprob: -4.17465353012085
    5. 's' → logprob: -4.29965353012085
    6. ' ' → logprob: -4.29965353012085
    7. '
' → logprob: -5.92465353012085
    8. 'i' → logprob: -6.29965353012085
    9. 'a' → logprob: -6.29965353012085
    10. '' → logprob: -6.42465353012085

Token 75: ' Initialise' (ID: 179601)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6616136431694031
    2. 'l' → logprob: -1.7866137027740479
    3. 'i' → logprob: -2.161613702774048
    4. 'n' → logprob: -2.911613702774048
    5. 'p' → logprob: -3.786613702774048
    6. ' ' → logprob: -4.161613464355469
    7. ' #' → logprob: -4.286613464355469
    8. 'length' → logprob: -4.286613464355469
    9. 'for' → logprob: -4.286613464355469
    10. 'r' → logprob: -4.411613464355469

Token 76: ' un' (ID: 537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.913311779499054
    2. ' _' → logprob: -2.163311719894409
    3. ' length' → logprob: -2.663311719894409
    4. ' result' → logprob: -2.913311719894409
    5. 'count' → logprob: -2.913311719894409
    6. 'length' → logprob: -3.163311719894409
    7. ' ' → logprob: -3.163311719894409
    8. ' count' → logprob: -3.413311719894409
    9. ' longueur' → logprob: -3.538311719894409
    10. ' a' → logprob: -3.788311719894409

Token 77: ' compteur' (ID: 163344)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8181812763214111
    2. ' compteur' → logprob: -1.4431812763214111
    3. ' d' → logprob: -2.568181276321411
    4. 'count' → logprob: -2.943181276321411
    5. '_' → logprob: -3.068181276321411
    6. 'dict' → logprob: -3.943181276321411
    7. ' diction' → logprob: -4.068181037902832
    8. 's' → logprob: -4.068181037902832
    9. ' ' → logprob: -4.568181037902832
    10. 'counter' → logprob: -4.693181037902832

Token 78: ' à' (ID: 1221)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5277426242828369
    2. ' =' → logprob: -2.277742624282837
    3. 'c' → logprob: -2.402742624282837
    4. ' ' → logprob: -2.902742624282837
    5. 'i' → logprob: -3.277742624282837
    6. '_' → logprob: -3.402742624282837
    7. ' compteur' → logprob: -3.777742624282837
    8. '=' → logprob: -4.027742385864258
    9. 'counts' → logprob: -5.027742385864258
    10. 'd' → logprob: -5.027742385864258

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3492930233478546
    2. ' ' → logprob: -1.2242929935455322
    3. ' zéro' → logprob: -7.599293231964111
    4. '1' → logprob: -8.349292755126953
    5. ' ' → logprob: -10.474292755126953
    6. ' zero' → logprob: -10.599292755126953
    7. 'z' → logprob: -10.599292755126953
    8. ' z' → logprob: -10.724292755126953
    9. 'zero' → logprob: -13.349292755126953
    10. '```' → logprob: -13.724292755126953

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.652451464906335e-05
    2. ' ' → logprob: -11.625016212463379
    3. 'z' → logprob: -11.875016212463379
    4. '1' → logprob: -14.375016212463379
    5. '_' → logprob: -18.375017166137695
    6. 'zero' → logprob: -18.500017166137695
    7. ' zéro' → logprob: -19.000017166137695
    8. 's' → logprob: -19.000017166137695
    9. '-' → logprob: -19.125017166137695
    10. ' z' → logprob: -19.375017166137695

Token 81: '.' (ID: 13)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4945858418941498
    2. 'count' → logprob: -1.4945858716964722
    3. 'i' → logprob: -2.7445857524871826
    4. ' compteur' → logprob: -2.9945857524871826
    5. 'comp' → logprob: -3.9945857524871826
    6. ' ' → logprob: -4.494585990905762
    7. 'counter' → logprob: -5.369585990905762
    8. 'n' → logprob: -5.494585990905762
    9. '_' → logprob: -5.494585990905762
    10. 'com' → logprob: -5.744585990905762

Token 82: ' 
' (ID: 793)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3152723014354706
    2. 'count' → logprob: -1.315272331237793
    3. 'counter' → logprob: -6.565272331237793
    4. 'i' → logprob: -8.315272331237793
    5. 'comp' → logprob: -9.315272331237793
    6. 'cou' → logprob: -9.440272331237793
    7. 'cnt' → logprob: -9.565272331237793
    8. 'com' → logprob: -11.190272331237793
    9. ' count' → logprob: -11.190272331237793
    10. 'counts' → logprob: -11.315272331237793

Token 83: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.43144404888153076
    2. 'count' → logprob: -1.0564440488815308
    3. 'counter' → logprob: -6.80644416809082
    4. 'i' → logprob: -7.18144416809082
    5. 'comp' → logprob: -8.30644416809082
    6. ' count' → logprob: -8.68144416809082
    7. 'cnt' → logprob: -9.18144416809082
    8. 'cou' → logprob: -9.30644416809082
    9. ' compteur' → logprob: -9.80644416809082
    10. 't' → logprob: -10.30644416809082

Token 84: ' Ce' (ID: 14228)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11645755916833878
    2. 'count' → logprob: -2.241457462310791
    3. ' count' → logprob: -6.366457462310791
    4. 'i' → logprob: -7.366457462310791
    5. 'counter' → logprob: -8.24145793914795
    6. ' c' → logprob: -8.74145793914795
    7. 'cou' → logprob: -8.74145793914795
    8. 'comp' → logprob: -9.11645793914795
    9. ' compteur' → logprob: -9.61645793914795
    10. 'cnt' → logprob: -9.74145793914795

Token 85: ' compteur' (ID: 163344)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02207821235060692
    2. 'n' → logprob: -5.022078037261963
    3. '_' → logprob: -5.272078037261963
    4. ' compteur' → logprob: -6.022078037261963
    5. ' n' → logprob: -6.772078037261963
    6. 'i' → logprob: -6.897078037261963
    7. 's' → logprob: -7.147078037261963
    8. 'u' → logprob: -7.522078037261963
    9. '=' → logprob: -8.022078514099121
    10. ' ' → logprob: -8.147078514099121

Token 86: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02861330844461918
    2. '_' → logprob: -4.028613090515137
    3. '=' → logprob: -5.403613090515137
    4. ' =' → logprob: -5.653613090515137
    5. 's' → logprob: -6.528613090515137
    6. '.' → logprob: -8.528613090515137
    7. 'i' → logprob: -9.278613090515137
    8. '[' → logprob: -9.403613090515137
    9. 'n' → logprob: -9.653613090515137
    10. 'a' → logprob: -9.653613090515137

Token 87: 'num' (ID: 4571)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8609173893928528
    2. ' ' → logprob: -1.110917329788208
    3. ' =' → logprob: -2.235917329788208
    4. '_' → logprob: -2.610917329788208
    5. 'i' → logprob: -3.985917329788208
    6. 's' → logprob: -4.110917568206787
    7. 'c' → logprob: -5.110917568206787
    8. 'n' → logprob: -5.110917568206787
    9. 'count' → logprob: -5.110917568206787
    10. ''' → logprob: -6.235917568206787

Token 88: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04067441076040268
    2. 'éro' → logprob: -4.165674209594727
    3. 'éros' → logprob: -5.165674209594727
    4. '_car' → logprob: -6.040674209594727
    5. 'e' → logprob: -6.290674209594727
    6. 'r' → logprob: -6.415674209594727
    7. '_r' → logprob: -6.540674209594727
    8. '_c' → logprob: -6.665674209594727
    9. 'er' → logprob: -6.915674209594727
    10. '_v' → logprob: -7.040674209594727

Token 89: ' va' (ID: 3423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3226868808269501
    2. ' =' → logprob: -1.9476869106292725
    3. '=' → logprob: -2.0726869106292725
    4. ' +=' → logprob: -5.322686672210693
    5. '+' → logprob: -7.072686672210693
    6. '_' → logprob: -7.572686672210693
    7. 's' → logprob: -7.947686672210693
    8. '+=' → logprob: -8.197687149047852
    9. 'a' → logprob: -9.822687149047852
    10. ')' → logprob: -9.947687149047852

Token 90: ' compter' (ID: 81694)
  Prédit: ' compter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.12577801942825317
    2. ' ' → logprob: -2.2507779598236084
    3. ' servir' → logprob: -5.3757781982421875
    4. ' compt' → logprob: -6.0007781982421875
    5. ' =' → logprob: -6.5007781982421875
    6. '=' → logprob: -6.6257781982421875
    7. ' permettre' → logprob: -7.5007781982421875
    8. 'count' → logprob: -8.250778198242188
    9. ' représ' → logprob: -8.500778198242188
    10. '  ' → logprob: -8.500778198242188

Token 91: ' combien' (ID: 106648)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10672326385974884
    2. '<|end|>' → logprob: -2.4817233085632324
    3. ' les' → logprob: -5.606723308563232
    4. '  ' → logprob: -6.481723308563232
    5. 's' → logprob: -6.606723308563232
    6. ' le' → logprob: -6.731723308563232
    7. '```' → logprob: -6.856723308563232
    8. 'les' → logprob: -6.856723308563232
    9. '<|end|>' → logprob: -6.856723308563232
    10. ',' → logprob: -7.231723308563232

Token 92: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2729296386241913
    2. '<|end|>' → logprob: -2.0229296684265137
    3. '_' → logprob: -3.0229296684265137
    4. 's' → logprob: -3.7729296684265137
    5. ' des' → logprob: -4.897929668426514
    6. ' de' → logprob: -5.022929668426514
    7. ' d' → logprob: -5.147929668426514
    8. 'e' → logprob: -5.772929668426514
    9. '  ' → logprob: -6.022929668426514
    10. ' espaces' → logprob: -6.772929668426514

Token 93: ' fois' (ID: 14697)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48679792881011963
    2. ' a' → logprob: -1.7367979288101196
    3. ' fois' → logprob: -3.11179780960083
    4. ' caractères' → logprob: -3.11179780960083
    5. ' espaces' → logprob: -3.48679780960083
    6. 'a' → logprob: -3.98679780960083
    7. ' '' → logprob: -4.23679780960083
    8. ' s' → logprob: -4.86179780960083
    9. ''' → logprob: -4.98679780960083
    10. ' caracteres' → logprob: -5.36179780960083

Token 94: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7400993704795837
    2. ''' → logprob: -0.9900993704795837
    3. ' '' → logprob: -2.8650994300842285
    4. 'a' → logprob: -3.6150994300842285
    5. ''a' → logprob: -3.9900994300842285
    6. 's' → logprob: -4.1150994300842285
    7. ' a' → logprob: -5.1150994300842285
    8. '"' → logprob: -5.4900994300842285
    9. ' "' → logprob: -5.4900994300842285
    10. ''s' → logprob: -5.7400994300842285

Token 95: ' lettre' (ID: 68013)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6100929379463196
    2. ''' → logprob: -1.9850928783416748
    3. ' ' → logprob: -2.485092878341675
    4. ' a' → logprob: -3.235092878341675
    5. '_' → logprob: -3.735092878341675
    6. 'i' → logprob: -3.735092878341675
    7. 'e' → logprob: -3.860092878341675
    8. ''a' → logprob: -4.110093116760254
    9. 'o' → logprob: -4.360093116760254
    10. 's' → logprob: -4.360093116760254

Token 96: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9769032597541809
    2. ''' → logprob: -1.2269032001495361
    3. 'a' → logprob: -2.101903200149536
    4. 'e' → logprob: -2.976903200149536
    5. ' e' → logprob: -2.976903200149536
    6. ''a' → logprob: -3.101903200149536
    7. ' a' → logprob: -3.476903200149536
    8. ' '' → logprob: -4.851903438568115
    9. ''e' → logprob: -4.976903438568115
    10. ''i' → logprob: -5.726903438568115

Token 97: 'R' (ID: 49)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14849601686000824
    2. 'e' → logprob: -3.27349591255188
    3. 'n' → logprob: -3.52349591255188
    4. 'o' → logprob: -4.148496150970459
    5. 's' → logprob: -4.398496150970459
    6. 'p' → logprob: -4.523496150970459
    7. 'r' → logprob: -4.648496150970459
    8. 'i' → logprob: -5.148496150970459
    9. ''' → logprob: -5.773496150970459
    10. 't' → logprob: -6.023496150970459

Token 98: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09957819432020187
    2. 'e' → logprob: -2.4745781421661377
    3. 'a' → logprob: -5.224578380584717
    4. 'r' → logprob: -5.599578380584717
    5. '"' → logprob: -7.974578380584717
    6. ' '' → logprob: -8.099577903747559
    7. 'o' → logprob: -8.224577903747559
    8. 'u' → logprob: -9.099577903747559
    9. 'R' → logprob: -9.349577903747559
    10. ''a' → logprob: -9.599577903747559

Token 99: ' apparaît' (ID: 147656)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22373276948928833
    2. ' a' → logprob: -2.3487327098846436
    3. 'a' → logprob: -2.4737327098846436
    4. 'r' → logprob: -4.723732948303223
    5. 's' → logprob: -5.473732948303223
    6. ' '' → logprob: -6.473732948303223
    7. ' apparaît' → logprob: -6.598732948303223
    8. 'e' → logprob: -7.348732948303223
    9. '_' → logprob: -7.598732948303223
    10. ' r' → logprob: -7.723732948303223

Token 100: ' dans' (ID: 2671)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.134685754776001
    2. 'r' → logprob: -1.259685754776001
    3. ' dans' → logprob: -1.634685754776001
    4. ' ' → logprob: -2.634685754776001
    5. 'n' → logprob: -3.259685754776001
    6. ' num' → logprob: -3.384685754776001
    7. 'R' → logprob: -4.259685516357422
    8. 'dans' → logprob: -4.384685516357422
    9. '.' → logprob: -4.759685516357422
    10. 's' → logprob: -5.259685516357422

Token 101: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16112342476844788
    2. 's' → logprob: -1.9111233949661255
    3. ' la' → logprob: -7.286123275756836
    4. 'la' → logprob: -8.786123275756836
    5. ' ' → logprob: -10.036123275756836
    6. 'l' → logprob: -12.536123275756836
    7. ' ' → logprob: -12.786123275756836
    8. ' le' → logprob: -12.911123275756836
    9. ' the' → logprob: -13.036123275756836
    10. 'le' → logprob: -13.661123275756836

Token 102: ' chaîne' (ID: 89288)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7336990833282471
    2. 's' → logprob: -1.233699083328247
    3. ' ' → logprob: -1.483699083328247
    4. ' chaîne' → logprob: -6.858698844909668
    5. ' string' → logprob: -8.858698844909668
    6. 'chaine' → logprob: -8.983698844909668
    7. ' chaine' → logprob: -9.108698844909668
    8. 'string' → logprob: -9.733698844909668
    9. '  ' → logprob: -9.733698844909668
    10. 'a' → logprob: -9.983698844909668

Token 103: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5044628381729126
    2. 'r' → logprob: -1.5044628381729126
    3. 's' → logprob: -2.379462718963623
    4. 'R' → logprob: -3.129462718963623
    5. 'num' → logprob: -4.754462718963623
    6. 'n' → logprob: -4.879462718963623
    7. '.' → logprob: -5.254462718963623
    8. '_' → logprob: -5.879462718963623
    9. ' num' → logprob: -6.004462718963623
    10. ''' → logprob: -6.254462718963623

Token 104: '.
' (ID: 558)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.22505687177181244
    2. '
' → logprob: -1.7250568866729736
    3. 'n' → logprob: -4.2250566482543945
    4. ' num' → logprob: -5.4750566482543945
    5. '\n' → logprob: -5.6000566482543945
    6. ' 
' → logprob: -7.7250566482543945
    7. '  
' → logprob: -8.850056648254395
    8. '' → logprob: -10.100056648254395
    9. ',num' → logprob: -10.100056648254395
    10. '
' → logprob: -10.350056648254395

Token 105: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.006486572790890932
    2. 'n' → logprob: -5.631486415863037
    3. '
' → logprob: -5.881486415863037
    4. ' num' → logprob: -10.256486892700195
    5. ' 
' → logprob: -10.631486892700195
    6. '  
' → logprob: -11.506486892700195
    7. 'r' → logprob: -11.756486892700195
    8. 'R' → logprob: -12.506486892700195
    9. '```' → logprob: -12.756486892700195
    10. ' ' → logprob: -13.256486892700195

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008620485663414001
    2. '=' → logprob: -4.758620262145996
    3. ' ' → logprob: -12.383620262145996
    4. ' +=' → logprob: -13.758620262145996
    5. ' ' → logprob: -14.508620262145996
    6. '=num' → logprob: -16.883621215820312
    7. ' =
' → logprob: -17.133621215820312
    8. 's' → logprob: -17.633621215820312
    9. '=int' → logprob: -17.758621215820312
    10. '  ' → logprob: -17.758621215820312

Token 107: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759844779968262
    2. ' ' → logprob: -0.8259844779968262
    3. ' s' → logprob: -10.325984954833984
    4. 's' → logprob: -11.325984954833984
    5. ' ' → logprob: -15.075984954833984
    6. '۰' → logprob: -19.263484954833984
    7. '=' → logprob: -19.575984954833984
    8. '1' → logprob: -19.638484954833984
    9. '`' → logprob: -20.013484954833984
    10. '  ' → logprob: -20.263484954833984

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. 's' → logprob: -15.375066757202148
    4. ' s' → logprob: -19.37506675720215
    5. '۰' → logprob: -19.37506675720215
    6. ' ' → logprob: -19.62506675720215
    7. '０' → logprob: -20.25006675720215
    8. '```' → logprob: -20.87506675720215
    9. '`' → logprob: -21.00006675720215
    10. '=' → logprob: -21.25006675720215

Token 109: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08758783340454102
    2. 'for' → logprob: -2.712587833404541
    3. ' for' → logprob: -4.212587833404541
    4. ' 
' → logprob: -6.962587833404541
    5. '\n' → logprob: -7.587587833404541
    6. '' → logprob: -7.712587833404541
    7. '<|end|>' → logprob: -7.837587833404541
    8. '

' → logprob: -9.337587356567383
    9. ' ' → logprob: -9.337587356567383
    10. '  
' → logprob: -9.837587356567383

Token 110: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43454086780548096
    2. '
' → logprob: -1.059540867805481
    3. ' for' → logprob: -5.559540748596191
    4. '' → logprob: -7.059540748596191
    5. 'f' → logprob: -8.559540748596191
    6. ' 
' → logprob: -8.559540748596191
    7. '\n' → logprob: -8.684540748596191
    8. '<|end|>' → logprob: -8.809540748596191
    9. 'i' → logprob: -9.184540748596191
    10. '

' → logprob: -9.309540748596191

Token 111: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.047109950333833694
    2. ' for' → logprob: -3.172109842300415
    3. 'f' → logprob: -5.672110080718994
    4. ' ' → logprob: -7.547110080718994
    5. 'i' → logprob: -10.047109603881836
    6. 'r' → logprob: -10.547109603881836
    7. 'F' → logprob: -11.047109603881836
    8. 's' → logprob: -11.297109603881836
    9. ' f' → logprob: -11.422109603881836
    10. 'fo' → logprob: -12.547109603881836

Token 112: ' boucle' (ID: 174211)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9561057686805725
    2. ' for' → logprob: -1.0811057090759277
    3. 'for' → logprob: -1.3311057090759277
    4. 'r' → logprob: -4.956105709075928
    5. 'or' → logprob: -6.831105709075928
    6. 's' → logprob: -6.831105709075928
    7. ' f' → logprob: -7.456105709075928
    8. 'f' → logprob: -7.831105709075928
    9. 'e' → logprob: -8.081106185913086
    10. 'i' → logprob: -8.456106185913086

Token 113: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12729354202747345
    2. 'for' → logprob: -2.377293586730957
    3. ' ' → logprob: -3.627293586730957
    4. ' i' → logprob: -9.752293586730957
    5. ' ' → logprob: -10.877293586730957
    6. 'i' → logprob: -11.377293586730957
    7. ' f' → logprob: -11.502293586730957
    8. 'f' → logprob: -12.252293586730957
    9. ' ﻿' → logprob: -12.252293586730957
    10. 's' → logprob: -12.377293586730957

Token 114: ' va' (ID: 3423)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0050977300852537155
    2. ' ' → logprob: -6.00509786605835
    3. 'i' → logprob: -6.38009786605835
    4. ' ' → logprob: -7.75509786605835
    5. ' c' → logprob: -8.255097389221191
    6. ' _' → logprob: -9.130097389221191
    7. ' s' → logprob: -9.755097389221191
    8. 'c' → logprob: -11.505097389221191
    9. '_' → logprob: -11.505097389221191
    10. 's' → logprob: -11.630097389221191

Token 115: ' parcour' (ID: 130642)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0046451459638774395
    2. 'i' → logprob: -5.754645347595215
    3. ' c' → logprob: -7.004645347595215
    4. ' ' → logprob: -8.004645347595215
    5. ' _' → logprob: -9.629645347595215
    6. ' range' → logprob: -10.504645347595215
    7. ' s' → logprob: -10.504645347595215
    8. 'c' → logprob: -10.754645347595215
    9. ' parcour' → logprob: -10.879645347595215
    10. ' caract' → logprob: -11.379645347595215

Token 116: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0004521222144830972
    2. 'r' → logprob: -7.750452041625977
    3. 'i' → logprob: -11.250452041625977
    4. 'ire' → logprob: -12.875452041625977
    5. 're' → logprob: -13.625452041625977
    6. ' ir' → logprob: -13.625452041625977
    7. 'rir' → logprob: -14.375452041625977
    8. 'er' → logprob: -14.375452041625977
    9. 'e' → logprob: -14.750452041625977
    10. 'oir' → logprob: -15.125452041625977

Token 117: ' chaque' (ID: 21194)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.48003023862838745
    2. ' range' → logprob: -1.2300302982330322
    3. ' ' → logprob: -3.1050302982330322
    4. 's' → logprob: -4.230030059814453
    5. ' i' → logprob: -4.355030059814453
    6. 'range' → logprob: -4.480030059814453
    7. '_' → logprob: -6.230030059814453
    8. ' _' → logprob: -6.230030059814453
    9. ' la' → logprob: -7.855030059814453
    10. 'i' → logprob: -8.355030059814453

Token 118: ' index' (ID: 3472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02982177585363388
    2. ' caract' → logprob: -4.529821872711182
    3. ' caractère' → logprob: -4.779821872711182
    4. ' c' → logprob: -4.904821872711182
    5. 'c' → logprob: -6.779821872711182
    6. 'car' → logprob: -7.279821872711182
    7. ' i' → logprob: -8.154821395874023
    8. ' caractères' → logprob: -8.779821395874023
    9. ' car' → logprob: -8.904821395874023
    10. 's' → logprob: -9.279821395874023

Token 119: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9950428009033203
    2. ' i' → logprob: -1.3700428009033203
    3. ' in' → logprob: -1.4950428009033203
    4. ' range' → logprob: -2.3700428009033203
    5. 'range' → logprob: -3.9950428009033203
    6. ' de' → logprob: -4.12004280090332
    7. 's' → logprob: -4.62004280090332
    8. ' dans' → logprob: -5.24504280090332
    9. '(range' → logprob: -6.62004280090332
    10. 'in' → logprob: -6.74504280090332

Token 120: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5232458710670471
    2. ' i' → logprob: -0.8982458710670471
    3. ' ' → logprob: -9.148245811462402
    4. 's' → logprob: -12.898245811462402
    5. '	i' → logprob: -13.023245811462402
    6. 'e' → logprob: -13.148245811462402
    7. 'range' → logprob: -13.523245811462402
    8. ' range' → logprob: -13.648245811462402
    9. ')' → logprob: -13.898245811462402
    10. 'I' → logprob: -14.148245811462402

Token 121: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08254670351743698
    2. 'in' → logprob: -3.2075467109680176
    3. ' ' → logprob: -3.3325467109680176
    4. ' de' → logprob: -7.332546710968018
    5. ' dans' → logprob: -7.332546710968018
    6. ' en' → logprob: -7.582546710968018
    7. ' range' → logprob: -7.957546710968018
    8. ',' → logprob: -8.20754623413086
    9. ' i' → logprob: -8.45754623413086
    10. 'range' → logprob: -9.08254623413086

Token 122: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6177240610122681
    2. ' ' → logprob: -0.8677240610122681
    3. 'in' → logprob: -3.8677239418029785
    4. ' de' → logprob: -4.2427239418029785
    5. ' i' → logprob: -6.6177239418029785
    6. ',' → logprob: -7.1177239418029785
    7. ' dans' → logprob: -7.1177239418029785
    8. ' :' → logprob: -7.6177239418029785
    9. ' ,' → logprob: -7.8677239418029785
    10. ' en' → logprob: -8.242724418640137

Token 123: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0032039734069257975
    2. 'range' → logprob: -5.753203868865967
    3. ' la' → logprob: -11.003204345703125
    4. ' s' → logprob: -12.878204345703125
    5. ' xrange' → logprob: -13.003204345703125
    6. '	range' → logprob: -13.503204345703125
    7. 's' → logprob: -13.753204345703125
    8. '(range' → logprob: -14.128204345703125
    9. ' ' → logprob: -14.878204345703125
    10. ' ' → logprob: -14.878204345703125

Token 124: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05495179072022438
    2. ' range' → logprob: -2.9299519062042236
    3. 's' → logprob: -10.054951667785645
    4. 'rang' → logprob: -11.554951667785645
    5. 'la' → logprob: -12.179951667785645
    6. ' la' → logprob: -12.179951667785645
    7. ' s' → logprob: -13.179951667785645
    8. '	range' → logprob: -13.429951667785645
    9. '(range' → logprob: -13.929951667785645
    10. 'ra' → logprob: -14.179951667785645

Token 125: ' jusqu' (ID: 21961)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8335677981376648
    2. ' ' → logprob: -0.9585677981376648
    3. ',' → logprob: -2.4585678577423096
    4. ' jusqu' → logprob: -2.7085678577423096
    5. ' ,' → logprob: -4.7085676193237305
    6. ' in' → logprob: -5.2085676193237305
    7. ' to' → logprob: -5.5835676193237305
    8. ' jusque' → logprob: -6.2085676193237305
    9. 'à' → logprob: -6.4585676193237305
    10. 'range' → logprob: -6.4585676193237305

Token 126: ''à' (ID: 33688)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.015245371498167515
    2. ' a' → logprob: -5.14024543762207
    3. 'à' → logprob: -6.14024543762207
    4. ''à' → logprob: -6.14024543762207
    5. ' N' → logprob: -6.26524543762207
    6. '’à' → logprob: -6.64024543762207
    7. ' ' → logprob: -7.01524543762207
    8. 'N' → logprob: -8.64024543762207
    9. ' to' → logprob: -8.89024543762207
    10. ' jusqu' → logprob: -9.14024543762207

Token 127: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.06197575107216835
    2. 'N' → logprob: -2.8119757175445557
    3. ' len' → logprob: -12.561975479125977
    4. ' ' → logprob: -12.936975479125977
    5. ' ' → logprob: -14.436975479125977
    6. ' range' → logprob: -14.561975479125977
    7. 'n' → logprob: -14.686975479125977
    8. '	N' → logprob: -15.186975479125977
    9. ' n' → logprob: -15.311975479125977
    10. 'len' → logprob: -15.686975479125977

Token 128: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03986085206270218
    2. ' :' → logprob: -3.289860963821411
    3. ':
' → logprob: -7.289860725402832
    4. '+' → logprob: -7.414860725402832
    5. ' :
' → logprob: -8.914860725402832
    6. '):' → logprob: -9.164860725402832
    7. '+:' → logprob: -9.414860725402832
    8. ' ' → logprob: -10.289860725402832
    9. ',' → logprob: -10.289860725402832
    10. '-' → logprob: -10.539860725402832

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.637786231702194e-05
    2. ' ' → logprob: -9.375086784362793
    3. '-' → logprob: -13.750086784362793
    4. ' -' → logprob: -16.375085830688477
    5. '```' → logprob: -16.375085830688477
    6. '2' → logprob: -16.625085830688477
    7. '.' → logprob: -17.375085830688477
    8. ',' → logprob: -17.375085830688477
    9. ' ' → logprob: -17.812585830688477
    10. ')' → logprob: -17.812585830688477

Token 130: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0315350741147995
    2. ' :' → logprob: -3.9065351486206055
    3. ':
' → logprob: -5.2815351486206055
    4. ' for' → logprob: -6.2815351486206055
    5. ' :
' → logprob: -6.5315351486206055
    6. 'for' → logprob: -6.6565351486206055
    7. ',' → logprob: -7.2815351486206055
    8. '.' → logprob: -8.281535148620605
    9. ' ' → logprob: -8.906535148620605
    10. '
' → logprob: -10.031535148620605

Token 131: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19490468502044678
    2. '):' → logprob: -1.9449046850204468
    3. ' )' → logprob: -4.194904804229736
    4. ':' → logprob: -4.694904804229736
    5. ' ):' → logprob: -4.694904804229736
    6. ' :' → logprob: -7.819904804229736
    7. '):
' → logprob: -8.444904327392578
    8. ',' → logprob: -10.319904327392578
    9. ' ' → logprob: -10.444904327392578
    10. ' ):
' → logprob: -10.694904327392578

Token 132: ' range' (ID: 3352)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.07916076481342316
    2. ' range' → logprob: -2.954160690307617
    3. 'range' → logprob: -4.454160690307617
    4. 'N' → logprob: -4.579160690307617
    5. ' )' → logprob: -6.954160690307617
    6. ' ' → logprob: -7.204160690307617
    7. ' ' → logprob: -8.829160690307617
    8. ')' → logprob: -9.204160690307617
    9. ' len' → logprob: -9.579160690307617
    10. 'Range' → logprob: -11.704160690307617

Token 133: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06198124215006828
    2. '(' → logprob: -2.811981201171875
    3. '(
' → logprob: -11.686981201171875
    4. '(n' → logprob: -13.061981201171875
    5. ')' → logprob: -13.186981201171875
    6. '(len' → logprob: -14.811981201171875
    7. '(

' → logprob: -15.561981201171875
    8. '(i' → logprob: -16.436981201171875
    9. ' (' → logprob: -16.686981201171875
    10. '(I' → logprob: -16.936981201171875

Token 134: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34935078024864197
    2. ')' → logprob: -1.2243508100509644
    3. ':' → logprob: -7.849350929260254
    4. ' ):' → logprob: -8.474350929260254
    5. ')):' → logprob: -8.724350929260254
    6. '):
' → logprob: -9.724350929260254
    7. '))' → logprob: -10.224350929260254
    8. ' )' → logprob: -10.474350929260254
    9. '():' → logprob: -12.974350929260254
    10. '+' → logprob: -12.974350929260254

Token 135: ' gén' (ID: 15330)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17045849561691284
    2. ')' → logprob: -2.0454585552215576
    3. ':' → logprob: -3.9204585552215576
    4. ' ):' → logprob: -5.0454583168029785
    5. ' )' → logprob: -7.0454583168029785
    6. ' :' → logprob: -8.670458793640137
    7. '):
' → logprob: -9.920458793640137
    8. ').' → logprob: -11.170458793640137
    9. ':)' → logprob: -11.670458793640137
    10. ',' → logprob: -12.670458793640137

Token 136: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.05904526636004448
    2. 'er' → logprob: -3.0590453147888184
    3. 'range' → logprob: -5.059045314788818
    4. ')' → logprob: -6.059045314788818
    5. 'èr' → logprob: -7.434045314788818
    6. 'érer' → logprob: -7.809045314788818
    7. 'ere' → logprob: -8.30904483795166
    8. '```' → logprob: -9.80904483795166
    9. 'r' → logprob: -9.93404483795166
    10. 're' → logprob: -10.05904483795166

Token 137: ' les' (ID: 1341)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8288664221763611
    2. '(N' → logprob: -1.3288664817810059
    3. 'N' → logprob: -1.8288664817810059
    4. '(' → logprob: -2.328866481781006
    5. ' N' → logprob: -3.328866481781006
    6. ' )' → logprob: -5.703866481781006
    7. '()' → logprob: -7.578866481781006
    8. 'range' → logprob: -8.578866004943848
    9. '<|end|>' → logprob: -9.328866004943848
    10. '(n' → logprob: -9.578866004943848

Token 138: ' ent' (ID: 1121)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -1.0135526657104492
    2. ' nombres' → logprob: -1.2635526657104492
    3. ' N' → logprob: -1.7635526657104492
    4. 'N' → logprob: -2.763552665710449
    5. 'indices' → logprob: -2.888552665710449
    6. ' valeurs' → logprob: -3.138552665710449
    7. ' ent' → logprob: -4.888552665710449
    8. ' numbers' → logprob: -5.388552665710449
    9. 'ent' → logprob: -5.888552665710449
    10. ' values' → logprob: -6.388552665710449

Token 139: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.08477946370840073
    2. 'ières' → logprob: -2.5847795009613037
    3. 'i' → logprob: -6.084779262542725
    4. 'ière' → logprob: -6.959779262542725
    5. 'ier' → logprob: -7.084779262542725
    6. 'ires' → logprob: -7.209779262542725
    7. 'er' → logprob: -7.834779262542725
    8. 'range' → logprob: -8.334779739379883
    9. 'ités' → logprob: -9.709779739379883
    10. '```' → logprob: -9.709779739379883

Token 140: ' de' (ID: 334)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.7672576308250427
    2. ' )' → logprob: -1.1422576904296875
    3. ')' → logprob: -2.7672576904296875
    4. ' ' → logprob: -2.8922576904296875
    5. ' N' → logprob: -3.2672576904296875
    6. ' de' → logprob: -4.2672576904296875
    7. ' up' → logprob: -4.8922576904296875
    8. ' ):' → logprob: -5.0172576904296875
    9. ' allant' → logprob: -5.3922576904296875
    10. ' entre' → logprob: -5.7672576904296875

Token 141: ' ' (ID: 220)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6445480585098267
    2. 'N' → logprob: -0.8945480585098267
    3. '0' → logprob: -2.894547939300537
    4. ' ' → logprob: -4.519547939300537
    5. '1' → logprob: -10.269548416137695
    6. ' range' → logprob: -11.269548416137695
    7. '```' → logprob: -11.269548416137695
    8. ')' → logprob: -12.019548416137695
    9. 'n' → logprob: -12.269548416137695
    10. 'range' → logprob: -12.394548416137695

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014239664189517498
    2. 'N' → logprob: -4.26423978805542
    3. ' ' → logprob: -9.639239311218262
    4. ' N' → logprob: -11.514239311218262
    5. '```' → logprob: -14.264239311218262
    6. '1' → logprob: -15.264239311218262
    7. ')' → logprob: -16.514240264892578
    8. 'range' → logprob: -17.139240264892578
    9. 'n' → logprob: -17.264240264892578
    10. '`' → logprob: -18.264240264892578

Token 143: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.15172360837459564
    2. 'à' → logprob: -2.026723623275757
    3. ' jusqu' → logprob: -5.651723384857178
    4. ',' → logprob: -6.151723384857178
    5. ')' → logprob: -6.401723384857178
    6. ' a' → logprob: -8.151723861694336
    7. ' ' → logprob: -8.276723861694336
    8. ' ,' → logprob: -8.401723861694336
    9. ' )' → logprob: -8.901723861694336
    10. '```' → logprob: -8.901723861694336

Token 144: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.57595294713974
    2. ' N' → logprob: -0.82595294713974
    3. ' ' → logprob: -11.450952529907227
    4. '```' → logprob: -13.950952529907227
    5. ')' → logprob: -14.325952529907227
    6. '	N' → logprob: -15.450952529907227
    7. ',N' → logprob: -15.575952529907227
    8. ' ' → logprob: -15.700952529907227
    9. ' )' → logprob: -15.700952529907227
    10. 'n' → logprob: -15.700952529907227

Token 145: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7658739686012268
    2. '):' → logprob: -0.7658739686012268
    3. ')' → logprob: -2.765873908996582
    4. ' -' → logprob: -5.265873908996582
    5. ' ):' → logprob: -6.890873908996582
    6. '):
' → logprob: -7.140873908996582
    7. ' )' → logprob: -8.765873908996582
    8. ' ' → logprob: -10.765873908996582
    9. ':' → logprob: -11.140873908996582
    10. '):

' → logprob: -11.390873908996582

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020314358174800873
    2. '-' → logprob: -4.0203142166137695
    3. ' ' → logprob: -6.3953142166137695
    4. ')' → logprob: -8.02031421661377
    5. ' -' → logprob: -9.39531421661377
    6. '```' → logprob: -9.52031421661377
    7. 'N' → logprob: -13.52031421661377
    8. ' )' → logprob: -13.64531421661377
    9. '),' → logprob: -13.89531421661377
    10. 'moins' → logprob: -14.39531421661377

Token 147: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5799505710601807
    2. ')' → logprob: -0.8299505710601807
    3. '):
' → logprob: -5.704950332641602
    4. ' ):' → logprob: -7.954950332641602
    5. ' )' → logprob: -8.579950332641602
    6. ':' → logprob: -9.579950332641602
    7. ')
' → logprob: -10.079950332641602
    8. ').' → logprob: -11.829950332641602
    9. ' ):
' → logprob: -11.829950332641602
    10. '):
' → logprob: -12.704950332641602

Token 148: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14606285095214844
    2. '
' → logprob: -2.5210628509521484
    3. ' for' → logprob: -3.0210628509521484
    4. ' 
' → logprob: -5.271062850952148
    5. ':' → logprob: -7.396062850952148
    6. '  
' → logprob: -7.521062850952148
    7. ':
' → logprob: -8.771062850952148
    8. '```' → logprob: -9.271062850952148
    9. '' → logprob: -9.771062850952148
    10. 'f' → logprob: -10.396062850952148

Token 149: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.030783312395215034
    2. ' ' → logprob: -3.5307834148406982
    3. 'i' → logprob: -6.905783176422119
    4. '  ' → logprob: -10.780783653259277
    5. ' ' → logprob: -12.030783653259277
    6. ' ‌' → logprob: -14.030783653259277
    7. '```' → logprob: -14.405783653259277
    8. ' N' → logprob: -14.780783653259277
    9. ' _' → logprob: -14.905783653259277
    10. '	i' → logprob: -15.030783653259277

Token 150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023263299837708473
    2. 'in' → logprob: -3.7732632160186768
    3. ' ' → logprob: -11.148262977600098
    4. '	in' → logprob: -14.523262977600098
    5. 'import' → logprob: -14.648262977600098
    6. ' i' → logprob: -14.648262977600098
    7. '  ' → logprob: -15.148262977600098
    8. 'In' → logprob: -15.148262977600098
    9. ')' → logprob: -15.398262977600098
    10. 'range' → logprob: -15.523262977600098

Token 151: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0380479171872139
    2. 'range' → logprob: -3.288048028945923
    3. '(range' → logprob: -12.413047790527344
    4. ' ' → logprob: -13.288047790527344
    5. '	range' → logprob: -15.163047790527344
    6. ' ' → logprob: -16.538047790527344
    7. ' xrange' → logprob: -16.788047790527344
    8. '(' → logprob: -16.913047790527344
    9. 'Range' → logprob: -17.538047790527344
    10. '```' → logprob: -17.538047790527344

Token 152: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931615471839905
    2. '(N' → logprob: -0.6931615471839905
    3. '(
' → logprob: -11.318161964416504
    4. ' (' → logprob: -13.943161964416504
    5. '(NUM' → logprob: -14.568161964416504
    6. '(n' → logprob: -14.943161964416504
    7. '((' → logprob: -15.943161964416504
    8. '(

' → logprob: -16.443161010742188
    9. '(len' → logprob: -16.568161010742188
    10. '(i' → logprob: -17.068161010742188

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003396343090571463
    2. ')' → logprob: -8.25033950805664
    3. ':' → logprob: -10.00033950805664
    4. ' ):' → logprob: -10.50033950805664
    5. '):
' → logprob: -12.37533950805664
    6. '+' → logprob: -14.50033950805664
    7. '():' → logprob: -15.25033950805664
    8. ' :' → logprob: -16.62533950805664
    9. '   ' → logprob: -17.50033950805664
    10. '):
' → logprob: -17.50033950805664

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10597813874483109
    2. ':' → logprob: -3.10597825050354
    3. ' ' → logprob: -3.73097825050354
    4. ' :' → logprob: -4.230978012084961
    5. ' 
' → logprob: -4.980978012084961
    6. ' if' → logprob: -5.605978012084961
    7. ' :
' → logprob: -6.230978012084961
    8. '    
' → logprob: -6.355978012084961
    9. ':
' → logprob: -7.105978012084961
    10. '   
' → logprob: -7.480978012084961

Token 155: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35510510206222534
    2. '   ' → logprob: -1.7301051616668701
    3. 'if' → logprob: -2.23010516166687
    4. ' ' → logprob: -4.355104923248291
    5. '    ' → logprob: -7.855104923248291
    6. ' 
' → logprob: -7.855104923248291
    7. '  ' → logprob: -8.85510540008545
    8. '    
' → logprob: -9.23010540008545
    9. 'i' → logprob: -9.85510540008545
    10. 's' → logprob: -10.48010540008545

Token 156: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14282232522964478
    2. ' if' → logprob: -2.017822265625
    3. '   ' → logprob: -9.142822265625
    4. ' ' → logprob: -10.517822265625
    5. 's' → logprob: -12.892822265625
    6. 'i' → logprob: -13.267822265625
    7. '  ' → logprob: -13.392822265625
    8. ' ' → logprob: -13.517822265625
    9. '	if' → logprob: -13.642822265625
    10. '    ' → logprob: -13.767822265625

Token 157: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.007264189887791872
    2. 'if' → logprob: -5.132264137268066
    3. 'ifier' → logprob: -7.007264137268066
    4. 'ify' → logprob: -8.257264137268066
    5. 'ifiez' → logprob: -9.632264137268066
    6. ' if' → logprob: -10.007264137268066
    7. '   ' → logprob: -10.632264137268066
    8. 'ifi' → logprob: -11.007264137268066
    9. 'i' → logprob: -11.507264137268066
    10. 'ifies' → logprob: -12.507264137268066

Token 158: ' si' (ID: 1784)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.22476814687252045
    2. ' if' → logprob: -2.0997681617736816
    3. ' ' → logprob: -2.7247681617736816
    4. 's' → logprob: -4.349768161773682
    5. 'if' → logprob: -8.974767684936523
    6. ' si' → logprob: -9.974767684936523
    7. ' i' → logprob: -10.224767684936523
    8. ' ' → logprob: -10.224767684936523
    9. '  ' → logprob: -10.599767684936523
    10. '   ' → logprob: -11.349767684936523

Token 159: ' le' (ID: 505)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0011773703154176474
    2. 's' → logprob: -6.7511773109436035
    3. ' ' → logprob: -12.251177787780762
    4. ' ' → logprob: -13.126177787780762
    5. '	s' → logprob: -14.751177787780762
    6. ' ' → logprob: -17.251176834106445
    7. '(s' → logprob: -17.626176834106445
    8. '<|end|>' → logprob: -18.563676834106445
    9. ' ‌' → logprob: -18.876176834106445
    10. '```' → logprob: -19.313676834106445

Token 160: ' caractère' (ID: 80509)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1269339919090271
    2. 's' → logprob: -2.126934051513672
    3. ' ' → logprob: -13.001934051513672
    4. ' ' → logprob: -13.001934051513672
    5. '	s' → logprob: -13.751934051513672
    6. '   ' → logprob: -16.501934051513672
    7. '(s' → logprob: -16.501934051513672
    8. '_s' → logprob: -17.126934051513672
    9. 'i' → logprob: -17.501934051513672
    10. ' caract' → logprob: -17.751934051513672

Token 161: ' à' (ID: 1221)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03084307536482811
    2. 's' → logprob: -3.6558430194854736
    3. ' ' → logprob: -5.405843257904053
    4. ' ' → logprob: -10.905842781066895
    5. '	s' → logprob: -11.655842781066895
    6. '(s' → logprob: -12.530842781066895
    7. '  ' → logprob: -13.155842781066895
    8. ' '' → logprob: -13.280842781066895
    9. '   ' → logprob: -13.405842781066895
    10. '[' → logprob: -13.530842781066895

Token 162: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.023518923670053482
    2. 's' → logprob: -3.7735190391540527
    3. ' i' → logprob: -8.773518562316895
    4. 'i' → logprob: -9.523518562316895
    5. ' ' → logprob: -10.148518562316895
    6. ' ' → logprob: -12.773518562316895
    7. '	s' → logprob: -13.773518562316895
    8. '   ' → logprob: -14.523518562316895
    9. ' position' → logprob: -14.648518562316895
    10. ' la' → logprob: -15.523518562316895

Token 163: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13370060920715332
    2. ' i' → logprob: -3.1337006092071533
    3. 'position' → logprob: -3.2587006092071533
    4. ' position' → logprob: -3.6337006092071533
    5. 's' → logprob: -4.258700370788574
    6. ' s' → logprob: -7.008700370788574
    7. 'indice' → logprob: -7.133700370788574
    8. 'index' → logprob: -7.633700370788574
    9. ' ' → logprob: -9.383700370788574
    10. '[i' → logprob: -9.508700370788574

Token 164: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10089531540870667
    2. 'i' → logprob: -2.350895404815674
    3. ' s' → logprob: -7.475895404815674
    4. 's' → logprob: -9.600894927978516
    5. ' ' → logprob: -10.475894927978516
    6. '[i' → logprob: -11.475894927978516
    7. ' ' → logprob: -11.600894927978516
    8. '	i' → logprob: -12.350894927978516
    9. '  ' → logprob: -15.100894927978516
    10. ' `' → logprob: -15.225894927978516

Token 165: ' dans' (ID: 2671)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3919616639614105
    2. 's' → logprob: -2.0169615745544434
    3. ' dans' → logprob: -2.2669615745544434
    4. ' est' → logprob: -3.5169615745544434
    5. ' ' → logprob: -3.8919615745544434
    6. ' ==' → logprob: -4.516961574554443
    7. ' de' → logprob: -4.516961574554443
    8. 'dans' → logprob: -4.641961574554443
    9. '   ' → logprob: -6.641961574554443
    10. ' in' → logprob: -6.641961574554443

Token 166: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.029750952497124672
    2. 's' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.15475082397461
    4. ' ' → logprob: -16.02975082397461
    5. '	s' → logprob: -16.77975082397461
    6. '_s' → logprob: -17.77975082397461
    7. '(s' → logprob: -18.52975082397461
    8. ' la' → logprob: -19.02975082397461
    9. '<|end|>' → logprob: -19.40475082397461
    10. ' ' → logprob: -19.90475082397461

Token 167: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20172283053398132
    2. ' s' → logprob: -1.7017228603363037
    3. 'chaine' → logprob: -8.951723098754883
    4. ' chaîne' → logprob: -9.451723098754883
    5. 'string' → logprob: -9.576723098754883
    6. ' string' → logprob: -11.076723098754883
    7. ' chaine' → logprob: -11.451723098754883
    8. 'str' → logprob: -13.576723098754883
    9. ' ' → logprob: -13.826723098754883
    10. ' ' → logprob: -15.201723098754883

Token 168: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.026316089555621147
    2. 's' → logprob: -3.6513161659240723
    3. ' ' → logprob: -12.651315689086914
    4. ' ' → logprob: -12.776315689086914
    5. ' `' → logprob: -13.151315689086914
    6. ' est' → logprob: -13.401315689086914
    7. ' '' → logprob: -13.651315689086914
    8. '(s' → logprob: -13.651315689086914
    9. ' is' → logprob: -13.776315689086914
    10. '   ' → logprob: -14.401315689086914

Token 169: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3232446014881134
    2. '[' → logprob: -1.948244571685791
    3. '[i' → logprob: -3.198244571685791
    4. 's' → logprob: -3.573244571685791
    5. '==' → logprob: -3.698244571685791
    6. ' s' → logprob: -4.073244571685791
    7. ' est' → logprob: -4.948244571685791
    8. '   ' → logprob: -5.198244571685791
    9. ' is' → logprob: -5.448244571685791
    10. ' ' → logprob: -6.073244571685791

Token 170: ' exactement' (ID: 108701)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4319242835044861
    2. ' égal' → logprob: -1.9319243431091309
    3. ' '' → logprob: -1.9319243431091309
    4. 'R' → logprob: -3.931924343109131
    5. ' equal' → logprob: -4.556924343109131
    6. ' ég' → logprob: -4.556924343109131
    7. '"' → logprob: -5.306924343109131
    8. 'equal' → logprob: -5.681924343109131
    9. ' R' → logprob: -6.181924343109131
    10. '=' → logprob: -6.306924343109131

Token 171: ' égal' (ID: 15059)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007466539740562439
    2. ' '' → logprob: -5.0074663162231445
    3. ''S' → logprob: -8.507466316223145
    4. 'R' → logprob: -8.632466316223145
    5. ''T' → logprob: -9.632466316223145
    6. ''A' → logprob: -9.632466316223145
    7. '"' → logprob: -9.882466316223145
    8. ''E' → logprob: -10.007466316223145
    9. ''r' → logprob: -10.507466316223145
    10. ''C' → logprob: -11.132466316223145

Token 172: ' à' (ID: 1221)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2418072670698166
    2. ' '' → logprob: -2.491807222366333
    3. ''à' → logprob: -2.491807222366333
    4. ' à' → logprob: -3.366807222366333
    5. ' ' → logprob: -4.616807460784912
    6. '"' → logprob: -6.491807460784912
    7. ''a' → logprob: -7.366807460784912
    8. ' a' → logprob: -7.491807460784912
    9. 's' → logprob: -7.741807460784912
    10. ''au' → logprob: -7.866807460784912

Token 173: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01903456449508667
    2. ' '' → logprob: -4.019034385681152
    3. 'R' → logprob: -7.519034385681152
    4. '"' → logprob: -8.269034385681152
    5. ' R' → logprob: -10.519034385681152
    6. '`' → logprob: -10.894034385681152
    7. ' ' → logprob: -11.269034385681152
    8. ' ' → logprob: -12.144034385681152
    9. ' "' → logprob: -12.269034385681152
    10. ''A' → logprob: -12.394034385681152

Token 174: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0012538038427010179
    2. ''' → logprob: -6.751253604888916
    3. '"' → logprob: -9.626254081726074
    4. ' R' → logprob: -11.126254081726074
    5. '`' → logprob: -14.251254081726074
    6. 'r' → logprob: -15.126254081726074
    7. '	R' → logprob: -15.376254081726074
    8. '```' → logprob: -15.376254081726074
    9. ''r' → logprob: -15.876254081726074
    10. '.R' → logprob: -16.063753128051758

Token 175: '".
' (ID: 26880)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.16067087650299072
    2. '"' → logprob: -1.9106708765029907
    3. ':' → logprob: -8.91067123413086
    4. ' ":' → logprob: -9.41067123413086
    5. '":
' → logprob: -9.41067123413086
    6. '':' → logprob: -10.16067123413086
    7. ''' → logprob: -10.28567123413086
    8. ' "' → logprob: -11.28567123413086
    9. 'R' → logprob: -11.53567123413086
    10. '   ' → logprob: -11.91067123413086

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007759823463857174
    2. ' ' → logprob: -6.257760047912598
    3. ' 
' → logprob: -6.257760047912598
    4. ' if' → logprob: -6.757760047912598
    5. '    
' → logprob: -7.132760047912598
    6. '  ' → logprob: -7.507760047912598
    7. '   
' → logprob: -7.757760047912598
    8. '    ' → logprob: -8.007760047912598
    9. 'if' → logprob: -8.632760047912598
    10. '  
' → logprob: -8.757760047912598

Token 177: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19678698480129242
    2. ' if' → logprob: -2.196786880493164
    3. 'if' (adapté à ' if') → logprob: -2.696786880493164
    4. '    ' → logprob: -11.446786880493164
    5. '    
' → logprob: -11.571786880493164
    6. '	if' → logprob: -11.821786880493164
    7. ' ' → logprob: -11.821786880493164
    8. '  ' → logprob: -12.196786880493164
    9. '   ' → logprob: -12.321786880493164
    10. '       ' → logprob: -13.196786880493164

Token 178: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0008166544139385223
    2. 's' → logprob: -7.125816822052002
    3. ' ' → logprob: -11.500816345214844
    4. ' ' → logprob: -13.125816345214844
    5. '	s' → logprob: -16.250816345214844
    6. '(s' → logprob: -17.500816345214844
    7. '  ' → logprob: -18.000816345214844
    8. ' '' → logprob: -19.625816345214844
    9. ' ' → logprob: -19.750816345214844
    10. ' "' → logprob: -20.125816345214844

Token 179: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00043555660522542894
    2. '[' → logprob: -7.7504353523254395
    3. ' [' → logprob: -12.250435829162598
    4. '[I' → logprob: -15.875435829162598
    5. '[
' → logprob: -16.87543487548828
    6. '   ' → logprob: -18.00043487548828
    7. ' ==' → logprob: -19.37543487548828
    8. '[R' → logprob: -19.37543487548828
    9. '```' → logprob: -19.37543487548828
    10. '[int' → logprob: -19.62543487548828

Token 180: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4081214666366577
    2. '==' → logprob: -1.1581214666366577
    3. ']' → logprob: -4.033121585845947
    4. '=' → logprob: -6.033121585845947
    5. ']==' → logprob: -7.283121585845947
    6. '"' → logprob: -9.908121109008789
    7. ')' → logprob: -10.033121109008789
    8. ''' → logprob: -10.658121109008789
    9. ' ]' → logprob: -10.658121109008789
    10. '=='' → logprob: -11.033121109008789

Token 181: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31363046169281006
    2. '==' → logprob: -1.31363046169281
    3. '=' → logprob: -7.9386305809021
    4. ' =' → logprob: -12.438630104064941
    5. '=='' → logprob: -13.063630104064941
    6. '=="' → logprob: -13.563630104064941
    7. '[' → logprob: -13.813630104064941
    8. ' ' → logprob: -13.813630104064941
    9. ' ' → logprob: -14.438630104064941
    10. ')' → logprob: -14.563630104064941

Token 182: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.527271568775177
    2. '"' → logprob: -0.902271568775177
    3. ' '' → logprob: -6.402271747589111
    4. ' "' → logprob: -6.527271747589111
    5. 'R' → logprob: -7.402271747589111
    6. ' R' → logprob: -8.402271270751953
    7. ' ' → logprob: -8.652271270751953
    8. ' ' → logprob: -12.777271270751953
    9. '`' → logprob: -12.902271270751953
    10. ')' → logprob: -14.402271270751953

Token 183: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -2.1008713702030946e-06
    2. '"' → logprob: -13.625001907348633
    3. ' R' → logprob: -14.125001907348633
    4. ''' → logprob: -16.250001907348633
    5. '	R' → logprob: -18.375001907348633
    6. 'r' → logprob: -18.375001907348633
    7. 'Ｒ' → logprob: -18.500001907348633
    8. '```' → logprob: -18.750001907348633
    9. ')' → logprob: -19.125001907348633
    10. '"""' → logprob: -19.125001907348633

Token 184: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.07893242686986923
    2. '"' → logprob: -2.578932523727417
    3. '":
' → logprob: -10.203932762145996
    4. ' ":' → logprob: -13.453932762145996
    5. ' "' → logprob: -13.828932762145996
    6. ':' → logprob: -14.328932762145996
    7. '":
' → logprob: -14.453932762145996
    8. ')":' → logprob: -14.703932762145996
    9. '':' → logprob: -14.953932762145996
    10. 'R' → logprob: -14.953932762145996

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029010340571403503
    2. '   ' → logprob: -4.52901029586792
    3. ':
' → logprob: -4.77901029586792
    4. ':' → logprob: -5.52901029586792
    5. '
' → logprob: -5.52901029586792
    6. 'num' → logprob: -8.029010772705078
    7. '\n' → logprob: -8.404010772705078
    8. ' :
' → logprob: -8.654010772705078
    9. '        
' → logprob: -8.904010772705078
    10. '    
' → logprob: -9.279010772705078

Token 186: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2508224844932556
    2. ' num' → logprob: -2.0008225440979004
    3. '       ' → logprob: -2.8758225440979004
    4. '
' → logprob: -3.8758225440979004
    5. '           ' → logprob: -5.1258225440979
    6. '   ' → logprob: -6.2508225440979
    7. ' 
' → logprob: -6.8758225440979
    8. '        
' → logprob: -8.500822067260742
    9. '\n' → logprob: -9.875822067260742
    10. '	num' → logprob: -9.875822067260742

Token 187: ' Si' (ID: 7832)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.20485547184944153
    2. ' num' → logprob: -1.7048554420471191
    3. '   ' → logprob: -5.704855442047119
    4. '       ' → logprob: -9.579855918884277
    5. '	num' → logprob: -11.454855918884277
    6. '           ' → logprob: -11.704855918884277
    7. '    ' → logprob: -12.079855918884277
    8. ' ' → logprob: -12.454855918884277
    9. '
' → logprob: -13.079855918884277
    10. ' ' → logprob: -13.204855918884277

Token 188: ' oui' (ID: 50908)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.10035213083028793
    2. 'num' → logprob: -2.3503520488739014
    3. ' ' → logprob: -8.97535228729248
    4. ' ' → logprob: -11.60035228729248
    5. '	num' → logprob: -11.85035228729248
    6. '   ' → logprob: -13.72535228729248
    7. '_num' → logprob: -15.10035228729248
    8. '    ' → logprob: -15.47535228729248
    9. '(num' → logprob: -15.47535228729248
    10. '  ' → logprob: -15.47535228729248

Token 189: ',' (ID: 11)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5665963888168335
    2. ':' → logprob: -2.066596508026123
    3. ' num' → logprob: -2.066596508026123
    4. '           ' → logprob: -2.066596508026123
    5. ':
' → logprob: -3.566596508026123
    6. '   ' → logprob: -4.941596508026123
    7. '       ' → logprob: -5.441596508026123
    8. ',' → logprob: -5.816596508026123
    9. ',num' → logprob: -5.941596508026123
    10. ':num' → logprob: -5.941596508026123

Token 190: ' on' (ID: 402)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.01840265281498432
    2. 'num' → logprob: -4.018402576446533
    3. ' ' → logprob: -8.393403053283691
    4. '   ' → logprob: -11.518403053283691
    5. '	num' → logprob: -12.393403053283691
    6. '    ' → logprob: -12.518403053283691
    7. ' ' → logprob: -13.018403053283691
    8. '       ' → logprob: -13.018403053283691
    9. '           ' → logprob: -13.393403053283691
    10. '  ' → logprob: -14.018403053283691

Token 191: ' incr' (ID: 52395)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6340009570121765
    2. ' num' → logprob: -0.7590009570121765
    3. '   ' → logprob: -7.509000778198242
    4. '       ' → logprob: -7.634000778198242
    5. ' ' → logprob: -9.509000778198242
    6. '	num' → logprob: -9.634000778198242
    7. '    ' → logprob: -9.634000778198242
    8. ' ' → logprob: -9.759000778198242
    9. '           ' → logprob: -11.134000778198242
    10. '        ' → logprob: -11.634000778198242

Token 192: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5402036905288696
    2. 'emente' → logprob: -1.2902036905288696
    3. 'ement' → logprob: -2.79020357131958
    4. 'ément' → logprob: -3.04020357131958
    5. 'mente' → logprob: -3.91520357131958
    6. 'num' → logprob: -5.79020357131958
    7. 'rement' → logprob: -6.29020357131958
    8. 'em' → logprob: -6.66520357131958
    9. 'ements' → logprob: -6.66520357131958
    10. '   ' → logprob: -6.91520357131958

Token 193: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.006721417419612408
    2. 'ment' → logprob: -5.631721496582031
    3. '#' → logprob: -7.381721496582031
    4. 'm' → logprob: -8.006721496582031
    5. 'me' → logprob: -8.131721496582031
    6. 'mentation' → logprob: -8.256721496582031
    7. 'nte' → logprob: -8.381721496582031
    8. 'mental' → logprob: -8.506721496582031
    9. '\' → logprob: -9.131721496582031
    10. '*' → logprob: -9.381721496582031

Token 194: ' le' (ID: 505)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.25193750858306885
    2. 'num' → logprob: -1.5019375085830688
    3. '	num' → logprob: -11.876937866210938
    4. ' ' → logprob: -14.126937866210938
    5. '(num' → logprob: -15.001937866210938
    6. '=num' → logprob: -16.126937866210938
    7. ' ' → logprob: -16.251937866210938
    8. ',num' → logprob: -16.751937866210938
    9. '   ' → logprob: -17.001937866210938
    10. '<num' → logprob: -17.001937866210938

Token 195: ' compteur' (ID: 163344)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.08899617940187454
    2. ' num' → logprob: -2.463996171951294
    3. ' ' → logprob: -9.963995933532715
    4. '	num' → logprob: -12.588995933532715
    5. '   ' → logprob: -12.963995933532715
    6. ' ' → logprob: -13.963995933532715
    7. 'n' → logprob: -13.963995933532715
    8. 'nu' → logprob: -14.463995933532715
    9. '1' → logprob: -14.588995933532715
    10. '  ' → logprob: -15.463995933532715

Token 196: ' '' (ID: 461)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.3137800991535187
    2. ' num' → logprob: -1.3137800693511963
    3. '	num' → logprob: -8.188779830932617
    4. '   ' → logprob: -9.188779830932617
    5. '       ' → logprob: -9.813779830932617
    6. '           ' → logprob: -10.938779830932617
    7. ' ' → logprob: -11.063779830932617
    8. '(num' → logprob: -11.563779830932617
    9. ' ' → logprob: -11.563779830932617
    10. '=num' → logprob: -11.688779830932617

Token 197: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.018165862187743187
    2. ' num' → logprob: -4.0181660652160645
    3. ' ' → logprob: -11.643165588378906
    4. 'nu' → logprob: -12.893165588378906
    5. '1' → logprob: -13.518165588378906
    6. 'n' → logprob: -13.768165588378906
    7. '	num' → logprob: -14.143165588378906
    8. '   ' → logprob: -14.268165588378906
    9. '  ' → logprob: -15.643165588378906
    10. '_num' → logprob: -15.768165588378906

Token 198: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.373708575963974
    2. '+=' → logprob: -1.2487086057662964
    3. '+' → logprob: -3.748708486557007
    4. '=' → logprob: -7.748708724975586
    5. ' ' → logprob: -7.873708724975586
    6. ' +' → logprob: -8.123708724975586
    7. '   ' → logprob: -9.623708724975586
    8. ')' → logprob: -10.123708724975586
    9. '<|end|>' → logprob: -10.123708724975586
    10. ']+=' → logprob: -10.373708724975586

Token 199: ' de' (ID: 334)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.43688610196113586
    2. ' +=' → logprob: -1.0618860721588135
    3. '+' → logprob: -5.561886310577393
    4. '=' → logprob: -6.811886310577393
    5. '   ' → logprob: -6.811886310577393
    6. 'num' → logprob: -7.061886310577393
    7. '       ' → logprob: -7.936886310577393
    8. '=num' → logprob: -7.936886310577393
    9. '           ' → logprob: -8.686885833740234
    10. ' num' → logprob: -9.061885833740234

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16023093461990356
    2. ' ' → logprob: -1.9102308750152588
    3. '+' → logprob: -12.66023063659668
    4. ' ' → logprob: -12.78523063659668
    5. ' +' → logprob: -14.41023063659668
    6. '   ' → logprob: -16.53523063659668
    7. '```' → logprob: -16.66023063659668
    8. ' +=' → logprob: -17.78523063659668
    9. '  ' → logprob: -17.78523063659668
    10. 's' → logprob: -18.16023063659668

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '+' → logprob: -17.5000057220459
    4. '```' → logprob: -18.3750057220459
    5. '   ' → logprob: -20.1250057220459
    6. ' +' → logprob: -20.8750057220459
    7. '.' → logprob: -21.2500057220459
    8. 'un' → logprob: -21.5000057220459
    9. '１' → logprob: -21.5000057220459
    10. '  ' → logprob: -22.2500057220459

Token 202: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5101523399353027
    2. '   ' → logprob: -1.3851523399353027
    3. '<|end|>' → logprob: -2.5101523399353027
    4. 'num' → logprob: -4.385152339935303
    5. '
' → logprob: -4.385152339935303
    6. ')' → logprob: -4.885152339935303
    7. '+' → logprob: -5.135152339935303
    8. ' ' → logprob: -5.385152339935303
    9. ' num' → logprob: -5.385152339935303
    10. '           ' → logprob: -5.385152339935303

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013503533555194736
    2. 'num' → logprob: -7.251350402832031
    3. ' num' → logprob: -7.501350402832031
    4. '   ' → logprob: -9.626350402832031
    5. '        
' → logprob: -12.751350402832031
    6. '      ' → logprob: -12.751350402832031
    7. '           ' → logprob: -12.751350402832031
    8. '
' → logprob: -13.126350402832031
    9. '        ' → logprob: -13.251350402832031
    10. '	num' → logprob: -13.251350402832031

Token 204: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.2520633339881897
    2. ' num' → logprob: -1.502063274383545
    3. '   ' → logprob: -9.252063751220703
    4. '       ' → logprob: -10.627063751220703
    5. '
' → logprob: -12.502063751220703
    6. '	num' → logprob: -12.502063751220703
    7. '1' → logprob: -12.752063751220703
    8. ' 
' → logprob: -13.502063751220703
    9. '           ' → logprob: -14.752063751220703
    10. '(num' → logprob: -14.877063751220703

Token 205: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4824536442756653
    2. ' +=' → logprob: -0.9824536442756653
    3. '+' → logprob: -4.8574538230896
    4. '=' → logprob: -7.4824538230896
    5. ' =' → logprob: -12.107453346252441
    6. ']+=' → logprob: -13.982453346252441
    7. ' +' → logprob: -14.357453346252441
    8. '+="' → logprob: -14.357453346252441
    9. '+='' → logprob: -14.857453346252441
    10. ' ' → logprob: -15.357453346252441

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -19.504077911376953
    4. ' ' → logprob: -20.504077911376953
    5. '```' → logprob: -20.879077911376953
    6. '  ' → logprob: -21.004077911376953
    7. '１' → logprob: -21.504077911376953
    8. '۱' → logprob: -22.191577911376953
    9. '0' → logprob: -22.629077911376953
    10. '	' → logprob: -22.691577911376953

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -21.0
    4. '   ' → logprob: -21.625
    5. '１' → logprob: -23.875
    6. '  ' → logprob: -24.0
    7. '۱' → logprob: -24.875
    8. '
' → logprob: -25.25
    9. '0' → logprob: -25.5
    10. '' → logprob: -25.75

Token 208: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018357478082180023
    2. '
' → logprob: -4.018357276916504
    3. '#' → logprob: -8.768357276916504
    4. '

' → logprob: -10.393357276916504
    5. '  
' → logprob: -12.143357276916504
    6. ' print' → logprob: -12.143357276916504
    7. '#print' → logprob: -12.768357276916504
    8. '
' → logprob: -12.893357276916504
    9. '```' → logprob: -12.893357276916504
    10. '<|end|>' → logprob: -13.518357276916504

Token 209: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.198043699143454e-05
    2. '#' → logprob: -9.500091552734375
    3. '
' → logprob: -11.625091552734375
    4. 'p' → logprob: -12.250091552734375
    5. '#print' → logprob: -13.625091552734375
    6. ' print' → logprob: -14.500091552734375
    7. 'if' → logprob: -14.875091552734375
    8. 'pr' → logprob: -14.875091552734375
    9. 'prin' → logprob: -14.875091552734375
    10. '```' → logprob: -15.500091552734375

Token 210: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002019907406065613
    2. 'if' → logprob: -8.625202178955078
    3. '#' → logprob: -11.000202178955078
    4. 'prin' → logprob: -13.000202178955078
    5. ' print' → logprob: -13.750202178955078
    6. 'pr' → logprob: -14.000202178955078
    7. '#print' → logprob: -14.250202178955078
    8. '```' → logprob: -15.875202178955078
    9. 'pri' → logprob: -16.625202178955078
    10. '
' → logprob: -16.625202178955078

Token 211: ' avoir' (ID: 16595)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4874972403049469
    2. ' la' → logprob: -1.3624972105026245
    3. ' avoir' → logprob: -2.362497329711914
    4. 'avoir' → logprob: -3.487497329711914
    5. '#' → logprob: -6.487497329711914
    6. 'l' → logprob: -6.612497329711914
    7. 'le' → logprob: -7.487497329711914
    8. 'print' → logprob: -7.612497329711914
    9. ' cette' → logprob: -8.237497329711914
    10. ' le' → logprob: -8.862497329711914

Token 212: ' parcour' (ID: 130642)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.028123851865530014
    2. 'aff' → logprob: -3.7781238555908203
    3. '#' → logprob: -6.52812385559082
    4. ' print' → logprob: -6.65312385559082
    5. ' parcour' → logprob: -7.27812385559082
    6. 'par' → logprob: -7.77812385559082
    7. 'comp' → logprob: -8.15312385559082
    8. 'calcul' → logprob: -8.90312385559082
    9. 'fait' → logprob: -9.15312385559082
    10. ' affich' → logprob: -9.40312385559082

Token 213: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.9160102712921798e-05
    2. 'ru' → logprob: -11.500029563903809
    3. 'ir' → logprob: -12.125029563903809
    4. 'i' → logprob: -12.375029563903809
    5. 'é' → logprob: -13.000029563903809
    6. 'çu' → logprob: -13.000029563903809
    7. '#' → logprob: -13.500029563903809
    8. 'cu' → logprob: -14.125029563903809
    9. '(u' → logprob: -15.000029563903809
    10. '   ' → logprob: -15.250029563903809

Token 214: ' toute' (ID: 16825)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5774621963500977
    2. ' la' → logprob: -1.5774621963500977
    3. ' toute' → logprob: -1.5774621963500977
    4. 't' → logprob: -4.452462196350098
    5. 'tout' → logprob: -4.702462196350098
    6. 'for' → logprob: -6.702462196350098
    7. '#' → logprob: -6.827462196350098
    8. ' toda' → logprob: -7.702462196350098
    9. 'Toute' → logprob: -7.702462196350098
    10. 's' → logprob: -7.952462196350098

Token 215: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4984942078590393
    2. 'la' → logprob: -0.9984942078590393
    3. 's' → logprob: -3.7484941482543945
    4. ' s' → logprob: -8.123494148254395
    5. 'le' → logprob: -9.123494148254395
    6. '#' → logprob: -9.748494148254395
    7. ' ' → logprob: -9.873494148254395
    8. 'l' → logprob: -10.748494148254395
    9. ' le' → logprob: -11.748494148254395
    10. ' ' → logprob: -11.748494148254395

Token 216: ' chaîne' (ID: 89288)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.7039282917976379
    2. 'chaine' → logprob: -0.8289282917976379
    3. ' chaîne' → logprob: -2.703928232192993
    4. 's' → logprob: -7.328928470611572
    5. ' boucle' → logprob: -8.078927993774414
    6. '#' → logprob: -8.078927993774414
    7. 'string' → logprob: -8.203927993774414
    8. 'bou' → logprob: -8.953927993774414
    9. ' chaine' → logprob: -9.078927993774414
    10. 'ligne' → logprob: -10.203927993774414

Token 217: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030249083414673805
    2. ',' → logprob: -3.5302491188049316
    3. ' print' → logprob: -8.030248641967773
    4. '#' → logprob: -9.155248641967773
    5. ',
' → logprob: -10.155248641967773
    6. 's' → logprob: -11.155248641967773
    7. '.' → logprob: -12.405248641967773
    8. ' ,' → logprob: -12.780248641967773
    9. '#print' → logprob: -12.905248641967773
    10. '
' → logprob: -14.030248641967773

Token 218: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.107425062713446e-06
    2. ' print' → logprob: -11.875006675720215
    3. 'pr' → logprob: -17.12500762939453
    4. '#' → logprob: -17.25000762939453
    5. '#print' → logprob: -17.25000762939453
    6. 'prin' → logprob: -17.62500762939453
    7. '
' → logprob: -20.12500762939453
    8. '```' → logprob: -20.25000762939453
    9. 'pri' → logprob: -21.00000762939453
    10. 'prit' → logprob: -21.25000762939453

Token 219: ' compare' (ID: 12221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.747814349073451e-05
    2. ' print' → logprob: -11.375017166137695
    3. '#' → logprob: -12.250017166137695
    4. 'pr' → logprob: -14.375017166137695
    5. '#print' → logprob: -16.000017166137695
    6. '
' → logprob: -16.000017166137695
    7. 'prin' → logprob: -16.250017166137695
    8. 'aff' → logprob: -17.500017166137695
    9. 'prit' → logprob: -17.625017166137695
    10. 'p' → logprob: -18.250017166137695

Token 220: ' le' (ID: 505)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.39230597019195557
    2. ' num' → logprob: -1.1423059701919556
    3. ' if' → logprob: -6.017305850982666
    4. ' le' → logprob: -6.517305850982666
    5. 'if' → logprob: -7.767305850982666
    6. ' si' → logprob: -8.142306327819824
    7. '(num' → logprob: -8.392306327819824
    8. 'le' → logprob: -8.392306327819824
    9. ' ' → logprob: -8.892306327819824
    10. 'si' → logprob: -10.017306327819824

Token 221: ' nombre' (ID: 9733)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.11344795674085617
    2. 'nombre' → logprob: -2.238447904586792
    3. ' nombre' → logprob: -7.738448143005371
    4. ' num' → logprob: -9.613448143005371
    5. 'n' → logprob: -10.488448143005371
    6. 'if' → logprob: -10.613448143005371
    7. 'nb' → logprob: -10.863448143005371
    8. 'numero' → logprob: -10.988448143005371
    9. 'print' → logprob: -11.988448143005371
    10. 'number' → logprob: -12.488448143005371

Token 222: ' de' (ID: 334)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.1400662660598755
    2. ' de' → logprob: -1.3900662660598755
    3. 'de' → logprob: -1.6400662660598755
    4. 'R' → logprob: -2.890066146850586
    5. ' num' → logprob: -3.140066146850586
    6. ' ' → logprob: -3.390066146850586
    7. '_' → logprob: -3.640066146850586
    8. ' R' → logprob: -4.015066146850586
    9. 'd' → logprob: -4.265066146850586
    10. '#' → logprob: -4.765066146850586

Token 223: ' "' (ID: 392)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.044999487698078156
    2. 'num' → logprob: -4.169999599456787
    3. '"' → logprob: -4.419999599456787
    4. ' R' → logprob: -4.669999599456787
    5. ''' → logprob: -5.169999599456787
    6. 'Rs' → logprob: -7.544999599456787
    7. ' num' → logprob: -9.044999122619629
    8. ' "' → logprob: -9.044999122619629
    9. 'r' → logprob: -9.294999122619629
    10. ' '' → logprob: -9.419999122619629

Token 224: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.028245430439710617
    2. 'num' → logprob: -3.653245449066162
    3. ' R' → logprob: -6.903245449066162
    4. ''' → logprob: -7.903245449066162
    5. '"' → logprob: -8.153244972229004
    6. ' num' → logprob: -8.903244972229004
    7. 's' → logprob: -10.028244972229004
    8. ' ' → logprob: -11.028244972229004
    9. 'Rs' → logprob: -11.340744972229004
    10. ' '' → logprob: -11.653244972229004

Token 225: '"' (ID: 1)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01519547589123249
    2. ' s' → logprob: -4.640195369720459
    3. ' ' → logprob: -6.515195369720459
    4. '"' → logprob: -6.765195369720459
    5. ''s' → logprob: -7.890195369720459
    6. 'num' → logprob: -7.890195369720459
    7. ' num' → logprob: -7.890195369720459
    8. '#' → logprob: -8.515195846557617
    9. ' '' → logprob: -8.515195846557617
    10. '(s' → logprob: -8.765195846557617

Token 226: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5373064875602722
    2. ' if' → logprob: -2.037306547164917
    3. 's' → logprob: -2.287306547164917
    4. 'num' → logprob: -3.037306547164917
    5. ' à' → logprob: -3.037306547164917
    6. ' ' → logprob: -4.162306308746338
    7. 'print' → logprob: -4.287306308746338
    8. ' avec' → logprob: -5.037306308746338
    9. ' found' → logprob: -5.037306308746338
    10. 'à' → logprob: -5.162306308746338

Token 227: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5761830806732178
    2. ')' → logprob: -0.9511830806732178
    3. ' num' → logprob: -3.0761830806732178
    4. ' )' → logprob: -5.701183319091797
    5. 's' → logprob: -7.576183319091797
    6. ' s' → logprob: -8.451183319091797
    7. ' à' → logprob: -8.576183319091797
    8. ' ' → logprob: -8.576183319091797
    9. ' if' → logprob: -9.076183319091797
    10. 'if' → logprob: -9.201183319091797

Token 228: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06535492092370987
    2. ' )' → logprob: -2.815354824066162
    3. '>' → logprob: -6.565354824066162
    4. ' >' → logprob: -7.440354824066162
    5. 'if' → logprob: -8.31535530090332
    6. ' ' → logprob: -8.56535530090332
    7. '#' → logprob: -8.81535530090332
    8. 's' → logprob: -9.06535530090332
    9. ',' → logprob: -9.31535530090332
    10. ' <' → logprob: -9.69035530090332

Token 229: ' au' (ID: 2791)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.186015322804451
    2. ' if' → logprob: -2.3110153675079346
    3. ' à' → logprob: -3.6860153675079346
    4. '#' → logprob: -4.5610151290893555
    5. 'print' → logprob: -4.5610151290893555
    6. ' avec' → logprob: -5.3110151290893555
    7. ' #' → logprob: -5.5610151290893555
    8. '>' → logprob: -5.8110151290893555
    9. ' print' → logprob: -6.0610151290893555
    10. ',' → logprob: -6.4360151290893555

Token 230: ' nombre' (ID: 9733)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004271546378731728
    2. ' N' → logprob: -5.879271507263184
    3. '(N' → logprob: -6.879271507263184
    4. 'num' → logprob: -8.504271507263184
    5. ' (' → logprob: -9.504271507263184
    6. 'n' → logprob: -9.879271507263184
    7. 'len' → logprob: -10.379271507263184
    8. '0' → logprob: -11.504271507263184
    9. '(num' → logprob: -11.629271507263184
    10. 'int' → logprob: -11.754271507263184

Token 231: ' de' (ID: 334)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8257513642311096
    2. 'de' → logprob: -1.3257513046264648
    3. ' de' → logprob: -2.450751304626465
    4. ' total' → logprob: -2.700751304626465
    5. ' N' → logprob: -2.950751304626465
    6. 'N' → logprob: -3.700751304626465
    7. 'd' → logprob: -4.075751304626465
    8. ' ' → logprob: -4.700751304626465
    9. 'R' → logprob: -5.075751304626465
    10. ' d' → logprob: -5.200751304626465

Token 232: ' caractères' (ID: 183106)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00713352020829916
    2. ' N' → logprob: -5.757133483886719
    3. '(N' → logprob: -6.382133483886719
    4. 'num' → logprob: -7.382133483886719
    5. 'R' → logprob: -7.632133483886719
    6. '0' → logprob: -8.257133483886719
    7. 's' → logprob: -8.507133483886719
    8. 'n' → logprob: -8.882133483886719
    9. '"N' → logprob: -8.882133483886719
    10. ' (' → logprob: -9.007133483886719

Token 233: ' rest' (ID: 2867)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.213257074356079
    2. '-' → logprob: -2.088257074356079
    3. ' -' → logprob: -2.088257074356079
    4. '#' → logprob: -2.713257074356079
    5. 'de' → logprob: -2.838257074356079
    6. '-R' → logprob: -2.963257074356079
    7. 'R' → logprob: -3.338257074356079
    8. 'rest' → logprob: -3.338257074356079
    9. 's' → logprob: -3.338257074356079
    10. 'N' → logprob: -3.588257074356079

Token 234: 'ants' (ID: 2027)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.37640899419784546
    2. 'ants' → logprob: -1.3764090538024902
    3. 'ant' → logprob: -3.2514090538024902
    4. 'a' → logprob: -4.87640905380249
    5. '-' → logprob: -5.62640905380249
    6. '#' → logprob: -5.87640905380249
    7. 'es' → logprob: -6.12640905380249
    8. 'antes' → logprob: -6.75140905380249
    9. '   ' → logprob: -7.75140905380249
    10. 'eux' → logprob: -8.126408576965332

Token 235: ',' (ID: 11)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.1978076696395874
    2. ' -' → logprob: -1.8228076696395874
    3. 'N' → logprob: -2.072807788848877
    4. 's' → logprob: -2.572807788848877
    5. '-' → logprob: -3.322807788848877
    6. ' //' → logprob: -3.447807788848877
    7. ' /' → logprob: -3.447807788848877
    8. '(N' → logprob: -3.447807788848877
    9. ' (' → logprob: -3.572807788848877
    10. ':' → logprob: -3.822807788848877

Token 236: ' c' (ID: 274)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03836310654878616
    2. ' N' → logprob: -3.288363218307495
    3. 'num' → logprob: -9.788363456726074
    4. 'if' → logprob: -10.038363456726074
    5. ' ' → logprob: -10.038363456726074
    6. 'n' → logprob: -10.413363456726074
    7. 's' → logprob: -10.663363456726074
    8. ' if' → logprob: -10.788363456726074
    9. 'len' → logprob: -11.538363456726074
    10. '"N' → logprob: -11.663363456726074

Token 237: '’est' (ID: 6838)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.028016209602356
    2. 'on' → logprob: -1.778016209602356
    3. 'ar' → logprob: -2.0280160903930664
    4. ''est' → logprob: -2.6530160903930664
    5. 'es' → logprob: -2.9030160903930664
    6. 's' → logprob: -3.0280160903930664
    7. 'ont' → logprob: -3.4030160903930664
    8. 'est' → logprob: -4.028016090393066
    9. 'har' → logprob: -4.153016090393066
    10. '=' → logprob: -4.278016090393066

Token 238: '-à' (ID: 56297)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2588285803794861
    2. 'à' → logprob: -2.258828639984131
    3. '-à' → logprob: -2.383828639984131
    4. ' N' → logprob: -4.383828639984131
    5. '-' → logprob: -4.633828639984131
    6. ' à' → logprob: -5.508828639984131
    7. '#' → logprob: -6.133828639984131
    8. '(N' → logprob: -7.508828639984131
    9. '   ' → logprob: -7.758828639984131
    10. '--' → logprob: -8.258828163146973

Token 239: '-dire' (ID: 76064)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.19589950144290924
    2. 'à' → logprob: -2.070899486541748
    3. '-à' → logprob: -3.320899486541748
    4. '(N' → logprob: -5.695899486541748
    5. 'a' → logprob: -6.070899486541748
    6. '0' → logprob: -6.570899486541748
    7. '#' → logprob: -6.695899486541748
    8. '   ' → logprob: -6.820899486541748
    9. '```' → logprob: -6.820899486541748
    10. 'c' → logprob: -7.445899486541748

Token 240: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.048631083220243454
    2. ' N' → logprob: -3.048631191253662
    3. '(N' → logprob: -11.048630714416504
    4. ' (' → logprob: -11.798630714416504
    5. ' ' → logprob: -11.923630714416504
    6. 'n' → logprob: -12.048630714416504
    7. '   ' → logprob: -12.298630714416504
    8. 's' → logprob: -13.548630714416504
    9. '(' → logprob: -14.673630714416504
    10. '  ' → logprob: -15.423630714416504

Token 241: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2258400321006775
    2. '-' → logprob: -1.7258400917053223
    3. '-num' → logprob: -3.7258400917053223
    4. 'num' → logprob: -10.725839614868164
    5. ' num' → logprob: -11.975839614868164
    6. ' ' → logprob: -12.225839614868164
    7. ' ' → logprob: -13.100839614868164
    8. '-n' → logprob: -14.850839614868164
    9. '//' → logprob: -14.850839614868164
    10. '#' → logprob: -15.225839614868164

Token 242: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0007106438861228526
    2. ' num' → logprob: -7.250710487365723
    3. '	num' → logprob: -14.750710487365723
    4. '(num' → logprob: -16.37571144104004
    5. ' ' → logprob: -16.75071144104004
    6. 'n' → logprob: -17.00071144104004
    7. 'nu' → logprob: -17.25071144104004
    8. 'N' → logprob: -17.62571144104004
    9. ' ' → logprob: -18.25071144104004
    10. '$num' → logprob: -18.50071144104004

Token 243: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02991594187915325
    2. ' if' → logprob: -3.9049160480499268
    3. ':' → logprob: -5.279915809631348
    4. '.' → logprob: -5.529915809631348
    5. 'print' → logprob: -9.154915809631348
    6. ':
' → logprob: -9.904915809631348
    7. ',' → logprob: -10.529915809631348
    8. 's' → logprob: -10.779915809631348
    9. ' :' → logprob: -10.904915809631348
    10. ')' → logprob: -11.654915809631348

Token 244: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.749814019713085e-06
    2. 'print' → logprob: -12.125006675720215
    3. ' if' → logprob: -13.750006675720215
    4. '```' → logprob: -16.12500762939453
    5. 'i' → logprob: -19.00000762939453
    6. 'If' → logprob: -19.37500762939453
    7. '#' → logprob: -19.50000762939453
    8. '
' → logprob: -19.62500762939453
    9. 'for' → logprob: -20.62500762939453
    10. 's' → logprob: -20.75000762939453

Token 245: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5213274309644476e-05
    2. 'print' → logprob: -11.250015258789062
    3. 'i' → logprob: -13.750015258789062
    4. ' if' → logprob: -13.875015258789062
    5. '```' → logprob: -16.000015258789062
    6. '#' → logprob: -18.000015258789062
    7. 'If' → logprob: -18.625015258789062
    8. 'result' → logprob: -19.250015258789062
    9. '
' → logprob: -19.375015258789062
    10. 'for' → logprob: -20.000015258789062

Token 246: ' le' (ID: 505)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.1602320373058319
    2. ' num' → logprob: -1.9102320671081543
    3. '(num' → logprob: -12.160231590270996
    4. ' ' → logprob: -13.910231590270996
    5. '	num' → logprob: -14.285231590270996
    6. ' ' → logprob: -14.660231590270996
    7. '   ' → logprob: -15.660231590270996
    8. '2' → logprob: -15.660231590270996
    9. '[num' → logprob: -16.285232543945312
    10. 'n' → logprob: -16.410232543945312

Token 247: ' nombre' (ID: 9733)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0021885682363063097
    2. ' num' → logprob: -6.127188682556152
    3. '(num' → logprob: -13.502188682556152
    4. '	num' → logprob: -14.502188682556152
    5. 'n' → logprob: -14.877188682556152
    6. ' ' → logprob: -15.252188682556152
    7. '2' → logprob: -15.627188682556152
    8. 'nu' → logprob: -15.627188682556152
    9. '[num' → logprob: -16.252187728881836
    10. 'nombre' → logprob: -16.752187728881836

Token 248: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3718695640563965
    2. '>' → logprob: -2.3718695640563965
    3. ' >' → logprob: -2.6218695640563965
    4. 'de' → logprob: -3.1218695640563965
    5. 'num' → logprob: -3.2468695640563965
    6. ' >=' → logprob: -3.6218695640563965
    7. ' num' → logprob: -4.4968695640563965
    8. '>=' → logprob: -4.9968695640563965
    9. ' des' → logprob: -5.3718695640563965
    10. '(num' → logprob: -6.2468695640563965

Token 249: ' "' (ID: 392)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.025483552366495132
    2. 'R' → logprob: -4.52548360824585
    3. ' num' → logprob: -4.52548360824585
    4. '(num' → logprob: -5.77548360824585
    5. ' R' → logprob: -8.150483131408691
    6. '(R' → logprob: -10.650483131408691
    7. '(' → logprob: -10.775483131408691
    8. '_R' → logprob: -11.025483131408691
    9. '"' → logprob: -11.775483131408691
    10. 's' → logprob: -11.775483131408691

Token 250: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.004166606813669205
    2. 'num' → logprob: -5.504166603088379
    3. '"' → logprob: -9.754166603088379
    4. ' R' → logprob: -11.754166603088379
    5. 'r' → logprob: -12.004166603088379
    6. 's' → logprob: -12.129166603088379
    7. 'Rs' → logprob: -12.754166603088379
    8. ''' → logprob: -13.629166603088379
    9. '```' → logprob: -13.754166603088379
    10. '_R' → logprob: -14.129166603088379

Token 251: '"' (ID: 1)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5931201577186584
    2. ' >' → logprob: -0.8431201577186584
    3. 's' → logprob: -4.593120098114014
    4. '">' → logprob: -6.218120098114014
    5. ' >=' → logprob: -6.468120098114014
    6. ' est' → logprob: -6.593120098114014
    7. '>=' → logprob: -6.968120098114014
    8. ' ' → logprob: -8.343120574951172
    9. '>s' → logprob: -8.468120574951172
    10. ' <' → logprob: -9.343120574951172

Token 252: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3175773024559021
    2. ' >' → logprob: -1.3175773620605469
    3. '>=' → logprob: -5.942577362060547
    4. ' >=' → logprob: -6.567577362060547
    5. '<' → logprob: -9.192577362060547
    6. ' <' → logprob: -9.692577362060547
    7. ' ' → logprob: -10.067577362060547
    8. '<=' → logprob: -11.567577362060547
    9. '">' → logprob: -12.067577362060547
    10. ' is' → logprob: -12.192577362060547

Token 253: ' strict' (ID: 12035)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5195428133010864
    2. 'strict' → logprob: -1.3945428133010864
    3. 'sup' → logprob: -2.519542694091797
    4. ' supérieur' → logprob: -3.144542694091797
    5. 'plus' → logprob: -4.269542694091797
    6. 'super' → logprob: -5.269542694091797
    7. ' >' → logprob: -5.644542694091797
    8. '>=' → logprob: -5.769542694091797
    9. 'au' → logprob: -6.144542694091797
    10. ' strictly' → logprob: -6.269542694091797

Token 254: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.08769310265779495
    2. '>' → logprob: -3.212693214416504
    3. 'ly' → logprob: -3.212693214416504
    4. '<' → logprob: -6.587693214416504
    5. 'lement' → logprob: -6.587693214416504
    6. ' >' → logprob: -8.462693214416504
    7. 'emen' → logprob: -9.212693214416504
    8. 'ment' → logprob: -9.712693214416504
    9. ' supérieur' → logprob: -9.712693214416504
    10. 'ément' → logprob: -9.712693214416504

Token 255: ' supérieur' (ID: 98491)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.9281520247459412
    2. ' supérieur' → logprob: -1.053152084350586
    3. 'super' → logprob: -1.678152084350586
    4. '>' → logprob: -2.803152084350586
    5. 'plus' → logprob: -5.303152084350586
    6. 'greater' → logprob: -5.803152084350586
    7. 'inf' → logprob: -8.678152084350586
    8. ' sup' → logprob: -9.303152084350586
    9. 'su' → logprob: -9.678152084350586
    10. ' supérieure' → logprob: -9.928152084350586

Token 256: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05426935479044914
    2. 'à' → logprob: -3.679269313812256
    3. ':' → logprob: -4.179269313812256
    4. ' ' → logprob: -4.929269313812256
    5. ' a' → logprob: -6.179269313812256
    6. ' to' → logprob: -7.304269313812256
    7. ' au' → logprob: -7.429269313812256
    8. 'au' → logprob: -7.554269313812256
    9. 'num' → logprob: -7.929269313812256
    10. '   ' → logprob: -8.054269790649414

Token 257: ' nombre' (ID: 9733)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06620736420154572
    2. ' N' → logprob: -2.9412074089050293
    3. '(N' → logprob: -4.566207408905029
    4. ' (' → logprob: -7.441207408905029
    5. 'nombre' → logprob: -9.066206932067871
    6. ' ' → logprob: -9.191206932067871
    7. ' nombre' → logprob: -11.066206932067871
    8. 'n' → logprob: -11.316206932067871
    9. '(' → logprob: -11.941206932067871
    10. '   ' → logprob: -12.316206932067871

Token 258: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.36794164776802063
    2. ' de' → logprob: -1.7429416179656982
    3. 'des' → logprob: -2.3679416179656982
    4. 'de' → logprob: -3.9929416179656982
    5. 'rest' → logprob: -5.242941856384277
    6. ' d' → logprob: -5.617941856384277
    7. '_' → logprob: -6.117941856384277
    8. ' rest' → logprob: -6.617941856384277
    9. 'd' → logprob: -6.867941856384277
    10. ' ' → logprob: -7.117941856384277

Token 259: ' autres' (ID: 18701)
  Prédit: ' autres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autres' → logprob: -0.6093077063560486
    2. 'aut' → logprob: -1.4843077659606934
    3. ' non' → logprob: -3.1093077659606934
    4. 's' → logprob: -3.6093077659606934
    5. 'non' → logprob: -3.6093077659606934
    6. 'rest' → logprob: -3.7343077659606934
    7. ' R' → logprob: -4.359307765960693
    8. ' ' → logprob: -4.484307765960693
    9. ' espaces' → logprob: -4.484307765960693
    10. ' rest' → logprob: -4.609307765960693

Token 260: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.5792885422706604
    2. 'car' → logprob: -0.8292885422706604
    3. ' caracteres' → logprob: -6.204288482666016
    4. ' caract' → logprob: -7.829288482666016
    5. '(car' → logprob: -8.079288482666016
    6. '_car' → logprob: -8.704288482666016
    7. 's' → logprob: -8.829288482666016
    8. ' car' → logprob: -9.204288482666016
    9. 'characters' → logprob: -9.829288482666016
    10. ' caractère' → logprob: -10.579288482666016

Token 261: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012883830815553665
    2. ' :' → logprob: -4.38788366317749
    3. ',' → logprob: -8.012884140014648
    4. ':
' → logprob: -10.887884140014648
    5. ':num' → logprob: -11.762884140014648
    6. 'num' → logprob: -12.137884140014648
    7. 's' → logprob: -13.262884140014648
    8. '):' → logprob: -13.387884140014648
    9. ' ,' → logprob: -13.512884140014648
    10. 'if' → logprob: -13.637884140014648

Token 262: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002333547454327345
    2. ' if' → logprob: -6.127333641052246
    3. '
' → logprob: -9.627333641052246
    4. '   ' → logprob: -10.252333641052246
    5. '```' → logprob: -11.002333641052246
    6. ' 
' → logprob: -11.377333641052246
    7. 'print' → logprob: -12.002333641052246
    8. '  
' → logprob: -12.627333641052246
    9. '    
' → logprob: -12.752333641052246
    10. ':
' → logprob: -13.127333641052246

Token 263: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.16022513806819916
    2. 'num' → logprob: -1.9102251529693604
    3. ' ' → logprob: -14.910224914550781
    4. '(num' → logprob: -15.035224914550781
    5. '	num' → logprob: -15.535224914550781
    6. ' ' → logprob: -16.28522491455078
    7. '   ' → logprob: -16.66022491455078
    8. '[num' → logprob: -18.53522491455078
    9. '  ' → logprob: -18.78522491455078
    10. '<num' → logprob: -19.28522491455078

Token 264: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2014196664094925
    2. ' >' → logprob: -1.701419711112976
    3. ' ' → logprob: -13.201419830322266
    4. ' ' → logprob: -13.326419830322266
    5. '>N' → logprob: -13.826419830322266
    6. '">' → logprob: -15.076419830322266
    7. '>
' → logprob: -15.576419830322266
    8. ':' → logprob: -15.951419830322266
    9. '   ' → logprob: -15.951419830322266
    10. '>

' → logprob: -16.076419830322266

Token 265: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007709908299148083
    2. ' N' → logprob: -4.882709980010986
    3. '(N' → logprob: -9.507709503173828
    4. ' (' → logprob: -10.632709503173828
    5. ' ' → logprob: -12.757709503173828
    6. '(' → logprob: -13.132709503173828
    7. '   ' → logprob: -15.757709503173828
    8. ' ' → logprob: -16.507709503173828
    9. '	N' → logprob: -16.507709503173828
    10. '(s' → logprob: -17.007709503173828

Token 266: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4040340781211853
    2. '-' → logprob: -1.52903413772583
    3. '/' → logprob: -3.15403413772583
    4. '-num' → logprob: -3.27903413772583
    5. '//' → logprob: -4.65403413772583
    6. ' ' → logprob: -4.65403413772583
    7. ' //' → logprob: -4.65403413772583
    8. ' /' → logprob: -5.77903413772583
    9. ':' → logprob: -6.02903413772583
    10. 'num' → logprob: -7.65403413772583

Token 267: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -3.130576806142926e-05
    2. ' num' → logprob: -10.375031471252441
    3. '	num' → logprob: -16.750030517578125
    4. ' ' → logprob: -18.125030517578125
    5. '1' → logprob: -18.375030517578125
    6. 'nu' → logprob: -19.625030517578125
    7. '_num' → logprob: -19.875030517578125
    8. '<num' → logprob: -20.125030517578125
    9. 'n' → logprob: -20.625030517578125
    10. '(num' → logprob: -20.750030517578125

Token 268: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25193288922309875
    2. ':
' → logprob: -1.5019328594207764
    3. ':
' → logprob: -13.001933097839355
    4. 'print' → logprob: -14.501933097839355
    5. ' :' → logprob: -15.126933097839355
    6. ' :
' → logprob: -15.251933097839355
    7. '   ' → logprob: -15.376933097839355
    8. '):
' → logprob: -16.00193214416504
    9. ':

' → logprob: -16.37693214416504
    10. ':#' → logprob: -17.00193214416504

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007816709578037262
    2. 'print' → logprob: -4.882816791534424
    3. ' print' → logprob: -8.757816314697266
    4. '
' → logprob: -10.257816314697266
    5. '	print' → logprob: -12.007816314697266
    6. '   ' → logprob: -12.382816314697266
    7. '\' → logprob: -12.882816314697266
    8. '    
' → logprob: -13.132816314697266
    9. '\n' → logprob: -13.382816314697266
    10. '```' → logprob: -13.632816314697266

Token 270: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001605115394340828
    2. '   ' → logprob: -9.375160217285156
    3. ' print' → logprob: -9.750160217285156
    4. '
' → logprob: -11.125160217285156
    5. 'prin' → logprob: -13.750160217285156
    6. 'pr' → logprob: -14.625160217285156
    7. '	print' → logprob: -15.375160217285156
    8. '
' → logprob: -15.625160217285156
    9. '    
' → logprob: -15.750160217285156
    10. '```' → logprob: -16.125160217285156

Token 271: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4021237802808173e-05
    2. 'prin' → logprob: -11.625014305114746
    3. 'pr' → logprob: -12.500014305114746
    4. 'prit' → logprob: -14.875014305114746
    5. 'pri' → logprob: -15.125014305114746
    6. ' print' → logprob: -15.125014305114746
    7. '   ' → logprob: -15.875014305114746
    8. 'p' → logprob: -16.62501335144043
    9. '```' → logprob: -17.37501335144043
    10. 'Print' → logprob: -17.75001335144043

Token 272: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.010242350399494171
    2. 'icher' → logprob: -4.635242462158203
    3. 'ic' → logprob: -8.760242462158203
    4. 'fic' → logprob: -8.760242462158203
    5. '#' → logprob: -9.510242462158203
    6. 'ichage' → logprob: -10.135242462158203
    7. '   ' → logprob: -11.010242462158203
    8. 'f' → logprob: -11.135242462158203
    9. 'ich' → logprob: -11.760242462158203
    10. '```' → logprob: -11.885242462158203

Token 273: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0007807997753843665
    2. '(' → logprob: -7.2507805824279785
    3. '('' → logprob: -10.125781059265137
    4. '"' → logprob: -10.875781059265137
    5. '(R' → logprob: -12.000781059265137
    6. '(":' → logprob: -13.125781059265137
    7. '"O' → logprob: -13.875781059265137
    8. '(
' → logprob: -14.250781059265137
    9. '()' → logprob: -14.375781059265137
    10. '("#' → logprob: -15.000781059265137

Token 274: 'Yes' (ID: 13022)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.39148256182670593
    2. 'Yes' → logprob: -1.7664825916290283
    3. '"' → logprob: -2.6414825916290283
    4. 'Oui' → logprob: -3.8914825916290283
    5. 'RO' → logprob: -4.016482353210449
    6. 'YES' → logprob: -4.391482353210449
    7. 'True' → logprob: -5.141482353210449
    8. 'RS' → logprob: -5.766482353210449
    9. 'READY' → logprob: -6.266482353210449
    10. 'RUN' → logprob: -6.266482353210449

Token 275: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003530582645907998
    2. '")' → logprob: -6.503530502319336
    3. '"
' → logprob: -6.878530502319336
    4. 'print' → logprob: -7.503530502319336
    5. 'Yes' → logprob: -8.878530502319336
    6. '()' → logprob: -9.378530502319336
    7. '()"' → logprob: -9.628530502319336
    8. '")
' → logprob: -10.003530502319336
    9. '```' → logprob: -10.003530502319336
    10. '("' → logprob: -11.253530502319336

Token 276: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08876146376132965
    2. '
' → logprob: -2.713761568069458
    3. '   ' → logprob: -4.463761329650879
    4. ' print' → logprob: -5.213761329650879
    5. '```' → logprob: -8.088761329650879
    6. '    
' → logprob: -8.213761329650879
    7. ')' → logprob: -8.463761329650879
    8. '(print' → logprob: -8.588761329650879
    9. 'Yes' → logprob: -9.213761329650879
    10. ':
' → logprob: -9.338761329650879

Token 277: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5812777876853943
    2. 'l' → logprob: -1.831277847290039
    3. 'la' → logprob: -2.206277847290039
    4. ' l' → logprob: -2.706277847290039
    5. ' la' → logprob: -2.831277847290039
    6. '
' → logprob: -4.456277847290039
    7. 'r' → logprob: -5.081277847290039
    8. '```' → logprob: -5.831277847290039
    9. 'stdout' → logprob: -6.081277847290039
    10. 'ur' → logprob: -6.206277847290039

Token 278: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.49572113156318665
    2. 'a' → logprob: -0.9957211017608643
    3. 'e' → logprob: -4.870721340179443
    4. '’écran' → logprob: -4.995721340179443
    5. 'é' → logprob: -5.995721340179443
    6. ''utilisateur' → logprob: -6.995721340179443
    7. 'screen' → logprob: -6.995721340179443
    8. 'print' → logprob: -7.495721340179443
    9. ' écran' → logprob: -7.745721340179443
    10. ''é' → logprob: -8.620720863342285

Token 279: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07811436057090759
    2. '
' → logprob: -3.2031142711639404
    3. '   ' → logprob: -3.4531142711639404
    4. ' print' → logprob: -6.0781145095825195
    5. ')' → logprob: -8.70311450958252
    6. '\n' → logprob: -9.57811450958252
    7. ')
' → logprob: -9.57811450958252
    8. ':
' → logprob: -9.57811450958252
    9. '```' → logprob: -9.95311450958252
    10. '    
' → logprob: -10.07811450958252

Token 280: ' car' (ID: 1669)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31562256813049316
    2. ' print' → logprob: -1.3156225681304932
    3. '   ' → logprob: -6.065622329711914
    4. '"' → logprob: -10.440622329711914
    5. '```' → logprob: -13.315622329711914
    6. '	print' → logprob: -13.440622329711914
    7. '
' → logprob: -13.815622329711914
    8. ' Yes' → logprob: -13.815622329711914
    9. 'Yes' → logprob: -14.065622329711914
    10. 'Print' → logprob: -15.190622329711914

Token 281: ' il' (ID: 1793)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.19303461909294128
    2. ' la' → logprob: -3.1930346488952637
    3. ' il' → logprob: -3.4430346488952637
    4. ' le' → logprob: -3.5680346488952637
    5. ' on' → logprob: -3.8180346488952637
    6. ' cela' → logprob: -4.568034648895264
    7. 'num' → logprob: -4.693034648895264
    8. '   ' → logprob: -4.693034648895264
    9. '"' → logprob: -5.193034648895264
    10. ' "' → logprob: -5.693034648895264

Token 282: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.014828027226030827
    2. 'y' → logprob: -4.764828205108643
    3. ' signifie' → logprob: -6.264828205108643
    4. ' s' → logprob: -6.514828205108643
    5. 's' → logprob: -6.514828205108643
    6. ' means' → logprob: -8.014827728271484
    7. ' ' → logprob: -8.764827728271484
    8. ' indique' → logprob: -9.139827728271484
    9. ' a' → logprob: -9.514827728271484
    10. ' veut' → logprob: -9.514827728271484

Token 283: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10071780532598495
    2. ' a' → logprob: -2.350717782974243
    3. 'y' → logprob: -8.725717544555664
    4. 'avait' → logprob: -9.225717544555664
    5. ''a' → logprob: -9.600717544555664
    6. '```' → logprob: -9.850717544555664
    7. 's' → logprob: -10.225717544555664
    8. ' y' → logprob: -10.350717544555664
    9. '#' → logprob: -10.600717544555664
    10. '#a' → logprob: -11.725717544555664

Token 284: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.10724427551031113
    2. 'plus' → logprob: -2.3572442531585693
    3. ' more' → logprob: -5.357244491577148
    4. ' davantage' → logprob: -6.732244491577148
    5. ' un' → logprob: -7.357244491577148
    6. 'more' → logprob: -8.857244491577148
    7. ' une' → logprob: -8.982244491577148
    8. ' ' → logprob: -10.482244491577148
    9. ' beaucoup' → logprob: -10.732244491577148
    10. 'un' → logprob: -10.732244491577148

Token 285: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.14280268549919128
    2. 'de' → logprob: -2.0178027153015137
    3. ' "' → logprob: -10.142802238464355
    4. ' ' → logprob: -10.392802238464355
    5. ' des' → logprob: -10.767802238464355
    6. '"' → logprob: -11.642802238464355
    7. ' d' → logprob: -11.892802238464355
    8. 'R' → logprob: -12.267802238464355
    9. 'd' → logprob: -12.392802238464355
    10. 'des' → logprob: -12.892802238464355

Token 286: ' "' (ID: 392)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.10183201730251312
    2. '"' → logprob: -2.7268319129943848
    3. ''' → logprob: -3.6018319129943848
    4. ' R' → logprob: -5.726831912994385
    5. 'Rs' → logprob: -7.851831912994385
    6. ' "' → logprob: -8.601832389831543
    7. 'car' → logprob: -9.226832389831543
    8. ' '' → logprob: -9.851832389831543
    9. 's' → logprob: -11.226832389831543
    10. ' ' → logprob: -11.226832389831543

Token 287: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0013804715126752853
    2. ' R' → logprob: -6.626380443572998
    3. 'Rs' → logprob: -10.126380920410156
    4. '"' → logprob: -11.876380920410156
    5. ' ' → logprob: -12.376380920410156
    6. ''' → logprob: -14.126380920410156
    7. ' Rs' → logprob: -14.251380920410156
    8. 's' → logprob: -15.001380920410156
    9. '	R' → logprob: -15.251380920410156
    10. ' "' → logprob: -15.751380920410156

Token 288: '"' (ID: 1)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16410937905311584
    2. '"' → logprob: -2.789109468460083
    3. ' que' → logprob: -3.039109468460083
    4. 'R' → logprob: -3.914109468460083
    5. '"s' → logprob: -4.414109230041504
    6. ' s' → logprob: -6.414109230041504
    7. '"""' → logprob: -6.539109230041504
    8. ' than' → logprob: -6.914109230041504
    9. ' "' → logprob: -6.914109230041504
    10. ' R' → logprob: -7.164109230041504

Token 289: ' que' (ID: 661)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.051125992089509964
    2. 's' → logprob: -4.051126003265381
    3. ' que' → logprob: -4.426126003265381
    4. '   ' → logprob: -4.676126003265381
    5. ' print' → logprob: -4.801126003265381
    6. ' than' → logprob: -6.676126003265381
    7. '.' → logprob: -7.801126003265381
    8. '"' → logprob: -8.426125526428223
    9. '```' → logprob: -8.426125526428223
    10. 'que' → logprob: -8.926125526428223

Token 290: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.33906275033950806
    2. '"d' → logprob: -2.3390626907348633
    3. '"' → logprob: -2.5890626907348633
    4. 'les' → logprob: -2.7140626907348633
    5. ' d' → logprob: -3.9640626907348633
    6. 'de' → logprob: -4.714062690734863
    7. 'aut' → logprob: -5.339062690734863
    8. 'Yes' → logprob: -5.964062690734863
    9. ''autre' → logprob: -5.964062690734863
    10. ''autres' → logprob: -6.214062690734863

Token 291: ''autres' (ID: 38753)
  Prédit: ''autres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''autres' → logprob: -0.05341976881027222
    2. 'e' → logprob: -3.928419828414917
    3. ''autre' → logprob: -3.928419828414917
    4. ''aut' → logprob: -4.553419589996338
    5. ''' → logprob: -7.053419589996338
    6. 'es' → logprob: -7.553419589996338
    7. 'eux' → logprob: -8.428420066833496
    8. '’autres' → logprob: -8.553420066833496
    9. 'aut' → logprob: -8.928420066833496
    10. ''e' → logprob: -10.678420066833496

Token 292: ' lettres' (ID: 101234)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.043985366821289
    2. 'print' → logprob: -1.168985366821289
    3. ' caractères' → logprob: -1.293985366821289
    4. 'characters' → logprob: -4.168985366821289
    5. ' caracteres' → logprob: -4.168985366821289
    6. 'chars' → logprob: -4.293985366821289
    7. ' characters' → logprob: -4.793985366821289
    8. ' print' → logprob: -5.793985366821289
    9. 's' → logprob: -5.793985366821289
    10. ' caract' → logprob: -6.293985366821289

Token 293: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32444047927856445
    2. 'print' → logprob: -1.5744404792785645
    3. '
' → logprob: -2.6994404792785645
    4. ' print' → logprob: -6.5744404792785645
    5. ')
' → logprob: -8.074440002441406
    6. '       ' → logprob: -8.449440002441406
    7. '    
' → logprob: -8.574440002441406
    8. ')' → logprob: -8.699440002441406
    9. ':
' → logprob: -8.699440002441406
    10. '```' → logprob: -9.449440002441406

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026811291463673115
    2. 'print' → logprob: -6.002681255340576
    3. ' print' → logprob: -8.502680778503418
    4. '       ' → logprob: -13.752680778503418
    5. '```' → logprob: -14.502680778503418
    6. '
' → logprob: -14.627680778503418
    7. '	print' → logprob: -14.877680778503418
    8. '   ' → logprob: -16.252681732177734
    9. '    
' → logprob: -17.252681732177734
    10. '  ' → logprob: -17.627681732177734

Token 295: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.703443770878948e-06
    2. ' print' → logprob: -12.000007629394531
    3. '   ' → logprob: -13.500007629394531
    4. '	print' → logprob: -17.62500762939453
    5. '```' → logprob: -17.75000762939453
    6. 'Print' → logprob: -19.00000762939453
    7. 'Yes' → logprob: -21.37500762939453
    8. ' ' → logprob: -22.62500762939453
    9. '    
' → logprob: -22.75000762939453
    10. '
' → logprob: -22.75000762939453

Token 296: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005533903022296727
    2. '(' → logprob: -7.500553607940674
    3. '('' → logprob: -14.875553131103516
    4. ' ("' → logprob: -17.875553131103516
    5. '(
' → logprob: -17.875553131103516
    6. '()' → logprob: -18.250553131103516
    7. '"' → logprob: -19.125553131103516
    8. '("")' → logprob: -19.625553131103516
    9. '("""' → logprob: -20.250553131103516
    10. '("("' → logprob: -20.625553131103516

Token 297: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.9361264946837764e-07
    2. 'R' → logprob: -16.625
    3. ' Yes' → logprob: -17.75
    4. 'Oui' → logprob: -18.75
    5. 'YES' → logprob: -18.75
    6. 'Ye' → logprob: -20.25
    7. 'Y' → logprob: -20.375
    8. 'No' → logprob: -21.375
    9. 'True' → logprob: -21.5
    10. 'Yeah' → logprob: -22.25

Token 298: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -7.226628895296017e-06
    2. '")
' → logprob: -12.125007629394531
    3. ')' → logprob: -14.000007629394531
    4. ')")' → logprob: -14.000007629394531
    5. '!")' → logprob: -17.25000762939453
    6. '"' → logprob: -17.62500762939453
    7. '")
' → logprob: -18.12500762939453
    8. '”)' → logprob: -18.87500762939453
    9. ' ")' → logprob: -18.87500762939453
    10. '')' → logprob: -19.37500762939453

Token 299: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.676292231422849e-05
    2. ' else' → logprob: -11.000017166137695
    3. '```' → logprob: -18.500017166137695
    4. 'Else' → logprob: -19.250017166137695
    5. '#else' → logprob: -19.375017166137695
    6. '}else' → logprob: -19.625017166137695
    7. 'elser' → logprob: -19.750017166137695
    8. '    
' → logprob: -20.000017166137695
    9. 'elif' → logprob: -20.625017166137695
    10. '	else' → logprob: -20.875017166137695

Token 300: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2519543766975403
    2. ':
' → logprob: -1.5019543170928955
    3. '   ' → logprob: -11.126954078674316
    4. ' :
' → logprob: -11.751954078674316
    5. ' :' → logprob: -13.126954078674316
    6. ':
' → logprob: -14.876954078674316
    7. ':

' → logprob: -15.501954078674316
    8. '():
' → logprob: -16.876955032348633
    9. 'print' → logprob: -16.876955032348633
    10. '):
' → logprob: -17.376955032348633

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001709328847937286
    2. 'print' → logprob: -6.501709461212158
    3. ' print' → logprob: -8.501708984375
    4. '   ' → logprob: -12.751708984375
    5. '	print' → logprob: -14.376708984375
    6. '       ' → logprob: -15.626708984375
    7. '   ' → logprob: -16.501708984375
    8. '    ' → logprob: -17.126708984375
    9. '    
' → logprob: -17.251708984375
    10. '```' → logprob: -17.501708984375

Token 302: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011843914166092873
    2. ' print' → logprob: -4.511843681335449
    3. '   ' → logprob: -7.136843681335449
    4. '	print' → logprob: -15.01184368133545
    5. '.print' → logprob: -16.636844635009766
    6. '(print' → logprob: -16.886844635009766
    7. '    ' → logprob: -17.136844635009766
    8. 'Print' → logprob: -17.761844635009766
    9. ' ' → logprob: -18.136844635009766
    10. '```' → logprob: -18.261844635009766

Token 303: ' Sinon' (ID: 154924)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3714236915111542
    2. '   ' → logprob: -1.7464237213134766
    3. ' print' → logprob: -1.9964237213134766
    4. '	print' → logprob: -11.371423721313477
    5. '   ' → logprob: -11.871423721313477
    6. '    ' → logprob: -12.246423721313477
    7. '.print' → logprob: -13.371423721313477
    8. 'Print' → logprob: -13.496423721313477
    9. ' ' → logprob: -14.246423721313477
    10. '       ' → logprob: -14.371423721313477

Token 304: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004898211918771267
    2. 'print' → logprob: -5.7548980712890625
    3. ' print' → logprob: -6.3798980712890625
    4. '       ' → logprob: -11.879898071289062
    5. '    ' → logprob: -12.254898071289062
    6. ':' → logprob: -12.629898071289062
    7. '
' → logprob: -12.629898071289062
    8. ':
' → logprob: -13.254898071289062
    9. '   ' → logprob: -13.754898071289062
    10. '	print' → logprob: -14.004898071289062

Token 305: ' si' (ID: 1784)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6205592751502991
    2. '   ' → logprob: -1.2455592155456543
    3. 'print' → logprob: -1.7455592155456543
    4. '	print' → logprob: -10.870559692382812
    5. '    ' → logprob: -12.370559692382812
    6. '   ' → logprob: -12.995559692382812
    7. '.print' → logprob: -13.620559692382812
    8. '       ' → logprob: -14.120559692382812
    9. ' ' → logprob: -15.495559692382812
    10. ' ' → logprob: -15.495559692382812

Token 306: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.52842116355896
    2. 'num' → logprob: -1.02842116355896
    3. ' True' → logprob: -3.40342116355896
    4. 'True' → logprob: -5.528421401977539
    5. ' not' → logprob: -6.028421401977539
    6. ' N' → logprob: -6.028421401977539
    7. 'print' → logprob: -6.278421401977539
    8. '  ' → logprob: -6.278421401977539
    9. ' ' → logprob: -6.778421401977539
    10. ' ' → logprob: -6.903421401977539

Token 307: ' n' (ID: 297)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.12616804242134094
    2. '<=' → logprob: -2.2511680126190186
    3. ' >=' → logprob: -5.001168251037598
    4. ' ==' → logprob: -5.501168251037598
    5. '==' → logprob: -6.876168251037598
    6. '>=' → logprob: -7.626168251037598
    7. ' <' → logprob: -7.876168251037598
    8. ' >' → logprob: -8.251168251037598
    9. '   ' → logprob: -9.251168251037598
    10. '>' → logprob: -9.626168251037598

Token 308: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.28580474853515625
    2. '<=' → logprob: -2.6608047485351562
    3. '>' → logprob: -2.9108047485351562
    4. 'est' → logprob: -3.1608047485351562
    5. '==' → logprob: -4.035804748535156
    6. '>=' → logprob: -4.160804748535156
    7. 'pas' → logprob: -4.535804748535156
    8. 'print' → logprob: -4.910804748535156
    9. '’est' → logprob: -5.160804748535156
    10. 'e' → logprob: -5.660804748535156

Token 309: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.28451380133628845
    2. ' pas' → logprob: -1.4095138311386108
    3. 'not' → logprob: -6.4095139503479
    4. 'strict' → logprob: -6.6595139503479
    5. '#' → logprob: -8.909513473510742
    6. ' not' → logprob: -9.034513473510742
    7. '>' → logprob: -9.159513473510742
    8. '_pas' → logprob: -11.034513473510742
    9. 't' → logprob: -11.159513473510742
    10. '```' → logprob: -11.409513473510742

Token 310: ' strict' (ID: 12035)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.5550182461738586
    2. '>' → logprob: -0.9300182461738586
    3. ' supérieur' → logprob: -4.430018424987793
    4. ' strictly' → logprob: -5.055018424987793
    5. ' strict' → logprob: -5.055018424987793
    6. ' >' → logprob: -5.805018424987793
    7. 'greater' → logprob: -6.555018424987793
    8. 'sup' → logprob: -7.305018424987793
    9. ' greater' → logprob: -7.680018424987793
    10. ' sup' → logprob: -8.555018424987793

Token 311: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.06480033695697784
    2. 'ément' → logprob: -3.689800262451172
    3. 'iquement' → logprob: -4.564800262451172
    4. 'isement' → logprob: -4.939800262451172
    5. 'iment' → logprob: -4.939800262451172
    6. 'it' → logprob: -5.814800262451172
    7. 'is' → logprob: -5.939800262451172
    8. 'èrement' → logprob: -6.314800262451172
    9. 'irement' → logprob: -6.439800262451172
    10. 'rement' → logprob: -7.564800262451172

Token 312: ' plus' (ID: 2932)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.2668860852718353
    2. '>' → logprob: -1.5168861150741577
    3. 'sup' → logprob: -5.141886234283447
    4. 'greater' → logprob: -5.141886234283447
    5. ' greater' → logprob: -6.266886234283447
    6. ' >' → logprob: -7.766886234283447
    7. ' sup' → logprob: -7.891886234283447
    8. 'super' → logprob: -8.266885757446289
    9. ' supérieure' → logprob: -9.391885757446289
    10. ' superior' → logprob: -9.891885757446289

Token 313: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.022306155413389206
    2. ' grand' → logprob: -4.897305965423584
    3. '>' → logprob: -5.397305965423584
    4. 'que' → logprob: -5.522305965423584
    5. 'haut' → logprob: -6.647305965423584
    6. 'ieur' → logprob: -6.772305965423584
    7. 'ieurs' → logprob: -7.022305965423584
    8. 'strict' → logprob: -7.522305965423584
    9. ' élevé' → logprob: -7.772305965423584
    10. 'gr' → logprob: -7.772305965423584

Token 314: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7298310995101929
    2. ',' → logprob: -0.8548310995101929
    3. 'que' → logprob: -3.1048312187194824
    4. '   ' → logprob: -3.6048312187194824
    5. ' que' → logprob: -4.229831218719482
    6. 'print' → logprob: -5.729831218719482
    7. ':
' → logprob: -6.729831218719482
    8. '=' → logprob: -7.979831218719482
    9. 'ou' → logprob: -8.479830741882324
    10. ' ' → logprob: -8.604830741882324

Token 315: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03215804323554039
    2. 'print' → logprob: -3.532158136367798
    3. ' print' → logprob: -6.032157897949219
    4. '       ' → logprob: -13.157157897949219
    5. '	print' → logprob: -13.407157897949219
    6. '```' → logprob: -15.282157897949219
    7. '    ' → logprob: -15.532157897949219
    8. '   ' → logprob: -15.782157897949219
    9. ' ' → logprob: -16.03215789794922
    10. '  ' → logprob: -16.53215789794922

Token 316: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.008637851104140282
    2. '"No' → logprob: -4.75863790512085
    3. '"' → logprob: -10.758637428283691
    4. '(' → logprob: -14.508637428283691
    5. '(No' → logprob: -14.633637428283691
    6. 'No' → logprob: -14.633637428283691
    7. '   ' → logprob: -15.008637428283691
    8. 'print' → logprob: -15.508637428283691
    9. '('' → logprob: -15.758637428283691
    10. '“No' → logprob: -17.633638381958008

Token 317: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.5759995579719543
    2. '"No' → logprob: -0.8259995579719543
    3. '"' → logprob: -9.82599925994873
    4. ''' → logprob: -12.70099925994873
    5. ' No' → logprob: -13.95099925994873
    6. '“No' → logprob: -14.45099925994873
    7. 'NO' → logprob: -14.95099925994873
    8. 'no' → logprob: -15.70099925994873
    9. '```' → logprob: -15.82599925994873
    10. '_No' → logprob: -15.95099925994873

Token 318: '".
' (ID: 26880)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.000318065780447796
    2. '")
' → logprob: -8.12531852722168
    3. '("' → logprob: -11.00031852722168
    4. '()' → logprob: -13.00031852722168
    5. ')' → logprob: -13.87531852722168
    6. ')")' → logprob: -14.00031852722168
    7. '"' → logprob: -14.37531852722168
    8. '")
' → logprob: -14.50031852722168
    9. '")

' → logprob: -16.50031852722168
    10. '”)' → logprob: -17.87531852722168

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018162699416279793
    2. 'print' → logprob: -4.018162727355957
    3. ' print' → logprob: -11.393162727355957
    4. '```' → logprob: -14.143162727355957
    5. '	print' → logprob: -14.893162727355957
    6. '       ' → logprob: -15.143162727355957
    7. '    
' → logprob: -16.39316177368164
    8. '   ' → logprob: -16.51816177368164
    9. '
' → logprob: -18.01816177368164
    10. '  ' → logprob: -18.26816177368164

Token 320: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011421226663514972
    2. '   ' → logprob: -7.0011420249938965
    3. ' print' → logprob: -8.376142501831055
    4. '	print' → logprob: -15.751142501831055
    5. '```' → logprob: -16.251142501831055
    6. 'pr' → logprob: -17.376142501831055
    7. '.print' → logprob: -18.001142501831055
    8. '  ' → logprob: -18.501142501831055
    9. 'Print' → logprob: -18.626142501831055
    10. ' ' → logprob: -18.876142501831055

Token 321: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002615742268972099
    2. '(' → logprob: -8.250261306762695
    3. '('' → logprob: -16.250261306762695
    4. '("")' → logprob: -16.750261306762695
    5. '()' → logprob: -16.875261306762695
    6. '(
' → logprob: -17.625261306762695
    7. ' ("' → logprob: -18.500261306762695
    8. '("""' → logprob: -19.375261306762695
    9. '("("' → logprob: -20.250261306762695
    10. '(("' → logprob: -20.375261306762695

Token 322: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -4.320199877838604e-07
    2. '"No' → logprob: -15.0
    3. ' No' → logprob: -19.375
    4. 'Yes' → logprob: -22.125
    5. '"' → logprob: -22.5
    6. '")' → logprob: -22.625
    7. '_No' → logprob: -22.875
    8. 'NO' → logprob: -23.0
    9. 'N' → logprob: -23.875
    10. '“No' → logprob: -24.25

Token 323: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.1424973713001236e-05
    2. ')")' → logprob: -10.500031471252441
    3. ')' → logprob: -12.500031471252441
    4. '")
' → logprob: -16.000030517578125
    5. '()' → logprob: -17.000030517578125
    6. '"' → logprob: -17.875030517578125
    7. '}")' → logprob: -18.500030517578125
    8. '("' → logprob: -18.875030517578125
    9. '”)' → logprob: -19.500030517578125
    10. '\")' → logprob: -20.250030517578125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 321
Tokens correctement prédits (1ère position, stricte): 98
Tokens correctement prédits (1ère position, avec adaptation): 101
Tokens correctement prédits (top 10): 201
Précision stricte (1ère position): 30.53%
Précision adaptée (1ère position): 31.46%
Précision (top 10): 62.62%
================================================================================
