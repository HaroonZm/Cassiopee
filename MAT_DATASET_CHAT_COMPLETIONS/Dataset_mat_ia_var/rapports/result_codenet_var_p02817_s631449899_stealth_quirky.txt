================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def pr0mpt(msg=''):
    return input(msg)

def spli7z(tx7, delim=' '):
    return tx7.split(delim)

def c0mbine(a, b):
    return b + a

aNdThEn, AwkWard = spli7z(pr0mpt())
print(c0mbine(aNdThEn, AwkWard))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' pr' (ID: 550)
  → Token d'amorce (pas de prédiction)

Token 2: '0' (ID: 15)
  → Token d'amorce (pas de prédiction)

Token 3: 'm' (ID: 76)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8254907131195068
    2. '(' → logprob: -1.2004907131195068
    3. 'n' → logprob: -2.075490713119507
    4. 't' → logprob: -2.825490713119507
    5. '```' → logprob: -3.575490713119507
    6. 'b' → logprob: -4.575490951538086
    7. '_' → logprob: -4.950490951538086
    8. '():' → logprob: -5.200490951538086
    9. 'f' → logprob: -5.325490951538086
    10. 'nt' → logprob: -5.450490951538086

Token 4: 'pt' (ID: 555)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12820260226726532
    2. '(' → logprob: -2.6282026767730713
    3. '(p' → logprob: -3.6282026767730713
    4. 't' → logprob: -4.628202438354492
    5. 'pt' → logprob: -4.628202438354492
    6. '```' → logprob: -7.503202438354492
    7. '(pt' → logprob: -8.253202438354492
    8. '_pt' → logprob: -8.628202438354492
    9. '\(' → logprob: -8.753202438354492
    10. '()' → logprob: -9.003202438354492

Token 5: '(msg' (ID: 15182)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000633566698525101
    2. '(:' → logprob: -8.375633239746094
    3. '(a' → logprob: -8.750633239746094
    4. ' (' → logprob: -9.875633239746094
    5. '"' → logprob: -10.250633239746094
    6. '():' → logprob: -10.250633239746094
    7. ''' → logprob: -11.000633239746094
    8. '(
' → logprob: -11.125633239746094
    9. '(en' → logprob: -11.125633239746094
    10. '(t' → logprob: -11.375633239746094

Token 6: '='' (ID: 2053)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0288009624928236
    2. ')' → logprob: -3.6538009643554688
    3. ':' → logprob: -6.278800964355469
    4. '):
' → logprob: -7.653800964355469
    5. ',' → logprob: -10.778800964355469
    6. ''):' → logprob: -11.028800964355469
    7. '_' → logprob: -11.403800964355469
    8. '```' → logprob: -11.403800964355469
    9. ')**' → logprob: -11.528800964355469
    10. '**' → logprob: -11.653800964355469

Token 7: ''):
' (ID: 26539)
  Prédit: ''):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.013946875929832458
    2. '')' → logprob: -4.638947010040283
    3. '',' → logprob: -6.638947010040283
    4. ' '' → logprob: -6.763947010040283
    5. ''' → logprob: -6.888947010040283
    6. ' ')' → logprob: -8.013946533203125
    7. ':' → logprob: -9.513946533203125
    8. ''):
' → logprob: -9.638946533203125
    9. '\'' → logprob: -9.888946533203125
    10. '"):' → logprob: -10.013946533203125

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017654407769441605
    2. '   ' → logprob: -4.1426544189453125
    3. ' :' → logprob: -7.2676544189453125
    4. '():' → logprob: -8.267654418945312
    5. '):' → logprob: -8.517654418945312
    6. ' ' → logprob: -8.767654418945312
    7. ':
' → logprob: -8.767654418945312
    8. '(' → logprob: -10.267654418945312
    9. ':return' → logprob: -10.392654418945312
    10. ' print' → logprob: -11.267654418945312

Token 9: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09185795485973358
    2. 'print' → logprob: -2.59185791015625
    3. 'pass' → logprob: -5.71685791015625
    4. ' pass' → logprob: -5.96685791015625
    5. 'return' (adapté à ' return') → logprob: -6.34185791015625
    6. '    ' → logprob: -6.96685791015625
    7. '    
' → logprob: -7.09185791015625
    8. ' print' → logprob: -7.21685791015625
    9. ' ' → logprob: -7.46685791015625
    10. '\n' → logprob: -7.59185791015625

Token 10: ' input' (ID: 3422)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3367556631565094
    2. ' ' → logprob: -1.461755633354187
    3. ' None' → logprob: -3.8367557525634766
    4. '"' → logprob: -4.336755752563477
    5. ' '' → logprob: -4.336755752563477
    6. ' msg' → logprob: -6.711755752563477
    7. ' f' → logprob: -6.836755752563477
    8. 'None' → logprob: -7.586755752563477
    9. 'msg' → logprob: -7.711755752563477
    10. '<|end|>' → logprob: -7.961755752563477

Token 11: '(msg' (ID: 15182)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001759552164003253
    2. '('' → logprob: -6.3767595291137695
    3. '("("' → logprob: -10.75175952911377
    4. ' (' → logprob: -11.25175952911377
    5. '(
' → logprob: -11.75175952911377
    6. ' ' → logprob: -12.87675952911377
    7. '<|end|>' → logprob: -12.87675952911377
    8. '(`' → logprob: -13.37675952911377
    9. '```' → logprob: -13.62675952911377
    10. '(

' → logprob: -13.87675952911377

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. '`)' → logprob: -12.375011444091797
    3. '')' → logprob: -12.625011444091797
    4. '))' → logprob: -13.375011444091797
    5. ' )' → logprob: -14.500011444091797
    6. '")' → logprob: -15.125011444091797
    7. '(' → logprob: -15.250011444091797
    8. ')
' → logprob: -15.625011444091797
    9. '())' → logprob: -15.625011444091797
    10. ')`' → logprob: -15.750011444091797

Token 13: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021212724968791008
    2. '.' → logprob: -4.146212577819824
    3. '(
' → logprob: -6.396212577819824
    4. '#' → logprob: -6.896212577819824
    5. ')' → logprob: -7.021212577819824
    6. ':' → logprob: -7.646212577819824
    7. '()' → logprob: -8.896212577819824
    8. '_' → logprob: -8.896212577819824
    9. 'def' → logprob: -9.146212577819824
    10. '<|end|>' → logprob: -9.146212577819824

Token 14: ' s' (ID: 265)
  Prédit: ' pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pr' → logprob: -0.038826826959848404
    2. ' space' → logprob: -3.9138269424438477
    3. ' ' → logprob: -4.913826942443848
    4. ' test' → logprob: -5.538826942443848
    5. ' p' → logprob: -6.538826942443848
    6. ' my' → logprob: -6.788826942443848
    7. ' main' → logprob: -6.788826942443848
    8. ' process' → logprob: -7.788826942443848
    9. ' ' → logprob: -7.913826942443848
    10. ' user' → logprob: -7.913826942443848

Token 15: 'pli' (ID: 5521)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.5612984895706177
    2. 'qrt' → logprob: -1.5612984895706177
    3. 'tr' → logprob: -1.8112984895706177
    4. 'quare' → logprob: -2.561298370361328
    5. 'h' → logprob: -3.561298370361328
    6. 'olve' → logprob: -3.811298370361328
    7. 'q' → logprob: -3.811298370361328
    8. 'et' → logprob: -3.936298370361328
    9. 'plit' → logprob: -3.936298370361328
    10. 'ay' → logprob: -3.936298370361328

Token 16: '7' (ID: 22)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00018911674851551652
    2. 'ts' → logprob: -8.875188827514648
    3. ' t' → logprob: -11.500188827514648
    4. 'tc' → logprob: -11.750188827514648
    5. 'tf' → logprob: -12.000188827514648
    6. 'tt' → logprob: -12.875188827514648
    7. '```' → logprob: -12.875188827514648
    8. 'tdown' → logprob: -13.000188827514648
    9. 'td' → logprob: -13.250188827514648
    10. 'т' → logprob: -13.250188827514648

Token 17: 'z' (ID: 89)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.000206401280593127
    2. 'ts' → logprob: -8.875205993652344
    3. '(t' → logprob: -10.500205993652344
    4. '(' → logprob: -11.125205993652344
    5. 'т' → logprob: -11.500205993652344
    6. '```' → logprob: -12.625205993652344
    7. ')t' → logprob: -12.750205993652344
    8. ' t' → logprob: -13.000205993652344
    9. '	t' → logprob: -14.250205993652344
    10. 'text' → logprob: -15.000205993652344

Token 18: '(tx' (ID: 54989)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3059045374393463
    2. '(e' → logprob: -1.680904507637024
    3. 'e' → logprob: -3.1809046268463135
    4. '('' → logprob: -4.305904388427734
    5. '(s' → logprob: -5.555904388427734
    6. '(str' → logprob: -6.180904388427734
    7. '('_' → logprob: -6.180904388427734
    8. '(a' → logprob: -6.305904388427734
    9. '(en' → logprob: -6.430904388427734
    10. 'er' → logprob: -6.430904388427734

Token 19: '7' (ID: 22)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -9.610702363715973e-06
    2. '```' → logprob: -12.375009536743164
    3. 'т' → logprob: -13.250009536743164
    4. ')t' → logprob: -13.750009536743164
    5. ')' → logprob: -14.000009536743164
    6. '   ' → logprob: -15.375009536743164
    7. '`t' → logprob: -15.625009536743164
    8. ' t' → logprob: -15.875009536743164
    9. ''t' → logprob: -16.125009536743164
    10. '):' → logprob: -16.125009536743164

Token 20: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0001577698567416519
    2. '):' → logprob: -10.000157356262207
    3. 'т' → logprob: -10.500157356262207
    4. '```' → logprob: -11.000157356262207
    5. ''):' → logprob: -11.625157356262207
    6. ')' → logprob: -11.625157356262207
    7. ':' → logprob: -11.875157356262207
    8. '7' → logprob: -12.000157356262207
    9. '):
' → logprob: -12.125157356262207
    10. ')t' → logprob: -12.250157356262207

Token 21: ' delim' (ID: 126040)
  Prédit: ' sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sep' → logprob: -0.16336753964424133
    2. 'sep' → logprob: -2.913367509841919
    3. ' delimiter' → logprob: -3.788367509841919
    4. ' separator' → logprob: -4.163367748260498
    5. ' delimit' → logprob: -4.288367748260498
    6. 'delimiter' → logprob: -4.288367748260498
    7. 'del' → logprob: -4.913367748260498
    8. 'separator' → logprob: -4.913367748260498
    9. ' se' → logprob: -5.288367748260498
    10. ''' → logprob: -6.038367748260498

Token 22: '='' (ID: 2053)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2651451826095581
    2. '):' → logprob: -1.890145182609558
    3. '='' → logprob: -2.7651453018188477
    4. ')' → logprob: -4.890145301818848
    5. '=None' → logprob: -5.265145301818848
    6. 'er' → logprob: -6.390145301818848
    7. '=',' → logprob: -6.640145301818848
    8. ')=' → logprob: -6.765145301818848
    9. '):
' → logprob: -7.765145301818848
    10. 'eter' → logprob: -7.890145301818848

Token 23: ' '' (ID: 461)
  Prédit: ' ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ')' → logprob: -0.7708115577697754
    2. '')' → logprob: -0.8958115577697754
    3. ',' → logprob: -2.2708115577697754
    4. ' '' → logprob: -4.395811557769775
    5. ''):' → logprob: -5.145811557769775
    6. '',' → logprob: -5.520811557769775
    7. ''' → logprob: -6.645811557769775
    8. '\n' → logprob: -7.270811557769775
    9. ' ',' → logprob: -8.020811080932617
    10. ':' → logprob: -8.270811080932617

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002194279106333852
    2. ')' → logprob: -6.127194404602051
    3. ' ):' → logprob: -12.75219440460205
    4. '):
' → logprob: -13.12719440460205
    5. ':' → logprob: -13.37719440460205
    6. ',' → logprob: -14.25219440460205
    7. ''):' → logprob: -14.25219440460205
    8. '   ' → logprob: -15.00219440460205
    9. ')：' → logprob: -16.002193450927734
    10. '):
' → logprob: -16.502193450927734

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4745102524757385
    2. 'return' → logprob: -0.9745102524757385
    3. ' return' → logprob: -8.474510192871094
    4. '	return' → logprob: -8.724510192871094
    5. '    
' → logprob: -10.599510192871094
    6. '```' → logprob: -11.724510192871094
    7. ')' → logprob: -11.974510192871094
    8. '
' → logprob: -12.349510192871094
    9. ':return' → logprob: -12.474510192871094
    10. '  ' → logprob: -13.224510192871094

Token 26: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0014753410359844565
    2. '   ' → logprob: -6.7514753341674805
    3. ' return' → logprob: -8.25147533416748
    4. '	return' → logprob: -10.12647533416748
    5. 'ret' → logprob: -13.62647533416748
    6. 'r' → logprob: -14.25147533416748
    7. '```' → logprob: -14.50147533416748
    8. 'try' → logprob: -15.00147533416748
    9. '7' → logprob: -15.25147533416748
    10. 're' → logprob: -15.37647533416748

Token 27: ' tx' (ID: 10400)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.1428903192281723
    2. ' tx' → logprob: -2.017890214920044
    3. 'txt' → logprob: -8.642889976501465
    4. '[' → logprob: -11.267889976501465
    5. ' txt' → logprob: -11.517889976501465
    6. 'text' → logprob: -12.892889976501465
    7. '	tx' → logprob: -13.142889976501465
    8. 't' → logprob: -13.392889976501465
    9. '(tx' → logprob: -13.392889976501465
    10. '[]' → logprob: -13.642889976501465

Token 28: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.842555426876061e-06
    2. '.split' → logprob: -12.750004768371582
    3. '77' → logprob: -13.875004768371582
    4. 't' → logprob: -14.000004768371582
    5. 'split' → logprob: -16.7500057220459
    6. '.' → logprob: -17.2500057220459
    7. 'plit' → logprob: -17.8750057220459
    8. 'w' → logprob: -18.3750057220459
    9. '.replace' → logprob: -18.6250057220459
    10. '71' → logprob: -18.6250057220459

Token 29: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.004093477968126535
    2. '.' → logprob: -5.504093647003174
    3. '.strip' → logprob: -12.004093170166016
    4. 'split' → logprob: -12.504093170166016
    5. '.s' → logprob: -13.129093170166016
    6. ' .' → logprob: -13.379093170166016
    7. '.replace' → logprob: -14.504093170166016
    8. '.rstrip' → logprob: -14.629093170166016
    9. '.Split' → logprob: -15.504093170166016
    10. '.sp' → logprob: -16.129093170166016

Token 30: '(del' (ID: 95689)
  Prédit: '(del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(del' → logprob: -0.4079951345920563
    2. '(' → logprob: -1.1579951047897339
    3. '('' → logprob: -3.9079952239990234
    4. '("("' → logprob: -7.282995223999023
    5. 'del' → logprob: -9.907995223999023
    6. '(`' → logprob: -10.532995223999023
    7. '()' → logprob: -11.282995223999023
    8. '((' → logprob: -11.532995223999023
    9. '(
' → logprob: -12.282995223999023
    10. '(paren' → logprob: -12.532995223999023

Token 31: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.00037848003557883203
    2. 'imiter' → logprob: -8.250378608703613
    3. 'm' → logprob: -9.625378608703613
    4. ')' → logprob: -10.250378608703613
    5. 'IMITER' → logprob: -12.875378608703613
    6. 'им' → logprob: -12.875378608703613
    7. 'i' → logprob: -13.125378608703613
    8. '1' → logprob: -13.375378608703613
    9. 'imeter' → logprob: -13.625378608703613
    10. '))' → logprob: -14.000378608703613

Token 32: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.750000953674316
    3. '')' → logprob: -15.125000953674316
    4. '))' → logprob: -16.25
    5. ' )' → logprob: -17.125
    6. ')

' → logprob: -18.625
    7. '")' → logprob: -19.0
    8. ')`' → logprob: -19.0
    9. '`)' → logprob: -19.125
    10. '),' → logprob: -19.25

Token 33: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.34704190492630005
    2. 'def' → logprob: -1.3470418453216553
    3. '#' → logprob: -4.097042083740234
    4. 'de' → logprob: -4.972042083740234
    5. '
' → logprob: -5.097042083740234
    6. '\' → logprob: -6.597042083740234
    7. '```' → logprob: -7.347042083740234
    8. 'a' → logprob: -8.097042083740234
    9. '

' → logprob: -8.722042083740234
    10. 'n' → logprob: -8.722042083740234

Token 34: ' c' (ID: 274)
  Prédit: ' pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pr' → logprob: -0.8803232908248901
    2. ' join' → logprob: -2.1303234100341797
    3. ' is' → logprob: -3.0053234100341797
    4. ' ' → logprob: -3.2553234100341797
    5. ' s' → logprob: -3.2553234100341797
    6. ' add' → logprob: -3.5053234100341797
    7. ' reverse' → logprob: -3.5053234100341797
    8. ' main' → logprob: -3.6303234100341797
    9. ' str' → logprob: -3.7553234100341797
    10. ' j' → logprob: -4.25532341003418

Token 35: '0' (ID: 15)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.5081721544265747
    2. 'a' → logprob: -1.6331721544265747
    3. 'ount' → logprob: -2.383172035217285
    4. 'ap' → logprob: -2.383172035217285
    5. 'alc' → logprob: -2.508172035217285
    6. 'all' → logprob: -2.883172035217285
    7. 'on' → logprob: -3.133172035217285
    8. 'at' → logprob: -3.383172035217285
    9. 'h' → logprob: -3.758172035217285
    10. '0' → logprob: -4.258172035217285

Token 36: 'mb' (ID: 3294)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9360839128494263
    2. 'ount' → logprob: -2.3110837936401367
    3. 'ut' → logprob: -2.4360837936401367
    4. 'al' → logprob: -2.5610837936401367
    5. 'nt' → logprob: -2.8110837936401367
    6. '0' → logprob: -3.5610837936401367
    7. 'a' → logprob: -3.5610837936401367
    8. 'l' → logprob: -3.8110837936401367
    9. 'ont' → logprob: -3.8110837936401367
    10. 'alc' → logprob: -3.9360837936401367

Token 37: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.07632063329219818
    2. 'i' → logprob: -3.7013206481933594
    3. '9' → logprob: -3.8263206481933594
    4. 'in' → logprob: -4.201320648193359
    5. '1' → logprob: -4.826320648193359
    6. '7' → logprob: -6.951320648193359
    7. '8' → logprob: -8.20132064819336
    8. '0' → logprob: -8.32632064819336
    9. '```' → logprob: -8.45132064819336
    10. '37' → logprob: -8.70132064819336

Token 38: '(a' (ID: 6271)
  Prédit: '(tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tx' → logprob: -0.11169487237930298
    2. '(txt' → logprob: -2.736694812774658
    3. '(t' → logprob: -4.236694812774658
    4. '(lst' → logprob: -5.111694812774658
    5. '(s' → logprob: -5.486694812774658
    6. '(str' → logprob: -5.611694812774658
    7. '(' → logprob: -5.986694812774658
    8. '(text' → logprob: -6.236694812774658
    9. '(arr' → logprob: -6.236694812774658
    10. '(l' → logprob: -6.736694812774658

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9512247443199158
    2. 'r' → logprob: -1.0762248039245605
    3. '):' → logprob: -2.0762248039245605
    4. 'rray' → logprob: -2.9512248039245605
    5. 'rr' → logprob: -3.0762248039245605
    6. ',b' → logprob: -3.8262248039245605
    7. 's' → logprob: -4.9512248039245605
    8. ',r' → logprob: -5.5762248039245605
    9. ')' → logprob: -5.7012248039245605
    10. '1' → logprob: -5.7012248039245605

Token 40: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.283273309469223
    2. 'b' → logprob: -1.4082733392715454
    3. ' sep' → logprob: -7.033273220062256
    4. 'sep' → logprob: -7.783273220062256
    5. ' lst' → logprob: -8.658273696899414
    6. ' delimiter' → logprob: -8.908273696899414
    7. 'lst' → logprob: -9.158273696899414
    8. ' ' → logprob: -9.283273696899414
    9. 'delimiter' → logprob: -9.283273696899414
    10. ' separator' → logprob: -10.033273696899414

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003923329990357161
    2. ')' → logprob: -5.878923416137695
    3. '):
' → logprob: -7.378923416137695
    4. ',' → logprob: -7.753923416137695
    5. '):
' → logprob: -10.878923416137695
    6. ''):' → logprob: -11.378923416137695
    7. '=' → logprob: -11.503923416137695
    8. ':' → logprob: -11.753923416137695
    9. ' ):' → logprob: -12.878923416137695
    10. '[]):' → logprob: -13.253923416137695

Token 42: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5822930335998535
    2. 'a' → logprob: -1.2072930335998535
    3. '   ' → logprob: -2.0822930335998535
    4. ' return' → logprob: -4.2072930335998535
    5. 'return' → logprob: -6.7072930335998535
    6. ')' → logprob: -7.9572930335998535
    7. ' +' → logprob: -8.207292556762695
    8. '(a' → logprob: -8.207292556762695
    9. '	a' → logprob: -8.707292556762695
    10. ' =' → logprob: -8.707292556762695

Token 43: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.27611446380615234
    2. 'return' (adapté à ' return') → logprob: -1.6511144638061523
    3. '   ' → logprob: -3.5261144638061523
    4. ' a' → logprob: -4.276114463806152
    5. 'a' → logprob: -5.151114463806152
    6. '	return' → logprob: -9.151114463806152
    7. ' ' → logprob: -9.651114463806152
    8. '[a' → logprob: -10.526114463806152
    9. '    ' → logprob: -10.651114463806152
    10. ' for' → logprob: -11.151114463806152

Token 44: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5760713219642639
    2. 'a' → logprob: -0.8260713219642639
    3. ' ' → logprob: -9.201071739196777
    4. ' str' → logprob: -12.076071739196777
    5. '	a' → logprob: -12.076071739196777
    6. '  ' → logprob: -12.326071739196777
    7. ''' → logprob: -12.951071739196777
    8. '   ' → logprob: -13.076071739196777
    9. ' f' → logprob: -13.201071739196777
    10. 'str' → logprob: -13.201071739196777

Token 45: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3922635316848755
    2. ' +' → logprob: -1.1422635316848755
    3. '<|end|>' → logprob: -6.267263412475586
    4. '+a' → logprob: -6.517263412475586
    5. '(' → logprob: -6.767263412475586
    6. '[' → logprob: -8.517263412475586
    7. '(a' → logprob: -8.767263412475586
    8. '.' → logprob: -9.392263412475586
    9. '.append' → logprob: -9.642263412475586
    10. '.join' → logprob: -9.767263412475586

Token 46: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22554543614387512
    2. ' a' → logprob: -1.6005454063415527
    3. ' ' → logprob: -9.225545883178711
    4. ''' → logprob: -11.850545883178711
    5. '  ' → logprob: -11.975545883178711
    6. '   ' → logprob: -12.100545883178711
    7. '	a' → logprob: -12.600545883178711
    8. '.' → logprob: -12.975545883178711
    9. ' '' → logprob: -13.100545883178711
    10. '(a' → logprob: -13.350545883178711

Token 47: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26639893651008606
    2. '
' → logprob: -2.3913989067077637
    3. '(
' → logprob: -3.2663989067077637
    4. '<|end|>' → logprob: -3.8913989067077637
    5. '+' → logprob: -4.141398906707764
    6. '[' → logprob: -4.266398906707764
    7. '.' → logprob: -4.391398906707764
    8. '\n' → logprob: -4.766398906707764
    9. '_' → logprob: -4.891398906707764
    10. 'def' → logprob: -4.891398906707764

Token 48: 'a' (ID: 64)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20229627192020416
    2. '_' → logprob: -2.952296257019043
    3. '(' → logprob: -3.452296257019043
    4. '#' → logprob: -3.452296257019043
    5. 'd' → logprob: -3.702296257019043
    6. 'a' → logprob: -4.952296257019043
    7. '\' → logprob: -4.952296257019043
    8. '.' → logprob: -5.202296257019043
    9. ')' → logprob: -5.452296257019043
    10. '
' → logprob: -5.577296257019043

Token 49: 'Nd' (ID: 41568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2967943847179413
    2. '=' → logprob: -2.4217944145202637
    3. '(' → logprob: -3.0467944145202637
    4. ',' → logprob: -3.7967944145202637
    5. ' ' → logprob: -4.296794414520264
    6. ')' → logprob: -4.296794414520264
    7. '[' → logprob: -4.671794414520264
    8. 'pp' → logprob: -5.046794414520264
    9. 'rg' → logprob: -5.046794414520264
    10. ' +' → logprob: -5.296794414520264

Token 50: 'Th' (ID: 1139)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6188876628875732
    2. '_' → logprob: -1.6188876628875732
    3. ' _' → logprob: -2.2438876628875732
    4. ' a' → logprob: -2.3688876628875732
    5. ' b' → logprob: -3.3688876628875732
    6. '  ' → logprob: -4.368887901306152
    7. ' (' → logprob: -5.618887901306152
    8. ' =' → logprob: -5.993887901306152
    9. '(a' → logprob: -5.993887901306152
    10. '(' → logprob: -6.743887901306152

Token 51: 'En' (ID: 1568)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.9187127351760864
    2. 'i' → logprob: -1.2937127351760864
    3. 'in' → logprob: -2.418712615966797
    4. 'at' → logprob: -2.543712615966797
    5. 'a' → logprob: -2.918712615966797
    6. 'er' → logprob: -3.418712615966797
    7. 'e' → logprob: -3.668712615966797
    8. 'ings' → logprob: -3.918712615966797
    9. 'is' → logprob: -5.293712615966797
    10. '1' → logprob: -5.793712615966797

Token 52: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08153745532035828
    2. ':' → logprob: -3.3315374851226807
    3. '(a' → logprob: -4.581537246704102
    4. ' (' → logprob: -4.706537246704102
    5. '()' → logprob: -5.081537246704102
    6. '():' → logprob: -5.581537246704102
    7. ' ' → logprob: -5.831537246704102
    8. ' =' → logprob: -5.831537246704102
    9. ',' → logprob: -6.331537246704102
    10. '(
' → logprob: -6.956537246704102

Token 53: ' Aw' (ID: 17775)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7275261878967285
    2. ' a' → logprob: -0.9775261878967285
    3. ' c' → logprob: -2.1025261878967285
    4. ' s' → logprob: -5.2275261878967285
    5. '(' → logprob: -5.4775261878967285
    6. ' b' → logprob: -5.9775261878967285
    7. '"' → logprob: -6.8525261878967285
    8. 'a' → logprob: -7.3525261878967285
    9. '_' → logprob: -7.4775261878967285
    10. ')' → logprob: -7.6025261878967285

Token 54: 'k' (ID: 74)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.27194923162460327
    2. 'ay' → logprob: -2.396949291229248
    3. 'ai' → logprob: -3.146949291229248
    4. '```' → logprob: -4.521949291229248
    5. 'n' → logprob: -4.646949291229248
    6. '8' → logprob: -5.084449291229248
    7. 's' → logprob: -5.209449291229248
    8. 'A' → logprob: -5.209449291229248
    9. '1' → logprob: -5.334449291229248
    10. '4' → logprob: -5.396949291229248

Token 55: 'Ward' (ID: 158200)
  Prédit: 'ward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ward' → logprob: -1.2491822242736816
    2. '()' → logprob: -1.3741822242736816
    3. '(' → logprob: -2.8741822242736816
    4. 'ard' → logprob: -2.9991822242736816
    5. '('' → logprob: -3.1241822242736816
    6. 'a' → logprob: -3.1241822242736816
    7. ''' → logprob: -3.7491822242736816
    8. 'WARD' → logprob: -3.7491822242736816
    9. '[' → logprob: -4.311682224273682
    10. '.' → logprob: -4.436682224273682

Token 56: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5100962519645691
    2. ' =' → logprob: -1.2600963115692139
    3. '=' → logprob: -2.635096311569214
    4. '.' → logprob: -4.260096073150635
    5. ' ' → logprob: -4.260096073150635
    6. ' (' → logprob: -5.510096073150635
    7. '()' → logprob: -5.885096073150635
    8. '('' → logprob: -6.385096073150635
    9. '<|end|>' → logprob: -6.635096073150635
    10. '(
' → logprob: -7.010096073150635

Token 57: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8600951433181763
    2. ' c' → logprob: -1.1100951433181763
    3. ' ' → logprob: -2.3600950241088867
    4. ' pr' → logprob: -2.4850950241088867
    5. ' [],' → logprob: -4.360095024108887
    6. ' '' → logprob: -4.610095024108887
    7. ' None' → logprob: -4.735095024108887
    8. 'pr' → logprob: -5.235095024108887
    9. ' []' → logprob: -5.360095024108887
    10. ' True' → logprob: -5.610095024108887

Token 58: 'pli' (ID: 5521)
  Prédit: 'pli'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pli' → logprob: -4.572941179503687e-05
    2. 'p' → logprob: -10.625045776367188
    3. 'pl' → logprob: -11.375045776367188
    4. 'plit' → logprob: -12.500045776367188
    5. 'pi' → logprob: -12.750045776367188
    6. '7' → logprob: -13.375045776367188
    7. 'li' → logprob: -14.125045776367188
    8. '(p' → logprob: -14.875045776367188
    9. '(' → logprob: -15.000045776367188
    10. '('' → logprob: -15.500045776367188

Token 59: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.06998589634895325
    2. 'z' → logprob: -2.694985866546631
    3. 'Z' → logprob: -10.569986343383789
    4. ''z' → logprob: -11.569986343383789
    5. '('' → logprob: -12.694986343383789
    6. 's' → logprob: -12.819986343383789
    7. '(z' → logprob: -12.819986343383789
    8. 'x' → logprob: -13.694986343383789
    9. 'r' → logprob: -14.382486343383789
    10. 't' → logprob: -14.632486343383789

Token 60: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.008651445619761944
    2. '7' → logprob: -4.758651256561279
    3. ''z' → logprob: -11.758651733398438
    4. '('' → logprob: -12.258651733398438
    5. 'x' → logprob: -12.258651733398438
    6. '(' → logprob: -12.633651733398438
    7. '(z' → logprob: -12.633651733398438
    8. 'Z' → logprob: -13.133651733398438
    9. 's' → logprob: -13.258651733398438
    10. '```' → logprob: -13.508651733398438

Token 61: '(pr' (ID: 38401)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1537933051586151
    2. '(' → logprob: -2.4037933349609375
    3. '("' → logprob: -3.6537933349609375
    4. '(pr' → logprob: -4.2787933349609375
    5. '(input' → logprob: -5.1537933349609375
    6. '(s' → logprob: -6.0287933349609375
    7. '('(' → logprob: -6.1537933349609375
    8. '("("' → logprob: -6.9037933349609375
    9. '("(' → logprob: -8.403793334960938
    10. '(('' → logprob: -8.528793334960938

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. 'om' → logprob: -13.125003814697266
    3. '()' → logprob: -14.750003814697266
    4. 'o' → logprob: -15.000003814697266
    5. ' ' → logprob: -15.250003814697266
    6. '۰' → logprob: -15.375003814697266
    7. '```' → logprob: -16.375003814697266
    8. 'о' → logprob: -16.750003814697266
    9. '('' → logprob: -16.875003814697266
    10. ''' → logprob: -17.125003814697266

Token 63: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1662236750125885
    2. 'mt' → logprob: -2.0412237644195557
    3. 'pt' → logprob: -4.541223526000977
    4. 't' → logprob: -4.666223526000977
    5. 'mp' → logprob: -6.916223526000977
    6. 'p' → logprob: -8.041223526000977
    7. '(' → logprob: -8.166223526000977
    8. '(mt' → logprob: -8.416223526000977
    9. 'nt' → logprob: -8.791223526000977
    10. '(m' → logprob: -8.791223526000977

Token 64: 'pt' (ID: 555)
  Prédit: 'pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.007592671550810337
    2. 't' → logprob: -5.007592678070068
    3. '(pt' → logprob: -7.132592678070068
    4. '	pt' → logprob: -10.38259220123291
    5. 'p' → logprob: -11.50759220123291
    6. 'tp' → logprob: -12.13259220123291
    7. 'т' → logprob: -12.50759220123291
    8. '(t' → logprob: -12.50759220123291
    9. '(' → logprob: -12.50759220123291
    10. '(prompt' → logprob: -12.75759220123291

Token 65: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3876451551914215
    2. '()' → logprob: -2.0126452445983887
    3. '())' → logprob: -2.5126452445983887
    4. '("("' → logprob: -3.1376452445983887
    5. '("' → logprob: -3.2626452445983887
    6. '(' → logprob: -3.7626452445983887
    7. '()))' → logprob: -8.38764476776123
    8. '(""))' → logprob: -8.38764476776123
    9. ')' → logprob: -8.51264476776123
    10. '("(' → logprob: -8.63764476776123

Token 66: 'print' (ID: 1598)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5636751055717468
    2. '(' → logprob: -1.8136751651763916
    3. '(
' → logprob: -2.0636751651763916
    4. '
' → logprob: -3.5636751651763916
    5. '[
' → logprob: -3.5636751651763916
    6. '()' → logprob: -3.5636751651763916
    7. '('' → logprob: -4.5636749267578125
    8. '('\' → logprob: -4.8136749267578125
    9. '()
' → logprob: -4.9386749267578125
    10. '<|end|>' → logprob: -5.4386749267578125

Token 67: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07359009981155396
    2. '(a' → logprob: -2.698590040206909
    3. '('' → logprob: -5.948590278625488
    4. '(A' → logprob: -7.198590278625488
    5. '("("' → logprob: -8.823590278625488
    6. '((' → logprob: -10.073590278625488
    7. '(s' → logprob: -10.323590278625488
    8. '(c' → logprob: -10.448590278625488
    9. '(
' → logprob: -11.823590278625488
    10. '(*' → logprob: -12.448590278625488

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08272801339626312
    2. 'o' → logprob: -3.3327279090881348
    3. 'b' → logprob: -3.7077279090881348
    4. 'a' → logprob: -4.082727909088135
    5. 'omb' → logprob: -6.957727909088135
    6. 'O' → logprob: -7.707727909088135
    7. 'mb' → logprob: -8.207728385925293
    8. 'ombo' → logprob: -9.895228385925293
    9. '```' → logprob: -10.020228385925293
    10. ' ' → logprob: -10.082728385925293

Token 69: 'mb' (ID: 3294)
  Prédit: 'mb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mb' → logprob: -0.025634033605456352
    2. 'Mb' → logprob: -3.7756340503692627
    3. 'm' → logprob: -6.150633811950684
    4. 'b' → logprob: -8.400633811950684
    5. 'MB' → logprob: -12.150633811950684
    6. 'mbio' → logprob: -12.650633811950684
    7. 'md' → logprob: -12.775633811950684
    8. 'M' → logprob: -13.025633811950684
    9. 'mble' → logprob: -13.275633811950684
    10. 'a' → logprob: -13.400633811950684

Token 70: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -5.3954463510308415e-05
    2. 'a' → logprob: -10.500054359436035
    3. 'i' → logprob: -11.375054359436035
    4. 'in' → logprob: -12.375054359436035
    5. 'ina' → logprob: -12.875054359436035
    6. '1' → logprob: -13.500054359436035
    7. '9' → logprob: -14.125054359436035
    8. ' ine' → logprob: -14.250054359436035
    9. 'ине' → logprob: -14.375054359436035
    10. '(a' → logprob: -14.375054359436035

Token 71: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2333967387676239
    2. '(A' → logprob: -2.1083967685699463
    3. '(' → logprob: -2.7333967685699463
    4. '('' → logprob: -3.8583967685699463
    5. '((' → logprob: -7.983396530151367
    6. '("("' → logprob: -9.608396530151367
    7. '("' → logprob: -10.483396530151367
    8. '(I' → logprob: -10.483396530151367
    9. ' (' → logprob: -10.608396530151367
    10. ' ' → logprob: -11.233396530151367

Token 72: 'Nd' (ID: 41568)
  Prédit: 'Nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Nd' → logprob: -0.00027897433028556406
    2. ',' → logprob: -9.500279426574707
    3. 'N' → logprob: -9.500279426574707
    4. 'd' → logprob: -9.875279426574707
    5. 'Dw' → logprob: -10.125279426574707
    6. ' Nd' → logprob: -11.625279426574707
    7. 'nd' → logprob: -12.000279426574707
    8. ',d' → logprob: -12.125279426574707
    9. 'Np' → logprob: -13.125279426574707
    10. ',N' → logprob: -13.125279426574707

Token 73: 'Th' (ID: 1139)
  Prédit: 'Th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Th' → logprob: -2.45848218582978e-06
    2. ' Th' → logprob: -13.50000286102295
    3. '7' → logprob: -14.25000286102295
    4. 'th' → logprob: -15.62500286102295
    5. 'Then' → logprob: -16.000001907348633
    6. 'T' → logprob: -16.750001907348633
    7. '_th' → logprob: -17.750001907348633
    8. 't' → logprob: -18.125001907348633
    9. 'Tw' → logprob: -18.250001907348633
    10. 'TH' → logprob: -19.125001907348633

Token 74: 'En' (ID: 1568)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.09715243428945541
    2. 'En' → logprob: -2.8471524715423584
    3. 'n' → logprob: -3.8471524715423584
    4. 'e' → logprob: -5.347152233123779
    5. 'Aw' → logprob: -5.597152233123779
    6. 'Then' → logprob: -6.722152233123779
    7. '7' → logprob: -6.972152233123779
    8. ',' → logprob: -7.347152233123779
    9. 'And' → logprob: -7.472152233123779
    10. 'er' → logprob: -7.722152233123779

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012106612848583609
    2. ',A' → logprob: -9.500121116638184
    3. ')' → logprob: -11.250121116638184
    4. ' ,' → logprob: -11.500121116638184
    5. ',a' → logprob: -12.000121116638184
    6. ',
' → logprob: -12.750121116638184
    7. ',b' → logprob: -13.125121116638184
    8. ' ' → logprob: -13.250121116638184
    9. ',

' → logprob: -13.375121116638184
    10. '),' → logprob: -13.500121116638184

Token 76: ' Aw' (ID: 17775)
  Prédit: ' Aw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Aw' → logprob: -0.13356418907642365
    2. 'Aw' → logprob: -2.1335642337799072
    3. ''' → logprob: -5.508563995361328
    4. '"' → logprob: -6.383563995361328
    5. ' ' → logprob: -7.758563995361328
    6. ' '' → logprob: -9.258563995361328
    7. ')' → logprob: -9.383563995361328
    8. ' "' → logprob: -10.383563995361328
    9. ''A' → logprob: -10.383563995361328
    10. ' Awe' → logprob: -10.758563995361328

Token 77: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0024246484972536564
    2. 'Kw' → logprob: -6.377424716949463
    3. 'kw' → logprob: -7.752424716949463
    4. 'K' → logprob: -9.877424240112305
    5. 'kwa' → logprob: -10.627424240112305
    6. 'w' → logprob: -10.627424240112305
    7. 'Kwa' → logprob: -10.752424240112305
    8. '7' → logprob: -10.814924240112305
    9. 'Ak' → logprob: -11.127424240112305
    10. 'A' → logprob: -11.189924240112305

Token 78: 'Ward' (ID: 158200)
  Prédit: 'Ward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ward' → logprob: -0.003335037035867572
    2. 'War' → logprob: -5.753334999084473
    3. 'W' → logprob: -9.128334999084473
    4. 'ward' → logprob: -10.878334999084473
    5. 'Warp' → logprob: -11.128334999084473
    6. 'WARD' → logprob: -12.378334999084473
    7. 'ard' → logprob: -12.503334999084473
    8. 'Wa' → logprob: -13.753334999084473
    9. '\' → logprob: -13.878334999084473
    10. 'Wan' → logprob: -14.628334999084473

Token 79: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759419202804565
    2. '))' → logprob: -0.8259419202804565
    3. ')))' → logprob: -13.450942039489746
    4. '),' → logprob: -15.325942039489746
    5. ' )' → logprob: -16.07594108581543
    6. '(' → logprob: -16.20094108581543
    7. '))
' → logprob: -16.45094108581543
    8. ' ))' → logprob: -16.45094108581543
    9. '])' → logprob: -16.70094108581543
    10. '()' → logprob: -16.82594108581543


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 50
Précision stricte (1ère position): 33.77%
Précision adaptée (1ère position): 35.06%
Précision (top 10): 64.94%
================================================================================
