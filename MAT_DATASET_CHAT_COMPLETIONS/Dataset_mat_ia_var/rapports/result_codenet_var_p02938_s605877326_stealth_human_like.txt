================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(999999999)
INF = float("inf")
input = lambda: sys.stdin.buffer.readline().strip()  # bon, on va garder ça pour la perf...

class ModInt:
    MOD = 10 ** 9 + 7

    def __init__(self, value):
        # Bon, pas sûr qu'on ait toujours int en entrée, mais tant pis
        self.x = value % ModInt.MOD

    def __repr__(self):
        return str(self.x)

    def __add__(self, other):
        if isinstance(other, ModInt):
            return ModInt(self.x + other.x)
        return ModInt(self.x + other)

    def __radd__(self, other):
        return self + other

    def __sub__(self, other):
        if isinstance(other, ModInt):
            return ModInt(self.x - other.x)
        else:
            return ModInt(self.x - other)

    def __rsub__(self, other):
        if isinstance(other, ModInt):
            return ModInt(other.x - self.x)
        return ModInt(other - self.x)

    def __mul__(self, other):
        if isinstance(other, ModInt):
            return ModInt(self.x * other.x)
        return ModInt(self.x * other)

    def __rmul__(self, other):
        return self * other

    def __truediv__(self, other):
        # division modulaire, évidemment
        if isinstance(other, ModInt):
            inv = pow(other.x, ModInt.MOD - 2, ModInt.MOD)
            return ModInt(self.x * inv)
        return ModInt(self.x * pow(other, ModInt.MOD - 2, ModInt.MOD))

    def __rtruediv__(self, other):
        inv = pow(self.x, ModInt.MOD - 2, ModInt.MOD)
        if isinstance(other, ModInt):
            return ModInt(other.x * inv)
        return ModInt(other * inv)

    def __pow__(self, power):
        if isinstance(power, ModInt):
            return ModInt(pow(self.x, power.x, ModInt.MOD))
        return ModInt(pow(self.x, power, ModInt.MOD))

    def __rpow__(self, other):
        # Utilisé? Peut-être pas, mais sait-on jamais
        if isinstance(other, ModInt):
            return ModInt(pow(other.x, self.x, ModInt.MOD))
        return ModInt(pow(other, self.x, ModInt.MOD))

def resolve():
    from itertools import product

    L, R = map(int, input().split())
    D = 61  # Attention, si int64, il faut bien D=61
    dp = [[[[ModInt(0) for _ in range(2)] for _ in range(2)] for _ in range(2)] for _ in range(D+1)]

    dp[D][0][0][0] = ModInt(1)  # On commence par le plus "haut" bit

    for d in range(D-1, -1, -1):
        lb = (L >> d) & 1
        rb = (R >> d) & 1
        for i, j, m, x, y in product((0, 1), repeat=5):
            ni = i
            nj = j
            nm = m
            if x > y:
                continue
            # L <= X
            if i == 0 and lb > x:
                continue
            if lb < x:
                ni = 1
            # Y <= R
            if j == 0 and y > rb:
                continue
            if y < rb:
                nj = 1
            # m == 0 => X == Y jusque là !
            if m == 0 and x != y:
                continue
            if x == 1 and y == 1:
                nm = 1
            dp[d][ni][nj][nm] = dp[d][ni][nj][nm] + dp[d+1][i][j][m]
            # ça marche ? bon faut voir

    # On print le total
    print(sum((dp[0][i][j][m] for i, j, m in product((0, 1), repeat=3)), ModInt(0)))
resolve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6405025720596313
    2. '.' → logprob: -0.8905025720596313
    3. 'import' → logprob: -4.015502452850342
    4. 'newline' → logprob: -4.265502452850342
    5. '\' → logprob: -4.765502452850342
    6. '<|end|>' → logprob: -5.015502452850342
    7. '```' → logprob: -5.390502452850342
    8. '
' → logprob: -5.765502452850342
    9. '<|end|>' → logprob: -6.515502452850342
    10. '' → logprob: -6.515502452850342

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5748613476753235
    2. '_trace' → logprob: -1.5748612880706787
    3. ' _' → logprob: -3.1998612880706787
    4. '_exc' → logprob: -3.3248612880706787
    5. '_ex' → logprob: -3.5748612880706787
    6. '_version' → logprob: -3.5748612880706787
    7. '_encoding' → logprob: -3.6998612880706787
    8. 'trace' → logprob: -4.824861526489258
    9. '_set' → logprob: -5.449861526489258
    10. '_default' → logprob: -5.449861526489258

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00037681119283661246
    2. 'ursive' → logprob: -8.37537670135498
    3. 'urs' → logprob: -10.37537670135498
    4. 'limit' → logprob: -10.62537670135498
    5. 'urf' → logprob: -10.62537670135498
    6. 'ur' → logprob: -10.87537670135498
    7. '_limit' → logprob: -11.25037670135498
    8. '_' → logprob: -11.75037670135498
    9. 'ursor' → logprob: -12.37537670135498
    10. 'ursively' → logprob: -12.75037670135498

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5803260207176208
    2. '_limit' → logprob: -0.8303260207176208
    3. '_depth' → logprob: -5.580326080322266
    4. 'depth' → logprob: -7.955326080322266
    5. '_' → logprob: -9.705326080322266
    6. ' limit' → logprob: -10.080326080322266
    7. 'lim' → logprob: -10.705326080322266
    8. '(' → logprob: -11.205326080322266
    9. '_rate' → logprob: -11.205326080322266
    10. '_limits' → logprob: -11.330326080322266

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5358694731257856e-05
    2. '(
' → logprob: -11.000035285949707
    3. ' (' → logprob: -11.500035285949707
    4. '(

' → logprob: -13.000035285949707
    5. '("("' → logprob: -13.250035285949707
    6. '('' → logprob: -13.750035285949707
    7. '((' → logprob: -14.125035285949707
    8. '(.' → logprob: -14.625035285949707
    9. '```' → logprob: -14.750035285949707
    10. '(()' → logprob: -15.375035285949707

Token 9: '999' (ID: 9130)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07892151176929474
    2. '100' → logprob: -2.5789215564727783
    3. '300' → logprob: -11.2039213180542
    4. ' ' → logprob: -11.8289213180542
    5. '500' → logprob: -12.3289213180542
    6. '999' → logprob: -12.5789213180542
    7. '200' → logprob: -14.3289213180542
    8. '150' → logprob: -14.3289213180542
    9. '1' → logprob: -14.7039213180542
    10. '   ' → logprob: -14.9539213180542

Token 10: '999' (ID: 9130)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.033794842660427094
    2. ')' → logprob: -3.40879487991333
    3. '99' → logprob: -9.783794403076172
    4. '999' → logprob: -9.783794403076172
    5. '))' → logprob: -11.533794403076172
    6. '```' → logprob: -11.908794403076172
    7. '+' → logprob: -12.033794403076172
    8. ' )' → logprob: -12.033794403076172
    9. ' ' → logprob: -13.158794403076172
    10. '(' → logprob: -14.033794403076172

Token 11: '999' (ID: 9130)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. ' )' → logprob: -11.62501335144043
    3. '))' → logprob: -12.62501335144043
    4. ')
' → logprob: -14.75001335144043
    5. '`)' → logprob: -15.75001335144043
    6. ')`' → logprob: -15.75001335144043
    7. ')

' → logprob: -16.50001335144043
    8. '')' → logprob: -16.62501335144043
    9. ' ' → logprob: -16.75001335144043
    10. '）' → logprob: -16.87501335144043

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.12127808178775e-05
    2. ' )' → logprob: -10.000051498413086
    3. '))' → logprob: -12.500051498413086
    4. '9' → logprob: -14.125051498413086
    5. '`)' → logprob: -15.250051498413086
    6. ')
' → logprob: -15.375051498413086
    7. ' ' → logprob: -16.000051498413086
    8. '）' → logprob: -16.125051498413086
    9. '0' → logprob: -16.125051498413086
    10. ')

' → logprob: -16.625051498413086

Token 13: 'INF' (ID: 64358)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38943707942962646
    2. '```' → logprob: -2.389437198638916
    3. ')' → logprob: -3.014437198638916
    4. '' → logprob: -3.139437198638916
    5. '\' → logprob: -3.139437198638916
    6. '\n' → logprob: -3.264437198638916
    7. '
' → logprob: -3.264437198638916
    8. '`' → logprob: -5.889437198638916
    9. '#' → logprob: -6.139437198638916
    10. '  
' → logprob: -6.264437198638916

Token 14: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3586162328720093
    2. ' =' → logprob: -1.6086162328720093
    3. '=' → logprob: -2.608616352081299
    4. ')' → logprob: -4.233616352081299
    5. '.' → logprob: -4.858616352081299
    6. ' _' → logprob: -6.233616352081299
    7. ',' → logprob: -7.733616352081299
    8. ':' → logprob: -7.858616352081299
    9. '._' → logprob: -7.983616352081299
    10. ' ' → logprob: -8.35861587524414

Token 15: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4100915193557739
    2. ' float' → logprob: -1.285091519355774
    3. 'float' → logprob: -3.4100914001464844
    4. '10' → logprob: -3.6600914001464844
    5. ' int' → logprob: -7.285091400146484
    6. 'int' → logprob: -8.910091400146484
    7. '1' → logprob: -9.535091400146484
    8. '999' → logprob: -9.660091400146484
    9. '100' → logprob: -10.660091400146484
    10. ' ' → logprob: -11.910091400146484

Token 16: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0019449377432465553
    2. ''' → logprob: -6.8769450187683105
    3. '(' → logprob: -7.3769450187683105
    4. ''s' → logprob: -9.626944541931152
    5. '("' → logprob: -9.876944541931152
    6. '```' → logprob: -10.001944541931152
    7. '"' → logprob: -10.751944541931152
    8. '32' → logprob: -11.001944541931152
    9. '>('' → logprob: -11.251944541931152
    10. ')' → logprob: -11.251944541931152

Token 17: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.018982049077749252
    2. ''in' → logprob: -4.01898193359375
    3. ''' → logprob: -7.26898193359375
    4. '"' → logprob: -9.64398193359375
    5. 'INF' → logprob: -11.26898193359375
    6. '-inf' → logprob: -11.26898193359375
    7. 'in' → logprob: -12.01898193359375
    8. ''ins' → logprob: -12.01898193359375
    9. ''inc' → logprob: -12.14398193359375
    10. '_inf' → logprob: -12.51898193359375

Token 18: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.01660011149942875
    2. ')' → logprob: -4.141600131988525
    3. ')")' → logprob: -7.516600131988525
    4. '"' → logprob: -11.141599655151367
    5. ')"' → logprob: -12.641599655151367
    6. ' )' → logprob: -13.516599655151367
    7. ' ")' → logprob: -14.266599655151367
    8. '}")' → logprob: -14.766599655151367
    9. '")
' → logprob: -15.266599655151367
    10. '!")' → logprob: -15.391599655151367

Token 19: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1943328380584717
    2. '
' → logprob: -1.3193328380584717
    3. '```' → logprob: -1.8193328380584717
    4. '\' → logprob: -1.9443328380584717
    5. '\n' → logprob: -2.9443328380584717
    6. '' → logprob: -3.8193328380584717
    7. '
' → logprob: -4.194333076477051
    8. ')' → logprob: -5.194333076477051
    9. ':' → logprob: -5.319333076477051
    10. ',
' → logprob: -5.444333076477051

Token 20: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01509883813560009
    2. '()' → logprob: -4.265099048614502
    3. ')' → logprob: -8.015098571777344
    4. '.' → logprob: -8.265098571777344
    5. '("")' → logprob: -9.890098571777344
    6. '(
' → logprob: -10.015098571777344
    7. '().' → logprob: -10.140098571777344
    8. '("("' → logprob: -10.390098571777344
    9. '<|end|>' → logprob: -10.640098571777344
    10. '```' → logprob: -10.765098571777344

Token 21: ' lambda' (ID: 27871)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5374963879585266
    2. ' input' → logprob: -1.0374963283538818
    3. ' sys' → logprob: -3.162496328353882
    4. 'sys' → logprob: -4.287496566772461
    5. ' lambda' → logprob: -5.787496566772461
    6. 'lambda' → logprob: -6.162496566772461
    7. 'open' → logprob: -10.037496566772461
    8. ' open' → logprob: -10.287496566772461
    9. 'raw' → logprob: -10.537496566772461
    10. 'int' → logprob: -10.662496566772461

Token 22: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4749951958656311
    2. ' :' → logprob: -1.0999951362609863
    3. ' ' → logprob: -3.3499951362609863
    4. '()' → logprob: -5.224995136260986
    5. '():' → logprob: -6.349995136260986
    6. ' ()' → logprob: -7.474995136260986
    7. ' input' → logprob: -7.474995136260986
    8. '  ' → logprob: -7.724995136260986
    9. '<|end|>' → logprob: -8.349995613098145
    10. ':list' → logprob: -8.724995613098145

Token 23: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.7434094548225403
    2. ' sys' → logprob: -0.8684094548225403
    3. 'input' → logprob: -2.3684093952178955
    4. ' input' → logprob: -4.493409633636475
    5. 'raw' → logprob: -10.868409156799316
    6. 'str' → logprob: -11.493409156799316
    7. '=sys' → logprob: -11.868409156799316
    8. '""' → logprob: -11.993409156799316
    9. 'stdin' → logprob: -12.118409156799316
    10. '	sys' → logprob: -12.368409156799316

Token 24: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002647927321959287
    2. '.stdout' → logprob: -8.875265121459961
    3. '.' → logprob: -9.250265121459961
    4. '.std' → logprob: -12.000265121459961
    5. '.argv' → logprob: -12.250265121459961
    6. 'stdin' → logprob: -12.375265121459961
    7. '.readline' → logprob: -12.500265121459961
    8. '.max' → logprob: -12.750265121459961
    9. ' stdin' → logprob: -12.875265121459961
    10. '.stderr' → logprob: -13.875265121459961

Token 25: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.000227496653678827
    2. '.read' → logprob: -8.500227928161621
    3. '.' → logprob: -10.750227928161621
    4. 'read' → logprob: -13.375227928161621
    5. '.readlines' → logprob: -14.375227928161621
    6. '.buffer' → logprob: -15.250227928161621
    7. ' readline' → logprob: -16.125226974487305
    8. '.Read' → logprob: -17.125226974487305
    9. '_read' → logprob: -18.500226974487305
    10. 'buffer' → logprob: -18.875226974487305

Token 26: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.368984107510187e-05
    2. '.read' → logprob: -11.000033378601074
    3. ' readline' → logprob: -11.125033378601074
    4. 'read' → logprob: -13.875033378601074
    5. '_read' → logprob: -14.000033378601074
    6. '.readlines' → logprob: -15.000033378601074
    7. '_raw' → logprob: -17.50003433227539
    8. '```' → logprob: -18.00003433227539
    9. '.' → logprob: -18.25003433227539
    10. '.rstrip' → logprob: -18.87503433227539

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006733249872922897
    2. '()' → logprob: -5.006733417510986
    3. '()\' → logprob: -11.881732940673828
    4. '().__' → logprob: -12.631732940673828
    5. '(' → logprob: -13.131732940673828
    6. ' ().' → logprob: -13.756732940673828
    7. '()
' → logprob: -14.006732940673828
    8. '()<' → logprob: -14.131732940673828
    9. '.rstrip' → logprob: -14.131732940673828
    10. '.' → logprob: -15.131732940673828

Token 28: 'strip' (ID: 23905)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.48861488699913025
    2. 'strip' → logprob: -0.9886149168014526
    3. 'decode' → logprob: -4.238615036010742
    4. ' strip' → logprob: -12.988615036010742
    5. 'dec' → logprob: -14.488615036010742
    6. '```' → logprob: -14.738615036010742
    7. '.rstrip' → logprob: -14.988615036010742
    8. 'split' → logprob: -15.238615036010742
    9. 'read' → logprob: -15.363615036010742
    10. 'rst' → logprob: -15.363615036010742

Token 29: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004184891004115343
    2. '()
' → logprob: -6.129184722900391
    3. '()\' → logprob: -7.004184722900391
    4. '(' → logprob: -7.379184722900391
    5. '().' → logprob: -8.50418472290039
    6. '()

' → logprob: -9.75418472290039
    7. '```' → logprob: -9.75418472290039
    8. '()`' → logprob: -10.87918472290039
    9. 'b' → logprob: -11.25418472290039
    10. '(b' → logprob: -11.25418472290039

Token 30: ' ' (ID: 220)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8251000046730042
    2. '
' → logprob: -1.5750999450683594
    3. '\n' → logprob: -1.5750999450683594
    4. '<|end|>' → logprob: -3.3250999450683594
    5. '\' → logprob: -3.4500999450683594
    6. '()
' → logprob: -4.575099945068359
    7. '```' → logprob: -4.700099945068359
    8. '(' → logprob: -4.825099945068359
    9. '' → logprob: -4.950099945068359
    10. '    
' → logprob: -4.950099945068359

Token 31: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30754169821739197
    2. '```' → logprob: -2.682541608810425
    3. '
' → logprob: -2.932541608810425
    4. '\n' → logprob: -3.057541608810425
    5. '()' → logprob: -3.432541608810425
    6. '\' → logprob: -4.182541847229004
    7. '#' → logprob: -5.182541847229004
    8. '(' → logprob: -5.432541847229004
    9. 'import' → logprob: -5.682541847229004
    10. 'n' → logprob: -5.932541847229004

Token 32: ' bon' (ID: 4846)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3146390914916992
    2. 'us' → logprob: -2.314639091491699
    3. 'jour' → logprob: -2.439639091491699
    4. 'e' → logprob: -3.439639091491699
    5. 'de' → logprob: -4.439639091491699
    6. 'def' → logprob: -4.689639091491699
    7. 'jou' → logprob: -5.189639091491699
    8. 'ds' → logprob: -5.689639091491699
    9. '```' → logprob: -5.939639091491699
    10. 'dj' → logprob: -6.189639091491699

Token 34: ' on' (ID: 402)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.1670993566513062
    2. ' but' → logprob: -1.7920993566513062
    3. ' ' → logprob: -2.1670994758605957
    4. 'b' → logprob: -2.5420994758605957
    5. 'input' → logprob: -2.5420994758605957
    6. ')' → logprob: -2.7920994758605957
    7. ' input' → logprob: -3.1670994758605957
    8. ' 
' → logprob: -3.6670994758605957
    9. ' lambda' → logprob: -4.292099475860596
    10. 'lambda' → logprob: -4.417099475860596

Token 35: ' va' (ID: 3423)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.6917688846588135
    2. 'n' → logprob: -2.1917688846588135
    3. '```' → logprob: -2.1917688846588135
    4. 'a' → logprob: -2.4417688846588135
    5. 'pas' → logprob: -2.5667688846588135
    6. 'continue' → logprob: -2.9417688846588135
    7. 'lit' → logprob: -3.1917688846588135
    8. 'v' → logprob: -3.4417688846588135
    9. '.readline' → logprob: -3.6917688846588135
    10. 's' → logprob: -3.8167688846588135

Token 36: ' garder' (ID: 63069)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.5855743885040283
    2. 'contin' → logprob: -2.9605743885040283
    3. ' essayer' → logprob: -3.0855743885040283
    4. ' prendre' → logprob: -3.2105743885040283
    5. 'prendre' → logprob: -3.2105743885040283
    6. ' rester' → logprob: -3.4605743885040283
    7. 'import' → logprob: -3.5855743885040283
    8. ' devoir' → logprob: -3.7105743885040283
    9. ' voir' → logprob: -4.085574150085449
    10. ' utiliser' → logprob: -4.460574150085449

Token 37: ' ça' (ID: 13590)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07768528163433075
    2. '\n' → logprob: -3.4526853561401367
    3. '

' → logprob: -4.327685356140137
    4. ')' → logprob: -4.702685356140137
    5. 'def' → logprob: -5.077685356140137
    6. '' → logprob: -5.952685356140137
    7. '#' → logprob: -6.077685356140137
    8. '\' → logprob: -6.202685356140137
    9. '
' → logprob: -6.827685356140137
    10. 'n' → logprob: -7.202685356140137

Token 39: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8467734456062317
    2. 'maint' → logprob: -1.221773386001587
    3. 'le' → logprob: -2.971773386001587
    4. 'la' → logprob: -3.096773386001587
    5. ' maintenant' → logprob: -3.096773386001587
    6. 'au' → logprob: -3.721773386001587
    7. ' l' → logprob: -4.096773624420166
    8. 'les' → logprob: -4.221773624420166
    9. ' le' → logprob: -4.721773624420166
    10. 'c' → logprob: -4.846773624420166

Token 40: ' perf' (ID: 18023)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.69654780626297
    2. 'input' → logprob: -2.071547746658325
    3. 'suite' → logprob: -2.071547746658325
    4. 'now' → logprob: -3.571547746658325
    5. ' input' → logprob: -3.821547746658325
    6. 'moment' → logprob: -3.946547746658325
    7. 'maint' → logprob: -4.571547985076904
    8. ' moment' → logprob: -4.696547985076904
    9. 'stdin' → logprob: -4.696547985076904
    10. '```' → logprob: -5.009047985076904

Token 41: '...

' (ID: 2161)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1115214005112648
    2. '

' → logprob: -3.3615214824676514
    3. '\n' → logprob: -3.3615214824676514
    4. '' → logprob: -4.236521244049072
    5. 'def' → logprob: -5.361521244049072
    6. '
' → logprob: -5.486521244049072
    7. '\' → logprob: -6.111521244049072
    8. '```' → logprob: -6.361521244049072
    9. '#' → logprob: -6.861521244049072
    10. '<|end|>' → logprob: -7.111521244049072

Token 42: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5463516712188721
    2. 'n' → logprob: -0.9213516712188721
    3. 'class' → logprob: -4.671351432800293
    4. 'N' → logprob: -5.171351432800293
    5. 'a' → logprob: -5.796351432800293
    6. '
' → logprob: -6.921351432800293
    7. 'd' → logprob: -7.296351432800293
    8. '\' → logprob: -7.546351432800293
    9. '#' → logprob: -7.671351432800293
    10. '```' → logprob: -8.171351432800293

Token 43: ' Mod' (ID: 7191)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -1.0440974235534668
    2. ' Graph' → logprob: -1.6690974235534668
    3. ' DFS' → logprob: -1.6690974235534668
    4. ' Segment' → logprob: -2.419097423553467
    5. ' Tree' → logprob: -2.544097423553467
    6. ' Solver' → logprob: -3.044097423553467
    7. ' Node' → logprob: -3.794097423553467
    8. ' ' → logprob: -4.794097423553467
    9. ' Union' → logprob: -5.044097423553467
    10. ' Trie' → logprob: -5.419097423553467

Token 44: 'Int' (ID: 2471)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10472705960273743
    2. 'ular' → logprob: -2.854727029800415
    3. 'Int' → logprob: -4.104727268218994
    4. 'ulo' → logprob: -4.104727268218994
    5. 'uler' → logprob: -5.979727268218994
    6. 'ulus' → logprob: -6.604727268218994
    7. 'ule' → logprob: -6.854727268218994
    8. '(int' → logprob: -7.104727268218994
    9. '():' → logprob: -7.604727268218994
    10. 'int' → logprob: -7.729727268218994

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012116642901673913
    2. '(' → logprob: -6.751211643218994
    3. ' :' → logprob: -11.251212120056152
    4. ':
' → logprob: -11.876212120056152
    5. '():' → logprob: -11.876212120056152
    6. '(int' → logprob: -12.001212120056152
    7. '(object' → logprob: -12.751212120056152
    8. '):' → logprob: -13.126212120056152
    9. ':**' → logprob: -14.376212120056152
    10. ',' → logprob: -14.876212120056152

Token 46: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00630972720682621
    2. '(' → logprob: -6.381309509277344
    3. ' :' → logprob: -6.381309509277344
    4. '   ' → logprob: -6.631309509277344
    5. '(object' → logprob: -7.006309509277344
    6. ':
' → logprob: -8.256309509277344
    7. ' ' → logprob: -9.131309509277344
    8. '(int' → logprob: -9.631309509277344
    9. '():' → logprob: -9.631309509277344
    10. ' (' → logprob: -10.256309509277344

Token 47: ' MOD' (ID: 32868)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3308153450489044
    2. 'def' → logprob: -1.330815315246582
    3. '   ' → logprob: -4.080815315246582
    4. ' __' → logprob: -8.580815315246582
    5. 'class' → logprob: -9.330815315246582
    6. ' ' → logprob: -9.455815315246582
    7. '	def' → logprob: -9.830815315246582
    8. '    ' → logprob: -9.955815315246582
    9. '    
' → logprob: -11.080815315246582
    10. '__' → logprob: -11.330815315246582

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.179835245013237
    2. '=' → logprob: -1.8048352003097534
    3. ' ' → logprob: -9.929835319519043
    4. ',' → logprob: -11.679835319519043
    5. '  ' → logprob: -11.804835319519043
    6. '   ' → logprob: -12.304835319519043
    7. ':' → logprob: -12.429835319519043
    8. 'ULO' → logprob: -12.429835319519043
    9. '=int' → logprob: -12.804835319519043
    10. 'ulus' → logprob: -12.804835319519043

Token 49: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.13681861758232117
    2. '100' → logprob: -2.1368186473846436
    3. ' ' → logprob: -4.7618184089660645
    4. '998' → logprob: -6.7618184089660645
    5. '1' → logprob: -9.011818885803223
    6. '(' → logprob: -12.136818885803223
    7. '0' → logprob: -12.636818885803223
    8. 'int' → logprob: -13.011818885803223
    9. 'pow' → logprob: -14.636818885803223
    10. '999' → logprob: -15.136818885803223

Token 50: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4846242070198059
    2. '10' → logprob: -0.9846242070198059
    3. '998' → logprob: -4.60962438583374
    4. '1' → logprob: -7.60962438583374
    5. ' ' → logprob: -11.109623908996582
    6. 'int' → logprob: -11.234623908996582
    7. '(' → logprob: -11.984623908996582
    8. '999' → logprob: -12.984623908996582
    9. '0' → logprob: -13.984623908996582
    10. '123' → logprob: -14.234623908996582

Token 51: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.17626208066940308
    2. '09' → logprob: -2.176262140274048
    3. '**' → logprob: -3.051262140274048
    4. '000' → logprob: -7.426261901855469
    5. '009' → logprob: -9.551261901855469
    6. '00' → logprob: -9.926261901855469
    7. '+' → logprob: -10.176261901855469
    8. ' ' → logprob: -10.301261901855469
    9. '```' → logprob: -10.801261901855469
    10. '0' → logprob: -11.426261901855469

Token 52: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. '09' → logprob: -14.625000953674316
    3. ' ' → logprob: -18.875
    4. '+' → logprob: -19.5
    5. '```' → logprob: -19.875
    6. '10' → logprob: -20.125
    7. '18' → logprob: -20.375
    8. '９' → logprob: -20.375
    9. '_' → logprob: -20.75
    10. '4' → logprob: -21.625

Token 53: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.625
    3. '18' → logprob: -19.75
    4. '+' → logprob: -20.875
    5. '8' → logprob: -21.0
    6. '10' → logprob: -21.25
    7. '９' → logprob: -21.625
    8. '```' → logprob: -21.875
    9. ' ' → logprob: -22.0
    10. '19' → logprob: -22.25

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011092590866610408
    2. '7' → logprob: -7.5011091232299805
    3. ' +' → logprob: -7.5011091232299805
    4. '＋' → logprob: -13.87610912322998
    5. '9' → logprob: -14.00110912322998
    6. '+
' → logprob: -14.12610912322998
    7. '```' → logprob: -15.62610912322998
    8. '+

' → logprob: -15.62610912322998
    9. ' plus' → logprob: -15.87610912322998
    10. 'plus' → logprob: -16.001110076904297

Token 55: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -19.5
    3. '9' → logprob: -19.625
    4. '+' → logprob: -20.0
    5. '07' → logprob: -20.75
    6. ' ' → logprob: -21.0
    7. '79' → logprob: -22.0
    8. '

' → logprob: -22.125
    9. '７' → logprob: -22.125
    10. '700' → logprob: -22.5

Token 56: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '７' → logprob: -19.625
    4. '```' → logprob: -20.375
    5. '   ' → logprob: -20.5
    6. '07' → logprob: -21.125
    7. '  ' → logprob: -21.75
    8. '

' → logprob: -21.875
    9. '۷' → logprob: -21.875
    10. '+' → logprob: -22.0

Token 57: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2495756894350052
    2. ':' → logprob: -1.7495757341384888
    3. '(
' → logprob: -4.624575614929199
    4. '
' → logprob: -4.749575614929199
    5. '   ' → logprob: -5.249575614929199
    6. '\' → logprob: -5.624575614929199
    7. '' → logprob: -5.874575614929199
    8. ' ' → logprob: -5.999575614929199
    9. 'def' → logprob: -5.999575614929199
    10. ',' → logprob: -6.374575614929199

Token 58: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11492733657360077
    2. 'def' → logprob: -2.989927291870117
    3. '    
' → logprob: -4.489927291870117
    4. ' def' → logprob: -4.489927291870117
    5. '   ' → logprob: -4.614927291870117
    6. ' 
' → logprob: -5.489927291870117
    7. '  
' → logprob: -5.614927291870117
    8. ':' → logprob: -5.739927291870117
    9. ' ' → logprob: -5.864927291870117
    10. '' → logprob: -5.864927291870117

Token 59: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02282877266407013
    2. ' def' → logprob: -4.022828578948975
    3. '   ' → logprob: -5.397828578948975
    4. '    
' → logprob: -9.397829055786133
    5. ' ' → logprob: -10.897829055786133
    6. ' 
' → logprob: -11.772829055786133
    7. '
' → logprob: -11.897829055786133
    8. '	def' → logprob: -12.022829055786133
    9. '    ' → logprob: -12.772829055786133
    10. '0' → logprob: -12.897829055786133

Token 60: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11301194131374359
    2. ' init' → logprob: -2.6130118370056152
    3. ' ' → logprob: -3.6130118370056152
    4. ' def' → logprob: -5.988011837005615
    5. '__' → logprob: -6.238011837005615
    6. 'init' → logprob: -6.863011837005615
    7. '_init' → logprob: -7.238011837005615
    8. ' ' → logprob: -8.363012313842773
    9. ' _' → logprob: -9.863012313842773
    10. 'def' → logprob: -10.988012313842773

Token 61: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'int' → logprob: -16.25
    3. 'ini' → logprob: -16.75
    4. ' init' → logprob: -19.375
    5. '_init' → logprob: -20.375
    6. 'in' → logprob: -21.625
    7. 'new' → logprob: -21.75
    8. 'call' → logprob: -22.25
    9. 'i' → logprob: -22.875
    10. 'post' → logprob: -23.0

Token 62: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.012740714475512505
    2. '__' → logprob: -4.387740612030029
    3. '(self' → logprob: -9.387741088867188
    4. '(' → logprob: -10.012741088867188
    5. '__((' → logprob: -10.262741088867188
    6. '__('' → logprob: -10.387741088867188
    7. '__(
' → logprob: -10.887741088867188
    8. '__(*' → logprob: -11.762741088867188
    9. '_(' → logprob: -12.512741088867188
    10. '__("' → logprob: -13.387741088867188

Token 63: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005558936391025782
    2. ' self' → logprob: -7.500555992126465
    3. '(self' → logprob: -12.875555992126465
    4. ' ' → logprob: -15.750555992126465
    5. '	self' → logprob: -16.00055503845215
    6. ',self' → logprob: -17.87555503845215
    7. '0' → logprob: -18.12555503845215
    8. '_self' → logprob: -18.50055503845215
    9. 's' → logprob: -18.87555503845215
    10. '   ' → logprob: -18.87555503845215

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003907657694071531
    2. ' ,' → logprob: -6.003907680511475
    3. 'self' → logprob: -7.253907680511475
    4. ',self' → logprob: -7.253907680511475
    5. '(self' → logprob: -11.503907203674316
    6. ' self' → logprob: -13.503907203674316
    7. ',(' → logprob: -14.003907203674316
    8. ',n' → logprob: -14.003907203674316
    9. ',s' → logprob: -14.503907203674316
    10. ',num' → logprob: -14.878907203674316

Token 65: ' value' (ID: 1432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09670687466859818
    2. 'value' → logprob: -2.8467068672180176
    3. 'x' → logprob: -3.5967068672180176
    4. ' self' → logprob: -5.221706867218018
    5. ' value' → logprob: -7.096706867218018
    6. ' x' → logprob: -8.096707344055176
    7. 'v' → logprob: -9.221707344055176
    8. 'n' → logprob: -9.721707344055176
    9. 'val' → logprob: -10.346707344055176
    10. ' ' → logprob: -13.346707344055176

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008376040495932102
    2. ',' → logprob: -5.008376121520996
    3. ':' → logprob: -7.258376121520996
    4. ' ):' → logprob: -7.258376121520996
    5. '):
' → logprob: -9.008376121520996
    6. '=' → logprob: -9.258376121520996
    7. ')' → logprob: -11.383376121520996
    8. '   ' → logprob: -11.508376121520996
    9. '=None' → logprob: -12.383376121520996
    10. '       ' → logprob: -13.883376121520996

Token 67: '       ' (ID: 309)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.1890259981155396
    2. ' value' → logprob: -1.5640259981155396
    3. '       ' → logprob: -1.5640259981155396
    4. ',' → logprob: -2.18902587890625
    5. ' (' → logprob: -3.18902587890625
    6. '<|end|>' → logprob: -3.56402587890625
    7. '(value' → logprob: -3.93902587890625
    8. ' ,' → logprob: -4.31402587890625
    9. '<|end|>' → logprob: -4.43902587890625
    10. '    ' → logprob: -4.56402587890625

Token 68: ' #' (ID: 1069)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3195915222167969
    2. 'self' → logprob: -1.3195915222167969
    3. '       ' → logprob: -5.069591522216797
    4. '	self' → logprob: -11.694591522216797
    5. 'value' → logprob: -12.194591522216797
    6. '        ' → logprob: -13.194591522216797
    7. ' ' → logprob: -13.319591522216797
    8. ' value' → logprob: -13.444591522216797
    9. '_self' → logprob: -13.944591522216797
    10. '0' → logprob: -14.069591522216797

Token 69: ' Bon' (ID: 12658)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4161648750305176
    2. 'self' → logprob: -1.1661648750305176
    3. '       ' → logprob: -3.6661648750305176
    4. 'value' → logprob: -6.541164875030518
    5. ' value' → logprob: -6.916164875030518
    6. '        ' → logprob: -7.416164875030518
    7. ' if' → logprob: -9.29116439819336
    8. ' ' → logprob: -9.91616439819336
    9. 'if' → logprob: -10.41616439819336
    10. ' super' → logprob: -10.54116439819336

Token 70: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4918583035469055
    2. ' self' → logprob: -1.4918582439422607
    3. '       ' → logprob: -1.9918582439422607
    4. '=' → logprob: -4.99185848236084
    5. '        ' → logprob: -5.11685848236084
    6. ' =' → logprob: -5.24185848236084
    7. 'value' → logprob: -5.36685848236084
    8. ',' → logprob: -6.24185848236084
    9. '...' → logprob: -7.61685848236084
    10. ' value' → logprob: -7.74185848236084

Token 71: ' pas' (ID: 2173)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16293564438819885
    2. ' self' → logprob: -1.9129356145858765
    3. 'value' → logprob: -6.412935733795166
    4. '       ' → logprob: -7.162935733795166
    5. ' value' → logprob: -8.537935256958008
    6. ' ' → logprob: -10.412935256958008
    7. 'val' → logprob: -11.037935256958008
    8. '   ' → logprob: -11.037935256958008
    9. '	self' → logprob: -11.662935256958008
    10. '    ' → logprob: -12.537935256958008

Token 72: ' sûr' (ID: 46415)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.036872148513794
    2. ' self' → logprob: -1.786872148513794
    3. ' value' → logprob: -2.411872148513794
    4. '   ' → logprob: -2.661872148513794
    5. 'self' → logprob: -3.161872148513794
    6. 'value' → logprob: -3.286872148513794
    7. ' de' → logprob: -3.536872148513794
    8. '       ' → logprob: -3.786872148513794
    9. ' encore' → logprob: -3.786872148513794
    10. ' isinstance' → logprob: -3.786872148513794

Token 73: ' qu' (ID: 474)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11312256753444672
    2. '(' → logprob: -3.2381224632263184
    3. ' self' → logprob: -4.113122463226318
    4. '(self' → logprob: -4.363122463226318
    5. ',' → logprob: -4.613122463226318
    6. 'self' → logprob: -4.613122463226318
    7. ' (' → logprob: -5.238122463226318
    8. '        ' → logprob: -5.863122463226318
    9. ' de' → logprob: -5.988122463226318
    10. '=' → logprob: -6.488122463226318

Token 74: ''on' (ID: 25812)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.000977075076662004
    2. ' value' → logprob: -8.250977516174316
    3. ' type' → logprob: -8.375977516174316
    4. 'is' → logprob: -8.875977516174316
    5. ' ' → logprob: -9.125977516174316
    6. 'value' → logprob: -9.375977516174316
    7. 'type' → logprob: -9.750977516174316
    8. ' hasattr' → logprob: -10.750977516174316
    9. '(value' → logprob: -11.375977516174316
    10. '(type' → logprob: -11.500977516174316

Token 75: ' ait' (ID: 43015)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.17791731655597687
    2. ' do' → logprob: -2.552917242050171
    3. ' puisse' → logprob: -4.30291748046875
    4. 'f' → logprob: -4.55291748046875
    5. ' fasse' → logprob: -4.55291748046875
    6. ' ait' → logprob: -4.92791748046875
    7. 've' → logprob: -5.42791748046875
    8. ' ' → logprob: -5.42791748046875
    9. 'should' → logprob: -5.67791748046875
    10. 'value' → logprob: -5.67791748046875

Token 76: ' toujours' (ID: 16867)
  Prédit: ' besoin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' besoin' → logprob: -0.6506853103637695
    2. 'bes' → logprob: -0.9006853103637695
    3. ' ' → logprob: -3.4006853103637695
    4. 'à' → logprob: -4.6506853103637695
    5. 'v' → logprob: -5.7756853103637695
    6. '   ' → logprob: -6.1506853103637695
    7. 'need' → logprob: -6.1506853103637695
    8. 'b' → logprob: -6.2756853103637695
    9. ' à' → logprob: -6.5256853103637695
    10. 'to' → logprob: -6.5256853103637695

Token 77: ' int' (ID: 677)
  Prédit: ' besoin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' besoin' → logprob: -0.15347842872142792
    2. 'value' → logprob: -3.0284783840179443
    3. 'bes' → logprob: -3.9034783840179443
    4. ' à' → logprob: -4.028478622436523
    5. 'à' → logprob: -4.153478622436523
    6. 'need' → logprob: -5.153478622436523
    7. 'la' → logprob: -5.278478622436523
    8. ' ' → logprob: -5.403478622436523
    9. 'une' → logprob: -6.153478622436523
    10. ' value' → logprob: -6.153478622436523

Token 78: ' en' (ID: 469)
  Prédit: '(value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.8503063321113586
    2. 'er' → logprob: -1.2253062725067139
    3. 'value' → logprob: -2.600306272506714
    4. ' value' → logprob: -3.225306272506714
    5. 'eger' → logprob: -3.350306272506714
    6. 'elligence' → logprob: -3.725306272506714
    7. ')value' → logprob: -4.100306510925293
    8. 'égr' → logprob: -4.475306510925293
    9. 'rospection' → logprob: -4.725306510925293
    10. 'ger' → logprob: -4.975306510925293

Token 79: ' entrée' (ID: 95590)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.005398934241384268
    2. 'value' → logprob: -6.255398750305176
    3. 't' → logprob: -6.380398750305176
    4. '```' → logprob: -7.755398750305176
    5. 'puts' → logprob: -8.380398750305176
    6. 'ter' → logprob: -8.630398750305176
    7. 'python' → logprob: -9.005398750305176
    8. 'ternal' → logprob: -9.130398750305176
    9. 'val' → logprob: -9.380398750305176
    10. 'code' → logprob: -9.630398750305176

Token 80: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2925141751766205
    2. ',' → logprob: -2.0425140857696533
    3. '<|end|>' → logprob: -2.7925140857696533
    4. '        ' → logprob: -4.167514324188232
    5. '<|end|>' → logprob: -4.292514324188232
    6. ' if' → logprob: -4.417514324188232
    7. 'self' → logprob: -5.417514324188232
    8. ' ,' → logprob: -5.417514324188232
    9. ' self' → logprob: -6.167514324188232
    10. ' ' → logprob: -6.292514324188232

Token 81: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3088093400001526
    2. ' mais' → logprob: -2.308809280395508
    3. 'self' → logprob: -2.683809280395508
    4. ' but' → logprob: -3.433809280395508
    5. 'mais' → logprob: -3.558809280395508
    6. ' self' → logprob: -4.058809280395508
    7. 'value' → logprob: -4.808809280395508
    8. 'but' → logprob: -5.433809280395508
    9. ' donc' → logprob: -6.683809280395508
    10. ' value' → logprob: -6.683809280395508

Token 82: ' tant' (ID: 16235)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5116835832595825
    2. ' self' → logprob: -1.7616835832595825
    3. ' on' → logprob: -2.011683464050293
    4. '       ' → logprob: -3.386683464050293
    5. 'on' → logprob: -3.761683464050293
    6. ' ce' → logprob: -4.761683464050293
    7. ' c' → logprob: -5.511683464050293
    8. 'c' → logprob: -5.886683464050293
    9. 'value' → logprob: -5.886683464050293
    10. '```' → logprob: -6.136683464050293

Token 83: ' pis' (ID: 19525)
  Prédit: 'pis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pis' → logprob: -0.354766309261322
    2. 'que' → logprob: -1.6047663688659668
    3. 'p' → logprob: -3.229766368865967
    4. 'pi' → logprob: -3.854766368865967
    5. 'qu' → logprob: -3.979766368865967
    6. ' mieux' → logprob: -5.229766368865967
    7. ' pis' → logprob: -5.604766368865967
    8. ' que' → logprob: -5.604766368865967
    9. '   ' → logprob: -6.104766368865967
    10. ' ' → logprob: -6.479766368865967

Token 84: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051102422177791595
    2. '<|end|>' → logprob: -3.80110239982605
    3. '<|end|>' → logprob: -4.426102638244629
    4. 'self' → logprob: -4.926102638244629
    5. ',' → logprob: -5.426102638244629
    6. ' self' → logprob: -6.051102638244629
    7. '.' → logprob: -8.051102638244629
    8. 'value' → logprob: -8.301102638244629
    9. '   ' → logprob: -9.301102638244629
    10. ' =' → logprob: -9.301102638244629

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04582236334681511
    2. 'self' → logprob: -3.6708223819732666
    3. ' self' → logprob: -4.1708221435546875
    4. '<|end|>' → logprob: -6.4208221435546875
    5. ',' → logprob: -6.5458221435546875
    6. '<|end|>' → logprob: -8.170822143554688
    7. ' if' → logprob: -9.170822143554688
    8. '.' → logprob: -9.670822143554688
    9. '   ' → logprob: -9.795822143554688
    10. ' ' → logprob: -9.920822143554688

Token 86: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7388136386871338
    2. 'self' (adapté à ' self') → logprob: -0.7388136386871338
    3. '       ' → logprob: -3.113813638687134
    4. 'value' → logprob: -9.363813400268555
    5. ' value' → logprob: -10.363813400268555
    6. ' if' → logprob: -10.613813400268555
    7. ' ' → logprob: -10.988813400268555
    8. '	self' → logprob: -11.113813400268555
    9. 'if' → logprob: -11.738813400268555
    10. '   ' → logprob: -11.738813400268555

Token 87: '.x' (ID: 3700)
  Prédit: '.value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.003476882353425026
    2. '.' → logprob: -5.878477096557617
    3. 'value' → logprob: -7.378477096557617
    4. '.val' → logprob: -10.253477096557617
    5. '._' → logprob: -12.003477096557617
    6. ' .' → logprob: -12.753477096557617
    7. '.mod' → logprob: -13.753477096557617
    8. '_value' → logprob: -15.503477096557617
    9. ' value' → logprob: -15.878477096557617
    10. '.Value' → logprob: -16.003477096557617

Token 88: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409334778785706
    2. ' =' → logprob: -0.9740933179855347
    3. '=int' → logprob: -11.224093437194824
    4. '＝' → logprob: -13.849093437194824
    5. '=

' → logprob: -14.099093437194824
    6. ' ' → logprob: -15.099093437194824
    7. '=value' → logprob: -15.724093437194824
    8. 'int' → logprob: -16.224092483520508
    9. ' ' → logprob: -16.224092483520508
    10. '=
' → logprob: -16.349092483520508

Token 89: ' value' (ID: 1432)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0209577083587646
    2. ' value' → logprob: -1.1459577083587646
    3. ' int' → logprob: -1.5209577083587646
    4. 'value' → logprob: -2.2709577083587646
    5. '(value' → logprob: -9.895957946777344
    6. '(int' → logprob: -10.270957946777344
    7. '0' → logprob: -12.020957946777344
    8. ' ' → logprob: -12.270957946777344
    9. ' (' → logprob: -12.520957946777344
    10. '	value' → logprob: -13.395957946777344

Token 90: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10021886229515076
    2. '%' → logprob: -2.3502187728881836
    3. ' ' → logprob: -12.225218772888184
    4. ' ' → logprob: -13.225218772888184
    5. '<|end|>' → logprob: -13.600218772888184
    6. ' if' → logprob: -13.850218772888184
    7. ' %=' → logprob: -14.100218772888184
    8. '%A' → logprob: -14.475218772888184
    9. '%D' → logprob: -14.850218772888184
    10. '%x' → logprob: -14.975218772888184

Token 91: ' Mod' (ID: 7191)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.058670323342084885
    2. 'Mod' → logprob: -3.1836702823638916
    3. ' self' → logprob: -4.183670520782471
    4. ' Mod' → logprob: -8.558670043945312
    5. '(Mod' → logprob: -9.683670043945312
    6. '(self' → logprob: -10.558670043945312
    7. 'MOD' → logprob: -11.683670043945312
    8. 'Self' → logprob: -11.808670043945312
    9. '   ' → logprob: -12.433670043945312
    10. ' ' → logprob: -13.933670043945312

Token 92: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -7.822646693966817e-06
    2. 'int' → logprob: -12.000007629394531
    3. '   ' → logprob: -14.500007629394531
    4. 'INT' → logprob: -14.750007629394531
    5. '_INT' → logprob: -16.12500762939453
    6. '	Int' → logprob: -16.12500762939453
    7. 'Mod' → logprob: -16.75000762939453
    8. '.Int' → logprob: -16.87500762939453
    9. '_int' → logprob: -17.00000762939453
    10. ' Int' → logprob: -17.00000762939453

Token 93: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.0001617035741219297
    2. 'MOD' → logprob: -8.875162124633789
    3. '.MODE' → logprob: -12.125162124633789
    4. '.' → logprob: -12.125162124633789
    5. '_MOD' → logprob: -12.250162124633789
    6. '.Mod' → logprob: -13.000162124633789
    7. '.M' → logprob: -13.375162124633789
    8. ' .' → logprob: -14.000162124633789
    9. '.mod' → logprob: -15.000162124633789
    10. '```' → logprob: -15.125162124633789

Token 94: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.012947379611432552
    2. '   ' → logprob: -4.7629475593566895
    3. ' def' → logprob: -5.5129475593566895
    4. '<|end|>' → logprob: -8.262947082519531
    5. ' ' → logprob: -11.262947082519531
    6. '    
' → logprob: -12.012947082519531
    7. '```' → logprob: -13.262947082519531
    8. '	def' → logprob: -13.387947082519531
    9. '  ' → logprob: -13.512947082519531
    10. '
' → logprob: -13.637947082519531

Token 97: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08950836956501007
    2. '__' → logprob: -2.589508295059204
    3. 'add' → logprob: -5.589508533477783
    4. ' add' → logprob: -5.839508533477783
    5. '_add' → logprob: -6.464508533477783
    6. 'pow' → logprob: -6.714508533477783
    7. ' ' → logprob: -7.339508533477783
    8. ' ' → logprob: -9.464508056640625
    9. '+' → logprob: -9.589508056640625
    10. ' pow' → logprob: -9.589508056640625

Token 98: 'repr' (ID: 67002)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0028275810182094574
    2. 'eq' → logprob: -6.7528276443481445
    3. 'init' → logprob: -7.2528276443481445
    4. 'mul' → logprob: -7.3778276443481445
    5. 'pow' → logprob: -8.502827644348145
    6. 'mod' → logprob: -10.002827644348145
    7. 'int' → logprob: -10.502827644348145
    8. 'i' → logprob: -11.002827644348145
    9. 'repr' → logprob: -11.377827644348145
    10. ' add' → logprob: -12.002827644348145

Token 99: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0011233105324208736
    2. '__' → logprob: -7.001123428344727
    3. '(self' → logprob: -9.126123428344727
    4. '__(
' → logprob: -9.626123428344727
    5. '__('' → logprob: -11.001123428344727
    6. '(' → logprob: -11.126123428344727
    7. '__((' → logprob: -13.001123428344727
    8. '__("' → logprob: -13.376123428344727
    9. '_(' → logprob: -13.876123428344727
    10. '__(*' → logprob: -14.626123428344727

Token 100: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -14.750000953674316
    3. ' self' → logprob: -15.125000953674316
    4. '(self' → logprob: -16.875
    5. ' ' → logprob: -19.875
    6. 's' → logprob: -20.0
    7. '{' → logprob: -20.25
    8. '   ' → logprob: -20.5
    9. 'Self' → logprob: -20.875
    10. '	self' → logprob: -21.125

Token 101: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20835670828819275
    2. '__(' → logprob: -2.5833566188812256
    3. 'self' → logprob: -2.8333566188812256
    4. ')(' → logprob: -3.5833566188812256
    5. '(' → logprob: -4.333356857299805
    6. ')' → logprob: -5.083356857299805
    7. '__' → logprob: -5.833356857299805
    8. ',' → logprob: -7.708356857299805
    9. '```' → logprob: -7.833356857299805
    10. '       ' → logprob: -7.958356857299805

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04530246555805206
    2. 'return' → logprob: -3.295302391052246
    3. 'self' → logprob: -5.920302391052246
    4. 'f' → logprob: -5.920302391052246
    5. ' return' → logprob: -6.420302391052246
    6. ' f' → logprob: -9.045302391052246
    7. '   ' → logprob: -9.420302391052246
    8. ' self' → logprob: -11.420302391052246
    9. '           ' → logprob: -11.670302391052246
    10. '(self' → logprob: -12.295302391052246

Token 103: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009298531338572502
    2. 'f' → logprob: -5.259298324584961
    3. ' return' → logprob: -5.884298324584961
    4. '       ' → logprob: -6.759298324584961
    5. ' f' → logprob: -9.634298324584961
    6. '   ' → logprob: -10.009298324584961
    7. '           ' → logprob: -14.259298324584961
    8. '	return' → logprob: -14.384298324584961
    9. '```' → logprob: -14.759298324584961
    10. 'Return' → logprob: -14.884298324584961

Token 104: ' str' (ID: 989)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.023297304287552834
    2. ' f' → logprob: -3.7732973098754883
    3. 'str' → logprob: -9.898297309875488
    4. ' str' → logprob: -13.773297309875488
    5. '(f' → logprob: -16.023296356201172
    6. '	f' → logprob: -16.398296356201172
    7. ' ' → logprob: -16.523296356201172
    8. '"' → logprob: -16.648296356201172
    9. ''f' → logprob: -16.648296356201172
    10. 'repr' → logprob: -17.773296356201172

Token 105: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.723973582556937e-05
    2. '(' → logprob: -11.000017166137695
    3. 'self' → logprob: -15.625017166137695
    4. '(s' → logprob: -16.375017166137695
    5. '(int' → logprob: -16.750017166137695
    6. ' (' → logprob: -17.375017166137695
    7. '(object' → logprob: -17.750017166137695
    8. '((' → logprob: -18.125017166137695
    9. ')(' → logprob: -18.125017166137695
    10. '(type' → logprob: -18.125017166137695

Token 106: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.069664333248511e-05
    2. '.' → logprob: -10.875020980834961
    3. ').' → logprob: -13.625020980834961
    4. ' .' → logprob: -14.750020980834961
    5. ')' → logprob: -16.25002098083496
    6. 'x' → logprob: -16.87502098083496
    7. '().' → logprob: -19.50002098083496
    8. '`.' → logprob: -19.75002098083496
    9. ')x' → logprob: -19.87502098083496
    10. 'self' → logprob: -20.25002098083496

Token 107: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.750000953674316
    3. '())' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.125001907348633
    5. ' )' → logprob: -16.625001907348633
    6. ')+' → logprob: -17.125001907348633
    7. '))' → logprob: -17.125001907348633
    8. ')`' → logprob: -17.125001907348633
    9. ')

' → logprob: -17.250001907348633
    10. '()' → logprob: -17.375001907348633

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14658866822719574
    2. '<|end|>' → logprob: -3.0215885639190674
    3. ')' → logprob: -3.2715885639190674
    4. '*' → logprob: -3.8965885639190674
    5. 'def' → logprob: -4.8965888023376465
    6. '+' → logprob: -5.0215888023376465
    7. '<|end|>' → logprob: -5.8965888023376465
    8. '    
' → logprob: -6.0215888023376465
    9. '
' → logprob: -6.0215888023376465
    10. '  ' → logprob: -6.6465888023376465

Token 109: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3541673421859741
    2. '   ' → logprob: -1.2291673421859741
    3. ' def' → logprob: -5.479167461395264
    4. '+' → logprob: -7.354167461395264
    5. '__' → logprob: -7.354167461395264
    6. '	def' → logprob: -9.229166984558105
    7. '+
' → logprob: -9.979166984558105
    8. '    
' → logprob: -10.104166984558105
    9. ' ' → logprob: -10.479166984558105
    10. '(' → logprob: -11.854166984558105

Token 110: ' __' (ID: 2516)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.8301070332527161
    2. ' __' → logprob: -1.0801069736480713
    3. 'add' → logprob: -2.2051069736480713
    4. '_add' → logprob: -2.4551069736480713
    5. ' ' → logprob: -4.08010721206665
    6. '__' → logprob: -4.58010721206665
    7. ' def' → logprob: -8.580106735229492
    8. ' +' → logprob: -8.705106735229492
    9. ' ' → logprob: -8.955106735229492
    10. 'pow' → logprob: -9.080106735229492

Token 111: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0003715662460308522
    2. 'eq' → logprob: -8.000371932983398
    3. 'mul' → logprob: -10.625371932983398
    4. 'int' → logprob: -12.000371932983398
    5. 'pow' → logprob: -12.500371932983398
    6. 'init' → logprob: -13.875371932983398
    7. 'mod' → logprob: -15.000371932983398
    8. 'str' → logprob: -15.625371932983398
    9. 'hash' → logprob: -16.1253719329834
    10. ' add' → logprob: -16.3753719329834

Token 112: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007117166533134878
    2. '__' → logprob: -7.250711917877197
    3. '__('' → logprob: -14.000711441040039
    4. '__(
' → logprob: -14.250711441040039
    5. '__((' → logprob: -15.750711441040039
    6. '__(*' → logprob: -16.12571144104004
    7. '__("' → logprob: -17.50071144104004
    8. '(self' → logprob: -17.75071144104004
    9. '_(' → logprob: -19.50071144104004
    10. '__

' → logprob: -20.37571144104004

Token 113: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2352385965641588e-05
    2. '(self' → logprob: -11.750012397766113
    3. ' self' → logprob: -12.375012397766113
    4. 'other' → logprob: -16.125011444091797
    5. '   ' → logprob: -17.625011444091797
    6. ',' → logprob: -17.875011444091797
    7. ' ' → logprob: -17.875011444091797
    8. ',self' → logprob: -18.625011444091797
    9. ')' → logprob: -18.750011444091797
    10. '_self' → logprob: -18.875011444091797

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001492961309850216
    2. 'self' → logprob: -6.876492977142334
    3. ' ,' → logprob: -7.751492977142334
    4. ',self' → logprob: -10.501492500305176
    5. '_,' → logprob: -14.251492500305176
    6. '__,' → logprob: -14.751492500305176
    7. '   ' → logprob: -15.001492500305176
    8. ',s' → logprob: -15.251492500305176
    9. '(self' → logprob: -15.251492500305176
    10. ' ' → logprob: -15.876492500305176

Token 115: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0015303362160921097
    2. ' other' → logprob: -6.501530170440674
    3. 'self' → logprob: -10.501530647277832
    4. 'Other' → logprob: -15.251530647277832
    5. ' self' → logprob: -16.501529693603516
    6. ' ' → logprob: -16.626529693603516
    7. '(other' → logprob: -17.251529693603516
    8. 'o' → logprob: -17.626529693603516
    9. '_other' → logprob: -18.251529693603516
    10. 'rhs' → logprob: -18.501529693603516

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0039454177021980286
    2. ':' → logprob: -5.753945350646973
    3. '):
' → logprob: -7.628945350646973
    4. 'self' → logprob: -9.128945350646973
    5. '(self' → logprob: -9.253945350646973
    6. ')' → logprob: -10.378945350646973
    7. '       ' → logprob: -11.003945350646973
    8. '():' → logprob: -11.753945350646973
    9. '}:' → logprob: -12.253945350646973
    10. '   ' → logprob: -12.378945350646973

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07002335041761398
    2. ':' → logprob: -2.94502329826355
    3. '):' → logprob: -5.320023536682129
    4. '<|end|>' → logprob: -5.320023536682129
    5. '):
' → logprob: -6.445023536682129
    6. ':
' → logprob: -6.945023536682129
    7. 'self' → logprob: -7.445023536682129
    8. '<|end|>' → logprob: -7.820023536682129
    9. '(self' → logprob: -7.945023536682129
    10. '   ' → logprob: -8.445023536682129

Token 118: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3847384750843048
    2. 'if' (adapté à ' if') → logprob: -2.5097384452819824
    3. 'other' → logprob: -2.6347384452819824
    4. 'result' → logprob: -2.7597384452819824
    5. ' return' → logprob: -3.5097384452819824
    6. 'self' → logprob: -3.7597384452819824
    7. '       ' → logprob: -3.8847384452819824
    8. 'Mod' → logprob: -4.259738445281982
    9. ' if' → logprob: -5.384738445281982
    10. ' other' → logprob: -5.884738445281982

Token 119: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.002228525234386325
    2. 'is' → logprob: -6.252228736877441
    3. 'type' → logprob: -8.752228736877441
    4. ' not' → logprob: -9.502228736877441
    5. 'not' → logprob: -10.252228736877441
    6. ' type' → logprob: -10.377228736877441
    7. ' hasattr' → logprob: -15.752228736877441
    8. 'self' → logprob: -16.127227783203125
    9. ' ' → logprob: -16.127227783203125
    10. '(is' → logprob: -16.252227783203125

Token 120: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -9.729906196298543e-06
    2. 'other' → logprob: -11.750009536743164
    3. ' other' → logprob: -13.250009536743164
    4. '(self' → logprob: -17.375009536743164
    5. 'Other' → logprob: -18.625009536743164
    6. '(' → logprob: -18.875009536743164
    7. ' (' → logprob: -19.625009536743164
    8. '_other' → logprob: -22.625009536743164
    9. '.other' → logprob: -23.250009536743164
    10. 'OTHER' → logprob: -23.875009536743164

Token 121: ',' (ID: 11)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.03492513298988342
    2. '(self' → logprob: -4.2849249839782715
    3. '(other' → logprob: -4.5349249839782715
    4. ',' → logprob: -4.7849249839782715
    5. '(' → logprob: -6.6599249839782715
    6. '(int' → logprob: -9.15992546081543
    7. ' (' → logprob: -10.03492546081543
    8. 'self' → logprob: -12.15992546081543
    9. ' ,' → logprob: -12.28492546081543
    10. '(Module' → logprob: -12.65992546081543

Token 122: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0005567280459217727
    2. ' Mod' → logprob: -7.500556945800781
    3. '(Mod' → logprob: -12.875556945800781
    4. 'int' → logprob: -13.625556945800781
    5. ' ' → logprob: -17.37555694580078
    6. 'Modulo' → logprob: -17.87555694580078
    7. ' int' → logprob: -19.25055694580078
    8. '_Mod' → logprob: -19.37555694580078
    9. 'MOD' → logprob: -20.25055694580078
    10. '   ' → logprob: -20.37555694580078

Token 123: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.0280383548888494e-06
    2. 'int' → logprob: -14.125000953674316
    3. ' Int' → logprob: -15.375000953674316
    4. '_Int' → logprob: -18.000001907348633
    5. 'Integer' → logprob: -18.250001907348633
    6. '[Int' → logprob: -18.375001907348633
    7. '_int' → logprob: -18.500001907348633
    8. '<Int' → logprob: -18.875001907348633
    9. '.Int' → logprob: -19.125001907348633
    10. ')' → logprob: -19.500001907348633

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12693314254283905
    2. '):
' → logprob: -2.1269330978393555
    3. ' ):' → logprob: -13.251933097839355
    4. ')' → logprob: -13.626933097839355
    5. '):
' → logprob: -13.876933097839355
    6. '):

' → logprob: -14.001933097839355
    7. ':' → logprob: -15.876933097839355
    8. ' ):
' → logprob: -16.501934051513672
    9. '}:' → logprob: -17.751934051513672
    10. '   ' → logprob: -18.501934051513672

Token 125: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6064756512641907
    2. '           ' → logprob: -0.8564756512641907
    3. ':
' → logprob: -3.731475591659546
    4. ':return' → logprob: -5.606475830078125
    5. '+' → logprob: -6.856475830078125
    6. '):' → logprob: -7.856475830078125
    7. '):
' → logprob: -8.731475830078125
    8. ' :' → logprob: -8.856475830078125
    9. '	       ' → logprob: -9.106475830078125
    10. 'return' → logprob: -9.106475830078125

Token 126: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00816771574318409
    2. 'result' → logprob: -5.133167743682861
    3. ' return' → logprob: -6.383167743682861
    4. '       ' → logprob: -8.383167266845703
    5. 'other' → logprob: -9.133167266845703
    6. '           ' → logprob: -9.883167266845703
    7. 'self' → logprob: -10.008167266845703
    8. 'new' → logprob: -10.508167266845703
    9. 'x' → logprob: -10.633167266845703
    10. 'res' → logprob: -10.633167266845703

Token 127: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0024764856789261103
    2. ' Mod' → logprob: -6.002476692199707
    3. '(Mod' → logprob: -14.377476692199707
    4. '       ' → logprob: -15.877476692199707
    5. '_Mod' → logprob: -17.25247573852539
    6. '   ' → logprob: -17.50247573852539
    7. 'self' → logprob: -18.00247573852539
    8. ' ' → logprob: -18.25247573852539
    9. 'MOD' → logprob: -18.50247573852539
    10. '_mod' → logprob: -18.75247573852539

Token 128: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -14.75
    3. ' Int' → logprob: -17.75
    4. '	Int' → logprob: -19.5
    5. '[Int' → logprob: -19.625
    6. '(Int' → logprob: -20.0
    7. 'In' → logprob: -21.25
    8. '<Int' → logprob: -21.25
    9. '   ' → logprob: -21.25
    10. '_Int' → logprob: -21.625

Token 129: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006715967319905758
    2. '((' → logprob: -5.006715774536133
    3. '(' → logprob: -14.381715774536133
    4. 'self' → logprob: -16.506715774536133
    5. ' (' → logprob: -17.631715774536133
    6. '(this' → logprob: -17.756715774536133
    7. '(
' → logprob: -18.631715774536133
    8. '```' → logprob: -19.756715774536133
    9. '[self' → logprob: -20.756715774536133
    10. '(((' → logprob: -21.256715774536133

Token 130: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0004848922253586352
    2. '.' → logprob: -7.750484943389893
    3. 'x' → logprob: -9.875484466552734
    4. ' .' → logprob: -13.625484466552734
    5. '(x' → logprob: -14.000484466552734
    6. ').' → logprob: -15.250484466552734
    7. '(' → logprob: -15.750484466552734
    8. '```' → logprob: -16.625484466552734
    9. ' ' → logprob: -16.875484466552734
    10. ' x' → logprob: -17.000484466552734

Token 131: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0619683600962162
    2. ' +' → logprob: -2.8119683265686035
    3. '+self' → logprob: -15.686968803405762
    4. '(other' → logprob: -15.936968803405762
    5. '+
' → logprob: -16.186967849731445
    6. 'other' → logprob: -16.561967849731445
    7. '+(' → logprob: -16.686967849731445
    8. '＋' → logprob: -17.061967849731445
    9. ' ' → logprob: -17.311967849731445
    10. '+x' → logprob: -17.686967849731445

Token 132: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.038042064756155014
    2. ' other' → logprob: -3.2880420684814453
    3. '(other' → logprob: -14.413042068481445
    4. '.other' → logprob: -17.038042068481445
    5. 'Other' → logprob: -17.663042068481445
    6. '_other' → logprob: -18.413042068481445
    7. ' ' → logprob: -19.788042068481445
    8. '其他' → logprob: -21.038042068481445
    9. 'OTHER' → logprob: -21.163042068481445
    10. 'othe' → logprob: -21.913042068481445

Token 133: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.02055543102324009
    2. '.' → logprob: -3.8955554962158203
    3. ').' → logprob: -11.77055549621582
    4. ' .' → logprob: -12.64555549621582
    5. 'x' → logprob: -14.27055549621582
    6. ' ' → logprob: -14.89555549621582
    7. ')' → logprob: -15.02055549621582
    8. '`.' → logprob: -15.52055549621582
    9. '.
' → logprob: -15.89555549621582
    10. '.

' → logprob: -16.02055549621582

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.398067828034982e-05
    2. ')
' → logprob: -9.75007438659668
    3. ' )' → logprob: -11.12507438659668
    4. '<|end|>' → logprob: -15.12507438659668
    5. '+' → logprob: -16.25007438659668
    6. ')return' → logprob: -16.50007438659668
    7. '),' → logprob: -16.50007438659668
    8. ')

' → logprob: -16.75007438659668
    9. '   ' → logprob: -16.75007438659668
    10. '       ' → logprob: -17.62507438659668

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003616585396230221
    2. '<|end|>' → logprob: -6.253616809844971
    3. ')' → logprob: -6.753616809844971
    4. '
' → logprob: -8.503616333007812
    5. ')
' → logprob: -10.128616333007812
    6. '        
' → logprob: -10.128616333007812
    7. '<|end|>' → logprob: -10.253616333007812
    8. '+' → logprob: -10.253616333007812
    9. ' else' → logprob: -10.378616333007812
    10. '   ' → logprob: -10.753616333007812

Token 136: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6478757262229919
    2. 'else' → logprob: -1.1478757858276367
    3. 'return' (adapté à ' return') → logprob: -1.8978757858276367
    4. 'elif' → logprob: -4.897875785827637
    5. ' else' → logprob: -6.397875785827637
    6. 'if' → logprob: -8.022875785827637
    7. '+' → logprob: -9.147875785827637
    8. ' return' → logprob: -10.022875785827637
    9. ' elif' → logprob: -11.647875785827637
    10. '   ' → logprob: -11.897875785827637

Token 137: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00031520487391389906
    2. ' Mod' → logprob: -8.12531566619873
    3. '(Mod' → logprob: -11.87531566619873
    4. 'self' → logprob: -12.00031566619873
    5. 'Not' → logprob: -12.12531566619873
    6. ' ' → logprob: -16.000314712524414
    7. '_Mod' → logprob: -16.125314712524414
    8. '   ' → logprob: -16.250314712524414
    9. 'Mo' → logprob: -16.750314712524414
    10. '  ' → logprob: -17.375314712524414

Token 138: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -8.180258191714529e-06
    2. 'int' → logprob: -11.750008583068848
    3. '(Int' → logprob: -16.50000762939453
    4. '(int' → logprob: -16.62500762939453
    5. ' Int' → logprob: -17.00000762939453
    6. '[Int' → logprob: -18.00000762939453
    7. 'INT' → logprob: -18.87500762939453
    8. '_int' → logprob: -19.00000762939453
    9. ' int' → logprob: -19.12500762939453
    10. '(' → logprob: -19.50000762939453

Token 139: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.375011444091797
    3. '(other' → logprob: -16.250011444091797
    4. 'self' → logprob: -17.500011444091797
    5. '((' → logprob: -19.750011444091797
    6. ' (' → logprob: -20.250011444091797
    7. '(
' → logprob: -20.500011444091797
    8. '(int' → logprob: -21.250011444091797
    9. '(this' → logprob: -21.500011444091797
    10. '(sel' → logprob: -21.875011444091797

Token 140: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.546478935983032e-05
    2. '.' → logprob: -10.625025749206543
    3. 'x' → logprob: -14.250025749206543
    4. ' .' → logprob: -15.375025749206543
    5. 'self' → logprob: -15.500025749206543
    6. '```' → logprob: -18.875024795532227
    7. ')' → logprob: -19.000024795532227
    8. ').' → logprob: -19.125024795532227
    9. '(x' → logprob: -19.375024795532227
    10. ',' → logprob: -19.500024795532227

Token 141: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0380416102707386
    2. '+' → logprob: -3.288041591644287
    3. '+self' → logprob: -16.288042068481445
    4. ' plus' → logprob: -17.288042068481445
    5. ' ' → logprob: -17.288042068481445
    6. '+x' → logprob: -17.413042068481445
    7. ')' → logprob: -17.663042068481445
    8. ' +
' → logprob: -18.288042068481445
    9. ' ' → logprob: -18.788042068481445
    10. '＋' → logprob: -19.163042068481445

Token 142: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.003178071230649948
    2. ' other' → logprob: -5.753178119659424
    3. 'int' → logprob: -15.003177642822266
    4. '(other' → logprob: -16.753177642822266
    5. ' int' → logprob: -19.753177642822266
    6. 'Other' → logprob: -20.253177642822266
    7. 'othe' → logprob: -20.378177642822266
    8. '.other' → logprob: -20.753177642822266
    9. '_other' → logprob: -20.878177642822266
    10. ' ' → logprob: -21.128177642822266

Token 143: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013452880375552922
    2. ' )' → logprob: -9.000134468078613
    3. '<|end|>' → logprob: -11.500134468078613
    4. ')x' → logprob: -14.625134468078613
    5. ')
' → logprob: -15.250134468078613
    6. '<|end|>' → logprob: -16.62513542175293
    7. ')return' → logprob: -16.75013542175293
    8. ')

' → logprob: -17.37513542175293
    9. '))' → logprob: -17.50013542175293
    10. ')#' → logprob: -17.75013542175293

Token 144: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12693093717098236
    2. '__' → logprob: -2.1269309520721436
    3. ' _' → logprob: -14.251931190490723
    4. '.__' → logprob: -14.626931190490723
    5. ' ' → logprob: -14.876931190490723
    6. ' ' → logprob: -15.126931190490723
    7. ' def' → logprob: -15.126931190490723
    8. '_add' → logprob: -15.501931190490723
    9. 'def' → logprob: -15.626931190490723
    10. '___' → logprob: -15.626931190490723

Token 147: 'r' (ID: 81)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.06214950978755951
    2. 'r' → logprob: -2.8121495246887207
    3. 'i' → logprob: -9.062149047851562
    4. 'mul' → logprob: -9.687149047851562
    5. 'add' → logprob: -13.812149047851562
    6. 'eq' → logprob: -13.937149047851562
    7. 'neg' → logprob: -13.937149047851562
    8. ' sub' → logprob: -14.812149047851562
    9. 'Sub' → logprob: -16.187149047851562
    10. ' r' → logprob: -16.187149047851562

Token 148: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.05676465854048729
    2. '__' → logprob: -3.431764602661133
    3. '_add' → logprob: -3.806764602661133
    4. '+' → logprob: -7.556764602661133
    5. 'shift' → logprob: -10.681764602661133
    6. 'e' → logprob: -11.181764602661133
    7. '(add' → logprob: -11.431764602661133
    8. '_' → logprob: -11.806764602661133
    9. 'Add' → logprob: -11.931764602661133
    10. '	add' → logprob: -12.181764602661133

Token 149: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006748647429049015
    2. '__' → logprob: -5.006748676300049
    3. '__((' → logprob: -10.88174819946289
    4. '__('' → logprob: -11.50674819946289
    5. '__(
' → logprob: -12.75674819946289
    6. '__(*' → logprob: -14.13174819946289
    7. '__("' → logprob: -14.63174819946289
    8. '(' → logprob: -15.25674819946289
    9. '__.__' → logprob: -17.00674819946289
    10. '___' → logprob: -17.25674819946289

Token 150: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.77627644513268e-06
    2. '(self' → logprob: -12.375008583068848
    3. ' self' → logprob: -12.875008583068848
    4. 'other' → logprob: -13.250008583068848
    5. ')' → logprob: -15.500008583068848
    6. ',' → logprob: -18.625009536743164
    7. ',self' → logprob: -19.000009536743164
    8. 'def' → logprob: -19.500009536743164
    9. 'Other' → logprob: -20.000009536743164
    10. '   ' → logprob: -20.250009536743164

Token 151: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04886553809046745
    2. '__' → logprob: -3.048865556716919
    3. '(' → logprob: -8.54886531829834
    4. '__(
' → logprob: -10.54886531829834
    5. '__('' → logprob: -10.67386531829834
    6. '__((' → logprob: -10.79886531829834
    7. '__(*' → logprob: -11.92386531829834
    8. '__("' → logprob: -12.79886531829834
    9. '__)' → logprob: -13.29886531829834
    10. '(self' → logprob: -13.67386531829834

Token 152: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5502468943595886
    2. 'Mod' → logprob: -1.3002469539642334
    3. 'other' → logprob: -1.9252469539642334
    4. 'Other' → logprob: -6.050246715545654
    5. ' other' → logprob: -6.425246715545654
    6. ' Mod' → logprob: -7.550246715545654
    7. ' self' → logprob: -8.550247192382812
    8. '(Mod' → logprob: -9.175247192382812
    9. ')' → logprob: -10.050247192382812
    10. '(self' → logprob: -11.300247192382812

Token 153: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04931352287530899
    2. '):' → logprob: -3.549313545227051
    3. ',' → logprob: -5.174313545227051
    4. '):
' → logprob: -5.424313545227051
    5. ')(' → logprob: -5.799313545227051
    6. 'self' → logprob: -5.924313545227051
    7. ')' → logprob: -6.049313545227051
    8. '(' → logprob: -7.299313545227051
    9. ' (' → logprob: -7.924313545227051
    10. '   ' → logprob: -9.29931354522705

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05218404158949852
    2. '(self' → logprob: -3.1771841049194336
    3. '(' → logprob: -5.052184104919434
    4. '   ' → logprob: -7.302184104919434
    5. 'self' → logprob: -7.427184104919434
    6. ' self' → logprob: -8.052184104919434
    7. ' return' → logprob: -8.427184104919434
    8. '        ' → logprob: -8.677184104919434
    9. '(
' → logprob: -8.802184104919434
    10. 'return' → logprob: -8.927184104919434

Token 155: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5021255016326904
    2. 'def' → logprob: -1.2521255016326904
    3. '       ' → logprob: -2.8771255016326904
    4. ' return' → logprob: -3.1271255016326904
    5. '(self' → logprob: -5.8771257400512695
    6. ' def' → logprob: -5.8771257400512695
    7. 'self' → logprob: -6.0021257400512695
    8. '   ' → logprob: -8.00212574005127
    9. '(' → logprob: -8.87712574005127
    10. ' self' → logprob: -10.25212574005127

Token 156: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03219624236226082
    2. ' self' → logprob: -3.532196283340454
    3. 'Mod' → logprob: -6.032196044921875
    4. ' Mod' → logprob: -10.657196044921875
    5. '(self' → logprob: -10.907196044921875
    6. '(Mod' → logprob: -14.907196044921875
    7. '__' → logprob: -15.032196044921875
    8. '	self' → logprob: -17.407196044921875
    9. '   ' → logprob: -17.407196044921875
    10. '       ' → logprob: -17.532196044921875

Token 157: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4219494163990021
    2. '.__' → logprob: -1.2969493865966797
    3. ' +' → logprob: -2.6719493865966797
    4. '__' → logprob: -7.04694938659668
    5. ')' → logprob: -7.67194938659668
    6. ').__' → logprob: -8.42194938659668
    7. '().__' → logprob: -9.54694938659668
    8. '+x' → logprob: -10.17194938659668
    9. '.+' → logprob: -10.67194938659668
    10. '._' → logprob: -11.17194938659668

Token 158: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -4.842555426876061e-06
    2. ' other' → logprob: -12.250004768371582
    3. '(other' → logprob: -18.6250057220459
    4. 'Other' → logprob: -20.2500057220459
    5. '.other' → logprob: -22.0000057220459
    6. '_other' → logprob: -23.2500057220459
    7. 'othe' → logprob: -24.0000057220459
    8. 'OTHER' → logprob: -24.7500057220459
    9. '-other' → logprob: -25.2500057220459
    10. '其他' → logprob: -26.3750057220459

Token 159: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3492756187915802
    2. '<|end|>' → logprob: -1.3492755889892578
    3. '
' → logprob: -4.349275588989258
    4. '<|end|>' → logprob: -4.974275588989258
    5. '\n' → logprob: -5.599275588989258
    6. ')' → logprob: -5.849275588989258
    7. '    
' → logprob: -6.099275588989258
    8. '

' → logprob: -6.224275588989258
    9. 'def' → logprob: -6.724275588989258
    10. '\' → logprob: -7.349275588989258

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00252917199395597
    2. '<|end|>' → logprob: -7.002529144287109
    3. 'def' → logprob: -7.377529144287109
    4. '    
' → logprob: -7.627529144287109
    5. '
' → logprob: -8.12752914428711
    6. '<|end|>' → logprob: -9.87752914428711
    7. '

' → logprob: -10.25252914428711
    8. '  
' → logprob: -10.50252914428711
    9. ')' → logprob: -11.37752914428711
    10. '```' → logprob: -11.37752914428711

Token 161: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03517099469900131
    2. 'def' (adapté à ' def') → logprob: -3.4101710319519043
    3. '<|end|>' → logprob: -7.535171031951904
    4. '  ' → logprob: -8.410170555114746
    5. ' ' → logprob: -8.535170555114746
    6. '```' → logprob: -8.785170555114746
    7. ')' → logprob: -9.160170555114746
    8. '...' → logprob: -9.785170555114746
    9. '    
' → logprob: -9.785170555114746
    10. ' def' → logprob: -9.785170555114746

Token 162: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.47411003708839417
    2. '__' → logprob: -0.9741100072860718
    3. ' def' → logprob: -11.349109649658203
    4. '.__' → logprob: -11.599109649658203
    5. 'def' → logprob: -11.724109649658203
    6. '(__' → logprob: -13.349109649658203
    7. ' (__' → logprob: -14.599109649658203
    8. 'sub' → logprob: -14.849109649658203
    9. '__(' → logprob: -14.849109649658203
    10. '/__' → logprob: -15.474109649658203

Token 163: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.00012356207298580557
    2. 'mul' → logprob: -9.000123977661133
    3. 'neg' → logprob: -17.125123977661133
    4. ' sub' → logprob: -18.250123977661133
    5. 'Sub' → logprob: -18.250123977661133
    6. 'i' → logprob: -18.875123977661133
    7. 'eq' → logprob: -19.125123977661133
    8. '_sub' → logprob: -19.125123977661133
    9. 'mod' → logprob: -19.500123977661133
    10. '(sub' → logprob: -20.000123977661133

Token 164: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006778842769563198
    2. '__' → logprob: -5.006778717041016
    3. '__(
' → logprob: -10.381778717041016
    4. '__((' → logprob: -10.756778717041016
    5. '__('' → logprob: -11.756778717041016
    6. '__(*' → logprob: -13.506778717041016
    7. '(' → logprob: -14.256778717041016
    8. '__("' → logprob: -14.256778717041016
    9. '(self' → logprob: -15.006778717041016
    10. '__.__' → logprob: -16.381778717041016

Token 165: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4378848391061183e-05
    2. '(self' → logprob: -11.375014305114746
    3. ' self' → logprob: -12.750014305114746
    4. 'other' → logprob: -17.875015258789062
    5. '   ' → logprob: -18.125015258789062
    6. 'def' → logprob: -19.000015258789062
    7. '(' → logprob: -19.125015258789062
    8. '
' → logprob: -19.375015258789062
    9. ',' → logprob: -19.625015258789062
    10. '       ' → logprob: -20.250015258789062

Token 166: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11267054080963135
    2. ',' → logprob: -2.487670421600342
    3. '__(' → logprob: -3.862670421600342
    4. '(' → logprob: -6.612670421600342
    5. 'self' → logprob: -7.112670421600342
    6. ' (' → logprob: -8.7376708984375
    7. ')(' → logprob: -9.9876708984375
    8. ',self' → logprob: -10.7376708984375
    9. ')' → logprob: -11.3626708984375
    10. '       ' → logprob: -11.4876708984375

Token 167: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.16040538251399994
    2. ' other' → logprob: -1.9104053974151611
    3. 'self' → logprob: -8.660405158996582
    4. 'Other' → logprob: -12.035405158996582
    5. ' self' → logprob: -13.285405158996582
    6. '(other' → logprob: -15.160405158996582
    7. '_other' → logprob: -16.7854061126709
    8. '.other' → logprob: -18.1604061126709
    9. '其他' → logprob: -19.5354061126709
    10. 'OTHER' → logprob: -20.0354061126709

Token 168: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.013574161566793919
    2. '       ' → logprob: -5.013574123382568
    3. 'self' → logprob: -5.138574123382568
    4. '):
' → logprob: -7.638574123382568
    5. '(' → logprob: -8.888574600219727
    6. '   ' → logprob: -9.013574600219727
    7. '):' → logprob: -9.388574600219727
    8. ',' → logprob: -9.763574600219727
    9. ' self' → logprob: -10.513574600219727
    10. ' (' → logprob: -11.138574600219727

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015425959136337042
    2. ' if' → logprob: -7.251542568206787
    3. '   ' → logprob: -7.501542568206787
    4. 'if' → logprob: -9.001543045043945
    5. '(' → logprob: -9.126543045043945
    6. ',' → logprob: -11.126543045043945
    7. ':' → logprob: -11.501543045043945
    8. '           ' → logprob: -11.876543045043945
    9. ')' → logprob: -12.626543045043945
    10. '<|end|>' → logprob: -13.251543045043945

Token 170: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03224506974220276
    2. ' if' → logprob: -4.15724515914917
    3. '       ' → logprob: -4.15724515914917
    4. '   ' → logprob: -7.78224515914917
    5. '	if' → logprob: -12.907244682312012
    6. 'If' → logprob: -13.532244682312012
    7. '<|end|>' → logprob: -13.657244682312012
    8. ' ' → logprob: -13.782244682312012
    9. '           ' → logprob: -13.782244682312012
    10. '        ' → logprob: -14.032244682312012

Token 171: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.2519334554672241
    2. ' isinstance' → logprob: -1.5019334554672241
    3. '(is' → logprob: -12.376933097839355
    4. '   ' → logprob: -17.126934051513672
    5. '.is' → logprob: -18.001934051513672
    6. 'not' → logprob: -18.001934051513672
    7. 'instance' → logprob: -18.126934051513672
    8. ' is' → logprob: -18.251934051513672
    9. ' ' → logprob: -18.876934051513672
    10. ' not' → logprob: -19.251934051513672

Token 172: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0007125511183403432
    2. 'other' → logprob: -7.2507123947143555
    3. ' other' → logprob: -12.875712394714355
    4. 'Other' → logprob: -18.000713348388672
    5. '.other' → logprob: -21.000713348388672
    6. '_other' → logprob: -22.250713348388672
    7. 'OTHER' → logprob: -22.750713348388672
    8. '其他' → logprob: -23.250713348388672
    9. '-other' → logprob: -23.750713348388672
    10. ' andere' → logprob: -24.625713348388672

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3451433409936726e-05
    2. '(other' → logprob: -10.500033378601074
    3. 'other' → logprob: -12.750033378601074
    4. 'Mod' → logprob: -13.500033378601074
    5. ' ,' → logprob: -14.250033378601074
    6. 'self' → logprob: -15.000033378601074
    7. '(Mod' → logprob: -15.250033378601074
    8. '(' → logprob: -15.375033378601074
    9. ' other' → logprob: -16.50003433227539
    10. ',
' → logprob: -17.37503433227539

Token 174: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0001940040965564549
    2. ' Mod' → logprob: -9.12519359588623
    3. '(Mod' → logprob: -9.37519359588623
    4. 'Modulo' → logprob: -16.000194549560547
    5. 'MOD' → logprob: -17.500194549560547
    6. '_Mod' → logprob: -17.500194549560547
    7. '.Mod' → logprob: -17.750194549560547
    8. '(' → logprob: -17.875194549560547
    9. 'mod' → logprob: -18.125194549560547
    10. 'Modal' → logprob: -18.500194549560547

Token 175: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -6.988221684878226e-06
    2. 'int' → logprob: -11.875006675720215
    3. 'INT' → logprob: -17.50000762939453
    4. 'In' → logprob: -17.62500762939453
    5. ' Int' → logprob: -17.87500762939453
    6. 'It' → logprob: -19.12500762939453
    7. '(Int' → logprob: -19.25000762939453
    8. '```' → logprob: -19.25000762939453
    9. '	Int' → logprob: -19.37500762939453
    10. 'I' → logprob: -19.50000762939453

Token 176: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004081724211573601
    2. '):' → logprob: -5.504081726074219
    3. '       ' → logprob: -13.254081726074219
    4. '):
' → logprob: -14.254081726074219
    5. '):

' → logprob: -14.879081726074219
    6. ':
' → logprob: -15.254081726074219
    7. ')' → logprob: -16.25408172607422
    8. ':' → logprob: -16.75408172607422
    9. '           ' → logprob: -16.87908172607422
    10. ' ):
' → logprob: -17.12908172607422

Token 177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007885080762207508
    2. 'return' → logprob: -4.882884979248047
    3. '       ' → logprob: -8.632884979248047
    4. ' return' → logprob: -9.382884979248047
    5. ':return' → logprob: -11.757884979248047
    6. ':' → logprob: -13.132884979248047
    7. '	       ' → logprob: -13.882884979248047
    8. '               ' → logprob: -14.007884979248047
    9. '#' → logprob: -14.382884979248047
    10. ':
' → logprob: -14.507884979248047

Token 178: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00021450345229823142
    2. ' return' → logprob: -8.500214576721191
    3. '           ' → logprob: -12.125214576721191
    4. '       ' → logprob: -12.125214576721191
    5. '   ' → logprob: -16.875213623046875
    6. '	return' → logprob: -17.000213623046875
    7. '```' → logprob: -18.125213623046875
    8. ':return' → logprob: -18.750213623046875
    9. 'eturn' → logprob: -19.125213623046875
    10. 'result' → logprob: -19.750213623046875

Token 179: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0008684676722623408
    2. ' Mod' → logprob: -7.250868320465088
    3. '(Mod' → logprob: -8.750868797302246
    4. ' ' → logprob: -16.50086784362793
    5. '   ' → logprob: -17.00086784362793
    6. '_mod' → logprob: -17.87586784362793
    7. '  ' → logprob: -17.87586784362793
    8. 'Mo' → logprob: -18.12586784362793
    9. '_Mod' → logprob: -18.37586784362793
    10. 'Modulo' → logprob: -18.37586784362793

Token 180: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.2352385965641588e-05
    2. 'int' → logprob: -12.000012397766113
    3. 'Mod' → logprob: -12.250012397766113
    4. '(Mod' → logprob: -13.875012397766113
    5. ' Int' → logprob: -15.750012397766113
    6. '(Int' → logprob: -16.250011444091797
    7. 'INT' → logprob: -16.625011444091797
    8. '	Int' → logprob: -17.000011444091797
    9. 'Ints' → logprob: -17.250011444091797
    10. 'In' → logprob: -17.500011444091797

Token 181: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005535095697268844
    2. 'self' → logprob: -7.500553607940674
    3. '(' → logprob: -15.375553131103516
    4. ' self' → logprob: -15.625553131103516
    5. '[self' → logprob: -16.375553131103516
    6. '(
' → logprob: -18.500553131103516
    7. ' (' → logprob: -18.750553131103516
    8. ',self' → logprob: -18.750553131103516
    9. '	self' → logprob: -19.000553131103516
    10. '=self' → logprob: -19.500553131103516

Token 182: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.1054253011243418e-05
    2. '.' → logprob: -10.875020980834961
    3. 'x' → logprob: -13.250020980834961
    4. ' .' → logprob: -15.750020980834961
    5. '(x' → logprob: -17.12502098083496
    6. '```' → logprob: -17.62502098083496
    7. '(' → logprob: -18.50002098083496
    8. ' -' → logprob: -18.75002098083496
    9. ' ' → logprob: -18.75002098083496
    10. '-' → logprob: -18.87502098083496

Token 183: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048589304089546204
    2. '-' → logprob: -3.0485892295837402
    3. '-self' → logprob: -13.673589706420898
    4. ' ' → logprob: -14.548589706420898
    5. 'self' → logprob: -16.5485897064209
    6. ' ' → logprob: -17.0485897064209
    7. ' self' → logprob: -17.4235897064209
    8. '-x' → logprob: -17.9235897064209
    9. ')' → logprob: -18.1735897064209
    10. '(self' → logprob: -18.4235897064209

Token 184: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.20141607522964478
    2. ' other' → logprob: -1.701416015625
    3. '(other' → logprob: -13.201416015625
    4. 'Other' → logprob: -14.076416015625
    5. '.other' → logprob: -16.076416015625
    6. '_other' → logprob: -17.326416015625
    7. '其他' → logprob: -19.451416015625
    8. 'OTHER' → logprob: -20.451416015625
    9. ' Other' → logprob: -20.451416015625
    10. ' andere' → logprob: -21.451416015625

Token 185: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00011486753646750003
    2. 'other' → logprob: -10.000114440917969
    3. '.other' → logprob: -10.375114440917969
    4. '.' → logprob: -10.625114440917969
    5. ' .' → logprob: -12.500114440917969
    6. 'x' → logprob: -12.625114440917969
    7. '(other' → logprob: -13.000114440917969
    8. 'Other' → logprob: -13.125114440917969
    9. ').' → logprob: -14.375114440917969
    10. ')' → logprob: -14.375114440917969

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011171255260705948
    2. ')
' → logprob: -4.511171340942383
    3. '       ' → logprob: -9.011171340942383
    4. ')return' → logprob: -14.386171340942383
    5. ' )' → logprob: -15.011171340942383
    6. '   ' → logprob: -15.011171340942383
    7. ')
' → logprob: -15.886171340942383
    8. '+' → logprob: -17.636171340942383
    9. ' )
' → logprob: -17.886171340942383
    10. ')`
' → logprob: -18.011171340942383

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043637193739414215
    2. '<|end|>' → logprob: -3.793637275695801
    3. ')' → logprob: -3.918637275695801
    4. '<|end|>' → logprob: -8.7936372756958
    5. ')return' → logprob: -10.5436372756958
    6. '	' → logprob: -11.1686372756958
    7. '[' → logprob: -11.2936372756958
    8. '(' → logprob: -11.4186372756958
    9. '),' → logprob: -11.6686372756958
    10. '   ' → logprob: -11.7936372756958

Token 188: ' else' (ID: 1203)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10037994384765625
    2. 'return' → logprob: -2.3503799438476562
    3. '       ' → logprob: -9.100379943847656
    4. ' Mod' → logprob: -9.850379943847656
    5. 'Mod' → logprob: -11.850379943847656
    6. 'Return' → logprob: -14.350379943847656
    7. '   ' → logprob: -14.725379943847656
    8. '(Mod' → logprob: -15.600379943847656
    9. '
' → logprob: -15.850379943847656
    10. '(return' → logprob: -15.975379943847656

Token 189: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22851498425006866
    2. ' return' → logprob: -1.7285150289535522
    3. 'return' → logprob: -4.728515148162842
    4. ':
' → logprob: -4.853515148162842
    5. ':' → logprob: -5.603515148162842
    6. '       ' → logprob: -5.978515148162842
    7. '   ' → logprob: -5.978515148162842
    8. ':return' → logprob: -6.978515148162842
    9. ' Mod' → logprob: -8.603514671325684
    10. '          ' → logprob: -9.728514671325684

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28334468603134155
    2. ' return' → logprob: -1.6583447456359863
    3. 'return' → logprob: -2.9083447456359863
    4. '       ' → logprob: -7.033344745635986
    5. ' Mod' → logprob: -7.283344745635986
    6. 'Mod' → logprob: -9.658344268798828
    7. '   ' → logprob: -10.033344268798828
    8. '          ' → logprob: -11.283344268798828
    9. '               ' → logprob: -11.408344268798828
    10. '        ' → logprob: -12.283344268798828

Token 191: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00044783088378608227
    2. ' return' → logprob: -7.750447750091553
    3. '       ' → logprob: -11.125448226928711
    4. '           ' → logprob: -13.625448226928711
    5. '   ' → logprob: -13.875448226928711
    6. '	return' → logprob: -15.875448226928711
    7. 'Mod' → logprob: -18.00044822692871
    8. 'eturn' → logprob: -18.25044822692871
    9. '
' → logprob: -18.37544822692871
    10. ':return' → logprob: -18.87544822692871

Token 192: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.014178323559463024
    2. ' Mod' → logprob: -4.264178276062012
    3. '(Mod' → logprob: -11.639178276062012
    4. 'self' → logprob: -12.264178276062012
    5. '   ' → logprob: -14.639178276062012
    6. ' ' → logprob: -15.139178276062012
    7. ' self' → logprob: -15.514178276062012
    8. '  ' → logprob: -16.014179229736328
    9. '_mod' → logprob: -16.389179229736328
    10. '       ' → logprob: -16.764179229736328

Token 193: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.981667537620524e-06
    2. 'int' → logprob: -13.500001907348633
    3. 'Mod' → logprob: -14.625001907348633
    4. '(Int' → logprob: -16.500001907348633
    5. ' Int' → logprob: -18.375001907348633
    6. '(int' → logprob: -18.875001907348633
    7. '[Int' → logprob: -19.000001907348633
    8. '_int' → logprob: -19.625001907348633
    9. 'In' → logprob: -19.625001907348633
    10. 'INT' → logprob: -19.750001907348633

Token 194: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.625
    3. 'self' → logprob: -17.75
    4. '(
' → logprob: -20.25
    5. ' (' → logprob: -21.0
    6. '[self' → logprob: -21.375
    7. '(this' → logprob: -22.25
    8. ',self' → logprob: -23.125
    9. '   ' → logprob: -23.375
    10. '((' → logprob: -23.375

Token 195: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.333223139634356e-05
    2. '.' → logprob: -10.625033378601074
    3. '-' → logprob: -12.125033378601074
    4. 'self' → logprob: -13.625033378601074
    5. 'x' → logprob: -14.000033378601074
    6. ' .' → logprob: -14.000033378601074
    7. ' -' → logprob: -14.625033378601074
    8. '(x' → logprob: -16.750032424926758
    9. '```' → logprob: -17.375032424926758
    10. '-x' → logprob: -17.500032424926758

Token 196: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011048642918467522
    2. '-' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.886048316955566
    4. '-sub' → logprob: -15.261048316955566
    5. '-self' → logprob: -16.011049270629883
    6. ' ' → logprob: -17.136049270629883
    7. ')' → logprob: -18.011049270629883
    8. '-code' → logprob: -18.761049270629883
    9. '[' → logprob: -19.011049270629883
    10. '−' → logprob: -19.636049270629883

Token 197: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00020354038861114532
    2. ' other' → logprob: -8.500203132629395
    3. '(other' → logprob: -18.37520408630371
    4. 'int' → logprob: -19.37520408630371
    5. 'Other' → logprob: -21.00020408630371
    6. '       ' → logprob: -21.00020408630371
    7. '.other' → logprob: -22.12520408630371
    8. '   ' → logprob: -22.62520408630371
    9. '_other' → logprob: -22.62520408630371
    10. '           ' → logprob: -22.75020408630371

Token 198: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010902655776590109
    2. '.x' → logprob: -9.62510871887207
    3. '<|end|>' → logprob: -10.25010871887207
    4. ')x' → logprob: -12.25010871887207
    5. 'x' → logprob: -14.12510871887207
    6. '.' → logprob: -14.75010871887207
    7. ' )' → logprob: -15.37510871887207
    8. ')return' → logprob: -15.62510871887207
    9. '(x' → logprob: -15.75010871887207
    10. '<|end|>' → logprob: -15.75010871887207

Token 199: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045995090156793594
    2. 'def' (adapté à ' def') → logprob: -3.295994997024536
    3. ' def' → logprob: -4.920995235443115
    4. '<|end|>' → logprob: -7.795995235443115
    5. '```' → logprob: -9.295994758605957
    6. '
' → logprob: -9.670994758605957
    7. '	def' → logprob: -10.920994758605957
    8. '<|end|>' → logprob: -11.045994758605957
    9. ')' → logprob: -11.420994758605957
    10. '    
' → logprob: -11.920994758605957

Token 201: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12693366408348083
    2. ' __' → logprob: -2.1269335746765137
    3. 'sub' → logprob: -12.876934051513672
    4. '_sub' → logprob: -13.626934051513672
    5. 'r' → logprob: -13.876934051513672
    6. '.__' → logprob: -14.876934051513672
    7. ' ' → logprob: -15.626934051513672
    8. 'def' → logprob: -15.626934051513672
    9. '_r' → logprob: -16.001934051513672
    10. ' r' → logprob: -16.751934051513672

Token 202: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.517272024415433e-05
    2. 'mul' → logprob: -10.125075340270996
    3. 'sub' → logprob: -10.375075340270996
    4. 'neg' → logprob: -12.875075340270996
    5. 'rm' → logprob: -14.500075340270996
    6. 'repr' → logprob: -14.875075340270996
    7. 'rs' → logprob: -16.00007438659668
    8. 'is' → logprob: -16.37507438659668
    9. 'eq' → logprob: -16.37507438659668
    10. ' r' → logprob: -17.12507438659668

Token 203: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.00039968726923689246
    2. '_sub' → logprob: -7.875399589538574
    3. '-sub' → logprob: -12.125399589538574
    4. 's' → logprob: -12.250399589538574
    5. '	sub' → logprob: -12.625399589538574
    6. 'subtract' → logprob: -13.125399589538574
    7. '(sub' → logprob: -13.500399589538574
    8. '__' → logprob: -13.500399589538574
    9. 'ub' → logprob: -14.500399589538574
    10. 'add' → logprob: -15.500399589538574

Token 204: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -8.780830830801278e-05
    2. '__' → logprob: -9.37508773803711
    3. '(self' → logprob: -13.87508773803711
    4. '__(
' → logprob: -13.87508773803711
    5. '(' → logprob: -14.12508773803711
    6. '__((' → logprob: -15.00008773803711
    7. '__('' → logprob: -17.00008773803711
    8. '_(' → logprob: -17.62508773803711
    9. '__(*' → logprob: -18.00008773803711
    10. '__[' → logprob: -18.12508773803711

Token 205: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.7697225252486533e-06
    2. ' self' → logprob: -12.500003814697266
    3. '(self' → logprob: -17.125003814697266
    4. 'other' → logprob: -19.125003814697266
    5. '   ' → logprob: -19.625003814697266
    6. ',' → logprob: -19.750003814697266
    7. ')' → logprob: -21.250003814697266
    8. 'def' → logprob: -21.250003814697266
    9. '       ' → logprob: -21.250003814697266
    10. 'elf' → logprob: -21.375003814697266

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27309900522232056
    2. '(self' → logprob: -2.148098945617676
    3. 'self' → logprob: -2.148098945617676
    4. '__(' → logprob: -6.148098945617676
    5. ',self' → logprob: -6.273098945617676
    6. ')(' → logprob: -6.648098945617676
    7. ' self' → logprob: -9.523098945617676
    8. ' (' → logprob: -9.773098945617676
    9. ' ,' → logprob: -10.273098945617676
    10. '(' → logprob: -10.273098945617676

Token 207: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31724247336387634
    2. 'other' → logprob: -1.3172425031661987
    3. ' other' → logprob: -5.817242622375488
    4. ' self' → logprob: -6.942242622375488
    5. 'Other' → logprob: -10.442242622375488
    6. '(self' → logprob: -14.317242622375488
    7. '(other' → logprob: -15.192242622375488
    8. '_other' → logprob: -15.317242622375488
    9. ' ' → logprob: -15.567242622375488
    10. '.other' → logprob: -16.192241668701172

Token 208: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1256769895553589
    2. ',' → logprob: -2.6256771087646484
    3. 'self' → logprob: -3.7506771087646484
    4. ')(' → logprob: -4.250677108764648
    5. '):
' → logprob: -5.000677108764648
    6. '       ' → logprob: -8.000677108764648
    7. ' (' → logprob: -8.000677108764648
    8. ' self' → logprob: -9.000677108764648
    9. '):' → logprob: -9.125677108764648
    10. ',self' → logprob: -9.375677108764648

Token 209: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3659016788005829
    2. 'Mod' → logprob: -1.4909017086029053
    3. '       ' → logprob: -3.1159017086029053
    4. ' return' → logprob: -3.6159017086029053
    5. '(Mod' → logprob: -4.740901470184326
    6. 'Return' → logprob: -7.240901470184326
    7. ' Mod' → logprob: -8.615901947021484
    8. 'def' → logprob: -9.365901947021484
    9. ':return' → logprob: -9.615901947021484
    10. '{return' → logprob: -10.240901947021484

Token 210: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03496622294187546
    2. ' return' → logprob: -3.659966230392456
    3. 'Mod' → logprob: -4.784965991973877
    4. '       ' → logprob: -8.784966468811035
    5. '(Mod' → logprob: -9.784966468811035
    6. 'Return' → logprob: -10.784966468811035
    7. ' Mod' → logprob: -10.909966468811035
    8. 'def' → logprob: -11.534966468811035
    9. '   ' → logprob: -12.034966468811035
    10. '{return' → logprob: -12.659966468811035

Token 211: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0024788661394268274
    2. ' isinstance' → logprob: -6.002479076385498
    3. '   ' → logprob: -13.00247859954834
    4. 'not' → logprob: -14.00247859954834
    5. '(is' → logprob: -15.62747859954834
    6. '       ' → logprob: -17.002479553222656
    7. '  ' → logprob: -17.377479553222656
    8. '    ' → logprob: -18.127479553222656
    9. 'instance' → logprob: -18.627479553222656
    10. ' is' → logprob: -19.002479553222656

Token 212: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -6.2729995988775045e-06
    2. 'other' → logprob: -12.000006675720215
    3. ' other' → logprob: -19.2500057220459
    4. 'Other' → logprob: -19.6250057220459
    5. '(self' → logprob: -20.2500057220459
    6. '(' → logprob: -21.7500057220459
    7. '(Mod' → logprob: -22.1250057220459
    8. 'OTHER' → logprob: -23.3750057220459
    9. 'Mod' → logprob: -23.6250057220459
    10. '_other' → logprob: -24.3750057220459

Token 213: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.10569320619106293
    2. ',' → logprob: -2.3556931018829346
    3. 'other' → logprob: -5.230693340301514
    4. '(Mod' → logprob: -10.105692863464355
    5. 'Other' → logprob: -10.355692863464355
    6. ' other' → logprob: -10.855692863464355
    7. 'self' → logprob: -11.230692863464355
    8. 'Mod' → logprob: -11.980692863464355
    9. '(self' → logprob: -12.355692863464355
    10. '(' → logprob: -12.855692863464355

Token 214: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -4.787507714354433e-05
    2. ' Mod' → logprob: -10.12504768371582
    3. '(Mod' → logprob: -12.00004768371582
    4. 'int' → logprob: -13.37504768371582
    5. 'Modulo' → logprob: -18.00004768371582
    6. '   ' → logprob: -18.25004768371582
    7. '_Mod' → logprob: -18.62504768371582
    8. ' ' → logprob: -18.87504768371582
    9. 'MOD' → logprob: -19.00004768371582
    10. '_mod' → logprob: -19.12504768371582

Token 215: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -7.941850526549388e-06
    2. 'int' → logprob: -11.750007629394531
    3. 'In' → logprob: -18.87500762939453
    4. 'INT' → logprob: -19.25000762939453
    5. '
' → logprob: -19.37500762939453
    6. 'It' → logprob: -19.50000762939453
    7. ' Int' → logprob: -19.75000762939453
    8. '(Int' → logprob: -19.87500762939453
    9. 'Ints' → logprob: -20.25000762939453
    10. 'Init' → logprob: -21.75000762939453

Token 216: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04861018806695938
    2. '):' → logprob: -3.048610210418701
    3. '       ' → logprob: -11.798609733581543
    4. '           ' → logprob: -12.048609733581543
    5. ')' → logprob: -12.673609733581543
    6. '):
' → logprob: -12.673609733581543
    7. '):

' → logprob: -13.673609733581543
    8. ':
' → logprob: -14.173609733581543
    9. ':' → logprob: -14.298609733581543
    10. '   ' → logprob: -15.548609733581543

Token 217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05009538680315018
    2. 'return' → logprob: -3.050095319747925
    3. '       ' → logprob: -7.425095558166504
    4. ' return' → logprob: -7.425095558166504
    5. ':return' → logprob: -9.300095558166504
    6. '):
' → logprob: -9.550095558166504
    7. ':
' → logprob: -9.925095558166504
    8. ':' → logprob: -10.550095558166504
    9. '   ' → logprob: -10.675095558166504
    10. ')' → logprob: -10.925095558166504

Token 218: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03281822055578232
    2. '           ' → logprob: -3.90781831741333
    3. ' return' → logprob: -4.40781831741333
    4. '       ' → logprob: -12.032817840576172
    5. 'other' → logprob: -12.407817840576172
    6. ':return' → logprob: -12.907817840576172
    7. '   ' → logprob: -13.282817840576172
    8. 'eturn' → logprob: -13.657817840576172
    9. '	return' → logprob: -13.907817840576172
    10. ')return' → logprob: -14.157817840576172

Token 219: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.002458056667819619
    2. 'other' → logprob: -6.127458095550537
    3. '(Mod' → logprob: -8.877457618713379
    4. ' Mod' → logprob: -9.752457618713379
    5. '(other' → logprob: -10.127457618713379
    6. 'Other' → logprob: -10.627457618713379
    7. '-Mod' → logprob: -12.377457618713379
    8. ' other' → logprob: -13.252457618713379
    9. 'return' → logprob: -14.002457618713379
    10. '-' → logprob: -14.002457618713379

Token 220: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -3.547789674485102e-05
    2. 'int' → logprob: -10.375035285949707
    3. '(other' → logprob: -13.000035285949707
    4. 'Mod' → logprob: -14.250035285949707
    5. 'In' → logprob: -14.750035285949707
    6. ' Int' → logprob: -16.000036239624023
    7. 'other' → logprob: -16.125036239624023
    8. '(Int' → logprob: -16.250036239624023
    9. 'INT' → logprob: -16.375036239624023
    10. '<Int' → logprob: -16.625036239624023

Token 221: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -4.620622712536715e-05
    2. 'other' → logprob: -10.000045776367188
    3. '(Mod' → logprob: -14.750045776367188
    4. '(' → logprob: -15.500045776367188
    5. ' other' → logprob: -15.875045776367188
    6. 'Mod' → logprob: -16.750045776367188
    7. '.other' → logprob: -17.750045776367188
    8. 'Other' → logprob: -18.000045776367188
    9. '(-' → logprob: -20.000045776367188
    10. '-other' → logprob: -20.750045776367188

Token 222: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.054500666621607e-06
    2. 'x' → logprob: -13.12500286102295
    3. '.' → logprob: -14.00000286102295
    4. ' .' → logprob: -16.125003814697266
    5. ').' → logprob: -17.625003814697266
    6. ' -' → logprob: -18.375003814697266
    7. '-' → logprob: -18.875003814697266
    8. ' x' → logprob: -19.250003814697266
    9. ' ' → logprob: -19.500003814697266
    10. '(x' → logprob: -20.125003814697266

Token 223: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20141665637493134
    2. '-' → logprob: -1.7014166116714478
    3. '-self' → logprob: -12.951416969299316
    4. ' ' → logprob: -14.451416969299316
    5. ')' → logprob: -15.076416969299316
    6. ' ' → logprob: -15.951416969299316
    7. '-n' → logprob: -18.326416015625
    8. '-mod' → logprob: -18.451416015625
    9. '-ex' → logprob: -18.451416015625
    10. '-x' → logprob: -18.451416015625

Token 224: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.836499985889532e-05
    2. ' self' → logprob: -9.7500581741333
    3. '(self' → logprob: -18.500059127807617
    4. '       ' → logprob: -19.750059127807617
    5. '
' → logprob: -20.250059127807617
    6. '   ' → logprob: -21.000059127807617
    7. '[self' → logprob: -21.375059127807617
    8. '	self' → logprob: -21.500059127807617
    9. ' ' → logprob: -22.500059127807617
    10. '```' → logprob: -22.625059127807617

Token 225: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -8.196732960641384e-05
    2. 'x' → logprob: -10.000082015991211
    3. '.' → logprob: -10.250082015991211
    4. ').' → logprob: -15.000082015991211
    5. ')' → logprob: -15.125082015991211
    6. ' .' → logprob: -15.250082015991211
    7. 'self' → logprob: -15.875082015991211
    8. ' x' → logprob: -17.37508201599121
    9. '```' → logprob: -17.75008201599121
    10. '[' → logprob: -18.50008201599121

Token 226: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932530403137207
    2. ')
' → logprob: -0.6932530403137207
    3. '       ' → logprob: -9.193252563476562
    4. ')
' → logprob: -12.818252563476562
    5. ')`
' → logprob: -14.693252563476562
    6. ' )
' → logprob: -15.068252563476562
    7. ')return' → logprob: -15.443252563476562
    8. ')

' → logprob: -15.568252563476562
    9. ' )' → logprob: -16.193252563476562
    10. '   ' → logprob: -16.693252563476562

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10077299177646637
    2. ')' → logprob: -2.3507730960845947
    3. ')
' → logprob: -9.100772857666016
    4. 'else' → logprob: -9.100772857666016
    5. ' else' → logprob: -9.100772857666016
    6. '<|end|>' → logprob: -9.475772857666016
    7. ')return' → logprob: -10.100772857666016
    8. '):
' → logprob: -10.475772857666016
    9. '   ' → logprob: -10.600772857666016
    10. '(' → logprob: -11.225772857666016

Token 228: ' return' (ID: 622)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.33000171184539795
    2. '       ' → logprob: -1.330001711845398
    3. ' else' → logprob: -4.2050018310546875
    4. 'return' (adapté à ' return') → logprob: -6.4550018310546875
    5. '   ' → logprob: -9.830001831054688
    6. ')' → logprob: -10.830001831054688
    7. ' return' → logprob: -11.080001831054688
    8. '           ' → logprob: -11.705001831054688
    9. '	else' → logprob: -12.080001831054688
    10. 'other' → logprob: -14.080001831054688

Token 229: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.03804459050297737
    2. ' Mod' → logprob: -3.2880446910858154
    3. '(Mod' → logprob: -12.788044929504395
    4. ' ' → logprob: -15.288044929504395
    5. '_Mod' → logprob: -17.288043975830078
    6. '_mod' → logprob: -17.288043975830078
    7. 'Mo' → logprob: -17.413043975830078
    8. '  ' → logprob: -17.413043975830078
    9. 'mod' → logprob: -18.288043975830078
    10. 'MOD' → logprob: -18.288043975830078

Token 230: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -6.704273118884885e-07
    2. '(Int' → logprob: -15.375000953674316
    3. ' Int' → logprob: -15.375000953674316
    4. 'int' → logprob: -15.750000953674316
    5. 'Ints' → logprob: -19.625
    6. 'In' → logprob: -20.0
    7. '_Int' → logprob: -20.0
    8. '(int' → logprob: -20.125
    9. '.Int' → logprob: -20.625
    10. '[Int' → logprob: -20.875

Token 231: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.25001335144043
    3. 'other' → logprob: -15.12501335144043
    4. ' other' → logprob: -18.50001335144043
    5. ' (' → logprob: -19.37501335144043
    6. '((' → logprob: -20.00001335144043
    7. 'Other' → logprob: -21.37501335144043
    8. '(operator' → logprob: -21.37501335144043
    9. '.other' → logprob: -21.75001335144043
    10. '(
' → logprob: -22.00001335144043

Token 232: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008618354797363281
    2. '-' → logprob: -4.758618354797363
    3. ' ' → logprob: -12.758618354797363
    4. '-x' → logprob: -14.133618354797363
    5. ' -
' → logprob: -17.133617401123047
    6. ' ' → logprob: -17.258617401123047
    7. ')' → logprob: -17.508617401123047
    8. 'x' → logprob: -17.758617401123047
    9. ' x' → logprob: -18.883617401123047
    10. '-self' → logprob: -18.883617401123047

Token 233: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011048289015889168
    2. ' self' → logprob: -4.511048316955566
    3. '(self' → logprob: -15.511048316955566
    4. '	self' → logprob: -15.886048316955566
    5. '       ' → logprob: -16.13604736328125
    6. '[self' → logprob: -16.51104736328125
    7. ' ' → logprob: -18.01104736328125
    8. '=self' → logprob: -19.38604736328125
    9. ':self' → logprob: -19.51104736328125
    10. '   ' → logprob: -19.76104736328125

Token 234: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0019470835104584694
    2. '.' → logprob: -6.251946926116943
    3. 'x' → logprob: -11.251947402954102
    4. ' .' → logprob: -12.251947402954102
    5. 'self' → logprob: -15.126947402954102
    6. ').' → logprob: -15.751947402954102
    7. '[' → logprob: -16.2519474029541
    8. ')' → logprob: -16.3769474029541
    9. ' x' → logprob: -17.2519474029541
    10. '```' → logprob: -17.5019474029541

Token 235: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -17.0
    4. '   ' → logprob: -17.625
    5. ')return' → logprob: -17.625
    6. '       ' → logprob: -18.625
    7. ')

' → logprob: -18.75
    8. '<|end|>' → logprob: -19.0
    9. ')x' → logprob: -19.5
    10. ')#' → logprob: -20.0

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002142650482710451
    2. ')' → logprob: -8.750214576721191
    3. 'def' → logprob: -10.250214576721191
    4. '*' → logprob: -11.750214576721191
    5. '```' → logprob: -12.500214576721191
    6. '(' → logprob: -13.250214576721191
    7. '...' → logprob: -13.250214576721191
    8. '**' → logprob: -13.875214576721191
    9. '  ' → logprob: -13.875214576721191
    10. '    
' → logprob: -14.125214576721191

Token 237: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010193156078457832
    2. 'def' (adapté à ' def') → logprob: -4.635193347930908
    3. ')' → logprob: -8.51019287109375
    4. ' def' → logprob: -9.01019287109375
    5. '	def' → logprob: -9.76019287109375
    6. '```' → logprob: -10.51019287109375
    7. '    
' → logprob: -12.38519287109375
    8. '(' → logprob: -12.63519287109375
    9. '<|end|>' → logprob: -12.63519287109375
    10. '**' → logprob: -12.88519287109375

Token 238: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01816106028854847
    2. ' __' → logprob: -4.018161296844482
    3. 'def' → logprob: -11.768160820007324
    4. '.__' → logprob: -13.268160820007324
    5. '   ' → logprob: -14.018160820007324
    6. '#__' → logprob: -15.643160820007324
    7. '_mul' → logprob: -16.14316177368164
    8. 'mul' → logprob: -16.14316177368164
    9. '/__' → logprob: -16.14316177368164
    10. ' def' → logprob: -16.26816177368164

Token 239: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -5.512236498361744e-07
    2. 'neg' → logprob: -15.000000953674316
    3. ' mul' → logprob: -16.625
    4. 'mult' → logprob: -17.375
    5. 'pow' → logprob: -17.875
    6. 'imul' → logprob: -18.0
    7. '_mul' → logprob: -18.125
    8. 'Mul' → logprob: -18.25
    9. 'rm' → logprob: -18.5
    10. 'r' → logprob: -19.0

Token 240: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.000919200771022588
    2. '__' → logprob: -7.000919342041016
    3. '__(
' → logprob: -12.375919342041016
    4. '(self' → logprob: -13.250919342041016
    5. '__(*' → logprob: -14.250919342041016
    6. '(' → logprob: -14.250919342041016
    7. '__((' → logprob: -15.125919342041016
    8. '__('' → logprob: -16.250919342041016
    9. '_(' → logprob: -17.000919342041016
    10. '__("' → logprob: -18.250919342041016

Token 241: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.438573680294212e-06
    2. '(self' → logprob: -12.750005722045898
    3. ' self' → logprob: -13.500005722045898
    4. '   ' → logprob: -13.875005722045898
    5. '       ' → logprob: -15.875005722045898
    6. '
' → logprob: -17.7500057220459
    7. '	self' → logprob: -19.0000057220459
    8. 'def' → logprob: -19.0000057220459
    9. ' ' → logprob: -19.1250057220459
    10. ',' → logprob: -19.1250057220459

Token 242: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0041747987270355225
    2. ',' → logprob: -6.254174709320068
    3. 'self' → logprob: -6.379174709320068
    4. '__(' → logprob: -8.129175186157227
    5. '(' → logprob: -9.254175186157227
    6. '   ' → logprob: -10.129175186157227
    7. ')(' → logprob: -10.379175186157227
    8. '       ' → logprob: -10.504175186157227
    9. ' (' → logprob: -10.754175186157227
    10. ',self' → logprob: -11.254175186157227

Token 243: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3132663369178772
    2. ' other' → logprob: -1.3132662773132324
    3. '(other' → logprob: -13.31326675415039
    4. 'Other' → logprob: -13.43826675415039
    5. 'self' → logprob: -13.81326675415039
    6. '_other' → logprob: -15.06326675415039
    7. '.other' → logprob: -16.06326675415039
    8. ' self' → logprob: -17.31326675415039
    9. ' andere' → logprob: -19.43826675415039
    10. '其他' → logprob: -19.56326675415039

Token 244: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4687456786632538
    2. '):
' → logprob: -1.9687457084655762
    3. '       ' → logprob: -2.218745708465576
    4. ',' → logprob: -2.593745708465576
    5. '(self' → logprob: -3.593745708465576
    6. 'self' → logprob: -4.593745708465576
    7. '<|end|>' → logprob: -4.843745708465576
    8. '   ' → logprob: -6.218745708465576
    9. ':' → logprob: -6.468745708465576
    10. '<|end|>' → logprob: -7.343745708465576

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001886753598228097
    2. 'if' → logprob: -6.75188684463501
    3. ' if' → logprob: -7.37688684463501
    4. '<|end|>' → logprob: -10.126886367797852
    5. '   ' → logprob: -10.501886367797852
    6. '(' → logprob: -11.251886367797852
    7. '	if' → logprob: -13.251886367797852
    8. '           ' → logprob: -14.001886367797852
    9. '	   ' → logprob: -14.126886367797852
    10. 'def' → logprob: -14.126886367797852

Token 246: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08093724399805069
    2. '       ' → logprob: -3.080937147140503
    3. ' if' → logprob: -3.455937147140503
    4. '   ' → logprob: -8.330937385559082
    5. '<|end|>' → logprob: -11.455937385559082
    6. '	if' → logprob: -11.705937385559082
    7. 'return' → logprob: -11.955937385559082
    8. 'If' → logprob: -12.830937385559082
    9. '           ' → logprob: -13.705937385559082
    10. 'def' → logprob: -14.205937385559082

Token 247: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.10020925104618073
    2. 'is' → logprob: -2.3502092361450195
    3. '(is' → logprob: -13.22520923614502
    4. ' is' → logprob: -14.22520923614502
    5. '.is' → logprob: -17.475210189819336
    6. ' hasattr' → logprob: -18.100210189819336
    7. '   ' → logprob: -18.225210189819336
    8. ' ' → logprob: -18.350210189819336
    9. ' instanceof' → logprob: -18.725210189819336
    10. 'typeof' → logprob: -18.725210189819336

Token 248: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0019419649615883827
    2. 'other' → logprob: -6.251942157745361
    3. ' other' → logprob: -11.251941680908203
    4. 'Other' → logprob: -14.751941680908203
    5. 'Mod' → logprob: -18.626941680908203
    6. '.other' → logprob: -19.626941680908203
    7. 'OTHER' → logprob: -20.126941680908203
    8. '其他' → logprob: -20.626941680908203
    9. '_other' → logprob: -21.376941680908203
    10. '-other' → logprob: -22.376941680908203

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003684162860736251
    2. '(other' → logprob: -5.628684043884277
    3. '(Mod' → logprob: -9.878684043884277
    4. 'other' → logprob: -10.378684043884277
    5. 'Other' → logprob: -14.128684043884277
    6. 'self' → logprob: -15.003684043884277
    7. 'Mod' → logprob: -15.128684043884277
    8. '(' → logprob: -15.628684043884277
    9. ' other' → logprob: -15.878684043884277
    10. ' ,' → logprob: -16.253684997558594

Token 250: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.12693630158901215
    2. ' Mod' → logprob: -2.126936197280884
    3. '(Mod' → logprob: -12.001935958862305
    4. '_Mod' → logprob: -14.376935958862305
    5. ' ' → logprob: -14.876935958862305
    6. '.Mod' → logprob: -15.001935958862305
    7. '_mod' → logprob: -15.001935958862305
    8. 'Modulo' → logprob: -15.876935958862305
    9. 'mod' → logprob: -16.001935958862305
    10. '   ' → logprob: -16.501935958862305

Token 251: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -6.2729995988775045e-06
    2. 'int' → logprob: -12.000006675720215
    3. 'In' → logprob: -17.7500057220459
    4. 'INT' → logprob: -18.5000057220459
    5. '
' → logprob: -18.6250057220459
    6. 'Ints' → logprob: -18.6250057220459
    7. ' Int' → logprob: -18.8750057220459
    8. '_int' → logprob: -19.1250057220459
    9. '```' → logprob: -19.2500057220459
    10. '[Int' → logprob: -19.2500057220459

Token 252: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0067248414270579815
    2. '):' → logprob: -5.006724834442139
    3. ':
' → logprob: -12.756725311279297
    4. '       ' → logprob: -12.881725311279297
    5. '):
' → logprob: -13.256725311279297
    6. '):

' → logprob: -14.006725311279297
    7. '           ' → logprob: -14.381725311279297
    8. ')' → logprob: -14.881725311279297
    9. ':' → logprob: -15.256725311279297
    10. '   ' → logprob: -15.881725311279297

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003835828974843025
    2. 'return' → logprob: -5.628835678100586
    3. ' return' → logprob: -8.378835678100586
    4. ':return' → logprob: -13.253835678100586
    5. '{return' → logprob: -13.753835678100586
    6. '       ' → logprob: -14.378835678100586
    7. '```' → logprob: -14.753835678100586
    8. '               ' → logprob: -15.003835678100586
    9. '	       ' → logprob: -15.128835678100586
    10. ')return' → logprob: -15.128835678100586

Token 254: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07942846417427063
    2. ' return' → logprob: -2.5794284343719482
    3. '       ' → logprob: -7.579428672790527
    4. '           ' → logprob: -10.954428672790527
    5. ':return' → logprob: -12.204428672790527
    6. '	return' → logprob: -13.704428672790527
    7. '```' → logprob: -13.704428672790527
    8. '{return' → logprob: -14.079428672790527
    9. '   ' → logprob: -14.329428672790527
    10. ')return' → logprob: -14.579428672790527

Token 255: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0003434488025959581
    2. ' Mod' → logprob: -8.000343322753906
    3. '(Mod' → logprob: -11.750343322753906
    4. '_mod' → logprob: -18.250343322753906
    5. 'Mo' → logprob: -18.375343322753906
    6. '.Mod' → logprob: -18.375343322753906
    7. 'Modulo' → logprob: -18.625343322753906
    8. '_Mod' → logprob: -18.875343322753906
    9. ' ' → logprob: -19.375343322753906
    10. 'MOD' → logprob: -19.500343322753906

Token 256: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.9862216504407115e-05
    2. 'int' → logprob: -10.875020027160645
    3. 'Mod' → logprob: -14.625020027160645
    4. '(Mod' → logprob: -16.125019073486328
    5. 'In' → logprob: -16.625019073486328
    6. ' Int' → logprob: -17.125019073486328
    7. 'Ints' → logprob: -17.375019073486328
    8. 'INT' → logprob: -18.000019073486328
    9. '_int' → logprob: -18.125019073486328
    10. 'It' → logprob: -18.500019073486328

Token 257: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.128163257315464e-07
    2. 'self' → logprob: -15.375
    3. '(' → logprob: -17.0
    4. ' self' → logprob: -17.75
    5. ' (' → logprob: -17.875
    6. '(
' → logprob: -20.75
    7. '[self' → logprob: -21.25
    8. '(this' → logprob: -21.25
    9. '	self' → logprob: -22.75
    10. '(s' → logprob: -22.75

Token 258: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -9.253090865968261e-06
    2. '.' → logprob: -11.625009536743164
    3. 'x' → logprob: -16.000009536743164
    4. ' .' → logprob: -16.625009536743164
    5. '```' → logprob: -17.500009536743164
    6. ' ' → logprob: -19.250009536743164
    7. ').' → logprob: -19.250009536743164
    8. '._' → logprob: -19.875009536743164
    9. 'self' → logprob: -19.875009536743164
    10. '[' → logprob: -20.812509536743164

Token 259: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023257357999682426
    2. '*' → logprob: -3.773257255554199
    3. ' ' → logprob: -11.3982572555542
    4. 'other' → logprob: -15.0232572555542
    5. '*object' → logprob: -16.148258209228516
    6. ' other' → logprob: -16.773258209228516
    7. '  ' → logprob: -17.023258209228516
    8. '(other' → logprob: -17.023258209228516
    9. '   ' → logprob: -17.023258209228516
    10. '*self' → logprob: -17.148258209228516

Token 260: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.023246407508850098
    2. ' other' → logprob: -3.7732462882995605
    3. '(other' → logprob: -14.398246765136719
    4. 'Other' → logprob: -15.273246765136719
    5. '.other' → logprob: -16.27324676513672
    6. '_other' → logprob: -18.89824676513672
    7. 'OTHER' → logprob: -20.14824676513672
    8. 'self' → logprob: -20.64824676513672
    9. '其他' → logprob: -20.77324676513672
    10. ' ' → logprob: -21.89824676513672

Token 261: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -4.127333340875339e-06
    2. '.' → logprob: -12.500003814697266
    3. ' .' → logprob: -15.625003814697266
    4. 'x' → logprob: -16.125003814697266
    5. '<|end|>' → logprob: -17.500003814697266
    6. ' ' → logprob: -17.875003814697266
    7. ').' → logprob: -19.125003814697266
    8. '```' → logprob: -20.000003814697266
    9. '.xhtml' → logprob: -20.875003814697266
    10. '<|end|>' → logprob: -21.000003814697266

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067240106873214245
    2. ')
' → logprob: -5.006723880767822
    3. '       ' → logprob: -11.75672435760498
    4. ')
' → logprob: -15.13172435760498
    5. ')return' → logprob: -15.38172435760498
    6. ' )' → logprob: -16.131723403930664
    7. '   ' → logprob: -16.381723403930664
    8. ')

' → logprob: -16.756723403930664
    9. ')#' → logprob: -18.006723403930664
    10. '<|end|>' → logprob: -18.256723403930664

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.787507714354433e-05
    2. ')' → logprob: -10.62504768371582
    3. 'return' → logprob: -11.25004768371582
    4. '   ' → logprob: -12.87504768371582
    5. 'else' → logprob: -13.12504768371582
    6. '<|end|>' → logprob: -13.37504768371582
    7. '	' → logprob: -14.12504768371582
    8. ')
' → logprob: -14.37504768371582
    9. ')return' → logprob: -14.50004768371582
    10. '```' → logprob: -15.00004768371582

Token 264: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5770838856697083
    2. '       ' → logprob: -0.8270838856697083
    3. ' return' → logprob: -6.827084064483643
    4. 'else' → logprob: -9.952083587646484
    5. '   ' → logprob: -12.702083587646484
    6. '	return' → logprob: -12.952083587646484
    7. '(return' → logprob: -13.077083587646484
    8. '(' → logprob: -13.952083587646484
    9. ')return' → logprob: -14.202083587646484
    10. '{return' → logprob: -14.202083587646484

Token 265: ' Mod' (ID: 7191)
  Prédit: ' Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Mod' → logprob: -0.3132668435573578
    2. 'Mod' → logprob: -1.3132668733596802
    3. '(Mod' → logprob: -12.68826675415039
    4. 'self' → logprob: -14.06326675415039
    5. ' ' → logprob: -14.93826675415039
    6. ' self' → logprob: -14.93826675415039
    7. ' ' → logprob: -15.81326675415039
    8. ' Modi' → logprob: -15.93826675415039
    9. '_mod' → logprob: -16.31326675415039
    10. '_Mod' → logprob: -16.68826675415039

Token 266: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.9361264946837764e-07
    2. 'Mod' → logprob: -16.0
    3. ' Int' → logprob: -17.25
    4. 'int' → logprob: -18.0
    5. 'Ints' → logprob: -18.0
    6. '(Int' → logprob: -19.125
    7. 'In' → logprob: -20.25
    8. '	Int' → logprob: -20.75
    9. '_Int' → logprob: -21.0
    10. '<Int' → logprob: -21.25

Token 267: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.996708104154095e-05
    2. '(' → logprob: -9.250100135803223
    3. ' (' → logprob: -12.500100135803223
    4. 'self' → logprob: -16.375099182128906
    5. ' self' → logprob: -17.875099182128906
    6. '(s' → logprob: -18.750099182128906
    7. '(other' → logprob: -18.875099182128906
    8. '(
' → logprob: -19.250099182128906
    9. '[self' → logprob: -19.750099182128906
    10. '(this' → logprob: -20.250099182128906

Token 268: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0004348413785919547
    2. '.' → logprob: -7.750434875488281
    3. ' .' → logprob: -12.875434875488281
    4. 'x' → logprob: -13.500434875488281
    5. '*' → logprob: -16.00043487548828
    6. ' ' → logprob: -17.00043487548828
    7. '```' → logprob: -17.37543487548828
    8. ' *' → logprob: -17.87543487548828
    9. ' x' → logprob: -18.62543487548828
    10. '   ' → logprob: -19.12543487548828

Token 269: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005930101033300161
    2. '*' → logprob: -5.130929946899414
    3. ' ' → logprob: -13.505929946899414
    4. ' ' → logprob: -16.880929946899414
    5. ')' → logprob: -18.005929946899414
    6. '  ' → logprob: -18.380929946899414
    7. '*object' → logprob: -18.630929946899414
    8. '   ' → logprob: -19.505929946899414
    9. '```' → logprob: -19.755929946899414
    10. ' **' → logprob: -20.130929946899414

Token 270: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.011047814972698689
    2. ' other' → logprob: -4.511047840118408
    3. '(other' → logprob: -18.26104736328125
    4. 'Other' → logprob: -20.01104736328125
    5. '.other' → logprob: -21.01104736328125
    6. '_other' → logprob: -22.01104736328125
    7. ' ' → logprob: -22.51104736328125
    8. '   ' → logprob: -23.88604736328125
    9. 'OTHER' → logprob: -24.13604736328125
    10. '其他' → logprob: -24.13604736328125

Token 271: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020389800192788243
    2. ' )' → logprob: -9.125204086303711
    3. '<|end|>' → logprob: -10.000204086303711
    4. '.x' → logprob: -10.750204086303711
    5. ' x' → logprob: -11.000204086303711
    6. ')x' → logprob: -12.375204086303711
    7. '(x' → logprob: -13.375204086303711
    8. 'x' → logprob: -13.375204086303711
    9. '*' → logprob: -14.125204086303711
    10. ' *' → logprob: -14.250204086303711

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010883049108088017
    2. '<|end|>' → logprob: -7.6260881423950195
    3. '```' → logprob: -7.8760881423950195
    4. '
' → logprob: -9.75108814239502
    5. ')' → logprob: -10.00108814239502
    6. 'def' → logprob: -10.12608814239502
    7. ' ' → logprob: -10.75108814239502
    8. '  ' → logprob: -10.87608814239502
    9. '    
' → logprob: -11.50108814239502
    10. '<|end|>' → logprob: -11.87608814239502

Token 273: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3349383473396301
    2. '<|end|>' → logprob: -2.3349382877349854
    3. 'def' (adapté à ' def') → logprob: -2.4599382877349854
    4. ')' → logprob: -2.7099382877349854
    5. '*' → logprob: -3.8349382877349854
    6. ' ' → logprob: -5.7099385261535645
    7. '_' → logprob: -6.0849385261535645
    8. ' def' → logprob: -6.2099385261535645
    9. '__' → logprob: -6.3349385261535645
    10. '  ' → logprob: -6.4599385261535645

Token 274: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018658220767974854
    2. ' __' → logprob: -4.01865816116333
    3. 'def' → logprob: -7.64365816116333
    4. ' def' → logprob: -10.518658638000488
    5. '.__' → logprob: -13.768658638000488
    6. 'r' → logprob: -14.268658638000488
    7. '.py' → logprob: -16.143657684326172
    8. '   ' → logprob: -16.768657684326172
    9. ' ' → logprob: -17.018657684326172
    10. '_r' → logprob: -17.268657684326172

Token 275: 'rm' (ID: 21373)
  Prédit: 'rm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -6.153795766294934e-06
    2. 'r' → logprob: -12.375005722045898
    3. 'mul' → logprob: -13.250005722045898
    4. ' rm' → logprob: -19.0000057220459
    5. 'imul' → logprob: -19.2500057220459
    6. 'rl' → logprob: -19.3750057220459
    7. 'rf' → logprob: -19.6250057220459
    8. ' ' → logprob: -19.7500057220459
    9. 'rd' → logprob: -20.5000057220459
    10. 'rx' → logprob: -20.6250057220459

Token 276: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -9.088346359931165e-07
    2. 'ult' → logprob: -14.000000953674316
    3. 'mul' → logprob: -16.75
    4. 'uls' → logprob: -19.75
    5. '_mul' → logprob: -20.125
    6. 'ull' → logprob: -20.375
    7. 'ultiply' → logprob: -20.75
    8. 'u' → logprob: -21.125
    9. 'ulf' → logprob: -21.25
    10. 'ул' → logprob: -21.5

Token 277: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0031794982496649027
    2. '__' → logprob: -5.753179550170898
    3. '__(
' → logprob: -13.878179550170898
    4. '__('' → logprob: -15.253179550170898
    5. '__(*' → logprob: -15.253179550170898
    6. '__((' → logprob: -16.1281795501709
    7. '(' → logprob: -16.6281795501709
    8. '(self' → logprob: -16.7531795501709
    9. '__("' → logprob: -18.0031795501709
    10. '___' → logprob: -18.5031795501709

Token 278: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2352385965641588e-05
    2. '(self' → logprob: -11.625012397766113
    3. ' self' → logprob: -13.000012397766113
    4. 'def' → logprob: -14.125012397766113
    5. 'other' → logprob: -15.875012397766113
    6. ')' → logprob: -16.250011444091797
    7. '   ' → logprob: -17.500011444091797
    8. '	self' → logprob: -18.875011444091797
    9. '[' → logprob: -19.125011444091797
    10. '(' → logprob: -19.375011444091797

Token 279: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0035361594054847956
    2. '__' → logprob: -5.878536224365234
    3. '(self' → logprob: -7.753536224365234
    4. 'self' → logprob: -8.878536224365234
    5. '__,' → logprob: -8.878536224365234
    6. '(' → logprob: -11.378536224365234
    7. '__(
' → logprob: -12.503536224365234
    8. ',' → logprob: -12.628536224365234
    9. '__((' → logprob: -13.378536224365234
    10. '__(*' → logprob: -13.503536224365234

Token 280: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.002736639464274049
    2. 'self' → logprob: -6.002736568450928
    3. ' other' → logprob: -8.252737045288086
    4. 'Other' → logprob: -15.252737045288086
    5. ' self' → logprob: -15.502737045288086
    6. '(other' → logprob: -17.627737045288086
    7. '.other' → logprob: -19.502737045288086
    8. '_other' → logprob: -19.627737045288086
    9. 'OTHER' → logprob: -20.002737045288086
    10. 'def' → logprob: -20.377737045288086

Token 281: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0664716437458992
    2. ')(' → logprob: -3.691471576690674
    3. 'self' → logprob: -4.441471576690674
    4. '):
' → logprob: -4.441471576690674
    5. ',' → logprob: -5.316471576690674
    6. ')' → logprob: -5.441471576690674
    7. ' (' → logprob: -6.066471576690674
    8. '(' → logprob: -6.441471576690674
    9. '   ' → logprob: -6.941471576690674
    10. '       ' → logprob: -7.066471576690674

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0566246435046196
    2. 'return' → logprob: -3.0566246509552
    3. 'def' → logprob: -5.806624412536621
    4. '   ' → logprob: -5.931624412536621
    5. 'self' → logprob: -6.806624412536621
    6. ' return' → logprob: -6.806624412536621
    7. '(self' → logprob: -9.181624412536621
    8. '           ' → logprob: -11.556624412536621
    9. ' def' → logprob: -11.931624412536621
    10. ' self' → logprob: -12.181624412536621

Token 283: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005403084680438042
    2. ' return' → logprob: -5.5054030418396
    3. 'self' → logprob: -6.7554030418396
    4. 'def' → logprob: -9.005403518676758
    5. '       ' → logprob: -10.255403518676758
    6. '   ' → logprob: -14.130403518676758
    7. ' self' → logprob: -14.505403518676758
    8. '(self' → logprob: -17.005403518676758
    9. ' def' → logprob: -17.130403518676758
    10. '	return' → logprob: -17.130403518676758

Token 284: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078639671206474
    2. ' self' → logprob: -5.5040788650512695
    3. '(self' → logprob: -15.25407886505127
    4. '__' → logprob: -19.379077911376953
    5. '	self' → logprob: -19.504077911376953
    6. '*self' → logprob: -20.254077911376953
    7. 'Mod' → logprob: -20.754077911376953
    8. ' ' → logprob: -20.879077911376953
    9. '[self' → logprob: -21.254077911376953
    10. 's' → logprob: -21.504077911376953

Token 285: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04859418421983719
    2. ' *' → logprob: -3.0485942363739014
    3. '__' → logprob: -12.42359447479248
    4. '.__' → logprob: -14.42359447479248
    5. '.*' → logprob: -15.04859447479248
    6. ')' → logprob: -15.17359447479248
    7. ' ' → logprob: -15.29859447479248
    8. '<|end|>' → logprob: -15.29859447479248
    9. '_' → logprob: -15.79859447479248
    10. '+' → logprob: -15.92359447479248

Token 286: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -1.0206720617134124e-05
    2. ' other' → logprob: -11.50001049041748
    3. '(other' → logprob: -18.750009536743164
    4. 'Other' → logprob: -20.125009536743164
    5. '.other' → logprob: -21.125009536743164
    6. '_other' → logprob: -22.750009536743164
    7. 'OTHER' → logprob: -25.125009536743164
    8. '-other' → logprob: -25.125009536743164
    9. '其他' → logprob: -25.500009536743164
    10. 'others' → logprob: -27.375009536743164

Token 287: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06997667253017426
    2. '
' → logprob: -3.569976568222046
    3. '<|end|>' → logprob: -3.819976568222046
    4. 'def' → logprob: -4.819976806640625
    5. '```' → logprob: -5.694976806640625
    6. '<|end|>' → logprob: -6.694976806640625
    7. '

' → logprob: -6.944976806640625
    8. ' def' → logprob: -7.069976806640625
    9. '    
' → logprob: -7.194976806640625
    10. ' ' → logprob: -8.069976806640625

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08717897534370422
    2. 'def' → logprob: -2.962178945541382
    3. '```' → logprob: -3.587178945541382
    4. ' def' → logprob: -5.837179183959961
    5. '``' → logprob: -7.837179183959961
    6. ' ' → logprob: -8.212179183959961
    7. '    
' → logprob: -9.337179183959961
    8. '	def' → logprob: -9.462179183959961
    9. '**' → logprob: -9.712179183959961
    10. '*' → logprob: -10.212179183959961

Token 289: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45794811844825745
    2. 'def' (adapté à ' def') → logprob: -1.082948088645935
    3. ' def' → logprob: -3.7079482078552246
    4. '```' → logprob: -5.707948207855225
    5. '
' → logprob: -7.707948207855225
    6. ' ' → logprob: -8.707947731018066
    7. '	def' → logprob: -8.832947731018066
    8. '    
' → logprob: -9.832947731018066
    9. '``' → logprob: -9.957947731018066
    10. '\' → logprob: -10.082947731018066

Token 290: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1099865511059761
    2. 'def' → logprob: -2.8599865436553955
    3. 'pow' → logprob: -3.1099865436553955
    4. ' __' → logprob: -6.109986782073975
    5. ' def' → logprob: -10.234986305236816
    6. ' pow' → logprob: -11.609986305236816
    7. '.__' → logprob: -12.234986305236816
    8. '```' → logprob: -12.359986305236816
    9. '_pow' → logprob: -12.359986305236816
    10. 'power' → logprob: -13.359986305236816

Token 291: 'tr' (ID: 371)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.000432695698691532
    2. 'tr' → logprob: -8.000432968139648
    3. 'flo' → logprob: -9.250432968139648
    4. 'eq' → logprob: -14.250432968139648
    5. 'neg' → logprob: -15.375432968139648
    6. 'power' → logprob: -15.750432968139648
    7. 'Pow' → logprob: -17.00043296813965
    8. '_pow' → logprob: -17.50043296813965
    9. ' pow' → logprob: -17.75043296813965
    10. 'mod' → logprob: -18.37543296813965

Token 292: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.0017680044984444976
    2. 'ue' → logprob: -6.751768112182617
    3. '__' → logprob: -7.626768112182617
    4. 'u' → logprob: -9.626768112182617
    5. 'div' → logprob: -11.626768112182617
    6. 'f' → logprob: -11.751768112182617
    7. '```' → logprob: -12.251768112182617
    8. 'ues' → logprob: -12.376768112182617
    9. 'uer' → logprob: -12.626768112182617
    10. 'ed' → logprob: -13.126768112182617

Token 293: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.01130516268312931
    2. '__' → logprob: -4.511305332183838
    3. 'div' → logprob: -8.38630485534668
    4. 'v' → logprob: -11.63630485534668
    5. 'i' → logprob: -12.51130485534668
    6. 'IV' → logprob: -12.63630485534668
    7. '```' → logprob: -12.76130485534668
    8. 'or' → logprob: -12.88630485534668
    9. '_' → logprob: -13.13630485534668
    10. 'def' → logprob: -13.76130485534668

Token 294: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0003704933915287256
    2. '__' → logprob: -8.000370025634766
    3. '(self' → logprob: -10.500370025634766
    4. '(' → logprob: -12.375370025634766
    5. '__(
' → logprob: -13.375370025634766
    6. '_(' → logprob: -13.625370025634766
    7. '__(*' → logprob: -15.750370025634766
    8. '__('' → logprob: -15.750370025634766
    9. 'self' → logprob: -15.875370025634766
    10. '__((' → logprob: -16.500370025634766

Token 295: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013238313840702176
    2. '(self' → logprob: -9.25013256072998
    3. ' self' → logprob: -10.25013256072998
    4. '   ' → logprob: -15.50013256072998
    5. 'def' → logprob: -15.87513256072998
    6. ')' → logprob: -16.625131607055664
    7. '<|end|>' → logprob: -16.750131607055664
    8. ' ' → logprob: -16.875131607055664
    9. '	self' → logprob: -16.875131607055664
    10. 'other' → logprob: -17.125131607055664

Token 296: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02685716561973095
    2. '(' → logprob: -3.6518571376800537
    3. ',' → logprob: -8.776857376098633
    4. ')(' → logprob: -8.901857376098633
    5. 'self' → logprob: -9.151857376098633
    6. ' (' → logprob: -9.526857376098633
    7. '__(' → logprob: -10.151857376098633
    8. ')' → logprob: -11.151857376098633
    9. '(
' → logprob: -12.026857376098633
    10. '   ' → logprob: -12.151857376098633

Token 297: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.16376838088035583
    2. ' other' → logprob: -1.9137684106826782
    3. 'self' → logprob: -5.663768291473389
    4. ' self' → logprob: -9.913768768310547
    5. 'Other' → logprob: -10.913768768310547
    6. '_other' → logprob: -14.288768768310547
    7. '(other' → logprob: -15.663768768310547
    8. '.other' → logprob: -17.413768768310547
    9. ' ' → logprob: -17.538768768310547
    10. ' Other' → logprob: -17.913768768310547

Token 298: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.032311320304870605
    2. 'self' → logprob: -4.15731143951416
    3. '       ' → logprob: -4.90731143951416
    4. '):
' → logprob: -6.15731143951416
    5. '   ' → logprob: -6.28231143951416
    6. '(' → logprob: -6.28231143951416
    7. '):' → logprob: -6.78231143951416
    8. ',' → logprob: -6.78231143951416
    9. '```' → logprob: -8.65731143951416
    10. ')(' → logprob: -8.78231143951416

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000936355150770396
    2. ' if' → logprob: -7.125936508178711
    3. 'if' → logprob: -9.625936508178711
    4. '(' → logprob: -10.750936508178711
    5. '<|end|>' → logprob: -11.250936508178711
    6. ',' → logprob: -11.625936508178711
    7. '```' → logprob: -12.250936508178711
    8. '        ' → logprob: -12.750936508178711
    9. ':' → logprob: -12.875936508178711
    10. '      ' → logprob: -13.500936508178711

Token 300: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02519739232957363
    2. '       ' → logprob: -4.025197505950928
    3. ' if' → logprob: -5.150197505950928
    4. 'def' → logprob: -6.775197505950928
    5. 'return' → logprob: -9.52519702911377
    6. 'pow' → logprob: -12.65019702911377
    7. 'self' → logprob: -13.40019702911377
    8. '   ' → logprob: -13.90019702911377
    9. '```' → logprob: -14.27519702911377
    10. '#' (adapté à ' #') → logprob: -14.40019702911377

Token 301: ' division' (ID: 21629)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6858720779418945
    2. 'if' → logprob: -0.9358720779418945
    3. 'def' → logprob: -2.3108720779418945
    4. 'inv' → logprob: -6.1858720779418945
    5. ' return' → logprob: -6.3108720779418945
    6. ' if' → logprob: -8.310872077941895
    7. '#' → logprob: -8.560872077941895
    8. '   ' → logprob: -8.810872077941895
    9. 'assert' → logprob: -8.935872077941895
    10. 'pow' → logprob: -9.560872077941895

Token 302: ' mod' (ID: 1812)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8471296429634094
    2. '(
' → logprob: -1.8471295833587646
    3. 'def' → logprob: -1.8471295833587646
    4. '(' → logprob: -2.2221295833587646
    5. '       ' → logprob: -3.2221295833587646
    6. ' by' → logprob: -3.5971295833587646
    7. '(self' → logprob: -3.5971295833587646
    8. '   ' → logprob: -3.9721295833587646
    9. ' =' → logprob: -4.722129821777344
    10. 'self' → logprob: -5.347129821777344

Token 303: 'ulaire' (ID: 48584)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8773615956306458
    2. '(self' → logprob: -1.252361536026001
    3. '(
' → logprob: -2.377361536026001
    4. '(' → logprob: -2.502361536026001
    5. ' (' → logprob: -3.502361536026001
    6. '   ' → logprob: -4.00236177444458
    7. '<|end|>' → logprob: -4.00236177444458
    8. '=' → logprob: -4.12736177444458
    9. ',' → logprob: -4.37736177444458
    10. 'self' → logprob: -5.12736177444458

Token 304: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5677496194839478
    2. '<|end|>' → logprob: -1.5677496194839478
    3. '(' → logprob: -2.192749500274658
    4. ':' → logprob: -2.942749500274658
    5. '<|end|>' → logprob: -3.942749500274658
    6. ',' → logprob: -4.317749500274658
    7. ')' → logprob: -5.317749500274658
    8. ' (' → logprob: -5.567749500274658
    9. '(
' → logprob: -5.817749500274658
    10. '.' → logprob: -6.192749500274658

Token 305: ' évidemment' (ID: 94456)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5528685450553894
    2. ' return' → logprob: -1.1778686046600342
    3. '       ' → logprob: -2.427868604660034
    4. 'other' → logprob: -4.677868366241455
    5. 'def' → logprob: -5.302868366241455
    6. ' other' → logprob: -5.552868366241455
    7. 'self' → logprob: -6.427868366241455
    8. 'pow' → logprob: -6.552868366241455
    9. ' pow' → logprob: -6.927868366241455
    10. ' exponent' → logprob: -7.052868366241455

Token 306: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16898266971111298
    2. '(' → logprob: -3.168982744216919
    3. '(other' → logprob: -3.543982744216919
    4. '<|end|>' → logprob: -3.668982744216919
    5. '   ' → logprob: -3.918982744216919
    6. 'other' → logprob: -4.29398250579834
    7. '(
' → logprob: -5.16898250579834
    8. 'def' → logprob: -6.04398250579834
    9. 'self' → logprob: -6.16898250579834
    10. ')' → logprob: -6.16898250579834

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009493502788245678
    2. '(' → logprob: -6.509493350982666
    3. 'return' → logprob: -7.009493350982666
    4. 'self' → logprob: -7.009493350982666
    5. 'if' → logprob: -7.134493350982666
    6. ',' → logprob: -7.259493350982666
    7. '<|end|>' → logprob: -7.509493350982666
    8. '#' → logprob: -7.634493350982666
    9. ')' → logprob: -7.634493350982666
    10. ' =' → logprob: -8.259493827819824

Token 308: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7106854915618896
    2. 'inv' → logprob: -0.8356854915618896
    3. '       ' → logprob: -3.5856854915618896
    4. 'if' (adapté à ' if') → logprob: -3.8356854915618896
    5. 'exp' → logprob: -4.210685729980469
    6. 'pow' → logprob: -5.585685729980469
    7. 'ex' → logprob: -6.335685729980469
    8. 'inverse' → logprob: -6.460685729980469
    9. 'other' → logprob: -6.960685729980469
    10. 'def' → logprob: -7.085685729980469

Token 309: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.023256074637174606
    2. ' isinstance' → logprob: -3.7732560634613037
    3. '(is' → logprob: -12.023256301879883
    4. '   ' → logprob: -12.898256301879883
    5. 'type' → logprob: -14.273256301879883
    6. ' is' → logprob: -14.523256301879883
    7. '  ' → logprob: -15.023256301879883
    8. '    ' → logprob: -15.898256301879883
    9. 'not' → logprob: -16.023256301879883
    10. ' ' → logprob: -16.023256301879883

Token 310: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.000912774819880724
    2. 'other' → logprob: -7.000912666320801
    3. ' other' → logprob: -13.6259126663208
    4. 'Other' → logprob: -17.250913619995117
    5. '(self' → logprob: -19.375913619995117
    6. 'OTHER' → logprob: -21.125913619995117
    7. 'self' → logprob: -21.875913619995117
    8. '.other' → logprob: -22.000913619995117
    9. '其他' → logprob: -22.125913619995117
    10. '_other' → logprob: -22.250913619995117

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3856492842023727e-06
    2. ' ,' → logprob: -14.000000953674316
    3. '(Mod' → logprob: -15.375000953674316
    4. '(),' → logprob: -16.000001907348633
    5. 'a' → logprob: -16.375001907348633
    6. '   ' → logprob: -16.750001907348633
    7. '(' → logprob: -17.000001907348633
    8. 's' → logprob: -17.625001907348633
    9. 'self' → logprob: -17.750001907348633
    10. 'class' → logprob: -18.000001907348633

Token 312: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -4.692145012086257e-05
    2. ' Mod' → logprob: -10.000046730041504
    3. 'int' → logprob: -13.625046730041504
    4. '(Mod' → logprob: -15.250046730041504
    5. 'Modulo' → logprob: -18.50004768371582
    6. 'mod' → logprob: -18.87504768371582
    7. '_mod' → logprob: -19.12504768371582
    8. '_Mod' → logprob: -19.50004768371582
    9. '.Mod' → logprob: -19.87504768371582
    10. 'MOD' → logprob: -19.87504768371582

Token 313: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.0008046258008107543
    2. 'int' → logprob: -7.125804424285889
    3. 'In' → logprob: -16.125804901123047
    4. 'Mod' → logprob: -17.625804901123047
    5. ' Int' → logprob: -18.125804901123047
    6. 'It' → logprob: -18.500804901123047
    7. '```' → logprob: -18.500804901123047
    8. 'INT' → logprob: -18.875804901123047
    9. ' int' → logprob: -19.000804901123047
    10. 'Ints' → logprob: -19.375804901123047

Token 314: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005959733389317989
    2. '):' → logprob: -5.130959510803223
    3. '):
' → logprob: -10.630959510803223
    4. '       ' → logprob: -12.380959510803223
    5. '):

' → logprob: -14.005959510803223
    6. ':
' → logprob: -14.255959510803223
    7. '           ' → logprob: -14.505959510803223
    8. ':' → logprob: -15.255959510803223
    9. ')' → logprob: -15.505959510803223
    10. '   ' → logprob: -15.630959510803223

Token 315: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021528251469135284
    2. 'return' → logprob: -3.8965282440185547
    3. ':
' → logprob: -7.271528244018555
    4. '):
' → logprob: -9.146528244018555
    5. ':' → logprob: -9.646528244018555
    6. ' return' → logprob: -9.896528244018555
    7. ':return' → logprob: -10.271528244018555
    8. '       ' → logprob: -11.396528244018555
    9. '#' → logprob: -12.271528244018555
    10. '):' → logprob: -12.896528244018555

Token 316: ' inv' (ID: 1827)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00023512568441219628
    2. 'inv' (adapté à ' inv') → logprob: -9.000235557556152
    3. ' return' → logprob: -10.125235557556152
    4. '           ' → logprob: -10.750235557556152
    5. 'from' → logprob: -10.875235557556152
    6. 'other' → logprob: -11.500235557556152
    7. '       ' → logprob: -11.500235557556152
    8. '#' → logprob: -12.375235557556152
    9. 'a' → logprob: -13.375235557556152
    10. 'x' → logprob: -14.125235557556152

Token 317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35908669233322144
    2. '_other' → logprob: -1.2340867519378662
    3. '=' → logprob: -5.609086513519287
    4. 'other' → logprob: -5.734086513519287
    5. 'er' → logprob: -6.109086513519287
    6. '_val' → logprob: -8.109086990356445
    7. '_value' → logprob: -8.484086990356445
    8. 'erse' → logprob: -8.609086990356445
    9. 'oker' → logprob: -9.359086990356445
    10. 'Other' → logprob: -9.359086990356445

Token 318: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0641789361834526
    2. 'other' → logprob: -2.814178943634033
    3. 'Mod' → logprob: -6.189178943634033
    4. 'mod' → logprob: -9.189178466796875
    5. ' pow' → logprob: -10.564178466796875
    6. '(pow' → logprob: -11.814178466796875
    7. 'power' → logprob: -12.064178466796875
    8. ' Mod' → logprob: -12.314178466796875
    9. 'self' → logprob: -12.564178466796875
    10. 'Pow' → logprob: -13.439178466796875

Token 319: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0007167232106439769
    2. 'other' → logprob: -7.250716686248779
    3. '(' → logprob: -12.250717163085938
    4. 'Other' → logprob: -14.000717163085938
    5. ' other' → logprob: -14.500717163085938
    6. '(
' → logprob: -15.125717163085938
    7. '_other' → logprob: -15.375717163085938
    8. '.other' → logprob: -16.500717163085938
    9. 'OTHER' → logprob: -18.500717163085938
    10. '-other' → logprob: -18.875717163085938

Token 320: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.625001907348633
    3. 'x' → logprob: -15.125001907348633
    4. ' .' → logprob: -15.625001907348633
    5. '(x' → logprob: -17.250001907348633
    6. ' ' → logprob: -18.250001907348633
    7. '(' → logprob: -19.375001907348633
    8. ',x' → logprob: -19.375001907348633
    9. 'MOD' → logprob: -20.250001907348633
    10. '```' → logprob: -20.250001907348633

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014048899174667895
    2. ',-' → logprob: -9.500140190124512
    3. 'Mod' → logprob: -10.125140190124512
    4. ',
' → logprob: -11.750140190124512
    5. ' ,' → logprob: -12.125140190124512
    6. '(Mod' → logprob: -12.500140190124512
    7. '           ' → logprob: -12.625140190124512
    8. ')' → logprob: -13.375140190124512
    9. '-' → logprob: -13.750140190124512
    10. 'self' → logprob: -14.750140190124512

Token 322: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -9.448370838072151e-05
    2. ' Mod' → logprob: -9.625094413757324
    3. 'self' → logprob: -11.125094413757324
    4. '(Mod' → logprob: -11.750094413757324
    5. '
' → logprob: -13.125094413757324
    6. 'MOD' → logprob: -13.875094413757324
    7. '           ' → logprob: -13.875094413757324
    8. 'Modulo' → logprob: -14.625094413757324
    9. '-' → logprob: -15.250094413757324
    10. '-Mod' → logprob: -15.500094413757324

Token 323: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -3.650518920039758e-06
    2. 'int' → logprob: -12.625003814697266
    3. 'Mod' → logprob: -15.750003814697266
    4. '[Int' → logprob: -18.625003814697266
    5. ' Int' → logprob: -18.750003814697266
    6. '<int' → logprob: -19.000003814697266
    7. 'nt' → logprob: -19.250003814697266
    8. 'In' → logprob: -19.250003814697266
    9. '<Int' → logprob: -19.375003814697266
    10. '_int' → logprob: -19.375003814697266

Token 324: '.MOD' (ID: 141639)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.004143099766224623
    2. '.MOD' → logprob: -5.504143238067627
    3. ' MOD' → logprob: -10.004142761230469
    4. '_MOD' → logprob: -11.504142761230469
    5. '-' → logprob: -12.004142761230469
    6. '.M' → logprob: -13.629142761230469
    7. '.Mod' → logprob: -14.879142761230469
    8. ' -' → logprob: -15.129142761230469
    9. '-M' → logprob: -15.379142761230469
    10. ' ' → logprob: -15.379142761230469

Token 325: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002185118617489934
    2. ' -' → logprob: -6.127185344696045
    3. ' ' → logprob: -17.002185821533203
    4. '−' → logprob: -18.127185821533203
    5. '   ' → logprob: -18.502185821533203
    6. '  ' → logprob: -19.252185821533203
    7. '–' → logprob: -19.252185821533203
    8. '```' → logprob: -19.377185821533203
    9. ' ' → logprob: -20.377185821533203
    10. '()-' → logprob: -20.752185821533203

Token 326: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -16.187509536743164
    4. '   ' → logprob: -17.500009536743164
    5. '۲' → logprob: -17.687509536743164
    6. '
' → logprob: -17.875009536743164
    7. '  ' → logprob: -17.937509536743164
    8. '3' → logprob: -18.312509536743164
    9. '22' → logprob: -18.375009536743164
    10. '-' → logprob: -18.437509536743164

Token 327: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -18.5
    4. '۲' → logprob: -19.125
    5. '3' → logprob: -19.625
    6. '
' → logprob: -19.9375
    7. '２' → logprob: -20.0
    8. '-' → logprob: -20.25
    9. '٢' → logprob: -20.5
    10. '   ' → logprob: -20.5

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019572561606764793
    2. ')' → logprob: -4.019572734832764
    3. ' ,' → logprob: -7.269572734832764
    4. '       ' → logprob: -8.019572257995605
    5. '           ' → logprob: -8.519572257995605
    6. ')
' → logprob: -8.644572257995605
    7. '   ' → logprob: -11.769572257995605
    8. ',self' → logprob: -12.894572257995605
    9. ',
' → logprob: -13.144572257995605
    10. ' )' → logprob: -13.519572257995605

Token 329: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00033581978641450405
    2. ' Mod' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.250335693359375
    4. '(Mod' → logprob: -17.000335693359375
    5. 'MOD' → logprob: -17.250335693359375
    6. '           ' → logprob: -17.250335693359375
    7. '       ' → logprob: -17.375335693359375
    8. ' ' → logprob: -18.250335693359375
    9. ')' → logprob: -19.125335693359375
    10. '        ' → logprob: -19.250335693359375

Token 330: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.4849443838757e-06
    2. 'int' → logprob: -12.625004768371582
    3. '
' → logprob: -14.875004768371582
    4. 'In' → logprob: -15.125004768371582
    5. 'nt' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.875003814697266
    7. ')' → logprob: -17.250003814697266
    8. ' Int' → logprob: -17.375003814697266
    9. ' int' → logprob: -17.375003814697266
    10. '**' → logprob: -17.500003814697266

Token 331: '.MOD' (ID: 141639)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0019764534663408995
    2. '.MOD' → logprob: -6.501976490020752
    3. ')' → logprob: -8.376976013183594
    4. 'Mod' → logprob: -8.501976013183594
    5. '_MOD' → logprob: -10.751976013183594
    6. ' MOD' → logprob: -11.501976013183594
    7. '.Mod' → logprob: -12.751976013183594
    8. '```' → logprob: -13.376976013183594
    9. '   ' → logprob: -13.501976013183594
    10. '(Mod' → logprob: -13.876976013183594

Token 332: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023386752232909203
    2. ')' → logprob: -3.7733867168426514
    3. '       ' → logprob: -9.14838695526123
    4. '           ' → logprob: -10.89838695526123
    5. ')
' → logprob: -11.27338695526123
    6. ' )
' → logprob: -12.89838695526123
    7. ')return' → logprob: -14.02338695526123
    8. ')`
' → logprob: -15.64838695526123
    9. ')

' → logprob: -15.89838695526123
    10. ' )' → logprob: -17.148386001586914

Token 333: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20948182046413422
    2. '       ' → logprob: -1.7094818353652954
    3. '           ' → logprob: -5.459481716156006
    4. ' return' → logprob: -5.584481716156006
    5. 'result' → logprob: -11.459482192993164
    6. '
' → logprob: -12.084482192993164
    7. ')return' → logprob: -12.959482192993164
    8. ')' → logprob: -13.334482192993164
    9. '	return' → logprob: -13.584482192993164
    10. '   ' → logprob: -14.584482192993164

Token 334: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00027134892297908664
    2. ' return' → logprob: -8.250271797180176
    3. '           ' → logprob: -12.125271797180176
    4. '       ' → logprob: -12.625271797180176
    5. 'result' → logprob: -14.500271797180176
    6. ')return' → logprob: -15.125271797180176
    7. '	return' → logprob: -15.250271797180176
    8. '```' → logprob: -15.625271797180176
    9. ':return' → logprob: -16.75027084350586
    10. ')' → logprob: -17.50027084350586

Token 335: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -1.0325924449716695e-05
    2. ' Mod' → logprob: -11.50001049041748
    3. 'self' → logprob: -16.625009536743164
    4. '(Mod' → logprob: -17.250009536743164
    5. '   ' → logprob: -18.625009536743164
    6. 'Modulo' → logprob: -19.000009536743164
    7. '_mod' → logprob: -20.125009536743164
    8. '       ' → logprob: -20.125009536743164
    9. 'Mul' → logprob: -20.375009536743164
    10. 'mod' → logprob: -20.500009536743164

Token 336: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.165027217415627e-05
    2. 'int' → logprob: -10.750021934509277
    3. 'Mod' → logprob: -16.25002098083496
    4. ' Int' → logprob: -19.12502098083496
    5. 'In' → logprob: -20.75002098083496
    6. 'INT' → logprob: -21.12502098083496
    7. '(Int' → logprob: -21.37502098083496
    8. '_int' → logprob: -21.37502098083496
    9. 'Ant' → logprob: -21.50002098083496
    10. '```' → logprob: -21.87502098083496

Token 337: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0683535037969705e-05
    2. 'self' → logprob: -11.50001049041748
    3. '((' → logprob: -15.25001049041748
    4. '(' → logprob: -15.50001049041748
    5. '   ' → logprob: -18.625011444091797
    6. '(
' → logprob: -19.125011444091797
    7. ' (' → logprob: -19.250011444091797
    8. '[self' → logprob: -19.375011444091797
    9. '	self' → logprob: -19.750011444091797
    10. ' self' → logprob: -20.375011444091797

Token 338: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -7.703443770878948e-06
    2. '.' → logprob: -12.500007629394531
    3. 'x' → logprob: -12.750007629394531
    4. '(x' → logprob: -15.250007629394531
    5. ' .' → logprob: -15.500007629394531
    6. '(' → logprob: -15.625007629394531
    7. ').' → logprob: -16.75000762939453
    8. '```' → logprob: -16.75000762939453
    9. '0' → logprob: -17.25000762939453
    10. '*' → logprob: -17.37500762939453

Token 339: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759427547454834
    2. ' *' → logprob: -0.8259427547454834
    3. ')' → logprob: -14.075942993164062
    4. '**' → logprob: -14.700942993164062
    5. ' ' → logprob: -14.825942993164062
    6. '*self' → logprob: -15.075942993164062
    7. '*object' → logprob: -15.200942993164062
    8. '(' → logprob: -15.450942993164062
    9. '```' → logprob: -15.575942993164062
    10. '   ' → logprob: -15.825942993164062

Token 340: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -5.8961017202818766e-05
    2. ' inv' → logprob: -9.750059127807617
    3. '(inv' → logprob: -14.375059127807617
    4. '   ' → logprob: -17.250059127807617
    5. '       ' → logprob: -19.375059127807617
    6. '           ' → logprob: -19.375059127807617
    7. '```' → logprob: -20.375059127807617
    8. '.inv' → logprob: -20.375059127807617
    9. '
' → logprob: -20.500059127807617
    10. ')' → logprob: -20.750059127807617

Token 341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025084958178922534
    2. ')
' → logprob: -8.375250816345215
    3. '       ' → logprob: -11.000250816345215
    4. ' )' → logprob: -13.750250816345215
    5. '   ' → logprob: -14.875250816345215
    6. '),' → logprob: -15.000250816345215
    7. ')%' → logprob: -15.375250816345215
    8. ')
' → logprob: -15.500250816345215
    9. ')return' → logprob: -15.500250816345215
    10. '           ' → logprob: -15.750250816345215

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005972880870103836
    2. '   ' → logprob: -5.880972862243652
    3. ')' → logprob: -6.630972862243652
    4. '<|end|>' → logprob: -6.755972862243652
    5. '        
' → logprob: -8.755972862243652
    6. '
' → logprob: -9.130972862243652
    7. '```' → logprob: -9.130972862243652
    8. '(' → logprob: -9.255972862243652
    9. 'else' → logprob: -10.255972862243652
    10. 'return' → logprob: -10.505972862243652

Token 343: ' return' (ID: 622)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.006191133987158537
    2. '       ' → logprob: -5.506191253662109
    3. 'return' (adapté à ' return') → logprob: -6.631191253662109
    4. 'else' → logprob: -7.256191253662109
    5. ' inv' → logprob: -9.50619125366211
    6. '   ' → logprob: -12.25619125366211
    7. 'if' → logprob: -12.63119125366211
    8. 'other' → logprob: -13.25619125366211
    9. 'inverse' → logprob: -14.38119125366211
    10. 'elif' → logprob: -15.00619125366211

Token 344: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.06295744329690933
    2. 'self' → logprob: -2.812957525253296
    3. ' Mod' → logprob: -7.187957286834717
    4. ' self' → logprob: -8.562957763671875
    5. '(Mod' → logprob: -10.687957763671875
    6. 'pow' → logprob: -11.687957763671875
    7. '   ' → logprob: -13.562957763671875
    8. ' ' → logprob: -13.687957763671875
    9. 'Modulo' → logprob: -13.687957763671875
    10. '  ' → logprob: -13.812957763671875

Token 345: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.981667537620524e-06
    2. 'int' → logprob: -13.625001907348633
    3. ' Int' → logprob: -15.000001907348633
    4. '(Int' → logprob: -15.500001907348633
    5. 'Mod' → logprob: -16.125001907348633
    6. 'INT' → logprob: -17.625001907348633
    7. '(int' → logprob: -18.500001907348633
    8. '[Int' → logprob: -18.625001907348633
    9. '.Int' → logprob: -18.875001907348633
    10. 'Ints' → logprob: -19.000001907348633

Token 346: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2664456789934775e-06
    2. '(int' → logprob: -13.625000953674316
    3. '(' → logprob: -17.625001907348633
    4. '((' → logprob: -18.375001907348633
    5. 'int' → logprob: -19.625001907348633
    6. '(
' → logprob: -20.375001907348633
    7. 'self' → logprob: -20.500001907348633
    8. '(pow' → logprob: -21.250001907348633
    9. '[self' → logprob: -21.750001907348633
    10. '(this' → logprob: -22.000001907348633

Token 347: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.6312321753939614e-05
    2. '.' → logprob: -10.250036239624023
    3. ' .' → logprob: -14.500036239624023
    4. 'x' → logprob: -14.875036239624023
    5. '._' → logprob: -18.500036239624023
    6. '```' → logprob: -18.625036239624023
    7. 'self' → logprob: -18.750036239624023
    8. ' ' → logprob: -19.000036239624023
    9. ').' → logprob: -19.625036239624023
    10. '*' → logprob: -19.625036239624023

Token 348: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09003590047359467
    2. ' *' → logprob: -2.465035915374756
    3. '//' → logprob: -6.965035915374756
    4. ' //' → logprob: -8.840035438537598
    5. ',' → logprob: -13.090035438537598
    6. ' ' → logprob: -13.215035438537598
    7. '   ' → logprob: -14.590035438537598
    8. ')' → logprob: -14.965035438537598
    9. '#' → logprob: -15.340035438537598
    10. ' ' → logprob: -15.465035438537598

Token 349: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0002615742268972099
    2. ' pow' → logprob: -8.250261306762695
    3. '(pow' → logprob: -16.125261306762695
    4. '   ' → logprob: -16.500261306762695
    5. ' ' → logprob: -18.500261306762695
    6. 'p' → logprob: -18.750261306762695
    7. 'po' → logprob: -18.875261306762695
    8. '
' → logprob: -19.625261306762695
    9. '  ' → logprob: -19.875261306762695
    10. 'pw' → logprob: -20.000261306762695

Token 350: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.6240566083070007e-06
    2. 'other' → logprob: -13.375001907348633
    3. '(' → logprob: -17.500001907348633
    4. '(
' → logprob: -20.000001907348633
    5. 'Other' → logprob: -20.500001907348633
    6. ' other' → logprob: -20.750001907348633
    7. '(int' → logprob: -22.500001907348633
    8. '((' → logprob: -22.500001907348633
    9. '(the' → logprob: -22.500001907348633
    10. '.other' → logprob: -22.625001907348633

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.309382373117842e-05
    2. '%' → logprob: -10.750033378601074
    3. ' ,' → logprob: -11.625033378601074
    4. 'Mod' → logprob: -14.625033378601074
    5. ' ' → logprob: -14.750033378601074
    6. 'x' → logprob: -15.000033378601074
    7. '-' → logprob: -15.250033378601074
    8. ',
' → logprob: -15.625033378601074
    9. '(Mod' → logprob: -15.625033378601074
    10. '   ' → logprob: -15.875033378601074

Token 352: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -9.014684110297821e-06
    2. ' Mod' → logprob: -11.750008583068848
    3. '(Mod' → logprob: -13.750008583068848
    4. 'MOD' → logprob: -17.625009536743164
    5. '   ' → logprob: -19.500009536743164
    6. '_mod' → logprob: -20.000009536743164
    7. '_Mod' → logprob: -20.125009536743164
    8. 'Modulo' → logprob: -20.250009536743164
    9. '
' → logprob: -20.625009536743164
    10. '.Mod' → logprob: -21.125009536743164

Token 353: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.0006513170665130019
    2. 'int' → logprob: -7.3756513595581055
    3. '9' → logprob: -11.000651359558105
    4. 'nt' → logprob: -12.000651359558105
    5. 'INT' → logprob: -14.250651359558105
    6. '-' → logprob: -15.125651359558105
    7. 't' → logprob: -15.750651359558105
    8. 'In' → logprob: -15.875651359558105
    9. '1' → logprob: -16.00065040588379
    10. 'Mod' → logprob: -16.00065040588379

Token 354: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.048619840294122696
    2. 'MOD' → logprob: -3.0486197471618652
    3. ' MOD' → logprob: -11.173620223999023
    4. '_MOD' → logprob: -11.673620223999023
    5. '.' → logprob: -12.298620223999023
    6. '.MODE' → logprob: -12.798620223999023
    7. '   ' → logprob: -13.548620223999023
    8. '.Mod' → logprob: -14.798620223999023
    9. '.mod' → logprob: -14.923620223999023
    10. ' .' → logprob: -15.548620223999023

Token 355: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00761005561798811
    2. ' -' → logprob: -4.882609844207764
    3. 'MOD' → logprob: -13.132610321044922
    4. ' ' → logprob: -14.507610321044922
    5. '   ' → logprob: -14.757610321044922
    6. '-mod' → logprob: -15.132610321044922
    7. '−' → logprob: -15.632610321044922
    8. '-Mod' → logprob: -16.132610321044922
    9. '  ' → logprob: -16.257610321044922
    10. '_MOD' → logprob: -16.632610321044922

Token 356: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -15.312504768371582
    4. '۲' → logprob: -15.875004768371582
    5. '   ' → logprob: -16.1875057220459
    6. '２' → logprob: -16.6875057220459
    7. '-' → logprob: -17.0000057220459
    8. '3' → logprob: -17.1250057220459
    9. '٢' → logprob: -17.3125057220459
    10. '  ' → logprob: -17.9375057220459

Token 357: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.000001907348633
    3. '```' → logprob: -15.500001907348633
    4. '3' → logprob: -16.812501907348633
    5. '۲' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.062501907348633
    7. '２' → logprob: -17.312501907348633
    8. '-' → logprob: -17.875001907348633
    9. '٢' → logprob: -18.250001907348633
    10. '  ' → logprob: -18.375001907348633

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.3458322731312364e-06
    2. ' ,' → logprob: -12.375007629394531
    3. ')' → logprob: -13.000007629394531
    4. 'Mod' → logprob: -15.000007629394531
    5. '),' → logprob: -15.500007629394531
    6. '%' → logprob: -16.00000762939453
    7. ',
' → logprob: -16.75000762939453
    8. '(Mod' → logprob: -17.50000762939453
    9. '   ' → logprob: -17.62500762939453
    10. '       ' → logprob: -18.00000762939453

Token 359: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.04858771339058876
    2. ' Mod' → logprob: -3.0485877990722656
    3. '(Mod' → logprob: -15.423587799072266
    4. ' ' → logprob: -17.173587799072266
    5. 'mod' → logprob: -17.173587799072266
    6. ' mod' → logprob: -17.673587799072266
    7. '_mod' → logprob: -17.798587799072266
    8. 'MOD' → logprob: -17.798587799072266
    9. '_Mod' → logprob: -17.798587799072266
    10. '   ' → logprob: -18.298587799072266

Token 360: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -9.078839502763003e-05
    2. '9' → logprob: -10.250090599060059
    3. 'int' → logprob: -10.375090599060059
    4. '7' → logprob: -12.500090599060059
    5. ')' → logprob: -12.625090599060059
    6. 'nt' → logprob: -12.750090599060059
    7. '100' → logprob: -12.750090599060059
    8. 'INT' → logprob: -12.750090599060059
    9. '**' → logprob: -13.375090599060059
    10. '10' → logprob: -13.375090599060059

Token 361: '.MOD' (ID: 141639)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.06216833367943764
    2. '.MOD' → logprob: -2.8121683597564697
    3. ' MOD' → logprob: -9.31216812133789
    4. '_MOD' → logprob: -9.31216812133789
    5. ')' → logprob: -11.18716812133789
    6. '.Mod' → logprob: -13.18716812133789
    7. '7' → logprob: -13.56216812133789
    8. '   ' → logprob: -14.06216812133789
    9. '))' → logprob: -14.56216812133789
    10. '.' → logprob: -14.81216812133789

Token 362: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04859213903546333
    2. ')' → logprob: -3.0485920906066895
    3. '))
' → logprob: -13.423592567443848
    4. ')))' → logprob: -13.423592567443848
    5. ')
' → logprob: -14.173592567443848
    6. '       ' → logprob: -14.673592567443848
    7. '   ' → logprob: -15.048592567443848
    8. ' ))' → logprob: -15.923592567443848
    9. '))

' → logprob: -16.54859161376953
    10. ' )' → logprob: -17.29859161376953

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03632974624633789
    2. ')' → logprob: -4.161329746246338
    3. '<|end|>' → logprob: -4.786329746246338
    4. '
' → logprob: -5.411329746246338
    5. '```' → logprob: -5.786329746246338
    6. 'def' → logprob: -6.161329746246338
    7. ' ' → logprob: -7.661329746246338
    8. ' def' → logprob: -8.28632926940918
    9. '<|end|>' → logprob: -8.28632926940918
    10. '  ' → logprob: -8.53632926940918

Token 364: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3315308094024658
    2. '<|end|>' → logprob: -1.5815308094024658
    3. ')' → logprob: -3.331530809402466
    4. ' ' → logprob: -4.581530570983887
    5. '
' → logprob: -4.706530570983887
    6. 'def' (adapté à ' def') → logprob: -5.331530570983887
    7. '\n' → logprob: -5.831530570983887
    8. '```' → logprob: -6.206530570983887
    9. '<|end|>' → logprob: -6.206530570983887
    10. ':' → logprob: -6.331530570983887

Token 365: ' __' (ID: 2516)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.01822790503501892
    2. '__' → logprob: -4.018228054046631
    3. '_pow' → logprob: -9.768227577209473
    4. 'r' → logprob: -11.268227577209473
    5. 'Pow' → logprob: -13.018227577209473
    6. ' pow' → logprob: -13.393227577209473
    7. ' __' → logprob: -13.518227577209473
    8. 'eq' → logprob: -13.643227577209473
    9. 'power' → logprob: -14.268227577209473
    10. 'mod' → logprob: -15.268227577209473

Token 366: 'r' (ID: 81)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00015550498210359365
    2. 'r' → logprob: -9.500155448913574
    3. 'flo' → logprob: -9.750155448913574
    4. 'eq' → logprob: -10.750155448913574
    5. 'neg' → logprob: -15.375155448913574
    6. 'ip' → logprob: -15.625155448913574
    7. 'tr' → logprob: -15.875155448913574
    8. 'int' → logprob: -16.12515640258789
    9. 'repr' → logprob: -16.25015640258789
    10. 'it' → logprob: -16.37515640258789

Token 367: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -9.088346359931165e-07
    2. 'div' → logprob: -14.000000953674316
    3. 'tru' → logprob: -17.625
    4. ' tr' → logprob: -17.875
    5. 't' → logprob: -18.625
    6. 'r' → logprob: -20.0
    7. '_tr' → logprob: -20.0
    8. '(tr' → logprob: -20.125
    9. 'true' → logprob: -20.25
    10. 'td' → logprob: -21.25

Token 368: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.0001537169300718233
    2. 'ue' → logprob: -9.375153541564941
    3. 'ud' → logprob: -9.875153541564941
    4. 'u' → logprob: -11.375153541564941
    5. '__' → logprob: -13.000153541564941
    6. 'ed' → logprob: -13.125153541564941
    7. '   ' → logprob: -14.375153541564941
    8. 'div' → logprob: -14.625153541564941
    9. 'sub' → logprob: -16.125154495239258
    10. '```' → logprob: -16.250154495239258

Token 369: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.000597116129938513
    2. '__' → logprob: -7.62559700012207
    3. 'div' → logprob: -9.62559700012207
    4. 'u' → logprob: -11.25059700012207
    5. '/' → logprob: -11.50059700012207
    6. 'v' → logprob: -11.87559700012207
    7. 'ued' → logprob: -12.00059700012207
    8. 'ue' → logprob: -13.12559700012207
    9. '```' → logprob: -13.50059700012207
    10. 'ef' → logprob: -14.37559700012207

Token 370: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007130279554985464
    2. '__' → logprob: -7.250712871551514
    3. '__(
' → logprob: -13.125713348388672
    4. '__((' → logprob: -14.500713348388672
    5. '__(*' → logprob: -15.500713348388672
    6. '(self' → logprob: -15.875713348388672
    7. '__('' → logprob: -16.000713348388672
    8. '__[' → logprob: -16.125713348388672
    9. '(' → logprob: -17.500713348388672
    10. '_(' → logprob: -18.375713348388672

Token 371: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.253713218029588e-05
    2. '(self' → logprob: -9.750062942504883
    3. ' self' → logprob: -13.125062942504883
    4. 'def' → logprob: -13.500062942504883
    5. '   ' → logprob: -15.000062942504883
    6. '       ' → logprob: -15.875062942504883
    7. ')' → logprob: -16.625062942504883
    8. 's' → logprob: -17.000062942504883
    9. '(' → logprob: -17.375062942504883
    10. '[' → logprob: -17.500062942504883

Token 372: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.017965076491236687
    2. 'self' → logprob: -4.392964839935303
    3. ')(' → logprob: -6.017964839935303
    4. '__(' → logprob: -6.142964839935303
    5. ')' → logprob: -7.767964839935303
    6. '(' → logprob: -8.767965316772461
    7. ',' → logprob: -9.142965316772461
    8. '```' → logprob: -10.142965316772461
    9. ' (' → logprob: -10.642965316772461
    10. '):
' → logprob: -10.892965316772461

Token 373: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003812217037193477
    2. 'other' → logprob: -8.000381469726562
    3. ' self' → logprob: -10.000381469726562
    4. ' other' → logprob: -15.125381469726562
    5. 'Other' → logprob: -15.750381469726562
    6. '(self' → logprob: -18.875381469726562
    7. '	self' → logprob: -20.250381469726562
    8. ' ' → logprob: -20.500381469726562
    9. '*self' → logprob: -21.875381469726562
    10. '...' → logprob: -22.125381469726562

Token 374: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2197115421295166
    2. 'self' → logprob: -1.9697115421295166
    3. ')(' → logprob: -3.3447115421295166
    4. '):
' → logprob: -4.2197113037109375
    5. '       ' → logprob: -5.7197113037109375
    6. '   ' → logprob: -6.3447113037109375
    7. '(' → logprob: -6.9697113037109375
    8. '):' → logprob: -7.3447113037109375
    9. ',' → logprob: -7.8447113037109375
    10. ' (' → logprob: -8.219711303710938

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018939584493637085
    2. 'return' → logprob: -4.51893949508667
    3. '(' → logprob: -5.14393949508667
    4. ' return' → logprob: -6.89393949508667
    5. '   ' → logprob: -7.64393949508667
    6. '```' → logprob: -8.643939971923828
    7. '(
' → logprob: -9.143939971923828
    8. ')' → logprob: -9.768939971923828
    9. '(return' → logprob: -10.143939971923828
    10. 'def' → logprob: -10.768939971923828

Token 376: ' inv' (ID: 1827)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2511279881000519
    2. '       ' → logprob: -2.0011279582977295
    3. 'inv' (adapté à ' inv') → logprob: -2.5011279582977295
    4. 'self' → logprob: -6.001128196716309
    5. ' return' → logprob: -7.251128196716309
    6. 'inverse' → logprob: -7.376128196716309
    7. 'if' → logprob: -7.626128196716309
    8. 'x' → logprob: -9.126128196716309
    9. ' inv' → logprob: -9.376128196716309
    10. '```' → logprob: -9.751128196716309

Token 377: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889275997877121
    2. ' =' → logprob: -2.578892707824707
    3. '_=' → logprob: -13.703892707824707
    4. '_' → logprob: -14.703892707824707
    5. '(' → logprob: -14.703892707824707
    6. '=self' → logprob: -15.078892707824707
    7. ')' → logprob: -15.828892707824707
    8. 'return' → logprob: -16.703893661499023
    9. '=_' → logprob: -16.703893661499023
    10. '=
' → logprob: -16.828893661499023

Token 378: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0003357006062287837
    2. ' pow' → logprob: -8.000335693359375
    3. '(pow' → logprob: -16.000335693359375
    4. '       ' → logprob: -16.125335693359375
    5. 'self' → logprob: -18.125335693359375
    6. '   ' → logprob: -18.625335693359375
    7. '.pow' → logprob: -19.375335693359375
    8. 'Pow' → logprob: -20.000335693359375
    9. '_pow' → logprob: -20.375335693359375
    10. 'pot' → logprob: -20.625335693359375

Token 379: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.996708104154095e-05
    2. 'self' → logprob: -9.250100135803223
    3. '(' → logprob: -12.500100135803223
    4. '(
' → logprob: -17.125099182128906
    5. '[self' → logprob: -18.625099182128906
    6. ' self' → logprob: -19.625099182128906
    7. '```' → logprob: -19.750099182128906
    8. '$self' → logprob: -19.750099182128906
    9. '	self' → logprob: -20.375099182128906
    10. '(other' → logprob: -20.500099182128906

Token 380: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00015133652777876705
    2. 'x' → logprob: -9.000151634216309
    3. '.' → logprob: -10.500151634216309
    4. ' .' → logprob: -16.125150680541992
    5. '<|end|>' → logprob: -16.875150680541992
    6. ' ' → logprob: -17.000150680541992
    7. 'Other' → logprob: -17.500150680541992
    8. '```' → logprob: -17.625150680541992
    9. ' x' → logprob: -18.250150680541992
    10. ',' → logprob: -18.625150680541992

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ' ,' → logprob: -12.625003814697266
    3. 'Mod' → logprob: -14.500003814697266
    4. ',
' → logprob: -16.875003814697266
    5. ')' → logprob: -17.125003814697266
    6. '(Mod' → logprob: -17.375003814697266
    7. 'mod' → logprob: -18.750003814697266
    8. ' Mod' → logprob: -19.125003814697266
    9. ' ' → logprob: -19.375003814697266
    10. ',int' → logprob: -19.500003814697266

Token 382: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0001596771035110578
    2. ' Mod' → logprob: -8.75015926361084
    3. '(Mod' → logprob: -13.87515926361084
    4. '_mod' → logprob: -16.125160217285156
    5. '_Mod' → logprob: -16.375160217285156
    6. 'MOD' → logprob: -16.500160217285156
    7. '.Mod' → logprob: -17.250160217285156
    8. '-Mod' → logprob: -17.625160217285156
    9. 'Modulo' → logprob: -19.250160217285156
    10. 'Mods' → logprob: -19.500160217285156

Token 383: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.0445127372804563e-05
    2. 'int' → logprob: -11.50001049041748
    3. '-' → logprob: -16.000009536743164
    4. 'Mod' → logprob: -17.125009536743164
    5. '
' → logprob: -17.375009536743164
    6. ' Int' → logprob: -17.375009536743164
    7. 'In' → logprob: -17.625009536743164
    8. 'Ints' → logprob: -18.000009536743164
    9. '.Int' → logprob: -18.250009536743164
    10. ' -' → logprob: -18.375009536743164

Token 384: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.004098942968994379
    2. 'MOD' → logprob: -5.504098892211914
    3. '.MODE' → logprob: -11.379098892211914
    4. '_MOD' → logprob: -12.629098892211914
    5. '.Mod' → logprob: -12.754098892211914
    6. '.' → logprob: -13.379098892211914
    7. '-' → logprob: -13.879098892211914
    8. ' MOD' → logprob: -15.379098892211914
    9. '
' → logprob: -16.254098892211914
    10. '.-' → logprob: -16.879098892211914

Token 385: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3868768811225891
    2. ' -' → logprob: -1.1368768215179443
    3. ' ' → logprob: -12.761877059936523
    4. ')' → logprob: -13.386877059936523
    5. '   ' → logprob: -15.011877059936523
    6. '       ' → logprob: -15.261877059936523
    7. ')-' → logprob: -15.761877059936523
    8. '-)' → logprob: -16.511877059936523
    9. '  ' → logprob: -16.636877059936523
    10. '−' → logprob: -16.761877059936523

Token 386: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.057743949990254e-05
    2. ' ' → logprob: -10.875020980834961
    3. '```' → logprob: -14.687520980834961
    4. '-' → logprob: -15.375020980834961
    5. '3' → logprob: -16.12502098083496
    6. '۲' → logprob: -16.18752098083496
    7. '  ' → logprob: -16.25002098083496
    8. '   ' → logprob: -16.25002098083496
    9. '
' → logprob: -16.93752098083496
    10. '٢' → logprob: -17.18752098083496

Token 387: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.750001907348633
    3. '-' → logprob: -14.625001907348633
    4. '```' → logprob: -16.875001907348633
    5. '۲' → logprob: -17.937501907348633
    6. '  ' → logprob: -18.375001907348633
    7. ' -' → logprob: -18.437501907348633
    8. '２' → logprob: -18.625001907348633
    9. '   ' → logprob: -18.812501907348633
    10. '...' → logprob: -19.312501907348633

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7491250875755213e-05
    2. ')' → logprob: -10.875027656555176
    3. ' ,' → logprob: -12.750027656555176
    4. 'Mod' → logprob: -12.875027656555176
    5. '```' → logprob: -13.875027656555176
    6. '       ' → logprob: -14.125027656555176
    7. '),' → logprob: -14.875027656555176
    8. '   ' → logprob: -15.125027656555176
    9. '(Mod' → logprob: -15.250027656555176
    10. '(),' → logprob: -15.375027656555176

Token 389: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -9.698698704596609e-05
    2. ' Mod' → logprob: -9.250097274780273
    3. '   ' → logprob: -15.000097274780273
    4. 'MOD' → logprob: -15.875097274780273
    5. '       ' → logprob: -16.000097274780273
    6. '(Mod' → logprob: -16.375097274780273
    7. '           ' → logprob: -16.625097274780273
    8. '10' → logprob: -16.875097274780273
    9. '_mod' → logprob: -17.750097274780273
    10. 'mod' → logprob: -18.000097274780273

Token 390: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.00020461321400944144
    2. 'int' → logprob: -8.500205039978027
    3. 'Mod' → logprob: -15.375205039978027
    4. 'nt' → logprob: -15.750205039978027
    5. 'INT' → logprob: -15.750205039978027
    6. 'In' → logprob: -16.12520408630371
    7. ' int' → logprob: -16.37520408630371
    8. ' Int' → logprob: -16.62520408630371
    9. 'Ints' → logprob: -17.12520408630371
    10. '1' → logprob: -17.25020408630371

Token 391: '.MOD' (ID: 141639)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.5043627023696899
    2. '.Mod' → logprob: -1.12936270236969
    3. ')' → logprob: -3.0043625831604004
    4. '.MOD' → logprob: -4.0043625831604
    5. 'MOD' → logprob: -6.2543625831604
    6. '(Mod' → logprob: -6.3793625831604
    7. '.M' → logprob: -7.7543625831604
    8. '   ' → logprob: -8.379363059997559
    9. '_MOD' → logprob: -8.504363059997559
    10. '.' → logprob: -9.379363059997559

Token 392: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47409334778785706
    2. ')' → logprob: -0.9740933179855347
    3. ')
' → logprob: -11.224093437194824
    4. ')

' → logprob: -13.224093437194824
    5. '       ' → logprob: -14.349093437194824
    6. '   ' → logprob: -15.474093437194824
    7. ')return' → logprob: -15.724093437194824
    8. ')`
' → logprob: -15.849093437194824
    9. ' )
' → logprob: -16.224092483520508
    10. ')x' → logprob: -18.724092483520508

Token 393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4744469225406647
    2. 'return' → logprob: -1.0994468927383423
    3. ' return' → logprob: -3.224447011947632
    4. '(' → logprob: -5.724446773529053
    5. ')' → logprob: -7.349446773529053
    6. '(return' → logprob: -8.349447250366211
    7. '	return' → logprob: -8.349447250366211
    8. '   ' → logprob: -8.849447250366211
    9. ':return' → logprob: -9.474447250366211
    10. '```' → logprob: -10.224447250366211

Token 394: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0010039894841611385
    2. ' return' → logprob: -7.001004219055176
    3. 'if' (adapté à ' if') → logprob: -10.001004219055176
    4. 'Mod' → logprob: -10.126004219055176
    5. '       ' → logprob: -12.501004219055176
    6. 'eturn' → logprob: -13.251004219055176
    7. 'Return' → logprob: -15.001004219055176
    8. '   ' → logprob: -15.126004219055176
    9. ':return' → logprob: -15.126004219055176
    10. '	return' → logprob: -15.251004219055176

Token 395: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.0683535037969705e-05
    2. ' isinstance' → logprob: -11.50001049041748
    3. '(is' → logprob: -15.12501049041748
    4. '   ' → logprob: -15.37501049041748
    5. '       ' → logprob: -17.000011444091797
    6. '           ' → logprob: -18.500011444091797
    7. '    ' → logprob: -19.125011444091797
    8. 'instance' → logprob: -19.500011444091797
    9. '  ' → logprob: -19.875011444091797
    10. '	is' → logprob: -20.000011444091797

Token 396: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.00020377879263833165
    2. 'other' → logprob: -8.500204086303711
    3. ' other' → logprob: -15.125204086303711
    4. 'Other' → logprob: -17.75020408630371
    5. 'OTHER' → logprob: -21.50020408630371
    6. '_other' → logprob: -23.25020408630371
    7. '.other' → logprob: -23.37520408630371
    8. '其他' → logprob: -23.62520408630371
    9. '-other' → logprob: -24.25020408630371
    10. '(' → logprob: -24.50020408630371

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.309382373117842e-05
    2. '(Mod' → logprob: -10.625033378601074
    3. ' ,' → logprob: -13.000033378601074
    4. '(other' → logprob: -13.125033378601074
    5. '(' → logprob: -13.500033378601074
    6. 'self' → logprob: -14.000033378601074
    7. 'other' → logprob: -14.250033378601074
    8. 'Other' → logprob: -15.000033378601074
    9. 's' → logprob: -16.000032424926758
    10. ',
' → logprob: -16.000032424926758

Token 398: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -5.955703818472102e-05
    2. ' Mod' → logprob: -9.750059127807617
    3. '(Mod' → logprob: -13.625059127807617
    4. '_mod' → logprob: -17.875059127807617
    5. '_Mod' → logprob: -18.750059127807617
    6. '.Mod' → logprob: -19.250059127807617
    7. 'Modulo' → logprob: -19.500059127807617
    8. '   ' → logprob: -20.000059127807617
    9. 'mod' → logprob: -20.125059127807617
    10. 'MOD' → logprob: -21.250059127807617

Token 399: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -6.988221684878226e-06
    2. 'int' → logprob: -11.875006675720215
    3. 'In' → logprob: -18.12500762939453
    4. ' Int' → logprob: -18.75000762939453
    5. 'INT' → logprob: -19.37500762939453
    6. '_int' → logprob: -20.62500762939453
    7. 'It' → logprob: -20.87500762939453
    8. 'Ints' → logprob: -20.87500762939453
    9. '```' → logprob: -21.12500762939453
    10. '(Int' → logprob: -21.12500762939453

Token 400: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38688579201698303
    2. '):' → logprob: -1.1368857622146606
    3. ':' → logprob: -12.386885643005371
    4. '):
' → logprob: -12.511885643005371
    5. '       ' → logprob: -12.886885643005371
    6. '           ' → logprob: -13.136885643005371
    7. ':
' → logprob: -13.386885643005371
    8. '):

' → logprob: -14.761885643005371
    9. ')' → logprob: -15.261885643005371
    10. '   ' → logprob: -16.636886596679688

Token 401: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24956129491329193
    2. 'return' → logprob: -1.6245613098144531
    3. ' return' → logprob: -3.749561309814453
    4. '       ' → logprob: -8.499561309814453
    5. '```' → logprob: -9.999561309814453
    6. ':return' → logprob: -10.249561309814453
    7. '{return' → logprob: -10.999561309814453
    8. ')return' → logprob: -12.124561309814453
    9. '   ' → logprob: -12.249561309814453
    10. '	return' → logprob: -12.374561309814453

Token 402: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005562512087635696
    2. ' return' → logprob: -7.500556468963623
    3. '           ' → logprob: -13.375555992126465
    4. 'Mod' → logprob: -13.875555992126465
    5. '       ' → logprob: -14.500555992126465
    6. '   ' → logprob: -16.37555694580078
    7. '```' → logprob: -17.50055694580078
    8. ':return' → logprob: -17.50055694580078
    9. 'other' → logprob: -17.75055694580078
    10. '
' → logprob: -17.75055694580078

Token 403: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00016468366084154695
    2. 'other' → logprob: -9.000164985656738
    3. ' Mod' → logprob: -10.125164985656738
    4. '(Mod' → logprob: -13.875164985656738
    5. ' other' → logprob: -16.000164031982422
    6. 'Other' → logprob: -16.125164031982422
    7. '(other' → logprob: -18.000164031982422
    8. 'return' → logprob: -19.375164031982422
    9. 'Modulo' → logprob: -19.500164031982422
    10. 'Mo' → logprob: -19.625164031982422

Token 404: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.1472419600977446e-06
    2. 'int' → logprob: -13.875000953674316
    3. '(other' → logprob: -16.125001907348633
    4. 'other' → logprob: -18.125001907348633
    5. 'Other' → logprob: -18.250001907348633
    6. '(Int' → logprob: -18.625001907348633
    7. 'INT' → logprob: -18.625001907348633
    8. 'Mod' → logprob: -18.750001907348633
    9. ' Int' → logprob: -19.375001907348633
    10. 'I' → logprob: -20.250001907348633

Token 405: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0009142052149400115
    2. 'other' → logprob: -7.000914096832275
    3. '(self' → logprob: -13.125914573669434
    4. '(inv' → logprob: -14.750914573669434
    5. ' other' → logprob: -16.250913619995117
    6. 'self' → logprob: -16.375913619995117
    7. '(' → logprob: -16.625913619995117
    8. 'inv' → logprob: -17.000913619995117
    9. 'Other' → logprob: -17.500913619995117
    10. '.other' → logprob: -19.000913619995117

Token 406: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.128163257315464e-07
    2. 'x' → logprob: -15.75
    3. '.' → logprob: -16.875
    4. '*' → logprob: -18.75
    5. ' .' → logprob: -20.625
    6. '._' → logprob: -20.875
    7. ')' → logprob: -21.25
    8. '(x' → logprob: -21.5
    9. ').' → logprob: -21.625
    10. '```' → logprob: -21.875

Token 407: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10023017972707748
    2. ' *' → logprob: -2.3502302169799805
    3. ')' → logprob: -10.72523021697998
    4. '*self' → logprob: -14.47523021697998
    5. ' ' → logprob: -14.97523021697998
    6. '*object' → logprob: -15.10023021697998
    7. ' ' → logprob: -16.100229263305664
    8. '**' → logprob: -16.225229263305664
    9. ')*' → logprob: -16.600229263305664
    10. '*x' → logprob: -16.975229263305664

Token 408: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0003357006062287837
    2. ' inv' → logprob: -8.000335693359375
    3. '(inv' → logprob: -15.875335693359375
    4. '   ' → logprob: -16.125335693359375
    5. ' ' → logprob: -19.375335693359375
    6. '       ' → logprob: -19.625335693359375
    7. '
' → logprob: -19.625335693359375
    8. '.inv' → logprob: -19.750335693359375
    9. '           ' → logprob: -20.250335693359375
    10. '  ' → logprob: -20.625335693359375

Token 409: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01820285990834236
    2. ')
' → logprob: -4.018202781677246
    3. '       ' → logprob: -9.893202781677246
    4. ')return' → logprob: -13.643202781677246
    5. ')
' → logprob: -13.893202781677246
    6. ')

' → logprob: -15.393202781677246
    7. ')`
' → logprob: -17.768203735351562
    8. ')x' → logprob: -18.143203735351562
    9. '	' → logprob: -18.768203735351562
    10. '   ' → logprob: -18.768203735351562

Token 410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2926313579082489
    2. ')' → logprob: -1.4176313877105713
    3. '(' → logprob: -5.292631149291992
    4. ')return' → logprob: -5.917631149291992
    5. '   ' → logprob: -7.042631149291992
    6. '(other' → logprob: -7.542631149291992
    7. '```' → logprob: -7.542631149291992
    8. 'return' → logprob: -7.667631149291992
    9. '()' → logprob: -8.417631149291992
    10. '<|end|>' → logprob: -8.792631149291992

Token 411: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19328266382217407
    2. 'Mod' → logprob: -1.9432826042175293
    3. ' return' → logprob: -3.4432826042175293
    4. ' Mod' → logprob: -7.693282604217529
    5. '(Mod' → logprob: -9.568283081054688
    6. '       ' → logprob: -10.693283081054688
    7. ')' → logprob: -12.443283081054688
    8. '```' → logprob: -13.318283081054688
    9. '   ' → logprob: -14.193283081054688
    10. 'eturn' → logprob: -14.318283081054688

Token 412: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -1.318681188422488e-05
    2. ' Mod' → logprob: -11.25001335144043
    3. '(Mod' → logprob: -16.00001335144043
    4. '_mod' → logprob: -18.75001335144043
    5. 'Mo' → logprob: -19.87501335144043
    6. 'MOD' → logprob: -20.37501335144043
    7. 'mod' → logprob: -20.50001335144043
    8. '   ' → logprob: -20.62501335144043
    9. '_Mod' → logprob: -20.87501335144043
    10. '.Mod' → logprob: -20.87501335144043

Token 413: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -6.749814019713085e-06
    2. 'int' → logprob: -12.000006675720215
    3. 'Mod' → logprob: -14.750006675720215
    4. ' Int' → logprob: -17.62500762939453
    5. 'Ints' → logprob: -17.87500762939453
    6. '(Int' → logprob: -18.50000762939453
    7. 'INT' → logprob: -19.62500762939453
    8. 't' → logprob: -20.25000762939453
    9. 'It' → logprob: -20.37500762939453
    10. 'Ant' → logprob: -20.87500762939453

Token 414: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -11.875009536743164
    3. 'other' → logprob: -13.000009536743164
    4. '(inv' → logprob: -18.375009536743164
    5. '((' → logprob: -18.500009536743164
    6. ' other' → logprob: -18.750009536743164
    7. '(Mod' → logprob: -18.750009536743164
    8. ' (' → logprob: -18.875009536743164
    9. '.other' → logprob: -18.875009536743164
    10. '(self' → logprob: -19.375009536743164

Token 415: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4741194546222687
    2. ' *' → logprob: -0.9741194248199463
    3. ' ' → logprob: -10.474119186401367
    4. ')' → logprob: -11.599119186401367
    5. ' x' → logprob: -13.349119186401367
    6. ',' → logprob: -13.974119186401367
    7. ' ' → logprob: -14.099119186401367
    8. '.' → logprob: -14.599119186401367
    9. '.x' → logprob: -15.099119186401367
    10. 'x' → logprob: -15.349119186401367

Token 416: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0007104054093360901
    2. ' inv' → logprob: -7.250710487365723
    3. 'pow' → logprob: -14.875710487365723
    4. '(inv' → logprob: -16.625709533691406
    5. '.inv' → logprob: -18.500709533691406
    6. ' ' → logprob: -19.125709533691406
    7. 'int' → logprob: -19.375709533691406
    8. 'self' → logprob: -19.625709533691406
    9. '_inv' → logprob: -19.750709533691406
    10. 'inf' → logprob: -19.875709533691406

Token 417: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.625
    3. ')return' → logprob: -16.125
    4. ' )' → logprob: -18.0
    5. ')

' → logprob: -18.375
    6. ')x' → logprob: -18.625
    7. '       ' → logprob: -18.625
    8. '   ' → logprob: -18.875
    9. '())' → logprob: -19.25
    10. '))' → logprob: -19.25

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03862671181559563
    2. 'def' → logprob: -3.2886266708374023
    3. ' def' → logprob: -8.038626670837402
    4. ' ' → logprob: -9.038626670837402
    5. '    
' → logprob: -10.163626670837402
    6. '```' → logprob: -10.413626670837402
    7. '**' → logprob: -10.663626670837402
    8. '	def' → logprob: -11.038626670837402
    9. '  ' → logprob: -11.163626670837402
    10. ')' → logprob: -11.538626670837402

Token 419: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2873798608779907
    2. '   ' → logprob: -1.4123798608779907
    3. ' def' → logprob: -5.162379741668701
    4. '	def' → logprob: -8.16238021850586
    5. '```' → logprob: -9.53738021850586
    6. '    
' → logprob: -9.91238021850586
    7. ' ' → logprob: -10.03738021850586
    8. '  ' → logprob: -12.16238021850586
    9. ':def' → logprob: -12.53738021850586
    10. '_def' → logprob: -12.53738021850586

Token 420: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1701825112104416
    2. 'pow' → logprob: -2.170182466506958
    3. ' __' → logprob: -3.170182466506958
    4. ' pow' → logprob: -8.170182228088379
    5. '_pow' → logprob: -10.420182228088379
    6. '**' → logprob: -11.170182228088379
    7. '.__' → logprob: -12.045182228088379
    8. ' ' → logprob: -14.045182228088379
    9. 'power' → logprob: -14.420182228088379
    10. '
' → logprob: -14.545182228088379

Token 421: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.011087081395089626
    2. 'eq' → logprob: -4.511086940765381
    3. 'flo' → logprob: -10.511087417602539
    4. 'int' → logprob: -11.511087417602539
    5. 'neg' → logprob: -13.761087417602539
    6. 'power' → logprob: -14.886087417602539
    7. ' pow' → logprob: -15.261087417602539
    8. 'lt' → logprob: -15.761087417602539
    9. 'Pow' → logprob: -16.38608741760254
    10. '_pow' → logprob: -16.51108741760254

Token 422: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.6584848165512085
    2. '(self' → logprob: -1.1584848165512085
    3. '(' → logprob: -1.7834848165512085
    4. '__' → logprob: -9.28348445892334
    5. '*(' → logprob: -9.65848445892334
    6. '__(
' → logprob: -9.78348445892334
    7. '_(' → logprob: -9.90848445892334
    8. '**' → logprob: -10.40848445892334
    9. '```' → logprob: -11.28348445892334
    10. '(
' → logprob: -11.40848445892334

Token 423: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.8444881536415778e-05
    2. '(self' → logprob: -10.500028610229492
    3. ' self' → logprob: -15.000028610229492
    4. '   ' → logprob: -15.375028610229492
    5. 'def' → logprob: -15.625028610229492
    6. '       ' → logprob: -16.750028610229492
    7. '(' → logprob: -18.500028610229492
    8. '0' → logprob: -19.625028610229492
    9. '1' → logprob: -20.000028610229492
    10. '
' → logprob: -20.750028610229492

Token 424: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20660273730754852
    2. '(' → logprob: -1.706602692604065
    3. ',' → logprob: -5.581602573394775
    4. '__(' → logprob: -6.956602573394775
    5. ' (' → logprob: -8.581603050231934
    6. ')(' → logprob: -8.706603050231934
    7. 'self' → logprob: -10.081603050231934
    8. ' ' → logprob: -11.456603050231934
    9. ')' → logprob: -11.456603050231934
    10. '*(' → logprob: -11.831603050231934

Token 425: ' power' (ID: 3470)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.004957408644258976
    2. 'self' → logprob: -6.00495719909668
    3. ' other' → logprob: -6.00495719909668
    4. ' self' → logprob: -11.37995719909668
    5. 'int' → logprob: -14.75495719909668
    6. 'power' → logprob: -15.62995719909668
    7. 'Other' → logprob: -15.75495719909668
    8. '(other' → logprob: -17.00495719909668
    9. ' ' → logprob: -17.75495719909668
    10. 'n' → logprob: -18.75495719909668

Token 426: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013148233294487
    2. '(self' → logprob: -4.388148307800293
    3. ' ,' → logprob: -8.388148307800293
    4. '       ' → logprob: -8.763148307800293
    5. 'self' → logprob: -8.888148307800293
    6. ',self' → logprob: -10.263148307800293
    7. ' (' → logprob: -10.763148307800293
    8. '   ' → logprob: -10.888148307800293
    9. '(' → logprob: -11.263148307800293
    10. '):' → logprob: -11.388148307800293

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021512847393751144
    2. 'self' → logprob: -4.146512985229492
    3. '(self' → logprob: -5.896512985229492
    4. '(' → logprob: -6.646512985229492
    5. 'if' → logprob: -7.396512985229492
    6. 'return' → logprob: -8.021512985229492
    7. 'def' → logprob: -8.521512985229492
    8. '   ' → logprob: -9.521512985229492
    9. ',' → logprob: -9.896512985229492
    10. ' self' → logprob: -10.271512985229492

Token 428: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00043519894825294614
    2. '       ' → logprob: -8.875434875488281
    3. 'result' → logprob: -9.000434875488281
    4. 'pow' → logprob: -9.000434875488281
    5. 'if' (adapté à ' if') → logprob: -10.500434875488281
    6. ' return' → logprob: -11.000434875488281
    7. 'def' → logprob: -13.250434875488281
    8. '```' → logprob: -13.875434875488281
    9. 'Mod' → logprob: -14.500434875488281
    10. '   ' → logprob: -15.000434875488281

Token 429: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.12706218659877777
    2. 'is' → logprob: -2.1270620822906494
    3. ' not' → logprob: -9.62706184387207
    4. 'power' → logprob: -10.00206184387207
    5. 'not' → logprob: -11.25206184387207
    6. '   ' → logprob: -12.37706184387207
    7. ' power' → logprob: -13.37706184387207
    8. '(is' → logprob: -13.62706184387207
    9. 'self' → logprob: -14.12706184387207
    10. ' ' → logprob: -14.62706184387207

Token 430: '(power' (ID: 168790)
  Prédit: '(power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(power' → logprob: -0.011054190807044506
    2. '(other' → logprob: -4.511054039001465
    3. '(self' → logprob: -12.511054039001465
    4. 'power' → logprob: -13.136054039001465
    5. 'other' → logprob: -14.636054039001465
    6. 'Other' → logprob: -15.761054039001465
    7. '(pow' → logprob: -16.26105499267578
    8. ' power' → logprob: -17.88605499267578
    9. '(' → logprob: -18.51105499267578
    10. ' other' → logprob: -19.13605499267578

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025802976451814175
    2. ',int' → logprob: -6.252580165863037
    3. 'int' → logprob: -7.627580165863037
    4. '(int' → logprob: -8.877580642700195
    5. ' ,' → logprob: -11.252580642700195
    6. ' int' → logprob: -11.627580642700195
    7. '(' → logprob: -14.002580642700195
    8. '<int' → logprob: -14.252580642700195
    9. '       ' → logprob: -14.877580642700195
    10. '   ' → logprob: -15.002580642700195

Token 432: ' Mod' (ID: 7191)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20149286091327667
    2. 'Mod' → logprob: -1.7014929056167603
    3. ' int' → logprob: -9.701493263244629
    4. ' Mod' → logprob: -10.951493263244629
    5. '(Mod' → logprob: -14.951493263244629
    6. '(int' → logprob: -15.076493263244629
    7. 'mod' → logprob: -15.201493263244629
    8. 'MOD' → logprob: -18.076492309570312
    9. '_mod' → logprob: -18.451492309570312
    10. '	int' → logprob: -18.451492309570312

Token 433: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.03804241120815277
    2. 'int' → logprob: -3.2880423069000244
    3. ' int' → logprob: -14.038042068481445
    4. 'Mod' → logprob: -17.288042068481445
    5. '_int' → logprob: -17.788042068481445
    6. '(int' → logprob: -17.788042068481445
    7. 'In' → logprob: -19.288042068481445
    8. ' Int' → logprob: -19.538042068481445
    9. 'INT' → logprob: -19.913042068481445
    10. 'nt' → logprob: -20.163042068481445

Token 434: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014171031303703785
    2. '):' → logprob: -4.264171123504639
    3. '):
' → logprob: -12.51417064666748
    4. '       ' → logprob: -13.01417064666748
    5. ':
' → logprob: -14.26417064666748
    6. 'self' → logprob: -15.38917064666748
    7. ')' → logprob: -15.63917064666748
    8. '):

' → logprob: -15.63917064666748
    9. ' ):
' → logprob: -16.014171600341797
    10. ':' → logprob: -16.389171600341797

Token 435: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02745579183101654
    2. '):' → logprob: -4.902455806732178
    3. 'return' → logprob: -5.152455806732178
    4. ':' → logprob: -5.277455806732178
    5. '):
' → logprob: -5.277455806732178
    6. ':
' → logprob: -6.027455806732178
    7. ':return' → logprob: -7.527455806732178
    8. '           ' → logprob: -8.52745532989502
    9. ')' → logprob: -8.52745532989502
    10. ' return' → logprob: -9.27745532989502

Token 436: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20157784223556519
    2. 'power' → logprob: -1.70157790184021
    3. '       ' → logprob: -9.076578140258789
    4. ' return' → logprob: -10.701578140258789
    5. 'pow' → logprob: -10.826578140258789
    6. ' power' → logprob: -12.576578140258789
    7. '           ' → logprob: -13.201578140258789
    8. 'p' → logprob: -13.701578140258789
    9. '   ' → logprob: -14.326578140258789
    10. '(power' → logprob: -14.326578140258789

Token 437: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -8.816591434879228e-05
    2. ' Mod' → logprob: -9.87508773803711
    3. 'self' → logprob: -10.25008773803711
    4. '(Mod' → logprob: -14.00008773803711
    5. 'pow' → logprob: -15.12508773803711
    6. 'Pow' → logprob: -16.25008773803711
    7. '   ' → logprob: -17.62508773803711
    8. '       ' → logprob: -17.75008773803711
    9. ' self' → logprob: -18.00008773803711
    10. '_Mod' → logprob: -18.87508773803711

Token 438: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.0280383548888494e-06
    2. 'int' → logprob: -13.875000953674316
    3. ' Int' → logprob: -17.500001907348633
    4. 'Mod' → logprob: -17.875001907348633
    5. 'INT' → logprob: -18.500001907348633
    6. '(Int' → logprob: -19.000001907348633
    7. '_int' → logprob: -19.500001907348633
    8. '(Mod' → logprob: -19.875001907348633
    9. '_Int' → logprob: -20.750001907348633
    10. '(self' → logprob: -20.750001907348633

Token 439: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.1629646122455597
    2. '(self' → logprob: -1.9129645824432373
    3. 'pow' → logprob: -5.912964820861816
    4. 'self' → logprob: -10.537964820861816
    5. '(power' → logprob: -12.787964820861816
    6. ' pow' → logprob: -13.162964820861816
    7. '(' → logprob: -13.537964820861816
    8. '.pow' → logprob: -17.4129638671875
    9. '_pow' → logprob: -17.5379638671875
    10. 'Pow' → logprob: -17.6629638671875

Token 440: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9862216504407115e-05
    2. '(' → logprob: -11.000020027160645
    3. 'self' → logprob: -12.875020027160645
    4. '(
' → logprob: -14.500020027160645
    5. ' (' → logprob: -19.000019073486328
    6. '       ' → logprob: -19.250019073486328
    7. '   ' → logprob: -19.750019073486328
    8. ' self' → logprob: -20.000019073486328
    9. '[self' → logprob: -20.250019073486328
    10. ')' → logprob: -20.375019073486328

Token 441: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.106736039626412e-05
    2. 'x' → logprob: -11.125031471252441
    3. '(self' → logprob: -12.000031471252441
    4. 'self' → logprob: -12.000031471252441
    5. '(x' → logprob: -13.125031471252441
    6. '.' → logprob: -14.000031471252441
    7. '(' → logprob: -14.125031471252441
    8. ' ' → logprob: -16.000030517578125
    9. ' .' → logprob: -16.250030517578125
    10. '```' → logprob: -17.000030517578125

Token 442: ',' (ID: 11)
  Prédit: '(power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(power' → logprob: -0.16239838302135468
    2. ',' → logprob: -1.912398338317871
    3. 'power' → logprob: -6.537398338317871
    4. ',p' → logprob: -7.912398338317871
    5. ' ,' → logprob: -8.912398338317871
    6. '(pow' → logprob: -9.162398338317871
    7. '(' → logprob: -9.287398338317871
    8. ' power' → logprob: -11.662398338317871
    9. 'pow' → logprob: -11.662398338317871
    10. ' (' → logprob: -12.287398338317871

Token 443: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.03804975748062134
    2. ' power' → logprob: -3.2880496978759766
    3. 'pow' → logprob: -11.788049697875977
    4. '(power' → logprob: -14.288049697875977
    5. ' ' → logprob: -16.913049697875977
    6. 'powers' → logprob: -17.538049697875977
    7. ' pow' → logprob: -17.663049697875977
    8. '  ' → logprob: -18.538049697875977
    9. '   ' → logprob: -18.663049697875977
    10. '_power' → logprob: -18.913049697875977

Token 444: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.1782583391759545e-05
    2. '.' → logprob: -10.375031471252441
    3. 'x' → logprob: -14.875031471252441
    4. ' .' → logprob: -16.375032424926758
    5. ').' → logprob: -17.500032424926758
    6. '.power' → logprob: -17.625032424926758
    7. ')' → logprob: -17.750032424926758
    8. ' ' → logprob: -18.000032424926758
    9. '().' → logprob: -19.250032424926758
    10. 'Power' → logprob: -19.375032424926758

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3142085671424866
    2. '))' → logprob: -1.3142085075378418
    3. ' ,' → logprob: -7.564208507537842
    4. ' ))' → logprob: -8.439208984375
    5. '))
' → logprob: -9.189208984375
    6. ',
' → logprob: -10.064208984375
    7. '       ' → logprob: -10.939208984375
    8. ')' → logprob: -11.439208984375
    9. '   ' → logprob: -11.564208984375
    10. ',None' → logprob: -12.439208984375

Token 446: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -1.9361264946837764e-07
    2. ' Mod' → logprob: -16.25
    3. 'self' → logprob: -18.375
    4. '       ' → logprob: -19.0
    5. '           ' → logprob: -19.25
    6. '(Mod' → logprob: -19.625
    7. '   ' → logprob: -20.25
    8. 'MOD' → logprob: -21.0
    9. '10' → logprob: -21.125
    10. '_mod' → logprob: -21.875

Token 447: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.00023178798437584192
    2. 'int' → logprob: -8.375231742858887
    3. 'Mod' → logprob: -15.125231742858887
    4. 'nt' → logprob: -15.500231742858887
    5. '   ' → logprob: -16.000232696533203
    6. 'INT' → logprob: -16.000232696533203
    7. ' Int' → logprob: -16.625232696533203
    8. '1' → logprob: -16.750232696533203
    9. 'In' → logprob: -16.750232696533203
    10. 'Ints' → logprob: -17.000232696533203

Token 448: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.002478508511558175
    2. 'MOD' → logprob: -6.00247859954834
    3. '.' → logprob: -13.75247859954834
    4. '.MODE' → logprob: -14.25247859954834
    5. '_MOD' → logprob: -14.37747859954834
    6. '.Mod' → logprob: -15.37747859954834
    7. ' MOD' → logprob: -15.37747859954834
    8. ' .' → logprob: -17.127477645874023
    9. '.M' → logprob: -18.002477645874023
    10. '```' → logprob: -18.502477645874023

Token 449: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16300734877586365
    2. '))
' → logprob: -1.913007378578186
    3. '       ' → logprob: -5.9130072593688965
    4. ')' → logprob: -9.788007736206055
    5. '           ' → logprob: -12.288007736206055
    6. '))

' → logprob: -12.413007736206055
    7. '   ' → logprob: -12.913007736206055
    8. ')
' → logprob: -13.163007736206055
    9. ' ))' → logprob: -13.413007736206055
    10. '))
' → logprob: -13.663007736206055

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025857663713395596
    2. '   ' → logprob: -6.5025858879089355
    3. ')' → logprob: -7.2525858879089355
    4. 'return' → logprob: -8.877585411071777
    5. '```' → logprob: -9.752585411071777
    6. ')
' → logprob: -9.877585411071777
    7. '	' → logprob: -10.752585411071777
    8. '(' → logprob: -11.002585411071777
    9. ' return' → logprob: -11.252585411071777
    10. 'def' → logprob: -11.502585411071777

Token 451: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5826690793037415
    2. 'return' (adapté à ' return') → logprob: -0.8326690793037415
    3. 'else' → logprob: -5.582669258117676
    4. ' return' → logprob: -6.707669258117676
    5. '   ' → logprob: -6.957669258117676
    6. ')' → logprob: -8.082669258117676
    7. 'if' → logprob: -8.207669258117676
    8. '```' → logprob: -10.332669258117676
    9. 'def' → logprob: -10.582669258117676
    10. ' else' → logprob: -10.832669258117676

Token 452: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00861456897109747
    2. ' Mod' → logprob: -4.758614540100098
    3. '(Mod' → logprob: -16.883615493774414
    4. 'self' → logprob: -17.008615493774414
    5. 'Mo' → logprob: -18.883615493774414
    6. '_Mod' → logprob: -19.758615493774414
    7. 'mod' → logprob: -20.133615493774414
    8. 'MOD' → logprob: -20.508615493774414
    9. ' ' → logprob: -20.758615493774414
    10. '_mod' → logprob: -20.883615493774414

Token 453: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.00020520923135336488
    2. 'Mod' → logprob: -8.500205039978027
    3. 'int' → logprob: -13.875205039978027
    4. ' Int' → logprob: -14.750205039978027
    5. 'Pow' → logprob: -16.125205993652344
    6. '(Mod' → logprob: -16.250205993652344
    7. 'INT' → logprob: -16.875205993652344
    8. '(Int' → logprob: -17.125205993652344
    9. ' Mod' → logprob: -18.125205993652344
    10. '(pow' → logprob: -19.000205993652344

Token 454: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -8.351697033504024e-05
    2. 'pow' → logprob: -10.000083923339844
    3. '(self' → logprob: -10.250083923339844
    4. '(' → logprob: -13.000083923339844
    5. ' pow' → logprob: -15.375083923339844
    6. '(power' → logprob: -15.500083923339844
    7. '(
' → logprob: -18.125083923339844
    8. '(po' → logprob: -18.250083923339844
    9. '.pow' → logprob: -18.625083923339844
    10. '_pow' → logprob: -20.125083923339844

Token 455: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.3199920178740285e-05
    2. '(' → logprob: -10.750022888183594
    3. 'self' → logprob: -13.375022888183594
    4. '(
' → logprob: -16.000022888183594
    5. ' self' → logprob: -17.875022888183594
    6. ',self' → logprob: -18.250022888183594
    7. ' (' → logprob: -18.375022888183594
    8. '[self' → logprob: -18.750022888183594
    9. ')' → logprob: -18.875022888183594
    10. '=self' → logprob: -19.500022888183594

Token 456: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.013637421652674675
    2. 'self' → logprob: -4.388637542724609
    3. '(self' → logprob: -7.513637542724609
    4. '.' → logprob: -8.13863754272461
    5. ' .' → logprob: -8.76363754272461
    6. ' self' → logprob: -9.38863754272461
    7. '.self' → logprob: -11.01363754272461
    8. '.s' → logprob: -11.63863754272461
    9. ',' → logprob: -12.01363754272461
    10. 'x' → logprob: -12.26363754272461

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012737659562844783
    2. '(power' → logprob: -9.625127792358398
    3. ' ,' → logprob: -9.750127792358398
    4. '(' → logprob: -13.625127792358398
    5. ',p' → logprob: -13.875127792358398
    6. '(pow' → logprob: -14.625127792358398
    7. 'power' → logprob: -15.000127792358398
    8. 'pow' → logprob: -16.6251277923584
    9. 'self' → logprob: -17.0001277923584
    10. ',self' → logprob: -17.8751277923584

Token 458: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.07889033854007721
    2. ' power' → logprob: -2.578890323638916
    3. 'pow' → logprob: -14.578890800476074
    4. '(power' → logprob: -16.578889846801758
    5. ' ' → logprob: -18.453889846801758
    6. ' pow' → logprob: -19.453889846801758
    7. 'powers' → logprob: -19.578889846801758
    8. '   ' → logprob: -19.578889846801758
    9. 'self' → logprob: -19.828889846801758
    10. '    ' → logprob: -20.203889846801758

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013345248298719525
    2. ' ,' → logprob: -6.6263346672058105
    3. '.x' → logprob: -12.376334190368652
    4. ')' → logprob: -13.251334190368652
    5. ',x' → logprob: -14.501334190368652
    6. '.' → logprob: -14.751334190368652
    7. ' ' → logprob: -14.876334190368652
    8. '))' → logprob: -15.001334190368652
    9. 'x' → logprob: -15.251334190368652
    10. '[' → logprob: -15.501334190368652

Token 460: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.004621303640305996
    2. ' Mod' → logprob: -5.379621505737305
    3. 'MOD' → logprob: -15.254621505737305
    4. '(Mod' → logprob: -15.379621505737305
    5. 'mod' → logprob: -15.754621505737305
    6. '_Mod' → logprob: -16.004621505737305
    7. '_mod' → logprob: -16.129621505737305
    8. '.Mod' → logprob: -16.379621505737305
    9. ' ' → logprob: -17.004621505737305
    10. '   ' → logprob: -17.004621505737305

Token 461: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -8.578184497309849e-05
    2. 'int' → logprob: -9.625085830688477
    3. 'Mod' → logprob: -11.000085830688477
    4. 'INT' → logprob: -14.250085830688477
    5. '9' → logprob: -14.750085830688477
    6. ')' → logprob: -15.250085830688477
    7. 'OD' → logprob: -15.250085830688477
    8. 'od' → logprob: -15.500085830688477
    9. 'MOD' → logprob: -15.625085830688477
    10. '**' → logprob: -15.625085830688477

Token 462: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -6.0391463193809614e-05
    2. 'MOD' → logprob: -9.750060081481934
    3. '.' → logprob: -13.875060081481934
    4. '.MODE' → logprob: -14.500060081481934
    5. ' MOD' → logprob: -15.000060081481934
    6. '_MOD' → logprob: -15.500060081481934
    7. '.Mod' → logprob: -15.875060081481934
    8. ' .' → logprob: -17.62506103515625
    9. '.mod' → logprob: -19.37506103515625
    10. '.M' → logprob: -19.75006103515625

Token 463: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011053952388465405
    2. '))' → logprob: -4.511054039001465
    3. ')
' → logprob: -12.636054039001465
    4. '       ' → logprob: -13.136054039001465
    5. ')))' → logprob: -15.261054039001465
    6. '))
' → logprob: -15.511054039001465
    7. ' )' → logprob: -15.636054039001465
    8. ')}' → logprob: -16.13605308532715
    9. '   ' → logprob: -16.63605308532715
    10. ')**' → logprob: -17.26105308532715

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05400284379720688
    2. 'def' → logprob: -3.5540027618408203
    3. '<|end|>' → logprob: -4.05400276184082
    4. ' def' → logprob: -5.92900276184082
    5. ')' → logprob: -6.17900276184082
    6. '```' → logprob: -7.30400276184082
    7. '    
' → logprob: -7.92900276184082
    8. ' ' → logprob: -8.17900276184082
    9. '	def' → logprob: -8.30400276184082
    10. '
' → logprob: -9.42900276184082

Token 465: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05695688724517822
    2. 'def' (adapté à ' def') → logprob: -3.1819567680358887
    3. ' def' → logprob: -4.681956768035889
    4. '<|end|>' → logprob: -5.931956768035889
    5. '```' → logprob: -7.931956768035889
    6. ':' → logprob: -7.931956768035889
    7. '	def' → logprob: -8.181957244873047
    8. ' ' → logprob: -8.556957244873047
    9. '  ' → logprob: -8.681957244873047
    10. ':def' → logprob: -8.806957244873047

Token 466: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.572941179503687e-05
    2. ' __' → logprob: -10.000045776367188
    3. 'inv' → logprob: -16.625045776367188
    4. 'to' → logprob: -16.750045776367188
    5. 'inverse' → logprob: -16.750045776367188
    6. '.__' → logprob: -17.125045776367188
    7. 'def' → logprob: -18.000045776367188
    8. 'pow' → logprob: -18.625045776367188
    9. '___' → logprob: -18.750045776367188
    10. '```' → logprob: -19.500045776367188

Token 467: 'r' (ID: 81)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0014420190127566457
    2. 'pow' → logprob: -7.001441955566406
    3. 'neg' → logprob: -8.001441955566406
    4. 'int' → logprob: -8.751441955566406
    5. 'flo' → logprob: -10.251441955566406
    6. 'lt' → logprob: -14.001441955566406
    7. 'hash' → logprob: -15.251441955566406
    8. 'ip' → logprob: -15.376441955566406
    9. 'bool' → logprob: -16.001441955566406
    10. 'xor' → logprob: -16.126441955566406

Token 468: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.0280383548888494e-06
    2. '_pow' → logprob: -14.750000953674316
    3. '**' → logprob: -15.750000953674316
    4. 'add' → logprob: -16.000001907348633
    5. 'xor' → logprob: -16.250001907348633
    6. 'p' → logprob: -16.750001907348633
    7. 'power' → logprob: -17.125001907348633
    8. '__' → logprob: -18.625001907348633
    9. 'Pow' → logprob: -18.750001907348633
    10. 'mul' → logprob: -19.375001907348633

Token 469: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0015187880489975214
    2. '__' → logprob: -6.501518726348877
    3. '__(
' → logprob: -11.751519203186035
    4. '__(*' → logprob: -12.501519203186035
    5. '__((' → logprob: -12.626519203186035
    6. '__('' → logprob: -13.876519203186035
    7. '(' → logprob: -15.251519203186035
    8. '__("' → logprob: -15.626519203186035
    9. '```' → logprob: -16.12651824951172
    10. '(self' → logprob: -16.37651824951172

Token 470: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003421375877223909
    2. '(self' → logprob: -8.00034236907959
    3. ' self' → logprob: -12.62534236907959
    4. '(' → logprob: -12.87534236907959
    5. 'def' → logprob: -14.87534236907959
    6. ')' → logprob: -16.000341415405273
    7. 's' → logprob: -16.375341415405273
    8. ',' → logprob: -17.875341415405273
    9. ' (' → logprob: -18.000341415405273
    10. '__(' → logprob: -18.000341415405273

Token 471: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0024987291544675827
    2. '(self' → logprob: -6.502498626708984
    3. '__' → logprob: -7.377498626708984
    4. '(' → logprob: -8.002498626708984
    5. '__(
' → logprob: -11.002498626708984
    6. '_(' → logprob: -11.752498626708984
    7. '__((' → logprob: -12.377498626708984
    8. '__(*' → logprob: -12.877498626708984
    9. '```' → logprob: -13.502498626708984
    10. 'self' → logprob: -13.502498626708984

Token 472: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16333018243312836
    2. 'other' → logprob: -1.9133301973342896
    3. ' other' → logprob: -6.163330078125
    4. ' self' → logprob: -6.913330078125
    5. 'Other' → logprob: -13.538330078125
    6. ' ' → logprob: -16.163330078125
    7. 'power' → logprob: -16.538330078125
    8. ',' → logprob: -17.913330078125
    9. '(self' → logprob: -18.163330078125
    10. '其他' → logprob: -18.288330078125

Token 473: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18213696777820587
    2. '(self' → logprob: -2.0571370124816895
    3. '(' → logprob: -3.6821370124816895
    4. ' (' → logprob: -5.4321370124816895
    5. '):' → logprob: -5.9321370124816895
    6. ')(' → logprob: -6.0571370124816895
    7. '):
' → logprob: -6.1821370124816895
    8. '__(' → logprob: -7.4321370124816895
    9. 'self' → logprob: -7.6821370124816895
    10. '*(' → logprob: -8.557136535644531

Token 474: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.633810818195343
    2. '(self' → logprob: -0.883810818195343
    3. '       ' → logprob: -3.5088107585906982
    4. 'self' → logprob: -4.383810997009277
    5. 'def' → logprob: -4.633810997009277
    6. 'return' → logprob: -5.758810997009277
    7. '   ' → logprob: -7.883810997009277
    8. ' (' → logprob: -8.008810997009277
    9. '(
' → logprob: -8.758810997009277
    10. '```' → logprob: -10.758810997009277

Token 475: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02198713831603527
    2. '       ' → logprob: -4.646986961364746
    3. 'def' → logprob: -4.646986961364746
    4. ' return' → logprob: -6.271986961364746
    5. '(' → logprob: -8.021986961364746
    6. 'self' → logprob: -9.521986961364746
    7. '   ' → logprob: -10.021986961364746
    8. 'Mod' → logprob: -10.396986961364746
    9. '(return' → logprob: -10.771986961364746
    10. '        ' → logprob: -11.021986961364746

Token 476: ' Util' (ID: 13564)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3818328380584717
    2. 'Mod' → logprob: -1.6318328380584717
    3. 'def' → logprob: -2.7568328380584717
    4. 'Not' → logprob: -3.1318328380584717
    5. 'self' → logprob: -5.131833076477051
    6. 'pow' → logprob: -5.631833076477051
    7. 'if' → logprob: -6.506833076477051
    8. 'lambda' → logprob: -6.756833076477051
    9. ' return' → logprob: -7.631833076477051
    10. 'raise' → logprob: -8.00683307647705

Token 477: 'isé' (ID: 30065)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2629965543746948
    2. 'def' → logprob: -2.1379966735839844
    3. ')' → logprob: -3.3879966735839844
    4. '   ' → logprob: -4.012996673583984
    5. 'isateur' → logprob: -4.012996673583984
    6. '(' → logprob: -4.512996673583984
    7. 'ize' → logprob: -5.012996673583984
    8. 'return' → logprob: -5.387996673583984
    9. 'isant' → logprob: -5.387996673583984
    10. 'isez' → logprob: -5.887996673583984

Token 478: '?' (ID: 30)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0464949831366539
    2. '(
' → logprob: -3.421494960784912
    3. '(self' → logprob: -5.046494960784912
    4. ' (' → logprob: -5.171494960784912
    5. 'def' → logprob: -8.42149543762207
    6. '   ' → logprob: -9.04649543762207
    7. 'return' → logprob: -9.17149543762207
    8. '       ' → logprob: -9.92149543762207
    9. '(pow' → logprob: -10.17149543762207
    10. '(return' → logprob: -10.67149543762207

Token 479: ' Peut' (ID: 116891)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06747158616781235
    2. '       ' → logprob: -4.067471504211426
    3. '(self' → logprob: -4.067471504211426
    4. ' (' → logprob: -4.567471504211426
    5. '   ' → logprob: -4.692471504211426
    6. '(
' → logprob: -5.442471504211426
    7. 'def' → logprob: -5.692471504211426
    8. 'return' → logprob: -5.942471504211426
    9. 'self' → logprob: -8.567471504211426
    10. '(return' → logprob: -8.692471504211426

Token 480: '-être' (ID: 33599)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.31212374567985535
    2. '-être' → logprob: -1.4371237754821777
    3. 'etre' → logprob: -4.062123775482178
    4. '-' → logprob: -4.687123775482178
    5. 'ê' → logprob: -6.937123775482178
    6. 'êt' → logprob: -6.937123775482178
    7. '-il' → logprob: -7.562123775482178
    8. '```' → logprob: -8.68712329864502
    9. '-elle' → logprob: -8.81212329864502
    10. 'êtres' → logprob: -8.81212329864502

Token 481: ' pas' (ID: 2173)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5922466516494751
    2. '(' → logprob: -1.092246651649475
    3. '       ' → logprob: -2.8422465324401855
    4. '(
' → logprob: -3.0922465324401855
    5. '   ' → logprob: -5.8422465324401855
    6. 'def' → logprob: -6.2172465324401855
    7. ' (' → logprob: -6.7172465324401855
    8. 'return' → logprob: -7.0922465324401855
    9. 'self' → logprob: -8.717247009277344
    10. ',' → logprob: -9.092247009277344

Token 482: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06984961777925491
    2. '(' → logprob: -3.194849729537964
    3. '       ' → logprob: -3.819849729537964
    4. ' (' → logprob: -6.319849491119385
    5. '   ' → logprob: -6.444849491119385
    6. 'def' → logprob: -7.569849491119385
    7. '(
' → logprob: -7.819849491119385
    8. 'return' → logprob: -10.069849967956543
    9. ' def' → logprob: -10.194849967956543
    10. 'self' → logprob: -10.194849967956543

Token 483: ' mais' (ID: 2899)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5847654342651367
    2. '       ' → logprob: -0.8347654342651367
    3. 'def' → logprob: -5.584765434265137
    4. ' return' → logprob: -5.834765434265137
    5. 'self' → logprob: -6.959765434265137
    6. '
' → logprob: -7.459765434265137
    7. 'if' → logprob: -7.959765434265137
    8. '   ' → logprob: -8.709765434265137
    9. '           ' → logprob: -10.584765434265137
    10. '               ' → logprob: -12.084765434265137

Token 484: ' sait' (ID: 52101)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09500471502542496
    2. ' return' → logprob: -2.4700047969818115
    3. 'def' → logprob: -5.845004558563232
    4. '       ' → logprob: -5.970004558563232
    5. '
' → logprob: -7.970004558563232
    6. '   ' → logprob: -9.47000503540039
    7. '```' → logprob: -9.97000503540039
    8. 'pass' → logprob: -10.47000503540039
    9. '``' → logprob: -10.59500503540039
    10. '           ' → logprob: -10.97000503540039

Token 485: '-on' (ID: 13237)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5076938271522522
    2. '_' → logprob: -2.6326937675476074
    3. '-on' → logprob: -2.7576937675476074
    4. '()' → logprob: -3.2576937675476074
    5. 'être' → logprob: -3.2576937675476074
    6. '-' → logprob: -3.2576937675476074
    7. '?' → logprob: -3.5076937675476074
    8. '-être' → logprob: -3.8826937675476074
    9. 'ieux' → logprob: -4.757693767547607
    10. '-ce' → logprob: -4.882693767547607

Token 486: ' jamais' (ID: 23077)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.2197311669588089
    2. '```' → logprob: -1.9697312116622925
    3. '(' → logprob: -3.719731092453003
    4. ')' → logprob: -4.594731330871582
    5. ' ' → logprob: -4.844731330871582
    6. '()' → logprob: -5.219731330871582
    7. ' ?' → logprob: -5.969731330871582
    8. '   ' → logprob: -6.344731330871582
    9. ' (' → logprob: -6.594731330871582
    10. ' )' → logprob: -7.719731330871582

Token 487: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22083961963653564
    2. '(self' → logprob: -2.345839500427246
    3. '(' → logprob: -2.470839500427246
    4. ' (' → logprob: -4.720839500427246
    5. '   ' → logprob: -5.345839500427246
    6. '(
' → logprob: -6.470839500427246
    7. 'def' → logprob: -7.470839500427246
    8. '):
' → logprob: -7.595839500427246
    9. '):' → logprob: -7.970839500427246
    10. ')' → logprob: -8.220839500427246

Token 488: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3106282353401184
    2. '       ' → logprob: -1.8106281757354736
    3. '(' → logprob: -2.6856281757354736
    4. 'self' → logprob: -4.435628414154053
    5. 'def' → logprob: -4.435628414154053
    6. '   ' → logprob: -4.810628414154053
    7. ' (' → logprob: -6.685628414154053
    8. 'return' → logprob: -6.685628414154053
    9. ' def' → logprob: -8.185627937316895
    10. '(
' → logprob: -8.560627937316895

Token 489: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024722306057810783
    2. 'def' → logprob: -3.7747223377227783
    3. '       ' → logprob: -7.149722099304199
    4. 'if' (adapté à ' if') → logprob: -8.1497220993042
    5. ' return' → logprob: -8.2747220993042
    6. 'self' → logprob: -9.3997220993042
    7. '   ' → logprob: -9.7747220993042
    8. '(self' → logprob: -13.2747220993042
    9. '           ' → logprob: -13.8997220993042
    10. ' def' → logprob: -14.0247220993042

Token 490: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0009125363430939615
    2. ' isinstance' → logprob: -7.000912666320801
    3. '(is' → logprob: -14.1259126663208
    4. '   ' → logprob: -14.8759126663208
    5. '  ' → logprob: -17.375911712646484
    6. '    ' → logprob: -17.625911712646484
    7. '       ' → logprob: -18.750911712646484
    8. 'elif' → logprob: -19.000911712646484
    9. '.is' → logprob: -19.250911712646484
    10. 'not' → logprob: -19.375911712646484

Token 491: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -6.2729995988775045e-06
    2. 'other' → logprob: -12.000006675720215
    3. 'Other' → logprob: -18.2500057220459
    4. ' other' → logprob: -19.7500057220459
    5. '(self' → logprob: -21.1250057220459
    6. '(' → logprob: -22.0000057220459
    7. 'OTHER' → logprob: -23.0000057220459
    8. '其他' → logprob: -23.8750057220459
    9. '_other' → logprob: -24.6250057220459
    10. ' (' → logprob: -24.6250057220459

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6656825866666622e-05
    2. '(other' → logprob: -10.62502670288086
    3. '(Mod' → logprob: -13.62502670288086
    4. 'other' → logprob: -14.12502670288086
    5. ' ,' → logprob: -15.37502670288086
    6. 'self' → logprob: -16.75002670288086
    7. ',
' → logprob: -16.75002670288086
    8. ' other' → logprob: -17.37502670288086
    9. 'Other' → logprob: -17.75002670288086
    10. 'Mod' → logprob: -17.87502670288086

Token 493: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -4.60414821645827e-06
    2. ' Mod' → logprob: -12.375004768371582
    3. 'int' → logprob: -15.250004768371582
    4. '(Mod' → logprob: -15.875004768371582
    5. '_mod' → logprob: -20.625003814697266
    6. '_Mod' → logprob: -21.375003814697266
    7. 'mod' → logprob: -21.750003814697266
    8. '   ' → logprob: -22.125003814697266
    9. 'Modulo' → logprob: -22.125003814697266
    10. '.Mod' → logprob: -22.250003814697266

Token 494: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.8624639324116288e-06
    2. 'int' → logprob: -13.250001907348633
    3. ' Int' → logprob: -18.375001907348633
    4. 'Ints' → logprob: -18.500001907348633
    5. 'Mod' → logprob: -18.625001907348633
    6. 'In' → logprob: -19.375001907348633
    7. 'INT' → logprob: -19.750001907348633
    8. '(Int' → logprob: -20.500001907348633
    9. '
' → logprob: -20.500001907348633
    10. '_int' → logprob: -20.625001907348633

Token 495: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.001180704333819449
    2. '):' → logprob: -6.751180648803711
    3. '       ' → logprob: -11.876180648803711
    4. '):
' → logprob: -12.876180648803711
    5. '   ' → logprob: -15.126180648803711
    6. '           ' → logprob: -15.376180648803711
    7. '):

' → logprob: -15.501180648803711
    8. ':
' → logprob: -15.626180648803711
    9. ')' → logprob: -16.50118064880371
    10. ' ):
' → logprob: -16.62618064880371

Token 496: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017241235822439194
    2. 'return' → logprob: -4.51724100112915
    3. ':
' → logprob: -5.64224100112915
    4. '):
' → logprob: -6.89224100112915
    5. 'Mod' → logprob: -7.39224100112915
    6. 'Other' → logprob: -7.64224100112915
    7. ' return' → logprob: -8.892241477966309
    8. 'other' → logprob: -9.642241477966309
    9. ':return' → logprob: -9.892241477966309
    10. '
' → logprob: -10.142241477966309

Token 497: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00025073037249967456
    2. ' return' → logprob: -8.750250816345215
    3. 'Mod' → logprob: -9.375250816345215
    4. '       ' → logprob: -12.125250816345215
    5. '           ' → logprob: -13.875250816345215
    6. 'other' → logprob: -14.250250816345215
    7. '   ' → logprob: -16.2502498626709
    8. ' Mod' → logprob: -16.6252498626709
    9. ':return' → logprob: -17.1252498626709
    10. '(Mod' → logprob: -17.3752498626709

Token 498: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.4742219150066376
    2. 'other' → logprob: -0.97422194480896
    3. 'Other' → logprob: -9.974222183227539
    4. '(other' → logprob: -10.599222183227539
    5. 'pow' → logprob: -10.599222183227539
    6. ' Mod' → logprob: -11.099222183227539
    7. '(Mod' → logprob: -11.099222183227539
    8. ' other' → logprob: -11.474222183227539
    9. 'Pow' → logprob: -12.224222183227539
    10. 'mod' → logprob: -13.974222183227539

Token 499: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.1472419600977446e-06
    2. 'int' → logprob: -14.500000953674316
    3. 'Mod' → logprob: -15.750000953674316
    4. '(Int' → logprob: -16.000001907348633
    5. 'In' → logprob: -16.375001907348633
    6. ' Int' → logprob: -16.500001907348633
    7. '_Int' → logprob: -17.625001907348633
    8. '_int' → logprob: -17.625001907348633
    9. 'Ints' → logprob: -18.375001907348633
    10. '[Int' → logprob: -18.500001907348633

Token 500: '(pow' (ID: 189160)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.04875291511416435
    2. '(pow' → logprob: -3.048753023147583
    3. 'other' → logprob: -9.298752784729004
    4. '(other' → logprob: -9.548752784729004
    5. ' pow' → logprob: -13.173752784729004
    6. 'Pow' → logprob: -14.923752784729004
    7. '.pow' → logprob: -15.548752784729004
    8. 'Other' → logprob: -15.673752784729004
    9. '(' → logprob: -16.42375373840332
    10. '_pow' → logprob: -17.42375373840332

Token 501: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -8.2994620242971e-06
    2. 'other' → logprob: -11.750008583068848
    3. '(self' → logprob: -15.250008583068848
    4. '(' → logprob: -16.25000762939453
    5. ' other' → logprob: -17.00000762939453
    6. 'Other' → logprob: -18.87500762939453
    7. 'self' → logprob: -20.00000762939453
    8. '(
' → logprob: -20.37500762939453
    9. '_other' → logprob: -20.87500762939453
    10. '其他' → logprob: -21.25000762939453

Token 502: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.8889261304575484e-06
    2. '.' → logprob: -12.625003814697266
    3. ' .' → logprob: -15.625003814697266
    4. 'x' → logprob: -16.125003814697266
    5. ').' → logprob: -16.500003814697266
    6. '.r' → logprob: -16.625003814697266
    7. ' ' → logprob: -17.250003814697266
    8. ')' → logprob: -17.750003814697266
    9. ',' → logprob: -17.875003814697266
    10. '```' → logprob: -18.875003814697266

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00376314390450716
    2. '.x' → logprob: -5.628763198852539
    3. ' ,' → logprob: -9.378763198852539
    4. 'self' → logprob: -9.878763198852539
    5. '.' → logprob: -10.878763198852539
    6. ' ' → logprob: -13.253763198852539
    7. ',x' → logprob: -13.253763198852539
    8. ' self' → logprob: -13.503763198852539
    9. ',self' → logprob: -14.128763198852539
    10. ' .' → logprob: -14.378763198852539

Token 504: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012415809032972902
    2. ' self' → logprob: -9.000123977661133
    3. '       ' → logprob: -14.625123977661133
    4. '(self' → logprob: -15.125123977661133
    5. '   ' → logprob: -18.375123977661133
    6. '           ' → logprob: -19.250123977661133
    7. '[self' → logprob: -20.000123977661133
    8. '
' → logprob: -20.250123977661133
    9. ' ' → logprob: -20.750123977661133
    10. 'mod' → logprob: -21.000123977661133

Token 505: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.8889261304575484e-06
    2. 'x' → logprob: -12.500003814697266
    3. '.' → logprob: -16.000003814697266
    4. ' ' → logprob: -18.750003814697266
    5. ' .' → logprob: -18.750003814697266
    6. ')' → logprob: -19.750003814697266
    7. '```' → logprob: -19.875003814697266
    8. '(' → logprob: -20.000003814697266
    9. ' x' → logprob: -20.000003814697266
    10. '(x' → logprob: -21.000003814697266

Token 506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.741137283621356e-05
    2. '))' → logprob: -10.375057220458984
    3. ' ,' → logprob: -11.375057220458984
    4. 'Mod' → logprob: -11.500057220458984
    5. '),' → logprob: -13.500057220458984
    6. '%' → logprob: -13.625057220458984
    7. ')' → logprob: -14.625057220458984
    8. ' Mod' → logprob: -15.500057220458984
    9. '.Mod' → logprob: -15.625057220458984
    10. '(Mod' → logprob: -15.625057220458984

Token 507: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.002475777640938759
    2. ' Mod' → logprob: -6.002475738525391
    3. '(Mod' → logprob: -16.50247573852539
    4. 'mod' → logprob: -17.00247573852539
    5. '.Mod' → logprob: -18.37747573852539
    6. '       ' → logprob: -19.00247573852539
    7. 'MOD' → logprob: -19.00247573852539
    8. '_mod' → logprob: -19.12747573852539
    9. '_Mod' → logprob: -20.00247573852539
    10. ')' → logprob: -20.75247573852539

Token 508: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.1637164789135568e-05
    2. 'int' → logprob: -11.375011444091797
    3. 'INT' → logprob: -17.000011444091797
    4. ' Int' → logprob: -17.375011444091797
    5. 'nt' → logprob: -18.125011444091797
    6. 'In' → logprob: -18.125011444091797
    7. ' int' → logprob: -18.875011444091797
    8. '_int' → logprob: -19.000011444091797
    9. 'It' → logprob: -19.125011444091797
    10. 'Mod' → logprob: -19.125011444091797

Token 509: '.MOD' (ID: 141639)
  Prédit: '.MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.0007335089612752199
    2. 'MOD' → logprob: -7.250733375549316
    3. '.MODE' → logprob: -10.875733375549316
    4. '.' → logprob: -12.625733375549316
    5. '.Mod' → logprob: -14.500733375549316
    6. '_MOD' → logprob: -14.875733375549316
    7. ' MOD' → logprob: -15.500733375549316
    8. ' .' → logprob: -16.125734329223633
    9. ')' → logprob: -17.000734329223633
    10. '
' → logprob: -17.500734329223633

Token 510: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02331547625362873
    2. '))
' → logprob: -3.7733154296875
    3. '       ' → logprob: -9.7733154296875
    4. ')' → logprob: -11.5233154296875
    5. ')))' → logprob: -14.3983154296875
    6. '))
' → logprob: -14.3983154296875
    7. '   ' → logprob: -14.3983154296875
    8. ' ))' → logprob: -14.3983154296875
    9. '))

' → logprob: -14.7733154296875
    10. '           ' → logprob: -15.7733154296875

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019034126307815313
    2. ')' → logprob: -7.001903533935547
    3. 'return' → logprob: -7.001903533935547
    4. ')return' → logprob: -10.126903533935547
    5. ')
' → logprob: -10.876903533935547
    6. ' return' → logprob: -11.501903533935547
    7. '           ' → logprob: -12.126903533935547
    8. '   ' → logprob: -13.251903533935547
    9. 'else' → logprob: -13.876903533935547
    10. '	' → logprob: -14.126903533935547

Token 512: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12795981764793396
    2. ' return' → logprob: -2.127959728240967
    3. '       ' → logprob: -6.877959728240967
    4. '   ' → logprob: -14.627960205078125
    5. '	return' → logprob: -15.752960205078125
    6. ')return' → logprob: -16.127960205078125
    7. '           ' → logprob: -16.627960205078125
    8. '
' → logprob: -16.627960205078125
    9. ')' → logprob: -17.252960205078125
    10. ':return' → logprob: -17.377960205078125

Token 513: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -5.204720582696609e-05
    2. ' Mod' → logprob: -9.875052452087402
    3. '(Mod' → logprob: -15.250052452087402
    4. 'pow' → logprob: -16.125051498413086
    5. 'Pow' → logprob: -16.375051498413086
    6. 'Mo' → logprob: -18.250051498413086
    7. 'MOD' → logprob: -18.875051498413086
    8. '_mod' → logprob: -19.000051498413086
    9. '   ' → logprob: -19.250051498413086
    10. 'mod' → logprob: -19.625051498413086

Token 514: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.9266199160483666e-05
    2. 'int' → logprob: -10.875019073486328
    3. 'INT' → logprob: -16.500019073486328
    4. 'Mod' → logprob: -16.625019073486328
    5. ' Int' → logprob: -17.625019073486328
    6. ' int' → logprob: -19.250019073486328
    7. 'In' → logprob: -19.875019073486328
    8. 'Ints' → logprob: -20.000019073486328
    9. '(Int' → logprob: -20.125019073486328
    10. '(int' → logprob: -20.375019073486328

Token 515: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.00376101303845644
    2. '(' → logprob: -5.878760814666748
    3. '(other' → logprob: -7.503760814666748
    4. 'pow' → logprob: -7.878760814666748
    5. '(
' → logprob: -11.753761291503906
    6. '(power' → logprob: -12.253761291503906
    7. '((' → logprob: -12.378761291503906
    8. ' (' → logprob: -13.253761291503906
    9. '(po' → logprob: -13.253761291503906
    10. '.pow' → logprob: -13.878761291503906

Token 516: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.688212614681106e-05
    2. 'other' → logprob: -11.000017166137695
    3. '(' → logprob: -16.000017166137695
    4. ' other' → logprob: -19.625017166137695
    5. 'Other' → logprob: -21.000017166137695
    6. '(
' → logprob: -21.500017166137695
    7. '.other' → logprob: -22.500017166137695
    8. '(old' → logprob: -23.375017166137695
    9. '_other' → logprob: -23.375017166137695
    10. 'OTHER' → logprob: -24.875017166137695

Token 517: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000784495088737458
    2. '.x' → logprob: -7.750784397125244
    3. '.' → logprob: -8.375784873962402
    4. ' ,' → logprob: -9.375784873962402
    5. 'self' → logprob: -11.375784873962402
    6. 'x' → logprob: -11.500784873962402
    7. '.py' → logprob: -12.500784873962402
    8. ' ' → logprob: -13.000784873962402
    9. ' .' → logprob: -13.125784873962402
    10. '(' → logprob: -13.500784873962402

Token 518: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01416398212313652
    2. ' self' → logprob: -4.264163970947266
    3. '(self' → logprob: -14.639163970947266
    4. '[self' → logprob: -17.514163970947266
    5. ' ' → logprob: -18.264163970947266
    6. '	self' → logprob: -18.389163970947266
    7. '=self' → logprob: -19.639163970947266
    8. '       ' → logprob: -19.764163970947266
    9. '   ' → logprob: -20.139163970947266
    10. 's' → logprob: -20.389163970947266

Token 519: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0004493805463425815
    2. '.' → logprob: -8.000449180603027
    3. 'x' → logprob: -9.125449180603027
    4. ' .' → logprob: -12.875449180603027
    5. ' ' → logprob: -13.375449180603027
    6. ' x' → logprob: -15.250449180603027
    7. ')' → logprob: -15.500449180603027
    8. ').' → logprob: -16.500450134277344
    9. 'self' → logprob: -16.500450134277344
    10. ',' → logprob: -16.875450134277344

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.9728669738397e-05
    2. ' ,' → logprob: -9.250100135803223
    3. 'Mod' → logprob: -13.625100135803223
    4. '))' → logprob: -13.625100135803223
    5. '),' → logprob: -14.875100135803223
    6. ')' → logprob: -15.125100135803223
    7. ',
' → logprob: -15.500100135803223
    8. '(),' → logprob: -16.875099182128906
    9. ' Mod' → logprob: -17.000099182128906
    10. 'import' → logprob: -17.125099182128906

Token 521: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -1.0206720617134124e-05
    2. ' Mod' → logprob: -11.50001049041748
    3. 'mod' → logprob: -17.250009536743164
    4. '(Mod' → logprob: -19.875009536743164
    5. '   ' → logprob: -20.000009536743164
    6. 'MOD' → logprob: -20.250009536743164
    7. '_mod' → logprob: -20.250009536743164
    8. '
' → logprob: -20.750009536743164
    9. ')' → logprob: -20.750009536743164
    10. '.Mod' → logprob: -20.875009536743164

Token 522: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.1472419600977446e-06
    2. 'int' → logprob: -13.875000953674316
    3. ' Int' → logprob: -16.750001907348633
    4. '
' → logprob: -17.250001907348633
    5. ')' → logprob: -17.750001907348633
    6. '**' → logprob: -17.875001907348633
    7. '(Int' → logprob: -17.875001907348633
    8. 'INT' → logprob: -18.125001907348633
    9. '.Int' → logprob: -18.250001907348633
    10. 'In' → logprob: -18.500001907348633

Token 523: '.MOD' (ID: 141639)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.694173276424408
    2. '.MOD' → logprob: -0.694173276424408
    3. 'Mod' → logprob: -7.819173336029053
    4. '.Mod' → logprob: -8.069172859191895
    5. '_MOD' → logprob: -8.194172859191895
    6. ' MOD' → logprob: -10.444172859191895
    7. ')' → logprob: -13.194172859191895
    8. '(Mod' → logprob: -13.694172859191895
    9. '.MODE' → logprob: -13.819172859191895
    10. '.' → logprob: -14.319172859191895

Token 524: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001181181170977652
    2. ')' → logprob: -6.751181125640869
    3. '))
' → logprob: -11.626181602478027
    4. '       ' → logprob: -14.001181602478027
    5. ')))' → logprob: -14.501181602478027
    6. '   ' → logprob: -14.501181602478027
    7. '))

' → logprob: -16.12618064880371
    8. ')
' → logprob: -16.25118064880371
    9. ' ))' → logprob: -17.75118064880371
    10. '()))' → logprob: -18.75118064880371

Token 525: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008397906087338924
    2. 'def' → logprob: -5.633398056030273
    3. '
' → logprob: -6.383398056030273
    4. '<|end|>' → logprob: -6.508398056030273
    5. '```' → logprob: -6.758398056030273
    6. ' def' → logprob: -8.258398056030273
    7. ')' → logprob: -10.258398056030273
    8. '    
' → logprob: -10.508398056030273
    9. ' ' → logprob: -10.633398056030273
    10. '<|end|>' → logprob: -10.633398056030273

Token 526: ' resolve' (ID: 14062)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03525063768029213
    2. ' factorial' → logprob: -3.910250663757324
    3. 'main' → logprob: -5.035250663757324
    4. ' solve' → logprob: -6.535250663757324
    5. ' dfs' → logprob: -6.910250663757324
    6. ' gcd' → logprob: -7.160250663757324
    7. ' pow' → logprob: -7.410250663757324
    8. ' factor' → logprob: -7.660250663757324
    9. 'factor' → logprob: -7.660250663757324
    10. ' comb' → logprob: -7.785250663757324

Token 527: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00040791230276227
    2. ' ():' → logprob: -7.875407695770264
    3. '():
' → logprob: -10.875408172607422
    4. '()' → logprob: -12.500408172607422
    5. '(n' → logprob: -12.500408172607422
    6. '();' → logprob: -15.000408172607422
    7. '(N' → logprob: -15.125408172607422
    8. '(t' → logprob: -16.375408172607422
    9. ' (' → logprob: -16.625408172607422
    10. '(' → logprob: -16.750408172607422

Token 528: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007909284322522581
    2. '```' → logprob: -8.6257905960083
    3. '	n' → logprob: -8.8757905960083
    4. '(n' → logprob: -9.0007905960083
    5. 'n' → logprob: -9.3757905960083
    6. ' n' → logprob: -10.0007905960083
    7. ':' → logprob: -10.6257905960083
    8. 'import' → logprob: -10.8757905960083
    9. '	line' → logprob: -11.0007905960083
    10. ' readline' → logprob: -11.5007905960083

Token 529: ' from' (ID: 591)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21585263311862946
    2. ' n' → logprob: -1.7158526182174683
    3. '   ' → logprob: -4.465852737426758
    4. 'N' → logprob: -5.965852737426758
    5. ' N' → logprob: -8.590852737426758
    6. '	n' → logprob: -9.840852737426758
    7. 't' → logprob: -10.590852737426758
    8. 'import' → logprob: -12.090852737426758
    9. ' ' → logprob: -13.590852737426758
    10. ' t' → logprob: -13.965852737426758

Token 530: ' itertools' (ID: 103178)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.04529187083244324
    2. 'math' → logprob: -3.2952919006347656
    3. 'sys' → logprob: -5.545291900634766
    4. ' collections' → logprob: -5.795291900634766
    5. ' math' → logprob: -8.420291900634766
    6. 'heap' → logprob: -10.670291900634766
    7. ' sys' → logprob: -11.420291900634766
    8. 'io' → logprob: -12.045291900634766
    9. 'typing' → logprob: -12.295291900634766
    10. '_math' → logprob: -12.545291900634766

Token 531: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.22566531598567963
    2. 'import' → logprob: -1.6006653308868408
    3. '	import' → logprob: -8.475665092468262
    4. '_import' → logprob: -10.475665092468262
    5. 'ertools' → logprob: -11.725665092468262
    6. '```' → logprob: -13.600665092468262
    7. '<|end|>' → logprob: -13.975665092468262
    8. '-import' → logprob: -14.100665092468262
    9. '_IMPORT' → logprob: -14.350665092468262
    10. ' itertools' → logprob: -14.350665092468262

Token 532: ' product' (ID: 1888)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.024829184636473656
    2. 'product' → logprob: -3.774829149246216
    3. 'com' → logprob: -7.899829387664795
    4. 'per' → logprob: -8.024828910827637
    5. 'pair' → logprob: -8.024828910827637
    6. ' accumulate' → logprob: -8.024828910827637
    7. 'group' → logprob: -8.899828910827637
    8. 'repeat' → logprob: -10.774828910827637
    9. 'is' → logprob: -10.899828910827637
    10. 'cycle' → logprob: -11.774828910827637

Token 533: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01310128066688776
    2. ',' → logprob: -5.263101100921631
    3. 'n' → logprob: -5.513101100921631
    4. 'import' → logprob: -6.638101100921631
    5. '
' → logprob: -7.263101100921631
    6. '    
' → logprob: -7.388101100921631
    7. 'def' → logprob: -8.138101577758789
    8. '(n' → logprob: -8.513101577758789
    9. ',n' → logprob: -8.888101577758789
    10. ' n' → logprob: -9.763101577758789

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08339010924100876
    2. 'n' → logprob: -2.5833899974823
    3. ' n' → logprob: -6.083390235900879
    4. 'N' → logprob: -6.708390235900879
    5. '(n' → logprob: -8.583390235900879
    6. '```' → logprob: -8.583390235900879
    7. '	n' → logprob: -8.708390235900879
    8. 'import' → logprob: -8.958390235900879
    9. 'def' → logprob: -9.458390235900879
    10. 'A' → logprob: -10.333390235900879

Token 535: ' L' (ID: 451)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.17550921440124512
    2. 'n' → logprob: -2.050509214401245
    3. '   ' → logprob: -3.925509214401245
    4. 'H' → logprob: -4.675509452819824
    5. 'h' → logprob: -7.425509452819824
    6. 'A' → logprob: -7.550509452819824
    7. 'W' → logprob: -7.925509452819824
    8. 'S' → logprob: -8.300509452819824
    9. 'R' → logprob: -8.300509452819824
    10. 'K' → logprob: -9.175509452819824

Token 536: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.552940845489502
    2. ',' → logprob: -1.177940845489502
    3. '=' → logprob: -2.177940845489502
    4. '=int' → logprob: -6.677940845489502
    5. '   ' → logprob: -7.177940845489502
    6. ' ,' → logprob: -7.302940845489502
    7. 'et' → logprob: -8.677940368652344
    8. 'en' → logprob: -9.427940368652344
    9. 'ength' → logprob: -9.677940368652344
    10. 'EN' → logprob: -9.677940368652344

Token 537: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.07171046733856201
    2. 'N' → logprob: -3.8217105865478516
    3. 'K' → logprob: -4.196710586547852
    4. ' R' → logprob: -5.196710586547852
    5. 'r' → logprob: -5.446710586547852
    6. 'W' → logprob: -5.696710586547852
    7. 'M' → logprob: -5.821710586547852
    8. 'H' → logprob: -5.946710586547852
    9. 'D' → logprob: -6.071710586547852
    10. 'C' → logprob: -6.196710586547852

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031806828919798136
    2. ' =' → logprob: -5.753180503845215
    3. '=input' → logprob: -13.128180503845215
    4. '=int' → logprob: -14.378180503845215
    5. '=sys' → logprob: -15.003180503845215
    6. '=list' → logprob: -16.37818145751953
    7. '＝' → logprob: -18.50318145751953
    8. ' ' → logprob: -18.62818145751953
    9. ',' → logprob: -18.75318145751953
    10. '=str' → logprob: -18.87818145751953

Token 539: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.16022910177707672
    2. ' map' → logprob: -1.9102290868759155
    3. '[' → logprob: -13.160228729248047
    4. 'list' → logprob: -13.660228729248047
    5. '(map' → logprob: -14.535228729248047
    6. ' ' → logprob: -14.785228729248047
    7. '	map' → logprob: -14.910228729248047
    8. 'input' → logprob: -15.285228729248047
    9. '   ' → logprob: -15.785228729248047
    10. 'int' → logprob: -16.535228729248047

Token 540: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004088493529707193
    2. 'int' → logprob: -5.504088401794434
    3. '(' → logprob: -11.879088401794434
    4. 'input' → logprob: -14.379088401794434
    5. '=int' → logprob: -14.754088401794434
    6. '(lambda' → logprob: -14.754088401794434
    7. '[int' → logprob: -14.754088401794434
    8. ',int' → logprob: -15.254088401794434
    9. '```' → logprob: -15.629088401794434
    10. ' int' → logprob: -15.754088401794434

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5765760540962219
    2. ',input' → logprob: -0.8265760540962219
    3. '(),' → logprob: -8.201576232910156
    4. 'input' → logprob: -8.326576232910156
    5. '(input' → logprob: -9.201576232910156
    6. '(' → logprob: -11.826576232910156
    7. ' ,' → logprob: -12.951576232910156
    8. ',int' → logprob: -13.326576232910156
    9. ',line' → logprob: -13.576576232910156
    10. 'sys' → logprob: -13.951576232910156

Token 542: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018151231110095978
    2. ' input' → logprob: -4.01815128326416
    3. 'sys' → logprob: -14.51815128326416
    4. '(input' → logprob: -15.01815128326416
    5. ')' → logprob: -15.51815128326416
    6. '   ' → logprob: -16.268150329589844
    7. ',input' → logprob: -16.393150329589844
    8. '=input' → logprob: -16.643150329589844
    9. ' sys' → logprob: -17.143150329589844
    10. ' ' → logprob: -17.393150329589844

Token 543: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1472419600977446e-06
    2. '()' → logprob: -13.750000953674316
    3. ')' → logprob: -18.500001907348633
    4. ' ().' → logprob: -18.500001907348633
    5. '())' → logprob: -18.875001907348633
    6. '(' → logprob: -18.875001907348633
    7. '()[' → logprob: -20.500001907348633
    8. '()
' → logprob: -21.000001907348633
    9. '.split' → logprob: -21.125001907348633
    10. 'split' → logprob: -21.500001907348633

Token 544: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.833878508885391e-05
    2. 'decode' → logprob: -10.250038146972656
    3. '(split' → logprob: -13.875038146972656
    4. 'rstrip' → logprob: -14.375038146972656
    5. 'strip' → logprob: -14.625038146972656
    6. ' split' → logprob: -14.750038146972656
    7. '().' → logprob: -15.000038146972656
    8. '```' → logprob: -16.625038146972656
    9. ')' → logprob: -17.000038146972656
    10. 'spl' → logprob: -17.125038146972656

Token 545: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.043100133538246155
    2. ')' → logprob: -3.293100118637085
    3. '()' → logprob: -5.293100357055664
    4. '(' → logprob: -11.793100357055664
    5. '(),' → logprob: -11.918100357055664
    6. '))' → logprob: -13.418100357055664
    7. '())
' → logprob: -13.418100357055664
    8. '()))' → logprob: -13.543100357055664
    9. ' ())' → logprob: -15.293100357055664
    10. '()]' → logprob: -16.043100357055664

Token 546: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001969554228708148
    2. '    
' → logprob: -7.251969337463379
    3. '
' → logprob: -7.876969337463379
    4. 'result' → logprob: -8.876969337463379
    5. 'res' → logprob: -9.251969337463379
    6. 'for' → logprob: -9.626969337463379
    7. 'dp' → logprob: -9.876969337463379
    8. 'def' → logprob: -10.001969337463379
    9. 'n' → logprob: -10.126969337463379
    10. 'A' → logprob: -10.126969337463379

Token 547: ' D' (ID: 415)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25294896960258484
    2. '   ' → logprob: -1.8779489994049072
    3. 'ans' → logprob: -4.127948760986328
    4. 'res' → logprob: -4.252948760986328
    5. 'count' → logprob: -4.877948760986328
    6. 'cnt' → logprob: -5.627948760986328
    7. ' dp' → logprob: -5.752948760986328
    8. 'total' → logprob: -6.002948760986328
    9. 'result' → logprob: -6.127948760986328
    10. 'DP' → logprob: -6.252948760986328

Token 548: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18127048015594482
    2. '=' → logprob: -1.8062704801559448
    3. ',' → logprob: -7.806270599365234
    4. '=[]' → logprob: -8.181270599365234
    5. ' ' → logprob: -8.556270599365234
    6. 'ef' → logprob: -8.556270599365234
    7. '   ' → logprob: -9.431270599365234
    8. 'L' → logprob: -9.681270599365234
    9. 'for' → logprob: -10.181270599365234
    10. '=set' → logprob: -10.431270599365234

Token 549: ' ' (ID: 220)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0909515768289566
    2. '[R' → logprob: -2.715951681137085
    3. '[' → logprob: -5.090951442718506
    4. 'list' → logprob: -5.215951442718506
    5. '[int' → logprob: -6.090951442718506
    6. 'set' → logprob: -6.090951442718506
    7. 'int' → logprob: -6.715951442718506
    8. '{' → logprob: -7.215951442718506
    9. '[]
' → logprob: -7.715951442718506
    10. '10' → logprob: -7.840951442718506

Token 550: '61' (ID: 8954)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.8693284392356873
    2. 'list' → logprob: -0.8693284392356873
    3. '[R' → logprob: -2.119328498840332
    4. 'set' → logprob: -4.119328498840332
    5. 'int' → logprob: -4.869328498840332
    6. '[int' → logprob: -5.119328498840332
    7. 'range' → logprob: -5.494328498840332
    8. '{' → logprob: -6.494328498840332
    9. 'L' → logprob: -6.494328498840332
    10. '[L' → logprob: -6.994328498840332

Token 551: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08325827866792679
    2. '   ' → logprob: -2.8332583904266357
    3. '    ' → logprob: -5.333258152008057
    4. '    
' → logprob: -5.333258152008057
    5. ',' → logprob: -6.333258152008057
    6. ' 
' → logprob: -6.458258152008057
    7. '0' → logprob: -7.083258152008057
    8. 'def' → logprob: -7.458258152008057
    9. '9' → logprob: -7.458258152008057
    10. ' ' → logprob: -7.708258152008057

Token 552: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08466336131095886
    2. 'for' → logprob: -3.5846633911132812
    3. 'dp' → logprob: -3.9596633911132812
    4. '#' → logprob: -4.584663391113281
    5. 'result' → logprob: -5.709663391113281
    6. 'max' → logprob: -5.834663391113281
    7. 'bits' → logprob: -6.209663391113281
    8. 'def' → logprob: -6.459663391113281
    9. '   ' → logprob: -6.584663391113281
    10. 'pow' → logprob: -6.709663391113281

Token 553: ' Attention' (ID: 81932)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.5037936568260193
    2. 'for' → logprob: -1.878793716430664
    3. ' R' → logprob: -2.003793716430664
    4. ' for' → logprob: -3.378793716430664
    5. 'max' → logprob: -4.128793716430664
    6. '#' → logprob: -4.753793716430664
    7. ' (' → logprob: -5.003793716430664
    8. ' ' → logprob: -5.378793716430664
    9. 'D' → logprob: -5.378793716430664
    10. 'L' → logprob: -5.378793716430664

Token 554: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0477321557700634
    2. ' to' → logprob: -4.297732353210449
    3. ' for' → logprob: -5.047732353210449
    4. '    ' → logprob: -5.047732353210449
    5. 'to' → logprob: -5.797732353210449
    6. 'for' → logprob: -6.172732353210449
    7. ',' → logprob: -6.297732353210449
    8. 'max' → logprob: -6.297732353210449
    9. 'def' → logprob: -6.547732353210449
    10. 'L' → logprob: -6.547732353210449

Token 555: ' si' (ID: 1784)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.4897785186767578
    2. ' for' → logprob: -1.8647785186767578
    3. 'for' → logprob: -1.9897785186767578
    4. 'while' → logprob: -2.114778518676758
    5. '#' → logprob: -2.489778518676758
    6. ' #' → logprob: -2.739778518676758
    7. ' D' → logprob: -3.114778518676758
    8. 'D' → logprob: -3.739778518676758
    9. ' L' → logprob: -4.239778518676758
    10. ' ' → logprob: -4.364778518676758

Token 556: ' int' (ID: 677)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.09346514195203781
    2. 'L' → logprob: -2.5934650897979736
    3. '(R' → logprob: -5.343465328216553
    4. 'D' → logprob: -5.718465328216553
    5. ' R' → logprob: -6.218465328216553
    6. 'max' → logprob: -6.843465328216553
    7. '(L' → logprob: -7.218465328216553
    8. '(' → logprob: -7.468465328216553
    9. ' L' → logprob: -8.093464851379395
    10. '2' → logprob: -8.218464851379395

Token 557: '64' (ID: 2220)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -1.5036349296569824
    2. '(D' → logprob: -1.8786349296569824
    3. '64' → logprob: -2.0036349296569824
    4. '(R' → logprob: -2.5036349296569824
    5. 's' → logprob: -2.7536349296569824
    6. '>' → logprob: -3.2536349296569824
    7. '32' → logprob: -3.3786349296569824
    8. ',' → logprob: -3.8786349296569824
    9. 'D' → logprob: -3.8786349296569824
    10. 'L' → logprob: -3.8786349296569824

Token 558: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14298920333385468
    2. 'dp' → logprob: -2.267989158630371
    3. '
' → logprob: -4.892989158630371
    4. 'res' → logprob: -5.392989158630371
    5. 'result' → logprob: -5.767989158630371
    6. 'ans' → logprob: -6.017989158630371
    7. 'DP' → logprob: -6.392989158630371
    8. '    
' → logprob: -6.767989158630371
    9. 'count' → logprob: -6.767989158630371
    10. 'answer' → logprob: -6.892989158630371

Token 559: ' il' (ID: 1793)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.11520347744226456
    2. 'on' → logprob: -3.740203380584717
    3. ' c' → logprob: -4.115203380584717
    4. 'D' → logprob: -4.240203380584717
    5. ' D' → logprob: -4.240203380584717
    6. 'L' → logprob: -4.615203380584717
    7. 'c' → logprob: -4.740203380584717
    8. ' L' → logprob: -5.365203380584717
    9. '   ' → logprob: -6.240203380584717
    10. 'R' → logprob: -6.365203380584717

Token 560: ' faut' (ID: 17821)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0809060335159302
    2. 's' → logprob: -1.2059060335159302
    3. 'y' → logprob: -1.8309060335159302
    4. 'fa' → logprob: -2.7059059143066406
    5. ' faut' → logprob: -3.3309059143066406
    6. ' faudrait' → logprob: -4.205905914306641
    7. 'pe' → logprob: -4.330905914306641
    8. ' faudra' → logprob: -4.580905914306641
    9. 'est' → logprob: -4.580905914306641
    10. ' y' → logprob: -4.580905914306641

Token 561: ' bien' (ID: 5340)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -1.2008655071258545
    2. '62' → logprob: -2.2008655071258545
    3. 'plus' → logprob: -2.3258655071258545
    4. 'mettre' → logprob: -2.5758655071258545
    5. '61' → logprob: -2.5758655071258545
    6. ' ' → logprob: -3.0758655071258545
    7. 'un' → logprob: -3.4508655071258545
    8. 'à' → logprob: -3.4508655071258545
    9. 'augment' → logprob: -3.4508655071258545
    10. '+' → logprob: -3.5758655071258545

Token 562: ' D' (ID: 415)
  Prédit: '61'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '61' → logprob: -1.3188222646713257
    2. 'prendre' → logprob: -1.4438222646713257
    3. 'D' → logprob: -1.8188222646713257
    4. 'L' → logprob: -2.4438223838806152
    5. 'R' → logprob: -3.0688223838806152
    6. 'plus' → logprob: -3.3188223838806152
    7. '+' → logprob: -3.5688223838806152
    8. 'comp' → logprob: -3.8188223838806152
    9. '60' → logprob: -3.9438223838806152
    10. ' ' → logprob: -5.068822383880615

Token 563: '=' (ID: 28)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07606403529644012
    2. '
' → logprob: -2.951064109802246
    3. 'dp' → logprob: -4.826064109802246
    4. '    
' → logprob: -5.951064109802246
    5. 'max' → logprob: -6.201064109802246
    6. ',' → logprob: -6.951064109802246
    7. 'DP' → logprob: -7.201064109802246
    8. 'count' → logprob: -7.326064109802246
    9. ' =' → logprob: -7.451064109802246
    10. 'for' → logprob: -7.576064109802246

Token 564: '61' (ID: 8954)
  Prédit: '61'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '61' → logprob: -0.17943331599235535
    2. '62' → logprob: -2.1794333457946777
    3. '64' → logprob: -3.1794333457946777
    4. '63' → logprob: -5.179433345794678
    5. '60' → logprob: -5.554433345794678
    6. ' ' → logprob: -10.80443286895752
    7. '65' → logprob: -11.67943286895752
    8. '=' → logprob: -12.80443286895752
    9. '   ' → logprob: -13.05443286895752
    10. 'D' → logprob: -13.80443286895752

Token 565: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07358954846858978
    2. '
' → logprob: -2.948589563369751
    3. '    
' → logprob: -5.198589324951172
    4. 'dp' → logprob: -5.198589324951172
    5. 'def' → logprob: -6.448589324951172
    6. 'result' → logprob: -6.823589324951172
    7. 'DP' → logprob: -7.823589324951172
    8. 's' → logprob: -8.073589324951172
    9. 'count' → logprob: -8.198589324951172
    10. 'res' → logprob: -8.198589324951172

Token 566: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22423435747623444
    2. '   ' → logprob: -1.7242343425750732
    3. 'res' → logprob: -4.849234580993652
    4. ' dp' → logprob: -5.849234580993652
    5. 'count' → logprob: -5.974234580993652
    6. 'counts' → logprob: -6.349234580993652
    7. 'DP' → logprob: -6.474234580993652
    8. 'ans' → logprob: -6.599234580993652
    9. 'a' → logprob: -7.349234580993652
    10. 'cnt' → logprob: -7.724234580993652

Token 567: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.03570302948355675
    2. '   ' → logprob: -4.910703182220459
    3. 'cnt' → logprob: -5.285703182220459
    4. 'res' → logprob: -5.535703182220459
    5. 'ans' → logprob: -5.535703182220459
    6. 'count' → logprob: -5.785703182220459
    7. 'counts' → logprob: -6.535703182220459
    8. 'bit' → logprob: -6.910703182220459
    9. 'A' → logprob: -6.910703182220459
    10. 'bits' → logprob: -7.160703182220459

Token 568: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365376591682434
    2. '=' → logprob: -3.408653736114502
    3. '=[' → logprob: -13.15865421295166
    4. '[' → logprob: -13.78365421295166
    5. '0' → logprob: -14.03365421295166
    6. ' ' → logprob: -14.03365421295166
    7. '=[[' → logprob: -14.40865421295166
    8. '   ' → logprob: -14.65865421295166
    9. '```' → logprob: -14.78365421295166
    10. 'dp' → logprob: -14.90865421295166

Token 569: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0021508578211069107
    2. '[' → logprob: -6.252151012420654
    3. '[{' → logprob: -8.752150535583496
    4. '{}' → logprob: -10.127150535583496
    5. '{' → logprob: -11.377150535583496
    6. '[(' → logprob: -12.877150535583496
    7. '[
' → logprob: -12.877150535583496
    8. '[-' → logprob: -13.127150535583496
    9. ' [[[' → logprob: -13.252150535583496
    10. ' [[' → logprob: -13.627150535583496

Token 570: '[[' (ID: 26245)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.10861822962760925
    2. '[' → logprob: -2.7336182594299316
    3. '0' → logprob: -3.6086182594299316
    4. '[-' → logprob: -5.733618259429932
    5. 'None' → logprob: -5.858618259429932
    6. '[[' → logprob: -6.358618259429932
    7. 'False' → logprob: -6.983618259429932
    8. '(Mod' → logprob: -6.983618259429932
    9. '-' → logprob: -7.483618259429932
    10. '(' → logprob: -7.983618259429932

Token 571: 'Mod' (ID: 4721)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8982195854187012
    2. 'Mod' → logprob: -1.1482195854187012
    3. '-' → logprob: -1.5232195854187012
    4. 'None' → logprob: -3.648219585418701
    5. 'INF' → logprob: -4.148219585418701
    6. 'False' → logprob: -4.398219585418701
    7. '-Mod' → logprob: -6.898219585418701
    8. '(Mod' → logprob: -7.773219585418701
    9. '[' → logprob: -8.02322006225586
    10. 'Inf' → logprob: -8.02322006225586

Token 572: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.1472419600977446e-06
    2. 'int' → logprob: -13.875000953674316
    3. ' Int' → logprob: -16.500001907348633
    4. '[Int' → logprob: -18.000001907348633
    5. '	Int' → logprob: -18.500001907348633
    6. 'INT' → logprob: -19.000001907348633
    7. '_int' → logprob: -19.125001907348633
    8. '0' → logprob: -19.250001907348633
    9. '_INT' → logprob: -19.875001907348633
    10. '_Int' → logprob: -20.000001907348633

Token 573: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002100965939462185
    2. '0' → logprob: -8.87520980834961
    3. '()' → logprob: -9.75020980834961
    4. '(-' → logprob: -11.87520980834961
    5. '(False' → logprob: -13.12520980834961
    6. '()]' → logprob: -13.75020980834961
    7. '()
' → logprob: -14.75020980834961
    8. '(
' → logprob: -15.12520980834961
    9. '((' → logprob: -15.25020980834961
    10. ']' → logprob: -15.87520980834961

Token 574: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5358694731257856e-05
    2. '-' → logprob: -10.625035285949707
    3. '(' → logprob: -12.625035285949707
    4. '1' → logprob: -12.750035285949707
    5. ')' → logprob: -13.375035285949707
    6. 'INF' → logprob: -13.375035285949707
    7. '
' → logprob: -14.625035285949707
    8. 'False' → logprob: -14.875035285949707
    9. ' ' → logprob: -16.250036239624023
    10. '"' → logprob: -16.250036239624023

Token 575: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007729657460004091
    2. ')]' → logprob: -4.882729530334473
    3. '()' → logprob: -9.757729530334473
    4. '),' → logprob: -10.632729530334473
    5. ')
' → logprob: -11.257729530334473
    6. '())' → logprob: -11.632729530334473
    7. ')])' → logprob: -11.882729530334473
    8. ' )' → logprob: -12.382729530334473
    9. '))' → logprob: -12.757729530334473
    10. '(' → logprob: -13.382729530334473

Token 576: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4966200292110443
    2. ')' → logprob: -1.3716200590133667
    3. 'for' → logprob: -1.9966200590133667
    4. ']' → logprob: -6.871620178222656
    5. '()' → logprob: -7.746620178222656
    6. ')]' → logprob: -8.746620178222656
    7. '   ' → logprob: -9.121620178222656
    8. ',' → logprob: -9.996620178222656
    9. ' )' → logprob: -10.246620178222656
    10. ' ' → logprob: -10.246620178222656

Token 577: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10389278829097748
    2. ' _' → logprob: -2.9788928031921387
    3. '_range' → logprob: -3.3538928031921387
    4. '_d' → logprob: -5.853892803192139
    5. '_in' → logprob: -6.228892803192139
    6. '_j' → logprob: -6.353892803192139
    7. ' in' → logprob: -6.353892803192139
    8. '_t' → logprob: -6.603892803192139
    9. '_r' → logprob: -6.853892803192139
    10. ' range' → logprob: -7.353892803192139

Token 578: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.34250012040138245
    2. ' in' → logprob: -1.84250009059906
    3. 'in' → logprob: -2.0925002098083496
    4. ' range' → logprob: -4.84250020980835
    5. 'Range' → logprob: -9.592499732971191
    6. 'D' → logprob: -10.092499732971191
    7. '[' → logprob: -10.342499732971191
    8. '(range' → logprob: -10.342499732971191
    9. '_range' → logprob: -10.467499732971191
    10. 'd' → logprob: -10.842499732971191

Token 579: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006741777528077364
    2. ' range' → logprob: -5.006742000579834
    3. '(range' → logprob: -11.381741523742676
    4. '   ' → logprob: -11.381741523742676
    5. ' ' → logprob: -13.506741523742676
    6. '(' → logprob: -15.131741523742676
    7. '       ' → logprob: -15.131741523742676
    8. '  ' → logprob: -15.506741523742676
    9. ')' → logprob: -15.506741523742676
    10. '	range' → logprob: -15.506741523742676

Token 580: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012290386948734522
    2. '3' → logprob: -7.3762288093566895
    3. '11' → logprob: -8.626229286193848
    4. '(' → logprob: -8.751229286193848
    5. '4' → logprob: -9.126229286193848
    6. '10' → logprob: -9.501229286193848
    7. '61' → logprob: -10.376229286193848
    8. '5' → logprob: -12.001229286193848
    9. '7' → logprob: -12.001229286193848
    10. '12' → logprob: -12.126229286193848

Token 581: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.015915647149086
    2. '11' → logprob: -5.015915870666504
    3. '3' → logprob: -5.140915870666504
    4. '10' → logprob: -6.765915870666504
    5. '4' → logprob: -7.140915870666504
    6. '61' → logprob: -7.265915870666504
    7. 'D' → logprob: -8.140915870666504
    8. '12' → logprob: -10.140915870666504
    9. '101' → logprob: -10.265915870666504
    10. '62' → logprob: -10.265915870666504

Token 582: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.003921076189726591
    2. ')' → logprob: -6.128921031951904
    3. ']' → logprob: -6.503921031951904
    4. ']]' → logprob: -8.503921508789062
    5. '       ' → logprob: -11.753921508789062
    6. '           ' → logprob: -12.128921508789062
    7. '   ' → logprob: -12.253921508789062
    8. '+' → logprob: -12.753921508789062
    9. 'range' → logprob: -12.878921508789062
    10. ')]
' → logprob: -13.378921508789062

Token 583: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10550037026405334
    2. ' for' → logprob: -2.6055004596710205
    3. ']' → logprob: -3.9805004596710205
    4. '       ' → logprob: -5.855500221252441
    5. '           ' → logprob: -6.105500221252441
    6. '   ' → logprob: -6.480500221252441
    7. '               ' → logprob: -7.855500221252441
    8. '        ' → logprob: -9.105500221252441
    9. ')' → logprob: -9.105500221252441
    10. '                   ' → logprob: -9.730500221252441

Token 584: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5750371813774109
    2. '_' → logprob: -0.9500371813774109
    3. '_range' → logprob: -3.4500372409820557
    4. 'range' → logprob: -4.325037002563477
    5. ' range' → logprob: -5.575037002563477
    6. '_in' → logprob: -6.950037002563477
    7. 'in' → logprob: -8.075037002563477
    8. ' _' → logprob: -8.325037002563477
    9. '
' → logprob: -8.825037002563477
    10. ' ' → logprob: -10.575037002563477

Token 585: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22594664990901947
    2. 'in' → logprob: -1.6009466648101807
    3. 'range' → logprob: -7.600946426391602
    4. ' range' → logprob: -10.725946426391602
    5. '
' → logprob: -13.225946426391602
    6. '_in' → logprob: -13.350946426391602
    7. '_' → logprob: -13.350946426391602
    8. '_range' → logprob: -13.600946426391602
    9. ' ' → logprob: -13.725946426391602
    10. ',' → logprob: -14.350946426391602

Token 586: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002489691600203514
    2. ' range' → logprob: -6.0024895668029785
    3. '2' → logprob: -11.627490043640137
    4. '(range' → logprob: -12.252490043640137
    5. '[' → logprob: -16.00248908996582
    6. '(' → logprob: -16.37748908996582
    7. '	range' → logprob: -16.37748908996582
    8. '   ' → logprob: -16.50248908996582
    9. ' ' → logprob: -18.75248908996582
    10. '
' → logprob: -18.87748908996582

Token 587: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015133652777876705
    2. '2' → logprob: -9.625151634216309
    3. 'range' → logprob: -10.000151634216309
    4. ' (' → logprob: -11.250151634216309
    5. ' in' → logprob: -11.750151634216309
    6. '
' → logprob: -12.250151634216309
    7. '(range' → logprob: -12.250151634216309
    8. ',' → logprob: -13.125151634216309
    9. ' range' → logprob: -13.625151634216309
    10. '   ' → logprob: -13.875151634216309

Token 588: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026860725483857095
    2. '3' → logprob: -8.375268936157227
    3. ' ' → logprob: -11.000268936157227
    4. '(' → logprob: -12.000268936157227
    5. '   ' → logprob: -12.625268936157227
    6. '4' → logprob: -13.187768936157227
    7. '61' → logprob: -13.250268936157227
    8. ')' → logprob: -13.812768936157227
    9. '
' → logprob: -14.062768936157227
    10. ']' → logprob: -14.187768936157227

Token 589: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.2562595009803772
    2. ']' → logprob: -1.5062594413757324
    3. ']]' → logprob: -5.631259441375732
    4. ')' → logprob: -7.506259441375732
    5. '])' → logprob: -9.75625991821289
    6. 'range' → logprob: -10.25625991821289
    7. '   ' → logprob: -10.63125991821289
    8. '       ' → logprob: -10.75625991821289
    9. ' ]' → logprob: -11.25625991821289
    10. '           ' → logprob: -11.50625991821289

Token 590: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32097241282463074
    2. 'for' → logprob: -1.3209724426269531
    3. '       ' → logprob: -5.945972442626953
    4. '   ' → logprob: -6.195972442626953
    5. '           ' → logprob: -6.195972442626953
    6. '               ' → logprob: -8.195972442626953
    7. '        ' → logprob: -8.570972442626953
    8. '    ' → logprob: -9.445972442626953
    9. '         ' → logprob: -9.445972442626953
    10. '            ' → logprob: -9.570972442626953

Token 591: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.561159074306488
    2. '_' → logprob: -1.1861591339111328
    3. '_in' → logprob: -2.686159133911133
    4. 'in' → logprob: -3.436159133911133
    5. '_range' → logprob: -3.936159133911133
    6. ' _' → logprob: -5.686159133911133
    7. ' range' → logprob: -7.811159133911133
    8. 'range' → logprob: -8.686159133911133
    9. '
' → logprob: -10.186159133911133
    10. '_j' → logprob: -10.561159133911133

Token 592: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005344162695109844
    2. 'in' → logprob: -5.630344390869141
    3. ' range' → logprob: -6.630344390869141
    4. ' in' → logprob: -8.00534439086914
    5. '_range' → logprob: -9.75534439086914
    6. '_' → logprob: -11.13034439086914
    7. '(range' → logprob: -11.25534439086914
    8. '(' → logprob: -13.63034439086914
    9. '2' → logprob: -14.75534439086914
    10. '_in' → logprob: -14.88034439086914

Token 593: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005544631858356297
    2. ' range' → logprob: -7.50055456161499
    3. '(range' → logprob: -13.500554084777832
    4. '   ' → logprob: -17.25055503845215
    5. '2' → logprob: -19.00055503845215
    6. '	range' → logprob: -19.50055503845215
    7. '    ' → logprob: -19.75055503845215
    8. ' ' → logprob: -19.87555503845215
    9. '[' → logprob: -20.12555503845215
    10. '       ' → logprob: -20.37555503845215

Token 594: '(' (ID: 7)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.13266271352767944
    2. '(' → logprob: -2.257662773132324
    3. 'range' → logprob: -4.632662773132324
    4. '(D' → logprob: -4.757662773132324
    5. ' range' → logprob: -6.757662773132324
    6. ' (' → logprob: -10.257662773132324
    7. '((' → logprob: -10.382662773132324
    8. ' in' → logprob: -10.382662773132324
    9. '(R' → logprob: -10.757662773132324
    10. '   ' → logprob: -11.507662773132324

Token 595: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10166501253843307
    2. '3' → logprob: -2.3516650199890137
    3. '61' → logprob: -7.476665019989014
    4. '4' → logprob: -8.226664543151855
    5. '11' → logprob: -8.601664543151855
    6. '(' → logprob: -9.226664543151855
    7. '10' → logprob: -9.851664543151855
    8. 'D' → logprob: -9.851664543151855
    9. '62' → logprob: -9.976664543151855
    10. '(L' → logprob: -10.601664543151855

Token 596: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1841675490140915
    2. ']' → logprob: -1.809167504310608
    3. ']]' → logprob: -6.309167385101318
    4. ')' → logprob: -6.809167385101318
    5. '])' → logprob: -6.934167385101318
    6. '       ' → logprob: -8.434167861938477
    7. '           ' → logprob: -9.309167861938477
    8. '   ' → logprob: -9.434167861938477
    9. ' ]' → logprob: -10.559167861938477
    10. 'for' → logprob: -10.934167861938477

Token 597: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07932936400175095
    2. 'for' → logprob: -2.579329252243042
    3. '   ' → logprob: -8.204329490661621
    4. '       ' → logprob: -9.329329490661621
    5. '        ' → logprob: -10.579329490661621
    6. '    ' → logprob: -10.704329490661621
    7. '           ' → logprob: -11.204329490661621
    8. ' ' → logprob: -12.954329490661621
    9. ']' → logprob: -12.954329490661621
    10. '         ' → logprob: -13.204329490661621

Token 598: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12982165813446045
    2. 'range' → logprob: -2.12982177734375
    3. '_range' → logprob: -6.50482177734375
    4. '_' → logprob: -6.75482177734375
    5. ' in' → logprob: -8.87982177734375
    6. '(range' → logprob: -9.87982177734375
    7. ' _' → logprob: -11.12982177734375
    8. 'in' → logprob: -11.37982177734375
    9. '_in' → logprob: -11.50482177734375
    10. '	range' → logprob: -15.00482177734375

Token 599: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5201169848442078
    2. ' range' → logprob: -1.0201170444488525
    3. '_range' → logprob: -3.2701170444488525
    4. '_' → logprob: -5.020116806030273
    5. ' in' → logprob: -8.395116806030273
    6. 'in' → logprob: -9.145116806030273
    7. '_in' → logprob: -10.145116806030273
    8. '(range' → logprob: -11.645116806030273
    9. ' _' → logprob: -13.020116806030273
    10. '_i' → logprob: -13.770116806030273

Token 600: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692862749099731
    2. ' range' → logprob: -2.1269285678863525
    3. '(range' → logprob: -14.501928329467773
    4. '   ' → logprob: -17.376928329467773
    5. '	range' → logprob: -18.626928329467773
    6. '_range' → logprob: -18.751928329467773
    7. ' ' → logprob: -18.876928329467773
    8. '.range' → logprob: -20.876928329467773
    9. '_' → logprob: -21.001928329467773
    10. '    ' → logprob: -21.251928329467773

Token 601: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.8415127396583557
    2. '(' → logprob: -1.091512680053711
    3. 'range' → logprob: -1.841512680053711
    4. '(range' → logprob: -2.716512680053711
    5. '2' → logprob: -5.591512680053711
    6. '7' → logprob: -6.216512680053711
    7. '(L' → logprob: -6.841512680053711
    8. ' range' → logprob: -6.966512680053711
    9. '62' → logprob: -8.466512680053711
    10. '(R' → logprob: -8.716512680053711

Token 602: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007486367831006646
    2. ')]
' → logprob: -7.875748634338379
    3. ']' → logprob: -8.875748634338379
    4. ')][' → logprob: -9.500748634338379
    5. '])]' → logprob: -9.750748634338379
    6. ')' → logprob: -10.375748634338379
    7. ')])' → logprob: -10.375748634338379
    8. '   ' → logprob: -11.250748634338379
    9. ')]
' → logprob: -11.750748634338379
    10. '])' → logprob: -12.125748634338379

Token 603: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003266447747591883
    2. '2' → logprob: -8.750327110290527
    3. ' ' → logprob: -8.875327110290527
    4. '0' → logprob: -11.250327110290527
    5. '3' → logprob: -12.125327110290527
    6. '
' → logprob: -13.062827110290527
    7. '   ' → logprob: -13.312827110290527
    8. ')' → logprob: -13.875327110290527
    9. '7' → logprob: -14.562827110290527
    10. '5' → logprob: -14.625327110290527

Token 604: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000837384897749871
    2. ']' → logprob: -7.250837326049805
    3. ')][' → logprob: -10.250837326049805
    4. '])]' → logprob: -10.375837326049805
    5. ')]
' → logprob: -10.750837326049805
    6. ')' → logprob: -10.750837326049805
    7. '])' → logprob: -11.750837326049805
    8. ')])' → logprob: -12.500837326049805
    9. '][' → logprob: -12.875837326049805
    10. '   ' → logprob: -13.750837326049805

Token 605: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10554970800876617
    2. '   ' → logprob: -2.8555498123168945
    3. ')' → logprob: -3.7305498123168945
    4. ']' → logprob: -5.1055498123168945
    5. '[' → logprob: -5.2305498123168945
    6. '=' → logprob: -5.3555498123168945
    7. ' dp' → logprob: -7.1055498123168945
    8. '[
' → logprob: -8.230549812316895
    9. ' =' → logprob: -8.355549812316895
    10. '(dp' → logprob: -8.480549812316895

Token 606: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0004846538067795336
    2. 'for' → logprob: -7.750484466552734
    3. 'i' → logprob: -10.625484466552734
    4. 'def' → logprob: -11.250484466552734
    5. '#' → logprob: -12.125484466552734
    6. '   ' → logprob: -12.750484466552734
    7. '0' → logprob: -12.750484466552734
    8. ' dp' → logprob: -13.000484466552734
    9. 'd' → logprob: -14.750484466552734
    10. ' for' → logprob: -15.000484466552734

Token 607: '[D' (ID: 159299)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.2994620242971e-06
    2. '```' → logprob: -13.125008583068848
    3. '[D' → logprob: -13.125008583068848
    4. '<|end|>' → logprob: -13.875008583068848
    5. '][' → logprob: -14.375008583068848
    6. ' [' → logprob: -14.625008583068848
    7. '0' → logprob: -15.125008583068848
    8. '[-' → logprob: -15.125008583068848
    9. ')[' → logprob: -15.375008583068848
    10. '[L' → logprob: -15.625008583068848

Token 608: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00019567293929867446
    2. '[' → logprob: -8.875195503234863
    3. ']' → logprob: -9.875195503234863
    4. ' ][' → logprob: -13.625195503234863
    5. '][-' → logprob: -13.750195503234863
    6. '1' → logprob: -14.625195503234863
    7. ''][' → logprob: -15.375195503234863
    8. '-' → logprob: -15.625195503234863
    9. '0' → logprob: -15.750195503234863
    10. '"][' → logprob: -16.00019645690918

Token 609: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002188449027016759
    2. '1' → logprob: -6.127188682556152
    3. 'False' → logprob: -13.002188682556152
    4. ' ' → logprob: -15.127188682556152
    5. '][' → logprob: -15.127188682556152
    6. '
' → logprob: -15.752188682556152
    7. '[' → logprob: -16.127187728881836
    8. 'True' → logprob: -16.377187728881836
    9. '   ' → logprob: -17.314687728881836
    10. '(' → logprob: -17.377187728881836

Token 610: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00020795092859771103
    2. ']' → logprob: -8.500207901000977
    3. ' ][' → logprob: -13.250207901000977
    4. '[' → logprob: -13.375207901000977
    5. '0' → logprob: -14.750207901000977
    6. ']][' → logprob: -15.250207901000977
    7. '][-' → logprob: -16.000207901000977
    8. '()][' → logprob: -16.625207901000977
    9. ')][' → logprob: -17.125207901000977
    10. '][]' → logprob: -17.125207901000977

Token 611: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004320996522437781
    2. '1' → logprob: -7.750432014465332
    3. ' ' → logprob: -14.375432014465332
    4. 'False' → logprob: -14.875432014465332
    5. '2' → logprob: -15.375432014465332
    6. '۰' → logprob: -16.12543296813965
    7. '<|end|>' → logprob: -17.06293296813965
    8. '   ' → logprob: -17.93793296813965
    9. ']' → logprob: -17.93793296813965
    10. '
' → logprob: -18.06293296813965

Token 612: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.2020991056924686e-05
    2. ']' → logprob: -10.625032424926758
    3. '[' → logprob: -11.875032424926758
    4. ' ][' → logprob: -15.000032424926758
    5. ''][' → logprob: -16.000032424926758
    6. '"][' → logprob: -16.000032424926758
    7. '0' → logprob: -17.250032424926758
    8. ']][' → logprob: -18.000032424926758
    9. '()][' → logprob: -18.000032424926758
    10. '][-' → logprob: -18.625032424926758

Token 613: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '1' → logprob: -13.375001907348633
    3. ' ' → logprob: -18.250001907348633
    4. '۰' → logprob: -18.250001907348633
    5. ']' → logprob: -18.875001907348633
    6. '
' → logprob: -19.500001907348633
    7. '০' → logprob: -20.500001907348633
    8. '   ' → logprob: -20.750001907348633
    9. 'False' → logprob: -21.437501907348633
    10. '０' → logprob: -21.625001907348633

Token 614: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.723973582556937e-05
    2. ']=' → logprob: -11.000017166137695
    3. ' ]' → logprob: -14.875017166137695
    4. '].' → logprob: -16.000017166137695
    5. '()]' → logprob: -17.250017166137695
    6. '[' → logprob: -17.875017166137695
    7. '.]' → logprob: -18.000017166137695
    8. ']
' → logprob: -18.250017166137695
    9. ')' → logprob: -19.000017166137695
    10. '.value' → logprob: -19.000017166137695

Token 615: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141489803791046
    2. ' =' → logprob: -1.701414942741394
    3. '.=' → logprob: -14.201415061950684
    4. '=x' → logprob: -14.326415061950684
    5. '.x' → logprob: -15.826415061950684
    6. '＝' → logprob: -16.201414108276367
    7. '+=' → logprob: -16.826414108276367
    8. '.' → logprob: -17.326414108276367
    9. ' ' → logprob: -17.576414108276367
    10. '=
' → logprob: -17.826414108276367

Token 616: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -8.2994620242971e-06
    2. '1' → logprob: -12.125008583068848
    3. ' Mod' → logprob: -13.000008583068848
    4. '(Mod' → logprob: -14.500008583068848
    5. '   ' → logprob: -18.00000762939453
    6. '_mod' → logprob: -19.87500762939453
    7. ' ' → logprob: -19.87500762939453
    8. 'mod' → logprob: -20.00000762939453
    9. '_Mod' → logprob: -20.12500762939453
    10. 'MOD' → logprob: -20.37500762939453

Token 617: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.842555426876061e-06
    2. 'int' → logprob: -12.250004768371582
    3. 'Mod' → logprob: -17.3750057220459
    4. '_int' → logprob: -18.2500057220459
    5. 'INT' → logprob: -18.3750057220459
    6. 'nt' → logprob: -19.2500057220459
    7. '[Int' → logprob: -19.3750057220459
    8. 'In' → logprob: -19.6250057220459
    9. ' Int' → logprob: -20.1250057220459
    10. '.Int' → logprob: -20.3750057220459

Token 618: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.493430894101039e-05
    2. '1' → logprob: -9.500075340270996
    3. '(
' → logprob: -18.37507438659668
    4. ' (' → logprob: -19.12507438659668
    5. '0' → logprob: -19.62507438659668
    6. '[' → logprob: -20.50007438659668
    7. '(-' → logprob: -20.87507438659668
    8. '()' → logprob: -21.12507438659668
    9. 'One' → logprob: -22.00007438659668
    10. '(True' → logprob: -22.25007438659668

Token 619: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016349162615370005
    2. '0' → logprob: -8.750163078308105
    3. '(' → logprob: -12.750163078308105
    4. '2' → logprob: -14.000163078308105
    5. '
' → logprob: -15.875163078308105
    6. ' ' → logprob: -15.937663078308105
    7. '-' → logprob: -16.562664031982422
    8. 'R' → logprob: -16.937664031982422
    9. '(R' → logprob: -17.000164031982422
    10. '{' → logprob: -17.062664031982422

Token 620: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.706686690449715e-05
    2. ')
' → logprob: -9.625066757202148
    3. '   ' → logprob: -14.500066757202148
    4. ' )' → logprob: -16.00006675720215
    5. ')

' → logprob: -16.50006675720215
    6. ')`' → logprob: -16.50006675720215
    7. ')
' → logprob: -16.87506675720215
    8. '),' → logprob: -17.12506675720215
    9. ')#' → logprob: -17.50006675720215
    10. '))' → logprob: -17.62506675720215

Token 621: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7234876155853271
    2. '   ' → logprob: -1.2234876155853271
    3. '<|end|>' → logprob: -1.7234876155853271
    4. ' for' → logprob: -3.848487615585327
    5. 'for' → logprob: -5.098487854003906
    6. '    
' → logprob: -5.723487854003906
    7. ')' → logprob: -5.848487854003906
    8. '\n' → logprob: -6.098487854003906
    9. '<|end|>' → logprob: -6.473487854003906
    10. '  
' → logprob: -6.848487854003906

Token 622: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6397855877876282
    2. 'for' → logprob: -0.7647855877876282
    3. '   ' → logprob: -5.0147857666015625
    4. '
' → logprob: -8.389785766601562
    5. '<|end|>' → logprob: -9.014785766601562
    6. '	for' → logprob: -9.639785766601562
    7. ')' → logprob: -10.514785766601562
    8. '    
' → logprob: -10.764785766601562
    9. ' ' → logprob: -10.889785766601562
    10. 'def' → logprob: -11.139785766601562

Token 623: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24746446311473846
    2. 'for' → logprob: -2.122464418411255
    3. ' for' → logprob: -2.997464418411255
    4. '0' → logprob: -3.622464418411255
    5. '...' → logprob: -5.122464656829834
    6. ')' → logprob: -5.122464656829834
    7. 'dp' → logprob: -5.372464656829834
    8. '<|end|>' → logprob: -6.497464656829834
    9. '<|end|>' → logprob: -7.372464656829834
    10. ' #' → logprob: -7.497464656829834

Token 624: ' commence' (ID: 44755)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8040667176246643
    2. '<|end|>' → logprob: -1.1790666580200195
    3. '...' → logprob: -3.4290666580200195
    4. ']' → logprob: -3.6790666580200195
    5. '#' → logprob: -3.6790666580200195
    6. '[' → logprob: -3.8040666580200195
    7. 'continue' → logprob: -4.3040666580200195
    8. 's' → logprob: -4.5540666580200195
    9. 'contin' → logprob: -4.5540666580200195
    10. '<|end|>' → logprob: -4.5540666580200195

Token 625: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009141438640654087
    2. ' for' → logprob: -4.884141445159912
    3. '<|end|>' → logprob: -7.009141445159912
    4. 'for' → logprob: -8.759140968322754
    5. ' at' → logprob: -9.134140968322754
    6. '
' → logprob: -9.509140968322754
    7. ')' → logprob: -9.634140968322754
    8. '    
' → logprob: -10.009140968322754
    9. '<|end|>' → logprob: -10.009140968322754
    10. ',' → logprob: -10.634140968322754

Token 626: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7819266319274902
    2. 'l' → logprob: -0.9069266319274902
    3. 'dp' → logprob: -2.9069266319274902
    4. '1' → logprob: -2.9069266319274902
    5. 'le' → logprob: -4.65692663192749
    6. 'cela' → logprob: -5.53192663192749
    7. 'celle' → logprob: -5.78192663192749
    8. 'D' → logprob: -5.90692663192749
    9. 'c' → logprob: -6.28192663192749
    10. 'mettre' → logprob: -7.03192663192749

Token 627: ' plus' (ID: 2932)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.8411902189254761
    2. 'bout' → logprob: -1.466190218925476
    3. 'cas' → logprob: -2.0911903381347656
    4. 'plus' → logprob: -3.3411903381347656
    5. 'haut' → logprob: -3.5911903381347656
    6. 'dp' → logprob: -3.8411903381347656
    7. 'fin' → logprob: -3.9661903381347656
    8. 'end' → logprob: -4.341190338134766
    9. '```' → logprob: -4.341190338134766
    10. 'dern' → logprob: -4.591190338134766

Token 628: ' "' (ID: 392)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.1072177067399025
    2. ' significant' → logprob: -3.357217788696289
    3. 'grand' → logprob: -3.607217788696289
    4. 'haut' → logprob: -4.232217788696289
    5. 'bas' → logprob: -5.857217788696289
    6. '```' → logprob: -5.982217788696289
    7. 'd' → logprob: -6.232217788696289
    8. ' haut' → logprob: -6.607217788696289
    9. 't' → logprob: -6.732217788696289
    10. '1' → logprob: -6.732217788696289

Token 629: 'haut' (ID: 134423)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.5982716679573059
    2. 'sign' → logprob: -0.8482716679573059
    3. 'large' → logprob: -4.47327184677124
    4. 'd' → logprob: -5.34827184677124
    5. 'à' → logprob: -6.09827184677124
    6. 'pet' → logprob: -7.09827184677124
    7. 'haut' → logprob: -7.22327184677124
    8. '```' → logprob: -7.72327184677124
    9. 'bas' → logprob: -7.84827184677124
    10. 'strict' → logprob: -8.223271369934082

Token 630: '"' (ID: 1)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.028636598959565163
    2. '")' → logprob: -3.9036366939544678
    3. ' bit' → logprob: -6.278636455535889
    4. '"' → logprob: -6.778636455535889
    5. '")]' → logprob: -7.028636455535889
    6. ')' → logprob: -7.153636455535889
    7. '```' → logprob: -7.528636455535889
    8. '"]' → logprob: -7.528636455535889
    9. '">' → logprob: -7.903636455535889
    10. '1' → logprob: -7.903636455535889

Token 631: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05335331708192825
    2. 'for' → logprob: -3.5533533096313477
    3. ' for' → logprob: -3.9283533096313477
    4. '
' → logprob: -6.053353309631348
    5. '<|end|>' → logprob: -7.303353309631348
    6. ' ' → logprob: -8.678353309631348
    7. '  ' → logprob: -8.928353309631348
    8. '    
' → logprob: -9.303353309631348
    9. ',' → logprob: -9.553353309631348
    10. '  
' → logprob: -10.553353309631348

Token 632: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07259707897901535
    2. ' for' → logprob: -3.447597026824951
    3. '
' → logprob: -3.947597026824951
    4. '<|end|>' → logprob: -4.822597026824951
    5. 'for' → logprob: -4.947597026824951
    6. '    
' → logprob: -6.697597026824951
    7. '<|end|>' → logprob: -7.822597026824951
    8. '\n' → logprob: -7.822597026824951
    9. ' ' → logprob: -8.07259750366211
    10. ')' → logprob: -8.32259750366211

Token 633: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2600034475326538
    2. 'for' → logprob: -1.7600034475326538
    3. '   ' → logprob: -2.8850035667419434
    4. '```' → logprob: -7.135003566741943
    5. '	for' → logprob: -8.635003089904785
    6. 'def' → logprob: -11.010003089904785
    7. '<|end|>' → logprob: -11.260003089904785
    8. '[' → logprob: -12.010003089904785
    9. ' ' → logprob: -12.135003089904785
    10. '  ' → logprob: -12.260003089904785

Token 634: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0133151700720191
    2. ' for' → logprob: -4.388315200805664
    3. 'd' → logprob: -7.513315200805664
    4. 'i' → logprob: -8.388315200805664
    5. '   ' → logprob: -10.888315200805664
    6. 'D' → logprob: -11.513315200805664
    7. ' i' → logprob: -13.513315200805664
    8. ' d' → logprob: -13.888315200805664
    9. ')' → logprob: -15.763315200805664
    10. ' ' → logprob: -16.013315200805664

Token 635: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7392197847366333
    2. 'i' → logprob: -1.1142197847366333
    3. ' d' → logprob: -2.1142196655273438
    4. ' i' → logprob: -2.8642196655273438
    5. 'bit' → logprob: -4.989219665527344
    6. ' bit' → logprob: -5.489219665527344
    7. ' pos' → logprob: -6.614219665527344
    8. 'pos' → logprob: -6.739219665527344
    9. 'k' → logprob: -7.364219665527344
    10. 'w' → logprob: -8.114219665527344

Token 636: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06213405355811119
    2. 'in' → logprob: -2.812134027481079
    3. '   ' → logprob: -9.1871337890625
    4. ' ' → logprob: -10.6871337890625
    5. 'd' → logprob: -11.4371337890625
    6. ')' → logprob: -11.6871337890625
    7. ',' → logprob: -11.9371337890625
    8. '  ' → logprob: -12.6871337890625
    9. '_' → logprob: -12.8121337890625
    10. '-' → logprob: -13.4371337890625

Token 637: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16216111183166504
    2. 're' → logprob: -1.912161111831665
    3. ' range' → logprob: -6.537160873413086
    4. ' reversed' → logprob: -7.662160873413086
    5. 'reverse' → logprob: -11.662160873413086
    6. '   ' → logprob: -11.912160873413086
    7. ' ' → logprob: -15.412160873413086
    8. '(range' → logprob: -15.662160873413086
    9. '
' → logprob: -16.037160873413086
    10. '```' → logprob: -16.412160873413086

Token 638: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -1.700132997939363e-05
    2. 'D' → logprob: -11.750017166137695
    3. '(' → logprob: -12.000017166137695
    4. '   ' → logprob: -13.375017166137695
    5. '	D' → logprob: -14.375017166137695
    6. ',D' → logprob: -15.250017166137695
    7. '(
' → logprob: -15.500017166137695
    8. '<D' → logprob: -16.625017166137695
    9. ' D' → logprob: -16.625017166137695
    10. ' (' → logprob: -16.625017166137695

Token 639: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3485245108604431
    2. ' -' → logprob: -1.223524570465088
    3. ',' → logprob: -9.47352409362793
    4. ' ,' → logprob: -13.84852409362793
    5. ' ' → logprob: -14.47352409362793
    6. '   ' → logprob: -14.47352409362793
    7. '
' → logprob: -15.34852409362793
    8. '-D' → logprob: -15.72352409362793
    9. ',-' → logprob: -15.84852409362793
    10. '-,' → logprob: -16.22352409362793

Token 640: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. ' ' → logprob: -10.875020980834961
    3. '2' → logprob: -14.500020980834961
    4. '   ' → logprob: -15.125020980834961
    5. ',' → logprob: -15.375020980834961
    6. '-' → logprob: -15.500020980834961
    7. '
' → logprob: -15.500020980834961
    8. ' -' → logprob: -15.625020980834961
    9. '```' → logprob: -15.875020980834961
    10. '    ' → logprob: -17.50002098083496

Token 641: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042983482126146555
    2. ' ,' → logprob: -8.1254301071167
    3. ',-' → logprob: -9.2504301071167
    4. '-' → logprob: -10.8754301071167
    5. ' -' → logprob: -11.2504301071167
    6. ',
' → logprob: -12.6254301071167
    7. '-,' → logprob: -14.0004301071167
    8. '+' → logprob: -15.0004301071167
    9. '   ' → logprob: -15.2504301071167
    10. ' ,-' → logprob: -15.3754301071167

Token 642: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007101670489646494
    2. ' -' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.000709533691406
    4. ' ' → logprob: -17.750709533691406
    5. '-d' → logprob: -17.875709533691406
    6. '-D' → logprob: -18.000709533691406
    7. 'd' → logprob: -20.125709533691406
    8. '...' → logprob: -20.375709533691406
    9. '0' → logprob: -20.375709533691406
    10. '
' → logprob: -20.500709533691406

Token 643: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' -' → logprob: -14.125001907348633
    3. ',' → logprob: -14.750001907348633
    4. '   ' → logprob: -14.875001907348633
    5. '```' → logprob: -15.375001907348633
    6. ' ' → logprob: -15.625001907348633
    7. '-' → logprob: -16.250001907348633
    8. '
' → logprob: -16.875001907348633
    9. ',-' → logprob: -17.125001907348633
    10. '``' → logprob: -19.375001907348633

Token 644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002858370542526245
    2. ',-' → logprob: -6.6278581619262695
    3. '-' → logprob: -7.0028581619262695
    4. ' ,' → logprob: -7.6278581619262695
    5. ' -' → logprob: -9.25285816192627
    6. '   ' → logprob: -11.12785816192627
    7. '-,' → logprob: -11.37785816192627
    8. ',
' → logprob: -12.37785816192627
    9. ' ,-' → logprob: -12.75285816192627
    10. '):' → logprob: -12.87785816192627

Token 645: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004078639671206474
    2. ' -' → logprob: -5.5040788650512695
    3. ' ' → logprob: -15.87907886505127
    4. '   ' → logprob: -16.629077911376953
    5. ')' → logprob: -17.129077911376953
    6. '-d' → logprob: -17.504077911376953
    7. '```' → logprob: -17.754077911376953
    8. 'd' → logprob: -17.879077911376953
    9. '-step' → logprob: -18.004077911376953
    10. ',' → logprob: -18.379077911376953

Token 646: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '-' → logprob: -16.125
    4. '   ' → logprob: -17.25
    5. '
' → logprob: -17.75
    6. '```' → logprob: -18.5
    7. ')' → logprob: -19.0
    8. '１' → logprob: -19.25
    9. '):
' → logprob: -20.625
    10. ',' → logprob: -20.75

Token 647: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030132150277495384
    2. '):
' → logprob: -3.5301320552825928
    3. ':' → logprob: -8.280132293701172
    4. ',' → logprob: -9.405132293701172
    5. ' ):' → logprob: -10.905132293701172
    6. '   ' → logprob: -11.155132293701172
    7. '):
' → logprob: -12.530132293701172
    8. ' :' → logprob: -12.655132293701172
    9. ')' → logprob: -12.780132293701172
    10. '       ' → logprob: -13.655132293701172

Token 648: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014267751015722752
    2. ' for' → logprob: -4.264267921447754
    3. 'for' → logprob: -9.389267921447754
    4. '   ' → logprob: -12.264267921447754
    5. '    ' → logprob: -12.389267921447754
    6. ',' → logprob: -12.639267921447754
    7. '    ' → logprob: -13.014267921447754
    8. '     ' → logprob: -13.264267921447754
    9. '           ' → logprob: -13.514267921447754
    10. '      ' → logprob: -14.389267921447754

Token 649: ' lb' (ID: 32474)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3869471549987793
    2. ' for' → logprob: -1.1369471549987793
    3. '       ' → logprob: -9.511947631835938
    4. '   ' → logprob: -13.636947631835938
    5. '	for' → logprob: -15.261947631835938
    6. '
' → logprob: -15.886947631835938
    7. '    ' → logprob: -16.261947631835938
    8. 'b' → logprob: -16.261947631835938
    9. '           ' → logprob: -16.386947631835938
    10. '0' → logprob: -16.761947631835938

Token 650: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.594214677810669
    2. ',' → logprob: -1.344214677810669
    3. '=' → logprob: -2.844214677810669
    4. ']' → logprob: -3.344214677810669
    5. '       ' → logprob: -3.844214677810669
    6. 'for' → logprob: -3.844214677810669
    7. '][' → logprob: -4.46921443939209
    8. ')' → logprob: -4.46921443939209
    9. '   ' → logprob: -4.59421443939209
    10. '           ' → logprob: -5.96921443939209

Token 651: ' (' (ID: 350)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0187170822173357
    2. '0' → logprob: -5.018717288970947
    3. ' (' → logprob: -5.018717288970947
    4. '(R' → logprob: -5.893717288970947
    5. '((' → logprob: -6.643717288970947
    6. '(' → logprob: -6.893717288970947
    7. '1' → logprob: -9.143716812133789
    8. '(D' → logprob: -9.643716812133789
    9. ' ' → logprob: -10.768716812133789
    10. '(l' → logprob: -11.018716812133789

Token 652: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.023344125598669052
    2. '(L' → logprob: -3.773344039916992
    3. 'R' → logprob: -9.898344039916992
    4. ' L' → logprob: -10.023344039916992
    5. '   ' → logprob: -13.398344039916992
    6. '(R' → logprob: -13.773344039916992
    7. ' (' → logprob: -14.273344039916992
    8. '	L' → logprob: -14.773344039916992
    9. '[L' → logprob: -15.523344039916992
    10. '(' → logprob: -15.898344039916992

Token 653: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.2519691288471222
    2. ' >>' → logprob: -1.5019690990447998
    3. '>>(' → logprob: -10.876969337463379
    4. ')' → logprob: -12.626969337463379
    5. ')>>' → logprob: -12.626969337463379
    6. ' ' → logprob: -13.001969337463379
    7. '>' → logprob: -13.001969337463379
    8. '>>>' → logprob: -13.126969337463379
    9. ' >' → logprob: -13.751969337463379
    10. ' ' → logprob: -13.751969337463379

Token 654: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00014025058771949261
    2. ' d' → logprob: -8.875140190124512
    3. '1' → logprob: -16.250141143798828
    4. '(d' → logprob: -16.625141143798828
    5. '	d' → logprob: -17.125141143798828
    6. ')d' → logprob: -17.625141143798828
    7. ' ' → logprob: -18.500141143798828
    8. ')' → logprob: -18.625141143798828
    9. ' (' → logprob: -18.750141143798828
    10. '   ' → logprob: -18.875141143798828

Token 655: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003992104611825198
    2. ')&' → logprob: -7.875399112701416
    3. ' )' → logprob: -11.125399589538574
    4. '&' → logprob: -13.250399589538574
    5. '       ' → logprob: -14.375399589538574
    6. ')
' → logprob: -14.500399589538574
    7. '           ' → logprob: -15.125399589538574
    8. ' &' → logprob: -15.625399589538574
    9. '   ' → logprob: -15.750399589538574
    10. '1' → logprob: -16.125398635864258

Token 656: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.2439749538898468
    2. ' &' → logprob: -1.7439749240875244
    3. ')' → logprob: -3.4939749240875244
    4. ')&' → logprob: -4.4939751625061035
    5. '&amp' → logprob: -9.868974685668945
    6. '       ' → logprob: -10.618974685668945
    7. '           ' → logprob: -12.243974685668945
    8. '&
' → logprob: -12.243974685668945
    9. '&)' → logprob: -12.618974685668945
    10. '&r' → logprob: -12.868974685668945

Token 657: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '           ' → logprob: -17.875001907348633
    5. '(' → logprob: -18.875001907348633
    6. '       ' → logprob: -19.500001907348633
    7. '```' → logprob: -19.500001907348633
    8. '１' → logprob: -19.875001907348633
    9. '
' → logprob: -20.250001907348633
    10. '  ' → logprob: -20.375001907348633

Token 658: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.75
    4. '(' → logprob: -19.25
    5. '
' → logprob: -20.0
    6. '           ' → logprob: -20.25
    7. '63' → logprob: -20.9375
    8. '01' → logprob: -21.0625
    9. '0' → logprob: -21.0625
    10. '```' → logprob: -21.125

Token 659: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09016106277704239
    2. 'rb' → logprob: -2.465161085128784
    3. ',' → logprob: -8.215161323547363
    4. '
' → logprob: -8.465161323547363
    5. ' rb' → logprob: -8.590161323547363
    6. 'ur' → logprob: -8.840161323547363
    7. 'for' → logprob: -9.215161323547363
    8. '_rb' → logprob: -9.340161323547363
    9. '(rb' → logprob: -9.590161323547363
    10. '           ' → logprob: -9.840161323547363

Token 660: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28630250692367554
    2. 'rb' → logprob: -1.4113025665283203
    3. ' rb' → logprob: -5.53630256652832
    4. 'ub' → logprob: -7.91130256652832
    5. '           ' → logprob: -8.16130256652832
    6. 'for' → logprob: -8.41130256652832
    7. '   ' → logprob: -8.78630256652832
    8. ' for' → logprob: -10.03630256652832
    9. '(rb' → logprob: -10.53630256652832
    10. '_rb' → logprob: -11.03630256652832

Token 661: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' (adapté à ' rb') → logprob: -0.0007004032959230244
    2. ' rb' → logprob: -7.5007004737854
    3. 'ub' → logprob: -8.875699996948242
    4. '   ' → logprob: -12.625699996948242
    5. 'hb' → logprob: -12.875699996948242
    6. '(rb' → logprob: -14.375699996948242
    7. '       ' → logprob: -14.625699996948242
    8. ' ub' → logprob: -15.000699996948242
    9. '_rb' → logprob: -15.000699996948242
    10. '.rb' → logprob: -15.875699996948242

Token 662: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42877092957496643
    2. ' =' → logprob: -1.053770899772644
    3. '       ' → logprob: -10.428771018981934
    4. ')' → logprob: -11.303771018981934
    5. ' (' → logprob: -11.928771018981934
    6. '        ' → logprob: -12.053771018981934
    7. '           ' → logprob: -12.678771018981934
    8. '<|end|>' → logprob: -12.803771018981934
    9. '(' → logprob: -13.178771018981934
    10. ' ' → logprob: -13.553771018981934

Token 663: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47409096360206604
    2. '(R' → logprob: -0.9740909337997437
    3. '   ' → logprob: -12.099090576171875
    4. '(r' → logprob: -12.224090576171875
    5. ' ' → logprob: -13.474090576171875
    6. '((' → logprob: -14.599090576171875
    7. '    ' → logprob: -14.849090576171875
    8. '  ' → logprob: -14.849090576171875
    9. '       ' → logprob: -15.224090576171875
    10. '(' → logprob: -15.474090576171875

Token 664: 'R' (ID: 49)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.5760548710823059
    2. 'R' → logprob: -0.8260548710823059
    3. ' R' → logprob: -10.326054573059082
    4. '1' → logprob: -10.701054573059082
    5. ' (' → logprob: -10.826054573059082
    6. '   ' → logprob: -10.951054573059082
    7. ')' → logprob: -11.701054573059082
    8. '[R' → logprob: -13.076054573059082
    9. '	R' → logprob: -13.201054573059082
    10. '(' → logprob: -13.201054573059082

Token 665: ' >>' (ID: 6832)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002449138555675745
    2. ')>>' → logprob: -6.752449035644531
    3. '>>' → logprob: -7.252449035644531
    4. ' >>' → logprob: -8.127449035644531
    5. ' )' → logprob: -9.752449035644531
    6. '[d' → logprob: -10.252449035644531
    7. ')d' → logprob: -10.377449035644531
    8. ')[' → logprob: -10.627449035644531
    9. ')&' → logprob: -10.752449035644531
    10. 'd' → logprob: -10.877449035644531

Token 666: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00020389800192788243
    2. ' d' → logprob: -8.500204086303711
    3. '1' → logprob: -15.500204086303711
    4. '           ' → logprob: -16.50020408630371
    5. ' ' → logprob: -17.12520408630371
    6. ')d' → logprob: -17.12520408630371
    7. '(d' → logprob: -17.25020408630371
    8. ')' → logprob: -17.25020408630371
    9. '   ' → logprob: -17.37520408630371
    10. '```' → logprob: -17.50020408630371

Token 667: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029029499273747206
    2. ')&' → logprob: -8.250289916992188
    3. '       ' → logprob: -10.750289916992188
    4. ' )' → logprob: -12.625289916992188
    5. ')
' → logprob: -13.125289916992188
    6. '           ' → logprob: -14.375289916992188
    7. '   ' → logprob: -14.625289916992188
    8. '&' → logprob: -15.000289916992188
    9. '```' → logprob: -15.625289916992188
    10. '0' → logprob: -16.000289916992188

Token 668: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.07911549508571625
    2. '&' → logprob: -2.579115390777588
    3. '       ' → logprob: -9.204115867614746
    4. ')' → logprob: -9.579115867614746
    5. ')&' → logprob: -10.204115867614746
    6. ' &
' → logprob: -12.204115867614746
    7. '&
' → logprob: -12.454115867614746
    8. '        ' → logprob: -13.329115867614746
    9. ' ' → logprob: -13.329115867614746
    10. '1' → logprob: -13.704115867614746

Token 669: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006715728435665369
    2. ' ' → logprob: -5.006715774536133
    3. '   ' → logprob: -16.256715774536133
    4. '```' → logprob: -16.506715774536133
    5. '(' → logprob: -16.756715774536133
    6. '0' → logprob: -17.194215774536133
    7. '`' → logprob: -17.381715774536133
    8. ' (' → logprob: -17.506715774536133
    9. '           ' → logprob: -17.694215774536133
    10. 'int' → logprob: -18.256715774536133

Token 670: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'd' → logprob: -18.3750057220459
    4. '```' → logprob: -18.8750057220459
    5. '   ' → logprob: -19.1250057220459
    6. '0' → logprob: -19.1250057220459
    7. 'r' → logprob: -20.1250057220459
    8. '[' → logprob: -20.2500057220459
    9. '(' → logprob: -20.3750057220459
    10. '`' → logprob: -20.6250057220459

Token 671: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019340807921253145
    2. ' for' → logprob: -9.12519359588623
    3. '<|end|>' → logprob: -10.37519359588623
    4. 'for' → logprob: -10.62519359588623
    5. '        
' → logprob: -11.00019359588623
    6. '           ' → logprob: -12.37519359588623
    7. ',' → logprob: -13.12519359588623
    8. '   ' → logprob: -13.50019359588623
    9. '[' → logprob: -14.12519359588623
    10. '```' → logprob: -14.37519359588623

Token 672: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1240810826420784
    2. 'for' → logprob: -2.3740811347961426
    3. ' for' → logprob: -3.7490811347961426
    4. '	for' → logprob: -10.749080657958984
    5. '   ' → logprob: -11.374080657958984
    6. '           ' → logprob: -11.499080657958984
    7. '```' → logprob: -12.749080657958984
    8. '	   ' → logprob: -13.249080657958984
    9. '        
' → logprob: -13.499080657958984
    10. '<|end|>' → logprob: -13.749080657958984

Token 673: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00043472214019857347
    2. ' for' → logprob: -7.750434875488281
    3. '       ' → logprob: -13.000434875488281
    4. '   ' → logprob: -13.250434875488281
    5. '	for' → logprob: -17.50043487548828
    6. '
' → logprob: -17.62543487548828
    7. '           ' → logprob: -18.62543487548828
    8. '```' → logprob: -19.75043487548828
    9. '        
' → logprob: -20.00043487548828
    10. '    
' → logprob: -21.37543487548828

Token 674: ' i' (ID: 575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.9394131898880005
    2. 'lim' → logprob: -2.564413070678711
    3. 'less' → logprob: -2.689413070678711
    4. 't' → logprob: -2.689413070678711
    5. 'f' → logprob: -2.814413070678711
    6. 'lt' → logprob: -2.814413070678711
    7. 'is' → logprob: -3.064413070678711
    8. 'a' → logprob: -3.314413070678711
    9. 'x' → logprob: -3.314413070678711
    10. 'sm' → logprob: -3.439413070678711

Token 675: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0549507737159729
    2. 'in' → logprob: -2.929950714111328
    3. ',' → logprob: -10.929950714111328
    4. '0' → logprob: -11.179950714111328
    5. 'n' → logprob: -11.304950714111328
    6. '[' → logprob: -11.804950714111328
    7. '	in' → logprob: -12.679950714111328
    8. ' ' → logprob: -13.054950714111328
    9. '_' → logprob: -13.304950714111328
    10. '_in' → logprob: -13.554950714111328

Token 676: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.21786214411258698
    2. 'f' → logprob: -3.467862129211426
    3. 'l' → logprob: -3.842862129211426
    4. 'a' → logprob: -3.967862129211426
    5. 'less' → logprob: -4.467862129211426
    6. 'eq' → logprob: -4.467862129211426
    7. 'le' → logprob: -4.842862129211426
    8. 'is' → logprob: -4.967862129211426
    9. 'sm' → logprob: -5.092862129211426
    10. 'lim' → logprob: -5.092862129211426

Token 677: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09462206810712814
    2. 'in' → logprob: -2.7196221351623535
    3. ',' → logprob: -3.7196221351623535
    4. '[' → logprob: -10.344621658325195
    5. ')' → logprob: -10.469621658325195
    6. ' ,' → logprob: -11.219621658325195
    7. 'import' → logprob: -11.344621658325195
    8. '   ' → logprob: -11.344621658325195
    9. 'range' → logprob: -11.469621658325195
    10. '```' → logprob: -12.719621658325195

Token 678: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.010994525626301765
    2. 'l' → logprob: -6.3859944343566895
    3. 'f' → logprob: -6.7609944343566895
    4. 'e' → logprob: -7.0109944343566895
    5. 't' → logprob: -7.0109944343566895
    6. 'eq' → logprob: -7.3859944343566895
    7. 'a' → logprob: -7.5109944343566895
    8. 'z' → logprob: -7.8859944343566895
    9. 'less' → logprob: -7.8859944343566895
    10. 'h' → logprob: -7.8859944343566895

Token 679: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5253217220306396
    2. 'in' → logprob: -0.9003217220306396
    3. ',' → logprob: -6.150321960449219
    4. '  ' → logprob: -11.400321960449219
    5. '   ' → logprob: -11.400321960449219
    6. ' ' → logprob: -11.650321960449219
    7. ')' → logprob: -11.650321960449219
    8. 'n' → logprob: -12.025321960449219
    9. '
' → logprob: -12.525321960449219
    10. '```' → logprob: -13.400321960449219

Token 680: ' x' (ID: 1215)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09902456402778625
    2. 'n' → logprob: -4.099024772644043
    3. 'b' → logprob: -4.474024772644043
    4. 'in' → logprob: -4.599024772644043
    5. 's' → logprob: -4.974024772644043
    6. 'o' → logprob: -5.224024772644043
    7. 'l' → logprob: -5.349024772644043
    8. 'f' → logprob: -5.349024772644043
    9. 'z' → logprob: -5.474024772644043
    10. 't' → logprob: -5.599024772644043

Token 681: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16031134128570557
    2. ' in' → logprob: -1.9103113412857056
    3. ',' → logprob: -9.910311698913574
    4. 'import' → logprob: -11.535311698913574
    5. ')' → logprob: -11.910311698913574
    6. '   ' → logprob: -12.410311698913574
    7. '[' → logprob: -13.035311698913574
    8. 'In' → logprob: -13.285311698913574
    9. '  ' → logprob: -13.535311698913574
    10. '	in' → logprob: -13.535311698913574

Token 682: ' y' (ID: 342)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19034363329410553
    2. 'in' → logprob: -2.0653436183929443
    3. 'k' → logprob: -3.5653436183929443
    4. 'dp' → logprob: -6.190343856811523
    5. ' k' → logprob: -6.315343856811523
    6. ' ' → logprob: -6.690343856811523
    7. '_' → logprob: -6.752843856811523
    8. 'n' → logprob: -7.315343856811523
    9. '_in' → logprob: -7.315343856811523
    10. '0' → logprob: -7.565343856811523

Token 683: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3494541347026825
    2. ' in' → logprob: -1.2244541645050049
    3. ',' → logprob: -7.474453926086426
    4. ')' → logprob: -9.099453926086426
    5. 'n' → logprob: -10.099453926086426
    6. '  ' → logprob: -10.099453926086426
    7. '   ' → logprob: -10.224453926086426
    8. '_in' → logprob: -10.724453926086426
    9. ' ' → logprob: -10.849453926086426
    10. 'range' → logprob: -10.849453926086426

Token 684: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.17190010845661163
    2. ' product' → logprob: -1.9219001531600952
    3. '(product' → logprob: -4.546900272369385
    4. ' in' → logprob: -8.671899795532227
    5. 'in' → logprob: -9.171899795532227
    6. '[' → logprob: -9.171899795532227
    7. '	product' → logprob: -9.421899795532227
    8. 'range' → logprob: -9.546899795532227
    9. '.product' → logprob: -9.796899795532227
    10. ' ' → logprob: -10.046899795532227

Token 685: '((' (ID: 2054)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.022391028702259064
    2. '([' → logprob: -4.147390842437744
    3. '=' → logprob: -5.647390842437744
    4. '((' → logprob: -6.647390842437744
    5. 'range' → logprob: -7.022390842437744
    6. '(' → logprob: -8.147391319274902
    7. '=(' → logprob: -8.397391319274902
    8. '=[' → logprob: -9.397391319274902
    9. ' range' → logprob: -12.147391319274902
    10. ' in' → logprob: -12.272391319274902

Token 686: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17469081282615662
    2. 'range' → logprob: -1.924690842628479
    3. '0' → logprob: -4.4246907234191895
    4. '(range' → logprob: -6.4246907234191895
    5. '[' → logprob: -7.6746907234191895
    6. ' range' → logprob: -8.299691200256348
    7. ' (' → logprob: -10.549691200256348
    8. '
' → logprob: -11.674691200256348
    9. '   ' → logprob: -12.174691200256348
    10. ')' → logprob: -12.674691200256348

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.750003814697266
    3. '0' → logprob: -15.000003814697266
    4. ',
' → logprob: -15.250003814697266
    5. ',(' → logprob: -15.375003814697266
    6. '(),' → logprob: -15.625003814697266
    7. ' ,' → logprob: -16.000003814697266
    8. ',),' → logprob: -16.375003814697266
    9. '1' → logprob: -16.500003814697266
    10. ' ' → logprob: -17.625003814697266

Token 688: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -12.000007629394531
    3. '0' → logprob: -14.125007629394531
    4. ')' → logprob: -16.12500762939453
    5. '
' → logprob: -16.12500762939453
    6. '(' → logprob: -16.37500762939453
    7. '),' → logprob: -17.43750762939453
    8. '   ' → logprob: -17.68750762939453
    9. '```' → logprob: -17.87500762939453
    10. '))' → logprob: -18.68750762939453

Token 689: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4617256056226324e-05
    2. '0' → logprob: -11.375014305114746
    3. ' ' → logprob: -13.000014305114746
    4. '(' → logprob: -14.500014305114746
    5. '   ' → logprob: -16.000015258789062
    6. '),' → logprob: -16.250015258789062
    7. '
' → logprob: -16.250015258789062
    8. ')' → logprob: -17.000015258789062
    9. '{' → logprob: -18.375015258789062
    10. '```' → logprob: -18.500015258789062

Token 690: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.11117520928382874
    2. ',' → logprob: -2.486175298690796
    3. '):' → logprob: -4.861175060272217
    4. '):
' → logprob: -5.111175060272217
    5. '),(' → logprob: -5.236175060272217
    6. ')' → logprob: -6.861175060272217
    7. '(' → logprob: -7.361175060272217
    8. '(),' → logprob: -7.361175060272217
    9. ',),' → logprob: -8.986175537109375
    10. ',(' → logprob: -9.611175537109375

Token 691: ' repeat' (ID: 22962)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008936699479818344
    2. ' (' → logprob: -4.758936882019043
    3. 'range' → logprob: -8.508936882019043
    4. ')' → logprob: -10.008936882019043
    5. '(range' → logprob: -10.633936882019043
    6. '[' → logprob: -11.258936882019043
    7. 'repeat' → logprob: -11.508936882019043
    8. ' range' → logprob: -11.508936882019043
    9. '   ' → logprob: -12.383936882019043
    10. '0' → logprob: -12.883936882019043

Token 692: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16081328690052032
    2. '5' → logprob: -2.035813331604004
    3. '(' → logprob: -4.035813331604004
    4. '6' → logprob: -8.285813331604004
    5. '=(' → logprob: -10.160813331604004
    6. '4' → logprob: -12.910813331604004
    7. '7' → logprob: -13.035813331604004
    8. ' ' → logprob: -13.285813331604004
    9. '   ' → logprob: -13.285813331604004
    10. '`' → logprob: -14.160813331604004

Token 693: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00044902291847392917
    2. '6' → logprob: -8.250449180603027
    3. '4' → logprob: -8.875449180603027
    4. ' ' → logprob: -10.625449180603027
    5. '   ' → logprob: -11.250449180603027
    6. '3' → logprob: -12.750449180603027
    7. ')' → logprob: -13.500449180603027
    8. '7' → logprob: -13.750449180603027
    9. '2' → logprob: -14.062949180603027
    10. '       ' → logprob: -14.437949180603027

Token 694: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006979000172577798
    2. '):
' → logprob: -7.625698089599609
    3. ':' → logprob: -8.50069808959961
    4. ')' → logprob: -13.37569808959961
    5. '():' → logprob: -14.12569808959961
    6. '**' → logprob: -14.37569808959961
    7. '[' → logprob: -14.50069808959961
    8. '):
' → logprob: -14.62569808959961
    9. '[]):' → logprob: -14.62569808959961
    10. '}:' → logprob: -15.37569808959961

Token 695: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12093719840049744
    2. ':' → logprob: -2.2459371089935303
    3. ':
' → logprob: -6.245937347412109
    4. ' :' → logprob: -6.495937347412109
    5. ' if' → logprob: -6.495937347412109
    6. '               ' → logprob: -7.995937347412109
    7. '	       ' → logprob: -7.995937347412109
    8. '<|end|>' → logprob: -7.995937347412109
    9. '       ' → logprob: -8.12093734741211
    10. ',' → logprob: -8.37093734741211

Token 696: ' ni' (ID: 2565)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8028762936592102
    2. '               ' → logprob: -1.1778762340545654
    3. ' if' → logprob: -1.6778762340545654
    4. ':' → logprob: -3.5528762340545654
    5. ' :' → logprob: -4.6778764724731445
    6. 'if' → logprob: -5.4278764724731445
    7. ' ' → logprob: -5.6778764724731445
    8. '       ' → logprob: -6.4278764724731445
    9. '                               ' → logprob: -6.4278764724731445
    10. '            ' → logprob: -6.8028764724731445

Token 697: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5880030393600464
    2. ' =' → logprob: -0.8380030393600464
    3. ',' → logprob: -4.463003158569336
    4. '=i' → logprob: -8.713003158569336
    5. 's' → logprob: -10.088003158569336
    6. ' ,' → logprob: -10.838003158569336
    7. '           ' → logprob: -10.838003158569336
    8. '        ' → logprob: -10.963003158569336
    9. ')' → logprob: -11.213003158569336
    10. '=[' → logprob: -11.213003158569336

Token 698: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.021082233637571335
    2. '(i' → logprob: -5.396082401275635
    3. 'max' → logprob: -5.396082401275635
    4. '0' → logprob: -5.646082401275635
    5. ' i' → logprob: -6.021082401275635
    6. '(' → logprob: -6.396082401275635
    7. '1' → logprob: -6.521082401275635
    8. 'int' → logprob: -7.646082401275635
    9. 'm' → logprob: -7.771082401275635
    10. 'j' → logprob: -8.271081924438477

Token 699: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6588227152824402
    2. '|' → logprob: -1.033822774887085
    3. ' =' → logprob: -2.283822774887085
    4. ' |' → logprob: -4.283822536468506
    5. ' or' → logprob: -5.658822536468506
    6. ' |=' → logprob: -6.033822536468506
    7. 'or' → logprob: -6.658822536468506
    8. '<|end|>' → logprob: -6.783822536468506
    9. ',' → logprob: -6.908822536468506
    10. '0' → logprob: -8.158823013305664

Token 700: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029366476461291313
    2. 'if' → logprob: -4.779366493225098
    3. '=' → logprob: -5.529366493225098
    4. '<|end|>' → logprob: -5.654366493225098
    5. '       ' → logprob: -5.904366493225098
    6. ' if' → logprob: -6.029366493225098
    7. ' =' → logprob: -6.029366493225098
    8. ',' → logprob: -6.279366493225098
    9. '               ' → logprob: -7.404366493225098
    10. '            ' → logprob: -7.654366493225098

Token 701: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' (adapté à ' nj') → logprob: -0.8869239091873169
    2. 'if' → logprob: -1.261923909187317
    3. ' =' → logprob: -2.5119237899780273
    4. '=' → logprob: -2.7619237899780273
    5. 'n' → logprob: -3.0119237899780273
    6. ' if' → logprob: -3.5119237899780273
    7. '           ' → logprob: -3.8869237899780273
    8. '<|end|>' → logprob: -4.761923789978027
    9. 'nb' → logprob: -5.136923789978027
    10. 'and' → logprob: -5.386923789978027

Token 702: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22644655406475067
    2. ' =' → logprob: -1.601446509361267
    3. '           ' → logprob: -7.351446628570557
    4. '+' → logprob: -9.226446151733398
    5. '<|end|>' → logprob: -9.601446151733398
    6. ')' → logprob: -9.851446151733398
    7. 'j' → logprob: -10.476446151733398
    8. ' +' → logprob: -10.726446151733398
    9. '=j' → logprob: -10.726446151733398
    10. 'n' → logprob: -11.101446151733398

Token 703: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002533213933929801
    2. ' j' → logprob: -6.502533435821533
    3. '0' → logprob: -7.877533435821533
    4. 'max' → logprob: -8.002532958984375
    5. '1' → logprob: -8.752532958984375
    6. 'min' → logprob: -10.627532958984375
    7. '   ' → logprob: -11.002532958984375
    8. ' max' → logprob: -11.127532958984375
    9. '(j' → logprob: -11.127532958984375
    10. ' ' → logprob: -11.377532958984375

Token 704: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33974689245224
    2. '=' → logprob: -1.9647469520568848
    3. ' =' → logprob: -2.0897469520568848
    4. 'n' → logprob: -5.214746952056885
    5. '<|end|>' → logprob: -5.214746952056885
    6. '
' → logprob: -5.714746952056885
    7. 'if' → logprob: -6.839746952056885
    8. '            
' → logprob: -6.839746952056885
    9. '               ' → logprob: -7.089746952056885
    10. ',' → logprob: -7.089746952056885

Token 705: '           ' (ID: 352)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -1.1074331998825073
    2. 'nk' → logprob: -1.4824331998825073
    3. ' =' → logprob: -1.8574331998825073
    4. '=' → logprob: -2.232433319091797
    5. '           ' → logprob: -2.232433319091797
    6. ' nk' → logprob: -3.232433319091797
    7. ' nm' → logprob: -4.357433319091797
    8. '               ' → logprob: -5.232433319091797
    9. 'for' → logprob: -6.232433319091797
    10. ' and' → logprob: -6.357433319091797

Token 706: ' nm' (ID: 43183)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8354520201683044
    2. 'if' → logprob: -0.9604520201683044
    3. '           ' → logprob: -3.085452079772949
    4. ' for' → logprob: -3.210452079772949
    5. 'nm' (adapté à ' nm') → logprob: -3.460452079772949
    6. 'nx' → logprob: -3.585452079772949
    7. ' if' → logprob: -3.835452079772949
    8. 'mask' → logprob: -6.210452079772949
    9. '               ' → logprob: -6.210452079772949
    10. 'bit' → logprob: -6.460452079772949

Token 707: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6331777572631836
    2. ' =' → logprob: -0.7581777572631836
    3. ',' → logprob: -8.133177757263184
    4. '<|end|>' → logprob: -9.008177757263184
    5. ')' → logprob: -10.008177757263184
    6. 'x' → logprob: -11.008177757263184
    7. '           ' → logprob: -11.133177757263184
    8. ' ' → logprob: -11.133177757263184
    9. 'm' → logprob: -12.258177757263184
    10. '...' → logprob: -12.383177757263184

Token 708: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.017663195729255676
    2. ' m' → logprob: -4.89266300201416
    3. 'max' → logprob: -5.64266300201416
    4. '0' → logprob: -6.01766300201416
    5. '1' → logprob: -6.14266300201416
    6. '(m' → logprob: -7.89266300201416
    7. 'x' → logprob: -8.26766300201416
    8. 'i' → logprob: -8.26766300201416
    9. 'min' → logprob: -8.64266300201416
    10. ' max' → logprob: -8.64266300201416

Token 709: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021453114226460457
    2. '<|end|>' → logprob: -4.021452903747559
    3. 'n' → logprob: -6.896452903747559
    4. '<|end|>' → logprob: -7.896452903747559
    5. '=' → logprob: -8.146452903747559
    6. '
' → logprob: -8.271452903747559
    7. '            ' → logprob: -8.396452903747559
    8. ' =' → logprob: -8.771452903747559
    9. '                           ' → logprob: -8.771452903747559
    10. '          ' → logprob: -9.021452903747559

Token 710: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22209608554840088
    2. '            ' → logprob: -1.8470960855484009
    3. '          ' → logprob: -5.097095966339111
    4. '<|end|>' → logprob: -5.222095966339111
    5. '            
' → logprob: -5.472095966339111
    6. 'if' → logprob: -5.847095966339111
    7. '                            ' → logprob: -6.097095966339111
    8. '               ' → logprob: -6.347095966339111
    9. '                           ' → logprob: -6.472095966339111
    10. '        ' → logprob: -6.472095966339111

Token 711: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23896609246730804
    2. 'if' (adapté à ' if') → logprob: -2.2389659881591797
    3. '           ' → logprob: -3.1139659881591797
    4. 'nx' → logprob: -3.2389659881591797
    5. ' for' → logprob: -4.86396598815918
    6. 'bit' → logprob: -5.11396598815918
    7. '               ' → logprob: -6.23896598815918
    8. ' nx' → logprob: -7.36396598815918
    9. 'nz' → logprob: -7.36396598815918
    10. 'x' → logprob: -7.48896598815918

Token 712: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.801942765712738
    2. ' x' → logprob: -1.3019428253173828
    3. 'i' → logprob: -2.801942825317383
    4. ' i' → logprob: -3.051942825317383
    5. '(x' → logprob: -3.176942825317383
    6. '(i' → logprob: -3.551942825317383
    7. ' (' → logprob: -3.551942825317383
    8. ' ni' → logprob: -3.676942825317383
    9. ' not' → logprob: -4.176942825317383
    10. 'ni' → logprob: -5.301942825317383

Token 713: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0136475563049316
    2. ' <=' → logprob: -1.5136475563049316
    3. ' ==' → logprob: -1.6386475563049316
    4. '<=' → logprob: -1.7636475563049316
    5. '<' → logprob: -4.138647556304932
    6. ' <' → logprob: -4.388647556304932
    7. ':' → logprob: -4.763647556304932
    8. '>' → logprob: -5.763647556304932
    9. ' >' → logprob: -6.263647556304932
    10. '=' → logprob: -6.513647556304932

Token 714: ' y' (ID: 342)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.4746078550815582
    2. 'lb' → logprob: -1.8496078252792358
    3. ' rb' → logprob: -2.8496079444885254
    4. ' lb' → logprob: -3.2246079444885254
    5. '(rb' → logprob: -3.4746079444885254
    6. '(' → logprob: -4.224607944488525
    7. 'ni' → logprob: -4.224607944488525
    8. 'y' → logprob: -4.599607944488525
    9. '(lb' → logprob: -4.599607944488525
    10. '0' → logprob: -4.849607944488525

Token 715: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11882926523685455
    2. ' and' → logprob: -2.4938292503356934
    3. ':
' → logprob: -4.118829250335693
    4. ' or' → logprob: -5.493829250335693
    5. 'and' → logprob: -5.618829250335693
    6. '               ' → logprob: -6.493829250335693
    7. '           ' → logprob: -6.493829250335693
    8. ':return' → logprob: -7.243829250335693
    9. ' continue' → logprob: -7.868829250335693
    10. 'continue' → logprob: -8.118829727172852

Token 716: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03425642102956772
    2. ' continue' → logprob: -3.9092564582824707
    3. 'continue' → logprob: -4.409256458282471
    4. '           ' → logprob: -7.034256458282471
    5. '                   ' → logprob: -9.284255981445312
    6. '                               ' → logprob: -9.784255981445312
    7. '                       ' → logprob: -9.909255981445312
    8. ':
' → logprob: -10.034255981445312
    9. '              ' → logprob: -10.034255981445312
    10. ':' → logprob: -10.284255981445312

Token 717: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.32301661372184753
    2. ' continue' → logprob: -1.32301664352417
    3. '                   ' → logprob: -5.44801664352417
    4. '               ' → logprob: -5.57301664352417
    5. '           ' → logprob: -7.19801664352417
    6. '                       ' → logprob: -7.69801664352417
    7. 'break' → logprob: -8.948016166687012
    8. '	continue' → logprob: -9.323016166687012
    9. '   ' → logprob: -10.073016166687012
    10. '       ' → logprob: -10.698016166687012

Token 718: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034492069389671087
    2. 'if' → logprob: -6.503449440002441
    3. ' if' → logprob: -7.753449440002441
    4. '<|end|>' → logprob: -8.003449440002441
    5. '            
' → logprob: -8.128449440002441
    6. 'ni' → logprob: -8.628449440002441
    7. '
' → logprob: -9.128449440002441
    8. 'n' → logprob: -9.128449440002441
    9. 'token' → logprob: -9.253449440002441
    10. '```' → logprob: -9.878449440002441

Token 719: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040109965950250626
    2. 'dp' → logprob: -4.165110111236572
    3. 'for' → logprob: -4.915110111236572
    4. 'if' → logprob: -4.915110111236572
    5. ' for' → logprob: -5.540110111236572
    6. ' if' → logprob: -6.415110111236572
    7. '               ' → logprob: -7.165110111236572
    8. '<|end|>' → logprob: -7.915110111236572
    9. '            
' → logprob: -8.165109634399414
    10. ' dp' → logprob: -8.290109634399414

Token 720: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.075190544128418
    2. ' if' → logprob: -1.075190544128418
    3. 'if' → logprob: -1.575190544128418
    4. ' for' → logprob: -2.950190544128418
    5. 'dp' → logprob: -3.950190544128418
    6. 'for' → logprob: -4.450190544128418
    7. 'continue' → logprob: -5.200190544128418
    8. ' dp' → logprob: -5.700190544128418
    9. 'n' → logprob: -6.325190544128418
    10. ' ni' → logprob: -6.450190544128418

Token 721: ' L' (ID: 451)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1204403638839722
    2. 'if' → logprob: -1.6204403638839722
    3. ' for' → logprob: -1.8704403638839722
    4. ' if' → logprob: -1.9954403638839722
    5. 'for' → logprob: -2.3704404830932617
    6. 'dp' → logprob: -3.1204404830932617
    7. ' ni' → logprob: -4.745440483093262
    8. ' dp' → logprob: -4.745440483093262
    9. 'ni' → logprob: -5.120440483093262
    10. 'next' → logprob: -6.245440483093262

Token 722: ' <=' (ID: 5017)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7651295065879822
    2. '           ' → logprob: -1.515129566192627
    3. ' =' → logprob: -2.640129566192627
    4. 'b' → logprob: -2.890129566192627
    5. ' if' → logprob: -3.640129566192627
    6. '=' → logprob: -3.765129566192627
    7. ',' → logprob: -3.765129566192627
    8. '       ' → logprob: -4.390129566192627
    9. '<=' → logprob: -4.515129566192627
    10. ' <=' → logprob: -5.015129566192627

Token 723: ' X' (ID: 2127)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1323877573013306
    2. 'ni' → logprob: -1.5073877573013306
    3. ' ni' → logprob: -2.007387638092041
    4. ' (' → logprob: -2.382387638092041
    5. '(x' → logprob: -2.507387638092041
    6. '(' → logprob: -2.632387638092041
    7. ' x' → logprob: -3.257387638092041
    8. '(n' → logprob: -4.757387638092041
    9. '           ' → logprob: -5.132387638092041
    10. '(i' → logprob: -5.507387638092041

Token 724: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7730087637901306
    2. '           ' → logprob: -1.3980088233947754
    3. 'and' → logprob: -2.0230088233947754
    4. '       ' → logprob: -2.2730088233947754
    5. 'if' → logprob: -3.7730088233947754
    6. ' if' → logprob: -4.023008823394775
    7. '<|end|>' → logprob: -5.148008823394775
    8. ',' → logprob: -6.148008823394775
    9. '...' → logprob: -6.648008823394775
    10. ' or' → logprob: -7.023008823394775

Token 725: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003609339939430356
    2. 'if' → logprob: -7.5036091804504395
    3. ' if' → logprob: -7.5036091804504395
    4. ' and' → logprob: -7.7536091804504395
    5. ' for' → logprob: -8.003609657287598
    6. '<|end|>' → logprob: -8.003609657287598
    7. '               ' → logprob: -8.378609657287598
    8. 'for' → logprob: -8.503609657287598
    9. '          ' → logprob: -8.628609657287598
    10. '            
' → logprob: -9.003609657287598

Token 726: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7460289001464844
    2. ' if' → logprob: -0.9960289001464844
    3. '           ' → logprob: -1.8710289001464844
    4. 'continue' → logprob: -7.371028900146484
    5. '```' → logprob: -7.746028900146484
    6. 'token' → logprob: -8.621028900146484
    7. ' continue' → logprob: -8.621028900146484
    8. ' ni' → logprob: -9.121028900146484
    9. 'n' → logprob: -9.246028900146484
    10. 'next' → logprob: -9.371028900146484

Token 727: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07606159895658493
    2. ' i' → logprob: -2.826061487197876
    3. 'x' → logprob: -5.451061725616455
    4. 'not' → logprob: -5.701061725616455
    5. '(i' → logprob: -6.076061725616455
    6. ' not' → logprob: -6.201061725616455
    7. '(not' → logprob: -7.701061725616455
    8. ' (' → logprob: -7.826061725616455
    9. ' x' → logprob: -8.201061248779297
    10. '(x' → logprob: -8.451061248779297

Token 728: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7144386172294617
    2. '==' → logprob: -0.8394386172294617
    3. ' and' → logprob: -2.8394386768341064
    4. 'and' → logprob: -3.9644386768341064
    5. ':' → logprob: -8.339438438415527
    6. '0' → logprob: -8.714438438415527
    7. ':
' → logprob: -8.714438438415527
    8. '=' → logprob: -8.839438438415527
    9. ']==' → logprob: -8.964438438415527
    10. '           ' → logprob: -10.089438438415527

Token 729: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6329801678657532
    2. '1' → logprob: -0.7579801678657532
    3. ' ' → logprob: -7.8829803466796875
    4. '   ' → logprob: -13.382980346679688
    5. '(' → logprob: -14.007980346679688
    6. '           ' → logprob: -15.257980346679688
    7. '```' → logprob: -16.007980346679688
    8. '  ' → logprob: -16.070480346679688
    9. 'and' → logprob: -16.445480346679688
    10. '    ' → logprob: -16.507980346679688

Token 730: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28117769956588745
    2. '1' → logprob: -1.4061777591705322
    3. ' ' → logprob: -10.531177520751953
    4. '   ' → logprob: -15.281177520751953
    5. '(' → logprob: -16.156177520751953
    6. '
' → logprob: -16.343677520751953
    7. '```' → logprob: -16.906177520751953
    8. '=' → logprob: -17.218677520751953
    9. '  ' → logprob: -17.343677520751953
    10. '           ' → logprob: -17.531177520751953

Token 731: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5234681367874146
    2. ' and' → logprob: -0.8984681367874146
    3. ':
' → logprob: -8.398468017578125
    4. '           ' → logprob: -9.523468017578125
    5. ':' → logprob: -10.398468017578125
    6. '               ' → logprob: -12.648468017578125
    7. '   ' → logprob: -12.898468017578125
    8. '	and' → logprob: -13.273468017578125
    9. '       ' → logprob: -13.398468017578125
    10. '          ' → logprob: -13.898468017578125

Token 732: ' lb' (ID: 32474)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04981471598148346
    2. '(x' → logprob: -3.5498147010803223
    3. ' x' → logprob: -4.674814701080322
    4. '((' → logprob: -4.674814701080322
    5. ' (' → logprob: -7.549814701080322
    6. ' ((' → logprob: -8.54981517791748
    7. '(' → logprob: -8.92481517791748
    8. '   ' → logprob: -9.17481517791748
    9. '(((' → logprob: -9.54981517791748
    10. '(not' → logprob: -10.17481517791748

Token 733: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06654884666204453
    2. ' ==' → logprob: -3.3165488243103027
    3. ' and' → logprob: -4.316548824310303
    4. '>' → logprob: -4.816548824310303
    5. 'and' → logprob: -5.066548824310303
    6. ' >' → logprob: -8.816549301147461
    7. ':' → logprob: -9.441549301147461
    8. '>x' → logprob: -10.441549301147461
    9. 'x' → logprob: -10.566549301147461
    10. '===' → logprob: -11.316549301147461

Token 734: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.030161647126078606
    2. '0' → logprob: -3.6551616191864014
    3. '1' → logprob: -6.6551618576049805
    4. ' x' → logprob: -6.6551618576049805
    5. 'y' → logprob: -6.9051618576049805
    6. 'j' → logprob: -9.53016185760498
    7. ' ' → logprob: -9.65516185760498
    8. '=' → logprob: -10.03016185760498
    9. '(' → logprob: -10.78016185760498
    10. '   ' → logprob: -11.15516185760498

Token 735: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3543665111064911
    2. ':
' → logprob: -1.2293665409088135
    3. '           ' → logprob: -6.229366302490234
    4. ' or' → logprob: -6.854366302490234
    5. '               ' → logprob: -6.854366302490234
    6. ' and' → logprob: -6.854366302490234
    7. 'and' → logprob: -8.104366302490234
    8. 'continue' → logprob: -8.729366302490234
    9. ':return' → logprob: -9.604366302490234
    10. '       ' → logprob: -9.729366302490234

Token 736: '               ' (ID: 506)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.48108240962028503
    2. '               ' → logprob: -0.9810824394226074
    3. ' continue' → logprob: -5.106082439422607
    4. '           ' → logprob: -7.356082439422607
    5. '                   ' → logprob: -9.60608196258545
    6. '   ' → logprob: -9.73108196258545
    7. '	continue' → logprob: -9.85608196258545
    8. '```' → logprob: -9.85608196258545
    9. 'break' → logprob: -10.73108196258545
    10. ' ' → logprob: -11.85608196258545

Token 737: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.022713642567396164
    2. ' continue' → logprob: -4.272713661193848
    3. '               ' → logprob: -5.022713661193848
    4. '                   ' → logprob: -6.272713661193848
    5. '           ' → logprob: -10.897713661193848
    6. '                       ' → logprob: -11.397713661193848
    7. '   ' → logprob: -12.397713661193848
    8. '	continue' → logprob: -12.397713661193848
    9. ' ' → logprob: -14.272713661193848
    10. 'break' → logprob: -14.772713661193848

Token 738: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018899753922596574
    2. '<|end|>' → logprob: -9.000188827514648
    3. 'n' → logprob: -11.250188827514648
    4. '		' → logprob: -11.375188827514648
    5. '<|end|>' → logprob: -11.375188827514648
    6. '          ' → logprob: -12.000188827514648
    7. '```' → logprob: -12.500188827514648
    8. 'continue' → logprob: -12.750188827514648
    9. '            
' → logprob: -13.000188827514648
    10. '               ' → logprob: -13.375188827514648

Token 739: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.076218025758862e-05
    2. '<|end|>' → logprob: -10.000070571899414
    3. '```' → logprob: -11.625070571899414
    4. 'if' → logprob: -12.250070571899414
    5. '<|end|>' → logprob: -13.000070571899414
    6. 'n' → logprob: -13.125070571899414
    7. 's' → logprob: -13.875070571899414
    8. '          ' → logprob: -14.000070571899414
    9. '            
' → logprob: -14.000070571899414
    10. '               ' → logprob: -14.125070571899414

Token 740: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038381461054086685
    2. 'if' (adapté à ' if') → logprob: -3.288381576538086
    3. 'ni' → logprob: -9.538381576538086
    4. 'n' → logprob: -9.663381576538086
    5. ' if' → logprob: -9.788381576538086
    6. '            
' → logprob: -10.538381576538086
    7. 'new' → logprob: -10.788381576538086
    8. '          ' → logprob: -11.288381576538086
    9. '#' → logprob: -11.413381576538086
    10. '```' → logprob: -11.413381576538086

Token 741: ' lb' (ID: 32474)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.29095524549484253
    2. 'i' → logprob: -1.4159553050994873
    3. ' j' → logprob: -5.540955066680908
    4. '   ' → logprob: -6.165955066680908
    5. ' i' → logprob: -6.290955066680908
    6. '(i' → logprob: -7.915955066680908
    7. '(j' → logprob: -8.165955543518066
    8. '           ' → logprob: -8.415955543518066
    9. 'not' → logprob: -8.665955543518066
    10. '       ' → logprob: -9.165955543518066

Token 742: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.276399701833725
    2. ' ==' → logprob: -1.9013997316360474
    3. '==' → logprob: -2.776399612426758
    4. '>' → logprob: -3.526399612426758
    5. '           ' → logprob: -8.526399612426758
    6. '[' → logprob: -10.151399612426758
    7. '               ' → logprob: -10.401399612426758
    8. ' ' → logprob: -10.651399612426758
    9. '   ' → logprob: -10.651399612426758
    10. '=' → logprob: -10.901399612426758

Token 743: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04872111976146698
    2. ' x' → logprob: -3.0487210750579834
    3. '=' → logprob: -9.298721313476562
    4. '1' → logprob: -11.673721313476562
    5. 'i' → logprob: -12.173721313476562
    6. '0' → logprob: -12.173721313476562
    7. '=x' → logprob: -12.298721313476562
    8. '   ' → logprob: -12.673721313476562
    9. ' ' → logprob: -12.798721313476562
    10. '	x' → logprob: -12.798721313476562

Token 744: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8405044078826904
    2. ':' → logprob: -1.2155044078826904
    3. '               ' → logprob: -1.4655044078826904
    4. ' and' → logprob: -3.8405044078826904
    5. '           ' → logprob: -4.8405046463012695
    6. 'continue' → logprob: -5.2155046463012695
    7. ' continue' → logprob: -5.7155046463012695
    8. 'and' → logprob: -6.2155046463012695
    9. '):
' → logprob: -7.9655046463012695
    10. '```' → logprob: -9.59050464630127

Token 745: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020387720316648483
    2. 'continue' → logprob: -4.770387649536133
    3. 'ni' → logprob: -4.770387649536133
    4. '           ' → logprob: -6.520387649536133
    5. ' continue' → logprob: -7.020387649536133
    6. ' ni' → logprob: -8.020387649536133
    7. '                   ' → logprob: -8.770387649536133
    8. '   ' → logprob: -9.395387649536133
    9. '       ' → logprob: -10.270387649536133
    10. 'n' → logprob: -10.270387649536133

Token 746: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' (adapté à ' ni') → logprob: -0.12689608335494995
    2. '           ' → logprob: -2.2518961429595947
    3. ' ni' → logprob: -5.126895904541016
    4. '               ' → logprob: -5.626895904541016
    5. 'nm' → logprob: -6.501895904541016
    6. '                   ' → logprob: -7.251895904541016
    7. 'nj' → logprob: -7.251895904541016
    8. '   ' → logprob: -7.376895904541016
    9. 'i' → logprob: -8.251895904541016
    10. 'continue' → logprob: -8.376895904541016

Token 747: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. '+=' → logprob: -18.754077911376953
    4. '<|end|>' → logprob: -19.254077911376953
    5. ',' → logprob: -19.379077911376953
    6. '=True' → logprob: -19.629077911376953
    7. '.=' → logprob: -20.254077911376953
    8. '1' → logprob: -20.254077911376953
    9. '＝' → logprob: -20.379077911376953
    10. '```' → logprob: -20.504077911376953

Token 748: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.5
    3. ' ' → logprob: -16.0
    4. '  ' → logprob: -21.0
    5. '           ' → logprob: -21.5
    6. '```' → logprob: -21.5
    7. '۱' → logprob: -22.125
    8. '       ' → logprob: -22.125
    9. '    ' → logprob: -22.75
    10. '১' → logprob: -23.0

Token 749: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '   ' → logprob: -17.25
    4. 'True' → logprob: -20.25
    5. '           ' → logprob: -21.625
    6. '0' → logprob: -21.875
    7. '۱' → logprob: -21.875
    8. '  ' → logprob: -22.0
    9. '```' → logprob: -22.0
    10. '       ' → logprob: -22.5

Token 750: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006338030099868774
    2. '<|end|>' → logprob: -5.881338119506836
    3. '               ' → logprob: -6.631338119506836
    4. '       ' → logprob: -7.006338119506836
    5. '          ' → logprob: -7.256338119506836
    6. ')' → logprob: -9.756338119506836
    7. '
' → logprob: -9.881338119506836
    8. '         ' → logprob: -9.881338119506836
    9. 'if' → logprob: -10.006338119506836
    10. '        ' → logprob: -10.131338119506836

Token 751: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008410908281803131
    2. '       ' → logprob: -5.508410930633545
    3. '               ' → logprob: -6.008410930633545
    4. '<|end|>' → logprob: -6.758410930633545
    5. '
' → logprob: -8.008410453796387
    6. '          ' → logprob: -8.633410453796387
    7. '            
' → logprob: -10.508410453796387
    8. 'if' → logprob: -10.633410453796387
    9. '                   ' → logprob: -11.133410453796387
    10. '#' → logprob: -11.133410453796387

Token 752: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049259621649980545
    2. 'if' → logprob: -3.049259662628174
    3. ' if' → logprob: -7.924259662628174
    4. '            
' → logprob: -9.424259185791016
    5. '               ' → logprob: -9.799259185791016
    6. '          ' → logprob: -10.174259185791016
    7. '       ' → logprob: -10.424259185791016
    8. '```' → logprob: -11.049259185791016
    9. '         ' → logprob: -11.174259185791016
    10. '            ' → logprob: -11.299259185791016

Token 753: ' Y' (ID: 865)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009031229419633746
    2. '           ' → logprob: -7.125903129577637
    3. ' if' → logprob: -9.375903129577637
    4. '```' → logprob: -11.875903129577637
    5. '               ' → logprob: -13.000903129577637
    6. 'nj' → logprob: -13.750903129577637
    7. '       ' → logprob: -14.000903129577637
    8. '            
' → logprob: -14.500903129577637
    9. '   ' → logprob: -14.625903129577637
    10. 'ny' → logprob: -15.125903129577637

Token 754: ' <=' (ID: 5017)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.1068943738937378
    2. '==' → logprob: -1.4818943738937378
    3. '>' → logprob: -1.7318943738937378
    4. '           ' → logprob: -2.1068944931030273
    5. ' >' → logprob: -2.4818944931030273
    6. '=' → logprob: -3.9818944931030273
    7. 'if' → logprob: -4.106894493103027
    8. ' =' → logprob: -4.481894493103027
    9. ' if' → logprob: -4.731894493103027
    10. ' <' → logprob: -6.356894493103027

Token 755: ' R' (ID: 460)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00712239183485508
    2. 'j' → logprob: -5.50712251663208
    3. ' y' → logprob: -6.00712251663208
    4. 'rb' → logprob: -8.007122039794922
    5. '   ' → logprob: -9.007122039794922
    6. 'x' → logprob: -10.382122039794922
    7. ' rb' → logprob: -11.382122039794922
    8. '    ' → logprob: -11.507122039794922
    9. 'yj' → logprob: -11.507122039794922
    10. '(y' → logprob: -12.007122039794922

Token 756: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026636749505996704
    2. 'if' → logprob: -3.651636838912964
    3. ' if' → logprob: -8.151637077331543
    4. '               ' → logprob: -10.151637077331543
    5. '       ' → logprob: -12.651637077331543
    6. '          ' → logprob: -13.401637077331543
    7. '```' → logprob: -13.401637077331543
    8. '   ' → logprob: -13.526637077331543
    9. '                   ' → logprob: -15.276637077331543
    10. 'elif' → logprob: -15.401637077331543

Token 757: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010105705820024014
    2. 'if' → logprob: -4.635105609893799
    3. ' if' → logprob: -8.385106086730957
    4. '               ' → logprob: -9.510106086730957
    5. '       ' → logprob: -10.135106086730957
    6. '   ' → logprob: -12.635106086730957
    7. '```' → logprob: -12.885106086730957
    8. '          ' → logprob: -13.885106086730957
    9. '                   ' → logprob: -15.385106086730957
    10. '﻿' → logprob: -16.13510513305664

Token 758: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0791081115603447
    2. '           ' → logprob: -2.5791079998016357
    3. ' if' → logprob: -8.454108238220215
    4. '               ' → logprob: -13.454108238220215
    5. '```' → logprob: -13.829108238220215
    6. '          ' → logprob: -13.954108238220215
    7. '       ' → logprob: -14.204108238220215
    8. '   ' → logprob: -14.204108238220215
    9. 'elif' → logprob: -15.829108238220215
    10. '            
' → logprob: -16.0791072845459

Token 759: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01335585955530405
    2. ' j' → logprob: -4.388355731964111
    3. '(j' → logprob: -7.388355731964111
    4. '   ' → logprob: -9.13835620880127
    5. 'y' → logprob: -11.26335620880127
    6. ' (' → logprob: -11.38835620880127
    7. 'm' → logprob: -11.51335620880127
    8. 'x' → logprob: -11.51335620880127
    9. 'nj' → logprob: -11.51335620880127
    10. '(' → logprob: -12.26335620880127

Token 760: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25193214416503906
    2. '==' → logprob: -1.501932144165039
    3. ' ' → logprob: -14.126932144165039
    4. '=' → logprob: -14.876932144165039
    5. '==
' → logprob: -15.251932144165039
    6. '           ' → logprob: -15.376932144165039
    7. ']==' → logprob: -15.501932144165039
    8. ' !=' → logprob: -15.626932144165039
    9. '   ' → logprob: -15.876932144165039
    10. '0' → logprob: -16.50193214416504

Token 761: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011069540778407827
    2. '1' → logprob: -9.500110626220703
    3. ' ' → logprob: -10.250110626220703
    4. '   ' → logprob: -15.250110626220703
    5. '=' → logprob: -17.062610626220703
    6. '```' → logprob: -17.187610626220703
    7. 'j' → logprob: -17.562610626220703
    8. '  ' → logprob: -17.875110626220703
    9. '۰' → logprob: -18.062610626220703
    10. '(' → logprob: -18.062610626220703

Token 762: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000511091377120465
    2. '1' → logprob: -7.625511169433594
    3. ' ' → logprob: -10.750511169433594
    4. 'j' → logprob: -14.125511169433594
    5. '   ' → logprob: -14.875511169433594
    6. '
' → logprob: -16.375511169433594
    7. '  ' → logprob: -17.063011169433594
    8. '```' → logprob: -17.188011169433594
    9. '۰' → logprob: -17.625511169433594
    10. '       ' → logprob: -17.688011169433594

Token 763: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16023245453834534
    2. 'and' → logprob: -1.910232424736023
    3. '           ' → logprob: -12.160232543945312
    4. '               ' → logprob: -13.035232543945312
    5. '   ' → logprob: -15.535232543945312
    6. ' и' → logprob: -16.285232543945312
    7. '```' → logprob: -16.285232543945312
    8. ' ' → logprob: -16.660232543945312
    9. '            ' → logprob: -16.910232543945312
    10. '                   ' → logprob: -16.910232543945312

Token 764: ' y' (ID: 342)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.11325296759605408
    2. 'y' → logprob: -2.363252878189087
    3. ' y' → logprob: -5.238253116607666
    4. ' rb' → logprob: -5.363253116607666
    5. 'yb' → logprob: -6.113253116607666
    6. '(rb' → logprob: -7.363253116607666
    7. '(y' → logprob: -9.363252639770508
    8. 'x' → logprob: -11.488252639770508
    9. 'ry' → logprob: -11.613252639770508
    10. '(' → logprob: -12.363252639770508

Token 765: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3147304952144623
    2. '>' → logprob: -1.3147305250167847
    3. ' <' → logprob: -6.689730644226074
    4. '<' → logprob: -8.439730644226074
    5. ' ' → logprob: -12.439730644226074
    6. '>x' → logprob: -13.939730644226074
    7. '   ' → logprob: -14.314730644226074
    8. ':' → logprob: -14.689730644226074
    9. ' ' → logprob: -15.189730644226074
    10. ')' → logprob: -15.439730644226074

Token 766: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -1.8550976164988242e-05
    2. ' rb' → logprob: -11.000018119812012
    3. '(rb' → logprob: -13.250018119812012
    4. '_rb' → logprob: -20.000019073486328
    5. '.rb' → logprob: -20.375019073486328
    6. ' ' → logprob: -20.750019073486328
    7. 'jb' → logprob: -21.500019073486328
    8. '   ' → logprob: -21.625019073486328
    9. 'r' → logprob: -22.000019073486328
    10. 'Rb' → logprob: -22.125019073486328

Token 767: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6994746327400208
    2. ':
' → logprob: -0.6994746327400208
    3. ':' → logprob: -5.449474811553955
    4. '           ' → logprob: -6.949474811553955
    5. 'nj' → logprob: -7.199474811553955
    6. ' nj' → logprob: -9.324474334716797
    7. '):
' → logprob: -9.449474334716797
    8. '                   ' → logprob: -9.699474334716797
    9. '              ' → logprob: -11.199474334716797
    10. '                ' → logprob: -11.574474334716797

Token 768: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28173360228538513
    2. 'nj' → logprob: -1.4067336320877075
    3. ' nj' → logprob: -8.281733512878418
    4. '           ' → logprob: -9.281733512878418
    5. 'continue' → logprob: -9.281733512878418
    6. '                   ' → logprob: -9.281733512878418
    7. '```' → logprob: -11.031733512878418
    8. '              ' → logprob: -11.906733512878418
    9. 'j' → logprob: -12.156733512878418
    10. '                ' → logprob: -12.281733512878418

Token 769: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.008237358182668686
    2. '               ' → logprob: -5.008237361907959
    3. ' continue' → logprob: -6.508237361907959
    4. '           ' → logprob: -10.7582368850708
    5. '	continue' → logprob: -12.3832368850708
    6. '                   ' → logprob: -13.6332368850708
    7. '   ' → logprob: -13.7582368850708
    8. '```' → logprob: -13.8832368850708
    9. '
' → logprob: -15.1332368850708
    10. 'continu' → logprob: -15.7582368850708

Token 770: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027154546231031418
    2. 'nj' → logprob: -3.7771544456481934
    3. '               ' → logprob: -5.652154445648193
    4. 'if' → logprob: -8.652154922485352
    5. '                   ' → logprob: -9.027154922485352
    6. '            ' → logprob: -10.527154922485352
    7. '
' → logprob: -11.152154922485352
    8. 'n' → logprob: -11.527154922485352
    9. '          ' → logprob: -11.527154922485352
    10. '                       ' → logprob: -11.777154922485352

Token 771: '           ' (ID: 352)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.038201235234737396
    2. '           ' → logprob: -3.288201332092285
    3. 'if' → logprob: -9.038201332092285
    4. '               ' → logprob: -10.413201332092285
    5. 'n' → logprob: -12.538201332092285
    6. ' nj' → logprob: -13.163201332092285
    7. '                   ' → logprob: -13.413201332092285
    8. '```' → logprob: -13.788201332092285
    9. '            ' → logprob: -14.038201332092285
    10. 'ny' → logprob: -14.913201332092285

Token 772: ' if' (ID: 538)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.002066637622192502
    2. 'if' (adapté à ' if') → logprob: -6.502066612243652
    3. '           ' → logprob: -7.502066612243652
    4. '       ' → logprob: -12.502066612243652
    5. '               ' → logprob: -12.752066612243652
    6. '   ' → logprob: -13.127066612243652
    7. 'n' → logprob: -13.627066612243652
    8. ' nj' → logprob: -14.377066612243652
    9. '                   ' → logprob: -14.502066612243652
    10. '```' → logprob: -14.752066612243652

Token 773: ' y' (ID: 342)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.0025253647472709417
    2. '   ' → logprob: -7.127525329589844
    3. ' nj' → logprob: -7.127525329589844
    4. 'yj' → logprob: -7.252525329589844
    5. 'j' → logprob: -9.752525329589844
    6. '    ' → logprob: -10.127525329589844
    7. '       ' → logprob: -10.127525329589844
    8. '           ' → logprob: -10.877525329589844
    9. ' y' → logprob: -11.502525329589844
    10. 'y' → logprob: -11.627525329589844

Token 774: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04070565477013588
    2. '<' → logprob: -3.540705680847168
    3. ' ==' → logprob: -4.665705680847168
    4. '==' → logprob: -6.665705680847168
    5. ' >' → logprob: -9.915705680847168
    6. '>' → logprob: -10.665705680847168
    7. '   ' → logprob: -10.665705680847168
    8. 'j' → logprob: -10.790705680847168
    9. ' ' → logprob: -11.040705680847168
    10. '=' → logprob: -11.040705680847168

Token 775: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.0026214318349957466
    2. 'jb' → logprob: -6.752621650695801
    3. 'j' → logprob: -7.002621650695801
    4. ' rb' → logprob: -7.877621650695801
    5. 'r' → logprob: -9.1276216506958
    6. 'nj' → logprob: -10.5026216506958
    7. '(rb' → logprob: -11.5026216506958
    8. '1' → logprob: -12.1276216506958
    9. '   ' → logprob: -12.3776216506958
    10. 'bj' → logprob: -13.1276216506958

Token 776: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04105571284890175
    2. ':' → logprob: -3.916055679321289
    3. '               ' → logprob: -3.916055679321289
    4. '           ' → logprob: -8.416055679321289
    5. '):
' → logprob: -9.541055679321289
    6. ':j' → logprob: -10.291055679321289
    7. '                   ' → logprob: -11.416055679321289
    8. '=' → logprob: -11.791055679321289
    9. '              ' → logprob: -11.916055679321289
    10. ':
' → logprob: -12.041055679321289

Token 777: '               ' (ID: 506)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.005122869275510311
    2. '           ' → logprob: -5.630122661590576
    3. '               ' → logprob: -6.630122661590576
    4. ' nj' → logprob: -8.630123138427734
    5. '                   ' → logprob: -11.005123138427734
    6. '            ' → logprob: -13.130123138427734
    7. '```' → logprob: -14.630123138427734
    8. 'Nj' → logprob: -14.755123138427734
    9. ',' → logprob: -15.005123138427734
    10. 'n' → logprob: -15.380123138427734

Token 778: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' (adapté à ' nj') → logprob: -5.8961017202818766e-05
    2. ' nj' → logprob: -9.750059127807617
    3. 'n' → logprob: -15.125059127807617
    4. '   ' → logprob: -15.250059127807617
    5. '           ' → logprob: -16.625059127807617
    6. '       ' → logprob: -17.625059127807617
    7. '                   ' → logprob: -18.000059127807617
    8. '```' → logprob: -18.125059127807617
    9. '
' → logprob: -18.250059127807617
    10. '               ' → logprob: -18.250059127807617

Token 779: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. '           ' → logprob: -19.004077911376953
    4. '```' → logprob: -19.379077911376953
    5. '=
' → logprob: -20.129077911376953
    6. '+=' → logprob: -20.504077911376953
    7. '<|end|>' → logprob: -20.504077911376953
    8. ')' → logprob: -20.629077911376953
    9. ' ' → logprob: -20.629077911376953
    10. '=True' → logprob: -20.629077911376953

Token 780: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -20.625
    4. '           ' → logprob: -21.875
    5. '```' → logprob: -22.125
    6. 'j' → logprob: -23.25
    7. '۱' → logprob: -23.25
    8. '0' → logprob: -23.25
    9. '(' → logprob: -23.75
    10. '１' → logprob: -24.0625

Token 781: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -20.0
    4. '           ' → logprob: -21.25
    5. '<|end|>' → logprob: -21.875
    6. '```' → logprob: -22.0
    7. '0' → logprob: -22.125
    8. '       ' → logprob: -22.875
    9. '  ' → logprob: -22.875
    10. '(' → logprob: -23.125

Token 782: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0071754250675439835
    2. 'nm' → logprob: -5.007175445556641
    3. '```' → logprob: -9.25717544555664
    4. '               ' → logprob: -9.38217544555664
    5. '<|end|>' → logprob: -9.50717544555664
    6. 'n' → logprob: -9.88217544555664
    7. '
' → logprob: -10.50717544555664
    8. ' nm' → logprob: -10.63217544555664
    9. '          ' → logprob: -11.00717544555664
    10. '   ' → logprob: -11.25717544555664

Token 783: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01815052703022957
    2. 'if' → logprob: -4.268150329589844
    3. 'nm' → logprob: -5.643150329589844
    4. ' if' → logprob: -8.643150329589844
    5. 'm' → logprob: -10.143150329589844
    6. '#' → logprob: -10.143150329589844
    7. '```' → logprob: -10.143150329589844
    8. 'n' → logprob: -10.393150329589844
    9. '   ' → logprob: -10.643150329589844
    10. '               ' → logprob: -11.018150329589844

Token 784: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6124821901321411
    2. '           ' → logprob: -0.8624821901321411
    3. 'nm' → logprob: -3.4874820709228516
    4. 'nz' → logprob: -6.112482070922852
    5. '```' → logprob: -7.112482070922852
    6. ' if' → logprob: -7.612482070922852
    7. 'for' → logprob: -7.612482070922852
    8. 'n' → logprob: -7.987482070922852
    9. 'nx' → logprob: -8.112482070922852
    10. '#' (adapté à ' #') → logprob: -8.362482070922852

Token 785: ' m' (ID: 284)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017048709094524384
    2. '           ' → logprob: -4.3920488357543945
    3. '#' → logprob: -5.8920488357543945
    4. 'nm' → logprob: -6.7670488357543945
    5. '```' → logprob: -9.017048835754395
    6. ' if' → logprob: -9.267048835754395
    7. '       ' → logprob: -9.767048835754395
    8. '   ' → logprob: -9.892048835754395
    9. 'continue' → logprob: -9.892048835754395
    10. 'nx' → logprob: -10.142048835754395

Token 786: ' ==' (ID: 951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6986820697784424
    2. '|' → logprob: -1.0736820697784424
    3. 'if' → logprob: -2.1986820697784424
    4. '+=' → logprob: -4.198681831359863
    5. '^' → logprob: -4.323681831359863
    6. ' ^=' → logprob: -5.073681831359863
    7. ' |=' → logprob: -5.323681831359863
    8. ' =' → logprob: -5.573681831359863
    9. 'and' → logprob: -6.448681831359863
    10. '           ' → logprob: -6.698681831359863

Token 787: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5258384346961975
    2. '1' → logprob: -1.5258383750915527
    3. '0' → logprob: -1.9008383750915527
    4. '(m' → logprob: -3.7758383750915527
    5. ' m' → logprob: -5.025838375091553
    6. ' ' → logprob: -5.275838375091553
    7. 'nm' → logprob: -5.775838375091553
    8. '(' → logprob: -6.150838375091553
    9. ' (' → logprob: -7.400838375091553
    10. 'int' → logprob: -7.900838375091553

Token 788: '0' (ID: 15)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5576401352882385
    2. '1' → logprob: -1.1826400756835938
    3. '0' → logprob: -3.0576400756835938
    4. 'nm' → logprob: -3.1826400756835938
    5. '(m' → logprob: -3.8076400756835938
    6. '(' → logprob: -5.807640075683594
    7. 'x' → logprob: -6.182640075683594
    8. ' m' → logprob: -6.807640075683594
    9. '(x' → logprob: -6.807640075683594
    10. '(n' → logprob: -6.932640075683594

Token 789: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48642995953559875
    2. 'if' → logprob: -1.4864299297332764
    3. ' if' → logprob: -1.8614299297332764
    4. ' and' → logprob: -6.8614301681518555
    5. '       ' → logprob: -7.3614301681518555
    6. 'and' → logprob: -7.7364301681518555
    7. '=' → logprob: -8.486430168151855
    8. '```' → logprob: -8.486430168151855
    9. '<|end|>' → logprob: -8.736430168151855
    10. '               ' → logprob: -8.736430168151855

Token 790: ' X' (ID: 2127)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3405296802520752
    2. 'nm' → logprob: -1.3405296802520752
    3. '           ' → logprob: -4.215529441833496
    4. ' if' → logprob: -4.715529441833496
    5. ' nm' → logprob: -7.090529441833496
    6. 'continue' → logprob: -7.465529441833496
    7. '```' → logprob: -8.215529441833496
    8. 'n' → logprob: -8.340529441833496
    9. '               ' → logprob: -9.090529441833496
    10. '0' → logprob: -9.090529441833496

Token 791: ' ==' (ID: 951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0222811698913574
    2. '==' → logprob: -1.3972811698913574
    3. '|' → logprob: -1.8972811698913574
    4. '&' → logprob: -2.3972811698913574
    5. ' =' → logprob: -3.3972811698913574
    6. 'if' → logprob: -4.022281169891357
    7. 'and' → logprob: -4.272281169891357
    8. ' ==' → logprob: -4.272281169891357
    9. '<=' → logprob: -4.397281169891357
    10. '<|end|>' → logprob: -4.772281169891357

Token 792: ' Y' (ID: 865)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4952831268310547
    2. 'Y' → logprob: -0.9952831268310547
    3. '0' → logprob: -3.9952831268310547
    4. ' y' → logprob: -7.245283126831055
    5. '(' → logprob: -7.370283126831055
    6. 'x' → logprob: -7.995283126831055
    7. ' Y' → logprob: -8.370283126831055
    8. ' ' → logprob: -8.870283126831055
    9. '   ' → logprob: -9.932783126831055
    10. '000' → logprob: -9.995283126831055

Token 793: ' jusque' (ID: 188953)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001783594605512917
    2. 'if' → logprob: -7.00178337097168
    3. '<|end|>' → logprob: -7.75178337097168
    4. ' if' → logprob: -8.50178337097168
    5. ',' → logprob: -9.12678337097168
    6. '<|end|>' → logprob: -9.87678337097168
    7. '```' → logprob: -10.50178337097168
    8. '...' → logprob: -11.50178337097168
    9. '               ' → logprob: -11.75178337097168
    10. '          ' → logprob: -12.50178337097168

Token 794: ' là' (ID: 8052)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4694903790950775
    2. 'd' → logprob: -1.2194904088974
    3. '-là' → logprob: -3.3444902896881104
    4. 'au' → logprob: -4.0944905281066895
    5. 'ici' → logprob: -5.0944905281066895
    6. 'à' → logprob: -5.0944905281066895
    7. ''à' → logprob: -5.7194905281066895
    8. ' là' → logprob: -5.9694905281066895
    9. ''ici' → logprob: -5.9694905281066895
    10. ' ici' → logprob: -6.0944905281066895

Token 795: ' !
' (ID: 27498)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006489885039627552
    2. 'if' → logprob: -5.2564897537231445
    3. ' if' → logprob: -7.2564897537231445
    4. '<|end|>' → logprob: -8.256489753723145
    5. '```' → logprob: -9.006489753723145
    6. ',' → logprob: -10.006489753723145
    7. '<|end|>' → logprob: -10.131489753723145
    8. '   ' → logprob: -11.131489753723145
    9. '...' → logprob: -11.506489753723145
    10. 'continue' → logprob: -11.506489753723145

Token 796: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.052838053554296494
    2. 'if' → logprob: -3.052838087081909
    3. ' if' → logprob: -5.67783784866333
    4. '<|end|>' → logprob: -8.177838325500488
    5. '```' → logprob: -8.302838325500488
    6. 'nm' → logprob: -8.927838325500488
    7. '<|end|>' → logprob: -9.927838325500488
    8. '               ' → logprob: -10.552838325500488
    9. '            
' → logprob: -11.177838325500488
    10. 'n' → logprob: -11.552838325500488

Token 797: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14556078612804413
    2. '           ' → logprob: -2.6455607414245605
    3. 'nm' → logprob: -2.8955607414245605
    4. ' if' → logprob: -4.7705607414245605
    5. '```' → logprob: -8.020561218261719
    6. ' nm' → logprob: -8.895561218261719
    7. 'n' → logprob: -9.145561218261719
    8. '               ' → logprob: -10.770561218261719
    9. '   ' → logprob: -10.770561218261719
    10. '       ' → logprob: -10.895561218261719

Token 798: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.008839339949190617
    2. ' m' → logprob: -5.258839130401611
    3. 'not' → logprob: -6.133839130401611
    4. 'x' → logprob: -7.758839130401611
    5. '(m' → logprob: -7.883839130401611
    6. ' not' → logprob: -8.50883960723877
    7. '(not' → logprob: -8.63383960723877
    8. 'nm' → logprob: -8.88383960723877
    9. '   ' → logprob: -10.38383960723877
    10. '(x' → logprob: -11.13383960723877

Token 799: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22546018660068512
    2. ' ==' → logprob: -1.600460171699524
    3. '           ' → logprob: -11.350460052490234
    4. '=' → logprob: -11.850460052490234
    5. '!=' → logprob: -12.100460052490234
    6. ' !=' → logprob: -12.225460052490234
    7. '==
' → logprob: -12.475460052490234
    8. ')==' → logprob: -13.100460052490234
    9. ']==' → logprob: -13.100460052490234
    10. '...' → logprob: -13.475460052490234

Token 800: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002086261985823512
    2. ' ' → logprob: -6.377086162567139
    3. '1' → logprob: -7.877086162567139
    4. '   ' → logprob: -13.502086639404297
    5. '=' → logprob: -15.064586639404297
    6. '
' → logprob: -15.377086639404297
    7. '(' → logprob: -15.377086639404297
    8. '  ' → logprob: -15.439586639404297
    9. ' ' → logprob: -15.627086639404297
    10. '==' → logprob: -15.689586639404297

Token 801: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1427239328622818
    2. '1' → logprob: -2.01772403717041
    3. ' ' → logprob: -10.01772403717041
    4. '=' → logprob: -14.51772403717041
    5. '   ' → logprob: -14.51772403717041
    6. '(' → logprob: -14.51772403717041
    7. '==' → logprob: -15.14272403717041
    8. '
' → logprob: -15.39272403717041
    9. '```' → logprob: -15.51772403717041
    10. '[' → logprob: -15.95522403717041

Token 802: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31515541672706604
    2. 'and' → logprob: -1.3151553869247437
    3. '               ' → logprob: -6.690155506134033
    4. '           ' → logprob: -7.440155506134033
    5. ':
' → logprob: -10.440155029296875
    6. ':' → logprob: -11.690155029296875
    7. ',' → logprob: -12.440155029296875
    8. '                   ' → logprob: -12.815155029296875
    9. '```' → logprob: -12.815155029296875
    10. '                       ' → logprob: -12.940155029296875

Token 803: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004749218467622995
    2. ' x' → logprob: -5.379749298095703
    3. '(x' → logprob: -9.254749298095703
    4. '   ' → logprob: -11.254749298095703
    5. ' ' → logprob: -12.254749298095703
    6. 'not' → logprob: -12.379749298095703
    7. '(' → logprob: -12.879749298095703
    8. ' (' → logprob: -13.379749298095703
    9. 'y' → logprob: -13.504749298095703
    10. '
' → logprob: -13.879749298095703

Token 804: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03139345347881317
    2. ' !=' → logprob: -4.031393527984619
    3. '<' → logprob: -5.031393527984619
    4. '==' → logprob: -5.031393527984619
    5. ' ==' → logprob: -10.031393051147461
    6. '>' → logprob: -11.281393051147461
    7. '()!=' → logprob: -11.906393051147461
    8. ' <' → logprob: -12.281393051147461
    9. '```' → logprob: -12.281393051147461
    10. ' ' → logprob: -12.781393051147461

Token 805: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002997120900545269
    2. ' y' → logprob: -8.125299453735352
    3. ' ' → logprob: -14.125299453735352
    4. '   ' → logprob: -14.250299453735352
    5. '0' → logprob: -15.000299453735352
    6. '	y' → logprob: -15.000299453735352
    7. '<|end|>' → logprob: -15.375299453735352
    8. '
' → logprob: -15.500299453735352
    9. '```' → logprob: -16.18779945373535
    10. 'x' → logprob: -16.43779945373535

Token 806: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.24390798807144165
    2. '               ' → logprob: -2.118907928466797
    3. ':' → logprob: -2.368907928466797
    4. '           ' → logprob: -6.243907928466797
    5. '                   ' → logprob: -8.118907928466797
    6. '                       ' → logprob: -9.118907928466797
    7. ' and' → logprob: -9.743907928466797
    8. ':
' → logprob: -9.868907928466797
    9. 'continue' → logprob: -9.993907928466797
    10. '):
' → logprob: -9.993907928466797

Token 807: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033734154421836138
    2. 'nm' → logprob: -5.878373622894287
    3. ' nm' → logprob: -8.128373146057129
    4. '           ' → logprob: -9.128373146057129
    5. '   ' → logprob: -9.503373146057129
    6. '                   ' → logprob: -10.253373146057129
    7. 'continue' → logprob: -11.128373146057129
    8. ' continue' → logprob: -11.378373146057129
    9. '```' → logprob: -12.003373146057129
    10. '       ' → logprob: -12.128373146057129

Token 808: ' continue' (ID: 4901)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.045507851988077164
    2. '                   ' → logprob: -3.9205079078674316
    3. '               ' → logprob: -4.045507907867432
    4. ' nm' → logprob: -5.795507907867432
    5. 'continue' (adapté à ' continue') → logprob: -6.045507907867432
    6. '           ' → logprob: -7.045507907867432
    7. '                       ' → logprob: -7.420507907867432
    8. ' continue' → logprob: -9.420507431030273
    9. '   ' → logprob: -9.545507431030273
    10. '                           ' → logprob: -9.920507431030273

Token 809: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028297467157244682
    2. 'nm' → logprob: -4.153297424316406
    3. 'if' → logprob: -5.278297424316406
    4. '```' → logprob: -5.528297424316406
    5. '            
' → logprob: -7.153297424316406
    6. 'n' → logprob: -7.653297424316406
    7. 'nn' → logprob: -7.653297424316406
    8. '               ' → logprob: -8.278297424316406
    9. ' if' → logprob: -8.653297424316406
    10. '(n' → logprob: -9.028297424316406

Token 810: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056541286408901215
    2. 'nm' → logprob: -3.0565412044525146
    3. '```' → logprob: -5.306541442871094
    4. ' nm' → logprob: -6.181541442871094
    5. '            
' → logprob: -8.931541442871094
    6. '               ' → logprob: -9.431541442871094
    7. 'n' → logprob: -9.431541442871094
    8. '   ' → logprob: -9.681541442871094
    9. '                           ' → logprob: -9.806541442871094
    10. '[n' → logprob: -10.056541442871094

Token 811: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37366098165512085
    2. 'n' → logprob: -2.3736610412597656
    3. 'dp' → logprob: -2.6236610412597656
    4. 'nm' → logprob: -2.6236610412597656
    5. 'for' → logprob: -3.7486610412597656
    6. 'if' (adapté à ' if') → logprob: -4.248661041259766
    7. 'nn' → logprob: -4.623661041259766
    8. '       ' → logprob: -5.123661041259766
    9. '```' → logprob: -5.623661041259766
    10. '               ' → logprob: -5.998661041259766

Token 812: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020287616178393364
    2. 'nm' → logprob: -4.27028751373291
    3. ' x' → logprob: -6.02028751373291
    4. 'not' → logprob: -6.64528751373291
    5. '(x' → logprob: -7.02028751373291
    6. 'm' → logprob: -8.02028751373291
    7. '   ' → logprob: -8.02028751373291
    8. 'n' → logprob: -8.77028751373291
    9. 'y' → logprob: -8.89528751373291
    10. ' nm' → logprob: -9.02028751373291

Token 813: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22840237617492676
    2. ' ==' → logprob: -1.6034023761749268
    3. '=' → logprob: -6.728402137756348
    4. 'and' → logprob: -7.853402137756348
    5. '!=' → logprob: -7.853402137756348
    6. ' !=' → logprob: -8.603402137756348
    7. '<|end|>' → logprob: -9.353402137756348
    8. '>' → logprob: -9.478402137756348
    9. ' and' → logprob: -9.478402137756348
    10. '|' → logprob: -9.728402137756348

Token 814: ' ' (ID: 220)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.029587777331471443
    2. '0' → logprob: -4.029587745666504
    3. '1' → logprob: -4.529587745666504
    4. ' y' → logprob: -7.654587745666504
    5. ' ' → logprob: -9.404587745666504
    6. '   ' → logprob: -11.654587745666504
    7. 'x' → logprob: -11.779587745666504
    8. ''y' → logprob: -12.779587745666504
    9. '(' → logprob: -12.904587745666504
    10. '```' → logprob: -13.467087745666504

Token 815: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.18571995198726654
    2. '0' → logprob: -1.9357199668884277
    3. '1' → logprob: -3.6857199668884277
    4. ' y' → logprob: -9.81071949005127
    5. ' ' → logprob: -11.31071949005127
    6. '
' → logprob: -11.68571949005127
    7. ''y' → logprob: -12.81071949005127
    8. 'x' → logprob: -13.18571949005127
    9. '   ' → logprob: -13.37321949005127
    10. '(' → logprob: -13.62321949005127

Token 816: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05727013200521469
    2. 'and' → logprob: -3.307270050048828
    3. '           ' → logprob: -4.557270050048828
    4. ':
' → logprob: -5.182270050048828
    5. ':' → logprob: -6.057270050048828
    6. '               ' → logprob: -7.932270050048828
    7. '       ' → logprob: -8.932270050048828
    8. '   ' → logprob: -10.682270050048828
    9. ' or' → logprob: -11.307270050048828
    10. '          ' → logprob: -11.682270050048828

Token 817: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.000536828360054642
    2. ' y' → logprob: -7.750536918640137
    3. 'm' → logprob: -9.750536918640137
    4. '   ' → logprob: -10.625536918640137
    5. 'x' → logprob: -12.250536918640137
    6. '(y' → logprob: -12.625536918640137
    7. ' ' → logprob: -13.000536918640137
    8. '
' → logprob: -13.375536918640137
    9. 'not' → logprob: -13.375536918640137
    10. '       ' → logprob: -13.750536918640137

Token 818: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08898940682411194
    2. ' ==' → logprob: -2.463989496231079
    3. '==
' → logprob: -10.9639892578125
    4. ']==' → logprob: -11.0889892578125
    5. '=' → logprob: -12.0889892578125
    6. '<|end|>' → logprob: -12.9639892578125
    7. ')==' → logprob: -13.2139892578125
    8. '<|end|>' → logprob: -13.2139892578125
    9. '```' → logprob: -14.3389892578125
    10. '           ' → logprob: -14.7139892578125

Token 819: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3139297366142273
    2. '1' → logprob: -1.313929796218872
    3. ' ' → logprob: -7.313929557800293
    4. '   ' → logprob: -14.251429557800293
    5. '  ' → logprob: -16.12643051147461
    6. '  
' → logprob: -16.25143051147461
    7. '```' → logprob: -16.25143051147461
    8. 'x' → logprob: -16.50143051147461
    9. '(' → logprob: -17.06393051147461
    10. '
' → logprob: -17.18893051147461

Token 820: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0889437198638916
    2. '1' → logprob: -2.4639437198638916
    3. ' ' → logprob: -12.463943481445312
    4. '```' → logprob: -16.463943481445312
    5. '   ' → logprob: -17.276443481445312
    6. '
' → logprob: -17.463943481445312
    7. '(' → logprob: -17.776443481445312
    8. 'x' → logprob: -17.963943481445312
    9. '`' → logprob: -18.151443481445312
    10. '...' → logprob: -18.401443481445312

Token 821: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07943100482225418
    2. ':' → logprob: -3.0794310569763184
    3. '               ' → logprob: -3.9544310569763184
    4. '           ' → logprob: -4.954431056976318
    5. ' and' → logprob: -5.704431056976318
    6. 'and' → logprob: -7.954431056976318
    7. '):
' → logprob: -8.45443058013916
    8. '       ' → logprob: -9.20443058013916
    9. '                   ' → logprob: -10.07943058013916
    10. ':
' → logprob: -10.82943058013916

Token 822: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01591951958835125
    2. 'nm' → logprob: -4.7659196853637695
    3. ' nm' → logprob: -5.6409196853637695
    4. '                               ' → logprob: -6.0159196853637695
    5. '                   ' → logprob: -7.5159196853637695
    6. '                       ' → logprob: -8.26591968536377
    7. '                           ' → logprob: -8.39091968536377
    8. '           ' → logprob: -9.01591968536377
    9. '```' → logprob: -10.26591968536377
    10. '   ' → logprob: -11.14091968536377

Token 823: ' nm' (ID: 43183)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' (adapté à ' nm') → logprob: -0.003946367651224136
    2. 'continue' → logprob: -6.253946304321289
    3. '           ' → logprob: -7.003946304321289
    4. '               ' → logprob: -8.503946304321289
    5. 'nn' → logprob: -8.503946304321289
    6. '                   ' → logprob: -8.503946304321289
    7. '   ' → logprob: -9.628946304321289
    8. '                           ' → logprob: -9.753946304321289
    9. ' nm' → logprob: -10.003946304321289
    10. 'n' → logprob: -10.003946304321289

Token 824: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '           ' → logprob: -16.773244857788086
    4. '   ' → logprob: -17.648244857788086
    5. '       ' → logprob: -18.023244857788086
    6. ' |=' → logprob: -18.148244857788086
    7. '|' → logprob: -18.148244857788086
    8. ' ' → logprob: -18.648244857788086
    9. '=
' → logprob: -18.648244857788086
    10. '+=' → logprob: -18.773244857788086

Token 825: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '0' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.000001907348633
    4. '   ' → logprob: -19.125001907348633
    5. 'True' → logprob: -21.500001907348633
    6. '۱' → logprob: -21.500001907348633
    7. 'true' → logprob: -21.687501907348633
    8. 'mod' → logprob: -21.687501907348633
    9. 'Mod' → logprob: -21.875001907348633
    10. '  ' → logprob: -22.312501907348633

Token 826: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. '0' → logprob: -11.125015258789062
    3. ' ' → logprob: -16.125015258789062
    4. 'True' → logprob: -20.250015258789062
    5. 'true' → logprob: -20.562515258789062
    6. '
' → logprob: -20.937515258789062
    7. '۱' → logprob: -21.312515258789062
    8. 'Mod' → logprob: -21.375015258789062
    9. '   ' → logprob: -21.375015258789062
    10. 'm' → logprob: -21.437515258789062

Token 827: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1964147537946701
    2. '                   ' → logprob: -2.1964147090911865
    3. 'dp' → logprob: -3.4464147090911865
    4. '               ' → logprob: -3.8214147090911865
    5. '                       ' → logprob: -5.071414947509766
    6. '                           ' → logprob: -5.321414947509766
    7. '<|end|>' → logprob: -7.821414947509766
    8. '                        
' → logprob: -8.196414947509766
    9. ' dp' → logprob: -8.321414947509766
    10. '                               ' → logprob: -8.946414947509766

Token 828: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21582844853401184
    2. 'dp' → logprob: -1.8408284187316895
    3. '                   ' → logprob: -3.8408284187316895
    4. '               ' → logprob: -5.2158284187316895
    5. '                           ' → logprob: -5.3408284187316895
    6. '                       ' → logprob: -6.0908284187316895
    7. ' dp' → logprob: -7.2158284187316895
    8. '                                   ' → logprob: -8.090828895568848
    9. '                               ' → logprob: -8.590828895568848
    10. '                                           ' → logprob: -9.715828895568848

Token 829: ' dp' (ID: 21546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6616034507751465
    2. 'dp' (adapté à ' dp') → logprob: -0.7866034507751465
    3. ' dp' → logprob: -4.1616034507751465
    4. '                       ' → logprob: -5.7866034507751465
    5. 'for' → logprob: -5.9116034507751465
    6. '                           ' → logprob: -5.9116034507751465
    7. '                   ' → logprob: -6.2866034507751465
    8. '               ' → logprob: -6.7866034507751465
    9. '                                   ' → logprob: -7.5366034507751465
    10. ' for' → logprob: -7.5366034507751465

Token 830: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -1.981667537620524e-06
    2. 'd' → logprob: -13.250001907348633
    3. '[' → logprob: -16.250001907348633
    4. '```' → logprob: -17.500001907348633
    5. '][' → logprob: -17.875001907348633
    6. ' [' → logprob: -18.375001907348633
    7. '\[' → logprob: -18.875001907348633
    8. '(d' → logprob: -19.000001907348633
    9. '[df' → logprob: -20.875001907348633
    10. 'dp' → logprob: -20.875001907348633

Token 831: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005533903022296727
    2. ']' → logprob: -7.875553607940674
    3. '[' → logprob: -9.500553131103516
    4. ' ][' → logprob: -10.250553131103516
    5. '   ' → logprob: -10.375553131103516
    6. ' ' → logprob: -12.000553131103516
    7. '```' → logprob: -12.500553131103516
    8. '    ' → logprob: -12.750553131103516
    9. '[i' → logprob: -13.375553131103516
    10. '+' → logprob: -13.375553131103516

Token 832: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.007750960066914558
    2. 'i' → logprob: -4.882750988006592
    3. 'x' → logprob: -9.507750511169434
    4. ' ni' → logprob: -10.632750511169434
    5. '   ' → logprob: -11.382750511169434
    6. '(' → logprob: -12.132750511169434
    7. '
' → logprob: -12.382750511169434
    8. 'xi' → logprob: -12.757750511169434
    9. 'nj' → logprob: -13.007750511169434
    10. 'nx' → logprob: -13.007750511169434

Token 833: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5760415196418762
    2. '][' → logprob: -0.8260415196418762
    3. ' ][' → logprob: -10.326041221618652
    4. '[' → logprob: -11.201041221618652
    5. '}[' → logprob: -11.201041221618652
    6. '   ' → logprob: -11.326041221618652
    7. '```' → logprob: -11.826041221618652
    8. ']][' → logprob: -12.076041221618652
    9. '"][' → logprob: -12.201041221618652
    10. ')[' → logprob: -13.201041221618652

Token 834: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -1.4259644558478612e-05
    2. '   ' → logprob: -11.500014305114746
    3. ' nj' → logprob: -13.375014305114746
    4. '
' → logprob: -13.625014305114746
    5. 'n' → logprob: -13.750014305114746
    6. ' ' → logprob: -15.750014305114746
    7. '       ' → logprob: -17.12501335144043
    8. '  ' → logprob: -17.50001335144043
    9. '     ' → logprob: -17.75001335144043
    10. '    ' → logprob: -17.75001335144043

Token 835: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.3870807886123657
    2. '][' → logprob: -1.1370807886123657
    3. ')[' → logprob: -10.012081146240234
    4. '}[' → logprob: -10.387081146240234
    5. '```' → logprob: -10.512081146240234
    6. '   ' → logprob: -10.637081146240234
    7. '[' → logprob: -10.887081146240234
    8. '"][' → logprob: -11.262081146240234
    9. ' ][' → logprob: -11.512081146240234
    10. ''][' → logprob: -11.762081146240234

Token 836: 'nm' (ID: 36370)
  Prédit: 'nm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -7.896309739408025e-07
    2. ' nm' → logprob: -15.250000953674316
    3. '   ' → logprob: -15.375000953674316
    4. 'n' → logprob: -15.750000953674316
    5. '_nm' → logprob: -17.625
    6. 'm' → logprob: -17.875
    7. '
' → logprob: -18.0
    8. ' ' → logprob: -18.5
    9. '           ' → logprob: -18.625
    10. '(n' → logprob: -18.875

Token 837: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011332983151078224
    2. '][' → logprob: -5.011332988739014
    3. ']+=' → logprob: -5.761332988739014
    4. '[x' → logprob: -7.386332988739014
    5. '[i' → logprob: -7.886332988739014
    6. ']+' → logprob: -8.261332511901855
    7. '[' → logprob: -10.011332511901855
    8. '(x' → logprob: -10.261332511901855
    9. '[j' → logprob: -10.261332511901855
    10. '+' → logprob: -11.011332511901855

Token 838: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008582543581724167
    2. '=' → logprob: -4.883582592010498
    3. ']+=' → logprob: -7.508582592010498
    4. '+' → logprob: -8.38358211517334
    5. ' +=' → logprob: -9.25858211517334
    6. '+=(' → logprob: -9.38358211517334
    7. ']' → logprob: -11.38358211517334
    8. '[' → logprob: -12.00858211517334
    9. '```' → logprob: -14.00858211517334
    10. ']=' → logprob: -15.13358211517334

Token 839: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.688212614681106e-05
    2. ' dp' → logprob: -11.000017166137695
    3. '           ' → logprob: -16.625017166137695
    4. '	dp' → logprob: -17.375017166137695
    5. '(dp' → logprob: -17.750017166137695
    6. '                           ' → logprob: -20.500017166137695
    7. '       ' → logprob: -20.625017166137695
    8. '               ' → logprob: -20.750017166137695
    9. '                   ' → logprob: -20.875017166137695
    10. '          ' → logprob: -21.000017166137695

Token 840: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.00023083435371518135
    2. 'd' → logprob: -8.37523078918457
    3. '```' → logprob: -15.62523078918457
    4. ')d' → logprob: -17.12523078918457
    5. '	d' → logprob: -17.50023078918457
    6. '[' → logprob: -17.50023078918457
    7. '=d' → logprob: -17.87523078918457
    8. 'def' → logprob: -18.00023078918457
    9. '(d' → logprob: -18.12523078918457
    10. 'dp' → logprob: -18.25023078918457

Token 841: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08076736330986023
    2. '[' → logprob: -2.5807673931121826
    3. '[d' → logprob: -7.2057671546936035
    4. 'd' → logprob: -7.2057671546936035
    5. '+' → logprob: -9.205767631530762
    6. '[n' → logprob: -9.580767631530762
    7. ']' → logprob: -9.705767631530762
    8. '```' → logprob: -9.955767631530762
    9. 'dp' → logprob: -10.205767631530762
    10. '[next' → logprob: -10.955767631530762

Token 842: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.00035453110467642546
    2. 'i' → logprob: -8.000354766845703
    3. '   ' → logprob: -12.500354766845703
    4. ' ni' → logprob: -12.750354766845703
    5. '[' → logprob: -13.000354766845703
    6. '0' → logprob: -13.125354766845703
    7. '[i' → logprob: -13.750354766845703
    8. 'x' → logprob: -13.875354766845703
    9. 'dp' → logprob: -14.125354766845703
    10. '       ' → logprob: -14.375354766845703

Token 843: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.2020991056924686e-05
    2. '[' → logprob: -10.625032424926758
    3. ']' → logprob: -12.125032424926758
    4. ' ][' → logprob: -13.750032424926758
    5. '```' → logprob: -15.250032424926758
    6. '       ' → logprob: -15.625032424926758
    7. ']][' → logprob: -15.625032424926758
    8. '   ' → logprob: -15.750032424926758
    9. '           ' → logprob: -15.875032424926758
    10. '"][' → logprob: -16.750032424926758

Token 844: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -1.1472419600977446e-06
    2. 'nk' → logprob: -14.500000953674316
    3. '
' → logprob: -15.625000953674316
    4. 'j' → logprob: -15.875000953674316
    5. 'jn' → logprob: -16.125001907348633
    6. ' nj' → logprob: -16.250001907348633
    7. '1' → logprob: -16.875001907348633
    8. 'n' → logprob: -16.875001907348633
    9. '   ' → logprob: -17.125001907348633
    10. '```' → logprob: -18.250001907348633

Token 845: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001845101942308247
    2. '[x' → logprob: -6.876844882965088
    3. '[' → logprob: -7.751844882965088
    4. '[n' → logprob: -9.001845359802246
    5. '[m' → logprob: -9.876845359802246
    6. ']' → logprob: -10.126845359802246
    7. '[d' → logprob: -10.376845359802246
    8. '           ' → logprob: -10.626845359802246
    9. '[i' → logprob: -11.001845359802246
    10. '       ' → logprob: -11.501845359802246

Token 846: 'nm' (ID: 36370)
  Prédit: 'nm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.002050574403256178
    2. 'm' → logprob: -6.252050399780273
    3. 'x' → logprob: -9.377050399780273
    4. 'xm' → logprob: -10.252050399780273
    5. 'ni' → logprob: -14.377050399780273
    6. '[m' → logprob: -14.502050399780273
    7. 'nk' → logprob: -15.877050399780273
    8. '
' → logprob: -16.002050399780273
    9. ' nm' → logprob: -16.127050399780273
    10. 'nx' → logprob: -16.502050399780273

Token 847: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01617184840142727
    2. ' +' → logprob: -4.141171932220459
    3. '+
' → logprob: -9.0161714553833
    4. ']' → logprob: -12.2661714553833
    5. ']+' → logprob: -12.2661714553833
    6. '+self' → logprob: -12.8911714553833
    7. ' +
' → logprob: -13.8911714553833
    8. '+]' → logprob: -14.3911714553833
    9. '+d' → logprob: -14.7661714553833
    10. '```' → logprob: -14.7661714553833

Token 848: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014274569228291512
    2. ' +' → logprob: -4.264274597167969
    3. '+
' → logprob: -9.139274597167969
    4. '+self' → logprob: -13.889274597167969
    5. '```' → logprob: -14.389274597167969
    6. ' +
' → logprob: -14.514274597167969
    7. '
' → logprob: -15.514274597167969
    8. '   ' → logprob: -15.764274597167969
    9. '＋' → logprob: -15.889274597167969
    10. ' ' → logprob: -16.01427459716797

Token 849: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2664456789934775e-06
    2. ' dp' → logprob: -14.000000953674316
    3. '(dp' → logprob: -15.375000953674316
    4. '   ' → logprob: -15.875000953674316
    5. '           ' → logprob: -17.500001907348633
    6. '(' → logprob: -17.500001907348633
    7. '                   ' → logprob: -19.000001907348633
    8. '	dp' → logprob: -19.125001907348633
    9. '               ' → logprob: -19.500001907348633
    10. '       ' → logprob: -20.000001907348633

Token 850: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.20145133137702942
    2. 'd' → logprob: -1.701451301574707
    3. '```' → logprob: -10.451451301574707
    4. '(d' → logprob: -12.326451301574707
    5. '
' → logprob: -13.451451301574707
    6. '   ' → logprob: -14.326451301574707
    7. '[
' → logprob: -14.451451301574707
    8. '	d' → logprob: -14.576451301574707
    9. ' d' → logprob: -14.576451301574707
    10. '[' → logprob: -15.201451301574707

Token 851: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005044236779212952
    2. ' +' → logprob: -5.380044460296631
    3. '[d' → logprob: -8.380043983459473
    4. '+d' → logprob: -9.255043983459473
    5. 'd' → logprob: -9.880043983459473
    6. '[' → logprob: -10.255043983459473
    7. '   ' → logprob: -12.255043983459473
    8. '1' → logprob: -13.380043983459473
    9. '```' → logprob: -13.380043983459473
    10. '+
' → logprob: -13.380043983459473

Token 852: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '+' → logprob: -13.37500286102295
    3. '```' → logprob: -14.50000286102295
    4. ' ' → logprob: -15.00000286102295
    5. '   ' → logprob: -17.000001907348633
    6. '`' → logprob: -19.625001907348633
    7. '[' → logprob: -19.875001907348633
    8. '``' → logprob: -20.000001907348633
    9. ' +' → logprob: -20.250001907348633
    10. '１' → logprob: -20.625001907348633

Token 853: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02705998718738556
    2. '[' → logprob: -3.777060031890869
    3. ']' → logprob: -6.027060031890869
    4. '```' → logprob: -7.152060031890869
    5. '[next' → logprob: -8.402059555053711
    6. '   ' → logprob: -9.902059555053711
    7. '[n' → logprob: -10.152059555053711
    8. '[d' → logprob: -10.402059555053711
    9. '[...,' → logprob: -11.152059555053711
    10. '}[' → logprob: -11.277059555053711

Token 854: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006570351542904973
    2. 'x' → logprob: -7.375657081604004
    3. '   ' → logprob: -11.875657081604004
    4. ' i' → logprob: -12.000657081604004
    5. '
' → logprob: -12.250657081604004
    6. '0' → logprob: -12.750657081604004
    7. ' ' → logprob: -13.125657081604004
    8. 'xi' → logprob: -13.250657081604004
    9. '```' → logprob: -13.500657081604004
    10. 'ni' → logprob: -14.625657081604004

Token 855: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6058085560798645
    2. 'j' → logprob: -1.1058084964752197
    3. '[i' → logprob: -2.6058084964752197
    4. 'i' → logprob: -3.7308084964752197
    5. '[j' → logprob: -3.8558084964752197
    6. '   ' → logprob: -6.230808734893799
    7. '```' → logprob: -7.230808734893799
    8. '       ' → logprob: -7.980808734893799
    9. ']' → logprob: -7.980808734893799
    10. '           ' → logprob: -8.35580825805664

Token 856: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1637164789135568e-05
    2. 'm' → logprob: -11.500011444091797
    3. ' j' → logprob: -14.250011444091797
    4. 'x' → logprob: -14.625011444091797
    5. '   ' → logprob: -15.500011444091797
    6. '```' → logprob: -16.875011444091797
    7. ' ' → logprob: -17.500011444091797
    8. 'jx' → logprob: -18.375011444091797
    9. '  ' → logprob: -18.625011444091797
    10. '
' → logprob: -18.625011444091797

Token 857: '][' (ID: 2696)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.4855663721391466e-05
    2. '][' → logprob: -11.750015258789062
    3. '[m' → logprob: -12.875015258789062
    4. 'x' → logprob: -13.375015258789062
    5. '```' → logprob: -13.750015258789062
    6. ' m' → logprob: -14.125015258789062
    7. '   ' → logprob: -14.875015258789062
    8. 'k' → logprob: -16.000015258789062
    9. '	m' → logprob: -16.375015258789062
    10. '0' → logprob: -16.375015258789062

Token 858: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.8908587662735954e-05
    2. 'x' → logprob: -11.125019073486328
    3. '0' → logprob: -13.250019073486328
    4. '   ' → logprob: -14.125019073486328
    5. ' m' → logprob: -14.500019073486328
    6. 'k' → logprob: -15.125019073486328
    7. ' ' → logprob: -15.250019073486328
    8. '```' → logprob: -16.000019073486328
    9. '       ' → logprob: -16.375019073486328
    10. '	m' → logprob: -16.500019073486328

Token 859: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06206762045621872
    2. '[x' → logprob: -2.8120675086975098
    3. '[y' → logprob: -10.187067985534668
    4. '(x' → logprob: -10.437067985534668
    5. ']' → logprob: -11.062067985534668
    6. '[' → logprob: -11.562067985534668
    7. 'x' → logprob: -12.812067985534668
    8. ' ][' → logprob: -13.062067985534668
    9. '   ' → logprob: -14.062067985534668
    10. '       ' → logprob: -14.312067985534668

Token 860: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 861: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 862: ' ça' (ID: 13590)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 863: ' marche' (ID: 58191)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7138351798057556
    2. '<|end|>' → logprob: -0.8388351798057556
    3. '[' → logprob: -3.5888352394104004
    4. ')' → logprob: -4.3388352394104
    5. '<|end|>' → logprob: -4.5888352394104
    6. '```' → logprob: -5.8388352394104
    7. '=' → logprob: -5.8388352394104
    8. '+' → logprob: -6.3388352394104
    9. '...' → logprob: -6.3388352394104
    10. '#' → logprob: -6.3388352394104

Token 864: ' ?' (ID: 1423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 865: ' bon' (ID: 4846)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 866: ' faut' (ID: 17821)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 867: ' voir' (ID: 20611)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.2139463424682617
    2. 'pas' → logprob: -2.5889463424682617
    3. '   ' → logprob: -3.0889463424682617
    4. '       ' → logprob: -3.2139463424682617
    5. 'continue' → logprob: -3.2139463424682617
    6. 'coder' → logprob: -3.4639463424682617
    7. ' continuer' → logprob: -3.4639463424682617
    8. 'just' → logprob: -3.5889463424682617
    9. '           ' → logprob: -3.7139463424682617
    10. '```' → logprob: -3.7139463424682617

Token 868: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 869: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48663514852523804
    2. ']' → logprob: -1.4866352081298828
    3. '<|end|>' → logprob: -2.111635208129883
    4. '        ' → logprob: -5.111635208129883
    5. '```' → logprob: -5.486635208129883
    6. '[' → logprob: -5.486635208129883
    7. '])' → logprob: -6.111635208129883
    8. '    ' → logprob: -6.236635208129883
    9. ']]' → logprob: -6.361635208129883
    10. ')]' → logprob: -6.361635208129883

Token 870: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0600903294980526
    2. 'print' → logprob: -3.1850903034210205
    3. 'result' → logprob: -4.4350905418396
    4. '#' (adapté à ' #') → logprob: -6.9350905418396
    5. ')' → logprob: -6.9350905418396
    6. ' return' → logprob: -7.3100905418396
    7. '```' → logprob: -7.8100905418396
    8. ']' → logprob: -7.9350905418396
    9. '[' → logprob: -8.560090065002441
    10. 'r' → logprob: -8.685090065002441

Token 871: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5142797827720642
    2. 'res' → logprob: -1.264279842376709
    3. 'ans' → logprob: -2.514279842376709
    4. 'print' → logprob: -4.264279842376709
    5. 'answer' → logprob: -4.264279842376709
    6. 'return' → logprob: -5.139279842376709
    7. 'ret' → logprob: -5.764279842376709
    8. 'total' → logprob: -7.389279842376709
    9. '   ' → logprob: -7.639279842376709
    10. ' ans' → logprob: -8.63927936553955

Token 872: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8164961934089661
    2. 'print' → logprob: -1.4414961338043213
    3. ' =' → logprob: -2.5664961338043213
    4. ' print' → logprob: -3.0664961338043213
    5. 'x' → logprob: -3.5664961338043213
    6. 'def' → logprob: -3.8164961338043213
    7. '
' → logprob: -3.8164961338043213
    8. '=' → logprob: -3.9414961338043213
    9. '[' → logprob: -3.9414961338043213
    10. 's' → logprob: -4.3164963722229

Token 873: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01209928933531046
    2. '   ' → logprob: -4.512099266052246
    3. '(print' → logprob: -7.262099266052246
    4. 'result' → logprob: -8.637099266052246
    5. '```' → logprob: -9.512099266052246
    6. '(' → logprob: -10.637099266052246
    7. ' print' → logprob: -11.012099266052246
    8. '(sum' → logprob: -11.387099266052246
    9. 'ans' → logprob: -11.512099266052246
    10. 'sum' → logprob: -11.512099266052246

Token 874: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8505589365959167
    2. 'dp' → logprob: -1.1005589962005615
    3. 'sum' → logprob: -1.4755589962005615
    4. 'int' → logprob: -4.725558757781982
    5. '(dp' → logprob: -6.475558757781982
    6. '   ' → logprob: -7.975558757781982
    7. 'return' → logprob: -8.22555923461914
    8. '(sum' → logprob: -8.97555923461914
    9. 'max' → logprob: -9.47555923461914
    10. 'result' → logprob: -9.97555923461914

Token 875: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0717896968126297
    2. 'result' → logprob: -2.8217897415161133
    3. 'total' → logprob: -5.071789741516113
    4. '   ' → logprob: -6.446789741516113
    5. ' print' → logprob: -6.946789741516113
    6. 'res' → logprob: -7.196789741516113
    7. 'ans' → logprob: -9.821789741516113
    8. 'answer' → logprob: -9.821789741516113
    9. ' result' → logprob: -10.571789741516113
    10. '
' → logprob: -10.821789741516113

Token 876: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0245647132396698
    2. 'result' → logprob: -3.774564743041992
    3. '   ' → logprob: -7.399564743041992
    4. 'total' → logprob: -7.899564743041992
    5. ' print' → logprob: -8.149564743041992
    6. 'res' → logprob: -11.274564743041992
    7. '```' → logprob: -11.399564743041992
    8. 'answer' → logprob: -11.524564743041992
    9. ' result' → logprob: -12.399564743041992
    10. 'ans' → logprob: -13.024564743041992

Token 877: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.015596359968185425
    2. 'result' → logprob: -4.265596389770508
    3. 'total' → logprob: -7.515596389770508
    4. '   ' → logprob: -7.890596389770508
    5. 'res' → logprob: -8.140596389770508
    6. 'ans' → logprob: -9.140596389770508
    7. ' print' → logprob: -10.015596389770508
    8. 'answer' → logprob: -10.140596389770508
    9. '```' → logprob: -11.140596389770508
    10. '
' → logprob: -12.265596389770508

Token 878: '(sum' (ID: 45528)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.044487908482551575
    2. '(sum' → logprob: -3.169487953186035
    3. 'dp' → logprob: -6.919487953186035
    4. '(' → logprob: -8.419487953186035
    5. 'sum' → logprob: -8.419487953186035
    6. '((' → logprob: -10.419487953186035
    7. '(int' → logprob: -10.919487953186035
    8. '(
' → logprob: -12.169487953186035
    9. ' dp' → logprob: -13.794487953186035
    10. '(max' → logprob: -13.919487953186035

Token 879: '((' (ID: 2054)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0008667988586239517
    2. '([' → logprob: -7.750866889953613
    3. 'dp' → logprob: -8.500866889953613
    4. '(' → logprob: -8.625866889953613
    5. '(
' → logprob: -10.125866889953613
    6. '((' → logprob: -11.625866889953613
    7. '(d' → logprob: -13.250866889953613
    8. '(sum' → logprob: -13.625866889953613
    9. ' dp' → logprob: -15.125866889953613
    10. '([
' → logprob: -15.625866889953613

Token 880: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.153795766294934e-06
    2. 'sum' → logprob: -13.000005722045898
    3. ' dp' → logprob: -13.125005722045898
    4. '(dp' → logprob: -13.375005722045898
    5. '
' → logprob: -16.1250057220459
    6. '[' → logprob: -17.1250057220459
    7. '   ' → logprob: -17.1250057220459
    8. 'mod' → logprob: -17.3750057220459
    9. 'd' → logprob: -17.7500057220459
    10. '	dp' → logprob: -17.8750057220459

Token 881: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0021949794609099627
    2. '0' → logprob: -6.127194881439209
    3. '   ' → logprob: -12.752195358276367
    4. '(' → logprob: -13.877195358276367
    5. '```' → logprob: -14.002195358276367
    6. ' ' → logprob: -14.127195358276367
    7. '[
' → logprob: -14.252195358276367
    8. '[D' → logprob: -14.502195358276367
    9. 'def' → logprob: -14.752195358276367
    10. ' [' → logprob: -14.752195358276367

Token 882: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7848862373502925e-05
    2. '[' → logprob: -10.625027656555176
    3. ' ' → logprob: -12.875027656555176
    4. '   ' → logprob: -14.250027656555176
    5. '
' → logprob: -16.750028610229492
    6. '```' → logprob: -17.375028610229492
    7. 'd' → logprob: -17.875028610229492
    8. '1' → logprob: -17.875028610229492
    9. '۰' → logprob: -17.875028610229492
    10. '０' → logprob: -18.000028610229492

Token 883: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06314391642808914
    2. '[' → logprob: -2.8131439685821533
    3. ')[' → logprob: -7.188143730163574
    4. '[i' → logprob: -8.813143730163574
    5. '   ' → logprob: -9.188143730163574
    6. '}[' → logprob: -10.063143730163574
    7. ']' → logprob: -10.438143730163574
    8. '```' → logprob: -11.438143730163574
    9. ']))' → logprob: -11.813143730163574
    10. '0' → logprob: -11.813143730163574

Token 884: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008267621509730816
    2. '0' → logprob: -4.883267402648926
    3. '[i' → logprob: -7.633267402648926
    4. 'ni' → logprob: -9.133267402648926
    5. '[' → logprob: -10.508267402648926
    6. 'ii' → logprob: -11.633267402648926
    7. '1' → logprob: -12.008267402648926
    8. 'a' → logprob: -12.508267402648926
    9. '_i' → logprob: -13.133267402648926
    10. 'x' → logprob: -13.258267402648926

Token 885: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00011594036914175376
    2. '[i' → logprob: -10.125116348266602
    3. '[' → logprob: -10.500116348266602
    4. ']' → logprob: -10.750116348266602
    5. '][_' → logprob: -12.250116348266602
    6. ' ][' → logprob: -12.500116348266602
    7. ']))' → logprob: -12.875116348266602
    8. '   ' → logprob: -13.000116348266602
    9. 'for' → logprob: -13.125116348266602
    10. ']][' → logprob: -13.500116348266602

Token 886: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.024251526221632957
    2. '0' → logprob: -3.7742514610290527
    3. 'i' → logprob: -7.274251461029053
    4. '][' → logprob: -8.399251937866211
    5. '1' → logprob: -11.149251937866211
    6. 'k' → logprob: -11.399251937866211
    7. '[j' → logprob: -11.399251937866211
    8. '
' → logprob: -11.899251937866211
    9. ' j' → logprob: -12.024251937866211
    10. '[' → logprob: -12.024251937866211

Token 887: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013320252764970064
    2. '[k' → logprob: -7.126331806182861
    3. '[m' → logprob: -7.626331806182861
    4. 'k' → logprob: -10.87633228302002
    5. 'm' → logprob: -11.37633228302002
    6. ']' → logprob: -12.37633228302002
    7. '[' → logprob: -13.00133228302002
    8. '   ' → logprob: -14.50133228302002
    9. ' ][' → logprob: -14.50133228302002
    10. ')[' → logprob: -15.12633228302002

Token 888: 'm' (ID: 76)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.025709902867674828
    2. 'm' → logprob: -4.400710105895996
    3. '1' → logprob: -4.525710105895996
    4. '0' → logprob: -6.900710105895996
    5. 'nm' → logprob: -7.150710105895996
    6. 'i' → logprob: -8.525710105895996
    7. 'n' → logprob: -8.900710105895996
    8. 'l' → logprob: -9.650710105895996
    9. 'x' → logprob: -10.025710105895996
    10. '(' → logprob: -11.775710105895996

Token 889: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30356571078300476
    2. ']' → logprob: -1.4285657405853271
    3. ' for' → logprob: -3.928565740585327
    4. '])' → logprob: -6.303565502166748
    5. ')' → logprob: -7.553565502166748
    6. '[i' → logprob: -10.053565979003906
    7. '[' → logprob: -10.928565979003906
    8. ']))' → logprob: -11.053565979003906
    9. '	for' → logprob: -11.553565979003906
    10. '][' → logprob: -11.803565979003906

Token 890: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47468647360801697
    2. ' for' → logprob: -0.9746865034103394
    3. ')' → logprob: -7.974686622619629
    4. '[i' → logprob: -8.724686622619629
    5. '	for' → logprob: -10.099686622619629
    6. '   ' → logprob: -10.974686622619629
    7. '[' → logprob: -11.224686622619629
    8. '           ' → logprob: -11.974686622619629
    9. '[x' → logprob: -12.099686622619629
    10. '       ' → logprob: -12.474686622619629

Token 891: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.542423165636137e-05
    2. ' i' → logprob: -9.375085830688477
    3. '(i' → logprob: -15.375085830688477
    4. '(' → logprob: -15.375085830688477
    5. '	i' → logprob: -16.750085830688477
    6. '
' → logprob: -17.625085830688477
    7. 'in' → logprob: -17.625085830688477
    8. '0' → logprob: -17.875085830688477
    9. '   ' → logprob: -18.000085830688477
    10. ' in' → logprob: -18.000085830688477

Token 892: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4287419021129608
    2. 'in' → logprob: -1.0537419319152832
    3. ',' → logprob: -10.428741455078125
    4. ')' → logprob: -13.178741455078125
    5. 'i' → logprob: -13.178741455078125
    6. '0' → logprob: -13.303741455078125
    7. 'for' → logprob: -13.803741455078125
    8. ' ' → logprob: -13.928741455078125
    9. '```' → logprob: -14.053741455078125
    10. '
' → logprob: -14.178741455078125

Token 893: ' j' (ID: 441)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005876887124031782
    2. '(' → logprob: -5.5058770179748535
    3. 'i' → logprob: -7.8808770179748535
    4. ' m' → logprob: -7.8808770179748535
    5. ' in' → logprob: -8.130876541137695
    6. 'in' → logprob: -8.755876541137695
    7. '(m' → logprob: -8.755876541137695
    8. '0' → logprob: -9.130876541137695
    9. 'k' → logprob: -9.130876541137695
    10. 'range' → logprob: -9.130876541137695

Token 894: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06206167861819267
    2. ' in' → logprob: -2.8120617866516113
    3. ',' → logprob: -9.312061309814453
    4. '(' → logprob: -13.687061309814453
    5. ' ' → logprob: -14.562061309814453
    6. ',m' → logprob: -14.687061309814453
    7. '	in' → logprob: -14.937061309814453
    8. '```' → logprob: -15.062061309814453
    9. '   ' → logprob: -15.312061309814453
    10. ')' → logprob: -15.687061309814453

Token 895: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3249315023422241
    2. '(' → logprob: -1.3249315023422241
    3. 'range' → logprob: -5.074931621551514
    4. '0' → logprob: -5.824931621551514
    5. 'in' → logprob: -7.074931621551514
    6. '(m' → logprob: -7.449931621551514
    7. ' in' → logprob: -8.074931144714355
    8. ' m' → logprob: -8.449931144714355
    9. ' (' → logprob: -8.574931144714355
    10. ' range' → logprob: -8.949931144714355

Token 896: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2014312595129013
    2. ' in' → logprob: -1.7014312744140625
    3. ')' → logprob: -11.576431274414062
    4. '(' → logprob: -12.451431274414062
    5. '```' → logprob: -13.701431274414062
    6. ',' → logprob: -13.951431274414062
    7. '
' → logprob: -14.201431274414062
    8. ' ' → logprob: -14.201431274414062
    9. '),' → logprob: -14.326431274414062
    10. '   ' → logprob: -15.451431274414062

Token 897: ' product' (ID: 1888)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009901287034153938
    2. 'range' → logprob: -5.009901523590088
    3. 'product' → logprob: -5.759901523590088
    4. ' range' → logprob: -11.38490104675293
    5. ' (' → logprob: -12.25990104675293
    6. '0' → logprob: -12.25990104675293
    7. '((' → logprob: -12.50990104675293
    8. ' product' → logprob: -13.38490104675293
    9. '
' → logprob: -13.63490104675293
    10. '   ' → logprob: -14.38490104675293

Token 898: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004959598300047219
    2. '((' → logprob: -7.875495910644531
    3. 'in' → logprob: -9.625495910644531
    4. 'range' → logprob: -10.750495910644531
    5. ' (' → logprob: -11.000495910644531
    6. '(range' → logprob: -12.000495910644531
    7. ' in' → logprob: -12.625495910644531
    8. '([' → logprob: -13.875495910644531
    9. ',' → logprob: -14.375495910644531
    10. '   ' → logprob: -15.750495910644531

Token 899: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005234356038272381
    2. '0' → logprob: -5.255234241485596
    3. ' (' → logprob: -15.130234718322754
    4. 'range' → logprob: -15.130234718322754
    5. '   ' → logprob: -16.880233764648438
    6. '
' → logprob: -16.880233764648438
    7. '[' → logprob: -17.005233764648438
    8. '(range' → logprob: -18.255233764648438
    9. '{' → logprob: -19.255233764648438
    10. ' ' → logprob: -19.755233764648438

Token 900: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5610407590866089
    2. ',' → logprob: -1.0610407590866089
    3. '0' → logprob: -2.5610408782958984
    4. '1' → logprob: -5.186040878295898
    5. '2' → logprob: -8.061040878295898
    6. ' ' → logprob: -9.561040878295898
    7. '   ' → logprob: -10.061040878295898
    8. ' (' → logprob: -10.811040878295898
    9. 'range' → logprob: -12.061040878295898
    10. '{' → logprob: -12.436040878295898

Token 901: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '0' → logprob: -14.500001907348633
    4. '2' → logprob: -17.625001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '(' → logprob: -18.000001907348633
    7. '[' → logprob: -20.250001907348633
    8. '```' → logprob: -20.375001907348633
    9. '
' → logprob: -20.500001907348633
    10. '3' → logprob: -21.000001907348633

Token 902: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '0' → logprob: -12.87500286102295
    3. ' ' → logprob: -15.62500286102295
    4. '   ' → logprob: -17.125001907348633
    5. '(' → logprob: -17.750001907348633
    6. '
' → logprob: -18.875001907348633
    7. '```' → logprob: -18.875001907348633
    8. '[' → logprob: -19.250001907348633
    9. '  ' → logprob: -20.125001907348633
    10. '{' → logprob: -20.875001907348633

Token 903: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.007621183525770903
    2. ',' → logprob: -5.0076212882995605
    3. '),(' → logprob: -7.1326212882995605
    4. ')' → logprob: -10.757620811462402
    5. '(' → logprob: -10.757620811462402
    6. ',(' → logprob: -10.882620811462402
    7. '(),' → logprob: -11.507620811462402
    8. '),
' → logprob: -11.632620811462402
    9. ',),' → logprob: -11.882620811462402
    10. ')),' → logprob: -11.882620811462402

Token 904: ' repeat' (ID: 22962)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001057102927006781
    2. 'range' → logprob: -7.501057147979736
    3. '0' → logprob: -7.751057147979736
    4. ' (' → logprob: -9.751056671142578
    5. '   ' → logprob: -12.001056671142578
    6. 'repeat' → logprob: -12.501056671142578
    7. '
' → logprob: -13.501056671142578
    8. ' range' → logprob: -13.626056671142578
    9. ' ' → logprob: -14.126056671142578
    10. '       ' → logprob: -14.376056671142578

Token 905: '=' (ID: 28)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40723398327827454
    2. '3' → logprob: -1.1572339534759521
    3. '=' → logprob: -3.907233953475952
    4. '=(' → logprob: -9.782234191894531
    5. '4' → logprob: -13.657234191894531
    6. '
' → logprob: -14.157234191894531
    7. 'three' → logprob: -14.157234191894531
    8. '   ' → logprob: -14.532234191894531
    9. '```' → logprob: -14.782234191894531
    10. ' (' → logprob: -14.907234191894531

Token 906: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '(' → logprob: -19.0
    4. '4' → logprob: -19.875
    5. '```' → logprob: -21.375
    6. '
' → logprob: -22.875
    7. '   ' → logprob: -23.625
    8. ')))' → logprob: -23.625
    9. '۳' → logprob: -23.625
    10. ')' → logprob: -24.5

Token 907: ')),' (ID: 12098)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.7902949452400208
    2. ')),' → logprob: -0.9152949452400208
    3. '))))' → logprob: -2.165294885635376
    4. '))),' → logprob: -4.415295124053955
    5. '))' → logprob: -4.540295124053955
    6. '),' → logprob: -4.915295124053955
    7. ')))),' → logprob: -7.915295124053955
    8. '))))
' → logprob: -8.290294647216797
    9. ')' → logprob: -8.415294647216797
    10. ')))
' → logprob: -9.790294647216797

Token 908: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0005294414004310966
    2. 'start' → logprob: -7.6255292892456055
    3. '(Mod' → logprob: -11.250529289245605
    4. 'key' → logprob: -11.500529289245605
    5. ')' → logprob: -11.750529289245605
    6. '))' → logprob: -12.375529289245605
    7. ' Mod' → logprob: -13.000529289245605
    8. '0' → logprob: -13.500529289245605
    9. 'mod' → logprob: -14.500529289245605
    10. '[]' → logprob: -14.500529289245605

Token 909: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.935296834039036e-06
    2. 'Mod' → logprob: -13.00000286102295
    3. 'int' → logprob: -14.37500286102295
    4. '=' → logprob: -18.250003814697266
    5. '(Mod' → logprob: -18.375003814697266
    6. ')' → logprob: -19.000003814697266
    7. '_int' → logprob: -19.125003814697266
    8. '(' → logprob: -19.750003814697266
    9. '```' → logprob: -19.875003814697266
    10. '   ' → logprob: -20.000003814697266

Token 910: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017466964200139046
    2. '()' → logprob: -7.001746654510498
    3. '0' → logprob: -8.001747131347656
    4. '())' → logprob: -8.126747131347656
    5. '()))' → logprob: -8.501747131347656
    6. '()));' → logprob: -15.001747131347656
    7. '()
' → logprob: -16.126747131347656
    8. ')' → logprob: -16.251747131347656
    9. '())[' → logprob: -16.251747131347656
    10. '())))' → logprob: -16.376747131347656

Token 911: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '))' → logprob: -17.25
    3. '
' → logprob: -19.125
    4. '(' → logprob: -19.25
    5. ')))' → logprob: -19.75
    6. ' ' → logprob: -19.875
    7. '1' → logprob: -20.25
    8. ')' → logprob: -20.375
    9. '   ' → logprob: -21.875
    10. '{' → logprob: -22.0

Token 912: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000797119690105319
    2. ')))' → logprob: -7.250797271728516
    3. ')' → logprob: -9.375797271728516
    4. '()))' → logprob: -13.250797271728516
    5. '))
' → logprob: -15.000797271728516
    6. '))))' → logprob: -15.625797271728516
    7. ' ))' → logprob: -16.500797271728516
    8. ').' → logprob: -17.375797271728516
    9. '));' → logprob: -17.875797271728516
    10. '}))' → logprob: -18.500797271728516

Token 913: 'resolve' (ID: 31567)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 914: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 912
Tokens correctement prédits (1ère position, stricte): 367
Tokens correctement prédits (1ère position, avec adaptation): 404
Tokens correctement prédits (top 10): 762
Précision stricte (1ère position): 40.24%
Précision adaptée (1ère position): 44.30%
Précision (top 10): 83.55%
================================================================================
