================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur de saisir un nombre entier.
# La fonction input() lit une ligne entrée par l'utilisateur sous forme de chaîne de caractères.
# La fonction int() convertit cette chaîne en entier.
n = int(input())

# Lire une ligne de nombres entiers séparés par des espaces depuis l'entrée utilisateur.
# input() retourne la ligne sous forme de chaîne de caractères.
# split() divise la chaîne en une liste de sous-chaînes selon les espaces.
# map(int, ...) applique la fonction int() à chaque sous-chaîne, les convertissant en entiers.
# list(...) convertit le map en une liste d'entiers.
c = list(map(int, input().split()))

# Définir la constante mod, qui servira à effectuer des opérations modulo un grand nombre premier pour éviter les débordements d'entiers.
mod = 10**9 + 7

# Trier la liste c en ordre décroissant.
# sort() trie la liste sur place.
# reverse=True spécifie de trier du plus grand au plus petit.
c.sort(reverse=True)

# Initialiser la variable de réponse à 0. Elle contiendra le résultat final de nos calculs.
ans = 0

# Boucler sur la liste c pour calculer une somme pondérée.
# enumerate(c) donne à chaque itération un couple (k, num)
# où k est l'indice dans la liste (commençant à 0)
# et num est la valeur de l'élément à cet indice.
for k, num in enumerate(c):
    # Ajouter à ans le produit de (k + 2) et num.
    # (k + 2) augmente de 2 à chaque élément, car k commence à 0.
    ans += (k + 2) * num
    # Ensuite, prendre le reste modulo mod pour éviter les débordements.
    ans %= mod

# Répéter une opération un certain nombre de fois.
# range(2 * n - 2) génère une séquence allant de 0 à (2 * n - 2) - 1.
for _ in range(2 * n - 2):
    # Multiplier ans par 2.
    ans *= 2
    # Prendre le résultat modulo mod pour rester dans les limites autorisées et éviter les grands nombres.
    ans %= mod

# Afficher le résultat final.
# print() affiche la valeur de ans dans la sortie standard.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10995493829250336
    2. ' ' → logprob: -2.859954833984375
    3. ':' → logprob: -4.234954833984375
    4. '```' → logprob: -4.984954833984375
    5. ' à' → logprob: -5.484954833984375
    6. ''' → logprob: -5.484954833984375
    7. ' d' → logprob: -6.109954833984375
    8. ' de' → logprob: -6.234954833984375
    9. ' a' → logprob: -6.609954833984375
    10. 's' → logprob: -6.609954833984375

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0597686730325222
    2. ' l' → logprob: -2.9347686767578125
    3. 'user' → logprob: -5.6847686767578125
    4. 'util' → logprob: -7.0597686767578125
    5. ' user' → logprob: -8.059768676757812
    6. ' utilisateur' → logprob: -9.434768676757812
    7. ' ' → logprob: -10.309768676757812
    8. 'un' → logprob: -10.559768676757812
    9. ''utilisateur' → logprob: -10.809768676757812
    10. 'la' → logprob: -10.934768676757812

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.7159048318862915
    2. 'u' → logprob: -1.5909048318862915
    3. ''' → logprob: -2.215904712677002
    4. 'a' → logprob: -2.340904712677002
    5. 'util' → logprob: -2.715904712677002
    6. ' utilisateur' → logprob: -4.465904712677002
    7. '_' → logprob: -4.590904712677002
    8. '’utilisateur' → logprob: -5.215904712677002
    9. ' ' → logprob: -6.340904712677002
    10. 'e' → logprob: -6.715904712677002

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -1.2607080936431885
    2. 'input' → logprob: -1.5107080936431885
    3. 'name' → logprob: -1.6357080936431885
    4. '_' → logprob: -2.3857080936431885
    5. 'n' → logprob: -3.0107080936431885
    6. 's' → logprob: -3.2607080936431885
    7. '=' → logprob: -4.135707855224609
    8. '#' → logprob: -4.385707855224609
    9. 'user' → logprob: -4.635707855224609
    10. '`' → logprob: -4.885707855224609

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.034014247357845306
    2. ' saisir' → logprob: -4.0340142250061035
    3. 'entr' → logprob: -4.5340142250061035
    4. 'r' → logprob: -6.0340142250061035
    5. '```' → logprob: -7.4090142250061035
    6. 'contin' → logprob: -7.5340142250061035
    7. '#' → logprob: -8.034014701843262
    8. ' entrer' → logprob: -8.534014701843262
    9. 'entrée' → logprob: -8.909014701843262
    10. 'input' → logprob: -9.034014701843262

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.037072207778692245
    2. '_' → logprob: -3.41207218170166
    3. ''' → logprob: -6.66207218170166
    4. 's' → logprob: -7.41207218170166
    5. ' ' → logprob: -8.16207218170166
    6. '```' → logprob: -8.91207218170166
    7. 'u' → logprob: -9.03707218170166
    8. ' :' → logprob: -9.16207218170166
    9. ' un' → logprob: -9.16207218170166
    10. ',' → logprob: -9.28707218170166

Token 9: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.13495661318302155
    2. 'texte' → logprob: -2.5099565982818604
    3. ' nombre' → logprob: -3.8849565982818604
    4. 'nom' → logprob: -4.2599568367004395
    5. 'e' → logprob: -6.5099568367004395
    6. 'mot' → logprob: -6.8849568367004395
    7. 'string' → logprob: -7.0099568367004395
    8. 'message' → logprob: -7.1349568367004395
    9. 's' → logprob: -7.2599568367004395
    10. 'n' → logprob: -7.2599568367004395

Token 10: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02875162474811077
    2. 'nombre' → logprob: -4.528751850128174
    3. ' ' → logprob: -5.778751850128174
    4. 'x' → logprob: -5.778751850128174
    5. '\n' → logprob: -5.778751850128174
    6. '_' → logprob: -6.028751850128174
    7. '```' → logprob: -6.403751850128174
    8. '`' → logprob: -7.153751850128174
    9. '\' → logprob: -7.278751850128174
    10. 'input' → logprob: -7.403751850128174

Token 11: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008944142609834671
    2. 'nombre' → logprob: -5.758944034576416
    3. 'x' → logprob: -6.258944034576416
    4. '\' → logprob: -7.008944034576416
    5. '\n' → logprob: -7.258944034576416
    6. 'i' → logprob: -7.633944034576416
    7. 'input' → logprob: -8.008944511413574
    8. '`' → logprob: -8.133944511413574
    9. '```' → logprob: -8.258944511413574
    10. '#' → logprob: -8.633944511413574

Token 12: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016554387286305428
    2. '\' → logprob: -5.391554355621338
    3. '\n' → logprob: -5.391554355621338
    4. 'nombre' → logprob: -5.641554355621338
    5. 'x' → logprob: -6.266554355621338
    6. '```' → logprob: -7.516554355621338
    7. 'i' → logprob: -8.391554832458496
    8. '`' → logprob: -8.516554832458496
    9. 'input' → logprob: -9.016554832458496
    10. '_' → logprob: -9.016554832458496

Token 13: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2931271195411682
    2. 'nombre' → logprob: -1.4181270599365234
    3. ' nombre' → logprob: -5.793127059936523
    4. 'number' → logprob: -5.918127059936523
    5. 'num' → logprob: -6.543127059936523
    6. 'x' → logprob: -6.793127059936523
    7. 'ent' → logprob: -6.918127059936523
    8. 's' → logprob: -7.293127059936523
    9. ' n' → logprob: -7.793127059936523
    10. '#' → logprob: -7.793127059936523

Token 14: ' fonction' (ID: 17610)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.10047052055597305
    2. 'n' → logprob: -2.600470542907715
    3. 'num' → logprob: -4.850470542907715
    4. ' nombre' → logprob: -5.475470542907715
    5. 'number' → logprob: -5.725470542907715
    6. 's' → logprob: -5.975470542907715
    7. 'nb' → logprob: -7.100470542907715
    8. 'def' → logprob: -7.475470542907715
    9. '#' → logprob: -7.600470542907715
    10. 'nbr' → logprob: -8.600470542907715

Token 15: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.15748855471611023
    2. 'def' → logprob: -2.5324885845184326
    3. 'input' → logprob: -2.7824885845184326
    4. ' def' → logprob: -5.6574883460998535
    5. 's' → logprob: -8.032488822937012
    6. ' suivante' → logprob: -8.782488822937012
    7. '=input' → logprob: -9.282488822937012
    8. '_input' → logprob: -9.907488822937012
    9. '(input' → logprob: -10.282488822937012
    10. ' est' → logprob: -10.282488822937012

Token 16: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012237003829795867
    2. '()' → logprob: -9.8751220703125
    3. '('' → logprob: -10.3751220703125
    4. '("' → logprob: -11.3751220703125
    5. '(
' → logprob: -11.5001220703125
    6. 's' → logprob: -12.1251220703125
    7. ' (' → logprob: -13.1251220703125
    8. ')' → logprob: -13.2501220703125
    9. '("""' → logprob: -13.2501220703125
    10. '("("' → logprob: -13.3751220703125

Token 17: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006640645442530513
    2. '(
' → logprob: -8.625663757324219
    3. '('' → logprob: -9.375663757324219
    4. '()' → logprob: -9.500663757324219
    5. ' ' → logprob: -9.625663757324219
    6. 's' → logprob: -9.625663757324219
    7. ' (' → logprob: -9.875663757324219
    8. '("' → logprob: -10.250663757324219
    9. '#' → logprob: -10.375663757324219
    10. ')' → logprob: -11.000663757324219

Token 18: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34439000487327576
    2. ' une' → logprob: -1.9693900346755981
    3. '(' → logprob: -2.3443899154663086
    4. ' la' → logprob: -3.8443899154663086
    5. ' l' → logprob: -4.469389915466309
    6. '('' → logprob: -5.344389915466309
    7. 's' → logprob: -5.594389915466309
    8. 'une' → logprob: -5.969389915466309
    9. 'l' → logprob: -6.219389915466309
    10. '("' → logprob: -6.219389915466309

Token 19: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.20189282298088074
    2. ' valeur' → logprob: -2.076892852783203
    3. ' ' → logprob: -3.826892852783203
    4. ' chaine' → logprob: -4.201892852783203
    5. ' ligne' → logprob: -4.951892852783203
    6. 'entrée' → logprob: -5.701892852783203
    7. 'chaine' → logprob: -5.826892852783203
    8. ' entrée' → logprob: -6.076892852783203
    9. 's' → logprob: -6.826892852783203
    10. ' string' → logprob: -7.326892852783203

Token 20: ' entrée' (ID: 95590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.038063064217567444
    2. '_' → logprob: -4.413063049316406
    3. ' )' → logprob: -4.913063049316406
    4. ' =' → logprob: -5.913063049316406
    5. ')' → logprob: -6.038063049316406
    6. 's' → logprob: -6.288063049316406
    7. ' de' → logprob: -6.538063049316406
    8. '.' → logprob: -6.663063049316406
    9. ',' → logprob: -6.913063049316406
    10. 'n' → logprob: -7.163063049316406

Token 21: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.3733629584312439
    2. ' ' → logprob: -1.8733630180358887
    3. 'par' → logprob: -2.7483630180358887
    4. 's' → logprob: -3.6233630180358887
    5. ',' → logprob: -4.498363018035889
    6. ' au' → logprob: -4.498363018035889
    7. 'e' → logprob: -4.748363018035889
    8. '.' → logprob: -4.998363018035889
    9. ' ,' → logprob: -5.748363018035889
    10. ' =' → logprob: -5.873363018035889

Token 22: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.029988130554556847
    2. ' l' → logprob: -3.5299880504608154
    3. '	l' → logprob: -8.654988288879395
    4. 'util' → logprob: -10.904988288879395
    5. ' ' → logprob: -12.029988288879395
    6. 'user' → logprob: -12.029988288879395
    7. 'def' → logprob: -12.404988288879395
    8. 'lap' → logprob: -12.779988288879395
    9. ''utilisateur' → logprob: -13.029988288879395
    10. 'lot' → logprob: -13.279988288879395

Token 23: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.0048648882657289505
    2. ''' → logprob: -6.379864692687988
    3. ''util' → logprob: -6.754864692687988
    4. '’utilisateur' → logprob: -7.004864692687988
    5. 'util' → logprob: -7.379864692687988
    6. 'u' → logprob: -8.129864692687988
    7. ''us' → logprob: -9.379864692687988
    8. ''user' → logprob: -10.379864692687988
    9. ''u' → logprob: -11.004864692687988
    10. '#' → logprob: -12.129864692687988

Token 24: ' sous' (ID: 14487)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015430137515068054
    2. 'nombre' → logprob: -4.390429973602295
    3. '#' → logprob: -6.515429973602295
    4. 'x' → logprob: -7.765429973602295
    5. ' ' → logprob: -8.765430450439453
    6. ',' → logprob: -9.015430450439453
    7. 'u' → logprob: -9.515430450439453
    8. 'num' → logprob: -9.640430450439453
    9. ' nombre' → logprob: -9.765430450439453
    10. '```' → logprob: -9.765430450439453

Token 25: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.4171002507209778
    2. 'forme' → logprob: -1.167100191116333
    3. 'form' → logprob: -3.542100191116333
    4. 'la' → logprob: -8.042099952697754
    5. 'forma' → logprob: -8.292099952697754
    6. 'chaine' → logprob: -8.917099952697754
    7. 'format' → logprob: -10.417099952697754
    8. ' form' → logprob: -10.542099952697754
    9. 'ent' → logprob: -11.042099952697754
    10. '#' → logprob: -11.792099952697754

Token 26: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.08166082948446274
    2. 'd' → logprob: -2.706660747528076
    3. ' de' → logprob: -4.706660747528076
    4. 'de' → logprob: -6.081660747528076
    5. 's' → logprob: -8.331661224365234
    6. 'str' → logprob: -11.331661224365234
    7. ''d' → logprob: -11.581661224365234
    8. 'n' → logprob: -12.081661224365234
    9. '`' → logprob: -12.206661224365234
    10. ')' → logprob: -12.206661224365234

Token 27: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.4219690263271332
    2. 'chaine' → logprob: -1.4219690561294556
    3. 'cha' → logprob: -2.421968936920166
    4. 'texte' → logprob: -5.046968936920166
    5. ' chaine' → logprob: -5.171968936920166
    6. 's' → logprob: -7.046968936920166
    7. 'string' → logprob: -7.546968936920166
    8. ' texte' → logprob: -8.296969413757324
    9. 'str' → logprob: -8.671969413757324
    10. ' chaînes' → logprob: -9.046969413757324

Token 28: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.27657610177993774
    2. 'nombre' → logprob: -2.276576042175293
    3. ' ' → logprob: -3.526576042175293
    4. 'de' → logprob: -3.651576042175293
    5. ',' → logprob: -4.401576042175293
    6. '#' → logprob: -4.526576042175293
    7. 'num' → logprob: -4.901576042175293
    8. 's' → logprob: -5.026576042175293
    9. ')' → logprob: -5.276576042175293
    10. ' )' → logprob: -5.651576042175293

Token 29: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3147818148136139
    2. ' caractères' → logprob: -1.3147817850112915
    3. 'texte' → logprob: -7.064781665802002
    4. ' caracteres' → logprob: -8.31478214263916
    5. ' caractère' → logprob: -8.56478214263916
    6. ' caract' → logprob: -8.81478214263916
    7. '#' → logprob: -10.56478214263916
    8. 'entrée' → logprob: -11.81478214263916
    9. ' car' → logprob: -11.93978214263916
    10. 's' → logprob: -12.06478214263916

Token 30: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03020606003701687
    2. 'nombre' → logprob: -3.6552059650421143
    3. 'x' → logprob: -6.155206203460693
    4. '#' → logprob: -7.655206203460693
    5. ',' → logprob: -8.155205726623535
    6. '```' → logprob: -8.405205726623535
    7. 'ent' → logprob: -8.905205726623535
    8. '\n' → logprob: -9.155205726623535
    9. '`' → logprob: -9.155205726623535
    10. '.' → logprob: -9.405205726623535

Token 31: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07957082986831665
    2. 'nombre' → logprob: -2.579570770263672
    3. '#' → logprob: -8.454570770263672
    4. 'x' → logprob: -8.579570770263672
    5. '```' → logprob: -9.704570770263672
    6. '\n' → logprob: -9.954570770263672
    7. 'number' → logprob: -10.204570770263672
    8. 'ent' → logprob: -10.329570770263672
    9. '\' → logprob: -10.579570770263672
    10. 'num' → logprob: -10.829570770263672

Token 32: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04353322088718414
    2. 'nombre' → logprob: -3.1685333251953125
    3. 'x' → logprob: -8.418533325195312
    4. 'number' → logprob: -9.168533325195312
    5. 'num' → logprob: -9.543533325195312
    6. 'ent' → logprob: -10.293533325195312
    7. '#' → logprob: -10.293533325195312
    8. '```' → logprob: -11.043533325195312
    9. 'nom' → logprob: -11.293533325195312
    10. ' nombre' → logprob: -11.668533325195312

Token 33: ' fonction' (ID: 17610)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5906417965888977
    2. ' ' → logprob: -1.465641736984253
    3. 's' → logprob: -2.840641736984253
    4. '#' → logprob: -3.215641736984253
    5. 'nombre' → logprob: -3.215641736984253
    6. ' nombre' → logprob: -4.215641975402832
    7. ' valeur' → logprob: -4.340641975402832
    8. ' #' → logprob: -4.465641975402832
    9. ' n' → logprob: -4.590641975402832
    10. 'i' → logprob: -5.715641975402832

Token 34: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.11305921524763107
    2. 'int' → logprob: -2.2380592823028564
    3. ' input' → logprob: -8.863059043884277
    4. '=int' → logprob: -9.738059043884277
    5. 'input' → logprob: -10.863059043884277
    6. '`' → logprob: -12.488059043884277
    7. '(int' → logprob: -12.738059043884277
    8. ' `' → logprob: -12.988059043884277
    9. '```' → logprob: -13.613059043884277
    10. 'print' → logprob: -14.113059043884277

Token 35: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005675682332366705
    2. '()' → logprob: -7.500567436218262
    3. '(
' → logprob: -12.375567436218262
    4. '('' → logprob: -13.125567436218262
    5. '(...)' → logprob: -13.750567436218262
    6. '(

' → logprob: -13.750567436218262
    7. '("("' → logprob: -13.875567436218262
    8. '(convert' → logprob: -14.000567436218262
    9. ' (' → logprob: -14.375567436218262
    10. '(`' → logprob: -14.625567436218262

Token 36: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010725847678259015
    2. '()' → logprob: -7.751072406768799
    3. 'convert' → logprob: -8.876072883605957
    4. ' convert' → logprob: -9.001072883605957
    5. '(convert' → logprob: -9.376072883605957
    6. ' transforme' → logprob: -9.376072883605957
    7. ' (' → logprob: -9.501072883605957
    8. ' convertir' → logprob: -10.001072883605957
    9. ')' → logprob: -10.126072883605957
    10. '(
' → logprob: -11.251072883605957

Token 37: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.005241583567112684
    2. 'i' → logprob: -5.505241394042969
    3. ' it' → logprob: -8.505241394042969
    4. 'er' → logprob: -8.630241394042969
    5. 'ert' → logprob: -8.630241394042969
    6. 'ir' → logprob: -9.005241394042969
    7. '()' → logprob: -9.130241394042969
    8. 'irt' → logprob: -9.755241394042969
    9. 'iert' → logprob: -9.755241394042969
    10. 'ît' → logprob: -9.880241394042969

Token 38: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003100791363976896
    2. ' (' → logprob: -8.750309944152832
    3. '()' → logprob: -10.000309944152832
    4. ' ' → logprob: -10.000309944152832
    5. '(
' → logprob: -10.875309944152832
    6. ')' → logprob: -12.125309944152832
    7. 'une' → logprob: -12.500309944152832
    8. 'l' → logprob: -12.750309944152832
    9. ' la' → logprob: -12.750309944152832
    10. '(int' → logprob: -13.125309944152832

Token 39: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6822659969329834
    2. '(' → logprob: -0.9322659969329834
    3. ' ' → logprob: -2.9322659969329834
    4. ' (' → logprob: -3.6822659969329834
    5. ' chaine' → logprob: -4.6822662353515625
    6. 'chaine' → logprob: -5.4322662353515625
    7. '()' → logprob: -6.4322662353515625
    8. ' valeur' → logprob: -6.5572662353515625
    9. ' )' → logprob: -7.0572662353515625
    10. ' string' → logprob: -7.0572662353515625

Token 40: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008409536094404757
    2. '()' → logprob: -8.25084114074707
    3. ')' → logprob: -9.12584114074707
    4. 's' → logprob: -9.12584114074707
    5. '(
' → logprob: -9.62584114074707
    6. ''' → logprob: -10.12584114074707
    7. '('' → logprob: -10.12584114074707
    8. '```' → logprob: -10.12584114074707
    9. '#' → logprob: -10.62584114074707
    10. ' (' → logprob: -10.62584114074707

Token 41: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.04552629217505455
    2. ' ' → logprob: -3.5455262660980225
    3. ' entier' → logprob: -4.545526504516602
    4. 'un' → logprob: -5.920526504516602
    5. ' nombre' → logprob: -6.420526504516602
    6. ' une' → logprob: -8.170526504516602
    7. 'ent' → logprob: -8.670526504516602
    8. 'nombre' → logprob: -9.920526504516602
    9. ' int' → logprob: -9.920526504516602
    10. ' ' → logprob: -10.670526504516602

Token 42: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06061452254652977
    2. 'nombre' → logprob: -2.935614585876465
    3. 'x' → logprob: -5.935614585876465
    4. '#' → logprob: -6.685614585876465
    5. '```' → logprob: -7.435614585876465
    6. 's' → logprob: -8.435614585876465
    7. 'u' → logprob: -8.685614585876465
    8. '\' → logprob: -8.935614585876465
    9. '\n' → logprob: -9.185614585876465
    10. 'a' → logprob: -9.310614585876465

Token 43: 'n' (ID: 77)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.57711261510849
    2. 'n' → logprob: -0.82711261510849
    3. 'x' → logprob: -7.702112674713135
    4. 'number' → logprob: -8.202112197875977
    5. 'num' → logprob: -8.827112197875977
    6. '```' → logprob: -8.827112197875977
    7. 'ent' → logprob: -9.952112197875977
    8. '#' → logprob: -10.702112197875977
    9. 'numero' → logprob: -10.702112197875977
    10. ' nombre' → logprob: -11.202112197875977

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031230444088578224
    2. '=' → logprob: -4.406230449676514
    3. ' ' → logprob: -5.156230449676514
    4. 'umber' → logprob: -5.156230449676514
    5. 'ombre' → logprob: -5.406230449676514
    6. 'um' → logprob: -6.156230449676514
    7. '_' → logprob: -8.781229972839355
    8. 'u' → logprob: -9.656229972839355
    9. '  ' → logprob: -10.531229972839355
    10. ' ' → logprob: -10.531229972839355

Token 45: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05546686798334122
    2. 'int' → logprob: -2.930466890335083
    3. ' input' → logprob: -7.555466651916504
    4. 'input' → logprob: -9.805466651916504
    5. '=int' → logprob: -13.055466651916504
    6. ' ' → logprob: -13.305466651916504
    7. ' ' → logprob: -13.930466651916504
    8. '<int' → logprob: -14.805466651916504
    9. ' in' → logprob: -15.180466651916504
    10. '[int' → logprob: -15.180466651916504

Token 46: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2519579827785492
    2. '(' → logprob: -1.5019580125808716
    3. ' (' → logprob: -11.501957893371582
    4. 'input' → logprob: -11.876957893371582
    5. '()' → logprob: -12.626957893371582
    6. '('' → logprob: -12.626957893371582
    7. '(
' → logprob: -13.376957893371582
    8. '(user' → logprob: -13.376957893371582
    9. '(in' → logprob: -14.751957893371582
    10. '(

' → logprob: -14.876957893371582

Token 47: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034674253314733505
    2. '()' → logprob: -3.7846741676330566
    3. '('' → logprob: -4.784674167633057
    4. '())' → logprob: -6.159674167633057
    5. '("("' → logprob: -8.159674644470215
    6. '("' → logprob: -8.409674644470215
    7. ')' → logprob: -8.659674644470215
    8. '(""))' → logprob: -9.659674644470215
    9. '("")' → logprob: -9.784674644470215
    10. '(">' → logprob: -10.284674644470215

Token 48: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2128459215164185
    2. ' ' → logprob: -1.2128459215164185
    3. 'if' → logprob: -1.7128459215164185
    4. ' if' → logprob: -2.962845802307129
    5. '#' → logprob: -3.087845802307129
    6. '+' → logprob: -3.462845802307129
    7. 'n' → logprob: -3.712845802307129
    8. ',' → logprob: -4.462845802307129
    9. '>' → logprob: -4.712845802307129
    10. '*' → logprob: -4.962845802307129

Token 49: ' Lire' (ID: 57624)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03362540900707245
    2. 'if' → logprob: -3.783625364303589
    3. '#' → logprob: -5.283625602722168
    4. ' Si' → logprob: -6.408625602722168
    5. ' #' → logprob: -6.533625602722168
    6. ' for' → logprob: -7.283625602722168
    7. 'Si' → logprob: -7.908625602722168
    8. ' ' → logprob: -8.033625602722168
    9. ' si' → logprob: -8.783625602722168
    10. 'factor' → logprob: -8.908625602722168

Token 50: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43404969573020935
    2. ' un' → logprob: -1.9340497255325317
    3. ' ' → logprob: -2.309049606323242
    4. '(' → logprob: -2.684049606323242
    5. ' une' → logprob: -4.309049606323242
    6. ' la' → logprob: -5.434049606323242
    7. ' (' → logprob: -5.809049606323242
    8. ')' → logprob: -6.059049606323242
    9. '("' → logprob: -6.184049606323242
    10. ',' → logprob: -6.309049606323242

Token 51: ' ligne' (ID: 19583)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8695546388626099
    2. ' ' → logprob: -1.9945546388626099
    3. ' deuxième' → logprob: -1.9945546388626099
    4. ' second' → logprob: -2.2445545196533203
    5. 'nombre' → logprob: -2.4945545196533203
    6. ' nombre' → logprob: -2.6195545196533203
    7. 'de' → logprob: -3.2445545196533203
    8. 'e' → logprob: -3.2445545196533203
    9. ' autre' → logprob: -3.3695545196533203
    10. 'aut' → logprob: -3.4945545196533203

Token 52: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001991205383092165
    2. ')' → logprob: -7.376991271972656
    3. '("")' → logprob: -7.751991271972656
    4. '().' → logprob: -8.251991271972656
    5. '())' → logprob: -8.626991271972656
    6. '.' → logprob: -9.376991271972656
    7. '#' → logprob: -9.376991271972656
    8. ' ()' → logprob: -9.626991271972656
    9. '()

' → logprob: -10.251991271972656
    10. '()
' → logprob: -10.251991271972656

Token 53: ' nombres' (ID: 76205)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'texte' → logprob: -1.062839150428772
    2. ' texte' → logprob: -1.312839150428772
    3. ' code' → logprob: -1.437839150428772
    4. 'code' → logprob: -2.1878390312194824
    5. ' commentaire' → logprob: -4.687839031219482
    6. 's' → logprob: -4.812839031219482
    7. 'comment' → logprob: -5.562839031219482
    8. ' commentaires' → logprob: -6.437839031219482
    9. 'l' → logprob: -6.687839031219482
    10. 'n' → logprob: -6.812839031219482

Token 54: ' ent' (ID: 1121)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016502676531672478
    2. '().' → logprob: -4.891502857208252
    3. '(' → logprob: -5.391502857208252
    4. ' ()' → logprob: -6.641502857208252
    5. ' =' → logprob: -6.766502857208252
    6. 's' → logprob: -7.141502857208252
    7. '.' → logprob: -8.141502380371094
    8. ' (' → logprob: -9.266502380371094
    9. '.split' → logprob: -9.641502380371094
    10. '()[' → logprob: -9.891502380371094

Token 55: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.001999534899368882
    2. 'ières' → logprob: -6.626999378204346
    3. 'i' → logprob: -7.876999378204346
    4. 'ers' → logprob: -9.001999855041504
    5. 'ière' → logprob: -9.626999855041504
    6. 'ier' → logprob: -10.376999855041504
    7. 'er' → logprob: -10.876999855041504
    8. 'érés' → logprob: -11.251999855041504
    9. '```' → logprob: -11.626999855041504
    10. 'ires' → logprob: -11.751999855041504

Token 56: ' sépar' (ID: 97160)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20079953968524933
    2. 's' → logprob: -1.950799584388733
    3. '()' → logprob: -4.325799465179443
    4. '=' → logprob: -4.325799465179443
    5. ' ' → logprob: -5.200799465179443
    6. '.' → logprob: -6.200799465179443
    7. '_' → logprob: -7.075799465179443
    8. 'n' → logprob: -7.325799465179443
    9. '_list' → logprob: -7.450799465179443
    10. ' .' → logprob: -7.575799465179443

Token 57: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.023022297769784927
    2. 'é' → logprob: -4.148022174835205
    3. 'ée' → logprob: -5.023022174835205
    4. 'es' → logprob: -8.773022651672363
    5. 'ées' → logprob: -9.148022651672363
    6. ' par' → logprob: -9.773022651672363
    7. 'par' → logprob: -10.898022651672363
    8. 's' → logprob: -11.023022651672363
    9. 'e' → logprob: -11.398022651672363
    10. 'ès' → logprob: -12.148022651672363

Token 58: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.04159195348620415
    2. 'par' → logprob: -3.5415918827056885
    3. 's' → logprob: -5.166592121124268
    4. '<|end|>' → logprob: -6.041592121124268
    5. 'es' → logprob: -6.416592121124268
    6. ' espaces' → logprob: -8.04159164428711
    7. 'space' → logprob: -8.54159164428711
    8. '_par' → logprob: -8.91659164428711
    9. 'e' → logprob: -8.91659164428711
    10. ' ' → logprob: -9.04159164428711

Token 59: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6089808344841003
    2. ' espaces' → logprob: -1.2339808940887451
    3. ' espace' → logprob: -2.608980894088745
    4. ''espace' → logprob: -3.483980894088745
    5. ' un' → logprob: -3.858980894088745
    6. ' ' → logprob: -4.733980655670166
    7. 'des' → logprob: -4.858980655670166
    8. 'es' → logprob: -4.858980655670166
    9. ''esp' → logprob: -5.483980655670166
    10. 'un' → logprob: -5.983980655670166

Token 60: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.36081939935684204
    2. 'es' → logprob: -1.8608193397521973
    3. ' espace' → logprob: -2.6108193397521973
    4. 'esp' → logprob: -3.6108193397521973
    5. ''espace' → logprob: -3.7358193397521973
    6. ' ' → logprob: -5.110819339752197
    7. ''esp' → logprob: -5.110819339752197
    8. 's' → logprob: -5.735819339752197
    9. 'spaces' → logprob: -6.610819339752197
    10. 'space' → logprob: -6.735819339752197

Token 61: ' depuis' (ID: 16277)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10857544094324112
    2. 'numbers' → logprob: -3.2335753440856934
    3. 'n' → logprob: -3.4835753440856934
    4. ' ' → logprob: -4.483575344085693
    5. ' =' → logprob: -5.858575344085693
    6. 'l' → logprob: -6.108575344085693
    7. ' line' → logprob: -6.233575344085693
    8. ' s' → logprob: -6.608575344085693
    9. 'nums' → logprob: -6.608575344085693
    10. 'ent' → logprob: -6.733575344085693

Token 62: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5147591233253479
    2. 'input' → logprob: -1.5147590637207031
    3. 'l' → logprob: -2.014759063720703
    4. ' l' → logprob: -3.514759063720703
    5. 'une' → logprob: -4.639759063720703
    6. ' une' → logprob: -5.764759063720703
    7. 'la' → logprob: -6.014759063720703
    8. '=input' → logprob: -6.514759063720703
    9. ' la' → logprob: -7.389759063720703
    10. 's' → logprob: -7.639759063720703

Token 63: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3279932737350464
    2. ''entrée' → logprob: -1.3279932737350464
    3. ''' → logprob: -5.202993392944336
    4. ''a' → logprob: -5.202993392944336
    5. 'e' → logprob: -6.577993392944336
    6. 'input' → logprob: -7.452993392944336
    7. ''utilisateur' → logprob: -7.827993392944336
    8. ''espace' → logprob: -8.452993392944336
    9. ''ent' → logprob: -8.702993392944336
    10. '''' → logprob: -8.952993392944336

Token 64: ' utilisateur' (ID: 115595)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08362138271331787
    2. 'n' → logprob: -3.2086215019226074
    3. ' s' → logprob: -4.583621501922607
    4. 'numbers' → logprob: -5.083621501922607
    5. ' n' → logprob: -5.208621501922607
    6. ' ' → logprob: -5.583621501922607
    7. ' line' → logprob: -6.083621501922607
    8. '()' → logprob: -6.458621501922607
    9. ' =' → logprob: -6.958621501922607
    10. 'input' → logprob: -6.958621501922607

Token 65: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07667190581560135
    2. 'numbers' → logprob: -3.326671838760376
    3. 'n' → logprob: -4.701672077178955
    4. 'lst' → logprob: -4.826672077178955
    5. 'l' → logprob: -5.076672077178955
    6. 'ent' → logprob: -5.576672077178955
    7. 'line' → logprob: -6.451672077178955
    8. ' s' → logprob: -6.951672077178955
    9. ' line' → logprob: -6.951672077178955
    10. ' lst' → logprob: -7.201672077178955

Token 66: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.2919512391090393
    2. 's' → logprob: -2.5419511795043945
    3. ' numbers' → logprob: -2.9169511795043945
    4. 'n' → logprob: -2.9169511795043945
    5. 'l' → logprob: -4.1669511795043945
    6. 'ent' → logprob: -4.5419511795043945
    7. 'nums' → logprob: -4.6669511795043945
    8. 'values' → logprob: -5.4169511795043945
    9. ' nombres' → logprob: -5.5419511795043945
    10. 't' → logprob: -5.9169511795043945

Token 67: ' input' (ID: 3422)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.22652088105678558
    2. ' numbers' → logprob: -2.6015207767486572
    3. 'l' → logprob: -3.1015207767486572
    4. 'lst' → logprob: -3.9765207767486572
    5. 'nums' → logprob: -4.476521015167236
    6. 'values' → logprob: -4.851521015167236
    7. 'ent' → logprob: -4.976521015167236
    8. 'line' → logprob: -5.226521015167236
    9. ' line' → logprob: -5.351521015167236
    10. 'm' → logprob: -5.476521015167236

Token 68: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2523881196975708
    2. '().' → logprob: -1.5023881196975708
    3. '())' → logprob: -7.752388000488281
    4. ' ()' → logprob: -11.377388000488281
    5. '()

' → logprob: -12.127388000488281
    6. '()
' → logprob: -12.377388000488281
    7. ')' → logprob: -13.127388000488281
    8. '(' → logprob: -14.127388000488281
    9. '()`' → logprob: -14.127388000488281
    10. '()).' → logprob: -14.127388000488281

Token 69: ' retourne' (ID: 178818)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01650361157953739
    2. '()' → logprob: -4.141503810882568
    3. '.split' → logprob: -8.01650333404541
    4. 'split' → logprob: -9.89150333404541
    5. 's' → logprob: -10.26650333404541
    6. '.' → logprob: -10.51650333404541
    7. 'spl' → logprob: -12.14150333404541
    8. ')' → logprob: -12.39150333404541
    9. '.s' → logprob: -13.01650333404541
    10. ').' → logprob: -13.26650333404541

Token 70: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.07040529698133469
    2. ' la' → logprob: -3.1954052448272705
    3. ' ' → logprob: -4.19540548324585
    4. ' input' → logprob: -5.57040548324585
    5. ' a' → logprob: -5.82040548324585
    6. 'une' → logprob: -6.57040548324585
    7. ' un' → logprob: -7.19540548324585
    8. 's' → logprob: -7.44540548324585
    9. ' l' → logprob: -7.94540548324585
    10. ' n' → logprob: -8.070405006408691

Token 71: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.17687037587165833
    2. 'chaine' → logprob: -2.051870346069336
    3. 'cha' → logprob: -3.801870346069336
    4. 'ligne' → logprob: -5.676870346069336
    5. ' ligne' → logprob: -5.801870346069336
    6. 's' → logprob: -6.051870346069336
    7. ' chaine' → logprob: -6.301870346069336
    8. 'string' → logprob: -7.926870346069336
    9. 'str' → logprob: -9.051870346069336
    10. ' string' → logprob: -10.051870346069336

Token 72: ' sous' (ID: 14487)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.2706919312477112
    2. '().' → logprob: -1.6456918716430664
    3. '.' → logprob: -3.8956918716430664
    4. 's' → logprob: -4.895691871643066
    5. '()' → logprob: -4.895691871643066
    6. '.strip' → logprob: -6.145691871643066
    7. ' .' → logprob: -6.270691871643066
    8. 'split' → logprob: -6.520691871643066
    9. '.s' → logprob: -6.645691871643066
    10. ' =' → logprob: -7.395691871643066

Token 73: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.02686573565006256
    2. 'forme' → logprob: -3.7768657207489014
    3. 'form' → logprob: -5.7768659591674805
    4. ' form' → logprob: -8.15186595916748
    5. 'forma' → logprob: -8.77686595916748
    6. 'chaine' → logprob: -10.77686595916748
    7. 'la' → logprob: -10.90186595916748
    8. 'format' → logprob: -11.90186595916748
    9. 'une' → logprob: -12.15186595916748
    10. ' forma' → logprob: -12.65186595916748

Token 74: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.024884182959794998
    2. ' de' → logprob: -4.149884223937988
    3. 'd' → logprob: -4.774884223937988
    4. 'de' → logprob: -8.024884223937988
    5. ' of' → logprob: -10.899884223937988
    6. ''' → logprob: -12.274884223937988
    7. '<|end|>' → logprob: -12.274884223937988
    8. 's' → logprob: -12.399884223937988
    9. '()' → logprob: -12.774884223937988
    10. 'def' → logprob: -13.524884223937988

Token 75: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.6307756304740906
    2. ' chaîne' → logprob: -0.8807756304740906
    3. 'cha' → logprob: -3.1307756900787354
    4. ' chaine' → logprob: -5.130775451660156
    5. 'str' → logprob: -6.505775451660156
    6. 'string' → logprob: -7.380775451660156
    7. 'une' → logprob: -7.630775451660156
    8. 's' → logprob: -8.130775451660156
    9. ' chaînes' → logprob: -8.505775451660156
    10. 'texte' → logprob: -8.880775451660156

Token 76: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26703575253486633
    2. '().' → logprob: -1.767035722732544
    3. 's' → logprob: -3.017035722732544
    4. '.' → logprob: -5.392035961151123
    5. '(' → logprob: -5.642035961151123
    6. '.split' → logprob: -5.892035961151123
    7. '.s' → logprob: -6.767035961151123
    8. ')' → logprob: -7.392035961151123
    9. '()
' → logprob: -8.017035484313965
    10. ' ()' → logprob: -8.392035484313965

Token 77: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.23868784308433533
    2. 'car' → logprob: -1.6136878728866577
    3. 'chaine' → logprob: -5.238687992095947
    4. ' chaîne' → logprob: -5.238687992095947
    5. 'cha' → logprob: -7.488687992095947
    6. ' caractère' → logprob: -7.613687992095947
    7. ' caract' → logprob: -7.863687992095947
    8. ' chaînes' → logprob: -8.113687515258789
    9. ' car' → logprob: -8.488687515258789
    10. 'texte' → logprob: -8.613687515258789

Token 78: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03368962183594704
    2. 'n' → logprob: -3.9086897373199463
    3. '.split' → logprob: -5.283689498901367
    4. 'numbers' → logprob: -6.533689498901367
    5. 'split' → logprob: -7.033689498901367
    6. 't' → logprob: -7.658689498901367
    7. 'spl' → logprob: -7.658689498901367
    8. '.s' → logprob: -7.658689498901367
    9. '()' → logprob: -7.783689498901367
    10. 'l' → logprob: -7.908689498901367

Token 79: '#' (ID: 2)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.012511134147644
    2. 's' → logprob: -1.637511134147644
    3. 'numbers' → logprob: -2.0125112533569336
    4. 'n' → logprob: -2.2625112533569336
    5. 'a' → logprob: -2.7625112533569336
    6. 't' → logprob: -3.1375112533569336
    7. 'e' → logprob: -4.012511253356934
    8. 'v' → logprob: -4.012511253356934
    9. ' numbers' → logprob: -4.262511253356934
    10. 'x' → logprob: -4.512511253356934

Token 80: ' split' (ID: 12648)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.147054523229599
    2. 'l' → logprob: -3.397054433822632
    3. ' numbers' → logprob: -3.397054433822632
    4. 'nums' → logprob: -4.022054672241211
    5. 'values' → logprob: -4.272054672241211
    6. 'lst' → logprob: -4.522054672241211
    7. 'line' → logprob: -5.647054672241211
    8. 's' → logprob: -5.647054672241211
    9. 'a' → logprob: -5.772054672241211
    10. 'ent' → logprob: -5.897054672241211

Token 81: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03378124535083771
    2. '(' → logprob: -3.4087812900543213
    3. '('' → logprob: -9.283781051635742
    4. '().' → logprob: -10.908781051635742
    5. '("' → logprob: -11.408781051635742
    6. ' ()' → logprob: -12.408781051635742
    7. '("("' → logprob: -13.408781051635742
    8. '()

' → logprob: -13.783781051635742
    9. '（）' → logprob: -14.283781051635742
    10. '()]' → logprob: -14.283781051635742

Token 82: ' div' (ID: 4223)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.022580785676836967
    2. '(' → logprob: -3.897580862045288
    3. '().' → logprob: -7.147580623626709
    4. ' ()' → logprob: -7.397580623626709
    5. '('' → logprob: -7.522580623626709
    6. '("' → logprob: -10.147581100463867
    7. ' (' → logprob: -11.272581100463867
    8. '(split' → logprob: -11.897581100463867
    9. '("""' → logprob: -12.147581100463867
    10. '())' → logprob: -12.397581100463867

Token 83: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.008696711622178555
    2. 'ide' → logprob: -4.883696556091309
    3. '```' → logprob: -8.508696556091309
    4. 'i' → logprob: -8.758696556091309
    5. '#' → logprob: -9.133696556091309
    6. ' ise' → logprob: -9.883696556091309
    7. 'ize' → logprob: -10.008696556091309
    8. '' → logprob: -10.008696556091309
    9. '' → logprob: -10.008696556091309
    10. '1' → logprob: -10.133696556091309

Token 84: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08322427421808243
    2. '('' → logprob: -2.708224296569824
    3. '(' → logprob: -4.958224296569824
    4. ' ()' → logprob: -5.333224296569824
    5. '("' → logprob: -7.583224296569824
    6. ' la' → logprob: -8.458224296569824
    7. ' ' → logprob: -8.833224296569824
    8. ' (' → logprob: -8.958224296569824
    9. ''' → logprob: -9.333224296569824
    10. ' )' → logprob: -10.083224296569824

Token 85: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.0496961884200573
    2. 'chaine' → logprob: -3.674696207046509
    3. 'cha' → logprob: -4.42469596862793
    4. ' chaine' → logprob: -5.29969596862793
    5. ' ligne' → logprob: -6.29969596862793
    6. 's' → logprob: -6.67469596862793
    7. 'ligne' → logprob: -6.67469596862793
    8. ' string' → logprob: -7.17469596862793
    9. 'string' → logprob: -8.42469596862793
    10. ' cha' → logprob: -8.54969596862793

Token 86: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03895915299654007
    2. '('' → logprob: -3.288959264755249
    3. '(' → logprob: -7.78895902633667
    4. ' ()' → logprob: -8.538959503173828
    5. '("' → logprob: -8.663959503173828
    6. ''' → logprob: -10.538959503173828
    7. 'par' → logprob: -11.288959503173828
    8. 's' → logprob: -11.663959503173828
    9. '[' → logprob: -11.663959503173828
    10. '[]' → logprob: -12.163959503173828

Token 87: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.12988342344760895
    2. ' espaces' → logprob: -3.1298835277557373
    3. '['' → logprob: -4.004883289337158
    4. ' un' → logprob: -4.254883289337158
    5. 'une' → logprob: -4.254883289337158
    6. ' ['' → logprob: -4.879883289337158
    7. ' des' → logprob: -5.254883289337158
    8. ' liste' → logprob: -6.129883289337158
    9. '[]' → logprob: -6.379883289337158
    10. ' espace' → logprob: -6.504883289337158

Token 88: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.01690279319882393
    2. 'liste' → logprob: -4.141902923583984
    3. ' list' → logprob: -8.141902923583984
    4. 's' → logprob: -8.391902923583984
    5. 'list' → logprob: -8.391902923583984
    6. ' listes' → logprob: -10.141902923583984
    7. 'Liste' → logprob: -10.266902923583984
    8. ' Liste' → logprob: -11.016902923583984
    9. ' chaîne' → logprob: -11.016902923583984
    10. 'chaine' → logprob: -13.266902923583984

Token 89: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18228191137313843
    2. '[' → logprob: -3.182281970977783
    3. ' des' → logprob: -4.307281970977783
    4. ' (' → logprob: -4.432281970977783
    5. ' ' → logprob: -4.557281970977783
    6. '<|end|>' → logprob: -4.557281970977783
    7. '[]' → logprob: -4.682281970977783
    8. ')' → logprob: -4.932281970977783
    9. ' ()' → logprob: -5.057281970977783
    10. ' )' → logprob: -5.057281970977783

Token 90: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.005762757733464241
    2. 'cha' → logprob: -5.755762577056885
    3. ' chain' → logprob: -7.380762577056885
    4. 'chain' → logprob: -7.505762577056885
    5. ' chaîne' → logprob: -7.880762577056885
    6. 'str' → logprob: -8.380763053894043
    7. 's' → logprob: -8.505763053894043
    8. ' strings' → logprob: -8.755763053894043
    9. 'strings' → logprob: -9.380763053894043
    10. ' cha' → logprob: -9.505763053894043

Token 91: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.009097613394260406
    2. 'cha' → logprob: -5.634097576141357
    3. 'chain' → logprob: -5.884097576141357
    4. ' chain' → logprob: -7.259097576141357
    5. 'strings' → logprob: -7.384097576141357
    6. ' chaîne' → logprob: -8.509098052978516
    7. 'chaine' → logprob: -8.634098052978516
    8. '-' → logprob: -8.634098052978516
    9. '-cha' → logprob: -9.009098052978516
    10. 'chains' → logprob: -9.634098052978516

Token 92: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.017472494393587112
    2. 'î' → logprob: -4.392472267150879
    3. 'ines' → logprob: -5.892472267150879
    4. 'nes' → logprob: -6.517472267150879
    5. '   ' → logprob: -8.767472267150879
    6. 'Î' → logprob: -8.892472267150879
    7. '	' → logprob: -9.767472267150879
    8. '```' → logprob: -10.142472267150879
    9. 'i' → logprob: -10.517472267150879
    10. 'ı' → logprob: -10.517472267150879

Token 93: ' selon' (ID: 27571)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015070891939103603
    2. '(' → logprob: -5.015070915222168
    3. ' ()' → logprob: -5.390070915222168
    4. '[' → logprob: -7.265070915222168
    5. '('' → logprob: -7.515070915222168
    6. ' (' → logprob: -7.765070915222168
    7. 's' → logprob: -7.890070915222168
    8. ')' → logprob: -7.890070915222168
    9. 'tokens' → logprob: -7.890070915222168
    10. '[]' → logprob: -8.890070915222168

Token 94: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6949845552444458
    2. ' l' → logprob: -1.1949845552444458
    3. ' '' → logprob: -2.0699844360351562
    4. ' ' → logprob: -4.194984436035156
    5. 'l' → logprob: -4.444984436035156
    6. ''un' → logprob: -4.444984436035156
    7. '"' → logprob: -5.194984436035156
    8. ' espaces' → logprob: -5.569984436035156
    9. ' les' → logprob: -5.694984436035156
    10. 's' → logprob: -5.819984436035156

Token 95: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.29323649406433105
    2. 'esp' → logprob: -1.418236494064331
    3. ''esp' → logprob: -4.66823673248291
    4. 'es' → logprob: -6.29323673248291
    5. ''espace' → logprob: -8.66823673248291
    6. 'spaces' → logprob: -9.04323673248291
    7. ' espace' → logprob: -9.16823673248291
    8. '’esp' → logprob: -9.29323673248291
    9. ' esp' → logprob: -9.54323673248291
    10. ' '' → logprob: -9.66823673248291

Token 96: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4744439423084259
    2. '()' → logprob: -2.0994439125061035
    3. 's' → logprob: -2.3494439125061035
    4. 'n' → logprob: -2.5994439125061035
    5. '[' → logprob: -3.3494439125061035
    6. '(' → logprob: -4.5994439125061035
    7. ',' → logprob: -4.7244439125061035
    8. '.' → logprob: -5.2244439125061035
    9. ' )' → logprob: -5.4744439125061035
    10. 'tokens' → logprob: -5.7244439125061035

Token 97: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.46284300088882446
    2. 'numbers' → logprob: -1.5878429412841797
    3. 'l' → logprob: -2.7128429412841797
    4. 'n' → logprob: -3.4628429412841797
    5. 'm' → logprob: -4.46284294128418
    6. 'v' → logprob: -4.71284294128418
    7. 'nums' → logprob: -5.08784294128418
    8. 'values' → logprob: -5.21284294128418
    9. 'lst' → logprob: -5.33784294128418
    10. 'ent' → logprob: -5.46284294128418

Token 98: ' map' (ID: 4014)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.2910872995853424
    2. ' numbers' → logprob: -2.5410873889923096
    3. 'lst' → logprob: -2.5410873889923096
    4. ' lst' → logprob: -4.1660871505737305
    5. 'a' → logprob: -4.2910871505737305
    6. 'map' → logprob: -4.2910871505737305
    7. 'l' → logprob: -4.6660871505737305
    8. 'list' → logprob: -5.0410871505737305
    9. 'nums' → logprob: -5.1660871505737305
    10. 'liste' → logprob: -5.1660871505737305

Token 99: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10054803639650345
    2. '(' → logprob: -2.350548028945923
    3. '(lambda' → logprob: -8.350547790527344
    4. 'int' → logprob: -10.350547790527344
    5. '<int' → logprob: -10.725547790527344
    6. '(
' → logprob: -10.850547790527344
    7. '()' → logprob: -11.600547790527344
    8. '[int' → logprob: -11.850547790527344
    9. '=int' → logprob: -12.225547790527344
    10. ' (' → logprob: -13.475547790527344

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23000428080558777
    2. ')' → logprob: -1.9800043106079102
    3. ',input' → logprob: -2.73000431060791
    4. '(input' → logprob: -6.73000431060791
    5. ' ,' → logprob: -7.85500431060791
    6. ',)' → logprob: -8.60500431060791
    7. ',int' → logprob: -8.73000431060791
    8. 'input' → logprob: -9.98000431060791
    9. '(' → logprob: -10.48000431060791
    10. ' )' → logprob: -10.60500431060791

Token 101: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.35643142461776733
    2. 'input' → logprob: -1.231431484222412
    3. ')' → logprob: -4.981431484222412
    4. ' )' → logprob: -7.356431484222412
    5. ' n' → logprob: -8.356431007385254
    6. 'n' → logprob: -9.731431007385254
    7. '(input' → logprob: -9.981431007385254
    8. ' ' → logprob: -10.981431007385254
    9. '[input' → logprob: -11.106431007385254
    10. '=input' → logprob: -11.231431007385254

Token 102: ' applique' (ID: 180579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14091576635837555
    2. '(' → logprob: -2.265915870666504
    3. '(int' → logprob: -5.265915870666504
    4. ' )' → logprob: -5.515915870666504
    5. '(list' → logprob: -5.640915870666504
    6. '()' → logprob: -6.015915870666504
    7. 'list' → logprob: -6.015915870666504
    8. '(n' → logprob: -6.140915870666504
    9. '(input' → logprob: -6.140915870666504
    10. '(
' → logprob: -6.515915870666504

Token 103: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.350824236869812
    2. ' int' → logprob: -1.225824236869812
    3. ' la' → logprob: -6.225824356079102
    4. '(int' → logprob: -8.725824356079102
    5. ' ' → logprob: -9.850824356079102
    6. 'la' → logprob: -10.100824356079102
    7. '	int' → logprob: -10.725824356079102
    8. ' lambda' → logprob: -10.975824356079102
    9. '=int' → logprob: -10.975824356079102
    10. ')' → logprob: -11.100824356079102

Token 104: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.386106014251709
    2. ' fonction' → logprob: -2.011106014251709
    3. 'fonction' → logprob: -2.261106014251709
    4. ' int' → logprob: -2.511106014251709
    5. ' function' → logprob: -7.511106014251709
    6. ' conversion' → logprob: -8.386106491088867
    7. 'function' → logprob: -9.136106491088867
    8. ' ' → logprob: -9.636106491088867
    9. 'ent' → logprob: -11.136106491088867
    10. 'conversion' → logprob: -11.636106491088867

Token 105: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6565927267074585
    2. '(int' → logprob: -0.7815927267074585
    3. ' int' → logprob: -4.156592845916748
    4. '(' → logprob: -5.031592845916748
    5. '(lambda' → logprob: -7.781592845916748
    6. '[int' → logprob: -8.03159236907959
    7. ')' → logprob: -8.15659236907959
    8. '<int' → logprob: -8.90659236907959
    9. '=int' → logprob: -9.15659236907959
    10. '(
' → logprob: -9.53159236907959

Token 106: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8958602547645569
    2. '(' → logprob: -1.520860195159912
    3. '()' → logprob: -1.520860195159912
    4. '(...)' → logprob: -2.770860195159912
    5. '(lambda' → logprob: -3.145860195159912
    6. '(input' → logprob: -3.770860195159912
    7. '())' → logprob: -4.395860195159912
    8. '(int' → logprob: -5.020860195159912
    9. '(
' → logprob: -6.270860195159912
    10. '(...' → logprob: -6.395860195159912

Token 107: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03532589599490166
    2. '(' → logprob: -3.9103260040283203
    3. '()' → logprob: -5.28532600402832
    4. '(lambda' → logprob: -5.53532600402832
    5. 'sur' → logprob: -5.78532600402832
    6. '(...)' → logprob: -7.28532600402832
    7. '(
' → logprob: -8.03532600402832
    8. 'à' → logprob: -9.03532600402832
    9. '(int' → logprob: -9.03532600402832
    10. 'to' → logprob: -9.03532600402832

Token 108: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.06256403028964996
    2. ' each' → logprob: -3.9375641345977783
    3. 'cha' → logprob: -4.187563896179199
    4. ' chacune' → logprob: -4.187563896179199
    5. ' la' → logprob: -5.687563896179199
    6. 'l' → logprob: -6.437563896179199
    7. ' cha' → logprob: -6.437563896179199
    8. 'ch' → logprob: -7.312563896179199
    9. 'la' → logprob: -7.312563896179199
    10. ' l' → logprob: -7.562563896179199

Token 109: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.010022499598562717
    2. ' élément' → logprob: -4.6350226402282715
    3. ')' → logprob: -8.885022163391113
    4. 's' → logprob: -10.135022163391113
    5. 'element' → logprob: -10.760022163391113
    6. ' chaîne' → logprob: -11.385022163391113
    7. ' element' → logprob: -11.885022163391113
    8. ' ' → logprob: -11.885022163391113
    9. ' éléments' → logprob: -12.135022163391113
    10. ' sous' → logprob: -12.135022163391113

Token 110: '-cha' (ID: 163177)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.4648109972476959
    2. 'élé' → logprob: -2.339811086654663
    3. '-' → logprob: -2.464811086654663
    4. ')' → logprob: -2.964811086654663
    5. 'chain' → logprob: -3.339811086654663
    6. ' chaîne' → logprob: -3.839811086654663
    7. '-cha' → logprob: -3.839811086654663
    8. 'string' → logprob: -4.464810848236084
    9. ' chaînes' → logprob: -4.464810848236084
    10. 'str' → logprob: -4.714810848236084

Token 111: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.354767382144928
    2. 'î' → logprob: -1.2297673225402832
    3. 'Î' → logprob: -6.604767322540283
    4. 'ne' → logprob: -6.979767322540283
    5. 'ïne' → logprob: -7.229767322540283
    6. 'ı' → logprob: -7.354767322540283
    7. 'ine' → logprob: -7.479767322540283
    8. 'în' → logprob: -7.729767322540283
    9. 'înes' → logprob: -8.229767799377441
    10. '\xc8' → logprob: -8.354767799377441

Token 112: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039164017885923386
    2. ' )' → logprob: -3.9141640663146973
    3. '(n' → logprob: -5.164164066314697
    4. '(' → logprob: -5.289164066314697
    5. 'n' → logprob: -6.164164066314697
    6. ',' → logprob: -6.914164066314697
    7. '(
' → logprob: -7.539164066314697
    8. '(input' → logprob: -7.664164066314697
    9. '(numbers' → logprob: -7.664164066314697
    10. 'sur' → logprob: -7.914164066314697

Token 113: ' les' (ID: 1341)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23904870450496674
    2. 'n' → logprob: -2.489048719406128
    3. 'list' → logprob: -2.739048719406128
    4. ' n' → logprob: -3.239048719406128
    5. ' )' → logprob: -4.989048480987549
    6. ' list' → logprob: -5.364048480987549
    7. ' ' → logprob: -5.614048480987549
    8. ' la' → logprob: -6.489048480987549
    9. 'l' → logprob: -6.614048480987549
    10. 'lambda' → logprob: -6.614048480987549

Token 114: ' convert' (ID: 8452)
  Prédit: ' transforme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transforme' → logprob: -0.9550238847732544
    2. 'convert' → logprob: -1.2050238847732544
    3. ' convert' → logprob: -1.4550238847732544
    4. 'transform' → logprob: -2.705023765563965
    5. ' transform' → logprob: -4.330023765563965
    6. ' convertir' → logprob: -7.205023765563965
    7. 'con' → logprob: -7.205023765563965
    8. ' converts' → logprob: -9.580023765563965
    9. ' transforma' → logprob: -9.830023765563965
    10. '_convert' → logprob: -9.955023765563965

Token 115: 'issant' (ID: 31359)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.015812749043107033
    2. ' it' → logprob: -4.515812873840332
    3. 'i' → logprob: -6.640812873840332
    4. 't' → logprob: -6.640812873840332
    5. 'issant' → logprob: -6.765812873840332
    6. '```' → logprob: -9.265812873840332
    7. 'is' → logprob: -9.390812873840332
    8. '_it' → logprob: -9.390812873840332
    9. 'issent' → logprob: -9.640812873840332
    10. ')' → logprob: -9.828312873840332

Token 116: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.2709123492240906
    2. ')' → logprob: -1.7709124088287354
    3. 'en' → logprob: -2.7709124088287354
    4. ',' → logprob: -6.395912170410156
    5. ' )' → logprob: -6.770912170410156
    6. ' à' → logprob: -7.520912170410156
    7. 'list' → logprob: -8.895912170410156
    8. 'ens' → logprob: -8.895912170410156
    9. 'à' → logprob: -9.270912170410156
    10. 'n' → logprob: -9.520912170410156

Token 117: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.2085099220275879
    2. 'ent' → logprob: -2.583509922027588
    3. ' des' → logprob: -2.708509922027588
    4. ' nombres' → logprob: -3.958509922027588
    5. ' integers' → logprob: -4.333509922027588
    6. ' int' → logprob: -4.708509922027588
    7. ' entier' → logprob: -5.708509922027588
    8. 'int' → logprob: -7.333509922027588
    9. ' une' → logprob: -8.95850944519043
    10. 'inte' → logprob: -9.08350944519043

Token 118: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.013137991540133953
    2. 'i' → logprob: -4.3881378173828125
    3. 'ières' → logprob: -8.138137817382812
    4. 'ier' → logprob: -8.513137817382812
    5. 'ière' → logprob: -9.638137817382812
    6. ' i' → logprob: -10.888137817382812
    7. '#' → logprob: -11.638137817382812
    8. '```' → logprob: -11.763137817382812
    9. 'ers' → logprob: -12.013137817382812
    10. 'ié' → logprob: -12.138137817382812

Token 119: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02667575515806675
    2. 's' → logprob: -5.276675701141357
    3. ')
' → logprob: -5.526675701141357
    4. '(numbers' → logprob: -5.901675701141357
    5. ' )' → logprob: -6.026675701141357
    6. 'numbers' → logprob: -6.151675701141357
    7. 'n' → logprob: -6.401675701141357
    8. '()' → logprob: -6.901675701141357
    9. ',' → logprob: -7.026675701141357
    10. '(n' → logprob: -7.151675701141357

Token 120: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.45230066776275635
    2. 'a' → logprob: -1.4523006677627563
    3. 'lst' → logprob: -3.577300548553467
    4. 'nums' → logprob: -3.577300548553467
    5. 'l' → logprob: -4.202300548553467
    6. 'liste' → logprob: -4.577300548553467
    7. 'arr' → logprob: -4.577300548553467
    8. 'values' → logprob: -4.702300548553467
    9. 'n' → logprob: -5.202300548553467
    10. 'ent' → logprob: -5.327300548553467

Token 121: ' list' (ID: 1562)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.42030084133148193
    2. ' numbers' → logprob: -2.1703009605407715
    3. 'lst' → logprob: -2.6703009605407715
    4. 'arr' → logprob: -3.0453009605407715
    5. 'nums' → logprob: -3.4203009605407715
    6. 'a' → logprob: -4.0453009605407715
    7. 'values' → logprob: -4.0453009605407715
    8. ' lst' → logprob: -4.4203009605407715
    9. 'l' → logprob: -4.4203009605407715
    10. ' arr' → logprob: -5.6703009605407715

Token 122: '(...)' (ID: 96375)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02081991732120514
    2. '()' → logprob: -4.020820140838623
    3. '_' → logprob: -6.770820140838623
    4. '=' → logprob: -7.145820140838623
    5. 's' → logprob: -7.770820140838623
    6. '(
' → logprob: -10.020819664001465
    7. '(...)' → logprob: -10.395819664001465
    8. '(map' → logprob: -10.645819664001465
    9. '(int' → logprob: -10.895819664001465
    10. '(

' → logprob: -11.020819664001465

Token 123: ' convert' (ID: 8452)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24182403087615967
    2. ' =' → logprob: -1.9918240308761597
    3. '(' → logprob: -2.991824150085449
    4. 'n' → logprob: -4.366824150085449
    5. '(n' → logprob: -5.241824150085449
    6. ')' → logprob: -5.991824150085449
    7. '()' → logprob: -6.616824150085449
    8. '([' → logprob: -7.241824150085449
    9. '(
' → logprob: -7.366824150085449
    10. 's' → logprob: -7.616824150085449

Token 124: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10669305175542831
    2. 'e' → logprob: -2.7316930294036865
    3. 'er' → logprob: -3.7316930294036865
    4. '()' → logprob: -4.731693267822266
    5. '(e' → logprob: -7.856693267822266
    6. '=' → logprob: -8.231693267822266
    7. 'ent' → logprob: -8.481693267822266
    8. '(int' → logprob: -8.856693267822266
    9. '(list' → logprob: -8.981693267822266
    10. '_' → logprob: -9.106693267822266

Token 125: ' le' (ID: 505)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.31745606660842896
    2. '(' → logprob: -1.3174560070037842
    3. '(
' → logprob: -6.317456245422363
    4. 'map' → logprob: -7.567456245422363
    5. '(list' → logprob: -7.942456245422363
    6. '()' → logprob: -8.317456245422363
    7. '(m' → logprob: -8.567456245422363
    8. ' la' → logprob: -8.692456245422363
    9. ' map' → logprob: -9.192456245422363
    10. '(input' → logprob: -9.567456245422363

Token 126: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2028726488351822
    2. 'map' → logprob: -1.702872633934021
    3. ' résultat' → logprob: -6.9528727531433105
    4. ' ' → logprob: -9.077872276306152
    5. ' result' → logprob: -9.452872276306152
    6. 'result' → logprob: -9.577872276306152
    7. 'm' → logprob: -10.452872276306152
    8. ' ' → logprob: -10.702872276306152
    9. '(map' → logprob: -10.827872276306152
    10. ' iterable' → logprob: -10.952872276306152

Token 127: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04923965036869049
    2. '()' → logprob: -3.6742396354675293
    3. '(map' → logprob: -4.924239635467529
    4. '(lambda' → logprob: -5.299239635467529
    5. '<|end|>' → logprob: -5.299239635467529
    6. '(
' → logprob: -6.299239635467529
    7. '(list' → logprob: -7.299239635467529
    8. '(int' → logprob: -7.424239635467529
    9. '(...)' → logprob: -7.674239635467529
    10. 'map' → logprob: -8.299240112304688

Token 128: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.023196902126073837
    2. ' liste' → logprob: -3.8981969356536865
    3. 'une' → logprob: -6.023196697235107
    4. ' list' → logprob: -9.273197174072266
    5. 'liste' → logprob: -9.523197174072266
    6. ' a' → logprob: -10.898197174072266
    7. 'a' → logprob: -11.773197174072266
    8. 'list' → logprob: -11.898197174072266
    9. ' []' → logprob: -12.023197174072266
    10. 'Une' → logprob: -12.273197174072266

Token 129: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.1852903813123703
    2. 'liste' → logprob: -1.8102903366088867
    3. 'list' → logprob: -5.435290336608887
    4. ' list' → logprob: -6.810290336608887
    5. ' listes' → logprob: -10.560290336608887
    6. 'Liste' → logprob: -12.435290336608887
    7. '```' → logprob: -12.435290336608887
    8. ' Liste' → logprob: -12.560290336608887
    9. 's' → logprob: -12.685290336608887
    10. '[]' → logprob: -12.685290336608887

Token 130: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006957849953323603
    2. '(
' → logprob: -5.8819580078125
    3. 's' → logprob: -6.6319580078125
    4. '()' → logprob: -6.7569580078125
    5. '(n' → logprob: -6.8819580078125
    6. 'n' → logprob: -9.2569580078125
    7. '(s' → logprob: -9.5069580078125
    8. ')' → logprob: -9.6319580078125
    9. ' (' → logprob: -9.6319580078125
    10. '[' → logprob: -9.8819580078125

Token 131: ''ent' (ID: 53422)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.4073472023010254
    2. 'ent' → logprob: -1.4073472023010254
    3. ''ent' → logprob: -2.6573472023010254
    4. '_ent' → logprob: -5.407347202301025
    5. ' entier' → logprob: -5.407347202301025
    6. '’ent' → logprob: -5.907347202301025
    7. ' nombres' → logprob: -6.157347202301025
    8. ' integers' → logprob: -6.282347202301025
    9. 'int' → logprob: -6.532347202301025
    10. ' int' → logprob: -7.032347202301025

Token 132: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -6.468279752880335e-05
    2. 'i' → logprob: -9.750064849853516
    3. 'ières' → logprob: -12.250064849853516
    4. '```' → logprob: -14.625064849853516
    5. 'ier' → logprob: -14.750064849853516
    6. '#' → logprob: -15.375064849853516
    7. 'ers' → logprob: -15.875064849853516
    8. '   ' → logprob: -16.250064849853516
    9. ' i' → logprob: -16.875064849853516
    10. 'I' → logprob: -17.500064849853516

Token 133: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3233078420162201
    2. '(' → logprob: -1.8233078718185425
    3. 'n' → logprob: -3.073307752609253
    4. '(numbers' → logprob: -4.448307991027832
    5. '()' → logprob: -4.948307991027832
    6. ')' → logprob: -5.073307991027832
    7. '=' → logprob: -5.198307991027832
    8. ' =' → logprob: -5.198307991027832
    9. 'a' → logprob: -5.198307991027832
    10. 'numbers' → logprob: -5.448307991027832

Token 134: 'c' (ID: 66)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.19127961993217468
    2. 'a' → logprob: -2.566279649734497
    3. 'arr' → logprob: -3.816279649734497
    4. 'lst' → logprob: -3.816279649734497
    5. 'nums' → logprob: -4.066279411315918
    6. ' numbers' → logprob: -4.566279411315918
    7. 'values' → logprob: -4.816279411315918
    8. 'l' → logprob: -5.441279411315918
    9. 'm' → logprob: -6.191279411315918
    10. 'n' → logprob: -6.316279411315918

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04978012666106224
    2. '=' → logprob: -4.674779891967773
    3. 'o' → logprob: -4.799779891967773
    4. 'ont' → logprob: -5.049779891967773
    5. 'ount' → logprob: -5.174779891967773
    6. 's' → logprob: -5.299779891967773
    7. ' ' → logprob: -5.924779891967773
    8. 'ou' → logprob: -6.174779891967773
    9. '_' → logprob: -6.424779891967773
    10. 'l' → logprob: -6.924779891967773

Token 136: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.005234832875430584
    2. 'list' → logprob: -5.255234718322754
    3. ' ' → logprob: -15.255234718322754
    4. '=list' → logprob: -15.380234718322754
    5. ' ' → logprob: -15.630234718322754
    6. ' l' → logprob: -15.755234718322754
    7. ' li' → logprob: -16.63023567199707
    8. '	list' → logprob: -17.00523567199707
    9. 'List' → logprob: -17.25523567199707
    10. ' lis' → logprob: -17.38023567199707

Token 137: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04645492881536484
    2. '(' → logprob: -3.296454906463623
    3. '(int' → logprob: -5.171454906463623
    4. '(input' → logprob: -5.921454906463623
    5. ' (' → logprob: -11.671455383300781
    6. '(m' → logprob: -12.546455383300781
    7. '(
' → logprob: -12.796455383300781
    8. '(

' → logprob: -13.296455383300781
    9. '(mapping' → logprob: -14.421455383300781
    10. '(s' → logprob: -14.921455383300781

Token 138: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06204375997185707
    2. '(' → logprob: -2.8120436668395996
    3. '(
' → logprob: -10.312044143676758
    4. ' (' → logprob: -10.812044143676758
    5. 'int' → logprob: -11.437044143676758
    6. '<int' → logprob: -12.187044143676758
    7. ' int' → logprob: -13.187044143676758
    8. '[int' → logprob: -13.187044143676758
    9. '=int' → logprob: -13.687044143676758
    10. ',int' → logprob: -13.937044143676758

Token 139: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023291829973459244
    2. ',input' → logprob: -3.898291826248169
    3. ' (' → logprob: -6.773292064666748
    4. ',' → logprob: -7.023292064666748
    5. '(' → logprob: -7.273292064666748
    6. 'input' → logprob: -11.89829158782959
    7. ' ,' → logprob: -12.39829158782959
    8. ' input' → logprob: -12.77329158782959
    9. '=input' → logprob: -12.89829158782959
    10. ',(' → logprob: -15.02329158782959

Token 140: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015241486253216863
    2. ' input' → logprob: -6.501523971557617
    3. '(input' → logprob: -10.876523971557617
    4. ' ' → logprob: -13.376523971557617
    5. '<input' → logprob: -15.126523971557617
    6. ',input' → logprob: -15.251523971557617
    7. '   ' → logprob: -15.751523971557617
    8. '
' → logprob: -15.876523971557617
    9. '	input' → logprob: -15.876523971557617
    10. '  ' → logprob: -16.501523971557617

Token 141: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0020274927373975515
    2. '()' → logprob: -6.50202751159668
    3. '()))' → logprob: -7.75202751159668
    4. '())' → logprob: -9.50202751159668
    5. '())))' → logprob: -11.12702751159668
    6. '()));' → logprob: -12.75202751159668
    7. '()[' → logprob: -14.75202751159668
    8. ')' → logprob: -15.00202751159668
    9. '()>' → logprob: -15.12702751159668
    10. ' ().' → logprob: -15.50202751159668

Token 142: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00027015688829123974
    2. 'strip' → logprob: -8.250269889831543
    3. ' split' → logprob: -11.875269889831543
    4. ')' → logprob: -13.625269889831543
    5. 'rstrip' → logprob: -14.750269889831543
    6. '(split' → logprob: -15.375269889831543
    7. '.split' → logprob: -17.75027084350586
    8. '))' → logprob: -18.37527084350586
    9. 'spl' → logprob: -18.50027084350586
    10. '()' → logprob: -18.75027084350586

Token 143: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2102285623550415
    2. '()' → logprob: -1.7102285623550415
    3. '())' → logprob: -4.960228443145752
    4. '())))' → logprob: -6.460228443145752
    5. '))' → logprob: -9.08522891998291
    6. '(' → logprob: -9.96022891998291
    7. '()));' → logprob: -11.08522891998291
    8. ')))' → logprob: -11.58522891998291
    9. ')' → logprob: -12.71022891998291
    10. '())).' → logprob: -12.83522891998291

Token 144: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.02756929397583
    2. '[' → logprob: -1.02756929397583
    3. ' 
' → logprob: -2.15256929397583
    4. ' ' → logprob: -2.77756929397583
    5. '
' → logprob: -3.90256929397583
    6. '.' → logprob: -4.02756929397583
    7. 'n' → logprob: -4.27756929397583
    8. ''' → logprob: -4.90256929397583
    9. '\n' → logprob: -4.90256929397583
    10. '<|end|>' → logprob: -4.90256929397583

Token 145: ' Dé' (ID: 27247)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1589646339416504
    2. 'for' → logprob: -1.4089646339416504
    3. 's' → logprob: -1.5339646339416504
    4. 'f' → logprob: -2.0339646339416504
    5. 'p' → logprob: -2.6589646339416504
    6. 'i' → logprob: -4.65896463394165
    7. 'sum' → logprob: -5.78396463394165
    8. 'if' → logprob: -6.15896463394165
    9. 'result' → logprob: -6.28396463394165
    10. 'r' → logprob: -6.40896463394165

Token 146: 'fin' (ID: 6994)
  Prédit: 'fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.06562958657741547
    2. 'f' → logprob: -2.815629482269287
    3. 'fi' → logprob: -6.315629482269287
    4. 'crire' → logprob: -7.815629482269287
    5. ' finir' → logprob: -8.190629959106445
    6. 'nir' → logprob: -8.440629959106445
    7. 'termin' → logprob: -8.690629959106445
    8. '#' → logprob: -8.815629959106445
    9. 'clar' → logprob: -8.940629959106445
    10. 'fir' → logprob: -9.065629959106445

Token 147: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0017257531872019172
    2. 'inir' → logprob: -7.126725673675537
    3. '#' → logprob: -7.626725673675537
    4. 'i' → logprob: -9.376726150512695
    5. 'def' → logprob: -9.376726150512695
    6. 'ine' → logprob: -10.126726150512695
    7. 'e' → logprob: -10.126726150512695
    8. 'inition' → logprob: -10.251726150512695
    9. 'ition' → logprob: -10.251726150512695
    10. 'issez' → logprob: -10.751726150512695

Token 148: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4579243063926697
    2. ' une' → logprob: -1.5829243659973145
    3. ' def' → logprob: -3.2079243659973145
    4. 'a' → logprob: -3.8329243659973145
    5. ' a' → logprob: -3.8329243659973145
    6. '#' → logprob: -3.9579243659973145
    7. ' un' → logprob: -4.0829243659973145
    8. ' la' → logprob: -4.7079243659973145
    9. 'une' → logprob: -4.7079243659973145
    10. '()' → logprob: -4.9579243659973145

Token 149: ' constante' (ID: 49652)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.3676748275756836
    2. ' fonction' → logprob: -1.4926748275756836
    3. 's' → logprob: -3.2426748275756836
    4. 'def' → logprob: -4.242674827575684
    5. ' function' → logprob: -4.367674827575684
    6. 'f' → logprob: -5.117674827575684
    7. 'function' → logprob: -5.742674827575684
    8. ' somme' → logprob: -5.992674827575684
    9. '#' → logprob: -6.867674827575684
    10. ' variable' → logprob: -7.617674827575684

Token 150: ' mod' (ID: 1812)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.7701662182807922
    2. 'MAX' → logprob: -1.7701661586761475
    3. 'PI' → logprob: -2.5201661586761475
    4. ' MOD' → logprob: -2.5201661586761475
    5. 'M' → logprob: -2.6451661586761475
    6. ' M' → logprob: -3.5201661586761475
    7. ' MAX' → logprob: -3.6451661586761475
    8. 'K' → logprob: -4.270166397094727
    9. ' K' → logprob: -4.645166397094727
    10. 'N' → logprob: -4.895166397094727

Token 151: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009726829594001174
    2. '=' → logprob: -7.000972747802734
    3. 'ULO' → logprob: -11.125972747802734
    4. 'ule' → logprob: -11.250972747802734
    5. 'ULE' → logprob: -11.500972747802734
    6. ' ' → logprob: -12.000972747802734
    7. 'ulus' → logprob: -12.000972747802734
    8. 'UL' → logprob: -13.500972747802734
    9. 'E' → logprob: -13.875972747802734
    10. 'e' → logprob: -14.000972747802734

Token 152: ' qui' (ID: 2780)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.08452051877975464
    2. 'mod' → logprob: -2.9595205783843994
    3. ' ' → logprob: -3.8345205783843994
    4. ' =' → logprob: -5.58452033996582
    5. '=' → logprob: -6.20952033996582
    6. '10' → logprob: -6.83452033996582
    7. ' MOD' → logprob: -8.45952033996582
    8. 'MOD' → logprob: -8.45952033996582
    9. '998' → logprob: -9.33452033996582
    10. '100' → logprob: -9.58452033996582

Token 153: ' serv' (ID: 2096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07119926810264587
    2. '=' → logprob: -2.6961991786956787
    3. ' ' → logprob: -7.696199417114258
    4. '100' → logprob: -7.696199417114258
    5. 'mod' → logprob: -9.446199417114258
    6. ' mod' → logprob: -10.196199417114258
    7. '<|end|>' → logprob: -10.571199417114258
    8. ' représente' → logprob: -10.821199417114258
    9. ',' → logprob: -11.071199417114258
    10. 's' → logprob: -11.196199417114258

Token 154: 'ira' (ID: 2633)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11779721826314926
    2. 'e' → logprob: -2.6177971363067627
    3. ' =' → logprob: -3.3677971363067627
    4. 'es' → logprob: -6.742797374725342
    5. 'ule' → logprob: -6.992797374725342
    6. 'é' → logprob: -7.367797374725342
    7. 'mod' → logprob: -8.867796897888184
    8. ' à' → logprob: -9.367796897888184
    9. ' ' → logprob: -9.742796897888184
    10. 'è' → logprob: -9.992796897888184

Token 155: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5343097448348999
    2. ' à' → logprob: -1.1593097448349
    3. ' ' → logprob: -2.6593098640441895
    4. 'de' → logprob: -4.5343098640441895
    5. ' as' → logprob: -4.9093098640441895
    6. '```' → logprob: -5.6593098640441895
    7. 'à' → logprob: -5.9093098640441895
    8. ' au' → logprob: -6.7843098640441895
    9. 'as' → logprob: -7.1593098640441895
    10. 'au' → logprob: -7.5343098640441895

Token 156: ' effectuer' (ID: 98625)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5060015916824341
    2. '10' → logprob: -1.506001591682434
    3. ' ' → logprob: -1.756001591682434
    4. '1' → logprob: -6.7560014724731445
    5. '998' → logprob: -7.6310014724731445
    6. '```' → logprob: -8.006001472473145
    7. ' mod' → logprob: -8.631001472473145
    8. ' modulo' → logprob: -9.631001472473145
    9. ' (' → logprob: -9.756001472473145
    10. 'mod' → logprob: -9.881001472473145

Token 157: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.12193774431943893
    2. ' les' → logprob: -2.6219377517700195
    3. ' ' → logprob: -3.9969377517700195
    4. 'des' → logprob: -4.7469377517700195
    5. ' le' → logprob: -4.8719377517700195
    6. '100' → logprob: -5.7469377517700195
    7. ' la' → logprob: -6.6219377517700195
    8. 'les' → logprob: -7.3719377517700195
    9. ' l' → logprob: -7.4969377517700195
    10. ' modulo' → logprob: -7.7469377517700195

Token 158: ' opérations' (ID: 102793)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.4457646906375885
    2. ' opérations' → logprob: -1.0707646608352661
    3. 'calcul' → logprob: -4.195764541625977
    4. ' modulo' → logprob: -7.570764541625977
    5. ' calculations' → logprob: -7.945764541625977
    6. 'mod' → logprob: -8.070764541625977
    7. '%' → logprob: -9.070764541625977
    8. ' op' → logprob: -9.195764541625977
    9. ' ' → logprob: -9.320764541625977
    10. ' mod' → logprob: -9.445764541625977

Token 159: ' modulo' (ID: 112372)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.9723420739173889
    2. ' modulo' → logprob: -0.9723420739173889
    3. 'mod' → logprob: -1.9723420143127441
    4. '_mod' → logprob: -3.722342014312744
    5. ' ' → logprob: -3.847342014312744
    6. ' =' → logprob: -3.972342014312744
    7. '%' → logprob: -4.222342014312744
    8. ' %' → logprob: -4.472342014312744
    9. '=' → logprob: -5.472342014312744
    10. ' de' → logprob: -5.722342014312744

Token 160: ' un' (ID: 537)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5845991969108582
    2. ' ' → logprob: -0.8345991969108582
    3. ' mod' → logprob: -6.084599018096924
    4. '100' → logprob: -6.209599018096924
    5. 'mod' → logprob: -6.834599018096924
    6. ' =' → logprob: -6.834599018096924
    7. '=' → logprob: -7.459599018096924
    8. '1' → logprob: -7.834599018096924
    9. ' (' → logprob: -8.209599494934082
    10. ' )' → logprob: -8.709599494934082

Token 161: ' grand' (ID: 6363)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -1.1323460340499878
    2. ' mod' → logprob: -1.6323460340499878
    3. '10' → logprob: -1.7573460340499878
    4. 'mod' → logprob: -1.7573460340499878
    5. 'e' → logprob: -4.007346153259277
    6. ' modulo' → logprob: -4.007346153259277
    7. '999' → logprob: -4.132346153259277
    8. '1' → logprob: -4.257346153259277
    9. '998' → logprob: -4.507346153259277
    10. '```' → logprob: -4.507346153259277

Token 162: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -1.101518154144287
    2. 'mod' → logprob: -1.226518154144287
    3. ' nombre' → logprob: -1.476518154144287
    4. '100' → logprob: -2.726518154144287
    5. ' mod' → logprob: -3.351518154144287
    6. '10' → logprob: -3.976518154144287
    7. ' modulo' → logprob: -5.226518154144287
    8. ' ' → logprob: -5.601518154144287
    9. '```' → logprob: -5.851518154144287
    10. '998' → logprob: -5.976518154144287

Token 163: ' premier' (ID: 15506)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5861846208572388
    2. ' mod' → logprob: -1.0861846208572388
    3. ' =' → logprob: -2.836184501647949
    4. ' ' → logprob: -3.461184501647949
    5. '=' → logprob: -4.711184501647949
    6. '_mod' → logprob: -5.961184501647949
    7. 'MOD' → logprob: -6.586184501647949
    8. ' modulo' → logprob: -7.711184501647949
    9. ',' → logprob: -7.836184501647949
    10. ')' → logprob: -7.961184501647949

Token 164: ' pour' (ID: 1930)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.4335150420665741
    2. ' mod' → logprob: -2.0585150718688965
    3. ' ' → logprob: -2.3085150718688965
    4. ')' → logprob: -3.1835150718688965
    5. ' =' → logprob: -3.4335150718688965
    6. '=' → logprob: -4.0585150718688965
    7. '_mod' → logprob: -4.5585150718688965
    8. ',' → logprob: -5.0585150718688965
    9. 'MOD' → logprob: -5.5585150718688965
    10. ' )' → logprob: -5.8085150718688965

Token 165: ' éviter' (ID: 64013)
  Prédit: ' éviter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.7486098408699036
    2. '100' → logprob: -1.6236097812652588
    3. '998' → logprob: -2.873609781265259
    4. ' garantir' → logprob: -2.998609781265259
    5. ' ' → logprob: -3.123609781265259
    6. ' prévenir' → logprob: -3.498609781265259
    7. '10' → logprob: -3.998609781265259
    8. ' evitar' → logprob: -4.623610019683838
    9. '123' → logprob: -4.873610019683838
    10. ' assurer' → logprob: -4.873610019683838

Token 166: ' les' (ID: 1341)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.7351495623588562
    2. ' des' → logprob: -1.610149621963501
    3. ' ' → logprob: -1.735149621963501
    4. ' les' → logprob: -2.360149621963501
    5. '<|end|>' → logprob: -4.110149383544922
    6. ' l' → logprob: -4.610149383544922
    7. 's' → logprob: -4.735149383544922
    8. 'overflow' → logprob: -5.360149383544922
    9. 'des' → logprob: -6.235149383544922
    10. ' over' → logprob: -6.735149383544922

Token 167: ' déb' (ID: 37874)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.9281747937202454
    2. ' overflow' → logprob: -1.0531747341156006
    3. ' déb' → logprob: -1.6781747341156006
    4. ' dépasse' → logprob: -3.1781747341156006
    5. 'd' → logprob: -4.42817497253418
    6. 's' → logprob: -4.80317497253418
    7. 'dé' → logprob: -6.42817497253418
    8. ' integer' → logprob: -6.55317497253418
    9. ' over' → logprob: -6.80317497253418
    10. ' erreurs' → logprob: -7.17817497253418

Token 168: 'ord' (ID: 604)
  Prédit: 'uts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.1910032033920288
    2. 'ut' → logprob: -2.0660033226013184
    3. 'ord' → logprob: -4.441003322601318
    4. 'ou' → logprob: -4.816003322601318
    5. ' modulo' → logprob: -5.691003322601318
    6. 't' → logprob: -6.066003322601318
    7. 'it' → logprob: -6.691003322601318
    8. 'u' → logprob: -6.816003322601318
    9. 'l' → logprob: -6.816003322601318
    10. 'ts' → logprob: -6.941003322601318

Token 169: 'ements' (ID: 4507)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.9523277878761292
    2. 'éré' → logprob: -2.0773277282714844
    3. 'érateur' → logprob: -2.4523277282714844
    4. 'èrement' → logprob: -2.4523277282714844
    5. ')' → logprob: -3.2023277282714844
    6. 'érer' → logprob: -3.4523277282714844
    7. 'ère' → logprob: -3.4523277282714844
    8. 'érant' → logprob: -3.7023277282714844
    9. 'ération' → logprob: -3.9523277282714844
    10. 'é' → logprob: -3.9523277282714844

Token 170: ' d' (ID: 272)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2240312397480011
    2. ' mod' → logprob: -1.9740312099456787
    3. '_mod' → logprob: -3.7240312099456787
    4. ' ' → logprob: -4.224031448364258
    5. 'MOD' → logprob: -4.474031448364258
    6. ' =' → logprob: -6.224031448364258
    7. ' (' → logprob: -6.349031448364258
    8. ')' → logprob: -6.599031448364258
    9. ' MOD' → logprob: -6.599031448364258
    10. '_MOD' → logprob: -7.224031448364258

Token 171: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.25220897793769836
    2. 'e' → logprob: -2.627208948135376
    3. ' ent' → logprob: -2.627208948135376
    4. 'ent' → logprob: -3.502208948135376
    5. 'es' → logprob: -4.127209186553955
    6. '’ent' → logprob: -5.002209186553955
    7. ' entier' → logprob: -5.127209186553955
    8. 's' → logprob: -5.377209186553955
    9. ' '' → logprob: -5.502209186553955
    10. ' ' → logprob: -6.377209186553955

Token 172: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.03831229358911514
    2. 'ier' → logprob: -3.4133121967315674
    3. 'er' → logprob: -6.5383124351501465
    4. 'ers' → logprob: -6.7883124351501465
    5. 'ières' → logprob: -6.9133124351501465
    6. 'rée' → logprob: -8.288311958312988
    7. 'e' → logprob: -9.288311958312988
    8. 'ées' → logprob: -9.538311958312988
    9. 'r' → logprob: -9.663311958312988
    10. 'i' → logprob: -9.788311958312988

Token 173: '.
' (ID: 558)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1151377260684967
    2. 'MOD' → logprob: -3.365137815475464
    3. '_mod' → logprob: -3.865137815475464
    4. ')' → logprob: -4.240137577056885
    5. ' mod' → logprob: -4.240137577056885
    6. ' =' → logprob: -5.115137577056885
    7. '(mod' → logprob: -5.490137577056885
    8. ' (' → logprob: -5.615137577056885
    9. '=' → logprob: -5.615137577056885
    10. '(' → logprob: -6.240137577056885

Token 174: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011249648407101631
    2. ' mod' → logprob: -5.136249542236328
    3. '
' → logprob: -5.261249542236328
    4. ' =' → logprob: -10.386249542236328
    5. 'MOD' → logprob: -10.386249542236328
    6. '_mod' → logprob: -11.261249542236328
    7. '=' → logprob: -11.886249542236328
    8. '
' → logprob: -11.886249542236328
    9. 'm' → logprob: -12.636249542236328
    10. '	mod' → logprob: -12.636249542236328

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005234713666141033
    2. '=' → logprob: -5.255234718322754
    3. ' ' → logprob: -14.630234718322754
    4. ' ' → logprob: -16.380233764648438
    5. ' =
' → logprob: -16.630233764648438
    6. ',' → logprob: -16.880233764648438
    7. '=int' → logprob: -17.005233764648438
    8. ' =)' → logprob: -17.255233764648438
    9. '_' → logprob: -17.380233764648438
    10. ' ,' → logprob: -17.505233764648438

Token 176: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2278713434934616
    2. '10' → logprob: -1.977871298789978
    3. '100' → logprob: -2.7278714179992676
    4. '998' → logprob: -10.10287094116211
    5. '1' → logprob: -11.60287094116211
    6. '999' → logprob: -14.35287094116211
    7. ' ' → logprob: -14.97787094116211
    8. '109' → logprob: -15.97787094116211
    9. '(' → logprob: -16.10287094116211
    10. '​' → logprob: -16.72787094116211

Token 177: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5766509771347046
    2. '100' → logprob: -0.8266509771347046
    3. ' ' → logprob: -7.951651096343994
    4. '998' → logprob: -7.951651096343994
    5. '1' → logprob: -11.951650619506836
    6. '```' → logprob: -15.326650619506836
    7. '(' → logprob: -15.826650619506836
    8. 'int' → logprob: -16.076650619506836
    9. '999' → logprob: -16.201650619506836
    10. '109' → logprob: -16.701650619506836

Token 178: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.02243812009692192
    2. '09' → logprob: -4.647438049316406
    3. '**' → logprob: -5.022438049316406
    4. ' ' → logprob: -5.147438049316406
    5. '009' → logprob: -9.397438049316406
    6. '000' → logprob: -9.772438049316406
    7. '+' → logprob: -10.147438049316406
    8. '```' → logprob: -11.397438049316406
    9. '_' → logprob: -13.022438049316406
    10. ' **' → logprob: -13.147438049316406

Token 179: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.375
    3. ' ' → logprob: -20.875
    4. '10' → logprob: -20.875
    5. '```' → logprob: -20.875
    6. '+' → logprob: -21.625
    7. '９' → logprob: -21.625
    8. '99' → logprob: -22.375
    9. '4' → logprob: -22.375
    10. '19' → logprob: -22.625

Token 180: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003863854566588998
    2. ' +' → logprob: -5.62886381149292
    3. '7' → logprob: -8.253864288330078
    4. '+
' → logprob: -13.753864288330078
    5. ' plus' → logprob: -14.003864288330078
    6. '9' → logprob: -14.253864288330078
    7. '＋' → logprob: -15.253864288330078
    8. 'plus' → logprob: -16.003864288330078
    9. ' ' → logprob: -16.128864288330078
    10. ' +
' → logprob: -16.253864288330078

Token 181: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -19.5
    3. '+' → logprob: -21.625
    4. '```' → logprob: -22.25
    5. '７' → logprob: -23.375
    6. '07' → logprob: -23.5
    7. ' ' → logprob: -24.125
    8. '' → logprob: -24.375
    9. '۷' → logprob: -24.5
    10. '   ' → logprob: -24.5

Token 182: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -21.25
    3. '```' → logprob: -21.5
    4. '07' → logprob: -21.625
    5. '+' → logprob: -22.25
    6. '７' → logprob: -23.0
    7. '۷' → logprob: -23.125
    8. '

' → logprob: -23.375
    9. '٧' → logprob: -23.75
    10. '৭' → logprob: -23.75

Token 183: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.45105162262916565
    2. 'r' → logprob: -2.201051712036133
    3. '#' → logprob: -2.576051712036133
    4. 's' → logprob: -2.826051712036133
    5. 'res' → logprob: -3.076051712036133
    6. 'for' → logprob: -3.326051712036133
    7. 'f' → logprob: -4.951051712036133
    8. 'answer' → logprob: -5.201051712036133
    9. 'total' → logprob: -5.451051712036133
    10. 'ans' → logprob: -5.576051712036133

Token 185: ' Trier' (ID: 191551)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13787207007408142
    2. '#' → logprob: -2.7628719806671143
    3. 'def' → logprob: -3.6378719806671143
    4. 's' → logprob: -4.262872219085693
    5. 'res' → logprob: -4.387872219085693
    6. 'dp' → logprob: -5.262872219085693
    7. 'total' → logprob: -5.637872219085693
    8. 'rés' → logprob: -6.637872219085693
    9. 'sum' → logprob: -7.512872219085693
    10. 'factor' → logprob: -7.637872219085693

Token 186: ' la' (ID: 557)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.17683762311935425
    2. 'c' → logprob: -1.926837682723999
    3. '(c' → logprob: -4.30183744430542
    4. '(' → logprob: -5.92683744430542
    5. '()' → logprob: -9.301837921142578
    6. ' la' → logprob: -9.676837921142578
    7. ' (' → logprob: -9.801837921142578
    8. ' le' → logprob: -11.676837921142578
    9. ' ' → logprob: -11.926837921142578
    10. ')' → logprob: -12.176837921142578

Token 187: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.11256445199251175
    2. 'c' → logprob: -2.9875645637512207
    3. 'liste' → logprob: -3.3625645637512207
    4. ' c' → logprob: -3.8625645637512207
    5. 'list' → logprob: -8.737564086914062
    6. ' list' → logprob: -9.112564086914062
    7. ' lista' → logprob: -10.362564086914062
    8. ' Liste' → logprob: -10.862564086914062
    9. 'Liste' → logprob: -10.862564086914062
    10. 'lista' → logprob: -11.737564086914062

Token 188: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.025441480800509453
    2. ' c' → logprob: -4.150441646575928
    3. '(c' → logprob: -4.775441646575928
    4. '()' → logprob: -7.525441646575928
    5. '(' → logprob: -8.52544116973877
    6. '(
' → logprob: -9.52544116973877
    7. '_c' → logprob: -10.27544116973877
    8. ')c' → logprob: -10.65044116973877
    9. 's' → logprob: -11.02544116973877
    10. '.c' → logprob: -12.02544116973877

Token 189: ' en' (ID: 469)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.2031594216823578
    2. '.' → logprob: -1.7031594514846802
    3. '.c' → logprob: -6.703159332275391
    4. ')' → logprob: -8.07815933227539
    5. '.sorted' → logprob: -9.20315933227539
    6. ' .' → logprob: -9.82815933227539
    7. '.s' → logprob: -10.57815933227539
    8. '.reverse' → logprob: -12.20315933227539
    9. ').' → logprob: -12.45315933227539
    10. '()' → logprob: -13.07815933227539

Token 190: ' ordre' (ID: 103061)
  Prédit: ' place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.04737977683544159
    2. '-place' → logprob: -4.047379970550537
    3. ' ascending' → logprob: -4.547379970550537
    4. 'place' → logprob: -4.672379970550537
    5. ' reverse' → logprob: -5.547379970550537
    6. ' c' → logprob: -5.672379970550537
    7. ' descending' → logprob: -7.797379970550537
    8. 'c' → logprob: -8.422379493713379
    9. '_place' → logprob: -8.547379493713379
    10. 'reverse' → logprob: -9.297379493713379

Token 191: ' décro' (ID: 176854)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.23868651688098907
    2. ' cro' → logprob: -1.9886865615844727
    3. 'asc' → logprob: -2.9886865615844727
    4. ')' → logprob: -5.238686561584473
    5. ' décro' → logprob: -5.238686561584473
    6. 'c' → logprob: -5.488686561584473
    7. '=' → logprob: -6.113686561584473
    8. ' )' → logprob: -6.488686561584473
    9. ' asc' → logprob: -6.988686561584473
    10. '_c' → logprob: -7.238686561584473

Token 192: 'issant' (ID: 31359)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.8955570459365845
    2. 'dent' → logprob: -1.5205570459365845
    3. 'issant' → logprob: -2.145556926727295
    4. 'd' → logprob: -2.270556926727295
    5. 'rent' → logprob: -2.770556926727295
    6. 'sent' → logprob: -3.645556926727295
    7. 'r' → logprob: -3.895556926727295
    8. 'endant' → logprob: -4.770556926727295
    9. 'rend' → logprob: -4.770556926727295
    10. 's' → logprob: -4.770556926727295

Token 193: '.
' (ID: 558)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06366630643606186
    2. '.' → logprob: -3.688666343688965
    3. '.
' → logprob: -3.688666343688965
    4. '.sort' → logprob: -5.313666343688965
    5. '.c' → logprob: -5.938666343688965
    6. ' c' → logprob: -7.188666343688965
    7. ')' → logprob: -7.563666343688965
    8. 's' → logprob: -7.563666343688965
    9. '
' → logprob: -7.688666343688965
    10. ',' → logprob: -7.813666343688965

Token 194: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: 0.0
    2. ' c' → logprob: -19.25
    3. '
' → logprob: -20.25
    4. ')c' → logprob: -20.25
    5. 'с' → logprob: -20.875
    6. '	c' → logprob: -21.625
    7. 'sorted' → logprob: -21.875
    8. '```' → logprob: -22.375
    9. ',' → logprob: -23.25
    10. '#' → logprob: -23.625

Token 195: ' sort' (ID: 4506)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0019286326132714748
    2. ' c' → logprob: -6.251928806304932
    3. '
' → logprob: -16.751928329467773
    4. ')c' → logprob: -17.251928329467773
    5. '	c' → logprob: -18.001928329467773
    6. 'sorted' → logprob: -18.751928329467773
    7. 'с' → logprob: -19.751928329467773
    8. ' ' → logprob: -19.876928329467773
    9. '.c' → logprob: -20.126928329467773
    10. '_c' → logprob: -20.376928329467773

Token 196: '()' (ID: 416)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.0012292771134525537
    2. '()' → logprob: -7.251229286193848
    3. 'reverse' → logprob: -7.876229286193848
    4. '(' → logprob: -9.001229286193848
    5. '(key' → logprob: -11.626229286193848
    6. ' reverse' → logprob: -13.001229286193848
    7. '_reverse' → logprob: -13.501229286193848
    8. '.reverse' → logprob: -13.751229286193848
    9. '(re' → logprob: -13.876229286193848
    10. '(inplace' → logprob: -14.376229286193848

Token 197: ' trie' (ID: 139428)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.00163947360124439
    2. 'reverse' → logprob: -6.626639366149902
    3. '(key' → logprob: -8.626639366149902
    4. '(' → logprob: -9.001639366149902
    5. '()' → logprob: -11.876639366149902
    6. ' reverse' → logprob: -13.126639366149902
    7. '(re' → logprob: -14.751639366149902
    8. '.reverse' → logprob: -14.876639366149902
    9. '(sort' → logprob: -15.001639366149902
    10. '_reverse' → logprob: -15.251639366149902

Token 198: ' la' (ID: 557)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.0007865179213695228
    2. 'reverse' → logprob: -7.250786304473877
    3. '()' → logprob: -9.875786781311035
    4. '(key' → logprob: -11.250786781311035
    5. '(' → logprob: -11.625786781311035
    6. ' reverse' → logprob: -13.125786781311035
    7. 'c' → logprob: -14.875786781311035
    8. '.reverse' → logprob: -15.125786781311035
    9. '(c' → logprob: -15.500786781311035
    10. 'Reverse' → logprob: -15.875786781311035

Token 199: ' liste' (ID: 31719)
  Prédit: ' reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.8133789896965027
    2. 'reverse' → logprob: -0.8133789896965027
    3. 'c' → logprob: -2.3133790493011475
    4. ' c' → logprob: -4.313378810882568
    5. '(reverse' → logprob: -7.438378810882568
    6. ' key' → logprob: -8.313379287719727
    7. ' ' → logprob: -9.938379287719727
    8. 'key' → logprob: -10.563379287719727
    9. ',' → logprob: -10.688379287719727
    10. '.reverse' → logprob: -11.063379287719727

Token 200: ' sur' (ID: 1512)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.0006917051505297422
    2. 'reverse' → logprob: -7.375691890716553
    3. '(' → logprob: -10.625691413879395
    4. '(key' → logprob: -10.625691413879395
    5. '(c' → logprob: -12.125691413879395
    6. ' reverse' → logprob: -12.125691413879395
    7. '()' → logprob: -12.375691413879395
    8. 'c' → logprob: -14.125691413879395
    9. '.reverse' → logprob: -15.000691413879395
    10. '_reverse' → logprob: -15.250691413879395

Token 201: ' place' (ID: 2475)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.2958570420742035
    2. ' reverse' → logprob: -1.5458570718765259
    3. '(reverse' → logprob: -3.1708569526672363
    4. 'c' → logprob: -7.295856952667236
    5. '()' → logprob: -8.795857429504395
    6. ' key' → logprob: -10.170857429504395
    7. ' ' → logprob: -10.545857429504395
    8. ' c' → logprob: -10.670857429504395
    9. 'key' → logprob: -10.670857429504395
    10. 'place' → logprob: -10.795857429504395

Token 202: '.
' (ID: 558)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.00544695882126689
    2. 'reverse' → logprob: -5.255446910858154
    3. '(c' → logprob: -8.880447387695312
    4. ' reverse' → logprob: -10.380447387695312
    5. '()' → logprob: -10.755447387695312
    6. 'c' → logprob: -12.005447387695312
    7. '(' → logprob: -12.130447387695312
    8. '(key' → logprob: -12.880447387695312
    9. '()
' → logprob: -13.130447387695312
    10. 'rev' → logprob: -13.630447387695312

Token 203: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011048642918467522
    2. ' c' → logprob: -4.511048793792725
    3. '
' → logprob: -14.636048316955566
    4. ' 
' → logprob: -15.761048316955566
    5. 'reverse' → logprob: -16.511049270629883
    6. ')c' → logprob: -16.886049270629883
    7. ')' → logprob: -17.761049270629883
    8. ' reverse' → logprob: -18.011049270629883
    9. '[::-' → logprob: -18.136049270629883
    10. ',' → logprob: -18.511049270629883

Token 204: ' reverse' (ID: 18199)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02330382727086544
    2. ' c' → logprob: -3.773303747177124
    3. 'reverse' → logprob: -10.148303985595703
    4. ' reverse' → logprob: -10.898303985595703
    5. 'sort' → logprob: -15.773303985595703
    6. '	c' → logprob: -16.273303985595703
    7. '#' → logprob: -16.523303985595703
    8. ' ' → logprob: -16.648303985595703
    9. '
' → logprob: -16.773303985595703
    10. ')c' → logprob: -16.898303985595703

Token 205: '=True' (ID: 7827)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06293192505836487
    2. '=True' → logprob: -2.812932014465332
    3. ' =' → logprob: -7.062932014465332
    4. '()' → logprob: -9.187932014465332
    5. '=False' → logprob: -13.187932014465332
    6. '＝' → logprob: -14.437932014465332
    7. '=c' → logprob: -14.937932014465332
    8. '   ' → logprob: -15.312932014465332
    9. '=true' → logprob: -15.312932014465332
    10. '(True' → logprob: -15.437932014465332

Token 206: ' spéc' (ID: 20135)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35341987013816833
    2. '=True' → logprob: -1.4784198999404907
    3. '=' → logprob: -2.978419780731201
    4. ')
' → logprob: -4.603419780731201
    5. ')c' → logprob: -5.353419780731201
    6. 'c' → logprob: -5.978419780731201
    7. '=c' → logprob: -6.853419780731201
    8. ',' → logprob: -8.35342025756836
    9. ')=' → logprob: -8.97842025756836
    10. ' =' → logprob: -10.22842025756836

Token 207: 'ifie' (ID: 46409)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.48242801427841187
    2. 'ifie' → logprob: -1.7324280738830566
    3. '=' → logprob: -2.3574280738830566
    4. 'ifié' → logprob: -2.4824280738830566
    5. 'ific' → logprob: -4.857428073883057
    6. 'ifiant' → logprob: -5.357428073883057
    7. 'ifiquement' → logprob: -5.482428073883057
    8. 'ifique' → logprob: -5.482428073883057
    9. 'ifi' → logprob: -6.232428073883057
    10. 'ifiée' → logprob: -6.607428073883057

Token 208: ' de' (ID: 334)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.27315735816955566
    2. ')' → logprob: -2.1481573581695557
    3. '=' → logprob: -2.2731573581695557
    4. ' que' → logprob: -4.773157119750977
    5. ' True' → logprob: -5.398157119750977
    6. 'True' → logprob: -5.898157119750977
    7. ' that' → logprob: -6.773157119750977
    8. 'c' → logprob: -7.523157119750977
    9. ' )' → logprob: -7.523157119750977
    10. ',' → logprob: -8.273157119750977

Token 209: ' tr' (ID: 498)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6299455761909485
    2. ' True' → logprob: -1.0049455165863037
    3. ' tr' → logprob: -2.7549455165863037
    4. 'c' → logprob: -4.004945755004883
    5. 'tr' → logprob: -4.254945755004883
    6. ' c' → logprob: -5.629945755004883
    7. ' Trier' → logprob: -7.879945755004883
    8. 'Tr' → logprob: -8.254945755004883
    9. 'T' → logprob: -8.379945755004883
    10. '=True' → logprob: -8.754945755004883

Token 210: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.7144712209701538
    2. 'ie' → logprob: -1.0894712209701538
    3. 'ié' → logprob: -2.2144713401794434
    4. 'i' → logprob: -3.3394713401794434
    5. 'ue' → logprob: -4.839471340179443
    6. 'ière' → logprob: -4.964471340179443
    7. 'ième' → logprob: -5.089471340179443
    8. 'e' → logprob: -5.214471340179443
    9. 'ieuse' → logprob: -6.839471340179443
    10. 'ever' → logprob: -7.214471340179443

Token 211: ' du' (ID: 1462)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.14964070916175842
    2. '=' → logprob: -2.2746407985687256
    3. '=c' → logprob: -4.0246405601501465
    4. 'c' → logprob: -4.1496405601501465
    5. 'la' → logprob: -6.6496405601501465
    6. ' c' → logprob: -7.5246405601501465
    7. ' la' → logprob: -8.899641036987305
    8. 'le' → logprob: -9.024641036987305
    9. ' =' → logprob: -9.149641036987305
    10. 'à' → logprob: -10.399641036987305

Token 212: ' plus' (ID: 2932)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07257013767957687
    2. ' True' → logprob: -2.6975700855255127
    3. '=True' → logprob: -6.947570323944092
    4. 'plus' → logprob: -6.947570323944092
    5. 'c' → logprob: -7.697570323944092
    6. ' plus' → logprob: -8.697569847106934
    7. 'largest' → logprob: -10.572569847106934
    8. 'v' → logprob: -11.322569847106934
    9. 'true' → logprob: -11.697569847106934
    10. 'False' → logprob: -11.947569847106934

Token 213: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.007675010710954666
    2. ' grand' → logprob: -4.8826751708984375
    3. 'gr' → logprob: -10.132675170898438
    4. 'large' → logprob: -11.507675170898438
    5. 'Grand' → logprob: -11.882675170898438
    6. 'c' → logprob: -13.132675170898438
    7. 'fort' → logprob: -13.257675170898438
    8. '#' → logprob: -13.382675170898438
    9. '```' → logprob: -13.382675170898438
    10. 'gran' → logprob: -14.007675170898438

Token 214: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.677894651889801
    2. 'c' → logprob: -1.5528945922851562
    3. ',' → logprob: -1.8028945922851562
    4. ' au' → logprob: -2.9278945922851562
    5. '=True' → logprob: -4.427894592285156
    6. ')' → logprob: -4.427894592285156
    7. ' c' → logprob: -4.927894592285156
    8. 'à' → logprob: -5.177894592285156
    9. '<|end|>' → logprob: -5.302894592285156
    10. 'élé' → logprob: -5.552894592285156

Token 215: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.26561564207077026
    2. 'grand' → logprob: -1.640615701675415
    3. 'c' → logprob: -3.890615701675415
    4. 'True' → logprob: -4.765615463256836
    5. 'False' → logprob: -5.765615463256836
    6. '```' → logprob: -6.015615463256836
    7. 'f' → logprob: -6.515615463256836
    8. 'largest' → logprob: -7.765615463256836
    9. 'pl' → logprob: -8.015615463256836
    10. 'gr' → logprob: -8.015615463256836

Token 216: ' petit' (ID: 20577)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.48954692482948303
    2. 'False' → logprob: -1.6145468950271606
    3. 'pet' → logprob: -2.61454701423645
    4. 'True' → logprob: -2.61454701423645
    5. '```' → logprob: -3.61454701423645
    6. 'v' → logprob: -6.739546775817871
    7. 'c' → logprob: -6.864546775817871
    8. ',' → logprob: -6.989546775817871
    9. 'près' → logprob: -7.114546775817871
    10. 'moins' → logprob: -7.114546775817871

Token 217: '.
' (ID: 558)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2255098521709442
    2. ')
' → logprob: -1.7255098819732666
    3. ')' → logprob: -3.9755098819732666
    4. ')c' → logprob: -5.4755096435546875
    5. '.
' → logprob: -7.6005096435546875
    6. ').
' → logprob: -9.850509643554688
    7. ')
' → logprob: -9.975509643554688
    8. ' c' → logprob: -9.975509643554688
    9. ',' → logprob: -10.225509643554688
    10. ').' → logprob: -10.225509643554688

Token 218: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.5776860184123507e-06
    2. '
' → logprob: -13.25000286102295
    3. ' c' → logprob: -14.25000286102295
    4. ')c' → logprob: -16.500001907348633
    5. '```' → logprob: -17.500001907348633
    6. ')' → logprob: -18.125001907348633
    7. ')
' → logprob: -18.750001907348633
    8. '
' → logprob: -19.125001907348633
    9. ',' → logprob: -19.875001907348633
    10. '	c' → logprob: -20.000001907348633

Token 219: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.07890190184116364
    2. '.' → logprob: -2.578902006149292
    3. '.reverse' → logprob: -11.578902244567871
    4. ' .' → logprob: -13.578902244567871
    5. '.s' → logprob: -14.328902244567871
    6. '.c' → logprob: -15.203902244567871
    7. '.sorted' → logprob: -15.828902244567871
    8. 'sort' → logprob: -16.203901290893555
    9. ').' → logprob: -16.453901290893555
    10. '.Sort' → logprob: -16.828901290893555

Token 220: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.00082309142453596
    2. '(' → logprob: -7.125823020935059
    3. 'reverse' → logprob: -11.375823020935059
    4. '(re' → logprob: -12.250823020935059
    5. '()' → logprob: -13.375823020935059
    6. ' (' → logprob: -15.750823020935059
    7. '(key' → logprob: -15.750823020935059
    8. '_reverse' → logprob: -16.625823974609375
    9. '(r' → logprob: -16.750823974609375
    10. ' reverse' → logprob: -16.875823974609375

Token 221: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0009218233171850443
    2. '=' → logprob: -7.000921726226807
    3. ')' → logprob: -11.500922203063965
    4. 'True' → logprob: -15.750922203063965
    5. ')=' → logprob: -16.37592124938965
    6. '=T' → logprob: -17.12592124938965
    7. ' =' → logprob: -17.50092124938965
    8. '(True' → logprob: -17.87592124938965
    9. '=False' → logprob: -19.25092124938965
    10. '==' → logprob: -19.75092124938965

Token 222: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ')
' → logprob: -17.375
    3. ' )' → logprob: -17.625
    4. '))' → logprob: -18.0
    5. ')c' → logprob: -19.625
    6. ')`' → logprob: -19.875
    7. ')#' → logprob: -20.25
    8. '),' → logprob: -20.875
    9. ')

' → logprob: -21.25
    10. ').' → logprob: -22.375

Token 223: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3735634386539459
    2. 'for' → logprob: -2.498563528060913
    3. 's' → logprob: -2.748563528060913
    4. 'res' → logprob: -3.248563528060913
    5. 'total' → logprob: -3.248563528060913
    6. 'ans' → logprob: -3.748563528060913
    7. 'if' → logprob: -4.373563289642334
    8. 'answer' → logprob: -4.373563289642334
    9. 'sum' → logprob: -4.873563289642334
    10. 'k' → logprob: -5.123563289642334

Token 224: ' Initial' (ID: 9209)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3540949821472168
    2. 'total' → logprob: -2.479094982147217
    3. '#' → logprob: -2.729094982147217
    4. 's' → logprob: -2.979094982147217
    5. 'for' → logprob: -3.479094982147217
    6. 'res' → logprob: -3.604094982147217
    7. 'sum' → logprob: -4.479094982147217
    8. 'ans' → logprob: -5.104094982147217
    9. 'answer' → logprob: -5.229094982147217
    10. 'dp' → logprob: -5.604094982147217

Token 225: 'iser' (ID: 7466)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.471428394317627
    2. 'iser' → logprob: -1.721428394317627
    3. 'total' → logprob: -1.971428394317627
    4. 'ize' → logprob: -2.096428394317627
    5. 'izer' → logprob: -2.596428394317627
    6. 's' → logprob: -3.096428394317627
    7. 'result' → logprob: -3.096428394317627
    8. 'isateur' → logprob: -3.346428394317627
    9. '#' → logprob: -3.721428394317627
    10. 'ized' → logprob: -4.096428394317627

Token 226: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1106573343276978
    2. 'result' → logprob: -1.6106573343276978
    3. 'res' → logprob: -2.110657215118408
    4. 's' → logprob: -2.235657215118408
    5. ' ans' → logprob: -2.860657215118408
    6. 'total' → logprob: -3.360657215118408
    7. 'answer' → logprob: -3.360657215118408
    8. 'sum' → logprob: -3.485657215118408
    9. ' result' → logprob: -3.860657215118408
    10. 'dp' → logprob: -3.860657215118408

Token 227: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6570742130279541
    2. 's' → logprob: -1.407074213027954
    3. 'dp' → logprob: -2.282074213027954
    4. 'rés' → logprob: -2.657074213027954
    5. 'res' → logprob: -3.407074213027954
    6. 'total' → logprob: -4.782073974609375
    7. 'answer' → logprob: -5.032073974609375
    8. 'ans' → logprob: -5.282073974609375
    9. 'ré' → logprob: -5.782073974609375
    10. 'r' → logprob: -6.407073974609375

Token 228: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7472554445266724
    2. 's' → logprob: -2.247255325317383
    3. 'ans' → logprob: -2.497255325317383
    4. ' result' → logprob: -2.622255325317383
    5. ' ans' → logprob: -2.997255325317383
    6. 'res' → logprob: -3.122255325317383
    7. 'answer' → logprob: -3.247255325317383
    8. 'sum' → logprob: -3.247255325317383
    9. 'total' → logprob: -3.247255325317383
    10. ' s' → logprob: -4.122255325317383

Token 229: ' réponse' (ID: 50332)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08883628249168396
    2. 'result' → logprob: -3.338836193084717
    3. 'rés' → logprob: -3.713836193084717
    4. 'ré' → logprob: -4.338836193084717
    5. 'comp' → logprob: -5.588836193084717
    6. 'r' → logprob: -6.088836193084717
    7. 'score' → logprob: -6.338836193084717
    8. 'total' → logprob: -6.838836193084717
    9. 'som' → logprob: -6.963836193084717
    10. 'c' → logprob: -7.588836193084717

Token 230: ' à' (ID: 1221)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.4856228530406952
    2. 'ans' → logprob: -0.9856228828430176
    3. 'res' → logprob: -4.610622882843018
    4. 'result' → logprob: -6.735622882843018
    5. ' answer' → logprob: -9.11062240600586
    6. ' ans' → logprob: -9.11062240600586
    7. 'r' → logprob: -10.23562240600586
    8. 'total' → logprob: -10.98562240600586
    9. 'response' → logprob: -11.36062240600586
    10. 're' → logprob: -11.36062240600586

Token 231: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002294301986694336
    2. ' ' → logprob: -6.252294540405273
    3. '1' → logprob: -8.127294540405273
    4. 'c' → logprob: -9.627294540405273
    5. ' c' → logprob: -13.002294540405273
    6. 'mod' → logprob: -13.502294540405273
    7. 'n' → logprob: -15.377294540405273
    8. '100' → logprob: -16.377294540405273
    9. 'len' → logprob: -16.502294540405273
    10. '-' → logprob: -16.502294540405273

Token 232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011033025803044438
    2. '1' → logprob: -6.876103401184082
    3. 'c' → logprob: -9.626103401184082
    4. 'ans' → logprob: -13.001103401184082
    5. 'mod' → logprob: -14.001103401184082
    6. 'res' → logprob: -14.751103401184082
    7. ' ' → logprob: -14.876103401184082
    8. '-' → logprob: -15.126103401184082
    9. 'sum' → logprob: -16.751102447509766
    10. '(' → logprob: -16.876102447509766

Token 233: '.' (ID: 13)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.49176761507987976
    2. 'answer' → logprob: -0.9917676448822021
    3. 'res' → logprob: -4.116767406463623
    4. 'result' → logprob: -6.866767406463623
    5. 'r' → logprob: -8.991767883300781
    6. 'a' → logprob: -11.491767883300781
    7. 'response' → logprob: -11.616767883300781
    8. 'total' → logprob: -11.866767883300781
    9. 're' → logprob: -12.116767883300781
    10. '```' → logprob: -12.366767883300781

Token 234: ' Elle' (ID: 21300)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7257282733917236
    2. 'answer' → logprob: -0.7257282733917236
    3. 'res' → logprob: -3.7257282733917236
    4. 'result' → logprob: -4.8507280349731445
    5. 'r' → logprob: -9.975728034973145
    6. 'response' → logprob: -10.600728034973145
    7. 're' → logprob: -10.975728034973145
    8. 'total' → logprob: -11.475728034973145
    9. '```' → logprob: -11.725728034973145
    10. 'rés' → logprob: -12.475728034973145

Token 235: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2016018033027649
    2. ' =' → logprob: -1.7016017436981201
    3. ' +=' → logprob: -10.3266019821167
    4. ',' → logprob: -10.3266019821167
    5. ' ' → logprob: -10.3266019821167
    6. '_' → logprob: -10.4516019821167
    7. '.' → logprob: -11.0766019821167
    8. 's' → logprob: -11.3266019821167
    9. '+=' → logprob: -11.4516019821167
    10. '#' → logprob: -11.9516019821167

Token 236: 'i' (ID: 72)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14906801283359528
    2. 'ient' → logprob: -3.0240681171417236
    3. 'in' → logprob: -3.6490681171417236
    4. 'e' → logprob: -3.6490681171417236
    5. 'inue' → logprob: -4.2740678787231445
    6. 'ent' → logprob: -4.8990678787231445
    7. 'i' → logprob: -5.0240678787231445
    8. '+=' → logprob: -6.0240678787231445
    9. ' =' → logprob: -7.2740678787231445
    10. 't' → logprob: -7.2740678787231445

Token 237: 'endra' (ID: 32364)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01888015866279602
    2. '#' → logprob: -5.768880367279053
    3. 'nt' → logprob: -5.768880367279053
    4. '0' → logprob: -6.143880367279053
    5. 'n' → logprob: -6.518880367279053
    6. 'st' → logprob: -6.893880367279053
    7. '=' → logprob: -7.018880367279053
    8. 'd' → logprob: -7.268880367279053
    9. 'te' → logprob: -7.393880367279053
    10. 'nte' → logprob: -7.643880367279053

Token 238: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7676022052764893
    2. '0' → logprob: -1.3926022052764893
    3. 'la' → logprob: -1.3926022052764893
    4. 'le' → logprob: -3.6426022052764893
    5. ' le' → logprob: -5.26760196685791
    6. 'l' → logprob: -5.76760196685791
    7. 'the' → logprob: -6.64260196685791
    8. ' the' → logprob: -7.01760196685791
    9. 's' → logprob: -7.39260196685791
    10. ' ' → logprob: -7.89260196685791

Token 239: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2848510444164276
    2. 'rés' → logprob: -1.78485107421875
    3. 's' → logprob: -3.53485107421875
    4. 'ré' → logprob: -4.15985107421875
    5. 'total' → logprob: -4.28485107421875
    6. 'r' → logprob: -4.53485107421875
    7. 'answer' → logprob: -4.65985107421875
    8. 'nombre' → logprob: -7.65985107421875
    9. 'res' → logprob: -7.90985107421875
    10. '0' → logprob: -9.65985107421875

Token 240: ' final' (ID: 1721)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.5744749307632446
    2. 'ans' → logprob: -1.3244749307632446
    3. 'res' → logprob: -2.074474811553955
    4. 'result' → logprob: -3.199474811553955
    5. 'r' → logprob: -5.824474811553955
    6. ' ans' → logprob: -7.824474811553955
    7. ' answer' → logprob: -7.949474811553955
    8. 'rés' → logprob: -8.199475288391113
    9. '=' → logprob: -8.574475288391113
    10. 'ré' → logprob: -9.199475288391113

Token 241: ' de' (ID: 334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4879046082496643
    2. 'answer' → logprob: -0.9879046082496643
    3. 'res' → logprob: -4.6129045486450195
    4. 'result' → logprob: -5.6129045486450195
    5. 'r' → logprob: -9.61290454864502
    6. 'ré' → logprob: -11.48790454864502
    7. 'response' → logprob: -11.48790454864502
    8. '```' → logprob: -11.48790454864502
    9. 'resp' → logprob: -12.11290454864502
    10. 'rep' → logprob: -12.11290454864502

Token 242: ' nos' (ID: 4001)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.295976847410202
    2. 'l' → logprob: -2.1709768772125244
    3. ' la' → logprob: -2.5459768772125244
    4. '0' → logprob: -3.4209768772125244
    5. 'c' → logprob: -4.295976638793945
    6. 's' → logprob: -5.045976638793945
    7. 'ans' → logprob: -5.045976638793945
    8. 'answer' → logprob: -7.170976638793945
    9. 'a' → logprob: -7.295976638793945
    10. 'r' → logprob: -8.045976638793945

Token 243: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.4355529248714447
    2. ' calcul' → logprob: -1.060552954673767
    3. 's' → logprob: -5.560553073883057
    4. 'cal' → logprob: -7.310553073883057
    5. 'comp' → logprob: -7.560553073883057
    6. 'c' → logprob: -7.935553073883057
    7. 'calc' → logprob: -8.560552597045898
    8. '#' → logprob: -8.685552597045898
    9. '```' → logprob: -8.685552597045898
    10. 'nombre' → logprob: -8.685552597045898

Token 244: 's' (ID: 82)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.46231594681739807
    2. 'a' → logprob: -1.8373159170150757
    3. 'ateur' → logprob: -2.7123160362243652
    4. '=' → logprob: -3.2123160362243652
    5. 's' → logprob: -3.4623160362243652
    6. 'e' → logprob: -4.337316036224365
    7. 'at' → logprob: -4.337316036224365
    8. ' =' → logprob: -4.337316036224365
    9. '_' → logprob: -4.837316036224365
    10. 'ations' → logprob: -4.837316036224365

Token 245: '.
' (ID: 558)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.6657674312591553
    2. 'ans' → logprob: -0.9157674312591553
    3. 'res' → logprob: -2.5407674312591553
    4. 'result' → logprob: -5.040767669677734
    5. 'r' → logprob: -8.290767669677734
    6. 'a' → logprob: -9.415767669677734
    7. 'response' → logprob: -9.415767669677734
    8. 'rés' → logprob: -9.915767669677734
    9. 'rep' → logprob: -10.290767669677734
    10. 'ré' → logprob: -10.415767669677734

Token 246: 'ans' (ID: 616)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.30739542841911316
    2. 'ans' → logprob: -1.5573954582214355
    3. 'res' → logprob: -3.3073954582214355
    4. 'result' → logprob: -4.0573954582214355
    5. 'response' → logprob: -11.182394981384277
    6. 'total' → logprob: -11.932394981384277
    7. 'r' → logprob: -12.182394981384277
    8. 're' → logprob: -12.307394981384277
    9. 'rés' → logprob: -12.307394981384277
    10. ' answer' → logprob: -12.557394981384277

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687169551849365
    2. ' =' → logprob: -1.1368716955184937
    3. ' ' → logprob: -15.136871337890625
    4. ' ' → logprob: -15.761871337890625
    5. ',' → logprob: -16.511871337890625
    6. ')' → logprob: -16.761871337890625
    7. 's' → logprob: -17.011871337890625
    8. '＝' → logprob: -17.511871337890625
    9. '_' → logprob: -17.886871337890625
    10. '=

' → logprob: -18.386871337890625

Token 248: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005928678438067436
    2. ' ' → logprob: -5.1309285163879395
    3. ' ' → logprob: -16.75592803955078
    4. '۰' → logprob: -19.50592803955078
    5. 'c' → logprob: -20.31842803955078
    6. 'int' → logprob: -20.56842803955078
    7. '1' → logprob: -20.81842803955078
    8. 'n' → logprob: -20.88092803955078
    9. '=' → logprob: -21.00592803955078
    10. '   ' → logprob: -21.13092803955078

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. 'c' → logprob: -15.500000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '1' → logprob: -15.750000953674316
    5. 'n' → logprob: -16.375
    6. '(' → logprob: -17.0
    7. 'pow' → logprob: -17.625
    8. 'int' → logprob: -17.75
    9. 'sum' → logprob: -19.125
    10. '۰' → logprob: -19.3125

Token 250: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007151864934712648
    2. '<|end|>' → logprob: -5.257152080535889
    3. ' for' → logprob: -6.507152080535889
    4. ')' → logprob: -8.50715160369873
    5. '+' → logprob: -9.50715160369873
    6. 'n' → logprob: -9.75715160369873
    7. '
' → logprob: -10.00715160369873
    8. 'i' → logprob: -11.13215160369873
    9. '<|end|>' → logprob: -12.38215160369873
    10. '#' → logprob: -12.63215160369873

Token 251: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000264315924141556
    2. 'i' → logprob: -9.000264167785645
    3. 'k' → logprob: -10.250264167785645
    4. 'factor' → logprob: -10.625264167785645
    5. 'power' → logprob: -10.750264167785645
    6. ' for' → logprob: -10.750264167785645
    7. 'pow' → logprob: -10.875264167785645
    8. 'p' → logprob: -11.750264167785645
    9. 'n' → logprob: -12.750264167785645
    10. 't' → logprob: -13.875264167785645

Token 252: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015359772078227252
    2. 'i' → logprob: -9.625153541564941
    3. 'pow' → logprob: -10.000153541564941
    4. 'power' → logprob: -11.125153541564941
    5. 'factor' → logprob: -11.375153541564941
    6. 'k' → logprob: -12.750153541564941
    7. ' for' → logprob: -13.125153541564941
    8. 'p' → logprob: -13.375153541564941
    9. 'from' → logprob: -13.625153541564941
    10. 'if' → logprob: -13.750153541564941

Token 253: 'cler' (ID: 55207)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5256417989730835
    2. 'cle' → logprob: -1.5256417989730835
    3. 'for' → logprob: -2.025641918182373
    4. 'c' → logprob: -2.900641918182373
    5. 'cl' → logprob: -6.525641918182373
    6. 'cler' → logprob: -6.525641918182373
    7. ' for' → logprob: -7.400641918182373
    8. '#' → logprob: -8.275641441345215
    9. 'clé' → logprob: -8.900641441345215
    10. 'cles' → logprob: -9.275641441345215

Token 254: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3825225532054901
    2. ' i' → logprob: -1.6325225830078125
    3. 'for' → logprob: -2.1325225830078125
    4. 'i' → logprob: -5.8825225830078125
    5. '_' → logprob: -7.0075225830078125
    6. ' ' → logprob: -9.257522583007812
    7. ' _' → logprob: -10.632522583007812
    8. ' in' → logprob: -10.757522583007812
    9. ' over' → logprob: -10.757522583007812
    10. ' range' → logprob: -11.382522583007812

Token 255: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.264050155878067
    2. ' range' → logprob: -1.5140501260757446
    3. 'c' → logprob: -4.514050006866455
    4. ' c' → logprob: -7.389050006866455
    5. 'i' → logprob: -7.889050006866455
    6. ' i' → logprob: -10.264050483703613
    7. 'n' → logprob: -10.514050483703613
    8. 'r' → logprob: -10.639050483703613
    9. '(range' → logprob: -12.264050483703613
    10. 'rang' → logprob: -12.889050483703613

Token 256: ' liste' (ID: 31719)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014386319555342197
    2. ' range' → logprob: -4.264386177062988
    3. 'c' → logprob: -8.889386177062988
    4. 'r' → logprob: -10.264386177062988
    5. 'n' → logprob: -10.514386177062988
    6. 'i' → logprob: -11.014386177062988
    7. ' c' → logprob: -13.139386177062988
    8. 'rang' → logprob: -13.264386177062988
    9. '_' → logprob: -13.889386177062988
    10. 'for' → logprob: -14.639386177062988

Token 257: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35797056555747986
    2. ' for' → logprob: -1.2329705953598022
    3. 'c' → logprob: -5.107970714569092
    4. ' c' → logprob: -5.732970714569092
    5. ':' → logprob: -9.107970237731934
    6. ' range' → logprob: -10.732970237731934
    7. 'range' → logprob: -10.857970237731934
    8. ' pour' → logprob: -11.482970237731934
    9. '(range' → logprob: -11.982970237731934
    10. 'pour' → logprob: -12.232970237731934

Token 258: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003185436362400651
    2. ' for' → logprob: -5.753185272216797
    3. ':' → logprob: -12.128185272216797
    4. '
' → logprob: -13.378185272216797
    5. ':
' → logprob: -14.378185272216797
    6. ',' → logprob: -16.628185272216797
    7. '' → logprob: -17.753185272216797
    8. '```' → logprob: -17.753185272216797
    9. ' 
' → logprob: -17.878185272216797
    10. 'f' → logprob: -17.878185272216797

Token 259: ' calcul' (ID: 7559)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6934676766395569
    2. ' i' → logprob: -0.6934676766395569
    3. 'range' → logprob: -9.19346809387207
    4. ' range' → logprob: -9.69346809387207
    5. '_' → logprob: -9.94346809387207
    6. 'for' → logprob: -10.06846809387207
    7. '_i' → logprob: -10.44346809387207
    8. '(i' → logprob: -11.06846809387207
    9. ' _' → logprob: -12.06846809387207
    10. '[i' → logprob: -12.56846809387207

Token 260: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0015292633324861526
    2. 'ate' → logprob: -6.501529216766357
    3. 'ater' → logprob: -11.626529693603516
    4. '#' → logprob: -12.001529693603516
    5. 'ler' → logprob: -12.626529693603516
    6. 'r' → logprob: -12.876529693603516
    7. 'late' → logprob: -13.376529693603516
    8. 'e' → logprob: -13.626529693603516
    9. 'ter' → logprob: -14.626529693603516
    10. 'rer' → logprob: -14.626529693603516

Token 261: ' une' (ID: 2463)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5333160161972046
    2. ' i' → logprob: -1.7833160161972046
    3. 'range' → logprob: -1.9083160161972046
    4. ' range' → logprob: -3.283316135406494
    5. 'for' → logprob: -3.408316135406494
    6. ' for' → logprob: -4.783316135406494
    7. 'c' → logprob: -5.158316135406494
    8. 'n' → logprob: -5.408316135406494
    9. '_' → logprob: -6.658316135406494
    10. ' c' → logprob: -6.658316135406494

Token 262: ' somme' (ID: 64484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8337886929512024
    2. 'pu' → logprob: -0.9587886929512024
    3. ' for' → logprob: -1.9587886333465576
    4. ' puissance' → logprob: -4.083788871765137
    5. ' ' → logprob: -5.333788871765137
    6. 'i' → logprob: -5.833788871765137
    7. ' i' → logprob: -5.833788871765137
    8. ' somme' → logprob: -6.458788871765137
    9. 's' → logprob: -6.708788871765137
    10. ' valeur' → logprob: -6.708788871765137

Token 263: ' pond' (ID: 42367)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008684063330292702
    2. ' for' → logprob: -4.758684158325195
    3. ':' → logprob: -9.758684158325195
    4. 'pour' → logprob: -12.633684158325195
    5. ',' → logprob: -12.758684158325195
    6. 'i' → logprob: -13.008684158325195
    7. '
' → logprob: -13.383684158325195
    8. 'n' → logprob: -14.758684158325195
    9. ' pour' → logprob: -15.508684158325195
    10. '#' → logprob: -15.633684158325195

Token 264: 'érée' (ID: 113219)
  Prédit: 'érée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érée' → logprob: -0.04232935234904289
    2. 'ée' → logprob: -3.5423293113708496
    3. 'ération' → logprob: -5.79232931137085
    4. 'urée' → logprob: -5.79232931137085
    5. 'rée' → logprob: -6.04232931137085
    6. 'uée' → logprob: -6.79232931137085
    7. 'ér' → logprob: -7.29232931137085
    8. 'éré' → logprob: -7.54232931137085
    9. 'onnée' → logprob: -8.417329788208008
    10. 'érale' → logprob: -8.542329788208008

Token 265: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00030602619517594576
    2. ' for' → logprob: -8.125306129455566
    3. 'pour' → logprob: -12.375306129455566
    4. 'i' → logprob: -12.625306129455566
    5. ',' → logprob: -13.625306129455566
    6. ':' → logprob: -14.750306129455566
    7. '
' → logprob: -16.25030517578125
    8. 'range' → logprob: -16.25030517578125
    9. 'with' → logprob: -16.37530517578125
    10. '*' → logprob: -16.50030517578125

Token 266: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0280383548888494e-06
    2. ' for' → logprob: -14.375000953674316
    3. 'pow' → logprob: -15.125000953674316
    4. 'power' → logprob: -17.500001907348633
    5. 'weight' → logprob: -17.500001907348633
    6. 'i' → logprob: -18.500001907348633
    7. 'k' → logprob: -19.375001907348633
    8. 'p' → logprob: -19.500001907348633
    9. '
' → logprob: -19.500001907348633
    10. '```' → logprob: -19.625001907348633

Token 267: ' enumerate' (ID: 29671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0921942703134846e-05
    2. ' for' → logprob: -12.25001049041748
    3. 'pow' → logprob: -12.62501049041748
    4. 'i' → logprob: -13.50001049041748
    5. 'power' → logprob: -14.12501049041748
    6. 'k' → logprob: -15.25001049041748
    7. 'p' → logprob: -15.75001049041748
    8. 'weight' → logprob: -16.000011444091797
    9. 'factor' → logprob: -17.000011444091797
    10. 'f' → logprob: -17.500011444091797

Token 268: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0008588159107603133
    2. '(' → logprob: -7.125858783721924
    3. '(en' → logprob: -10.125859260559082
    4. ' (' → logprob: -12.875859260559082
    5. '(i' → logprob: -13.250859260559082
    6. '()' → logprob: -13.375859260559082
    7. '(n' → logprob: -13.750859260559082
    8. 'for' → logprob: -13.875859260559082
    9. '(
' → logprob: -14.125859260559082
    10. ' for' → logprob: -14.125859260559082

Token 269: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025306198745965958
    2. ',' → logprob: -4.400306224822998
    3. ')' → logprob: -4.775306224822998
    4. '):
' → logprob: -5.525306224822998
    5. ' ):' → logprob: -9.52530574798584
    6. '):

' → logprob: -9.90030574798584
    7. '()' → logprob: -10.15030574798584
    8. ' ,' → logprob: -10.90030574798584
    9. 'for' → logprob: -10.90030574798584
    10. '():' → logprob: -11.02530574798584

Token 270: ' donne' (ID: 30004)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2170078456401825
    2. ',' → logprob: -2.717007875442505
    3. ':' → logprob: -2.842007875442505
    4. ' for' → logprob: -2.842007875442505
    5. ')' → logprob: -5.342007637023926
    6. 'as' → logprob: -5.967007637023926
    7. '):' → logprob: -7.217007637023926
    8. '(start' → logprob: -7.217007637023926
    9. '()' → logprob: -7.342007637023926
    10. 'start' → logprob: -7.592007637023926

Token 271: ' à' (ID: 1221)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6677345037460327
    2. ' index' → logprob: -1.9177345037460327
    3. ' la' → logprob: -2.6677346229553223
    4. '(index' → logprob: -3.0427346229553223
    5. 'index' → logprob: -3.1677346229553223
    6. ' les' → logprob: -3.2927346229553223
    7. 'l' → logprob: -3.4177346229553223
    8. ' le' → logprob: -3.9177346229553223
    9. ' ' → logprob: -3.9177346229553223
    10. ' i' → logprob: -3.9177346229553223

Token 272: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.34045708179473877
    2. 'i' → logprob: -2.965456962585449
    3. 'index' → logprob: -2.965456962585449
    4. ' la' → logprob: -3.215456962585449
    5. 'la' → logprob: -3.590456962585449
    6. ' index' → logprob: -3.840456962585449
    7. 'each' → logprob: -3.965456962585449
    8. ' i' → logprob: -4.090456962585449
    9. 'c' → logprob: -4.090456962585449
    10. 'indice' → logprob: -4.215456962585449

Token 273: ' it' (ID: 480)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34236055612564087
    2. 'i' → logprob: -1.342360496520996
    3. ' index' → logprob: -4.217360496520996
    4. 'index' → logprob: -4.342360496520996
    5. 'indice' → logprob: -7.592360496520996
    6. ' idx' → logprob: -8.592360496520996
    7. 'idx' → logprob: -9.092360496520996
    8. ' indice' → logprob: -9.592360496520996
    9. ' ' → logprob: -10.717360496520996
    10. '0' → logprob: -11.967360496520996

Token 274: 'ération' (ID: 24977)
  Prédit: 'em'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'em' → logprob: -0.1004282534122467
    2. 'er' → logprob: -2.350428342819214
    3. 'ération' → logprob: -8.600428581237793
    4. '(' → logprob: -11.850428581237793
    5. 'erm' → logprob: -12.100428581237793
    6. 'e' → logprob: -12.225428581237793
    7. '(em' → logprob: -12.350428581237793
    8. 'ém' → logprob: -12.725428581237793
    9. 'érateur' → logprob: -12.725428581237793
    10. 'm' → logprob: -12.975428581237793

Token 275: ' un' (ID: 537)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5371313691139221
    2. ' index' → logprob: -2.0371313095092773
    3. ' l' → logprob: -2.4121313095092773
    4. 'index' → logprob: -2.4121313095092773
    5. 'l' → logprob: -3.2871313095092773
    6. 'i' → logprob: -3.7871313095092773
    7. '(index' → logprob: -4.412131309509277
    8. ' la' → logprob: -4.412131309509277
    9. ' un' → logprob: -5.537131309509277
    10. ' le' → logprob: -5.537131309509277

Token 276: ' couple' (ID: 7167)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7124750018119812
    2. ' index' → logprob: -1.587475061416626
    3. 'i' → logprob: -1.962475061416626
    4. 'index' → logprob: -2.212475061416626
    5. 'indice' → logprob: -3.087475061416626
    6. ' indice' → logprob: -4.962474822998047
    7. ' idx' → logprob: -6.837474822998047
    8. 'idx' → logprob: -7.212474822998047
    9. ' ' → logprob: -8.337474822998047
    10. ' tuple' → logprob: -9.087474822998047

Token 277: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7144492268562317
    2. ' (' → logprob: -1.214449167251587
    3. ' i' → logprob: -1.964449167251587
    4. '(index' → logprob: -2.839449167251587
    5. 'i' → logprob: -5.589449405670166
    6. ' index' → logprob: -5.589449405670166
    7. '(' → logprob: -5.714449405670166
    8. 'index' → logprob: -6.339449405670166
    9. '(_,' → logprob: -7.589449405670166
    10. ',' → logprob: -7.714449405670166

Token 278: 'k' (ID: 74)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001778830192051828
    2. ' i' → logprob: -7.001778602600098
    3. 'index' → logprob: -7.126778602600098
    4. 'indice' → logprob: -10.251778602600098
    5. 'idx' → logprob: -10.626778602600098
    6. ' index' → logprob: -13.001778602600098
    7. '_,' → logprob: -14.501778602600098
    8. '   ' → logprob: -15.001778602600098
    9. 'ind' → logprob: -15.751778602600098
    10. '0' → logprob: -16.126779556274414

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.158350151963532e-05
    2. ' ,' → logprob: -10.125061988830566
    3. ',c' → logprob: -11.625061988830566
    4. ',k' → logprob: -12.250061988830566
    5. ',)' → logprob: -12.875061988830566
    6. ',n' → logprob: -14.125061988830566
    7. '),' → logprob: -14.125061988830566
    8. ',),' → logprob: -14.250061988830566
    9. ',val' → logprob: -14.250061988830566
    10. ')' → logprob: -15.375061988830566

Token 280: ' num' (ID: 2269)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8598556518554688
    2. 'value' → logprob: -1.2348556518554688
    3. ' val' → logprob: -2.6098556518554688
    4. 'v' → logprob: -2.6098556518554688
    5. ' value' → logprob: -2.8598556518554688
    6. 'x' → logprob: -3.4848556518554688
    7. ' valeur' → logprob: -3.8598556518554688
    8. ' v' → logprob: -4.234855651855469
    9. ' x' → logprob: -5.109855651855469
    10. 'ci' → logprob: -6.109855651855469

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022350670769810677
    2. '),' → logprob: -7.377234935760498
    3. ',' → logprob: -7.877234935760498
    4. 'er' → logprob: -8.127235412597656
    5. 'éro' → logprob: -8.252235412597656
    6. 'ber' → logprob: -9.002235412597656
    7. 'érateur' → logprob: -9.002235412597656
    8. '):' → logprob: -9.502235412597656
    9. 'ération' → logprob: -9.502235412597656
    10. 'm' → logprob: -10.127235412597656

Token 282: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0029345564544200897
    2. ' for' → logprob: -5.877934455871582
    3. ':' → logprob: -9.252934455871582
    4. ',' → logprob: -10.752934455871582
    5. 'k' → logprob: -11.877934455871582
    6. ')' → logprob: -12.627934455871582
    7. 'pour' → logprob: -14.252934455871582
    8. '
' → logprob: -15.502934455871582
    9. '```' → logprob: -15.502934455871582
    10. '(k' → logprob: -15.627934455871582

Token 283: ' où' (ID: 15113)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06539768725633621
    2. 'for' → logprob: -2.8153977394104004
    3. ' k' → logprob: -6.0653977394104
    4. ',' → logprob: -7.6903977394104
    5. ')' → logprob: -8.440397262573242
    6. ':' → logprob: -9.315397262573242
    7. 'k' → logprob: -9.565397262573242
    8. ' ' → logprob: -9.690397262573242
    9. ' ,' → logprob: -9.690397262573242
    10. 'num' → logprob: -10.940397262573242

Token 284: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10023686289787292
    2. ' k' → logprob: -2.3502368927001953
    3. '	k' → logprob: -10.475236892700195
    4. ' ' → logprob: -14.475236892700195
    5. 'num' → logprob: -14.600236892700195
    6. ' ' → logprob: -14.600236892700195
    7. '  ' → logprob: -15.725236892700195
    8. ' num' → logprob: -15.850236892700195
    9. ' к' → logprob: -16.225236892700195
    10. '   ' → logprob: -16.600236892700195

Token 285: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002058903919532895
    2. ' ,' → logprob: -6.377058982849121
    3. ',num' → logprob: -8.752058982849121
    4. ',k' → logprob: -9.377058982849121
    5. ')' → logprob: -10.252058982849121
    6. ',
' → logprob: -11.127058982849121
    7. ' est' → logprob: -11.627058982849121
    8. '),' → logprob: -11.752058982849121
    9. ',)' → logprob: -12.127058982849121
    10. ',val' → logprob: -12.127058982849121

Token 286: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.09792805463075638
    2. ' k' → logprob: -2.847928047180176
    3. 'l' → logprob: -3.722928047180176
    4. 'k' → logprob: -4.847928047180176
    5. ' la' → logprob: -6.722928047180176
    6. ' le' → logprob: -7.472928047180176
    7. ' un' → logprob: -7.597928047180176
    8. ' lâ' → logprob: -8.347928047180176
    9. ' ' → logprob: -8.472928047180176
    10. 'le' → logprob: -8.472928047180176

Token 287: ''ind' (ID: 82245)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2853444814682007
    2. 'e' → logprob: -1.2853444814682007
    3. ' k' → logprob: -1.9103444814682007
    4. 'um' → logprob: -2.1603446006774902
    5. 'eg' → logprob: -3.2853446006774902
    6. ''' → logprob: -4.03534460067749
    7. '+' → logprob: -4.41034460067749
    8. ',' → logprob: -4.53534460067749
    9. ''ind' → logprob: -4.78534460067749
    10. '`' → logprob: -5.16034460067749

Token 288: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -9.253090865968261e-06
    2. 'ice' → logprob: -12.375009536743164
    3. 'e' → logprob: -13.125009536743164
    4. 'expl' → logprob: -13.875009536743164
    5. 'for' → logprob: -14.375009536743164
    6. 'exp' → logprob: -14.500009536743164
    7. 'exe' → logprob: -14.750009536743164
    8. 'dex' → logprob: -15.875009536743164
    9. 'exc' → logprob: -16.250009536743164
    10. 'x' → logprob: -16.375009536743164

Token 289: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024001303245313466
    2. ',num' → logprob: -8.750240325927734
    3. ' ,' → logprob: -9.875240325927734
    4. ',c' → logprob: -11.625240325927734
    5. ',
' → logprob: -12.125240325927734
    6. ',k' → logprob: -12.750240325927734
    7. 'et' → logprob: -13.125240325927734
    8. ',n' → logprob: -13.250240325927734
    9. ',de' → logprob: -13.250240325927734
    10. ',val' → logprob: -13.750240325927734

Token 290: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03548445180058479
    2. 'enumer' → logprob: -4.160484313964844
    3. ' c' → logprob: -4.785484313964844
    4. 'la' → logprob: -4.910484313964844
    5. ' la' → logprob: -6.160484313964844
    6. 'range' → logprob: -6.785484313964844
    7. ' enumerate' → logprob: -8.410484313964844
    8. ')c' → logprob: -10.660484313964844
    9. ' range' → logprob: -11.035484313964844
    10. ' ' → logprob: -11.160484313964844

Token 291: ' liste' (ID: 31719)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4617100656032562
    2. 'enumer' → logprob: -1.0867100954055786
    3. 'liste' → logprob: -3.711709976196289
    4. ' c' → logprob: -6.211709976196289
    5. 'list' → logprob: -6.211709976196289
    6. 'for' → logprob: -6.336709976196289
    7. 'range' → logprob: -7.086709976196289
    8. ' enumerate' → logprob: -7.461709976196289
    9. ' liste' → logprob: -8.211709976196289
    10. ' for' → logprob: -9.461709976196289

Token 292: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013474960578605533
    2. ',c' → logprob: -6.876347541809082
    3. ' ,' → logprob: -9.001347541809082
    4. ',k' → logprob: -9.876347541809082
    5. ',num' → logprob: -10.001347541809082
    6. 'for' → logprob: -10.376347541809082
    7. ',
' → logprob: -10.751347541809082
    8. ')' → logprob: -11.876347541809082
    9. 'c' → logprob: -12.001347541809082
    10. ',)' → logprob: -12.126347541809082

Token 293: 'comm' (ID: 2280)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07002746313810349
    2. ' ,' → logprob: -3.1950273513793945
    3. ')' → logprob: -4.6950273513793945
    4. '0' → logprob: -4.8200273513793945
    5. '),' → logprob: -5.4450273513793945
    6. ' k' → logprob: -6.4450273513793945
    7. 'k' → logprob: -6.5700273513793945
    8. ' c' → logprob: -7.3200273513793945
    9. 'c' → logprob: -7.5700273513793945
    10. ' )' → logprob: -8.445027351379395

Token 294: 'en' (ID: 262)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.010393376462161541
    2. 'es' → logprob: -5.635393142700195
    3. 'e' → logprob: -6.135393142700195
    4. 'ence' → logprob: -6.635393142700195
    5. 'ents' → logprob: -6.885393142700195
    6. 'ec' → logprob: -8.010393142700195
    7. 'enumer' → logprob: -8.510393142700195
    8. 'çant' → logprob: -8.760393142700195
    9. 'encé' → logprob: -8.760393142700195
    10. 'ente' → logprob: -8.885393142700195

Token 295: 'çant' (ID: 78714)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6378421187400818
    2. 'çant' → logprob: -0.7628421187400818
    3. 'c' → logprob: -7.262842178344727
    4. 'e' → logprob: -7.887842178344727
    5. 'cé' → logprob: -7.887842178344727
    6. 'ur' → logprob: -8.012842178344727
    7. 'ç' → logprob: -8.137842178344727
    8. 'uant' → logprob: -8.262842178344727
    9. 'as' → logprob: -8.387842178344727
    10. 'u' → logprob: -8.637842178344727

Token 296: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.0515965111553669
    2. ' à' → logprob: -3.8015964031219482
    3. 'par' → logprob: -4.426596641540527
    4. ',' → logprob: -4.926596641540527
    5. 'from' → logprob: -5.176596641540527
    6. '=' → logprob: -6.176596641540527
    7. 'de' → logprob: -7.676596641540527
    8. ')' → logprob: -8.301596641540527
    9. '```' → logprob: -9.551596641540527
    10. '0' → logprob: -9.926596641540527

Token 297: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.250006675720215
    3. '1' → logprob: -13.625006675720215
    4. 'z' → logprob: -16.1250057220459
    5. 'k' → logprob: -16.3750057220459
    6. ')' → logprob: -16.7500057220459
    7. 'zero' → logprob: -16.8750057220459
    8. ' zéro' → logprob: -17.0000057220459
    9. '#' → logprob: -17.5000057220459
    10. '```' → logprob: -17.5000057220459

Token 298: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.117345684382599e-05
    2. '1' → logprob: -10.875020980834961
    3. ' ' → logprob: -13.375020980834961
    4. ')' → logprob: -15.750020980834961
    5. 'k' → logprob: -16.37502098083496
    6. '
' → logprob: -16.50002098083496
    7. '=' → logprob: -17.00002098083496
    8. 'zero' → logprob: -17.25002098083496
    9. '```' → logprob: -17.50002098083496
    10. '#' → logprob: -17.62502098083496

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07384701073169708
    2. '),' → logprob: -3.1988470554351807
    3. ',' → logprob: -3.8238470554351807
    4. 'for' → logprob: -5.073846817016602
    5. ' for' → logprob: -6.823846817016602
    6. ')
' → logprob: -7.698846817016602
    7. '):' → logprob: -7.698846817016602
    8. '   ' → logprob: -10.073846817016602
    9. '):
' → logprob: -10.073846817016602
    10. ').' → logprob: -10.323846817016602

Token 300: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010681778658181429
    2. ' for' → logprob: -6.876068115234375
    3. ',' → logprob: -11.126068115234375
    4. '
' → logprob: -11.626068115234375
    5. ':' → logprob: -12.251068115234375
    6. ')' → logprob: -12.876068115234375
    7. ',
' → logprob: -13.376068115234375
    8. 'pour' → logprob: -14.376068115234375
    9. '#' → logprob: -14.876068115234375
    10. 'f' → logprob: -14.876068115234375

Token 301: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006721655838191509
    2. ' for' → logprob: -5.006721496582031
    3. '#' → logprob: -13.506721496582031
    4. ',' → logprob: -13.506721496582031
    5. 'num' → logprob: -13.631721496582031
    6. ')' → logprob: -13.756721496582031
    7. ' ' → logprob: -14.756721496582031
    8. '```' → logprob: -15.631721496582031
    9. 'n' → logprob: -15.756721496582031
    10. '
' → logprob: -15.756721496582031

Token 302: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6336191892623901
    2. ' num' → logprob: -0.7586191892623901
    3. ' ' → logprob: -7.50861930847168
    4. 'n' → logprob: -9.50861930847168
    5. '   ' → logprob: -9.50861930847168
    6. '	num' → logprob: -9.63361930847168
    7. ' ' → logprob: -10.00861930847168
    8. ' where' → logprob: -10.38361930847168
    9. 'val' → logprob: -10.63361930847168
    10. '#' → logprob: -10.63361930847168

Token 303: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.18249012529850006
    2. ')' → logprob: -3.057490110397339
    3. ' =' → logprob: -3.307490110397339
    4. ' is' → logprob: -3.557490110397339
    5. ' in' → logprob: -3.682490110397339
    6. 's' → logprob: -5.432490348815918
    7. ' correspond' → logprob: -5.432490348815918
    8. '=' → logprob: -5.557490348815918
    9. ' s' → logprob: -5.557490348815918
    10. ',' → logprob: -5.682490348815918

Token 304: ' la' (ID: 557)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.08746988326311111
    2. 'c' → logprob: -2.7124698162078857
    3. ' la' → logprob: -4.087470054626465
    4. ' le' → logprob: -8.837470054626465
    5. ' ' → logprob: -8.837470054626465
    6. ' ' → logprob: -9.462470054626465
    7. '	c' → logprob: -9.587470054626465
    8. ' l' → logprob: -9.962470054626465
    9. 'la' → logprob: -10.087470054626465
    10. 'le' → logprob: -11.587470054626465

Token 305: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2185249775648117
    2. ' valeur' → logprob: -1.7185249328613281
    3. 'c' → logprob: -4.468524932861328
    4. 'élé' → logprob: -6.093524932861328
    5. ' c' → logprob: -6.593524932861328
    6. 'nombre' → logprob: -6.968524932861328
    7. ' val' → logprob: -7.593524932861328
    8. ' nombre' → logprob: -8.718524932861328
    9. ' ' → logprob: -9.468524932861328
    10. 'num' → logprob: -9.968524932861328

Token 306: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7752566933631897
    2. ' de' → logprob: -0.7752566933631897
    3. ' in' → logprob: -4.400256633758545
    4. ')' → logprob: -4.525256633758545
    5. ' =' → logprob: -4.650256633758545
    6. ' ,' → logprob: -4.900256633758545
    7. ' ' → logprob: -5.025256633758545
    8. ' k' → logprob: -5.150256633758545
    9. '   ' → logprob: -5.275256633758545
    10. ',k' → logprob: -5.275256633758545

Token 307: ' l' (ID: 305)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.35395199060440063
    2. ' c' → logprob: -1.3539519309997559
    3. ' la' → logprob: -3.353951930999756
    4. 'num' → logprob: -6.353951930999756
    5. 'la' → logprob: -6.353951930999756
    6. ' num' → logprob: -7.728951930999756
    7. ' l' → logprob: -7.728951930999756
    8. 'l' → logprob: -8.103952407836914
    9. ' ' → logprob: -8.728952407836914
    10. ' ce' → logprob: -11.353952407836914

Token 308: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.024023331701755524
    2. 'c' → logprob: -4.274023532867432
    3. ' élément' → logprob: -5.774023532867432
    4. 'element' → logprob: -6.024023532867432
    5. ''' → logprob: -6.274023532867432
    6. 'ent' → logprob: -7.524023532867432
    7. ' c' → logprob: -7.649023532867432
    8. 'num' → logprob: -8.274023056030273
    9. 'entrée' → logprob: -8.274023056030273
    10. 'elem' → logprob: -8.774023056030273

Token 309: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.00193149340339005
    2. 'element' → logprob: -7.001931667327881
    3. ' élément' → logprob: -8.001931190490723
    4. 'c' → logprob: -8.876931190490723
    5. 'elem' → logprob: -9.501931190490723
    6. 'é' → logprob: -9.501931190490723
    7. 'num' → logprob: -9.626931190490723
    8. 'item' → logprob: -9.751931190490723
    9. 'it' → logprob: -9.876931190490723
    10. 'él' → logprob: -10.001931190490723

Token 310: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -1.4378848391061183e-05
    2. 'm' → logprob: -11.875014305114746
    3. 'me' → logprob: -13.000014305114746
    4. 'ement' → logprob: -13.375014305114746
    5. 'men' → logprob: -13.875014305114746
    6. 'ments' → logprob: -14.000014305114746
    7. '#' → logprob: -14.625014305114746
    8. 'v' → logprob: -15.250014305114746
    9. 'ément' → logprob: -15.375014305114746
    10. ' ment' → logprob: -16.125015258789062

Token 311: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005322577897459269
    2. ' for' → logprob: -5.255322456359863
    3. 'pour' → logprob: -9.880322456359863
    4. ')' → logprob: -11.380322456359863
    5. '
' → logprob: -11.755322456359863
    6. ',' → logprob: -11.755322456359863
    7. ':' → logprob: -12.255322456359863
    8. ' pour' → logprob: -13.255322456359863
    9. 'n' → logprob: -14.005322456359863
    10. ',
' → logprob: -14.880322456359863

Token 312: ' cet' (ID: 19505)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.2901265025138855
    2. 'k' → logprob: -2.6651265621185303
    3. 'l' → logprob: -2.7901265621185303
    4. 'addition' → logprob: -3.5401265621185303
    5. 'c' → logprob: -3.7901265621185303
    6. 'calcul' → logprob: -3.7901265621185303
    7. 'index' → logprob: -4.665126323699951
    8. 'tr' → logprob: -4.790126323699951
    9. 'la' → logprob: -5.540126323699951
    10. 'trait' → logprob: -5.540126323699951

Token 313: ' indice' (ID: 90848)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.3066253960132599
    2. 'index' → logprob: -1.4316253662109375
    3. 'it' → logprob: -3.9316253662109375
    4. '#' → logprob: -6.6816253662109375
    5. 'indices' → logprob: -7.3066253662109375
    6. 'instant' → logprob: -7.3066253662109375
    7. 'ég' → logprob: -7.4316253662109375
    8. 'i' → logprob: -7.6816253662109375
    9. 'idx' → logprob: -7.8066253662109375
    10. 'iteration' → logprob: -8.306625366210938

Token 314: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010914575977949426
    2. ' for' → logprob: -9.12510871887207
    3. '
' → logprob: -16.62510871887207
    4. ')' → logprob: -18.00010871887207
    5. 'f' → logprob: -18.00010871887207
    6. 'fo' → logprob: -18.75010871887207
    7. ',' → logprob: -19.00010871887207
    8. 'n' → logprob: -19.12510871887207
    9. ':' → logprob: -19.37510871887207
    10. '	for' → logprob: -20.37510871887207

Token 315: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.625
    3. '```' → logprob: -19.5
    4. '
' → logprob: -21.375
    5. 'n' → logprob: -21.5
    6. 'f' → logprob: -21.75
    7. 'fo' → logprob: -22.125
    8. '	for' → logprob: -22.375
    9. 'from' → logprob: -23.25
    10. 'k' → logprob: -23.5

Token 316: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.1602286994457245
    2. 'k' → logprob: -1.9102287292480469
    3. ' ' → logprob: -13.035228729248047
    4. ' ' → logprob: -13.785228729248047
    5. ' i' → logprob: -14.660228729248047
    6. '	k' → logprob: -15.035228729248047
    7. 'num' → logprob: -15.785228729248047
    8. 'i' → logprob: -16.285228729248047
    9. ' num' → logprob: -16.535228729248047
    10. ' ' → logprob: -17.035228729248047

Token 317: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2837521731853485
    2. ',' → logprob: -2.033752202987671
    3. 'in' → logprob: -2.158752202987671
    4. ' ,' → logprob: -7.533751964569092
    5. ' ' → logprob: -8.90875244140625
    6. ',in' → logprob: -9.90875244140625
    7. ',n' → logprob: -12.65875244140625
    8. ',k' → logprob: -13.15875244140625
    9. '	in' → logprob: -13.40875244140625
    10. ',v' → logprob: -14.03375244140625

Token 318: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.004620353225618601
    2. ' num' → logprob: -5.379620552062988
    3. '	num' → logprob: -16.504619598388672
    4. '```' → logprob: -17.504619598388672
    5. '(num' → logprob: -17.754619598388672
    6. 'c' → logprob: -17.754619598388672
    7. ' ' → logprob: -18.379619598388672
    8. '_num' → logprob: -18.629619598388672
    9. '   ' → logprob: -18.754619598388672
    10. '[num' → logprob: -18.879619598388672

Token 319: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3868790566921234
    2. ' in' → logprob: -1.1368790864944458
    3. ',' → logprob: -13.011878967285156
    4. 's' → logprob: -13.636878967285156
    5. ' ' → logprob: -13.761878967285156
    6. '	in' → logprob: -13.761878967285156
    7. 'n' → logprob: -14.636878967285156
    8. ')' → logprob: -14.886878967285156
    9. '```' → logprob: -14.886878967285156
    10. 'k' → logprob: -15.386878967285156

Token 320: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.07895974069833755
    2. ' enumerate' → logprob: -2.5789597034454346
    3. 'c' → logprob: -9.578959465026855
    4. ' c' → logprob: -14.953959465026855
    5. '```' → logprob: -15.203959465026855
    6. 'enum' → logprob: -16.703960418701172
    7. 'en' → logprob: -17.203960418701172
    8. '.enumer' → logprob: -17.578960418701172
    9. ' ' → logprob: -17.703960418701172
    10. 'zip' → logprob: -18.453960418701172

Token 321: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00046975704026408494
    2. 'c' → logprob: -7.87546968460083
    3. ' (' → logprob: -10.125470161437988
    4. ' c' → logprob: -10.375470161437988
    5. ')c' → logprob: -11.250470161437988
    6. ')' → logprob: -12.750470161437988
    7. ',c' → logprob: -13.875470161437988
    8. '(' → logprob: -14.000470161437988
    9. ',' → logprob: -15.250470161437988
    10. '	c' → logprob: -16.250469207763672

Token 322: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00032724079210311174
    2. '):
' → logprob: -8.375327110290527
    3. ')' → logprob: -9.625327110290527
    4. ' ):' → logprob: -10.625327110290527
    5. ':' → logprob: -12.125327110290527
    6. '):
' → logprob: -14.875327110290527
    7. '():' → logprob: -15.375327110290527
    8. '   ' → logprob: -16.625328063964844
    9. '}:' → logprob: -16.750328063964844
    10. ' :' → logprob: -17.125328063964844

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06349380314350128
    2. ':' → logprob: -2.8134937286376953
    3. ' ans' → logprob: -7.188493728637695
    4. '):' → logprob: -7.813493728637695
    5. ':
' → logprob: -9.188493728637695
    6. 'ans' → logprob: -9.313493728637695
    7. '):
' → logprob: -10.438493728637695
    8. '	ans' → logprob: -10.438493728637695
    9. ' :' → logprob: -10.688493728637695
    10. '    
' → logprob: -11.063493728637695

Token 324: ' #' (ID: 1069)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1468195617198944
    2. 'ans' → logprob: -2.521819591522217
    3. '   ' → logprob: -2.896819591522217
    4. '	ans' → logprob: -7.271819591522217
    5. '    
' → logprob: -9.271819114685059
    6. '(ans' → logprob: -9.771819114685059
    7. ' if' → logprob: -10.146819114685059
    8. '```' → logprob: -10.521819114685059
    9. '
' → logprob: -10.646819114685059
    10. ' 
' → logprob: -10.771819114685059

Token 325: ' Ajouter' (ID: 165754)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5381569266319275
    2. ' ans' → logprob: -0.9131569266319275
    3. '   ' → logprob: -4.538156986236572
    4. 'weight' → logprob: -7.288156986236572
    5. 'pow' → logprob: -7.413156986236572
    6. 'power' → logprob: -7.413156986236572
    7. 'val' → logprob: -8.038156509399414
    8. ' ' → logprob: -8.663156509399414
    9. ' contribution' → logprob: -8.663156509399414
    10. ' weight' → logprob: -8.663156509399414

Token 326: ' à' (ID: 1221)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.23578348755836487
    2. '(ans' → logprob: -2.235783576965332
    3. ' (' → logprob: -2.360783576965332
    4. ' num' → logprob: -5.610783576965332
    5. 'ans' → logprob: -6.235783576965332
    6. 'num' → logprob: -6.610783576965332
    7. '(num' → logprob: -7.110783576965332
    8. ' k' → logprob: -7.360783576965332
    9. '(k' → logprob: -8.985783576965332
    10. '   ' → logprob: -9.485783576965332

Token 327: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09058776497840881
    2. ' ans' → logprob: -2.465587854385376
    3. '(ans' → logprob: -6.465587615966797
    4. 'num' → logprob: -10.465587615966797
    5. ' (' → logprob: -10.715587615966797
    6. '   ' → logprob: -10.965587615966797
    7. '	ans' → logprob: -11.590587615966797
    8. '(' → logprob: -11.840587615966797
    9. ' ' → logprob: -13.215587615966797
    10. ' num' → logprob: -13.840587615966797

Token 328: ' le' (ID: 505)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.19555936753749847
    2. '   ' → logprob: -2.44555926322937
    3. ' (' → logprob: -3.19555926322937
    4. ' num' → logprob: -3.57055926322937
    5. ' k' → logprob: -4.570559501647949
    6. '(ans' → logprob: -5.070559501647949
    7. 'ans' → logprob: -5.820559501647949
    8. ' +=' → logprob: -7.070559501647949
    9. 'num' → logprob: -7.195559501647949
    10. ' =' → logprob: -9.07055950164795

Token 329: ' produit' (ID: 29429)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.7228062152862549
    2. ' num' → logprob: -0.8478062152862549
    3. '(num' → logprob: -3.097806215286255
    4. ' (' → logprob: -3.222806215286255
    5. ' ans' → logprob: -7.722805976867676
    6. 'pow' → logprob: -7.972805976867676
    7. '(' → logprob: -8.597805976867676
    8. ' pow' → logprob: -9.472805976867676
    9. 'ans' → logprob: -9.722805976867676
    10. '(ans' → logprob: -9.722805976867676

Token 330: ' de' (ID: 334)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.3352638483047485
    2. '   ' → logprob: -1.4602638483047485
    3. '(ans' → logprob: -1.7102638483047485
    4. '(num' → logprob: -2.585263729095459
    5. ' num' → logprob: -2.835263729095459
    6. 'num' → logprob: -2.835263729095459
    7. ' (' → logprob: -2.960263729095459
    8. ' k' → logprob: -3.585263729095459
    9. 'ans' → logprob: -4.085263729095459
    10. '(k' → logprob: -4.585263729095459

Token 331: ' (' (ID: 350)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.06247824802994728
    2. ' num' → logprob: -3.0624783039093018
    3. '(num' → logprob: -4.687478065490723
    4. 'k' → logprob: -5.812478065490723
    5. ' k' → logprob: -7.312478065490723
    6. '(k' → logprob: -7.687478065490723
    7. ' (' → logprob: -8.062478065490723
    8. 'pow' → logprob: -9.937478065490723
    9. '(' → logprob: -10.187478065490723
    10. '   ' → logprob: -10.312478065490723

Token 332: 'k' (ID: 74)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.07849917560815811
    2. '(num' → logprob: -3.7034990787506104
    3. ' num' → logprob: -3.9534990787506104
    4. 'k' → logprob: -4.3284993171691895
    5. '(k' → logprob: -4.9534993171691895
    6. ' (' → logprob: -5.0784993171691895
    7. 'n' → logprob: -5.9534993171691895
    8. ' k' → logprob: -7.2034993171691895
    9. '(n' → logprob: -7.3284993171691895
    10. 'pow' → logprob: -7.5784993171691895

Token 333: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6963986754417419
    2. ' +' → logprob: -0.6963986754417419
    3. ' *' → logprob: -5.821398735046387
    4. '*' → logprob: -8.571398735046387
    5. ')' → logprob: -11.071398735046387
    6. 'num' → logprob: -11.071398735046387
    7. ' ' → logprob: -11.196398735046387
    8. ' plus' → logprob: -11.571398735046387
    9. '*num' → logprob: -11.946398735046387
    10. ' num' → logprob: -12.071398735046387

Token 334: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006547740194946527
    2. 'num' → logprob: -7.500654697418213
    3. ' ' → logprob: -9.875655174255371
    4. '2' → logprob: -10.750655174255371
    5. 'n' → logprob: -10.875655174255371
    6. ' num' → logprob: -12.875655174255371
    7. '   ' → logprob: -13.000655174255371
    8. ')' → logprob: -13.250655174255371
    9. '(num' → logprob: -14.625655174255371
    10. '(' → logprob: -14.750655174255371

Token 335: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.351697033504024e-05
    2. 'num' → logprob: -10.125083923339844
    3. ' ' → logprob: -10.875083923339844
    4. 'n' → logprob: -11.000083923339844
    5. '2' → logprob: -11.875083923339844
    6. '   ' → logprob: -16.125083923339844
    7. ' n' → logprob: -16.250083923339844
    8. 'c' → logprob: -16.500083923339844
    9. ' num' → logprob: -16.625083923339844
    10. '+' → logprob: -16.625083923339844

Token 336: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007425647345371544
    2. ' )' → logprob: -7.625742435455322
    3. ')*' → logprob: -8.87574291229248
    4. '),' → logprob: -10.00074291229248
    5. '*' → logprob: -10.12574291229248
    6. ' *' → logprob: -12.00074291229248
    7. ',' → logprob: -12.25074291229248
    8. '*)' → logprob: -12.50074291229248
    9. '```' → logprob: -12.75074291229248
    10. '+' → logprob: -13.00074291229248

Token 337: ' et' (ID: 859)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.015204623341560364
    2. '*' → logprob: -5.015204429626465
    3. '   ' → logprob: -5.140204429626465
    4. ',' → logprob: -6.265204429626465
    5. '*num' → logprob: -7.390204429626465
    6. ' ,' → logprob: -10.765204429626465
    7. ' ' → logprob: -11.265204429626465
    8. 'num' → logprob: -11.515204429626465
    9. '```' → logprob: -11.765204429626465
    10. ')' → logprob: -12.140204429626465

Token 338: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.20145785808563232
    2. 'num' → logprob: -1.7014578580856323
    3. '(num' → logprob: -10.201457977294922
    4. '	num' → logprob: -12.701457977294922
    5. ',num' → logprob: -13.951457977294922
    6. '=num' → logprob: -14.326457977294922
    7. ' ' → logprob: -14.326457977294922
    8. '   ' → logprob: -14.451457977294922
    9. '<num' → logprob: -14.576457977294922
    10. '*num' → logprob: -15.076457977294922

Token 339: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034145478159189224
    2. ' *' → logprob: -3.4091455936431885
    3. '*' → logprob: -8.53414535522461
    4. ' ans' → logprob: -9.15914535522461
    5. 'ans' → logprob: -9.53414535522461
    6. '  ' → logprob: -10.53414535522461
    7. ',' → logprob: -10.90914535522461
    8. '
' → logprob: -11.03414535522461
    9. ':' → logprob: -11.28414535522461
    10. '```' → logprob: -11.53414535522461

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001862476347014308
    2. ' ans' → logprob: -6.376862525939941
    3. 'ans' → logprob: -9.001862525939941
    4. '
' → logprob: -11.001862525939941
    5. '	ans' → logprob: -11.876862525939941
    6. '```' → logprob: -12.251862525939941
    7. '    
' → logprob: -12.376862525939941
    8. '(ans' → logprob: -13.126862525939941
    9. '       ' → logprob: -14.001862525939941
    10. '   ' → logprob: -14.126862525939941

Token 341: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18120485544204712
    2. 'ans' → logprob: -2.4312047958374023
    3. ' ans' → logprob: -2.5562047958374023
    4. '	ans' → logprob: -8.806204795837402
    5. '(ans' → logprob: -10.806204795837402
    6. '
' → logprob: -11.181204795837402
    7. '  ' → logprob: -12.431204795837402
    8. '       ' → logprob: -12.556204795837402
    9. '    
' → logprob: -12.681204795837402
    10. '   ' → logprob: -12.931204795837402

Token 342: ' (' (ID: 350)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6805904507637024
    2. '   ' → logprob: -1.1805903911590576
    3. ' ans' → logprob: -1.6805903911590576
    4. '	ans' → logprob: -8.680590629577637
    5. ' ' → logprob: -10.180590629577637
    6. '(ans' → logprob: -10.180590629577637
    7. '  ' → logprob: -10.180590629577637
    8. '    ' → logprob: -11.680590629577637
    9. '       ' → logprob: -12.180590629577637
    10. '```' → logprob: -12.555590629577637

Token 343: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.009840375743806362
    2. 'ans' → logprob: -5.009840488433838
    3. ' k' → logprob: -6.009840488433838
    4. ' ans' → logprob: -8.13484001159668
    5. '(ans' → logprob: -8.63484001159668
    6. ' (' → logprob: -9.63484001159668
    7. ')' → logprob: -9.88484001159668
    8. '(k' → logprob: -9.88484001159668
    9. 'num' → logprob: -11.50984001159668
    10. ' )' → logprob: -11.88484001159668

Token 344: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04859236627817154
    2. '+' → logprob: -3.0485923290252686
    3. '   ' → logprob: -13.298592567443848
    4. ' +
' → logprob: -13.548592567443848
    5. ' ' → logprob: -14.173592567443848
    6. '```' → logprob: -15.173592567443848
    7. ')' → logprob: -15.298592567443848
    8. ' plus' → logprob: -15.423592567443848
    9. '+
' → logprob: -16.17359161376953
    10. '+k' → logprob: -16.42359161376953

Token 345: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0040895589627325535
    2. ' ' → logprob: -5.50408935546875
    3. '1' → logprob: -11.75408935546875
    4. '   ' → logprob: -13.12908935546875
    5. '```' → logprob: -14.00408935546875
    6. '  ' → logprob: -15.62908935546875
    7. '
' → logprob: -16.12908935546875
    8. ')' → logprob: -16.75408935546875
    9. '    ' → logprob: -17.25408935546875
    10. '3' → logprob: -17.44158935546875

Token 346: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.794061770662665e-05
    2. ' ' → logprob: -9.25009822845459
    3. '1' → logprob: -14.25009822845459
    4. '   ' → logprob: -14.37509822845459
    5. '```' → logprob: -15.00009822845459
    6. ')' → logprob: -16.000097274780273
    7. '
' → logprob: -16.250097274780273
    8. '  ' → logprob: -16.750097274780273
    9. '

' → logprob: -17.687597274780273
    10. '    ' → logprob: -18.812597274780273

Token 347: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024751186720095575
    2. ')*' → logprob: -8.500247955322266
    3. ' )' → logprob: -10.250247955322266
    4. '*' → logprob: -12.250247955322266
    5. ')
' → logprob: -14.125247955322266
    6. '*)' → logprob: -14.500247955322266
    7. '```' → logprob: -14.500247955322266
    8. ')%' → logprob: -14.625247955322266
    9. ' *' → logprob: -14.750247955322266
    10. '   ' → logprob: -15.250247955322266

Token 348: ' augmente' (ID: 150199)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05997762456536293
    2. '*' → logprob: -2.9349775314331055
    3. ')' → logprob: -5.3099775314331055
    4. '*num' → logprob: -10.309977531433105
    5. ')*' → logprob: -10.559977531433105
    6. ' ' → logprob: -10.809977531433105
    7. '   ' → logprob: -10.934977531433105
    8. ' )' → logprob: -11.434977531433105
    9. '*k' → logprob: -11.934977531433105
    10. '%' → logprob: -12.184977531433105

Token 349: ' de' (ID: 334)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8060101270675659
    2. ' ans' → logprob: -1.556010127067566
    3. 'ans' → logprob: -1.931010127067566
    4. '*' → logprob: -2.1810102462768555
    5. ')' → logprob: -2.9310102462768555
    6. '(ans' → logprob: -4.5560102462768555
    7. '<|end|>' → logprob: -4.6810102462768555
    8. ' )' → logprob: -6.0560102462768555
    9. '   ' → logprob: -6.1810102462768555
    10. ' ' → logprob: -6.5560102462768555

Token 350: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001039479160681367
    2. ' ' → logprob: -6.876039505004883
    3. '```' → logprob: -12.876039505004883
    4. '2' → logprob: -13.251039505004883
    5. ' k' → logprob: -13.751039505004883
    6. 'k' → logprob: -14.126039505004883
    7. '   ' → logprob: -15.126039505004883
    8. ' one' → logprob: -16.126039505004883
    9. ',' → logprob: -16.376039505004883
    10. '+' → logprob: -17.376039505004883

Token 351: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -11.125019073486328
    3. '2' → logprob: -13.500019073486328
    4. 'un' → logprob: -13.625019073486328
    5. 'k' → logprob: -14.000019073486328
    6. '```' → logprob: -14.125019073486328
    7. ' k' → logprob: -17.250019073486328
    8. 's' → logprob: -17.375019073486328
    9. 'une' → logprob: -17.500019073486328
    10. '１' → logprob: -17.625019073486328

Token 352: ' à' (ID: 1221)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6149622201919556
    2. ')' → logprob: -0.8649622201919556
    3. '*' → logprob: -3.739962100982666
    4. ')*' → logprob: -4.739962100982666
    5. ' )' → logprob: -5.614962100982666
    6. '   ' → logprob: -6.364962100982666
    7. ' ' → logprob: -9.364962577819824
    8. '<|end|>' → logprob: -9.864962577819824
    9. ',' → logprob: -10.114962577819824
    10. '*num' → logprob: -10.239962577819824

Token 353: ' chaque' (ID: 21194)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.036307331174612045
    2. '1' → logprob: -3.6613073348999023
    3. ' len' → logprob: -5.536307334899902
    4. 'k' → logprob: -5.661307334899902
    5. '(len' → logprob: -6.536307334899902
    6. ' k' → logprob: -7.911307334899902
    7. ' ' → logprob: -8.786307334899902
    8. 'n' → logprob: -8.786307334899902
    9. ' chaque' → logprob: -8.911307334899902
    10. 'l' → logprob: -9.911307334899902

Token 354: ' élément' (ID: 99627)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.3862401247024536
    2. 'iteration' → logprob: -1.3862401247024536
    3. ' it' → logprob: -3.761240005493164
    4. '1' → logprob: -4.261240005493164
    5. 'for' → logprob: -4.636240005493164
    6. 'k' → logprob: -4.761240005493164
    7. 'indice' → logprob: -5.386240005493164
    8. ' iteration' → logprob: -6.136240005493164
    9. 'iter' → logprob: -6.386240005493164
    10. ' ' → logprob: -6.511240005493164

Token 355: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002582402084954083
    2. ' ans' → logprob: -9.500258445739746
    3. '
' → logprob: -9.875258445739746
    4. ',' → logprob: -10.250258445739746
    5. ')' → logprob: -10.375258445739746
    6. '    
' → logprob: -11.000258445739746
    7. ':' → logprob: -11.375258445739746
    8. '  ' → logprob: -11.750258445739746
    9. 'ans' → logprob: -12.250258445739746
    10. '	ans' → logprob: -12.250258445739746

Token 356: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4832979440689087
    2. ' ans' → logprob: -0.9832979440689087
    3. 'ans' → logprob: -4.733297824859619
    4. '	ans' → logprob: -9.483298301696777
    5. ')' → logprob: -9.733298301696777
    6. '(ans' → logprob: -9.983298301696777
    7. '    ' → logprob: -10.233298301696777
    8. '  ' → logprob: -10.733298301696777
    9. ' and' → logprob: -10.858298301696777
    10. '    
' → logprob: -10.983298301696777

Token 357: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.24221351742744446
    2. 'k' → logprob: -1.992213487625122
    3. ' on' → logprob: -2.742213487625122
    4. ' nous' → logprob: -5.617213726043701
    5. ' c' → logprob: -5.867213726043701
    6. ' la' → logprob: -6.367213726043701
    7. ' l' → logprob: -6.492213726043701
    8. ' le' → logprob: -6.867213726043701
    9. 'range' → logprob: -7.992213726043701
    10. 'c' → logprob: -7.992213726043701

Token 358: ' commence' (ID: 44755)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5242696404457092
    2. ' +' → logprob: -0.8992696404457092
    3. ' +=' → logprob: -7.2742695808410645
    4. '+=' → logprob: -9.274270057678223
    5. '   ' → logprob: -9.399270057678223
    6. ' ' → logprob: -9.774270057678223
    7. ' plus' → logprob: -10.149270057678223
    8. '+k' → logprob: -10.274270057678223
    9. ' is' → logprob: -10.399270057678223
    10. ' starts' → logprob: -10.649270057678223

Token 359: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4605526626110077
    2. '   ' → logprob: -1.33555269241333
    3. 'à' → logprob: -2.46055269241333
    4. 'from' → logprob: -4.58555269241333
    5. ' par' → logprob: -5.83555269241333
    6. '=' → logprob: -5.83555269241333
    7. ' at' → logprob: -6.58555269241333
    8. ' from' → logprob: -7.08555269241333
    9. 'par' → logprob: -7.33555269241333
    10. ' de' → logprob: -7.96055269241333

Token 360: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.25007438659668
    4. '1' → logprob: -17.12507438659668
    5. ' zéro' → logprob: -18.87507438659668
    6. '  ' → logprob: -19.12507438659668
    7. '```' → logprob: -19.50007438659668
    8. 'k' → logprob: -19.62507438659668
    9. 'zero' → logprob: -19.62507438659668
    10. '=' → logprob: -20.00007438659668

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '1' → logprob: -16.750003814697266
    4. 'k' → logprob: -18.125003814697266
    5. '   ' → logprob: -19.250003814697266
    6. '2' → logprob: -20.250003814697266
    7. '
' → logprob: -20.250003814697266
    8. '```' → logprob: -20.250003814697266
    9. '۰' → logprob: -20.562503814697266
    10. '=' → logprob: -20.687503814697266

Token 362: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016229959146585315
    2. ' ans' → logprob: -9.625162124633789
    3. ':' → logprob: -10.875162124633789
    4. ')' → logprob: -10.875162124633789
    5. ',' → logprob: -10.875162124633789
    6. '):' → logprob: -11.625162124633789
    7. ' and' → logprob: -12.000162124633789
    8. 'ans' → logprob: -12.000162124633789
    9. '):
' → logprob: -12.375162124633789
    10. '	ans' → logprob: -12.750162124633789

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012278467183932662
    2. ' ans' → logprob: -7.251227855682373
    3. 'ans' → logprob: -7.626227855682373
    4. '```' → logprob: -11.126227378845215
    5. '
' → logprob: -12.126227378845215
    6. '	ans' → logprob: -12.376227378845215
    7. '    
' → logprob: -13.001227378845215
    8. '(ans' → logprob: -13.626227378845215
    9. '       ' → logprob: -13.626227378845215
    10. '  ' → logprob: -14.876227378845215

Token 364: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.185121089220047
    2. 'ans' (adapté à ' ans') → logprob: -2.0601210594177246
    3. ' ans' → logprob: -3.1851210594177246
    4. '	ans' → logprob: -9.310121536254883
    5. '
' → logprob: -10.310121536254883
    6. '(ans' → logprob: -10.685121536254883
    7. '```' → logprob: -10.935121536254883
    8. '  ' → logprob: -12.060121536254883
    9. '       ' → logprob: -12.685121536254883
    10. ' ' → logprob: -13.060121536254883

Token 365: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1003534197807312
    2. '+=' → logprob: -2.350353479385376
    3. ' =' → logprob: -9.600353240966797
    4. '+=(' → logprob: -10.100353240966797
    5. '=' → logprob: -10.600353240966797
    6. '+' → logprob: -11.600353240966797
    7. '   ' → logprob: -13.225353240966797
    8. '```' → logprob: -13.725353240966797
    9. ']+=' → logprob: -14.975353240966797
    10. ' ' → logprob: -15.350353240966797

Token 366: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16994145512580872
    2. '(k' → logprob: -1.9199414253234863
    3. '(num' → logprob: -4.669941425323486
    4. 'num' → logprob: -8.419941902160645
    5. ' num' → logprob: -9.544941902160645
    6. '   ' → logprob: -13.419941902160645
    7. '(c' → logprob: -14.169941902160645
    8. '((' → logprob: -14.294941902160645
    9. '(K' → logprob: -14.294941902160645
    10. ' ((' → logprob: -14.294941902160645

Token 367: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001589618914294988
    2. ' k' → logprob: -9.00015926361084
    3. '(k' → logprob: -10.25015926361084
    4. ' (' → logprob: -16.000158309936523
    5. '   ' → logprob: -17.000158309936523
    6. '{k' → logprob: -17.875158309936523
    7. 'num' → logprob: -19.000158309936523
    8. '	k' → logprob: -19.125158309936523
    9. ' ' → logprob: -19.625158309936523
    10. '  ' → logprob: -20.875158309936523

Token 368: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018150296062231064
    2. '+' → logprob: -4.018150329589844
    3. ' +
' → logprob: -15.018150329589844
    4. ' plus' → logprob: -16.643150329589844
    5. ' ' → logprob: -16.768150329589844
    6. ' ' → logprob: -18.643150329589844
    7. '+
' → logprob: -18.893150329589844
    8. '   ' → logprob: -19.268150329589844
    9. '＋' → logprob: -19.518150329589844
    10. '()+' → logprob: -19.643150329589844

Token 369: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023245595395565033
    2. ' ' → logprob: -3.7732455730438232
    3. '```' → logprob: -16.523244857788086
    4. '   ' → logprob: -16.898244857788086
    5. '1' → logprob: -17.273244857788086
    6. '  ' → logprob: -17.898244857788086
    7. ')' → logprob: -18.898244857788086
    8. '
' → logprob: -19.023244857788086
    9. ' ' → logprob: -19.523244857788086
    10. '    ' → logprob: -19.648244857788086

Token 370: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.125028610229492
    4. '```' → logprob: -17.250028610229492
    5. '۲' → logprob: -18.625028610229492
    6. '２' → logprob: -18.750028610229492
    7. '  ' → logprob: -19.625028610229492
    8. '1' → logprob: -19.812528610229492
    9. '২' → logprob: -20.500028610229492
    10. '
' → logprob: -20.687528610229492

Token 371: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001017551330733113
    2. ' )' → logprob: -9.750102043151855
    3. ')*' → logprob: -10.125102043151855
    4. '*' → logprob: -13.125102043151855
    5. ' *' → logprob: -13.750102043151855
    6. '*)' → logprob: -16.50010108947754
    7. '   ' → logprob: -16.62510108947754
    8. ')
' → logprob: -17.62510108947754
    9. '```' → logprob: -18.25010108947754
    10. ']' → logprob: -18.50010108947754

Token 372: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07906119525432587
    2. '*' → logprob: -2.829061269760132
    3. '*num' → logprob: -4.079061031341553
    4. ' num' → logprob: -11.954061508178711
    5. 'num' → logprob: -11.954061508178711
    6. '   ' → logprob: -11.954061508178711
    7. ' ' → logprob: -12.579061508178711
    8. ' ' → logprob: -14.079061508178711
    9. ')' → logprob: -14.704061508178711
    10. '(num' → logprob: -15.329061508178711

Token 373: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.10020710527896881
    2. ' num' → logprob: -2.3502070903778076
    3. '	num' → logprob: -15.975207328796387
    4. ' ' → logprob: -16.22520637512207
    5. '(num' → logprob: -16.60020637512207
    6. '   ' → logprob: -16.72520637512207
    7. '_num' → logprob: -17.97520637512207
    8. ' ' → logprob: -18.47520637512207
    9. '  ' → logprob: -18.47520637512207
    10. ',num' → logprob: -18.47520637512207

Token 374: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10363686084747314
    2. '
' → logprob: -2.6036367416381836
    3. 'ans' → logprob: -4.353636741638184
    4. ' ans' → logprob: -4.728636741638184
    5. '    
' → logprob: -7.478636741638184
    6. '	ans' → logprob: -7.603636741638184
    7. '%' → logprob: -7.728636741638184
    8. '(ans' → logprob: -7.978636741638184
    9. '<|end|>' → logprob: -8.103636741638184
    10. '\n' → logprob: -8.978636741638184

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09612283855676651
    2. 'ans' → logprob: -2.4711227416992188
    3. ' ans' → logprob: -5.221122741699219
    4. '
' → logprob: -7.096122741699219
    5. '	ans' → logprob: -7.596122741699219
    6. '(ans' → logprob: -8.346122741699219
    7. '```' → logprob: -9.596122741699219
    8. '\n' → logprob: -10.221122741699219
    9. '    
' → logprob: -10.221122741699219
    10. '_ans' → logprob: -10.971122741699219

Token 376: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3610347509384155
    2. '   ' → logprob: -1.9860347509384155
    3. ' ans' → logprob: -2.111034870147705
    4. '
' → logprob: -3.486034870147705
    5. '\n' → logprob: -5.111034870147705
    6. '	ans' → logprob: -5.611034870147705
    7. '(ans' → logprob: -6.611034870147705
    8. '```' → logprob: -6.986034870147705
    9. '    
' → logprob: -7.236034870147705
    10. '\' → logprob: -8.111034393310547

Token 377: ' Ensuite' (ID: 113884)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.000431861262768507
    2. ' ans' → logprob: -7.750432014465332
    3. '   ' → logprob: -14.250432014465332
    4. '	ans' → logprob: -14.875432014465332
    5. '(ans' → logprob: -15.750432014465332
    6. 'answer' → logprob: -17.875431060791016
    7. 'Ans' → logprob: -18.125431060791016
    8. '_ans' → logprob: -18.375431060791016
    9. '```' → logprob: -18.625431060791016
    10. '
' → logprob: -18.875431060791016

Token 378: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8130565881729126
    2. ' ans' → logprob: -0.8130565881729126
    3. 'ans' → logprob: -2.188056468963623
    4. '	ans' → logprob: -7.438056468963623
    5. '(ans' → logprob: -8.938056945800781
    6. '_ans' → logprob: -10.563056945800781
    7. '  ' → logprob: -10.813056945800781
    8. '    ' → logprob: -10.813056945800781
    9. ' ' → logprob: -11.188056945800781
    10. '
' → logprob: -11.563056945800781

Token 379: ' prendre' (ID: 24257)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10199091583490372
    2. ' ans' → logprob: -2.4769909381866455
    3. '   ' → logprob: -4.351990699768066
    4. '	ans' → logprob: -9.601990699768066
    5. '(ans' → logprob: -11.226990699768066
    6. '_ans' → logprob: -13.476990699768066
    7. '  ' → logprob: -14.226990699768066
    8. ' ' → logprob: -14.351990699768066
    9. '```' → logprob: -15.101990699768066
    10. '
' → logprob: -15.351990699768066

Token 380: ' le' (ID: 505)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5760790705680847
    2. 'ans' → logprob: -0.8260790705680847
    3. '(ans' → logprob: -9.201079368591309
    4. '	ans' → logprob: -10.326079368591309
    5. 'mod' → logprob: -12.701079368591309
    6. ' mod' → logprob: -13.951079368591309
    7. '_ans' → logprob: -14.201079368591309
    8. '%' → logprob: -14.326079368591309
    9. '
' → logprob: -16.201078414916992
    10. '   ' → logprob: -16.326078414916992

Token 381: ' reste' (ID: 26769)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.034122321754693985
    2. 'mod' → logprob: -3.9091222286224365
    3. ' ans' → logprob: -4.409122467041016
    4. '%' → logprob: -7.159122467041016
    5. ' mod' → logprob: -8.284122467041016
    6. ' modulo' → logprob: -8.284122467041016
    7. '(ans' → logprob: -11.034122467041016
    8. ' modulus' → logprob: -11.409122467041016
    9. ' %' → logprob: -12.034122467041016
    10. '	ans' → logprob: -12.909122467041016

Token 382: ' modulo' (ID: 112372)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5328910946846008
    2. ' ans' → logprob: -0.9078910946846008
    3. '(ans' → logprob: -4.782891273498535
    4. '   ' → logprob: -7.157891273498535
    5. '	ans' → logprob: -8.157891273498535
    6. ' de' → logprob: -8.657891273498535
    7. 'mod' → logprob: -10.532891273498535
    8. ' modulo' → logprob: -10.907891273498535
    9. '_ans' → logprob: -11.157891273498535
    10. '%' → logprob: -11.282891273498535

Token 383: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.47422072291374207
    2. ' mod' → logprob: -0.9742207527160645
    3. '(mod' → logprob: -8.849220275878906
    4. '	mod' → logprob: -15.599220275878906
    5. '_mod' → logprob: -17.224220275878906
    6. '.mod' → logprob: -17.349220275878906
    7. ' мод' → logprob: -17.849220275878906
    8. '```' → logprob: -18.349220275878906
    9. ' ans' → logprob: -18.474220275878906
    10. ' ' → logprob: -18.474220275878906

Token 384: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25731706619262695
    2. ' ans' → logprob: -2.132317066192627
    3. 'ans' → logprob: -2.507317066192627
    4. '(ans' → logprob: -3.882317066192627
    5. '
' → logprob: -6.382317066192627
    6. '%' → logprob: -6.757317066192627
    7. '	ans' → logprob: -7.007317066192627
    8. '    
' → logprob: -7.882317066192627
    9. ',' → logprob: -7.882317066192627
    10. ' %' → logprob: -8.007316589355469

Token 385: ' éviter' (ID: 64013)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.025923198089003563
    2. ' ans' → logprob: -3.900923252105713
    3. ' éviter' → logprob: -5.525923252105713
    4. '   ' → logprob: -8.025922775268555
    5. 'év' → logprob: -8.025922775268555
    6. ' garder' → logprob: -8.275922775268555
    7. 'maint' → logprob: -8.525922775268555
    8. '(ans' → logprob: -9.650922775268555
    9. ' garantir' → logprob: -10.025922775268555
    10. ' assurer' → logprob: -10.275922775268555

Token 386: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6370056867599487
    2. ' overflow' → logprob: -1.6370056867599487
    3. ' ans' → logprob: -2.1370058059692383
    4. ' des' → logprob: -3.0120058059692383
    5. ' un' → logprob: -3.3870058059692383
    6. 'ans' → logprob: -3.8870058059692383
    7. ' integer' → logprob: -4.262005805969238
    8. 'overflow' → logprob: -4.512005805969238
    9. ' que' → logprob: -4.637005805969238
    10. 'd' → logprob: -5.387005805969238

Token 387: ' déb' (ID: 37874)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.9035281538963318
    2. ' overflow' → logprob: -1.4035282135009766
    3. 'overflow' → logprob: -1.6535282135009766
    4. ' ans' → logprob: -1.9035282135009766
    5. 'mod' → logprob: -5.403528213500977
    6. 'Overflow' → logprob: -6.278528213500977
    7. ' mod' → logprob: -6.653528213500977
    8. ' Overflow' → logprob: -7.903528213500977
    9. ' dépasse' → logprob: -8.278528213500977
    10. '```' → logprob: -9.528528213500977

Token 388: 'ord' (ID: 604)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.08715548366308212
    2. 'ors' → logprob: -3.33715558052063
    3. 'ord' → logprob: -3.96215558052063
    4. 'ans' → logprob: -3.96215558052063
    5. 'ords' → logprob: -4.837155342102051
    6. 'orts' → logprob: -7.962155342102051
    7. ' mod' → logprob: -8.08715534210205
    8. '_mod' → logprob: -8.58715534210205
    9. 'uts' → logprob: -8.83715534210205
    10. '=' → logprob: -9.08715534210205

Token 389: 'ements' (ID: 4507)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.5517210364341736
    2. 'ur' → logprob: -1.9267210960388184
    3. 'f' → logprob: -2.6767210960388184
    4. 'u' → logprob: -3.1767210960388184
    5. 'x' → logprob: -4.676721096038818
    6. 'overflow' → logprob: -4.801721096038818
    7. 'ère' → logprob: -4.926721096038818
    8. 'ro' → logprob: -4.926721096038818
    9. 'mod' → logprob: -5.051721096038818
    10. 'reur' → logprob: -5.176721096038818

Token 390: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17014651000499725
    2. ' ans' → logprob: -2.5451464653015137
    3. 'ans' → logprob: -2.6701464653015137
    4. '(ans' → logprob: -4.920146465301514
    5. '	ans' → logprob: -7.295146465301514
    6. ',' → logprob: -8.545146942138672
    7. '    
' → logprob: -8.670146942138672
    8. '
' → logprob: -9.545146942138672
    9. '.' → logprob: -9.670146942138672
    10. '_ans' → logprob: -9.920146942138672

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05925559997558594
    2. 'ans' → logprob: -3.434255599975586
    3. ' ans' → logprob: -3.684255599975586
    4. '	ans' → logprob: -9.309255599975586
    5. '(ans' → logprob: -9.684255599975586
    6. '```' → logprob: -11.559255599975586
    7. '
' → logprob: -13.309255599975586
    8. '_ans' → logprob: -13.684255599975586
    9. '       ' → logprob: -14.559255599975586
    10. '    
' → logprob: -14.684255599975586

Token 392: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.3869662284851074
    2. ' ans' → logprob: -1.1369662284851074
    3. '(ans' → logprob: -9.886966705322266
    4. '	ans' → logprob: -10.386966705322266
    5. '   ' → logprob: -11.386966705322266
    6. '_ans' → logprob: -13.761966705322266
    7. 'answer' → logprob: -15.136966705322266
    8. 'Ans' → logprob: -15.761966705322266
    9. 'ANS' → logprob: -15.886966705322266
    10. '```' → logprob: -16.011966705322266

Token 393: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.08123458176851273
    2. '%=' → logprob: -2.5812346935272217
    3. '%' → logprob: -6.081234455108643
    4. '=' → logprob: -10.5812349319458
    5. ' %' → logprob: -11.0812349319458
    6. ' ' → logprob: -11.9562349319458
    7. ' =' → logprob: -12.0812349319458
    8. ')' → logprob: -13.5812349319458
    9. '```' → logprob: -14.0812349319458
    10. '	' → logprob: -14.2062349319458

Token 394: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.639096970204264e-05
    2. ' mod' → logprob: -9.250096321105957
    3. '(mod' → logprob: -15.500096321105957
    4. '10' → logprob: -19.500097274780273
    5. '	mod' → logprob: -20.500097274780273
    6. '```' → logprob: -22.000097274780273
    7. 'MOD' → logprob: -22.625097274780273
    8. ' мод' → logprob: -22.875097274780273
    9. '100' → logprob: -23.250097274780273
    10. '_mod' → logprob: -24.375097274780273

Token 395: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8670179997570813e-05
    2. '
' → logprob: -12.000019073486328
    3. '```' → logprob: -12.375019073486328
    4. '<|end|>' → logprob: -12.375019073486328
    5. '#' → logprob: -13.000019073486328
    6. ' print' → logprob: -14.000019073486328
    7. '#print' → logprob: -14.625019073486328
    8. ')' → logprob: -15.000019073486328
    9. '  
' → logprob: -16.875019073486328
    10. '``' → logprob: -17.625019073486328

Token 396: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.375000953674316
    3. ' print' → logprob: -15.625000953674316
    4. '#' → logprob: -15.875000953674316
    5. '#print' → logprob: -16.75
    6. 'pr' → logprob: -17.625
    7. '<|end|>' → logprob: -19.25
    8. '
' → logprob: -19.875
    9. 'prin' → logprob: -20.25
    10. 'n' → logprob: -20.375

Token 397: ' Ré' (ID: 27181)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.25
    3. 'ans' → logprob: -19.875
    4. '```' → logprob: -19.875
    5. '#' → logprob: -20.875
    6. '#print' → logprob: -21.625
    7. '
' → logprob: -22.125
    8. 'for' → logprob: -23.375
    9. 'Print' → logprob: -23.625
    10. 'answer' → logprob: -24.125

Token 398: 'p' (ID: 79)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19680283963680267
    2. '#' → logprob: -2.321802854537964
    3. 's' → logprob: -2.696802854537964
    4. 'int' → logprob: -4.821802616119385
    5. 'sum' → logprob: -7.071802616119385
    6. 'server' → logprob: -7.196802616119385
    7. 'p' → logprob: -8.071803092956543
    8. '#print' → logprob: -8.071803092956543
    9. 'prin' → logprob: -8.071803092956543
    10. 'pr' → logprob: -8.196803092956543

Token 399: 'éter' (ID: 73737)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0021157623268663883
    2. 'print' → logprob: -7.127115726470947
    3. 'ringer' → logprob: -8.252116203308105
    4. 'riter' → logprob: -8.627116203308105
    5. 'ronter' → logprob: -8.752116203308105
    6. '#' → logprob: -9.252116203308105
    7. 'int' → logprob: -9.627116203308105
    8. 'rer' → logprob: -10.002116203308105
    9. 'rir' → logprob: -10.002116203308105
    10. 'inter' → logprob: -10.002116203308105

Token 400: ' une' (ID: 2463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.028536492725834e-05
    2. 'for' → logprob: -10.250070571899414
    3. '#' → logprob: -10.500070571899414
    4. ' print' → logprob: -12.500070571899414
    5. 'n' → logprob: -13.750070571899414
    6. '
' → logprob: -14.000070571899414
    7. 'ans' → logprob: -14.375070571899414
    8. '(' → logprob: -15.250070571899414
    9. '(print' → logprob: -15.500070571899414
    10. '```' → logprob: -15.750070571899414

Token 401: ' opération' (ID: 86023)
  Prédit: 'ff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ff' → logprob: -0.7050643563270569
    2. 'print' → logprob: -0.9550643563270569
    3. '#' → logprob: -3.080064296722412
    4. 'for' → logprob: -4.330064296722412
    5. 'fois' → logprob: -4.830064296722412
    6. 'rray' → logprob: -5.205064296722412
    7. 'ns' → logprob: -5.330064296722412
    8. 'pp' → logprob: -5.455064296722412
    9. 'n' → logprob: -5.705064296722412
    10. 'vec' → logprob: -5.955064296722412

Token 402: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.334163099527359
    2. 'ans' → logprob: -1.9591630697250366
    3. 'print' → logprob: -2.709163188934326
    4. ' for' → logprob: -3.084163188934326
    5. '#' → logprob: -4.584163188934326
    6. ' pour' → logprob: -5.209163188934326
    7. 'pour' → logprob: -5.334163188934326
    8. 'n' → logprob: -5.959163188934326
    9. ' ans' → logprob: -6.584163188934326
    10. 's' → logprob: -7.084163188934326

Token 403: ' certain' (ID: 4454)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01671910658478737
    2. '```' → logprob: -4.516719341278076
    3. ' print' → logprob: -6.016719341278076
    4. '#' → logprob: -7.516719341278076
    5. 'iquement' → logprob: -7.766719341278076
    6. ' autre' → logprob: -8.266718864440918
    7. 'e' → logprob: -8.516718864440918
    8. 'plus' → logprob: -8.641718864440918
    9. 'til' → logprob: -8.891718864440918
    10. 'aut' → logprob: -8.891718864440918

Token 404: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.2579766511917114
    2. ' nombre' → logprob: -2.132976531982422
    3. 'n' → logprob: -2.632976531982422
    4. 'for' → logprob: -4.007976531982422
    5. '#' → logprob: -5.257976531982422
    6. 'e' → logprob: -5.382976531982422
    7. 'fois' → logprob: -6.257976531982422
    8. 'print' → logprob: -6.507976531982422
    9. 'nb' → logprob: -6.882976531982422
    10. 's' → logprob: -6.882976531982422

Token 405: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6872844696044922
    2. ' de' → logprob: -1.0622844696044922
    3. 'for' → logprob: -3.062284469604492
    4. 's' → logprob: -3.437284469604492
    5. 'n' → logprob: -4.187284469604492
    6. 'fois' → logprob: -4.437284469604492
    7. 'nombre' → logprob: -4.812284469604492
    8. '=' → logprob: -4.812284469604492
    9. '_' → logprob: -5.062284469604492
    10. 'times' → logprob: -5.562284469604492

Token 406: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.21174272894859314
    2. 'n' → logprob: -2.461742639541626
    3. 'range' → logprob: -2.461742639541626
    4. 'times' → logprob: -4.086742877960205
    5. 'for' → logprob: -6.961742877960205
    6. ' fois' → logprob: -7.586742877960205
    7. 'fo' → logprob: -7.711742877960205
    8. '(n' → logprob: -7.961742877960205
    9. 'int' → logprob: -8.086742401123047
    10. 'k' → logprob: -8.461742401123047

Token 407: '.
' (ID: 558)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.9797675609588623
    2. 'for' → logprob: -1.1047675609588623
    3. 'm' → logprob: -1.7297675609588623
    4. 't' → logprob: -2.3547675609588623
    5. ' for' → logprob: -4.604767799377441
    6. 'n' → logprob: -5.604767799377441
    7. 'x' → logprob: -6.229767799377441
    8. 'Q' → logprob: -6.354767799377441
    9. ' q' → logprob: -7.229767799377441
    10. '
' → logprob: -7.729767799377441

Token 408: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3373984098434448
    2. 'q' → logprob: -1.3373984098434448
    3. 'm' → logprob: -4.212398529052734
    4. 't' → logprob: -4.837398529052734
    5. ' for' → logprob: -7.712398529052734
    6. 'Q' → logprob: -8.462398529052734
    7. 'r' → logprob: -9.462398529052734
    8. 'k' → logprob: -9.712398529052734
    9. '```' → logprob: -9.712398529052734
    10. 'd' → logprob: -9.837398529052734

Token 409: ' range' (ID: 3352)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6472572088241577
    2. 'for' → logprob: -0.8972572088241577
    3. 't' → logprob: -3.1472573280334473
    4. 'm' → logprob: -3.8972573280334473
    5. 'Q' → logprob: -5.522257328033447
    6. ' for' → logprob: -7.272257328033447
    7. 'T' → logprob: -8.022256851196289
    8. 'r' → logprob: -8.897256851196289
    9. ' q' → logprob: -9.647256851196289
    10. 'x' → logprob: -9.897256851196289

Token 410: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.012534376233816147
    2. '(' → logprob: -4.387534141540527
    3. 'n' → logprob: -11.637534141540527
    4. '(
' → logprob: -12.137534141540527
    5. '(len' → logprob: -12.512534141540527
    6. '((' → logprob: -13.887534141540527
    7. ' (' → logprob: -13.887534141540527
    8. '(k' → logprob: -14.012534141540527
    9. '(m' → logprob: -14.387534141540527
    10. '(ans' → logprob: -14.512534141540527

Token 411: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015328369103372097
    2. '(n' → logprob: -4.765328407287598
    3. '1' → logprob: -5.265328407287598
    4. '(' → logprob: -7.015328407287598
    5. '2' → logprob: -8.015328407287598
    6. ')' → logprob: -9.390328407287598
    7. ' n' → logprob: -9.515328407287598
    8. 'ans' → logprob: -10.015328407287598
    9. '10' → logprob: -10.890328407287598
    10. '3' → logprob: -11.015328407287598

Token 412: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028335300739854574
    2. ' ,' → logprob: -6.502833366394043
    3. ',n' → logprob: -6.877833366394043
    4. ')' → logprob: -9.002833366394043
    5. '(n' → logprob: -10.377833366394043
    6. '1' → logprob: -10.502833366394043
    7. 'n' → logprob: -11.127833366394043
    8. '*' → logprob: -11.502833366394043
    9. '+' → logprob: -11.502833366394043
    10. '0' → logprob: -11.752833366394043

Token 413: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008454766124486923
    2. '(n' → logprob: -5.5084547996521
    3. ' n' → logprob: -5.7584547996521
    4. 'len' → logprob: -7.3834547996521
    5. 'k' → logprob: -8.758454322814941
    6. '(' → logprob: -9.133454322814941
    7. '2' → logprob: -9.758454322814941
    8. '10' → logprob: -9.758454322814941
    9. 'mod' → logprob: -10.133454322814941
    10. '(len' → logprob: -10.383454322814941

Token 414: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1261991560459137
    2. ')' → logprob: -2.376199245452881
    3. '):
' → logprob: -3.751199245452881
    4. '+' → logprob: -6.626199245452881
    5. '*' → logprob: -7.751199245452881
    6. '):
' → logprob: -9.876198768615723
    7. '(' → logprob: -10.001198768615723
    8. '//' → logprob: -10.001198768615723
    9. '-' → logprob: -10.126198768615723
    10. ' ):' → logprob: -10.251198768615723

Token 415: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019443610683083534
    2. '2' → logprob: -4.019443511962891
    3. ' ' → logprob: -7.144443511962891
    4. '(' → logprob: -8.39444351196289
    5. '3' → logprob: -8.89444351196289
    6. ')' → logprob: -9.14444351196289
    7. '4' → logprob: -11.01944351196289
    8. ' (' → logprob: -11.64444351196289
    9. '5' → logprob: -13.64444351196289
    10. '0' → logprob: -13.64444351196289

Token 416: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008726968429982662
    2. '2' → logprob: -4.758727073669434
    3. '3' → logprob: -9.258727073669434
    4. ' ' → logprob: -12.008727073669434
    5. '4' → logprob: -12.258727073669434
    6. '(' → logprob: -13.383727073669434
    7. ')' → logprob: -14.321227073669434
    8. 'ans' → logprob: -14.321227073669434
    9. '```' → logprob: -14.321227073669434
    10. '0' → logprob: -14.633727073669434

Token 417: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016441119834780693
    2. '):
' → logprob: -4.516441345214844
    3. ')' → logprob: -5.266441345214844
    4. ' ):' → logprob: -9.141441345214844
    5. '+' → logprob: -9.641441345214844
    6. '):
' → logprob: -10.766441345214844
    7. 'for' → logprob: -12.266441345214844
    8. '(' → logprob: -12.766441345214844
    9. ':' → logprob: -13.016441345214844
    10. '-' → logprob: -13.266441345214844

Token 418: ' gén' (ID: 15330)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03770139813423157
    2. ':
' → logprob: -3.412701368331909
    3. 'for' → logprob: -5.662701606750488
    4. ' for' → logprob: -8.162701606750488
    5. ' :' → logprob: -8.412701606750488
    6. ' :
' → logprob: -10.162701606750488
    7. '{' → logprob: -11.037701606750488
    8. ':
' → logprob: -12.412701606750488
    9. '):' → logprob: -13.162701606750488
    10. ')' → logprob: -13.662701606750488

Token 419: 'ère' (ID: 4346)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002750903833657503
    2. '(range' → logprob: -6.627750873565674
    3. 'er' → logprob: -8.252751350402832
    4. ' range' → logprob: -8.252751350402832
    5. 'rage' → logprob: -8.377751350402832
    6. '#' → logprob: -8.752751350402832
    7. '=' → logprob: -9.002751350402832
    8. 'enerate' → logprob: -9.377751350402832
    9. 'nage' → logprob: -10.377751350402832
    10. 'umer' → logprob: -10.377751350402832

Token 420: ' une' (ID: 2463)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2615918219089508
    2. ' range' → logprob: -1.5115917921066284
    3. '2' → logprob: -5.386591911315918
    4. ' ' → logprob: -6.261591911315918
    5. '(' → logprob: -6.386591911315918
    6. '(range' → logprob: -7.511591911315918
    7. ' (' → logprob: -8.261591911315918
    8. '_' → logprob: -8.636591911315918
    9. ' n' → logprob: -9.011591911315918
    10. 'n' → logprob: -10.011591911315918

Token 421: ' sé' (ID: 7462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1258101761341095
    2. ' range' → logprob: -2.750810146331787
    3. 'for' → logprob: -3.000810146331787
    4. ' for' → logprob: -5.500810146331787
    5. ')' → logprob: -9.000810623168945
    6. 'sequence' → logprob: -9.625810623168945
    7. 'n' → logprob: -9.750810623168945
    8. ' sequence' → logprob: -9.750810623168945
    9. ':' → logprob: -10.125810623168945
    10. ' ' → logprob: -10.375810623168945

Token 422: 'quence' (ID: 6975)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012095288373529911
    2. 'for' → logprob: -5.3870954513549805
    3. ' range' → logprob: -5.5120954513549805
    4. 'rage' → logprob: -7.1370954513549805
    5. 'ange' → logprob: -7.5120954513549805
    6. 'r' → logprob: -7.6370954513549805
    7. 'nage' → logprob: -8.51209545135498
    8. ')' → logprob: -8.88709545135498
    9. '(range' → logprob: -8.88709545135498
    10. '#' → logprob: -9.13709545135498

Token 423: ' allant' (ID: 122150)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23780876398086548
    2. '(' → logprob: -2.3628087043762207
    3. 'for' → logprob: -2.6128087043762207
    4. '(range' → logprob: -3.8628087043762207
    5. ' for' → logprob: -5.112808704376221
    6. ':
' → logprob: -5.362808704376221
    7. ' :' → logprob: -5.487808704376221
    8. 'range' → logprob: -5.987808704376221
    9. '(n' → logprob: -6.112808704376221
    10. ' (' → logprob: -6.612808704376221

Token 424: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4955451786518097
    2. 'from' → logprob: -0.9955451488494873
    3. '(n' → logprob: -5.495545387268066
    4. 'range' → logprob: -5.495545387268066
    5. 'de' → logprob: -5.620545387268066
    6. ' from' → logprob: -5.745545387268066
    7. '2' → logprob: -6.620545387268066
    8. '(range' → logprob: -6.745545387268066
    9. '0' → logprob: -6.995545387268066
    10. ' de' → logprob: -7.245545387268066

Token 425: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00041005798266269267
    2. ' ' → logprob: -7.875410079956055
    3. '1' → logprob: -11.125410079956055
    4. '2' → logprob: -11.625410079956055
    5. '(' → logprob: -12.625410079956055
    6. 'range' → logprob: -13.375410079956055
    7. ' range' → logprob: -13.875410079956055
    8. ')' → logprob: -15.625410079956055
    9. ',' → logprob: -16.625410079956055
    10. '```' → logprob: -17.125410079956055

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.750009536743164
    3. '1' → logprob: -13.625009536743164
    4. '2' → logprob: -15.250009536743164
    5. 'range' → logprob: -16.500009536743164
    6. '(' → logprob: -16.750009536743164
    7. '```' → logprob: -18.250009536743164
    8. ',' → logprob: -18.375009536743164
    9. ' range' → logprob: -18.812509536743164
    10. ')' → logprob: -19.562509536743164

Token 427: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6756620407104492
    2. '):' → logprob: -1.5506620407104492
    3. ':' → logprob: -1.8006620407104492
    4. ')' → logprob: -3.050662040710449
    5. ' to' → logprob: -3.675662040710449
    6. 'to' → logprob: -4.550662040710449
    7. ' ,' → logprob: -5.175662040710449
    8. '(range' → logprob: -5.675662040710449
    9. '(' → logprob: -5.925662040710449
    10. 'range' → logprob: -6.175662040710449

Token 428: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0020755522418767214
    2. ' ' → logprob: -6.252075672149658
    3. '(' → logprob: -8.8770751953125
    4. ' (' → logprob: -11.8770751953125
    5. '1' → logprob: -15.7520751953125
    6. 'range' → logprob: -16.5020751953125
    7. '```' → logprob: -16.6270751953125
    8. '0' → logprob: -17.1270751953125
    9. '6' → logprob: -17.6270751953125
    10. '
' → logprob: -17.6270751953125

Token 429: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002848029136657715
    2. ' ' → logprob: -5.877848148345947
    3. '(' → logprob: -10.127847671508789
    4. ' (' → logprob: -12.877847671508789
    5. ')' → logprob: -15.002847671508789
    6. '1' → logprob: -15.877847671508789
    7. '4' → logprob: -17.25284767150879
    8. '   ' → logprob: -17.50284767150879
    9. '0' → logprob: -17.62784767150879
    10. '```' → logprob: -17.75284767150879

Token 430: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.39274874329566956
    2. '*' → logprob: -1.1427487134933472
    3. '*n' → logprob: -5.142748832702637
    4. 'n' → logprob: -11.267748832702637
    5. ' ' → logprob: -12.267748832702637
    6. ' ' → logprob: -14.392748832702637
    7. ' n' → logprob: -15.017748832702637
    8. '
' → logprob: -15.142748832702637
    9. ')' → logprob: -16.26774787902832
    10. '*num' → logprob: -17.14274787902832

Token 431: ' n' (ID: 297)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22403036057949066
    2. 'n' → logprob: -1.9740303754806519
    3. ' n' → logprob: -3.4740302562713623
    4. ' ' → logprob: -3.9740302562713623
    5. '(' → logprob: -4.474030494689941
    6. ' (' → logprob: -7.474030494689941
    7. '(n' → logprob: -10.724030494689941
    8. ')' → logprob: -10.849030494689941
    9. ',' → logprob: -12.724030494689941
    10. '
' → logprob: -12.974030494689941

Token 432: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2520998418331146
    2. '-' → logprob: -1.502099871635437
    3. ')' → logprob: -9.377099990844727
    4. '()' → logprob: -10.502099990844727
    5. '()-' → logprob: -10.502099990844727
    6. ' ' → logprob: -10.877099990844727
    7. ')-' → logprob: -13.252099990844727
    8. '(' → logprob: -13.252099990844727
    9. '2' → logprob: -13.502099990844727
    10. 'n' → logprob: -13.627099990844727

Token 433: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43047216534614563
    2. '3' → logprob: -1.0554721355438232
    3. '1' → logprob: -6.430472373962402
    4. ' ' → logprob: -9.055472373962402
    5. '4' → logprob: -10.305472373962402
    6. ')' → logprob: -12.555472373962402
    7. '```' → logprob: -13.180472373962402
    8. '(' → logprob: -14.305472373962402
    9. '   ' → logprob: -14.742972373962402
    10. '
' → logprob: -15.367972373962402

Token 434: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.023530442267656326
    2. '2' → logprob: -3.7735304832458496
    3. '4' → logprob: -8.398530006408691
    4. '1' → logprob: -9.773530006408691
    5. ' ' → logprob: -13.398530006408691
    6. '```' → logprob: -14.773530006408691
    7. ')' → logprob: -15.023530006408691
    8. '5' → logprob: -15.398530006408691
    9. '   ' → logprob: -16.398530960083008
    10. '
' → logprob: -16.648530960083008

Token 435: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0351378507912159
    2. ')' → logprob: -4.28513765335083
    3. '-' → logprob: -4.66013765335083
    4. ' -' → logprob: -5.03513765335083
    5. '):
' → logprob: -5.66013765335083
    6. ' ):' → logprob: -6.78513765335083
    7. ':' → logprob: -9.035138130187988
    8. ' )' → logprob: -10.660138130187988
    9. '+' → logprob: -12.160138130187988
    10. ' ):
' → logprob: -12.535138130187988

Token 436: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12190038710832596
    2. ':' → logprob: -2.2469003200531006
    3. ' for' → logprob: -5.37190055847168
    4. ':
' → logprob: -5.62190055847168
    5. '):' → logprob: -7.74690055847168
    6. ')' → logprob: -8.74690055847168
    7. 'range' → logprob: -9.49690055847168
    8. '):
' → logprob: -10.37190055847168
    9. '   ' → logprob: -10.74690055847168
    10. '
' → logprob: -11.37190055847168

Token 437: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '<|end|>' → logprob: -17.75020408630371
    4. '```' → logprob: -19.37520408630371
    5. '2' → logprob: -19.87520408630371
    6. ')' → logprob: -20.50020408630371
    7. ' ' → logprob: -20.50020408630371
    8. '...' → logprob: -21.50020408630371
    9. '<|end|>' → logprob: -21.62520408630371
    10. ' one' → logprob: -21.75020408630371

Token 438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -17.750036239624023
    4. '2' → logprob: -17.875036239624023
    5. '
' → logprob: -19.625036239624023
    6. ')' → logprob: -19.625036239624023
    7. '   ' → logprob: -20.125036239624023
    8. ' ' → logprob: -20.125036239624023
    9. '  ' → logprob: -21.000036239624023
    10. ',' → logprob: -21.375036239624023

Token 439: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0177394337952137
    2. ' for' → logprob: -4.767739295959473
    3. ':' → logprob: -5.267739295959473
    4. ':
' → logprob: -5.642739295959473
    5. '
' → logprob: -8.017739295959473
    6. ')' → logprob: -11.517739295959473
    7. '   ' → logprob: -11.517739295959473
    8. '):
' → logprob: -11.767739295959473
    9. 'range' → logprob: -11.892739295959473
    10. '<|end|>' → logprob: -12.517739295959473

Token 440: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00022392053506337106
    2. '
' → logprob: -9.250224113464355
    3. ' for' → logprob: -9.500224113464355
    4. 'ans' → logprob: -10.375224113464355
    5. 'print' → logprob: -12.625224113464355
    6. 'range' → logprob: -12.750224113464355
    7. 'while' → logprob: -13.000224113464355
    8. '2' → logprob: -13.125224113464355
    9. 'i' → logprob: -13.750224113464355
    10. 'result' → logprob: -14.000224113464355

Token 441: ' _' (ID: 1175)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7148352265357971
    2. ' i' → logprob: -0.7148352265357971
    3. '_' → logprob: -4.214835166931152
    4. ' _' → logprob: -5.714835166931152
    5. '_i' → logprob: -6.964835166931152
    6. 'k' → logprob: -7.214835166931152
    7. ' k' → logprob: -7.714835166931152
    8. 'x' → logprob: -7.839835166931152
    9. ' x' → logprob: -8.089835166931152
    10. ' j' → logprob: -9.339835166931152

Token 442: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05491388216614723
    2. 'in' → logprob: -2.9299139976501465
    3. ' ' → logprob: -10.929913520812988
    4. 'range' → logprob: -12.304913520812988
    5. '_' → logprob: -13.554913520812988
    6. '1' → logprob: -13.554913520812988
    7. ',' → logprob: -13.679913520812988
    8. 'n' → logprob: -14.179913520812988
    9. 's' → logprob: -14.554913520812988
    10. 'In' → logprob: -14.679913520812988

Token 443: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804275393486023
    2. ' range' → logprob: -3.2880427837371826
    3. '_' → logprob: -15.163043022155762
    4. 'in' → logprob: -15.538043022155762
    5. '	range' → logprob: -15.913043022155762
    6. '(range' → logprob: -16.038042068481445
    7. 'rang' → logprob: -16.163042068481445
    8. 'r' → logprob: -16.288042068481445
    9. ' ' → logprob: -16.788042068481445
    10. 'ran' → logprob: -17.163042068481445

Token 444: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.141186450899113e-05
    2. '2' → logprob: -10.875020980834961
    3. ' (' → logprob: -13.500020980834961
    4. '((' → logprob: -13.875020980834961
    5. '(
' → logprob: -17.00002098083496
    6. ' ' → logprob: -19.00002098083496
    7. '(n' → logprob: -19.50002098083496
    8. '(int' → logprob: -20.25002098083496
    9. '()' → logprob: -20.50002098083496
    10. '0' → logprob: -21.25002098083496

Token 445: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012820183765143156
    2. '(' → logprob: -6.751282215118408
    3. ' ' → logprob: -9.25128173828125
    4. 'n' → logprob: -11.37628173828125
    5. '(n' → logprob: -13.12628173828125
    6. '0' → logprob: -14.25128173828125
    7. ' (' → logprob: -14.62628173828125
    8. '   ' → logprob: -14.75128173828125
    9. '1' → logprob: -15.75128173828125
    10. ')' → logprob: -15.87628173828125

Token 446: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.23151914775371552
    2. '*' → logprob: -1.606519103050232
    3. '*n' → logprob: -5.1065192222595215
    4. ' ' → logprob: -11.106518745422363
    5. 'n' → logprob: -12.606518745422363
    6. ' ' → logprob: -12.856518745422363
    7. '(n' → logprob: -12.856518745422363
    8. ' n' → logprob: -13.106518745422363
    9. '*(' → logprob: -13.356518745422363
    10. ',' → logprob: -13.481518745422363

Token 447: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008616108447313309
    2. ' n' → logprob: -4.758615970611572
    3. '(n' → logprob: -14.13361644744873
    4. '_n' → logprob: -14.50861644744873
    5. '	n' → logprob: -16.383615493774414
    6. ' ' → logprob: -16.383615493774414
    7. '
' → logprob: -16.383615493774414
    8. '_' → logprob: -16.633615493774414
    9. '<|end|>' → logprob: -16.758615493774414
    10. ')n' → logprob: -17.508615493774414

Token 448: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931578516960144
    2. ' -' → logprob: -0.6931578516960144
    3. ' ' → logprob: -12.318158149719238
    4. ')' → logprob: -12.693158149719238
    5. '<|end|>' → logprob: -13.943158149719238
    6. '   ' → logprob: -14.068158149719238
    7. ' ' → logprob: -14.943158149719238
    8. '
' → logprob: -15.693158149719238
    9. '```' → logprob: -15.693158149719238
    10. '[' → logprob: -16.068157196044922

Token 449: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.659005157416686e-05
    2. ' ' → logprob: -9.625066757202148
    3. '1' → logprob: -15.250066757202148
    4. '   ' → logprob: -15.375066757202148
    5. ')' → logprob: -18.06256675720215
    6. '  ' → logprob: -18.25006675720215
    7. '<|end|>' → logprob: -18.31256675720215
    8. '২' → logprob: -18.68756675720215
    9. '۲' → logprob: -18.68756675720215
    10. '```' → logprob: -18.81256675720215

Token 450: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.500004768371582
    3. '1' → logprob: -14.437504768371582
    4. '```' → logprob: -16.1250057220459
    5. '   ' → logprob: -16.5000057220459
    6. '২' → logprob: -16.8125057220459
    7. ')' → logprob: -17.0000057220459
    8. '
' → logprob: -17.1250057220459
    9. '۲' → logprob: -17.4375057220459
    10. '२' → logprob: -17.5000057220459

Token 451: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008786161430180073
    2. '):
' → logprob: -4.758786201477051
    3. ' ):' → logprob: -9.25878620147705
    4. ')' → logprob: -10.00878620147705
    5. ':' → logprob: -10.88378620147705
    6. '):
' → logprob: -12.00878620147705
    7. '   ' → logprob: -12.75878620147705
    8. '+' → logprob: -13.25878620147705
    9. ' ):
' → logprob: -14.50878620147705
    10. '():' → logprob: -14.50878620147705

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0040613021701574326
    2. 'ans' → logprob: -6.379061222076416
    3. 'print' → logprob: -6.504061222076416
    4. 'c' → logprob: -8.504061698913574
    5. ' ans' → logprob: -8.879061698913574
    6. 'input' → logprob: -9.129061698913574
    7. '    
' → logprob: -9.504061698913574
    8. 's' → logprob: -9.629061698913574
    9. '```' → logprob: -10.254061698913574
    10. '{
' → logprob: -10.754061698913574

Token 453: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3384473919868469
    2. 'x' → logprob: -1.9634473323822021
    3. 'a' → logprob: -3.088447332382202
    4. 'd' → logprob: -3.463447332382202
    5. 'print' → logprob: -3.713447332382202
    6. 'op' → logprob: -4.713447570800781
    7. 'i' → logprob: -4.963447570800781
    8. '   ' → logprob: -4.963447570800781
    9. 't' → logprob: -5.088447570800781
    10. 'tmp' → logprob: -5.963447570800781

Token 454: ' Mult' (ID: 15431)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.25867316126823425
    2. 'print' → logprob: -2.0086731910705566
    3. 'x' → logprob: -3.0086731910705566
    4. 'a' → logprob: -3.8836731910705566
    5. 'm' → logprob: -5.258673191070557
    6. 'd' → logprob: -5.883673191070557
    7. 'line' → logprob: -6.133673191070557
    8. 'val' → logprob: -6.508673191070557
    9. 'op' → logprob: -6.633673191070557
    10. 'b' → logprob: -6.633673191070557

Token 455: 'iplier' (ID: 30777)
  Prédit: 'iplier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iplier' → logprob: -0.09481564164161682
    2. 'ipl' → logprob: -2.844815731048584
    3. 'plier' → logprob: -3.844815731048584
    4. 'ip' → logprob: -4.719815731048584
    5. 'ans' → logprob: -7.344815731048584
    6. '   ' → logprob: -8.344815254211426
    7. 'iple' → logprob: -8.469815254211426
    8. 'print' → logprob: -9.094815254211426
    9. 'pl' → logprob: -9.094815254211426
    10. ' ans' → logprob: -9.094815254211426

Token 456: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.058559928089380264
    2. ' ans' → logprob: -3.0585598945617676
    3. '   ' → logprob: -4.933559894561768
    4. '(ans' → logprob: -6.058559894561768
    5. '	ans' → logprob: -8.058560371398926
    6. 'answer' → logprob: -11.308560371398926
    7. 'anst' → logprob: -11.558560371398926
    8. 'c' → logprob: -11.558560371398926
    9. 'num' → logprob: -12.058560371398926
    10. ' by' → logprob: -12.308560371398926

Token 457: ' par' (ID: 686)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.7704259157180786
    2. '   ' → logprob: -1.3954259157180786
    3. 'ans' → logprob: -1.8954259157180786
    4. '=' → logprob: -2.145425796508789
    5. ' *=' → logprob: -4.645425796508789
    6. 'by' → logprob: -5.520425796508789
    7. ' by' → logprob: -5.770425796508789
    8. ' ans' → logprob: -6.020425796508789
    9. '```' → logprob: -6.770425796508789
    10. ' =' → logprob: -7.520425796508789

Token 458: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.43691855669021606
    2. '2' → logprob: -1.0619184970855713
    3. '10' → logprob: -4.93691873550415
    4. '3' → logprob: -7.31191873550415
    5. 'n' → logprob: -9.061918258666992
    6. 'ans' → logprob: -9.561918258666992
    7. 'c' → logprob: -10.561918258666992
    8. '5' → logprob: -10.811918258666992
    9. '(n' → logprob: -10.811918258666992
    10. '(' → logprob: -10.811918258666992

Token 459: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.29668647050857544
    2. '4' → logprob: -1.4216864109039307
    3. '10' → logprob: -4.29668664932251
    4. '3' → logprob: -6.67168664932251
    5. 'n' → logprob: -8.546686172485352
    6. 'ans' → logprob: -9.296686172485352
    7. '(n' → logprob: -9.921686172485352
    8. '5' → logprob: -10.296686172485352
    9. '(' → logprob: -10.296686172485352
    10. ' ' → logprob: -10.421686172485352

Token 460: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0075377789326012135
    2. 'ans' → logprob: -5.257537841796875
    3. ' ans' → logprob: -6.132537841796875
    4. ',' → logprob: -10.382537841796875
    5. '
' → logprob: -10.507537841796875
    6. '(ans' → logprob: -10.507537841796875
    7. '	ans' → logprob: -11.007537841796875
    8. ' and' → logprob: -11.757537841796875
    9. '*' → logprob: -12.007537841796875
    10. '```' → logprob: -12.882537841796875

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48100414872169495
    2. 'ans' → logprob: -0.9810041189193726
    3. ' ans' → logprob: -4.981004238128662
    4. '	ans' → logprob: -10.731003761291504
    5. '(ans' → logprob: -11.231003761291504
    6. '   ' → logprob: -15.106003761291504
    7. '_ans' → logprob: -15.356003761291504
    8. '```' → logprob: -15.606003761291504
    9. 'Ans' → logprob: -16.35600471496582
    10. '       ' → logprob: -16.85600471496582

Token 462: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.005300281569361687
    2. ' ans' → logprob: -5.255300045013428
    3. '   ' → logprob: -9.630300521850586
    4. '	ans' → logprob: -14.380300521850586
    5. '(ans' → logprob: -15.630300521850586
    6. 'answer' → logprob: -18.130300521850586
    7. '```' → logprob: -18.630300521850586
    8. '_ans' → logprob: -18.755300521850586
    9. 'anst' → logprob: -19.005300521850586
    10. ' ' → logprob: -19.380300521850586

Token 463: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.5824874639511108
    2. ' *=' → logprob: -1.5824874639511108
    3. '=' → logprob: -1.8324874639511108
    4. ' =' → logprob: -2.5824875831604004
    5. '   ' → logprob: -8.207487106323242
    6. ' <<=' → logprob: -9.707487106323242
    7. '*' → logprob: -10.207487106323242
    8. '%=' → logprob: -10.582487106323242
    9. ' %=' → logprob: -11.207487106323242
    10. ' ' → logprob: -11.707487106323242

Token 464: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.375709533691406
    4. '  ' → logprob: -20.625709533691406
    5. '۲' → logprob: -20.875709533691406
    6. '```' → logprob: -20.875709533691406
    7. ' ' → logprob: -21.000709533691406
    8. '２' → logprob: -21.750709533691406
    9. '    ' → logprob: -21.750709533691406
    10. '
' → logprob: -22.063209533691406

Token 465: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '۲' → logprob: -19.625003814697266
    4. '２' → logprob: -20.625003814697266
    5. '   ' → logprob: -21.000003814697266
    6. '```' → logprob: -21.500003814697266
    7. '২' → logprob: -22.000003814697266
    8. '२' → logprob: -22.500003814697266
    9. '₂' → logprob: -22.500003814697266
    10. '٢' → logprob: -22.750003814697266

Token 466: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6950381398200989
    2. 'ans' → logprob: -0.6950381398200989
    3. '	ans' → logprob: -7.070038318634033
    4. ' ans' → logprob: -7.195038318634033
    5. '```' → logprob: -8.570037841796875
    6. '(ans' → logprob: -9.695037841796875
    7. '_ans' → logprob: -11.320037841796875
    8. '  ' → logprob: -12.320037841796875
    9. '.' → logprob: -12.570037841796875
    10. 'mod' → logprob: -12.570037841796875

Token 468: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00875838939100504
    2. '   ' → logprob: -4.758758544921875
    3. ' ans' → logprob: -9.008758544921875
    4. '	ans' → logprob: -11.383758544921875
    5. '(ans' → logprob: -11.633758544921875
    6. '_ans' → logprob: -14.133758544921875
    7. '```' → logprob: -15.383758544921875
    8. 'answer' → logprob: -16.133758544921875
    9. 'Ans' → logprob: -16.508758544921875
    10. '#' (adapté à ' #') → logprob: -17.008758544921875

Token 469: ' Pr' (ID: 2284)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.054500666621607e-06
    2. ' ans' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.000003814697266
    4. '	ans' → logprob: -18.125003814697266
    5. '(ans' → logprob: -18.625003814697266
    6. '
' → logprob: -20.875003814697266
    7. 'answer' → logprob: -21.500003814697266
    8. 'Ans' → logprob: -22.000003814697266
    9. 'anst' → logprob: -22.000003814697266
    10. 'ann' → logprob: -22.000003814697266

Token 470: 'endre' (ID: 9574)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04119322448968887
    2. ' ans' → logprob: -4.791193008422852
    3. '#' → logprob: -4.916193008422852
    4. 'int' → logprob: -5.041193008422852
    5. '=' → logprob: -5.416193008422852
    6. 'endre' → logprob: -5.666193008422852
    7. 'end' → logprob: -5.666193008422852
    8. 'ends' → logprob: -6.041193008422852
    9. '(ans' → logprob: -7.291193008422852
    10. '%' → logprob: -7.541193008422852

Token 471: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007474447484128177
    2. ' ans' → logprob: -7.2507476806640625
    3. '(ans' → logprob: -10.250747680664062
    4. '	ans' → logprob: -13.750747680664062
    5. 'mod' → logprob: -13.875747680664062
    6. '_ans' → logprob: -16.000747680664062
    7. '   ' → logprob: -17.500747680664062
    8. '=' → logprob: -17.625747680664062
    9. 'anst' → logprob: -18.375747680664062
    10. 'Ans' → logprob: -18.375747680664062

Token 472: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011986102908849716
    2. ' ans' → logprob: -5.011986255645752
    3. 'mod' → logprob: -5.261986255645752
    4. '%' → logprob: -9.886985778808594
    5. ' mod' → logprob: -11.511985778808594
    6. ' modulo' → logprob: -12.261985778808594
    7. '(ans' → logprob: -12.761985778808594
    8. '%=' → logprob: -13.761985778808594
    9. 'answer' → logprob: -14.261985778808594
    10. ' modulus' → logprob: -14.511985778808594

Token 473: ' modulo' (ID: 112372)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.2657149136066437
    2. ' %=' → logprob: -1.5157148838043213
    3. 'ans' → logprob: -4.8907151222229
    4. '%' → logprob: -5.1407151222229
    5. ' ans' → logprob: -8.390714645385742
    6. '(ans' → logprob: -10.390714645385742
    7. '=' → logprob: -10.890714645385742
    8. '   ' → logprob: -11.140714645385742
    9. 'mod' → logprob: -11.265714645385742
    10. ' %' → logprob: -11.390714645385742

Token 474: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.38687434792518616
    2. 'mod' → logprob: -1.1368743181228638
    3. '(mod' → logprob: -12.636874198913574
    4. ' ans' → logprob: -16.88687515258789
    5. '	mod' → logprob: -17.38687515258789
    6. 'ans' → logprob: -17.88687515258789
    7. ' ' → logprob: -18.51187515258789
    8. '_mod' → logprob: -18.63687515258789
    9. ' мод' → logprob: -19.01187515258789
    10. ' modul' → logprob: -19.38687515258789

Token 475: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012951264157891273
    2. 'ans' → logprob: -5.262951374053955
    3. '(ans' → logprob: -5.637951374053955
    4. ' ans' → logprob: -5.637951374053955
    5. '	ans' → logprob: -7.762951374053955
    6. ',' → logprob: -10.512950897216797
    7. '<|end|>' → logprob: -10.512950897216797
    8. 'mod' → logprob: -10.762950897216797
    9. '    
' → logprob: -11.387950897216797
    10. '
' → logprob: -11.387950897216797

Token 476: ' rester' (ID: 54655)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20167352259159088
    2. ' ans' → logprob: -1.7016735076904297
    3. '(ans' → logprob: -8.95167350769043
    4. 'mod' → logprob: -9.57667350769043
    5. ' mod' → logprob: -10.07667350769043
    6. '	ans' → logprob: -11.95167350769043
    7. ' éviter' → logprob: -12.20167350769043
    8. '_ans' → logprob: -12.95167350769043
    9. 'maint' → logprob: -13.45167350769043
    10. 'ens' → logprob: -13.57667350769043

Token 477: ' dans' (ID: 2671)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014958515763282776
    2. 'mod' → logprob: -4.389958381652832
    3. ' ans' → logprob: -6.639958381652832
    4. '(ans' → logprob: -7.514958381652832
    5. ' mod' → logprob: -8.139958381652832
    6. '%' → logprob: -8.514958381652832
    7. '=' → logprob: -9.514958381652832
    8. '```' → logprob: -11.264958381652832
    9. ')' → logprob: -12.514958381652832
    10. '(mod' → logprob: -13.139958381652832

Token 478: ' les' (ID: 1341)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.12693262100219727
    2. ' mod' → logprob: -2.1269326210021973
    3. '(mod' → logprob: -12.376932144165039
    4. 'ans' → logprob: -15.876932144165039
    5. '	mod' → logprob: -16.62693214416504
    6. ' ans' → logprob: -16.62693214416504
    7. '```' → logprob: -16.87693214416504
    8. '_mod' → logprob: -17.00193214416504
    9. '.mod' → logprob: -17.25193214416504
    10. ' modulo' → logprob: -18.00193214416504

Token 479: ' limites' (ID: 72637)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0011706985533237457
    2. ' mod' → logprob: -6.751170635223389
    3. '(mod' → logprob: -15.376171112060547
    4. 'ans' → logprob: -16.001171112060547
    5. '100' → logprob: -16.876171112060547
    6. '```' → logprob: -17.251171112060547
    7. '10' → logprob: -17.376171112060547
    8. '.mod' → logprob: -17.501171112060547
    9. '_mod' → logprob: -18.501171112060547
    10. ' мод' → logprob: -18.626171112060547

Token 480: ' autor' (ID: 13432)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10836270451545715
    2. 'mod' → logprob: -3.1083626747131348
    3. '(ans' → logprob: -3.4833626747131348
    4. '(mod' → logprob: -3.6083626747131348
    5. ' ans' → logprob: -9.108363151550293
    6. ' mod' → logprob: -10.358363151550293
    7. '   ' → logprob: -10.608363151550293
    8. '```' → logprob: -10.733363151550293
    9. '=' → logprob: -11.858363151550293
    10. ')' → logprob: -12.108363151550293

Token 481: 'isées' (ID: 108324)
  Prédit: 'isées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isées' → logprob: -0.10361289978027344
    2. 'es' → logprob: -2.4786128997802734
    3. 'ées' → logprob: -4.353612899780273
    4. 'e' → logprob: -7.728612899780273
    5. 'isés' → logprob: -8.478612899780273
    6. 'ized' → logprob: -8.603612899780273
    7. 'és' → logprob: -8.728612899780273
    8. 'aires' → logprob: -9.228612899780273
    9. '```' → logprob: -9.353612899780273
    10. '   ' → logprob: -9.853612899780273

Token 482: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004483531229197979
    2. 'ans' → logprob: -5.754483699798584
    3. '(ans' → logprob: -7.379483699798584
    4. '.' → logprob: -8.129483222961426
    5. ' ans' → logprob: -8.504483222961426
    6. ',' → logprob: -10.004483222961426
    7. ')' → logprob: -10.504483222961426
    8. '	ans' → logprob: -10.629483222961426
    9. 'mod' → logprob: -10.879483222961426
    10. '    
' → logprob: -11.004483222961426

Token 483: ' éviter' (ID: 64013)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1806100457906723
    2. ' ans' → logprob: -1.8056100606918335
    3. '   ' → logprob: -7.555610179901123
    4. '(ans' → logprob: -8.180609703063965
    5. '	ans' → logprob: -10.180609703063965
    6. 'mod' → logprob: -11.805609703063965
    7. ' mod' → logprob: -11.930609703063965
    8. '_ans' → logprob: -12.805609703063965
    9. '```' → logprob: -13.430609703063965
    10. '%' → logprob: -13.680609703063965

Token 484: ' les' (ID: 1341)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7697601914405823
    2. 'mod' → logprob: -0.8947601914405823
    3. ' ans' → logprob: -2.6447601318359375
    4. ' mod' → logprob: -3.1447601318359375
    5. 'le' → logprob: -4.6447601318359375
    6. '(ans' → logprob: -6.2697601318359375
    7. '(mod' → logprob: -6.7697601318359375
    8. ' le' → logprob: -7.5197601318359375
    9. '   ' → logprob: -8.144760131835938
    10. ' la' → logprob: -8.769760131835938

Token 485: ' grands' (ID: 43085)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0009538597078062594
    2. ' mod' → logprob: -7.000953674316406
    3. 'ans' → logprob: -10.250953674316406
    4. 'overflow' → logprob: -12.250953674316406
    5. ' overflow' → logprob: -14.375953674316406
    6. '```' → logprob: -14.625953674316406
    7. ' modulo' → logprob: -15.000953674316406
    8. ' ans' → logprob: -15.125953674316406
    9. '(mod' → logprob: -15.375953674316406
    10. '	mod' → logprob: -16.250953674316406

Token 486: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.5823798179626465
    2. 'mod' → logprob: -0.9573798179626465
    3. ' mod' → logprob: -3.8323798179626465
    4. 'ans' → logprob: -4.5823798179626465
    5. ' numbers' → logprob: -4.8323798179626465
    6. ' ent' → logprob: -5.4573798179626465
    7. 'ent' → logprob: -5.5823798179626465
    8. 'numbers' → logprob: -5.7073798179626465
    9. 'nombre' → logprob: -6.5823798179626465
    10. ' ans' → logprob: -6.5823798179626465

Token 487: '.
' (ID: 558)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22079595923423767
    2. '(ans' → logprob: -2.0957958698272705
    3. '   ' → logprob: -3.3457958698272705
    4. '.' → logprob: -3.9707958698272705
    5. ' ans' → logprob: -4.09579610824585
    6. '=' → logprob: -7.34579610824585
    7. ')' → logprob: -7.34579610824585
    8. '()' → logprob: -7.34579610824585
    9. ',' → logprob: -7.47079610824585
    10. '.
' → logprob: -7.59579610824585

Token 488: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.002023804932832718
    2. ' ans' → logprob: -6.252023696899414
    3. '(ans' → logprob: -10.002023696899414
    4. '   ' → logprob: -11.002023696899414
    5. '	ans' → logprob: -11.002023696899414
    6. '```' → logprob: -11.877023696899414
    7. '\' → logprob: -12.627023696899414
    8. '=' → logprob: -13.002023696899414
    9. '\n' → logprob: -13.377023696899414
    10. '_ans' → logprob: -14.377023696899414

Token 489: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -5.8961017202818766e-05
    2. ' ans' → logprob: -9.750059127807617
    3. '(ans' → logprob: -15.000059127807617
    4. 'mod' → logprob: -15.375059127807617
    5. '	ans' → logprob: -17.375059127807617
    6. 'answer' → logprob: -19.125059127807617
    7. 'Ans' → logprob: -19.500059127807617
    8. '```' → logprob: -19.750059127807617
    9. 'ANS' → logprob: -19.875059127807617
    10. '_ans' → logprob: -20.125059127807617

Token 490: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0003374886582605541
    2. ' %=' → logprob: -8.000337600708008
    3. '%' → logprob: -13.125337600708008
    4. '=' → logprob: -16.875337600708008
    5. '//=' → logprob: -22.000337600708008
    6. '%\' → logprob: -22.500337600708008
    7. '*=' → logprob: -22.625337600708008
    8. ')%' → logprob: -22.750337600708008
    9. '\' → logprob: -22.875337600708008
    10. '```' → logprob: -23.125337600708008

Token 491: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.088346359931165e-07
    2. ' mod' → logprob: -14.000000953674316
    3. '(mod' → logprob: -20.625
    4. '	mod' → logprob: -22.125
    5. 'MOD' → logprob: -24.625
    6. '```' → logprob: -25.25
    7. ' мод' → logprob: -25.5
    8. 'moder' → logprob: -25.625
    9. '_mod' → logprob: -25.75
    10. '.mod' → logprob: -26.375

Token 492: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.696889623621246e-06
    2. '#' → logprob: -14.12500286102295
    3. '
' → logprob: -14.12500286102295
    4. ' print' → logprob: -14.37500286102295
    5. '```' → logprob: -15.25000286102295
    6. 'ans' → logprob: -15.50000286102295
    7. 'for' → logprob: -16.750001907348633
    8. '#print' → logprob: -16.750001907348633
    9. ')' → logprob: -18.375001907348633
    10. '\' → logprob: -19.250001907348633

Token 493: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.0
    3. '
' → logprob: -18.875
    4. '```' → logprob: -19.125
    5. 'ans' → logprob: -22.5
    6. '#print' → logprob: -22.875
    7. '#' → logprob: -23.0
    8. '
' → logprob: -25.0
    9. '``' → logprob: -25.0
    10. '  
' → logprob: -25.125

Token 494: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -21.125
    3. 'pr' → logprob: -24.625
    4. '#print' → logprob: -24.875
    5. '```' → logprob: -25.375
    6. 'Print' → logprob: -25.75
    7. 'prin' → logprob: -26.375
    8. '
' → logprob: -26.625
    9. '#' → logprob: -26.75
    10. 'ans' → logprob: -27.125

Token 495: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0010798488510772586
    2. '#' → logprob: -7.00108003616333
    3. 'ich' → logprob: -9.501079559326172
    4. 'cher' → logprob: -10.126079559326172
    5. 'iche' → logprob: -10.501079559326172
    6. 'ichage' → logprob: -11.751079559326172
    7. 'print' → logprob: -11.876079559326172
    8. 'ic' → logprob: -13.126079559326172
    9. '```' → logprob: -13.376079559326172
    10. 'f' → logprob: -13.376079559326172

Token 496: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08027967810630798
    2. '(ans' → logprob: -2.580279588699341
    3. 'print' → logprob: -6.58027982711792
    4. ' ans' → logprob: -13.580279350280762
    5. '(' → logprob: -16.830280303955078
    6. '	ans' → logprob: -17.955280303955078
    7. 'answer' → logprob: -18.080280303955078
    8. 'ANS' → logprob: -18.455280303955078
    9. 'a' → logprob: -18.830280303955078
    10. '_ans' → logprob: -18.955280303955078

Token 497: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3134988844394684
    2. '(ans' → logprob: -1.313498854637146
    3. 'answer' → logprob: -9.188498497009277
    4. 'result' → logprob: -9.313498497009277
    5. 'final' → logprob: -10.313498497009277
    6. ' ans' → logprob: -12.063498497009277
    7. '(' → logprob: -13.188498497009277
    8. 'print' → logprob: -13.313498497009277
    9. 'res' → logprob: -14.688498497009277
    10. '	ans' → logprob: -14.688498497009277

Token 498: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '(print' → logprob: -16.625
    3. ' print' → logprob: -17.375
    4. '
' → logprob: -18.5
    5. 'ans' → logprob: -19.5
    6. '```' → logprob: -19.75
    7. '(' → logprob: -20.5
    8. '(ans' → logprob: -20.875
    9. '()
' → logprob: -21.25
    10. ')
' → logprob: -22.5

Token 499: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.0
    3. '```' → logprob: -20.125
    4. '
' → logprob: -20.875
    5. '(print' → logprob: -22.0
    6. 'ans' → logprob: -23.0
    7. '.print' → logprob: -24.625
    8. ')
' → logprob: -24.75
    9. '``' → logprob: -25.125
    10. '#print' → logprob: -25.25

Token 500: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -20.5
    3. ' print' → logprob: -20.75
    4. 'pr' → logprob: -27.25
    5. '``' → logprob: -28.25
    6. '	print' → logprob: -28.625
    7. 'ans' → logprob: -28.75
    8. 'Print' → logprob: -28.875
    9. '#print' → logprob: -29.125
    10. 'prints' → logprob: -29.25

Token 501: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -21.0
    3. '```' → logprob: -23.0
    4. '#print' → logprob: -29.625
    5. 'Print' → logprob: -30.5
    6. '	print' → logprob: -30.75
    7. '`' → logprob: -30.875
    8. '``' → logprob: -31.0
    9. '.print' → logprob: -31.875
    10. 'prints' → logprob: -32.0

Token 502: '()' (ID: 416)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.02338407374918461
    2. '(' → logprob: -3.7733840942382812
    3. '()' → logprob: -8.898384094238281
    4. ' (' → logprob: -14.523384094238281
    5. '(
' → logprob: -14.898384094238281
    6. 'ans' → logprob: -15.023384094238281
    7. '(answer' → logprob: -15.398384094238281
    8. '((' → logprob: -16.27338409423828
    9. '(a' → logprob: -16.27338409423828
    10. '(f' → logprob: -16.64838409423828

Token 503: ' affiche' (ID: 127479)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2568143904209137
    2. 'print' → logprob: -1.5068143606185913
    3. '(print' → logprob: -5.506814479827881
    4. 'ans' → logprob: -7.506814479827881
    5. '(' → logprob: -8.631814002990723
    6. '()' → logprob: -9.381814002990723
    7. '(answer' → logprob: -13.881814002990723
    8. ' print' → logprob: -14.256814002990723
    9. '(output' → logprob: -15.631814002990723
    10. '#print' → logprob: -15.756814002990723

Token 504: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.306760805164231e-05
    2. 'ans' → logprob: -11.25001335144043
    3. '(' → logprob: -17.87501335144043
    4. '	ans' → logprob: -19.75001335144043
    5. '(answer' → logprob: -20.75001335144043
    6. ' ans' → logprob: -21.00001335144043
    7. '()' → logprob: -21.50001335144043
    8. '(
' → logprob: -22.50001335144043
    9. '(an' → logprob: -22.75001335144043
    10. ' (' → logprob: -23.00001335144043

Token 505: ' valeur' (ID: 41664)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00862308219075203
    2. 'ans' → logprob: -4.758623123168945
    3. '(' → logprob: -11.758623123168945
    4. '()' → logprob: -14.758623123168945
    5. 'result' → logprob: -15.508623123168945
    6. '(answer' → logprob: -16.633623123168945
    7. '	ans' → logprob: -17.133623123168945
    8. 'answer' → logprob: -17.258623123168945
    9. ' ans' → logprob: -17.383623123168945
    10. '(
' → logprob: -17.883623123168945

Token 506: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.1782583391759545e-05
    2. 'ans' → logprob: -11.000031471252441
    3. '(' → logprob: -11.500031471252441
    4. '()' → logprob: -12.250031471252441
    5. '(
' → logprob: -16.375032424926758
    6. '(answer' → logprob: -17.625032424926758
    7. ' (' → logprob: -17.875032424926758
    8. '```' → logprob: -19.000032424926758
    9. '	ans' → logprob: -19.125032424926758
    10. 'print' → logprob: -19.375032424926758

Token 507: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12692810595035553
    2. '(ans' → logprob: -2.1269280910491943
    3. ' ans' → logprob: -16.751928329467773
    4. '	ans' → logprob: -17.751928329467773
    5. 'ANS' → logprob: -21.001928329467773
    6. 'Ans' → logprob: -21.626928329467773
    7. 'answer' → logprob: -21.751928329467773
    8. '_ans' → logprob: -21.876928329467773
    9. '(' → logprob: -22.001928329467773
    10. 'anst' → logprob: -22.126928329467773

Token 508: ' dans' (ID: 2671)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.16745112836360931
    2. 'print' → logprob: -1.9174511432647705
    3. 'ans' → logprob: -5.417450904846191
    4. '(' → logprob: -6.542450904846191
    5. '(print' → logprob: -6.667450904846191
    6. '()' → logprob: -10.417450904846191
    7. '```' → logprob: -12.167450904846191
    8. ')' → logprob: -12.542450904846191
    9. '(
' → logprob: -12.542450904846191
    10. ' print' → logprob: -12.917450904846191

Token 509: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6525922417640686
    2. 'ans' → logprob: -0.7775922417640686
    3. '(ans' → logprob: -5.152592182159424
    4. 'le' → logprob: -5.277592182159424
    5. 'l' → logprob: -5.527592182159424
    6. ' la' → logprob: -6.152592182159424
    7. 'une' → logprob: -7.027592182159424
    8. ')' → logprob: -7.277592182159424
    9. 'console' → logprob: -8.902592658996582
    10. '()' → logprob: -9.027592658996582

Token 510: ' sortie' (ID: 52761)
  Prédit: 'console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'console' → logprob: -0.08564198762178421
    2. 'print' → logprob: -2.835642099380493
    3. 'terminal' → logprob: -5.210641860961914
    4. 'code' → logprob: -5.210641860961914
    5. 'output' → logprob: -5.210641860961914
    6. 'stdout' → logprob: -6.085641860961914
    7. ')' → logprob: -6.460641860961914
    8. 'fonction' → logprob: -6.960641860961914
    9. '```' → logprob: -7.335641860961914
    10. 'f' → logprob: -7.710641860961914

Token 511: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6957855224609375
    2. '(ans' → logprob: -0.6957855224609375
    3. '(' → logprob: -5.9457855224609375
    4. 'ans' → logprob: -11.570785522460938
    5. '())' → logprob: -12.070785522460938
    6. '("")' → logprob: -13.945785522460938
    7. ')' → logprob: -14.320785522460938
    8. '().' → logprob: -15.320785522460938
    9. '()`' → logprob: -15.445785522460938
    10. ' ()' → logprob: -15.570785522460938

Token 512: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0013257184764370322
    2. '()
' → logprob: -7.626325607299805
    3. '()' → logprob: -7.876325607299805
    4. 'ans' → logprob: -8.251325607299805
    5. '(ans' → logprob: -8.751325607299805
    6. '(print' → logprob: -11.126325607299805
    7. '```' → logprob: -11.751325607299805
    8. ' print' → logprob: -12.251325607299805
    9. ')
' → logprob: -12.751325607299805
    10. '(' → logprob: -13.126325607299805

Token 513: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.25
    3. ' print' → logprob: -19.0
    4. '``' → logprob: -24.625
    5. '(print' → logprob: -24.75
    6. '#print' → logprob: -26.0
    7. '	print' → logprob: -26.75
    8. 'Print' → logprob: -26.75
    9. '.print' → logprob: -27.25
    10. 'prints' → logprob: -27.5

Token 514: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.250005722045898
    3. 'ans' → logprob: -14.125005722045898
    4. ' (' → logprob: -17.2500057220459
    5. '()' → logprob: -17.7500057220459
    6. '(
' → logprob: -18.8750057220459
    7. '(answer' → logprob: -19.0000057220459
    8. '(abs' → logprob: -19.8750057220459
    9. '(args' → logprob: -20.1250057220459
    10. '	ans' → logprob: -20.3750057220459

Token 515: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.125000953674316
    3. '())' → logprob: -15.875000953674316
    4. ')
' → logprob: -16.375
    5. '()' → logprob: -16.5
    6. ')`' → logprob: -18.25
    7. '))' → logprob: -18.375
    8. ')#' → logprob: -19.875
    9. '')' → logprob: -20.125
    10. '),' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 513
Tokens correctement prédits (1ère position, stricte): 125
Tokens correctement prédits (1ère position, avec adaptation): 128
Tokens correctement prédits (top 10): 294
Précision stricte (1ère position): 24.37%
Précision adaptée (1ère position): 24.95%
Précision (top 10): 57.31%
================================================================================
