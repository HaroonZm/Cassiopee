================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
r = int(input())
result = 3 * r * r
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'r' (ID: 81)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004195455927401781
    2. 'r' → logprob: -6.254195690155029
    3. '(r' → logprob: -6.254195690155029
    4. '```' → logprob: -8.629195213317871
    5. ''' → logprob: -9.879195213317871
    6. '('' → logprob: -10.254195213317871
    7. '`' → logprob: -11.379195213317871
    8. '("("' → logprob: -11.629195213317871
    9. '(
' → logprob: -12.129195213317871
    10. '()' → logprob: -12.129195213317871

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06202247366309166
    2. ')' → logprob: -2.9370224475860596
    3. '()' → logprob: -6.062022686004639
    4. '(
' → logprob: -7.312022686004639
    5. ''' → logprob: -7.437022686004639
    6. 'r' → logprob: -7.437022686004639
    7. '```' → logprob: -7.437022686004639
    8. '`' → logprob: -7.687022686004639
    9. '(r' → logprob: -8.06202220916748
    10. '('' → logprob: -8.31202220916748

Token 5: 'result' (ID: 2521)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5197177529335022
    2. '%' → logprob: -1.3947176933288574
    3. '*' → logprob: -2.1447176933288574
    4. '\n' → logprob: -3.8947176933288574
    5. '\' → logprob: -5.894717693328857
    6. ''' → logprob: -6.019717693328857
    7. '+
' → logprob: -6.019717693328857
    8. '#' → logprob: -6.269717693328857
    9. '`' → logprob: -6.519717693328857
    10. '**' → logprob: -6.644717693328857

Token 6: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8745721578598022
    2. '=' → logprob: -1.4995721578598022
    3. '[' → logprob: -1.8745721578598022
    4. '(' → logprob: -2.749572277069092
    5. ' =' → logprob: -2.999572277069092
    6. ')' → logprob: -3.374572277069092
    7. ' ' → logprob: -3.874572277069092
    8. '*' → logprob: -4.624572277069092
    9. '_' → logprob: -4.749572277069092
    10. '%' → logprob: -4.999572277069092

Token 7: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7640859484672546
    2. 'r' → logprob: -1.6390860080718994
    3. ' r' → logprob: -1.8890860080718994
    4. '0' → logprob: -2.5140860080718994
    5. ''' → logprob: -3.0140860080718994
    6. '"' → logprob: -3.0140860080718994
    7. '1' → logprob: -5.26408576965332
    8. ' '' → logprob: -6.38908576965332
    9. ' "' → logprob: -7.13908576965332
    10. 'pow' → logprob: -7.88908576965332

Token 8: '3' (ID: 18)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.028726257383823395
    2. '1' → logprob: -4.278726100921631
    3. '0' → logprob: -4.653726100921631
    4. 'sum' → logprob: -6.028726100921631
    5. '"' → logprob: -7.153726100921631
    6. 'pow' → logprob: -8.278726577758789
    7. '''' → logprob: -8.528726577758789
    8. ''' → logprob: -8.528726577758789
    9. ''r' → logprob: -8.528726577758789
    10. '""' → logprob: -8.653726577758789

Token 9: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.48630842566490173
    2. '**' → logprob: -1.2363084554672241
    3. ' *' → logprob: -2.8613083362579346
    4. '*r' → logprob: -3.8613083362579346
    5. ' **' → logprob: -4.361308574676514
    6. 'r' → logprob: -5.861308574676514
    7. '***' → logprob: -8.611308097839355
    8. ' r' → logprob: -8.611308097839355
    9. '^' → logprob: -9.486308097839355
    10. '#' → logprob: -9.486308097839355

Token 10: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.634103536605835
    2. ' r' → logprob: -0.759103536605835
    3. ' ' → logprob: -6.509103775024414
    4. ' ' → logprob: -12.009103775024414
    5. ' (' → logprob: -13.384103775024414
    6. ''' → logprob: -13.884103775024414
    7. '(' → logprob: -14.134103775024414
    8. '"' → logprob: -14.759103775024414
    9. ' `' → logprob: -14.884103775024414
    10. '`' → logprob: -14.884103775024414

Token 11: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.07827543467283249
    2. '*' → logprob: -3.078275442123413
    3. '+' → logprob: -4.953275203704834
    4. ' **' → logprob: -5.078275203704834
    5. ' ' → logprob: -5.328275203704834
    6. '^' → logprob: -6.078275203704834
    7. '\n' → logprob: -6.578275203704834
    8. '\' → logprob: -6.828275203704834
    9. ' *' → logprob: -6.828275203704834
    10. ')' → logprob: -7.203275203704834

Token 12: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0028127210680395365
    2. ' r' → logprob: -6.37781286239624
    3. '2' → logprob: -7.50281286239624
    4. '**' → logprob: -8.127812385559082
    5. '*r' → logprob: -8.752812385559082
    6. ' ' → logprob: -9.752812385559082
    7. '*' → logprob: -10.252812385559082
    8. '3' → logprob: -11.752812385559082
    9. ' **' → logprob: -13.627812385559082
    10. ' *' → logprob: -13.877812385559082

Token 13: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8299765586853027
    2. '*' → logprob: -1.9549765586853027
    3. '**' → logprob: -2.2049765586853027
    4. ' +' → logprob: -2.2049765586853027
    5. '<|end|>' → logprob: -2.8299765586853027
    6. ' ' → logprob: -3.2049765586853027
    7. ')' → logprob: -3.4549765586853027
    8. '(' → logprob: -3.8299765586853027
    9. '\' → logprob: -4.079976558685303
    10. '\n' → logprob: -4.454976558685303

Token 14: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1980253905057907
    2. '*' → logprob: -2.4480254650115967
    3. '**' → logprob: -2.5730254650115967
    4. ')' → logprob: -5.323025226593018
    5. '<|end|>' → logprob: -5.823025226593018
    6. 'r' → logprob: -6.448025226593018
    7. '\' → logprob: -6.448025226593018
    8. ' +' → logprob: -6.823025226593018
    9. '#' → logprob: -6.948025226593018
    10. ' ' → logprob: -7.323025226593018

Token 15: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002352695446461439
    2. '(result' → logprob: -6.127352714538574
    3. '(r' → logprob: -8.877352714538574
    4. '()' → logprob: -11.502352714538574
    5. '("("' → logprob: -12.002352714538574
    6. '('' → logprob: -13.002352714538574
    7. ' (' → logprob: -13.002352714538574
    8. ')' → logprob: -13.502352714538574
    9. 'result' → logprob: -14.377352714538574
    10. '(res' → logprob: -14.502352714538574

Token 16: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. '))' → logprob: -12.250009536743164
    3. '*' → logprob: -13.375009536743164
    4. '`)' → logprob: -13.500009536743164
    5. ' )' → logprob: -14.125009536743164
    6. '')' → logprob: -15.625009536743164
    7. '**' → logprob: -15.625009536743164
    8. ')`' → logprob: -15.625009536743164
    9. '```' → logprob: -15.875009536743164
    10. '#' → logprob: -16.125009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 14
Tokens correctement prédits (1ère position, stricte): 2
Tokens correctement prédits (1ère position, avec adaptation): 2
Tokens correctement prédits (top 10): 8
Précision stricte (1ère position): 14.29%
Précision adaptée (1ère position): 14.29%
Précision (top 10): 57.14%
================================================================================
