================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, sub, mul

# Obscure décomposition et traitement
*A, = map(int, input().split())
op_fns = [add, sub, mul]
combinations = [fn(A[0], A[1]) for fn in op_fns]
print(reduce(lambda x, y: (x > y) * x + (y >= x) * y, combinations))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022899029776453972
    2. 'import' → logprob: -3.8978989124298096
    3. ' ' → logprob: -6.397899150848389
    4. '.' → logprob: -7.522899150848389
    5. ' .' → logprob: -9.14789867401123
    6. '.import' → logprob: -10.64789867401123
    7. '	import' → logprob: -11.77289867401123
    8. '<|end|>' → logprob: -13.02289867401123
    9. '_import' → logprob: -13.39789867401123
    10. ' ' → logprob: -13.52289867401123

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1571701467037201
    2. ' import' → logprob: -2.282170057296753
    3. 'add' → logprob: -3.907170057296753
    4. ' mul' → logprob: -4.282170295715332
    5. ' ' → logprob: -5.532170295715332
    6. 'import' → logprob: -5.657170295715332
    7. 'mul' → logprob: -6.907170295715332
    8. ' item' → logprob: -7.407170295715332
    9. ' icon' → logprob: -9.157170295715332
    10. 'item' → logprob: -9.532170295715332

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011845800094306469
    2. '\' → logprob: -5.511845588684082
    3. '(
' → logprob: -5.511845588684082
    4. '\n' → logprob: -6.386845588684082
    5. '\(' → logprob: -7.261845588684082
    6. ',' → logprob: -7.386845588684082
    7. '```' → logprob: -8.761845588684082
    8. '`' → logprob: -9.386845588684082
    9. '(

' → logprob: -9.636845588684082
    10. '#' → logprob: -9.761845588684082

Token 10: ' sub' (ID: 1543)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.33259645104408264
    2. ' mul' → logprob: -1.3325964212417603
    3. 'sub' → logprob: -4.332596302032471
    4. ' sub' → logprob: -5.332596302032471
    5. ' i' → logprob: -8.082596778869629
    6. 'i' → logprob: -8.332596778869629
    7. 'getitem' → logprob: -8.457596778869629
    8. '```' → logprob: -9.207596778869629
    9. ' ' → logprob: -9.707596778869629
    10. 'item' → logprob: -9.832596778869629

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01967928558588028
    2. '(
' → logprob: -5.144679069519043
    3. 'def' → logprob: -5.644679069519043
    4. ',' → logprob: -6.269679069519043
    5. '\' → logprob: -6.519679069519043
    6. 'result' → logprob: -6.644679069519043
    7. '#' → logprob: -7.019679069519043
    8. '*' → logprob: -7.019679069519043
    9. '\n' → logprob: -7.519679069519043
    10. '`' → logprob: -7.644679069519043

Token 12: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.01645061746239662
    2. 'mul' → logprob: -4.14145040512085
    3. ' tr' → logprob: -9.141450881958008
    4. ' xor' → logprob: -9.641450881958008
    5. ' ' → logprob: -9.891450881958008
    6. '_mul' → logprob: -10.391450881958008
    7. '```' → logprob: -10.641450881958008
    8. ' import' → logprob: -10.641450881958008
    9. ' and' → logprob: -11.141450881958008
    10. ' mod' → logprob: -11.391450881958008

Token 13: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23041430115699768
    2. ',' → logprob: -2.105414390563965
    3. 'def' → logprob: -3.480414390563965
    4. '\' → logprob: -4.105414390563965
    5. '\n' → logprob: -4.605414390563965
    6. '```' → logprob: -4.855414390563965
    7. '(
' → logprob: -5.355414390563965
    8. '#' → logprob: -5.605414390563965
    9. '[' → logprob: -6.480414390563965
    10. '`' → logprob: -6.480414390563965

Token 14: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1643286794424057
    2. ',' → logprob: -2.7893285751342773
    3. 'def' → logprob: -3.0393285751342773
    4. '+' → logprob: -4.664328575134277
    5. '#' → logprob: -4.914328575134277
    6. 'print' → logprob: -5.789328575134277
    7. '(
' → logprob: -5.914328575134277
    8. 'add' → logprob: -5.914328575134277
    9. ')' → logprob: -6.039328575134277
    10. '*' → logprob: -6.039328575134277

Token 15: ' Ob' (ID: 3057)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.46896687150001526
    2. 'def' → logprob: -2.4689669609069824
    3. ' add' → logprob: -3.4689669609069824
    4. ' define' → logprob: -3.4689669609069824
    5. ' reduce' → logprob: -3.7189669609069824
    6. ' Define' → logprob: -3.8439669609069824
    7. ' The' → logprob: -4.218966960906982
    8. ' sum' → logprob: -4.468966960906982
    9. ' Code' → logprob: -4.593966960906982
    10. ' max' → logprob: -4.718966960906982

Token 16: 'sc' (ID: 2786)
  Prédit: 'ject'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ject' → logprob: -0.6507315039634705
    2. 'jective' → logprob: -2.0257315635681152
    3. 'serve' → logprob: -2.5257315635681152
    4. 'fusc' → logprob: -2.5257315635681152
    5. 'server' → logprob: -2.7757315635681152
    6. 'servable' → logprob: -3.0257315635681152
    7. 'servation' → logprob: -3.5257315635681152
    8. 'j' → logprob: -4.900731563568115
    9. '#' → logprob: -5.025731563568115
    10. 'serv' → logprob: -5.025731563568115

Token 17: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.02305678091943264
    2. 'ur' → logprob: -4.023056983947754
    3. '#' → logprob: -5.898056983947754
    4. '```' → logprob: -7.648056983947754
    5. 'u' → logprob: -7.898056983947754
    6. 'ured' → logprob: -8.148056983947754
    7. 'urity' → logprob: -9.023056983947754
    8. '_' → logprob: -9.273056983947754
    9. '##' → logprob: -9.398056983947754
    10. ' ure' → logprob: -9.523056983947754

Token 18: ' dé' (ID: 2393)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41681113839149475
    2. 'def' → logprob: -1.7918111085891724
    3. '_code' → logprob: -3.541811227798462
    4. '(' → logprob: -3.916811227798462
    5. '_function' → logprob: -4.291810989379883
    6. ',' → logprob: -4.416810989379883
    7. ' _' → logprob: -4.666810989379883
    8. ' code' → logprob: -4.791810989379883
    9. '_token' → logprob: -5.041810989379883
    10. 'code' → logprob: -5.166810989379883

Token 19: 'composition' (ID: 119135)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.048631418496370316
    2. 'fi' → logprob: -3.173631429672241
    3. 'cor' → logprob: -6.548631191253662
    4. 'fin' → logprob: -7.048631191253662
    5. 'func' → logprob: -8.04863166809082
    6. 'fonction' → logprob: -8.29863166809082
    7. 'fusc' → logprob: -8.42363166809082
    8. 'fine' → logprob: -8.42363166809082
    9. 'crypt' → logprob: -8.54863166809082
    10. 'r' → logprob: -8.67363166809082

Token 20: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.02570641040802
    2. '_' → logprob: -1.65070641040802
    3. ':' → logprob: -2.6507062911987305
    4. ' of' → logprob: -2.7757062911987305
    5. 's' → logprob: -3.1507062911987305
    6. ' ' → logprob: -3.2757062911987305
    7. ' de' → logprob: -3.2757062911987305
    8. ',' → logprob: -3.5257062911987305
    9. ' :' → logprob: -3.5257062911987305
    10. ' =' → logprob: -3.5257062911987305

Token 21: ' traitement' (ID: 42434)
  Prédit: ' recom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recom' → logprob: -0.3221296966075897
    2. ' composition' → logprob: -1.822129726409912
    3. 'composition' → logprob: -2.822129726409912
    4. 'ré' → logprob: -4.572129726409912
    5. ' reconstruction' → logprob: -4.572129726409912
    6. ' combinaison' → logprob: -4.572129726409912
    7. ' re' → logprob: -6.072129726409912
    8. ' ré' → logprob: -6.322129726409912
    9. 're' → logprob: -6.322129726409912
    10. ' réduction' → logprob: -6.822129726409912

Token 22: '
' (ID: 198)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8566096425056458
    2. 'def' → logprob: -1.481609582901001
    3. 'de' → logprob: -1.856609582901001
    4. ' d' → logprob: -3.231609582901001
    5. ' of' → logprob: -3.481609582901001
    6. ' des' → logprob: -3.981609582901001
    7. 'des' → logprob: -4.23160982131958
    8. 's' → logprob: -4.23160982131958
    9. ' ' → logprob: -4.48160982131958
    10. '_' → logprob: -4.73160982131958

Token 23: '*A' (ID: 166365)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20381712913513184
    2. '_' → logprob: -2.203817129135132
    3. ' def' → logprob: -4.078817367553711
    4. ':' → logprob: -4.328817367553711
    5. '\' → logprob: -4.578817367553711
    6. ',' → logprob: -4.953817367553711
    7. 'result' → logprob: -5.328817367553711
    8. 's' → logprob: -5.703817367553711
    9. '(' → logprob: -5.953817367553711
    10. '(
' → logprob: -6.578817367553711

Token 24: ',' (ID: 11)
  Prédit: 'rg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rg' → logprob: -0.4675064980983734
    2. 'r' → logprob: -2.4675064086914062
    3. ' =' → logprob: -2.7175064086914062
    4. ',' → logprob: -3.0925064086914062
    5. 'dd' → logprob: -3.2175064086914062
    6. '=' → logprob: -3.4675064086914062
    7. 'rray' → logprob: -4.217506408691406
    8. 's' → logprob: -4.342506408691406
    9. '*' → logprob: -4.467506408691406
    10. 'pp' → logprob: -4.717506408691406

Token 25: ' =' (ID: 314)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.9432536363601685
    2. '*' → logprob: -1.5682536363601685
    3. ' *' → logprob: -1.5682536363601685
    4. 'B' → logprob: -1.9432536363601685
    5. ' =' → logprob: -3.943253517150879
    6. '=' → logprob: -4.943253517150879
    7. ' ' → logprob: -5.693253517150879
    8. '*b' → logprob: -6.005753517150879
    9. 'rest' → logprob: -6.005753517150879
    10. ' b' → logprob: -6.068253517150879

Token 26: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.20946915447711945
    2. 'range' → logprob: -1.959469199180603
    3. ' map' → logprob: -3.4594690799713135
    4. '[' → logprob: -5.084469318389893
    5. ' range' → logprob: -5.584469318389893
    6. 'reduce' → logprob: -6.334469318389893
    7. 'input' → logprob: -6.709469318389893
    8. 'filter' → logprob: -6.834469318389893
    9. '(map' → logprob: -7.834469318389893
    10. 're' → logprob: -8.459468841552734

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.7330716252326965
    2. '(' → logprob: -1.1080715656280518
    3. '(abs' → logprob: -2.3580715656280518
    4. '(lambda' → logprob: -3.1080715656280518
    5. '(str' → logprob: -3.3580715656280518
    6. '(eval' → logprob: -5.858071804046631
    7. '(add' → logprob: -6.233071804046631
    8. '(ord' → logprob: -6.358071804046631
    9. '(list' → logprob: -6.733071804046631
    10. '(sum' → logprob: -6.983071804046631

Token 28: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.22430188953876495
    2. ',' → logprob: -1.9743019342422485
    3. ',input' → logprob: -3.224301815032959
    4. '(' → logprob: -4.474301815032959
    5. ')' → logprob: -5.224301815032959
    6. 'input' → logprob: -5.974301815032959
    7. ')(' → logprob: -7.849301815032959
    8. '(line' → logprob: -8.099302291870117
    9. '('' → logprob: -8.599302291870117
    10. '(open' → logprob: -8.599302291870117

Token 29: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4318384528160095
    2. ' input' → logprob: -1.0568385124206543
    3. ')' → logprob: -6.681838512420654
    4. 'open' → logprob: -7.681838512420654
    5. ',input' → logprob: -7.806838512420654
    6. ' open' → logprob: -7.931838512420654
    7. '(input' → logprob: -8.681838035583496
    8. ' ' → logprob: -9.306838035583496
    9. '```' → logprob: -9.681838035583496
    10. '=input' → logprob: -10.306838035583496

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0025769672356545925
    2. '()' → logprob: -6.00257682800293
    3. '())' → logprob: -9.62757682800293
    4. '(' → logprob: -11.75257682800293
    5. ' ().' → logprob: -11.75257682800293
    6. '('' → logprob: -12.00257682800293
    7. '()))' → logprob: -13.00257682800293
    8. '());' → logprob: -13.25257682800293
    9. '(()' → logprob: -13.37757682800293
    10. '('').' → logprob: -13.37757682800293

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.010151729919016361
    2. 'strip' → logprob: -4.7601518630981445
    3. 'read' → logprob: -6.8851518630981445
    4. 'rstrip' → logprob: -8.010151863098145
    5. ' split' → logprob: -8.885151863098145
    6. ')' → logprob: -10.510151863098145
    7. '().' → logprob: -12.010151863098145
    8. 'spl' → logprob: -13.010151863098145
    9. ' readline' → logprob: -13.135151863098145
    10. ').' → logprob: -13.510151863098145

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005641736090183258
    2. '()' → logprob: -5.505641937255859
    3. '()))' → logprob: -7.255641937255859
    4. ')' → logprob: -7.505641937255859
    5. '(' → logprob: -8.63064193725586
    6. '()),' → logprob: -10.25564193725586
    7. '('' → logprob: -10.75564193725586
    8. '())
' → logprob: -10.75564193725586
    9. ' ())' → logprob: -11.25564193725586
    10. '());' → logprob: -11.63064193725586

Token 33: 'op' (ID: 467)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9954302310943604
    2. '*' → logprob: -1.2454302310943604
    3. '#' → logprob: -2.7454302310943604
    4. '\n' → logprob: -3.1204302310943604
    5. '+
' → logprob: -3.6204302310943604
    6. '<|end|>' → logprob: -3.6204302310943604
    7. ')' → logprob: -3.7454302310943604
    8. ';' → logprob: -4.120429992675781
    9. ' 
' → logprob: -4.120429992675781
    10. '\' → logprob: -4.120429992675781

Token 34: '_f' (ID: 1337)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03808373212814331
    2. ' =' → logprob: -4.163083553314209
    3. 'er' → logprob: -4.538083553314209
    4. '=' → logprob: -4.538083553314209
    5. '_' → logprob: -8.663084030151367
    6. 'érations' → logprob: -9.913084030151367
    7. '_choices' → logprob: -10.913084030151367
    8. 'ér' → logprob: -11.413084030151367
    9. '_tokens' → logprob: -11.538084030151367
    10. ')' → logprob: -11.538084030151367

Token 35: 'ns' (ID: 6097)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3539203405380249
    2. 'unc' → logprob: -1.353920340538025
    3. '=' → logprob: -4.1039204597473145
    4. 'un' → logprob: -4.8539204597473145
    5. 'uns' → logprob: -4.9789204597473145
    6. 'unction' → logprob: -6.1039204597473145
    7. ' =' → logprob: -6.1039204597473145
    8. 'ns' → logprob: -6.3539204597473145
    9. '_' → logprob: -7.4789204597473145
    10. '```' → logprob: -7.6039204597473145

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2821109890937805
    2. '=' → logprob: -1.4071109294891357
    3. '[' → logprob: -7.532111167907715
    4. '=[' → logprob: -8.657111167907715
    5. ' =[' → logprob: -9.157111167907715
    6. 's' → logprob: -9.532111167907715
    7. '[:]' → logprob: -10.657111167907715
    8. '<|end|>' → logprob: -11.282111167907715
    9. '=[]' → logprob: -11.407111167907715
    10. '=['' → logprob: -12.407111167907715

Token 37: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06667988747358322
    2. '[m' → logprob: -3.0666799545288086
    3. '[sub' → logprob: -4.941679954528809
    4. '(add' → logprob: -5.441679954528809
    5. ' [' → logprob: -5.566679954528809
    6. '(m' → logprob: -6.191679954528809
    7. ' (' → logprob: -8.566679954528809
    8. '(' → logprob: -9.066679954528809
    9. '(sub' → logprob: -9.566679954528809
    10. '{' → logprob: -10.441679954528809

Token 38: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.08022060245275497
    2. ' add' → logprob: -2.9552206993103027
    3. 'mul' → logprob: -3.8302206993103027
    4. 'sub' → logprob: -5.955220699310303
    5. ' mul' → logprob: -8.205220222473145
    6. ' sub' → logprob: -8.455220222473145
    7. ')add' → logprob: -10.330220222473145
    8. '(add' → logprob: -10.517720222473145
    9. ']' → logprob: -10.767720222473145
    10. ' ' → logprob: -10.892720222473145

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002910550683736801
    2. ' ,' → logprob: -5.877910614013672
    3. 'mul' → logprob: -9.502910614013672
    4. 'sub' → logprob: -11.627910614013672
    5. ',m' → logprob: -11.752910614013672
    6. ' mul' → logprob: -12.877910614013672
    7. '_mul' → logprob: -13.002910614013672
    8. ',
' → logprob: -13.002910614013672
    9. '(sub' → logprob: -13.627910614013672
    10. ',s' → logprob: -13.877910614013672

Token 40: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.09725658595561981
    2. 'mul' → logprob: -2.972256660461426
    3. ' sub' → logprob: -3.222256660461426
    4. ' mul' → logprob: -6.472256660461426
    5. 'add' → logprob: -10.472256660461426
    6. ' ' → logprob: -10.722256660461426
    7. '	sub' → logprob: -11.597256660461426
    8. '  ' → logprob: -12.597256660461426
    9. '   ' → logprob: -12.784756660461426
    10. '```' → logprob: -13.409756660461426

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011428380385041237
    2. ' ,' → logprob: -6.876142978668213
    3. ',m' → logprob: -9.376142501831055
    4. 'mul' → logprob: -11.001142501831055
    5. ']' → logprob: -12.751142501831055
    6. '_mul' → logprob: -13.751142501831055
    7. ' mul' → logprob: -14.126142501831055
    8. ',
' → logprob: -14.251142501831055
    9. ',

' → logprob: -14.501142501831055
    10. ')' → logprob: -14.501142501831055

Token 42: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.4288565516471863
    2. ' mul' → logprob: -1.053856611251831
    3. ' ' → logprob: -9.55385684967041
    4. '_mul' → logprob: -10.30385684967041
    5. '.mul' → logprob: -10.80385684967041
    6. ' mull' → logprob: -11.92885684967041
    7. ' muli' → logprob: -12.67885684967041
    8. '*' → logprob: -12.80385684967041
    9. 'mult' → logprob: -12.99135684967041
    10. ' ' → logprob: -13.36635684967041

Token 43: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0034073973074555397
    2. ',' → logprob: -5.7534074783325195
    3. ' ]' → logprob: -9.00340747833252
    4. ')' → logprob: -9.62840747833252
    5. ')]' → logprob: -11.12840747833252
    6. '])' → logprob: -11.62840747833252
    7. ']
' → logprob: -12.37840747833252
    8. ']

' → logprob: -12.62840747833252
    9. ',
' → logprob: -13.25340747833252
    10. '[' → logprob: -14.00340747833252

Token 44: 'com' (ID: 639)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4418102502822876
    2. 'result' → logprob: -1.5668102502822876
    3. ')' → logprob: -2.316810131072998
    4. '(' → logprob: -2.441810131072998
    5. 'op' → logprob: -2.566810131072998
    6. '[' → logprob: -2.691810131072998
    7. ' for' → logprob: -3.316810131072998
    8. '(
' → logprob: -3.566810131072998
    9. '()' → logprob: -3.691810131072998
    10. ']' → logprob: -3.941810131072998

Token 45: 'binations' (ID: 113572)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8102931976318359
    2. 'binations' → logprob: -1.810293197631836
    3. 'p' → logprob: -1.935293197631836
    4. 'bs' → logprob: -1.935293197631836
    5. 'bo' → logprob: -3.560293197631836
    6. 'bos' → logprob: -4.185293197631836
    7. 'ps' → logprob: -5.060293197631836
    8. 'ponents' → logprob: -5.310293197631836
    9. 'bis' → logprob: -5.310293197631836
    10. 'bi' → logprob: -5.685293197631836

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09308191388845444
    2. '=' → logprob: -2.5930819511413574
    3. '(' → logprob: -4.343081951141357
    4. 's' → logprob: -7.593081951141357
    5. '=lambda' → logprob: -9.3430814743042
    6. ' ' → logprob: -9.4680814743042
    7. '<|end|>' → logprob: -9.4680814743042
    8. '=[]' → logprob: -9.7180814743042
    9. '_' → logprob: -10.0930814743042
    10. ',' → logprob: -10.4680814743042

Token 47: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6786323189735413
    2. ' [(' → logprob: -0.9286323189735413
    3. '[(' → logprob: -3.9286322593688965
    4. ' [
' → logprob: -4.0536322593688965
    5. ' []' → logprob: -4.1786322593688965
    6. '[' → logprob: -4.4286322593688965
    7. ' list' → logprob: -4.8036322593688965
    8. ' [[]' → logprob: -5.1786322593688965
    9. ' (' → logprob: -5.3036322593688965
    10. ' [[' → logprob: -6.0536322593688965

Token 48: 'fn' (ID: 13682)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.7792820930480957
    2. '(a' → logprob: -1.2792820930480957
    3. '(A' → logprob: -2.1542820930480957
    4. ' (' → logprob: -3.2792820930480957
    5. '(fn' → logprob: -3.2792820930480957
    6. '(' → logprob: -4.279282093048096
    7. '(*' → logprob: -4.404282093048096
    8. '[A' → logprob: -4.904282093048096
    9. '(x' → logprob: -5.154282093048096
    10. '(lambda' → logprob: -5.654282093048096

Token 49: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0120353698730469
    2. '(A' → logprob: -1.1370353698730469
    3. ' for' → logprob: -1.6370353698730469
    4. '(a' → logprob: -3.137035369873047
    5. '(*' → logprob: -3.387035369873047
    6. '(op' → logprob: -4.262035369873047
    7. '([' → logprob: -5.262035369873047
    8. '(com' → logprob: -5.387035369873047
    9. '(
' → logprob: -6.012035369873047
    10. '((' → logprob: -6.012035369873047

Token 50: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03915897384285927
    2. '[' → logprob: -3.414159059524536
    3. '[j' → logprob: -6.289158821105957
    4. ')' → logprob: -6.789158821105957
    5. '0' → logprob: -7.664158821105957
    6. ',' → logprob: -7.789158821105957
    7. '[:' → logprob: -8.414158821105957
    8. ',i' → logprob: -8.414158821105957
    9. '[-' → logprob: -8.664158821105957
    10. '[n' → logprob: -8.789158821105957

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6485292315483093
    2. 'i' → logprob: -0.7735292315483093
    3. ' i' → logprob: -4.523529052734375
    4. ' ' → logprob: -6.648529052734375
    5. '-' → logprob: -7.398529052734375
    6. '[i' → logprob: -7.523529052734375
    7. 'j' → logprob: -7.773529052734375
    8. 'x' → logprob: -7.898529052734375
    9. ':' → logprob: -7.898529052734375
    10. '1' → logprob: -8.523529052734375

Token 52: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4196021556854248
    2. '],' → logprob: -1.9196021556854248
    3. '),' → logprob: -2.169602155685425
    4. ' ),' → logprob: -3.794602155685425
    5. ' ,' → logprob: -3.919602155685425
    6. ' ],' → logprob: -4.669602394104004
    7. ')' → logprob: -4.919602394104004
    8. ' ' → logprob: -5.794602394104004
    9. ')]' → logprob: -6.169602394104004
    10. ']' → logprob: -6.169602394104004

Token 53: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.31455564498901367
    2. 'A' → logprob: -1.3145556449890137
    3. ' B' → logprob: -7.814555644989014
    4. ' x' → logprob: -8.314556121826172
    5. 'B' → logprob: -8.689556121826172
    6. 'x' → logprob: -8.814556121826172
    7. ')' → logprob: -9.439556121826172
    8. ' a' → logprob: -9.564556121826172
    9. ' ' → logprob: -9.814556121826172
    10. 'a' → logprob: -10.314556121826172

Token 54: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1289673000574112
    2. '[' → logprob: -2.12896728515625
    3. '1' → logprob: -6.50396728515625
    4. 'i' → logprob: -8.37896728515625
    5. '[j' → logprob: -9.37896728515625
    6. '[idx' → logprob: -9.62896728515625
    7. '[n' → logprob: -10.62896728515625
    8. '[x' → logprob: -10.62896728515625
    9. '[k' → logprob: -10.87896728515625
    10. '[_' → logprob: -11.00396728515625

Token 55: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.283921480178833
    2. '1' → logprob: -1.408921480178833
    3. '0' → logprob: -7.158921241760254
    4. 'j' → logprob: -7.408921241760254
    5. ' i' → logprob: -7.908921241760254
    6. 'n' → logprob: -8.783921241760254
    7. 'idx' → logprob: -8.783921241760254
    8. 'k' → logprob: -9.033921241760254
    9. ' ' → logprob: -9.033921241760254
    10. 'x' → logprob: -9.158921241760254

Token 56: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015073120594024658
    2. ')]' → logprob: -4.640073299407959
    3. '),' → logprob: -5.515073299407959
    4. ' )' → logprob: -7.015073299407959
    5. ')])' → logprob: -8.3900728225708
    6. '))' → logprob: -9.7650728225708
    7. '])' → logprob: -10.6400728225708
    8. ' ' → logprob: -11.1400728225708
    9. ')],' → logprob: -11.5150728225708
    10. '),
' → logprob: -11.7650728225708

Token 57: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11380314081907272
    2. 'for' → logprob: -2.3638031482696533
    3. ')' → logprob: -4.613802909851074
    4. ']' → logprob: -6.488802909851074
    5. ',' → logprob: -6.613802909851074
    6. ')]' → logprob: -8.113802909851074
    7. '<|end|>' → logprob: -8.738802909851074
    8. ' ' → logprob: -9.738802909851074
    9. '	for' → logprob: -10.363802909851074
    10. ',
' → logprob: -10.363802909851074

Token 58: ' fn' (ID: 9784)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.14691300690174103
    2. 'op' → logprob: -2.0219130516052246
    3. 'fn' → logprob: -5.771913051605225
    4. ' fn' → logprob: -6.896913051605225
    5. ' range' → logprob: -10.896912574768066
    6. ' ' → logprob: -11.021912574768066
    7. '_' → logprob: -11.146912574768066
    8. '	op' → logprob: -11.271912574768066
    9. '_op' → logprob: -11.771912574768066
    10. '_fn' → logprob: -12.271912574768066

Token 59: ' in' (ID: 306)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.15949943661689758
    2. ' in' → logprob: -2.034499406814575
    3. 'op' → logprob: -4.409499645233154
    4. '(op' → logprob: -6.034499645233154
    5. 'in' → logprob: -6.534499645233154
    6. '(' → logprob: -9.159499168395996
    7. ' ' → logprob: -9.159499168395996
    8. 's' → logprob: -9.534499168395996
    9. '<|end|>' → logprob: -9.659499168395996
    10. '_op' → logprob: -9.909499168395996

Token 60: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.12692958116531372
    2. ' op' → logprob: -2.126929521560669
    3. '	op' → logprob: -13.87692928314209
    4. '(op' → logprob: -15.37692928314209
    5. '_op' → logprob: -16.001930236816406
    6. 'opf' → logprob: -16.126930236816406
    7. ' ' → logprob: -17.501930236816406
    8. ''op' → logprob: -18.626930236816406
    9. 'opal' → logprob: -19.001930236816406
    10. '.op' → logprob: -19.126930236816406

Token 61: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.00023560250701848418
    2. 'f' → logprob: -8.750235557556152
    3. 's' → logprob: -10.250235557556152
    4. 'op' → logprob: -10.375235557556152
    5. '_fn' → logprob: -13.000235557556152
    6. ')' → logprob: -13.375235557556152
    7. 'ops' → logprob: -13.875235557556152
    8. ' op' → logprob: -14.000235557556152
    9. '_s' → logprob: -14.750235557556152
    10. 'n' → logprob: -14.750235557556152

Token 62: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -3.1424973713001236e-05
    2. 's' → logprob: -10.750031471252441
    3. 'n' → logprob: -12.000031471252441
    4. 'ms' → logprob: -13.250031471252441
    5. '_ns' → logprob: -14.625031471252441
    6. '```' → logprob: -15.125031471252441
    7. '	ns' → logprob: -15.375031471252441
    8. ' ns' → logprob: -15.750031471252441
    9. 'sns' → logprob: -15.875031471252441
    10. 'Ns' → logprob: -15.875031471252441

Token 63: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014526150189340115
    2. ')]' → logprob: -4.5145263671875
    3. ' ]' → logprob: -6.2645263671875
    4. '])' → logprob: -6.7645263671875
    5. ')' → logprob: -8.1395263671875
    6. '])]' → logprob: -10.2645263671875
    7. ' ])' → logprob: -11.2645263671875
    8. ')])' → logprob: -11.2645263671875
    9. ',' → logprob: -11.7645263671875
    10. ']
' → logprob: -11.8895263671875

Token 64: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04474327713251114
    2. '(com' → logprob: -3.294743299484253
    3. '(*' → logprob: -5.169743061065674
    4. '('' → logprob: -8.294743537902832
    5. '("("' → logprob: -8.294743537902832
    6. '(sum' → logprob: -8.544743537902832
    7. '(len' → logprob: -8.919743537902832
    8. '(max' → logprob: -9.669743537902832
    9. '((' → logprob: -10.419743537902832
    10. '(*)' → logprob: -11.169743537902832

Token 66: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.0003676324849948287
    2. 'du' → logprob: -8.500367164611816
    3. 'duc' → logprob: -9.000367164611816
    4. 'd' → logprob: -10.875367164611816
    5. 'duced' → logprob: -11.875367164611816
    6. 'pr' → logprob: -12.625367164611816
    7. 'dux' → logprob: -12.750367164611816
    8. 'verse' → logprob: -12.875367164611816
    9. 's' → logprob: -13.625367164611816
    10. 'sum' → logprob: -13.875367164611816

Token 67: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.22439169883728027
    2. '(add' → logprob: -2.0993916988372803
    3. '(m' → logprob: -3.0993916988372803
    4. '(' → logprob: -3.8493916988372803
    5. '(sub' → logprob: -4.849391937255859
    6. '(operator' → logprob: -6.099391937255859
    7. '(max' → logprob: -6.724391937255859
    8. '(op' → logprob: -7.599391937255859
    9. '(mu' → logprob: -9.34939193725586
    10. ')' → logprob: -9.72439193725586

Token 68: ' x' (ID: 1215)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -1.0313729047775269
    2. ' sub' → logprob: -1.2813729047775269
    3. ' acc' → logprob: -2.0313730239868164
    4. ' x' → logprob: -2.2813730239868164
    5. ' op' → logprob: -2.6563730239868164
    6. ' a' → logprob: -3.6563730239868164
    7. ' lambda' → logprob: -3.7813730239868164
    8. ' ' → logprob: -5.656373023986816
    9. ' mul' → logprob: -6.156373023986816
    10. 'acc' → logprob: -6.531373023986816

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008649553172290325
    2. ' ,' → logprob: -4.7586493492126465
    3. ',x' → logprob: -11.008649826049805
    4. ',m' → logprob: -12.133649826049805
    5. ',f' → logprob: -12.758649826049805
    6. ',a' → logprob: -13.008649826049805
    7. ',y' → logprob: -13.633649826049805
    8. ',s' → logprob: -13.633649826049805
    9. ',n' → logprob: -13.758649826049805
    10. ',e' → logprob: -14.008649826049805

Token 70: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.26341527700424194
    2. 'y' → logprob: -1.6384153366088867
    3. ' lambda' → logprob: -3.6384153366088867
    4. 'lambda' → logprob: -4.763415336608887
    5. ' op' → logprob: -6.888415336608887
    6. ' acc' → logprob: -8.013415336608887
    7. ' ' → logprob: -8.138415336608887
    8. 'acc' → logprob: -8.138415336608887
    9. 'fn' → logprob: -9.513415336608887
    10. ',' → logprob: -9.888415336608887

Token 71: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13131335377693176
    2. ',' → logprob: -2.3813133239746094
    3. ' :' → logprob: -3.6313133239746094
    4. ' ,' → logprob: -5.631313323974609
    5. ' lambda' → logprob: -8.25631332397461
    6. 'lambda' → logprob: -9.63131332397461
    7. '=lambda' → logprob: -9.75631332397461
    8. ' sub' → logprob: -10.63131332397461
    9. '=' → logprob: -10.63131332397461
    10. ' ' → logprob: -10.63131332397461

Token 72: ' (' (ID: 350)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.27587151527404785
    2. ' sub' → logprob: -2.650871515274048
    3. ' max' → logprob: -2.775871515274048
    4. ' op' → logprob: -3.400871515274048
    5. ' mul' → logprob: -3.525871515274048
    6. ' x' → logprob: -3.525871515274048
    7. 'add' → logprob: -5.025871276855469
    8. 'max' → logprob: -6.275871276855469
    9. 'mul' → logprob: -6.275871276855469
    10. ' y' → logprob: -6.400871276855469

Token 73: 'x' (ID: 87)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7028247714042664
    2. 'x' → logprob: -0.8278247714042664
    3. ' add' → logprob: -3.702824831008911
    4. 'add' → logprob: -4.702824592590332
    5. ' max' → logprob: -4.702824592590332
    6. ' sub' → logprob: -5.077824592590332
    7. 'max' → logprob: -5.202824592590332
    8. 'mul' → logprob: -5.327824592590332
    9. ' mul' → logprob: -5.577824592590332
    10. 'sub' → logprob: -6.202824592590332

Token 74: ' >' (ID: 1424)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1199573203921318
    2. ' +' → logprob: -2.494957208633423
    3. '+y' → logprob: -4.869957447052002
    4. '+' → logprob: -4.994957447052002
    5. ' *' → logprob: -5.119957447052002
    6. 'if' → logprob: -5.869957447052002
    7. ',' → logprob: -6.244957447052002
    8. '*' → logprob: -6.369957447052002
    9. '*y' → logprob: -6.619957447052002
    10. ' -' → logprob: -6.869957447052002

Token 75: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2019098848104477
    2. 'y' → logprob: -1.7019098997116089
    3. '0' → logprob: -8.326910018920898
    4. ' ' → logprob: -9.326910018920898
    5. 'x' → logprob: -10.201910018920898
    6. ' max' → logprob: -10.576910018920898
    7. ' x' → logprob: -10.826910018920898
    8. 'max' → logprob: -11.076910018920898
    9. '  ' → logprob: -11.639410018920898
    10. 'and' → logprob: -12.076910018920898

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18487516045570374
    2. ' and' → logprob: -2.184875249862671
    3. ' or' → logprob: -4.309875011444092
    4. 'and' → logprob: -4.434875011444092
    5. ')*' → logprob: -4.434875011444092
    6. ',' → logprob: -4.559875011444092
    7. ' )' → logprob: -5.809875011444092
    8. '),' → logprob: -6.184875011444092
    9. ')+' → logprob: -6.184875011444092
    10. ' ,' → logprob: -7.434875011444092

Token 77: ' *' (ID: 425)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4013313055038452
    2. ',' → logprob: -1.6513313055038452
    3. 'and' → logprob: -2.5263314247131348
    4. ' or' → logprob: -3.1513314247131348
    5. ' ,' → logprob: -4.401331424713135
    6. ')' → logprob: -6.776331424713135
    7. '),' → logprob: -6.901331424713135
    8. 'or' → logprob: -7.276331424713135
    9. ' ' → logprob: -8.151330947875977
    10. ' if' → logprob: -8.776330947875977

Token 78: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0707950592041016
    2. ' x' → logprob: -1.0707950592041016
    3. '1' → logprob: -1.6957950592041016
    4. ' ' → logprob: -2.3207950592041016
    5. '2' → logprob: -4.945795059204102
    6. ' y' → logprob: -5.070795059204102
    7. ' (' → logprob: -5.570795059204102
    8. '-' → logprob: -5.695795059204102
    9. ' -' → logprob: -5.820795059204102
    10. 'y' → logprob: -6.195795059204102

Token 79: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20482584834098816
    2. '+' → logprob: -1.7048258781433105
    3. ' or' → logprob: -6.3298258781433105
    4. ',' → logprob: -7.3298258781433105
    5. ' ' → logprob: -7.8298258781433105
    6. ' else' → logprob: -8.954825401306152
    7. 'or' → logprob: -8.954825401306152
    8. ' plus' → logprob: -9.079825401306152
    9. ' ,' → logprob: -9.829825401306152
    10. 'else' → logprob: -9.954825401306152

Token 80: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.6181907057762146
    2. ' (' → logprob: -0.8681907057762146
    3. '(' → logprob: -3.6181907653808594
    4. '(x' → logprob: -4.493190765380859
    5. '(not' → logprob: -5.868190765380859
    6. '(max' → logprob: -8.86819076538086
    7. '  ' → logprob: -9.11819076538086
    8. ' ' → logprob: -9.49319076538086
    9. '((' → logprob: -10.36819076538086
    10. '(abs' → logprob: -10.61819076538086

Token 81: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.30124345421791077
    2. ' y' → logprob: -1.6762434244155884
    3. '(y' → logprob: -2.676243543624878
    4. ' (' → logprob: -6.301243305206299
    5. '(x' → logprob: -7.301243305206299
    6. '(' → logprob: -7.301243305206299
    7. ' ' → logprob: -8.426243782043457
    8. 'x' → logprob: -8.738743782043457
    9. '   ' → logprob: -9.113743782043457
    10. '  ' → logprob: -9.176243782043457

Token 82: ' >=' (ID: 5064)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.019437063485383987
    2. '*' → logprob: -4.019436836242676
    3. '*(' → logprob: -6.894436836242676
    4. ' *(' → logprob: -9.019436836242676
    5. '>' → logprob: -9.519436836242676
    6. ' ' → logprob: -10.519436836242676
    7. ')' → logprob: -10.894436836242676
    8. ' >' → logprob: -11.894436836242676
    9. '<' → logprob: -12.644436836242676
    10. ')*(' → logprob: -12.894436836242676

Token 83: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4740864336490631
    2. ' x' → logprob: -0.9740864038467407
    3. ' ' → logprob: -12.22408676147461
    4. ')x' → logprob: -13.47408676147461
    5. ')' → logprob: -14.22408676147461
    6. '	x' → logprob: -14.34908676147461
    7. ' y' → logprob: -14.47408676147461
    8. '<|end|>' → logprob: -14.47408676147461
    9. '>x' → logprob: -15.47408676147461
    10. 'y' → logprob: -16.09908676147461

Token 84: ')' (ID: 8)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.41866448521614075
    2. ')' → logprob: -1.5436644554138184
    3. '*' → logprob: -2.4186644554138184
    4. ')*' → logprob: -3.2936644554138184
    5. '*y' → logprob: -7.168664455413818
    6. ' )' → logprob: -7.168664455413818
    7. ' ' → logprob: -8.043664932250977
    8. 'and' → logprob: -9.043664932250977
    9. ' and' → logprob: -9.043664932250977
    10. '>' → logprob: -10.043664932250977

Token 85: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12793800234794617
    2. '*' → logprob: -2.1279380321502686
    3. ' ' → logprob: -7.5029377937316895
    4. ')' → logprob: -8.627938270568848
    5. '*y' → logprob: -9.002938270568848
    6. ' ' → logprob: -10.002938270568848
    7. ')*' → logprob: -10.627938270568848
    8. 'y' → logprob: -10.752938270568848
    9. ' y' → logprob: -11.127938270568848
    10. '>' → logprob: -11.502938270568848

Token 86: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1128322035074234
    2. ' y' → logprob: -2.2378323078155518
    3. ' ' → logprob: -12.487832069396973
    4. '	y' → logprob: -13.237832069396973
    5. ')y' → logprob: -14.112832069396973
    6. ')' → logprob: -14.237832069396973
    7. ''y' → logprob: -14.862832069396973
    8. ' ' → logprob: -14.925332069396973
    9. '>' → logprob: -15.237832069396973
    10. 'x' → logprob: -15.237832069396973

Token 87: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7008152008056641
    2. ',' → logprob: -0.7008152008056641
    3. '))' → logprob: -5.700815200805664
    4. ' )' → logprob: -6.325815200805664
    5. ' ,' → logprob: -6.575815200805664
    6. ',)' → logprob: -7.950815200805664
    7. ')))' → logprob: -8.075815200805664
    8. '),' → logprob: -8.950815200805664
    9. ')])' → logprob: -9.700815200805664
    10. ')`' → logprob: -10.325815200805664

Token 88: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.38728952407836914
    2. ' combinations' → logprob: -1.1372895240783691
    3. 'comb' → logprob: -8.887289047241211
    4. ' com' → logprob: -8.887289047241211
    5. ' combin' → logprob: -9.762289047241211
    6. '(com' → logprob: -9.887289047241211
    7. ' ' → logprob: -11.637289047241211
    8. '	com' → logprob: -11.887289047241211
    9. ' comb' → logprob: -12.387289047241211
    10. '   ' → logprob: -12.637289047241211

Token 89: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4745995104312897
    2. '))' → logprob: -0.9745994806289673
    3. ')))' → logprob: -7.724599361419678
    4. ' )' → logprob: -9.849599838256836
    5. ' ))' → logprob: -11.474599838256836
    6. '])' → logprob: -12.599599838256836
    7. '))
' → logprob: -12.974599838256836
    8. ')
' → logprob: -13.349599838256836
    9. ')])' → logprob: -13.349599838256836
    10. ')`' → logprob: -13.724599838256836


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 87
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 65
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 74.71%
================================================================================
