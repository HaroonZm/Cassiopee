================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect
import collections
import copy
import heapq
import itertools
import math
import string

import numpy as np
from numba import njit # hmm, not sure if needed
import sys

sys.setrecursionlimit(10000000) # just in case things go deep

def _S(): 
    return sys.stdin.readline().rstrip()

def I():
    return int(sys.stdin.readline().rstrip())

def LI(): 
    return list(map(int, sys.stdin.readline().rstrip().split()))

def LS(): 
    # strings in list from stdin, that's it
    return list(sys.stdin.readline().rstrip().split())

N = I()
A = LI()
B = list(range(1, N+1)) # prefer lists personally
AB = zip(A, B)
# print(AB) # just checking

sAB = sorted(AB)
# print(sAB) # debugging

_an, ans = zip(*sAB)
print(*ans) # hope this works

# some ideas for future me:
# AB = [LI() for _ in range(N)]
# A, B = zip(*AB)
# Ap = np.array(A)
# C = np.zeros(N + 1) # why plus one, old me?
# index 順 要素のindex

# attempt to remake the ans in a dumb way
# ans2 = []
# for i in range(N):
#     ans2.append(A.index(i+1)+1)
# print(*ans2)

# Eh, the numpy stuff isn't really needed here? Oh well.
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00226170988753438
    2. '(' → logprob: -6.127261638641357
    3. '\n' → logprob: -11.252262115478516
    4. '[' → logprob: -11.752262115478516
    5. '.
' → logprob: -11.752262115478516
    6. '\' → logprob: -11.752262115478516
    7. '.\' → logprob: -11.877262115478516
    8. '
' → logprob: -12.127262115478516
    9. '.b' → logprob: -12.627262115478516
    10. '\(' → logprob: -12.877262115478516

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0016205495921894908
    2. '(' → logprob: -6.626620769500732
    3. '.
' → logprob: -9.751620292663574
    4. '\' → logprob: -10.001620292663574
    5. '\n' → logprob: -10.001620292663574
    6. '.

' → logprob: -10.501620292663574
    7. '' → logprob: -10.876620292663574
    8. ',' → logprob: -11.501620292663574
    9. '

' → logprob: -11.501620292663574
    10. '```' → logprob: -11.501620292663574

Token 5: ' collections' (ID: 22690)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16773360967636108
    2. ' math' → logprob: -2.042733669281006
    3. ' heap' → logprob: -4.417733669281006
    4. ' collections' → logprob: -4.792733669281006
    5. 'sys' → logprob: -6.417733669281006
    6. ' itertools' → logprob: -6.667733669281006
    7. ' os' → logprob: -7.542733669281006
    8. 'collections' → logprob: -8.167733192443848
    9. 'heap' → logprob: -8.417733192443848
    10. 'math' → logprob: -8.542733192443848

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03800820931792259
    2. '
' → logprob: -4.663008213043213
    3. 'import' → logprob: -4.663008213043213
    4. '\n' → logprob: -5.413008213043213
    5. '\' → logprob: -5.788008213043213
    6. '.
' → logprob: -6.413008213043213
    7. '

' → logprob: -6.413008213043213
    8. 'newline' → logprob: -6.538008213043213
    9. ',' → logprob: -6.663008213043213
    10. '.

' → logprob: -6.788008213043213

Token 7: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0261859893798828
    2. '

' → logprob: -1.7761859893798828
    3. 'class' → logprob: -1.9011859893798828
    4. 'import' → logprob: -2.026185989379883
    5. 'def' → logprob: -3.651185989379883
    6. '.' → logprob: -3.776185989379883
    7. '\n' → logprob: -3.901185989379883
    8. 'from' → logprob: -4.401185989379883
    9. ' 

' → logprob: -4.401185989379883
    10. '#' → logprob: -4.401185989379883

Token 8: ' copy' (ID: 5150)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.1997419148683548
    2. 'heap' → logprob: -2.574741840362549
    3. ' itertools' → logprob: -2.699741840362549
    4. ' math' → logprob: -3.699741840362549
    5. ' sys' → logprob: -5.449741840362549
    6. ' functools' → logprob: -5.699741840362549
    7. 'math' → logprob: -6.074741840362549
    8. ' threading' → logprob: -6.574741840362549
    9. 'it' → logprob: -8.199742317199707
    10. ' os' → logprob: -8.199742317199707

Token 9: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9454354643821716
    2. '.' → logprob: -1.1954355239868164
    3. '
' → logprob: -1.6954355239868164
    4. '```' → logprob: -3.4454355239868164
    5. '\n' → logprob: -3.8204355239868164
    6. '\' → logprob: -3.9454355239868164
    7. '

' → logprob: -4.195435523986816
    8. '.
' → logprob: -5.195435523986816
    9. '(
' → logprob: -5.570435523986816
    10. ',' → logprob: -5.820435523986816

Token 10: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0926513820886612
    2. '
' → logprob: -4.0926513671875
    3. 'from' → logprob: -4.0926513671875
    4. '\n' → logprob: -4.2176513671875
    5. '.' → logprob: -4.5926513671875
    6. 'def' → logprob: -4.9676513671875
    7. '\' → logprob: -5.3426513671875
    8. '```' → logprob: -5.4676513671875
    9. 'class' → logprob: -6.2176513671875
    10. '

' → logprob: -6.3426513671875

Token 11: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.8441683650016785
    2. ' itertools' → logprob: -1.4691684246063232
    3. ' math' → logprob: -2.2191684246063232
    4. ' functools' → logprob: -2.7191684246063232
    5. ' datetime' → logprob: -2.8441684246063232
    6. ' threading' → logprob: -3.4691684246063232
    7. 'heap' → logprob: -3.5941684246063232
    8. 'datetime' → logprob: -4.969168186187744
    9. ' dat' → logprob: -5.219168186187744
    10. ' enum' → logprob: -5.344168186187744

Token 12: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.910643762443215e-05
    2. 't' → logprob: -9.625079154968262
    3. 'queue' → logprob: -12.625079154968262
    4. 'u' → logprob: -13.125079154968262
    5. '.' → logprob: -13.625079154968262
    6. 'n' → logprob: -13.750079154968262
    7. 'l' → logprob: -14.000079154968262
    8. '_' → logprob: -14.125079154968262
    9. 'space' → logprob: -14.250079154968262
    10. 's' → logprob: -14.375079154968262

Token 13: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.17616263031959534
    2. '.' → logprob: -2.4261627197265625
    3. '\n' → logprob: -3.4261627197265625
    4. '\' → logprob: -4.5511627197265625
    5. ',' → logprob: -4.8011627197265625
    6. '
' → logprob: -4.8011627197265625
    7. '```' → logprob: -5.1761627197265625
    8. 'from' → logprob: -6.4261627197265625
    9. '#' → logprob: -6.5511627197265625
    10. '.
' → logprob: -6.8011627197265625

Token 14: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.055542878806591034
    2. 'from' → logprob: -4.305542945861816
    3. 'def' → logprob: -4.680542945861816
    4. '.' → logprob: -4.680542945861816
    5. '
' → logprob: -5.305542945861816
    6. ',' → logprob: -6.055542945861816
    7. '#' → logprob: -6.055542945861816
    8. 'class' → logprob: -6.180542945861816
    9. '```' → logprob: -6.305542945861816
    10. '\n' → logprob: -6.805542945861816

Token 15: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0068938047625124454
    2. ' math' → logprob: -5.756893634796143
    3. 'it' → logprob: -6.256893634796143
    4. ' io' → logprob: -6.756893634796143
    5. 'math' → logprob: -8.0068941116333
    6. 'io' → logprob: -9.2568941116333
    7. ' json' → logprob: -9.7568941116333
    8. ' threading' → logprob: -9.8818941116333
    9. ' random' → logprob: -11.0068941116333
    10. ' functools' → logprob: -11.0068941116333

Token 16: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.39313215017318726
    2. '
' → logprob: -2.143132209777832
    3. '```' → logprob: -2.643132209777832
    4. '.' → logprob: -2.893132209777832
    5. '\n' → logprob: -3.143132209777832
    6. '\' → logprob: -4.268132209777832
    7. ',' → logprob: -4.893132209777832
    8. '

' → logprob: -6.018132209777832
    9. ',
' → logprob: -6.018132209777832
    10. '.
' → logprob: -6.018132209777832

Token 17: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10362009704113007
    2. '
' → logprob: -2.9786200523376465
    3. '```' → logprob: -3.8536200523376465
    4. '.' → logprob: -5.1036200523376465
    5. '\n' → logprob: -5.2286200523376465
    6. 'def' → logprob: -5.9786200523376465
    7. '

' → logprob: -6.1036200523376465
    8. '.
' → logprob: -6.4786200523376465
    9. 'from' → logprob: -6.4786200523376465
    10. ',' → logprob: -6.8536200523376465

Token 18: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4571473300457001
    2. 'math' → logprob: -1.3321473598480225
    3. ' json' → logprob: -2.7071473598480225
    4. 'json' → logprob: -3.4571473598480225
    5. ' operator' → logprob: -5.957147121429443
    6. 'operator' → logprob: -6.457147121429443
    7. ' keyword' → logprob: -8.457147598266602
    8. 'keyword' → logprob: -9.207147598266602
    9. ' threading' → logprob: -9.707147598266602
    10. ' functools' → logprob: -10.082147598266602

Token 19: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.005330520682036877
    2. 'from' → logprob: -7.005330562591553
    3. '
' → logprob: -7.255330562591553
    4. '\n' → logprob: -7.255330562591553
    5. '```' → logprob: -7.380330562591553
    6. 'def' → logprob: -7.505330562591553
    7. ',' → logprob: -7.630330562591553
    8. '.' → logprob: -7.880330562591553
    9. '\' → logprob: -8.630330085754395
    10. '<|end|>' → logprob: -8.630330085754395

Token 20: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10024678707122803
    2. 'from' → logprob: -3.7252469062805176
    3. '
' → logprob: -4.225246906280518
    4. 'def' → logprob: -4.225246906280518
    5. '```' → logprob: -4.350246906280518
    6. '.' → logprob: -5.100246906280518
    7. ',
' → logprob: -5.225246906280518
    8. '\n' → logprob: -5.600246906280518
    9. 'class' → logprob: -6.100246906280518
    10. ',' → logprob: -6.100246906280518

Token 21: ' string' (ID: 1621)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.46323704719543457
    2. ' random' → logprob: -1.7132370471954346
    3. 'random' → logprob: -2.0882370471954346
    4. 'operator' → logprob: -2.8382370471954346
    5. ' os' → logprob: -5.4632368087768555
    6. ' re' → logprob: -6.7132368087768555
    7. ' numbers' → logprob: -7.4632368087768555
    8. 'os' → logprob: -7.4632368087768555
    9. ' sys' → logprob: -7.9632368087768555
    10. ' numpy' → logprob: -8.463236808776855

Token 22: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.48969414830207825
    2. '
' → logprob: -1.2396941184997559
    3. '\n' → logprob: -3.614694118499756
    4. '

' → logprob: -3.864694118499756
    5. '<|end|>' → logprob: -3.989694118499756
    6. ',' → logprob: -4.364694118499756
    7. '#' → logprob: -5.739694118499756
    8. '.' → logprob: -6.239694118499756
    9. 'from' → logprob: -6.364694118499756
    10. ',
' → logprob: -6.364694118499756

Token 23: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1917719841003418
    2. 'from' → logprob: -1.8167719841003418
    3. '
' → logprob: -1.8167719841003418
    4. 'def' → logprob: -2.066771984100342
    5. 'class' → logprob: -2.066771984100342
    6. '

' → logprob: -3.441771984100342
    7. '\' → logprob: -3.816771984100342
    8. '#' → logprob: -3.941771984100342
    9. '```' → logprob: -4.066771984100342
    10. '\n' → logprob: -4.316771984100342

Token 24: ' numpy' (ID: 19529)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6707211136817932
    2. 're' → logprob: -2.1707210540771484
    3. 'random' → logprob: -2.2957210540771484
    4. ' re' → logprob: -2.5457210540771484
    5. ' random' → logprob: -2.5457210540771484
    6. ' os' → logprob: -3.1707210540771484
    7. 'sys' → logprob: -3.5457210540771484
    8. ' numpy' → logprob: -4.045721054077148
    9. 'os' → logprob: -4.670721054077148
    10. ' functools' → logprob: -5.295721054077148

Token 25: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.010282591916620731
    2. 'as' → logprob: -5.385282516479492
    3. '<|end|>' → logprob: -5.510282516479492
    4. '.' → logprob: -6.635282516479492
    5. '.ndarray' → logprob: -8.885282516479492
    6. '.as' → logprob: -9.885282516479492
    7. '.random' → logprob: -10.135282516479492
    8. '<|end|>' → logprob: -10.760282516479492
    9. '.asarray' → logprob: -11.510282516479492
    10. '.linalg' → logprob: -12.385282516479492

Token 26: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0024101349990814924
    2. ' ' → logprob: -6.377409934997559
    3. ' numpy' → logprob: -7.877409934997559
    4. 'np' → logprob: -8.627409934997559
    5. ' array' → logprob: -10.002409934997559
    6. ' ' → logprob: -10.127409934997559
    7. ' ndarray' → logprob: -10.877409934997559
    8. ' '' → logprob: -12.252409934997559
    9. '"' → logprob: -12.377409934997559
    10. ' n' → logprob: -12.502409934997559

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9086422324180603
    2. '.' → logprob: -1.408642292022705
    3. '\n' → logprob: -2.283642292022705
    4. '

' → logprob: -2.408642292022705
    5. '```' → logprob: -2.783642292022705
    6. 'import' → logprob: -4.158642292022705
    7. '<|end|>' → logprob: -4.408642292022705
    8. '#' → logprob: -4.408642292022705
    9. ' as' → logprob: -4.533642292022705
    10. 'as' → logprob: -4.533642292022705

Token 28: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06437712162733078
    2. '
' → logprob: -3.8143770694732666
    3. '#' → logprob: -4.564377307891846
    4. 'import' → logprob: -5.439377307891846
    5. '<|end|>' → logprob: -5.689377307891846
    6. '

' → logprob: -5.939377307891846
    7. '```' → logprob: -5.939377307891846
    8. '[' → logprob: -6.064377307891846
    9. 'from' → logprob: -6.189377307891846
    10. '\n' → logprob: -6.439377307891846

Token 29: ' num' (ID: 2269)
  Prédit: ' scipy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' scipy' → logprob: -0.22473187744617462
    2. ' sklearn' → logprob: -1.7247319221496582
    3. ' numpy' → logprob: -5.224731922149658
    4. ' ' → logprob: -5.349731922149658
    5. ' torch' → logprob: -5.724731922149658
    6. 'sk' → logprob: -5.974731922149658
    7. ' collections' → logprob: -6.099731922149658
    8. ' pandas' → logprob: -6.849731922149658
    9. ' sk' → logprob: -7.099731922149658
    10. 'sc' → logprob: -7.224731922149658

Token 30: 'ba' (ID: 3103)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.4886566996574402
    2. 'ba' → logprob: -0.9886566996574402
    3. 'p' → logprob: -4.238656520843506
    4. 'expr' → logprob: -10.738656997680664
    5. 'by' → logprob: -11.113656997680664
    6. 'ppy' → logprob: -12.363656997680664
    7. 'pi' → logprob: -13.113656997680664
    8. 'pty' → logprob: -13.863656997680664
    9. 'pa' → logprob: -13.863656997680664
    10. 'Py' → logprob: -14.613656997680664

Token 31: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04190865159034729
    2. 'import' → logprob: -3.7919087409973145
    3. '.' → logprob: -4.4169087409973145
    4. '.experimental' → logprob: -5.5419087409973145
    5. ' ' → logprob: -6.5419087409973145
    6. '.cuda' → logprob: -7.7919087409973145
    7. '.import' → logprob: -8.666908264160156
    8. ' .' → logprob: -9.291908264160156
    9. '.compiler' → logprob: -9.416908264160156
    10. '	import' → logprob: -9.416908264160156

Token 32: ' nj' (ID: 8979)
  Prédit: ' nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nj' → logprob: -0.0709984228014946
    2. ' jit' → logprob: -2.820998430252075
    3. 'nj' → logprob: -4.820998191833496
    4. 'jit' → logprob: -7.570998191833496
    5. ' cuda' → logprob: -7.820998191833496
    6. 'cuda' → logprob: -11.445998191833496
    7. ' vector' → logprob: -13.195998191833496
    8. ' int' → logprob: -15.070998191833496
    9. 'n' → logprob: -15.195998191833496
    10. '```' → logprob: -15.570998191833496

Token 33: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -3.392824874026701e-05
    2. 'i' → logprob: -10.37503433227539
    3. 'ut' → logprob: -14.25003433227539
    4. 'it's' → logprob: -14.37503433227539
    5. 'jit' → logprob: -14.75003433227539
    6. ' it' → logprob: -14.87503433227539
    7. '@' → logprob: -14.87503433227539
    8. ' jit' → logprob: -16.50003433227539
    9. 'ит' → logprob: -16.75003433227539
    10. 'It' → logprob: -17.00003433227539

Token 34: ' #' (ID: 1069)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.159695565700531
    2. '
' → logprob: -2.659695625305176
    3. '

' → logprob: -2.909695625305176
    4. '\n' → logprob: -4.534695625305176
    5. '<|end|>' → logprob: -5.909695625305176
    6. 'def' → logprob: -6.284695625305176
    7. '@
' → logprob: -6.909695625305176
    8. '@

' → logprob: -6.909695625305176
    9. 'import' → logprob: -7.159695625305176
    10. '#' → logprob: -7.284695625305176

Token 35: ' hmm' (ID: 186402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3740549385547638
    2. '@' → logprob: -2.3740549087524414
    3. ' 
' → logprob: -2.4990549087524414
    4. '<|end|>' → logprob: -2.6240549087524414
    5. '
' → logprob: -4.624054908752441
    6. '<|end|>' → logprob: -4.749054908752441
    7. ' 

' → logprob: -4.999054908752441
    8. ')' → logprob: -5.124054908752441
    9. 'def' → logprob: -5.374054908752441
    10. 'n' → logprob: -5.624054908752441

Token 36: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' not' (ID: 625)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03376729413866997
    2. ')' → logprob: -5.658767223358154
    3. ' as' → logprob: -5.658767223358154
    4. ',' → logprob: -5.908767223358154
    5. ' def' → logprob: -6.033767223358154
    6. ' just' → logprob: -6.033767223358154
    7. ' maybe' → logprob: -6.658767223358154
    8. ' we' → logprob: -7.033767223358154
    9. ' you' → logprob: -7.283767223358154
    10. ' the' → logprob: -7.283767223358154

Token 38: ' sure' (ID: 3239)
  Prédit: ' sure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sure' → logprob: -0.1635659635066986
    2. ' used' → logprob: -3.6635658740997314
    3. ' really' → logprob: -3.6635658740997314
    4. ' needed' → logprob: -4.4135661125183105
    5. ' necessary' → logprob: -4.9135661125183105
    6. 'really' → logprob: -4.9135661125183105
    7. ' just' → logprob: -5.0385661125183105
    8. ' very' → logprob: -5.0385661125183105
    9. 'import' → logprob: -5.0385661125183105
    10. ' quite' → logprob: -5.4135661125183105

Token 39: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1406183242797852
    2. '

' → logprob: -1.6406183242797852
    3. '#' → logprob: -1.8906183242797852
    4. '<|end|>' → logprob: -2.640618324279785
    5. '\n' → logprob: -2.890618324279785
    6. '@' → logprob: -2.890618324279785
    7. ',' → logprob: -3.015618324279785
    8. '<|end|>' → logprob: -3.390618324279785
    9. 'import' → logprob: -3.765618324279785
    10. '```' → logprob: -4.265618324279785

Token 40: ' needed' (ID: 6118)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nj' → logprob: -1.2272062301635742
    2. ' this' → logprob: -1.3522062301635742
    3. ' nj' → logprob: -1.8522062301635742
    4. 'this' → logprob: -2.352206230163574
    5. ' we' → logprob: -2.602206230163574
    6. 'we' → logprob: -2.602206230163574
    7. '@' → logprob: -4.602206230163574
    8. ' @' → logprob: -5.477206230163574
    9. 'it' → logprob: -5.602206230163574
    10. ' the' → logprob: -5.727206230163574

Token 41: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.133793592453003
    2. '#' → logprob: -1.258793592453003
    3. '
' → logprob: -1.758793592453003
    4. '

' → logprob: -2.258793592453003
    5. '@' → logprob: -4.133793830871582
    6. 'n' → logprob: -4.258793830871582
    7. '' → logprob: -4.258793830871582
    8. '<|end|>' → logprob: -4.258793830871582
    9. '\' → logprob: -4.383793830871582
    10. 'import' → logprob: -4.508793830871582

Token 42: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38024407625198364
    2. '

' → logprob: -1.3802440166473389
    3. '\n' → logprob: -3.130244016647339
    4. '#' → logprob: -4.880244255065918
    5. '' → logprob: -5.630244255065918
    6. '@' → logprob: -6.130244255065918
    7. 'n' → logprob: -6.255244255065918
    8. '
' → logprob: -6.880244255065918
    9. 'import' → logprob: -6.880244255065918
    10. '<|end|>' → logprob: -7.505244255065918

Token 43: ' sys' (ID: 12228)
  Prédit: ' scipy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scipy' → logprob: -0.6830818057060242
    2. ' pandas' → logprob: -1.308081865310669
    3. ' tensorflow' → logprob: -2.308081865310669
    4. ' torch' → logprob: -3.808081865310669
    5. ' sklearn' → logprob: -3.933081865310669
    6. ' sys' → logprob: -3.933081865310669
    7. ' typing' → logprob: -4.30808162689209
    8. ' functools' → logprob: -4.43308162689209
    9. ' random' → logprob: -4.55808162689209
    10. ' num' → logprob: -5.30808162689209

Token 44: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6662313342094421
    2. '

' → logprob: -0.7912313342094421
    3. '<|end|>' → logprob: -4.166231155395508
    4. 'import' → logprob: -4.541231155395508
    5. '\n' → logprob: -5.916231155395508
    6. '<|end|>' → logprob: -6.541231155395508
    7. '#' → logprob: -7.541231155395508
    8. ',' → logprob: -7.541231155395508
    9. '


' → logprob: -7.916231155395508
    10. '```' → logprob: -8.041231155395508

Token 45: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5862925052642822
    2. '

' → logprob: -1.2112925052642822
    3. 'def' → logprob: -2.9612925052642822
    4. '#' → logprob: -3.4612925052642822
    5. 'class' → logprob: -3.4612925052642822
    6. 'import' → logprob: -4.836292266845703
    7. '' → logprob: -4.961292266845703
    8. '\n' → logprob: -5.086292266845703
    9. 'd' → logprob: -6.086292266845703
    10. '\' → logprob: -6.836292266845703

Token 46: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.8961017202818766e-05
    2. '.exit' → logprob: -10.750059127807617
    3. ' .' → logprob: -11.750059127807617
    4. '.setdefault' → logprob: -12.250059127807617
    5. '.argv' → logprob: -12.875059127807617
    6. '.stdout' → logprob: -13.125059127807617
    7. '.readline' → logprob: -13.250059127807617
    8. '.user' → logprob: -13.375059127807617
    9. '.stdin' → logprob: -13.625059127807617
    10. '.import' → logprob: -13.875059127807617

Token 47: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.1341906487941742
    2. '_rec' → logprob: -3.509190559387207
    3. 'attr' → logprob: -3.634190559387207
    4. '_' → logprob: -3.759190559387207
    5. '_trace' → logprob: -4.759190559387207
    6. '_limit' → logprob: -5.884190559387207
    7. '_param' → logprob: -5.884190559387207
    8. '_int' → logprob: -6.009190559387207
    9. '_stdout' → logprob: -6.009190559387207
    10. '_attr' → logprob: -6.134190559387207

Token 48: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0008885911083780229
    2. 'urs' → logprob: -7.500888824462891
    3. 'ursive' → logprob: -9.00088882446289
    4. 'ur' → logprob: -9.12588882446289
    5. '_' → logprob: -10.37588882446289
    6. '_limit' → logprob: -11.00088882446289
    7. 'limit' → logprob: -11.00088882446289
    8. 'ision' → logprob: -11.87588882446289
    9. 'ursively' → logprob: -12.00088882446289
    10. 'urf' → logprob: -12.50088882446289

Token 49: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.20149365067481995
    2. '_limit' → logprob: -1.7014936208724976
    3. ' limit' → logprob: -10.576493263244629
    4. '_depth' → logprob: -10.951493263244629
    5. 'lim' → logprob: -11.451493263244629
    6. '_LIMIT' → logprob: -12.326493263244629
    7. '_lim' → logprob: -12.326493263244629
    8. '-limit' → logprob: -12.326493263244629
    9. '.limit' → logprob: -12.576493263244629
    10. 'depth' → logprob: -12.951493263244629

Token 50: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.869017852295656e-06
    2. '(
' → logprob: -13.500006675720215
    3. '((' → logprob: -13.625006675720215
    4. ' (' → logprob: -13.750006675720215
    5. '(

' → logprob: -13.750006675720215
    6. '()' → logprob: -14.625006675720215
    7. '(None' → logprob: -15.500006675720215
    8. '(**' → logprob: -15.500006675720215
    9. '('' → logprob: -15.625006675720215
    10. '("("' → logprob: -15.625006675720215

Token 51: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.126963809132576
    2. '100' → logprob: -2.1269638538360596
    3. ' ' → logprob: -11.37696361541748
    4. '500' → logprob: -11.75196361541748
    5. '1' → logprob: -12.00196361541748
    6. '300' → logprob: -12.50196361541748
    7. '200' → logprob: -13.37696361541748
    8. '999' → logprob: -13.50196361541748
    9. '250' → logprob: -13.62696361541748
    10. '150' → logprob: -14.37696361541748

Token 52: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.1602339744567871
    2. '000' → logprob: -1.910233974456787
    3. '0' → logprob: -11.535234451293945
    4. '_' → logprob: -17.660234451293945
    5. ')' → logprob: -17.785234451293945
    6. '```' → logprob: -18.035234451293945
    7. '**' → logprob: -18.410234451293945
    8. '007' → logprob: -18.785234451293945
    9. '   ' → logprob: -20.160234451293945
    10. '500' → logprob: -20.535234451293945

Token 53: '00' (ID: 504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021999788004904985
    2. '0' → logprob: -6.127200126647949
    3. ')
' → logprob: -11.37720012664795
    4. ' )' → logprob: -13.00220012664795
    5. ')

' → logprob: -14.37720012664795
    6. '))' → logprob: -15.25220012664795
    7. '
' → logprob: -16.252199172973633
    8. '```' → logprob: -16.377199172973633
    9. ')
' → logprob: -17.127199172973633
    10. '00' → logprob: -17.502199172973633

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ')
' → logprob: -12.375004768371582
    3. ' )' → logprob: -14.000004768371582
    4. '))' → logprob: -16.8750057220459
    5. ')

' → logprob: -17.1250057220459
    6. '
' → logprob: -17.3750057220459
    7. ')
' → logprob: -17.6250057220459
    8. ')`' → logprob: -17.7500057220459
    9. '```' → logprob: -18.2500057220459
    10. '0' → logprob: -18.7500057220459

Token 55: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6353006362915039
    2. '

' → logprob: -0.7603006362915039
    3. '
' → logprob: -7.010300636291504
    4. '' → logprob: -7.760300636291504
    5. '#' → logprob: -8.010300636291504
    6. '\n' → logprob: -8.010300636291504
    7. '


' → logprob: -8.510300636291504
    8. '<|end|>' → logprob: -8.635300636291504
    9. '```' → logprob: -10.135300636291504
    10. 'def' → logprob: -10.260300636291504

Token 56: ' just' (ID: 1327)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16322295367717743
    2. '<|end|>' → logprob: -3.0382230281829834
    3. '#' → logprob: -3.2882230281829834
    4. ' 
' → logprob: -4.038222789764404
    5. '
' → logprob: -4.163222789764404
    6. '<|end|>' → logprob: -4.663222789764404
    7. ' 

' → logprob: -5.288222789764404
    8. ' #' → logprob: -5.538222789764404
    9. ' True' → logprob: -5.663222789764404
    10. '  
' → logprob: -5.663222789764404

Token 57: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.113645039498806
    2. ' in' → logprob: -2.488645076751709
    3. 'to' → logprob: -4.113645076751709
    4. ' to' → logprob: -6.113645076751709
    5. 'a' → logprob: -6.488645076751709
    6. '#' → logprob: -6.613645076751709
    7. ' a' → logprob: -7.238645076751709
    8. 'because' → logprob: -8.11364459991455
    9. 'for' → logprob: -8.36364459991455
    10. 'being' → logprob: -8.73864459991455

Token 58: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.0008161775767803192
    2. '```' → logprob: -8.625816345214844
    3. 'place' → logprob: -9.000816345214844
    4. ' case' → logprob: -9.250816345214844
    5. 'time' → logprob: -9.375816345214844
    6. 'try' → logprob: -9.875816345214844
    7. '_case' → logprob: -10.250816345214844
    8. 'code' → logprob: -10.250816345214844
    9. 't' → logprob: -10.375816345214844
    10. 'line' → logprob: -10.875816345214844

Token 59: ' things' (ID: 3283)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.31714507937431335
    2. '
' → logprob: -1.3171451091766357
    3. '
' → logprob: -6.692144870758057
    4. '#' → logprob: -6.692144870758057
    5. 'class' → logprob: -7.317144870758057
    6. '' → logprob: -8.567145347595215
    7. '\n' → logprob: -8.817145347595215
    8. '


' → logprob: -9.067145347595215
    9. '

' → logprob: -9.942145347595215
    10. '```' → logprob: -10.067145347595215

Token 60: ' go' (ID: 810)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.03238645941019058
    2. ' go' → logprob: -3.907386541366577
    3. 'get' → logprob: -4.532386302947998
    4. 'go' → logprob: -8.282386779785156
    5. ' got' → logprob: -8.532386779785156
    6. 'keep' → logprob: -9.157386779785156
    7. ' keep' → logprob: -9.282386779785156
    8. ' ' → logprob: -10.282386779785156
    9. ' escalate' → logprob: -10.407386779785156
    10. 'continue' → logprob: -10.532386779785156

Token 61: ' deep' (ID: 8103)
  Prédit: 'deep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deep' → logprob: -0.6881806254386902
    2. 'wrong' → logprob: -1.563180685043335
    3. 'very' → logprob: -2.313180685043335
    4. 'cra' → logprob: -3.563180685043335
    5. 'rec' → logprob: -3.688180685043335
    6. 'wild' → logprob: -3.688180685043335
    7. 'too' → logprob: -3.813180685043335
    8. 'b' → logprob: -4.188180446624756
    9. 'in' → logprob: -4.313180446624756
    10. 'down' → logprob: -4.438180446624756

Token 62: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4319615066051483
    2. '

' → logprob: -1.0569615364074707
    3. '#' → logprob: -7.056961536407471
    4. '\n' → logprob: -7.306961536407471
    5. '
' → logprob: -7.431961536407471
    6. '


' → logprob: -8.056961059570312
    7. '' → logprob: -8.806961059570312
    8. 'class' → logprob: -8.806961059570312
    9. 'def' → logprob: -8.806961059570312
    10. 'n' → logprob: -9.431961059570312

Token 63: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.588752031326294
    2. 'def' → logprob: -1.463752031326294
    3. '
' → logprob: -2.463752031326294
    4. '

' → logprob: -2.463752031326294
    5. '#' → logprob: -3.463752031326294
    6. '\' → logprob: -5.588751792907715
    7. 'd' → logprob: -6.338751792907715
    8. 'n' → logprob: -6.713751792907715
    9. '\n' → logprob: -6.713751792907715
    10. '```' → logprob: -6.713751792907715

Token 64: ' _' (ID: 1175)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.946932852268219
    2. ' binary' → logprob: -1.4469327926635742
    3. ' _' → logprob: -2.071932792663574
    4. ' ' → logprob: -2.696932792663574
    5. ' main' → logprob: -3.696932792663574
    6. ' solve' → logprob: -3.821932792663574
    7. '_' → logprob: -3.821932792663574
    8. ' factorial' → logprob: -4.071932792663574
    9. ' fibonacci' → logprob: -4.571932792663574
    10. ' bfs' → logprob: -4.571932792663574

Token 65: 'S' (ID: 50)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.3371635377407074
    2. 'binary' → logprob: -2.2121634483337402
    3. 'solve' → logprob: -3.2121634483337402
    4. 'main' → logprob: -3.8371634483337402
    5. 'merge' → logprob: -4.08716344833374
    6. 'find' → logprob: -4.33716344833374
    7. 'l' → logprob: -4.71216344833374
    8. 'bin' → logprob: -5.21216344833374
    9. 'count' → logprob: -5.33716344833374
    10. 'get' → logprob: -5.46216344833374

Token 66: '():' (ID: 9442)
  Prédit: 'olve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'olve' → logprob: -1.0317866802215576
    2. 't' → logprob: -2.6567866802215576
    3. 'earch' → logprob: -2.7817866802215576
    4. 'uffix' → logprob: -2.9067866802215576
    5. 'et' → logprob: -3.0317866802215576
    6. 'ort' → logprob: -3.2817866802215576
    7. 'egment' → logprob: -3.2817866802215576
    8. 'A' → logprob: -3.6567866802215576
    9. 'qrt' → logprob: -3.6567866802215576
    10. 'tring' → logprob: -3.7817866802215576

Token 67: ' 
' (ID: 793)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.611933171749115
    2. '   ' → logprob: -1.6119332313537598
    3. ' ' → logprob: -2.3619332313537598
    4. 'return' → logprob: -2.3619332313537598
    5. '    ' → logprob: -2.9869332313537598
    6. '    
' → logprob: -4.73693323135376
    7. '  
' → logprob: -6.11193323135376
    8. '	return' → logprob: -6.23693323135376
    9. '
' → logprob: -6.61193323135376
    10. 'eturn' → logprob: -6.61193323135376

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007327144034206867
    2. 'return' → logprob: -5.382327079772949
    3. ' return' → logprob: -6.007327079772949
    4. '    
' → logprob: -9.25732707977295
    5. '	return' → logprob: -10.00732707977295
    6. ' ' → logprob: -10.13232707977295
    7. '   ' → logprob: -10.63232707977295
    8. '    ' → logprob: -11.25732707977295
    9. '  ' → logprob: -11.38232707977295
    10. '   ' → logprob: -12.00732707977295

Token 69: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005800686310976744
    2. ' return' → logprob: -5.255800724029541
    3. '   ' → logprob: -8.130800247192383
    4. 'input' → logprob: -9.630800247192383
    5. 'sys' → logprob: -10.130800247192383
    6. 's' → logprob: -10.130800247192383
    7. 'ret' → logprob: -10.505800247192383
    8. 'r' → logprob: -10.880800247192383
    9. 'import' → logprob: -11.130800247192383
    10. 'n' → logprob: -11.755800247192383

Token 70: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.8364962339401245
    2. 'sys' → logprob: -1.9614962339401245
    3. 'list' → logprob: -2.211496353149414
    4. 'int' → logprob: -2.461496353149414
    5. ' list' → logprob: -2.461496353149414
    6. 'input' → logprob: -2.711496353149414
    7. ' input' → logprob: -3.086496353149414
    8. ' int' → logprob: -4.211496353149414
    9. '[]' → logprob: -5.336496353149414
    10. ' map' → logprob: -5.711496353149414

Token 71: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.843177233240567e-05
    2. '.stdout' → logprob: -11.250018119812012
    3. 'stdin' → logprob: -12.625018119812012
    4. '.' → logprob: -13.875018119812012
    5. '.std' → logprob: -14.750018119812012
    6. '.stderr' → logprob: -15.125018119812012
    7. '._' → logprob: -15.750018119812012
    8. '.argv' → logprob: -15.875018119812012
    9. '.version' → logprob: -16.125019073486328
    10. '.readline' → logprob: -16.750019073486328

Token 72: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.2471589798224159e-05
    2. '.read' → logprob: -11.500012397766113
    3. '.' → logprob: -13.500012397766113
    4. '.buffer' → logprob: -14.625012397766113
    5. '.readlines' → logprob: -15.125012397766113
    6. 'read' → logprob: -16.75001335144043
    7. 'buffer' → logprob: -17.50001335144043
    8. ' readline' → logprob: -17.75001335144043
    9. '_read' → logprob: -18.37501335144043
    10. '_buffer' → logprob: -19.50001335144043

Token 73: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3132970929145813
    2. '().' → logprob: -1.3132970333099365
    3. '(' → logprob: -10.813297271728516
    4. '()\' → logprob: -12.188297271728516
    5. '()

' → logprob: -12.938297271728516
    6. '()
' → logprob: -12.938297271728516
    7. ' ()' → logprob: -13.813297271728516
    8. '())' → logprob: -14.188297271728516
    9. '().__' → logprob: -14.688297271728516
    10. '()`' → logprob: -14.688297271728516

Token 74: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.03804194927215576
    2. 'rstrip' → logprob: -3.2880420684814453
    3. ' strip' → logprob: -14.663042068481445
    4. 'rst' → logprob: -18.288042068481445
    5. 'r' → logprob: -18.913042068481445
    6. '(strip' → logprob: -19.038042068481445
    7. '_strip' → logprob: -19.038042068481445
    8. '.rstrip' → logprob: -19.788042068481445
    9. 'rs' → logprob: -20.038042068481445
    10. '-strip' → logprob: -20.413042068481445

Token 75: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003155261278152466
    2. '()\' → logprob: -6.50315523147583
    3. '()
' → logprob: -6.75315523147583
    4. '(' → logprob: -8.503155708312988
    5. '()

' → logprob: -8.628155708312988
    6. '\n' → logprob: -9.378155708312988
    7. '\' → logprob: -12.128155708312988
    8. ' ()' → logprob: -13.128155708312988
    9. '#' → logprob: -13.628155708312988
    10. '().' → logprob: -13.878155708312988

Token 76: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003696039319038391
    2. '
' → logprob: -6.003695964813232
    3. '\n' → logprob: -7.503695964813232
    4. '

' → logprob: -8.75369644165039
    5. '\' → logprob: -9.00369644165039
    6. '<|end|>' → logprob: -9.00369644165039
    7. '#' → logprob: -9.75369644165039
    8. '<|end|>' → logprob: -9.87869644165039
    9. 'class' → logprob: -10.25369644165039
    10. '    
' → logprob: -10.50369644165039

Token 77: ' I' (ID: 357)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19564102590084076
    2. ' main' → logprob: -2.445641040802002
    3. ' _' → logprob: -3.195641040802002
    4. '_main' → logprob: -4.195641040802002
    5. '_S' → logprob: -4.570641040802002
    6. '_T' → logprob: -5.945641040802002
    7. 'main' → logprob: -6.070641040802002
    8. ' solve' → logprob: -6.070641040802002
    9. '_s' → logprob: -6.195641040802002
    10. ' ' → logprob: -6.320641040802002

Token 78: '():
' (ID: 8595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32414206862449646
    2. 'nt' → logprob: -1.5741420984268188
    3. '()' → logprob: -3.8241419792175293
    4. '():' → logprob: -4.074141979217529
    5. 'N' → logprob: -4.199141979217529
    6. 'nit' → logprob: -4.324141979217529
    7. '_' → logprob: -7.199141979217529
    8. 'NT' → logprob: -7.574141979217529
    9. '():
' → logprob: -7.824141979217529
    10. '_n' → logprob: -8.074142456054688

Token 79: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0680948495864868
    2. 'return' → logprob: -1.4430948495864868
    3. 'nt' → logprob: -2.0680947303771973
    4. 'n' → logprob: -2.6930947303771973
    5. 'int' → logprob: -2.9430947303771973
    6. ' ' → logprob: -2.9430947303771973
    7. ' =' → logprob: -3.5680947303771973
    8. 'eturn' → logprob: -3.8180947303771973
    9. ':' → logprob: -4.193094730377197
    10. '   ' → logprob: -4.318094730377197

Token 80: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5764413475990295
    2. 'return' (adapté à ' return') → logprob: -0.8264413475990295
    3. 'int' → logprob: -7.826441287994385
    4. ' int' → logprob: -9.576441764831543
    5. '   ' → logprob: -11.201441764831543
    6. ' ' → logprob: -11.576441764831543
    7. '    ' → logprob: -12.701441764831543
    8. ' 
' → logprob: -12.951441764831543
    9. 'eturn' → logprob: -13.451441764831543
    10. '
' → logprob: -13.701441764831543

Token 81: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023246178403496742
    2. ' int' → logprob: -3.7732462882995605
    3. ' ' → logprob: -15.273245811462402
    4. '  ' → logprob: -15.648245811462402
    5. '   ' → logprob: -16.27324676513672
    6. '(int' → logprob: -16.27324676513672
    7. '	int' → logprob: -16.52324676513672
    8. '_int' → logprob: -18.02324676513672
    9. '=int' → logprob: -18.14824676513672
    10. 'in' → logprob: -18.52324676513672

Token 82: '(sys' (ID: 41042)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.0029729455709457397
    2. '(' → logprob: -5.8779730796813965
    3. '(S' → logprob: -9.002972602844238
    4. '_S' → logprob: -10.627972602844238
    5. '(sys' → logprob: -11.877972602844238
    6. '(_)' → logprob: -11.877972602844238
    7. '_' → logprob: -13.252972602844238
    8. ' (_' → logprob: -13.377972602844238
    9. '()' → logprob: -13.377972602844238
    10. '(
' → logprob: -15.127972602844238

Token 83: '.stdin' (ID: 93480)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.8219085931777954
    2. '.stdin' → logprob: -0.8219085931777954
    3. '()' → logprob: -3.196908473968506
    4. '.readline' → logprob: -3.321908473968506
    5. '())' → logprob: -3.696908473968506
    6. 'in' → logprob: -5.071908473968506
    7. 'stdin' → logprob: -5.946908473968506
    8. 't' → logprob: -6.071908473968506
    9. '.' → logprob: -6.071908473968506
    10. '(stdin' → logprob: -7.196908473968506

Token 84: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00023846338444855064
    2. '.read' → logprob: -9.000238418579102
    3. '.' → logprob: -9.125238418579102
    4. '.stdin' → logprob: -12.875238418579102
    5. 'read' → logprob: -13.750238418579102
    6. '().' → logprob: -14.125238418579102
    7. '.Read' → logprob: -14.500238418579102
    8. '_read' → logprob: -15.000238418579102
    9. ' .' → logprob: -15.125238418579102
    10. ' readline' → logprob: -15.375238418579102

Token 85: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.39542439579963684
    2. '().' → logprob: -1.1454243659973145
    3. '()' → logprob: -4.7704243659973145
    4. ' ())' → logprob: -11.020424842834473
    5. ')' → logprob: -11.520424842834473
    6. '()))' → logprob: -13.145424842834473
    7. '();)' → logprob: -13.145424842834473
    8. '()]' → logprob: -13.645424842834473
    9. '()).' → logprob: -13.770424842834473
    10. '())
' → logprob: -13.770424842834473

Token 86: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.029812170192599297
    2. 'strip' → logprob: -3.5298120975494385
    3. 'read' → logprob: -9.90481185913086
    4. ')' → logprob: -12.02981185913086
    5. 'r' → logprob: -12.40481185913086
    6. 'rst' → logprob: -13.77981185913086
    7. 'rl' → logprob: -15.52981185913086
    8. ' strip' → logprob: -16.02981185913086
    9. 'decode' → logprob: -16.52981185913086
    10. ' ' → logprob: -16.52981185913086

Token 87: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004303003195673227
    2. '()' → logprob: -5.504302978515625
    3. ')' → logprob: -8.504302978515625
    4. '())
' → logprob: -11.004302978515625
    5. '(' → logprob: -13.379302978515625
    6. ' ())' → logprob: -13.379302978515625
    7. '()))' → logprob: -14.629302978515625
    8. '())

' → logprob: -14.629302978515625
    9. '().' → logprob: -14.754302978515625
    10. '()
' → logprob: -15.379302978515625

Token 88: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002516839886084199
    2. ' def' → logprob: -9.500251770019531
    3. '
' → logprob: -9.750251770019531
    4. '\' → logprob: -9.875251770019531
    5. '\n' → logprob: -10.625251770019531
    6. 'd' → logprob: -11.375251770019531
    7. '#' → logprob: -12.125251770019531
    8. '()' → logprob: -12.250251770019531
    9. '```' → logprob: -12.875251770019531
    10. 'ndef' → logprob: -13.125251770019531

Token 89: ' LI' (ID: 14875)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.35178354382514954
    2. ' L' → logprob: -1.7267835140228271
    3. 'S' → logprob: -3.726783514022827
    4. 'A' → logprob: -3.976783514022827
    5. 's' → logprob: -4.601783752441406
    6. 'list' → logprob: -5.101783752441406
    7. 'Ls' → logprob: -5.101783752441406
    8. '()' → logprob: -5.226783752441406
    9. '_list' → logprob: -5.351783752441406
    10. 'F' → logprob: -5.351783752441406

Token 90: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4888308644294739
    2. '()' → logprob: -0.9888308644294739
    3. '():
' → logprob: -4.238831043243408
    4. '():

' → logprob: -10.11383056640625
    5. '()>' → logprob: -10.11383056640625
    6. '()]' → logprob: -10.23883056640625
    7. '():
' → logprob: -10.73883056640625
    8. '()`' → logprob: -11.11383056640625
    9. ' ()' → logprob: -11.36383056640625
    10. '()">' → logprob: -11.36383056640625

Token 91: ' 
' (ID: 793)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25613540410995483
    2. ' return' → logprob: -1.6311354637145996
    3. '   ' → logprob: -4.5061354637146
    4. 'list' → logprob: -4.6311354637146
    5. ' list' → logprob: -4.8811354637146
    6. '()' → logprob: -7.3811354637146
    7. ' ' → logprob: -8.756134986877441
    8. '[' → logprob: -9.131134986877441
    9. 'eturn' → logprob: -9.131134986877441
    10. '()
' → logprob: -9.256134986877441

Token 92: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20195001363754272
    2. ' return' → logprob: -1.9519500732421875
    3. '   ' → logprob: -3.2019500732421875
    4. '	return' → logprob: -9.701950073242188
    5. '
' → logprob: -10.326950073242188
    6. ' ' → logprob: -10.951950073242188
    7. ':return' → logprob: -11.201950073242188
    8. ' list' → logprob: -11.326950073242188
    9. 'list' → logprob: -11.451950073242188
    10. '    
' → logprob: -11.576950073242188

Token 93: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011123866774141788
    2. 'return' (adapté à ' return') → logprob: -4.5111236572265625
    3. ' list' → logprob: -9.761123657226562
    4. 'map' → logprob: -11.386123657226562
    5. ' return' → logprob: -12.511123657226562
    6. '[list' → logprob: -13.386123657226562
    7. 'sys' → logprob: -13.636123657226562
    8. '[' → logprob: -14.761123657226562
    9. '   ' → logprob: -15.886123657226562
    10. '[]' → logprob: -17.511123657226562

Token 94: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5769409537315369
    2. ' list' → logprob: -0.8269409537315369
    3. '[list' → logprob: -7.076941013336182
    4. '[' → logprob: -8.951940536499023
    5. ' [' → logprob: -10.701940536499023
    6. '	list' → logprob: -13.201940536499023
    7. 'sys' → logprob: -14.576940536499023
    8. '(list' → logprob: -14.701940536499023
    9. '[l' → logprob: -15.076940536499023
    10. 'List' → logprob: -15.451940536499023

Token 95: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0001600347168277949
    2. '(' → logprob: -8.750160217285156
    3. 'map' → logprob: -13.875160217285156
    4. '(sys' → logprob: -14.500160217285156
    5. '(
' → logprob: -18.000160217285156
    6. ' map' → logprob: -18.125160217285156
    7. '(int' → logprob: -18.250160217285156
    8. '	map' → logprob: -19.000160217285156
    9. ' (' → logprob: -19.250160217285156
    10. '(m' → logprob: -19.625160217285156

Token 96: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002444125711917877
    2. '(' → logprob: -8.500244140625
    3. 'int' → logprob: -10.375244140625
    4. '(
' → logprob: -13.250244140625
    5. ',int' → logprob: -13.375244140625
    6. '=int' → logprob: -13.500244140625
    7. '[int' → logprob: -13.500244140625
    8. '<int' → logprob: -13.500244140625
    9. ')' → logprob: -14.250244140625
    10. ']int' → logprob: -14.750244140625

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007752487435936928
    2. '(sys' → logprob: -5.007752418518066
    3. ' ,' → logprob: -7.382752418518066
    4. 'sys' → logprob: -8.632752418518066
    5. ' sys' → logprob: -9.382752418518066
    6. '=sys' → logprob: -9.757752418518066
    7. ',_' → logprob: -10.507752418518066
    8. ',(' → logprob: -11.007752418518066
    9. ',System' → logprob: -11.132752418518066
    10. '(' → logprob: -11.632752418518066

Token 98: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4042070209980011
    2. 'sys' → logprob: -1.1542069911956787
    3. '_S' → logprob: -4.279207229614258
    4. ' _' → logprob: -6.279207229614258
    5. '_sys' → logprob: -7.529207229614258
    6. ' ' → logprob: -8.529207229614258
    7. '	sys' → logprob: -8.779207229614258
    8. '_' → logprob: -8.904207229614258
    9. '_s' → logprob: -8.904207229614258
    10. '_SYS' → logprob: -9.279207229614258

Token 99: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.511406809295295e-06
    2. 'stdin' → logprob: -12.750006675720215
    3. '.' → logprob: -13.000006675720215
    4. '.std' → logprob: -14.250006675720215
    5. '.stdout' → logprob: -14.750006675720215
    6. ' stdin' → logprob: -15.625006675720215
    7. '.readline' → logprob: -16.3750057220459
    8. '.st' → logprob: -17.3750057220459
    9. ' .' → logprob: -18.0000057220459
    10. '(stdin' → logprob: -18.2500057220459

Token 100: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.3915141355246305e-05
    2. '.stdin' → logprob: -11.37502384185791
    3. '.' → logprob: -11.75002384185791
    4. '().' → logprob: -12.37502384185791
    5. 'stdin' → logprob: -16.125024795532227
    6. '.readlines' → logprob: -16.250024795532227
    7. ' .' → logprob: -16.750024795532227
    8. '._' → logprob: -17.375024795532227
    9. '```' → logprob: -18.750024795532227
    10. ' readline' → logprob: -18.750024795532227

Token 101: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014183837920427322
    2. '.readline' → logprob: -4.26418399810791
    3. '.rstrip' → logprob: -11.63918399810791
    4. '.' → logprob: -12.13918399810791
    5. '()' → logprob: -12.88918399810791
    6. ' .' → logprob: -12.88918399810791
    7. ').' → logprob: -14.88918399810791
    8. ' ().' → logprob: -14.88918399810791
    9. '.r' → logprob: -16.264183044433594
    10. '.read' → logprob: -16.389183044433594

Token 102: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.00022010602697264403
    2. 'read' → logprob: -9.00022029876709
    3. 'strip' → logprob: -9.37522029876709
    4. 'split' → logprob: -11.50022029876709
    5. 'rl' → logprob: -14.50022029876709
    6. 'r' → logprob: -14.75022029876709
    7. '.rstrip' → logprob: -15.37522029876709
    8. 'rst' → logprob: -15.50022029876709
    9. 'rd' → logprob: -15.75022029876709
    10. 'rs' → logprob: -16.000219345092773

Token 103: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4021237802808173e-05
    2. '()' → logprob: -11.250014305114746
    3. ' ().' → logprob: -14.500014305114746
    4. '(' → logprob: -15.375014305114746
    5. '.' → logprob: -16.50001335144043
    6. '.split' → logprob: -16.87501335144043
    7. ')' → logprob: -17.37501335144043
    8. '('\' → logprob: -17.37501335144043
    9. '()
' → logprob: -17.50001335144043
    10. '   ' → logprob: -18.12501335144043

Token 104: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6286106983898208e-05
    2. ' split' → logprob: -11.250016212463379
    3. 'strip' → logprob: -12.750016212463379
    4. 'rstrip' → logprob: -15.250016212463379
    5. 'spl' → logprob: -17.125017166137695
    6. '(split' → logprob: -17.250017166137695
    7. '.split' → logprob: -17.750017166137695
    8. ')' → logprob: -19.750017166137695
    9. 'plit' → logprob: -19.750017166137695
    10. 's' → logprob: -19.875017166137695

Token 105: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.038857556879520416
    2. '()' → logprob: -3.2888574600219727
    3. '))' → logprob: -7.788857460021973
    4. '())' → logprob: -8.663857460021973
    5. '()))
' → logprob: -9.038857460021973
    6. '())))' → logprob: -9.788857460021973
    7. '(' → logprob: -10.038857460021973
    8. '()))

' → logprob: -12.663857460021973
    9. '()));' → logprob: -13.038857460021973
    10. '('' → logprob: -13.913857460021973

Token 106: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001468557515181601
    2. 'd' → logprob: -7.126468658447266
    3. 'class' → logprob: -7.876468658447266
    4. 'D' → logprob: -8.626468658447266
    5. '
' → logprob: -9.501468658447266
    6. '\' → logprob: -10.876468658447266
    7. '```' → logprob: -13.501468658447266
    8. '_' → logprob: -13.751468658447266
    9. 'de' → logprob: -14.001468658447266
    10. '    
' → logprob: -14.001468658447266

Token 107: ' LS' (ID: 60790)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.1390153020620346
    2. 'L' → logprob: -2.6390151977539062
    3. 'S' → logprob: -3.5140151977539062
    4. ' LS' → logprob: -4.389015197753906
    5. ' L' → logprob: -4.639015197753906
    6. 'SI' → logprob: -7.014015197753906
    7. 'MI' → logprob: -7.139015197753906
    8. 'F' → logprob: -7.264015197753906
    9. 'LL' → logprob: -7.389015197753906
    10. ' S' → logprob: -7.514015197753906

Token 108: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005601812736131251
    2. '():
' → logprob: -7.500560283660889
    3. ' ():' → logprob: -12.50055980682373
    4. '()' → logprob: -12.62555980682373
    5. '():

' → logprob: -15.62555980682373
    6. '():
' → logprob: -16.625560760498047
    7. '()>' → logprob: -17.500560760498047
    8. '(' → logprob: -18.875560760498047
    9. '().' → logprob: -19.625560760498047
    10. ':' → logprob: -20.125560760498047

Token 109: ' 
' (ID: 793)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8730353116989136
    2. '   ' → logprob: -1.2480353116989136
    3. ' 
' → logprob: -1.9980353116989136
    4. 'return' → logprob: -2.373035430908203
    5. ' ' → logprob: -3.373035430908203
    6. '
' → logprob: -4.248035430908203
    7. 'list' → logprob: -5.623035430908203
    8. ' list' → logprob: -5.623035430908203
    9. '  
' → logprob: -5.748035430908203
    10. '    ' → logprob: -6.498035430908203

Token 110: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.49256378412246704
    2. '   ' → logprob: -0.992563784122467
    3. ' return' → logprob: -4.117563724517822
    4. '
' → logprob: -7.117563724517822
    5. ' ' → logprob: -7.367563724517822
    6. '	return' → logprob: -8.11756420135498
    7. '  ' → logprob: -9.24256420135498
    8. '    
' → logprob: -9.74256420135498
    9. ' 
' → logprob: -9.99256420135498
    10. '  
' → logprob: -10.74256420135498

Token 111: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03866444528102875
    2. ' return' → logprob: -3.2886643409729004
    3. '   ' → logprob: -7.6636643409729
    4. 'sys' → logprob: -9.163664817810059
    5. 'list' → logprob: -10.413664817810059
    6. ' sys' → logprob: -12.038664817810059
    7. ' ' → logprob: -12.288664817810059
    8. 'def' → logprob: -13.288664817810059
    9. ' list' → logprob: -13.288664817810059
    10. '  ' → logprob: -13.288664817810059

Token 112: ' strings' (ID: 18279)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3144206404685974
    2. ' return' → logprob: -1.3144207000732422
    3. '   ' → logprob: -6.939420700073242
    4. 'def' → logprob: -8.939420700073242
    5. ' ' → logprob: -11.314420700073242
    6. '	return' → logprob: -11.439420700073242
    7. 's' → logprob: -11.564420700073242
    8. ' s' → logprob: -12.564420700073242
    9. ' def' → logprob: -13.189420700073242
    10. '
' → logprob: -13.439420700073242

Token 113: ' in' (ID: 306)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21682457625865936
    2. ' =' → logprob: -2.716824531555176
    3. 'return' → logprob: -3.216824531555176
    4. '<|end|>' → logprob: -3.716824531555176
    5. '   ' → logprob: -3.841824531555176
    6. '()
' → logprob: -4.591824531555176
    7. '=' → logprob: -4.841824531555176
    8. ' return' → logprob: -4.841824531555176
    9. '[]' → logprob: -4.966824531555176
    10. '().' → logprob: -5.716824531555176

Token 114: ' list' (ID: 1562)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2168045938014984
    2. 'sys' → logprob: -2.4668045043945312
    3. ' list' → logprob: -3.3418045043945312
    4. 'list' → logprob: -3.5918045043945312
    5. ' a' → logprob: -4.466804504394531
    6. 'a' → logprob: -4.466804504394531
    7. '=sys' → logprob: -4.966804504394531
    8. ' ' → logprob: -5.591804504394531
    9. 'the' → logprob: -5.841804504394531
    10. ' input' → logprob: -5.841804504394531

Token 115: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009260615333914757
    2. '<|end|>' → logprob: -6.009260654449463
    3. '()' → logprob: -6.384260654449463
    4. 'return' → logprob: -6.509260654449463
    5. '()
' → logprob: -6.634260654449463
    6. ' return' → logprob: -6.634260654449463
    7. ' ' → logprob: -8.259260177612305
    8. '[]' → logprob: -8.884260177612305
    9. '    
' → logprob: -9.009260177612305
    10. 'def' → logprob: -9.759260177612305

Token 116: ' stdin' (ID: 75143)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.18347501754760742
    2. ' sys' → logprob: -1.8084750175476074
    3. '_sys' → logprob: -6.683475017547607
    4. 'input' → logprob: -6.933475017547607
    5. ' input' → logprob: -7.433475017547607
    6. '   ' → logprob: -8.058475494384766
    7. '	sys' → logprob: -9.183475494384766
    8. 'list' → logprob: -9.308475494384766
    9. '_input' → logprob: -9.433475494384766
    10. '=sys' → logprob: -9.683475494384766

Token 117: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017989901825785637
    2. '()' → logprob: -4.7679901123046875
    3. 'def' → logprob: -5.6429901123046875
    4. 'return' → logprob: -5.7679901123046875
    5. ' return' → logprob: -6.8929901123046875
    6. '()
' → logprob: -7.5179901123046875
    7. '():' → logprob: -7.6429901123046875
    8. '	return' → logprob: -8.642990112304688
    9. ' ' → logprob: -8.767990112304688
    10. '[]' → logprob: -10.142990112304688

Token 118: ' that's' (ID: 10954)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010148782283067703
    2. ' return' → logprob: -5.510149002075195
    3. 'return' → logprob: -5.760149002075195
    4. 'def' → logprob: -5.885149002075195
    5. ' def' → logprob: -10.010149002075195
    6. '	return' → logprob: -10.635149002075195
    7. '    ' → logprob: -10.885149002075195
    8. ' ' → logprob: -11.635149002075195
    9. '  ' → logprob: -11.635149002075195
    10. '    
' → logprob: -12.885149002075195

Token 119: ' it' (ID: 480)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3483564853668213
    2. ' sys' → logprob: -1.4733564853668213
    3. '[]' → logprob: -4.223356246948242
    4. 'list' → logprob: -4.598356246948242
    5. ' ' → logprob: -5.098356246948242
    6. 'return' → logprob: -5.473356246948242
    7. 'str' → logprob: -5.723356246948242
    8. ' what' → logprob: -5.723356246948242
    9. ' next' → logprob: -5.973356246948242
    10. 'len' → logprob: -6.223356246948242

Token 120: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04993743076920509
    2. '
' → logprob: -3.4249374866485596
    3. '<|end|>' → logprob: -4.7999372482299805
    4. 'return' → logprob: -6.0499372482299805
    5. ' return' → logprob: -6.4249372482299805
    6. '    
' → logprob: -6.6749372482299805
    7. '  
' → logprob: -6.9249372482299805
    8. ' 
' → logprob: -7.9249372482299805
    9. 'def' → logprob: -7.9249372482299805
    10. ' ' → logprob: -8.04993724822998

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010063735535368323
    2. ' return' → logprob: -7.626006603240967
    3. 'return' → logprob: -8.126006126403809
    4. '
' → logprob: -9.126006126403809
    5. '<|end|>' → logprob: -9.876006126403809
    6. '	return' → logprob: -10.751006126403809
    7. '    
' → logprob: -10.876006126403809
    8. ' ' → logprob: -12.501006126403809
    9. '```' → logprob: -12.501006126403809
    10. ' 
' → logprob: -12.751006126403809

Token 122: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02382301166653633
    2. ' return' → logprob: -3.7738230228424072
    3. '   ' → logprob: -7.648822784423828
    4. 'def' → logprob: -9.773822784423828
    5. 'n' → logprob: -10.523822784423828
    6. 's' → logprob: -11.898822784423828
    7. ' ' → logprob: -13.023822784423828
    8. ' n' → logprob: -13.148822784423828
    9. '	return' → logprob: -13.523822784423828
    10. '```' → logprob: -13.523822784423828

Token 123: ' list' (ID: 1562)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03872052580118179
    2. 'list' → logprob: -3.5387206077575684
    3. ' sys' → logprob: -4.913720607757568
    4. ' list' → logprob: -6.663720607757568
    5. '[' → logprob: -8.28872013092041
    6. ' [' → logprob: -10.66372013092041
    7. '(sys' → logprob: -11.41372013092041
    8. '[list' → logprob: -11.41372013092041
    9. '	sys' → logprob: -13.03872013092041
    10. '[s' → logprob: -13.03872013092041

Token 124: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.024862440302968025
    2. '(map' → logprob: -3.89986252784729
    3. '(' → logprob: -5.774862289428711
    4. '(_' → logprob: -7.149862289428711
    5. 'sys' → logprob: -8.524862289428711
    6. '(input' → logprob: -8.899862289428711
    7. '(system' → logprob: -10.274862289428711
    8. 'map' → logprob: -11.649862289428711
    9. '(str' → logprob: -11.774862289428711
    10. '(iter' → logprob: -12.024862289428711

Token 125: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.531315314830863e-06
    2. '.stdout' → logprob: -12.750003814697266
    3. '.std' → logprob: -14.750003814697266
    4. '.' → logprob: -16.000003814697266
    5. 'stdin' → logprob: -16.500003814697266
    6. '.argv' → logprob: -17.875003814697266
    7. ' .' → logprob: -18.750003814697266
    8. '.readline' → logprob: -18.750003814697266
    9. '.st' → logprob: -19.625003814697266
    10. '.stderr' → logprob: -20.125003814697266

Token 126: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.292907877039397e-06
    2. '.stdin' → logprob: -12.75000286102295
    3. '.' → logprob: -15.62500286102295
    4. '().' → logprob: -16.000003814697266
    5. '.readlines' → logprob: -16.000003814697266
    6. '.read' → logprob: -18.375003814697266
    7. ' .' → logprob: -19.375003814697266
    8. '.stdout' → logprob: -20.500003814697266
    9. ' readline' → logprob: -21.000003814697266
    10. '.strptime' → logprob: -21.750003814697266

Token 127: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.4849443838757e-06
    2. '()' → logprob: -12.375004768371582
    3. ' ().' → logprob: -15.875004768371582
    4. '.rstrip' → logprob: -16.625003814697266
    5. 'rstrip' → logprob: -17.875003814697266
    6. '()).' → logprob: -18.250003814697266
    7. '().'' → logprob: -19.250003814697266
    8. '())' → logprob: -20.000003814697266
    9. '()
' → logprob: -20.250003814697266
    10. '().__' → logprob: -20.375003814697266

Token 128: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -8.77627644513268e-06
    2. 'strip' → logprob: -11.750008583068848
    3. 'split' → logprob: -14.250008583068848
    4. '.rstrip' → logprob: -15.500008583068848
    5. 'rs' → logprob: -17.250009536743164
    6. 'rst' → logprob: -17.875009536743164
    7. 'r' → logprob: -19.875009536743164
    8. 'rl' → logprob: -21.000009536743164
    9. 'rt' → logprob: -21.500009536743164
    10. 'rd' → logprob: -21.625009536743164

Token 129: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.319370302458992e-06
    2. '()' → logprob: -12.750005722045898
    3. ' ().' → logprob: -13.125005722045898
    4. ' .' → logprob: -15.375005722045898
    5. '.split' → logprob: -17.0000057220459
    6. '.' → logprob: -17.6250057220459
    7. ')' → logprob: -17.6250057220459
    8. '())' → logprob: -18.0000057220459
    9. '(' → logprob: -18.2500057220459
    10. ' ()' → logprob: -18.6250057220459

Token 130: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. ' split' → logprob: -13.750000953674316
    3. 'spl' → logprob: -19.250001907348633
    4. 'strip' → logprob: -19.875001907348633
    5. '.split' → logprob: -20.125001907348633
    6. 'rstrip' → logprob: -21.250001907348633
    7. '(split' → logprob: -21.500001907348633
    8. '_split' → logprob: -24.500001907348633
    9. 's' → logprob: -24.750001907348633
    10. 'sp' → logprob: -25.125001907348633

Token 131: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01221458613872528
    2. '()' → logprob: -4.512214660644531
    3. ')' → logprob: -6.762214660644531
    4. ' ())' → logprob: -12.512214660644531
    5. '()]' → logprob: -13.512214660644531
    6. '();)' → logprob: -13.887214660644531
    7. '())
' → logprob: -13.887214660644531
    8. '(' → logprob: -14.262214660644531
    9. '()))' → logprob: -14.387214660644531
    10. '()[' → logprob: -14.762214660644531

Token 132: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006640645442530513
    2. 'class' → logprob: -7.500664234161377
    3. '@' → logprob: -10.750663757324219
    4. '#' → logprob: -10.875663757324219
    5. '
' → logprob: -11.125663757324219
    6. 'd' → logprob: -11.375663757324219
    7. '```' → logprob: -11.375663757324219
    8. '\' → logprob: -12.000663757324219
    9. 'from' → logprob: -12.500663757324219
    10. 'D' → logprob: -12.625663757324219

Token 133: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8830604553222656
    2. ' =' → logprob: -0.8830604553222656
    3. '=' → logprob: -1.7580604553222656
    4. ')' → logprob: -8.508060455322266
    5. ' ,' → logprob: -9.008060455322266
    6. ' ' → logprob: -9.258060455322266
    7. '=int' → logprob: -10.133060455322266
    8. '<|end|>' → logprob: -10.133060455322266
    9. '.' → logprob: -10.508060455322266
    10. ':' → logprob: -11.383060455322266

Token 134: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.3506411910057068
    2. ' I' → logprob: -1.9756412506103516
    3. 'LI' → logprob: -1.9756412506103516
    4. ' LI' → logprob: -4.225641250610352
    5. 'int' → logprob: -5.975641250610352
    6. ' int' → logprob: -7.100641250610352
    7. 'LS' → logprob: -8.225641250610352
    8. ' ' → logprob: -9.350641250610352
    9. '10' → logprob: -9.975641250610352
    10. '100' → logprob: -11.975641250610352

Token 135: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05682536959648132
    2. 'a' → logprob: -3.1818253993988037
    3. 'arr' → logprob: -5.306825160980225
    4. 'S' → logprob: -6.056825160980225
    5. 'L' → logprob: -6.556825160980225
    6. 'H' → logprob: -6.931825160980225
    7. 'lst' → logprob: -7.306825160980225
    8. 'data' → logprob: -7.431825160980225
    9. 'dp' → logprob: -8.181825637817383
    10. 's' → logprob: -8.306825637817383

Token 137: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142726600170135
    2. ' =' → logprob: -1.7014272212982178
    3. '_' → logprob: -11.826427459716797
    4. ',' → logprob: -13.451427459716797
    5. '[' → logprob: -14.201427459716797
    6. ')' → logprob: -14.326427459716797
    7. '_=' → logprob: -14.326427459716797
    8. ' ' → logprob: -14.451427459716797
    9. '=[]' → logprob: -14.451427459716797
    10. '()' → logprob: -14.701427459716797

Token 138: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.07094522565603256
    2. ' LI' → logprob: -2.6959452629089355
    3. 'LS' → logprob: -6.9459452629089355
    4. ' LS' → logprob: -11.070944786071777
    5. 'L' → logprob: -11.570944786071777
    6. ' ' → logprob: -12.195944786071777
    7. '(L' → logprob: -12.195944786071777
    8. ' L' → logprob: -13.070944786071777
    9. '(' → logprob: -13.195944786071777
    10. ' LIS' → logprob: -14.070944786071777

Token 139: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28548410534858704
    2. 'A' → logprob: -2.9104840755462646
    3. '
' → logprob: -3.0354840755462646
    4. '#' → logprob: -3.4104840755462646
    5. '(' → logprob: -3.4104840755462646
    6. '()
' → logprob: -4.160484313964844
    7. ')' → logprob: -4.410484313964844
    8. 'Q' → logprob: -4.660484313964844
    9. 'sorted' → logprob: -4.785484313964844
    10. '[' → logprob: -5.160484313964844

Token 140: 'B' (ID: 33)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08197356760501862
    2. 'A' → logprob: -4.081973552703857
    3. '#' → logprob: -4.706973552703857
    4. 'sorted' → logprob: -4.831973552703857
    5. 'def' → logprob: -5.081973552703857
    6. 'max' → logprob: -5.331973552703857
    7. 'from' → logprob: -5.706973552703857
    8. 'ans' → logprob: -5.831973552703857
    9. 'count' → logprob: -5.831973552703857
    10. 'counter' → logprob: -6.206973552703857

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868771195411682
    2. ' =' → logprob: -1.1368770599365234
    3. ' ' → logprob: -12.886877059936523
    4. '_' → logprob: -13.761877059936523
    5. '=[]' → logprob: -14.011877059936523
    6. ',' → logprob: -14.386877059936523
    7. '()' → logprob: -15.511877059936523
    8. '=A' → logprob: -15.511877059936523
    9. '[:]' → logprob: -15.761877059936523
    10. '.' → logprob: -16.011877059936523

Token 142: ' list' (ID: 1562)
  Prédit: ' LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' LI' → logprob: -0.5765884518623352
    2. 'LI' → logprob: -0.8265884518623352
    3. 'LS' → logprob: -8.70158863067627
    4. ' ' → logprob: -9.07658863067627
    5. 'I' → logprob: -9.20158863067627
    6. ' LS' → logprob: -9.32658863067627
    7. ' L' → logprob: -10.07658863067627
    8. ' I' → logprob: -11.07658863067627
    9. 'L' → logprob: -11.20158863067627
    10. ' A' → logprob: -11.20158863067627

Token 143: '(range' (ID: 50017)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.08825498819351196
    2. '(A' → logprob: -3.463254928588867
    3. '(' → logprob: -3.588254928588867
    4. '()' → logprob: -4.963254928588867
    5. '(range' → logprob: -4.963254928588867
    6. '(B' → logprob: -5.713254928588867
    7. '(it' → logprob: -5.963254928588867
    8. '(set' → logprob: -6.713254928588867
    9. '(re' → logprob: -6.838254928588867
    10. '(copy' → logprob: -6.963254928588867

Token 144: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.030427293851971626
    2. '(' → logprob: -3.5304272174835205
    3. '(len' → logprob: -7.4054274559021
    4. '(n' → logprob: -9.655426979064941
    5. 'N' → logprob: -13.530426979064941
    6. '(A' → logprob: -13.905426979064941
    7. '(M' → logprob: -14.405426979064941
    8. '(-' → logprob: -15.030426979064941
    9. '(
' → logprob: -15.030426979064941
    10. '(L' → logprob: -15.155426979064941

Token 145: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2909066081047058
    2. '(N' → logprob: -1.4159066677093506
    3. '1' → logprob: -5.2909064292907715
    4. '(' → logprob: -5.4159064292907715
    5. 'len' → logprob: -9.54090690612793
    6. '(len' → logprob: -10.16590690612793
    7. ' N' → logprob: -10.54090690612793
    8. '	N' → logprob: -10.79090690612793
    9. '   ' → logprob: -11.04090690612793
    10. ' ' → logprob: -11.54090690612793

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004926566034555435
    2. ' ,' → logprob: -5.629926681518555
    3. ',N' → logprob: -6.629926681518555
    4. ' ' → logprob: -13.004926681518555
    5. ',n' → logprob: -13.254926681518555
    6. 'N' → logprob: -15.129926681518555
    7. ',
' → logprob: -15.129926681518555
    8. ' N' → logprob: -15.254926681518555
    9. ',len' → logprob: -15.879926681518555
    10. '   ' → logprob: -16.254926681518555

Token 147: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002614550176076591
    2. ' N' → logprob: -8.250261306762695
    3. '	N' → logprob: -16.750261306762695
    4. '10' → logprob: -17.625261306762695
    5. '(N' → logprob: -18.000261306762695
    6. ' ' → logprob: -18.500261306762695
    7. '100' → logprob: -19.125261306762695
    8. ',N' → logprob: -19.500261306762695
    9. '_N' → logprob: -20.125261306762695
    10. '<N' → logprob: -20.375261306762695

Token 148: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061970487236976624
    2. ' +' → logprob: -2.8119704723358154
    3. ')' → logprob: -13.436970710754395
    4. '))' → logprob: -14.186970710754395
    5. '+n' → logprob: -15.686970710754395
    6. '+)' → logprob: -16.311969757080078
    7. ' ' → logprob: -16.436969757080078
    8. '()+' → logprob: -16.561969757080078
    9. ')+' → logprob: -17.186969757080078
    10. '1' → logprob: -18.061969757080078

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.750021934509277
    3. '2' → logprob: -14.875021934509277
    4. '+' → logprob: -17.500022888183594
    5. ')' → logprob: -17.625022888183594
    6. '   ' → logprob: -17.750022888183594
    7. '```' → logprob: -17.750022888183594
    8. '
' → logprob: -18.000022888183594
    9. '

' → logprob: -18.437522888183594
    10. '１' → logprob: -19.500022888183594

Token 150: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3133314251899719
    2. ')' → logprob: -1.3133313655853271
    3. '+' → logprob: -10.063331604003906
    4. ' ))' → logprob: -11.563331604003906
    5. ' )' → logprob: -12.063331604003906
    6. ')))' → logprob: -12.063331604003906
    7. ')
' → logprob: -13.438331604003906
    8. '),' → logprob: -13.813331604003906
    9. '])' → logprob: -14.313331604003906
    10. '})' → logprob: -14.438331604003906

Token 151: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010224184021353722
    2. 'A' → logprob: -5.510224342346191
    3. 'B' → logprob: -5.510224342346191
    4. '<|end|>' → logprob: -7.635224342346191
    5. 'print' → logprob: -8.385224342346191
    6. '

' → logprob: -8.510224342346191
    7. '
' → logprob: -8.760224342346191
    8. 'sorted' → logprob: -8.885224342346191
    9. 'for' → logprob: -9.010224342346191
    10. 'def' → logprob: -9.010224342346191

Token 152: ' prefer' (ID: 7363)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.7089648246765137
    2. 'A' → logprob: -0.9589648246765137
    3. ' sorted' → logprob: -2.5839648246765137
    4. ' A' → logprob: -3.8339648246765137
    5. 'B' → logprob: -4.583964824676514
    6. '[::-' → logprob: -5.583964824676514
    7. '<|end|>' → logprob: -6.333964824676514
    8. ' ' → logprob: -6.583964824676514
    9. '_sorted' → logprob: -6.833964824676514
    10. 'reverse' → logprob: -7.083964824676514

Token 153: ' lists' (ID: 19471)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -1.201489806175232
    2. 'ential' → logprob: -2.2014899253845215
    3. 'sorted' → logprob: -2.2014899253845215
    4. 'ring' → logprob: -2.5764899253845215
    5. ' sorted' → logprob: -2.5764899253845215
    6. 'd' → logprob: -3.0764899253845215
    7. 'n' → logprob: -3.2014899253845215
    8. 'ed' → logprob: -3.5764899253845215
    9. 's' → logprob: -3.7014899253845215
    10. 'rence' → logprob: -3.8264899253845215

Token 154: ' personally' (ID: 21651)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02177848480641842
    2. '<|end|>' → logprob: -4.396778583526611
    3. 'B' → logprob: -5.896778583526611
    4. 'A' → logprob: -6.021778583526611
    5. 'for' → logprob: -7.146778583526611
    6. '

' → logprob: -7.271778583526611
    7. '
' → logprob: -7.771778583526611
    8. '<|end|>' → logprob: -8.021778106689453
    9. 'def' → logprob: -8.146778106689453
    10. '.' → logprob: -8.521778106689453

Token 156: 'AB' (ID: 2912)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0054367585107684135
    2. '<|end|>' → logprob: -6.380436897277832
    3. '

' → logprob: -6.630436897277832
    4. 'A' → logprob: -7.755436897277832
    5. '[::-' → logprob: -8.130436897277832
    6. '
' → logprob: -8.255436897277832
    7. 'B' → logprob: -8.505436897277832
    8. '.sort' → logprob: -8.505436897277832
    9. '\n' → logprob: -8.630436897277832
    10. 'for' → logprob: -9.005436897277832

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22653409838676453
    2. ' =' → logprob: -1.601534128189087
    3. '.sort' → logprob: -8.101533889770508
    4. '=[]' → logprob: -8.476533889770508
    5. '_' → logprob: -8.851533889770508
    6. '_pairs' → logprob: -9.226533889770508
    7. '=[' → logprob: -9.601533889770508
    8. '.' → logprob: -9.726533889770508
    9. '_sorted' → logprob: -9.976533889770508
    10. ' ' → logprob: -10.351533889770508

Token 158: ' zip' (ID: 16216)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7357968688011169
    2. 'sorted' → logprob: -0.7357968688011169
    3. '[(' → logprob: -4.235796928405762
    4. '[A' → logprob: -5.235796928405762
    5. '[]' → logprob: -5.360796928405762
    6. 'A' → logprob: -5.485796928405762
    7. '[' → logprob: -5.985796928405762
    8. 'set' → logprob: -6.110796928405762
    9. '[list' → logprob: -6.360796928405762
    10. 'zip' → logprob: -6.360796928405762

Token 159: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0007466176757588983
    2. '(' → logprob: -7.250746726989746
    3. '(B' → logprob: -10.250746726989746
    4. '((' → logprob: -14.250746726989746
    5. '(N' → logprob: -14.875746726989746
    6. '(
' → logprob: -16.00074577331543
    7. '(I' → logprob: -16.12574577331543
    8. ' (' → logprob: -17.37574577331543
    9. '(a' → logprob: -17.37574577331543
    10. 'A' → logprob: -17.62574577331543

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045486391172744334
    2. ' ,' → logprob: -8.125454902648926
    3. ',B' → logprob: -8.875454902648926
    4. ',
' → logprob: -11.000454902648926
    5. '(' → logprob: -13.750454902648926
    6. ',b' → logprob: -14.375454902648926
    7. '(B' → logprob: -15.125454902648926
    8. '(),' → logprob: -15.750454902648926
    9. ',

' → logprob: -16.50045394897461
    10. 'B' → logprob: -16.50045394897461

Token 161: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02975141443312168
    2. ' B' → logprob: -3.5297513008117676
    3. ')' → logprob: -14.779751777648926
    4. '<|end|>' → logprob: -15.404751777648926
    5. 'b' → logprob: -15.654751777648926
    6. ' ' → logprob: -16.15475082397461
    7. '	B' → logprob: -16.40475082397461
    8. '   ' → logprob: -17.40475082397461
    9. '(B' → logprob: -18.02975082397461
    10. '...' → logprob: -18.52975082397461

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -14.000001907348633
    4. '))' → logprob: -16.125001907348633
    5. '())' → logprob: -16.625001907348633
    6. ',)' → logprob: -17.625001907348633
    7. ')`' → logprob: -17.875001907348633
    8. ')

' → logprob: -18.000001907348633
    9. ')#' → logprob: -18.250001907348633
    10. '),' → logprob: -18.625001907348633

Token 163: '#' (ID: 2)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.35476797819137573
    2. 'sorted' → logprob: -1.2297680377960205
    3. 'ab' → logprob: -5.854767799377441
    4. 'for' → logprob: -6.354767799377441
    5. 'A' → logprob: -7.229767799377441
    6. 'result' → logprob: -8.854767799377441
    7. '_sorted' → logprob: -9.104767799377441
    8. 'list' → logprob: -9.354767799377441
    9. 'next' → logprob: -9.729767799377441
    10. 'data' → logprob: -9.979767799377441

Token 164: ' print' (ID: 2123)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.3383592665195465
    2. 'sorted' → logprob: -1.3383592367172241
    3. 'for' → logprob: -4.838359355926514
    4. 'ab' → logprob: -5.338359355926514
    5. 'A' → logprob: -5.713359355926514
    6. 'C' → logprob: -6.213359355926514
    7. 'lst' → logprob: -6.588359355926514
    8. 'pairs' → logprob: -6.838359355926514
    9. 'arr' → logprob: -7.463359355926514
    10. 'result' → logprob: -7.463359355926514

Token 165: '(' (ID: 7)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.4619060754776001
    2. '(' → logprob: -1.9619060754776
    3. 'sorted' → logprob: -1.9619060754776
    4. '(list' → logprob: -2.9619059562683105
    5. '()' → logprob: -4.0869059562683105
    6. '(*' → logprob: -4.7119059562683105
    7. 'list' → logprob: -5.5869059562683105
    8. '(A' → logprob: -5.5869059562683105
    9. '_sorted' → logprob: -7.2119059562683105
    10. '(
' → logprob: -7.4619059562683105

Token 166: 'AB' (ID: 2912)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05425648018717766
    2. 'sorted' → logprob: -3.4292564392089844
    3. 'AB' → logprob: -4.929256439208984
    4. '*' → logprob: -5.054256439208984
    5. ')' → logprob: -5.679256439208984
    6. 'A' → logprob: -6.304256439208984
    7. 'tuple' → logprob: -7.554256439208984
    8. 'max' → logprob: -8.179256439208984
    9. 'len' → logprob: -9.054256439208984
    10. '*A' → logprob: -9.179256439208984

Token 167: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010878815373871475
    2. '))' → logprob: -9.50010871887207
    3. ')
' → logprob: -10.75010871887207
    4. ' )' → logprob: -12.12510871887207
    5. ')#' → logprob: -13.25010871887207
    6. ',' → logprob: -13.62510871887207
    7. ',)' → logprob: -14.37510871887207
    8. ')))' → logprob: -14.50010871887207
    9. ')

' → logprob: -15.00010871887207
    10. '#' → logprob: -15.00010871887207

Token 168: ' #' (ID: 1069)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.8678833246231079
    2. 'for' → logprob: -0.9928833246231079
    3. 'sorted' → logprob: -2.4928832054138184
    4. '#' → logprob: -3.4928832054138184
    5. 'list' → logprob: -3.4928832054138184
    6. '<|end|>' → logprob: -3.6178832054138184
    7. '[' → logprob: -4.742883205413818
    8. 'A' → logprob: -4.742883205413818
    9. ' for' → logprob: -5.117883205413818
    10. ')' → logprob: -5.617883205413818

Token 169: ' just' (ID: 1327)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.25979653000831604
    2. 'sorted' → logprob: -1.6347965002059937
    3. 'pairs' → logprob: -4.509796619415283
    4. 'A' → logprob: -5.134796619415283
    5. '#' → logprob: -5.259796619415283
    6. 'ab' → logprob: -5.759796619415283
    7. '[' → logprob: -6.384796619415283
    8. '[]' → logprob: -6.759796619415283
    9. 'lst' → logprob: -7.009796619415283
    10. 'Sorted' → logprob: -7.134796619415283

Token 170: ' checking' (ID: 19141)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.15334856510162354
    2. 'for' → logprob: -2.153348445892334
    3. '#' → logprob: -4.778348445892334
    4. 'a' → logprob: -5.278348445892334
    5. 'in' → logprob: -5.528348445892334
    6. 'as' → logprob: -5.653348445892334
    7. 'sorting' → logprob: -6.903348445892334
    8. 'sorted' → logprob: -7.153348445892334
    9. 'debug' → logprob: -7.278348445892334
    10. ' to' → logprob: -7.903348445892334

Token 171: '

' (ID: 279)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.8062067031860352
    2. 'for' → logprob: -1.5562067031860352
    3. 'sorted' → logprob: -1.6812067031860352
    4. 'A' → logprob: -2.681206703186035
    5. ')' → logprob: -2.931206703186035
    6. 'ab' → logprob: -5.056206703186035
    7. 'C' → logprob: -5.181206703186035
    8. 'pairs' → logprob: -5.306206703186035
    9. '#' → logprob: -5.806206703186035
    10. 'max' → logprob: -6.056206703186035

Token 172: 's' (ID: 82)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.39198511838912964
    2. 'sorted' → logprob: -1.3919851779937744
    3. 'A' → logprob: -3.3919851779937744
    4. 'ab' → logprob: -4.516984939575195
    5. 'for' → logprob: -4.641984939575195
    6. 'C' → logprob: -5.016984939575195
    7. 'pairs' → logprob: -6.016984939575195
    8. 'arr' → logprob: -6.516984939575195
    9. 'lst' → logprob: -6.516984939575195
    10. 's' → logprob: -6.766984939575195

Token 173: 'AB' (ID: 2912)
  Prédit: 'orted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orted' → logprob: -0.02160969004034996
    2. 'ort' → logprob: -4.771609783172607
    3. 'or' → logprob: -5.521609783172607
    4. 'A' → logprob: -6.271609783172607
    5. 'o' → logprob: -6.271609783172607
    6. 'AB' → logprob: -6.396609783172607
    7. '=' → logprob: -7.771609783172607
    8. 'um' → logprob: -7.771609783172607
    9. 't' → logprob: -7.896609783172607
    10. 'sorted' → logprob: -7.896609783172607

Token 174: ' =' (ID: 314)
  Prédit: 'orted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orted' → logprob: -0.9836202263832092
    2. '=' → logprob: -1.1086201667785645
    3. ' =' → logprob: -1.2336201667785645
    4. 'ort' → logprob: -5.6086201667785645
    5. '_sorted' → logprob: -8.108620643615723
    6. 'sorted' → logprob: -8.358620643615723
    7. '_' → logprob: -9.233620643615723
    8. ' ' → logprob: -9.483620643615723
    9. '=[]' → logprob: -9.483620643615723
    10. '=list' → logprob: -9.733620643615723

Token 175: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0011852304451167583
    2. ' sorted' → logprob: -6.751185417175293
    3. 'list' → logprob: -11.626185417175293
    4. '   ' → logprob: -12.751185417175293
    5. 's' → logprob: -13.251185417175293
    6. '(sorted' → logprob: -14.626185417175293
    7. 'sort' → logprob: -15.251185417175293
    8. '.sorted' → logprob: -15.501185417175293
    9. 'tuple' → logprob: -16.251184463500977
    10. 'Sorted' → logprob: -16.251184463500977

Token 176: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.703443770878948e-06
    2. '(ab' → logprob: -12.750007629394531
    3. '((' → logprob: -13.125007629394531
    4. '(list' → logprob: -13.625007629394531
    5. '(
' → logprob: -13.875007629394531
    6. '(s' → logprob: -15.875007629394531
    7. '(abs' → logprob: -16.62500762939453
    8. '(A' → logprob: -16.75000762939453
    9. '(_' → logprob: -16.75000762939453
    10. ' (' → logprob: -16.87500762939453

Token 177: 'AB' (ID: 2912)
  Prédit: 'AB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.006825955584645271
    2. '(' → logprob: -5.006825923919678
    3. ')' → logprob: -10.006826400756836
    4. 'list' → logprob: -10.006826400756836
    5. 'ab' → logprob: -11.631826400756836
    6. '_AB' → logprob: -11.756826400756836
    7. ' AB' → logprob: -13.256826400756836
    8. 'A' → logprob: -14.131826400756836
    9. '(list' → logprob: -15.631826400756836
    10. 'ABC' → logprob: -15.631826400756836

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7320054769515991
    2. ',key' → logprob: -1.2320054769515991
    3. ',' → logprob: -1.4820054769515991
    4. ' ,' → logprob: -9.48200511932373
    5. 'key' → logprob: -9.85700511932373
    6. ' key' → logprob: -11.35700511932373
    7. '(key' → logprob: -11.73200511932373
    8. '(),' → logprob: -11.98200511932373
    9. ' )' → logprob: -12.48200511932373
    10. ',)' → logprob: -12.73200511932373

Token 179: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46414244174957275
    2. 'a' → logprob: -2.839142322540283
    3. 'prev' → logprob: -2.839142322540283
    4. 'print' → logprob: -3.339142322540283
    5. 'A' → logprob: -3.589142322540283
    6. 'max' → logprob: -3.589142322540283
    7. '#' → logprob: -3.714142322540283
    8. ')' → logprob: -3.714142322540283
    9. 'i' → logprob: -4.089142322540283
    10. 'C' → logprob: -4.339142322540283

Token 180: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3530304729938507
    2. 'ans' → logprob: -2.9780304431915283
    3. 'C' → logprob: -3.4780304431915283
    4. 'dp' → logprob: -3.4780304431915283
    5. 'print' → logprob: -3.7280304431915283
    6. 'prev' → logprob: -3.7280304431915283
    7. 'max' → logprob: -4.103030681610107
    8. 'A' → logprob: -4.478030681610107
    9. 'result' → logprob: -4.603030681610107
    10. 's' → logprob: -4.603030681610107

Token 181: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.9888433093437925e-05
    2. '(' → logprob: -10.750040054321289
    3. 's' → logprob: -11.375040054321289
    4. '(sorted' → logprob: -12.500040054321289
    5. '(list' → logprob: -13.875040054321289
    6. '(len' → logprob: -13.875040054321289
    7. ' (' → logprob: -14.000040054321289
    8. '((' → logprob: -15.875040054321289
    9. '(sort' → logprob: -16.87504005432129
    10. '(S' → logprob: -17.00004005432129

Token 182: 'AB' (ID: 2912)
  Prédit: 'AB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.0004035017918795347
    2. '(' → logprob: -8.00040340423584
    3. 'A' → logprob: -9.87540340423584
    4. '(s' → logprob: -12.00040340423584
    5. '_AB' → logprob: -12.25040340423584
    6. 's' → logprob: -12.62540340423584
    7. '(A' → logprob: -13.62540340423584
    8. 'S' → logprob: -14.75040340423584
    9. ' AB' → logprob: -15.50040340423584
    10. 'ab' → logprob: -16.125404357910156

Token 183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.580929347255733e-05
    2. ')
' → logprob: -12.500016212463379
    3. '))' → logprob: -12.625016212463379
    4. ' )' → logprob: -12.875016212463379
    5. ')#' → logprob: -12.875016212463379
    6. '[' → logprob: -13.625016212463379
    7. ',' → logprob: -13.875016212463379
    8. ')s' → logprob: -14.625016212463379
    9. '])' → logprob: -15.375016212463379
    10. ']' → logprob: -16.125015258789062

Token 184: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35884082317352295
    2. '<|end|>' → logprob: -1.483840823173523
    3. ')' → logprob: -3.7338409423828125
    4. '
' → logprob: -4.7338409423828125
    5. 'max' → logprob: -4.8588409423828125
    6. 'print' → logprob: -4.9838409423828125
    7. '#' → logprob: -5.1088409423828125
    8. ' for' → logprob: -5.1088409423828125
    9. 'A' → logprob: -5.6088409423828125
    10. '[' → logprob: -5.8588409423828125

Token 185: ' debugging' (ID: 64667)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05860389024019241
    2. ' for' → logprob: -3.0586040019989014
    3. '#' → logprob: -5.558603763580322
    4. '[' → logprob: -6.933603763580322
    5. ')' → logprob: -6.933603763580322
    6. 'def' → logprob: -7.433603763580322
    7. 'print' → logprob: -7.558603763580322
    8. 'max' → logprob: -7.558603763580322
    9. 'sorted' → logprob: -7.808603763580322
    10. 's' → logprob: -7.933603763580322

Token 186: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: '_an' (ID: 47921)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.47287145256996155
    2. 'for' → logprob: -2.7228715419769287
    3. 'ans' → logprob: -2.9728715419769287
    4. 'C' → logprob: -2.9728715419769287
    5. 'max' → logprob: -3.7228715419769287
    6. 'counts' → logprob: -4.09787130355835
    7. 'result' → logprob: -4.22287130355835
    8. 'idx' → logprob: -4.34787130355835
    9. 'from' → logprob: -4.34787130355835
    10. 'res' → logprob: -4.47287130355835

Token 188: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4241810441017151
    2. 'swer' → logprob: -1.2991809844970703
    3. 'a' → logprob: -3.1741809844970703
    4. 'sw' → logprob: -4.92418098449707
    5. '_s' → logprob: -5.67418098449707
    6. 'S' → logprob: -6.04918098449707
    7. 'A' → logprob: -6.17418098449707
    8. 'ch' → logprob: -6.17418098449707
    9. ' =' → logprob: -6.42418098449707
    10. 'd' → logprob: -6.54918098449707

Token 189: ' ans' (ID: 3345)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.8045015931129456
    2. '_bn' → logprob: -1.4295015335083008
    3. '_ab' → logprob: -2.304501533508301
    4. '_an' → logprob: -3.179501533508301
    5. '_bs' → logprob: -3.179501533508301
    6. '_ans' → logprob: -3.554501533508301
    7. '_bp' → logprob: -4.179501533508301
    8. ' _' → logprob: -4.804501533508301
    9. '_a' → logprob: -4.929501533508301
    10. '_' → logprob: -4.929501533508301

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6242538690567017
    2. '=' → logprob: -0.9992538690567017
    3. 's' → logprob: -2.874253749847412
    4. 'swer' → logprob: -3.249253749847412
    5. '_' → logprob: -7.624253749847412
    6. '=[]' → logprob: -8.74925422668457
    7. ' ' → logprob: -9.62425422668457
    8. ',' → logprob: -9.74925422668457
    9. '=[]
' → logprob: -10.49925422668457
    10. 'w' → logprob: -11.12425422668457

Token 191: ' zip' (ID: 16216)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08562961965799332
    2. 's' → logprob: -3.83562970161438
    3. '[],' → logprob: -3.96062970161438
    4. '-' → logprob: -4.210629463195801
    5. 'float' → logprob: -4.460629463195801
    6. ' ' → logprob: -5.085629463195801
    7. 'math' → logprob: -5.835629463195801
    8. '1' → logprob: -6.460629463195801
    9. 'None' → logprob: -6.585629463195801
    10. '[]' → logprob: -7.210629463195801

Token 192: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.000536232371814549
    2. '(' → logprob: -7.8755364418029785
    3. '(s' → logprob: -9.12553596496582
    4. '(*)' → logprob: -10.25053596496582
    5. '(*(' → logprob: -11.50053596496582
    6. '((*' → logprob: -14.12553596496582
    7. '(
' → logprob: -14.37553596496582
    8. '(`' → logprob: -15.75053596496582
    9. ' (*' → logprob: -16.00053596496582
    10. '(

' → logprob: -16.75053596496582

Token 193: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005631613312289119
    2. ' s' → logprob: -7.500563144683838
    3. '(s' → logprob: -13.125563621520996
    4. '_s' → logprob: -13.125563621520996
    5. '   ' → logprob: -13.125563621520996
    6. '[s' → logprob: -13.750563621520996
    7. ')' → logprob: -14.125563621520996
    8. 'sorted' → logprob: -14.125563621520996
    9. ')s' → logprob: -14.875563621520996
    10. '	s' → logprob: -15.250563621520996

Token 194: 'AB' (ID: 2912)
  Prédit: 'AB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -7.465036105713807e-06
    2. '_AB' → logprob: -12.250007629394531
    3. '_ab' → logprob: -13.000007629394531
    4. 'ab' → logprob: -14.875007629394531
    5. ' AB' → logprob: -17.62500762939453
    6. ')' → logprob: -18.50000762939453
    7. '(ab' → logprob: -19.25000762939453
    8. '(' → logprob: -19.62500762939453
    9. 'аб' → logprob: -20.00000762939453
    10. 'Ab' → logprob: -20.12500762939453

Token 195: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001601539261173457
    2. ')
' → logprob: -8.750160217285156
    3. ')

' → logprob: -13.750160217285156
    4. ' )' → logprob: -15.375160217285156
    5. ')return' → logprob: -16.000160217285156
    6. ')`' → logprob: -16.125160217285156
    7. ')#' → logprob: -16.875160217285156
    8. ')s' → logprob: -17.250160217285156
    9. '),' → logprob: -17.625160217285156
    10. ')
' → logprob: -18.250160217285156

Token 196: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04204661771655083
    2. 'ans' → logprob: -3.667046546936035
    3. 'for' → logprob: -4.417046546936035
    4. 'sorted' → logprob: -6.667046546936035
    5. 'list' → logprob: -7.042046546936035
    6. 'B' → logprob: -7.417046546936035
    7. 'assert' → logprob: -8.417046546936035
    8. '[' → logprob: -9.292046546936035
    9. 'answer' → logprob: -9.417046546936035
    10. 'def' → logprob: -9.542046546936035

Token 197: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6407383680343628
    2. '(*' → logprob: -0.7657383680343628
    3. '('' → logprob: -5.890738487243652
    4. '(list' → logprob: -6.015738487243652
    5. '(
' → logprob: -7.265738487243652
    6. '(max' → logprob: -7.765738487243652
    7. '(*)' → logprob: -8.015738487243652
    8. '(ans' → logprob: -8.015738487243652
    9. '(*(' → logprob: -8.640738487243652
    10. '((' → logprob: -8.765738487243652

Token 198: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.002385876141488552
    2. '_ans' → logprob: -6.252386093139648
    3. '_an' → logprob: -8.002386093139648
    4. 'an' → logprob: -9.127386093139648
    5. ' ans' → logprob: -12.252386093139648
    6. '(ans' → logprob: -12.752386093139648
    7. '	ans' → logprob: -13.252386093139648
    8. '_b' → logprob: -14.002386093139648
    9. 'a' → logprob: -15.002386093139648
    10. 'anst' → logprob: -15.252386093139648

Token 199: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -13.25000286102295
    3. '))' → logprob: -14.37500286102295
    4. ')
' → logprob: -15.75000286102295
    5. ',' → logprob: -15.87500286102295
    6. ')#' → logprob: -16.000003814697266
    7. ')`' → logprob: -16.375003814697266
    8. ',)' → logprob: -17.000003814697266
    9. '())' → logprob: -17.750003814697266
    10. '),' → logprob: -18.125003814697266

Token 200: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' hope' (ID: 5498)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.2491406500339508
    2. 'that' → logprob: -1.7491406202316284
    3. ' this' → logprob: -3.374140739440918
    4. 'it' → logprob: -4.749140739440918
    5. ' that' → logprob: -5.999140739440918
    6. ' it' → logprob: -7.999140739440918
    7. 'that's' → logprob: -7.999140739440918
    8. 'the' → logprob: -8.624140739440918
    9. 'you' → logprob: -9.499140739440918
    10. '_that' → logprob: -9.874140739440918

Token 203: ' works' (ID: 5882)
  Prédit: 'works'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'works' → logprob: -0.03623708337545395
    2. ' works' → logprob: -3.9112370014190674
    3. 'is' → logprob: -4.4112372398376465
    4. '<|end|>' → logprob: -6.7862372398376465
    5. 'does' → logprob: -7.6612372398376465
    6. 'helps' → logprob: -7.9112372398376465
    7. 'worked' → logprob: -8.036236763000488
    8. ' is' → logprob: -8.161236763000488
    9. 'was' → logprob: -8.911236763000488
    10. 'will' → logprob: -9.411236763000488

Token 204: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' some' (ID: 1236)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: ' ideas' (ID: 7865)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1048214435577393
    2. 'more' → logprob: -2.1048214435577393
    3. 'final' → logprob: -2.6048214435577393
    4. ' final' → logprob: -2.6048214435577393
    5. ' more' → logprob: -2.7298214435577393
    6. ' comments' → logprob: -2.7298214435577393
    7. ' extra' → logprob: -3.2298214435577393
    8. ' additional' → logprob: -3.6048214435577393
    9. 'comments' → logprob: -3.8548214435577393
    10. 'additional' → logprob: -3.9798214435577393

Token 208: ' for' (ID: 395)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02399144321680069
    2. '<|end|>' → logprob: -3.898991346359253
    3. ' for' → logprob: -6.398991584777832
    4. 'for' → logprob: -7.148991584777832
    5. '
' → logprob: -7.898991584777832
    6. ':' → logprob: -8.898991584777832
    7. ' ' → logprob: -9.023991584777832
    8. '<|end|>' → logprob: -9.648991584777832
    9. '...' → logprob: -9.773991584777832
    10. '```' → logprob: -10.148991584777832

Token 209: ' future' (ID: 5277)
  Prédit: 'future'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'future' → logprob: -0.3597910702228546
    2. 'next' → logprob: -2.2347910404205322
    3. 'later' → logprob: -2.4847910404205322
    4. '#' → logprob: -3.3597910404205322
    5. 'f' → logprob: -3.8597910404205322
    6. 'the' → logprob: -3.9847910404205322
    7. 'im' → logprob: -4.359791278839111
    8. 'optimization' → logprob: -5.484791278839111
    9. ' future' → logprob: -5.859791278839111
    10. 'possible' → logprob: -5.859791278839111

Token 210: ' me' (ID: 668)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.027941862121224403
    2. ' code' → logprob: -4.652941703796387
    3. ' improvements' → logprob: -5.402941703796387
    4. '<|end|>' → logprob: -5.652941703796387
    5. ':' → logprob: -5.902941703796387
    6. ' #' → logprob: -6.277941703796387
    7. 'code' → logprob: -6.777941703796387
    8. '...' → logprob: -7.777941703796387
    9. '.' → logprob: -7.777941703796387
    10. 'im' → logprob: -8.027941703796387

Token 211: ':
' (ID: 734)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16170285642147064
    2. '<|end|>' → logprob: -1.9117028713226318
    3. '
' → logprob: -7.411702632904053
    4. '```' → logprob: -8.036703109741211
    5. '<|end|>' → logprob: -8.536703109741211
    6. ':' → logprob: -8.786703109741211
    7. '...' → logprob: -9.786703109741211
    8. ' #' → logprob: -10.161703109741211
    9. ' ' → logprob: -10.411703109741211
    10. ',' → logprob: -11.411703109741211

Token 212: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0009286141721531749
    2. ' #' → logprob: -7.7509284019470215
    3. '
' → logprob: -8.12592887878418
    4. 'def' → logprob: -10.12592887878418
    5. '#
' → logprob: -10.62592887878418
    6. '"""
' → logprob: -10.75092887878418
    7. 'print' → logprob: -11.25092887878418
    8. 'for' → logprob: -11.37592887878418
    9. '[' → logprob: -11.62592887878418
    10. ' ' → logprob: -11.62592887878418

Token 213: ' AB' (ID: 16520)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0010716310935094953
    2. ' #' → logprob: -7.501071453094482
    3. ' pass' → logprob: -9.12607192993164
    4. 'pass' → logprob: -9.25107192993164
    5. 'def' → logprob: -9.37607192993164
    6. 'for' → logprob: -10.37607192993164
    7. ' ' → logprob: -10.50107192993164
    8. '"""
' → logprob: -10.75107192993164
    9. '"""' → logprob: -10.87607192993164
    10. ' for' → logprob: -11.00107192993164

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22263464331626892
    2. '=' → logprob: -1.7226346731185913
    3. '#' → logprob: -4.722634792327881
    4. '.sort' → logprob: -5.597634792327881
    5. '_sorted' → logprob: -6.597634792327881
    6. '.' → logprob: -7.347634792327881
    7. ' #' → logprob: -7.347634792327881
    8. '.reverse' → logprob: -7.472634792327881
    9. '=[]' → logprob: -7.722634792327881
    10. ':' → logprob: -7.847634792327881

Token 215: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.941871166229248
    2. 'list' → logprob: -1.066871166229248
    3. 'sorted' → logprob: -1.941871166229248
    4. 'zip' → logprob: -2.316871166229248
    5. 'set' → logprob: -5.441871166229248
    6. '[]' → logprob: -6.191871166229248
    7. 'copy' → logprob: -6.191871166229248
    8. '[' → logprob: -6.316871166229248
    9. '[s' → logprob: -6.441871166229248
    10. ' [(' → logprob: -6.566871166229248

Token 216: 'LI' (ID: 14313)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.09859874099493027
    2. '(A' → logprob: -2.4735987186431885
    3. ']' → logprob: -5.723598957061768
    4. '(' → logprob: -6.223598957061768
    5. ' (' → logprob: -6.848598957061768
    6. '(x' → logprob: -7.223598957061768
    7. '(_' → logprob: -7.223598957061768
    8. '(s' → logprob: -7.723598957061768
    9. '(*' → logprob: -8.34859848022461
    10. '(_,' → logprob: -8.34859848022461

Token 217: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.034342121332883835
    2. '()' → logprob: -3.409342050552368
    3. '()]
' → logprob: -7.909342288970947
    4. ']' → logprob: -9.034341812133789
    5. '(),' → logprob: -9.534341812133789
    6. '())' → logprob: -9.534341812133789
    7. '()
' → logprob: -10.659341812133789
    8. '()],' → logprob: -10.784341812133789
    9. ']()' → logprob: -11.909341812133789
    10. '()[' → logprob: -13.034341812133789

Token 218: ' for' (ID: 395)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0719681978225708
    2. '()' → logprob: -2.6969680786132812
    3. ']' → logprob: -6.446968078613281
    4. '()]
' → logprob: -8.321968078613281
    5. '(),' → logprob: -9.821968078613281
    6. '()
' → logprob: -10.071968078613281
    7. '#' → logprob: -10.071968078613281
    8. '())' → logprob: -11.196968078613281
    9. 'for' → logprob: -11.321968078613281
    10. ']()' → logprob: -11.571968078613281

Token 219: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4736027717590332
    2. '_' → logprob: -1.0986027717590332
    3. ' range' → logprob: -3.223602771759033
    4. '_range' → logprob: -5.598602771759033
    5. '_]' → logprob: -9.473602294921875
    6. '_i' → logprob: -9.848602294921875
    7. 'i' → logprob: -9.848602294921875
    8. 'in' → logprob: -10.348602294921875
    9. '_in' → logprob: -10.473602294921875
    10. '(range' → logprob: -10.973602294921875

Token 220: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12309278547763824
    2. 'in' → logprob: -2.2480928897857666
    3. ' range' → logprob: -5.2480926513671875
    4. '_' → logprob: -5.6230926513671875
    5. ']' → logprob: -7.1230926513671875
    6. ' in' → logprob: -8.748092651367188
    7. '(range' → logprob: -9.373092651367188
    8. '_range' → logprob: -9.623092651367188
    9. ' ' → logprob: -10.248092651367188
    10. '...' → logprob: -10.498092651367188

Token 221: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020559873431921005
    2. ' range' → logprob: -3.895559787750244
    3. '_' → logprob: -12.270560264587402
    4. ']' → logprob: -12.770560264587402
    5. '[' → logprob: -13.020560264587402
    6. '	range' → logprob: -13.145560264587402
    7. ' ' → logprob: -13.270560264587402
    8. '(range' → logprob: -13.645560264587402
    9. 'r' → logprob: -13.770560264587402
    10. '...' → logprob: -14.770560264587402

Token 222: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.008347546681761742
    2. '(' → logprob: -4.883347511291504
    3. '(n' → logprob: -7.758347511291504
    4. '()' → logprob: -9.008347511291504
    5. '(int' → logprob: -9.633347511291504
    6. '()]' → logprob: -9.758347511291504
    7. '(len' → logprob: -10.883347511291504
    8. '((' → logprob: -11.633347511291504
    9. '(T' → logprob: -12.008347511291504
    10. '(M' → logprob: -12.383347511291504

Token 223: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009507318027317524
    2. ')]' → logprob: -5.009507179260254
    3. '#' → logprob: -6.634507179260254
    4. '()]' → logprob: -6.759507179260254
    5. ']
' → logprob: -8.509507179260254
    6. ')' → logprob: -9.634507179260254
    7. ' ]' → logprob: -10.884507179260254
    8. ']

' → logprob: -11.759507179260254
    9. '])' → logprob: -11.759507179260254
    10. '`]' → logprob: -12.384507179260254

Token 224: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: ' A' (ID: 355)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.892184317111969
    2. ' =' → logprob: -1.0171842575073242
    3. '<|end|>' → logprob: -2.517184257507324
    4. '.sort' → logprob: -2.892184257507324
    5. ',' → logprob: -3.142184257507324
    6. '#' → logprob: -4.267184257507324
    7. 'B' → logprob: -4.642184257507324
    8. ')' → logprob: -4.892184257507324
    9. ' ' → logprob: -5.767184257507324
    10. '.' → logprob: -5.892184257507324

Token 227: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.09602310508489609
    2. ' B' → logprob: -2.4710230827331543
    3. '#' → logprob: -4.971023082733154
    4. ' #' → logprob: -9.846023559570312
    5. '_' → logprob: -10.971023559570312
    6. '_B' → logprob: -11.346023559570312
    7. '   ' → logprob: -11.596023559570312
    8. ' ' → logprob: -11.596023559570312
    9. 'print' → logprob: -12.471023559570312
    10. ' =' → logprob: -12.846023559570312

Token 228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008668106980621815
    2. ' =' → logprob: -4.758667945861816
    3. ',' → logprob: -10.133667945861816
    4. '#' → logprob: -11.758667945861816
    5. ')' → logprob: -13.633667945861816
    6. '=
' → logprob: -13.758667945861816
    7. '_=' → logprob: -14.008667945861816
    8. '=

' → logprob: -14.258667945861816
    9. ')=' → logprob: -14.508667945861816
    10. '=list' → logprob: -15.133667945861816

Token 229: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.07581067830324173
    2. ' zip' → logprob: -2.700810670852661
    3. 'map' → logprob: -5.20081090927124
    4. ' map' → logprob: -8.575810432434082
    5. '[' → logprob: -9.200810432434082
    6. 'list' → logprob: -10.700810432434082
    7. '[],' → logprob: -11.200810432434082
    8. '(zip' → logprob: -11.575810432434082
    9. '[]' → logprob: -13.325810432434082
    10. ' ' → logprob: -13.450810432434082

Token 230: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.2851935029029846
    2. '#' → logprob: -2.03519344329834
    3. '=' → logprob: -2.53519344329834
    4. '(*)' → logprob: -3.91019344329834
    5. '*' → logprob: -4.28519344329834
    6. '=*' → logprob: -6.41019344329834
    7. 'for' → logprob: -7.53519344329834
    8. ' =' → logprob: -7.66019344329834
    9. '(' → logprob: -8.03519344329834
    10. '_' → logprob: -8.16019344329834

Token 231: 'AB' (ID: 2912)
  Prédit: 'AB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.0007706748438067734
    2. '[' → logprob: -7.625770568847656
    3. '[(' → logprob: -8.750770568847656
    4. 'zip' → logprob: -9.875770568847656
    5. '(' → logprob: -10.500770568847656
    6. '_AB' → logprob: -10.875770568847656
    7. '([' → logprob: -12.125770568847656
    8. '[[' → logprob: -12.375770568847656
    9. ')' → logprob: -12.875770568847656
    10. ' AB' → logprob: -13.250770568847656

Token 232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06000052019953728
    2. '<|end|>' → logprob: -2.935000419616699
    3. '
' → logprob: -5.685000419616699
    4. '#' → logprob: -7.310000419616699
    5. '\n' → logprob: -7.685000419616699
    6. '<|end|>' → logprob: -8.8100004196167
    7. '```' → logprob: -8.9350004196167
    8. '()' → logprob: -9.3100004196167
    9. '")' → logprob: -10.0600004196167
    10. '())' → logprob: -10.4350004196167

Token 233: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: ' Ap' (ID: 6537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06989185512065887
    2. '=' → logprob: -2.944891929626465
    3. ' =' → logprob: -4.819891929626465
    4. '#' → logprob: -6.069891929626465
    5. 'print' → logprob: -6.569891929626465
    6. ',' → logprob: -7.194891929626465
    7. 'sorted' → logprob: -7.444891929626465
    8. 'p' → logprob: -7.694891929626465
    9. 'sort' → logprob: -8.194891929626465
    10. '#print' → logprob: -8.444891929626465

Token 236: ' np' (ID: 5374)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.024928836151957512
    2. 'list' → logprob: -3.7749288082122803
    3. '[' → logprob: -6.899929046630859
    4. '[A' → logprob: -8.89992904663086
    5. '[list' → logprob: -9.64992904663086
    6. '[s' → logprob: -9.77492904663086
    7. 'A' → logprob: -9.89992904663086
    8. '[p' → logprob: -10.02492904663086
    9. '[_' → logprob: -10.14992904663086
    10. '(sorted' → logprob: -10.64992904663086

Token 237: '.array' (ID: 14557)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.033689502626657486
    2. 'array' → logprob: -3.658689498901367
    3. 'arg' → logprob: -5.533689498901367
    4. '.args' → logprob: -6.408689498901367
    5. '.argmax' → logprob: -7.908689498901367
    6. 'sort' → logprob: -8.283689498901367
    7. 'ar' → logprob: -8.283689498901367
    8. '_args' → logprob: -8.408689498901367
    9. '.array' → logprob: -8.658689498901367
    10. 'percent' → logprob: -9.658689498901367

Token 238: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0595446340739727
    2. '(' → logprob: -3.184544563293457
    3. '([' → logprob: -5.309544563293457
    4. '#' → logprob: -5.309544563293457
    5. '((' → logprob: -6.434544563293457
    6. '(s' → logprob: -6.809544563293457
    7. '(B' → logprob: -6.934544563293457
    8. '([]' → logprob: -7.184544563293457
    9. ')' → logprob: -7.934544563293457
    10. '(np' → logprob: -8.184544563293457

Token 239: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007007097825407982
    2. ')
' → logprob: -5.257007122039795
    3. ')#' → logprob: -7.132007122039795
    4. '#' → logprob: -7.382007122039795
    5. '())' → logprob: -8.757006645202637
    6. ').' → logprob: -10.132006645202637
    7. '),' → logprob: -10.382006645202637
    8. '))' → logprob: -10.632006645202637
    9. '')' → logprob: -11.132006645202637
    10. ')

' → logprob: -11.882006645202637

Token 240: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' C' (ID: 363)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1364372968673706
    2. '=' → logprob: -2.51143741607666
    3. 'p' → logprob: -3.38643741607666
    4. '#' → logprob: -4.51143741607666
    5. ',' → logprob: -8.13643741607666
    6. '=np' → logprob: -8.63643741607666
    7. '=[]' → logprob: -9.01143741607666
    8. '_p' → logprob: -9.01143741607666
    9. '<|end|>' → logprob: -9.01143741607666
    10. ' ' → logprob: -9.38643741607666

Token 243: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.28462058305740356
    2. 'Ap' → logprob: -2.284620523452759
    3. 'A' → logprob: -2.534620523452759
    4. '[' → logprob: -4.034620761871338
    5. '[]' → logprob: -4.534620761871338
    6. 'sorted' → logprob: -4.909620761871338
    7. 'copy' → logprob: -5.034620761871338
    8. '(A' → logprob: -5.409620761871338
    9. 'list' → logprob: -5.534620761871338
    10. 'B' → logprob: -5.909620761871338

Token 244: '.zeros' (ID: 29146)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.14440707862377167
    2. '.array' → logprob: -2.144407033920288
    3. '.zeros' → logprob: -4.644407272338867
    4. 'args' → logprob: -5.644407272338867
    5. 'abs' → logprob: -6.144407272338867
    6. 'empty' → logprob: -8.269407272338867
    7. '.empty' → logprob: -8.394407272338867
    8. '.abs' → logprob: -8.394407272338867
    9. 'zeros' → logprob: -8.769407272338867
    10. '_array' → logprob: -9.019407272338867

Token 245: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0833480954170227
    2. '((' → logprob: -2.833348035812378
    3. '(' → logprob: -3.958348035812378
    4. '(len' → logprob: -6.958348274230957
    5. '_like' → logprob: -7.208348274230957
    6. '(n' → logprob: -9.083348274230957
    7. '(shape' → logprob: -9.333348274230957
    8. '()' → logprob: -10.083348274230957
    9. '(A' → logprob: -10.708348274230957
    10. '(s' → logprob: -11.083348274230957

Token 246: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5355754494667053
    2. ',' → logprob: -0.9105754494667053
    3. ')
' → logprob: -4.6605753898620605
    4. ',d' → logprob: -6.1605753898620605
    5. ',)' → logprob: -7.6605753898620605
    6. ')d' → logprob: -9.535575866699219
    7. ',int' → logprob: -10.285575866699219
    8. ')#' → logprob: -10.535575866699219
    9. ')

' → logprob: -10.660575866699219
    10. 'dtype' → logprob: -10.660575866699219

Token 247: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003810287918895483
    2. '10' → logprob: -5.878810405731201
    3. '2' → logprob: -7.503810405731201
    4. '5' → logprob: -8.628809928894043
    5. 'N' → logprob: -9.128809928894043
    6. '100' → logprob: -9.503809928894043
    7. ' ' → logprob: -9.753809928894043
    8. '3' → logprob: -11.753809928894043
    9. 'len' → logprob: -12.128809928894043
    10. '(' → logprob: -12.378809928894043

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036326120607554913
    2. '10' → logprob: -6.003632545471191
    3. '2' → logprob: -7.253632545471191
    4. '5' → logprob: -8.003632545471191
    5. '100' → logprob: -10.003632545471191
    6. ' ' → logprob: -10.753632545471191
    7. 'N' → logprob: -10.878632545471191
    8. '3' → logprob: -11.253632545471191
    9. '(' → logprob: -12.128632545471191
    10. '(N' → logprob: -13.003632545471191

Token 249: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010891478508710861
    2. ',' → logprob: -4.635891437530518
    3. ')
' → logprob: -7.635891437530518
    4. ',d' → logprob: -7.635891437530518
    5. ')#' → logprob: -9.760891914367676
    6. ')d' → logprob: -9.885891914367676
    7. ' )' → logprob: -11.510891914367676
    8. ',)' → logprob: -11.760891914367676
    9. 'dtype' → logprob: -11.760891914367676
    10. '#' → logprob: -11.885891914367676

Token 250: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: ' why' (ID: 4436)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2694886326789856
    2. '<|end|>' → logprob: -1.5194885730743408
    3. '#' → logprob: -4.26948881149292
    4. '
' → logprob: -6.51948881149292
    5. '[' → logprob: -7.76948881149292
    6. '```' → logprob: -8.019488334655762
    7. ' ' → logprob: -8.894488334655762
    8. ')#' → logprob: -8.894488334655762
    9. ']' → logprob: -9.019488334655762
    10. '<|end|>' → logprob: -9.269488334655762

Token 252: ' plus' (ID: 2932)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30304452776908875
    2. '#' → logprob: -1.8030445575714111
    3. '=' → logprob: -2.928044557571411
    4. ')' → logprob: -3.303044557571411
    5. '0' → logprob: -6.553044319152832
    6. ',' → logprob: -6.928044319152832
    7. '```' → logprob: -7.178044319152832
    8. ' =' → logprob: -7.428044319152832
    9. ')
' → logprob: -7.428044319152832
    10. '
' → logprob: -8.303044319152832

Token 254: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07784873247146606
    2. '<|end|>' → logprob: -2.8278486728668213
    3. '#' → logprob: -4.3278489112854
    4. '),' → logprob: -7.7028489112854
    5. ']' → logprob: -8.077848434448242
    6. ',' → logprob: -8.202848434448242
    7. '
' → logprob: -8.452848434448242
    8. '[' → logprob: -8.577848434448242
    9. '```' → logprob: -8.702848434448242
    10. ')
' → logprob: -8.827848434448242

Token 255: ' old' (ID: 2890)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0006465525948442519
    2. '
' → logprob: -9.125646591186523
    3. ' #' → logprob: -9.375646591186523
    4. ')' → logprob: -9.500646591186523
    5. '<|end|>' → logprob: -9.625646591186523
    6. '#print' → logprob: -10.000646591186523
    7. '#index' → logprob: -10.250646591186523
    8. ' ' → logprob: -10.750646591186523
    9. 'C' → logprob: -10.750646591186523
    10. 'N' → logprob: -11.000646591186523

Token 256: ' me' (ID: 668)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1412302702665329
    2. '#' → logprob: -2.766230344772339
    3. ' code' → logprob: -4.01623010635376
    4. 'code' → logprob: -4.39123010635376
    5. ' one' → logprob: -4.76623010635376
    6. 'one' → logprob: -4.89123010635376
    7. '?' → logprob: -5.01623010635376
    8. 'comment' → logprob: -5.39123010635376
    9. 's' → logprob: -6.39123010635376
    10. 'range' → logprob: -7.26623010635376

Token 257: '?
' (ID: 3901)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48622334003448486
    2. '#' → logprob: -1.1112233400344849
    3. '<|end|>' → logprob: -3.6112232208251953
    4. ',' → logprob: -4.986223220825195
    5. ')
' → logprob: -5.111223220825195
    6. ']' → logprob: -5.986223220825195
    7. '
' → logprob: -6.236223220825195
    8. '[' → logprob: -6.361223220825195
    9. '=' → logprob: -6.486223220825195
    10. 'for' → logprob: -6.861223220825195

Token 258: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: ' index' (ID: 3472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: ' �' (ID: 167340)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14875411987304688
    2. '=' → logprob: -2.273754119873047
    3. '_map' → logprob: -4.398754119873047
    4. 's' → logprob: -4.523754119873047
    5. 'es' → logprob: -5.023754119873047
    6. '_' → logprob: -7.023754119873047
    7. '_list' → logprob: -7.398754119873047
    8. '_mapping' → logprob: -7.898754119873047
    9. '_to' → logprob: -8.023754119873047
    10. '_array' → logprob: -8.023754119873047

Token 261: '�' (ID: 228)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014745581895112991
    2. 's' → logprob: -4.889745712280273
    3. ' =' → logprob: -5.014745712280273
    4. '+=' → logprob: -8.264745712280273
    5. '=[]' → logprob: -9.764745712280273
    6. '_' → logprob: -10.514745712280273
    7. 'es' → logprob: -10.889745712280273
    8. '_=' → logprob: -11.014745712280273
    9. '#' → logprob: -11.889745712280273
    10. ')' → logprob: -11.889745712280273

Token 262: ' 要' (ID: 156262)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028625354170799255
    2. ' =' → logprob: -5.877862453460693
    3. 's' → logprob: -11.127862930297852
    4. '+=' → logprob: -11.502862930297852
    5. ')' → logprob: -12.002862930297852
    6. '=[]' → logprob: -12.502862930297852
    7. ',' → logprob: -12.502862930297852
    8. '=
' → logprob: -12.502862930297852
    9. '_' → logprob: -12.752862930297852
    10. '_=' → logprob: -13.002862930297852

Token 263: '素' (ID: 31399)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008160737343132496
    2. ' =' → logprob: -5.008160591125488
    3. '+=' → logprob: -7.758160591125488
    4. '=[]' → logprob: -8.633160591125488
    5. 'import' → logprob: -8.758160591125488
    6. 's' → logprob: -9.008160591125488
    7. '＝' → logprob: -9.258160591125488
    8. 'for' → logprob: -9.883160591125488
    9. ',' → logprob: -10.008160591125488
    10. '#' → logprob: -10.008160591125488

Token 264: 'の' (ID: 3385)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004036725964397192
    2. ' =' → logprob: -5.629036903381348
    3. '＝' → logprob: -9.379036903381348
    4. 's' → logprob: -9.504036903381348
    5. 'error' → logprob: -10.004036903381348
    6. '+=' → logprob: -10.379036903381348
    7. '_=' → logprob: -10.379036903381348
    8. 'es' → logprob: -10.629036903381348
    9. ',' → logprob: -10.629036903381348
    10. '=[]' → logprob: -11.129036903381348

Token 265: 'index' (ID: 2257)
  Prédit: '位置'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '位置' → logprob: -0.8150285482406616
    2. '値' → logprob: -1.8150285482406616
    3. 'count' → logprob: -2.565028667449951
    4. '置' → logprob: -2.940028667449951
    5. 'value' → logprob: -3.065028667449951
    6. 'position' → logprob: -3.815028667449951
    7. '数' → logprob: -4.065028667449951
    8. 's' → logprob: -4.065028667449951
    9. '補' → logprob: -4.940028667449951
    10. 'mapping' → logprob: -5.065028667449951

Token 266: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 267: '#' (ID: 2)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0921127200126648
    2. ' =' → logprob: -3.2171127796173096
    3. 'error' → logprob: -3.8421127796173096
    4. 's' → logprob: -5.3421125411987305
    5. '<|end|>' → logprob: -5.3421125411987305
    6. 'es' → logprob: -5.7171125411987305
    7. '_error' → logprob: -5.9671125411987305
    8. 'ing' → logprob: -7.0921125411987305
    9. '=[]' → logprob: -7.2171125411987305
    10. '_=' → logprob: -7.3421125411987305

Token 268: ' attempt' (ID: 8704)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6565600037574768
    2. '[' → logprob: -2.031559944152832
    3. ' =' → logprob: -2.156559944152832
    4. '=' → logprob: -2.406559944152832
    5. 'es' → logprob: -3.656559944152832
    6. '#' → logprob: -3.906559944152832
    7. '<|end|>' → logprob: -3.906559944152832
    8. '[]' → logprob: -4.031559944152832
    9. '_' → logprob: -4.281559944152832
    10. ' ' → logprob: -4.906559944152832

Token 269: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25608253479003906
    2. ' =' → logprob: -1.631082534790039
    3. 's' → logprob: -4.256082534790039
    4. '_' → logprob: -6.131082534790039
    5. '=[]' → logprob: -6.131082534790039
    6. '[' → logprob: -6.256082534790039
    7. ',' → logprob: -7.256082534790039
    8. '<|end|>' → logprob: -7.381082534790039
    9. ')' → logprob: -7.506082534790039
    10. '#' → logprob: -7.631082534790039

Token 270: ' remake' (ID: 92033)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.5513023138046265
    2. 'sort' → logprob: -1.9263023138046265
    3. 'count' → logprob: -3.176302433013916
    4. 'def' → logprob: -3.426302433013916
    5. 'import' → logprob: -3.551302433013916
    6. '#' → logprob: -3.676302433013916
    7. 'bis' → logprob: -3.676302433013916
    8. 'index' → logprob: -3.926302433013916
    9. 'print' → logprob: -4.676302433013916
    10. 'get' → logprob: -4.676302433013916

Token 271: ' the' (ID: 290)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1725934743881226
    2. ' =' → logprob: -1.4225934743881226
    3. 's' → logprob: -2.297593593597412
    4. 'def' → logprob: -2.422593593597412
    5. '_' → logprob: -2.547593593597412
    6. '#' → logprob: -2.922593593597412
    7. '[' → logprob: -4.047593593597412
    8. 'for' → logprob: -4.422593593597412
    9. '_indices' → logprob: -4.547593593597412
    10. 'index' → logprob: -5.047593593597412

Token 272: ' ans' (ID: 3345)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.3425401747226715
    2. 'code' → logprob: -2.4675402641296387
    3. 'def' → logprob: -3.0925402641296387
    4. '#' → logprob: -3.4675402641296387
    5. 'for' → logprob: -3.4675402641296387
    6. 'sorted' → logprob: -4.092540264129639
    7. '_index' → logprob: -4.592540264129639
    8. 'element' → logprob: -4.842540264129639
    9. 'rest' → logprob: -4.967540264129639
    10. '_code' → logprob: -5.592540264129639

Token 273: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3734228014945984
    2. ' =' → logprob: -1.8734228610992432
    3. 's' → logprob: -2.998422861099243
    4. '_index' → logprob: -3.748422861099243
    5. '_indices' → logprob: -3.748422861099243
    6. '_' → logprob: -4.623422622680664
    7. '#' → logprob: -4.873422622680664
    8. 'for' → logprob: -4.998422622680664
    9. 'index' → logprob: -4.998422622680664
    10. '_idx' → logprob: -5.498422622680664

Token 274: ' a' (ID: 261)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.199554204940796
    2. '[' → logprob: -1.324554204940796
    3. 'for' → logprob: -2.574554204940796
    4. 'list' → logprob: -2.824554204940796
    5. 'range' → logprob: -2.824554204940796
    6. 'reverse' → logprob: -3.324554204940796
    7. 'sorted' → logprob: -3.449554204940796
    8. 'a' → logprob: -3.824554204940796
    9. 'original' → logprob: -4.199554443359375
    10. 'A' → logprob: -4.324554443359375

Token 275: ' dumb' (ID: 52127)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.83652663230896
    2. 'for' → logprob: -1.21152663230896
    3. 'single' → logprob: -2.58652663230896
    4. 'sorted' → logprob: -2.58652663230896
    5. '#' → logprob: -4.211526870727539
    6. 'more' → logprob: -4.336526870727539
    7. 'loop' → logprob: -4.711526870727539
    8. '[' → logprob: -4.711526870727539
    9. 'different' → logprob: -4.711526870727539
    10. 'def' → logprob: -5.086526870727539

Token 276: ' way' (ID: 2006)
  Prédit: ' way'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' way' → logprob: -0.6878736615180969
    2. 'for' → logprob: -0.9378736615180969
    3. 'way' → logprob: -3.062873601913452
    4. '方式' → logprob: -4.312873840332031
    5. 'fashion' → logprob: -4.687873840332031
    6. '#' → logprob: -4.937873840332031
    7. ' manner' → logprob: -4.937873840332031
    8. ' fashion' → logprob: -5.062873840332031
    9. ' for' → logprob: -5.187873840332031
    10. '_way' → logprob: -5.312873840332031

Token 277: '
' (ID: 198)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.0236576795578003
    2. 'ans' → logprob: -1.0236576795578003
    3. 'for' → logprob: -1.8986576795578003
    4. 'idx' → logprob: -3.02365779876709
    5. '#' → logprob: -3.52365779876709
    6. 'index' → logprob: -4.14865779876709
    7. 'res' → logprob: -5.02365779876709
    8. '_ans' → logprob: -5.02365779876709
    9. 'result' → logprob: -5.52365779876709
    10. 're' → logprob: -6.14865779876709

Token 278: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7170681953430176
    2. 'C' → logprob: -1.0920681953430176
    3. 'idx' → logprob: -3.0920681953430176
    4. 'for' → logprob: -3.4670681953430176
    5. 'index' → logprob: -3.7170681953430176
    6. 'res' → logprob: -3.9670681953430176
    7. 're' → logprob: -4.842068195343018
    8. 'result' → logprob: -4.967068195343018
    9. 'new' → logprob: -5.592068195343018
    10. 'A' → logprob: -5.717068195343018

Token 279: ' ans' (ID: 3345)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6638679504394531
    2. 'ans' → logprob: -1.2888679504394531
    3. 'for' → logprob: -2.913867950439453
    4. 'idx' → logprob: -3.288867950439453
    5. 'index' → logprob: -3.788867950439453
    6. 'res' → logprob: -3.788867950439453
    7. 're' → logprob: -3.913867950439453
    8. '#' → logprob: -4.788867950439453
    9. 'result' → logprob: -5.288867950439453
    10. 'tmp' → logprob: -5.288867950439453

Token 280: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14371800422668457
    2. ' =' → logprob: -2.0187180042266846
    3. '_' → logprob: -7.5187177658081055
    4. '_=' → logprob: -8.268717765808105
    5. '=[]' → logprob: -9.768717765808105
    6. 's' → logprob: -10.018717765808105
    7. '_idx' → logprob: -10.643717765808105
    8. '2' → logprob: -11.393717765808105
    9. '_new' → logprob: -11.393717765808105
    10. '=[' → logprob: -11.518717765808105

Token 281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133451044559479
    2. ' =' → logprob: -1.3133450746536255
    3. '=[]' → logprob: -9.938344955444336
    4. '=[' → logprob: -11.438344955444336
    5. '=[]
' → logprob: -12.313344955444336
    6. ' ' → logprob: -12.438344955444336
    7. 's' → logprob: -12.688344955444336
    8. '＝' → logprob: -13.063344955444336
    9. ' =[' → logprob: -13.188344955444336
    10. '=list' → logprob: -13.438344955444336

Token 282: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1433129757642746
    2. '[]
' → logprob: -3.518312931060791
    3. '[list' → logprob: -3.643312931060791
    4. '[' → logprob: -3.768312931060791
    5. '[B' → logprob: -3.768312931060791
    6. '[s' → logprob: -3.893312931060791
    7. 'list' → logprob: -5.143312931060791
    8. '[_' → logprob: -6.518312931060791
    9. '[A' → logprob: -7.018312931060791
    10. '[np' → logprob: -7.268312931060791

Token 283: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019281210377812386
    2. '#' → logprob: -4.519281387329102
    3. 'idx' → logprob: -5.394281387329102
    4. 'i' → logprob: -6.769281387329102
    5. '#index' → logprob: -6.769281387329102
    6. 'index' → logprob: -8.144281387329102
    7. 'prev' → logprob: -8.144281387329102
    8. '_idx' → logprob: -8.769281387329102
    9. ' for' → logprob: -9.144281387329102
    10. '_for' → logprob: -9.519281387329102

Token 284: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04025815427303314
    2. '#' → logprob: -3.4152581691741943
    3. 'idx' → logprob: -5.290257930755615
    4. 'i' → logprob: -7.665257930755615
    5. 'prev' → logprob: -7.915257930755615
    6. 'index' → logprob: -8.540258407592773
    7. '#index' → logprob: -8.915258407592773
    8. 'last' → logprob: -9.915258407592773
    9. 'current' → logprob: -10.290258407592773
    10. 'j' → logprob: -10.290258407592773

Token 285: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.43763288855552673
    2. 'i' → logprob: -1.9376329183578491
    3. '_i' → logprob: -2.8126327991485596
    4. '_an' → logprob: -3.0626327991485596
    5. '_a' → logprob: -3.1876327991485596
    6. '_' → logprob: -3.6876327991485596
    7. '_,' → logprob: -3.8126327991485596
    8. 'an' → logprob: -5.687633037567139
    9. 'v' → logprob: -6.062633037567139
    10. '_ai' → logprob: -6.187633037567139

Token 286: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.526438295841217
    2. 'in' → logprob: -0.901438295841217
    3. ',' → logprob: -5.776438236236572
    4. ' ' → logprob: -9.15143871307373
    5. '_' → logprob: -11.27643871307373
    6. 'n' → logprob: -11.27643871307373
    7. ' ,' → logprob: -11.65143871307373
    8. '_in' → logprob: -11.77643871307373
    9. 'i' → logprob: -11.90143871307373
    10. 'range' → logprob: -12.27643871307373

Token 287: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0018854460213333368
    2. 's' → logprob: -6.626885414123535
    3. ' range' → logprob: -8.751885414123535
    4. 'A' → logprob: -8.876885414123535
    5. 'ans' → logprob: -9.251885414123535
    6. '_range' → logprob: -9.876885414123535
    7. 'B' → logprob: -10.001885414123535
    8. '_s' → logprob: -11.126885414123535
    9. '_' → logprob: -11.376885414123535
    10. 'ran' → logprob: -11.376885414123535

Token 288: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0031563304364681244
    2. '(N' → logprob: -6.2531561851501465
    3. 'len' → logprob: -6.8781561851501465
    4. ' N' → logprob: -9.003156661987305
    5. '(len' → logprob: -10.503156661987305
    6. '   ' → logprob: -10.628156661987305
    7. '1' → logprob: -12.128156661987305
    8. '	N' → logprob: -12.378156661987305
    9. '(' → logprob: -12.503156661987305
    10. 'n' → logprob: -13.378156661987305

Token 289: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.348612517118454
    2. '):
' → logprob: -1.2236125469207764
    3. '):
' → logprob: -9.473612785339355
    4. ' ):' → logprob: -10.223612785339355
    5. '-' → logprob: -11.473612785339355
    6. ' ):
' → logprob: -11.723612785339355
    7. '#' → logprob: -11.973612785339355
    8. ':' → logprob: -12.348612785339355
    9. ')' → logprob: -12.348612785339355
    10. '):

' → logprob: -12.723612785339355

Token 290: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0006463141762651503
    2. '   ' → logprob: -8.375646591186523
    3. 'for' → logprob: -9.125646591186523
    4. ' #' → logprob: -9.500646591186523
    5. 'i' → logprob: -9.750646591186523
    6. 'ans' → logprob: -10.125646591186523
    7. 'print' → logprob: -10.125646591186523
    8. ' for' → logprob: -10.500646591186523
    9. '#index' → logprob: -11.000646591186523
    10. '<|end|>' → logprob: -11.500646591186523

Token 291: '    ' (ID: 257)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.001209518639370799
    2. ' #' → logprob: -7.376209735870361
    3. '   ' → logprob: -7.626209735870361
    4. 'ans' → logprob: -10.876209259033203
    5. 'for' → logprob: -11.126209259033203
    6. 'i' → logprob: -11.251209259033203
    7. ' for' → logprob: -11.501209259033203
    8. '#index' → logprob: -12.001209259033203
    9. '<|end|>' → logprob: -12.126209259033203
    10. 'idx' → logprob: -12.126209259033203

Token 292: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.33388209342956543
    2. 'for' → logprob: -1.9588820934295654
    3. '#' → logprob: -2.2088820934295654
    4. 'idx' → logprob: -3.9588820934295654
    5. 'a' → logprob: -6.2088823318481445
    6. 'i' → logprob: -6.2088823318481445
    7. '_ans' → logprob: -6.3338823318481445
    8. '   ' → logprob: -6.5838823318481445
    9. 'print' → logprob: -6.8338823318481445
    10. 'ai' → logprob: -7.0838823318481445

Token 293: '2' (ID: 17)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.19923336803913116
    2. '2' → logprob: -1.8242334127426147
    3. '   ' → logprob: -4.949233531951904
    4. '#' → logprob: -5.699233531951904
    5. ' =' → logprob: -6.449233531951904
    6. ' +=' → logprob: -6.949233531951904
    7. '.extend' → logprob: -7.199233531951904
    8. ',' → logprob: -7.449233531951904
    9. '=' → logprob: -7.449233531951904
    10. 'for' → logprob: -7.574233531951904

Token 294: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.540361225605011
    2. '.append' → logprob: -1.4153611660003662
    3. ' =' → logprob: -2.665361166000366
    4. '#' → logprob: -3.040361166000366
    5. ':' → logprob: -3.915361166000366
    6. '   ' → logprob: -4.665361404418945
    7. ',' → logprob: -5.040361404418945
    8. ' +=' → logprob: -5.415361404418945
    9. '+=' → logprob: -5.415361404418945
    10. ')' → logprob: -5.790361404418945

Token 295: '(A' (ID: 10706)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1856730878353119
    2. 'B' → logprob: -2.3106729984283447
    3. 's' → logprob: -2.8106729984283447
    4. '_ans' → logprob: -5.685673236846924
    5. '_B' → logprob: -6.810673236846924
    6. '(ans' → logprob: -7.060673236846924
    7. '_s' → logprob: -7.185673236846924
    8. 'A' → logprob: -7.185673236846924
    9. 'np' → logprob: -7.810673236846924
    10. '_an' → logprob: -7.935673236846924

Token 296: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.46215373277664185
    2. 'B' → logprob: -1.462153673171997
    3. '[i' → logprob: -2.712153673171997
    4. '[B' → logprob: -3.462153673171997
    5. '[' → logprob: -3.837153673171997
    6. 'index' → logprob: -5.212153911590576
    7. ')' → logprob: -5.712153911590576
    8. ' B' → logprob: -6.712153911590576
    9. '])' → logprob: -6.837153911590576
    10. '[s' → logprob: -7.087153911590576

Token 297: '(i' (ID: 3649)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.2932754456996918
    2. '(_' → logprob: -1.5432754755020142
    3. '(ans' → logprob: -3.9182753562927246
    4. '(an' → logprob: -4.043275356292725
    5. '(' → logprob: -6.293275356292725
    6. 's' → logprob: -8.043275833129883
    7. '_an' → logprob: -8.293275833129883
    8. '(a' → logprob: -8.418275833129883
    9. '(B' → logprob: -9.043275833129883
    10. '_s' → logprob: -9.043275833129883

Token 298: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.27299341559410095
    2. ')+' → logprob: -2.147993326187134
    3. ' +' → logprob: -3.147993326187134
    4. 'B' → logprob: -3.397993326187134
    5. '))' → logprob: -3.897993326187134
    6. ')' → logprob: -4.772993564605713
    7. '1' → logprob: -5.647993564605713
    8. 'A' → logprob: -6.022993564605713
    9. 's' → logprob: -6.147993564605713
    10. '))+' → logprob: -6.147993564605713

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023476807109545916
    2. ' ' → logprob: -8.375234603881836
    3. '+' → logprob: -13.750234603881836
    4. 'B' → logprob: -14.250234603881836
    5. '   ' → logprob: -14.500234603881836
    6. ')' → logprob: -14.500234603881836
    7. '  ' → logprob: -15.312734603881836
    8. '
' → logprob: -16.000234603881836
    9. 'i' → logprob: -16.312734603881836
    10. ' B' → logprob: -16.375234603881836

Token 300: ')+' (ID: 16161)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6036757230758667
    2. ')' → logprob: -0.8536757230758667
    3. ')+' → logprob: -3.6036758422851562
    4. '))+' → logprob: -9.478675842285156
    5. ')))' → logprob: -11.603675842285156
    6. ')
' → logprob: -11.978675842285156
    7. '+' → logprob: -11.978675842285156
    8. '))
' → logprob: -11.978675842285156
    9. ' )' → logprob: -12.103675842285156
    10. ' ))' → logprob: -12.478675842285156

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.380904672667384e-05
    2. ' ' → logprob: -10.375033378601074
    3. ')' → logprob: -13.500033378601074
    4. '+' → logprob: -14.250033378601074
    5. '   ' → logprob: -16.12503433227539
    6. ' )' → logprob: -17.12503433227539
    7. '```' → logprob: -17.25003433227539
    8. '１' → logprob: -17.50003433227539
    9. '  ' → logprob: -18.06253433227539
    10. ' +' → logprob: -18.18753433227539

Token 302: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5861724831629544e-05
    2. '#' → logprob: -10.750056266784668
    3. ')
' → logprob: -11.125056266784668
    4. '`)' → logprob: -11.750056266784668
    5. ')#' → logprob: -12.375056266784668
    6. '')' → logprob: -13.125056266784668
    7. ')`' → logprob: -13.625056266784668
    8. ' )' → logprob: -13.750056266784668
    9. '```' → logprob: -13.875056266784668
    10. '))' → logprob: -14.500056266784668

Token 303: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0027408043388277292
    2. '(ans' → logprob: -6.002740859985352
    3. '(' → logprob: -8.377740859985352
    4. '('' → logprob: -10.877740859985352
    5. '("' → logprob: -11.752740859985352
    6. 'ans' → logprob: -12.377740859985352
    7. '(*(' → logprob: -12.752740859985352
    8. '(*)' → logprob: -14.627740859985352
    9. '((*' → logprob: -15.377740859985352
    10. ' (*' → logprob: -15.627740859985352

Token 306: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.318681188422488e-05
    2. ' ans' → logprob: -11.50001335144043
    3. '(ans' → logprob: -12.75001335144043
    4. '	ans' → logprob: -17.37501335144043
    5. '_ans' → logprob: -19.62501335144043
    6. 'ANS' → logprob: -20.12501335144043
    7. 'answer' → logprob: -20.12501335144043
    8. 'Ans' → logprob: -20.25001335144043
    9. '#' → logprob: -20.87501335144043
    10. ')' → logprob: -21.00001335144043

Token 307: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5234783887863159
    2. ')' → logprob: -0.8984783887863159
    3. '#' → logprob: -8.523478507995605
    4. ')#' → logprob: -9.648478507995605
    5. '))' → logprob: -10.523478507995605
    6. '[' → logprob: -11.148478507995605
    7. ')`' → logprob: -11.773478507995605
    8. ')
' → logprob: -11.773478507995605
    9. '(' → logprob: -12.148478507995605
    10. ' )' → logprob: -12.273478507995605

Token 308: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -13.75000286102295
    3. ')#' → logprob: -14.25000286102295
    4. '#' → logprob: -14.62500286102295
    5. '`)' → logprob: -15.37500286102295
    6. '')' → logprob: -15.50000286102295
    7. '))' → logprob: -15.62500286102295
    8. ' )' → logprob: -15.75000286102295
    9. ')`' → logprob: -16.250003814697266
    10. '())' → logprob: -17.125003814697266

Token 309: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: ' Eh' (ID: 82508)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: ' the' (ID: 290)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: ' numpy' (ID: 19529)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4397358298301697
    2. ' end' → logprob: -2.1897358894348145
    3. 'end' → logprob: -2.4397358894348145
    4. ' code' → logprob: -3.3147358894348145
    5. ' rest' → logprob: -3.5647358894348145
    6. ' next' → logprob: -4.6897358894348145
    7. '```' → logprob: -4.8147358894348145
    8. ' ' → logprob: -5.0647358894348145
    9. ' #' → logprob: -5.0647358894348145
    10. ')' → logprob: -5.0647358894348145

Token 314: ' stuff' (ID: 9350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 315: ' isn't' (ID: 12471)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 316: ' really' (ID: 2715)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.287722110748291
    2. 'needed' → logprob: -1.287722110748291
    3. 'working' → logprob: -1.787722110748291
    4. 'help' → logprob: -2.287722110748291
    5. 'necessary' → logprob: -3.037722110748291
    6. 'finished' → logprob: -3.162722110748291
    7. 'really' → logprob: -3.787722110748291
    8. 'that' → logprob: -4.412722110748291
    9. 'doing' → logprob: -4.537722110748291
    10. 'done' → logprob: -5.037722110748291

Token 317: ' needed' (ID: 6118)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.7246050834655762
    2. 'necessary' → logprob: -0.8496050834655762
    3. 'help' → logprob: -2.724605083465576
    4. 'used' → logprob: -4.224605083465576
    5. 'working' → logprob: -5.849605083465576
    6. 'use' → logprob: -6.724605083465576
    7. 'doing' → logprob: -7.474605083465576
    8. 'worth' → logprob: -7.599605083465576
    9. ' necessary' → logprob: -7.724605083465576
    10. ' needed' → logprob: -7.724605083465576

Token 318: ' here' (ID: 2105)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 319: '?' (ID: 30)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 320: ' Oh' (ID: 12458)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 321: ' well' (ID: 1775)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 320
Tokens correctement prédits (1ère position, stricte): 92
Tokens correctement prédits (1ère position, avec adaptation): 95
Tokens correctement prédits (top 10): 190
Précision stricte (1ère position): 28.75%
Précision adaptée (1ère position): 29.69%
Précision (top 10): 59.38%
================================================================================
